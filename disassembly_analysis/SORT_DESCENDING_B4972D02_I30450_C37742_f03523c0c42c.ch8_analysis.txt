
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B4972D02_I30450_C37742_f03523c0c42c.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 4972
Instance: 30450
Direction: descending
Final Array: [177, 161, 145, 129, 113, 97, 81, 5]
Operations: R:0 W:7 C:265 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 106
Sort Array References:
  $320: LD I, $4DC ; Load 4DC into I
  $338: LD I, $3B2 ; Load 3B2 into I
  $33E: LD I, $94F ; Load 94F into I
  $340: LD I, $CED ; Load CED into I
  $34A: LD I, $50E ; Load 50E into I
  $350: LD I, $0B9 ; Load 0B9 into I
  $356: LD I, $B00 ; Load B00 into I
  $35E: LD I, $4ED ; Load 4ED into I
  $38A: LD I, $71C ; Load 71C into I
  $3C8: LD I, $28A ; Load 28A into I
  $3CC: LD I, $CDA ; Load CDA into I
  $3E8: LD I, $565 ; Load 565 into I
  $3EA: LD I, $453 ; Load 453 into I
  $3FC: LD I, $EE8 ; Load EE8 into I
  $408: LD I, $1F7 ; Load 1F7 into I
  $416: LD I, $A4B ; Load A4B into I
  $49A: LD I, $D18 ; Load D18 into I
  $4A6: LD I, $5D1 ; Load 5D1 into I
  $4AC: LD I, $FE1 ; Load FE1 into I
  $4B2: LD I, $732 ; Load 732 into I
  $4C6: LD I, $D8B ; Load D8B into I
  $4F8: LD I, $FDD ; Load FDD into I
  $50C: LD I, $181 ; Load 181 into I
  $51A: LD I, $7BD ; Load 7BD into I
  $53A: LD I, $11F ; Load 11F into I
  $564: LD I, $3BC ; Load 3BC into I
  $574: LD I, $BCD ; Load BCD into I
  $58E: LD I, $F43 ; Load F43 into I
  $5AA: LD I, $347 ; Load 347 into I
  $5C0: LD I, $814 ; Load 814 into I
  $5EC: LD I, $7B4 ; Load 7B4 into I
  $612: LD I, $EB8 ; Load EB8 into I
  $64C: LD I, $CA2 ; Load CA2 into I
  $662: LD I, $5BE ; Load 5BE into I
  $66E: LD I, $E7A ; Load E7A into I
  $672: LD I, $6A9 ; Load 6A9 into I
  $676: LD I, $F01 ; Load F01 into I
  $6B2: LD I, $FBA ; Load FBA into I
  $6C8: LD I, $7B5 ; Load 7B5 into I
  $6D2: LD I, $B91 ; Load B91 into I
  $72A: LD I, $A2C ; Load A2C into I
  $746: LD I, $38E ; Load 38E into I
  $770: LD I, $200 ; Load 200 into I
  $778: LD I, $C32 ; Load C32 into I
  $7CE: LD I, $935 ; Load 935 into I
  $7DA: LD I, $ED6 ; Load ED6 into I
  $7EA: LD I, $C06 ; Load C06 into I
  $802: LD I, $FAB ; Load FAB into I
  $818: LD I, $36F ; Load 36F into I
  $836: LD I, $AD0 ; Load AD0 into I
  $85E: LD I, $2B5 ; Load 2B5 into I
  $868: LD I, $F77 ; Load F77 into I
  $87A: LD I, $F66 ; Load F66 into I
  $912: LD I, $25F ; Load 25F into I
  $920: LD I, $EFA ; Load EFA into I
  $954: LD I, $C17 ; Load C17 into I
  $980: LD I, $FAD ; Load FAD into I
  $9C0: LD I, $949 ; Load 949 into I
  $9D6: LD I, $141 ; Load 141 into I
  $9E6: LD I, $6D6 ; Load 6D6 into I
  $A28: LD I, $87F ; Load 87F into I
  $A36: LD I, $296 ; Load 296 into I
  $A74: LD I, $0AB ; Load 0AB into I
  $A92: LD I, $34E ; Load 34E into I
  $AA2: LD I, $138 ; Load 138 into I
  $AA4: LD I, $FDD ; Load FDD into I
  $AF8: LD I, $3B2 ; Load 3B2 into I
  $B42: LD I, $AE9 ; Load AE9 into I
  $B46: LD I, $E4A ; Load E4A into I
  $B54: LD I, $D50 ; Load D50 into I
  $B80: LD I, $2F2 ; Load 2F2 into I
  $B9E: LD I, $963 ; Load 963 into I
  $BEA: LD I, $A31 ; Load A31 into I
  $C32: LD I, $8C9 ; Load 8C9 into I
  $C3E: LD I, $E57 ; Load E57 into I
  $C54: LD I, $440 ; Load 440 into I
  $C5A: LD I, $CE4 ; Load CE4 into I
  $CB6: LD I, $8F3 ; Load 8F3 into I
  $CFE: LD I, $2FE ; Load 2FE into I
  $D06: LD I, $513 ; Load 513 into I
  $D42: LD I, $E0E ; Load E0E into I
  $D5C: LD I, $B92 ; Load B92 into I
  $D8A: LD I, $569 ; Load 569 into I
  $D8C: LD I, $562 ; Load 562 into I
  $DAA: LD I, $8DF ; Load 8DF into I
  $DC0: LD I, $042 ; Load 042 into I
  $DDA: LD I, $301 ; Load 301 into I
  $DDC: LD I, $390 ; Load 390 into I
  $DFE: LD I, $16F ; Load 16F into I
  $E04: LD I, $7CD ; Load 7CD into I
  $E0A: LD I, $A41 ; Load A41 into I
  $E34: LD I, $29D ; Load 29D into I
  $E4E: LD I, $163 ; Load 163 into I
  $E56: LD I, $784 ; Load 784 into I
  $E72: LD I, $3E4 ; Load 3E4 into I
  $E7C: LD I, $F54 ; Load F54 into I
  $E80: LD I, $F8B ; Load F8B into I
  $E84: LD I, $BE5 ; Load BE5 into I
  $E94: LD I, $6AB ; Load 6AB into I
  $EFE: LD I, $57A ; Load 57A into I
  $F0A: LD I, $557 ; Load 557 into I
  $F56: LD I, $861 ; Load 861 into I
  $F8E: LD I, $84F ; Load 84F into I
  $F96: LD I, $9C2 ; Load 9C2 into I
  $FB8: LD I, $293 ; Load 293 into I
  $FDA: LD I, $42A ; Load 42A into I

CONTROL FLOW ANALYSIS:
Jumps: 249
Calls: 97
Branches: 228
Loops: 170
Loop Structures:
  $200 -> $1A1 (backward jump)
  $20A -> $101 (backward jump)
  $210 -> $1A1 (backward jump)
  $21A -> $101 (backward jump)
  $220 -> $1A1 (backward jump)
  $22A -> $101 (backward jump)
  $230 -> $1A1 (backward jump)
  $23A -> $101 (backward jump)
  $240 -> $1A1 (backward jump)
  $24A -> $101 (backward jump)
  $250 -> $1A1 (backward jump)
  $25A -> $101 (backward jump)
  $260 -> $1A1 (backward jump)
  $26A -> $101 (backward jump)
  $270 -> $1A1 (backward jump)
  $27A -> $101 (backward jump)
  $280 -> $1A1 (backward jump)
  $28A -> $101 (backward jump)
  $290 -> $1A1 (backward jump)
  $29A -> $101 (backward jump)
  $2A0 -> $1A1 (backward jump)
  $2AA -> $101 (backward jump)
  $2B0 -> $1A1 (backward jump)
  $2BA -> $101 (backward jump)
  $2C0 -> $1A1 (backward jump)
  $2CA -> $101 (backward jump)
  $2D0 -> $1A1 (backward jump)
  $2DA -> $101 (backward jump)
  $2E0 -> $1A1 (backward jump)
  $2EA -> $101 (backward jump)
  $2F0 -> $1A1 (backward jump)
  $2FA -> $101 (backward jump)
  $300 -> $1A1 (backward jump)
  $316 -> $27D (backward jump)
  $382 -> $13E (backward jump)
  $392 -> $0B5 (backward jump)
  $396 -> $32A (backward jump)
  $3A4 -> $312 (backward jump)
  $3C6 -> $119 (backward jump)
  $442 -> $369 (backward jump)
  $45C -> $408 (backward jump)
  $4DC -> $23A (backward jump)
  $502 -> $0DC (backward jump)
  $53E -> $159 (backward jump)
  $542 -> $21B (backward jump)
  $544 -> $506 (backward jump)
  $5A6 -> $32E (backward jump)
  $5D4 -> $3D5 (backward jump)
  $5F2 -> $2E5 (backward jump)
  $628 -> $23C (backward jump)
  $6AE -> $223 (backward jump)
  $6B8 -> $03A (backward jump)
  $6C0 -> $180 (backward jump)
  $6E2 -> $667 (backward jump)
  $6E8 -> $224 (backward jump)
  $6EC -> $2AD (backward jump)
  $6FC -> $507 (backward jump)
  $74A -> $035 (backward jump)
  $79C -> $399 (backward jump)
  $7A2 -> $492 (backward jump)
  $7A4 -> $1F3 (backward jump)
  $7AC -> $0EE (backward jump)
  $7D6 -> $0F2 (backward jump)
  $7DE -> $123 (backward jump)
  $7F0 -> $361 (backward jump)
  $7FC -> $00A (backward jump)
  $80E -> $45A (backward jump)
  $834 -> $3CB (backward jump)
  $850 -> $452 (backward jump)
  $870 -> $0A6 (backward jump)
  $898 -> $878 (backward jump)
  $8AE -> $660 (backward jump)
  $8B2 -> $5B4 (backward jump)
  $8D2 -> $3BF (backward jump)
  $906 -> $2FB (backward jump)
  $908 -> $304 (backward jump)
  $930 -> $8EA (backward jump)
  $938 -> $3B3 (backward jump)
  $94C -> $289 (backward jump)
  $94E -> $6B1 (backward jump)
  $958 -> $0FF (backward jump)
  $9BC -> $282 (backward jump)
  $9D0 -> $13F (backward jump)
  $9DA -> $639 (backward jump)
  $9EE -> $069 (backward jump)
  $9F4 -> $767 (backward jump)
  $9F8 -> $55C (backward jump)
  $A1A -> $8B3 (backward jump)
  $A44 -> $5AB (backward jump)
  $A4A -> $0EA (backward jump)
  $A70 -> $67C (backward jump)
  $A7C -> $7CC (backward jump)
  $A94 -> $5B3 (backward jump)
  $A9E -> $382 (backward jump)
  $AB0 -> $0C8 (backward jump)
  $AB4 -> $643 (backward jump)
  $ABC -> $500 (backward jump)
  $ABE -> $12D (backward jump)
  $AC4 -> $5FB (backward jump)
  $AE2 -> $589 (backward jump)
  $B14 -> $146 (backward jump)
  $B16 -> $9A3 (backward jump)
  $B34 -> $5B9 (backward jump)
  $B3E -> $64A (backward jump)
  $B44 -> $8F8 (backward jump)
  $B5C -> $3A9 (backward jump)
  $B66 -> $048 (backward jump)
  $B86 -> $853 (backward jump)
  $BA0 -> $77D (backward jump)
  $BB8 -> $336 (backward jump)
  $BCC -> $9AA (backward jump)
  $BD8 -> $A54 (backward jump)
  $BE2 -> $31B (backward jump)
  $BEE -> $75C (backward jump)
  $C08 -> $14F (backward jump)
  $C0C -> $B75 (backward jump)
  $C14 -> $0DF (backward jump)
  $C16 -> $8DA (backward jump)
  $C20 -> $40D (backward jump)
  $C26 -> $630 (backward jump)
  $C40 -> $434 (backward jump)
  $C46 -> $376 (backward jump)
  $C4E -> $697 (backward jump)
  $C6E -> $28A (backward jump)
  $C86 -> $443 (backward jump)
  $CA4 -> $5B2 (backward jump)
  $CC2 -> $854 (backward jump)
  $CF6 -> $449 (backward jump)
  $D00 -> $543 (backward jump)
  $D1A -> $ADC (backward jump)
  $D26 -> $CC7 (backward jump)
  $D2A -> $CB6 (backward jump)
  $D2E -> $6F0 (backward jump)
  $D44 -> $4C1 (backward jump)
  $D4A -> $9B1 (backward jump)
  $D70 -> $A2B (backward jump)
  $D80 -> $3B5 (backward jump)
  $D94 -> $D08 (backward jump)
  $D9C -> $220 (backward jump)
  $D9E -> $9A2 (backward jump)
  $DB2 -> $BA2 (backward jump)
  $DD2 -> $92A (backward jump)
  $DE6 -> $04B (backward jump)
  $E00 -> $064 (backward jump)
  $E08 -> $DC3 (backward jump)
  $E0C -> $59E (backward jump)
  $E14 -> $CBB (backward jump)
  $E1C -> $2E9 (backward jump)
  $E22 -> $E0B (backward jump)
  $E2E -> $057 (backward jump)
  $E90 -> $3C4 (backward jump)
  $E98 -> $1B0 (backward jump)
  $EA2 -> $D17 (backward jump)
  $EBC -> $047 (backward jump)
  $ECA -> $0D8 (backward jump)
  $ED6 -> $58F (backward jump)
  $ED8 -> $6C7 (backward jump)
  $EDA -> $D71 (backward jump)
  $EE6 -> $098 (backward jump)
  $EF8 -> $045 (backward jump)
  $F06 -> $B87 (backward jump)
  $F08 -> $69B (backward jump)
  $F10 -> $621 (backward jump)
  $F3A -> $0FD (backward jump)
  $F42 -> $5F5 (backward jump)
  $F6C -> $65F (backward jump)
  $F7C -> $9DA (backward jump)
  $FA2 -> $7DE (backward jump)
  $FE8 -> $049 (backward jump)
  $FEC -> $6B4 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $B1A1   JP       V0, $1A1        ; Jump to V0 + 1A1
$202    $9181   UNKNOWN  $9181           ; Unknown 9xxx instruction
$204    $7161   ADD      V1, #61         ; Add 97 to V1
$206    $5141   UNKNOWN  $5141           ; Unknown 5xxx instruction
$208    $3121   SE       V1, #21         ; Skip if V1 == 33
$20A    $1101   JP       $101            ; Jump to 101
$20C    $F1E1   UNKNOWN  F1E1            ; Unknown Fxxx instruction
$20E    $D1C1   DRW      V1, VC, #1      ; Draw 1-byte sprite at V1, VC
$210    $B1A1   JP       V0, $1A1        ; Jump to V0 + 1A1
$212    $9181   UNKNOWN  $9181           ; Unknown 9xxx instruction
$214    $7161   ADD      V1, #61         ; Add 97 to V1
$216    $5141   UNKNOWN  $5141           ; Unknown 5xxx instruction
$218    $3121   SE       V1, #21         ; Skip if V1 == 33
$21A    $1101   JP       $101            ; Jump to 101
$21C    $F1E1   UNKNOWN  F1E1            ; Unknown Fxxx instruction
$21E    $D1C1   DRW      V1, VC, #1      ; Draw 1-byte sprite at V1, VC
$220    $B1A1   JP       V0, $1A1        ; Jump to V0 + 1A1
$222    $9181   UNKNOWN  $9181           ; Unknown 9xxx instruction
$224    $7161   ADD      V1, #61         ; Add 97 to V1
$226    $5141   UNKNOWN  $5141           ; Unknown 5xxx instruction
$228    $3121   SE       V1, #21         ; Skip if V1 == 33
$22A    $1101   JP       $101            ; Jump to 101
$22C    $F1E1   UNKNOWN  F1E1            ; Unknown Fxxx instruction
$22E    $D1C1   DRW      V1, VC, #1      ; Draw 1-byte sprite at V1, VC
$230    $B1A1   JP       V0, $1A1        ; Jump to V0 + 1A1
$232    $9181   UNKNOWN  $9181           ; Unknown 9xxx instruction
$234    $7161   ADD      V1, #61         ; Add 97 to V1
$236    $5141   UNKNOWN  $5141           ; Unknown 5xxx instruction
$238    $3121   SE       V1, #21         ; Skip if V1 == 33
$23A    $1101   JP       $101            ; Jump to 101
$23C    $F1E1   UNKNOWN  F1E1            ; Unknown Fxxx instruction
$23E    $D1C1   DRW      V1, VC, #1      ; Draw 1-byte sprite at V1, VC
$240    $B1A1   JP       V0, $1A1        ; Jump to V0 + 1A1
$242    $9181   UNKNOWN  $9181           ; Unknown 9xxx instruction
$244    $7161   ADD      V1, #61         ; Add 97 to V1
$246    $5141   UNKNOWN  $5141           ; Unknown 5xxx instruction
$248    $3121   SE       V1, #21         ; Skip if V1 == 33
$24A    $1101   JP       $101            ; Jump to 101
$24C    $F1E1   UNKNOWN  F1E1            ; Unknown Fxxx instruction
$24E    $D1C1   DRW      V1, VC, #1      ; Draw 1-byte sprite at V1, VC
$250    $B1A1   JP       V0, $1A1        ; Jump to V0 + 1A1
$252    $9181   UNKNOWN  $9181           ; Unknown 9xxx instruction
$254    $7161   ADD      V1, #61         ; Add 97 to V1
$256    $5141   UNKNOWN  $5141           ; Unknown 5xxx instruction
$258    $3121   SE       V1, #21         ; Skip if V1 == 33
$25A    $1101   JP       $101            ; Jump to 101
$25C    $F1E1   UNKNOWN  F1E1            ; Unknown Fxxx instruction
$25E    $D1C1   DRW      V1, VC, #1      ; Draw 1-byte sprite at V1, VC
$260    $B1A1   JP       V0, $1A1        ; Jump to V0 + 1A1
$262    $9181   UNKNOWN  $9181           ; Unknown 9xxx instruction
$264    $7161   ADD      V1, #61         ; Add 97 to V1
$266    $5141   UNKNOWN  $5141           ; Unknown 5xxx instruction
$268    $3121   SE       V1, #21         ; Skip if V1 == 33
$26A    $1101   JP       $101            ; Jump to 101
$26C    $F1E1   UNKNOWN  F1E1            ; Unknown Fxxx instruction
$26E    $D1C1   DRW      V1, VC, #1      ; Draw 1-byte sprite at V1, VC
$270    $B1A1   JP       V0, $1A1        ; Jump to V0 + 1A1
$272    $9181   UNKNOWN  $9181           ; Unknown 9xxx instruction
$274    $7161   ADD      V1, #61         ; Add 97 to V1
$276    $5141   UNKNOWN  $5141           ; Unknown 5xxx instruction
$278    $3121   SE       V1, #21         ; Skip if V1 == 33
$27A    $1101   JP       $101            ; Jump to 101
$27C    $F1E1   UNKNOWN  F1E1            ; Unknown Fxxx instruction
$27E    $D1C1   DRW      V1, VC, #1      ; Draw 1-byte sprite at V1, VC
$280    $B1A1   JP       V0, $1A1        ; Jump to V0 + 1A1
$282    $9181   UNKNOWN  $9181           ; Unknown 9xxx instruction
$284    $7161   ADD      V1, #61         ; Add 97 to V1
$286    $5141   UNKNOWN  $5141           ; Unknown 5xxx instruction
$288    $3121   SE       V1, #21         ; Skip if V1 == 33
$28A    $1101   JP       $101            ; Jump to 101
$28C    $F1E1   UNKNOWN  F1E1            ; Unknown Fxxx instruction
$28E    $D1C1   DRW      V1, VC, #1      ; Draw 1-byte sprite at V1, VC
$290    $B1A1   JP       V0, $1A1        ; Jump to V0 + 1A1
$292    $9181   UNKNOWN  $9181           ; Unknown 9xxx instruction
$294    $7161   ADD      V1, #61         ; Add 97 to V1
$296    $5141   UNKNOWN  $5141           ; Unknown 5xxx instruction
$298    $3121   SE       V1, #21         ; Skip if V1 == 33
$29A    $1101   JP       $101            ; Jump to 101
$29C    $F1E1   UNKNOWN  F1E1            ; Unknown Fxxx instruction
$29E    $D1C1   DRW      V1, VC, #1      ; Draw 1-byte sprite at V1, VC
$2A0    $B1A1   JP       V0, $1A1        ; Jump to V0 + 1A1
$2A2    $9181   UNKNOWN  $9181           ; Unknown 9xxx instruction
$2A4    $7161   ADD      V1, #61         ; Add 97 to V1
$2A6    $5141   UNKNOWN  $5141           ; Unknown 5xxx instruction
$2A8    $3121   SE       V1, #21         ; Skip if V1 == 33
$2AA    $1101   JP       $101            ; Jump to 101
$2AC    $F1E1   UNKNOWN  F1E1            ; Unknown Fxxx instruction
$2AE    $D1C1   DRW      V1, VC, #1      ; Draw 1-byte sprite at V1, VC
$2B0    $B1A1   JP       V0, $1A1        ; Jump to V0 + 1A1
$2B2    $9181   UNKNOWN  $9181           ; Unknown 9xxx instruction
$2B4    $7161   ADD      V1, #61         ; Add 97 to V1
$2B6    $5141   UNKNOWN  $5141           ; Unknown 5xxx instruction
$2B8    $3121   SE       V1, #21         ; Skip if V1 == 33
$2BA    $1101   JP       $101            ; Jump to 101
$2BC    $F1E1   UNKNOWN  F1E1            ; Unknown Fxxx instruction
$2BE    $D1C1   DRW      V1, VC, #1      ; Draw 1-byte sprite at V1, VC
$2C0    $B1A1   JP       V0, $1A1        ; Jump to V0 + 1A1
$2C2    $9181   UNKNOWN  $9181           ; Unknown 9xxx instruction
$2C4    $7161   ADD      V1, #61         ; Add 97 to V1
$2C6    $5141   UNKNOWN  $5141           ; Unknown 5xxx instruction
$2C8    $3121   SE       V1, #21         ; Skip if V1 == 33
$2CA    $1101   JP       $101            ; Jump to 101
$2CC    $F1E1   UNKNOWN  F1E1            ; Unknown Fxxx instruction
$2CE    $D1C1   DRW      V1, VC, #1      ; Draw 1-byte sprite at V1, VC
$2D0    $B1A1   JP       V0, $1A1        ; Jump to V0 + 1A1
$2D2    $9181   UNKNOWN  $9181           ; Unknown 9xxx instruction
$2D4    $7161   ADD      V1, #61         ; Add 97 to V1
$2D6    $5141   UNKNOWN  $5141           ; Unknown 5xxx instruction
$2D8    $3121   SE       V1, #21         ; Skip if V1 == 33
$2DA    $1101   JP       $101            ; Jump to 101
$2DC    $F1E1   UNKNOWN  F1E1            ; Unknown Fxxx instruction
$2DE    $D1C1   DRW      V1, VC, #1      ; Draw 1-byte sprite at V1, VC
$2E0    $B1A1   JP       V0, $1A1        ; Jump to V0 + 1A1
$2E2    $9181   UNKNOWN  $9181           ; Unknown 9xxx instruction
$2E4    $7161   ADD      V1, #61         ; Add 97 to V1
$2E6    $5141   UNKNOWN  $5141           ; Unknown 5xxx instruction
$2E8    $3121   SE       V1, #21         ; Skip if V1 == 33
$2EA    $1101   JP       $101            ; Jump to 101
$2EC    $F1E1   UNKNOWN  F1E1            ; Unknown Fxxx instruction
$2EE    $D1C1   DRW      V1, VC, #1      ; Draw 1-byte sprite at V1, VC
$2F0    $B1A1   JP       V0, $1A1        ; Jump to V0 + 1A1
$2F2    $9181   UNKNOWN  $9181           ; Unknown 9xxx instruction
$2F4    $7161   ADD      V1, #61         ; Add 97 to V1
$2F6    $5141   UNKNOWN  $5141           ; Unknown 5xxx instruction
$2F8    $3121   SE       V1, #21         ; Skip if V1 == 33
$2FA    $1101   JP       $101            ; Jump to 101
$2FC    $F1E1   UNKNOWN  F1E1            ; Unknown Fxxx instruction
$2FE    $D1C1   DRW      V1, VC, #1      ; Draw 1-byte sprite at V1, VC
$300    $B1A1   JP       V0, $1A1        ; Jump to V0 + 1A1
$302    $9181   UNKNOWN  $9181           ; Unknown 9xxx instruction
$304    $7161   ADD      V1, #61         ; Add 97 to V1
$306    $5105   UNKNOWN  $5105           ; Unknown 5xxx instruction
$308    $EDFB   UNKNOWN  $EDFB           ; Unknown Exxx instruction
$30A    $1E68   JP       $E68            ; Jump to E68
$30C    $D44D   DRW      V4, V4, #D      ; Draw 13-byte sprite at V4, V4
$30E    $989C   UNKNOWN  $989C           ; Unknown 9xxx instruction
$310    $4450   SNE      V4, #50         ; Skip if V4 != 80
$312    $9DF0   SNE      VD, VF          ; Skip if VD != VF
$314    $4D92   SNE      VD, #92         ; Skip if VD != 146
$316    $B27D   JP       V0, $27D        ; Jump to V0 + 27D
$318    $73B2   ADD      V3, #B2         ; Add 178 to V3
$31A    $D758   DRW      V7, V5, #8      ; Draw 8-byte sprite at V7, V5
$31C    $DB71   DRW      VB, V7, #1      ; Draw 1-byte sprite at VB, V7
$31E    $2965   CALL     $965            ; Call subroutine at 965
$320    $A4DC   LD       I, $4DC         ; Load 4DC into I
$322    $CD3B   RND      VD, #3B         ; VD = random & 3B
$324    $B9FF   JP       V0, $9FF        ; Jump to V0 + 9FF
$326    $3D0D   SE       VD, #0D         ; Skip if VD == 13
$328    $D9C9   DRW      V9, VC, #9      ; Draw 9-byte sprite at V9, VC
$32A    $856D   UNKNOWN  856D            ; Unknown 8xxx instruction
$32C    $EB8E   UNKNOWN  $EB8E           ; Unknown Exxx instruction
$32E    $61B2   LD       V1, #B2         ; Load 178 into V1
$330    $95F1   UNKNOWN  $95F1           ; Unknown 9xxx instruction
$332    $BF0D   JP       V0, $F0D        ; Jump to V0 + F0D
$334    $9701   UNKNOWN  $9701           ; Unknown 9xxx instruction
$336    $E3DE   UNKNOWN  $E3DE           ; Unknown Exxx instruction
$338    $A3B2   LD       I, $3B2         ; Load 3B2 into I
$33A    $EC33   UNKNOWN  $EC33           ; Unknown Exxx instruction
$33C    $59D3   UNKNOWN  $59D3           ; Unknown 5xxx instruction
$33E    $A94F   LD       I, $94F         ; Load 94F into I
$340    $ACED   LD       I, $CED         ; Load CED into I
$342    $65CC   LD       V5, #CC         ; Load 204 into V5
$344    $B625   JP       V0, $625        ; Jump to V0 + 625
$346    $326A   SE       V2, #6A         ; Skip if V2 == 106
$348    $4253   SNE      V2, #53         ; Skip if V2 != 83
$34A    $A50E   LD       I, $50E         ; Load 50E into I
$34C    $9565   UNKNOWN  $9565           ; Unknown 9xxx instruction
$34E    $395E   SE       V9, #5E         ; Skip if V9 == 94
$350    $A0B9   LD       I, $0B9         ; Load 0B9 into I
$352    $B41A   JP       V0, $41A        ; Jump to V0 + 41A
$354    $C400   RND      V4, #00         ; V4 = random & 00
$356    $AB00   LD       I, $B00         ; Load B00 into I
$358    $E3FD   UNKNOWN  $E3FD           ; Unknown Exxx instruction
$35A    $64E8   LD       V4, #E8         ; Load 232 into V4
$35C    $D17A   DRW      V1, V7, #A      ; Draw 10-byte sprite at V1, V7
$35E    $A4ED   LD       I, $4ED         ; Load 4ED into I
$360    $DC5D   DRW      VC, V5, #D      ; Draw 13-byte sprite at VC, V5
$362    $5284   UNKNOWN  $5284           ; Unknown 5xxx instruction
$364    $8A5B   UNKNOWN  8A5B            ; Unknown 8xxx instruction
$366    $7A43   ADD      VA, #43         ; Add 67 to VA
$368    $5ED0   SE       VE, VD          ; Skip if VE == VD
$36A    $8E9A   UNKNOWN  8E9A            ; Unknown 8xxx instruction
$36C    $CB5A   RND      VB, #5A         ; VB = random & 5A
$36E    $D289   DRW      V2, V8, #9      ; Draw 9-byte sprite at V2, V8
$370    $8533   XOR      V5, V3          ; V5 ^= V3
$372    $57E6   UNKNOWN  $57E6           ; Unknown 5xxx instruction
$374    $4AC7   SNE      VA, #C7         ; Skip if VA != 199
$376    $1506   JP       $506            ; Jump to 506
$378    $71B0   ADD      V1, #B0         ; Add 176 to V1
$37A    $4E91   SNE      VE, #91         ; Skip if VE != 145
$37C    $647A   LD       V4, #7A         ; Load 122 into V4
$37E    $F540   UNKNOWN  F540            ; Unknown Fxxx instruction
$380    $6E03   LD       VE, #03         ; Load 3 into VE
$382    $B13E   JP       V0, $13E        ; Jump to V0 + 13E
$384    $E623   UNKNOWN  $E623           ; Unknown Exxx instruction
$386    $1A4B   JP       $A4B            ; Jump to A4B
$388    $71D0   ADD      V1, #D0         ; Add 208 to V1
$38A    $A71C   LD       I, $71C         ; Load 71C into I
$38C    $9867   UNKNOWN  $9867           ; Unknown 9xxx instruction
$38E    $CB73   RND      VB, #73         ; VB = random & 73
$390    $65E0   LD       V5, #E0         ; Load 224 into V5
$392    $B0B5   JP       V0, $0B5        ; Jump to V0 + 0B5
$394    $25F2   CALL     $5F2            ; Call subroutine at 5F2
$396    $B32A   JP       V0, $32A        ; Jump to V0 + 32A
$398    $052D   SYS      $52D            ; System call to 52D
$39A    $4DCB   SNE      VD, #CB         ; Skip if VD != 203
$39C    $EC83   UNKNOWN  $EC83           ; Unknown Exxx instruction
$39E    $708A   ADD      V0, #8A         ; Add 138 to V0
$3A0    $6BFC   LD       VB, #FC         ; Load 252 into VB
$3A2    $D644   DRW      V6, V4, #4      ; Draw 4-byte sprite at V6, V4
$3A4    $B312   JP       V0, $312        ; Jump to V0 + 312
$3A6    $F9BF   UNKNOWN  F9BF            ; Unknown Fxxx instruction
$3A8    $EE35   UNKNOWN  $EE35           ; Unknown Exxx instruction
$3AA    $15E9   JP       $5E9            ; Jump to 5E9
$3AC    $5F3D   UNKNOWN  $5F3D           ; Unknown 5xxx instruction
$3AE    $B43F   JP       V0, $43F        ; Jump to V0 + 43F
$3B0    $F576   UNKNOWN  F576            ; Unknown Fxxx instruction
$3B2    $5583   UNKNOWN  $5583           ; Unknown 5xxx instruction
$3B4    $8EF4   ADD      VE, VF          ; VE += VF, VF = carry
$3B6    $9D2C   UNKNOWN  $9D2C           ; Unknown 9xxx instruction
$3B8    $4356   SNE      V3, #56         ; Skip if V3 != 86
$3BA    $F975   UNKNOWN  F975            ; Unknown Fxxx instruction
$3BC    $0BB6   SYS      $BB6            ; System call to BB6
$3BE    $FDB5   UNKNOWN  FDB5            ; Unknown Fxxx instruction
$3C0    $9F62   UNKNOWN  $9F62           ; Unknown 9xxx instruction
$3C2    $3756   SE       V7, #56         ; Skip if V7 == 86
$3C4    $7F7F   ADD      VF, #7F         ; Add 127 to VF
$3C6    $B119   JP       V0, $119        ; Jump to V0 + 119
$3C8    $A28A   LD       I, $28A         ; Load 28A into I
$3CA    $EE00   UNKNOWN  $EE00           ; Unknown Exxx instruction
$3CC    $ACDA   LD       I, $CDA         ; Load CDA into I
$3CE    $B63B   JP       V0, $63B        ; Jump to V0 + 63B
$3D0    $9336   UNKNOWN  $9336           ; Unknown 9xxx instruction
$3D2    $F4FE   UNKNOWN  F4FE            ; Unknown Fxxx instruction
$3D4    $8419   UNKNOWN  8419            ; Unknown 8xxx instruction
$3D6    $007B   SYS      $07B            ; System call to 07B
$3D8    $64CB   LD       V4, #CB         ; Load 203 into V4
$3DA    $6D7C   LD       VD, #7C         ; Load 124 into VD
$3DC    $27F1   CALL     $7F1            ; Call subroutine at 7F1
$3DE    $D5D5   DRW      V5, VD, #5      ; Draw 5-byte sprite at V5, VD
$3E0    $F874   UNKNOWN  F874            ; Unknown Fxxx instruction
$3E2    $C436   RND      V4, #36         ; V4 = random & 36
$3E4    $351B   SE       V5, #1B         ; Skip if V5 == 27
$3E6    $4EDE   SNE      VE, #DE         ; Skip if VE != 222
$3E8    $A565   LD       I, $565         ; Load 565 into I
$3EA    $A453   LD       I, $453         ; Load 453 into I
$3EC    $FA20   UNKNOWN  FA20            ; Unknown Fxxx instruction
$3EE    $0BF0   SYS      $BF0            ; System call to BF0
$3F0    $9402   UNKNOWN  $9402           ; Unknown 9xxx instruction
$3F2    $6C63   LD       VC, #63         ; Load 99 into VC
$3F4    $2DF1   CALL     $DF1            ; Call subroutine at DF1
$3F6    $6FEF   LD       VF, #EF         ; Load 239 into VF
$3F8    $D1FF   DRW      V1, VF, #F      ; Draw 15-byte sprite at V1, VF
$3FA    $9AE7   UNKNOWN  $9AE7           ; Unknown 9xxx instruction
$3FC    $AEE8   LD       I, $EE8         ; Load EE8 into I
$3FE    $3B10   SE       VB, #10         ; Skip if VB == 16
$400    $6604   LD       V6, #04         ; Load 4 into V6
$402    $404E   SNE      V0, #4E         ; Skip if V0 != 78
$404    $933F   UNKNOWN  $933F           ; Unknown 9xxx instruction
$406    $5FA5   UNKNOWN  $5FA5           ; Unknown 5xxx instruction
$408    $A1F7   LD       I, $1F7         ; Load 1F7 into I
$40A    $CA1B   RND      VA, #1B         ; VA = random & 1B
$40C    $E533   UNKNOWN  $E533           ; Unknown Exxx instruction
$40E    $7667   ADD      V6, #67         ; Add 103 to V6
$410    $2A7D   CALL     $A7D            ; Call subroutine at A7D
$412    $5DE9   UNKNOWN  $5DE9           ; Unknown 5xxx instruction
$414    $7F55   ADD      VF, #55         ; Add 85 to VF
$416    $AA4B   LD       I, $A4B         ; Load A4B into I
$418    $0044   SYS      $044            ; System call to 044
$41A    $3F1A   SE       VF, #1A         ; Skip if VF == 26
$41C    $C063   RND      V0, #63         ; V0 = random & 63
$41E    $0B07   SYS      $B07            ; System call to B07
$420    $5AEC   UNKNOWN  $5AEC           ; Unknown 5xxx instruction
$422    $E078   UNKNOWN  $E078           ; Unknown Exxx instruction
$424    $9115   UNKNOWN  $9115           ; Unknown 9xxx instruction
$426    $7862   ADD      V8, #62         ; Add 98 to V8
$428    $2140   CALL     $140            ; Call subroutine at 140
$42A    $36FC   SE       V6, #FC         ; Skip if V6 == 252
$42C    $3E8F   SE       VE, #8F         ; Skip if VE == 143
$42E    $E7F2   UNKNOWN  $E7F2           ; Unknown Exxx instruction
$430    $43B9   SNE      V3, #B9         ; Skip if V3 != 185
$432    $002B   SYS      $02B            ; System call to 02B
$434    $DF5F   DRW      VF, V5, #F      ; Draw 15-byte sprite at VF, V5
$436    $579C   UNKNOWN  $579C           ; Unknown 5xxx instruction
$438    $5871   UNKNOWN  $5871           ; Unknown 5xxx instruction
$43A    $7D6A   ADD      VD, #6A         ; Add 106 to VD
$43C    $C3BC   RND      V3, #BC         ; V3 = random & BC
$43E    $E860   UNKNOWN  $E860           ; Unknown Exxx instruction
$440    $653B   LD       V5, #3B         ; Load 59 into V5
$442    $1369   JP       $369            ; Jump to 369
$444    $4DCD   SNE      VD, #CD         ; Skip if VD != 205
$446    $1D16   JP       $D16            ; Jump to D16
$448    $236F   CALL     $36F            ; Call subroutine at 36F
$44A    $4196   SNE      V1, #96         ; Skip if V1 != 150
$44C    $ED49   UNKNOWN  $ED49           ; Unknown Exxx instruction
$44E    $7B4E   ADD      VB, #4E         ; Add 78 to VB
$450    $C454   RND      V4, #54         ; V4 = random & 54
$452    $0842   SYS      $842            ; System call to 842
$454    $93BD   UNKNOWN  $93BD           ; Unknown 9xxx instruction
$456    $F6B6   UNKNOWN  F6B6            ; Unknown Fxxx instruction
$458    $041D   SYS      $41D            ; System call to 41D
$45A    $8B47   SUBN     VB, V4          ; VB = V4 - VB, VF = !borrow
$45C    $B408   JP       V0, $408        ; Jump to V0 + 408
$45E    $0361   SYS      $361            ; System call to 361
$460    $85D8   UNKNOWN  85D8            ; Unknown 8xxx instruction
$462    $46F0   SNE      V6, #F0         ; Skip if V6 != 240
$464    $0640   SYS      $640            ; System call to 640
$466    $8ED4   ADD      VE, VD          ; VE += VD, VF = carry
$468    $BD17   JP       V0, $D17        ; Jump to V0 + D17
$46A    $07B0   SYS      $7B0            ; System call to 7B0
$46C    $F706   UNKNOWN  F706            ; Unknown Fxxx instruction
$46E    $3157   SE       V1, #57         ; Skip if V1 == 87
$470    $52D7   UNKNOWN  $52D7           ; Unknown 5xxx instruction
$472    $DE24   DRW      VE, V2, #4      ; Draw 4-byte sprite at VE, V2
$474    $9579   UNKNOWN  $9579           ; Unknown 9xxx instruction
$476    $6572   LD       V5, #72         ; Load 114 into V5
$478    $4C25   SNE      VC, #25         ; Skip if VC != 37
$47A    $24F9   CALL     $4F9            ; Call subroutine at 4F9
$47C    $28A6   CALL     $8A6            ; Call subroutine at 8A6
$47E    $E4A9   UNKNOWN  $E4A9           ; Unknown Exxx instruction
$480    $B8AC   JP       V0, $8AC        ; Jump to V0 + 8AC
$482    $0197   SYS      $197            ; System call to 197
$484    $0749   SYS      $749            ; System call to 749
$486    $E66B   UNKNOWN  $E66B           ; Unknown Exxx instruction
$488    $4750   SNE      V7, #50         ; Skip if V7 != 80
$48A    $FB39   UNKNOWN  FB39            ; Unknown Fxxx instruction
$48C    $9ACD   UNKNOWN  $9ACD           ; Unknown 9xxx instruction
$48E    $7C82   ADD      VC, #82         ; Add 130 to VC
$490    $B67A   JP       V0, $67A        ; Jump to V0 + 67A
$492    $0613   SYS      $613            ; System call to 613
$494    $FD85   UNKNOWN  FD85            ; Unknown Fxxx instruction
$496    $CFF9   RND      VF, #F9         ; VF = random & F9
$498    $1E34   JP       $E34            ; Jump to E34
$49A    $AD18   LD       I, $D18         ; Load D18 into I
$49C    $E9A1   SKNP     V9              ; Skip if key V9 not pressed
$49E    $07B0   SYS      $7B0            ; System call to 7B0
$4A0    $D4A7   DRW      V4, VA, #7      ; Draw 7-byte sprite at V4, VA
$4A2    $84A0   LD       V4, VA          ; V4 = VA
$4A4    $2DE6   CALL     $DE6            ; Call subroutine at DE6
$4A6    $A5D1   LD       I, $5D1         ; Load 5D1 into I
$4A8    $3F69   SE       VF, #69         ; Skip if VF == 105
$4AA    $5121   UNKNOWN  $5121           ; Unknown 5xxx instruction
$4AC    $AFE1   LD       I, $FE1         ; Load FE1 into I
$4AE    $F580   UNKNOWN  F580            ; Unknown Fxxx instruction
$4B0    $0267   SYS      $267            ; System call to 267
$4B2    $A732   LD       I, $732         ; Load 732 into I
$4B4    $E518   UNKNOWN  $E518           ; Unknown Exxx instruction
$4B6    $4601   SNE      V6, #01         ; Skip if V6 != 1
$4B8    $0AB1   SYS      $AB1            ; System call to AB1
$4BA    $5F87   UNKNOWN  $5F87           ; Unknown 5xxx instruction
$4BC    $2F16   CALL     $F16            ; Call subroutine at F16
$4BE    $9CC2   UNKNOWN  $9CC2           ; Unknown 9xxx instruction
$4C0    $1993   JP       $993            ; Jump to 993
$4C2    $76B3   ADD      V6, #B3         ; Add 179 to V6
$4C4    $75CD   ADD      V5, #CD         ; Add 205 to V5
$4C6    $AD8B   LD       I, $D8B         ; Load D8B into I
$4C8    $22D5   CALL     $2D5            ; Call subroutine at 2D5
$4CA    $714A   ADD      V1, #4A         ; Add 74 to V1
$4CC    $7C22   ADD      VC, #22         ; Add 34 to VC
$4CE    $E0C5   UNKNOWN  $E0C5           ; Unknown Exxx instruction
$4D0    $37DC   SE       V7, #DC         ; Skip if V7 == 220
$4D2    $738B   ADD      V3, #8B         ; Add 139 to V3
$4D4    $C840   RND      V8, #40         ; V8 = random & 40
$4D6    $9ED8   UNKNOWN  $9ED8           ; Unknown 9xxx instruction
$4D8    $4E5A   SNE      VE, #5A         ; Skip if VE != 90
$4DA    $5D14   UNKNOWN  $5D14           ; Unknown 5xxx instruction
$4DC    $B23A   JP       V0, $23A        ; Jump to V0 + 23A
$4DE    $2E0A   CALL     $E0A            ; Call subroutine at E0A
$4E0    $40C8   SNE      V0, #C8         ; Skip if V0 != 200
$4E2    $8AEF   UNKNOWN  8AEF            ; Unknown 8xxx instruction
$4E4    $F4C0   UNKNOWN  F4C0            ; Unknown Fxxx instruction
$4E6    $3D6D   SE       VD, #6D         ; Skip if VD == 109
$4E8    $83D8   UNKNOWN  83D8            ; Unknown 8xxx instruction
$4EA    $CB85   RND      VB, #85         ; VB = random & 85
$4EC    $07E0   SYS      $7E0            ; System call to 7E0
$4EE    $3804   SE       V8, #04         ; Skip if V8 == 4
$4F0    $56D8   UNKNOWN  $56D8           ; Unknown 5xxx instruction
$4F2    $4781   SNE      V7, #81         ; Skip if V7 != 129
$4F4    $23F7   CALL     $3F7            ; Call subroutine at 3F7
$4F6    $4037   SNE      V0, #37         ; Skip if V0 != 55
$4F8    $AFDD   LD       I, $FDD         ; Load FDD into I
$4FA    $EC26   UNKNOWN  $EC26           ; Unknown Exxx instruction
$4FC    $607C   LD       V0, #7C         ; Load 124 into V0
$4FE    $D2D9   DRW      V2, VD, #9      ; Draw 9-byte sprite at V2, VD
$500    $4996   SNE      V9, #96         ; Skip if V9 != 150
$502    $B0DC   JP       V0, $0DC        ; Jump to V0 + 0DC
$504    $C47B   RND      V4, #7B         ; V4 = random & 7B
$506    $EB06   UNKNOWN  $EB06           ; Unknown Exxx instruction
$508    $9F7B   UNKNOWN  $9F7B           ; Unknown 9xxx instruction
$50A    $8493   XOR      V4, V9          ; V4 ^= V9
$50C    $A181   LD       I, $181         ; Load 181 into I
$50E    $38B9   SE       V8, #B9         ; Skip if V8 == 185
$510    $01FF   SYS      $1FF            ; System call to 1FF
$512    $F0E5   UNKNOWN  F0E5            ; Unknown Fxxx instruction
$514    $BDC3   JP       V0, $DC3        ; Jump to V0 + DC3
$516    $51CB   UNKNOWN  $51CB           ; Unknown 5xxx instruction
$518    $7D84   ADD      VD, #84         ; Add 132 to VD
$51A    $A7BD   LD       I, $7BD         ; Load 7BD into I
$51C    $7FDE   ADD      VF, #DE         ; Add 222 to VF
$51E    $9DF0   SNE      VD, VF          ; Skip if VD != VF
$520    $17B2   JP       $7B2            ; Jump to 7B2
$522    $0584   SYS      $584            ; System call to 584
$524    $FA8E   UNKNOWN  FA8E            ; Unknown Fxxx instruction
$526    $D2EF   DRW      V2, VE, #F      ; Draw 15-byte sprite at V2, VE
$528    $9F42   UNKNOWN  $9F42           ; Unknown 9xxx instruction
$52A    $8631   OR       V6, V3          ; V6 |= V3
$52C    $684A   LD       V8, #4A         ; Load 74 into V8
$52E    $5E1E   UNKNOWN  $5E1E           ; Unknown 5xxx instruction
$530    $D34D   DRW      V3, V4, #D      ; Draw 13-byte sprite at V3, V4
$532    $852D   UNKNOWN  852D            ; Unknown 8xxx instruction
$534    $F587   UNKNOWN  F587            ; Unknown Fxxx instruction
$536    $C957   RND      V9, #57         ; V9 = random & 57
$538    $F36D   UNKNOWN  F36D            ; Unknown Fxxx instruction
$53A    $A11F   LD       I, $11F         ; Load 11F into I
$53C    $8789   UNKNOWN  8789            ; Unknown 8xxx instruction
$53E    $B159   JP       V0, $159        ; Jump to V0 + 159
$540    $9F2F   UNKNOWN  $9F2F           ; Unknown 9xxx instruction
$542    $B21B   JP       V0, $21B        ; Jump to V0 + 21B
$544    $1506   JP       $506            ; Jump to 506
$546    $FDC4   UNKNOWN  FDC4            ; Unknown Fxxx instruction
$548    $6F0C   LD       VF, #0C         ; Load 12 into VF
$54A    $8359   UNKNOWN  8359            ; Unknown 8xxx instruction
$54C    $5520   SE       V5, V2          ; Skip if V5 == V2
$54E    $ED1A   UNKNOWN  $ED1A           ; Unknown Exxx instruction
$550    $FB6B   UNKNOWN  FB6B            ; Unknown Fxxx instruction
$552    $53AD   UNKNOWN  $53AD           ; Unknown 5xxx instruction
$554    $B74B   JP       V0, $74B        ; Jump to V0 + 74B
$556    $6E87   LD       VE, #87         ; Load 135 into VE
$558    $21C8   CALL     $1C8            ; Call subroutine at 1C8
$55A    $C1FC   RND      V1, #FC         ; V1 = random & FC
$55C    $49F2   SNE      V9, #F2         ; Skip if V9 != 242
$55E    $7959   ADD      V9, #59         ; Add 89 to V9
$560    $540C   UNKNOWN  $540C           ; Unknown 5xxx instruction
$562    $EDA5   UNKNOWN  $EDA5           ; Unknown Exxx instruction
$564    $A3BC   LD       I, $3BC         ; Load 3BC into I
$566    $C93B   RND      V9, #3B         ; V9 = random & 3B
$568    $D729   DRW      V7, V2, #9      ; Draw 9-byte sprite at V7, V2
$56A    $D9D6   DRW      V9, VD, #6      ; Draw 6-byte sprite at V9, VD
$56C    $FF2F   UNKNOWN  FF2F            ; Unknown Fxxx instruction
$56E    $9689   UNKNOWN  $9689           ; Unknown 9xxx instruction
$570    $66C6   LD       V6, #C6         ; Load 198 into V6
$572    $2C63   CALL     $C63            ; Call subroutine at C63
$574    $ABCD   LD       I, $BCD         ; Load BCD into I
$576    $2485   CALL     $485            ; Call subroutine at 485
$578    $0508   SYS      $508            ; System call to 508
$57A    $982B   UNKNOWN  $982B           ; Unknown 9xxx instruction
$57C    $8F05   SUB      VF, V0          ; VF -= V0, VF = !borrow
$57E    $469E   SNE      V6, #9E         ; Skip if V6 != 158
$580    $5237   UNKNOWN  $5237           ; Unknown 5xxx instruction
$582    $1AA0   JP       $AA0            ; Jump to AA0
$584    $3609   SE       V6, #09         ; Skip if V6 == 9
$586    $2C6B   CALL     $C6B            ; Call subroutine at C6B
$588    $7264   ADD      V2, #64         ; Add 100 to V2
$58A    $C36E   RND      V3, #6E         ; V3 = random & 6E
$58C    $0AC7   SYS      $AC7            ; System call to AC7
$58E    $AF43   LD       I, $F43         ; Load F43 into I
$590    $93A0   SNE      V3, VA          ; Skip if V3 != VA
$592    $FC43   UNKNOWN  FC43            ; Unknown Fxxx instruction
$594    $5D66   UNKNOWN  $5D66           ; Unknown 5xxx instruction
$596    $FA6D   UNKNOWN  FA6D            ; Unknown Fxxx instruction
$598    $D1A5   DRW      V1, VA, #5      ; Draw 5-byte sprite at V1, VA
$59A    $FE60   UNKNOWN  FE60            ; Unknown Fxxx instruction
$59C    $4BC7   SNE      VB, #C7         ; Skip if VB != 199
$59E    $72C4   ADD      V2, #C4         ; Add 196 to V2
$5A0    $8CC9   UNKNOWN  8CC9            ; Unknown 8xxx instruction
$5A2    $38A3   SE       V8, #A3         ; Skip if V8 == 163
$5A4    $4D3C   SNE      VD, #3C         ; Skip if VD != 60
$5A6    $132E   JP       $32E            ; Jump to 32E
$5A8    $704A   ADD      V0, #4A         ; Add 74 to V0
$5AA    $A347   LD       I, $347         ; Load 347 into I
$5AC    $2251   CALL     $251            ; Call subroutine at 251
$5AE    $1851   JP       $851            ; Jump to 851
$5B0    $3D04   SE       VD, #04         ; Skip if VD == 4
$5B2    $C23F   RND      V2, #3F         ; V2 = random & 3F
$5B4    $84DE   SHL      V4              ; V4 <<= 1, VF = MSB
$5B6    $623A   LD       V2, #3A         ; Load 58 into V2
$5B8    $C069   RND      V0, #69         ; V0 = random & 69
$5BA    $F916   UNKNOWN  F916            ; Unknown Fxxx instruction
$5BC    $845D   UNKNOWN  845D            ; Unknown 8xxx instruction
$5BE    $98AC   UNKNOWN  $98AC           ; Unknown 9xxx instruction
$5C0    $A814   LD       I, $814         ; Load 814 into I
$5C2    $BC5D   JP       V0, $C5D        ; Jump to V0 + C5D
$5C4    $49F8   SNE      V9, #F8         ; Skip if V9 != 248
$5C6    $6E5B   LD       VE, #5B         ; Load 91 into VE
$5C8    $D16D   DRW      V1, V6, #D      ; Draw 13-byte sprite at V1, V6
$5CA    $E3A3   UNKNOWN  $E3A3           ; Unknown Exxx instruction
$5CC    $8412   AND      V4, V1          ; V4 &= V1
$5CE    $28BF   CALL     $8BF            ; Call subroutine at 8BF
$5D0    $B97A   JP       V0, $97A        ; Jump to V0 + 97A
$5D2    $C2BB   RND      V2, #BB         ; V2 = random & BB
$5D4    $B3D5   JP       V0, $3D5        ; Jump to V0 + 3D5
$5D6    $5C8A   UNKNOWN  $5C8A           ; Unknown 5xxx instruction
$5D8    $FCCE   UNKNOWN  FCCE            ; Unknown Fxxx instruction
$5DA    $9574   UNKNOWN  $9574           ; Unknown 9xxx instruction
$5DC    $4EFC   SNE      VE, #FC         ; Skip if VE != 252
$5DE    $865B   UNKNOWN  865B            ; Unknown 8xxx instruction
$5E0    $E26F   UNKNOWN  $E26F           ; Unknown Exxx instruction
$5E2    $F774   UNKNOWN  F774            ; Unknown Fxxx instruction
$5E4    $267C   CALL     $67C            ; Call subroutine at 67C
$5E6    $EA3D   UNKNOWN  $EA3D           ; Unknown Exxx instruction
$5E8    $EE7F   UNKNOWN  $EE7F           ; Unknown Exxx instruction
$5EA    $4487   SNE      V4, #87         ; Skip if V4 != 135
$5EC    $A7B4   LD       I, $7B4         ; Load 7B4 into I
$5EE    $DCC2   DRW      VC, VC, #2      ; Draw 2-byte sprite at VC, VC
$5F0    $7328   ADD      V3, #28         ; Add 40 to V3
$5F2    $B2E5   JP       V0, $2E5        ; Jump to V0 + 2E5
$5F4    $46BC   SNE      V6, #BC         ; Skip if V6 != 188
$5F6    $C007   RND      V0, #07         ; V0 = random & 07
$5F8    $21AB   CALL     $1AB            ; Call subroutine at 1AB
$5FA    $F560   UNKNOWN  F560            ; Unknown Fxxx instruction
$5FC    $6B2F   LD       VB, #2F         ; Load 47 into VB
$5FE    $0B17   SYS      $B17            ; System call to B17
$600    $F39F   UNKNOWN  F39F            ; Unknown Fxxx instruction
$602    $3209   SE       V2, #09         ; Skip if V2 == 9
$604    $4C14   SNE      VC, #14         ; Skip if VC != 20
$606    $3999   SE       V9, #99         ; Skip if V9 == 153
$608    $4F39   SNE      VF, #39         ; Skip if VF != 57
$60A    $4DA7   SNE      VD, #A7         ; Skip if VD != 167
$60C    $F5E8   UNKNOWN  F5E8            ; Unknown Fxxx instruction
$60E    $F568   UNKNOWN  F568            ; Unknown Fxxx instruction
$610    $E172   UNKNOWN  $E172           ; Unknown Exxx instruction
$612    $AEB8   LD       I, $EB8         ; Load EB8 into I
$614    $BCF5   JP       V0, $CF5        ; Jump to V0 + CF5
$616    $6841   LD       V8, #41         ; Load 65 into V8
$618    $049E   SYS      $49E            ; System call to 49E
$61A    $869F   UNKNOWN  869F            ; Unknown 8xxx instruction
$61C    $754E   ADD      V5, #4E         ; Add 78 to V5
$61E    $338E   SE       V3, #8E         ; Skip if V3 == 142
$620    $1B1A   JP       $B1A            ; Jump to B1A
$622    $FE8E   UNKNOWN  FE8E            ; Unknown Fxxx instruction
$624    $8ED3   XOR      VE, VD          ; VE ^= VD
$626    $B819   JP       V0, $819        ; Jump to V0 + 819
$628    $B23C   JP       V0, $23C        ; Jump to V0 + 23C
$62A    $34F7   SE       V4, #F7         ; Skip if V4 == 247
$62C    $1CF0   JP       $CF0            ; Jump to CF0
$62E    $6580   LD       V5, #80         ; Load 128 into V5
$630    $6B29   LD       VB, #29         ; Load 41 into VB
$632    $887E   SHL      V8              ; V8 <<= 1, VF = MSB
$634    $8C59   UNKNOWN  8C59            ; Unknown 8xxx instruction
$636    $098E   SYS      $98E            ; System call to 98E
$638    $05D2   SYS      $5D2            ; System call to 5D2
$63A    $6290   LD       V2, #90         ; Load 144 into V2
$63C    $94AF   UNKNOWN  $94AF           ; Unknown 9xxx instruction
$63E    $77D8   ADD      V7, #D8         ; Add 216 to V7
$640    $9259   UNKNOWN  $9259           ; Unknown 9xxx instruction
$642    $F4D2   UNKNOWN  F4D2            ; Unknown Fxxx instruction
$644    $18DD   JP       $8DD            ; Jump to 8DD
$646    $2C9B   CALL     $C9B            ; Call subroutine at C9B
$648    $9935   UNKNOWN  $9935           ; Unknown 9xxx instruction
$64A    $1D10   JP       $D10            ; Jump to D10
$64C    $ACA2   LD       I, $CA2         ; Load CA2 into I
$64E    $90E1   UNKNOWN  $90E1           ; Unknown 9xxx instruction
$650    $8984   ADD      V9, V8          ; V9 += V8, VF = carry
$652    $0501   SYS      $501            ; System call to 501
$654    $E400   UNKNOWN  $E400           ; Unknown Exxx instruction
$656    $74FA   ADD      V4, #FA         ; Add 250 to V4
$658    $24C5   CALL     $4C5            ; Call subroutine at 4C5
$65A    $4C43   SNE      VC, #43         ; Skip if VC != 67
$65C    $3C87   SE       VC, #87         ; Skip if VC == 135
$65E    $2100   CALL     $100            ; Call subroutine at 100
$660    $8001   OR       V0, V0          ; V0 |= V0
$662    $A5BE   LD       I, $5BE         ; Load 5BE into I
$664    $E55F   UNKNOWN  $E55F           ; Unknown Exxx instruction
$666    $FF9E   UNKNOWN  FF9E            ; Unknown Fxxx instruction
$668    $70C1   ADD      V0, #C1         ; Add 193 to V0
$66A    $CF33   RND      VF, #33         ; VF = random & 33
$66C    $2390   CALL     $390            ; Call subroutine at 390
$66E    $AE7A   LD       I, $E7A         ; Load E7A into I
$670    $038F   SYS      $38F            ; System call to 38F
$672    $A6A9   LD       I, $6A9         ; Load 6A9 into I
$674    $EA23   UNKNOWN  $EA23           ; Unknown Exxx instruction
$676    $AF01   LD       I, $F01         ; Load F01 into I
$678    $20E4   CALL     $0E4            ; Call subroutine at 0E4
$67A    $0A29   SYS      $A29            ; System call to A29
$67C    $84E0   LD       V4, VE          ; V4 = VE
$67E    $1744   JP       $744            ; Jump to 744
$680    $0342   SYS      $342            ; System call to 342
$682    $1780   JP       $780            ; Jump to 780
$684    $9C7C   UNKNOWN  $9C7C           ; Unknown 9xxx instruction
$686    $19B8   JP       $9B8            ; Jump to 9B8
$688    $E198   UNKNOWN  $E198           ; Unknown Exxx instruction
$68A    $D4A0   DRW      V4, VA, #0      ; Draw 0-byte sprite at V4, VA
$68C    $2F67   CALL     $F67            ; Call subroutine at F67
$68E    $C7B3   RND      V7, #B3         ; V7 = random & B3
$690    $1BE5   JP       $BE5            ; Jump to BE5
$692    $64AF   LD       V4, #AF         ; Load 175 into V4
$694    $8873   XOR      V8, V7          ; V8 ^= V7
$696    $5747   UNKNOWN  $5747           ; Unknown 5xxx instruction
$698    $25B7   CALL     $5B7            ; Call subroutine at 5B7
$69A    $BEBC   JP       V0, $EBC        ; Jump to V0 + EBC
$69C    $36BC   SE       V6, #BC         ; Skip if V6 == 188
$69E    $5524   UNKNOWN  $5524           ; Unknown 5xxx instruction
$6A0    $F3EA   UNKNOWN  F3EA            ; Unknown Fxxx instruction
$6A2    $9998   UNKNOWN  $9998           ; Unknown 9xxx instruction
$6A4    $54F0   SE       V4, VF          ; Skip if V4 == VF
$6A6    $0491   SYS      $491            ; System call to 491
$6A8    $022D   SYS      $22D            ; System call to 22D
$6AA    $7679   ADD      V6, #79         ; Add 121 to V6
$6AC    $44C7   SNE      V4, #C7         ; Skip if V4 != 199
$6AE    $1223   JP       $223            ; Jump to 223
$6B0    $98D6   UNKNOWN  $98D6           ; Unknown 9xxx instruction
$6B2    $AFBA   LD       I, $FBA         ; Load FBA into I
$6B4    $918D   UNKNOWN  $918D           ; Unknown 9xxx instruction
$6B6    $5836   UNKNOWN  $5836           ; Unknown 5xxx instruction
$6B8    $B03A   JP       V0, $03A        ; Jump to V0 + 03A
$6BA    $DF25   DRW      VF, V2, #5      ; Draw 5-byte sprite at VF, V2
$6BC    $394C   SE       V9, #4C         ; Skip if V9 == 76
$6BE    $E2F1   UNKNOWN  $E2F1           ; Unknown Exxx instruction
$6C0    $1180   JP       $180            ; Jump to 180
$6C2    $6E7A   LD       VE, #7A         ; Load 122 into VE
$6C4    $E0C2   UNKNOWN  $E0C2           ; Unknown Exxx instruction
$6C6    $6E05   LD       VE, #05         ; Load 5 into VE
$6C8    $A7B5   LD       I, $7B5         ; Load 7B5 into I
$6CA    $C607   RND      V6, #07         ; V6 = random & 07
$6CC    $98CB   UNKNOWN  $98CB           ; Unknown 9xxx instruction
$6CE    $9F32   UNKNOWN  $9F32           ; Unknown 9xxx instruction
$6D0    $FBA0   UNKNOWN  FBA0            ; Unknown Fxxx instruction
$6D2    $AB91   LD       I, $B91         ; Load B91 into I
$6D4    $7906   ADD      V9, #06         ; Add 6 to V9
$6D6    $5006   UNKNOWN  $5006           ; Unknown 5xxx instruction
$6D8    $58D0   SE       V8, VD          ; Skip if V8 == VD
$6DA    $753E   ADD      V5, #3E         ; Add 62 to V5
$6DC    $C269   RND      V2, #69         ; V2 = random & 69
$6DE    $CFAE   RND      VF, #AE         ; VF = random & AE
$6E0    $3617   SE       V6, #17         ; Skip if V6 == 23
$6E2    $1667   JP       $667            ; Jump to 667
$6E4    $4CBA   SNE      VC, #BA         ; Skip if VC != 186
$6E6    $4A53   SNE      VA, #53         ; Skip if VA != 83
$6E8    $1224   JP       $224            ; Jump to 224
$6EA    $C60E   RND      V6, #0E         ; V6 = random & 0E
$6EC    $B2AD   JP       V0, $2AD        ; Jump to V0 + 2AD
$6EE    $B951   JP       V0, $951        ; Jump to V0 + 951
$6F0    $EABE   UNKNOWN  $EABE           ; Unknown Exxx instruction
$6F2    $70C5   ADD      V0, #C5         ; Add 197 to V0
$6F4    $33DA   SE       V3, #DA         ; Skip if V3 == 218
$6F6    $1B6B   JP       $B6B            ; Jump to B6B
$6F8    $DEB6   DRW      VE, VB, #6      ; Draw 6-byte sprite at VE, VB
$6FA    $82A8   UNKNOWN  82A8            ; Unknown 8xxx instruction
$6FC    $B507   JP       V0, $507        ; Jump to V0 + 507
$6FE    $862F   UNKNOWN  862F            ; Unknown 8xxx instruction
$700    $772F   ADD      V7, #2F         ; Add 47 to V7
$702    $681C   LD       V8, #1C         ; Load 28 into V8
$704    $828B   UNKNOWN  828B            ; Unknown 8xxx instruction
$706    $7D0B   ADD      VD, #0B         ; Add 11 to VD
$708    $DDE6   DRW      VD, VE, #6      ; Draw 6-byte sprite at VD, VE
$70A    $D958   DRW      V9, V5, #8      ; Draw 8-byte sprite at V9, V5
$70C    $93CD   UNKNOWN  $93CD           ; Unknown 9xxx instruction
$70E    $C231   RND      V2, #31         ; V2 = random & 31
$710    $EA25   UNKNOWN  $EA25           ; Unknown Exxx instruction
$712    $CF7D   RND      VF, #7D         ; VF = random & 7D
$714    $EEB8   UNKNOWN  $EEB8           ; Unknown Exxx instruction
$716    $9232   UNKNOWN  $9232           ; Unknown 9xxx instruction
$718    $06E4   SYS      $6E4            ; System call to 6E4
$71A    $B949   JP       V0, $949        ; Jump to V0 + 949
$71C    $0BF2   SYS      $BF2            ; System call to BF2
$71E    $73DA   ADD      V3, #DA         ; Add 218 to V3
$720    $9E97   UNKNOWN  $9E97           ; Unknown 9xxx instruction
$722    $4201   SNE      V2, #01         ; Skip if V2 != 1
$724    $D3EE   DRW      V3, VE, #E      ; Draw 14-byte sprite at V3, VE
$726    $EB13   UNKNOWN  $EB13           ; Unknown Exxx instruction
$728    $BB62   JP       V0, $B62        ; Jump to V0 + B62
$72A    $AA2C   LD       I, $A2C         ; Load A2C into I
$72C    $CD79   RND      VD, #79         ; VD = random & 79
$72E    $E2C7   UNKNOWN  $E2C7           ; Unknown Exxx instruction
$730    $0FA8   SYS      $FA8            ; System call to FA8
$732    $9C15   UNKNOWN  $9C15           ; Unknown 9xxx instruction
$734    $EAE0   UNKNOWN  $EAE0           ; Unknown Exxx instruction
$736    $7803   ADD      V8, #03         ; Add 3 to V8
$738    $FD86   UNKNOWN  FD86            ; Unknown Fxxx instruction
$73A    $875B   UNKNOWN  875B            ; Unknown 8xxx instruction
$73C    $8062   AND      V0, V6          ; V0 &= V6
$73E    $83A7   SUBN     V3, VA          ; V3 = VA - V3, VF = !borrow
$740    $E025   UNKNOWN  $E025           ; Unknown Exxx instruction
$742    $49E5   SNE      V9, #E5         ; Skip if V9 != 229
$744    $9CF1   UNKNOWN  $9CF1           ; Unknown 9xxx instruction
$746    $A38E   LD       I, $38E         ; Load 38E into I
$748    $8888   UNKNOWN  8888            ; Unknown 8xxx instruction
$74A    $1035   JP       $035            ; Jump to 035
$74C    $0E62   SYS      $E62            ; System call to E62
$74E    $7F79   ADD      VF, #79         ; Add 121 to VF
$750    $0AD5   SYS      $AD5            ; System call to AD5
$752    $07F0   SYS      $7F0            ; System call to 7F0
$754    $552B   UNKNOWN  $552B           ; Unknown 5xxx instruction
$756    $5BEF   UNKNOWN  $5BEF           ; Unknown 5xxx instruction
$758    $49C4   SNE      V9, #C4         ; Skip if V9 != 196
$75A    $33DF   SE       V3, #DF         ; Skip if V3 == 223
$75C    $277E   CALL     $77E            ; Call subroutine at 77E
$75E    $85F5   SUB      V5, VF          ; V5 -= VF, VF = !borrow
$760    $CD01   RND      VD, #01         ; VD = random & 01
$762    $4B9C   SNE      VB, #9C         ; Skip if VB != 156
$764    $680F   LD       V8, #0F         ; Load 15 into V8
$766    $819C   UNKNOWN  819C            ; Unknown 8xxx instruction
$768    $D763   DRW      V7, V6, #3      ; Draw 3-byte sprite at V7, V6
$76A    $8C21   OR       VC, V2          ; VC |= V2
$76C    $8882   AND      V8, V8          ; V8 &= V8
$76E    $DA2A   DRW      VA, V2, #A      ; Draw 10-byte sprite at VA, V2
$770    $A200   LD       I, $200         ; Load 200 into I
$772    $B9D8   JP       V0, $9D8        ; Jump to V0 + 9D8
$774    $83C3   XOR      V3, VC          ; V3 ^= VC
$776    $D773   DRW      V7, V7, #3      ; Draw 3-byte sprite at V7, V7
$778    $AC32   LD       I, $C32         ; Load C32 into I
$77A    $626F   LD       V2, #6F         ; Load 111 into V2
$77C    $F7CD   UNKNOWN  F7CD            ; Unknown Fxxx instruction
$77E    $93B1   UNKNOWN  $93B1           ; Unknown 9xxx instruction
$780    $8C23   XOR      VC, V2          ; VC ^= V2
$782    $BE0A   JP       V0, $E0A        ; Jump to V0 + E0A
$784    $DD5F   DRW      VD, V5, #F      ; Draw 15-byte sprite at VD, V5
$786    $47F9   SNE      V7, #F9         ; Skip if V7 != 249
$788    $78D8   ADD      V8, #D8         ; Add 216 to V8
$78A    $48AA   SNE      V8, #AA         ; Skip if V8 != 170
$78C    $9E04   UNKNOWN  $9E04           ; Unknown 9xxx instruction
$78E    $2CAA   CALL     $CAA            ; Call subroutine at CAA
$790    $4561   SNE      V5, #61         ; Skip if V5 != 97
$792    $36E5   SE       V6, #E5         ; Skip if V6 == 229
$794    $D67E   DRW      V6, V7, #E      ; Draw 14-byte sprite at V6, V7
$796    $F86C   UNKNOWN  F86C            ; Unknown Fxxx instruction
$798    $F51B   UNKNOWN  F51B            ; Unknown Fxxx instruction
$79A    $2F82   CALL     $F82            ; Call subroutine at F82
$79C    $1399   JP       $399            ; Jump to 399
$79E    $0964   SYS      $964            ; System call to 964
$7A0    $867D   UNKNOWN  867D            ; Unknown 8xxx instruction
$7A2    $1492   JP       $492            ; Jump to 492
$7A4    $B1F3   JP       V0, $1F3        ; Jump to V0 + 1F3
$7A6    $CDEA   RND      VD, #EA         ; VD = random & EA
$7A8    $50A1   UNKNOWN  $50A1           ; Unknown 5xxx instruction
$7AA    $D6C6   DRW      V6, VC, #6      ; Draw 6-byte sprite at V6, VC
$7AC    $B0EE   JP       V0, $0EE        ; Jump to V0 + 0EE
$7AE    $4B6D   SNE      VB, #6D         ; Skip if VB != 109
$7B0    $51FA   UNKNOWN  $51FA           ; Unknown 5xxx instruction
$7B2    $50DD   UNKNOWN  $50DD           ; Unknown 5xxx instruction
$7B4    $4843   SNE      V8, #43         ; Skip if V8 != 67
$7B6    $BE16   JP       V0, $E16        ; Jump to V0 + E16
$7B8    $0E9E   SYS      $E9E            ; System call to E9E
$7BA    $F98A   UNKNOWN  F98A            ; Unknown Fxxx instruction
$7BC    $868D   UNKNOWN  868D            ; Unknown 8xxx instruction
$7BE    $5288   UNKNOWN  $5288           ; Unknown 5xxx instruction
$7C0    $BF38   JP       V0, $F38        ; Jump to V0 + F38
$7C2    $CCC2   RND      VC, #C2         ; VC = random & C2
$7C4    $9575   UNKNOWN  $9575           ; Unknown 9xxx instruction
$7C6    $747A   ADD      V4, #7A         ; Add 122 to V4
$7C8    $7E3F   ADD      VE, #3F         ; Add 63 to VE
$7CA    $EBB0   UNKNOWN  $EBB0           ; Unknown Exxx instruction
$7CC    $EEB0   UNKNOWN  $EEB0           ; Unknown Exxx instruction
$7CE    $A935   LD       I, $935         ; Load 935 into I
$7D0    $E577   UNKNOWN  $E577           ; Unknown Exxx instruction
$7D2    $8DE3   XOR      VD, VE          ; VD ^= VE
$7D4    $C40F   RND      V4, #0F         ; V4 = random & 0F
$7D6    $10F2   JP       $0F2            ; Jump to 0F2
$7D8    $F0B5   UNKNOWN  F0B5            ; Unknown Fxxx instruction
$7DA    $AED6   LD       I, $ED6         ; Load ED6 into I
$7DC    $35CD   SE       V5, #CD         ; Skip if V5 == 205
$7DE    $B123   JP       V0, $123        ; Jump to V0 + 123
$7E0    $304E   SE       V0, #4E         ; Skip if V0 == 78
$7E2    $872B   UNKNOWN  872B            ; Unknown 8xxx instruction
$7E4    $9AE4   UNKNOWN  $9AE4           ; Unknown 9xxx instruction
$7E6    $4A54   SNE      VA, #54         ; Skip if VA != 84
$7E8    $CEBE   RND      VE, #BE         ; VE = random & BE
$7EA    $AC06   LD       I, $C06         ; Load C06 into I
$7EC    $6D3E   LD       VD, #3E         ; Load 62 into VD
$7EE    $5BAB   UNKNOWN  $5BAB           ; Unknown 5xxx instruction
$7F0    $1361   JP       $361            ; Jump to 361
$7F2    $0439   SYS      $439            ; System call to 439
$7F4    $E262   UNKNOWN  $E262           ; Unknown Exxx instruction
$7F6    $2D11   CALL     $D11            ; Call subroutine at D11
$7F8    $B88C   JP       V0, $88C        ; Jump to V0 + 88C
$7FA    $FDE8   UNKNOWN  FDE8            ; Unknown Fxxx instruction
$7FC    $B00A   JP       V0, $00A        ; Jump to V0 + 00A
$7FE    $BFC6   JP       V0, $FC6        ; Jump to V0 + FC6
$800    $34C0   SE       V4, #C0         ; Skip if V4 == 192
$802    $AFAB   LD       I, $FAB         ; Load FAB into I
$804    $68CC   LD       V8, #CC         ; Load 204 into V8
$806    $1E9E   JP       $E9E            ; Jump to E9E
$808    $465D   SNE      V6, #5D         ; Skip if V6 != 93
$80A    $91E6   UNKNOWN  $91E6           ; Unknown 9xxx instruction
$80C    $535B   UNKNOWN  $535B           ; Unknown 5xxx instruction
$80E    $145A   JP       $45A            ; Jump to 45A
$810    $EB90   UNKNOWN  $EB90           ; Unknown Exxx instruction
$812    $DFD0   DRW      VF, VD, #0      ; Draw 0-byte sprite at VF, VD
$814    $33FB   SE       V3, #FB         ; Skip if V3 == 251
$816    $4BCF   SNE      VB, #CF         ; Skip if VB != 207
$818    $A36F   LD       I, $36F         ; Load 36F into I
$81A    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$81C    $EFCA   UNKNOWN  $EFCA           ; Unknown Exxx instruction
$81E    $2CBE   CALL     $CBE            ; Call subroutine at CBE
$820    $EDE8   UNKNOWN  $EDE8           ; Unknown Exxx instruction
$822    $2D42   CALL     $D42            ; Call subroutine at D42
$824    $759E   ADD      V5, #9E         ; Add 158 to V5
$826    $2B6C   CALL     $B6C            ; Call subroutine at B6C
$828    $93DD   UNKNOWN  $93DD           ; Unknown 9xxx instruction
$82A    $F033   LD       B, V0           ; Store BCD of V0 at I, I+1, I+2
$82C    $7CDB   ADD      VC, #DB         ; Add 219 to VC
$82E    $0447   SYS      $447            ; System call to 447
$830    $9277   UNKNOWN  $9277           ; Unknown 9xxx instruction
$832    $7F6C   ADD      VF, #6C         ; Add 108 to VF
$834    $B3CB   JP       V0, $3CB        ; Jump to V0 + 3CB
$836    $AAD0   LD       I, $AD0         ; Load AD0 into I
$838    $2ABE   CALL     $ABE            ; Call subroutine at ABE
$83A    $68BA   LD       V8, #BA         ; Load 186 into V8
$83C    $7626   ADD      V6, #26         ; Add 38 to V6
$83E    $7E4C   ADD      VE, #4C         ; Add 76 to VE
$840    $FE4E   UNKNOWN  FE4E            ; Unknown Fxxx instruction
$842    $CC52   RND      VC, #52         ; VC = random & 52
$844    $C0CA   RND      V0, #CA         ; V0 = random & CA
$846    $CD53   RND      VD, #53         ; VD = random & 53
$848    $C77F   RND      V7, #7F         ; V7 = random & 7F
$84A    $0456   SYS      $456            ; System call to 456
$84C    $5250   SE       V2, V5          ; Skip if V2 == V5
$84E    $232A   CALL     $32A            ; Call subroutine at 32A
$850    $1452   JP       $452            ; Jump to 452
$852    $6CAC   LD       VC, #AC         ; Load 172 into VC
$854    $8CBA   UNKNOWN  8CBA            ; Unknown 8xxx instruction
$856    $2F39   CALL     $F39            ; Call subroutine at F39
$858    $0A67   SYS      $A67            ; System call to A67
$85A    $9207   UNKNOWN  $9207           ; Unknown 9xxx instruction
$85C    $B920   JP       V0, $920        ; Jump to V0 + 920
$85E    $A2B5   LD       I, $2B5         ; Load 2B5 into I
$860    $7C22   ADD      VC, #22         ; Add 34 to VC
$862    $D10C   DRW      V1, V0, #C      ; Draw 12-byte sprite at V1, V0
$864    $CBEB   RND      VB, #EB         ; VB = random & EB
$866    $7715   ADD      V7, #15         ; Add 21 to V7
$868    $AF77   LD       I, $F77         ; Load F77 into I
$86A    $CE72   RND      VE, #72         ; VE = random & 72
$86C    $2F18   CALL     $F18            ; Call subroutine at F18
$86E    $CEBE   RND      VE, #BE         ; VE = random & BE
$870    $10A6   JP       $0A6            ; Jump to 0A6
$872    $3757   SE       V7, #57         ; Skip if V7 == 87
$874    $3905   SE       V9, #05         ; Skip if V9 == 5
$876    $06EF   SYS      $6EF            ; System call to 6EF
$878    $CE41   RND      VE, #41         ; VE = random & 41
$87A    $AF66   LD       I, $F66         ; Load F66 into I
$87C    $ECCD   UNKNOWN  $ECCD           ; Unknown Exxx instruction
$87E    $71E0   ADD      V1, #E0         ; Add 224 to V1
$880    $9EFD   UNKNOWN  $9EFD           ; Unknown 9xxx instruction
$882    $9088   UNKNOWN  $9088           ; Unknown 9xxx instruction
$884    $2ADD   CALL     $ADD            ; Call subroutine at ADD
$886    $F28B   UNKNOWN  F28B            ; Unknown Fxxx instruction
$888    $4DD9   SNE      VD, #D9         ; Skip if VD != 217
$88A    $5846   UNKNOWN  $5846           ; Unknown 5xxx instruction
$88C    $5BBC   UNKNOWN  $5BBC           ; Unknown 5xxx instruction
$88E    $279B   CALL     $79B            ; Call subroutine at 79B
$890    $0A7D   SYS      $A7D            ; System call to A7D
$892    $EE14   UNKNOWN  $EE14           ; Unknown Exxx instruction
$894    $9BB7   UNKNOWN  $9BB7           ; Unknown 9xxx instruction
$896    $D7E1   DRW      V7, VE, #1      ; Draw 1-byte sprite at V7, VE
$898    $1878   JP       $878            ; Jump to 878
$89A    $6517   LD       V5, #17         ; Load 23 into V5
$89C    $0BDE   SYS      $BDE            ; System call to BDE
$89E    $C937   RND      V9, #37         ; V9 = random & 37
$8A0    $D916   DRW      V9, V1, #6      ; Draw 6-byte sprite at V9, V1
$8A2    $437C   SNE      V3, #7C         ; Skip if V3 != 124
$8A4    $F14F   UNKNOWN  F14F            ; Unknown Fxxx instruction
$8A6    $0334   SYS      $334            ; System call to 334
$8A8    $C3FC   RND      V3, #FC         ; V3 = random & FC
$8AA    $5779   UNKNOWN  $5779           ; Unknown 5xxx instruction
$8AC    $EE3A   UNKNOWN  $EE3A           ; Unknown Exxx instruction
$8AE    $B660   JP       V0, $660        ; Jump to V0 + 660
$8B0    $2C27   CALL     $C27            ; Call subroutine at C27
$8B2    $B5B4   JP       V0, $5B4        ; Jump to V0 + 5B4
$8B4    $365E   SE       V6, #5E         ; Skip if V6 == 94
$8B6    $305F   SE       V0, #5F         ; Skip if V0 == 95
$8B8    $1D43   JP       $D43            ; Jump to D43
$8BA    $E17A   UNKNOWN  $E17A           ; Unknown Exxx instruction
$8BC    $2377   CALL     $377            ; Call subroutine at 377
$8BE    $4B5F   SNE      VB, #5F         ; Skip if VB != 95
$8C0    $5C4A   UNKNOWN  $5C4A           ; Unknown 5xxx instruction
$8C2    $26A6   CALL     $6A6            ; Call subroutine at 6A6
$8C4    $20E0   CALL     $0E0            ; Call subroutine at 0E0
$8C6    $7CC9   ADD      VC, #C9         ; Add 201 to VC
$8C8    $0F79   SYS      $F79            ; System call to F79
$8CA    $FB89   UNKNOWN  FB89            ; Unknown Fxxx instruction
$8CC    $81B2   AND      V1, VB          ; V1 &= VB
$8CE    $6745   LD       V7, #45         ; Load 69 into V7
$8D0    $59EA   UNKNOWN  $59EA           ; Unknown 5xxx instruction
$8D2    $B3BF   JP       V0, $3BF        ; Jump to V0 + 3BF
$8D4    $9DF2   UNKNOWN  $9DF2           ; Unknown 9xxx instruction
$8D6    $BF2C   JP       V0, $F2C        ; Jump to V0 + F2C
$8D8    $505D   UNKNOWN  $505D           ; Unknown 5xxx instruction
$8DA    $67F2   LD       V7, #F2         ; Load 242 into V7
$8DC    $877B   UNKNOWN  877B            ; Unknown 8xxx instruction
$8DE    $0718   SYS      $718            ; System call to 718
$8E0    $0710   SYS      $710            ; System call to 710
$8E2    $FDB3   UNKNOWN  FDB3            ; Unknown Fxxx instruction
$8E4    $DA5F   DRW      VA, V5, #F      ; Draw 15-byte sprite at VA, V5
$8E6    $0F0F   SYS      $F0F            ; System call to F0F
$8E8    $D2CB   DRW      V2, VC, #B      ; Draw 11-byte sprite at V2, VC
$8EA    $D51F   DRW      V5, V1, #F      ; Draw 15-byte sprite at V5, V1
$8EC    $8F3A   UNKNOWN  8F3A            ; Unknown 8xxx instruction
$8EE    $527C   UNKNOWN  $527C           ; Unknown 5xxx instruction
$8F0    $E8F9   UNKNOWN  $E8F9           ; Unknown Exxx instruction
$8F2    $843D   UNKNOWN  843D            ; Unknown 8xxx instruction
$8F4    $F00C   UNKNOWN  F00C            ; Unknown Fxxx instruction
$8F6    $FF9D   UNKNOWN  FF9D            ; Unknown Fxxx instruction
$8F8    $212B   CALL     $12B            ; Call subroutine at 12B
$8FA    $BA7A   JP       V0, $A7A        ; Jump to V0 + A7A
$8FC    $72B0   ADD      V2, #B0         ; Add 176 to V2
$8FE    $0E26   SYS      $E26            ; System call to E26
$900    $FB90   UNKNOWN  FB90            ; Unknown Fxxx instruction
$902    $E3FA   UNKNOWN  $E3FA           ; Unknown Exxx instruction
$904    $E53A   UNKNOWN  $E53A           ; Unknown Exxx instruction
$906    $12FB   JP       $2FB            ; Jump to 2FB
$908    $B304   JP       V0, $304        ; Jump to V0 + 304
$90A    $723C   ADD      V2, #3C         ; Add 60 to V2
$90C    $79A1   ADD      V9, #A1         ; Add 161 to V9
$90E    $F3B7   UNKNOWN  F3B7            ; Unknown Fxxx instruction
$910    $3320   SE       V3, #20         ; Skip if V3 == 32
$912    $A25F   LD       I, $25F         ; Load 25F into I
$914    $9C5D   UNKNOWN  $9C5D           ; Unknown 9xxx instruction
$916    $EBDB   UNKNOWN  $EBDB           ; Unknown Exxx instruction
$918    $85F8   UNKNOWN  85F8            ; Unknown 8xxx instruction
$91A    $C2CB   RND      V2, #CB         ; V2 = random & CB
$91C    $6740   LD       V7, #40         ; Load 64 into V7
$91E    $0C3C   SYS      $C3C            ; System call to C3C
$920    $AEFA   LD       I, $EFA         ; Load EFA into I
$922    $92AB   UNKNOWN  $92AB           ; Unknown 9xxx instruction
$924    $B9D5   JP       V0, $9D5        ; Jump to V0 + 9D5
$926    $E749   UNKNOWN  $E749           ; Unknown Exxx instruction
$928    $C833   RND      V8, #33         ; V8 = random & 33
$92A    $FD9E   UNKNOWN  FD9E            ; Unknown Fxxx instruction
$92C    $4614   SNE      V6, #14         ; Skip if V6 != 20
$92E    $395C   SE       V9, #5C         ; Skip if V9 == 92
$930    $18EA   JP       $8EA            ; Jump to 8EA
$932    $DC79   DRW      VC, V7, #9      ; Draw 9-byte sprite at VC, V7
$934    $5D94   UNKNOWN  $5D94           ; Unknown 5xxx instruction
$936    $7E25   ADD      VE, #25         ; Add 37 to VE
$938    $13B3   JP       $3B3            ; Jump to 3B3
$93A    $4E22   SNE      VE, #22         ; Skip if VE != 34
$93C    $5117   UNKNOWN  $5117           ; Unknown 5xxx instruction
$93E    $8AB4   ADD      VA, VB          ; VA += VB, VF = carry
$940    $C918   RND      V9, #18         ; V9 = random & 18
$942    $018E   SYS      $18E            ; System call to 18E
$944    $69A7   LD       V9, #A7         ; Load 167 into V9
$946    $FD36   UNKNOWN  FD36            ; Unknown Fxxx instruction
$948    $643B   LD       V4, #3B         ; Load 59 into V4
$94A    $67C9   LD       V7, #C9         ; Load 201 into V7
$94C    $1289   JP       $289            ; Jump to 289
$94E    $16B1   JP       $6B1            ; Jump to 6B1
$950    $C2CF   RND      V2, #CF         ; V2 = random & CF
$952    $F240   UNKNOWN  F240            ; Unknown Fxxx instruction
$954    $AC17   LD       I, $C17         ; Load C17 into I
$956    $C31D   RND      V3, #1D         ; V3 = random & 1D
$958    $B0FF   JP       V0, $0FF        ; Jump to V0 + 0FF
$95A    $8CF5   SUB      VC, VF          ; VC -= VF, VF = !borrow
$95C    $7CB9   ADD      VC, #B9         ; Add 185 to VC
$95E    $041B   SYS      $41B            ; System call to 41B
$960    $33E8   SE       V3, #E8         ; Skip if V3 == 232
$962    $1F15   JP       $F15            ; Jump to F15
$964    $76CA   ADD      V6, #CA         ; Add 202 to V6
$966    $D8AB   DRW      V8, VA, #B      ; Draw 11-byte sprite at V8, VA
$968    $CFAF   RND      VF, #AF         ; VF = random & AF
$96A    $C4A7   RND      V4, #A7         ; V4 = random & A7
$96C    $7AA5   ADD      VA, #A5         ; Add 165 to VA
$96E    $64B9   LD       V4, #B9         ; Load 185 into V4
$970    $1FEB   JP       $FEB            ; Jump to FEB
$972    $BF1D   JP       V0, $F1D        ; Jump to V0 + F1D
$974    $F5AF   UNKNOWN  F5AF            ; Unknown Fxxx instruction
$976    $326B   SE       V2, #6B         ; Skip if V2 == 107
$978    $E1FA   UNKNOWN  $E1FA           ; Unknown Exxx instruction
$97A    $BA5B   JP       V0, $A5B        ; Jump to V0 + A5B
$97C    $2BB6   CALL     $BB6            ; Call subroutine at BB6
$97E    $9C28   UNKNOWN  $9C28           ; Unknown 9xxx instruction
$980    $AFAD   LD       I, $FAD         ; Load FAD into I
$982    $1DE2   JP       $DE2            ; Jump to DE2
$984    $F6DA   UNKNOWN  F6DA            ; Unknown Fxxx instruction
$986    $31F0   SE       V1, #F0         ; Skip if V1 == 240
$988    $C25B   RND      V2, #5B         ; V2 = random & 5B
$98A    $34D3   SE       V4, #D3         ; Skip if V4 == 211
$98C    $3FD1   SE       VF, #D1         ; Skip if VF == 209
$98E    $687C   LD       V8, #7C         ; Load 124 into V8
$990    $9978   UNKNOWN  $9978           ; Unknown 9xxx instruction
$992    $5DC5   UNKNOWN  $5DC5           ; Unknown 5xxx instruction
$994    $7483   ADD      V4, #83         ; Add 131 to V4
$996    $1EAB   JP       $EAB            ; Jump to EAB
$998    $DAC4   DRW      VA, VC, #4      ; Draw 4-byte sprite at VA, VC
$99A    $8551   OR       V5, V5          ; V5 |= V5
$99C    $0AF8   SYS      $AF8            ; System call to AF8
$99E    $30CD   SE       V0, #CD         ; Skip if V0 == 205
$9A0    $90C4   UNKNOWN  $90C4           ; Unknown 9xxx instruction
$9A2    $01E4   SYS      $1E4            ; System call to 1E4
$9A4    $E603   UNKNOWN  $E603           ; Unknown Exxx instruction
$9A6    $8C14   ADD      VC, V1          ; VC += V1, VF = carry
$9A8    $0976   SYS      $976            ; System call to 976
$9AA    $7116   ADD      V1, #16         ; Add 22 to V1
$9AC    $2576   CALL     $576            ; Call subroutine at 576
$9AE    $9537   UNKNOWN  $9537           ; Unknown 9xxx instruction
$9B0    $4BE7   SNE      VB, #E7         ; Skip if VB != 231
$9B2    $783B   ADD      V8, #3B         ; Add 59 to V8
$9B4    $85DD   UNKNOWN  85DD            ; Unknown 8xxx instruction
$9B6    $0098   SYS      $098            ; System call to 098
$9B8    $67CC   LD       V7, #CC         ; Load 204 into V7
$9BA    $BBEC   JP       V0, $BEC        ; Jump to V0 + BEC
$9BC    $B282   JP       V0, $282        ; Jump to V0 + 282
$9BE    $6F28   LD       VF, #28         ; Load 40 into VF
$9C0    $A949   LD       I, $949         ; Load 949 into I
$9C2    $88EE   SHL      V8              ; V8 <<= 1, VF = MSB
$9C4    $5881   UNKNOWN  $5881           ; Unknown 5xxx instruction
$9C6    $8EFE   SHL      VE              ; VE <<= 1, VF = MSB
$9C8    $705E   ADD      V0, #5E         ; Add 94 to V0
$9CA    $F977   UNKNOWN  F977            ; Unknown Fxxx instruction
$9CC    $F160   UNKNOWN  F160            ; Unknown Fxxx instruction
$9CE    $C3FD   RND      V3, #FD         ; V3 = random & FD
$9D0    $113F   JP       $13F            ; Jump to 13F
$9D2    $BD70   JP       V0, $D70        ; Jump to V0 + D70
$9D4    $4763   SNE      V7, #63         ; Skip if V7 != 99
$9D6    $A141   LD       I, $141         ; Load 141 into I
$9D8    $EA65   UNKNOWN  $EA65           ; Unknown Exxx instruction
$9DA    $1639   JP       $639            ; Jump to 639
$9DC    $57C7   UNKNOWN  $57C7           ; Unknown 5xxx instruction
$9DE    $D601   DRW      V6, V0, #1      ; Draw 1-byte sprite at V6, V0
$9E0    $6F29   LD       VF, #29         ; Load 41 into VF
$9E2    $60B2   LD       V0, #B2         ; Load 178 into V0
$9E4    $C582   RND      V5, #82         ; V5 = random & 82
$9E6    $A6D6   LD       I, $6D6         ; Load 6D6 into I
$9E8    $F9FA   UNKNOWN  F9FA            ; Unknown Fxxx instruction
$9EA    $9DCE   UNKNOWN  $9DCE           ; Unknown 9xxx instruction
$9EC    $52A2   UNKNOWN  $52A2           ; Unknown 5xxx instruction
$9EE    $1069   JP       $069            ; Jump to 069
$9F0    $F6CF   UNKNOWN  F6CF            ; Unknown Fxxx instruction
$9F2    $37B8   SE       V7, #B8         ; Skip if V7 == 184
$9F4    $B767   JP       V0, $767        ; Jump to V0 + 767
$9F6    $73C1   ADD      V3, #C1         ; Add 193 to V3
$9F8    $B55C   JP       V0, $55C        ; Jump to V0 + 55C
$9FA    $DC93   DRW      VC, V9, #3      ; Draw 3-byte sprite at VC, V9
$9FC    $1C38   JP       $C38            ; Jump to C38
$9FE    $C36E   RND      V3, #6E         ; V3 = random & 6E
$A00    $1A43   JP       $A43            ; Jump to A43
$A02    $0BEB   SYS      $BEB            ; System call to BEB
$A04    $8321   OR       V3, V2          ; V3 |= V2
$A06    $72F8   ADD      V2, #F8         ; Add 248 to V2
$A08    $ECFB   UNKNOWN  $ECFB           ; Unknown Exxx instruction
$A0A    $FF92   UNKNOWN  FF92            ; Unknown Fxxx instruction
$A0C    $42CE   SNE      V2, #CE         ; Skip if V2 != 206
$A0E    $E2D7   UNKNOWN  $E2D7           ; Unknown Exxx instruction
$A10    $95A9   UNKNOWN  $95A9           ; Unknown 9xxx instruction
$A12    $054D   SYS      $54D            ; System call to 54D
$A14    $4DB9   SNE      VD, #B9         ; Skip if VD != 185
$A16    $5E1C   UNKNOWN  $5E1C           ; Unknown 5xxx instruction
$A18    $1DB8   JP       $DB8            ; Jump to DB8
$A1A    $B8B3   JP       V0, $8B3        ; Jump to V0 + 8B3
$A1C    $3708   SE       V7, #08         ; Skip if V7 == 8
$A1E    $822D   UNKNOWN  822D            ; Unknown 8xxx instruction
$A20    $4AC1   SNE      VA, #C1         ; Skip if VA != 193
$A22    $2921   CALL     $921            ; Call subroutine at 921
$A24    $9D6F   UNKNOWN  $9D6F           ; Unknown 9xxx instruction
$A26    $BC07   JP       V0, $C07        ; Jump to V0 + C07
$A28    $A87F   LD       I, $87F         ; Load 87F into I
$A2A    $6EFC   LD       VE, #FC         ; Load 252 into VE
$A2C    $385B   SE       V8, #5B         ; Skip if V8 == 91
$A2E    $3858   SE       V8, #58         ; Skip if V8 == 88
$A30    $E8C3   UNKNOWN  $E8C3           ; Unknown Exxx instruction
$A32    $62DA   LD       V2, #DA         ; Load 218 into V2
$A34    $C9AF   RND      V9, #AF         ; V9 = random & AF
$A36    $A296   LD       I, $296         ; Load 296 into I
$A38    $E0E7   UNKNOWN  $E0E7           ; Unknown Exxx instruction
$A3A    $0557   SYS      $557            ; System call to 557
$A3C    $366F   SE       V6, #6F         ; Skip if V6 == 111
$A3E    $4980   SNE      V9, #80         ; Skip if V9 != 128
$A40    $36FF   SE       V6, #FF         ; Skip if V6 == 255
$A42    $705E   ADD      V0, #5E         ; Add 94 to V0
$A44    $B5AB   JP       V0, $5AB        ; Jump to V0 + 5AB
$A46    $80FE   SHL      V0              ; V0 <<= 1, VF = MSB
$A48    $03B2   SYS      $3B2            ; System call to 3B2
$A4A    $B0EA   JP       V0, $0EA        ; Jump to V0 + 0EA
$A4C    $569C   UNKNOWN  $569C           ; Unknown 5xxx instruction
$A4E    $D7B1   DRW      V7, VB, #1      ; Draw 1-byte sprite at V7, VB
$A50    $E3D9   UNKNOWN  $E3D9           ; Unknown Exxx instruction
$A52    $87AA   UNKNOWN  87AA            ; Unknown 8xxx instruction
$A54    $828A   UNKNOWN  828A            ; Unknown 8xxx instruction
$A56    $0234   SYS      $234            ; System call to 234
$A58    $E239   UNKNOWN  $E239           ; Unknown Exxx instruction
$A5A    $6889   LD       V8, #89         ; Load 137 into V8
$A5C    $BF7A   JP       V0, $F7A        ; Jump to V0 + F7A
$A5E    $EBBA   UNKNOWN  $EBBA           ; Unknown Exxx instruction
$A60    $0D5B   SYS      $D5B            ; System call to D5B
$A62    $EC0E   UNKNOWN  $EC0E           ; Unknown Exxx instruction
$A64    $296F   CALL     $96F            ; Call subroutine at 96F
$A66    $3670   SE       V6, #70         ; Skip if V6 == 112
$A68    $0760   SYS      $760            ; System call to 760
$A6A    $2CE3   CALL     $CE3            ; Call subroutine at CE3
$A6C    $D769   DRW      V7, V6, #9      ; Draw 9-byte sprite at V7, V6
$A6E    $9845   UNKNOWN  $9845           ; Unknown 9xxx instruction
$A70    $167C   JP       $67C            ; Jump to 67C
$A72    $056C   SYS      $56C            ; System call to 56C
$A74    $A0AB   LD       I, $0AB         ; Load 0AB into I
$A76    $F5CC   UNKNOWN  F5CC            ; Unknown Fxxx instruction
$A78    $8363   XOR      V3, V6          ; V3 ^= V6
$A7A    $6240   LD       V2, #40         ; Load 64 into V2
$A7C    $17CC   JP       $7CC            ; Jump to 7CC
$A7E    $8FFE   SHL      VF              ; VF <<= 1, VF = MSB
$A80    $1CC8   JP       $CC8            ; Jump to CC8
$A82    $E306   UNKNOWN  $E306           ; Unknown Exxx instruction
$A84    $0C74   SYS      $C74            ; System call to C74
$A86    $0DD3   SYS      $DD3            ; System call to DD3
$A88    $E96F   UNKNOWN  $E96F           ; Unknown Exxx instruction
$A8A    $D2F6   DRW      V2, VF, #6      ; Draw 6-byte sprite at V2, VF
$A8C    $E1E3   UNKNOWN  $E1E3           ; Unknown Exxx instruction
$A8E    $0342   SYS      $342            ; System call to 342
$A90    $8E20   LD       VE, V2          ; VE = V2
$A92    $A34E   LD       I, $34E         ; Load 34E into I
$A94    $B5B3   JP       V0, $5B3        ; Jump to V0 + 5B3
$A96    $4AEB   SNE      VA, #EB         ; Skip if VA != 235
$A98    $5F22   UNKNOWN  $5F22           ; Unknown 5xxx instruction
$A9A    $BDB9   JP       V0, $DB9        ; Jump to V0 + DB9
$A9C    $2CEF   CALL     $CEF            ; Call subroutine at CEF
$A9E    $B382   JP       V0, $382        ; Jump to V0 + 382
$AA0    $FB74   UNKNOWN  FB74            ; Unknown Fxxx instruction
$AA2    $A138   LD       I, $138         ; Load 138 into I
$AA4    $AFDD   LD       I, $FDD         ; Load FDD into I
$AA6    $3697   SE       V6, #97         ; Skip if V6 == 151
$AA8    $2090   CALL     $090            ; Call subroutine at 090
$AAA    $80D2   AND      V0, VD          ; V0 &= VD
$AAC    $E3E6   UNKNOWN  $E3E6           ; Unknown Exxx instruction
$AAE    $F3EB   UNKNOWN  F3EB            ; Unknown Fxxx instruction
$AB0    $10C8   JP       $0C8            ; Jump to 0C8
$AB2    $4C33   SNE      VC, #33         ; Skip if VC != 51
$AB4    $1643   JP       $643            ; Jump to 643
$AB6    $0B4E   SYS      $B4E            ; System call to B4E
$AB8    $5F36   UNKNOWN  $5F36           ; Unknown 5xxx instruction
$ABA    $9F72   UNKNOWN  $9F72           ; Unknown 9xxx instruction
$ABC    $B500   JP       V0, $500        ; Jump to V0 + 500
$ABE    $B12D   JP       V0, $12D        ; Jump to V0 + 12D
$AC0    $51B7   UNKNOWN  $51B7           ; Unknown 5xxx instruction
$AC2    $4BFA   SNE      VB, #FA         ; Skip if VB != 250
$AC4    $B5FB   JP       V0, $5FB        ; Jump to V0 + 5FB
$AC6    $246C   CALL     $46C            ; Call subroutine at 46C
$AC8    $9FFF   UNKNOWN  $9FFF           ; Unknown 9xxx instruction
$ACA    $29D1   CALL     $9D1            ; Call subroutine at 9D1
$ACC    $D599   DRW      V5, V9, #9      ; Draw 9-byte sprite at V5, V9
$ACE    $9D1A   UNKNOWN  $9D1A           ; Unknown 9xxx instruction
$AD0    $5DEF   UNKNOWN  $5DEF           ; Unknown 5xxx instruction
$AD2    $6EC8   LD       VE, #C8         ; Load 200 into VE
$AD4    $C086   RND      V0, #86         ; V0 = random & 86
$AD6    $BDB4   JP       V0, $DB4        ; Jump to V0 + DB4
$AD8    $07C0   SYS      $7C0            ; System call to 7C0
$ADA    $0D1E   SYS      $D1E            ; System call to D1E
$ADC    $F2F7   UNKNOWN  F2F7            ; Unknown Fxxx instruction
$ADE    $409E   SNE      V0, #9E         ; Skip if V0 != 158
$AE0    $5656   UNKNOWN  $5656           ; Unknown 5xxx instruction
$AE2    $B589   JP       V0, $589        ; Jump to V0 + 589
$AE4    $C349   RND      V3, #49         ; V3 = random & 49
$AE6    $77EB   ADD      V7, #EB         ; Add 235 to V7
$AE8    $7EED   ADD      VE, #ED         ; Add 237 to VE
$AEA    $4B96   SNE      VB, #96         ; Skip if VB != 150
$AEC    $5069   UNKNOWN  $5069           ; Unknown 5xxx instruction
$AEE    $80C7   SUBN     V0, VC          ; V0 = VC - V0, VF = !borrow
$AF0    $8E37   SUBN     VE, V3          ; VE = V3 - VE, VF = !borrow
$AF2    $47B5   SNE      V7, #B5         ; Skip if V7 != 181
$AF4    $1E2C   JP       $E2C            ; Jump to E2C
$AF6    $CEF7   RND      VE, #F7         ; VE = random & F7
$AF8    $A3B2   LD       I, $3B2         ; Load 3B2 into I
$AFA    $8922   AND      V9, V2          ; V9 &= V2
$AFC    $4B7F   SNE      VB, #7F         ; Skip if VB != 127
$AFE    $34F3   SE       V4, #F3         ; Skip if V4 == 243
$B00    $F30A   LD       V3, K           ; Wait for key press, store in V3
$B02    $9FF2   UNKNOWN  $9FF2           ; Unknown 9xxx instruction
$B04    $47CA   SNE      V7, #CA         ; Skip if V7 != 202
$B06    $7D0F   ADD      VD, #0F         ; Add 15 to VD
$B08    $9944   UNKNOWN  $9944           ; Unknown 9xxx instruction
$B0A    $DD5E   DRW      VD, V5, #E      ; Draw 14-byte sprite at VD, V5
$B0C    $CCF7   RND      VC, #F7         ; VC = random & F7
$B0E    $C035   RND      V0, #35         ; V0 = random & 35
$B10    $C668   RND      V6, #68         ; V6 = random & 68
$B12    $7DE4   ADD      VD, #E4         ; Add 228 to VD
$B14    $1146   JP       $146            ; Jump to 146
$B16    $19A3   JP       $9A3            ; Jump to 9A3
$B18    $F4E1   UNKNOWN  F4E1            ; Unknown Fxxx instruction
$B1A    $C507   RND      V5, #07         ; V5 = random & 07
$B1C    $5035   UNKNOWN  $5035           ; Unknown 5xxx instruction
$B1E    $0237   SYS      $237            ; System call to 237
$B20    $29FB   CALL     $9FB            ; Call subroutine at 9FB
$B22    $D432   DRW      V4, V3, #2      ; Draw 2-byte sprite at V4, V3
$B24    $F370   UNKNOWN  F370            ; Unknown Fxxx instruction
$B26    $971B   UNKNOWN  $971B           ; Unknown 9xxx instruction
$B28    $9D58   UNKNOWN  $9D58           ; Unknown 9xxx instruction
$B2A    $4F53   SNE      VF, #53         ; Skip if VF != 83
$B2C    $47E6   SNE      V7, #E6         ; Skip if V7 != 230
$B2E    $0017   SYS      $017            ; System call to 017
$B30    $8BA6   SHR      VB              ; VB >>= 1, VF = LSB
$B32    $4DB1   SNE      VD, #B1         ; Skip if VD != 177
$B34    $15B9   JP       $5B9            ; Jump to 5B9
$B36    $0BBB   SYS      $BBB            ; System call to BBB
$B38    $332A   SE       V3, #2A         ; Skip if V3 == 42
$B3A    $00E3   SYS      $0E3            ; System call to 0E3
$B3C    $4A47   SNE      VA, #47         ; Skip if VA != 71
$B3E    $B64A   JP       V0, $64A        ; Jump to V0 + 64A
$B40    $D44F   DRW      V4, V4, #F      ; Draw 15-byte sprite at V4, V4
$B42    $AAE9   LD       I, $AE9         ; Load AE9 into I
$B44    $18F8   JP       $8F8            ; Jump to 8F8
$B46    $AE4A   LD       I, $E4A         ; Load E4A into I
$B48    $52D1   UNKNOWN  $52D1           ; Unknown 5xxx instruction
$B4A    $2734   CALL     $734            ; Call subroutine at 734
$B4C    $2476   CALL     $476            ; Call subroutine at 476
$B4E    $D792   DRW      V7, V9, #2      ; Draw 2-byte sprite at V7, V9
$B50    $9E7B   UNKNOWN  $9E7B           ; Unknown 9xxx instruction
$B52    $76A2   ADD      V6, #A2         ; Add 162 to V6
$B54    $AD50   LD       I, $D50         ; Load D50 into I
$B56    $49C0   SNE      V9, #C0         ; Skip if V9 != 192
$B58    $5ECB   UNKNOWN  $5ECB           ; Unknown 5xxx instruction
$B5A    $394F   SE       V9, #4F         ; Skip if V9 == 79
$B5C    $13A9   JP       $3A9            ; Jump to 3A9
$B5E    $2366   CALL     $366            ; Call subroutine at 366
$B60    $DBB7   DRW      VB, VB, #7      ; Draw 7-byte sprite at VB, VB
$B62    $EE4D   UNKNOWN  $EE4D           ; Unknown Exxx instruction
$B64    $784C   ADD      V8, #4C         ; Add 76 to V8
$B66    $B048   JP       V0, $048        ; Jump to V0 + 048
$B68    $ECB9   UNKNOWN  $ECB9           ; Unknown Exxx instruction
$B6A    $5F49   UNKNOWN  $5F49           ; Unknown 5xxx instruction
$B6C    $765A   ADD      V6, #5A         ; Add 90 to V6
$B6E    $8826   SHR      V8              ; V8 >>= 1, VF = LSB
$B70    $64C7   LD       V4, #C7         ; Load 199 into V4
$B72    $91B0   SNE      V1, VB          ; Skip if V1 != VB
$B74    $BCB2   JP       V0, $CB2        ; Jump to V0 + CB2
$B76    $7A2F   ADD      VA, #2F         ; Add 47 to VA
$B78    $C136   RND      V1, #36         ; V1 = random & 36
$B7A    $FA3E   UNKNOWN  FA3E            ; Unknown Fxxx instruction
$B7C    $582B   UNKNOWN  $582B           ; Unknown 5xxx instruction
$B7E    $E64F   UNKNOWN  $E64F           ; Unknown Exxx instruction
$B80    $A2F2   LD       I, $2F2         ; Load 2F2 into I
$B82    $5839   UNKNOWN  $5839           ; Unknown 5xxx instruction
$B84    $DF52   DRW      VF, V5, #2      ; Draw 2-byte sprite at VF, V5
$B86    $1853   JP       $853            ; Jump to 853
$B88    $FC09   UNKNOWN  FC09            ; Unknown Fxxx instruction
$B8A    $266D   CALL     $66D            ; Call subroutine at 66D
$B8C    $0707   SYS      $707            ; System call to 707
$B8E    $F001   UNKNOWN  F001            ; Unknown Fxxx instruction
$B90    $CB71   RND      VB, #71         ; VB = random & 71
$B92    $95C2   UNKNOWN  $95C2           ; Unknown 9xxx instruction
$B94    $3D84   SE       VD, #84         ; Skip if VD == 132
$B96    $6F27   LD       VF, #27         ; Load 39 into VF
$B98    $9CB6   UNKNOWN  $9CB6           ; Unknown 9xxx instruction
$B9A    $0003   SYS      $003            ; System call to 003
$B9C    $D778   DRW      V7, V7, #8      ; Draw 8-byte sprite at V7, V7
$B9E    $A963   LD       I, $963         ; Load 963 into I
$BA0    $B77D   JP       V0, $77D        ; Jump to V0 + 77D
$BA2    $CEC8   RND      VE, #C8         ; VE = random & C8
$BA4    $2BC4   CALL     $BC4            ; Call subroutine at BC4
$BA6    $365D   SE       V6, #5D         ; Skip if V6 == 93
$BA8    $C03B   RND      V0, #3B         ; V0 = random & 3B
$BAA    $7BE5   ADD      VB, #E5         ; Add 229 to VB
$BAC    $585C   UNKNOWN  $585C           ; Unknown 5xxx instruction
$BAE    $CC98   RND      VC, #98         ; VC = random & 98
$BB0    $2079   CALL     $079            ; Call subroutine at 079
$BB2    $2738   CALL     $738            ; Call subroutine at 738
$BB4    $47EB   SNE      V7, #EB         ; Skip if V7 != 235
$BB6    $7735   ADD      V7, #35         ; Add 53 to V7
$BB8    $B336   JP       V0, $336        ; Jump to V0 + 336
$BBA    $607A   LD       V0, #7A         ; Load 122 into V0
$BBC    $201E   CALL     $01E            ; Call subroutine at 01E
$BBE    $2987   CALL     $987            ; Call subroutine at 987
$BC0    $9285   UNKNOWN  $9285           ; Unknown 9xxx instruction
$BC2    $7F70   ADD      VF, #70         ; Add 112 to VF
$BC4    $F012   UNKNOWN  F012            ; Unknown Fxxx instruction
$BC6    $81CF   UNKNOWN  81CF            ; Unknown 8xxx instruction
$BC8    $08B8   SYS      $8B8            ; System call to 8B8
$BCA    $DD74   DRW      VD, V7, #4      ; Draw 4-byte sprite at VD, V7
$BCC    $19AA   JP       $9AA            ; Jump to 9AA
$BCE    $D7A6   DRW      V7, VA, #6      ; Draw 6-byte sprite at V7, VA
$BD0    $EC0C   UNKNOWN  $EC0C           ; Unknown Exxx instruction
$BD2    $23AB   CALL     $3AB            ; Call subroutine at 3AB
$BD4    $0C0B   SYS      $C0B            ; System call to C0B
$BD6    $7DEE   ADD      VD, #EE         ; Add 238 to VD
$BD8    $1A54   JP       $A54            ; Jump to A54
$BDA    $F054   UNKNOWN  F054            ; Unknown Fxxx instruction
$BDC    $3DFA   SE       VD, #FA         ; Skip if VD == 250
$BDE    $6569   LD       V5, #69         ; Load 105 into V5
$BE0    $E833   UNKNOWN  $E833           ; Unknown Exxx instruction
$BE2    $B31B   JP       V0, $31B        ; Jump to V0 + 31B
$BE4    $26CA   CALL     $6CA            ; Call subroutine at 6CA
$BE6    $7D43   ADD      VD, #43         ; Add 67 to VD
$BE8    $84D9   UNKNOWN  84D9            ; Unknown 8xxx instruction
$BEA    $AA31   LD       I, $A31         ; Load A31 into I
$BEC    $EA40   UNKNOWN  $EA40           ; Unknown Exxx instruction
$BEE    $175C   JP       $75C            ; Jump to 75C
$BF0    $8057   SUBN     V0, V5          ; V0 = V5 - V0, VF = !borrow
$BF2    $22A5   CALL     $2A5            ; Call subroutine at 2A5
$BF4    $7F68   ADD      VF, #68         ; Add 104 to VF
$BF6    $820C   UNKNOWN  820C            ; Unknown 8xxx instruction
$BF8    $BC95   JP       V0, $C95        ; Jump to V0 + C95
$BFA    $8708   UNKNOWN  8708            ; Unknown 8xxx instruction
$BFC    $D9CD   DRW      V9, VC, #D      ; Draw 13-byte sprite at V9, VC
$BFE    $06DC   SYS      $6DC            ; System call to 6DC
$C00    $44D0   SNE      V4, #D0         ; Skip if V4 != 208
$C02    $6D4D   LD       VD, #4D         ; Load 77 into VD
$C04    $E79E   SKP      V7              ; Skip if key V7 pressed
$C06    $441D   SNE      V4, #1D         ; Skip if V4 != 29
$C08    $B14F   JP       V0, $14F        ; Jump to V0 + 14F
$C0A    $8703   XOR      V7, V0          ; V7 ^= V0
$C0C    $BB75   JP       V0, $B75        ; Jump to V0 + B75
$C0E    $7171   ADD      V1, #71         ; Add 113 to V1
$C10    $F2FC   UNKNOWN  F2FC            ; Unknown Fxxx instruction
$C12    $7256   ADD      V2, #56         ; Add 86 to V2
$C14    $10DF   JP       $0DF            ; Jump to 0DF
$C16    $18DA   JP       $8DA            ; Jump to 8DA
$C18    $C6EA   RND      V6, #EA         ; V6 = random & EA
$C1A    $D0B1   DRW      V0, VB, #1      ; Draw 1-byte sprite at V0, VB
$C1C    $E667   UNKNOWN  $E667           ; Unknown Exxx instruction
$C1E    $F981   UNKNOWN  F981            ; Unknown Fxxx instruction
$C20    $B40D   JP       V0, $40D        ; Jump to V0 + 40D
$C22    $E9E8   UNKNOWN  $E9E8           ; Unknown Exxx instruction
$C24    $8D0D   UNKNOWN  8D0D            ; Unknown 8xxx instruction
$C26    $B630   JP       V0, $630        ; Jump to V0 + 630
$C28    $DC18   DRW      VC, V1, #8      ; Draw 8-byte sprite at VC, V1
$C2A    $9559   UNKNOWN  $9559           ; Unknown 9xxx instruction
$C2C    $957A   UNKNOWN  $957A           ; Unknown 9xxx instruction
$C2E    $3D13   SE       VD, #13         ; Skip if VD == 19
$C30    $E41A   UNKNOWN  $E41A           ; Unknown Exxx instruction
$C32    $A8C9   LD       I, $8C9         ; Load 8C9 into I
$C34    $FE10   UNKNOWN  FE10            ; Unknown Fxxx instruction
$C36    $0500   SYS      $500            ; System call to 500
$C38    $E35B   UNKNOWN  $E35B           ; Unknown Exxx instruction
$C3A    $C858   RND      V8, #58         ; V8 = random & 58
$C3C    $8FFF   UNKNOWN  8FFF            ; Unknown 8xxx instruction
$C3E    $AE57   LD       I, $E57         ; Load E57 into I
$C40    $B434   JP       V0, $434        ; Jump to V0 + 434
$C42    $6052   LD       V0, #52         ; Load 82 into V0
$C44    $9F2E   UNKNOWN  $9F2E           ; Unknown 9xxx instruction
$C46    $1376   JP       $376            ; Jump to 376
$C48    $2E7D   CALL     $E7D            ; Call subroutine at E7D
$C4A    $E3D1   UNKNOWN  $E3D1           ; Unknown Exxx instruction
$C4C    $6537   LD       V5, #37         ; Load 55 into V5
$C4E    $1697   JP       $697            ; Jump to 697
$C50    $BFAA   JP       V0, $FAA        ; Jump to V0 + FAA
$C52    $FA59   UNKNOWN  FA59            ; Unknown Fxxx instruction
$C54    $A440   LD       I, $440         ; Load 440 into I
$C56    $6214   LD       V2, #14         ; Load 20 into V2
$C58    $94C3   UNKNOWN  $94C3           ; Unknown 9xxx instruction
$C5A    $ACE4   LD       I, $CE4         ; Load CE4 into I
$C5C    $0265   SYS      $265            ; System call to 265
$C5E    $9E73   UNKNOWN  $9E73           ; Unknown 9xxx instruction
$C60    $349F   SE       V4, #9F         ; Skip if V4 == 159
$C62    $2998   CALL     $998            ; Call subroutine at 998
$C64    $9990   SNE      V9, V9          ; Skip if V9 != V9
$C66    $D76D   DRW      V7, V6, #D      ; Draw 13-byte sprite at V7, V6
$C68    $38AF   SE       V8, #AF         ; Skip if V8 == 175
$C6A    $EEFA   UNKNOWN  $EEFA           ; Unknown Exxx instruction
$C6C    $9437   UNKNOWN  $9437           ; Unknown 9xxx instruction
$C6E    $128A   JP       $28A            ; Jump to 28A
$C70    $FB71   UNKNOWN  FB71            ; Unknown Fxxx instruction
$C72    $FE47   UNKNOWN  FE47            ; Unknown Fxxx instruction
$C74    $FEEF   UNKNOWN  FEEF            ; Unknown Fxxx instruction
$C76    $0A45   SYS      $A45            ; System call to A45
$C78    $C046   RND      V0, #46         ; V0 = random & 46
$C7A    $3063   SE       V0, #63         ; Skip if V0 == 99
$C7C    $CE1B   RND      VE, #1B         ; VE = random & 1B
$C7E    $3FCE   SE       VF, #CE         ; Skip if VF == 206
$C80    $EA77   UNKNOWN  $EA77           ; Unknown Exxx instruction
$C82    $8CB5   SUB      VC, VB          ; VC -= VB, VF = !borrow
$C84    $BDAB   JP       V0, $DAB        ; Jump to V0 + DAB
$C86    $1443   JP       $443            ; Jump to 443
$C88    $6972   LD       V9, #72         ; Load 114 into V9
$C8A    $6E2D   LD       VE, #2D         ; Load 45 into VE
$C8C    $7CBD   ADD      VC, #BD         ; Add 189 to VC
$C8E    $C939   RND      V9, #39         ; V9 = random & 39
$C90    $3DA4   SE       VD, #A4         ; Skip if VD == 164
$C92    $7CC2   ADD      VC, #C2         ; Add 194 to VC
$C94    $C826   RND      V8, #26         ; V8 = random & 26
$C96    $7B2B   ADD      VB, #2B         ; Add 43 to VB
$C98    $28F5   CALL     $8F5            ; Call subroutine at 8F5
$C9A    $E3D7   UNKNOWN  $E3D7           ; Unknown Exxx instruction
$C9C    $3007   SE       V0, #07         ; Skip if V0 == 7
$C9E    $C88F   RND      V8, #8F         ; V8 = random & 8F
$CA0    $513C   UNKNOWN  $513C           ; Unknown 5xxx instruction
$CA2    $311C   SE       V1, #1C         ; Skip if V1 == 28
$CA4    $B5B2   JP       V0, $5B2        ; Jump to V0 + 5B2
$CA6    $688F   LD       V8, #8F         ; Load 143 into V8
$CA8    $9839   UNKNOWN  $9839           ; Unknown 9xxx instruction
$CAA    $448B   SNE      V4, #8B         ; Skip if V4 != 139
$CAC    $C18E   RND      V1, #8E         ; V1 = random & 8E
$CAE    $6AA8   LD       VA, #A8         ; Load 168 into VA
$CB0    $EB7C   UNKNOWN  $EB7C           ; Unknown Exxx instruction
$CB2    $4CED   SNE      VC, #ED         ; Skip if VC != 237
$CB4    $515B   UNKNOWN  $515B           ; Unknown 5xxx instruction
$CB6    $A8F3   LD       I, $8F3         ; Load 8F3 into I
$CB8    $57D3   UNKNOWN  $57D3           ; Unknown 5xxx instruction
$CBA    $9D33   UNKNOWN  $9D33           ; Unknown 9xxx instruction
$CBC    $99D2   UNKNOWN  $99D2           ; Unknown 9xxx instruction
$CBE    $25D3   CALL     $5D3            ; Call subroutine at 5D3
$CC0    $38B7   SE       V8, #B7         ; Skip if V8 == 183
$CC2    $B854   JP       V0, $854        ; Jump to V0 + 854
$CC4    $5BBE   UNKNOWN  $5BBE           ; Unknown 5xxx instruction
$CC6    $7AAF   ADD      VA, #AF         ; Add 175 to VA
$CC8    $9EA5   UNKNOWN  $9EA5           ; Unknown 9xxx instruction
$CCA    $4949   SNE      V9, #49         ; Skip if V9 != 73
$CCC    $2580   CALL     $580            ; Call subroutine at 580
$CCE    $1EA5   JP       $EA5            ; Jump to EA5
$CD0    $42F1   SNE      V2, #F1         ; Skip if V2 != 241
$CD2    $E16C   UNKNOWN  $E16C           ; Unknown Exxx instruction
$CD4    $E29E   SKP      V2              ; Skip if key V2 pressed
$CD6    $2CC4   CALL     $CC4            ; Call subroutine at CC4
$CD8    $8000   LD       V0, V0          ; V0 = V0
$CDA    $0882   SYS      $882            ; System call to 882
$CDC    $2EEC   CALL     $EEC            ; Call subroutine at EEC
$CDE    $F859   UNKNOWN  F859            ; Unknown Fxxx instruction
$CE0    $298A   CALL     $98A            ; Call subroutine at 98A
$CE2    $DC63   DRW      VC, V6, #3      ; Draw 3-byte sprite at VC, V6
$CE4    $E74D   UNKNOWN  $E74D           ; Unknown Exxx instruction
$CE6    $F4D3   UNKNOWN  F4D3            ; Unknown Fxxx instruction
$CE8    $7EB0   ADD      VE, #B0         ; Add 176 to VE
$CEA    $7174   ADD      V1, #74         ; Add 116 to V1
$CEC    $F80F   UNKNOWN  F80F            ; Unknown Fxxx instruction
$CEE    $3DD5   SE       VD, #D5         ; Skip if VD == 213
$CF0    $E22D   UNKNOWN  $E22D           ; Unknown Exxx instruction
$CF2    $2CDE   CALL     $CDE            ; Call subroutine at CDE
$CF4    $6489   LD       V4, #89         ; Load 137 into V4
$CF6    $B449   JP       V0, $449        ; Jump to V0 + 449
$CF8    $68F8   LD       V8, #F8         ; Load 248 into V8
$CFA    $BD8B   JP       V0, $D8B        ; Jump to V0 + D8B
$CFC    $048E   SYS      $48E            ; System call to 48E
$CFE    $A2FE   LD       I, $2FE         ; Load 2FE into I
$D00    $B543   JP       V0, $543        ; Jump to V0 + 543
$D02    $EAF5   UNKNOWN  $EAF5           ; Unknown Exxx instruction
$D04    $DA14   DRW      VA, V1, #4      ; Draw 4-byte sprite at VA, V1
$D06    $A513   LD       I, $513         ; Load 513 into I
$D08    $F0BA   UNKNOWN  F0BA            ; Unknown Fxxx instruction
$D0A    $5AD0   SE       VA, VD          ; Skip if VA == VD
$D0C    $E93D   UNKNOWN  $E93D           ; Unknown Exxx instruction
$D0E    $E694   UNKNOWN  $E694           ; Unknown Exxx instruction
$D10    $7608   ADD      V6, #08         ; Add 8 to V6
$D12    $717D   ADD      V1, #7D         ; Add 125 to V1
$D14    $7402   ADD      V4, #02         ; Add 2 to V4
$D16    $52D2   UNKNOWN  $52D2           ; Unknown 5xxx instruction
$D18    $0566   SYS      $566            ; System call to 566
$D1A    $BADC   JP       V0, $ADC        ; Jump to V0 + ADC
$D1C    $E1C0   UNKNOWN  $E1C0           ; Unknown Exxx instruction
$D1E    $9E85   UNKNOWN  $9E85           ; Unknown 9xxx instruction
$D20    $86C5   SUB      V6, VC          ; V6 -= VC, VF = !borrow
$D22    $E16A   UNKNOWN  $E16A           ; Unknown Exxx instruction
$D24    $5D7C   UNKNOWN  $5D7C           ; Unknown 5xxx instruction
$D26    $BCC7   JP       V0, $CC7        ; Jump to V0 + CC7
$D28    $338A   SE       V3, #8A         ; Skip if V3 == 138
$D2A    $BCB6   JP       V0, $CB6        ; Jump to V0 + CB6
$D2C    $C436   RND      V4, #36         ; V4 = random & 36
$D2E    $16F0   JP       $6F0            ; Jump to 6F0
$D30    $5085   UNKNOWN  $5085           ; Unknown 5xxx instruction
$D32    $02BE   SYS      $2BE            ; System call to 2BE
$D34    $0B8F   SYS      $B8F            ; System call to B8F
$D36    $58C9   UNKNOWN  $58C9           ; Unknown 5xxx instruction
$D38    $C2C1   RND      V2, #C1         ; V2 = random & C1
$D3A    $F998   UNKNOWN  F998            ; Unknown Fxxx instruction
$D3C    $2A8D   CALL     $A8D            ; Call subroutine at A8D
$D3E    $9C87   UNKNOWN  $9C87           ; Unknown 9xxx instruction
$D40    $F338   UNKNOWN  F338            ; Unknown Fxxx instruction
$D42    $AE0E   LD       I, $E0E         ; Load E0E into I
$D44    $14C1   JP       $4C1            ; Jump to 4C1
$D46    $F929   LD       F, V9           ; I = sprite address for digit V9
$D48    $C952   RND      V9, #52         ; V9 = random & 52
$D4A    $19B1   JP       $9B1            ; Jump to 9B1
$D4C    $F795   UNKNOWN  F795            ; Unknown Fxxx instruction
$D4E    $7CBB   ADD      VC, #BB         ; Add 187 to VC
$D50    $89CA   UNKNOWN  89CA            ; Unknown 8xxx instruction
$D52    $E539   UNKNOWN  $E539           ; Unknown Exxx instruction
$D54    $87E8   UNKNOWN  87E8            ; Unknown 8xxx instruction
$D56    $3C97   SE       VC, #97         ; Skip if VC == 151
$D58    $D2CC   DRW      V2, VC, #C      ; Draw 12-byte sprite at V2, VC
$D5A    $D8C0   DRW      V8, VC, #0      ; Draw 0-byte sprite at V8, VC
$D5C    $AB92   LD       I, $B92         ; Load B92 into I
$D5E    $D7E3   DRW      V7, VE, #3      ; Draw 3-byte sprite at V7, VE
$D60    $7EA5   ADD      VE, #A5         ; Add 165 to VE
$D62    $83B8   UNKNOWN  83B8            ; Unknown 8xxx instruction
$D64    $511C   UNKNOWN  $511C           ; Unknown 5xxx instruction
$D66    $D141   DRW      V1, V4, #1      ; Draw 1-byte sprite at V1, V4
$D68    $429C   SNE      V2, #9C         ; Skip if V2 != 156
$D6A    $2A1A   CALL     $A1A            ; Call subroutine at A1A
$D6C    $CB28   RND      VB, #28         ; VB = random & 28
$D6E    $908C   UNKNOWN  $908C           ; Unknown 9xxx instruction
$D70    $1A2B   JP       $A2B            ; Jump to A2B
$D72    $BDF7   JP       V0, $DF7        ; Jump to V0 + DF7
$D74    $61C3   LD       V1, #C3         ; Load 195 into V1
$D76    $F5DC   UNKNOWN  F5DC            ; Unknown Fxxx instruction
$D78    $63C6   LD       V3, #C6         ; Load 198 into V3
$D7A    $F24B   UNKNOWN  F24B            ; Unknown Fxxx instruction
$D7C    $DF18   DRW      VF, V1, #8      ; Draw 8-byte sprite at VF, V1
$D7E    $4EF5   SNE      VE, #F5         ; Skip if VE != 245
$D80    $13B5   JP       $3B5            ; Jump to 3B5
$D82    $D2D9   DRW      V2, VD, #9      ; Draw 9-byte sprite at V2, VD
$D84    $9B7B   UNKNOWN  $9B7B           ; Unknown 9xxx instruction
$D86    $C5C4   RND      V5, #C4         ; V5 = random & C4
$D88    $4267   SNE      V2, #67         ; Skip if V2 != 103
$D8A    $A569   LD       I, $569         ; Load 569 into I
$D8C    $A562   LD       I, $562         ; Load 562 into I
$D8E    $3921   SE       V9, #21         ; Skip if V9 == 33
$D90    $9FA5   UNKNOWN  $9FA5           ; Unknown 9xxx instruction
$D92    $71E4   ADD      V1, #E4         ; Add 228 to V1
$D94    $1D08   JP       $D08            ; Jump to D08
$D96    $9B89   UNKNOWN  $9B89           ; Unknown 9xxx instruction
$D98    $41AE   SNE      V1, #AE         ; Skip if V1 != 174
$D9A    $1E67   JP       $E67            ; Jump to E67
$D9C    $B220   JP       V0, $220        ; Jump to V0 + 220
$D9E    $B9A2   JP       V0, $9A2        ; Jump to V0 + 9A2
$DA0    $CAC6   RND      VA, #C6         ; VA = random & C6
$DA2    $403A   SNE      V0, #3A         ; Skip if V0 != 58
$DA4    $5950   SE       V9, V5          ; Skip if V9 == V5
$DA6    $5193   UNKNOWN  $5193           ; Unknown 5xxx instruction
$DA8    $0415   SYS      $415            ; System call to 415
$DAA    $A8DF   LD       I, $8DF         ; Load 8DF into I
$DAC    $5D9C   UNKNOWN  $5D9C           ; Unknown 5xxx instruction
$DAE    $5C0B   UNKNOWN  $5C0B           ; Unknown 5xxx instruction
$DB0    $783A   ADD      V8, #3A         ; Add 58 to V8
$DB2    $1BA2   JP       $BA2            ; Jump to BA2
$DB4    $E88A   UNKNOWN  $E88A           ; Unknown Exxx instruction
$DB6    $DD98   DRW      VD, V9, #8      ; Draw 8-byte sprite at VD, V9
$DB8    $2035   CALL     $035            ; Call subroutine at 035
$DBA    $8D12   AND      VD, V1          ; VD &= V1
$DBC    $5EBE   UNKNOWN  $5EBE           ; Unknown 5xxx instruction
$DBE    $D164   DRW      V1, V6, #4      ; Draw 4-byte sprite at V1, V6
$DC0    $A042   LD       I, $042         ; Load 042 into I
$DC2    $CF8D   RND      VF, #8D         ; VF = random & 8D
$DC4    $5301   UNKNOWN  $5301           ; Unknown 5xxx instruction
$DC6    $4988   SNE      V9, #88         ; Skip if V9 != 136
$DC8    $67CF   LD       V7, #CF         ; Load 207 into V7
$DCA    $36CE   SE       V6, #CE         ; Skip if V6 == 206
$DCC    $278B   CALL     $78B            ; Call subroutine at 78B
$DCE    $9658   UNKNOWN  $9658           ; Unknown 9xxx instruction
$DD0    $582A   UNKNOWN  $582A           ; Unknown 5xxx instruction
$DD2    $192A   JP       $92A            ; Jump to 92A
$DD4    $5983   UNKNOWN  $5983           ; Unknown 5xxx instruction
$DD6    $DCD2   DRW      VC, VD, #2      ; Draw 2-byte sprite at VC, VD
$DD8    $7CA0   ADD      VC, #A0         ; Add 160 to VC
$DDA    $A301   LD       I, $301         ; Load 301 into I
$DDC    $A390   LD       I, $390         ; Load 390 into I
$DDE    $4709   SNE      V7, #09         ; Skip if V7 != 9
$DE0    $C230   RND      V2, #30         ; V2 = random & 30
$DE2    $03D2   SYS      $3D2            ; System call to 3D2
$DE4    $ED9E   SKP      VD              ; Skip if key VD pressed
$DE6    $104B   JP       $04B            ; Jump to 04B
$DE8    $D3AA   DRW      V3, VA, #A      ; Draw 10-byte sprite at V3, VA
$DEA    $DE9E   DRW      VE, V9, #E      ; Draw 14-byte sprite at VE, V9
$DEC    $592D   UNKNOWN  $592D           ; Unknown 5xxx instruction
$DEE    $1F77   JP       $F77            ; Jump to F77
$DF0    $D5FD   DRW      V5, VF, #D      ; Draw 13-byte sprite at V5, VF
$DF2    $4E55   SNE      VE, #55         ; Skip if VE != 85
$DF4    $380D   SE       V8, #0D         ; Skip if V8 == 13
$DF6    $2441   CALL     $441            ; Call subroutine at 441
$DF8    $E324   UNKNOWN  $E324           ; Unknown Exxx instruction
$DFA    $F3C1   UNKNOWN  F3C1            ; Unknown Fxxx instruction
$DFC    $9C9D   UNKNOWN  $9C9D           ; Unknown 9xxx instruction
$DFE    $A16F   LD       I, $16F         ; Load 16F into I
$E00    $1064   JP       $064            ; Jump to 064
$E02    $0016   SYS      $016            ; System call to 016
$E04    $A7CD   LD       I, $7CD         ; Load 7CD into I
$E06    $96F0   SNE      V6, VF          ; Skip if V6 != VF
$E08    $1DC3   JP       $DC3            ; Jump to DC3
$E0A    $AA41   LD       I, $A41         ; Load A41 into I
$E0C    $B59E   JP       V0, $59E        ; Jump to V0 + 59E
$E0E    $EA57   UNKNOWN  $EA57           ; Unknown Exxx instruction
$E10    $740D   ADD      V4, #0D         ; Add 13 to V4
$E12    $F93C   UNKNOWN  F93C            ; Unknown Fxxx instruction
$E14    $BCBB   JP       V0, $CBB        ; Jump to V0 + CBB
$E16    $42F3   SNE      V2, #F3         ; Skip if V2 != 243
$E18    $36C2   SE       V6, #C2         ; Skip if V6 == 194
$E1A    $C94E   RND      V9, #4E         ; V9 = random & 4E
$E1C    $12E9   JP       $2E9            ; Jump to 2E9
$E1E    $06D5   SYS      $6D5            ; System call to 6D5
$E20    $31BD   SE       V1, #BD         ; Skip if V1 == 189
$E22    $BE0B   JP       V0, $E0B        ; Jump to V0 + E0B
$E24    $C50B   RND      V5, #0B         ; V5 = random & 0B
$E26    $08D2   SYS      $8D2            ; System call to 8D2
$E28    $3B82   SE       VB, #82         ; Skip if VB == 130
$E2A    $6E90   LD       VE, #90         ; Load 144 into VE
$E2C    $590C   UNKNOWN  $590C           ; Unknown 5xxx instruction
$E2E    $1057   JP       $057            ; Jump to 057
$E30    $8FBE   SHL      VF              ; VF <<= 1, VF = MSB
$E32    $D048   DRW      V0, V4, #8      ; Draw 8-byte sprite at V0, V4
$E34    $A29D   LD       I, $29D         ; Load 29D into I
$E36    $8F3F   UNKNOWN  8F3F            ; Unknown 8xxx instruction
$E38    $23FE   CALL     $3FE            ; Call subroutine at 3FE
$E3A    $58DB   UNKNOWN  $58DB           ; Unknown 5xxx instruction
$E3C    $1F8A   JP       $F8A            ; Jump to F8A
$E3E    $4A54   SNE      VA, #54         ; Skip if VA != 84
$E40    $F076   UNKNOWN  F076            ; Unknown Fxxx instruction
$E42    $6F09   LD       VF, #09         ; Load 9 into VF
$E44    $E48F   UNKNOWN  $E48F           ; Unknown Exxx instruction
$E46    $C23B   RND      V2, #3B         ; V2 = random & 3B
$E48    $2EEB   CALL     $EEB            ; Call subroutine at EEB
$E4A    $86D5   SUB      V6, VD          ; V6 -= VD, VF = !borrow
$E4C    $FCEF   UNKNOWN  FCEF            ; Unknown Fxxx instruction
$E4E    $A163   LD       I, $163         ; Load 163 into I
$E50    $6B9D   LD       VB, #9D         ; Load 157 into VB
$E52    $2FC4   CALL     $FC4            ; Call subroutine at FC4
$E54    $5299   UNKNOWN  $5299           ; Unknown 5xxx instruction
$E56    $A784   LD       I, $784         ; Load 784 into I
$E58    $9DD4   UNKNOWN  $9DD4           ; Unknown 9xxx instruction
$E5A    $9F44   UNKNOWN  $9F44           ; Unknown 9xxx instruction
$E5C    $8FF2   AND      VF, VF          ; VF &= VF
$E5E    $CF4F   RND      VF, #4F         ; VF = random & 4F
$E60    $2BDE   CALL     $BDE            ; Call subroutine at BDE
$E62    $F32A   UNKNOWN  F32A            ; Unknown Fxxx instruction
$E64    $EF55   UNKNOWN  $EF55           ; Unknown Exxx instruction
$E66    $3D64   SE       VD, #64         ; Skip if VD == 100
$E68    $2F34   CALL     $F34            ; Call subroutine at F34
$E6A    $4C28   SNE      VC, #28         ; Skip if VC != 40
$E6C    $740A   ADD      V4, #0A         ; Add 10 to V4
$E6E    $8D60   LD       VD, V6          ; VD = V6
$E70    $0A10   SYS      $A10            ; System call to A10
$E72    $A3E4   LD       I, $3E4         ; Load 3E4 into I
$E74    $5B95   UNKNOWN  $5B95           ; Unknown 5xxx instruction
$E76    $C6A2   RND      V6, #A2         ; V6 = random & A2
$E78    $EF99   UNKNOWN  $EF99           ; Unknown Exxx instruction
$E7A    $F974   UNKNOWN  F974            ; Unknown Fxxx instruction
$E7C    $AF54   LD       I, $F54         ; Load F54 into I
$E7E    $4F1D   SNE      VF, #1D         ; Skip if VF != 29
$E80    $AF8B   LD       I, $F8B         ; Load F8B into I
$E82    $FE00   UNKNOWN  FE00            ; Unknown Fxxx instruction
$E84    $ABE5   LD       I, $BE5         ; Load BE5 into I
$E86    $3C01   SE       VC, #01         ; Skip if VC == 1
$E88    $68E0   LD       V8, #E0         ; Load 224 into V8
$E8A    $493C   SNE      V9, #3C         ; Skip if V9 != 60
$E8C    $DE40   DRW      VE, V4, #0      ; Draw 0-byte sprite at VE, V4
$E8E    $DA70   DRW      VA, V7, #0      ; Draw 0-byte sprite at VA, V7
$E90    $13C4   JP       $3C4            ; Jump to 3C4
$E92    $0A3D   SYS      $A3D            ; System call to A3D
$E94    $A6AB   LD       I, $6AB         ; Load 6AB into I
$E96    $6ADD   LD       VA, #DD         ; Load 221 into VA
$E98    $11B0   JP       $1B0            ; Jump to 1B0
$E9A    $0178   SYS      $178            ; System call to 178
$E9C    $C32A   RND      V3, #2A         ; V3 = random & 2A
$E9E    $9BA4   UNKNOWN  $9BA4           ; Unknown 9xxx instruction
$EA0    $82F9   UNKNOWN  82F9            ; Unknown 8xxx instruction
$EA2    $1D17   JP       $D17            ; Jump to D17
$EA4    $DB07   DRW      VB, V0, #7      ; Draw 7-byte sprite at VB, V0
$EA6    $FE81   UNKNOWN  FE81            ; Unknown Fxxx instruction
$EA8    $E7EE   UNKNOWN  $E7EE           ; Unknown Exxx instruction
$EAA    $D908   DRW      V9, V0, #8      ; Draw 8-byte sprite at V9, V0
$EAC    $C887   RND      V8, #87         ; V8 = random & 87
$EAE    $4434   SNE      V4, #34         ; Skip if V4 != 52
$EB0    $83AE   SHL      V3              ; V3 <<= 1, VF = MSB
$EB2    $8A94   ADD      VA, V9          ; VA += V9, VF = carry
$EB4    $CD73   RND      VD, #73         ; VD = random & 73
$EB6    $D57F   DRW      V5, V7, #F      ; Draw 15-byte sprite at V5, V7
$EB8    $0E08   SYS      $E08            ; System call to E08
$EBA    $D51B   DRW      V5, V1, #B      ; Draw 11-byte sprite at V5, V1
$EBC    $B047   JP       V0, $047        ; Jump to V0 + 047
$EBE    $7A64   ADD      VA, #64         ; Add 100 to VA
$EC0    $091A   SYS      $91A            ; System call to 91A
$EC2    $C082   RND      V0, #82         ; V0 = random & 82
$EC4    $9A12   UNKNOWN  $9A12           ; Unknown 9xxx instruction
$EC6    $1ED3   JP       $ED3            ; Jump to ED3
$EC8    $F6CC   UNKNOWN  F6CC            ; Unknown Fxxx instruction
$ECA    $10D8   JP       $0D8            ; Jump to 0D8
$ECC    $61DE   LD       V1, #DE         ; Load 222 into V1
$ECE    $CECB   RND      VE, #CB         ; VE = random & CB
$ED0    $7FB6   ADD      VF, #B6         ; Add 182 to VF
$ED2    $2DE9   CALL     $DE9            ; Call subroutine at DE9
$ED4    $D86B   DRW      V8, V6, #B      ; Draw 11-byte sprite at V8, V6
$ED6    $158F   JP       $58F            ; Jump to 58F
$ED8    $B6C7   JP       V0, $6C7        ; Jump to V0 + 6C7
$EDA    $1D71   JP       $D71            ; Jump to D71
$EDC    $2029   CALL     $029            ; Call subroutine at 029
$EDE    $0AF6   SYS      $AF6            ; System call to AF6
$EE0    $C22D   RND      V2, #2D         ; V2 = random & 2D
$EE2    $3C4C   SE       VC, #4C         ; Skip if VC == 76
$EE4    $D95A   DRW      V9, V5, #A      ; Draw 10-byte sprite at V9, V5
$EE6    $1098   JP       $098            ; Jump to 098
$EE8    $34BA   SE       V4, #BA         ; Skip if V4 == 186
$EEA    $432C   SNE      V3, #2C         ; Skip if V3 != 44
$EEC    $64DF   LD       V4, #DF         ; Load 223 into V4
$EEE    $79F5   ADD      V9, #F5         ; Add 245 to V9
$EF0    $9F18   UNKNOWN  $9F18           ; Unknown 9xxx instruction
$EF2    $C513   RND      V5, #13         ; V5 = random & 13
$EF4    $FE1C   UNKNOWN  FE1C            ; Unknown Fxxx instruction
$EF6    $9FAC   UNKNOWN  $9FAC           ; Unknown 9xxx instruction
$EF8    $1045   JP       $045            ; Jump to 045
$EFA    $3E18   SE       VE, #18         ; Skip if VE == 24
$EFC    $3D56   SE       VD, #56         ; Skip if VD == 86
$EFE    $A57A   LD       I, $57A         ; Load 57A into I
$F00    $28A1   CALL     $8A1            ; Call subroutine at 8A1
$F02    $4790   SNE      V7, #90         ; Skip if V7 != 144
$F04    $351A   SE       V5, #1A         ; Skip if V5 == 26
$F06    $BB87   JP       V0, $B87        ; Jump to V0 + B87
$F08    $169B   JP       $69B            ; Jump to 69B
$F0A    $A557   LD       I, $557         ; Load 557 into I
$F0C    $D6B7   DRW      V6, VB, #7      ; Draw 7-byte sprite at V6, VB
$F0E    $D009   DRW      V0, V0, #9      ; Draw 9-byte sprite at V0, V0
$F10    $B621   JP       V0, $621        ; Jump to V0 + 621
$F12    $C19E   RND      V1, #9E         ; V1 = random & 9E
$F14    $7407   ADD      V4, #07         ; Add 7 to V4
$F16    $9DFC   UNKNOWN  $9DFC           ; Unknown 9xxx instruction
$F18    $49B9   SNE      V9, #B9         ; Skip if V9 != 185
$F1A    $7953   ADD      V9, #53         ; Add 83 to V9
$F1C    $5E5E   UNKNOWN  $5E5E           ; Unknown 5xxx instruction
$F1E    $3EA6   SE       VE, #A6         ; Skip if VE == 166
$F20    $5A5F   UNKNOWN  $5A5F           ; Unknown 5xxx instruction
$F22    $6880   LD       V8, #80         ; Load 128 into V8
$F24    $C177   RND      V1, #77         ; V1 = random & 77
$F26    $D5AD   DRW      V5, VA, #D      ; Draw 13-byte sprite at V5, VA
$F28    $8D5A   UNKNOWN  8D5A            ; Unknown 8xxx instruction
$F2A    $D77A   DRW      V7, V7, #A      ; Draw 10-byte sprite at V7, V7
$F2C    $41B8   SNE      V1, #B8         ; Skip if V1 != 184
$F2E    $6160   LD       V1, #60         ; Load 96 into V1
$F30    $7737   ADD      V7, #37         ; Add 55 to V7
$F32    $4E05   SNE      VE, #05         ; Skip if VE != 5
$F34    $0D1D   SYS      $D1D            ; System call to D1D
$F36    $46BC   SNE      V6, #BC         ; Skip if V6 != 188
$F38    $D2C0   DRW      V2, VC, #0      ; Draw 0-byte sprite at V2, VC
$F3A    $B0FD   JP       V0, $0FD        ; Jump to V0 + 0FD
$F3C    $392C   SE       V9, #2C         ; Skip if V9 == 44
$F3E    $CB33   RND      VB, #33         ; VB = random & 33
$F40    $293F   CALL     $93F            ; Call subroutine at 93F
$F42    $15F5   JP       $5F5            ; Jump to 5F5
$F44    $E047   UNKNOWN  $E047           ; Unknown Exxx instruction
$F46    $E539   UNKNOWN  $E539           ; Unknown Exxx instruction
$F48    $D4C7   DRW      V4, VC, #7      ; Draw 7-byte sprite at V4, VC
$F4A    $D04F   DRW      V0, V4, #F      ; Draw 15-byte sprite at V0, V4
$F4C    $E226   UNKNOWN  $E226           ; Unknown Exxx instruction
$F4E    $E628   UNKNOWN  $E628           ; Unknown Exxx instruction
$F50    $8403   XOR      V4, V0          ; V4 ^= V0
$F52    $0E99   SYS      $E99            ; System call to E99
$F54    $DD7E   DRW      VD, V7, #E      ; Draw 14-byte sprite at VD, V7
$F56    $A861   LD       I, $861         ; Load 861 into I
$F58    $DE8B   DRW      VE, V8, #B      ; Draw 11-byte sprite at VE, V8
$F5A    $E114   UNKNOWN  $E114           ; Unknown Exxx instruction
$F5C    $5C3D   UNKNOWN  $5C3D           ; Unknown 5xxx instruction
$F5E    $EE4C   UNKNOWN  $EE4C           ; Unknown Exxx instruction
$F60    $CFEE   RND      VF, #EE         ; VF = random & EE
$F62    $787E   ADD      V8, #7E         ; Add 126 to V8
$F64    $C3C1   RND      V3, #C1         ; V3 = random & C1
$F66    $61AE   LD       V1, #AE         ; Load 174 into V1
$F68    $7B3F   ADD      VB, #3F         ; Add 63 to VB
$F6A    $1F72   JP       $F72            ; Jump to F72
$F6C    $B65F   JP       V0, $65F        ; Jump to V0 + 65F
$F6E    $EE0F   UNKNOWN  $EE0F           ; Unknown Exxx instruction
$F70    $7FCB   ADD      VF, #CB         ; Add 203 to VF
$F72    $6C2D   LD       VC, #2D         ; Load 45 into VC
$F74    $399C   SE       V9, #9C         ; Skip if V9 == 156
$F76    $3D01   SE       VD, #01         ; Skip if VD == 1
$F78    $4B9B   SNE      VB, #9B         ; Skip if VB != 155
$F7A    $6A4D   LD       VA, #4D         ; Load 77 into VA
$F7C    $19DA   JP       $9DA            ; Jump to 9DA
$F7E    $F06F   UNKNOWN  F06F            ; Unknown Fxxx instruction
$F80    $5A85   UNKNOWN  $5A85           ; Unknown 5xxx instruction
$F82    $E836   UNKNOWN  $E836           ; Unknown Exxx instruction
$F84    $CECF   RND      VE, #CF         ; VE = random & CF
$F86    $2C51   CALL     $C51            ; Call subroutine at C51
$F88    $FEFE   UNKNOWN  FEFE            ; Unknown Fxxx instruction
$F8A    $32BC   SE       V2, #BC         ; Skip if V2 == 188
$F8C    $88C4   ADD      V8, VC          ; V8 += VC, VF = carry
$F8E    $A84F   LD       I, $84F         ; Load 84F into I
$F90    $3523   SE       V5, #23         ; Skip if V5 == 35
$F92    $9887   UNKNOWN  $9887           ; Unknown 9xxx instruction
$F94    $2F6E   CALL     $F6E            ; Call subroutine at F6E
$F96    $A9C2   LD       I, $9C2         ; Load 9C2 into I
$F98    $98B4   UNKNOWN  $98B4           ; Unknown 9xxx instruction
$F9A    $F814   UNKNOWN  F814            ; Unknown Fxxx instruction
$F9C    $4EF1   SNE      VE, #F1         ; Skip if VE != 241
$F9E    $3A1A   SE       VA, #1A         ; Skip if VA == 26
$FA0    $773E   ADD      V7, #3E         ; Add 62 to V7
$FA2    $17DE   JP       $7DE            ; Jump to 7DE
$FA4    $8385   SUB      V3, V8          ; V3 -= V8, VF = !borrow
$FA6    $261A   CALL     $61A            ; Call subroutine at 61A
$FA8    $EE2F   UNKNOWN  $EE2F           ; Unknown Exxx instruction
$FAA    $2CEB   CALL     $CEB            ; Call subroutine at CEB
$FAC    $D3E5   DRW      V3, VE, #5      ; Draw 5-byte sprite at V3, VE
$FAE    $0E2D   SYS      $E2D            ; System call to E2D
$FB0    $3363   SE       V3, #63         ; Skip if V3 == 99
$FB2    $6B04   LD       VB, #04         ; Load 4 into VB
$FB4    $6500   LD       V5, #00         ; Load 0 into V5
$FB6    $5137   UNKNOWN  $5137           ; Unknown 5xxx instruction
$FB8    $A293   LD       I, $293         ; Load 293 into I
$FBA    $60DD   LD       V0, #DD         ; Load 221 into V0
$FBC    $5C2E   UNKNOWN  $5C2E           ; Unknown 5xxx instruction
$FBE    $2576   CALL     $576            ; Call subroutine at 576
$FC0    $F11D   UNKNOWN  F11D            ; Unknown Fxxx instruction
$FC2    $6B61   LD       VB, #61         ; Load 97 into VB
$FC4    $6EE0   LD       VE, #E0         ; Load 224 into VE
$FC6    $4F0C   SNE      VF, #0C         ; Skip if VF != 12
$FC8    $F2F9   UNKNOWN  F2F9            ; Unknown Fxxx instruction
$FCA    $EF97   UNKNOWN  $EF97           ; Unknown Exxx instruction
$FCC    $E262   UNKNOWN  $E262           ; Unknown Exxx instruction
$FCE    $49FA   SNE      V9, #FA         ; Skip if V9 != 250
$FD0    $93F1   UNKNOWN  $93F1           ; Unknown 9xxx instruction
$FD2    $03AA   SYS      $3AA            ; System call to 3AA
$FD4    $DC91   DRW      VC, V9, #1      ; Draw 1-byte sprite at VC, V9
$FD6    $D2B6   DRW      V2, VB, #6      ; Draw 6-byte sprite at V2, VB
$FD8    $00B4   SYS      $0B4            ; System call to 0B4
$FDA    $A42A   LD       I, $42A         ; Load 42A into I
$FDC    $EFC8   UNKNOWN  $EFC8           ; Unknown Exxx instruction
$FDE    $80BC   UNKNOWN  80BC            ; Unknown 8xxx instruction
$FE0    $5FA2   UNKNOWN  $5FA2           ; Unknown 5xxx instruction
$FE2    $8F0A   UNKNOWN  8F0A            ; Unknown 8xxx instruction
$FE4    $716A   ADD      V1, #6A         ; Add 106 to V1
$FE6    $EE8C   UNKNOWN  $EE8C           ; Unknown Exxx instruction
$FE8    $B049   JP       V0, $049        ; Jump to V0 + 049
$FEA    $64E3   LD       V4, #E3         ; Load 227 into V4
$FEC    $16B4   JP       $6B4            ; Jump to 6B4
$FEE    $7BBF   ADD      VB, #BF         ; Add 191 to VB
$FF0    $F346   UNKNOWN  F346            ; Unknown Fxxx instruction
$FF2    $D863   DRW      V8, V6, #3      ; Draw 3-byte sprite at V8, V6
$FF4    $7ACB   ADD      VA, #CB         ; Add 203 to VA
$FF6    $6919   LD       V9, #19         ; Load 25 into V9
$FF8    $73B1   ADD      V3, #B1         ; Add 177 to V3
$FFA    $C2AF   RND      V2, #AF         ; V2 = random & AF
$FFC    $5E7F   UNKNOWN  $5E7F           ; Unknown 5xxx instruction
$FFE    $7EE9   ADD      VE, #E9         ; Add 233 to VE

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 509 (28.4%)
  JP      : 249 (13.9%)
  LD      : 204 (11.4%)
  ADD     : 134 ( 7.5%)
  SE      : 115 ( 6.4%)
  DRW     : 114 ( 6.4%)
  SNE     : 109 ( 6.1%)
  SYS     : 108 ( 6.0%)
  RND     : 104 ( 5.8%)
  CALL    :  97 ( 5.4%)
  XOR     :  10 ( 0.6%)
  SHL     :   8 ( 0.4%)
  AND     :   8 ( 0.4%)
  SUB     :   7 ( 0.4%)
  SUBN    :   5 ( 0.3%)
  OR      :   5 ( 0.3%)
  SKP     :   3 ( 0.2%)
  SHR     :   2 ( 0.1%)
  SKNP    :   1 ( 0.1%)

Memory Operations: 338 (18.9%)
Arithmetic Operations: 169 (9.4%)
