
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B1828D01_I19227_C19659_4f709ae7ee79.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 1828
Instance: 19227
Direction: descending
Final Array: [107, 107, 107, 107, 107, 107, 107, 99]
Operations: R:0 W:7 C:907 S:1

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 114
Sort Array References:
  $22A: LD I, $0BE ; Load 0BE into I
  $22E: LD I, $D2D ; Load D2D into I
  $24A: LD I, $A61 ; Load A61 into I
  $24E: LD I, $37B ; Load 37B into I
  $286: LD I, $7A8 ; Load 7A8 into I
  $30E: LD I, $AAB ; Load AAB into I
  $320: LD I, $9A6 ; Load 9A6 into I
  $32A: LD I, $55D ; Load 55D into I
  $37A: LD I, $95D ; Load 95D into I
  $392: LD I, $288 ; Load 288 into I
  $3A6: LD I, $110 ; Load 110 into I
  $3CA: LD I, $9B5 ; Load 9B5 into I
  $3E6: LD I, $6DA ; Load 6DA into I
  $410: LD I, $E0A ; Load E0A into I
  $466: LD I, $442 ; Load 442 into I
  $472: LD I, $D0D ; Load D0D into I
  $4A0: LD I, $56B ; Load 56B into I
  $4B2: LD I, $536 ; Load 536 into I
  $4CE: LD I, $D7F ; Load D7F into I
  $4D4: LD I, $4BB ; Load 4BB into I
  $4F4: LD I, $CFB ; Load CFB into I
  $502: LD I, $574 ; Load 574 into I
  $504: LD I, $352 ; Load 352 into I
  $520: LD I, $3C5 ; Load 3C5 into I
  $546: LD I, $86C ; Load 86C into I
  $558: LD I, $565 ; Load 565 into I
  $590: LD I, $F98 ; Load F98 into I
  $59E: LD I, $F5A ; Load F5A into I
  $5B8: LD I, $EBC ; Load EBC into I
  $5BC: LD I, $D4D ; Load D4D into I
  $5E8: LD I, $7A3 ; Load 7A3 into I
  $5FE: LD I, $E83 ; Load E83 into I
  $602: LD I, $7F9 ; Load 7F9 into I
  $604: LD I, $446 ; Load 446 into I
  $62A: LD I, $068 ; Load 068 into I
  $678: LD I, $2DE ; Load 2DE into I
  $67A: LD I, $CB6 ; Load CB6 into I
  $6A2: LD I, $75E ; Load 75E into I
  $6A8: LD I, $2DD ; Load 2DD into I
  $6BE: LD I, $77C ; Load 77C into I
  $6C6: LD I, $8C7 ; Load 8C7 into I
  $6D0: LD I, $72A ; Load 72A into I
  $6E6: LD I, $57A ; Load 57A into I
  $71A: LD I, $985 ; Load 985 into I
  $730: LD I, $9D4 ; Load 9D4 into I
  $748: LD I, $818 ; Load 818 into I
  $796: LD I, $B73 ; Load B73 into I
  $7B8: LD I, $68B ; Load 68B into I
  $7C0: LD I, $F53 ; Load F53 into I
  $7C6: LD I, $701 ; Load 701 into I
  $816: LD I, $98D ; Load 98D into I
  $818: LD I, $FF1 ; Load FF1 into I
  $828: LD I, $2A6 ; Load 2A6 into I
  $834: LD I, $A59 ; Load A59 into I
  $884: LD I, $808 ; Load 808 into I
  $8A6: LD I, $818 ; Load 818 into I
  $8B4: LD I, $88D ; Load 88D into I
  $8FA: LD I, $BE4 ; Load BE4 into I
  $928: LD I, $003 ; Load 003 into I
  $98A: LD I, $7DC ; Load 7DC into I
  $A08: LD I, $C83 ; Load C83 into I
  $A28: LD I, $2CF ; Load 2CF into I
  $A94: LD I, $E3A ; Load E3A into I
  $A9E: LD I, $E8C ; Load E8C into I
  $AB8: LD I, $198 ; Load 198 into I
  $ACC: LD I, $0CD ; Load 0CD into I
  $AEA: LD I, $466 ; Load 466 into I
  $B22: LD I, $AC2 ; Load AC2 into I
  $B28: LD I, $3CC ; Load 3CC into I
  $B3E: LD I, $98A ; Load 98A into I
  $B46: LD I, $5D8 ; Load 5D8 into I
  $BA6: LD I, $DBE ; Load DBE into I
  $BBC: LD I, $8E0 ; Load 8E0 into I
  $BD2: LD I, $FD1 ; Load FD1 into I
  $BD6: LD I, $477 ; Load 477 into I
  $BDE: LD I, $4DB ; Load 4DB into I
  $BE2: LD I, $16F ; Load 16F into I
  $BF4: LD I, $2D6 ; Load 2D6 into I
  $BF6: LD I, $220 ; Load 220 into I
  $C1A: LD I, $770 ; Load 770 into I
  $C2A: LD I, $C19 ; Load C19 into I
  $C30: LD I, $8AE ; Load 8AE into I
  $C50: LD I, $559 ; Load 559 into I
  $C56: LD I, $610 ; Load 610 into I
  $CA2: LD [I], V0 ; Store V0-V0 at I
  $D08: LD I, $9E7 ; Load 9E7 into I
  $D10: LD I, $EDE ; Load EDE into I
  $D1E: LD I, $23C ; Load 23C into I
  $D26: LD I, $7AD ; Load 7AD into I
  $D36: LD I, $A2D ; Load A2D into I
  $D3A: LD I, $0DE ; Load 0DE into I
  $D54: LD I, $8E9 ; Load 8E9 into I
  $D6C: LD I, $79C ; Load 79C into I
  $D72: LD I, $D10 ; Load D10 into I
  $D92: LD I, $EB4 ; Load EB4 into I
  $D98: LD I, $05C ; Load 05C into I
  $E14: LD I, $3AF ; Load 3AF into I
  $E4E: LD I, $FD3 ; Load FD3 into I
  $E62: LD I, $E09 ; Load E09 into I
  $E96: LD I, $7C9 ; Load 7C9 into I
  $ECA: LD I, $B70 ; Load B70 into I
  $EDC: LD I, $AB7 ; Load AB7 into I
  $EF4: LD I, $44A ; Load 44A into I
  $F02: LD I, $8BB ; Load 8BB into I
  $F06: LD I, $7CD ; Load 7CD into I
  $F22: LD I, $C0C ; Load C0C into I
  $F2A: LD I, $FD9 ; Load FD9 into I
  $F42: LD I, $DF6 ; Load DF6 into I
  $F6E: LD I, $126 ; Load 126 into I
  $F74: LD I, $A88 ; Load A88 into I
  $F98: LD I, $511 ; Load 511 into I
  $F9C: LD I, $D32 ; Load D32 into I
  $FD8: LD I, $D81 ; Load D81 into I
  $FDE: LD I, $FC9 ; Load FC9 into I

CONTROL FLOW ANALYSIS:
Jumps: 210
Calls: 111
Branches: 217
Loops: 136
Loop Structures:
  $260 -> $0AA (backward jump)
  $3F2 -> $34F (backward jump)
  $3F8 -> $1AA (backward jump)
  $426 -> $243 (backward jump)
  $428 -> $268 (backward jump)
  $450 -> $118 (backward jump)
  $526 -> $2C6 (backward jump)
  $532 -> $227 (backward jump)
  $540 -> $3A8 (backward jump)
  $554 -> $38B (backward jump)
  $55E -> $152 (backward jump)
  $584 -> $069 (backward jump)
  $5A4 -> $06F (backward jump)
  $5A6 -> $12C (backward jump)
  $5AC -> $462 (backward jump)
  $5C0 -> $400 (backward jump)
  $60E -> $04B (backward jump)
  $686 -> $2BE (backward jump)
  $6AA -> $40E (backward jump)
  $6B8 -> $46B (backward jump)
  $6C2 -> $221 (backward jump)
  $6CC -> $1F0 (backward jump)
  $6CE -> $42F (backward jump)
  $6DC -> $1A7 (backward jump)
  $6EA -> $2DE (backward jump)
  $704 -> $4F3 (backward jump)
  $73E -> $0B3 (backward jump)
  $744 -> $08E (backward jump)
  $784 -> $172 (backward jump)
  $792 -> $4AC (backward jump)
  $7A2 -> $407 (backward jump)
  $7AE -> $559 (backward jump)
  $7B4 -> $4B1 (backward jump)
  $7BA -> $214 (backward jump)
  $802 -> $476 (backward jump)
  $824 -> $118 (backward jump)
  $838 -> $741 (backward jump)
  $83E -> $287 (backward jump)
  $86E -> $256 (backward jump)
  $8B2 -> $004 (backward jump)
  $8B6 -> $039 (backward jump)
  $8BA -> $49E (backward jump)
  $8E6 -> $4A1 (backward jump)
  $8F4 -> $196 (backward jump)
  $8F6 -> $6D3 (backward jump)
  $90C -> $287 (backward jump)
  $92E -> $38C (backward jump)
  $958 -> $62C (backward jump)
  $960 -> $4F5 (backward jump)
  $962 -> $24F (backward jump)
  $966 -> $240 (backward jump)
  $96A -> $163 (backward jump)
  $984 -> $0A5 (backward jump)
  $98C -> $20B (backward jump)
  $98E -> $523 (backward jump)
  $9E0 -> $9B9 (backward jump)
  $9E6 -> $842 (backward jump)
  $9E8 -> $288 (backward jump)
  $9EC -> $456 (backward jump)
  $9F0 -> $2A5 (backward jump)
  $9F2 -> $08B (backward jump)
  $A38 -> $446 (backward jump)
  $A42 -> $13D (backward jump)
  $A5C -> $262 (backward jump)
  $A62 -> $1BD (backward jump)
  $A68 -> $0C4 (backward jump)
  $A6E -> $1D0 (backward jump)
  $A9A -> $272 (backward jump)
  $AE8 -> $84A (backward jump)
  $B02 -> $5A0 (backward jump)
  $B04 -> $960 (backward jump)
  $B10 -> $203 (backward jump)
  $B14 -> $6E0 (backward jump)
  $B1A -> $83C (backward jump)
  $B40 -> $013 (backward jump)
  $B44 -> $57A (backward jump)
  $B50 -> $5D1 (backward jump)
  $B6C -> $9DE (backward jump)
  $B9E -> $300 (backward jump)
  $BB0 -> $7FE (backward jump)
  $BB6 -> $2A8 (backward jump)
  $BC6 -> $6E7 (backward jump)
  $BD4 -> $949 (backward jump)
  $BD8 -> $553 (backward jump)
  $BE6 -> $05F (backward jump)
  $BFE -> $8A3 (backward jump)
  $C1C -> $516 (backward jump)
  $C46 -> $71F (backward jump)
  $C80 -> $20E (backward jump)
  $C9C -> $796 (backward jump)
  $CE2 -> $04F (backward jump)
  $CE6 -> $440 (backward jump)
  $D18 -> $B22 (backward jump)
  $D2E -> $002 (backward jump)
  $D42 -> $96B (backward jump)
  $D60 -> $858 (backward jump)
  $D76 -> $D24 (backward jump)
  $D7A -> $CDE (backward jump)
  $D88 -> $309 (backward jump)
  $DA8 -> $785 (backward jump)
  $DBE -> $27F (backward jump)
  $DCA -> $613 (backward jump)
  $DF6 -> $04C (backward jump)
  $E08 -> $9F8 (backward jump)
  $E0C -> $BF3 (backward jump)
  $E3E -> $699 (backward jump)
  $E68 -> $4FA (backward jump)
  $E6A -> $0E3 (backward jump)
  $E70 -> $79B (backward jump)
  $E9A -> $133 (backward jump)
  $EA2 -> $CB2 (backward jump)
  $EAA -> $88C (backward jump)
  $EC4 -> $922 (backward jump)
  $ED6 -> $38F (backward jump)
  $EE8 -> $CD5 (backward jump)
  $EEC -> $430 (backward jump)
  $F0E -> $D9F (backward jump)
  $F1E -> $430 (backward jump)
  $F26 -> $515 (backward jump)
  $F28 -> $150 (backward jump)
  $F2E -> $375 (backward jump)
  $F36 -> $E7C (backward jump)
  $F38 -> $B92 (backward jump)
  $F5C -> $187 (backward jump)
  $F64 -> $4EB (backward jump)
  $F66 -> $454 (backward jump)
  $F78 -> $C44 (backward jump)
  $F7E -> $D7C (backward jump)
  $F90 -> $6B5 (backward jump)
  $F94 -> $365 (backward jump)
  $FC8 -> $95F (backward jump)
  $FE4 -> $B57 (backward jump)
  $FEA -> $314 (backward jump)
  $FF2 -> $335 (backward jump)
  $FF4 -> $5D7 (backward jump)
  $FFA -> $415 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $8CFA   UNKNOWN  8CFA            ; Unknown 8xxx instruction
$202    $0E47   SYS      $E47            ; System call to E47
$204    $E7F5   UNKNOWN  $E7F5           ; Unknown Exxx instruction
$206    $835D   UNKNOWN  835D            ; Unknown 8xxx instruction
$208    $9AA8   UNKNOWN  $9AA8           ; Unknown 9xxx instruction
$20A    $8A21   OR       VA, V2          ; VA |= V2
$20C    $5C41   UNKNOWN  $5C41           ; Unknown 5xxx instruction
$20E    $8ADA   UNKNOWN  8ADA            ; Unknown 8xxx instruction
$210    $C472   RND      V4, #72         ; V4 = random & 72
$212    $3A8B   SE       VA, #8B         ; Skip if VA == 139
$214    $C57E   RND      V5, #7E         ; V5 = random & 7E
$216    $355B   SE       V5, #5B         ; Skip if V5 == 91
$218    $27F8   CALL     $7F8            ; Call subroutine at 7F8
$21A    $D8B7   DRW      V8, VB, #7      ; Draw 7-byte sprite at V8, VB
$21C    $2D26   CALL     $D26            ; Call subroutine at D26
$21E    $8320   LD       V3, V2          ; V3 = V2
$220    $F54E   UNKNOWN  F54E            ; Unknown Fxxx instruction
$222    $DEC2   DRW      VE, VC, #2      ; Draw 2-byte sprite at VE, VC
$224    $048C   SYS      $48C            ; System call to 48C
$226    $5479   UNKNOWN  $5479           ; Unknown 5xxx instruction
$228    $5051   UNKNOWN  $5051           ; Unknown 5xxx instruction
$22A    $A0BE   LD       I, $0BE         ; Load 0BE into I
$22C    $E35C   UNKNOWN  $E35C           ; Unknown Exxx instruction
$22E    $AD2D   LD       I, $D2D         ; Load D2D into I
$230    $6E7F   LD       VE, #7F         ; Load 127 into VE
$232    $003D   SYS      $03D            ; System call to 03D
$234    $84FF   UNKNOWN  84FF            ; Unknown 8xxx instruction
$236    $DFB4   DRW      VF, VB, #4      ; Draw 4-byte sprite at VF, VB
$238    $4903   SNE      V9, #03         ; Skip if V9 != 3
$23A    $06D4   SYS      $6D4            ; System call to 6D4
$23C    $F479   UNKNOWN  F479            ; Unknown Fxxx instruction
$23E    $1959   JP       $959            ; Jump to 959
$240    $71ED   ADD      V1, #ED         ; Add 237 to V1
$242    $C362   RND      V3, #62         ; V3 = random & 62
$244    $E7FC   UNKNOWN  $E7FC           ; Unknown Exxx instruction
$246    $2207   CALL     $207            ; Call subroutine at 207
$248    $3CA1   SE       VC, #A1         ; Skip if VC == 161
$24A    $AA61   LD       I, $A61         ; Load A61 into I
$24C    $F5CA   UNKNOWN  F5CA            ; Unknown Fxxx instruction
$24E    $A37B   LD       I, $37B         ; Load 37B into I
$250    $29A5   CALL     $9A5            ; Call subroutine at 9A5
$252    $2B6E   CALL     $B6E            ; Call subroutine at B6E
$254    $5326   UNKNOWN  $5326           ; Unknown 5xxx instruction
$256    $BFAA   JP       V0, $FAA        ; Jump to V0 + FAA
$258    $9F7E   UNKNOWN  $9F7E           ; Unknown 9xxx instruction
$25A    $C969   RND      V9, #69         ; V9 = random & 69
$25C    $4A95   SNE      VA, #95         ; Skip if VA != 149
$25E    $692C   LD       V9, #2C         ; Load 44 into V9
$260    $B0AA   JP       V0, $0AA        ; Jump to V0 + 0AA
$262    $C269   RND      V2, #69         ; V2 = random & 69
$264    $70CD   ADD      V0, #CD         ; Add 205 to V0
$266    $9976   UNKNOWN  $9976           ; Unknown 9xxx instruction
$268    $869A   UNKNOWN  869A            ; Unknown 8xxx instruction
$26A    $624A   LD       V2, #4A         ; Load 74 into V2
$26C    $0331   SYS      $331            ; System call to 331
$26E    $0620   SYS      $620            ; System call to 620
$270    $9089   UNKNOWN  $9089           ; Unknown 9xxx instruction
$272    $E220   UNKNOWN  $E220           ; Unknown Exxx instruction
$274    $6CED   LD       VC, #ED         ; Load 237 into VC
$276    $3E53   SE       VE, #53         ; Skip if VE == 83
$278    $7864   ADD      V8, #64         ; Add 100 to V8
$27A    $D6D9   DRW      V6, VD, #9      ; Draw 9-byte sprite at V6, VD
$27C    $0130   SYS      $130            ; System call to 130
$27E    $32A8   SE       V2, #A8         ; Skip if V2 == 168
$280    $1647   JP       $647            ; Jump to 647
$282    $8FD2   AND      VF, VD          ; VF &= VD
$284    $8E97   SUBN     VE, V9          ; VE = V9 - VE, VF = !borrow
$286    $A7A8   LD       I, $7A8         ; Load 7A8 into I
$288    $6B6B   LD       VB, #6B         ; Load 107 into VB
$28A    $6B6B   LD       VB, #6B         ; Load 107 into VB
$28C    $6B6B   LD       VB, #6B         ; Load 107 into VB
$28E    $6B6B   LD       VB, #6B         ; Load 107 into VB
$290    $6B6B   LD       VB, #6B         ; Load 107 into VB
$292    $6B6B   LD       VB, #6B         ; Load 107 into VB
$294    $6B6B   LD       VB, #6B         ; Load 107 into VB
$296    $6B6B   LD       VB, #6B         ; Load 107 into VB
$298    $6B6B   LD       VB, #6B         ; Load 107 into VB
$29A    $6B6B   LD       VB, #6B         ; Load 107 into VB
$29C    $6B6B   LD       VB, #6B         ; Load 107 into VB
$29E    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2A0    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2A2    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2A4    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2A6    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2A8    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2AA    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2AC    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2AE    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2B0    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2B2    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2B4    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2B6    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2B8    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2BA    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2BC    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2BE    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2C0    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2C2    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2C4    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2C6    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2C8    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2CA    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2CC    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2CE    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2D0    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2D2    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2D4    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2D6    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2D8    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2DA    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2DC    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2DE    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2E0    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2E2    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2E4    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2E6    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2E8    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2EA    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2EC    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2EE    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2F0    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2F2    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2F4    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2F6    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2F8    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2FA    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2FC    $6B6B   LD       VB, #6B         ; Load 107 into VB
$2FE    $6B6B   LD       VB, #6B         ; Load 107 into VB
$300    $6B6B   LD       VB, #6B         ; Load 107 into VB
$302    $6B6B   LD       VB, #6B         ; Load 107 into VB
$304    $6B6B   LD       VB, #6B         ; Load 107 into VB
$306    $6B63   LD       VB, #63         ; Load 99 into VB
$308    $5FE1   UNKNOWN  $5FE1           ; Unknown 5xxx instruction
$30A    $95F4   UNKNOWN  $95F4           ; Unknown 9xxx instruction
$30C    $3059   SE       V0, #59         ; Skip if V0 == 89
$30E    $AAAB   LD       I, $AAB         ; Load AAB into I
$310    $1A1A   JP       $A1A            ; Jump to A1A
$312    $D205   DRW      V2, V0, #5      ; Draw 5-byte sprite at V2, V0
$314    $828B   UNKNOWN  828B            ; Unknown 8xxx instruction
$316    $C98D   RND      V9, #8D         ; V9 = random & 8D
$318    $9FC0   SNE      VF, VC          ; Skip if VF != VC
$31A    $5199   UNKNOWN  $5199           ; Unknown 5xxx instruction
$31C    $24BA   CALL     $4BA            ; Call subroutine at 4BA
$31E    $6C77   LD       VC, #77         ; Load 119 into VC
$320    $A9A6   LD       I, $9A6         ; Load 9A6 into I
$322    $2560   CALL     $560            ; Call subroutine at 560
$324    $79CE   ADD      V9, #CE         ; Add 206 to V9
$326    $8B88   UNKNOWN  8B88            ; Unknown 8xxx instruction
$328    $F12A   UNKNOWN  F12A            ; Unknown Fxxx instruction
$32A    $A55D   LD       I, $55D         ; Load 55D into I
$32C    $B558   JP       V0, $558        ; Jump to V0 + 558
$32E    $937D   UNKNOWN  $937D           ; Unknown 9xxx instruction
$330    $FD60   UNKNOWN  FD60            ; Unknown Fxxx instruction
$332    $CC9D   RND      VC, #9D         ; VC = random & 9D
$334    $F5EC   UNKNOWN  F5EC            ; Unknown Fxxx instruction
$336    $EB27   UNKNOWN  $EB27           ; Unknown Exxx instruction
$338    $C515   RND      V5, #15         ; V5 = random & 15
$33A    $429E   SNE      V2, #9E         ; Skip if V2 != 158
$33C    $E787   UNKNOWN  $E787           ; Unknown Exxx instruction
$33E    $0A1E   SYS      $A1E            ; System call to A1E
$340    $D3E0   DRW      V3, VE, #0      ; Draw 0-byte sprite at V3, VE
$342    $79EF   ADD      V9, #EF         ; Add 239 to V9
$344    $9E4E   UNKNOWN  $9E4E           ; Unknown 9xxx instruction
$346    $0FD2   SYS      $FD2            ; System call to FD2
$348    $E06E   UNKNOWN  $E06E           ; Unknown Exxx instruction
$34A    $3297   SE       V2, #97         ; Skip if V2 == 151
$34C    $586E   UNKNOWN  $586E           ; Unknown 5xxx instruction
$34E    $3C14   SE       VC, #14         ; Skip if VC == 20
$350    $2334   CALL     $334            ; Call subroutine at 334
$352    $20CD   CALL     $0CD            ; Call subroutine at 0CD
$354    $2266   CALL     $266            ; Call subroutine at 266
$356    $440F   SNE      V4, #0F         ; Skip if V4 != 15
$358    $BE94   JP       V0, $E94        ; Jump to V0 + E94
$35A    $1C41   JP       $C41            ; Jump to C41
$35C    $702C   ADD      V0, #2C         ; Add 44 to V0
$35E    $4289   SNE      V2, #89         ; Skip if V2 != 137
$360    $3E87   SE       VE, #87         ; Skip if VE == 135
$362    $F30C   UNKNOWN  F30C            ; Unknown Fxxx instruction
$364    $75D2   ADD      V5, #D2         ; Add 210 to V5
$366    $042D   SYS      $42D            ; System call to 42D
$368    $B882   JP       V0, $882        ; Jump to V0 + 882
$36A    $C96A   RND      V9, #6A         ; V9 = random & 6A
$36C    $D80A   DRW      V8, V0, #A      ; Draw 10-byte sprite at V8, V0
$36E    $37D0   SE       V7, #D0         ; Skip if V7 == 208
$370    $C501   RND      V5, #01         ; V5 = random & 01
$372    $78C7   ADD      V8, #C7         ; Add 199 to V8
$374    $7272   ADD      V2, #72         ; Add 114 to V2
$376    $FAAD   UNKNOWN  FAAD            ; Unknown Fxxx instruction
$378    $DB84   DRW      VB, V8, #4      ; Draw 4-byte sprite at VB, V8
$37A    $A95D   LD       I, $95D         ; Load 95D into I
$37C    $E3C8   UNKNOWN  $E3C8           ; Unknown Exxx instruction
$37E    $8E1D   UNKNOWN  8E1D            ; Unknown 8xxx instruction
$380    $9948   UNKNOWN  $9948           ; Unknown 9xxx instruction
$382    $BF41   JP       V0, $F41        ; Jump to V0 + F41
$384    $8F47   SUBN     VF, V4          ; VF = V4 - VF, VF = !borrow
$386    $4968   SNE      V9, #68         ; Skip if V9 != 104
$388    $79A9   ADD      V9, #A9         ; Add 169 to V9
$38A    $6C51   LD       VC, #51         ; Load 81 into VC
$38C    $CE48   RND      VE, #48         ; VE = random & 48
$38E    $2ACB   CALL     $ACB            ; Call subroutine at ACB
$390    $777C   ADD      V7, #7C         ; Add 124 to V7
$392    $A288   LD       I, $288         ; Load 288 into I
$394    $1750   JP       $750            ; Jump to 750
$396    $FEB8   UNKNOWN  FEB8            ; Unknown Fxxx instruction
$398    $C885   RND      V8, #85         ; V8 = random & 85
$39A    $FF9C   UNKNOWN  FF9C            ; Unknown Fxxx instruction
$39C    $CEF7   RND      VE, #F7         ; VE = random & F7
$39E    $6D4B   LD       VD, #4B         ; Load 75 into VD
$3A0    $97F7   UNKNOWN  $97F7           ; Unknown 9xxx instruction
$3A2    $DDB4   DRW      VD, VB, #4      ; Draw 4-byte sprite at VD, VB
$3A4    $EF19   UNKNOWN  $EF19           ; Unknown Exxx instruction
$3A6    $A110   LD       I, $110         ; Load 110 into I
$3A8    $073A   SYS      $73A            ; System call to 73A
$3AA    $CBE7   RND      VB, #E7         ; VB = random & E7
$3AC    $D509   DRW      V5, V0, #9      ; Draw 9-byte sprite at V5, V0
$3AE    $0D6C   SYS      $D6C            ; System call to D6C
$3B0    $2EB3   CALL     $EB3            ; Call subroutine at EB3
$3B2    $7D78   ADD      VD, #78         ; Add 120 to VD
$3B4    $3825   SE       V8, #25         ; Skip if V8 == 37
$3B6    $617F   LD       V1, #7F         ; Load 127 into V1
$3B8    $3856   SE       V8, #56         ; Skip if V8 == 86
$3BA    $08F3   SYS      $8F3            ; System call to 8F3
$3BC    $6D55   LD       VD, #55         ; Load 85 into VD
$3BE    $8AAF   UNKNOWN  8AAF            ; Unknown 8xxx instruction
$3C0    $2E9D   CALL     $E9D            ; Call subroutine at E9D
$3C2    $D9FB   DRW      V9, VF, #B      ; Draw 11-byte sprite at V9, VF
$3C4    $EC4D   UNKNOWN  $EC4D           ; Unknown Exxx instruction
$3C6    $645B   LD       V4, #5B         ; Load 91 into V4
$3C8    $4C9E   SNE      VC, #9E         ; Skip if VC != 158
$3CA    $A9B5   LD       I, $9B5         ; Load 9B5 into I
$3CC    $6467   LD       V4, #67         ; Load 103 into V4
$3CE    $9CA3   UNKNOWN  $9CA3           ; Unknown 9xxx instruction
$3D0    $3054   SE       V0, #54         ; Skip if V0 == 84
$3D2    $714F   ADD      V1, #4F         ; Add 79 to V1
$3D4    $965C   UNKNOWN  $965C           ; Unknown 9xxx instruction
$3D6    $E376   UNKNOWN  $E376           ; Unknown Exxx instruction
$3D8    $4BF7   SNE      VB, #F7         ; Skip if VB != 247
$3DA    $806E   SHL      V0              ; V0 <<= 1, VF = MSB
$3DC    $43DA   SNE      V3, #DA         ; Skip if V3 != 218
$3DE    $0B1A   SYS      $B1A            ; System call to B1A
$3E0    $C787   RND      V7, #87         ; V7 = random & 87
$3E2    $6678   LD       V6, #78         ; Load 120 into V6
$3E4    $709C   ADD      V0, #9C         ; Add 156 to V0
$3E6    $A6DA   LD       I, $6DA         ; Load 6DA into I
$3E8    $26D5   CALL     $6D5            ; Call subroutine at 6D5
$3EA    $BC07   JP       V0, $C07        ; Jump to V0 + C07
$3EC    $68DB   LD       V8, #DB         ; Load 219 into V8
$3EE    $2BF6   CALL     $BF6            ; Call subroutine at BF6
$3F0    $567C   UNKNOWN  $567C           ; Unknown 5xxx instruction
$3F2    $B34F   JP       V0, $34F        ; Jump to V0 + 34F
$3F4    $489B   SNE      V8, #9B         ; Skip if V8 != 155
$3F6    $B9E9   JP       V0, $9E9        ; Jump to V0 + 9E9
$3F8    $11AA   JP       $1AA            ; Jump to 1AA
$3FA    $EDD8   UNKNOWN  $EDD8           ; Unknown Exxx instruction
$3FC    $3993   SE       V9, #93         ; Skip if V9 == 147
$3FE    $62AA   LD       V2, #AA         ; Load 170 into V2
$400    $43BB   SNE      V3, #BB         ; Skip if V3 != 187
$402    $202E   CALL     $02E            ; Call subroutine at 02E
$404    $37E7   SE       V7, #E7         ; Skip if V7 == 231
$406    $67D2   LD       V7, #D2         ; Load 210 into V7
$408    $2FD6   CALL     $FD6            ; Call subroutine at FD6
$40A    $F2BD   UNKNOWN  F2BD            ; Unknown Fxxx instruction
$40C    $0006   SYS      $006            ; System call to 006
$40E    $6167   LD       V1, #67         ; Load 103 into V1
$410    $AE0A   LD       I, $E0A         ; Load E0A into I
$412    $963C   UNKNOWN  $963C           ; Unknown 9xxx instruction
$414    $036B   SYS      $36B            ; System call to 36B
$416    $494A   SNE      V9, #4A         ; Skip if V9 != 74
$418    $5616   UNKNOWN  $5616           ; Unknown 5xxx instruction
$41A    $814E   SHL      V1              ; V1 <<= 1, VF = MSB
$41C    $9874   UNKNOWN  $9874           ; Unknown 9xxx instruction
$41E    $7421   ADD      V4, #21         ; Add 33 to V4
$420    $4C7F   SNE      VC, #7F         ; Skip if VC != 127
$422    $8024   ADD      V0, V2          ; V0 += V2, VF = carry
$424    $705D   ADD      V0, #5D         ; Add 93 to V0
$426    $B243   JP       V0, $243        ; Jump to V0 + 243
$428    $B268   JP       V0, $268        ; Jump to V0 + 268
$42A    $89E7   SUBN     V9, VE          ; V9 = VE - V9, VF = !borrow
$42C    $02DD   SYS      $2DD            ; System call to 2DD
$42E    $0E1D   SYS      $E1D            ; System call to E1D
$430    $F1C5   UNKNOWN  F1C5            ; Unknown Fxxx instruction
$432    $B50F   JP       V0, $50F        ; Jump to V0 + 50F
$434    $2F4E   CALL     $F4E            ; Call subroutine at F4E
$436    $EAAD   UNKNOWN  $EAAD           ; Unknown Exxx instruction
$438    $0B97   SYS      $B97            ; System call to B97
$43A    $2CE3   CALL     $CE3            ; Call subroutine at CE3
$43C    $3621   SE       V6, #21         ; Skip if V6 == 33
$43E    $803F   UNKNOWN  803F            ; Unknown 8xxx instruction
$440    $EF1D   UNKNOWN  $EF1D           ; Unknown Exxx instruction
$442    $7119   ADD      V1, #19         ; Add 25 to V1
$444    $EC78   UNKNOWN  $EC78           ; Unknown Exxx instruction
$446    $20B2   CALL     $0B2            ; Call subroutine at 0B2
$448    $9EE1   UNKNOWN  $9EE1           ; Unknown 9xxx instruction
$44A    $03E6   SYS      $3E6            ; System call to 3E6
$44C    $98A2   UNKNOWN  $98A2           ; Unknown 9xxx instruction
$44E    $25B1   CALL     $5B1            ; Call subroutine at 5B1
$450    $B118   JP       V0, $118        ; Jump to V0 + 118
$452    $99A3   UNKNOWN  $99A3           ; Unknown 9xxx instruction
$454    $F8D6   UNKNOWN  F8D6            ; Unknown Fxxx instruction
$456    $D49E   DRW      V4, V9, #E      ; Draw 14-byte sprite at V4, V9
$458    $0D38   SYS      $D38            ; System call to D38
$45A    $7A8D   ADD      VA, #8D         ; Add 141 to VA
$45C    $244B   CALL     $44B            ; Call subroutine at 44B
$45E    $89DC   UNKNOWN  89DC            ; Unknown 8xxx instruction
$460    $1A9D   JP       $A9D            ; Jump to A9D
$462    $1FEC   JP       $FEC            ; Jump to FEC
$464    $F574   UNKNOWN  F574            ; Unknown Fxxx instruction
$466    $A442   LD       I, $442         ; Load 442 into I
$468    $E22E   UNKNOWN  $E22E           ; Unknown Exxx instruction
$46A    $270C   CALL     $70C            ; Call subroutine at 70C
$46C    $7766   ADD      V7, #66         ; Add 102 to V7
$46E    $9C29   UNKNOWN  $9C29           ; Unknown 9xxx instruction
$470    $7973   ADD      V9, #73         ; Add 115 to V9
$472    $AD0D   LD       I, $D0D         ; Load D0D into I
$474    $C432   RND      V4, #32         ; V4 = random & 32
$476    $5AD0   SE       VA, VD          ; Skip if VA == VD
$478    $272F   CALL     $72F            ; Call subroutine at 72F
$47A    $C85A   RND      V8, #5A         ; V8 = random & 5A
$47C    $7B36   ADD      VB, #36         ; Add 54 to VB
$47E    $58F0   SE       V8, VF          ; Skip if V8 == VF
$480    $0F3F   SYS      $F3F            ; System call to F3F
$482    $37D2   SE       V7, #D2         ; Skip if V7 == 210
$484    $C3E6   RND      V3, #E6         ; V3 = random & E6
$486    $4FA4   SNE      VF, #A4         ; Skip if VF != 164
$488    $F43F   UNKNOWN  F43F            ; Unknown Fxxx instruction
$48A    $E185   UNKNOWN  $E185           ; Unknown Exxx instruction
$48C    $4F93   SNE      VF, #93         ; Skip if VF != 147
$48E    $0FBE   SYS      $FBE            ; System call to FBE
$490    $0CAA   SYS      $CAA            ; System call to CAA
$492    $974D   UNKNOWN  $974D           ; Unknown 9xxx instruction
$494    $EBA8   UNKNOWN  $EBA8           ; Unknown Exxx instruction
$496    $25E2   CALL     $5E2            ; Call subroutine at 5E2
$498    $7EF9   ADD      VE, #F9         ; Add 249 to VE
$49A    $28CB   CALL     $8CB            ; Call subroutine at 8CB
$49C    $2C55   CALL     $C55            ; Call subroutine at C55
$49E    $7F8A   ADD      VF, #8A         ; Add 138 to VF
$4A0    $A56B   LD       I, $56B         ; Load 56B into I
$4A2    $D048   DRW      V0, V4, #8      ; Draw 8-byte sprite at V0, V4
$4A4    $0F50   SYS      $F50            ; System call to F50
$4A6    $455F   SNE      V5, #5F         ; Skip if V5 != 95
$4A8    $6AA9   LD       VA, #A9         ; Load 169 into VA
$4AA    $0907   SYS      $907            ; System call to 907
$4AC    $B9B3   JP       V0, $9B3        ; Jump to V0 + 9B3
$4AE    $2576   CALL     $576            ; Call subroutine at 576
$4B0    $3510   SE       V5, #10         ; Skip if V5 == 16
$4B2    $A536   LD       I, $536         ; Load 536 into I
$4B4    $405C   SNE      V0, #5C         ; Skip if V0 != 92
$4B6    $DA4B   DRW      VA, V4, #B      ; Draw 11-byte sprite at VA, V4
$4B8    $C7FC   RND      V7, #FC         ; V7 = random & FC
$4BA    $D28E   DRW      V2, V8, #E      ; Draw 14-byte sprite at V2, V8
$4BC    $55F2   UNKNOWN  $55F2           ; Unknown 5xxx instruction
$4BE    $7E3E   ADD      VE, #3E         ; Add 62 to VE
$4C0    $7A46   ADD      VA, #46         ; Add 70 to VA
$4C2    $15AF   JP       $5AF            ; Jump to 5AF
$4C4    $6406   LD       V4, #06         ; Load 6 into V4
$4C6    $FBBE   UNKNOWN  FBBE            ; Unknown Fxxx instruction
$4C8    $4A2C   SNE      VA, #2C         ; Skip if VA != 44
$4CA    $FA8E   UNKNOWN  FA8E            ; Unknown Fxxx instruction
$4CC    $0C06   SYS      $C06            ; System call to C06
$4CE    $AD7F   LD       I, $D7F         ; Load D7F into I
$4D0    $8766   SHR      V7              ; V7 >>= 1, VF = LSB
$4D2    $F2E0   UNKNOWN  F2E0            ; Unknown Fxxx instruction
$4D4    $A4BB   LD       I, $4BB         ; Load 4BB into I
$4D6    $DEE2   DRW      VE, VE, #2      ; Draw 2-byte sprite at VE, VE
$4D8    $7898   ADD      V8, #98         ; Add 152 to V8
$4DA    $7399   ADD      V3, #99         ; Add 153 to V3
$4DC    $DE0C   DRW      VE, V0, #C      ; Draw 12-byte sprite at VE, V0
$4DE    $D244   DRW      V2, V4, #4      ; Draw 4-byte sprite at V2, V4
$4E0    $D528   DRW      V5, V2, #8      ; Draw 8-byte sprite at V5, V2
$4E2    $E450   UNKNOWN  $E450           ; Unknown Exxx instruction
$4E4    $24A7   CALL     $4A7            ; Call subroutine at 4A7
$4E6    $5763   UNKNOWN  $5763           ; Unknown 5xxx instruction
$4E8    $35D5   SE       V5, #D5         ; Skip if V5 == 213
$4EA    $D876   DRW      V8, V7, #6      ; Draw 6-byte sprite at V8, V7
$4EC    $09ED   SYS      $9ED            ; System call to 9ED
$4EE    $74A8   ADD      V4, #A8         ; Add 168 to V4
$4F0    $44AF   SNE      V4, #AF         ; Skip if V4 != 175
$4F2    $2251   CALL     $251            ; Call subroutine at 251
$4F4    $ACFB   LD       I, $CFB         ; Load CFB into I
$4F6    $FA38   UNKNOWN  FA38            ; Unknown Fxxx instruction
$4F8    $90FB   UNKNOWN  $90FB           ; Unknown 9xxx instruction
$4FA    $C90B   RND      V9, #0B         ; V9 = random & 0B
$4FC    $95F9   UNKNOWN  $95F9           ; Unknown 9xxx instruction
$4FE    $F85A   UNKNOWN  F85A            ; Unknown Fxxx instruction
$500    $84F1   OR       V4, VF          ; V4 |= VF
$502    $A574   LD       I, $574         ; Load 574 into I
$504    $A352   LD       I, $352         ; Load 352 into I
$506    $B586   JP       V0, $586        ; Jump to V0 + 586
$508    $B560   JP       V0, $560        ; Jump to V0 + 560
$50A    $1576   JP       $576            ; Jump to 576
$50C    $F035   UNKNOWN  F035            ; Unknown Fxxx instruction
$50E    $026C   SYS      $26C            ; System call to 26C
$510    $62C9   LD       V2, #C9         ; Load 201 into V2
$512    $55C0   SE       V5, VC          ; Skip if V5 == VC
$514    $C650   RND      V6, #50         ; V6 = random & 50
$516    $04D6   SYS      $4D6            ; System call to 4D6
$518    $F57B   UNKNOWN  F57B            ; Unknown Fxxx instruction
$51A    $EA9D   UNKNOWN  $EA9D           ; Unknown Exxx instruction
$51C    $0242   SYS      $242            ; System call to 242
$51E    $C4A2   RND      V4, #A2         ; V4 = random & A2
$520    $A3C5   LD       I, $3C5         ; Load 3C5 into I
$522    $0868   SYS      $868            ; System call to 868
$524    $8AB2   AND      VA, VB          ; VA &= VB
$526    $12C6   JP       $2C6            ; Jump to 2C6
$528    $6848   LD       V8, #48         ; Load 72 into V8
$52A    $9AE6   UNKNOWN  $9AE6           ; Unknown 9xxx instruction
$52C    $0280   SYS      $280            ; System call to 280
$52E    $856F   UNKNOWN  856F            ; Unknown 8xxx instruction
$530    $D222   DRW      V2, V2, #2      ; Draw 2-byte sprite at V2, V2
$532    $B227   JP       V0, $227        ; Jump to V0 + 227
$534    $C89D   RND      V8, #9D         ; V8 = random & 9D
$536    $2D2A   CALL     $D2A            ; Call subroutine at D2A
$538    $C2D4   RND      V2, #D4         ; V2 = random & D4
$53A    $EDC6   UNKNOWN  $EDC6           ; Unknown Exxx instruction
$53C    $E54D   UNKNOWN  $E54D           ; Unknown Exxx instruction
$53E    $C93E   RND      V9, #3E         ; V9 = random & 3E
$540    $B3A8   JP       V0, $3A8        ; Jump to V0 + 3A8
$542    $F3DC   UNKNOWN  F3DC            ; Unknown Fxxx instruction
$544    $FB87   UNKNOWN  FB87            ; Unknown Fxxx instruction
$546    $A86C   LD       I, $86C         ; Load 86C into I
$548    $FEB2   UNKNOWN  FEB2            ; Unknown Fxxx instruction
$54A    $E6BA   UNKNOWN  $E6BA           ; Unknown Exxx instruction
$54C    $EE2C   UNKNOWN  $EE2C           ; Unknown Exxx instruction
$54E    $8D40   LD       VD, V4          ; VD = V4
$550    $616D   LD       V1, #6D         ; Load 109 into V1
$552    $2FD0   CALL     $FD0            ; Call subroutine at FD0
$554    $138B   JP       $38B            ; Jump to 38B
$556    $7BF4   ADD      VB, #F4         ; Add 244 to VB
$558    $A565   LD       I, $565         ; Load 565 into I
$55A    $CACF   RND      VA, #CF         ; VA = random & CF
$55C    $DB38   DRW      VB, V3, #8      ; Draw 8-byte sprite at VB, V3
$55E    $B152   JP       V0, $152        ; Jump to V0 + 152
$560    $FE95   UNKNOWN  FE95            ; Unknown Fxxx instruction
$562    $85A3   XOR      V5, VA          ; V5 ^= VA
$564    $FF6D   UNKNOWN  FF6D            ; Unknown Fxxx instruction
$566    $2063   CALL     $063            ; Call subroutine at 063
$568    $1FD0   JP       $FD0            ; Jump to FD0
$56A    $160A   JP       $60A            ; Jump to 60A
$56C    $9FC3   UNKNOWN  $9FC3           ; Unknown 9xxx instruction
$56E    $317A   SE       V1, #7A         ; Skip if V1 == 122
$570    $F667   UNKNOWN  F667            ; Unknown Fxxx instruction
$572    $DDA9   DRW      VD, VA, #9      ; Draw 9-byte sprite at VD, VA
$574    $21EB   CALL     $1EB            ; Call subroutine at 1EB
$576    $5CC0   SE       VC, VC          ; Skip if VC == VC
$578    $5E1D   UNKNOWN  $5E1D           ; Unknown 5xxx instruction
$57A    $F64E   UNKNOWN  F64E            ; Unknown Fxxx instruction
$57C    $4D41   SNE      VD, #41         ; Skip if VD != 65
$57E    $07B8   SYS      $7B8            ; System call to 7B8
$580    $D34D   DRW      V3, V4, #D      ; Draw 13-byte sprite at V3, V4
$582    $2831   CALL     $831            ; Call subroutine at 831
$584    $1069   JP       $069            ; Jump to 069
$586    $83B9   UNKNOWN  83B9            ; Unknown 8xxx instruction
$588    $7921   ADD      V9, #21         ; Add 33 to V9
$58A    $8003   XOR      V0, V0          ; V0 ^= V0
$58C    $0CED   SYS      $CED            ; System call to CED
$58E    $0DFF   SYS      $DFF            ; System call to DFF
$590    $AF98   LD       I, $F98         ; Load F98 into I
$592    $BEDB   JP       V0, $EDB        ; Jump to V0 + EDB
$594    $05DA   SYS      $5DA            ; System call to 5DA
$596    $7867   ADD      V8, #67         ; Add 103 to V8
$598    $C5B4   RND      V5, #B4         ; V5 = random & B4
$59A    $44DD   SNE      V4, #DD         ; Skip if V4 != 221
$59C    $F762   UNKNOWN  F762            ; Unknown Fxxx instruction
$59E    $AF5A   LD       I, $F5A         ; Load F5A into I
$5A0    $2DA1   CALL     $DA1            ; Call subroutine at DA1
$5A2    $ED98   UNKNOWN  $ED98           ; Unknown Exxx instruction
$5A4    $106F   JP       $06F            ; Jump to 06F
$5A6    $112C   JP       $12C            ; Jump to 12C
$5A8    $DBCE   DRW      VB, VC, #E      ; Draw 14-byte sprite at VB, VC
$5AA    $61F6   LD       V1, #F6         ; Load 246 into V1
$5AC    $1462   JP       $462            ; Jump to 462
$5AE    $9133   UNKNOWN  $9133           ; Unknown 9xxx instruction
$5B0    $EA57   UNKNOWN  $EA57           ; Unknown Exxx instruction
$5B2    $5D2C   UNKNOWN  $5D2C           ; Unknown 5xxx instruction
$5B4    $B657   JP       V0, $657        ; Jump to V0 + 657
$5B6    $FFAF   UNKNOWN  FFAF            ; Unknown Fxxx instruction
$5B8    $AEBC   LD       I, $EBC         ; Load EBC into I
$5BA    $FFE4   UNKNOWN  FFE4            ; Unknown Fxxx instruction
$5BC    $AD4D   LD       I, $D4D         ; Load D4D into I
$5BE    $C826   RND      V8, #26         ; V8 = random & 26
$5C0    $B400   JP       V0, $400        ; Jump to V0 + 400
$5C2    $41A2   SNE      V1, #A2         ; Skip if V1 != 162
$5C4    $EDAB   UNKNOWN  $EDAB           ; Unknown Exxx instruction
$5C6    $784D   ADD      V8, #4D         ; Add 77 to V8
$5C8    $983D   UNKNOWN  $983D           ; Unknown 9xxx instruction
$5CA    $EFED   UNKNOWN  $EFED           ; Unknown Exxx instruction
$5CC    $7AB9   ADD      VA, #B9         ; Add 185 to VA
$5CE    $17B0   JP       $7B0            ; Jump to 7B0
$5D0    $08BD   SYS      $8BD            ; System call to 8BD
$5D2    $2D33   CALL     $D33            ; Call subroutine at D33
$5D4    $2D5F   CALL     $D5F            ; Call subroutine at D5F
$5D6    $E47A   UNKNOWN  $E47A           ; Unknown Exxx instruction
$5D8    $6277   LD       V2, #77         ; Load 119 into V2
$5DA    $B6D1   JP       V0, $6D1        ; Jump to V0 + 6D1
$5DC    $6787   LD       V7, #87         ; Load 135 into V7
$5DE    $19BF   JP       $9BF            ; Jump to 9BF
$5E0    $8891   OR       V8, V9          ; V8 |= V9
$5E2    $481A   SNE      V8, #1A         ; Skip if V8 != 26
$5E4    $250F   CALL     $50F            ; Call subroutine at 50F
$5E6    $E1FE   UNKNOWN  $E1FE           ; Unknown Exxx instruction
$5E8    $A7A3   LD       I, $7A3         ; Load 7A3 into I
$5EA    $31C0   SE       V1, #C0         ; Skip if V1 == 192
$5EC    $BAD0   JP       V0, $AD0        ; Jump to V0 + AD0
$5EE    $8B4C   UNKNOWN  8B4C            ; Unknown 8xxx instruction
$5F0    $7CD1   ADD      VC, #D1         ; Add 209 to VC
$5F2    $DCD4   DRW      VC, VD, #4      ; Draw 4-byte sprite at VC, VD
$5F4    $F44B   UNKNOWN  F44B            ; Unknown Fxxx instruction
$5F6    $47B5   SNE      V7, #B5         ; Skip if V7 != 181
$5F8    $F1D7   UNKNOWN  F1D7            ; Unknown Fxxx instruction
$5FA    $4CA7   SNE      VC, #A7         ; Skip if VC != 167
$5FC    $1C5E   JP       $C5E            ; Jump to C5E
$5FE    $AE83   LD       I, $E83         ; Load E83 into I
$600    $298F   CALL     $98F            ; Call subroutine at 98F
$602    $A7F9   LD       I, $7F9         ; Load 7F9 into I
$604    $A446   LD       I, $446         ; Load 446 into I
$606    $E4D7   UNKNOWN  $E4D7           ; Unknown Exxx instruction
$608    $6315   LD       V3, #15         ; Load 21 into V3
$60A    $BDBF   JP       V0, $DBF        ; Jump to V0 + DBF
$60C    $E32A   UNKNOWN  $E32A           ; Unknown Exxx instruction
$60E    $104B   JP       $04B            ; Jump to 04B
$610    $7685   ADD      V6, #85         ; Add 133 to V6
$612    $DBB5   DRW      VB, VB, #5      ; Draw 5-byte sprite at VB, VB
$614    $D859   DRW      V8, V5, #9      ; Draw 9-byte sprite at V8, V5
$616    $7539   ADD      V5, #39         ; Add 57 to V5
$618    $C057   RND      V0, #57         ; V0 = random & 57
$61A    $539E   UNKNOWN  $539E           ; Unknown 5xxx instruction
$61C    $77DD   ADD      V7, #DD         ; Add 221 to V7
$61E    $8EFB   UNKNOWN  8EFB            ; Unknown 8xxx instruction
$620    $31D1   SE       V1, #D1         ; Skip if V1 == 209
$622    $9713   UNKNOWN  $9713           ; Unknown 9xxx instruction
$624    $5288   UNKNOWN  $5288           ; Unknown 5xxx instruction
$626    $47A8   SNE      V7, #A8         ; Skip if V7 != 168
$628    $789A   ADD      V8, #9A         ; Add 154 to V8
$62A    $A068   LD       I, $068         ; Load 068 into I
$62C    $D2A4   DRW      V2, VA, #4      ; Draw 4-byte sprite at V2, VA
$62E    $3868   SE       V8, #68         ; Skip if V8 == 104
$630    $8368   UNKNOWN  8368            ; Unknown 8xxx instruction
$632    $EFCC   UNKNOWN  $EFCC           ; Unknown Exxx instruction
$634    $D281   DRW      V2, V8, #1      ; Draw 1-byte sprite at V2, V8
$636    $9D63   UNKNOWN  $9D63           ; Unknown 9xxx instruction
$638    $B698   JP       V0, $698        ; Jump to V0 + 698
$63A    $0172   SYS      $172            ; System call to 172
$63C    $192C   JP       $92C            ; Jump to 92C
$63E    $0E6B   SYS      $E6B            ; System call to E6B
$640    $1E6F   JP       $E6F            ; Jump to E6F
$642    $58B4   UNKNOWN  $58B4           ; Unknown 5xxx instruction
$644    $2A16   CALL     $A16            ; Call subroutine at A16
$646    $6E9E   LD       VE, #9E         ; Load 158 into VE
$648    $564A   UNKNOWN  $564A           ; Unknown 5xxx instruction
$64A    $4A99   SNE      VA, #99         ; Skip if VA != 153
$64C    $0380   SYS      $380            ; System call to 380
$64E    $D18A   DRW      V1, V8, #A      ; Draw 10-byte sprite at V1, V8
$650    $F7B5   UNKNOWN  F7B5            ; Unknown Fxxx instruction
$652    $35FB   SE       V5, #FB         ; Skip if V5 == 251
$654    $41E4   SNE      V1, #E4         ; Skip if V1 != 228
$656    $3A8C   SE       VA, #8C         ; Skip if VA == 140
$658    $0BE8   SYS      $BE8            ; System call to BE8
$65A    $E968   UNKNOWN  $E968           ; Unknown Exxx instruction
$65C    $5C03   UNKNOWN  $5C03           ; Unknown 5xxx instruction
$65E    $3442   SE       V4, #42         ; Skip if V4 == 66
$660    $C208   RND      V2, #08         ; V2 = random & 08
$662    $DA9B   DRW      VA, V9, #B      ; Draw 11-byte sprite at VA, V9
$664    $628D   LD       V2, #8D         ; Load 141 into V2
$666    $3EA7   SE       VE, #A7         ; Skip if VE == 167
$668    $9F45   UNKNOWN  $9F45           ; Unknown 9xxx instruction
$66A    $46D0   SNE      V6, #D0         ; Skip if V6 != 208
$66C    $6F15   LD       VF, #15         ; Load 21 into VF
$66E    $9020   SNE      V0, V2          ; Skip if V0 != V2
$670    $9919   UNKNOWN  $9919           ; Unknown 9xxx instruction
$672    $53D3   UNKNOWN  $53D3           ; Unknown 5xxx instruction
$674    $343D   SE       V4, #3D         ; Skip if V4 == 61
$676    $D644   DRW      V6, V4, #4      ; Draw 4-byte sprite at V6, V4
$678    $A2DE   LD       I, $2DE         ; Load 2DE into I
$67A    $ACB6   LD       I, $CB6         ; Load CB6 into I
$67C    $BD1B   JP       V0, $D1B        ; Jump to V0 + D1B
$67E    $7CDD   ADD      VC, #DD         ; Add 221 to VC
$680    $7191   ADD      V1, #91         ; Add 145 to V1
$682    $CC13   RND      VC, #13         ; VC = random & 13
$684    $F240   UNKNOWN  F240            ; Unknown Fxxx instruction
$686    $12BE   JP       $2BE            ; Jump to 2BE
$688    $D52E   DRW      V5, V2, #E      ; Draw 14-byte sprite at V5, V2
$68A    $2FD3   CALL     $FD3            ; Call subroutine at FD3
$68C    $30ED   SE       V0, #ED         ; Skip if V0 == 237
$68E    $2C3B   CALL     $C3B            ; Call subroutine at C3B
$690    $70CD   ADD      V0, #CD         ; Add 205 to V0
$692    $6E30   LD       VE, #30         ; Load 48 into VE
$694    $8AD8   UNKNOWN  8AD8            ; Unknown 8xxx instruction
$696    $756C   ADD      V5, #6C         ; Add 108 to V5
$698    $955F   UNKNOWN  $955F           ; Unknown 9xxx instruction
$69A    $4AD3   SNE      VA, #D3         ; Skip if VA != 211
$69C    $8C3B   UNKNOWN  8C3B            ; Unknown 8xxx instruction
$69E    $8C3F   UNKNOWN  8C3F            ; Unknown 8xxx instruction
$6A0    $2159   CALL     $159            ; Call subroutine at 159
$6A2    $A75E   LD       I, $75E         ; Load 75E into I
$6A4    $6518   LD       V5, #18         ; Load 24 into V5
$6A6    $0F46   SYS      $F46            ; System call to F46
$6A8    $A2DD   LD       I, $2DD         ; Load 2DD into I
$6AA    $B40E   JP       V0, $40E        ; Jump to V0 + 40E
$6AC    $EC12   UNKNOWN  $EC12           ; Unknown Exxx instruction
$6AE    $5178   UNKNOWN  $5178           ; Unknown 5xxx instruction
$6B0    $5A83   UNKNOWN  $5A83           ; Unknown 5xxx instruction
$6B2    $1F34   JP       $F34            ; Jump to F34
$6B4    $1F38   JP       $F38            ; Jump to F38
$6B6    $F247   UNKNOWN  F247            ; Unknown Fxxx instruction
$6B8    $B46B   JP       V0, $46B        ; Jump to V0 + 46B
$6BA    $66C5   LD       V6, #C5         ; Load 197 into V6
$6BC    $391D   SE       V9, #1D         ; Skip if V9 == 29
$6BE    $A77C   LD       I, $77C         ; Load 77C into I
$6C0    $B72A   JP       V0, $72A        ; Jump to V0 + 72A
$6C2    $B221   JP       V0, $221        ; Jump to V0 + 221
$6C4    $0EB0   SYS      $EB0            ; System call to EB0
$6C6    $A8C7   LD       I, $8C7         ; Load 8C7 into I
$6C8    $EA62   UNKNOWN  $EA62           ; Unknown Exxx instruction
$6CA    $546A   UNKNOWN  $546A           ; Unknown 5xxx instruction
$6CC    $11F0   JP       $1F0            ; Jump to 1F0
$6CE    $142F   JP       $42F            ; Jump to 42F
$6D0    $A72A   LD       I, $72A         ; Load 72A into I
$6D2    $4014   SNE      V0, #14         ; Skip if V0 != 20
$6D4    $D4AB   DRW      V4, VA, #B      ; Draw 11-byte sprite at V4, VA
$6D6    $E425   UNKNOWN  $E425           ; Unknown Exxx instruction
$6D8    $3F0E   SE       VF, #0E         ; Skip if VF == 14
$6DA    $5BD7   UNKNOWN  $5BD7           ; Unknown 5xxx instruction
$6DC    $11A7   JP       $1A7            ; Jump to 1A7
$6DE    $FA37   UNKNOWN  FA37            ; Unknown Fxxx instruction
$6E0    $5D2D   UNKNOWN  $5D2D           ; Unknown 5xxx instruction
$6E2    $1957   JP       $957            ; Jump to 957
$6E4    $CAA7   RND      VA, #A7         ; VA = random & A7
$6E6    $A57A   LD       I, $57A         ; Load 57A into I
$6E8    $DC4A   DRW      VC, V4, #A      ; Draw 10-byte sprite at VC, V4
$6EA    $B2DE   JP       V0, $2DE        ; Jump to V0 + 2DE
$6EC    $DD80   DRW      VD, V8, #0      ; Draw 0-byte sprite at VD, V8
$6EE    $9306   UNKNOWN  $9306           ; Unknown 9xxx instruction
$6F0    $8802   AND      V8, V0          ; V8 &= V0
$6F2    $64AF   LD       V4, #AF         ; Load 175 into V4
$6F4    $617E   LD       V1, #7E         ; Load 126 into V1
$6F6    $DE60   DRW      VE, V6, #0      ; Draw 0-byte sprite at VE, V6
$6F8    $C63E   RND      V6, #3E         ; V6 = random & 3E
$6FA    $9420   SNE      V4, V2          ; Skip if V4 != V2
$6FC    $5DB5   UNKNOWN  $5DB5           ; Unknown 5xxx instruction
$6FE    $C86C   RND      V8, #6C         ; V8 = random & 6C
$700    $0365   SYS      $365            ; System call to 365
$702    $F154   UNKNOWN  F154            ; Unknown Fxxx instruction
$704    $14F3   JP       $4F3            ; Jump to 4F3
$706    $29F7   CALL     $9F7            ; Call subroutine at 9F7
$708    $D100   DRW      V1, V0, #0      ; Draw 0-byte sprite at V1, V0
$70A    $615D   LD       V1, #5D         ; Load 93 into V1
$70C    $1D05   JP       $D05            ; Jump to D05
$70E    $C516   RND      V5, #16         ; V5 = random & 16
$710    $7FEF   ADD      VF, #EF         ; Add 239 to VF
$712    $3BB2   SE       VB, #B2         ; Skip if VB == 178
$714    $E506   UNKNOWN  $E506           ; Unknown Exxx instruction
$716    $98A4   UNKNOWN  $98A4           ; Unknown 9xxx instruction
$718    $74C1   ADD      V4, #C1         ; Add 193 to V4
$71A    $A985   LD       I, $985         ; Load 985 into I
$71C    $2B18   CALL     $B18            ; Call subroutine at B18
$71E    $56A6   UNKNOWN  $56A6           ; Unknown 5xxx instruction
$720    $7768   ADD      V7, #68         ; Add 104 to V7
$722    $F028   UNKNOWN  F028            ; Unknown Fxxx instruction
$724    $C572   RND      V5, #72         ; V5 = random & 72
$726    $FD9F   UNKNOWN  FD9F            ; Unknown Fxxx instruction
$728    $7D49   ADD      VD, #49         ; Add 73 to VD
$72A    $2904   CALL     $904            ; Call subroutine at 904
$72C    $4478   SNE      V4, #78         ; Skip if V4 != 120
$72E    $6F2D   LD       VF, #2D         ; Load 45 into VF
$730    $A9D4   LD       I, $9D4         ; Load 9D4 into I
$732    $0DA9   SYS      $DA9            ; System call to DA9
$734    $659F   LD       V5, #9F         ; Load 159 into V5
$736    $39CA   SE       V9, #CA         ; Skip if V9 == 202
$738    $0B3E   SYS      $B3E            ; System call to B3E
$73A    $CB32   RND      VB, #32         ; VB = random & 32
$73C    $3FBD   SE       VF, #BD         ; Skip if VF == 189
$73E    $B0B3   JP       V0, $0B3        ; Jump to V0 + 0B3
$740    $751D   ADD      V5, #1D         ; Add 29 to V5
$742    $4C2D   SNE      VC, #2D         ; Skip if VC != 45
$744    $B08E   JP       V0, $08E        ; Jump to V0 + 08E
$746    $7436   ADD      V4, #36         ; Add 54 to V4
$748    $A818   LD       I, $818         ; Load 818 into I
$74A    $0B14   SYS      $B14            ; System call to B14
$74C    $CECD   RND      VE, #CD         ; VE = random & CD
$74E    $8CDA   UNKNOWN  8CDA            ; Unknown 8xxx instruction
$750    $E671   UNKNOWN  $E671           ; Unknown Exxx instruction
$752    $C204   RND      V2, #04         ; V2 = random & 04
$754    $9C3F   UNKNOWN  $9C3F           ; Unknown 9xxx instruction
$756    $C717   RND      V7, #17         ; V7 = random & 17
$758    $D804   DRW      V8, V0, #4      ; Draw 4-byte sprite at V8, V0
$75A    $4734   SNE      V7, #34         ; Skip if V7 != 52
$75C    $5A52   UNKNOWN  $5A52           ; Unknown 5xxx instruction
$75E    $DAC6   DRW      VA, VC, #6      ; Draw 6-byte sprite at VA, VC
$760    $C7A6   RND      V7, #A6         ; V7 = random & A6
$762    $40AB   SNE      V0, #AB         ; Skip if V0 != 171
$764    $C46B   RND      V4, #6B         ; V4 = random & 6B
$766    $606B   LD       V0, #6B         ; Load 107 into V0
$768    $72EF   ADD      V2, #EF         ; Add 239 to V2
$76A    $3C37   SE       VC, #37         ; Skip if VC == 55
$76C    $C785   RND      V7, #85         ; V7 = random & 85
$76E    $3053   SE       V0, #53         ; Skip if V0 == 83
$770    $FD56   UNKNOWN  FD56            ; Unknown Fxxx instruction
$772    $45B8   SNE      V5, #B8         ; Skip if V5 != 184
$774    $968C   UNKNOWN  $968C           ; Unknown 9xxx instruction
$776    $246F   CALL     $46F            ; Call subroutine at 46F
$778    $0131   SYS      $131            ; System call to 131
$77A    $632F   LD       V3, #2F         ; Load 47 into V3
$77C    $0807   SYS      $807            ; System call to 807
$77E    $2F5D   CALL     $F5D            ; Call subroutine at F5D
$780    $99D6   UNKNOWN  $99D6           ; Unknown 9xxx instruction
$782    $909D   UNKNOWN  $909D           ; Unknown 9xxx instruction
$784    $1172   JP       $172            ; Jump to 172
$786    $4E6F   SNE      VE, #6F         ; Skip if VE != 111
$788    $FF5D   UNKNOWN  FF5D            ; Unknown Fxxx instruction
$78A    $7F97   ADD      VF, #97         ; Add 151 to VF
$78C    $27B0   CALL     $7B0            ; Call subroutine at 7B0
$78E    $495E   SNE      V9, #5E         ; Skip if V9 != 94
$790    $F6EF   UNKNOWN  F6EF            ; Unknown Fxxx instruction
$792    $14AC   JP       $4AC            ; Jump to 4AC
$794    $E18B   UNKNOWN  $E18B           ; Unknown Exxx instruction
$796    $AB73   LD       I, $B73         ; Load B73 into I
$798    $C072   RND      V0, #72         ; V0 = random & 72
$79A    $197C   JP       $97C            ; Jump to 97C
$79C    $C7C3   RND      V7, #C3         ; V7 = random & C3
$79E    $792C   ADD      V9, #2C         ; Add 44 to V9
$7A0    $94C5   UNKNOWN  $94C5           ; Unknown 9xxx instruction
$7A2    $B407   JP       V0, $407        ; Jump to V0 + 407
$7A4    $40F4   SNE      V0, #F4         ; Skip if V0 != 244
$7A6    $97C7   UNKNOWN  $97C7           ; Unknown 9xxx instruction
$7A8    $1E40   JP       $E40            ; Jump to E40
$7AA    $4B6F   SNE      VB, #6F         ; Skip if VB != 111
$7AC    $C1FC   RND      V1, #FC         ; V1 = random & FC
$7AE    $1559   JP       $559            ; Jump to 559
$7B0    $6B50   LD       VB, #50         ; Load 80 into VB
$7B2    $852C   UNKNOWN  852C            ; Unknown 8xxx instruction
$7B4    $14B1   JP       $4B1            ; Jump to 4B1
$7B6    $D924   DRW      V9, V2, #4      ; Draw 4-byte sprite at V9, V2
$7B8    $A68B   LD       I, $68B         ; Load 68B into I
$7BA    $B214   JP       V0, $214        ; Jump to V0 + 214
$7BC    $3CAF   SE       VC, #AF         ; Skip if VC == 175
$7BE    $7695   ADD      V6, #95         ; Add 149 to V6
$7C0    $AF53   LD       I, $F53         ; Load F53 into I
$7C2    $64E0   LD       V4, #E0         ; Load 224 into V4
$7C4    $656B   LD       V5, #6B         ; Load 107 into V5
$7C6    $A701   LD       I, $701         ; Load 701 into I
$7C8    $D0AE   DRW      V0, VA, #E      ; Draw 14-byte sprite at V0, VA
$7CA    $BC8C   JP       V0, $C8C        ; Jump to V0 + C8C
$7CC    $861B   UNKNOWN  861B            ; Unknown 8xxx instruction
$7CE    $E516   UNKNOWN  $E516           ; Unknown Exxx instruction
$7D0    $2006   CALL     $006            ; Call subroutine at 006
$7D2    $0E10   SYS      $E10            ; System call to E10
$7D4    $278E   CALL     $78E            ; Call subroutine at 78E
$7D6    $1895   JP       $895            ; Jump to 895
$7D8    $3D05   SE       VD, #05         ; Skip if VD == 5
$7DA    $5F65   UNKNOWN  $5F65           ; Unknown 5xxx instruction
$7DC    $F58D   UNKNOWN  F58D            ; Unknown Fxxx instruction
$7DE    $F0B9   UNKNOWN  F0B9            ; Unknown Fxxx instruction
$7E0    $4896   SNE      V8, #96         ; Skip if V8 != 150
$7E2    $546B   UNKNOWN  $546B           ; Unknown 5xxx instruction
$7E4    $5475   UNKNOWN  $5475           ; Unknown 5xxx instruction
$7E6    $2F38   CALL     $F38            ; Call subroutine at F38
$7E8    $F143   UNKNOWN  F143            ; Unknown Fxxx instruction
$7EA    $8AA1   OR       VA, VA          ; VA |= VA
$7EC    $C747   RND      V7, #47         ; V7 = random & 47
$7EE    $0002   SYS      $002            ; System call to 002
$7F0    $F466   UNKNOWN  F466            ; Unknown Fxxx instruction
$7F2    $67AF   LD       V7, #AF         ; Load 175 into V7
$7F4    $7AD2   ADD      VA, #D2         ; Add 210 to VA
$7F6    $5D44   UNKNOWN  $5D44           ; Unknown 5xxx instruction
$7F8    $BC28   JP       V0, $C28        ; Jump to V0 + C28
$7FA    $E818   UNKNOWN  $E818           ; Unknown Exxx instruction
$7FC    $37CA   SE       V7, #CA         ; Skip if V7 == 202
$7FE    $3FDF   SE       VF, #DF         ; Skip if VF == 223
$800    $7CA7   ADD      VC, #A7         ; Add 167 to VC
$802    $1476   JP       $476            ; Jump to 476
$804    $5724   UNKNOWN  $5724           ; Unknown 5xxx instruction
$806    $8E93   XOR      VE, V9          ; VE ^= V9
$808    $5555   UNKNOWN  $5555           ; Unknown 5xxx instruction
$80A    $337B   SE       V3, #7B         ; Skip if V3 == 123
$80C    $1E09   JP       $E09            ; Jump to E09
$80E    $88CA   UNKNOWN  88CA            ; Unknown 8xxx instruction
$810    $992E   UNKNOWN  $992E           ; Unknown 9xxx instruction
$812    $767E   ADD      V6, #7E         ; Add 126 to V6
$814    $5E0E   UNKNOWN  $5E0E           ; Unknown 5xxx instruction
$816    $A98D   LD       I, $98D         ; Load 98D into I
$818    $AFF1   LD       I, $FF1         ; Load FF1 into I
$81A    $3D1E   SE       VD, #1E         ; Skip if VD == 30
$81C    $DAE5   DRW      VA, VE, #5      ; Draw 5-byte sprite at VA, VE
$81E    $2669   CALL     $669            ; Call subroutine at 669
$820    $94C7   UNKNOWN  $94C7           ; Unknown 9xxx instruction
$822    $7211   ADD      V2, #11         ; Add 17 to V2
$824    $1118   JP       $118            ; Jump to 118
$826    $5F22   UNKNOWN  $5F22           ; Unknown 5xxx instruction
$828    $A2A6   LD       I, $2A6         ; Load 2A6 into I
$82A    $8B04   ADD      VB, V0          ; VB += V0, VF = carry
$82C    $523E   UNKNOWN  $523E           ; Unknown 5xxx instruction
$82E    $1DF5   JP       $DF5            ; Jump to DF5
$830    $7EBD   ADD      VE, #BD         ; Add 189 to VE
$832    $4B6D   SNE      VB, #6D         ; Skip if VB != 109
$834    $AA59   LD       I, $A59         ; Load A59 into I
$836    $6D2E   LD       VD, #2E         ; Load 46 into VD
$838    $1741   JP       $741            ; Jump to 741
$83A    $0BA2   SYS      $BA2            ; System call to BA2
$83C    $E8F6   UNKNOWN  $E8F6           ; Unknown Exxx instruction
$83E    $1287   JP       $287            ; Jump to 287
$840    $097F   SYS      $97F            ; System call to 97F
$842    $63E7   LD       V3, #E7         ; Load 231 into V3
$844    $8F21   OR       VF, V2          ; VF |= V2
$846    $3BC5   SE       VB, #C5         ; Skip if VB == 197
$848    $EEA7   UNKNOWN  $EEA7           ; Unknown Exxx instruction
$84A    $9919   UNKNOWN  $9919           ; Unknown 9xxx instruction
$84C    $66CF   LD       V6, #CF         ; Load 207 into V6
$84E    $6131   LD       V1, #31         ; Load 49 into V1
$850    $51DB   UNKNOWN  $51DB           ; Unknown 5xxx instruction
$852    $6E41   LD       VE, #41         ; Load 65 into VE
$854    $D424   DRW      V4, V2, #4      ; Draw 4-byte sprite at V4, V2
$856    $C761   RND      V7, #61         ; V7 = random & 61
$858    $22F8   CALL     $2F8            ; Call subroutine at 2F8
$85A    $E313   UNKNOWN  $E313           ; Unknown Exxx instruction
$85C    $9CD4   UNKNOWN  $9CD4           ; Unknown 9xxx instruction
$85E    $1C96   JP       $C96            ; Jump to C96
$860    $D8AD   DRW      V8, VA, #D      ; Draw 13-byte sprite at V8, VA
$862    $20D5   CALL     $0D5            ; Call subroutine at 0D5
$864    $059B   SYS      $59B            ; System call to 59B
$866    $2676   CALL     $676            ; Call subroutine at 676
$868    $8E06   SHR      VE              ; VE >>= 1, VF = LSB
$86A    $06CA   SYS      $6CA            ; System call to 6CA
$86C    $22FC   CALL     $2FC            ; Call subroutine at 2FC
$86E    $B256   JP       V0, $256        ; Jump to V0 + 256
$870    $6A3F   LD       VA, #3F         ; Load 63 into VA
$872    $E8D6   UNKNOWN  $E8D6           ; Unknown Exxx instruction
$874    $FE3F   UNKNOWN  FE3F            ; Unknown Fxxx instruction
$876    $9644   UNKNOWN  $9644           ; Unknown 9xxx instruction
$878    $C00B   RND      V0, #0B         ; V0 = random & 0B
$87A    $0BB3   SYS      $BB3            ; System call to BB3
$87C    $F507   LD       V5, DT          ; V5 = delay timer
$87E    $C1FD   RND      V1, #FD         ; V1 = random & FD
$880    $F7DF   UNKNOWN  F7DF            ; Unknown Fxxx instruction
$882    $874B   UNKNOWN  874B            ; Unknown 8xxx instruction
$884    $A808   LD       I, $808         ; Load 808 into I
$886    $EEE9   UNKNOWN  $EEE9           ; Unknown Exxx instruction
$888    $DB32   DRW      VB, V3, #2      ; Draw 2-byte sprite at VB, V3
$88A    $FDB5   UNKNOWN  FDB5            ; Unknown Fxxx instruction
$88C    $9121   UNKNOWN  $9121           ; Unknown 9xxx instruction
$88E    $91B8   UNKNOWN  $91B8           ; Unknown 9xxx instruction
$890    $8600   LD       V6, V0          ; V6 = V0
$892    $3CF5   SE       VC, #F5         ; Skip if VC == 245
$894    $CF3F   RND      VF, #3F         ; VF = random & 3F
$896    $4073   SNE      V0, #73         ; Skip if V0 != 115
$898    $077A   SYS      $77A            ; System call to 77A
$89A    $F529   LD       F, V5           ; I = sprite address for digit V5
$89C    $534F   UNKNOWN  $534F           ; Unknown 5xxx instruction
$89E    $9D60   SNE      VD, V6          ; Skip if VD != V6
$8A0    $8788   UNKNOWN  8788            ; Unknown 8xxx instruction
$8A2    $E759   UNKNOWN  $E759           ; Unknown Exxx instruction
$8A4    $E962   UNKNOWN  $E962           ; Unknown Exxx instruction
$8A6    $A818   LD       I, $818         ; Load 818 into I
$8A8    $DD5C   DRW      VD, V5, #C      ; Draw 12-byte sprite at VD, V5
$8AA    $E372   UNKNOWN  $E372           ; Unknown Exxx instruction
$8AC    $25C9   CALL     $5C9            ; Call subroutine at 5C9
$8AE    $F68B   UNKNOWN  F68B            ; Unknown Fxxx instruction
$8B0    $D348   DRW      V3, V4, #8      ; Draw 8-byte sprite at V3, V4
$8B2    $B004   JP       V0, $004        ; Jump to V0 + 004
$8B4    $A88D   LD       I, $88D         ; Load 88D into I
$8B6    $1039   JP       $039            ; Jump to 039
$8B8    $4758   SNE      V7, #58         ; Skip if V7 != 88
$8BA    $149E   JP       $49E            ; Jump to 49E
$8BC    $FE4E   UNKNOWN  FE4E            ; Unknown Fxxx instruction
$8BE    $0702   SYS      $702            ; System call to 702
$8C0    $93C0   SNE      V3, VC          ; Skip if V3 != VC
$8C2    $6EEB   LD       VE, #EB         ; Load 235 into VE
$8C4    $37B6   SE       V7, #B6         ; Skip if V7 == 182
$8C6    $086B   SYS      $86B            ; System call to 86B
$8C8    $D245   DRW      V2, V4, #5      ; Draw 5-byte sprite at V2, V4
$8CA    $7D3E   ADD      VD, #3E         ; Add 62 to VD
$8CC    $642C   LD       V4, #2C         ; Load 44 into V4
$8CE    $33D1   SE       V3, #D1         ; Skip if V3 == 209
$8D0    $07A4   SYS      $7A4            ; System call to 7A4
$8D2    $2B16   CALL     $B16            ; Call subroutine at B16
$8D4    $85BC   UNKNOWN  85BC            ; Unknown 8xxx instruction
$8D6    $41DC   SNE      V1, #DC         ; Skip if V1 != 220
$8D8    $7663   ADD      V6, #63         ; Add 99 to V6
$8DA    $685C   LD       V8, #5C         ; Load 92 into V8
$8DC    $2619   CALL     $619            ; Call subroutine at 619
$8DE    $E78E   UNKNOWN  $E78E           ; Unknown Exxx instruction
$8E0    $4386   SNE      V3, #86         ; Skip if V3 != 134
$8E2    $639E   LD       V3, #9E         ; Load 158 into V3
$8E4    $21F5   CALL     $1F5            ; Call subroutine at 1F5
$8E6    $14A1   JP       $4A1            ; Jump to 4A1
$8E8    $3296   SE       V2, #96         ; Skip if V2 == 150
$8EA    $1D47   JP       $D47            ; Jump to D47
$8EC    $F9F6   UNKNOWN  F9F6            ; Unknown Fxxx instruction
$8EE    $5C2F   UNKNOWN  $5C2F           ; Unknown 5xxx instruction
$8F0    $6F09   LD       VF, #09         ; Load 9 into VF
$8F2    $68E8   LD       V8, #E8         ; Load 232 into V8
$8F4    $B196   JP       V0, $196        ; Jump to V0 + 196
$8F6    $B6D3   JP       V0, $6D3        ; Jump to V0 + 6D3
$8F8    $9370   SNE      V3, V7          ; Skip if V3 != V7
$8FA    $ABE4   LD       I, $BE4         ; Load BE4 into I
$8FC    $1DB9   JP       $DB9            ; Jump to DB9
$8FE    $D8D1   DRW      V8, VD, #1      ; Draw 1-byte sprite at V8, VD
$900    $64FE   LD       V4, #FE         ; Load 254 into V4
$902    $0736   SYS      $736            ; System call to 736
$904    $6CA7   LD       VC, #A7         ; Load 167 into VC
$906    $043B   SYS      $43B            ; System call to 43B
$908    $041F   SYS      $41F            ; System call to 41F
$90A    $7D87   ADD      VD, #87         ; Add 135 to VD
$90C    $1287   JP       $287            ; Jump to 287
$90E    $6C5C   LD       VC, #5C         ; Load 92 into VC
$910    $656A   LD       V5, #6A         ; Load 106 into V5
$912    $DDD2   DRW      VD, VD, #2      ; Draw 2-byte sprite at VD, VD
$914    $C4F8   RND      V4, #F8         ; V4 = random & F8
$916    $F1CD   UNKNOWN  F1CD            ; Unknown Fxxx instruction
$918    $E91E   UNKNOWN  $E91E           ; Unknown Exxx instruction
$91A    $6539   LD       V5, #39         ; Load 57 into V5
$91C    $74C6   ADD      V4, #C6         ; Add 198 to V4
$91E    $E7B2   UNKNOWN  $E7B2           ; Unknown Exxx instruction
$920    $0BDE   SYS      $BDE            ; System call to BDE
$922    $8DAC   UNKNOWN  8DAC            ; Unknown 8xxx instruction
$924    $E666   UNKNOWN  $E666           ; Unknown Exxx instruction
$926    $5833   UNKNOWN  $5833           ; Unknown 5xxx instruction
$928    $A003   LD       I, $003         ; Load 003 into I
$92A    $6FD6   LD       VF, #D6         ; Load 214 into VF
$92C    $D609   DRW      V6, V0, #9      ; Draw 9-byte sprite at V6, V0
$92E    $138C   JP       $38C            ; Jump to 38C
$930    $951C   UNKNOWN  $951C           ; Unknown 9xxx instruction
$932    $01EF   SYS      $1EF            ; System call to 1EF
$934    $63A8   LD       V3, #A8         ; Load 168 into V3
$936    $9EB6   UNKNOWN  $9EB6           ; Unknown 9xxx instruction
$938    $C299   RND      V2, #99         ; V2 = random & 99
$93A    $5796   UNKNOWN  $5796           ; Unknown 5xxx instruction
$93C    $BBDD   JP       V0, $BDD        ; Jump to V0 + BDD
$93E    $469C   SNE      V6, #9C         ; Skip if V6 != 156
$940    $E09A   UNKNOWN  $E09A           ; Unknown Exxx instruction
$942    $87E1   OR       V7, VE          ; V7 |= VE
$944    $E0B4   UNKNOWN  $E0B4           ; Unknown Exxx instruction
$946    $BE73   JP       V0, $E73        ; Jump to V0 + E73
$948    $74DE   ADD      V4, #DE         ; Add 222 to V4
$94A    $CAF3   RND      VA, #F3         ; VA = random & F3
$94C    $6C82   LD       VC, #82         ; Load 130 into VC
$94E    $550C   UNKNOWN  $550C           ; Unknown 5xxx instruction
$950    $4265   SNE      V2, #65         ; Skip if V2 != 101
$952    $2945   CALL     $945            ; Call subroutine at 945
$954    $7748   ADD      V7, #48         ; Add 72 to V7
$956    $BE97   JP       V0, $E97        ; Jump to V0 + E97
$958    $162C   JP       $62C            ; Jump to 62C
$95A    $4279   SNE      V2, #79         ; Skip if V2 != 121
$95C    $8F20   LD       VF, V2          ; VF = V2
$95E    $6B9B   LD       VB, #9B         ; Load 155 into VB
$960    $14F5   JP       $4F5            ; Jump to 4F5
$962    $B24F   JP       V0, $24F        ; Jump to V0 + 24F
$964    $5D6B   UNKNOWN  $5D6B           ; Unknown 5xxx instruction
$966    $B240   JP       V0, $240        ; Jump to V0 + 240
$968    $FE6A   UNKNOWN  FE6A            ; Unknown Fxxx instruction
$96A    $B163   JP       V0, $163        ; Jump to V0 + 163
$96C    $9E5C   UNKNOWN  $9E5C           ; Unknown 9xxx instruction
$96E    $615A   LD       V1, #5A         ; Load 90 into V1
$970    $F449   UNKNOWN  F449            ; Unknown Fxxx instruction
$972    $2756   CALL     $756            ; Call subroutine at 756
$974    $95D8   UNKNOWN  $95D8           ; Unknown 9xxx instruction
$976    $5C59   UNKNOWN  $5C59           ; Unknown 5xxx instruction
$978    $C8F0   RND      V8, #F0         ; V8 = random & F0
$97A    $238D   CALL     $38D            ; Call subroutine at 38D
$97C    $0613   SYS      $613            ; System call to 613
$97E    $FCB1   UNKNOWN  FCB1            ; Unknown Fxxx instruction
$980    $C4A2   RND      V4, #A2         ; V4 = random & A2
$982    $F42A   UNKNOWN  F42A            ; Unknown Fxxx instruction
$984    $10A5   JP       $0A5            ; Jump to 0A5
$986    $BD4D   JP       V0, $D4D        ; Jump to V0 + D4D
$988    $08D9   SYS      $8D9            ; System call to 8D9
$98A    $A7DC   LD       I, $7DC         ; Load 7DC into I
$98C    $120B   JP       $20B            ; Jump to 20B
$98E    $B523   JP       V0, $523        ; Jump to V0 + 523
$990    $67D0   LD       V7, #D0         ; Load 208 into V7
$992    $C9FC   RND      V9, #FC         ; V9 = random & FC
$994    $D59E   DRW      V5, V9, #E      ; Draw 14-byte sprite at V5, V9
$996    $765E   ADD      V6, #5E         ; Add 94 to V6
$998    $CE87   RND      VE, #87         ; VE = random & 87
$99A    $C89B   RND      V8, #9B         ; V8 = random & 9B
$99C    $30B9   SE       V0, #B9         ; Skip if V0 == 185
$99E    $F18C   UNKNOWN  F18C            ; Unknown Fxxx instruction
$9A0    $BA6F   JP       V0, $A6F        ; Jump to V0 + A6F
$9A2    $1F7D   JP       $F7D            ; Jump to F7D
$9A4    $2C1E   CALL     $C1E            ; Call subroutine at C1E
$9A6    $3C2C   SE       VC, #2C         ; Skip if VC == 44
$9A8    $3262   SE       V2, #62         ; Skip if V2 == 98
$9AA    $D4C1   DRW      V4, VC, #1      ; Draw 1-byte sprite at V4, VC
$9AC    $7230   ADD      V2, #30         ; Add 48 to V2
$9AE    $6CDD   LD       VC, #DD         ; Load 221 into VC
$9B0    $0109   SYS      $109            ; System call to 109
$9B2    $942B   UNKNOWN  $942B           ; Unknown 9xxx instruction
$9B4    $8CA2   AND      VC, VA          ; VC &= VA
$9B6    $BDF7   JP       V0, $DF7        ; Jump to V0 + DF7
$9B8    $D5B3   DRW      V5, VB, #3      ; Draw 3-byte sprite at V5, VB
$9BA    $3FF1   SE       VF, #F1         ; Skip if VF == 241
$9BC    $8853   XOR      V8, V5          ; V8 ^= V5
$9BE    $5D0F   UNKNOWN  $5D0F           ; Unknown 5xxx instruction
$9C0    $088E   SYS      $88E            ; System call to 88E
$9C2    $5D3B   UNKNOWN  $5D3B           ; Unknown 5xxx instruction
$9C4    $668C   LD       V6, #8C         ; Load 140 into V6
$9C6    $3E99   SE       VE, #99         ; Skip if VE == 153
$9C8    $3BB5   SE       VB, #B5         ; Skip if VB == 181
$9CA    $0C51   SYS      $C51            ; System call to C51
$9CC    $4231   SNE      V2, #31         ; Skip if V2 != 49
$9CE    $0475   SYS      $475            ; System call to 475
$9D0    $4D92   SNE      VD, #92         ; Skip if VD != 146
$9D2    $3AB2   SE       VA, #B2         ; Skip if VA == 178
$9D4    $0AF4   SYS      $AF4            ; System call to AF4
$9D6    $6FF2   LD       VF, #F2         ; Load 242 into VF
$9D8    $2F88   CALL     $F88            ; Call subroutine at F88
$9DA    $F2FD   UNKNOWN  F2FD            ; Unknown Fxxx instruction
$9DC    $0960   SYS      $960            ; System call to 960
$9DE    $E5CC   UNKNOWN  $E5CC           ; Unknown Exxx instruction
$9E0    $19B9   JP       $9B9            ; Jump to 9B9
$9E2    $8858   UNKNOWN  8858            ; Unknown 8xxx instruction
$9E4    $E36F   UNKNOWN  $E36F           ; Unknown Exxx instruction
$9E6    $1842   JP       $842            ; Jump to 842
$9E8    $1288   JP       $288            ; Jump to 288
$9EA    $F21F   UNKNOWN  F21F            ; Unknown Fxxx instruction
$9EC    $1456   JP       $456            ; Jump to 456
$9EE    $EA60   UNKNOWN  $EA60           ; Unknown Exxx instruction
$9F0    $B2A5   JP       V0, $2A5        ; Jump to V0 + 2A5
$9F2    $108B   JP       $08B            ; Jump to 08B
$9F4    $9912   UNKNOWN  $9912           ; Unknown 9xxx instruction
$9F6    $E2CE   UNKNOWN  $E2CE           ; Unknown Exxx instruction
$9F8    $D658   DRW      V6, V5, #8      ; Draw 8-byte sprite at V6, V5
$9FA    $7CE3   ADD      VC, #E3         ; Add 227 to VC
$9FC    $2B57   CALL     $B57            ; Call subroutine at B57
$9FE    $DC2D   DRW      VC, V2, #D      ; Draw 13-byte sprite at VC, V2
$A00    $4A37   SNE      VA, #37         ; Skip if VA != 55
$A02    $3048   SE       V0, #48         ; Skip if V0 == 72
$A04    $416C   SNE      V1, #6C         ; Skip if V1 != 108
$A06    $2945   CALL     $945            ; Call subroutine at 945
$A08    $AC83   LD       I, $C83         ; Load C83 into I
$A0A    $1FF3   JP       $FF3            ; Jump to FF3
$A0C    $E7A4   UNKNOWN  $E7A4           ; Unknown Exxx instruction
$A0E    $1D70   JP       $D70            ; Jump to D70
$A10    $65B2   LD       V5, #B2         ; Load 178 into V5
$A12    $C5A2   RND      V5, #A2         ; V5 = random & A2
$A14    $5EC8   UNKNOWN  $5EC8           ; Unknown 5xxx instruction
$A16    $7398   ADD      V3, #98         ; Add 152 to V3
$A18    $BD42   JP       V0, $D42        ; Jump to V0 + D42
$A1A    $54CA   UNKNOWN  $54CA           ; Unknown 5xxx instruction
$A1C    $09DE   SYS      $9DE            ; System call to 9DE
$A1E    $EDAF   UNKNOWN  $EDAF           ; Unknown Exxx instruction
$A20    $DF74   DRW      VF, V7, #4      ; Draw 4-byte sprite at VF, V7
$A22    $BEC1   JP       V0, $EC1        ; Jump to V0 + EC1
$A24    $6D35   LD       VD, #35         ; Load 53 into VD
$A26    $93E6   UNKNOWN  $93E6           ; Unknown 9xxx instruction
$A28    $A2CF   LD       I, $2CF         ; Load 2CF into I
$A2A    $5FD2   UNKNOWN  $5FD2           ; Unknown 5xxx instruction
$A2C    $7532   ADD      V5, #32         ; Add 50 to V5
$A2E    $3FE9   SE       VF, #E9         ; Skip if VF == 233
$A30    $E027   UNKNOWN  $E027           ; Unknown Exxx instruction
$A32    $85A3   XOR      V5, VA          ; V5 ^= VA
$A34    $5801   UNKNOWN  $5801           ; Unknown 5xxx instruction
$A36    $2264   CALL     $264            ; Call subroutine at 264
$A38    $1446   JP       $446            ; Jump to 446
$A3A    $5515   UNKNOWN  $5515           ; Unknown 5xxx instruction
$A3C    $3C96   SE       VC, #96         ; Skip if VC == 150
$A3E    $352D   SE       V5, #2D         ; Skip if V5 == 45
$A40    $F9CB   UNKNOWN  F9CB            ; Unknown Fxxx instruction
$A42    $113D   JP       $13D            ; Jump to 13D
$A44    $E42A   UNKNOWN  $E42A           ; Unknown Exxx instruction
$A46    $279A   CALL     $79A            ; Call subroutine at 79A
$A48    $DD13   DRW      VD, V1, #3      ; Draw 3-byte sprite at VD, V1
$A4A    $8D29   UNKNOWN  8D29            ; Unknown 8xxx instruction
$A4C    $9535   UNKNOWN  $9535           ; Unknown 9xxx instruction
$A4E    $5F7C   UNKNOWN  $5F7C           ; Unknown 5xxx instruction
$A50    $4EE1   SNE      VE, #E1         ; Skip if VE != 225
$A52    $9C8C   UNKNOWN  $9C8C           ; Unknown 9xxx instruction
$A54    $51CE   UNKNOWN  $51CE           ; Unknown 5xxx instruction
$A56    $7C50   ADD      VC, #50         ; Add 80 to VC
$A58    $4166   SNE      V1, #66         ; Skip if V1 != 102
$A5A    $2CD3   CALL     $CD3            ; Call subroutine at CD3
$A5C    $1262   JP       $262            ; Jump to 262
$A5E    $D545   DRW      V5, V4, #5      ; Draw 5-byte sprite at V5, V4
$A60    $7EBC   ADD      VE, #BC         ; Add 188 to VE
$A62    $11BD   JP       $1BD            ; Jump to 1BD
$A64    $258D   CALL     $58D            ; Call subroutine at 58D
$A66    $341D   SE       V4, #1D         ; Skip if V4 == 29
$A68    $B0C4   JP       V0, $0C4        ; Jump to V0 + 0C4
$A6A    $55F2   UNKNOWN  $55F2           ; Unknown 5xxx instruction
$A6C    $853D   UNKNOWN  853D            ; Unknown 8xxx instruction
$A6E    $B1D0   JP       V0, $1D0        ; Jump to V0 + 1D0
$A70    $C14F   RND      V1, #4F         ; V1 = random & 4F
$A72    $DD22   DRW      VD, V2, #2      ; Draw 2-byte sprite at VD, V2
$A74    $808F   UNKNOWN  808F            ; Unknown 8xxx instruction
$A76    $C069   RND      V0, #69         ; V0 = random & 69
$A78    $87A6   SHR      V7              ; V7 >>= 1, VF = LSB
$A7A    $030D   SYS      $30D            ; System call to 30D
$A7C    $CA63   RND      VA, #63         ; VA = random & 63
$A7E    $D5FE   DRW      V5, VF, #E      ; Draw 14-byte sprite at V5, VF
$A80    $F85D   UNKNOWN  F85D            ; Unknown Fxxx instruction
$A82    $30CF   SE       V0, #CF         ; Skip if V0 == 207
$A84    $7033   ADD      V0, #33         ; Add 51 to V0
$A86    $7400   ADD      V4, #00         ; Add 0 to V4
$A88    $9874   UNKNOWN  $9874           ; Unknown 9xxx instruction
$A8A    $964B   UNKNOWN  $964B           ; Unknown 9xxx instruction
$A8C    $C938   RND      V9, #38         ; V9 = random & 38
$A8E    $C0B8   RND      V0, #B8         ; V0 = random & B8
$A90    $6342   LD       V3, #42         ; Load 66 into V3
$A92    $40E8   SNE      V0, #E8         ; Skip if V0 != 232
$A94    $AE3A   LD       I, $E3A         ; Load E3A into I
$A96    $7DD5   ADD      VD, #D5         ; Add 213 to VD
$A98    $48F5   SNE      V8, #F5         ; Skip if V8 != 245
$A9A    $1272   JP       $272            ; Jump to 272
$A9C    $7CAC   ADD      VC, #AC         ; Add 172 to VC
$A9E    $AE8C   LD       I, $E8C         ; Load E8C into I
$AA0    $4560   SNE      V5, #60         ; Skip if V5 != 96
$AA2    $D2D1   DRW      V2, VD, #1      ; Draw 1-byte sprite at V2, VD
$AA4    $D67F   DRW      V6, V7, #F      ; Draw 15-byte sprite at V6, V7
$AA6    $29F4   CALL     $9F4            ; Call subroutine at 9F4
$AA8    $1ED2   JP       $ED2            ; Jump to ED2
$AAA    $8B86   SHR      VB              ; VB >>= 1, VF = LSB
$AAC    $8BC9   UNKNOWN  8BC9            ; Unknown 8xxx instruction
$AAE    $D576   DRW      V5, V7, #6      ; Draw 6-byte sprite at V5, V7
$AB0    $8359   UNKNOWN  8359            ; Unknown 8xxx instruction
$AB2    $55A6   UNKNOWN  $55A6           ; Unknown 5xxx instruction
$AB4    $33E8   SE       V3, #E8         ; Skip if V3 == 232
$AB6    $5A02   UNKNOWN  $5A02           ; Unknown 5xxx instruction
$AB8    $A198   LD       I, $198         ; Load 198 into I
$ABA    $78B1   ADD      V8, #B1         ; Add 177 to V8
$ABC    $FBA3   UNKNOWN  FBA3            ; Unknown Fxxx instruction
$ABE    $36AD   SE       V6, #AD         ; Skip if V6 == 173
$AC0    $D319   DRW      V3, V1, #9      ; Draw 9-byte sprite at V3, V1
$AC2    $7088   ADD      V0, #88         ; Add 136 to V0
$AC4    $ED7E   UNKNOWN  $ED7E           ; Unknown Exxx instruction
$AC6    $7C25   ADD      VC, #25         ; Add 37 to VC
$AC8    $BCBC   JP       V0, $CBC        ; Jump to V0 + CBC
$ACA    $7125   ADD      V1, #25         ; Add 37 to V1
$ACC    $A0CD   LD       I, $0CD         ; Load 0CD into I
$ACE    $505D   UNKNOWN  $505D           ; Unknown 5xxx instruction
$AD0    $7A1B   ADD      VA, #1B         ; Add 27 to VA
$AD2    $61DC   LD       V1, #DC         ; Load 220 into V1
$AD4    $56F1   UNKNOWN  $56F1           ; Unknown 5xxx instruction
$AD6    $0990   SYS      $990            ; System call to 990
$AD8    $893F   UNKNOWN  893F            ; Unknown 8xxx instruction
$ADA    $D196   DRW      V1, V9, #6      ; Draw 6-byte sprite at V1, V9
$ADC    $FDFD   UNKNOWN  FDFD            ; Unknown Fxxx instruction
$ADE    $55F4   UNKNOWN  $55F4           ; Unknown 5xxx instruction
$AE0    $429B   SNE      V2, #9B         ; Skip if V2 != 155
$AE2    $1B34   JP       $B34            ; Jump to B34
$AE4    $34BD   SE       V4, #BD         ; Skip if V4 == 189
$AE6    $F801   UNKNOWN  F801            ; Unknown Fxxx instruction
$AE8    $184A   JP       $84A            ; Jump to 84A
$AEA    $A466   LD       I, $466         ; Load 466 into I
$AEC    $D33B   DRW      V3, V3, #B      ; Draw 11-byte sprite at V3, V3
$AEE    $59C3   UNKNOWN  $59C3           ; Unknown 5xxx instruction
$AF0    $35FE   SE       V5, #FE         ; Skip if V5 == 254
$AF2    $DFAB   DRW      VF, VA, #B      ; Draw 11-byte sprite at VF, VA
$AF4    $6199   LD       V1, #99         ; Load 153 into V1
$AF6    $2E62   CALL     $E62            ; Call subroutine at E62
$AF8    $EBCF   UNKNOWN  $EBCF           ; Unknown Exxx instruction
$AFA    $533F   UNKNOWN  $533F           ; Unknown 5xxx instruction
$AFC    $37B4   SE       V7, #B4         ; Skip if V7 == 180
$AFE    $92B9   UNKNOWN  $92B9           ; Unknown 9xxx instruction
$B00    $E844   UNKNOWN  $E844           ; Unknown Exxx instruction
$B02    $B5A0   JP       V0, $5A0        ; Jump to V0 + 5A0
$B04    $B960   JP       V0, $960        ; Jump to V0 + 960
$B06    $33BB   SE       V3, #BB         ; Skip if V3 == 187
$B08    $6A3C   LD       VA, #3C         ; Load 60 into VA
$B0A    $6017   LD       V0, #17         ; Load 23 into V0
$B0C    $9710   SNE      V7, V1          ; Skip if V7 != V1
$B0E    $63DE   LD       V3, #DE         ; Load 222 into V3
$B10    $B203   JP       V0, $203        ; Jump to V0 + 203
$B12    $2B82   CALL     $B82            ; Call subroutine at B82
$B14    $16E0   JP       $6E0            ; Jump to 6E0
$B16    $D115   DRW      V1, V1, #5      ; Draw 5-byte sprite at V1, V1
$B18    $0F0D   SYS      $F0D            ; System call to F0D
$B1A    $183C   JP       $83C            ; Jump to 83C
$B1C    $C189   RND      V1, #89         ; V1 = random & 89
$B1E    $E267   UNKNOWN  $E267           ; Unknown Exxx instruction
$B20    $5EA9   UNKNOWN  $5EA9           ; Unknown 5xxx instruction
$B22    $AAC2   LD       I, $AC2         ; Load AC2 into I
$B24    $200C   CALL     $00C            ; Call subroutine at 00C
$B26    $9E49   UNKNOWN  $9E49           ; Unknown 9xxx instruction
$B28    $A3CC   LD       I, $3CC         ; Load 3CC into I
$B2A    $F857   UNKNOWN  F857            ; Unknown Fxxx instruction
$B2C    $C784   RND      V7, #84         ; V7 = random & 84
$B2E    $F1C0   UNKNOWN  F1C0            ; Unknown Fxxx instruction
$B30    $9DB8   UNKNOWN  $9DB8           ; Unknown 9xxx instruction
$B32    $9BB6   UNKNOWN  $9BB6           ; Unknown 9xxx instruction
$B34    $5B6B   UNKNOWN  $5B6B           ; Unknown 5xxx instruction
$B36    $D9B3   DRW      V9, VB, #3      ; Draw 3-byte sprite at V9, VB
$B38    $57A3   UNKNOWN  $57A3           ; Unknown 5xxx instruction
$B3A    $94C2   UNKNOWN  $94C2           ; Unknown 9xxx instruction
$B3C    $CDC9   RND      VD, #C9         ; VD = random & C9
$B3E    $A98A   LD       I, $98A         ; Load 98A into I
$B40    $1013   JP       $013            ; Jump to 013
$B42    $3F93   SE       VF, #93         ; Skip if VF == 147
$B44    $B57A   JP       V0, $57A        ; Jump to V0 + 57A
$B46    $A5D8   LD       I, $5D8         ; Load 5D8 into I
$B48    $BBB1   JP       V0, $BB1        ; Jump to V0 + BB1
$B4A    $D149   DRW      V1, V4, #9      ; Draw 9-byte sprite at V1, V4
$B4C    $0AC6   SYS      $AC6            ; System call to AC6
$B4E    $6CBC   LD       VC, #BC         ; Load 188 into VC
$B50    $B5D1   JP       V0, $5D1        ; Jump to V0 + 5D1
$B52    $FB1D   UNKNOWN  FB1D            ; Unknown Fxxx instruction
$B54    $F2F4   UNKNOWN  F2F4            ; Unknown Fxxx instruction
$B56    $7736   ADD      V7, #36         ; Add 54 to V7
$B58    $C49F   RND      V4, #9F         ; V4 = random & 9F
$B5A    $2AEF   CALL     $AEF            ; Call subroutine at AEF
$B5C    $27AF   CALL     $7AF            ; Call subroutine at 7AF
$B5E    $4BE4   SNE      VB, #E4         ; Skip if VB != 228
$B60    $8222   AND      V2, V2          ; V2 &= V2
$B62    $FFEF   UNKNOWN  FFEF            ; Unknown Fxxx instruction
$B64    $4B75   SNE      VB, #75         ; Skip if VB != 117
$B66    $C79C   RND      V7, #9C         ; V7 = random & 9C
$B68    $777A   ADD      V7, #7A         ; Add 122 to V7
$B6A    $0F1D   SYS      $F1D            ; System call to F1D
$B6C    $B9DE   JP       V0, $9DE        ; Jump to V0 + 9DE
$B6E    $D022   DRW      V0, V2, #2      ; Draw 2-byte sprite at V0, V2
$B70    $08E5   SYS      $8E5            ; System call to 8E5
$B72    $9FCC   UNKNOWN  $9FCC           ; Unknown 9xxx instruction
$B74    $1DF2   JP       $DF2            ; Jump to DF2
$B76    $5CBF   UNKNOWN  $5CBF           ; Unknown 5xxx instruction
$B78    $6B4A   LD       VB, #4A         ; Load 74 into VB
$B7A    $4F38   SNE      VF, #38         ; Skip if VF != 56
$B7C    $FE50   UNKNOWN  FE50            ; Unknown Fxxx instruction
$B7E    $0055   SYS      $055            ; System call to 055
$B80    $8FAE   SHL      VF              ; VF <<= 1, VF = MSB
$B82    $FDD7   UNKNOWN  FDD7            ; Unknown Fxxx instruction
$B84    $2F7A   CALL     $F7A            ; Call subroutine at F7A
$B86    $53BE   UNKNOWN  $53BE           ; Unknown 5xxx instruction
$B88    $6D87   LD       VD, #87         ; Load 135 into VD
$B8A    $446E   SNE      V4, #6E         ; Skip if V4 != 110
$B8C    $57AC   UNKNOWN  $57AC           ; Unknown 5xxx instruction
$B8E    $605B   LD       V0, #5B         ; Load 91 into V0
$B90    $7712   ADD      V7, #12         ; Add 18 to V7
$B92    $EB82   UNKNOWN  $EB82           ; Unknown Exxx instruction
$B94    $CD6A   RND      VD, #6A         ; VD = random & 6A
$B96    $345F   SE       V4, #5F         ; Skip if V4 == 95
$B98    $F32D   UNKNOWN  F32D            ; Unknown Fxxx instruction
$B9A    $0FED   SYS      $FED            ; System call to FED
$B9C    $4DBE   SNE      VD, #BE         ; Skip if VD != 190
$B9E    $1300   JP       $300            ; Jump to 300
$BA0    $5EBA   UNKNOWN  $5EBA           ; Unknown 5xxx instruction
$BA2    $1F9C   JP       $F9C            ; Jump to F9C
$BA4    $ED6E   UNKNOWN  $ED6E           ; Unknown Exxx instruction
$BA6    $ADBE   LD       I, $DBE         ; Load DBE into I
$BA8    $2EE2   CALL     $EE2            ; Call subroutine at EE2
$BAA    $1CA8   JP       $CA8            ; Jump to CA8
$BAC    $6A68   LD       VA, #68         ; Load 104 into VA
$BAE    $914D   UNKNOWN  $914D           ; Unknown 9xxx instruction
$BB0    $17FE   JP       $7FE            ; Jump to 7FE
$BB2    $39ED   SE       V9, #ED         ; Skip if V9 == 237
$BB4    $4A86   SNE      VA, #86         ; Skip if VA != 134
$BB6    $B2A8   JP       V0, $2A8        ; Jump to V0 + 2A8
$BB8    $06CF   SYS      $6CF            ; System call to 6CF
$BBA    $7D33   ADD      VD, #33         ; Add 51 to VD
$BBC    $A8E0   LD       I, $8E0         ; Load 8E0 into I
$BBE    $67DA   LD       V7, #DA         ; Load 218 into V7
$BC0    $483A   SNE      V8, #3A         ; Skip if V8 != 58
$BC2    $D7C1   DRW      V7, VC, #1      ; Draw 1-byte sprite at V7, VC
$BC4    $FBBA   UNKNOWN  FBBA            ; Unknown Fxxx instruction
$BC6    $B6E7   JP       V0, $6E7        ; Jump to V0 + 6E7
$BC8    $8D1E   SHL      VD              ; VD <<= 1, VF = MSB
$BCA    $74F2   ADD      V4, #F2         ; Add 242 to V4
$BCC    $96A8   UNKNOWN  $96A8           ; Unknown 9xxx instruction
$BCE    $DCE5   DRW      VC, VE, #5      ; Draw 5-byte sprite at VC, VE
$BD0    $9D52   UNKNOWN  $9D52           ; Unknown 9xxx instruction
$BD2    $AFD1   LD       I, $FD1         ; Load FD1 into I
$BD4    $B949   JP       V0, $949        ; Jump to V0 + 949
$BD6    $A477   LD       I, $477         ; Load 477 into I
$BD8    $B553   JP       V0, $553        ; Jump to V0 + 553
$BDA    $5B09   UNKNOWN  $5B09           ; Unknown 5xxx instruction
$BDC    $0062   SYS      $062            ; System call to 062
$BDE    $A4DB   LD       I, $4DB         ; Load 4DB into I
$BE0    $F467   UNKNOWN  F467            ; Unknown Fxxx instruction
$BE2    $A16F   LD       I, $16F         ; Load 16F into I
$BE4    $2822   CALL     $822            ; Call subroutine at 822
$BE6    $105F   JP       $05F            ; Jump to 05F
$BE8    $9F1B   UNKNOWN  $9F1B           ; Unknown 9xxx instruction
$BEA    $06D3   SYS      $6D3            ; System call to 6D3
$BEC    $4486   SNE      V4, #86         ; Skip if V4 != 134
$BEE    $4703   SNE      V7, #03         ; Skip if V7 != 3
$BF0    $6D16   LD       VD, #16         ; Load 22 into VD
$BF2    $2780   CALL     $780            ; Call subroutine at 780
$BF4    $A2D6   LD       I, $2D6         ; Load 2D6 into I
$BF6    $A220   LD       I, $220         ; Load 220 into I
$BF8    $0A07   SYS      $A07            ; System call to A07
$BFA    $08E6   SYS      $8E6            ; System call to 8E6
$BFC    $CFDC   RND      VF, #DC         ; VF = random & DC
$BFE    $18A3   JP       $8A3            ; Jump to 8A3
$C00    $334C   SE       V3, #4C         ; Skip if V3 == 76
$C02    $2ABB   CALL     $ABB            ; Call subroutine at ABB
$C04    $DDC6   DRW      VD, VC, #6      ; Draw 6-byte sprite at VD, VC
$C06    $E682   UNKNOWN  $E682           ; Unknown Exxx instruction
$C08    $35C4   SE       V5, #C4         ; Skip if V5 == 196
$C0A    $C13D   RND      V1, #3D         ; V1 = random & 3D
$C0C    $3B65   SE       VB, #65         ; Skip if VB == 101
$C0E    $1D4F   JP       $D4F            ; Jump to D4F
$C10    $BD35   JP       V0, $D35        ; Jump to V0 + D35
$C12    $D2D7   DRW      V2, VD, #7      ; Draw 7-byte sprite at V2, VD
$C14    $EE76   UNKNOWN  $EE76           ; Unknown Exxx instruction
$C16    $8616   SHR      V6              ; V6 >>= 1, VF = LSB
$C18    $F008   UNKNOWN  F008            ; Unknown Fxxx instruction
$C1A    $A770   LD       I, $770         ; Load 770 into I
$C1C    $1516   JP       $516            ; Jump to 516
$C1E    $D3D7   DRW      V3, VD, #7      ; Draw 7-byte sprite at V3, VD
$C20    $7B12   ADD      VB, #12         ; Add 18 to VB
$C22    $C3C2   RND      V3, #C2         ; V3 = random & C2
$C24    $91D8   UNKNOWN  $91D8           ; Unknown 9xxx instruction
$C26    $5C8B   UNKNOWN  $5C8B           ; Unknown 5xxx instruction
$C28    $92C5   UNKNOWN  $92C5           ; Unknown 9xxx instruction
$C2A    $AC19   LD       I, $C19         ; Load C19 into I
$C2C    $6242   LD       V2, #42         ; Load 66 into V2
$C2E    $68D2   LD       V8, #D2         ; Load 210 into V8
$C30    $A8AE   LD       I, $8AE         ; Load 8AE into I
$C32    $DCBE   DRW      VC, VB, #E      ; Draw 14-byte sprite at VC, VB
$C34    $02BF   SYS      $2BF            ; System call to 2BF
$C36    $C17F   RND      V1, #7F         ; V1 = random & 7F
$C38    $5367   UNKNOWN  $5367           ; Unknown 5xxx instruction
$C3A    $FD86   UNKNOWN  FD86            ; Unknown Fxxx instruction
$C3C    $0238   SYS      $238            ; System call to 238
$C3E    $64ED   LD       V4, #ED         ; Load 237 into V4
$C40    $6DDA   LD       VD, #DA         ; Load 218 into VD
$C42    $CD10   RND      VD, #10         ; VD = random & 10
$C44    $4E69   SNE      VE, #69         ; Skip if VE != 105
$C46    $171F   JP       $71F            ; Jump to 71F
$C48    $0EE7   SYS      $EE7            ; System call to EE7
$C4A    $4DF4   SNE      VD, #F4         ; Skip if VD != 244
$C4C    $35FD   SE       V5, #FD         ; Skip if V5 == 253
$C4E    $E603   UNKNOWN  $E603           ; Unknown Exxx instruction
$C50    $A559   LD       I, $559         ; Load 559 into I
$C52    $0F4E   SYS      $F4E            ; System call to F4E
$C54    $EB38   UNKNOWN  $EB38           ; Unknown Exxx instruction
$C56    $A610   LD       I, $610         ; Load 610 into I
$C58    $8626   SHR      V6              ; V6 >>= 1, VF = LSB
$C5A    $6384   LD       V3, #84         ; Load 132 into V3
$C5C    $6D91   LD       VD, #91         ; Load 145 into VD
$C5E    $963A   UNKNOWN  $963A           ; Unknown 9xxx instruction
$C60    $EFAC   UNKNOWN  $EFAC           ; Unknown Exxx instruction
$C62    $D4E2   DRW      V4, VE, #2      ; Draw 2-byte sprite at V4, VE
$C64    $0FF7   SYS      $FF7            ; System call to FF7
$C66    $63B4   LD       V3, #B4         ; Load 180 into V3
$C68    $CB6A   RND      VB, #6A         ; VB = random & 6A
$C6A    $407E   SNE      V0, #7E         ; Skip if V0 != 126
$C6C    $0665   SYS      $665            ; System call to 665
$C6E    $7917   ADD      V9, #17         ; Add 23 to V9
$C70    $926E   UNKNOWN  $926E           ; Unknown 9xxx instruction
$C72    $F677   UNKNOWN  F677            ; Unknown Fxxx instruction
$C74    $76AC   ADD      V6, #AC         ; Add 172 to V6
$C76    $ED14   UNKNOWN  $ED14           ; Unknown Exxx instruction
$C78    $9622   UNKNOWN  $9622           ; Unknown 9xxx instruction
$C7A    $BD8B   JP       V0, $D8B        ; Jump to V0 + D8B
$C7C    $FDC6   UNKNOWN  FDC6            ; Unknown Fxxx instruction
$C7E    $666B   LD       V6, #6B         ; Load 107 into V6
$C80    $B20E   JP       V0, $20E        ; Jump to V0 + 20E
$C82    $7A8A   ADD      VA, #8A         ; Add 138 to VA
$C84    $C994   RND      V9, #94         ; V9 = random & 94
$C86    $64E0   LD       V4, #E0         ; Load 224 into V4
$C88    $47EC   SNE      V7, #EC         ; Skip if V7 != 236
$C8A    $553C   UNKNOWN  $553C           ; Unknown 5xxx instruction
$C8C    $0AE4   SYS      $AE4            ; System call to AE4
$C8E    $9E86   UNKNOWN  $9E86           ; Unknown 9xxx instruction
$C90    $844A   UNKNOWN  844A            ; Unknown 8xxx instruction
$C92    $9F94   UNKNOWN  $9F94           ; Unknown 9xxx instruction
$C94    $6DEB   LD       VD, #EB         ; Load 235 into VD
$C96    $5D27   UNKNOWN  $5D27           ; Unknown 5xxx instruction
$C98    $CD33   RND      VD, #33         ; VD = random & 33
$C9A    $C243   RND      V2, #43         ; V2 = random & 43
$C9C    $1796   JP       $796            ; Jump to 796
$C9E    $6DB3   LD       VD, #B3         ; Load 179 into VD
$CA0    $312C   SE       V1, #2C         ; Skip if V1 == 44
$CA2    $F055   LD       [I], V0         ; Store V0-V0 at I
$CA4    $C71F   RND      V7, #1F         ; V7 = random & 1F
$CA6    $0883   SYS      $883            ; System call to 883
$CA8    $80F1   OR       V0, VF          ; V0 |= VF
$CAA    $71C7   ADD      V1, #C7         ; Add 199 to V1
$CAC    $4C36   SNE      VC, #36         ; Skip if VC != 54
$CAE    $1F47   JP       $F47            ; Jump to F47
$CB0    $9820   SNE      V8, V2          ; Skip if V8 != V2
$CB2    $CB5B   RND      VB, #5B         ; VB = random & 5B
$CB4    $3E2F   SE       VE, #2F         ; Skip if VE == 47
$CB6    $9E99   UNKNOWN  $9E99           ; Unknown 9xxx instruction
$CB8    $5E77   UNKNOWN  $5E77           ; Unknown 5xxx instruction
$CBA    $D152   DRW      V1, V5, #2      ; Draw 2-byte sprite at V1, V5
$CBC    $8A8F   UNKNOWN  8A8F            ; Unknown 8xxx instruction
$CBE    $231B   CALL     $31B            ; Call subroutine at 31B
$CC0    $356D   SE       V5, #6D         ; Skip if V5 == 109
$CC2    $400E   SNE      V0, #0E         ; Skip if V0 != 14
$CC4    $FAF8   UNKNOWN  FAF8            ; Unknown Fxxx instruction
$CC6    $44CF   SNE      V4, #CF         ; Skip if V4 != 207
$CC8    $80AE   SHL      V0              ; V0 <<= 1, VF = MSB
$CCA    $3153   SE       V1, #53         ; Skip if V1 == 83
$CCC    $F642   UNKNOWN  F642            ; Unknown Fxxx instruction
$CCE    $588F   UNKNOWN  $588F           ; Unknown 5xxx instruction
$CD0    $3116   SE       V1, #16         ; Skip if V1 == 22
$CD2    $6D93   LD       VD, #93         ; Load 147 into VD
$CD4    $51E4   UNKNOWN  $51E4           ; Unknown 5xxx instruction
$CD6    $DE49   DRW      VE, V4, #9      ; Draw 9-byte sprite at VE, V4
$CD8    $E9DC   UNKNOWN  $E9DC           ; Unknown Exxx instruction
$CDA    $D3C6   DRW      V3, VC, #6      ; Draw 6-byte sprite at V3, VC
$CDC    $2804   CALL     $804            ; Call subroutine at 804
$CDE    $EAB7   UNKNOWN  $EAB7           ; Unknown Exxx instruction
$CE0    $2DFB   CALL     $DFB            ; Call subroutine at DFB
$CE2    $B04F   JP       V0, $04F        ; Jump to V0 + 04F
$CE4    $2216   CALL     $216            ; Call subroutine at 216
$CE6    $B440   JP       V0, $440        ; Jump to V0 + 440
$CE8    $6496   LD       V4, #96         ; Load 150 into V4
$CEA    $0695   SYS      $695            ; System call to 695
$CEC    $38D9   SE       V8, #D9         ; Skip if V8 == 217
$CEE    $E88D   UNKNOWN  $E88D           ; Unknown Exxx instruction
$CF0    $24B7   CALL     $4B7            ; Call subroutine at 4B7
$CF2    $E4CF   UNKNOWN  $E4CF           ; Unknown Exxx instruction
$CF4    $9DCC   UNKNOWN  $9DCC           ; Unknown 9xxx instruction
$CF6    $FDF6   UNKNOWN  FDF6            ; Unknown Fxxx instruction
$CF8    $99EE   UNKNOWN  $99EE           ; Unknown 9xxx instruction
$CFA    $E271   UNKNOWN  $E271           ; Unknown Exxx instruction
$CFC    $444A   SNE      V4, #4A         ; Skip if V4 != 74
$CFE    $FC8D   UNKNOWN  FC8D            ; Unknown Fxxx instruction
$D00    $DA0D   DRW      VA, V0, #D      ; Draw 13-byte sprite at VA, V0
$D02    $02AB   SYS      $2AB            ; System call to 2AB
$D04    $FB34   UNKNOWN  FB34            ; Unknown Fxxx instruction
$D06    $9F1E   UNKNOWN  $9F1E           ; Unknown 9xxx instruction
$D08    $A9E7   LD       I, $9E7         ; Load 9E7 into I
$D0A    $6ADF   LD       VA, #DF         ; Load 223 into VA
$D0C    $5E88   UNKNOWN  $5E88           ; Unknown 5xxx instruction
$D0E    $9678   UNKNOWN  $9678           ; Unknown 9xxx instruction
$D10    $AEDE   LD       I, $EDE         ; Load EDE into I
$D12    $DBD2   DRW      VB, VD, #2      ; Draw 2-byte sprite at VB, VD
$D14    $25C4   CALL     $5C4            ; Call subroutine at 5C4
$D16    $63EB   LD       V3, #EB         ; Load 235 into V3
$D18    $1B22   JP       $B22            ; Jump to B22
$D1A    $4E66   SNE      VE, #66         ; Skip if VE != 102
$D1C    $3F0B   SE       VF, #0B         ; Skip if VF == 11
$D1E    $A23C   LD       I, $23C         ; Load 23C into I
$D20    $0347   SYS      $347            ; System call to 347
$D22    $FD2B   UNKNOWN  FD2B            ; Unknown Fxxx instruction
$D24    $8E29   UNKNOWN  8E29            ; Unknown 8xxx instruction
$D26    $A7AD   LD       I, $7AD         ; Load 7AD into I
$D28    $7012   ADD      V0, #12         ; Add 18 to V0
$D2A    $4648   SNE      V6, #48         ; Skip if V6 != 72
$D2C    $F916   UNKNOWN  F916            ; Unknown Fxxx instruction
$D2E    $B002   JP       V0, $002        ; Jump to V0 + 002
$D30    $51E3   UNKNOWN  $51E3           ; Unknown 5xxx instruction
$D32    $6998   LD       V9, #98         ; Load 152 into V9
$D34    $5408   UNKNOWN  $5408           ; Unknown 5xxx instruction
$D36    $AA2D   LD       I, $A2D         ; Load A2D into I
$D38    $C784   RND      V7, #84         ; V7 = random & 84
$D3A    $A0DE   LD       I, $0DE         ; Load 0DE into I
$D3C    $7B9E   ADD      VB, #9E         ; Add 158 to VB
$D3E    $DF91   DRW      VF, V9, #1      ; Draw 1-byte sprite at VF, V9
$D40    $20FD   CALL     $0FD            ; Call subroutine at 0FD
$D42    $B96B   JP       V0, $96B        ; Jump to V0 + 96B
$D44    $6F10   LD       VF, #10         ; Load 16 into VF
$D46    $47E7   SNE      V7, #E7         ; Skip if V7 != 231
$D48    $D073   DRW      V0, V7, #3      ; Draw 3-byte sprite at V0, V7
$D4A    $09A7   SYS      $9A7            ; System call to 9A7
$D4C    $9D63   UNKNOWN  $9D63           ; Unknown 9xxx instruction
$D4E    $6A4C   LD       VA, #4C         ; Load 76 into VA
$D50    $8310   LD       V3, V1          ; V3 = V1
$D52    $F28D   UNKNOWN  F28D            ; Unknown Fxxx instruction
$D54    $A8E9   LD       I, $8E9         ; Load 8E9 into I
$D56    $D45F   DRW      V4, V5, #F      ; Draw 15-byte sprite at V4, V5
$D58    $5A4A   UNKNOWN  $5A4A           ; Unknown 5xxx instruction
$D5A    $9263   UNKNOWN  $9263           ; Unknown 9xxx instruction
$D5C    $8AA1   OR       VA, VA          ; VA |= VA
$D5E    $FBF5   UNKNOWN  FBF5            ; Unknown Fxxx instruction
$D60    $1858   JP       $858            ; Jump to 858
$D62    $C87A   RND      V8, #7A         ; V8 = random & 7A
$D64    $4EB4   SNE      VE, #B4         ; Skip if VE != 180
$D66    $E30B   UNKNOWN  $E30B           ; Unknown Exxx instruction
$D68    $CA85   RND      VA, #85         ; VA = random & 85
$D6A    $5B42   UNKNOWN  $5B42           ; Unknown 5xxx instruction
$D6C    $A79C   LD       I, $79C         ; Load 79C into I
$D6E    $0329   SYS      $329            ; System call to 329
$D70    $24E6   CALL     $4E6            ; Call subroutine at 4E6
$D72    $AD10   LD       I, $D10         ; Load D10 into I
$D74    $FDDA   UNKNOWN  FDDA            ; Unknown Fxxx instruction
$D76    $BD24   JP       V0, $D24        ; Jump to V0 + D24
$D78    $08C0   SYS      $8C0            ; System call to 8C0
$D7A    $BCDE   JP       V0, $CDE        ; Jump to V0 + CDE
$D7C    $343E   SE       V4, #3E         ; Skip if V4 == 62
$D7E    $4B25   SNE      VB, #25         ; Skip if VB != 37
$D80    $7AD5   ADD      VA, #D5         ; Add 213 to VA
$D82    $C4A9   RND      V4, #A9         ; V4 = random & A9
$D84    $6B24   LD       VB, #24         ; Load 36 into VB
$D86    $37DA   SE       V7, #DA         ; Skip if V7 == 218
$D88    $1309   JP       $309            ; Jump to 309
$D8A    $8F99   UNKNOWN  8F99            ; Unknown 8xxx instruction
$D8C    $D665   DRW      V6, V6, #5      ; Draw 5-byte sprite at V6, V6
$D8E    $F44F   UNKNOWN  F44F            ; Unknown Fxxx instruction
$D90    $53B8   UNKNOWN  $53B8           ; Unknown 5xxx instruction
$D92    $AEB4   LD       I, $EB4         ; Load EB4 into I
$D94    $D083   DRW      V0, V8, #3      ; Draw 3-byte sprite at V0, V8
$D96    $23E1   CALL     $3E1            ; Call subroutine at 3E1
$D98    $A05C   LD       I, $05C         ; Load 05C into I
$D9A    $3D7B   SE       VD, #7B         ; Skip if VD == 123
$D9C    $69AA   LD       V9, #AA         ; Load 170 into V9
$D9E    $CEF5   RND      VE, #F5         ; VE = random & F5
$DA0    $F5A4   UNKNOWN  F5A4            ; Unknown Fxxx instruction
$DA2    $E493   UNKNOWN  $E493           ; Unknown Exxx instruction
$DA4    $8A1E   SHL      VA              ; VA <<= 1, VF = MSB
$DA6    $8156   SHR      V1              ; V1 >>= 1, VF = LSB
$DA8    $B785   JP       V0, $785        ; Jump to V0 + 785
$DAA    $3924   SE       V9, #24         ; Skip if V9 == 36
$DAC    $7110   ADD      V1, #10         ; Add 16 to V1
$DAE    $4B0A   SNE      VB, #0A         ; Skip if VB != 10
$DB0    $862A   UNKNOWN  862A            ; Unknown 8xxx instruction
$DB2    $F1AC   UNKNOWN  F1AC            ; Unknown Fxxx instruction
$DB4    $F33C   UNKNOWN  F33C            ; Unknown Fxxx instruction
$DB6    $C1DD   RND      V1, #DD         ; V1 = random & DD
$DB8    $3EBD   SE       VE, #BD         ; Skip if VE == 189
$DBA    $E82E   UNKNOWN  $E82E           ; Unknown Exxx instruction
$DBC    $7ED5   ADD      VE, #D5         ; Add 213 to VE
$DBE    $B27F   JP       V0, $27F        ; Jump to V0 + 27F
$DC0    $FF87   UNKNOWN  FF87            ; Unknown Fxxx instruction
$DC2    $85B0   LD       V5, VB          ; V5 = VB
$DC4    $5DCB   UNKNOWN  $5DCB           ; Unknown 5xxx instruction
$DC6    $84E0   LD       V4, VE          ; V4 = VE
$DC8    $BEA1   JP       V0, $EA1        ; Jump to V0 + EA1
$DCA    $1613   JP       $613            ; Jump to 613
$DCC    $868A   UNKNOWN  868A            ; Unknown 8xxx instruction
$DCE    $C35E   RND      V3, #5E         ; V3 = random & 5E
$DD0    $9771   UNKNOWN  $9771           ; Unknown 9xxx instruction
$DD2    $5BA3   UNKNOWN  $5BA3           ; Unknown 5xxx instruction
$DD4    $9A43   UNKNOWN  $9A43           ; Unknown 9xxx instruction
$DD6    $D751   DRW      V7, V5, #1      ; Draw 1-byte sprite at V7, V5
$DD8    $EBA4   UNKNOWN  $EBA4           ; Unknown Exxx instruction
$DDA    $34F5   SE       V4, #F5         ; Skip if V4 == 245
$DDC    $3DED   SE       VD, #ED         ; Skip if VD == 237
$DDE    $3100   SE       V1, #00         ; Skip if V1 == 0
$DE0    $4EC5   SNE      VE, #C5         ; Skip if VE != 197
$DE2    $7AE7   ADD      VA, #E7         ; Add 231 to VA
$DE4    $94F5   UNKNOWN  $94F5           ; Unknown 9xxx instruction
$DE6    $8EBF   UNKNOWN  8EBF            ; Unknown 8xxx instruction
$DE8    $4A85   SNE      VA, #85         ; Skip if VA != 133
$DEA    $6DFA   LD       VD, #FA         ; Load 250 into VD
$DEC    $4655   SNE      V6, #55         ; Skip if V6 != 85
$DEE    $D227   DRW      V2, V2, #7      ; Draw 7-byte sprite at V2, V2
$DF0    $E3FB   UNKNOWN  $E3FB           ; Unknown Exxx instruction
$DF2    $F40D   UNKNOWN  F40D            ; Unknown Fxxx instruction
$DF4    $8752   AND      V7, V5          ; V7 &= V5
$DF6    $B04C   JP       V0, $04C        ; Jump to V0 + 04C
$DF8    $FB62   UNKNOWN  FB62            ; Unknown Fxxx instruction
$DFA    $D719   DRW      V7, V1, #9      ; Draw 9-byte sprite at V7, V1
$DFC    $65B6   LD       V5, #B6         ; Load 182 into V5
$DFE    $4ADF   SNE      VA, #DF         ; Skip if VA != 223
$E00    $E700   UNKNOWN  $E700           ; Unknown Exxx instruction
$E02    $38B3   SE       V8, #B3         ; Skip if V8 == 179
$E04    $99F2   UNKNOWN  $99F2           ; Unknown 9xxx instruction
$E06    $E00C   UNKNOWN  $E00C           ; Unknown Exxx instruction
$E08    $B9F8   JP       V0, $9F8        ; Jump to V0 + 9F8
$E0A    $F854   UNKNOWN  F854            ; Unknown Fxxx instruction
$E0C    $BBF3   JP       V0, $BF3        ; Jump to V0 + BF3
$E0E    $812E   SHL      V1              ; V1 <<= 1, VF = MSB
$E10    $ECD2   UNKNOWN  $ECD2           ; Unknown Exxx instruction
$E12    $3718   SE       V7, #18         ; Skip if V7 == 24
$E14    $A3AF   LD       I, $3AF         ; Load 3AF into I
$E16    $C3C3   RND      V3, #C3         ; V3 = random & C3
$E18    $84B5   SUB      V4, VB          ; V4 -= VB, VF = !borrow
$E1A    $95B0   SNE      V5, VB          ; Skip if V5 != VB
$E1C    $974C   UNKNOWN  $974C           ; Unknown 9xxx instruction
$E1E    $F9C0   UNKNOWN  F9C0            ; Unknown Fxxx instruction
$E20    $54A3   UNKNOWN  $54A3           ; Unknown 5xxx instruction
$E22    $0896   SYS      $896            ; System call to 896
$E24    $4323   SNE      V3, #23         ; Skip if V3 != 35
$E26    $755F   ADD      V5, #5F         ; Add 95 to V5
$E28    $4964   SNE      V9, #64         ; Skip if V9 != 100
$E2A    $89EE   SHL      V9              ; V9 <<= 1, VF = MSB
$E2C    $999D   UNKNOWN  $999D           ; Unknown 9xxx instruction
$E2E    $44DD   SNE      V4, #DD         ; Skip if V4 != 221
$E30    $9F6E   UNKNOWN  $9F6E           ; Unknown 9xxx instruction
$E32    $22E5   CALL     $2E5            ; Call subroutine at 2E5
$E34    $8F7D   UNKNOWN  8F7D            ; Unknown 8xxx instruction
$E36    $0BA1   SYS      $BA1            ; System call to BA1
$E38    $5696   UNKNOWN  $5696           ; Unknown 5xxx instruction
$E3A    $35AF   SE       V5, #AF         ; Skip if V5 == 175
$E3C    $7CD9   ADD      VC, #D9         ; Add 217 to VC
$E3E    $B699   JP       V0, $699        ; Jump to V0 + 699
$E40    $2ED0   CALL     $ED0            ; Call subroutine at ED0
$E42    $53DB   UNKNOWN  $53DB           ; Unknown 5xxx instruction
$E44    $04E7   SYS      $4E7            ; System call to 4E7
$E46    $07A9   SYS      $7A9            ; System call to 7A9
$E48    $412C   SNE      V1, #2C         ; Skip if V1 != 44
$E4A    $C146   RND      V1, #46         ; V1 = random & 46
$E4C    $9E4F   UNKNOWN  $9E4F           ; Unknown 9xxx instruction
$E4E    $AFD3   LD       I, $FD3         ; Load FD3 into I
$E50    $41ED   SNE      V1, #ED         ; Skip if V1 != 237
$E52    $F875   UNKNOWN  F875            ; Unknown Fxxx instruction
$E54    $5325   UNKNOWN  $5325           ; Unknown 5xxx instruction
$E56    $CDDB   RND      VD, #DB         ; VD = random & DB
$E58    $9396   UNKNOWN  $9396           ; Unknown 9xxx instruction
$E5A    $896E   SHL      V9              ; V9 <<= 1, VF = MSB
$E5C    $D2F1   DRW      V2, VF, #1      ; Draw 1-byte sprite at V2, VF
$E5E    $DF37   DRW      VF, V3, #7      ; Draw 7-byte sprite at VF, V3
$E60    $E821   UNKNOWN  $E821           ; Unknown Exxx instruction
$E62    $AE09   LD       I, $E09         ; Load E09 into I
$E64    $2793   CALL     $793            ; Call subroutine at 793
$E66    $486B   SNE      V8, #6B         ; Skip if V8 != 107
$E68    $14FA   JP       $4FA            ; Jump to 4FA
$E6A    $10E3   JP       $0E3            ; Jump to 0E3
$E6C    $7545   ADD      V5, #45         ; Add 69 to V5
$E6E    $406D   SNE      V0, #6D         ; Skip if V0 != 109
$E70    $179B   JP       $79B            ; Jump to 79B
$E72    $42EF   SNE      V2, #EF         ; Skip if V2 != 239
$E74    $068A   SYS      $68A            ; System call to 68A
$E76    $6E26   LD       VE, #26         ; Load 38 into VE
$E78    $20FC   CALL     $0FC            ; Call subroutine at 0FC
$E7A    $5063   UNKNOWN  $5063           ; Unknown 5xxx instruction
$E7C    $2BE8   CALL     $BE8            ; Call subroutine at BE8
$E7E    $5DAA   UNKNOWN  $5DAA           ; Unknown 5xxx instruction
$E80    $5A93   UNKNOWN  $5A93           ; Unknown 5xxx instruction
$E82    $ED3D   UNKNOWN  $ED3D           ; Unknown Exxx instruction
$E84    $961A   UNKNOWN  $961A           ; Unknown 9xxx instruction
$E86    $02A9   SYS      $2A9            ; System call to 2A9
$E88    $9DD9   UNKNOWN  $9DD9           ; Unknown 9xxx instruction
$E8A    $36FB   SE       V6, #FB         ; Skip if V6 == 251
$E8C    $EE3C   UNKNOWN  $EE3C           ; Unknown Exxx instruction
$E8E    $CD94   RND      VD, #94         ; VD = random & 94
$E90    $BEA4   JP       V0, $EA4        ; Jump to V0 + EA4
$E92    $7878   ADD      V8, #78         ; Add 120 to V8
$E94    $5CD4   UNKNOWN  $5CD4           ; Unknown 5xxx instruction
$E96    $A7C9   LD       I, $7C9         ; Load 7C9 into I
$E98    $D4C2   DRW      V4, VC, #2      ; Draw 2-byte sprite at V4, VC
$E9A    $1133   JP       $133            ; Jump to 133
$E9C    $0AF0   SYS      $AF0            ; System call to AF0
$E9E    $E25A   UNKNOWN  $E25A           ; Unknown Exxx instruction
$EA0    $9F69   UNKNOWN  $9F69           ; Unknown 9xxx instruction
$EA2    $1CB2   JP       $CB2            ; Jump to CB2
$EA4    $2ECE   CALL     $ECE            ; Call subroutine at ECE
$EA6    $7445   ADD      V4, #45         ; Add 69 to V4
$EA8    $F65D   UNKNOWN  F65D            ; Unknown Fxxx instruction
$EAA    $188C   JP       $88C            ; Jump to 88C
$EAC    $41AC   SNE      V1, #AC         ; Skip if V1 != 172
$EAE    $E0EE   UNKNOWN  $E0EE           ; Unknown Exxx instruction
$EB0    $4B50   SNE      VB, #50         ; Skip if VB != 80
$EB2    $F4EE   UNKNOWN  F4EE            ; Unknown Fxxx instruction
$EB4    $55B5   UNKNOWN  $55B5           ; Unknown 5xxx instruction
$EB6    $9A3C   UNKNOWN  $9A3C           ; Unknown 9xxx instruction
$EB8    $6A9D   LD       VA, #9D         ; Load 157 into VA
$EBA    $F1B9   UNKNOWN  F1B9            ; Unknown Fxxx instruction
$EBC    $8383   XOR      V3, V8          ; V3 ^= V8
$EBE    $7B4F   ADD      VB, #4F         ; Add 79 to VB
$EC0    $5B93   UNKNOWN  $5B93           ; Unknown 5xxx instruction
$EC2    $2EB6   CALL     $EB6            ; Call subroutine at EB6
$EC4    $B922   JP       V0, $922        ; Jump to V0 + 922
$EC6    $8FD6   SHR      VF              ; VF >>= 1, VF = LSB
$EC8    $FDF3   UNKNOWN  FDF3            ; Unknown Fxxx instruction
$ECA    $AB70   LD       I, $B70         ; Load B70 into I
$ECC    $F4E1   UNKNOWN  F4E1            ; Unknown Fxxx instruction
$ECE    $65D4   LD       V5, #D4         ; Load 212 into V5
$ED0    $480A   SNE      V8, #0A         ; Skip if V8 != 10
$ED2    $01B5   SYS      $1B5            ; System call to 1B5
$ED4    $5435   UNKNOWN  $5435           ; Unknown 5xxx instruction
$ED6    $B38F   JP       V0, $38F        ; Jump to V0 + 38F
$ED8    $2CC8   CALL     $CC8            ; Call subroutine at CC8
$EDA    $C17E   RND      V1, #7E         ; V1 = random & 7E
$EDC    $AAB7   LD       I, $AB7         ; Load AB7 into I
$EDE    $618B   LD       V1, #8B         ; Load 139 into V1
$EE0    $7576   ADD      V5, #76         ; Add 118 to V5
$EE2    $41B2   SNE      V1, #B2         ; Skip if V1 != 178
$EE4    $90D9   UNKNOWN  $90D9           ; Unknown 9xxx instruction
$EE6    $7578   ADD      V5, #78         ; Add 120 to V5
$EE8    $1CD5   JP       $CD5            ; Jump to CD5
$EEA    $973F   UNKNOWN  $973F           ; Unknown 9xxx instruction
$EEC    $B430   JP       V0, $430        ; Jump to V0 + 430
$EEE    $05B8   SYS      $5B8            ; System call to 5B8
$EF0    $8714   ADD      V7, V1          ; V7 += V1, VF = carry
$EF2    $2BF7   CALL     $BF7            ; Call subroutine at BF7
$EF4    $A44A   LD       I, $44A         ; Load 44A into I
$EF6    $8A1D   UNKNOWN  8A1D            ; Unknown 8xxx instruction
$EF8    $45C0   SNE      V5, #C0         ; Skip if V5 != 192
$EFA    $820D   UNKNOWN  820D            ; Unknown 8xxx instruction
$EFC    $6DC9   LD       VD, #C9         ; Load 201 into VD
$EFE    $862E   SHL      V6              ; V6 <<= 1, VF = MSB
$F00    $77ED   ADD      V7, #ED         ; Add 237 to V7
$F02    $A8BB   LD       I, $8BB         ; Load 8BB into I
$F04    $E61F   UNKNOWN  $E61F           ; Unknown Exxx instruction
$F06    $A7CD   LD       I, $7CD         ; Load 7CD into I
$F08    $4AA0   SNE      VA, #A0         ; Skip if VA != 160
$F0A    $52EE   UNKNOWN  $52EE           ; Unknown 5xxx instruction
$F0C    $38F4   SE       V8, #F4         ; Skip if V8 == 244
$F0E    $1D9F   JP       $D9F            ; Jump to D9F
$F10    $7CF6   ADD      VC, #F6         ; Add 246 to VC
$F12    $0DC7   SYS      $DC7            ; System call to DC7
$F14    $D8CF   DRW      V8, VC, #F      ; Draw 15-byte sprite at V8, VC
$F16    $5256   UNKNOWN  $5256           ; Unknown 5xxx instruction
$F18    $97B7   UNKNOWN  $97B7           ; Unknown 9xxx instruction
$F1A    $313B   SE       V1, #3B         ; Skip if V1 == 59
$F1C    $9195   UNKNOWN  $9195           ; Unknown 9xxx instruction
$F1E    $B430   JP       V0, $430        ; Jump to V0 + 430
$F20    $2F99   CALL     $F99            ; Call subroutine at F99
$F22    $AC0C   LD       I, $C0C         ; Load C0C into I
$F24    $D8C4   DRW      V8, VC, #4      ; Draw 4-byte sprite at V8, VC
$F26    $1515   JP       $515            ; Jump to 515
$F28    $B150   JP       V0, $150        ; Jump to V0 + 150
$F2A    $AFD9   LD       I, $FD9         ; Load FD9 into I
$F2C    $728D   ADD      V2, #8D         ; Add 141 to V2
$F2E    $1375   JP       $375            ; Jump to 375
$F30    $DBEF   DRW      VB, VE, #F      ; Draw 15-byte sprite at VB, VE
$F32    $7AD4   ADD      VA, #D4         ; Add 212 to VA
$F34    $9D4F   UNKNOWN  $9D4F           ; Unknown 9xxx instruction
$F36    $BE7C   JP       V0, $E7C        ; Jump to V0 + E7C
$F38    $BB92   JP       V0, $B92        ; Jump to V0 + B92
$F3A    $EE85   UNKNOWN  $EE85           ; Unknown Exxx instruction
$F3C    $E2A4   UNKNOWN  $E2A4           ; Unknown Exxx instruction
$F3E    $6B51   LD       VB, #51         ; Load 81 into VB
$F40    $5F2A   UNKNOWN  $5F2A           ; Unknown 5xxx instruction
$F42    $ADF6   LD       I, $DF6         ; Load DF6 into I
$F44    $61AA   LD       V1, #AA         ; Load 170 into V1
$F46    $C8EB   RND      V8, #EB         ; V8 = random & EB
$F48    $2B20   CALL     $B20            ; Call subroutine at B20
$F4A    $5D0F   UNKNOWN  $5D0F           ; Unknown 5xxx instruction
$F4C    $2C27   CALL     $C27            ; Call subroutine at C27
$F4E    $4B7E   SNE      VB, #7E         ; Skip if VB != 126
$F50    $84E4   ADD      V4, VE          ; V4 += VE, VF = carry
$F52    $756F   ADD      V5, #6F         ; Add 111 to V5
$F54    $62B3   LD       V2, #B3         ; Load 179 into V2
$F56    $229A   CALL     $29A            ; Call subroutine at 29A
$F58    $2252   CALL     $252            ; Call subroutine at 252
$F5A    $9759   UNKNOWN  $9759           ; Unknown 9xxx instruction
$F5C    $1187   JP       $187            ; Jump to 187
$F5E    $545C   UNKNOWN  $545C           ; Unknown 5xxx instruction
$F60    $9418   UNKNOWN  $9418           ; Unknown 9xxx instruction
$F62    $5DC6   UNKNOWN  $5DC6           ; Unknown 5xxx instruction
$F64    $14EB   JP       $4EB            ; Jump to 4EB
$F66    $B454   JP       V0, $454        ; Jump to V0 + 454
$F68    $FF0E   UNKNOWN  FF0E            ; Unknown Fxxx instruction
$F6A    $CD3D   RND      VD, #3D         ; VD = random & 3D
$F6C    $7AC6   ADD      VA, #C6         ; Add 198 to VA
$F6E    $A126   LD       I, $126         ; Load 126 into I
$F70    $35FE   SE       V5, #FE         ; Skip if V5 == 254
$F72    $58F6   UNKNOWN  $58F6           ; Unknown 5xxx instruction
$F74    $AA88   LD       I, $A88         ; Load A88 into I
$F76    $6529   LD       V5, #29         ; Load 41 into V5
$F78    $1C44   JP       $C44            ; Jump to C44
$F7A    $C00E   RND      V0, #0E         ; V0 = random & 0E
$F7C    $61B5   LD       V1, #B5         ; Load 181 into V1
$F7E    $BD7C   JP       V0, $D7C        ; Jump to V0 + D7C
$F80    $6607   LD       V6, #07         ; Load 7 into V6
$F82    $5FAB   UNKNOWN  $5FAB           ; Unknown 5xxx instruction
$F84    $CF0E   RND      VF, #0E         ; VF = random & 0E
$F86    $7569   ADD      V5, #69         ; Add 105 to V5
$F88    $EEE5   UNKNOWN  $EEE5           ; Unknown Exxx instruction
$F8A    $9C84   UNKNOWN  $9C84           ; Unknown 9xxx instruction
$F8C    $3157   SE       V1, #57         ; Skip if V1 == 87
$F8E    $5540   SE       V5, V4          ; Skip if V5 == V4
$F90    $16B5   JP       $6B5            ; Jump to 6B5
$F92    $28F8   CALL     $8F8            ; Call subroutine at 8F8
$F94    $B365   JP       V0, $365        ; Jump to V0 + 365
$F96    $75C4   ADD      V5, #C4         ; Add 196 to V5
$F98    $A511   LD       I, $511         ; Load 511 into I
$F9A    $E113   UNKNOWN  $E113           ; Unknown Exxx instruction
$F9C    $AD32   LD       I, $D32         ; Load D32 into I
$F9E    $36CC   SE       V6, #CC         ; Skip if V6 == 204
$FA0    $CCF9   RND      VC, #F9         ; VC = random & F9
$FA2    $4C18   SNE      VC, #18         ; Skip if VC != 24
$FA4    $5C68   UNKNOWN  $5C68           ; Unknown 5xxx instruction
$FA6    $4E41   SNE      VE, #41         ; Skip if VE != 65
$FA8    $BFC9   JP       V0, $FC9        ; Jump to V0 + FC9
$FAA    $9F32   UNKNOWN  $9F32           ; Unknown 9xxx instruction
$FAC    $3B0E   SE       VB, #0E         ; Skip if VB == 14
$FAE    $EA6B   UNKNOWN  $EA6B           ; Unknown Exxx instruction
$FB0    $03F5   SYS      $3F5            ; System call to 3F5
$FB2    $6E63   LD       VE, #63         ; Load 99 into VE
$FB4    $9D71   UNKNOWN  $9D71           ; Unknown 9xxx instruction
$FB6    $7AF1   ADD      VA, #F1         ; Add 241 to VA
$FB8    $DBB5   DRW      VB, VB, #5      ; Draw 5-byte sprite at VB, VB
$FBA    $CBDD   RND      VB, #DD         ; VB = random & DD
$FBC    $9182   UNKNOWN  $9182           ; Unknown 9xxx instruction
$FBE    $E768   UNKNOWN  $E768           ; Unknown Exxx instruction
$FC0    $88A3   XOR      V8, VA          ; V8 ^= VA
$FC2    $23B3   CALL     $3B3            ; Call subroutine at 3B3
$FC4    $6306   LD       V3, #06         ; Load 6 into V3
$FC6    $3477   SE       V4, #77         ; Skip if V4 == 119
$FC8    $B95F   JP       V0, $95F        ; Jump to V0 + 95F
$FCA    $C030   RND      V0, #30         ; V0 = random & 30
$FCC    $2FE1   CALL     $FE1            ; Call subroutine at FE1
$FCE    $4162   SNE      V1, #62         ; Skip if V1 != 98
$FD0    $63EC   LD       V3, #EC         ; Load 236 into V3
$FD2    $9003   UNKNOWN  $9003           ; Unknown 9xxx instruction
$FD4    $67EA   LD       V7, #EA         ; Load 234 into V7
$FD6    $E5CE   UNKNOWN  $E5CE           ; Unknown Exxx instruction
$FD8    $AD81   LD       I, $D81         ; Load D81 into I
$FDA    $7F0B   ADD      VF, #0B         ; Add 11 to VF
$FDC    $F764   UNKNOWN  F764            ; Unknown Fxxx instruction
$FDE    $AFC9   LD       I, $FC9         ; Load FC9 into I
$FE0    $7CAA   ADD      VC, #AA         ; Add 170 to VC
$FE2    $0325   SYS      $325            ; System call to 325
$FE4    $1B57   JP       $B57            ; Jump to B57
$FE6    $FA8A   UNKNOWN  FA8A            ; Unknown Fxxx instruction
$FE8    $5077   UNKNOWN  $5077           ; Unknown 5xxx instruction
$FEA    $B314   JP       V0, $314        ; Jump to V0 + 314
$FEC    $F4BA   UNKNOWN  F4BA            ; Unknown Fxxx instruction
$FEE    $2584   CALL     $584            ; Call subroutine at 584
$FF0    $C9C1   RND      V9, #C1         ; V9 = random & C1
$FF2    $B335   JP       V0, $335        ; Jump to V0 + 335
$FF4    $B5D7   JP       V0, $5D7        ; Jump to V0 + 5D7
$FF6    $0CB1   SYS      $CB1            ; System call to CB1
$FF8    $8399   UNKNOWN  8399            ; Unknown 8xxx instruction
$FFA    $B415   JP       V0, $415        ; Jump to V0 + 415
$FFC    $7CAB   ADD      VC, #AB         ; Add 171 to VC
$FFE    $81AA   UNKNOWN  81AA            ; Unknown 8xxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 467 (26.1%)
  LD      : 307 (17.1%)
  JP      : 210 (11.7%)
  ADD     : 119 ( 6.6%)
  SYS     : 115 ( 6.4%)
  SNE     : 113 ( 6.3%)
  CALL    : 111 ( 6.2%)
  SE      : 104 ( 5.8%)
  RND     : 102 ( 5.7%)
  DRW     : 101 ( 5.6%)
  SHL     :  10 ( 0.6%)
  OR      :   8 ( 0.4%)
  SHR     :   8 ( 0.4%)
  XOR     :   7 ( 0.4%)
  AND     :   6 ( 0.3%)
  SUBN    :   3 ( 0.2%)
  SUB     :   1 ( 0.1%)

Memory Operations: 426 (23.8%)
Arithmetic Operations: 144 (8.0%)
