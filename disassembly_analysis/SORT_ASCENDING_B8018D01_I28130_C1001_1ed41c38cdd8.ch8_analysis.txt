
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B8018D01_I28130_C1001_1ed41c38cdd8.ch8
ROM Size: 3584 bytes
Instructions Found: 1791

DISCOVERY INFORMATION:
Batch: 8018
Instance: 28130
Direction: ascending
Final Array: [0, 0, 0, 3, 32, 87, 91, 251]
Operations: R:0 W:1 C:10 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 121
Sort Array References:
  $204: LD I, $638 ; Load 638 into I
  $206: LD I, $C49 ; Load C49 into I
  $210: LD I, $E76 ; Load E76 into I
  $232: LD I, $79A ; Load 79A into I
  $270: LD I, $36C ; Load 36C into I
  $29A: LD I, $990 ; Load 990 into I
  $2BA: LD I, $FC0 ; Load FC0 into I
  $2CC: LD I, $51F ; Load 51F into I
  $348: LD I, $002 ; Load 002 into I
  $378: LD I, $508 ; Load 508 into I
  $37C: LD I, $FB7 ; Load FB7 into I
  $37E: LD I, $FC6 ; Load FC6 into I
  $38C: LD I, $64E ; Load 64E into I
  $396: LD I, $42F ; Load 42F into I
  $3DA: LD I, $081 ; Load 081 into I
  $41E: LD I, $292 ; Load 292 into I
  $428: LD I, $98B ; Load 98B into I
  $454: LD I, $41A ; Load 41A into I
  $486: LD I, $A70 ; Load A70 into I
  $492: LD I, $A4E ; Load A4E into I
  $496: LD I, $181 ; Load 181 into I
  $4B0: LD I, $BD2 ; Load BD2 into I
  $4B2: LD I, $1A6 ; Load 1A6 into I
  $4C2: LD I, $00D ; Load 00D into I
  $4D4: LD I, $757 ; Load 757 into I
  $4E8: LD I, $A87 ; Load A87 into I
  $5A0: LD I, $AB2 ; Load AB2 into I
  $5B2: LD I, $942 ; Load 942 into I
  $5B8: LD I, $CF2 ; Load CF2 into I
  $5DA: LD I, $FDD ; Load FDD into I
  $5E2: LD I, $E85 ; Load E85 into I
  $5E6: LD I, $893 ; Load 893 into I
  $5EC: LD I, $1ED ; Load 1ED into I
  $60C: LD I, $132 ; Load 132 into I
  $614: LD I, $287 ; Load 287 into I
  $61C: LD I, $6F2 ; Load 6F2 into I
  $636: LD I, $654 ; Load 654 into I
  $65A: LD I, $D29 ; Load D29 into I
  $660: LD I, $CE9 ; Load CE9 into I
  $67C: LD I, $795 ; Load 795 into I
  $69E: LD I, $E4C ; Load E4C into I
  $6BC: LD I, $624 ; Load 624 into I
  $700: LD I, $076 ; Load 076 into I
  $70E: LD I, $9A3 ; Load 9A3 into I
  $79E: LD I, $5DB ; Load 5DB into I
  $7E6: LD I, $632 ; Load 632 into I
  $7EC: LD I, $3D4 ; Load 3D4 into I
  $7F8: LD I, $6B9 ; Load 6B9 into I
  $874: LD I, $42C ; Load 42C into I
  $886: LD I, $4EC ; Load 4EC into I
  $89C: LD I, $147 ; Load 147 into I
  $8AA: LD I, $B26 ; Load B26 into I
  $8B2: LD I, $4A4 ; Load 4A4 into I
  $8EA: LD I, $60C ; Load 60C into I
  $918: LD I, $0D2 ; Load 0D2 into I
  $92E: LD I, $A4B ; Load A4B into I
  $932: LD I, $995 ; Load 995 into I
  $97A: LD I, $A49 ; Load A49 into I
  $992: LD I, $898 ; Load 898 into I
  $9C0: LD I, $99C ; Load 99C into I
  $A06: LD I, $37E ; Load 37E into I
  $A08: LD I, $A97 ; Load A97 into I
  $A0E: LD I, $D34 ; Load D34 into I
  $A28: LD I, $B24 ; Load B24 into I
  $A6A: LD I, $E89 ; Load E89 into I
  $A8C: LD I, $DC2 ; Load DC2 into I
  $AAC: LD I, $A71 ; Load A71 into I
  $AC6: LD I, $20C ; Load 20C into I
  $ACA: LD I, $7A6 ; Load 7A6 into I
  $ACE: LD I, $383 ; Load 383 into I
  $AD8: LD I, $935 ; Load 935 into I
  $AE4: LD I, $4DE ; Load 4DE into I
  $B02: LD I, $DA5 ; Load DA5 into I
  $B10: LD I, $280 ; Load 280 into I
  $B2C: LD I, $65C ; Load 65C into I
  $B42: LD I, $DD7 ; Load DD7 into I
  $B5A: LD I, $B56 ; Load B56 into I
  $B5C: LD I, $DA1 ; Load DA1 into I
  $B60: LD I, $870 ; Load 870 into I
  $B62: LD I, $B47 ; Load B47 into I
  $B70: LD I, $452 ; Load 452 into I
  $B8E: LD I, $FA4 ; Load FA4 into I
  $BBE: LD I, $4BF ; Load 4BF into I
  $BC2: LD I, $93E ; Load 93E into I
  $BE0: LD I, $802 ; Load 802 into I
  $C1C: LD I, $E81 ; Load E81 into I
  $C24: LD I, $0AB ; Load 0AB into I
  $C38: LD I, $92D ; Load 92D into I
  $C86: LD I, $BE2 ; Load BE2 into I
  $C92: LD I, $18A ; Load 18A into I
  $CC8: LD I, $682 ; Load 682 into I
  $CF4: LD I, $4F6 ; Load 4F6 into I
  $CF6: LD I, $46B ; Load 46B into I
  $D08: LD I, $16F ; Load 16F into I
  $D20: LD I, $BCD ; Load BCD into I
  $D56: LD I, $31E ; Load 31E into I
  $D72: LD I, $7CF ; Load 7CF into I
  $DA6: LD I, $45A ; Load 45A into I
  $DC0: LD I, $CA1 ; Load CA1 into I
  $DE0: LD I, $B95 ; Load B95 into I
  $DFE: LD I, $A7A ; Load A7A into I
  $E34: LD I, $EC6 ; Load EC6 into I
  $E38: LD I, $76F ; Load 76F into I
  $E3C: LD I, $286 ; Load 286 into I
  $E4E: LD I, $F64 ; Load F64 into I
  $E84: LD I, $8E0 ; Load 8E0 into I
  $E8C: LD I, $246 ; Load 246 into I
  $E90: LD I, $74C ; Load 74C into I
  $EA2: LD I, $747 ; Load 747 into I
  $EB6: LD I, $8F9 ; Load 8F9 into I
  $EF0: LD I, $ECE ; Load ECE into I
  $F00: LD I, $A87 ; Load A87 into I
  $F0A: LD I, $E7B ; Load E7B into I
  $F18: LD I, $4AB ; Load 4AB into I
  $F6E: LD I, $3DB ; Load 3DB into I
  $FB6: LD I, $61C ; Load 61C into I
  $FBA: LD I, $DA3 ; Load DA3 into I
  $FC0: LD I, $F00 ; Load F00 into I
  $FCE: LD I, $A61 ; Load A61 into I
  $FD8: LD I, $E1C ; Load E1C into I
  $FE8: LD I, $AB9 ; Load AB9 into I

CONTROL FLOW ANALYSIS:
Jumps: 213
Calls: 103
Branches: 239
Loops: 122
Loop Structures:
  $246 -> $199 (backward jump)
  $2A2 -> $14A (backward jump)
  $2B4 -> $100 (backward jump)
  $2E8 -> $2AB (backward jump)
  $36E -> $168 (backward jump)
  $370 -> $09F (backward jump)
  $376 -> $091 (backward jump)
  $3A6 -> $176 (backward jump)
  $3B6 -> $0F0 (backward jump)
  $43C -> $08E (backward jump)
  $452 -> $3A9 (backward jump)
  $460 -> $2D7 (backward jump)
  $46A -> $40E (backward jump)
  $49A -> $157 (backward jump)
  $4B8 -> $34A (backward jump)
  $4F2 -> $35C (backward jump)
  $4FE -> $478 (backward jump)
  $516 -> $3D9 (backward jump)
  $522 -> $4AD (backward jump)
  $57C -> $040 (backward jump)
  $5B4 -> $48B (backward jump)
  $5C4 -> $16D (backward jump)
  $5D6 -> $30A (backward jump)
  $624 -> $062 (backward jump)
  $63C -> $06B (backward jump)
  $678 -> $4E2 (backward jump)
  $6B6 -> $42D (backward jump)
  $6D8 -> $060 (backward jump)
  $724 -> $075 (backward jump)
  $732 -> $632 (backward jump)
  $738 -> $640 (backward jump)
  $744 -> $611 (backward jump)
  $74C -> $56A (backward jump)
  $7A2 -> $224 (backward jump)
  $7CA -> $6BD (backward jump)
  $7DE -> $11A (backward jump)
  $882 -> $0E4 (backward jump)
  $8A0 -> $344 (backward jump)
  $8C4 -> $673 (backward jump)
  $8DC -> $2E3 (backward jump)
  $8E2 -> $3AA (backward jump)
  $902 -> $35B (backward jump)
  $90E -> $6EC (backward jump)
  $946 -> $73D (backward jump)
  $94E -> $17B (backward jump)
  $958 -> $0C5 (backward jump)
  $974 -> $534 (backward jump)
  $980 -> $21B (backward jump)
  $9A2 -> $50B (backward jump)
  $9F8 -> $2F3 (backward jump)
  $A10 -> $207 (backward jump)
  $A20 -> $67D (backward jump)
  $A50 -> $67B (backward jump)
  $A58 -> $70F (backward jump)
  $A5A -> $83F (backward jump)
  $A84 -> $162 (backward jump)
  $A9C -> $589 (backward jump)
  $A9E -> $4BD (backward jump)
  $AD0 -> $259 (backward jump)
  $ADA -> $2ED (backward jump)
  $AEA -> $91B (backward jump)
  $AF8 -> $A09 (backward jump)
  $B12 -> $0AC (backward jump)
  $B16 -> $595 (backward jump)
  $B34 -> $2FB (backward jump)
  $B38 -> $84B (backward jump)
  $B52 -> $1B6 (backward jump)
  $B86 -> $A5B (backward jump)
  $B88 -> $1D3 (backward jump)
  $BCE -> $A3C (backward jump)
  $BD6 -> $50A (backward jump)
  $BD8 -> $B2D (backward jump)
  $BF2 -> $003 (backward jump)
  $BF4 -> $B61 (backward jump)
  $C00 -> $7F9 (backward jump)
  $C10 -> $849 (backward jump)
  $C18 -> $77D (backward jump)
  $C2A -> $C24 (backward jump)
  $C5A -> $673 (backward jump)
  $C5C -> $882 (backward jump)
  $C72 -> $605 (backward jump)
  $C98 -> $1D6 (backward jump)
  $D06 -> $7EB (backward jump)
  $D10 -> $C1B (backward jump)
  $D1A -> $8F1 (backward jump)
  $D28 -> $6BB (backward jump)
  $D34 -> $B5A (backward jump)
  $D4C -> $44C (backward jump)
  $D50 -> $7A5 (backward jump)
  $D52 -> $B43 (backward jump)
  $D78 -> $074 (backward jump)
  $D7E -> $465 (backward jump)
  $D96 -> $214 (backward jump)
  $D9A -> $59B (backward jump)
  $DB0 -> $9BE (backward jump)
  $DC2 -> $8ED (backward jump)
  $E0C -> $1FC (backward jump)
  $E30 -> $9DB (backward jump)
  $E4A -> $D44 (backward jump)
  $E5C -> $980 (backward jump)
  $E5E -> $409 (backward jump)
  $E66 -> $725 (backward jump)
  $E6E -> $AAA (backward jump)
  $E7A -> $CC8 (backward jump)
  $E88 -> $469 (backward jump)
  $E94 -> $834 (backward jump)
  $EA4 -> $523 (backward jump)
  $EB4 -> $6FB (backward jump)
  $ECC -> $C3A (backward jump)
  $EDA -> $BBD (backward jump)
  $F40 -> $5C2 (backward jump)
  $F4A -> $C6F (backward jump)
  $F54 -> $B2D (backward jump)
  $F5E -> $6D9 (backward jump)
  $F78 -> $F19 (backward jump)
  $F88 -> $8F1 (backward jump)
  $FA4 -> $472 (backward jump)
  $FAE -> $032 (backward jump)
  $FBC -> $D6F (backward jump)
  $FCC -> $2F3 (backward jump)
  $FEC -> $EC2 (backward jump)
  $FF2 -> $273 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $29E2   CALL     $9E2            ; Call subroutine at 9E2
$202    $E7A0   UNKNOWN  $E7A0           ; Unknown Exxx instruction
$204    $A638   LD       I, $638         ; Load 638 into I
$206    $AC49   LD       I, $C49         ; Load C49 into I
$208    $9B92   UNKNOWN  $9B92           ; Unknown 9xxx instruction
$20A    $9229   UNKNOWN  $9229           ; Unknown 9xxx instruction
$20C    $E7C9   UNKNOWN  $E7C9           ; Unknown Exxx instruction
$20E    $E097   UNKNOWN  $E097           ; Unknown Exxx instruction
$210    $AE76   LD       I, $E76         ; Load E76 into I
$212    $6C26   LD       VC, #26         ; Load 38 into VC
$214    $9A65   UNKNOWN  $9A65           ; Unknown 9xxx instruction
$216    $699E   LD       V9, #9E         ; Load 158 into V9
$218    $7A03   ADD      VA, #03         ; Add 3 to VA
$21A    $00AF   SYS      $0AF            ; System call to 0AF
$21C    $D046   DRW      V0, V4, #6      ; Draw 6-byte sprite at V0, V4
$21E    $0A02   SYS      $A02            ; System call to A02
$220    $5700   SE       V7, V0          ; Skip if V7 == V0
$222    $375B   SE       V7, #5B         ; Skip if V7 == 91
$224    $B894   JP       V0, $894        ; Jump to V0 + 894
$226    $DDDA   DRW      VD, VD, #A      ; Draw 10-byte sprite at VD, VD
$228    $440B   SNE      V4, #0B         ; Skip if V4 != 11
$22A    $4586   SNE      V5, #86         ; Skip if V5 != 134
$22C    $5069   UNKNOWN  $5069           ; Unknown 5xxx instruction
$22E    $436A   SNE      V3, #6A         ; Skip if V3 != 106
$230    $35E1   SE       V5, #E1         ; Skip if V5 == 225
$232    $A79A   LD       I, $79A         ; Load 79A into I
$234    $7E1A   ADD      VE, #1A         ; Add 26 to VE
$236    $C1A5   RND      V1, #A5         ; V1 = random & A5
$238    $8DF5   SUB      VD, VF          ; VD -= VF, VF = !borrow
$23A    $C170   RND      V1, #70         ; V1 = random & 70
$23C    $8C67   SUBN     VC, V6          ; VC = V6 - VC, VF = !borrow
$23E    $E759   UNKNOWN  $E759           ; Unknown Exxx instruction
$240    $73A6   ADD      V3, #A6         ; Add 166 to V3
$242    $9102   UNKNOWN  $9102           ; Unknown 9xxx instruction
$244    $701B   ADD      V0, #1B         ; Add 27 to V0
$246    $1199   JP       $199            ; Jump to 199
$248    $047D   SYS      $47D            ; System call to 47D
$24A    $9484   UNKNOWN  $9484           ; Unknown 9xxx instruction
$24C    $69BC   LD       V9, #BC         ; Load 188 into V9
$24E    $8F30   LD       VF, V3          ; VF = V3
$250    $9FA1   UNKNOWN  $9FA1           ; Unknown 9xxx instruction
$252    $72ED   ADD      V2, #ED         ; Add 237 to V2
$254    $1BDB   JP       $BDB            ; Jump to BDB
$256    $48D4   SNE      V8, #D4         ; Skip if V8 != 212
$258    $5CCE   UNKNOWN  $5CCE           ; Unknown 5xxx instruction
$25A    $5826   UNKNOWN  $5826           ; Unknown 5xxx instruction
$25C    $7655   ADD      V6, #55         ; Add 85 to V6
$25E    $005A   SYS      $05A            ; System call to 05A
$260    $1796   JP       $796            ; Jump to 796
$262    $F1EB   UNKNOWN  F1EB            ; Unknown Fxxx instruction
$264    $628A   LD       V2, #8A         ; Load 138 into V2
$266    $2CDD   CALL     $CDD            ; Call subroutine at CDD
$268    $C7AA   RND      V7, #AA         ; V7 = random & AA
$26A    $E532   UNKNOWN  $E532           ; Unknown Exxx instruction
$26C    $2DC0   CALL     $DC0            ; Call subroutine at DC0
$26E    $BDC5   JP       V0, $DC5        ; Jump to V0 + DC5
$270    $A36C   LD       I, $36C         ; Load 36C into I
$272    $B411   JP       V0, $411        ; Jump to V0 + 411
$274    $429A   SNE      V2, #9A         ; Skip if V2 != 154
$276    $0214   SYS      $214            ; System call to 214
$278    $7331   ADD      V3, #31         ; Add 49 to V3
$27A    $B3CE   JP       V0, $3CE        ; Jump to V0 + 3CE
$27C    $4F6B   SNE      VF, #6B         ; Skip if VF != 107
$27E    $20BD   CALL     $0BD            ; Call subroutine at 0BD
$280    $6CF9   LD       VC, #F9         ; Load 249 into VC
$282    $B619   JP       V0, $619        ; Jump to V0 + 619
$284    $12A2   JP       $2A2            ; Jump to 2A2
$286    $3A0F   SE       VA, #0F         ; Skip if VA == 15
$288    $DF46   DRW      VF, V4, #6      ; Draw 6-byte sprite at VF, V4
$28A    $CBE0   RND      VB, #E0         ; VB = random & E0
$28C    $2FFC   CALL     $FFC            ; Call subroutine at FFC
$28E    $C7E0   RND      V7, #E0         ; V7 = random & E0
$290    $0BAA   SYS      $BAA            ; System call to BAA
$292    $56A5   UNKNOWN  $56A5           ; Unknown 5xxx instruction
$294    $5689   UNKNOWN  $5689           ; Unknown 5xxx instruction
$296    $5F50   SE       VF, V5          ; Skip if VF == V5
$298    $9197   UNKNOWN  $9197           ; Unknown 9xxx instruction
$29A    $A990   LD       I, $990         ; Load 990 into I
$29C    $DAF9   DRW      VA, VF, #9      ; Draw 9-byte sprite at VA, VF
$29E    $0A4E   SYS      $A4E            ; System call to A4E
$2A0    $B9C1   JP       V0, $9C1        ; Jump to V0 + 9C1
$2A2    $114A   JP       $14A            ; Jump to 14A
$2A4    $0686   SYS      $686            ; System call to 686
$2A6    $375B   SE       V7, #5B         ; Skip if V7 == 91
$2A8    $F826   UNKNOWN  F826            ; Unknown Fxxx instruction
$2AA    $0432   SYS      $432            ; System call to 432
$2AC    $2713   CALL     $713            ; Call subroutine at 713
$2AE    $7B16   ADD      VB, #16         ; Add 22 to VB
$2B0    $8D41   OR       VD, V4          ; VD |= V4
$2B2    $3828   SE       V8, #28         ; Skip if V8 == 40
$2B4    $B100   JP       V0, $100        ; Jump to V0 + 100
$2B6    $D57E   DRW      V5, V7, #E      ; Draw 14-byte sprite at V5, V7
$2B8    $6AE5   LD       VA, #E5         ; Load 229 into VA
$2BA    $AFC0   LD       I, $FC0         ; Load FC0 into I
$2BC    $FEF5   UNKNOWN  FEF5            ; Unknown Fxxx instruction
$2BE    $EDD3   UNKNOWN  $EDD3           ; Unknown Exxx instruction
$2C0    $2EA4   CALL     $EA4            ; Call subroutine at EA4
$2C2    $77E4   ADD      V7, #E4         ; Add 228 to V7
$2C4    $E7A9   UNKNOWN  $E7A9           ; Unknown Exxx instruction
$2C6    $E06E   UNKNOWN  $E06E           ; Unknown Exxx instruction
$2C8    $D2E9   DRW      V2, VE, #9      ; Draw 9-byte sprite at V2, VE
$2CA    $6354   LD       V3, #54         ; Load 84 into V3
$2CC    $A51F   LD       I, $51F         ; Load 51F into I
$2CE    $23CA   CALL     $3CA            ; Call subroutine at 3CA
$2D0    $58BE   UNKNOWN  $58BE           ; Unknown 5xxx instruction
$2D2    $28E9   CALL     $8E9            ; Call subroutine at 8E9
$2D4    $0629   SYS      $629            ; System call to 629
$2D6    $9850   SNE      V8, V5          ; Skip if V8 != V5
$2D8    $C64E   RND      V6, #4E         ; V6 = random & 4E
$2DA    $152E   JP       $52E            ; Jump to 52E
$2DC    $65D0   LD       V5, #D0         ; Load 208 into V5
$2DE    $4A4F   SNE      VA, #4F         ; Skip if VA != 79
$2E0    $D125   DRW      V1, V2, #5      ; Draw 5-byte sprite at V1, V2
$2E2    $B685   JP       V0, $685        ; Jump to V0 + 685
$2E4    $D552   DRW      V5, V5, #2      ; Draw 2-byte sprite at V5, V5
$2E6    $FD93   UNKNOWN  FD93            ; Unknown Fxxx instruction
$2E8    $12AB   JP       $2AB            ; Jump to 2AB
$2EA    $CAFD   RND      VA, #FD         ; VA = random & FD
$2EC    $E51D   UNKNOWN  $E51D           ; Unknown Exxx instruction
$2EE    $9920   SNE      V9, V2          ; Skip if V9 != V2
$2F0    $8CF2   AND      VC, VF          ; VC &= VF
$2F2    $FA61   UNKNOWN  FA61            ; Unknown Fxxx instruction
$2F4    $C0E7   RND      V0, #E7         ; V0 = random & E7
$2F6    $DD27   DRW      VD, V2, #7      ; Draw 7-byte sprite at VD, V2
$2F8    $6E57   LD       VE, #57         ; Load 87 into VE
$2FA    $1988   JP       $988            ; Jump to 988
$2FC    $F4A4   UNKNOWN  F4A4            ; Unknown Fxxx instruction
$2FE    $7071   ADD      V0, #71         ; Add 113 to V0
$302    $0003   SYS      $003            ; System call to 003
$304    $2057   CALL     $057            ; Call subroutine at 057
$306    $5BFB   UNKNOWN  $5BFB           ; Unknown 5xxx instruction
$308    $9E84   UNKNOWN  $9E84           ; Unknown 9xxx instruction
$30A    $D4F3   DRW      V4, VF, #3      ; Draw 3-byte sprite at V4, VF
$30C    $FE58   UNKNOWN  FE58            ; Unknown Fxxx instruction
$30E    $E018   UNKNOWN  $E018           ; Unknown Exxx instruction
$310    $53C2   UNKNOWN  $53C2           ; Unknown 5xxx instruction
$312    $48DC   SNE      V8, #DC         ; Skip if V8 != 220
$314    $0E31   SYS      $E31            ; System call to E31
$316    $26F2   CALL     $6F2            ; Call subroutine at 6F2
$318    $B94C   JP       V0, $94C        ; Jump to V0 + 94C
$31A    $84B1   OR       V4, VB          ; V4 |= VB
$31C    $B4D6   JP       V0, $4D6        ; Jump to V0 + 4D6
$31E    $F616   UNKNOWN  F616            ; Unknown Fxxx instruction
$320    $93BD   UNKNOWN  $93BD           ; Unknown 9xxx instruction
$322    $399B   SE       V9, #9B         ; Skip if V9 == 155
$324    $EF8F   UNKNOWN  $EF8F           ; Unknown Exxx instruction
$326    $E8A1   SKNP     V8              ; Skip if key V8 not pressed
$328    $67C1   LD       V7, #C1         ; Load 193 into V7
$32A    $C311   RND      V3, #11         ; V3 = random & 11
$32C    $2089   CALL     $089            ; Call subroutine at 089
$32E    $97C2   UNKNOWN  $97C2           ; Unknown 9xxx instruction
$330    $00F0   SYS      $0F0            ; System call to 0F0
$332    $4A56   SNE      VA, #56         ; Skip if VA != 86
$334    $E21C   UNKNOWN  $E21C           ; Unknown Exxx instruction
$336    $08DD   SYS      $8DD            ; System call to 8DD
$338    $16AC   JP       $6AC            ; Jump to 6AC
$33A    $723A   ADD      V2, #3A         ; Add 58 to V2
$33C    $F18C   UNKNOWN  F18C            ; Unknown Fxxx instruction
$33E    $E865   UNKNOWN  $E865           ; Unknown Exxx instruction
$340    $604D   LD       V0, #4D         ; Load 77 into V0
$342    $DE96   DRW      VE, V9, #6      ; Draw 6-byte sprite at VE, V9
$344    $36AA   SE       V6, #AA         ; Skip if V6 == 170
$346    $32B3   SE       V2, #B3         ; Skip if V2 == 179
$348    $A002   LD       I, $002         ; Load 002 into I
$34A    $9E71   UNKNOWN  $9E71           ; Unknown 9xxx instruction
$34C    $0891   SYS      $891            ; System call to 891
$34E    $66A8   LD       V6, #A8         ; Load 168 into V6
$350    $0D61   SYS      $D61            ; System call to D61
$352    $0643   SYS      $643            ; System call to 643
$354    $0973   SYS      $973            ; System call to 973
$356    $3C8A   SE       VC, #8A         ; Skip if VC == 138
$358    $9918   UNKNOWN  $9918           ; Unknown 9xxx instruction
$35A    $C9D0   RND      V9, #D0         ; V9 = random & D0
$35C    $5D61   UNKNOWN  $5D61           ; Unknown 5xxx instruction
$35E    $3463   SE       V4, #63         ; Skip if V4 == 99
$360    $FB2D   UNKNOWN  FB2D            ; Unknown Fxxx instruction
$362    $25C2   CALL     $5C2            ; Call subroutine at 5C2
$364    $F2B1   UNKNOWN  F2B1            ; Unknown Fxxx instruction
$366    $80B7   SUBN     V0, VB          ; V0 = VB - V0, VF = !borrow
$368    $7986   ADD      V9, #86         ; Add 134 to V9
$36A    $8715   SUB      V7, V1          ; V7 -= V1, VF = !borrow
$36C    $51CC   UNKNOWN  $51CC           ; Unknown 5xxx instruction
$36E    $B168   JP       V0, $168        ; Jump to V0 + 168
$370    $109F   JP       $09F            ; Jump to 09F
$372    $6DD3   LD       VD, #D3         ; Load 211 into VD
$374    $8544   ADD      V5, V4          ; V5 += V4, VF = carry
$376    $B091   JP       V0, $091        ; Jump to V0 + 091
$378    $A508   LD       I, $508         ; Load 508 into I
$37A    $047C   SYS      $47C            ; System call to 47C
$37C    $AFB7   LD       I, $FB7         ; Load FB7 into I
$37E    $AFC6   LD       I, $FC6         ; Load FC6 into I
$380    $44E8   SNE      V4, #E8         ; Skip if V4 != 232
$382    $3CE3   SE       VC, #E3         ; Skip if VC == 227
$384    $1867   JP       $867            ; Jump to 867
$386    $536C   UNKNOWN  $536C           ; Unknown 5xxx instruction
$388    $31FF   SE       V1, #FF         ; Skip if V1 == 255
$38A    $C689   RND      V6, #89         ; V6 = random & 89
$38C    $A64E   LD       I, $64E         ; Load 64E into I
$38E    $28ED   CALL     $8ED            ; Call subroutine at 8ED
$390    $ED1E   UNKNOWN  $ED1E           ; Unknown Exxx instruction
$392    $034F   SYS      $34F            ; System call to 34F
$394    $5502   UNKNOWN  $5502           ; Unknown 5xxx instruction
$396    $A42F   LD       I, $42F         ; Load 42F into I
$398    $E929   UNKNOWN  $E929           ; Unknown Exxx instruction
$39A    $2DA6   CALL     $DA6            ; Call subroutine at DA6
$39C    $1E0C   JP       $E0C            ; Jump to E0C
$39E    $6B13   LD       VB, #13         ; Load 19 into VB
$3A0    $78A4   ADD      V8, #A4         ; Add 164 to V8
$3A2    $6201   LD       V2, #01         ; Load 1 into V2
$3A4    $FCEC   UNKNOWN  FCEC            ; Unknown Fxxx instruction
$3A6    $B176   JP       V0, $176        ; Jump to V0 + 176
$3A8    $0553   SYS      $553            ; System call to 553
$3AA    $61FF   LD       V1, #FF         ; Load 255 into V1
$3AC    $88E2   AND      V8, VE          ; V8 &= VE
$3AE    $1912   JP       $912            ; Jump to 912
$3B0    $31E5   SE       V1, #E5         ; Skip if V1 == 229
$3B2    $8323   XOR      V3, V2          ; V3 ^= V2
$3B4    $39CD   SE       V9, #CD         ; Skip if V9 == 205
$3B6    $10F0   JP       $0F0            ; Jump to 0F0
$3B8    $0A43   SYS      $A43            ; System call to A43
$3BA    $8C9C   UNKNOWN  8C9C            ; Unknown 8xxx instruction
$3BC    $69C3   LD       V9, #C3         ; Load 195 into V9
$3BE    $C249   RND      V2, #49         ; V2 = random & 49
$3C0    $E189   UNKNOWN  $E189           ; Unknown Exxx instruction
$3C2    $07A7   SYS      $7A7            ; System call to 7A7
$3C4    $852C   UNKNOWN  852C            ; Unknown 8xxx instruction
$3C6    $FDF7   UNKNOWN  FDF7            ; Unknown Fxxx instruction
$3C8    $2096   CALL     $096            ; Call subroutine at 096
$3CA    $44B8   SNE      V4, #B8         ; Skip if V4 != 184
$3CC    $F51B   UNKNOWN  F51B            ; Unknown Fxxx instruction
$3CE    $D25F   DRW      V2, V5, #F      ; Draw 15-byte sprite at V2, V5
$3D0    $4971   SNE      V9, #71         ; Skip if V9 != 113
$3D2    $D67A   DRW      V6, V7, #A      ; Draw 10-byte sprite at V6, V7
$3D4    $5C2F   UNKNOWN  $5C2F           ; Unknown 5xxx instruction
$3D6    $9435   UNKNOWN  $9435           ; Unknown 9xxx instruction
$3D8    $EF65   UNKNOWN  $EF65           ; Unknown Exxx instruction
$3DA    $A081   LD       I, $081         ; Load 081 into I
$3DC    $EE5A   UNKNOWN  $EE5A           ; Unknown Exxx instruction
$3DE    $F09D   UNKNOWN  F09D            ; Unknown Fxxx instruction
$3E0    $E254   UNKNOWN  $E254           ; Unknown Exxx instruction
$3E2    $748C   ADD      V4, #8C         ; Add 140 to V4
$3E4    $D93C   DRW      V9, V3, #C      ; Draw 12-byte sprite at V9, V3
$3E6    $0CDF   SYS      $CDF            ; System call to CDF
$3E8    $7FE5   ADD      VF, #E5         ; Add 229 to VF
$3EA    $3890   SE       V8, #90         ; Skip if V8 == 144
$3EC    $7C9B   ADD      VC, #9B         ; Add 155 to VC
$3EE    $2684   CALL     $684            ; Call subroutine at 684
$3F0    $85CA   UNKNOWN  85CA            ; Unknown 8xxx instruction
$3F2    $D74A   DRW      V7, V4, #A      ; Draw 10-byte sprite at V7, V4
$3F4    $CD73   RND      VD, #73         ; VD = random & 73
$3F6    $69CF   LD       V9, #CF         ; Load 207 into V9
$3F8    $883E   SHL      V8              ; V8 <<= 1, VF = MSB
$3FA    $C082   RND      V0, #82         ; V0 = random & 82
$3FC    $54DB   UNKNOWN  $54DB           ; Unknown 5xxx instruction
$3FE    $7A99   ADD      VA, #99         ; Add 153 to VA
$400    $3C78   SE       VC, #78         ; Skip if VC == 120
$402    $F27F   UNKNOWN  F27F            ; Unknown Fxxx instruction
$404    $DC0C   DRW      VC, V0, #C      ; Draw 12-byte sprite at VC, V0
$406    $337E   SE       V3, #7E         ; Skip if V3 == 126
$408    $3348   SE       V3, #48         ; Skip if V3 == 72
$40A    $B551   JP       V0, $551        ; Jump to V0 + 551
$40C    $9634   UNKNOWN  $9634           ; Unknown 9xxx instruction
$40E    $D8D4   DRW      V8, VD, #4      ; Draw 4-byte sprite at V8, VD
$410    $5D3E   UNKNOWN  $5D3E           ; Unknown 5xxx instruction
$412    $6E30   LD       VE, #30         ; Load 48 into VE
$414    $8AEC   UNKNOWN  8AEC            ; Unknown 8xxx instruction
$416    $43FF   SNE      V3, #FF         ; Skip if V3 != 255
$418    $D505   DRW      V5, V0, #5      ; Draw 5-byte sprite at V5, V0
$41A    $C243   RND      V2, #43         ; V2 = random & 43
$41C    $5AFD   UNKNOWN  $5AFD           ; Unknown 5xxx instruction
$41E    $A292   LD       I, $292         ; Load 292 into I
$420    $8188   UNKNOWN  8188            ; Unknown 8xxx instruction
$422    $3B3F   SE       VB, #3F         ; Skip if VB == 63
$424    $3C7D   SE       VC, #7D         ; Skip if VC == 125
$426    $E5AC   UNKNOWN  $E5AC           ; Unknown Exxx instruction
$428    $A98B   LD       I, $98B         ; Load 98B into I
$42A    $8557   SUBN     V5, V5          ; V5 = V5 - V5, VF = !borrow
$42C    $80C8   UNKNOWN  80C8            ; Unknown 8xxx instruction
$42E    $8AFA   UNKNOWN  8AFA            ; Unknown 8xxx instruction
$430    $2877   CALL     $877            ; Call subroutine at 877
$432    $7E22   ADD      VE, #22         ; Add 34 to VE
$434    $C0D4   RND      V0, #D4         ; V0 = random & D4
$436    $853F   UNKNOWN  853F            ; Unknown 8xxx instruction
$438    $0688   SYS      $688            ; System call to 688
$43A    $5DA6   UNKNOWN  $5DA6           ; Unknown 5xxx instruction
$43C    $108E   JP       $08E            ; Jump to 08E
$43E    $013E   SYS      $13E            ; System call to 13E
$440    $238C   CALL     $38C            ; Call subroutine at 38C
$442    $D8D1   DRW      V8, VD, #1      ; Draw 1-byte sprite at V8, VD
$444    $5731   UNKNOWN  $5731           ; Unknown 5xxx instruction
$446    $65DB   LD       V5, #DB         ; Load 219 into V5
$448    $7BE8   ADD      VB, #E8         ; Add 232 to VB
$44A    $1D01   JP       $D01            ; Jump to D01
$44C    $394D   SE       V9, #4D         ; Skip if V9 == 77
$44E    $5867   UNKNOWN  $5867           ; Unknown 5xxx instruction
$450    $F468   UNKNOWN  F468            ; Unknown Fxxx instruction
$452    $13A9   JP       $3A9            ; Jump to 3A9
$454    $A41A   LD       I, $41A         ; Load 41A into I
$456    $B907   JP       V0, $907        ; Jump to V0 + 907
$458    $5915   UNKNOWN  $5915           ; Unknown 5xxx instruction
$45A    $5487   UNKNOWN  $5487           ; Unknown 5xxx instruction
$45C    $3EF8   SE       VE, #F8         ; Skip if VE == 248
$45E    $1E23   JP       $E23            ; Jump to E23
$460    $B2D7   JP       V0, $2D7        ; Jump to V0 + 2D7
$462    $1F4B   JP       $F4B            ; Jump to F4B
$464    $04A7   SYS      $4A7            ; System call to 4A7
$466    $5BA6   UNKNOWN  $5BA6           ; Unknown 5xxx instruction
$468    $9B12   UNKNOWN  $9B12           ; Unknown 9xxx instruction
$46A    $140E   JP       $40E            ; Jump to 40E
$46C    $C011   RND      V0, #11         ; V0 = random & 11
$46E    $6533   LD       V5, #33         ; Load 51 into V5
$470    $2F10   CALL     $F10            ; Call subroutine at F10
$472    $4D67   SNE      VD, #67         ; Skip if VD != 103
$474    $17E0   JP       $7E0            ; Jump to 7E0
$476    $2024   CALL     $024            ; Call subroutine at 024
$478    $D339   DRW      V3, V3, #9      ; Draw 9-byte sprite at V3, V3
$47A    $87CF   UNKNOWN  87CF            ; Unknown 8xxx instruction
$47C    $5C1F   UNKNOWN  $5C1F           ; Unknown 5xxx instruction
$47E    $14F3   JP       $4F3            ; Jump to 4F3
$480    $27FE   CALL     $7FE            ; Call subroutine at 7FE
$482    $E1AB   UNKNOWN  $E1AB           ; Unknown Exxx instruction
$484    $9031   UNKNOWN  $9031           ; Unknown 9xxx instruction
$486    $AA70   LD       I, $A70         ; Load A70 into I
$488    $5E1E   UNKNOWN  $5E1E           ; Unknown 5xxx instruction
$48A    $041C   SYS      $41C            ; System call to 41C
$48C    $43A8   SNE      V3, #A8         ; Skip if V3 != 168
$48E    $D304   DRW      V3, V0, #4      ; Draw 4-byte sprite at V3, V0
$490    $B50D   JP       V0, $50D        ; Jump to V0 + 50D
$492    $AA4E   LD       I, $A4E         ; Load A4E into I
$494    $3FE3   SE       VF, #E3         ; Skip if VF == 227
$496    $A181   LD       I, $181         ; Load 181 into I
$498    $D8EA   DRW      V8, VE, #A      ; Draw 10-byte sprite at V8, VE
$49A    $B157   JP       V0, $157        ; Jump to V0 + 157
$49C    $56A8   UNKNOWN  $56A8           ; Unknown 5xxx instruction
$49E    $0475   SYS      $475            ; System call to 475
$4A0    $0FC1   SYS      $FC1            ; System call to FC1
$4A2    $3016   SE       V0, #16         ; Skip if V0 == 22
$4A4    $5712   UNKNOWN  $5712           ; Unknown 5xxx instruction
$4A6    $F1A4   UNKNOWN  F1A4            ; Unknown Fxxx instruction
$4A8    $E6DB   UNKNOWN  $E6DB           ; Unknown Exxx instruction
$4AA    $DF8B   DRW      VF, V8, #B      ; Draw 11-byte sprite at VF, V8
$4AC    $34D3   SE       V4, #D3         ; Skip if V4 == 211
$4AE    $9A81   UNKNOWN  $9A81           ; Unknown 9xxx instruction
$4B0    $ABD2   LD       I, $BD2         ; Load BD2 into I
$4B2    $A1A6   LD       I, $1A6         ; Load 1A6 into I
$4B4    $156C   JP       $56C            ; Jump to 56C
$4B6    $2D62   CALL     $D62            ; Call subroutine at D62
$4B8    $B34A   JP       V0, $34A        ; Jump to V0 + 34A
$4BA    $7F60   ADD      VF, #60         ; Add 96 to VF
$4BC    $499F   SNE      V9, #9F         ; Skip if V9 != 159
$4BE    $0EA9   SYS      $EA9            ; System call to EA9
$4C0    $BEF7   JP       V0, $EF7        ; Jump to V0 + EF7
$4C2    $A00D   LD       I, $00D         ; Load 00D into I
$4C4    $913A   UNKNOWN  $913A           ; Unknown 9xxx instruction
$4C6    $8CB4   ADD      VC, VB          ; VC += VB, VF = carry
$4C8    $7C09   ADD      VC, #09         ; Add 9 to VC
$4CA    $DAF4   DRW      VA, VF, #4      ; Draw 4-byte sprite at VA, VF
$4CC    $EC6D   UNKNOWN  $EC6D           ; Unknown Exxx instruction
$4CE    $6C80   LD       VC, #80         ; Load 128 into VC
$4D0    $DBC9   DRW      VB, VC, #9      ; Draw 9-byte sprite at VB, VC
$4D2    $0C88   SYS      $C88            ; System call to C88
$4D4    $A757   LD       I, $757         ; Load 757 into I
$4D6    $23AD   CALL     $3AD            ; Call subroutine at 3AD
$4D8    $D559   DRW      V5, V5, #9      ; Draw 9-byte sprite at V5, V5
$4DA    $4171   SNE      V1, #71         ; Skip if V1 != 113
$4DC    $D6C4   DRW      V6, VC, #4      ; Draw 4-byte sprite at V6, VC
$4DE    $5D7A   UNKNOWN  $5D7A           ; Unknown 5xxx instruction
$4E0    $ECF1   UNKNOWN  $ECF1           ; Unknown Exxx instruction
$4E2    $7234   ADD      V2, #34         ; Add 52 to V2
$4E4    $CD20   RND      VD, #20         ; VD = random & 20
$4E6    $D117   DRW      V1, V1, #7      ; Draw 7-byte sprite at V1, V1
$4E8    $AA87   LD       I, $A87         ; Load A87 into I
$4EA    $B76D   JP       V0, $76D        ; Jump to V0 + 76D
$4EC    $8E38   UNKNOWN  8E38            ; Unknown 8xxx instruction
$4EE    $B75F   JP       V0, $75F        ; Jump to V0 + 75F
$4F0    $6420   LD       V4, #20         ; Load 32 into V4
$4F2    $B35C   JP       V0, $35C        ; Jump to V0 + 35C
$4F4    $370F   SE       V7, #0F         ; Skip if V7 == 15
$4F6    $3A6F   SE       VA, #6F         ; Skip if VA == 111
$4F8    $D4A3   DRW      V4, VA, #3      ; Draw 3-byte sprite at V4, VA
$4FA    $C76D   RND      V7, #6D         ; V7 = random & 6D
$4FC    $E190   UNKNOWN  $E190           ; Unknown Exxx instruction
$4FE    $1478   JP       $478            ; Jump to 478
$500    $FBE0   UNKNOWN  FBE0            ; Unknown Fxxx instruction
$502    $78B5   ADD      V8, #B5         ; Add 181 to V8
$504    $6292   LD       V2, #92         ; Load 146 into V2
$506    $9363   UNKNOWN  $9363           ; Unknown 9xxx instruction
$508    $3037   SE       V0, #37         ; Skip if V0 == 55
$50A    $9E66   UNKNOWN  $9E66           ; Unknown 9xxx instruction
$50C    $6597   LD       V5, #97         ; Load 151 into V5
$50E    $4014   SNE      V0, #14         ; Skip if V0 != 20
$510    $BDCB   JP       V0, $DCB        ; Jump to V0 + DCB
$512    $CC64   RND      VC, #64         ; VC = random & 64
$514    $2A86   CALL     $A86            ; Call subroutine at A86
$516    $13D9   JP       $3D9            ; Jump to 3D9
$518    $603B   LD       V0, #3B         ; Load 59 into V0
$51A    $BDE2   JP       V0, $DE2        ; Jump to V0 + DE2
$51C    $9BAC   UNKNOWN  $9BAC           ; Unknown 9xxx instruction
$51E    $3D24   SE       VD, #24         ; Skip if VD == 36
$520    $635B   LD       V3, #5B         ; Load 91 into V3
$522    $14AD   JP       $4AD            ; Jump to 4AD
$524    $BEB1   JP       V0, $EB1        ; Jump to V0 + EB1
$526    $52AA   UNKNOWN  $52AA           ; Unknown 5xxx instruction
$528    $80B7   SUBN     V0, VB          ; V0 = VB - V0, VF = !borrow
$52A    $1664   JP       $664            ; Jump to 664
$52C    $D65F   DRW      V6, V5, #F      ; Draw 15-byte sprite at V6, V5
$52E    $24A7   CALL     $4A7            ; Call subroutine at 4A7
$530    $02C2   SYS      $2C2            ; System call to 2C2
$532    $6EE9   LD       VE, #E9         ; Load 233 into VE
$534    $4D21   SNE      VD, #21         ; Skip if VD != 33
$536    $EE9C   UNKNOWN  $EE9C           ; Unknown Exxx instruction
$538    $624F   LD       V2, #4F         ; Load 79 into V2
$53A    $9A81   UNKNOWN  $9A81           ; Unknown 9xxx instruction
$53C    $0F6F   SYS      $F6F            ; System call to F6F
$53E    $3656   SE       V6, #56         ; Skip if V6 == 86
$540    $D7A1   DRW      V7, VA, #1      ; Draw 1-byte sprite at V7, VA
$542    $F74A   UNKNOWN  F74A            ; Unknown Fxxx instruction
$544    $96AC   UNKNOWN  $96AC           ; Unknown 9xxx instruction
$546    $20A5   CALL     $0A5            ; Call subroutine at 0A5
$548    $97E7   UNKNOWN  $97E7           ; Unknown 9xxx instruction
$54A    $3B3C   SE       VB, #3C         ; Skip if VB == 60
$54C    $9F30   SNE      VF, V3          ; Skip if VF != V3
$54E    $E98A   UNKNOWN  $E98A           ; Unknown Exxx instruction
$550    $0591   SYS      $591            ; System call to 591
$552    $1DF4   JP       $DF4            ; Jump to DF4
$554    $2655   CALL     $655            ; Call subroutine at 655
$556    $B8AF   JP       V0, $8AF        ; Jump to V0 + 8AF
$558    $C551   RND      V5, #51         ; V5 = random & 51
$55A    $6794   LD       V7, #94         ; Load 148 into V7
$55C    $0CC2   SYS      $CC2            ; System call to CC2
$55E    $5C13   UNKNOWN  $5C13           ; Unknown 5xxx instruction
$560    $FA18   LD       ST, VA          ; Sound timer = VA
$562    $F2EE   UNKNOWN  F2EE            ; Unknown Fxxx instruction
$564    $8769   UNKNOWN  8769            ; Unknown 8xxx instruction
$566    $0D46   SYS      $D46            ; System call to D46
$568    $34EB   SE       V4, #EB         ; Skip if V4 == 235
$56A    $BBDC   JP       V0, $BDC        ; Jump to V0 + BDC
$56C    $7A6E   ADD      VA, #6E         ; Add 110 to VA
$56E    $922B   UNKNOWN  $922B           ; Unknown 9xxx instruction
$570    $78F5   ADD      V8, #F5         ; Add 245 to V8
$572    $88FA   UNKNOWN  88FA            ; Unknown 8xxx instruction
$574    $F31F   UNKNOWN  F31F            ; Unknown Fxxx instruction
$576    $DE38   DRW      VE, V3, #8      ; Draw 8-byte sprite at VE, V3
$578    $5ED3   UNKNOWN  $5ED3           ; Unknown 5xxx instruction
$57A    $5A8C   UNKNOWN  $5A8C           ; Unknown 5xxx instruction
$57C    $B040   JP       V0, $040        ; Jump to V0 + 040
$57E    $7586   ADD      V5, #86         ; Add 134 to V5
$580    $3CE8   SE       VC, #E8         ; Skip if VC == 232
$582    $C6DD   RND      V6, #DD         ; V6 = random & DD
$584    $8DF7   SUBN     VD, VF          ; VD = VF - VD, VF = !borrow
$586    $FE6F   UNKNOWN  FE6F            ; Unknown Fxxx instruction
$588    $41DB   SNE      V1, #DB         ; Skip if V1 != 219
$58A    $3CD0   SE       VC, #D0         ; Skip if VC == 208
$58C    $F15A   UNKNOWN  F15A            ; Unknown Fxxx instruction
$58E    $5B61   UNKNOWN  $5B61           ; Unknown 5xxx instruction
$590    $EA49   UNKNOWN  $EA49           ; Unknown Exxx instruction
$592    $C01F   RND      V0, #1F         ; V0 = random & 1F
$594    $874F   UNKNOWN  874F            ; Unknown 8xxx instruction
$596    $76CD   ADD      V6, #CD         ; Add 205 to V6
$598    $1B7E   JP       $B7E            ; Jump to B7E
$59A    $33A5   SE       V3, #A5         ; Skip if V3 == 165
$59C    $3D80   SE       VD, #80         ; Skip if VD == 128
$59E    $F4AF   UNKNOWN  F4AF            ; Unknown Fxxx instruction
$5A0    $AAB2   LD       I, $AB2         ; Load AB2 into I
$5A2    $99BA   UNKNOWN  $99BA           ; Unknown 9xxx instruction
$5A4    $3DF7   SE       VD, #F7         ; Skip if VD == 247
$5A6    $4F7E   SNE      VF, #7E         ; Skip if VF != 126
$5A8    $E9A1   SKNP     V9              ; Skip if key V9 not pressed
$5AA    $F570   UNKNOWN  F570            ; Unknown Fxxx instruction
$5AC    $4A94   SNE      VA, #94         ; Skip if VA != 148
$5AE    $52DD   UNKNOWN  $52DD           ; Unknown 5xxx instruction
$5B0    $E9CD   UNKNOWN  $E9CD           ; Unknown Exxx instruction
$5B2    $A942   LD       I, $942         ; Load 942 into I
$5B4    $B48B   JP       V0, $48B        ; Jump to V0 + 48B
$5B6    $599F   UNKNOWN  $599F           ; Unknown 5xxx instruction
$5B8    $ACF2   LD       I, $CF2         ; Load CF2 into I
$5BA    $991E   UNKNOWN  $991E           ; Unknown 9xxx instruction
$5BC    $6636   LD       V6, #36         ; Load 54 into V6
$5BE    $4AD6   SNE      VA, #D6         ; Skip if VA != 214
$5C0    $465F   SNE      V6, #5F         ; Skip if V6 != 95
$5C2    $8B38   UNKNOWN  8B38            ; Unknown 8xxx instruction
$5C4    $B16D   JP       V0, $16D        ; Jump to V0 + 16D
$5C6    $2DE2   CALL     $DE2            ; Call subroutine at DE2
$5C8    $6DF8   LD       VD, #F8         ; Load 248 into VD
$5CA    $F188   UNKNOWN  F188            ; Unknown Fxxx instruction
$5CC    $29FE   CALL     $9FE            ; Call subroutine at 9FE
$5CE    $345C   SE       V4, #5C         ; Skip if V4 == 92
$5D0    $0060   SYS      $060            ; System call to 060
$5D2    $42B0   SNE      V2, #B0         ; Skip if V2 != 176
$5D4    $0A75   SYS      $A75            ; System call to A75
$5D6    $130A   JP       $30A            ; Jump to 30A
$5D8    $C111   RND      V1, #11         ; V1 = random & 11
$5DA    $AFDD   LD       I, $FDD         ; Load FDD into I
$5DC    $EDC4   UNKNOWN  $EDC4           ; Unknown Exxx instruction
$5DE    $98E3   UNKNOWN  $98E3           ; Unknown 9xxx instruction
$5E0    $BAC0   JP       V0, $AC0        ; Jump to V0 + AC0
$5E2    $AE85   LD       I, $E85         ; Load E85 into I
$5E4    $8352   AND      V3, V5          ; V3 &= V5
$5E6    $A893   LD       I, $893         ; Load 893 into I
$5E8    $0765   SYS      $765            ; System call to 765
$5EA    $4781   SNE      V7, #81         ; Skip if V7 != 129
$5EC    $A1ED   LD       I, $1ED         ; Load 1ED into I
$5EE    $04D2   SYS      $4D2            ; System call to 4D2
$5F0    $98F3   UNKNOWN  $98F3           ; Unknown 9xxx instruction
$5F2    $573C   UNKNOWN  $573C           ; Unknown 5xxx instruction
$5F4    $596F   UNKNOWN  $596F           ; Unknown 5xxx instruction
$5F6    $7EC2   ADD      VE, #C2         ; Add 194 to VE
$5F8    $7858   ADD      V8, #58         ; Add 88 to V8
$5FA    $7BD5   ADD      VB, #D5         ; Add 213 to VB
$5FC    $7110   ADD      V1, #10         ; Add 16 to V1
$5FE    $9B46   UNKNOWN  $9B46           ; Unknown 9xxx instruction
$600    $5DAD   UNKNOWN  $5DAD           ; Unknown 5xxx instruction
$602    $3C3F   SE       VC, #3F         ; Skip if VC == 63
$604    $E6B0   UNKNOWN  $E6B0           ; Unknown Exxx instruction
$606    $D29A   DRW      V2, V9, #A      ; Draw 10-byte sprite at V2, V9
$608    $4E73   SNE      VE, #73         ; Skip if VE != 115
$60A    $4D1A   SNE      VD, #1A         ; Skip if VD != 26
$60C    $A132   LD       I, $132         ; Load 132 into I
$60E    $8EDC   UNKNOWN  8EDC            ; Unknown 8xxx instruction
$610    $6667   LD       V6, #67         ; Load 103 into V6
$612    $B6DD   JP       V0, $6DD        ; Jump to V0 + 6DD
$614    $A287   LD       I, $287         ; Load 287 into I
$616    $D941   DRW      V9, V4, #1      ; Draw 1-byte sprite at V9, V4
$618    $1A22   JP       $A22            ; Jump to A22
$61A    $4DC8   SNE      VD, #C8         ; Skip if VD != 200
$61C    $A6F2   LD       I, $6F2         ; Load 6F2 into I
$61E    $FDD5   UNKNOWN  FDD5            ; Unknown Fxxx instruction
$620    $05A9   SYS      $5A9            ; System call to 5A9
$622    $4495   SNE      V4, #95         ; Skip if V4 != 149
$624    $B062   JP       V0, $062        ; Jump to V0 + 062
$626    $4096   SNE      V0, #96         ; Skip if V0 != 150
$628    $0FD0   SYS      $FD0            ; System call to FD0
$62A    $273D   CALL     $73D            ; Call subroutine at 73D
$62C    $FCA5   UNKNOWN  FCA5            ; Unknown Fxxx instruction
$62E    $461D   SNE      V6, #1D         ; Skip if V6 != 29
$630    $EEEF   UNKNOWN  $EEEF           ; Unknown Exxx instruction
$632    $C7D2   RND      V7, #D2         ; V7 = random & D2
$634    $5A76   UNKNOWN  $5A76           ; Unknown 5xxx instruction
$636    $A654   LD       I, $654         ; Load 654 into I
$638    $F61D   UNKNOWN  F61D            ; Unknown Fxxx instruction
$63A    $289D   CALL     $89D            ; Call subroutine at 89D
$63C    $B06B   JP       V0, $06B        ; Jump to V0 + 06B
$63E    $962E   UNKNOWN  $962E           ; Unknown 9xxx instruction
$640    $7DF7   ADD      VD, #F7         ; Add 247 to VD
$642    $D5FF   DRW      V5, VF, #F      ; Draw 15-byte sprite at V5, VF
$644    $381F   SE       V8, #1F         ; Skip if V8 == 31
$646    $0BCB   SYS      $BCB            ; System call to BCB
$648    $FE72   UNKNOWN  FE72            ; Unknown Fxxx instruction
$64A    $BAD5   JP       V0, $AD5        ; Jump to V0 + AD5
$64C    $5BA4   UNKNOWN  $5BA4           ; Unknown 5xxx instruction
$64E    $62C7   LD       V2, #C7         ; Load 199 into V2
$650    $0542   SYS      $542            ; System call to 542
$652    $CFC1   RND      VF, #C1         ; VF = random & C1
$654    $F098   UNKNOWN  F098            ; Unknown Fxxx instruction
$656    $4339   SNE      V3, #39         ; Skip if V3 != 57
$658    $9A92   UNKNOWN  $9A92           ; Unknown 9xxx instruction
$65A    $AD29   LD       I, $D29         ; Load D29 into I
$65C    $ECDD   UNKNOWN  $ECDD           ; Unknown Exxx instruction
$65E    $0DF6   SYS      $DF6            ; System call to DF6
$660    $ACE9   LD       I, $CE9         ; Load CE9 into I
$662    $2E07   CALL     $E07            ; Call subroutine at E07
$664    $9378   UNKNOWN  $9378           ; Unknown 9xxx instruction
$666    $64EC   LD       V4, #EC         ; Load 236 into V4
$668    $6DDE   LD       VD, #DE         ; Load 222 into VD
$66A    $4E65   SNE      VE, #65         ; Skip if VE != 101
$66C    $F7D1   UNKNOWN  F7D1            ; Unknown Fxxx instruction
$66E    $612E   LD       V1, #2E         ; Load 46 into V1
$670    $95F5   UNKNOWN  $95F5           ; Unknown 9xxx instruction
$672    $4789   SNE      V7, #89         ; Skip if V7 != 137
$674    $1BE5   JP       $BE5            ; Jump to BE5
$676    $7B68   ADD      VB, #68         ; Add 104 to VB
$678    $14E2   JP       $4E2            ; Jump to 4E2
$67A    $E0AA   UNKNOWN  $E0AA           ; Unknown Exxx instruction
$67C    $A795   LD       I, $795         ; Load 795 into I
$67E    $59F8   UNKNOWN  $59F8           ; Unknown 5xxx instruction
$680    $8FFD   UNKNOWN  8FFD            ; Unknown 8xxx instruction
$682    $4CF0   SNE      VC, #F0         ; Skip if VC != 240
$684    $61F1   LD       V1, #F1         ; Load 241 into V1
$686    $C714   RND      V7, #14         ; V7 = random & 14
$688    $4E8B   SNE      VE, #8B         ; Skip if VE != 139
$68A    $9ABF   UNKNOWN  $9ABF           ; Unknown 9xxx instruction
$68C    $38F4   SE       V8, #F4         ; Skip if V8 == 244
$68E    $86C4   ADD      V6, VC          ; V6 += VC, VF = carry
$690    $35DD   SE       V5, #DD         ; Skip if V5 == 221
$692    $4906   SNE      V9, #06         ; Skip if V9 != 6
$694    $F79C   UNKNOWN  F79C            ; Unknown Fxxx instruction
$696    $F1ED   UNKNOWN  F1ED            ; Unknown Fxxx instruction
$698    $97F7   UNKNOWN  $97F7           ; Unknown 9xxx instruction
$69A    $516A   UNKNOWN  $516A           ; Unknown 5xxx instruction
$69C    $C0D4   RND      V0, #D4         ; V0 = random & D4
$69E    $AE4C   LD       I, $E4C         ; Load E4C into I
$6A0    $18C7   JP       $8C7            ; Jump to 8C7
$6A2    $77AF   ADD      V7, #AF         ; Add 175 to V7
$6A4    $1E33   JP       $E33            ; Jump to E33
$6A6    $8273   XOR      V2, V7          ; V2 ^= V7
$6A8    $844E   SHL      V4              ; V4 <<= 1, VF = MSB
$6AA    $C528   RND      V5, #28         ; V5 = random & 28
$6AC    $CAA5   RND      VA, #A5         ; VA = random & A5
$6AE    $0800   SYS      $800            ; System call to 800
$6B0    $7308   ADD      V3, #08         ; Add 8 to V3
$6B2    $4692   SNE      V6, #92         ; Skip if V6 != 146
$6B4    $F469   UNKNOWN  F469            ; Unknown Fxxx instruction
$6B6    $142D   JP       $42D            ; Jump to 42D
$6B8    $C969   RND      V9, #69         ; V9 = random & 69
$6BA    $9C52   UNKNOWN  $9C52           ; Unknown 9xxx instruction
$6BC    $A624   LD       I, $624         ; Load 624 into I
$6BE    $DEA9   DRW      VE, VA, #9      ; Draw 9-byte sprite at VE, VA
$6C0    $E9B5   UNKNOWN  $E9B5           ; Unknown Exxx instruction
$6C2    $7EFE   ADD      VE, #FE         ; Add 254 to VE
$6C4    $ED51   UNKNOWN  $ED51           ; Unknown Exxx instruction
$6C6    $170B   JP       $70B            ; Jump to 70B
$6C8    $E3DA   UNKNOWN  $E3DA           ; Unknown Exxx instruction
$6CA    $8777   SUBN     V7, V7          ; V7 = V7 - V7, VF = !borrow
$6CC    $50CF   UNKNOWN  $50CF           ; Unknown 5xxx instruction
$6CE    $5C8B   UNKNOWN  $5C8B           ; Unknown 5xxx instruction
$6D0    $D4E8   DRW      V4, VE, #8      ; Draw 8-byte sprite at V4, VE
$6D2    $ED0A   UNKNOWN  $ED0A           ; Unknown Exxx instruction
$6D4    $3F16   SE       VF, #16         ; Skip if VF == 22
$6D6    $8003   XOR      V0, V0          ; V0 ^= V0
$6D8    $1060   JP       $060            ; Jump to 060
$6DA    $E7EE   UNKNOWN  $E7EE           ; Unknown Exxx instruction
$6DC    $0E9E   SYS      $E9E            ; System call to E9E
$6DE    $E9CE   UNKNOWN  $E9CE           ; Unknown Exxx instruction
$6E0    $E3DF   UNKNOWN  $E3DF           ; Unknown Exxx instruction
$6E2    $E0A2   UNKNOWN  $E0A2           ; Unknown Exxx instruction
$6E4    $4F68   SNE      VF, #68         ; Skip if VF != 104
$6E6    $89CF   UNKNOWN  89CF            ; Unknown 8xxx instruction
$6E8    $FFB6   UNKNOWN  FFB6            ; Unknown Fxxx instruction
$6EA    $3EFB   SE       VE, #FB         ; Skip if VE == 251
$6EC    $9A0E   UNKNOWN  $9A0E           ; Unknown 9xxx instruction
$6EE    $23DD   CALL     $3DD            ; Call subroutine at 3DD
$6F0    $DF30   DRW      VF, V3, #0      ; Draw 0-byte sprite at VF, V3
$6F2    $3105   SE       V1, #05         ; Skip if V1 == 5
$6F4    $7316   ADD      V3, #16         ; Add 22 to V3
$6F6    $C078   RND      V0, #78         ; V0 = random & 78
$6F8    $2A7E   CALL     $A7E            ; Call subroutine at A7E
$6FA    $7BF3   ADD      VB, #F3         ; Add 243 to VB
$6FC    $E9A8   UNKNOWN  $E9A8           ; Unknown Exxx instruction
$6FE    $840B   UNKNOWN  840B            ; Unknown 8xxx instruction
$700    $A076   LD       I, $076         ; Load 076 into I
$702    $C230   RND      V2, #30         ; V2 = random & 30
$704    $4725   SNE      V7, #25         ; Skip if V7 != 37
$706    $7B3B   ADD      VB, #3B         ; Add 59 to VB
$708    $C679   RND      V6, #79         ; V6 = random & 79
$70A    $73A8   ADD      V3, #A8         ; Add 168 to V3
$70C    $9C95   UNKNOWN  $9C95           ; Unknown 9xxx instruction
$70E    $A9A3   LD       I, $9A3         ; Load 9A3 into I
$710    $FCDB   UNKNOWN  FCDB            ; Unknown Fxxx instruction
$712    $8C94   ADD      VC, V9          ; VC += V9, VF = carry
$714    $9F0C   UNKNOWN  $9F0C           ; Unknown 9xxx instruction
$716    $5309   UNKNOWN  $5309           ; Unknown 5xxx instruction
$718    $E3BE   UNKNOWN  $E3BE           ; Unknown Exxx instruction
$71A    $8C77   SUBN     VC, V7          ; VC = V7 - VC, VF = !borrow
$71C    $D399   DRW      V3, V9, #9      ; Draw 9-byte sprite at V3, V9
$71E    $39A5   SE       V9, #A5         ; Skip if V9 == 165
$720    $02EE   SYS      $2EE            ; System call to 2EE
$722    $F7E4   UNKNOWN  F7E4            ; Unknown Fxxx instruction
$724    $1075   JP       $075            ; Jump to 075
$726    $5C5D   UNKNOWN  $5C5D           ; Unknown 5xxx instruction
$728    $D0D0   DRW      V0, VD, #0      ; Draw 0-byte sprite at V0, VD
$72A    $48A3   SNE      V8, #A3         ; Skip if V8 != 163
$72C    $3F62   SE       VF, #62         ; Skip if VF == 98
$72E    $22BE   CALL     $2BE            ; Call subroutine at 2BE
$730    $77FF   ADD      V7, #FF         ; Add 255 to V7
$732    $1632   JP       $632            ; Jump to 632
$734    $31FD   SE       V1, #FD         ; Skip if V1 == 253
$736    $9232   UNKNOWN  $9232           ; Unknown 9xxx instruction
$738    $B640   JP       V0, $640        ; Jump to V0 + 640
$73A    $0BBB   SYS      $BBB            ; System call to BBB
$73C    $44D1   SNE      V4, #D1         ; Skip if V4 != 209
$73E    $5182   UNKNOWN  $5182           ; Unknown 5xxx instruction
$740    $FE62   UNKNOWN  FE62            ; Unknown Fxxx instruction
$742    $4531   SNE      V5, #31         ; Skip if V5 != 49
$744    $B611   JP       V0, $611        ; Jump to V0 + 611
$746    $2E06   CALL     $E06            ; Call subroutine at E06
$748    $CB94   RND      VB, #94         ; VB = random & 94
$74A    $3F37   SE       VF, #37         ; Skip if VF == 55
$74C    $B56A   JP       V0, $56A        ; Jump to V0 + 56A
$74E    $8815   SUB      V8, V1          ; V8 -= V1, VF = !borrow
$750    $ECF5   UNKNOWN  $ECF5           ; Unknown Exxx instruction
$752    $3E38   SE       VE, #38         ; Skip if VE == 56
$754    $26FE   CALL     $6FE            ; Call subroutine at 6FE
$756    $3095   SE       V0, #95         ; Skip if V0 == 149
$758    $41AA   SNE      V1, #AA         ; Skip if V1 != 170
$75A    $8490   LD       V4, V9          ; V4 = V9
$75C    $1CE3   JP       $CE3            ; Jump to CE3
$75E    $53EA   UNKNOWN  $53EA           ; Unknown 5xxx instruction
$760    $B79F   JP       V0, $79F        ; Jump to V0 + 79F
$762    $52FA   UNKNOWN  $52FA           ; Unknown 5xxx instruction
$764    $F6D2   UNKNOWN  F6D2            ; Unknown Fxxx instruction
$766    $82F3   XOR      V2, VF          ; V2 ^= VF
$768    $64F7   LD       V4, #F7         ; Load 247 into V4
$76A    $6D81   LD       VD, #81         ; Load 129 into VD
$76C    $CFDF   RND      VF, #DF         ; VF = random & DF
$76E    $6590   LD       V5, #90         ; Load 144 into V5
$770    $7623   ADD      V6, #23         ; Add 35 to V6
$772    $468B   SNE      V6, #8B         ; Skip if V6 != 139
$774    $7490   ADD      V4, #90         ; Add 144 to V4
$776    $6890   LD       V8, #90         ; Load 144 into V8
$778    $84C4   ADD      V4, VC          ; V4 += VC, VF = carry
$77A    $0DE4   SYS      $DE4            ; System call to DE4
$77C    $6D98   LD       VD, #98         ; Load 152 into VD
$77E    $5C92   UNKNOWN  $5C92           ; Unknown 5xxx instruction
$780    $550F   UNKNOWN  $550F           ; Unknown 5xxx instruction
$782    $6187   LD       V1, #87         ; Load 135 into V1
$784    $90DC   UNKNOWN  $90DC           ; Unknown 9xxx instruction
$786    $2907   CALL     $907            ; Call subroutine at 907
$788    $7C02   ADD      VC, #02         ; Add 2 to VC
$78A    $40D8   SNE      V0, #D8         ; Skip if V0 != 216
$78C    $1969   JP       $969            ; Jump to 969
$78E    $0DA9   SYS      $DA9            ; System call to DA9
$790    $1C4F   JP       $C4F            ; Jump to C4F
$792    $9175   UNKNOWN  $9175           ; Unknown 9xxx instruction
$794    $BFF4   JP       V0, $FF4        ; Jump to V0 + FF4
$796    $7B90   ADD      VB, #90         ; Add 144 to VB
$798    $DC2C   DRW      VC, V2, #C      ; Draw 12-byte sprite at VC, V2
$79A    $0962   SYS      $962            ; System call to 962
$79C    $ECEA   UNKNOWN  $ECEA           ; Unknown Exxx instruction
$79E    $A5DB   LD       I, $5DB         ; Load 5DB into I
$7A0    $8215   SUB      V2, V1          ; V2 -= V1, VF = !borrow
$7A2    $B224   JP       V0, $224        ; Jump to V0 + 224
$7A4    $7655   ADD      V6, #55         ; Add 85 to V6
$7A6    $299D   CALL     $99D            ; Call subroutine at 99D
$7A8    $BF5F   JP       V0, $F5F        ; Jump to V0 + F5F
$7AA    $79A6   ADD      V9, #A6         ; Add 166 to V9
$7AC    $51F7   UNKNOWN  $51F7           ; Unknown 5xxx instruction
$7AE    $0E5B   SYS      $E5B            ; System call to E5B
$7B0    $72F5   ADD      V2, #F5         ; Add 245 to V2
$7B2    $9884   UNKNOWN  $9884           ; Unknown 9xxx instruction
$7B4    $5031   UNKNOWN  $5031           ; Unknown 5xxx instruction
$7B6    $EC9D   UNKNOWN  $EC9D           ; Unknown Exxx instruction
$7B8    $1F6D   JP       $F6D            ; Jump to F6D
$7BA    $66FB   LD       V6, #FB         ; Load 251 into V6
$7BC    $3BE2   SE       VB, #E2         ; Skip if VB == 226
$7BE    $37F8   SE       V7, #F8         ; Skip if V7 == 248
$7C0    $CDA1   RND      VD, #A1         ; VD = random & A1
$7C2    $8236   SHR      V2              ; V2 >>= 1, VF = LSB
$7C4    $F998   UNKNOWN  F998            ; Unknown Fxxx instruction
$7C6    $42BD   SNE      V2, #BD         ; Skip if V2 != 189
$7C8    $78F2   ADD      V8, #F2         ; Add 242 to V8
$7CA    $16BD   JP       $6BD            ; Jump to 6BD
$7CC    $6F01   LD       VF, #01         ; Load 1 into VF
$7CE    $D22F   DRW      V2, V2, #F      ; Draw 15-byte sprite at V2, V2
$7D0    $6884   LD       V8, #84         ; Load 132 into V8
$7D2    $8202   AND      V2, V0          ; V2 &= V0
$7D4    $03DA   SYS      $3DA            ; System call to 3DA
$7D6    $FDF8   UNKNOWN  FDF8            ; Unknown Fxxx instruction
$7D8    $81EC   UNKNOWN  81EC            ; Unknown 8xxx instruction
$7DA    $09D4   SYS      $9D4            ; System call to 9D4
$7DC    $779E   ADD      V7, #9E         ; Add 158 to V7
$7DE    $111A   JP       $11A            ; Jump to 11A
$7E0    $3423   SE       V4, #23         ; Skip if V4 == 35
$7E2    $8BFE   SHL      VB              ; VB <<= 1, VF = MSB
$7E4    $E9C1   UNKNOWN  $E9C1           ; Unknown Exxx instruction
$7E6    $A632   LD       I, $632         ; Load 632 into I
$7E8    $1B92   JP       $B92            ; Jump to B92
$7EA    $1A7D   JP       $A7D            ; Jump to A7D
$7EC    $A3D4   LD       I, $3D4         ; Load 3D4 into I
$7EE    $D79C   DRW      V7, V9, #C      ; Draw 12-byte sprite at V7, V9
$7F0    $D7E4   DRW      V7, VE, #4      ; Draw 4-byte sprite at V7, VE
$7F2    $2DAF   CALL     $DAF            ; Call subroutine at DAF
$7F4    $36E0   SE       V6, #E0         ; Skip if V6 == 224
$7F6    $1CC5   JP       $CC5            ; Jump to CC5
$7F8    $A6B9   LD       I, $6B9         ; Load 6B9 into I
$7FA    $CF44   RND      VF, #44         ; VF = random & 44
$7FC    $BEE7   JP       V0, $EE7        ; Jump to V0 + EE7
$7FE    $FD8D   UNKNOWN  FD8D            ; Unknown Fxxx instruction
$800    $1AC1   JP       $AC1            ; Jump to AC1
$802    $1F99   JP       $F99            ; Jump to F99
$804    $8BA4   ADD      VB, VA          ; VB += VA, VF = carry
$806    $6F17   LD       VF, #17         ; Load 23 into VF
$808    $6008   LD       V0, #08         ; Load 8 into V0
$80A    $1FFC   JP       $FFC            ; Jump to FFC
$80C    $FB20   UNKNOWN  FB20            ; Unknown Fxxx instruction
$80E    $7227   ADD      V2, #27         ; Add 39 to V2
$810    $5C4A   UNKNOWN  $5C4A           ; Unknown 5xxx instruction
$812    $92ED   UNKNOWN  $92ED           ; Unknown 9xxx instruction
$814    $BD6F   JP       V0, $D6F        ; Jump to V0 + D6F
$816    $3EAC   SE       VE, #AC         ; Skip if VE == 172
$818    $99E0   SNE      V9, VE          ; Skip if V9 != VE
$81A    $F1FA   UNKNOWN  F1FA            ; Unknown Fxxx instruction
$81C    $43C3   SNE      V3, #C3         ; Skip if V3 != 195
$81E    $6847   LD       V8, #47         ; Load 71 into V8
$820    $55FD   UNKNOWN  $55FD           ; Unknown 5xxx instruction
$822    $7D49   ADD      VD, #49         ; Add 73 to VD
$824    $F852   UNKNOWN  F852            ; Unknown Fxxx instruction
$826    $8042   AND      V0, V4          ; V0 &= V4
$828    $6E47   LD       VE, #47         ; Load 71 into VE
$82A    $305B   SE       V0, #5B         ; Skip if V0 == 91
$82C    $292E   CALL     $92E            ; Call subroutine at 92E
$82E    $5864   UNKNOWN  $5864           ; Unknown 5xxx instruction
$830    $C488   RND      V4, #88         ; V4 = random & 88
$832    $0B52   SYS      $B52            ; System call to B52
$834    $3E32   SE       VE, #32         ; Skip if VE == 50
$836    $0CC3   SYS      $CC3            ; System call to CC3
$838    $862E   SHL      V6              ; V6 <<= 1, VF = MSB
$83A    $7060   ADD      V0, #60         ; Add 96 to V0
$83C    $C336   RND      V3, #36         ; V3 = random & 36
$83E    $4759   SNE      V7, #59         ; Skip if V7 != 89
$840    $80EC   UNKNOWN  80EC            ; Unknown 8xxx instruction
$842    $CA2D   RND      VA, #2D         ; VA = random & 2D
$844    $66F3   LD       V6, #F3         ; Load 243 into V6
$846    $8703   XOR      V7, V0          ; V7 ^= V0
$848    $56D9   UNKNOWN  $56D9           ; Unknown 5xxx instruction
$84A    $87CF   UNKNOWN  87CF            ; Unknown 8xxx instruction
$84C    $6E00   LD       VE, #00         ; Load 0 into VE
$84E    $4947   SNE      V9, #47         ; Skip if V9 != 71
$850    $9F5A   UNKNOWN  $9F5A           ; Unknown 9xxx instruction
$852    $66C3   LD       V6, #C3         ; Load 195 into V6
$854    $8553   XOR      V5, V5          ; V5 ^= V5
$856    $1CE5   JP       $CE5            ; Jump to CE5
$858    $D173   DRW      V1, V7, #3      ; Draw 3-byte sprite at V1, V7
$85A    $EF6F   UNKNOWN  $EF6F           ; Unknown Exxx instruction
$85C    $EF0A   UNKNOWN  $EF0A           ; Unknown Exxx instruction
$85E    $C310   RND      V3, #10         ; V3 = random & 10
$860    $D1A1   DRW      V1, VA, #1      ; Draw 1-byte sprite at V1, VA
$862    $99DC   UNKNOWN  $99DC           ; Unknown 9xxx instruction
$864    $8B90   LD       VB, V9          ; VB = V9
$866    $52C3   UNKNOWN  $52C3           ; Unknown 5xxx instruction
$868    $D33A   DRW      V3, V3, #A      ; Draw 10-byte sprite at V3, V3
$86A    $8BCF   UNKNOWN  8BCF            ; Unknown 8xxx instruction
$86C    $C4A4   RND      V4, #A4         ; V4 = random & A4
$86E    $9454   UNKNOWN  $9454           ; Unknown 9xxx instruction
$870    $4187   SNE      V1, #87         ; Skip if V1 != 135
$872    $586C   UNKNOWN  $586C           ; Unknown 5xxx instruction
$874    $A42C   LD       I, $42C         ; Load 42C into I
$876    $1E75   JP       $E75            ; Jump to E75
$878    $BE5A   JP       V0, $E5A        ; Jump to V0 + E5A
$87A    $4533   SNE      V5, #33         ; Skip if V5 != 51
$87C    $5073   UNKNOWN  $5073           ; Unknown 5xxx instruction
$87E    $DF7B   DRW      VF, V7, #B      ; Draw 11-byte sprite at VF, V7
$880    $5E66   UNKNOWN  $5E66           ; Unknown 5xxx instruction
$882    $B0E4   JP       V0, $0E4        ; Jump to V0 + 0E4
$884    $2C87   CALL     $C87            ; Call subroutine at C87
$886    $A4EC   LD       I, $4EC         ; Load 4EC into I
$888    $FE41   UNKNOWN  FE41            ; Unknown Fxxx instruction
$88A    $3F8F   SE       VF, #8F         ; Skip if VF == 143
$88C    $9A4C   UNKNOWN  $9A4C           ; Unknown 9xxx instruction
$88E    $455B   SNE      V5, #5B         ; Skip if V5 != 91
$890    $4262   SNE      V2, #62         ; Skip if V2 != 98
$892    $45A0   SNE      V5, #A0         ; Skip if V5 != 160
$894    $7FC4   ADD      VF, #C4         ; Add 196 to VF
$896    $1A66   JP       $A66            ; Jump to A66
$898    $3367   SE       V3, #67         ; Skip if V3 == 103
$89A    $9C57   UNKNOWN  $9C57           ; Unknown 9xxx instruction
$89C    $A147   LD       I, $147         ; Load 147 into I
$89E    $747C   ADD      V4, #7C         ; Add 124 to V4
$8A0    $1344   JP       $344            ; Jump to 344
$8A2    $1EC6   JP       $EC6            ; Jump to EC6
$8A4    $69C9   LD       V9, #C9         ; Load 201 into V9
$8A6    $BA96   JP       V0, $A96        ; Jump to V0 + A96
$8A8    $670B   LD       V7, #0B         ; Load 11 into V7
$8AA    $AB26   LD       I, $B26         ; Load B26 into I
$8AC    $D5A0   DRW      V5, VA, #0      ; Draw 0-byte sprite at V5, VA
$8AE    $852A   UNKNOWN  852A            ; Unknown 8xxx instruction
$8B0    $E5E3   UNKNOWN  $E5E3           ; Unknown Exxx instruction
$8B2    $A4A4   LD       I, $4A4         ; Load 4A4 into I
$8B4    $6D78   LD       VD, #78         ; Load 120 into VD
$8B6    $50E9   UNKNOWN  $50E9           ; Unknown 5xxx instruction
$8B8    $4C49   SNE      VC, #49         ; Skip if VC != 73
$8BA    $49C1   SNE      V9, #C1         ; Skip if V9 != 193
$8BC    $34EF   SE       V4, #EF         ; Skip if V4 == 239
$8BE    $8F67   SUBN     VF, V6          ; VF = V6 - VF, VF = !borrow
$8C0    $9442   UNKNOWN  $9442           ; Unknown 9xxx instruction
$8C2    $D830   DRW      V8, V3, #0      ; Draw 0-byte sprite at V8, V3
$8C4    $1673   JP       $673            ; Jump to 673
$8C6    $DF36   DRW      VF, V3, #6      ; Draw 6-byte sprite at VF, V3
$8C8    $92AD   UNKNOWN  $92AD           ; Unknown 9xxx instruction
$8CA    $21B7   CALL     $1B7            ; Call subroutine at 1B7
$8CC    $EFD9   UNKNOWN  $EFD9           ; Unknown Exxx instruction
$8CE    $9F1E   UNKNOWN  $9F1E           ; Unknown 9xxx instruction
$8D0    $ED4F   UNKNOWN  $ED4F           ; Unknown Exxx instruction
$8D2    $87EB   UNKNOWN  87EB            ; Unknown 8xxx instruction
$8D4    $CC61   RND      VC, #61         ; VC = random & 61
$8D6    $034B   SYS      $34B            ; System call to 34B
$8D8    $08E5   SYS      $8E5            ; System call to 8E5
$8DA    $F2AB   UNKNOWN  F2AB            ; Unknown Fxxx instruction
$8DC    $B2E3   JP       V0, $2E3        ; Jump to V0 + 2E3
$8DE    $2F51   CALL     $F51            ; Call subroutine at F51
$8E0    $25C3   CALL     $5C3            ; Call subroutine at 5C3
$8E2    $B3AA   JP       V0, $3AA        ; Jump to V0 + 3AA
$8E4    $2ECD   CALL     $ECD            ; Call subroutine at ECD
$8E6    $66E5   LD       V6, #E5         ; Load 229 into V6
$8E8    $8AC3   XOR      VA, VC          ; VA ^= VC
$8EA    $A60C   LD       I, $60C         ; Load 60C into I
$8EC    $B9F5   JP       V0, $9F5        ; Jump to V0 + 9F5
$8EE    $C499   RND      V4, #99         ; V4 = random & 99
$8F0    $CACD   RND      VA, #CD         ; VA = random & CD
$8F2    $72B6   ADD      V2, #B6         ; Add 182 to V2
$8F4    $6309   LD       V3, #09         ; Load 9 into V3
$8F6    $1F17   JP       $F17            ; Jump to F17
$8F8    $D1C5   DRW      V1, VC, #5      ; Draw 5-byte sprite at V1, VC
$8FA    $022B   SYS      $22B            ; System call to 22B
$8FC    $501D   UNKNOWN  $501D           ; Unknown 5xxx instruction
$8FE    $434D   SNE      V3, #4D         ; Skip if V3 != 77
$900    $E9B3   UNKNOWN  $E9B3           ; Unknown Exxx instruction
$902    $135B   JP       $35B            ; Jump to 35B
$904    $39D0   SE       V9, #D0         ; Skip if V9 == 208
$906    $407F   SNE      V0, #7F         ; Skip if V0 != 127
$908    $068A   SYS      $68A            ; System call to 68A
$90A    $7966   ADD      V9, #66         ; Add 102 to V9
$90C    $0F12   SYS      $F12            ; System call to F12
$90E    $16EC   JP       $6EC            ; Jump to 6EC
$910    $DC97   DRW      VC, V9, #7      ; Draw 7-byte sprite at VC, V9
$912    $2344   CALL     $344            ; Call subroutine at 344
$914    $8DBF   UNKNOWN  8DBF            ; Unknown 8xxx instruction
$916    $6349   LD       V3, #49         ; Load 73 into V3
$918    $A0D2   LD       I, $0D2         ; Load 0D2 into I
$91A    $2242   CALL     $242            ; Call subroutine at 242
$91C    $4097   SNE      V0, #97         ; Skip if V0 != 151
$91E    $2FAE   CALL     $FAE            ; Call subroutine at FAE
$920    $8773   XOR      V7, V7          ; V7 ^= V7
$922    $4BF4   SNE      VB, #F4         ; Skip if VB != 244
$924    $E338   UNKNOWN  $E338           ; Unknown Exxx instruction
$926    $F125   UNKNOWN  F125            ; Unknown Fxxx instruction
$928    $CB53   RND      VB, #53         ; VB = random & 53
$92A    $53A2   UNKNOWN  $53A2           ; Unknown 5xxx instruction
$92C    $62F0   LD       V2, #F0         ; Load 240 into V2
$92E    $AA4B   LD       I, $A4B         ; Load A4B into I
$930    $4FAC   SNE      VF, #AC         ; Skip if VF != 172
$932    $A995   LD       I, $995         ; Load 995 into I
$934    $F904   UNKNOWN  F904            ; Unknown Fxxx instruction
$936    $FA19   UNKNOWN  FA19            ; Unknown Fxxx instruction
$938    $2098   CALL     $098            ; Call subroutine at 098
$93A    $9348   UNKNOWN  $9348           ; Unknown 9xxx instruction
$93C    $D271   DRW      V2, V7, #1      ; Draw 1-byte sprite at V2, V7
$93E    $8AE8   UNKNOWN  8AE8            ; Unknown 8xxx instruction
$940    $54C0   SE       V4, VC          ; Skip if V4 == VC
$942    $6BA7   LD       VB, #A7         ; Load 167 into VB
$944    $2728   CALL     $728            ; Call subroutine at 728
$946    $173D   JP       $73D            ; Jump to 73D
$948    $DF53   DRW      VF, V5, #3      ; Draw 3-byte sprite at VF, V5
$94A    $22B0   CALL     $2B0            ; Call subroutine at 2B0
$94C    $233F   CALL     $33F            ; Call subroutine at 33F
$94E    $B17B   JP       V0, $17B        ; Jump to V0 + 17B
$950    $54D1   UNKNOWN  $54D1           ; Unknown 5xxx instruction
$952    $0BB8   SYS      $BB8            ; System call to BB8
$954    $F6FB   UNKNOWN  F6FB            ; Unknown Fxxx instruction
$956    $6177   LD       V1, #77         ; Load 119 into V1
$958    $10C5   JP       $0C5            ; Jump to 0C5
$95A    $F80B   UNKNOWN  F80B            ; Unknown Fxxx instruction
$95C    $9857   UNKNOWN  $9857           ; Unknown 9xxx instruction
$95E    $EE9A   UNKNOWN  $EE9A           ; Unknown Exxx instruction
$960    $4EA4   SNE      VE, #A4         ; Skip if VE != 164
$962    $015F   SYS      $15F            ; System call to 15F
$964    $5FC1   UNKNOWN  $5FC1           ; Unknown 5xxx instruction
$966    $C4F7   RND      V4, #F7         ; V4 = random & F7
$968    $7F63   ADD      VF, #63         ; Add 99 to VF
$96A    $96A2   UNKNOWN  $96A2           ; Unknown 9xxx instruction
$96C    $9AE9   UNKNOWN  $9AE9           ; Unknown 9xxx instruction
$96E    $7CF3   ADD      VC, #F3         ; Add 243 to VC
$970    $7EFC   ADD      VE, #FC         ; Add 252 to VE
$972    $2BC3   CALL     $BC3            ; Call subroutine at BC3
$974    $1534   JP       $534            ; Jump to 534
$976    $FBEC   UNKNOWN  FBEC            ; Unknown Fxxx instruction
$978    $BC56   JP       V0, $C56        ; Jump to V0 + C56
$97A    $AA49   LD       I, $A49         ; Load A49 into I
$97C    $5C08   UNKNOWN  $5C08           ; Unknown 5xxx instruction
$97E    $3509   SE       V5, #09         ; Skip if V5 == 9
$980    $B21B   JP       V0, $21B        ; Jump to V0 + 21B
$982    $211A   CALL     $11A            ; Call subroutine at 11A
$984    $9560   SNE      V5, V6          ; Skip if V5 != V6
$986    $44CA   SNE      V4, #CA         ; Skip if V4 != 202
$988    $8B7F   UNKNOWN  8B7F            ; Unknown 8xxx instruction
$98A    $960B   UNKNOWN  $960B           ; Unknown 9xxx instruction
$98C    $E954   UNKNOWN  $E954           ; Unknown Exxx instruction
$98E    $44E0   SNE      V4, #E0         ; Skip if V4 != 224
$990    $9AA3   UNKNOWN  $9AA3           ; Unknown 9xxx instruction
$992    $A898   LD       I, $898         ; Load 898 into I
$994    $0706   SYS      $706            ; System call to 706
$996    $8AA0   LD       VA, VA          ; VA = VA
$998    $F817   UNKNOWN  F817            ; Unknown Fxxx instruction
$99A    $2D67   CALL     $D67            ; Call subroutine at D67
$99C    $2657   CALL     $657            ; Call subroutine at 657
$99E    $5C8B   UNKNOWN  $5C8B           ; Unknown 5xxx instruction
$9A0    $79D5   ADD      V9, #D5         ; Add 213 to V9
$9A2    $150B   JP       $50B            ; Jump to 50B
$9A4    $4667   SNE      V6, #67         ; Skip if V6 != 103
$9A6    $D9B5   DRW      V9, VB, #5      ; Draw 5-byte sprite at V9, VB
$9A8    $E63D   UNKNOWN  $E63D           ; Unknown Exxx instruction
$9AA    $D1C4   DRW      V1, VC, #4      ; Draw 4-byte sprite at V1, VC
$9AC    $218C   CALL     $18C            ; Call subroutine at 18C
$9AE    $0B76   SYS      $B76            ; System call to B76
$9B0    $32FE   SE       V2, #FE         ; Skip if V2 == 254
$9B2    $D746   DRW      V7, V4, #6      ; Draw 6-byte sprite at V7, V4
$9B4    $6EFD   LD       VE, #FD         ; Load 253 into VE
$9B6    $0CCA   SYS      $CCA            ; System call to CCA
$9B8    $4B35   SNE      VB, #35         ; Skip if VB != 53
$9BA    $690B   LD       V9, #0B         ; Load 11 into V9
$9BC    $766A   ADD      V6, #6A         ; Add 106 to V6
$9BE    $1FFC   JP       $FFC            ; Jump to FFC
$9C0    $A99C   LD       I, $99C         ; Load 99C into I
$9C2    $D332   DRW      V3, V3, #2      ; Draw 2-byte sprite at V3, V3
$9C4    $50C7   UNKNOWN  $50C7           ; Unknown 5xxx instruction
$9C6    $6EF7   LD       VE, #F7         ; Load 247 into VE
$9C8    $CE9D   RND      VE, #9D         ; VE = random & 9D
$9CA    $2854   CALL     $854            ; Call subroutine at 854
$9CC    $9059   UNKNOWN  $9059           ; Unknown 9xxx instruction
$9CE    $CF8C   RND      VF, #8C         ; VF = random & 8C
$9D0    $0D23   SYS      $D23            ; System call to D23
$9D2    $F795   UNKNOWN  F795            ; Unknown Fxxx instruction
$9D4    $73B4   ADD      V3, #B4         ; Add 180 to V3
$9D6    $4AF6   SNE      VA, #F6         ; Skip if VA != 246
$9D8    $E252   UNKNOWN  $E252           ; Unknown Exxx instruction
$9DA    $06A4   SYS      $6A4            ; System call to 6A4
$9DC    $C7BB   RND      V7, #BB         ; V7 = random & BB
$9DE    $986E   UNKNOWN  $986E           ; Unknown 9xxx instruction
$9E0    $5715   UNKNOWN  $5715           ; Unknown 5xxx instruction
$9E2    $1BCB   JP       $BCB            ; Jump to BCB
$9E4    $6215   LD       V2, #15         ; Load 21 into V2
$9E6    $0B82   SYS      $B82            ; System call to B82
$9E8    $F60F   UNKNOWN  F60F            ; Unknown Fxxx instruction
$9EA    $F457   UNKNOWN  F457            ; Unknown Fxxx instruction
$9EC    $22C1   CALL     $2C1            ; Call subroutine at 2C1
$9EE    $2B00   CALL     $B00            ; Call subroutine at B00
$9F0    $3AED   SE       VA, #ED         ; Skip if VA == 237
$9F2    $9B6E   UNKNOWN  $9B6E           ; Unknown 9xxx instruction
$9F4    $5E1A   UNKNOWN  $5E1A           ; Unknown 5xxx instruction
$9F6    $2B2E   CALL     $B2E            ; Call subroutine at B2E
$9F8    $B2F3   JP       V0, $2F3        ; Jump to V0 + 2F3
$9FA    $81B5   SUB      V1, VB          ; V1 -= VB, VF = !borrow
$9FC    $4822   SNE      V8, #22         ; Skip if V8 != 34
$9FE    $89F0   LD       V9, VF          ; V9 = VF
$A00    $DDA0   DRW      VD, VA, #0      ; Draw 0-byte sprite at VD, VA
$A02    $8AE1   OR       VA, VE          ; VA |= VE
$A04    $8029   UNKNOWN  8029            ; Unknown 8xxx instruction
$A06    $A37E   LD       I, $37E         ; Load 37E into I
$A08    $AA97   LD       I, $A97         ; Load A97 into I
$A0A    $93A9   UNKNOWN  $93A9           ; Unknown 9xxx instruction
$A0C    $D445   DRW      V4, V4, #5      ; Draw 5-byte sprite at V4, V4
$A0E    $AD34   LD       I, $D34         ; Load D34 into I
$A10    $1207   JP       $207            ; Jump to 207
$A12    $046C   SYS      $46C            ; System call to 46C
$A14    $1F34   JP       $F34            ; Jump to F34
$A16    $1ECF   JP       $ECF            ; Jump to ECF
$A18    $EAE9   UNKNOWN  $EAE9           ; Unknown Exxx instruction
$A1A    $69D2   LD       V9, #D2         ; Load 210 into V9
$A1C    $2497   CALL     $497            ; Call subroutine at 497
$A1E    $BD31   JP       V0, $D31        ; Jump to V0 + D31
$A20    $167D   JP       $67D            ; Jump to 67D
$A22    $1C5B   JP       $C5B            ; Jump to C5B
$A24    $6F28   LD       VF, #28         ; Load 40 into VF
$A26    $E84E   UNKNOWN  $E84E           ; Unknown Exxx instruction
$A28    $AB24   LD       I, $B24         ; Load B24 into I
$A2A    $7800   ADD      V8, #00         ; Add 0 to V8
$A2C    $41F7   SNE      V1, #F7         ; Skip if V1 != 247
$A2E    $7301   ADD      V3, #01         ; Add 1 to V3
$A30    $BCD3   JP       V0, $CD3        ; Jump to V0 + CD3
$A32    $5897   UNKNOWN  $5897           ; Unknown 5xxx instruction
$A34    $3D0D   SE       VD, #0D         ; Skip if VD == 13
$A36    $CE43   RND      VE, #43         ; VE = random & 43
$A38    $6C17   LD       VC, #17         ; Load 23 into VC
$A3A    $704D   ADD      V0, #4D         ; Add 77 to V0
$A3C    $9B23   UNKNOWN  $9B23           ; Unknown 9xxx instruction
$A3E    $4C21   SNE      VC, #21         ; Skip if VC != 33
$A40    $E3F3   UNKNOWN  $E3F3           ; Unknown Exxx instruction
$A42    $8E35   SUB      VE, V3          ; VE -= V3, VF = !borrow
$A44    $9F3C   UNKNOWN  $9F3C           ; Unknown 9xxx instruction
$A46    $751C   ADD      V5, #1C         ; Add 28 to V5
$A48    $9446   UNKNOWN  $9446           ; Unknown 9xxx instruction
$A4A    $4928   SNE      V9, #28         ; Skip if V9 != 40
$A4C    $F215   LD       DT, V2          ; Delay timer = V2
$A4E    $4606   SNE      V6, #06         ; Skip if V6 != 6
$A50    $B67B   JP       V0, $67B        ; Jump to V0 + 67B
$A52    $DDE3   DRW      VD, VE, #3      ; Draw 3-byte sprite at VD, VE
$A54    $039D   SYS      $39D            ; System call to 39D
$A56    $FE3C   UNKNOWN  FE3C            ; Unknown Fxxx instruction
$A58    $170F   JP       $70F            ; Jump to 70F
$A5A    $183F   JP       $83F            ; Jump to 83F
$A5C    $6120   LD       V1, #20         ; Load 32 into V1
$A5E    $6A41   LD       VA, #41         ; Load 65 into VA
$A60    $1BC6   JP       $BC6            ; Jump to BC6
$A62    $FC78   UNKNOWN  FC78            ; Unknown Fxxx instruction
$A64    $44E0   SNE      V4, #E0         ; Skip if V4 != 224
$A66    $9A6E   UNKNOWN  $9A6E           ; Unknown 9xxx instruction
$A68    $CF04   RND      VF, #04         ; VF = random & 04
$A6A    $AE89   LD       I, $E89         ; Load E89 into I
$A6C    $2C0F   CALL     $C0F            ; Call subroutine at C0F
$A6E    $CF03   RND      VF, #03         ; VF = random & 03
$A70    $1E9C   JP       $E9C            ; Jump to E9C
$A72    $40DB   SNE      V0, #DB         ; Skip if V0 != 219
$A74    $EA8E   UNKNOWN  $EA8E           ; Unknown Exxx instruction
$A76    $375A   SE       V7, #5A         ; Skip if V7 == 90
$A78    $FA10   UNKNOWN  FA10            ; Unknown Fxxx instruction
$A7A    $E753   UNKNOWN  $E753           ; Unknown Exxx instruction
$A7C    $8B46   SHR      VB              ; VB >>= 1, VF = LSB
$A7E    $4B60   SNE      VB, #60         ; Skip if VB != 96
$A80    $CCA7   RND      VC, #A7         ; VC = random & A7
$A82    $83EB   UNKNOWN  83EB            ; Unknown 8xxx instruction
$A84    $B162   JP       V0, $162        ; Jump to V0 + 162
$A86    $81E3   XOR      V1, VE          ; V1 ^= VE
$A88    $C3DF   RND      V3, #DF         ; V3 = random & DF
$A8A    $DEF2   DRW      VE, VF, #2      ; Draw 2-byte sprite at VE, VF
$A8C    $ADC2   LD       I, $DC2         ; Load DC2 into I
$A8E    $D0E9   DRW      V0, VE, #9      ; Draw 9-byte sprite at V0, VE
$A90    $569F   UNKNOWN  $569F           ; Unknown 5xxx instruction
$A92    $5346   UNKNOWN  $5346           ; Unknown 5xxx instruction
$A94    $461C   SNE      V6, #1C         ; Skip if V6 != 28
$A96    $E88F   UNKNOWN  $E88F           ; Unknown Exxx instruction
$A98    $2E5F   CALL     $E5F            ; Call subroutine at E5F
$A9A    $7EBD   ADD      VE, #BD         ; Add 189 to VE
$A9C    $B589   JP       V0, $589        ; Jump to V0 + 589
$A9E    $B4BD   JP       V0, $4BD        ; Jump to V0 + 4BD
$AA0    $36E9   SE       V6, #E9         ; Skip if V6 == 233
$AA2    $095C   SYS      $95C            ; System call to 95C
$AA4    $778E   ADD      V7, #8E         ; Add 142 to V7
$AA6    $3D1B   SE       VD, #1B         ; Skip if VD == 27
$AA8    $989C   UNKNOWN  $989C           ; Unknown 9xxx instruction
$AAA    $5094   UNKNOWN  $5094           ; Unknown 5xxx instruction
$AAC    $AA71   LD       I, $A71         ; Load A71 into I
$AAE    $C2A8   RND      V2, #A8         ; V2 = random & A8
$AB0    $56F4   UNKNOWN  $56F4           ; Unknown 5xxx instruction
$AB2    $4455   SNE      V4, #55         ; Skip if V4 != 85
$AB4    $8A7B   UNKNOWN  8A7B            ; Unknown 8xxx instruction
$AB6    $4980   SNE      V9, #80         ; Skip if V9 != 128
$AB8    $0D4F   SYS      $D4F            ; System call to D4F
$ABA    $24A5   CALL     $4A5            ; Call subroutine at 4A5
$ABC    $BE89   JP       V0, $E89        ; Jump to V0 + E89
$ABE    $33E1   SE       V3, #E1         ; Skip if V3 == 225
$AC0    $D655   DRW      V6, V5, #5      ; Draw 5-byte sprite at V6, V5
$AC2    $D7AE   DRW      V7, VA, #E      ; Draw 14-byte sprite at V7, VA
$AC4    $CCFA   RND      VC, #FA         ; VC = random & FA
$AC6    $A20C   LD       I, $20C         ; Load 20C into I
$AC8    $9DE6   UNKNOWN  $9DE6           ; Unknown 9xxx instruction
$ACA    $A7A6   LD       I, $7A6         ; Load 7A6 into I
$ACC    $57DD   UNKNOWN  $57DD           ; Unknown 5xxx instruction
$ACE    $A383   LD       I, $383         ; Load 383 into I
$AD0    $B259   JP       V0, $259        ; Jump to V0 + 259
$AD2    $FD09   UNKNOWN  FD09            ; Unknown Fxxx instruction
$AD4    $D7E5   DRW      V7, VE, #5      ; Draw 5-byte sprite at V7, VE
$AD6    $C0F1   RND      V0, #F1         ; V0 = random & F1
$AD8    $A935   LD       I, $935         ; Load 935 into I
$ADA    $12ED   JP       $2ED            ; Jump to 2ED
$ADC    $9A47   UNKNOWN  $9A47           ; Unknown 9xxx instruction
$ADE    $FAAC   UNKNOWN  FAAC            ; Unknown Fxxx instruction
$AE0    $3D17   SE       VD, #17         ; Skip if VD == 23
$AE2    $F6CA   UNKNOWN  F6CA            ; Unknown Fxxx instruction
$AE4    $A4DE   LD       I, $4DE         ; Load 4DE into I
$AE6    $8228   UNKNOWN  8228            ; Unknown 8xxx instruction
$AE8    $497E   SNE      V9, #7E         ; Skip if V9 != 126
$AEA    $191B   JP       $91B            ; Jump to 91B
$AEC    $C5D7   RND      V5, #D7         ; V5 = random & D7
$AEE    $D64F   DRW      V6, V4, #F      ; Draw 15-byte sprite at V6, V4
$AF0    $7815   ADD      V8, #15         ; Add 21 to V8
$AF2    $ECBF   UNKNOWN  $ECBF           ; Unknown Exxx instruction
$AF4    $45A1   SNE      V5, #A1         ; Skip if V5 != 161
$AF6    $6953   LD       V9, #53         ; Load 83 into V9
$AF8    $1A09   JP       $A09            ; Jump to A09
$AFA    $EE35   UNKNOWN  $EE35           ; Unknown Exxx instruction
$AFC    $1FA9   JP       $FA9            ; Jump to FA9
$AFE    $82DC   UNKNOWN  82DC            ; Unknown 8xxx instruction
$B00    $5E99   UNKNOWN  $5E99           ; Unknown 5xxx instruction
$B02    $ADA5   LD       I, $DA5         ; Load DA5 into I
$B04    $68EE   LD       V8, #EE         ; Load 238 into V8
$B06    $7E53   ADD      VE, #53         ; Add 83 to VE
$B08    $2926   CALL     $926            ; Call subroutine at 926
$B0A    $68B3   LD       V8, #B3         ; Load 179 into V8
$B0C    $9CDB   UNKNOWN  $9CDB           ; Unknown 9xxx instruction
$B0E    $64D9   LD       V4, #D9         ; Load 217 into V4
$B10    $A280   LD       I, $280         ; Load 280 into I
$B12    $10AC   JP       $0AC            ; Jump to 0AC
$B14    $0B4C   SYS      $B4C            ; System call to B4C
$B16    $1595   JP       $595            ; Jump to 595
$B18    $FD4B   UNKNOWN  FD4B            ; Unknown Fxxx instruction
$B1A    $DC8C   DRW      VC, V8, #C      ; Draw 12-byte sprite at VC, V8
$B1C    $0726   SYS      $726            ; System call to 726
$B1E    $D63C   DRW      V6, V3, #C      ; Draw 12-byte sprite at V6, V3
$B20    $2383   CALL     $383            ; Call subroutine at 383
$B22    $C8C6   RND      V8, #C6         ; V8 = random & C6
$B24    $31A7   SE       V1, #A7         ; Skip if V1 == 167
$B26    $96F8   UNKNOWN  $96F8           ; Unknown 9xxx instruction
$B28    $CBC9   RND      VB, #C9         ; VB = random & C9
$B2A    $DE97   DRW      VE, V9, #7      ; Draw 7-byte sprite at VE, V9
$B2C    $A65C   LD       I, $65C         ; Load 65C into I
$B2E    $0E94   SYS      $E94            ; System call to E94
$B30    $5FF3   UNKNOWN  $5FF3           ; Unknown 5xxx instruction
$B32    $5012   UNKNOWN  $5012           ; Unknown 5xxx instruction
$B34    $12FB   JP       $2FB            ; Jump to 2FB
$B36    $CE03   RND      VE, #03         ; VE = random & 03
$B38    $B84B   JP       V0, $84B        ; Jump to V0 + 84B
$B3A    $9C30   SNE      VC, V3          ; Skip if VC != V3
$B3C    $DF46   DRW      VF, V4, #6      ; Draw 6-byte sprite at VF, V4
$B3E    $9142   UNKNOWN  $9142           ; Unknown 9xxx instruction
$B40    $F853   UNKNOWN  F853            ; Unknown Fxxx instruction
$B42    $ADD7   LD       I, $DD7         ; Load DD7 into I
$B44    $F580   UNKNOWN  F580            ; Unknown Fxxx instruction
$B46    $5CD8   UNKNOWN  $5CD8           ; Unknown 5xxx instruction
$B48    $0892   SYS      $892            ; System call to 892
$B4A    $31C4   SE       V1, #C4         ; Skip if V1 == 196
$B4C    $6DC8   LD       VD, #C8         ; Load 200 into VD
$B4E    $3A75   SE       VA, #75         ; Skip if VA == 117
$B50    $726A   ADD      V2, #6A         ; Add 106 to V2
$B52    $B1B6   JP       V0, $1B6        ; Jump to V0 + 1B6
$B54    $D8E3   DRW      V8, VE, #3      ; Draw 3-byte sprite at V8, VE
$B56    $DAA5   DRW      VA, VA, #5      ; Draw 5-byte sprite at VA, VA
$B58    $98C6   UNKNOWN  $98C6           ; Unknown 9xxx instruction
$B5A    $AB56   LD       I, $B56         ; Load B56 into I
$B5C    $ADA1   LD       I, $DA1         ; Load DA1 into I
$B5E    $CED2   RND      VE, #D2         ; VE = random & D2
$B60    $A870   LD       I, $870         ; Load 870 into I
$B62    $AB47   LD       I, $B47         ; Load B47 into I
$B64    $CCCD   RND      VC, #CD         ; VC = random & CD
$B66    $31BE   SE       V1, #BE         ; Skip if V1 == 190
$B68    $9CBD   UNKNOWN  $9CBD           ; Unknown 9xxx instruction
$B6A    $3602   SE       V6, #02         ; Skip if V6 == 2
$B6C    $05C9   SYS      $5C9            ; System call to 5C9
$B6E    $EE28   UNKNOWN  $EE28           ; Unknown Exxx instruction
$B70    $A452   LD       I, $452         ; Load 452 into I
$B72    $3D74   SE       VD, #74         ; Skip if VD == 116
$B74    $3DAC   SE       VD, #AC         ; Skip if VD == 172
$B76    $7468   ADD      V4, #68         ; Add 104 to V4
$B78    $0FD7   SYS      $FD7            ; System call to FD7
$B7A    $8542   AND      V5, V4          ; V5 &= V4
$B7C    $562D   UNKNOWN  $562D           ; Unknown 5xxx instruction
$B7E    $6645   LD       V6, #45         ; Load 69 into V6
$B80    $CB2E   RND      VB, #2E         ; VB = random & 2E
$B82    $EA2B   UNKNOWN  $EA2B           ; Unknown Exxx instruction
$B84    $69F3   LD       V9, #F3         ; Load 243 into V9
$B86    $1A5B   JP       $A5B            ; Jump to A5B
$B88    $11D3   JP       $1D3            ; Jump to 1D3
$B8A    $5CF5   UNKNOWN  $5CF5           ; Unknown 5xxx instruction
$B8C    $1C7E   JP       $C7E            ; Jump to C7E
$B8E    $AFA4   LD       I, $FA4         ; Load FA4 into I
$B90    $D686   DRW      V6, V8, #6      ; Draw 6-byte sprite at V6, V8
$B92    $E818   UNKNOWN  $E818           ; Unknown Exxx instruction
$B94    $70E5   ADD      V0, #E5         ; Add 229 to V0
$B96    $4BEC   SNE      VB, #EC         ; Skip if VB != 236
$B98    $CF15   RND      VF, #15         ; VF = random & 15
$B9A    $5553   UNKNOWN  $5553           ; Unknown 5xxx instruction
$B9C    $74AB   ADD      V4, #AB         ; Add 171 to V4
$B9E    $413A   SNE      V1, #3A         ; Skip if V1 != 58
$BA0    $781F   ADD      V8, #1F         ; Add 31 to V8
$BA2    $CD7B   RND      VD, #7B         ; VD = random & 7B
$BA4    $6EC2   LD       VE, #C2         ; Load 194 into VE
$BA6    $5E77   UNKNOWN  $5E77           ; Unknown 5xxx instruction
$BA8    $1CC6   JP       $CC6            ; Jump to CC6
$BAA    $C8B0   RND      V8, #B0         ; V8 = random & B0
$BAC    $5004   UNKNOWN  $5004           ; Unknown 5xxx instruction
$BAE    $9751   UNKNOWN  $9751           ; Unknown 9xxx instruction
$BB0    $79B9   ADD      V9, #B9         ; Add 185 to V9
$BB2    $3968   SE       V9, #68         ; Skip if V9 == 104
$BB4    $5057   UNKNOWN  $5057           ; Unknown 5xxx instruction
$BB6    $0C35   SYS      $C35            ; System call to C35
$BB8    $0820   SYS      $820            ; System call to 820
$BBA    $32E8   SE       V2, #E8         ; Skip if V2 == 232
$BBC    $F7D3   UNKNOWN  F7D3            ; Unknown Fxxx instruction
$BBE    $A4BF   LD       I, $4BF         ; Load 4BF into I
$BC0    $86DD   UNKNOWN  86DD            ; Unknown 8xxx instruction
$BC2    $A93E   LD       I, $93E         ; Load 93E into I
$BC4    $4E96   SNE      VE, #96         ; Skip if VE != 150
$BC6    $5682   UNKNOWN  $5682           ; Unknown 5xxx instruction
$BC8    $96C6   UNKNOWN  $96C6           ; Unknown 9xxx instruction
$BCA    $0270   SYS      $270            ; System call to 270
$BCC    $E929   UNKNOWN  $E929           ; Unknown Exxx instruction
$BCE    $BA3C   JP       V0, $A3C        ; Jump to V0 + A3C
$BD0    $73FF   ADD      V3, #FF         ; Add 255 to V3
$BD2    $253B   CALL     $53B            ; Call subroutine at 53B
$BD4    $8DD0   LD       VD, VD          ; VD = VD
$BD6    $B50A   JP       V0, $50A        ; Jump to V0 + 50A
$BD8    $BB2D   JP       V0, $B2D        ; Jump to V0 + B2D
$BDA    $62B4   LD       V2, #B4         ; Load 180 into V2
$BDC    $3282   SE       V2, #82         ; Skip if V2 == 130
$BDE    $CD2B   RND      VD, #2B         ; VD = random & 2B
$BE0    $A802   LD       I, $802         ; Load 802 into I
$BE2    $BC88   JP       V0, $C88        ; Jump to V0 + C88
$BE4    $5176   UNKNOWN  $5176           ; Unknown 5xxx instruction
$BE6    $089F   SYS      $89F            ; System call to 89F
$BE8    $D644   DRW      V6, V4, #4      ; Draw 4-byte sprite at V6, V4
$BEA    $2A61   CALL     $A61            ; Call subroutine at A61
$BEC    $762E   ADD      V6, #2E         ; Add 46 to V6
$BEE    $65A7   LD       V5, #A7         ; Load 167 into V5
$BF0    $F907   LD       V9, DT          ; V9 = delay timer
$BF2    $B003   JP       V0, $003        ; Jump to V0 + 003
$BF4    $1B61   JP       $B61            ; Jump to B61
$BF6    $7DA4   ADD      VD, #A4         ; Add 164 to VD
$BF8    $231E   CALL     $31E            ; Call subroutine at 31E
$BFA    $058D   SYS      $58D            ; System call to 58D
$BFC    $EDB0   UNKNOWN  $EDB0           ; Unknown Exxx instruction
$BFE    $FFD8   UNKNOWN  FFD8            ; Unknown Fxxx instruction
$C00    $17F9   JP       $7F9            ; Jump to 7F9
$C02    $2B9C   CALL     $B9C            ; Call subroutine at B9C
$C04    $52E5   UNKNOWN  $52E5           ; Unknown 5xxx instruction
$C06    $373F   SE       V7, #3F         ; Skip if V7 == 63
$C08    $E0B4   UNKNOWN  $E0B4           ; Unknown Exxx instruction
$C0A    $9690   SNE      V6, V9          ; Skip if V6 != V9
$C0C    $F51B   UNKNOWN  F51B            ; Unknown Fxxx instruction
$C0E    $89FC   UNKNOWN  89FC            ; Unknown 8xxx instruction
$C10    $1849   JP       $849            ; Jump to 849
$C12    $2B6C   CALL     $B6C            ; Call subroutine at B6C
$C14    $CEE0   RND      VE, #E0         ; VE = random & E0
$C16    $2058   CALL     $058            ; Call subroutine at 058
$C18    $B77D   JP       V0, $77D        ; Jump to V0 + 77D
$C1A    $F2BA   UNKNOWN  F2BA            ; Unknown Fxxx instruction
$C1C    $AE81   LD       I, $E81         ; Load E81 into I
$C1E    $D4F1   DRW      V4, VF, #1      ; Draw 1-byte sprite at V4, VF
$C20    $BDED   JP       V0, $DED        ; Jump to V0 + DED
$C22    $686B   LD       V8, #6B         ; Load 107 into V8
$C24    $A0AB   LD       I, $0AB         ; Load 0AB into I
$C26    $67C3   LD       V7, #C3         ; Load 195 into V7
$C28    $83E5   SUB      V3, VE          ; V3 -= VE, VF = !borrow
$C2A    $1C24   JP       $C24            ; Jump to C24
$C2C    $D53B   DRW      V5, V3, #B      ; Draw 11-byte sprite at V5, V3
$C2E    $C0C6   RND      V0, #C6         ; V0 = random & C6
$C30    $24BC   CALL     $4BC            ; Call subroutine at 4BC
$C32    $772E   ADD      V7, #2E         ; Add 46 to V7
$C34    $2AC9   CALL     $AC9            ; Call subroutine at AC9
$C36    $58AC   UNKNOWN  $58AC           ; Unknown 5xxx instruction
$C38    $A92D   LD       I, $92D         ; Load 92D into I
$C3A    $56AF   UNKNOWN  $56AF           ; Unknown 5xxx instruction
$C3C    $D6AA   DRW      V6, VA, #A      ; Draw 10-byte sprite at V6, VA
$C3E    $8DF2   AND      VD, VF          ; VD &= VF
$C40    $FBB9   UNKNOWN  FBB9            ; Unknown Fxxx instruction
$C42    $8FC2   AND      VF, VC          ; VF &= VC
$C44    $42ED   SNE      V2, #ED         ; Skip if V2 != 237
$C46    $8D3F   UNKNOWN  8D3F            ; Unknown 8xxx instruction
$C48    $0145   SYS      $145            ; System call to 145
$C4A    $431A   SNE      V3, #1A         ; Skip if V3 != 26
$C4C    $8636   SHR      V6              ; V6 >>= 1, VF = LSB
$C4E    $8848   UNKNOWN  8848            ; Unknown 8xxx instruction
$C50    $D587   DRW      V5, V8, #7      ; Draw 7-byte sprite at V5, V8
$C52    $1EEB   JP       $EEB            ; Jump to EEB
$C54    $D543   DRW      V5, V4, #3      ; Draw 3-byte sprite at V5, V4
$C56    $E806   UNKNOWN  $E806           ; Unknown Exxx instruction
$C58    $1FFF   JP       $FFF            ; Jump to FFF
$C5A    $B673   JP       V0, $673        ; Jump to V0 + 673
$C5C    $B882   JP       V0, $882        ; Jump to V0 + 882
$C5E    $3968   SE       V9, #68         ; Skip if V9 == 104
$C60    $F0AA   UNKNOWN  F0AA            ; Unknown Fxxx instruction
$C62    $F163   UNKNOWN  F163            ; Unknown Fxxx instruction
$C64    $DEEB   DRW      VE, VE, #B      ; Draw 11-byte sprite at VE, VE
$C66    $8832   AND      V8, V3          ; V8 &= V3
$C68    $C57E   RND      V5, #7E         ; V5 = random & 7E
$C6A    $9B10   SNE      VB, V1          ; Skip if VB != V1
$C6C    $9930   SNE      V9, V3          ; Skip if V9 != V3
$C6E    $74D7   ADD      V4, #D7         ; Add 215 to V4
$C70    $8993   XOR      V9, V9          ; V9 ^= V9
$C72    $B605   JP       V0, $605        ; Jump to V0 + 605
$C74    $30B7   SE       V0, #B7         ; Skip if V0 == 183
$C76    $F808   UNKNOWN  F808            ; Unknown Fxxx instruction
$C78    $087E   SYS      $87E            ; System call to 87E
$C7A    $637C   LD       V3, #7C         ; Load 124 into V3
$C7C    $F2B4   UNKNOWN  F2B4            ; Unknown Fxxx instruction
$C7E    $95D9   UNKNOWN  $95D9           ; Unknown 9xxx instruction
$C80    $429E   SNE      V2, #9E         ; Skip if V2 != 158
$C82    $888F   UNKNOWN  888F            ; Unknown 8xxx instruction
$C84    $798D   ADD      V9, #8D         ; Add 141 to V9
$C86    $ABE2   LD       I, $BE2         ; Load BE2 into I
$C88    $45F3   SNE      V5, #F3         ; Skip if V5 != 243
$C8A    $2E9D   CALL     $E9D            ; Call subroutine at E9D
$C8C    $6DEB   LD       VD, #EB         ; Load 235 into VD
$C8E    $95B5   UNKNOWN  $95B5           ; Unknown 9xxx instruction
$C90    $5398   UNKNOWN  $5398           ; Unknown 5xxx instruction
$C92    $A18A   LD       I, $18A         ; Load 18A into I
$C94    $D7A7   DRW      V7, VA, #7      ; Draw 7-byte sprite at V7, VA
$C96    $4B95   SNE      VB, #95         ; Skip if VB != 149
$C98    $B1D6   JP       V0, $1D6        ; Jump to V0 + 1D6
$C9A    $8A7E   SHL      VA              ; VA <<= 1, VF = MSB
$C9C    $E312   UNKNOWN  $E312           ; Unknown Exxx instruction
$C9E    $C22E   RND      V2, #2E         ; V2 = random & 2E
$CA0    $71A8   ADD      V1, #A8         ; Add 168 to V1
$CA2    $7D39   ADD      VD, #39         ; Add 57 to VD
$CA4    $8190   LD       V1, V9          ; V1 = V9
$CA6    $CD3B   RND      VD, #3B         ; VD = random & 3B
$CA8    $C8F7   RND      V8, #F7         ; V8 = random & F7
$CAA    $4E32   SNE      VE, #32         ; Skip if VE != 50
$CAC    $7072   ADD      V0, #72         ; Add 114 to V0
$CAE    $E1AE   UNKNOWN  $E1AE           ; Unknown Exxx instruction
$CB0    $798C   ADD      V9, #8C         ; Add 140 to V9
$CB2    $F19D   UNKNOWN  F19D            ; Unknown Fxxx instruction
$CB4    $4A7A   SNE      VA, #7A         ; Skip if VA != 122
$CB6    $27B0   CALL     $7B0            ; Call subroutine at 7B0
$CB8    $5A76   UNKNOWN  $5A76           ; Unknown 5xxx instruction
$CBA    $7705   ADD      V7, #05         ; Add 5 to V7
$CBC    $870A   UNKNOWN  870A            ; Unknown 8xxx instruction
$CBE    $415D   SNE      V1, #5D         ; Skip if V1 != 93
$CC0    $3E9F   SE       VE, #9F         ; Skip if VE == 159
$CC2    $FCA9   UNKNOWN  FCA9            ; Unknown Fxxx instruction
$CC4    $57EE   UNKNOWN  $57EE           ; Unknown 5xxx instruction
$CC6    $8685   SUB      V6, V8          ; V6 -= V8, VF = !borrow
$CC8    $A682   LD       I, $682         ; Load 682 into I
$CCA    $631D   LD       V3, #1D         ; Load 29 into V3
$CCC    $F7AC   UNKNOWN  F7AC            ; Unknown Fxxx instruction
$CCE    $091D   SYS      $91D            ; System call to 91D
$CD0    $E1A9   UNKNOWN  $E1A9           ; Unknown Exxx instruction
$CD2    $4683   SNE      V6, #83         ; Skip if V6 != 131
$CD4    $7927   ADD      V9, #27         ; Add 39 to V9
$CD6    $668E   LD       V6, #8E         ; Load 142 into V6
$CD8    $DADC   DRW      VA, VD, #C      ; Draw 12-byte sprite at VA, VD
$CDA    $E1D8   UNKNOWN  $E1D8           ; Unknown Exxx instruction
$CDC    $0F80   SYS      $F80            ; System call to F80
$CDE    $21B2   CALL     $1B2            ; Call subroutine at 1B2
$CE0    $8272   AND      V2, V7          ; V2 &= V7
$CE2    $FABD   UNKNOWN  FABD            ; Unknown Fxxx instruction
$CE4    $968E   UNKNOWN  $968E           ; Unknown 9xxx instruction
$CE6    $657B   LD       V5, #7B         ; Load 123 into V5
$CE8    $6728   LD       V7, #28         ; Load 40 into V7
$CEA    $85C9   UNKNOWN  85C9            ; Unknown 8xxx instruction
$CEC    $D04D   DRW      V0, V4, #D      ; Draw 13-byte sprite at V0, V4
$CEE    $027C   SYS      $27C            ; System call to 27C
$CF0    $97FC   UNKNOWN  $97FC           ; Unknown 9xxx instruction
$CF2    $7F48   ADD      VF, #48         ; Add 72 to VF
$CF4    $A4F6   LD       I, $4F6         ; Load 4F6 into I
$CF6    $A46B   LD       I, $46B         ; Load 46B into I
$CF8    $5493   UNKNOWN  $5493           ; Unknown 5xxx instruction
$CFA    $D498   DRW      V4, V9, #8      ; Draw 8-byte sprite at V4, V9
$CFC    $4F34   SNE      VF, #34         ; Skip if VF != 52
$CFE    $EF19   UNKNOWN  $EF19           ; Unknown Exxx instruction
$D00    $7737   ADD      V7, #37         ; Add 55 to V7
$D02    $CF32   RND      VF, #32         ; VF = random & 32
$D04    $79F9   ADD      V9, #F9         ; Add 249 to V9
$D06    $B7EB   JP       V0, $7EB        ; Jump to V0 + 7EB
$D08    $A16F   LD       I, $16F         ; Load 16F into I
$D0A    $99FE   UNKNOWN  $99FE           ; Unknown 9xxx instruction
$D0C    $90C4   UNKNOWN  $90C4           ; Unknown 9xxx instruction
$D0E    $581D   UNKNOWN  $581D           ; Unknown 5xxx instruction
$D10    $1C1B   JP       $C1B            ; Jump to C1B
$D12    $2244   CALL     $244            ; Call subroutine at 244
$D14    $CCF8   RND      VC, #F8         ; VC = random & F8
$D16    $70D6   ADD      V0, #D6         ; Add 214 to V0
$D18    $200B   CALL     $00B            ; Call subroutine at 00B
$D1A    $18F1   JP       $8F1            ; Jump to 8F1
$D1C    $5028   UNKNOWN  $5028           ; Unknown 5xxx instruction
$D1E    $FBC4   UNKNOWN  FBC4            ; Unknown Fxxx instruction
$D20    $ABCD   LD       I, $BCD         ; Load BCD into I
$D22    $8E82   AND      VE, V8          ; VE &= V8
$D24    $633E   LD       V3, #3E         ; Load 62 into V3
$D26    $206D   CALL     $06D            ; Call subroutine at 06D
$D28    $B6BB   JP       V0, $6BB        ; Jump to V0 + 6BB
$D2A    $9C58   UNKNOWN  $9C58           ; Unknown 9xxx instruction
$D2C    $EBA3   UNKNOWN  $EBA3           ; Unknown Exxx instruction
$D2E    $BD32   JP       V0, $D32        ; Jump to V0 + D32
$D30    $00A4   SYS      $0A4            ; System call to 0A4
$D32    $CF37   RND      VF, #37         ; VF = random & 37
$D34    $1B5A   JP       $B5A            ; Jump to B5A
$D36    $9AB2   UNKNOWN  $9AB2           ; Unknown 9xxx instruction
$D38    $8798   UNKNOWN  8798            ; Unknown 8xxx instruction
$D3A    $690A   LD       V9, #0A         ; Load 10 into V9
$D3C    $4438   SNE      V4, #38         ; Skip if V4 != 56
$D3E    $675E   LD       V7, #5E         ; Load 94 into V7
$D40    $D0F2   DRW      V0, VF, #2      ; Draw 2-byte sprite at V0, VF
$D42    $CD9D   RND      VD, #9D         ; VD = random & 9D
$D44    $E8BE   UNKNOWN  $E8BE           ; Unknown Exxx instruction
$D46    $3A96   SE       VA, #96         ; Skip if VA == 150
$D48    $540A   UNKNOWN  $540A           ; Unknown 5xxx instruction
$D4A    $56EE   UNKNOWN  $56EE           ; Unknown 5xxx instruction
$D4C    $144C   JP       $44C            ; Jump to 44C
$D4E    $0CA1   SYS      $CA1            ; System call to CA1
$D50    $17A5   JP       $7A5            ; Jump to 7A5
$D52    $BB43   JP       V0, $B43        ; Jump to V0 + B43
$D54    $7DBF   ADD      VD, #BF         ; Add 191 to VD
$D56    $A31E   LD       I, $31E         ; Load 31E into I
$D58    $0D56   SYS      $D56            ; System call to D56
$D5A    $7084   ADD      V0, #84         ; Add 132 to V0
$D5C    $D492   DRW      V4, V9, #2      ; Draw 2-byte sprite at V4, V9
$D5E    $D31A   DRW      V3, V1, #A      ; Draw 10-byte sprite at V3, V1
$D60    $C718   RND      V7, #18         ; V7 = random & 18
$D62    $2123   CALL     $123            ; Call subroutine at 123
$D64    $D571   DRW      V5, V7, #1      ; Draw 1-byte sprite at V5, V7
$D66    $C397   RND      V3, #97         ; V3 = random & 97
$D68    $86CF   UNKNOWN  86CF            ; Unknown 8xxx instruction
$D6A    $570F   UNKNOWN  $570F           ; Unknown 5xxx instruction
$D6C    $2B8D   CALL     $B8D            ; Call subroutine at B8D
$D6E    $9F9A   UNKNOWN  $9F9A           ; Unknown 9xxx instruction
$D70    $573F   UNKNOWN  $573F           ; Unknown 5xxx instruction
$D72    $A7CF   LD       I, $7CF         ; Load 7CF into I
$D74    $4F12   SNE      VF, #12         ; Skip if VF != 18
$D76    $5B7A   UNKNOWN  $5B7A           ; Unknown 5xxx instruction
$D78    $1074   JP       $074            ; Jump to 074
$D7A    $E585   UNKNOWN  $E585           ; Unknown Exxx instruction
$D7C    $D644   DRW      V6, V4, #4      ; Draw 4-byte sprite at V6, V4
$D7E    $B465   JP       V0, $465        ; Jump to V0 + 465
$D80    $4219   SNE      V2, #19         ; Skip if V2 != 25
$D82    $52AA   UNKNOWN  $52AA           ; Unknown 5xxx instruction
$D84    $7D43   ADD      VD, #43         ; Add 67 to VD
$D86    $2225   CALL     $225            ; Call subroutine at 225
$D88    $21DD   CALL     $1DD            ; Call subroutine at 1DD
$D8A    $6154   LD       V1, #54         ; Load 84 into V1
$D8C    $618B   LD       V1, #8B         ; Load 139 into V1
$D8E    $333C   SE       V3, #3C         ; Skip if V3 == 60
$D90    $FE4C   UNKNOWN  FE4C            ; Unknown Fxxx instruction
$D92    $7657   ADD      V6, #57         ; Add 87 to V6
$D94    $5566   UNKNOWN  $5566           ; Unknown 5xxx instruction
$D96    $1214   JP       $214            ; Jump to 214
$D98    $2248   CALL     $248            ; Call subroutine at 248
$D9A    $B59B   JP       V0, $59B        ; Jump to V0 + 59B
$D9C    $2E77   CALL     $E77            ; Call subroutine at E77
$D9E    $DDBD   DRW      VD, VB, #D      ; Draw 13-byte sprite at VD, VB
$DA0    $3227   SE       V2, #27         ; Skip if V2 == 39
$DA2    $07EA   SYS      $7EA            ; System call to 7EA
$DA4    $E765   UNKNOWN  $E765           ; Unknown Exxx instruction
$DA6    $A45A   LD       I, $45A         ; Load 45A into I
$DA8    $0C7C   SYS      $C7C            ; System call to C7C
$DAA    $840E   SHL      V4              ; V4 <<= 1, VF = MSB
$DAC    $7790   ADD      V7, #90         ; Add 144 to V7
$DAE    $60B6   LD       V0, #B6         ; Load 182 into V0
$DB0    $19BE   JP       $9BE            ; Jump to 9BE
$DB2    $7513   ADD      V5, #13         ; Add 19 to V5
$DB4    $82FF   UNKNOWN  82FF            ; Unknown 8xxx instruction
$DB6    $0748   SYS      $748            ; System call to 748
$DB8    $50CD   UNKNOWN  $50CD           ; Unknown 5xxx instruction
$DBA    $3532   SE       V5, #32         ; Skip if V5 == 50
$DBC    $FEDC   UNKNOWN  FEDC            ; Unknown Fxxx instruction
$DBE    $0381   SYS      $381            ; System call to 381
$DC0    $ACA1   LD       I, $CA1         ; Load CA1 into I
$DC2    $B8ED   JP       V0, $8ED        ; Jump to V0 + 8ED
$DC4    $FF6A   UNKNOWN  FF6A            ; Unknown Fxxx instruction
$DC6    $741E   ADD      V4, #1E         ; Add 30 to V4
$DC8    $85BA   UNKNOWN  85BA            ; Unknown 8xxx instruction
$DCA    $D3BD   DRW      V3, VB, #D      ; Draw 13-byte sprite at V3, VB
$DCC    $E61C   UNKNOWN  $E61C           ; Unknown Exxx instruction
$DCE    $095E   SYS      $95E            ; System call to 95E
$DD0    $E979   UNKNOWN  $E979           ; Unknown Exxx instruction
$DD2    $D7C9   DRW      V7, VC, #9      ; Draw 9-byte sprite at V7, VC
$DD4    $3CC3   SE       VC, #C3         ; Skip if VC == 195
$DD6    $07AA   SYS      $7AA            ; System call to 7AA
$DD8    $67EA   LD       V7, #EA         ; Load 234 into V7
$DDA    $6935   LD       V9, #35         ; Load 53 into V9
$DDC    $59DF   UNKNOWN  $59DF           ; Unknown 5xxx instruction
$DDE    $C204   RND      V2, #04         ; V2 = random & 04
$DE0    $AB95   LD       I, $B95         ; Load B95 into I
$DE2    $9B9E   UNKNOWN  $9B9E           ; Unknown 9xxx instruction
$DE4    $2BF2   CALL     $BF2            ; Call subroutine at BF2
$DE6    $CD46   RND      VD, #46         ; VD = random & 46
$DE8    $21DB   CALL     $1DB            ; Call subroutine at 1DB
$DEA    $53CA   UNKNOWN  $53CA           ; Unknown 5xxx instruction
$DEC    $BE9D   JP       V0, $E9D        ; Jump to V0 + E9D
$DEE    $6193   LD       V1, #93         ; Load 147 into V1
$DF0    $2789   CALL     $789            ; Call subroutine at 789
$DF2    $5178   UNKNOWN  $5178           ; Unknown 5xxx instruction
$DF4    $D570   DRW      V5, V7, #0      ; Draw 0-byte sprite at V5, V7
$DF6    $00B2   SYS      $0B2            ; System call to 0B2
$DF8    $DB56   DRW      VB, V5, #6      ; Draw 6-byte sprite at VB, V5
$DFA    $BEDF   JP       V0, $EDF        ; Jump to V0 + EDF
$DFC    $864A   UNKNOWN  864A            ; Unknown 8xxx instruction
$DFE    $AA7A   LD       I, $A7A         ; Load A7A into I
$E00    $4A8A   SNE      VA, #8A         ; Skip if VA != 138
$E02    $2FF6   CALL     $FF6            ; Call subroutine at FF6
$E04    $DBC6   DRW      VB, VC, #6      ; Draw 6-byte sprite at VB, VC
$E06    $93C4   UNKNOWN  $93C4           ; Unknown 9xxx instruction
$E08    $0D08   SYS      $D08            ; System call to D08
$E0A    $F4AA   UNKNOWN  F4AA            ; Unknown Fxxx instruction
$E0C    $11FC   JP       $1FC            ; Jump to 1FC
$E0E    $90D7   UNKNOWN  $90D7           ; Unknown 9xxx instruction
$E10    $6B88   LD       VB, #88         ; Load 136 into VB
$E12    $CA66   RND      VA, #66         ; VA = random & 66
$E14    $53D6   UNKNOWN  $53D6           ; Unknown 5xxx instruction
$E16    $46EE   SNE      V6, #EE         ; Skip if V6 != 238
$E18    $9A1E   UNKNOWN  $9A1E           ; Unknown 9xxx instruction
$E1A    $E9D4   UNKNOWN  $E9D4           ; Unknown Exxx instruction
$E1C    $E699   UNKNOWN  $E699           ; Unknown Exxx instruction
$E1E    $7300   ADD      V3, #00         ; Add 0 to V3
$E20    $616B   LD       V1, #6B         ; Load 107 into V1
$E22    $202B   CALL     $02B            ; Call subroutine at 02B
$E24    $6009   LD       V0, #09         ; Load 9 into V0
$E26    $4489   SNE      V4, #89         ; Skip if V4 != 137
$E28    $0D1E   SYS      $D1E            ; System call to D1E
$E2A    $9DBE   UNKNOWN  $9DBE           ; Unknown 9xxx instruction
$E2C    $C4A4   RND      V4, #A4         ; V4 = random & A4
$E2E    $88C8   UNKNOWN  88C8            ; Unknown 8xxx instruction
$E30    $19DB   JP       $9DB            ; Jump to 9DB
$E32    $D836   DRW      V8, V3, #6      ; Draw 6-byte sprite at V8, V3
$E34    $AEC6   LD       I, $EC6         ; Load EC6 into I
$E36    $3246   SE       V2, #46         ; Skip if V2 == 70
$E38    $A76F   LD       I, $76F         ; Load 76F into I
$E3A    $37DB   SE       V7, #DB         ; Skip if V7 == 219
$E3C    $A286   LD       I, $286         ; Load 286 into I
$E3E    $C805   RND      V8, #05         ; V8 = random & 05
$E40    $89FA   UNKNOWN  89FA            ; Unknown 8xxx instruction
$E42    $3CBB   SE       VC, #BB         ; Skip if VC == 187
$E44    $7D9B   ADD      VD, #9B         ; Add 155 to VD
$E46    $5B64   UNKNOWN  $5B64           ; Unknown 5xxx instruction
$E48    $D7E9   DRW      V7, VE, #9      ; Draw 9-byte sprite at V7, VE
$E4A    $BD44   JP       V0, $D44        ; Jump to V0 + D44
$E4C    $026B   SYS      $26B            ; System call to 26B
$E4E    $AF64   LD       I, $F64         ; Load F64 into I
$E50    $5D3B   UNKNOWN  $5D3B           ; Unknown 5xxx instruction
$E52    $398B   SE       V9, #8B         ; Skip if V9 == 139
$E54    $579A   UNKNOWN  $579A           ; Unknown 5xxx instruction
$E56    $813B   UNKNOWN  813B            ; Unknown 8xxx instruction
$E58    $57E2   UNKNOWN  $57E2           ; Unknown 5xxx instruction
$E5A    $572F   UNKNOWN  $572F           ; Unknown 5xxx instruction
$E5C    $1980   JP       $980            ; Jump to 980
$E5E    $B409   JP       V0, $409        ; Jump to V0 + 409
$E60    $6480   LD       V4, #80         ; Load 128 into V4
$E62    $85D6   SHR      V5              ; V5 >>= 1, VF = LSB
$E64    $E0CD   UNKNOWN  $E0CD           ; Unknown Exxx instruction
$E66    $1725   JP       $725            ; Jump to 725
$E68    $C3AA   RND      V3, #AA         ; V3 = random & AA
$E6A    $6B77   LD       VB, #77         ; Load 119 into VB
$E6C    $4AE9   SNE      VA, #E9         ; Skip if VA != 233
$E6E    $1AAA   JP       $AAA            ; Jump to AAA
$E70    $51BB   UNKNOWN  $51BB           ; Unknown 5xxx instruction
$E72    $380C   SE       V8, #0C         ; Skip if V8 == 12
$E74    $7896   ADD      V8, #96         ; Add 150 to V8
$E76    $933A   UNKNOWN  $933A           ; Unknown 9xxx instruction
$E78    $09E2   SYS      $9E2            ; System call to 9E2
$E7A    $1CC8   JP       $CC8            ; Jump to CC8
$E7C    $9E3B   UNKNOWN  $9E3B           ; Unknown 9xxx instruction
$E7E    $7413   ADD      V4, #13         ; Add 19 to V4
$E80    $7C0A   ADD      VC, #0A         ; Add 10 to VC
$E82    $3660   SE       V6, #60         ; Skip if V6 == 96
$E84    $A8E0   LD       I, $8E0         ; Load 8E0 into I
$E86    $6FC0   LD       VF, #C0         ; Load 192 into VF
$E88    $1469   JP       $469            ; Jump to 469
$E8A    $0661   SYS      $661            ; System call to 661
$E8C    $A246   LD       I, $246         ; Load 246 into I
$E8E    $9693   UNKNOWN  $9693           ; Unknown 9xxx instruction
$E90    $A74C   LD       I, $74C         ; Load 74C into I
$E92    $C117   RND      V1, #17         ; V1 = random & 17
$E94    $B834   JP       V0, $834        ; Jump to V0 + 834
$E96    $2101   CALL     $101            ; Call subroutine at 101
$E98    $DE6B   DRW      VE, V6, #B      ; Draw 11-byte sprite at VE, V6
$E9A    $C17F   RND      V1, #7F         ; V1 = random & 7F
$E9C    $5E66   UNKNOWN  $5E66           ; Unknown 5xxx instruction
$E9E    $E7BB   UNKNOWN  $E7BB           ; Unknown Exxx instruction
$EA0    $8CCC   UNKNOWN  8CCC            ; Unknown 8xxx instruction
$EA2    $A747   LD       I, $747         ; Load 747 into I
$EA4    $B523   JP       V0, $523        ; Jump to V0 + 523
$EA6    $2F77   CALL     $F77            ; Call subroutine at F77
$EA8    $375E   SE       V7, #5E         ; Skip if V7 == 94
$EAA    $21D9   CALL     $1D9            ; Call subroutine at 1D9
$EAC    $9A20   SNE      VA, V2          ; Skip if VA != V2
$EAE    $C743   RND      V7, #43         ; V7 = random & 43
$EB0    $7A4B   ADD      VA, #4B         ; Add 75 to VA
$EB2    $53AA   UNKNOWN  $53AA           ; Unknown 5xxx instruction
$EB4    $B6FB   JP       V0, $6FB        ; Jump to V0 + 6FB
$EB6    $A8F9   LD       I, $8F9         ; Load 8F9 into I
$EB8    $39CE   SE       V9, #CE         ; Skip if V9 == 206
$EBA    $D47D   DRW      V4, V7, #D      ; Draw 13-byte sprite at V4, V7
$EBC    $5021   UNKNOWN  $5021           ; Unknown 5xxx instruction
$EBE    $49F0   SNE      V9, #F0         ; Skip if V9 != 240
$EC0    $FB2B   UNKNOWN  FB2B            ; Unknown Fxxx instruction
$EC2    $37FC   SE       V7, #FC         ; Skip if V7 == 252
$EC4    $4934   SNE      V9, #34         ; Skip if V9 != 52
$EC6    $76DA   ADD      V6, #DA         ; Add 218 to V6
$EC8    $9C5A   UNKNOWN  $9C5A           ; Unknown 9xxx instruction
$ECA    $31A8   SE       V1, #A8         ; Skip if V1 == 168
$ECC    $1C3A   JP       $C3A            ; Jump to C3A
$ECE    $663E   LD       V6, #3E         ; Load 62 into V6
$ED0    $6B7B   LD       VB, #7B         ; Load 123 into VB
$ED2    $F98C   UNKNOWN  F98C            ; Unknown Fxxx instruction
$ED4    $88C9   UNKNOWN  88C9            ; Unknown 8xxx instruction
$ED6    $49E8   SNE      V9, #E8         ; Skip if V9 != 232
$ED8    $1EE9   JP       $EE9            ; Jump to EE9
$EDA    $1BBD   JP       $BBD            ; Jump to BBD
$EDC    $D5A8   DRW      V5, VA, #8      ; Draw 8-byte sprite at V5, VA
$EDE    $7796   ADD      V7, #96         ; Add 150 to V7
$EE0    $6928   LD       V9, #28         ; Load 40 into V9
$EE2    $2654   CALL     $654            ; Call subroutine at 654
$EE4    $E36C   UNKNOWN  $E36C           ; Unknown Exxx instruction
$EE6    $0F6B   SYS      $F6B            ; System call to F6B
$EE8    $3D94   SE       VD, #94         ; Skip if VD == 148
$EEA    $9F88   UNKNOWN  $9F88           ; Unknown 9xxx instruction
$EEC    $EC17   UNKNOWN  $EC17           ; Unknown Exxx instruction
$EEE    $7EF8   ADD      VE, #F8         ; Add 248 to VE
$EF0    $AECE   LD       I, $ECE         ; Load ECE into I
$EF2    $9E08   UNKNOWN  $9E08           ; Unknown 9xxx instruction
$EF4    $CE21   RND      VE, #21         ; VE = random & 21
$EF6    $050E   SYS      $50E            ; System call to 50E
$EF8    $0AD5   SYS      $AD5            ; System call to AD5
$EFA    $F0CD   UNKNOWN  F0CD            ; Unknown Fxxx instruction
$EFC    $F76C   UNKNOWN  F76C            ; Unknown Fxxx instruction
$EFE    $0C69   SYS      $C69            ; System call to C69
$F00    $AA87   LD       I, $A87         ; Load A87 into I
$F02    $4ECD   SNE      VE, #CD         ; Skip if VE != 205
$F04    $4672   SNE      V6, #72         ; Skip if V6 != 114
$F06    $CA0B   RND      VA, #0B         ; VA = random & 0B
$F08    $E30A   UNKNOWN  $E30A           ; Unknown Exxx instruction
$F0A    $AE7B   LD       I, $E7B         ; Load E7B into I
$F0C    $0105   SYS      $105            ; System call to 105
$F0E    $8911   OR       V9, V1          ; V9 |= V1
$F10    $2F0A   CALL     $F0A            ; Call subroutine at F0A
$F12    $8259   UNKNOWN  8259            ; Unknown 8xxx instruction
$F14    $E04C   UNKNOWN  $E04C           ; Unknown Exxx instruction
$F16    $9073   UNKNOWN  $9073           ; Unknown 9xxx instruction
$F18    $A4AB   LD       I, $4AB         ; Load 4AB into I
$F1A    $0FD0   SYS      $FD0            ; System call to FD0
$F1C    $644F   LD       V4, #4F         ; Load 79 into V4
$F1E    $9196   UNKNOWN  $9196           ; Unknown 9xxx instruction
$F20    $432F   SNE      V3, #2F         ; Skip if V3 != 47
$F22    $867E   SHL      V6              ; V6 <<= 1, VF = MSB
$F24    $0497   SYS      $497            ; System call to 497
$F26    $EC69   UNKNOWN  $EC69           ; Unknown Exxx instruction
$F28    $F7F6   UNKNOWN  F7F6            ; Unknown Fxxx instruction
$F2A    $327E   SE       V2, #7E         ; Skip if V2 == 126
$F2C    $9885   UNKNOWN  $9885           ; Unknown 9xxx instruction
$F2E    $7F8B   ADD      VF, #8B         ; Add 139 to VF
$F30    $87C6   SHR      V7              ; V7 >>= 1, VF = LSB
$F32    $4451   SNE      V4, #51         ; Skip if V4 != 81
$F34    $3B88   SE       VB, #88         ; Skip if VB == 136
$F36    $0C0C   SYS      $C0C            ; System call to C0C
$F38    $72F0   ADD      V2, #F0         ; Add 240 to V2
$F3A    $33EF   SE       V3, #EF         ; Skip if V3 == 239
$F3C    $FE7C   UNKNOWN  FE7C            ; Unknown Fxxx instruction
$F3E    $5DC6   UNKNOWN  $5DC6           ; Unknown 5xxx instruction
$F40    $B5C2   JP       V0, $5C2        ; Jump to V0 + 5C2
$F42    $0AAD   SYS      $AAD            ; System call to AAD
$F44    $5BB7   UNKNOWN  $5BB7           ; Unknown 5xxx instruction
$F46    $887B   UNKNOWN  887B            ; Unknown 8xxx instruction
$F48    $413C   SNE      V1, #3C         ; Skip if V1 != 60
$F4A    $1C6F   JP       $C6F            ; Jump to C6F
$F4C    $C175   RND      V1, #75         ; V1 = random & 75
$F4E    $0DF8   SYS      $DF8            ; System call to DF8
$F50    $5779   UNKNOWN  $5779           ; Unknown 5xxx instruction
$F52    $401F   SNE      V0, #1F         ; Skip if V0 != 31
$F54    $BB2D   JP       V0, $B2D        ; Jump to V0 + B2D
$F56    $8554   ADD      V5, V5          ; V5 += V5, VF = carry
$F58    $88A0   LD       V8, VA          ; V8 = VA
$F5A    $D2D8   DRW      V2, VD, #8      ; Draw 8-byte sprite at V2, VD
$F5C    $70AD   ADD      V0, #AD         ; Add 173 to V0
$F5E    $16D9   JP       $6D9            ; Jump to 6D9
$F60    $7A26   ADD      VA, #26         ; Add 38 to VA
$F62    $76F1   ADD      V6, #F1         ; Add 241 to V6
$F64    $D638   DRW      V6, V3, #8      ; Draw 8-byte sprite at V6, V3
$F66    $9959   UNKNOWN  $9959           ; Unknown 9xxx instruction
$F68    $436E   SNE      V3, #6E         ; Skip if V3 != 110
$F6A    $020A   SYS      $20A            ; System call to 20A
$F6C    $8258   UNKNOWN  8258            ; Unknown 8xxx instruction
$F6E    $A3DB   LD       I, $3DB         ; Load 3DB into I
$F70    $6BC0   LD       VB, #C0         ; Load 192 into VB
$F72    $751B   ADD      V5, #1B         ; Add 27 to V5
$F74    $901C   UNKNOWN  $901C           ; Unknown 9xxx instruction
$F76    $4916   SNE      V9, #16         ; Skip if V9 != 22
$F78    $BF19   JP       V0, $F19        ; Jump to V0 + F19
$F7A    $9CE2   UNKNOWN  $9CE2           ; Unknown 9xxx instruction
$F7C    $5483   UNKNOWN  $5483           ; Unknown 5xxx instruction
$F7E    $7F88   ADD      VF, #88         ; Add 136 to VF
$F80    $CEBF   RND      VE, #BF         ; VE = random & BF
$F82    $C06C   RND      V0, #6C         ; V0 = random & 6C
$F84    $73FD   ADD      V3, #FD         ; Add 253 to V3
$F86    $0341   SYS      $341            ; System call to 341
$F88    $18F1   JP       $8F1            ; Jump to 8F1
$F8A    $0991   SYS      $991            ; System call to 991
$F8C    $6DD0   LD       VD, #D0         ; Load 208 into VD
$F8E    $8760   LD       V7, V6          ; V7 = V6
$F90    $271A   CALL     $71A            ; Call subroutine at 71A
$F92    $50CF   UNKNOWN  $50CF           ; Unknown 5xxx instruction
$F94    $5892   UNKNOWN  $5892           ; Unknown 5xxx instruction
$F96    $48D7   SNE      V8, #D7         ; Skip if V8 != 215
$F98    $672F   LD       V7, #2F         ; Load 47 into V7
$F9A    $739F   ADD      V3, #9F         ; Add 159 to V3
$F9C    $380C   SE       V8, #0C         ; Skip if V8 == 12
$F9E    $EAF6   UNKNOWN  $EAF6           ; Unknown Exxx instruction
$FA0    $3023   SE       V0, #23         ; Skip if V0 == 35
$FA2    $00A8   SYS      $0A8            ; System call to 0A8
$FA4    $B472   JP       V0, $472        ; Jump to V0 + 472
$FA6    $2197   CALL     $197            ; Call subroutine at 197
$FA8    $841D   UNKNOWN  841D            ; Unknown 8xxx instruction
$FAA    $3A88   SE       VA, #88         ; Skip if VA == 136
$FAC    $31E5   SE       V1, #E5         ; Skip if V1 == 229
$FAE    $1032   JP       $032            ; Jump to 032
$FB0    $27E4   CALL     $7E4            ; Call subroutine at 7E4
$FB2    $334B   SE       V3, #4B         ; Skip if V3 == 75
$FB4    $E523   UNKNOWN  $E523           ; Unknown Exxx instruction
$FB6    $A61C   LD       I, $61C         ; Load 61C into I
$FB8    $9CD7   UNKNOWN  $9CD7           ; Unknown 9xxx instruction
$FBA    $ADA3   LD       I, $DA3         ; Load DA3 into I
$FBC    $BD6F   JP       V0, $D6F        ; Jump to V0 + D6F
$FBE    $6DC4   LD       VD, #C4         ; Load 196 into VD
$FC0    $AF00   LD       I, $F00         ; Load F00 into I
$FC2    $FF99   UNKNOWN  FF99            ; Unknown Fxxx instruction
$FC4    $CE40   RND      VE, #40         ; VE = random & 40
$FC6    $7767   ADD      V7, #67         ; Add 103 to V7
$FC8    $C8BA   RND      V8, #BA         ; V8 = random & BA
$FCA    $CCE2   RND      VC, #E2         ; VC = random & E2
$FCC    $B2F3   JP       V0, $2F3        ; Jump to V0 + 2F3
$FCE    $AA61   LD       I, $A61         ; Load A61 into I
$FD0    $2591   CALL     $591            ; Call subroutine at 591
$FD2    $57DD   UNKNOWN  $57DD           ; Unknown 5xxx instruction
$FD4    $8A09   UNKNOWN  8A09            ; Unknown 8xxx instruction
$FD6    $8C36   SHR      VC              ; VC >>= 1, VF = LSB
$FD8    $AE1C   LD       I, $E1C         ; Load E1C into I
$FDA    $4BAC   SNE      VB, #AC         ; Skip if VB != 172
$FDC    $5978   UNKNOWN  $5978           ; Unknown 5xxx instruction
$FDE    $6BD5   LD       VB, #D5         ; Load 213 into VB
$FE0    $60E3   LD       V0, #E3         ; Load 227 into V0
$FE2    $6CF3   LD       VC, #F3         ; Load 243 into VC
$FE4    $E8E1   UNKNOWN  $E8E1           ; Unknown Exxx instruction
$FE6    $90E1   UNKNOWN  $90E1           ; Unknown 9xxx instruction
$FE8    $AAB9   LD       I, $AB9         ; Load AB9 into I
$FEA    $6A48   LD       VA, #48         ; Load 72 into VA
$FEC    $BEC2   JP       V0, $EC2        ; Jump to V0 + EC2
$FEE    $0939   SYS      $939            ; System call to 939
$FF0    $07B2   SYS      $7B2            ; System call to 7B2
$FF2    $1273   JP       $273            ; Jump to 273
$FF4    $7C7A   ADD      VC, #7A         ; Add 122 to VC
$FF6    $D41D   DRW      V4, V1, #D      ; Draw 13-byte sprite at V4, V1
$FF8    $5093   UNKNOWN  $5093           ; Unknown 5xxx instruction
$FFA    $03C7   SYS      $3C7            ; System call to 3C7
$FFC    $F293   UNKNOWN  F293            ; Unknown Fxxx instruction
$FFE    $55F1   UNKNOWN  $55F1           ; Unknown 5xxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 478 (26.7%)
  LD      : 250 (14.0%)
  JP      : 213 (11.9%)
  ADD     : 127 ( 7.1%)
  SNE     : 125 ( 7.0%)
  SYS     : 123 ( 6.9%)
  SE      : 112 ( 6.3%)
  DRW     : 105 ( 5.9%)
  CALL    : 103 ( 5.8%)
  RND     :  99 ( 5.5%)
  AND     :  11 ( 0.6%)
  XOR     :  10 ( 0.6%)
  SUB     :   8 ( 0.4%)
  SUBN    :   8 ( 0.4%)
  SHL     :   7 ( 0.4%)
  SHR     :   6 ( 0.3%)
  OR      :   4 ( 0.2%)
  SKNP    :   2 ( 0.1%)

Memory Operations: 377 (21.0%)
Arithmetic Operations: 168 (9.4%)
