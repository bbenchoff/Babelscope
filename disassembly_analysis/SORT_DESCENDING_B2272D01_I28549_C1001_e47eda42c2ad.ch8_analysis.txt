
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B2272D01_I28549_C1001_e47eda42c2ad.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 2272
Instance: 28549
Direction: descending
Final Array: [238, 200, 187, 161, 93, 56, 51, 13]
Operations: R:3 W:0 C:78 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 105
Sort Array References:
  $230: LD I, $051 ; Load 051 into I
  $23A: LD I, $84F ; Load 84F into I
  $23C: LD I, $838 ; Load 838 into I
  $240: LD I, $EF8 ; Load EF8 into I
  $260: LD I, $3D4 ; Load 3D4 into I
  $278: LD I, $319 ; Load 319 into I
  $282: LD I, $BBF ; Load BBF into I
  $294: LD I, $50C ; Load 50C into I
  $29E: LD I, $1B9 ; Load 1B9 into I
  $2D8: LD I, $F5F ; Load F5F into I
  $2E6: LD I, $A87 ; Load A87 into I
  $2E8: LD I, $D97 ; Load D97 into I
  $2F4: LD I, $C14 ; Load C14 into I
  $35A: LD I, $A47 ; Load A47 into I
  $376: LD I, $474 ; Load 474 into I
  $384: LD I, $F96 ; Load F96 into I
  $396: LD I, $B66 ; Load B66 into I
  $3A4: LD I, $B53 ; Load B53 into I
  $3B0: LD I, $F76 ; Load F76 into I
  $3BE: LD I, $6E6 ; Load 6E6 into I
  $3DE: LD I, $644 ; Load 644 into I
  $40E: LD I, $90A ; Load 90A into I
  $41A: LD I, $216 ; Load 216 into I
  $440: LD I, $E5B ; Load E5B into I
  $44E: LD I, $E44 ; Load E44 into I
  $45A: LD I, $A7D ; Load A7D into I
  $470: LD I, $2C5 ; Load 2C5 into I
  $498: LD I, $E26 ; Load E26 into I
  $4CC: LD I, $E69 ; Load E69 into I
  $4F8: LD I, $EAE ; Load EAE into I
  $512: LD I, $D30 ; Load D30 into I
  $5B2: LD I, $DF4 ; Load DF4 into I
  $5C6: LD I, $518 ; Load 518 into I
  $5F2: LD I, $D6C ; Load D6C into I
  $602: LD I, $D90 ; Load D90 into I
  $608: LD I, $0E3 ; Load 0E3 into I
  $610: LD I, $74B ; Load 74B into I
  $612: LD I, $03D ; Load 03D into I
  $636: LD I, $111 ; Load 111 into I
  $68C: LD I, $A19 ; Load A19 into I
  $692: LD I, $2FF ; Load 2FF into I
  $6AE: LD I, $F61 ; Load F61 into I
  $6D0: LD I, $CFD ; Load CFD into I
  $710: LD I, $43B ; Load 43B into I
  $72E: LD I, $CD6 ; Load CD6 into I
  $7C2: LD I, $FC1 ; Load FC1 into I
  $7DA: LD I, $1BE ; Load 1BE into I
  $7DC: LD I, $E9D ; Load E9D into I
  $7F2: LD I, $3A7 ; Load 3A7 into I
  $812: LD I, $1BD ; Load 1BD into I
  $814: LD I, $4A4 ; Load 4A4 into I
  $828: LD I, $13B ; Load 13B into I
  $832: LD I, $838 ; Load 838 into I
  $84C: LD I, $59C ; Load 59C into I
  $866: LD I, $66D ; Load 66D into I
  $878: LD I, $96E ; Load 96E into I
  $88A: LD I, $539 ; Load 539 into I
  $8B2: LD I, $8E9 ; Load 8E9 into I
  $914: LD V2, [I] ; Load V0-V2 from I
  $958: LD I, $6FC ; Load 6FC into I
  $998: LD I, $8B2 ; Load 8B2 into I
  $99C: LD I, $B55 ; Load B55 into I
  $9CE: LD I, $388 ; Load 388 into I
  $9EE: LD I, $CFB ; Load CFB into I
  $A00: LD I, $DB6 ; Load DB6 into I
  $A10: LD I, $3EC ; Load 3EC into I
  $A28: LD I, $6D6 ; Load 6D6 into I
  $A3E: LD I, $A83 ; Load A83 into I
  $A44: LD I, $921 ; Load 921 into I
  $A6A: LD I, $2DA ; Load 2DA into I
  $AD8: LD I, $375 ; Load 375 into I
  $AE0: ADD I, V9 ; I ADDRESS MANIPULATION
  $AFE: LD I, $73B ; Load 73B into I
  $B2C: LD I, $C8E ; Load C8E into I
  $B54: LD I, $EA8 ; Load EA8 into I
  $B5A: LD I, $64F ; Load 64F into I
  $BB4: LD I, $77E ; Load 77E into I
  $BC0: LD I, $322 ; Load 322 into I
  $BCC: LD I, $F85 ; Load F85 into I
  $C14: LD [I], V1 ; Store V0-V1 at I
  $C70: LD I, $DA9 ; Load DA9 into I
  $C76: LD I, $A29 ; Load A29 into I
  $CD4: LD I, $8B8 ; Load 8B8 into I
  $CE0: LD I, $30B ; Load 30B into I
  $D32: LD [I], V9 ; Store V0-V9 at I
  $D3E: LD I, $355 ; Load 355 into I
  $D4E: LD I, $7C0 ; Load 7C0 into I
  $D5E: LD I, $4F4 ; Load 4F4 into I
  $D66: LD I, $A48 ; Load A48 into I
  $D6E: LD I, $B42 ; Load B42 into I
  $D80: LD I, $1BA ; Load 1BA into I
  $D82: LD I, $909 ; Load 909 into I
  $DF8: LD I, $753 ; Load 753 into I
  $E1C: LD I, $B2C ; Load B2C into I
  $E3A: LD I, $7DA ; Load 7DA into I
  $E8C: LD I, $037 ; Load 037 into I
  $EC4: LD I, $DCC ; Load DCC into I
  $EE4: LD I, $554 ; Load 554 into I
  $EE8: LD I, $878 ; Load 878 into I
  $F4C: LD I, $3A2 ; Load 3A2 into I
  $F90: LD I, $37B ; Load 37B into I
  $FAE: LD I, $C49 ; Load C49 into I
  $FB8: LD I, $E30 ; Load E30 into I
  $FBE: LD I, $474 ; Load 474 into I
  $FCE: LD I, $DE7 ; Load DE7 into I

CONTROL FLOW ANALYSIS:
Jumps: 248
Calls: 136
Branches: 229
Loops: 134
Loop Structures:
  $2DE -> $188 (backward jump)
  $33A -> $314 (backward jump)
  $358 -> $1E4 (backward jump)
  $35C -> $30C (backward jump)
  $36C -> $236 (backward jump)
  $3F8 -> $181 (backward jump)
  $42A -> $1A0 (backward jump)
  $442 -> $01F (backward jump)
  $452 -> $066 (backward jump)
  $456 -> $1FC (backward jump)
  $45E -> $315 (backward jump)
  $4BA -> $45C (backward jump)
  $4E8 -> $432 (backward jump)
  $4EE -> $01E (backward jump)
  $51C -> $030 (backward jump)
  $53A -> $1EB (backward jump)
  $55A -> $33D (backward jump)
  $56C -> $20C (backward jump)
  $5A8 -> $3DE (backward jump)
  $5AA -> $031 (backward jump)
  $5EC -> $371 (backward jump)
  $618 -> $262 (backward jump)
  $686 -> $5F9 (backward jump)
  $6C6 -> $138 (backward jump)
  $6FC -> $3E7 (backward jump)
  $70A -> $26A (backward jump)
  $70C -> $381 (backward jump)
  $724 -> $207 (backward jump)
  $734 -> $594 (backward jump)
  $73A -> $4C9 (backward jump)
  $74A -> $103 (backward jump)
  $74E -> $4D0 (backward jump)
  $776 -> $5CD (backward jump)
  $778 -> $15F (backward jump)
  $786 -> $413 (backward jump)
  $7A4 -> $22A (backward jump)
  $7A8 -> $306 (backward jump)
  $7B2 -> $595 (backward jump)
  $7BA -> $7B3 (backward jump)
  $7C0 -> $050 (backward jump)
  $7C6 -> $276 (backward jump)
  $7F8 -> $58B (backward jump)
  $7FE -> $54A (backward jump)
  $834 -> $26A (backward jump)
  $89C -> $41F (backward jump)
  $8CE -> $2AD (backward jump)
  $8D4 -> $252 (backward jump)
  $8E2 -> $2B4 (backward jump)
  $8E8 -> $146 (backward jump)
  $8F0 -> $1FC (backward jump)
  $924 -> $032 (backward jump)
  $92A -> $495 (backward jump)
  $944 -> $825 (backward jump)
  $964 -> $817 (backward jump)
  $96A -> $220 (backward jump)
  $972 -> $83B (backward jump)
  $982 -> $4A2 (backward jump)
  $9A4 -> $0CD (backward jump)
  $9E0 -> $1EB (backward jump)
  $9E8 -> $02E (backward jump)
  $A0C -> $01C (backward jump)
  $A24 -> $95C (backward jump)
  $A34 -> $07D (backward jump)
  $A3A -> $845 (backward jump)
  $A48 -> $995 (backward jump)
  $A72 -> $726 (backward jump)
  $A74 -> $411 (backward jump)
  $B0C -> $AFD (backward jump)
  $B32 -> $4B0 (backward jump)
  $B3C -> $30F (backward jump)
  $B3E -> $4C5 (backward jump)
  $B66 -> $527 (backward jump)
  $B9C -> $AF6 (backward jump)
  $BB2 -> $76C (backward jump)
  $BF4 -> $5F6 (backward jump)
  $C12 -> $A50 (backward jump)
  $C32 -> $0BE (backward jump)
  $C4E -> $2C5 (backward jump)
  $C6A -> $A28 (backward jump)
  $C74 -> $A8C (backward jump)
  $CB0 -> $6E4 (backward jump)
  $CB8 -> $34C (backward jump)
  $CC2 -> $188 (backward jump)
  $CFA -> $AE3 (backward jump)
  $CFC -> $35E (backward jump)
  $CFE -> $7B6 (backward jump)
  $D14 -> $BE3 (backward jump)
  $D18 -> $0F8 (backward jump)
  $D20 -> $79A (backward jump)
  $D38 -> $7DE (backward jump)
  $D42 -> $842 (backward jump)
  $D4C -> $399 (backward jump)
  $D58 -> $0FB (backward jump)
  $D64 -> $A2B (backward jump)
  $D6A -> $7D3 (backward jump)
  $D8A -> $7C5 (backward jump)
  $D8C -> $944 (backward jump)
  $D98 -> $609 (backward jump)
  $D9C -> $A72 (backward jump)
  $DB0 -> $CD0 (backward jump)
  $DC2 -> $A32 (backward jump)
  $DCC -> $07E (backward jump)
  $DF0 -> $049 (backward jump)
  $E0E -> $127 (backward jump)
  $E24 -> $7A5 (backward jump)
  $E34 -> $1A9 (backward jump)
  $E42 -> $955 (backward jump)
  $E78 -> $E08 (backward jump)
  $E80 -> $D80 (backward jump)
  $E82 -> $D97 (backward jump)
  $E8A -> $6CF (backward jump)
  $EA6 -> $0A5 (backward jump)
  $EA8 -> $0B8 (backward jump)
  $EC2 -> $712 (backward jump)
  $ED8 -> $DF7 (backward jump)
  $EE0 -> $AA6 (backward jump)
  $EE2 -> $E01 (backward jump)
  $EEA -> $534 (backward jump)
  $EF8 -> $E23 (backward jump)
  $EFE -> $1AD (backward jump)
  $F0A -> $D2F (backward jump)
  $F10 -> $6DD (backward jump)
  $F20 -> $31A (backward jump)
  $F2A -> $76B (backward jump)
  $F54 -> $027 (backward jump)
  $F62 -> $4CE (backward jump)
  $F9C -> $004 (backward jump)
  $FC0 -> $EDF (backward jump)
  $FCC -> $19F (backward jump)
  $FD6 -> $E0D (backward jump)
  $FDA -> $61C (backward jump)
  $FE0 -> $047 (backward jump)
  $FEE -> $B2F (backward jump)
  $FF6 -> $436 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $F3AF   UNKNOWN  F3AF            ; Unknown Fxxx instruction
$202    $0BBD   SYS      $BBD            ; System call to BBD
$204    $C3C4   RND      V3, #C4         ; V3 = random & C4
$206    $968E   UNKNOWN  $968E           ; Unknown 9xxx instruction
$208    $B308   JP       V0, $308        ; Jump to V0 + 308
$20A    $B84D   JP       V0, $84D        ; Jump to V0 + 84D
$20C    $FCD0   UNKNOWN  FCD0            ; Unknown Fxxx instruction
$20E    $5511   UNKNOWN  $5511           ; Unknown 5xxx instruction
$210    $E0ED   UNKNOWN  $E0ED           ; Unknown Exxx instruction
$212    $87C2   AND      V7, VC          ; V7 &= VC
$214    $CD01   RND      VD, #01         ; VD = random & 01
$216    $C34C   RND      V3, #4C         ; V3 = random & 4C
$218    $F68B   UNKNOWN  F68B            ; Unknown Fxxx instruction
$21A    $D0FA   DRW      V0, VF, #A      ; Draw 10-byte sprite at V0, VF
$21C    $D66C   DRW      V6, V6, #C      ; Draw 12-byte sprite at V6, V6
$21E    $1B44   JP       $B44            ; Jump to B44
$220    $268E   CALL     $68E            ; Call subroutine at 68E
$222    $EAB0   UNKNOWN  $EAB0           ; Unknown Exxx instruction
$224    $612F   LD       V1, #2F         ; Load 47 into V1
$226    $DC1C   DRW      VC, V1, #C      ; Draw 12-byte sprite at VC, V1
$228    $9988   UNKNOWN  $9988           ; Unknown 9xxx instruction
$22A    $5CBD   UNKNOWN  $5CBD           ; Unknown 5xxx instruction
$22C    $28D9   CALL     $8D9            ; Call subroutine at 8D9
$22E    $0F4D   SYS      $F4D            ; System call to F4D
$230    $A051   LD       I, $051         ; Load 051 into I
$232    $F42C   UNKNOWN  F42C            ; Unknown Fxxx instruction
$234    $8C07   SUBN     VC, V0          ; VC = V0 - VC, VF = !borrow
$236    $76AE   ADD      V6, #AE         ; Add 174 to V6
$238    $DE74   DRW      VE, V7, #4      ; Draw 4-byte sprite at VE, V7
$23A    $A84F   LD       I, $84F         ; Load 84F into I
$23C    $A838   LD       I, $838         ; Load 838 into I
$23E    $4430   SNE      V4, #30         ; Skip if V4 != 48
$240    $AEF8   LD       I, $EF8         ; Load EF8 into I
$242    $EA4D   UNKNOWN  $EA4D           ; Unknown Exxx instruction
$244    $E891   UNKNOWN  $E891           ; Unknown Exxx instruction
$246    $8760   LD       V7, V6          ; V7 = V6
$248    $E0E3   UNKNOWN  $E0E3           ; Unknown Exxx instruction
$24A    $B9E3   JP       V0, $9E3        ; Jump to V0 + 9E3
$24C    $74EC   ADD      V4, #EC         ; Add 236 to V4
$24E    $C0AF   RND      V0, #AF         ; V0 = random & AF
$250    $BB39   JP       V0, $B39        ; Jump to V0 + B39
$252    $BF30   JP       V0, $F30        ; Jump to V0 + F30
$254    $7969   ADD      V9, #69         ; Add 105 to V9
$256    $0667   SYS      $667            ; System call to 667
$258    $92BC   UNKNOWN  $92BC           ; Unknown 9xxx instruction
$25A    $5DEF   UNKNOWN  $5DEF           ; Unknown 5xxx instruction
$25C    $06A2   SYS      $6A2            ; System call to 6A2
$25E    $2061   CALL     $061            ; Call subroutine at 061
$260    $A3D4   LD       I, $3D4         ; Load 3D4 into I
$262    $6174   LD       V1, #74         ; Load 116 into V1
$264    $9DFF   UNKNOWN  $9DFF           ; Unknown 9xxx instruction
$266    $1B6B   JP       $B6B            ; Jump to B6B
$268    $3687   SE       V6, #87         ; Skip if V6 == 135
$26A    $5760   SE       V7, V6          ; Skip if V7 == V6
$26C    $2B34   CALL     $B34            ; Call subroutine at B34
$26E    $93CE   UNKNOWN  $93CE           ; Unknown 9xxx instruction
$270    $781B   ADD      V8, #1B         ; Add 27 to V8
$272    $7D2E   ADD      VD, #2E         ; Add 46 to VD
$274    $BF5C   JP       V0, $F5C        ; Jump to V0 + F5C
$276    $5CF9   UNKNOWN  $5CF9           ; Unknown 5xxx instruction
$278    $A319   LD       I, $319         ; Load 319 into I
$27A    $0C7C   SYS      $C7C            ; System call to C7C
$27C    $215E   CALL     $15E            ; Call subroutine at 15E
$27E    $FFDF   UNKNOWN  FFDF            ; Unknown Fxxx instruction
$280    $FAFB   UNKNOWN  FAFB            ; Unknown Fxxx instruction
$282    $ABBF   LD       I, $BBF         ; Load BBF into I
$284    $7F7D   ADD      VF, #7D         ; Add 125 to VF
$286    $5FFB   UNKNOWN  $5FFB           ; Unknown 5xxx instruction
$288    $50A3   UNKNOWN  $50A3           ; Unknown 5xxx instruction
$28A    $447A   SNE      V4, #7A         ; Skip if V4 != 122
$28C    $383B   SE       V8, #3B         ; Skip if V8 == 59
$28E    $0355   SYS      $355            ; System call to 355
$290    $EF83   UNKNOWN  $EF83           ; Unknown Exxx instruction
$292    $5CCA   UNKNOWN  $5CCA           ; Unknown 5xxx instruction
$294    $A50C   LD       I, $50C         ; Load 50C into I
$296    $BC92   JP       V0, $C92        ; Jump to V0 + C92
$298    $DE8E   DRW      VE, V8, #E      ; Draw 14-byte sprite at VE, V8
$29A    $7099   ADD      V0, #99         ; Add 153 to V0
$29C    $D043   DRW      V0, V4, #3      ; Draw 3-byte sprite at V0, V4
$29E    $A1B9   LD       I, $1B9         ; Load 1B9 into I
$2A0    $E864   UNKNOWN  $E864           ; Unknown Exxx instruction
$2A2    $14E8   JP       $4E8            ; Jump to 4E8
$2A4    $6E6E   LD       VE, #6E         ; Load 110 into VE
$2A6    $CACA   RND      VA, #CA         ; VA = random & CA
$2A8    $C624   RND      V6, #24         ; V6 = random & 24
$2AA    $541D   UNKNOWN  $541D           ; Unknown 5xxx instruction
$2AC    $60FA   LD       V0, #FA         ; Load 250 into V0
$2AE    $87EF   UNKNOWN  87EF            ; Unknown 8xxx instruction
$2B0    $DE41   DRW      VE, V4, #1      ; Draw 1-byte sprite at VE, V4
$2B2    $6C97   LD       VC, #97         ; Load 151 into VC
$2B4    $74EB   ADD      V4, #EB         ; Add 235 to V4
$2B6    $6AF1   LD       VA, #F1         ; Load 241 into VA
$2B8    $7E0A   ADD      VE, #0A         ; Add 10 to VE
$2BA    $C5D5   RND      V5, #D5         ; V5 = random & D5
$2BC    $E967   UNKNOWN  $E967           ; Unknown Exxx instruction
$2BE    $9373   UNKNOWN  $9373           ; Unknown 9xxx instruction
$2C0    $03FB   SYS      $3FB            ; System call to 3FB
$2C2    $CDF4   RND      VD, #F4         ; VD = random & F4
$2C4    $6667   LD       V6, #67         ; Load 103 into V6
$2C6    $FED2   UNKNOWN  FED2            ; Unknown Fxxx instruction
$2C8    $0207   SYS      $207            ; System call to 207
$2CA    $7639   ADD      V6, #39         ; Add 57 to V6
$2CC    $20AF   CALL     $0AF            ; Call subroutine at 0AF
$2CE    $33F2   SE       V3, #F2         ; Skip if V3 == 242
$2D0    $B395   JP       V0, $395        ; Jump to V0 + 395
$2D2    $31DC   SE       V1, #DC         ; Skip if V1 == 220
$2D4    $222D   CALL     $22D            ; Call subroutine at 22D
$2D6    $F2C9   UNKNOWN  F2C9            ; Unknown Fxxx instruction
$2D8    $AF5F   LD       I, $F5F         ; Load F5F into I
$2DA    $23BF   CALL     $3BF            ; Call subroutine at 3BF
$2DC    $E172   UNKNOWN  $E172           ; Unknown Exxx instruction
$2DE    $1188   JP       $188            ; Jump to 188
$2E0    $D50C   DRW      V5, V0, #C      ; Draw 12-byte sprite at V5, V0
$2E2    $9DB2   UNKNOWN  $9DB2           ; Unknown 9xxx instruction
$2E4    $EA79   UNKNOWN  $EA79           ; Unknown Exxx instruction
$2E6    $AA87   LD       I, $A87         ; Load A87 into I
$2E8    $AD97   LD       I, $D97         ; Load D97 into I
$2EA    $6D19   LD       VD, #19         ; Load 25 into VD
$2EC    $D6B2   DRW      V6, VB, #2      ; Draw 2-byte sprite at V6, VB
$2EE    $99F7   UNKNOWN  $99F7           ; Unknown 9xxx instruction
$2F0    $5612   UNKNOWN  $5612           ; Unknown 5xxx instruction
$2F2    $F711   UNKNOWN  F711            ; Unknown Fxxx instruction
$2F4    $AC14   LD       I, $C14         ; Load C14 into I
$2F6    $D961   DRW      V9, V6, #1      ; Draw 1-byte sprite at V9, V6
$2F8    $231E   CALL     $31E            ; Call subroutine at 31E
$2FA    $9281   UNKNOWN  $9281           ; Unknown 9xxx instruction
$2FC    $8E2E   SHL      VE              ; VE <<= 1, VF = MSB
$2FE    $EC4E   UNKNOWN  $EC4E           ; Unknown Exxx instruction
$300    $EEC8   UNKNOWN  $EEC8           ; Unknown Exxx instruction
$302    $BBA1   JP       V0, $BA1        ; Jump to V0 + BA1
$304    $5D38   UNKNOWN  $5D38           ; Unknown 5xxx instruction
$306    $330D   SE       V3, #0D         ; Skip if V3 == 13
$308    $BD8F   JP       V0, $D8F        ; Jump to V0 + D8F
$30A    $B78D   JP       V0, $78D        ; Jump to V0 + 78D
$30C    $8C1D   UNKNOWN  8C1D            ; Unknown 8xxx instruction
$30E    $5A17   UNKNOWN  $5A17           ; Unknown 5xxx instruction
$310    $631D   LD       V3, #1D         ; Load 29 into V3
$312    $F8F9   UNKNOWN  F8F9            ; Unknown Fxxx instruction
$314    $76A8   ADD      V6, #A8         ; Add 168 to V6
$316    $9692   UNKNOWN  $9692           ; Unknown 9xxx instruction
$318    $09BC   SYS      $9BC            ; System call to 9BC
$31A    $E0EB   UNKNOWN  $E0EB           ; Unknown Exxx instruction
$31C    $6095   LD       V0, #95         ; Load 149 into V0
$31E    $D75D   DRW      V7, V5, #D      ; Draw 13-byte sprite at V7, V5
$320    $09B6   SYS      $9B6            ; System call to 9B6
$322    $C13B   RND      V1, #3B         ; V1 = random & 3B
$324    $FEF1   UNKNOWN  FEF1            ; Unknown Fxxx instruction
$326    $B41D   JP       V0, $41D        ; Jump to V0 + 41D
$328    $26B0   CALL     $6B0            ; Call subroutine at 6B0
$32A    $97DF   UNKNOWN  $97DF           ; Unknown 9xxx instruction
$32C    $D843   DRW      V8, V4, #3      ; Draw 3-byte sprite at V8, V4
$32E    $717D   ADD      V1, #7D         ; Add 125 to V1
$330    $342C   SE       V4, #2C         ; Skip if V4 == 44
$332    $50D1   UNKNOWN  $50D1           ; Unknown 5xxx instruction
$334    $0692   SYS      $692            ; System call to 692
$336    $CA42   RND      VA, #42         ; VA = random & 42
$338    $423F   SNE      V2, #3F         ; Skip if V2 != 63
$33A    $B314   JP       V0, $314        ; Jump to V0 + 314
$33C    $2CB7   CALL     $CB7            ; Call subroutine at CB7
$33E    $3C0C   SE       VC, #0C         ; Skip if VC == 12
$340    $413E   SNE      V1, #3E         ; Skip if V1 != 62
$342    $78BD   ADD      V8, #BD         ; Add 189 to V8
$344    $6D27   LD       VD, #27         ; Load 39 into VD
$346    $0E3B   SYS      $E3B            ; System call to E3B
$348    $C4AB   RND      V4, #AB         ; V4 = random & AB
$34A    $CCD8   RND      VC, #D8         ; VC = random & D8
$34C    $4511   SNE      V5, #11         ; Skip if V5 != 17
$34E    $F259   UNKNOWN  F259            ; Unknown Fxxx instruction
$350    $75CF   ADD      V5, #CF         ; Add 207 to V5
$352    $4B9D   SNE      VB, #9D         ; Skip if VB != 157
$354    $3285   SE       V2, #85         ; Skip if V2 == 133
$356    $276C   CALL     $76C            ; Call subroutine at 76C
$358    $B1E4   JP       V0, $1E4        ; Jump to V0 + 1E4
$35A    $AA47   LD       I, $A47         ; Load A47 into I
$35C    $B30C   JP       V0, $30C        ; Jump to V0 + 30C
$35E    $3E50   SE       VE, #50         ; Skip if VE == 80
$360    $88FD   UNKNOWN  88FD            ; Unknown 8xxx instruction
$362    $6913   LD       V9, #13         ; Load 19 into V9
$364    $8693   XOR      V6, V9          ; V6 ^= V9
$366    $3CB8   SE       VC, #B8         ; Skip if VC == 184
$368    $DCBF   DRW      VC, VB, #F      ; Draw 15-byte sprite at VC, VB
$36A    $6ADF   LD       VA, #DF         ; Load 223 into VA
$36C    $1236   JP       $236            ; Jump to 236
$36E    $0FDC   SYS      $FDC            ; System call to FDC
$370    $6B7E   LD       VB, #7E         ; Load 126 into VB
$372    $18AA   JP       $8AA            ; Jump to 8AA
$374    $75A6   ADD      V5, #A6         ; Add 166 to V5
$376    $A474   LD       I, $474         ; Load 474 into I
$378    $190A   JP       $90A            ; Jump to 90A
$37A    $79C9   ADD      V9, #C9         ; Add 201 to V9
$37C    $473B   SNE      V7, #3B         ; Skip if V7 != 59
$37E    $80CB   UNKNOWN  80CB            ; Unknown 8xxx instruction
$380    $D967   DRW      V9, V6, #7      ; Draw 7-byte sprite at V9, V6
$382    $BEFD   JP       V0, $EFD        ; Jump to V0 + EFD
$384    $AF96   LD       I, $F96         ; Load F96 into I
$386    $0E31   SYS      $E31            ; System call to E31
$388    $1F6E   JP       $F6E            ; Jump to F6E
$38A    $0011   SYS      $011            ; System call to 011
$38C    $2B3E   CALL     $B3E            ; Call subroutine at B3E
$38E    $7E80   ADD      VE, #80         ; Add 128 to VE
$390    $0A2C   SYS      $A2C            ; System call to A2C
$392    $6787   LD       V7, #87         ; Load 135 into V7
$394    $51B6   UNKNOWN  $51B6           ; Unknown 5xxx instruction
$396    $AB66   LD       I, $B66         ; Load B66 into I
$398    $6667   LD       V6, #67         ; Load 103 into V6
$39A    $F67B   UNKNOWN  F67B            ; Unknown Fxxx instruction
$39C    $C0B5   RND      V0, #B5         ; V0 = random & B5
$39E    $5FC9   UNKNOWN  $5FC9           ; Unknown 5xxx instruction
$3A0    $CD01   RND      VD, #01         ; VD = random & 01
$3A2    $302A   SE       V0, #2A         ; Skip if V0 == 42
$3A4    $AB53   LD       I, $B53         ; Load B53 into I
$3A6    $FEAD   UNKNOWN  FEAD            ; Unknown Fxxx instruction
$3A8    $33A4   SE       V3, #A4         ; Skip if V3 == 164
$3AA    $16DB   JP       $6DB            ; Jump to 6DB
$3AC    $F4D2   UNKNOWN  F4D2            ; Unknown Fxxx instruction
$3AE    $FC2E   UNKNOWN  FC2E            ; Unknown Fxxx instruction
$3B0    $AF76   LD       I, $F76         ; Load F76 into I
$3B2    $60FC   LD       V0, #FC         ; Load 252 into V0
$3B4    $19E7   JP       $9E7            ; Jump to 9E7
$3B6    $5BB9   UNKNOWN  $5BB9           ; Unknown 5xxx instruction
$3B8    $920D   UNKNOWN  $920D           ; Unknown 9xxx instruction
$3BA    $5D37   UNKNOWN  $5D37           ; Unknown 5xxx instruction
$3BC    $6127   LD       V1, #27         ; Load 39 into V1
$3BE    $A6E6   LD       I, $6E6         ; Load 6E6 into I
$3C0    $3049   SE       V0, #49         ; Skip if V0 == 73
$3C2    $68FC   LD       V8, #FC         ; Load 252 into V8
$3C4    $E57C   UNKNOWN  $E57C           ; Unknown Exxx instruction
$3C6    $5E37   UNKNOWN  $5E37           ; Unknown 5xxx instruction
$3C8    $CEBA   RND      VE, #BA         ; VE = random & BA
$3CA    $1675   JP       $675            ; Jump to 675
$3CC    $8C32   AND      VC, V3          ; VC &= V3
$3CE    $34BE   SE       V4, #BE         ; Skip if V4 == 190
$3D0    $8A2B   UNKNOWN  8A2B            ; Unknown 8xxx instruction
$3D2    $95EE   UNKNOWN  $95EE           ; Unknown 9xxx instruction
$3D4    $86B8   UNKNOWN  86B8            ; Unknown 8xxx instruction
$3D6    $0B12   SYS      $B12            ; System call to B12
$3D8    $2B09   CALL     $B09            ; Call subroutine at B09
$3DA    $DA5A   DRW      VA, V5, #A      ; Draw 10-byte sprite at VA, V5
$3DC    $F4C2   UNKNOWN  F4C2            ; Unknown Fxxx instruction
$3DE    $A644   LD       I, $644         ; Load 644 into I
$3E0    $D186   DRW      V1, V8, #6      ; Draw 6-byte sprite at V1, V8
$3E2    $886A   UNKNOWN  886A            ; Unknown 8xxx instruction
$3E4    $4E7D   SNE      VE, #7D         ; Skip if VE != 125
$3E6    $B57C   JP       V0, $57C        ; Jump to V0 + 57C
$3E8    $6040   LD       V0, #40         ; Load 64 into V0
$3EA    $B51F   JP       V0, $51F        ; Jump to V0 + 51F
$3EC    $ED41   UNKNOWN  $ED41           ; Unknown Exxx instruction
$3EE    $3EF8   SE       VE, #F8         ; Skip if VE == 248
$3F0    $2925   CALL     $925            ; Call subroutine at 925
$3F2    $C38F   RND      V3, #8F         ; V3 = random & 8F
$3F4    $B85F   JP       V0, $85F        ; Jump to V0 + 85F
$3F6    $36A3   SE       V6, #A3         ; Skip if V6 == 163
$3F8    $1181   JP       $181            ; Jump to 181
$3FA    $D18B   DRW      V1, V8, #B      ; Draw 11-byte sprite at V1, V8
$3FC    $16F7   JP       $6F7            ; Jump to 6F7
$3FE    $91E4   UNKNOWN  $91E4           ; Unknown 9xxx instruction
$400    $867B   UNKNOWN  867B            ; Unknown 8xxx instruction
$402    $8D9A   UNKNOWN  8D9A            ; Unknown 8xxx instruction
$404    $DF79   DRW      VF, V7, #9      ; Draw 9-byte sprite at VF, V7
$406    $F1FF   UNKNOWN  F1FF            ; Unknown Fxxx instruction
$408    $3629   SE       V6, #29         ; Skip if V6 == 41
$40A    $7DC2   ADD      VD, #C2         ; Add 194 to VD
$40C    $8B07   SUBN     VB, V0          ; VB = V0 - VB, VF = !borrow
$40E    $A90A   LD       I, $90A         ; Load 90A into I
$410    $D7AC   DRW      V7, VA, #C      ; Draw 12-byte sprite at V7, VA
$412    $B912   JP       V0, $912        ; Jump to V0 + 912
$414    $BB27   JP       V0, $B27        ; Jump to V0 + B27
$416    $28C6   CALL     $8C6            ; Call subroutine at 8C6
$418    $BA79   JP       V0, $A79        ; Jump to V0 + A79
$41A    $A216   LD       I, $216         ; Load 216 into I
$41C    $DADD   DRW      VA, VD, #D      ; Draw 13-byte sprite at VA, VD
$41E    $25FC   CALL     $5FC            ; Call subroutine at 5FC
$420    $7BB3   ADD      VB, #B3         ; Add 179 to VB
$422    $4DB5   SNE      VD, #B5         ; Skip if VD != 181
$424    $DFD5   DRW      VF, VD, #5      ; Draw 5-byte sprite at VF, VD
$426    $16E8   JP       $6E8            ; Jump to 6E8
$428    $B827   JP       V0, $827        ; Jump to V0 + 827
$42A    $B1A0   JP       V0, $1A0        ; Jump to V0 + 1A0
$42C    $2695   CALL     $695            ; Call subroutine at 695
$42E    $4D94   SNE      VD, #94         ; Skip if VD != 148
$430    $97F3   UNKNOWN  $97F3           ; Unknown 9xxx instruction
$432    $9ECD   UNKNOWN  $9ECD           ; Unknown 9xxx instruction
$434    $BAE4   JP       V0, $AE4        ; Jump to V0 + AE4
$436    $0F79   SYS      $F79            ; System call to F79
$438    $07EA   SYS      $7EA            ; System call to 7EA
$43A    $CED5   RND      VE, #D5         ; VE = random & D5
$43C    $C8F3   RND      V8, #F3         ; V8 = random & F3
$43E    $1CEA   JP       $CEA            ; Jump to CEA
$440    $AE5B   LD       I, $E5B         ; Load E5B into I
$442    $101F   JP       $01F            ; Jump to 01F
$444    $2260   CALL     $260            ; Call subroutine at 260
$446    $247B   CALL     $47B            ; Call subroutine at 47B
$448    $F63E   UNKNOWN  F63E            ; Unknown Fxxx instruction
$44A    $6338   LD       V3, #38         ; Load 56 into V3
$44C    $5180   SE       V1, V8          ; Skip if V1 == V8
$44E    $AE44   LD       I, $E44         ; Load E44 into I
$450    $5413   UNKNOWN  $5413           ; Unknown 5xxx instruction
$452    $1066   JP       $066            ; Jump to 066
$454    $8E58   UNKNOWN  8E58            ; Unknown 8xxx instruction
$456    $B1FC   JP       V0, $1FC        ; Jump to V0 + 1FC
$458    $98AB   UNKNOWN  $98AB           ; Unknown 9xxx instruction
$45A    $AA7D   LD       I, $A7D         ; Load A7D into I
$45C    $7B7B   ADD      VB, #7B         ; Add 123 to VB
$45E    $B315   JP       V0, $315        ; Jump to V0 + 315
$460    $C1C8   RND      V1, #C8         ; V1 = random & C8
$462    $BC0F   JP       V0, $C0F        ; Jump to V0 + C0F
$464    $2C66   CALL     $C66            ; Call subroutine at C66
$466    $D125   DRW      V1, V2, #5      ; Draw 5-byte sprite at V1, V2
$468    $FE48   UNKNOWN  FE48            ; Unknown Fxxx instruction
$46A    $4B69   SNE      VB, #69         ; Skip if VB != 105
$46C    $2AC7   CALL     $AC7            ; Call subroutine at AC7
$46E    $F76C   UNKNOWN  F76C            ; Unknown Fxxx instruction
$470    $A2C5   LD       I, $2C5         ; Load 2C5 into I
$472    $0260   SYS      $260            ; System call to 260
$474    $EC19   UNKNOWN  $EC19           ; Unknown Exxx instruction
$476    $E699   UNKNOWN  $E699           ; Unknown Exxx instruction
$478    $2927   CALL     $927            ; Call subroutine at 927
$47A    $6400   LD       V4, #00         ; Load 0 into V4
$47C    $1FA2   JP       $FA2            ; Jump to FA2
$47E    $DC83   DRW      VC, V8, #3      ; Draw 3-byte sprite at VC, V8
$480    $FA73   UNKNOWN  FA73            ; Unknown Fxxx instruction
$482    $0951   SYS      $951            ; System call to 951
$484    $FCBA   UNKNOWN  FCBA            ; Unknown Fxxx instruction
$486    $9627   UNKNOWN  $9627           ; Unknown 9xxx instruction
$488    $FB28   UNKNOWN  FB28            ; Unknown Fxxx instruction
$48A    $2C28   CALL     $C28            ; Call subroutine at C28
$48C    $75DA   ADD      V5, #DA         ; Add 218 to V5
$48E    $E39B   UNKNOWN  $E39B           ; Unknown Exxx instruction
$490    $99D5   UNKNOWN  $99D5           ; Unknown 9xxx instruction
$492    $1C6A   JP       $C6A            ; Jump to C6A
$494    $2991   CALL     $991            ; Call subroutine at 991
$496    $9719   UNKNOWN  $9719           ; Unknown 9xxx instruction
$498    $AE26   LD       I, $E26         ; Load E26 into I
$49A    $98CB   UNKNOWN  $98CB           ; Unknown 9xxx instruction
$49C    $3224   SE       V2, #24         ; Skip if V2 == 36
$49E    $3A86   SE       VA, #86         ; Skip if VA == 134
$4A0    $C1F9   RND      V1, #F9         ; V1 = random & F9
$4A2    $CA2D   RND      VA, #2D         ; VA = random & 2D
$4A4    $C437   RND      V4, #37         ; V4 = random & 37
$4A6    $58F2   UNKNOWN  $58F2           ; Unknown 5xxx instruction
$4A8    $C84E   RND      V8, #4E         ; V8 = random & 4E
$4AA    $3C73   SE       VC, #73         ; Skip if VC == 115
$4AC    $D36E   DRW      V3, V6, #E      ; Draw 14-byte sprite at V3, V6
$4AE    $4B05   SNE      VB, #05         ; Skip if VB != 5
$4B0    $86E5   SUB      V6, VE          ; V6 -= VE, VF = !borrow
$4B2    $FEEE   UNKNOWN  FEEE            ; Unknown Fxxx instruction
$4B4    $C716   RND      V7, #16         ; V7 = random & 16
$4B6    $B7BD   JP       V0, $7BD        ; Jump to V0 + 7BD
$4B8    $C98E   RND      V9, #8E         ; V9 = random & 8E
$4BA    $B45C   JP       V0, $45C        ; Jump to V0 + 45C
$4BC    $6BC5   LD       VB, #C5         ; Load 197 into VB
$4BE    $D2A4   DRW      V2, VA, #4      ; Draw 4-byte sprite at V2, VA
$4C0    $9624   UNKNOWN  $9624           ; Unknown 9xxx instruction
$4C2    $EF7C   UNKNOWN  $EF7C           ; Unknown Exxx instruction
$4C4    $B516   JP       V0, $516        ; Jump to V0 + 516
$4C6    $6082   LD       V0, #82         ; Load 130 into V0
$4C8    $FF7D   UNKNOWN  FF7D            ; Unknown Fxxx instruction
$4CA    $511C   UNKNOWN  $511C           ; Unknown 5xxx instruction
$4CC    $AE69   LD       I, $E69         ; Load E69 into I
$4CE    $17E2   JP       $7E2            ; Jump to 7E2
$4D0    $8978   UNKNOWN  8978            ; Unknown 8xxx instruction
$4D2    $FAB6   UNKNOWN  FAB6            ; Unknown Fxxx instruction
$4D4    $94B9   UNKNOWN  $94B9           ; Unknown 9xxx instruction
$4D6    $B92D   JP       V0, $92D        ; Jump to V0 + 92D
$4D8    $2125   CALL     $125            ; Call subroutine at 125
$4DA    $F3BE   UNKNOWN  F3BE            ; Unknown Fxxx instruction
$4DC    $72DF   ADD      V2, #DF         ; Add 223 to V2
$4DE    $9A78   UNKNOWN  $9A78           ; Unknown 9xxx instruction
$4E0    $E07D   UNKNOWN  $E07D           ; Unknown Exxx instruction
$4E2    $C635   RND      V6, #35         ; V6 = random & 35
$4E4    $266F   CALL     $66F            ; Call subroutine at 66F
$4E6    $E420   UNKNOWN  $E420           ; Unknown Exxx instruction
$4E8    $1432   JP       $432            ; Jump to 432
$4EA    $9DF0   SNE      VD, VF          ; Skip if VD != VF
$4EC    $CA6D   RND      VA, #6D         ; VA = random & 6D
$4EE    $B01E   JP       V0, $01E        ; Jump to V0 + 01E
$4F0    $1D54   JP       $D54            ; Jump to D54
$4F2    $FEDA   UNKNOWN  FEDA            ; Unknown Fxxx instruction
$4F4    $9454   UNKNOWN  $9454           ; Unknown 9xxx instruction
$4F6    $1655   JP       $655            ; Jump to 655
$4F8    $AEAE   LD       I, $EAE         ; Load EAE into I
$4FA    $00A7   SYS      $0A7            ; System call to 0A7
$4FC    $395D   SE       V9, #5D         ; Skip if V9 == 93
$4FE    $CDFB   RND      VD, #FB         ; VD = random & FB
$500    $2471   CALL     $471            ; Call subroutine at 471
$502    $8D4B   UNKNOWN  8D4B            ; Unknown 8xxx instruction
$504    $8AF2   AND      VA, VF          ; VA &= VF
$506    $81FD   UNKNOWN  81FD            ; Unknown 8xxx instruction
$508    $BA65   JP       V0, $A65        ; Jump to V0 + A65
$50A    $190D   JP       $90D            ; Jump to 90D
$50C    $75ED   ADD      V5, #ED         ; Add 237 to V5
$50E    $BF3C   JP       V0, $F3C        ; Jump to V0 + F3C
$510    $1E89   JP       $E89            ; Jump to E89
$512    $AD30   LD       I, $D30         ; Load D30 into I
$514    $C07B   RND      V0, #7B         ; V0 = random & 7B
$516    $0F00   SYS      $F00            ; System call to F00
$518    $16AD   JP       $6AD            ; Jump to 6AD
$51A    $4C0D   SNE      VC, #0D         ; Skip if VC != 13
$51C    $B030   JP       V0, $030        ; Jump to V0 + 030
$51E    $EA92   UNKNOWN  $EA92           ; Unknown Exxx instruction
$520    $9307   UNKNOWN  $9307           ; Unknown 9xxx instruction
$522    $9485   UNKNOWN  $9485           ; Unknown 9xxx instruction
$524    $37BE   SE       V7, #BE         ; Skip if V7 == 190
$526    $D89A   DRW      V8, V9, #A      ; Draw 10-byte sprite at V8, V9
$528    $73F0   ADD      V3, #F0         ; Add 240 to V3
$52A    $E910   UNKNOWN  $E910           ; Unknown Exxx instruction
$52C    $5AD2   UNKNOWN  $5AD2           ; Unknown 5xxx instruction
$52E    $069B   SYS      $69B            ; System call to 69B
$530    $46E1   SNE      V6, #E1         ; Skip if V6 != 225
$532    $ECB0   UNKNOWN  $ECB0           ; Unknown Exxx instruction
$534    $B54E   JP       V0, $54E        ; Jump to V0 + 54E
$536    $982E   UNKNOWN  $982E           ; Unknown 9xxx instruction
$538    $8272   AND      V2, V7          ; V2 &= V7
$53A    $B1EB   JP       V0, $1EB        ; Jump to V0 + 1EB
$53C    $DC66   DRW      VC, V6, #6      ; Draw 6-byte sprite at VC, V6
$53E    $6899   LD       V8, #99         ; Load 153 into V8
$540    $5F56   UNKNOWN  $5F56           ; Unknown 5xxx instruction
$542    $2CED   CALL     $CED            ; Call subroutine at CED
$544    $682C   LD       V8, #2C         ; Load 44 into V8
$546    $1A09   JP       $A09            ; Jump to A09
$548    $CB65   RND      VB, #65         ; VB = random & 65
$54A    $9010   SNE      V0, V1          ; Skip if V0 != V1
$54C    $CCF6   RND      VC, #F6         ; VC = random & F6
$54E    $F4E6   UNKNOWN  F4E6            ; Unknown Fxxx instruction
$550    $6C49   LD       VC, #49         ; Load 73 into VC
$552    $0247   SYS      $247            ; System call to 247
$554    $1CC6   JP       $CC6            ; Jump to CC6
$556    $DF8A   DRW      VF, V8, #A      ; Draw 10-byte sprite at VF, V8
$558    $3E30   SE       VE, #30         ; Skip if VE == 48
$55A    $133D   JP       $33D            ; Jump to 33D
$55C    $2D79   CALL     $D79            ; Call subroutine at D79
$55E    $9688   UNKNOWN  $9688           ; Unknown 9xxx instruction
$560    $5675   UNKNOWN  $5675           ; Unknown 5xxx instruction
$562    $67C6   LD       V7, #C6         ; Load 198 into V7
$564    $0F58   SYS      $F58            ; System call to F58
$566    $6154   LD       V1, #54         ; Load 84 into V1
$568    $8B50   LD       VB, V5          ; VB = V5
$56A    $7220   ADD      V2, #20         ; Add 32 to V2
$56C    $120C   JP       $20C            ; Jump to 20C
$56E    $23A8   CALL     $3A8            ; Call subroutine at 3A8
$570    $52CA   UNKNOWN  $52CA           ; Unknown 5xxx instruction
$572    $75D0   ADD      V5, #D0         ; Add 208 to V5
$574    $34F0   SE       V4, #F0         ; Skip if V4 == 240
$576    $7295   ADD      V2, #95         ; Add 149 to V2
$578    $43B2   SNE      V3, #B2         ; Skip if V3 != 178
$57A    $FD8C   UNKNOWN  FD8C            ; Unknown Fxxx instruction
$57C    $330E   SE       V3, #0E         ; Skip if V3 == 14
$57E    $E3F1   UNKNOWN  $E3F1           ; Unknown Exxx instruction
$580    $8DA7   SUBN     VD, VA          ; VD = VA - VD, VF = !borrow
$582    $95CE   UNKNOWN  $95CE           ; Unknown 9xxx instruction
$584    $BB17   JP       V0, $B17        ; Jump to V0 + B17
$586    $505D   UNKNOWN  $505D           ; Unknown 5xxx instruction
$588    $3BC4   SE       VB, #C4         ; Skip if VB == 196
$58A    $85A3   XOR      V5, VA          ; V5 ^= VA
$58C    $BCBD   JP       V0, $CBD        ; Jump to V0 + CBD
$58E    $8286   SHR      V2              ; V2 >>= 1, VF = LSB
$590    $F171   UNKNOWN  F171            ; Unknown Fxxx instruction
$592    $31A0   SE       V1, #A0         ; Skip if V1 == 160
$594    $20F0   CALL     $0F0            ; Call subroutine at 0F0
$596    $2205   CALL     $205            ; Call subroutine at 205
$598    $0163   SYS      $163            ; System call to 163
$59A    $95C0   SNE      V5, VC          ; Skip if V5 != VC
$59C    $4A95   SNE      VA, #95         ; Skip if VA != 149
$59E    $E5DC   UNKNOWN  $E5DC           ; Unknown Exxx instruction
$5A0    $5907   UNKNOWN  $5907           ; Unknown 5xxx instruction
$5A2    $1AE6   JP       $AE6            ; Jump to AE6
$5A4    $DCF6   DRW      VC, VF, #6      ; Draw 6-byte sprite at VC, VF
$5A6    $807C   UNKNOWN  807C            ; Unknown 8xxx instruction
$5A8    $B3DE   JP       V0, $3DE        ; Jump to V0 + 3DE
$5AA    $B031   JP       V0, $031        ; Jump to V0 + 031
$5AC    $73D0   ADD      V3, #D0         ; Add 208 to V3
$5AE    $7DE7   ADD      VD, #E7         ; Add 231 to VD
$5B0    $E603   UNKNOWN  $E603           ; Unknown Exxx instruction
$5B2    $ADF4   LD       I, $DF4         ; Load DF4 into I
$5B4    $2D9E   CALL     $D9E            ; Call subroutine at D9E
$5B6    $9F1C   UNKNOWN  $9F1C           ; Unknown 9xxx instruction
$5B8    $5D76   UNKNOWN  $5D76           ; Unknown 5xxx instruction
$5BA    $4C7F   SNE      VC, #7F         ; Skip if VC != 127
$5BC    $97CC   UNKNOWN  $97CC           ; Unknown 9xxx instruction
$5BE    $3C5E   SE       VC, #5E         ; Skip if VC == 94
$5C0    $5D4E   UNKNOWN  $5D4E           ; Unknown 5xxx instruction
$5C2    $ECB2   UNKNOWN  $ECB2           ; Unknown Exxx instruction
$5C4    $05A4   SYS      $5A4            ; System call to 5A4
$5C6    $A518   LD       I, $518         ; Load 518 into I
$5C8    $4FAF   SNE      VF, #AF         ; Skip if VF != 175
$5CA    $75B9   ADD      V5, #B9         ; Add 185 to V5
$5CC    $20E7   CALL     $0E7            ; Call subroutine at 0E7
$5CE    $1C7A   JP       $C7A            ; Jump to C7A
$5D0    $9060   SNE      V0, V6          ; Skip if V0 != V6
$5D2    $D02A   DRW      V0, V2, #A      ; Draw 10-byte sprite at V0, V2
$5D4    $9DC2   UNKNOWN  $9DC2           ; Unknown 9xxx instruction
$5D6    $67C9   LD       V7, #C9         ; Load 201 into V7
$5D8    $2024   CALL     $024            ; Call subroutine at 024
$5DA    $E209   UNKNOWN  $E209           ; Unknown Exxx instruction
$5DC    $E1DF   UNKNOWN  $E1DF           ; Unknown Exxx instruction
$5DE    $97EC   UNKNOWN  $97EC           ; Unknown 9xxx instruction
$5E0    $580D   UNKNOWN  $580D           ; Unknown 5xxx instruction
$5E2    $72A0   ADD      V2, #A0         ; Add 160 to V2
$5E4    $041D   SYS      $41D            ; System call to 41D
$5E6    $2ABD   CALL     $ABD            ; Call subroutine at ABD
$5E8    $47A7   SNE      V7, #A7         ; Skip if V7 != 167
$5EA    $9844   UNKNOWN  $9844           ; Unknown 9xxx instruction
$5EC    $1371   JP       $371            ; Jump to 371
$5EE    $2608   CALL     $608            ; Call subroutine at 608
$5F0    $9983   UNKNOWN  $9983           ; Unknown 9xxx instruction
$5F2    $AD6C   LD       I, $D6C         ; Load D6C into I
$5F4    $D040   DRW      V0, V4, #0      ; Draw 0-byte sprite at V0, V4
$5F6    $352B   SE       V5, #2B         ; Skip if V5 == 43
$5F8    $9F7E   UNKNOWN  $9F7E           ; Unknown 9xxx instruction
$5FA    $71D4   ADD      V1, #D4         ; Add 212 to V1
$5FC    $DAFA   DRW      VA, VF, #A      ; Draw 10-byte sprite at VA, VF
$5FE    $B8FD   JP       V0, $8FD        ; Jump to V0 + 8FD
$600    $51C5   UNKNOWN  $51C5           ; Unknown 5xxx instruction
$602    $AD90   LD       I, $D90         ; Load D90 into I
$604    $8E35   SUB      VE, V3          ; VE -= V3, VF = !borrow
$606    $E504   UNKNOWN  $E504           ; Unknown Exxx instruction
$608    $A0E3   LD       I, $0E3         ; Load 0E3 into I
$60A    $474B   SNE      V7, #4B         ; Skip if V7 != 75
$60C    $9E78   UNKNOWN  $9E78           ; Unknown 9xxx instruction
$60E    $C205   RND      V2, #05         ; V2 = random & 05
$610    $A74B   LD       I, $74B         ; Load 74B into I
$612    $A03D   LD       I, $03D         ; Load 03D into I
$614    $3568   SE       V5, #68         ; Skip if V5 == 104
$616    $DAC8   DRW      VA, VC, #8      ; Draw 8-byte sprite at VA, VC
$618    $B262   JP       V0, $262        ; Jump to V0 + 262
$61A    $C06C   RND      V0, #6C         ; V0 = random & 6C
$61C    $8BDA   UNKNOWN  8BDA            ; Unknown 8xxx instruction
$61E    $9C49   UNKNOWN  $9C49           ; Unknown 9xxx instruction
$620    $E319   UNKNOWN  $E319           ; Unknown Exxx instruction
$622    $D21E   DRW      V2, V1, #E      ; Draw 14-byte sprite at V2, V1
$624    $7FA9   ADD      VF, #A9         ; Add 169 to VF
$626    $0BE4   SYS      $BE4            ; System call to BE4
$628    $4EE1   SNE      VE, #E1         ; Skip if VE != 225
$62A    $873F   UNKNOWN  873F            ; Unknown 8xxx instruction
$62C    $3DC8   SE       VD, #C8         ; Skip if VD == 200
$62E    $04E8   SYS      $4E8            ; System call to 4E8
$630    $537D   UNKNOWN  $537D           ; Unknown 5xxx instruction
$632    $650E   LD       V5, #0E         ; Load 14 into V5
$634    $7FB8   ADD      VF, #B8         ; Add 184 to VF
$636    $A111   LD       I, $111         ; Load 111 into I
$638    $DEDB   DRW      VE, VD, #B      ; Draw 11-byte sprite at VE, VD
$63A    $2A78   CALL     $A78            ; Call subroutine at A78
$63C    $9DCA   UNKNOWN  $9DCA           ; Unknown 9xxx instruction
$63E    $75F0   ADD      V5, #F0         ; Add 240 to V5
$640    $32A6   SE       V2, #A6         ; Skip if V2 == 166
$642    $2236   CALL     $236            ; Call subroutine at 236
$644    $4102   SNE      V1, #02         ; Skip if V1 != 2
$646    $C0ED   RND      V0, #ED         ; V0 = random & ED
$648    $0C16   SYS      $C16            ; System call to C16
$64A    $67E3   LD       V7, #E3         ; Load 227 into V7
$64C    $95BA   UNKNOWN  $95BA           ; Unknown 9xxx instruction
$64E    $966A   UNKNOWN  $966A           ; Unknown 9xxx instruction
$650    $0ED3   SYS      $ED3            ; System call to ED3
$652    $EA5E   UNKNOWN  $EA5E           ; Unknown Exxx instruction
$654    $4ACC   SNE      VA, #CC         ; Skip if VA != 204
$656    $88D8   UNKNOWN  88D8            ; Unknown 8xxx instruction
$658    $5E5E   UNKNOWN  $5E5E           ; Unknown 5xxx instruction
$65A    $787C   ADD      V8, #7C         ; Add 124 to V8
$65C    $E23D   UNKNOWN  $E23D           ; Unknown Exxx instruction
$65E    $289A   CALL     $89A            ; Call subroutine at 89A
$660    $E78F   UNKNOWN  $E78F           ; Unknown Exxx instruction
$662    $6EA7   LD       VE, #A7         ; Load 167 into VE
$664    $C4E4   RND      V4, #E4         ; V4 = random & E4
$666    $243E   CALL     $43E            ; Call subroutine at 43E
$668    $ED61   UNKNOWN  $ED61           ; Unknown Exxx instruction
$66A    $C7C0   RND      V7, #C0         ; V7 = random & C0
$66C    $E401   UNKNOWN  $E401           ; Unknown Exxx instruction
$66E    $7FD7   ADD      VF, #D7         ; Add 215 to VF
$670    $BE4C   JP       V0, $E4C        ; Jump to V0 + E4C
$672    $9BD9   UNKNOWN  $9BD9           ; Unknown 9xxx instruction
$674    $0181   SYS      $181            ; System call to 181
$676    $91A2   UNKNOWN  $91A2           ; Unknown 9xxx instruction
$678    $2A7C   CALL     $A7C            ; Call subroutine at A7C
$67A    $9520   SNE      V5, V2          ; Skip if V5 != V2
$67C    $9DCF   UNKNOWN  $9DCF           ; Unknown 9xxx instruction
$67E    $9CB2   UNKNOWN  $9CB2           ; Unknown 9xxx instruction
$680    $C46B   RND      V4, #6B         ; V4 = random & 6B
$682    $5D90   SE       VD, V9          ; Skip if VD == V9
$684    $9299   UNKNOWN  $9299           ; Unknown 9xxx instruction
$686    $B5F9   JP       V0, $5F9        ; Jump to V0 + 5F9
$688    $1C7B   JP       $C7B            ; Jump to C7B
$68A    $1DC8   JP       $DC8            ; Jump to DC8
$68C    $AA19   LD       I, $A19         ; Load A19 into I
$68E    $BD9D   JP       V0, $D9D        ; Jump to V0 + D9D
$690    $C892   RND      V8, #92         ; V8 = random & 92
$692    $A2FF   LD       I, $2FF         ; Load 2FF into I
$694    $E746   UNKNOWN  $E746           ; Unknown Exxx instruction
$696    $1867   JP       $867            ; Jump to 867
$698    $9FA8   UNKNOWN  $9FA8           ; Unknown 9xxx instruction
$69A    $4978   SNE      V9, #78         ; Skip if V9 != 120
$69C    $1FF5   JP       $FF5            ; Jump to FF5
$69E    $95F4   UNKNOWN  $95F4           ; Unknown 9xxx instruction
$6A0    $71FB   ADD      V1, #FB         ; Add 251 to V1
$6A2    $99CA   UNKNOWN  $99CA           ; Unknown 9xxx instruction
$6A4    $67C9   LD       V7, #C9         ; Load 201 into V7
$6A6    $2C36   CALL     $C36            ; Call subroutine at C36
$6A8    $BD8D   JP       V0, $D8D        ; Jump to V0 + D8D
$6AA    $FD18   LD       ST, VD          ; Sound timer = VD
$6AC    $01EB   SYS      $1EB            ; System call to 1EB
$6AE    $AF61   LD       I, $F61         ; Load F61 into I
$6B0    $5C6B   UNKNOWN  $5C6B           ; Unknown 5xxx instruction
$6B2    $FAD8   UNKNOWN  FAD8            ; Unknown Fxxx instruction
$6B4    $6192   LD       V1, #92         ; Load 146 into V1
$6B6    $0EB5   SYS      $EB5            ; System call to EB5
$6B8    $BB93   JP       V0, $B93        ; Jump to V0 + B93
$6BA    $E4DC   UNKNOWN  $E4DC           ; Unknown Exxx instruction
$6BC    $77A0   ADD      V7, #A0         ; Add 160 to V7
$6BE    $5F9C   UNKNOWN  $5F9C           ; Unknown 5xxx instruction
$6C0    $2F40   CALL     $F40            ; Call subroutine at F40
$6C2    $36F4   SE       V6, #F4         ; Skip if V6 == 244
$6C4    $1F35   JP       $F35            ; Jump to F35
$6C6    $1138   JP       $138            ; Jump to 138
$6C8    $977E   UNKNOWN  $977E           ; Unknown 9xxx instruction
$6CA    $D5D6   DRW      V5, VD, #6      ; Draw 6-byte sprite at V5, VD
$6CC    $975C   UNKNOWN  $975C           ; Unknown 9xxx instruction
$6CE    $8BD8   UNKNOWN  8BD8            ; Unknown 8xxx instruction
$6D0    $ACFD   LD       I, $CFD         ; Load CFD into I
$6D2    $7B04   ADD      VB, #04         ; Add 4 to VB
$6D4    $D816   DRW      V8, V1, #6      ; Draw 6-byte sprite at V8, V1
$6D6    $B725   JP       V0, $725        ; Jump to V0 + 725
$6D8    $18E2   JP       $8E2            ; Jump to 8E2
$6DA    $CDCD   RND      VD, #CD         ; VD = random & CD
$6DC    $8E1E   SHL      VE              ; VE <<= 1, VF = MSB
$6DE    $E947   UNKNOWN  $E947           ; Unknown Exxx instruction
$6E0    $4EF3   SNE      VE, #F3         ; Skip if VE != 243
$6E2    $8562   AND      V5, V6          ; V5 &= V6
$6E4    $F82F   UNKNOWN  F82F            ; Unknown Fxxx instruction
$6E6    $7663   ADD      V6, #63         ; Add 99 to V6
$6E8    $4B4B   SNE      VB, #4B         ; Skip if VB != 75
$6EA    $C7F9   RND      V7, #F9         ; V7 = random & F9
$6EC    $3E1E   SE       VE, #1E         ; Skip if VE == 30
$6EE    $5A88   UNKNOWN  $5A88           ; Unknown 5xxx instruction
$6F0    $BAFE   JP       V0, $AFE        ; Jump to V0 + AFE
$6F2    $73A3   ADD      V3, #A3         ; Add 163 to V3
$6F4    $026D   SYS      $26D            ; System call to 26D
$6F6    $FA2B   UNKNOWN  FA2B            ; Unknown Fxxx instruction
$6F8    $95FB   UNKNOWN  $95FB           ; Unknown 9xxx instruction
$6FA    $6FE6   LD       VF, #E6         ; Load 230 into VF
$6FC    $B3E7   JP       V0, $3E7        ; Jump to V0 + 3E7
$6FE    $C0C3   RND      V0, #C3         ; V0 = random & C3
$700    $846D   UNKNOWN  846D            ; Unknown 8xxx instruction
$702    $9457   UNKNOWN  $9457           ; Unknown 9xxx instruction
$704    $18D7   JP       $8D7            ; Jump to 8D7
$706    $F561   UNKNOWN  F561            ; Unknown Fxxx instruction
$708    $5336   UNKNOWN  $5336           ; Unknown 5xxx instruction
$70A    $B26A   JP       V0, $26A        ; Jump to V0 + 26A
$70C    $B381   JP       V0, $381        ; Jump to V0 + 381
$70E    $8FFA   UNKNOWN  8FFA            ; Unknown 8xxx instruction
$710    $A43B   LD       I, $43B         ; Load 43B into I
$712    $2393   CALL     $393            ; Call subroutine at 393
$714    $E8E3   UNKNOWN  $E8E3           ; Unknown Exxx instruction
$716    $C95F   RND      V9, #5F         ; V9 = random & 5F
$718    $4652   SNE      V6, #52         ; Skip if V6 != 82
$71A    $7113   ADD      V1, #13         ; Add 19 to V1
$71C    $36C8   SE       V6, #C8         ; Skip if V6 == 200
$71E    $0B81   SYS      $B81            ; System call to B81
$720    $6AFA   LD       VA, #FA         ; Load 250 into VA
$722    $411D   SNE      V1, #1D         ; Skip if V1 != 29
$724    $B207   JP       V0, $207        ; Jump to V0 + 207
$726    $D46B   DRW      V4, V6, #B      ; Draw 11-byte sprite at V4, V6
$728    $9F78   UNKNOWN  $9F78           ; Unknown 9xxx instruction
$72A    $29B3   CALL     $9B3            ; Call subroutine at 9B3
$72C    $27B5   CALL     $7B5            ; Call subroutine at 7B5
$72E    $ACD6   LD       I, $CD6         ; Load CD6 into I
$730    $38CD   SE       V8, #CD         ; Skip if V8 == 205
$732    $66EE   LD       V6, #EE         ; Load 238 into V6
$734    $B594   JP       V0, $594        ; Jump to V0 + 594
$736    $9307   UNKNOWN  $9307           ; Unknown 9xxx instruction
$738    $BC55   JP       V0, $C55        ; Jump to V0 + C55
$73A    $14C9   JP       $4C9            ; Jump to 4C9
$73C    $03D4   SYS      $3D4            ; System call to 3D4
$73E    $46A5   SNE      V6, #A5         ; Skip if V6 != 165
$740    $7600   ADD      V6, #00         ; Add 0 to V6
$742    $1C03   JP       $C03            ; Jump to C03
$744    $540E   UNKNOWN  $540E           ; Unknown 5xxx instruction
$746    $2389   CALL     $389            ; Call subroutine at 389
$748    $4A8B   SNE      VA, #8B         ; Skip if VA != 139
$74A    $1103   JP       $103            ; Jump to 103
$74C    $4F06   SNE      VF, #06         ; Skip if VF != 6
$74E    $14D0   JP       $4D0            ; Jump to 4D0
$750    $436D   SNE      V3, #6D         ; Skip if V3 != 109
$752    $CD59   RND      VD, #59         ; VD = random & 59
$754    $3BA2   SE       VB, #A2         ; Skip if VB == 162
$756    $8FAF   UNKNOWN  8FAF            ; Unknown 8xxx instruction
$758    $B8D1   JP       V0, $8D1        ; Jump to V0 + 8D1
$75A    $98F1   UNKNOWN  $98F1           ; Unknown 9xxx instruction
$75C    $2721   CALL     $721            ; Call subroutine at 721
$75E    $C3F8   RND      V3, #F8         ; V3 = random & F8
$760    $DF49   DRW      VF, V4, #9      ; Draw 9-byte sprite at VF, V4
$762    $4EAF   SNE      VE, #AF         ; Skip if VE != 175
$764    $1A81   JP       $A81            ; Jump to A81
$766    $84E6   SHR      V4              ; V4 >>= 1, VF = LSB
$768    $03F1   SYS      $3F1            ; System call to 3F1
$76A    $84F6   SHR      V4              ; V4 >>= 1, VF = LSB
$76C    $22EA   CALL     $2EA            ; Call subroutine at 2EA
$76E    $3382   SE       V3, #82         ; Skip if V3 == 130
$770    $4764   SNE      V7, #64         ; Skip if V7 != 100
$772    $8B56   SHR      VB              ; VB >>= 1, VF = LSB
$774    $3613   SE       V6, #13         ; Skip if V6 == 19
$776    $B5CD   JP       V0, $5CD        ; Jump to V0 + 5CD
$778    $115F   JP       $15F            ; Jump to 15F
$77A    $9D66   UNKNOWN  $9D66           ; Unknown 9xxx instruction
$77C    $F7F3   UNKNOWN  F7F3            ; Unknown Fxxx instruction
$77E    $0FBC   SYS      $FBC            ; System call to FBC
$780    $2480   CALL     $480            ; Call subroutine at 480
$782    $0AB5   SYS      $AB5            ; System call to AB5
$784    $03CF   SYS      $3CF            ; System call to 3CF
$786    $B413   JP       V0, $413        ; Jump to V0 + 413
$788    $493E   SNE      V9, #3E         ; Skip if V9 != 62
$78A    $09C8   SYS      $9C8            ; System call to 9C8
$78C    $23B8   CALL     $3B8            ; Call subroutine at 3B8
$78E    $45F1   SNE      V5, #F1         ; Skip if V5 != 241
$790    $C7EB   RND      V7, #EB         ; V7 = random & EB
$792    $6844   LD       V8, #44         ; Load 68 into V8
$794    $EBE4   UNKNOWN  $EBE4           ; Unknown Exxx instruction
$796    $8FAE   SHL      VF              ; VF <<= 1, VF = MSB
$798    $2C99   CALL     $C99            ; Call subroutine at C99
$79A    $FFF2   UNKNOWN  FFF2            ; Unknown Fxxx instruction
$79C    $928F   UNKNOWN  $928F           ; Unknown 9xxx instruction
$79E    $3723   SE       V7, #23         ; Skip if V7 == 35
$7A0    $B966   JP       V0, $966        ; Jump to V0 + 966
$7A2    $8467   SUBN     V4, V6          ; V4 = V6 - V4, VF = !borrow
$7A4    $B22A   JP       V0, $22A        ; Jump to V0 + 22A
$7A6    $F2EC   UNKNOWN  F2EC            ; Unknown Fxxx instruction
$7A8    $B306   JP       V0, $306        ; Jump to V0 + 306
$7AA    $6EB7   LD       VE, #B7         ; Load 183 into VE
$7AC    $F979   UNKNOWN  F979            ; Unknown Fxxx instruction
$7AE    $F501   UNKNOWN  F501            ; Unknown Fxxx instruction
$7B0    $F64C   UNKNOWN  F64C            ; Unknown Fxxx instruction
$7B2    $1595   JP       $595            ; Jump to 595
$7B4    $5F2C   UNKNOWN  $5F2C           ; Unknown 5xxx instruction
$7B6    $38E3   SE       V8, #E3         ; Skip if V8 == 227
$7B8    $0578   SYS      $578            ; System call to 578
$7BA    $17B3   JP       $7B3            ; Jump to 7B3
$7BC    $FEC0   UNKNOWN  FEC0            ; Unknown Fxxx instruction
$7BE    $4D75   SNE      VD, #75         ; Skip if VD != 117
$7C0    $B050   JP       V0, $050        ; Jump to V0 + 050
$7C2    $AFC1   LD       I, $FC1         ; Load FC1 into I
$7C4    $34F6   SE       V4, #F6         ; Skip if V4 == 246
$7C6    $1276   JP       $276            ; Jump to 276
$7C8    $23E4   CALL     $3E4            ; Call subroutine at 3E4
$7CA    $3CD8   SE       VC, #D8         ; Skip if VC == 216
$7CC    $C0C0   RND      V0, #C0         ; V0 = random & C0
$7CE    $FAE0   UNKNOWN  FAE0            ; Unknown Fxxx instruction
$7D0    $33F6   SE       V3, #F6         ; Skip if V3 == 246
$7D2    $DCD4   DRW      VC, VD, #4      ; Draw 4-byte sprite at VC, VD
$7D4    $2A19   CALL     $A19            ; Call subroutine at A19
$7D6    $38A4   SE       V8, #A4         ; Skip if V8 == 164
$7D8    $E1E8   UNKNOWN  $E1E8           ; Unknown Exxx instruction
$7DA    $A1BE   LD       I, $1BE         ; Load 1BE into I
$7DC    $AE9D   LD       I, $E9D         ; Load E9D into I
$7DE    $C313   RND      V3, #13         ; V3 = random & 13
$7E0    $5D9A   UNKNOWN  $5D9A           ; Unknown 5xxx instruction
$7E2    $273A   CALL     $73A            ; Call subroutine at 73A
$7E4    $CC6D   RND      VC, #6D         ; VC = random & 6D
$7E6    $069A   SYS      $69A            ; System call to 69A
$7E8    $FF3D   UNKNOWN  FF3D            ; Unknown Fxxx instruction
$7EA    $2425   CALL     $425            ; Call subroutine at 425
$7EC    $23E3   CALL     $3E3            ; Call subroutine at 3E3
$7EE    $6DEF   LD       VD, #EF         ; Load 239 into VD
$7F0    $CFEC   RND      VF, #EC         ; VF = random & EC
$7F2    $A3A7   LD       I, $3A7         ; Load 3A7 into I
$7F4    $C210   RND      V2, #10         ; V2 = random & 10
$7F6    $94EC   UNKNOWN  $94EC           ; Unknown 9xxx instruction
$7F8    $158B   JP       $58B            ; Jump to 58B
$7FA    $E3C4   UNKNOWN  $E3C4           ; Unknown Exxx instruction
$7FC    $7711   ADD      V7, #11         ; Add 17 to V7
$7FE    $154A   JP       $54A            ; Jump to 54A
$800    $5A81   UNKNOWN  $5A81           ; Unknown 5xxx instruction
$802    $4B0B   SNE      VB, #0B         ; Skip if VB != 11
$804    $D808   DRW      V8, V0, #8      ; Draw 8-byte sprite at V8, V0
$806    $3247   SE       V2, #47         ; Skip if V2 == 71
$808    $689C   LD       V8, #9C         ; Load 156 into V8
$80A    $3CA2   SE       VC, #A2         ; Skip if VC == 162
$80C    $4381   SNE      V3, #81         ; Skip if V3 != 129
$80E    $9E4D   UNKNOWN  $9E4D           ; Unknown 9xxx instruction
$810    $DA0E   DRW      VA, V0, #E      ; Draw 14-byte sprite at VA, V0
$812    $A1BD   LD       I, $1BD         ; Load 1BD into I
$814    $A4A4   LD       I, $4A4         ; Load 4A4 into I
$816    $EE7F   UNKNOWN  $EE7F           ; Unknown Exxx instruction
$818    $64F7   LD       V4, #F7         ; Load 247 into V4
$81A    $8147   SUBN     V1, V4          ; V1 = V4 - V1, VF = !borrow
$81C    $74BB   ADD      V4, #BB         ; Add 187 to V4
$81E    $86F5   SUB      V6, VF          ; V6 -= VF, VF = !borrow
$820    $928D   UNKNOWN  $928D           ; Unknown 9xxx instruction
$822    $94A2   UNKNOWN  $94A2           ; Unknown 9xxx instruction
$824    $D836   DRW      V8, V3, #6      ; Draw 6-byte sprite at V8, V3
$826    $3683   SE       V6, #83         ; Skip if V6 == 131
$828    $A13B   LD       I, $13B         ; Load 13B into I
$82A    $7106   ADD      V1, #06         ; Add 6 to V1
$82C    $3F94   SE       VF, #94         ; Skip if VF == 148
$82E    $EE2C   UNKNOWN  $EE2C           ; Unknown Exxx instruction
$830    $1E46   JP       $E46            ; Jump to E46
$832    $A838   LD       I, $838         ; Load 838 into I
$834    $B26A   JP       V0, $26A        ; Jump to V0 + 26A
$836    $7586   ADD      V5, #86         ; Add 134 to V5
$838    $92C1   UNKNOWN  $92C1           ; Unknown 9xxx instruction
$83A    $4C55   SNE      VC, #55         ; Skip if VC != 85
$83C    $FB2B   UNKNOWN  FB2B            ; Unknown Fxxx instruction
$83E    $0487   SYS      $487            ; System call to 487
$840    $FFE9   UNKNOWN  FFE9            ; Unknown Fxxx instruction
$842    $8FF6   SHR      VF              ; VF >>= 1, VF = LSB
$844    $4D8B   SNE      VD, #8B         ; Skip if VD != 139
$846    $50D9   UNKNOWN  $50D9           ; Unknown 5xxx instruction
$848    $6C6F   LD       VC, #6F         ; Load 111 into VC
$84A    $2D73   CALL     $D73            ; Call subroutine at D73
$84C    $A59C   LD       I, $59C         ; Load 59C into I
$84E    $EC20   UNKNOWN  $EC20           ; Unknown Exxx instruction
$850    $663D   LD       V6, #3D         ; Load 61 into V6
$852    $BE78   JP       V0, $E78        ; Jump to V0 + E78
$854    $0499   SYS      $499            ; System call to 499
$856    $C8C9   RND      V8, #C9         ; V8 = random & C9
$858    $FB15   LD       DT, VB          ; Delay timer = VB
$85A    $4E7E   SNE      VE, #7E         ; Skip if VE != 126
$85C    $D946   DRW      V9, V4, #6      ; Draw 6-byte sprite at V9, V4
$85E    $E497   UNKNOWN  $E497           ; Unknown Exxx instruction
$860    $9BA8   UNKNOWN  $9BA8           ; Unknown 9xxx instruction
$862    $2250   CALL     $250            ; Call subroutine at 250
$864    $E875   UNKNOWN  $E875           ; Unknown Exxx instruction
$866    $A66D   LD       I, $66D         ; Load 66D into I
$868    $4C8E   SNE      VC, #8E         ; Skip if VC != 142
$86A    $74EB   ADD      V4, #EB         ; Add 235 to V4
$86C    $77E3   ADD      V7, #E3         ; Add 227 to V7
$86E    $CA43   RND      VA, #43         ; VA = random & 43
$870    $6328   LD       V3, #28         ; Load 40 into V3
$872    $00BD   SYS      $0BD            ; System call to 0BD
$874    $5386   UNKNOWN  $5386           ; Unknown 5xxx instruction
$876    $F7FF   UNKNOWN  F7FF            ; Unknown Fxxx instruction
$878    $A96E   LD       I, $96E         ; Load 96E into I
$87A    $252A   CALL     $52A            ; Call subroutine at 52A
$87C    $554C   UNKNOWN  $554C           ; Unknown 5xxx instruction
$87E    $4493   SNE      V4, #93         ; Skip if V4 != 147
$880    $32E4   SE       V2, #E4         ; Skip if V2 == 228
$882    $3450   SE       V4, #50         ; Skip if V4 == 80
$884    $FC38   UNKNOWN  FC38            ; Unknown Fxxx instruction
$886    $DE48   DRW      VE, V4, #8      ; Draw 8-byte sprite at VE, V4
$888    $FFCF   UNKNOWN  FFCF            ; Unknown Fxxx instruction
$88A    $A539   LD       I, $539         ; Load 539 into I
$88C    $870C   UNKNOWN  870C            ; Unknown 8xxx instruction
$88E    $8750   LD       V7, V5          ; V7 = V5
$890    $FC21   UNKNOWN  FC21            ; Unknown Fxxx instruction
$892    $9911   UNKNOWN  $9911           ; Unknown 9xxx instruction
$894    $457A   SNE      V5, #7A         ; Skip if V5 != 122
$896    $EA55   UNKNOWN  $EA55           ; Unknown Exxx instruction
$898    $EE31   UNKNOWN  $EE31           ; Unknown Exxx instruction
$89A    $7D7A   ADD      VD, #7A         ; Add 122 to VD
$89C    $141F   JP       $41F            ; Jump to 41F
$89E    $DD5E   DRW      VD, V5, #E      ; Draw 14-byte sprite at VD, V5
$8A0    $9C0F   UNKNOWN  $9C0F           ; Unknown 9xxx instruction
$8A2    $C2F3   RND      V2, #F3         ; V2 = random & F3
$8A4    $782E   ADD      V8, #2E         ; Add 46 to V8
$8A6    $6B25   LD       VB, #25         ; Load 37 into VB
$8A8    $B8F5   JP       V0, $8F5        ; Jump to V0 + 8F5
$8AA    $42EA   SNE      V2, #EA         ; Skip if V2 != 234
$8AC    $CB80   RND      VB, #80         ; VB = random & 80
$8AE    $96A8   UNKNOWN  $96A8           ; Unknown 9xxx instruction
$8B0    $63BD   LD       V3, #BD         ; Load 189 into V3
$8B2    $A8E9   LD       I, $8E9         ; Load 8E9 into I
$8B4    $7342   ADD      V3, #42         ; Add 66 to V3
$8B6    $EC87   UNKNOWN  $EC87           ; Unknown Exxx instruction
$8B8    $3CA4   SE       VC, #A4         ; Skip if VC == 164
$8BA    $7569   ADD      V5, #69         ; Add 105 to V5
$8BC    $4CD9   SNE      VC, #D9         ; Skip if VC != 217
$8BE    $540C   UNKNOWN  $540C           ; Unknown 5xxx instruction
$8C0    $2083   CALL     $083            ; Call subroutine at 083
$8C2    $E3A2   UNKNOWN  $E3A2           ; Unknown Exxx instruction
$8C4    $C745   RND      V7, #45         ; V7 = random & 45
$8C6    $06C6   SYS      $6C6            ; System call to 6C6
$8C8    $3CFF   SE       VC, #FF         ; Skip if VC == 255
$8CA    $747C   ADD      V4, #7C         ; Add 124 to V4
$8CC    $D2CC   DRW      V2, VC, #C      ; Draw 12-byte sprite at V2, VC
$8CE    $12AD   JP       $2AD            ; Jump to 2AD
$8D0    $DA39   DRW      VA, V3, #9      ; Draw 9-byte sprite at VA, V3
$8D2    $F23A   UNKNOWN  F23A            ; Unknown Fxxx instruction
$8D4    $1252   JP       $252            ; Jump to 252
$8D6    $3221   SE       V2, #21         ; Skip if V2 == 33
$8D8    $90ED   UNKNOWN  $90ED           ; Unknown 9xxx instruction
$8DA    $D32E   DRW      V3, V2, #E      ; Draw 14-byte sprite at V3, V2
$8DC    $BE42   JP       V0, $E42        ; Jump to V0 + E42
$8DE    $49C8   SNE      V9, #C8         ; Skip if V9 != 200
$8E0    $61F5   LD       V1, #F5         ; Load 245 into V1
$8E2    $12B4   JP       $2B4            ; Jump to 2B4
$8E4    $28E2   CALL     $8E2            ; Call subroutine at 8E2
$8E6    $6AE2   LD       VA, #E2         ; Load 226 into VA
$8E8    $B146   JP       V0, $146        ; Jump to V0 + 146
$8EA    $C721   RND      V7, #21         ; V7 = random & 21
$8EC    $9771   UNKNOWN  $9771           ; Unknown 9xxx instruction
$8EE    $F791   UNKNOWN  F791            ; Unknown Fxxx instruction
$8F0    $11FC   JP       $1FC            ; Jump to 1FC
$8F2    $3637   SE       V6, #37         ; Skip if V6 == 55
$8F4    $39F4   SE       V9, #F4         ; Skip if V9 == 244
$8F6    $BA37   JP       V0, $A37        ; Jump to V0 + A37
$8F8    $D648   DRW      V6, V4, #8      ; Draw 8-byte sprite at V6, V4
$8FA    $59D3   UNKNOWN  $59D3           ; Unknown 5xxx instruction
$8FC    $9545   UNKNOWN  $9545           ; Unknown 9xxx instruction
$8FE    $291A   CALL     $91A            ; Call subroutine at 91A
$900    $590E   UNKNOWN  $590E           ; Unknown 5xxx instruction
$902    $C469   RND      V4, #69         ; V4 = random & 69
$904    $3C6F   SE       VC, #6F         ; Skip if VC == 111
$906    $8754   ADD      V7, V5          ; V7 += V5, VF = carry
$908    $2E7A   CALL     $E7A            ; Call subroutine at E7A
$90A    $4259   SNE      V2, #59         ; Skip if V2 != 89
$90C    $9DE6   UNKNOWN  $9DE6           ; Unknown 9xxx instruction
$90E    $082A   SYS      $82A            ; System call to 82A
$910    $FB95   UNKNOWN  FB95            ; Unknown Fxxx instruction
$912    $3207   SE       V2, #07         ; Skip if V2 == 7
$914    $F265   LD       V2, [I]         ; Load V0-V2 from I
$916    $9D77   UNKNOWN  $9D77           ; Unknown 9xxx instruction
$918    $E3C5   UNKNOWN  $E3C5           ; Unknown Exxx instruction
$91A    $F069   UNKNOWN  F069            ; Unknown Fxxx instruction
$91C    $FFC3   UNKNOWN  FFC3            ; Unknown Fxxx instruction
$91E    $1D2D   JP       $D2D            ; Jump to D2D
$920    $F7BC   UNKNOWN  F7BC            ; Unknown Fxxx instruction
$922    $3E7D   SE       VE, #7D         ; Skip if VE == 125
$924    $1032   JP       $032            ; Jump to 032
$926    $8941   OR       V9, V4          ; V9 |= V4
$928    $8B42   AND      VB, V4          ; VB &= V4
$92A    $1495   JP       $495            ; Jump to 495
$92C    $82E8   UNKNOWN  82E8            ; Unknown 8xxx instruction
$92E    $E938   UNKNOWN  $E938           ; Unknown Exxx instruction
$930    $BAAA   JP       V0, $AAA        ; Jump to V0 + AAA
$932    $83F4   ADD      V3, VF          ; V3 += VF, VF = carry
$934    $9945   UNKNOWN  $9945           ; Unknown 9xxx instruction
$936    $DBBE   DRW      VB, VB, #E      ; Draw 14-byte sprite at VB, VB
$938    $E861   UNKNOWN  $E861           ; Unknown Exxx instruction
$93A    $7480   ADD      V4, #80         ; Add 128 to V4
$93C    $3563   SE       V5, #63         ; Skip if V5 == 99
$93E    $9744   UNKNOWN  $9744           ; Unknown 9xxx instruction
$940    $2E19   CALL     $E19            ; Call subroutine at E19
$942    $CAC7   RND      VA, #C7         ; VA = random & C7
$944    $1825   JP       $825            ; Jump to 825
$946    $C664   RND      V6, #64         ; V6 = random & 64
$948    $2ECF   CALL     $ECF            ; Call subroutine at ECF
$94A    $09E9   SYS      $9E9            ; System call to 9E9
$94C    $DEF2   DRW      VE, VF, #2      ; Draw 2-byte sprite at VE, VF
$94E    $9C6E   UNKNOWN  $9C6E           ; Unknown 9xxx instruction
$950    $BC73   JP       V0, $C73        ; Jump to V0 + C73
$952    $E40D   UNKNOWN  $E40D           ; Unknown Exxx instruction
$954    $3DF1   SE       VD, #F1         ; Skip if VD == 241
$956    $99E0   SNE      V9, VE          ; Skip if V9 != VE
$958    $A6FC   LD       I, $6FC         ; Load 6FC into I
$95A    $1B3F   JP       $B3F            ; Jump to B3F
$95C    $3D1E   SE       VD, #1E         ; Skip if VD == 30
$95E    $95A1   UNKNOWN  $95A1           ; Unknown 9xxx instruction
$960    $D018   DRW      V0, V1, #8      ; Draw 8-byte sprite at V0, V1
$962    $9B81   UNKNOWN  $9B81           ; Unknown 9xxx instruction
$964    $1817   JP       $817            ; Jump to 817
$966    $2855   CALL     $855            ; Call subroutine at 855
$968    $0C5E   SYS      $C5E            ; System call to C5E
$96A    $B220   JP       V0, $220        ; Jump to V0 + 220
$96C    $77C5   ADD      V7, #C5         ; Add 197 to V7
$96E    $1E4E   JP       $E4E            ; Jump to E4E
$970    $6812   LD       V8, #12         ; Load 18 into V8
$972    $B83B   JP       V0, $83B        ; Jump to V0 + 83B
$974    $F053   UNKNOWN  F053            ; Unknown Fxxx instruction
$976    $42F0   SNE      V2, #F0         ; Skip if V2 != 240
$978    $63C5   LD       V3, #C5         ; Load 197 into V3
$97A    $2992   CALL     $992            ; Call subroutine at 992
$97C    $9BE5   UNKNOWN  $9BE5           ; Unknown 9xxx instruction
$97E    $095D   SYS      $95D            ; System call to 95D
$980    $5130   SE       V1, V3          ; Skip if V1 == V3
$982    $B4A2   JP       V0, $4A2        ; Jump to V0 + 4A2
$984    $9348   UNKNOWN  $9348           ; Unknown 9xxx instruction
$986    $FB5D   UNKNOWN  FB5D            ; Unknown Fxxx instruction
$988    $55BA   UNKNOWN  $55BA           ; Unknown 5xxx instruction
$98A    $06E1   SYS      $6E1            ; System call to 6E1
$98C    $D6CE   DRW      V6, VC, #E      ; Draw 14-byte sprite at V6, VC
$98E    $8706   SHR      V7              ; V7 >>= 1, VF = LSB
$990    $F3E4   UNKNOWN  F3E4            ; Unknown Fxxx instruction
$992    $E47A   UNKNOWN  $E47A           ; Unknown Exxx instruction
$994    $1A92   JP       $A92            ; Jump to A92
$996    $C249   RND      V2, #49         ; V2 = random & 49
$998    $A8B2   LD       I, $8B2         ; Load 8B2 into I
$99A    $EA89   UNKNOWN  $EA89           ; Unknown Exxx instruction
$99C    $AB55   LD       I, $B55         ; Load B55 into I
$99E    $68C3   LD       V8, #C3         ; Load 195 into V8
$9A0    $D364   DRW      V3, V6, #4      ; Draw 4-byte sprite at V3, V6
$9A2    $3674   SE       V6, #74         ; Skip if V6 == 116
$9A4    $10CD   JP       $0CD            ; Jump to 0CD
$9A6    $EB75   UNKNOWN  $EB75           ; Unknown Exxx instruction
$9A8    $5A4D   UNKNOWN  $5A4D           ; Unknown 5xxx instruction
$9AA    $3E89   SE       VE, #89         ; Skip if VE == 137
$9AC    $2D7A   CALL     $D7A            ; Call subroutine at D7A
$9AE    $435A   SNE      V3, #5A         ; Skip if V3 != 90
$9B0    $1EC7   JP       $EC7            ; Jump to EC7
$9B2    $F4D5   UNKNOWN  F4D5            ; Unknown Fxxx instruction
$9B4    $7FC6   ADD      VF, #C6         ; Add 198 to VF
$9B6    $4D2D   SNE      VD, #2D         ; Skip if VD != 45
$9B8    $47EC   SNE      V7, #EC         ; Skip if V7 != 236
$9BA    $D0E9   DRW      V0, VE, #9      ; Draw 9-byte sprite at V0, VE
$9BC    $FF99   UNKNOWN  FF99            ; Unknown Fxxx instruction
$9BE    $2FEE   CALL     $FEE            ; Call subroutine at FEE
$9C0    $37BE   SE       V7, #BE         ; Skip if V7 == 190
$9C2    $3EB4   SE       VE, #B4         ; Skip if VE == 180
$9C4    $7456   ADD      V4, #56         ; Add 86 to V4
$9C6    $50D7   UNKNOWN  $50D7           ; Unknown 5xxx instruction
$9C8    $3DE7   SE       VD, #E7         ; Skip if VD == 231
$9CA    $32AC   SE       V2, #AC         ; Skip if V2 == 172
$9CC    $917E   UNKNOWN  $917E           ; Unknown 9xxx instruction
$9CE    $A388   LD       I, $388         ; Load 388 into I
$9D0    $2B34   CALL     $B34            ; Call subroutine at B34
$9D2    $26E7   CALL     $6E7            ; Call subroutine at 6E7
$9D4    $1F66   JP       $F66            ; Jump to F66
$9D6    $C09F   RND      V0, #9F         ; V0 = random & 9F
$9D8    $2C0C   CALL     $C0C            ; Call subroutine at C0C
$9DA    $ED5A   UNKNOWN  $ED5A           ; Unknown Exxx instruction
$9DC    $792D   ADD      V9, #2D         ; Add 45 to V9
$9DE    $E7CC   UNKNOWN  $E7CC           ; Unknown Exxx instruction
$9E0    $B1EB   JP       V0, $1EB        ; Jump to V0 + 1EB
$9E2    $9522   UNKNOWN  $9522           ; Unknown 9xxx instruction
$9E4    $916C   UNKNOWN  $916C           ; Unknown 9xxx instruction
$9E6    $D694   DRW      V6, V9, #4      ; Draw 4-byte sprite at V6, V9
$9E8    $B02E   JP       V0, $02E        ; Jump to V0 + 02E
$9EA    $1B0A   JP       $B0A            ; Jump to B0A
$9EC    $FF9C   UNKNOWN  FF9C            ; Unknown Fxxx instruction
$9EE    $ACFB   LD       I, $CFB         ; Load CFB into I
$9F0    $4051   SNE      V0, #51         ; Skip if V0 != 81
$9F2    $23F7   CALL     $3F7            ; Call subroutine at 3F7
$9F4    $96F7   UNKNOWN  $96F7           ; Unknown 9xxx instruction
$9F6    $1AB0   JP       $AB0            ; Jump to AB0
$9F8    $7607   ADD      V6, #07         ; Add 7 to V6
$9FA    $FDD9   UNKNOWN  FDD9            ; Unknown Fxxx instruction
$9FC    $9D40   SNE      VD, V4          ; Skip if VD != V4
$9FE    $6F56   LD       VF, #56         ; Load 86 into VF
$A00    $ADB6   LD       I, $DB6         ; Load DB6 into I
$A02    $6274   LD       V2, #74         ; Load 116 into V2
$A04    $53F2   UNKNOWN  $53F2           ; Unknown 5xxx instruction
$A06    $D33F   DRW      V3, V3, #F      ; Draw 15-byte sprite at V3, V3
$A08    $054B   SYS      $54B            ; System call to 54B
$A0A    $2BFD   CALL     $BFD            ; Call subroutine at BFD
$A0C    $101C   JP       $01C            ; Jump to 01C
$A0E    $933B   UNKNOWN  $933B           ; Unknown 9xxx instruction
$A10    $A3EC   LD       I, $3EC         ; Load 3EC into I
$A12    $DE1A   DRW      VE, V1, #A      ; Draw 10-byte sprite at VE, V1
$A14    $76D9   ADD      V6, #D9         ; Add 217 to V6
$A16    $295F   CALL     $95F            ; Call subroutine at 95F
$A18    $EDAB   UNKNOWN  $EDAB           ; Unknown Exxx instruction
$A1A    $C20A   RND      V2, #0A         ; V2 = random & 0A
$A1C    $C8BC   RND      V8, #BC         ; V8 = random & BC
$A1E    $536A   UNKNOWN  $536A           ; Unknown 5xxx instruction
$A20    $CDEE   RND      VD, #EE         ; VD = random & EE
$A22    $7145   ADD      V1, #45         ; Add 69 to V1
$A24    $195C   JP       $95C            ; Jump to 95C
$A26    $E95A   UNKNOWN  $E95A           ; Unknown Exxx instruction
$A28    $A6D6   LD       I, $6D6         ; Load 6D6 into I
$A2A    $D4E3   DRW      V4, VE, #3      ; Draw 3-byte sprite at V4, VE
$A2C    $3AC4   SE       VA, #C4         ; Skip if VA == 196
$A2E    $724A   ADD      V2, #4A         ; Add 74 to V2
$A30    $20F8   CALL     $0F8            ; Call subroutine at 0F8
$A32    $8C85   SUB      VC, V8          ; VC -= V8, VF = !borrow
$A34    $107D   JP       $07D            ; Jump to 07D
$A36    $4E37   SNE      VE, #37         ; Skip if VE != 55
$A38    $9C75   UNKNOWN  $9C75           ; Unknown 9xxx instruction
$A3A    $B845   JP       V0, $845        ; Jump to V0 + 845
$A3C    $626C   LD       V2, #6C         ; Load 108 into V2
$A3E    $AA83   LD       I, $A83         ; Load A83 into I
$A40    $6CD4   LD       VC, #D4         ; Load 212 into VC
$A42    $1E02   JP       $E02            ; Jump to E02
$A44    $A921   LD       I, $921         ; Load 921 into I
$A46    $0446   SYS      $446            ; System call to 446
$A48    $1995   JP       $995            ; Jump to 995
$A4A    $62F2   LD       V2, #F2         ; Load 242 into V2
$A4C    $53A7   UNKNOWN  $53A7           ; Unknown 5xxx instruction
$A4E    $3C92   SE       VC, #92         ; Skip if VC == 146
$A50    $2ED3   CALL     $ED3            ; Call subroutine at ED3
$A52    $2FB9   CALL     $FB9            ; Call subroutine at FB9
$A54    $9EE4   UNKNOWN  $9EE4           ; Unknown 9xxx instruction
$A56    $88ED   UNKNOWN  88ED            ; Unknown 8xxx instruction
$A58    $9B9E   UNKNOWN  $9B9E           ; Unknown 9xxx instruction
$A5A    $08CE   SYS      $8CE            ; System call to 8CE
$A5C    $465D   SNE      V6, #5D         ; Skip if V6 != 93
$A5E    $1E6D   JP       $E6D            ; Jump to E6D
$A60    $E9C7   UNKNOWN  $E9C7           ; Unknown Exxx instruction
$A62    $9E06   UNKNOWN  $9E06           ; Unknown 9xxx instruction
$A64    $E034   UNKNOWN  $E034           ; Unknown Exxx instruction
$A66    $57A1   UNKNOWN  $57A1           ; Unknown 5xxx instruction
$A68    $31BF   SE       V1, #BF         ; Skip if V1 == 191
$A6A    $A2DA   LD       I, $2DA         ; Load 2DA into I
$A6C    $63F7   LD       V3, #F7         ; Load 247 into V3
$A6E    $5616   UNKNOWN  $5616           ; Unknown 5xxx instruction
$A70    $3291   SE       V2, #91         ; Skip if V2 == 145
$A72    $B726   JP       V0, $726        ; Jump to V0 + 726
$A74    $B411   JP       V0, $411        ; Jump to V0 + 411
$A76    $6223   LD       V2, #23         ; Load 35 into V2
$A78    $910B   UNKNOWN  $910B           ; Unknown 9xxx instruction
$A7A    $C125   RND      V1, #25         ; V1 = random & 25
$A7C    $BC3C   JP       V0, $C3C        ; Jump to V0 + C3C
$A7E    $8EB1   OR       VE, VB          ; VE |= VB
$A80    $1C10   JP       $C10            ; Jump to C10
$A82    $EDA1   SKNP     VD              ; Skip if key VD not pressed
$A84    $EA4A   UNKNOWN  $EA4A           ; Unknown Exxx instruction
$A86    $5652   UNKNOWN  $5652           ; Unknown 5xxx instruction
$A88    $9EEA   UNKNOWN  $9EEA           ; Unknown 9xxx instruction
$A8A    $612F   LD       V1, #2F         ; Load 47 into V1
$A8C    $41D5   SNE      V1, #D5         ; Skip if V1 != 213
$A8E    $4144   SNE      V1, #44         ; Skip if V1 != 68
$A90    $74B8   ADD      V4, #B8         ; Add 184 to V4
$A92    $C18B   RND      V1, #8B         ; V1 = random & 8B
$A94    $0A38   SYS      $A38            ; System call to A38
$A96    $0A6D   SYS      $A6D            ; System call to A6D
$A98    $6832   LD       V8, #32         ; Load 50 into V8
$A9A    $3097   SE       V0, #97         ; Skip if V0 == 151
$A9C    $83AC   UNKNOWN  83AC            ; Unknown 8xxx instruction
$A9E    $0432   SYS      $432            ; System call to 432
$AA0    $50A4   UNKNOWN  $50A4           ; Unknown 5xxx instruction
$AA2    $C634   RND      V6, #34         ; V6 = random & 34
$AA4    $43A9   SNE      V3, #A9         ; Skip if V3 != 169
$AA6    $5E3F   UNKNOWN  $5E3F           ; Unknown 5xxx instruction
$AA8    $2526   CALL     $526            ; Call subroutine at 526
$AAA    $20C4   CALL     $0C4            ; Call subroutine at 0C4
$AAC    $C2A2   RND      V2, #A2         ; V2 = random & A2
$AAE    $D25F   DRW      V2, V5, #F      ; Draw 15-byte sprite at V2, V5
$AB0    $2AA1   CALL     $AA1            ; Call subroutine at AA1
$AB2    $1D90   JP       $D90            ; Jump to D90
$AB4    $2363   CALL     $363            ; Call subroutine at 363
$AB6    $1D86   JP       $D86            ; Jump to D86
$AB8    $0FA4   SYS      $FA4            ; System call to FA4
$ABA    $0C4C   SYS      $C4C            ; System call to C4C
$ABC    $0428   SYS      $428            ; System call to 428
$ABE    $EC92   UNKNOWN  $EC92           ; Unknown Exxx instruction
$AC0    $39EF   SE       V9, #EF         ; Skip if V9 == 239
$AC2    $537D   UNKNOWN  $537D           ; Unknown 5xxx instruction
$AC4    $28DD   CALL     $8DD            ; Call subroutine at 8DD
$AC6    $6566   LD       V5, #66         ; Load 102 into V5
$AC8    $23FE   CALL     $3FE            ; Call subroutine at 3FE
$ACA    $CDAA   RND      VD, #AA         ; VD = random & AA
$ACC    $0DB3   SYS      $DB3            ; System call to DB3
$ACE    $75F0   ADD      V5, #F0         ; Add 240 to V5
$AD0    $F023   UNKNOWN  F023            ; Unknown Fxxx instruction
$AD2    $97BB   UNKNOWN  $97BB           ; Unknown 9xxx instruction
$AD4    $371B   SE       V7, #1B         ; Skip if V7 == 27
$AD6    $D18F   DRW      V1, V8, #F      ; Draw 15-byte sprite at V1, V8
$AD8    $A375   LD       I, $375         ; Load 375 into I
$ADA    $FEDC   UNKNOWN  FEDC            ; Unknown Fxxx instruction
$ADC    $5B77   UNKNOWN  $5B77           ; Unknown 5xxx instruction
$ADE    $C16E   RND      V1, #6E         ; V1 = random & 6E
$AE0    $F91E   ADD      I, V9           ; I += V9
$AE2    $C3FD   RND      V3, #FD         ; V3 = random & FD
$AE4    $FA7C   UNKNOWN  FA7C            ; Unknown Fxxx instruction
$AE6    $6A23   LD       VA, #23         ; Load 35 into VA
$AE8    $572B   UNKNOWN  $572B           ; Unknown 5xxx instruction
$AEA    $4FB5   SNE      VF, #B5         ; Skip if VF != 181
$AEC    $E432   UNKNOWN  $E432           ; Unknown Exxx instruction
$AEE    $3787   SE       V7, #87         ; Skip if V7 == 135
$AF0    $46F6   SNE      V6, #F6         ; Skip if V6 != 246
$AF2    $9AE3   UNKNOWN  $9AE3           ; Unknown 9xxx instruction
$AF4    $E0C6   UNKNOWN  $E0C6           ; Unknown Exxx instruction
$AF6    $88C5   SUB      V8, VC          ; V8 -= VC, VF = !borrow
$AF8    $9783   UNKNOWN  $9783           ; Unknown 9xxx instruction
$AFA    $6387   LD       V3, #87         ; Load 135 into V3
$AFC    $5DC5   UNKNOWN  $5DC5           ; Unknown 5xxx instruction
$AFE    $A73B   LD       I, $73B         ; Load 73B into I
$B00    $CDD8   RND      VD, #D8         ; VD = random & D8
$B02    $4AD3   SNE      VA, #D3         ; Skip if VA != 211
$B04    $9154   UNKNOWN  $9154           ; Unknown 9xxx instruction
$B06    $EEB0   UNKNOWN  $EEB0           ; Unknown Exxx instruction
$B08    $7EA4   ADD      VE, #A4         ; Add 164 to VE
$B0A    $E743   UNKNOWN  $E743           ; Unknown Exxx instruction
$B0C    $1AFD   JP       $AFD            ; Jump to AFD
$B0E    $DBBA   DRW      VB, VB, #A      ; Draw 10-byte sprite at VB, VB
$B10    $CA7B   RND      VA, #7B         ; VA = random & 7B
$B12    $0D99   SYS      $D99            ; System call to D99
$B14    $7CDE   ADD      VC, #DE         ; Add 222 to VC
$B16    $87BE   SHL      V7              ; V7 <<= 1, VF = MSB
$B18    $2351   CALL     $351            ; Call subroutine at 351
$B1A    $8F9A   UNKNOWN  8F9A            ; Unknown 8xxx instruction
$B1C    $F719   UNKNOWN  F719            ; Unknown Fxxx instruction
$B1E    $E7CF   UNKNOWN  $E7CF           ; Unknown Exxx instruction
$B20    $67B2   LD       V7, #B2         ; Load 178 into V7
$B22    $1B8F   JP       $B8F            ; Jump to B8F
$B24    $91BC   UNKNOWN  $91BC           ; Unknown 9xxx instruction
$B26    $D88D   DRW      V8, V8, #D      ; Draw 13-byte sprite at V8, V8
$B28    $BD06   JP       V0, $D06        ; Jump to V0 + D06
$B2A    $1D32   JP       $D32            ; Jump to D32
$B2C    $AC8E   LD       I, $C8E         ; Load C8E into I
$B2E    $4131   SNE      V1, #31         ; Skip if V1 != 49
$B30    $03D3   SYS      $3D3            ; System call to 3D3
$B32    $14B0   JP       $4B0            ; Jump to 4B0
$B34    $7F0B   ADD      VF, #0B         ; Add 11 to VF
$B36    $0C25   SYS      $C25            ; System call to C25
$B38    $2A17   CALL     $A17            ; Call subroutine at A17
$B3A    $3C6C   SE       VC, #6C         ; Skip if VC == 108
$B3C    $130F   JP       $30F            ; Jump to 30F
$B3E    $14C5   JP       $4C5            ; Jump to 4C5
$B40    $5E34   UNKNOWN  $5E34           ; Unknown 5xxx instruction
$B42    $C714   RND      V7, #14         ; V7 = random & 14
$B44    $D06C   DRW      V0, V6, #C      ; Draw 12-byte sprite at V0, V6
$B46    $9557   UNKNOWN  $9557           ; Unknown 9xxx instruction
$B48    $7BF4   ADD      VB, #F4         ; Add 244 to VB
$B4A    $8A03   XOR      VA, V0          ; VA ^= V0
$B4C    $E914   UNKNOWN  $E914           ; Unknown Exxx instruction
$B4E    $660C   LD       V6, #0C         ; Load 12 into V6
$B50    $EE22   UNKNOWN  $EE22           ; Unknown Exxx instruction
$B52    $FF4B   UNKNOWN  FF4B            ; Unknown Fxxx instruction
$B54    $AEA8   LD       I, $EA8         ; Load EA8 into I
$B56    $785C   ADD      V8, #5C         ; Add 92 to V8
$B58    $C0BC   RND      V0, #BC         ; V0 = random & BC
$B5A    $A64F   LD       I, $64F         ; Load 64F into I
$B5C    $8A45   SUB      VA, V4          ; VA -= V4, VF = !borrow
$B5E    $E6F9   UNKNOWN  $E6F9           ; Unknown Exxx instruction
$B60    $0930   SYS      $930            ; System call to 930
$B62    $D7D1   DRW      V7, VD, #1      ; Draw 1-byte sprite at V7, VD
$B64    $C619   RND      V6, #19         ; V6 = random & 19
$B66    $1527   JP       $527            ; Jump to 527
$B68    $5F8D   UNKNOWN  $5F8D           ; Unknown 5xxx instruction
$B6A    $3B77   SE       VB, #77         ; Skip if VB == 119
$B6C    $FEDA   UNKNOWN  FEDA            ; Unknown Fxxx instruction
$B6E    $6BF6   LD       VB, #F6         ; Load 246 into VB
$B70    $ED55   UNKNOWN  $ED55           ; Unknown Exxx instruction
$B72    $666A   LD       V6, #6A         ; Load 106 into V6
$B74    $D5F2   DRW      V5, VF, #2      ; Draw 2-byte sprite at V5, VF
$B76    $7408   ADD      V4, #08         ; Add 8 to V4
$B78    $34A8   SE       V4, #A8         ; Skip if V4 == 168
$B7A    $8C17   SUBN     VC, V1          ; VC = V1 - VC, VF = !borrow
$B7C    $5698   UNKNOWN  $5698           ; Unknown 5xxx instruction
$B7E    $3323   SE       V3, #23         ; Skip if V3 == 35
$B80    $40C1   SNE      V0, #C1         ; Skip if V0 != 193
$B82    $49BE   SNE      V9, #BE         ; Skip if V9 != 190
$B84    $70C7   ADD      V0, #C7         ; Add 199 to V0
$B86    $F85B   UNKNOWN  F85B            ; Unknown Fxxx instruction
$B88    $1E28   JP       $E28            ; Jump to E28
$B8A    $995A   UNKNOWN  $995A           ; Unknown 9xxx instruction
$B8C    $3054   SE       V0, #54         ; Skip if V0 == 84
$B8E    $E145   UNKNOWN  $E145           ; Unknown Exxx instruction
$B90    $CB2F   RND      VB, #2F         ; VB = random & 2F
$B92    $4CEC   SNE      VC, #EC         ; Skip if VC != 236
$B94    $8A7D   UNKNOWN  8A7D            ; Unknown 8xxx instruction
$B96    $C9C0   RND      V9, #C0         ; V9 = random & C0
$B98    $BDE8   JP       V0, $DE8        ; Jump to V0 + DE8
$B9A    $61AF   LD       V1, #AF         ; Load 175 into V1
$B9C    $1AF6   JP       $AF6            ; Jump to AF6
$B9E    $D8E0   DRW      V8, VE, #0      ; Draw 0-byte sprite at V8, VE
$BA0    $8C37   SUBN     VC, V3          ; VC = V3 - VC, VF = !borrow
$BA2    $7280   ADD      V2, #80         ; Add 128 to V2
$BA4    $9A48   UNKNOWN  $9A48           ; Unknown 9xxx instruction
$BA6    $4D61   SNE      VD, #61         ; Skip if VD != 97
$BA8    $84C4   ADD      V4, VC          ; V4 += VC, VF = carry
$BAA    $2231   CALL     $231            ; Call subroutine at 231
$BAC    $D3AB   DRW      V3, VA, #B      ; Draw 11-byte sprite at V3, VA
$BAE    $0170   SYS      $170            ; System call to 170
$BB0    $0698   SYS      $698            ; System call to 698
$BB2    $B76C   JP       V0, $76C        ; Jump to V0 + 76C
$BB4    $A77E   LD       I, $77E         ; Load 77E into I
$BB6    $F672   UNKNOWN  F672            ; Unknown Fxxx instruction
$BB8    $F33F   UNKNOWN  F33F            ; Unknown Fxxx instruction
$BBA    $246A   CALL     $46A            ; Call subroutine at 46A
$BBC    $5C58   UNKNOWN  $5C58           ; Unknown 5xxx instruction
$BBE    $80F2   AND      V0, VF          ; V0 &= VF
$BC0    $A322   LD       I, $322         ; Load 322 into I
$BC2    $6140   LD       V1, #40         ; Load 64 into V1
$BC4    $5592   UNKNOWN  $5592           ; Unknown 5xxx instruction
$BC6    $5363   UNKNOWN  $5363           ; Unknown 5xxx instruction
$BC8    $9156   UNKNOWN  $9156           ; Unknown 9xxx instruction
$BCA    $7B7E   ADD      VB, #7E         ; Add 126 to VB
$BCC    $AF85   LD       I, $F85         ; Load F85 into I
$BCE    $46D0   SNE      V6, #D0         ; Skip if V6 != 208
$BD0    $C150   RND      V1, #50         ; V1 = random & 50
$BD2    $676F   LD       V7, #6F         ; Load 111 into V7
$BD4    $8AFE   SHL      VA              ; VA <<= 1, VF = MSB
$BD6    $6C87   LD       VC, #87         ; Load 135 into VC
$BD8    $9644   UNKNOWN  $9644           ; Unknown 9xxx instruction
$BDA    $908F   UNKNOWN  $908F           ; Unknown 9xxx instruction
$BDC    $4DE6   SNE      VD, #E6         ; Skip if VD != 230
$BDE    $2E0F   CALL     $E0F            ; Call subroutine at E0F
$BE0    $BF6B   JP       V0, $F6B        ; Jump to V0 + F6B
$BE2    $BD29   JP       V0, $D29        ; Jump to V0 + D29
$BE4    $E84B   UNKNOWN  $E84B           ; Unknown Exxx instruction
$BE6    $27F2   CALL     $7F2            ; Call subroutine at 7F2
$BE8    $73B6   ADD      V3, #B6         ; Add 182 to V3
$BEA    $6B13   LD       VB, #13         ; Load 19 into VB
$BEC    $2C08   CALL     $C08            ; Call subroutine at C08
$BEE    $27CC   CALL     $7CC            ; Call subroutine at 7CC
$BF0    $0628   SYS      $628            ; System call to 628
$BF2    $549D   UNKNOWN  $549D           ; Unknown 5xxx instruction
$BF4    $15F6   JP       $5F6            ; Jump to 5F6
$BF6    $BF15   JP       V0, $F15        ; Jump to V0 + F15
$BF8    $D4A0   DRW      V4, VA, #0      ; Draw 0-byte sprite at V4, VA
$BFA    $30F2   SE       V0, #F2         ; Skip if V0 == 242
$BFC    $28A5   CALL     $8A5            ; Call subroutine at 8A5
$BFE    $2291   CALL     $291            ; Call subroutine at 291
$C00    $E3BB   UNKNOWN  $E3BB           ; Unknown Exxx instruction
$C02    $C379   RND      V3, #79         ; V3 = random & 79
$C04    $5797   UNKNOWN  $5797           ; Unknown 5xxx instruction
$C06    $D086   DRW      V0, V8, #6      ; Draw 6-byte sprite at V0, V8
$C08    $9156   UNKNOWN  $9156           ; Unknown 9xxx instruction
$C0A    $94E3   UNKNOWN  $94E3           ; Unknown 9xxx instruction
$C0C    $791D   ADD      V9, #1D         ; Add 29 to V9
$C0E    $3180   SE       V1, #80         ; Skip if V1 == 128
$C10    $2916   CALL     $916            ; Call subroutine at 916
$C12    $BA50   JP       V0, $A50        ; Jump to V0 + A50
$C14    $F155   LD       [I], V1         ; Store V0-V1 at I
$C16    $1D0C   JP       $D0C            ; Jump to D0C
$C18    $56DB   UNKNOWN  $56DB           ; Unknown 5xxx instruction
$C1A    $3193   SE       V1, #93         ; Skip if V1 == 147
$C1C    $CF11   RND      VF, #11         ; VF = random & 11
$C1E    $CE48   RND      VE, #48         ; VE = random & 48
$C20    $3711   SE       V7, #11         ; Skip if V7 == 17
$C22    $515A   UNKNOWN  $515A           ; Unknown 5xxx instruction
$C24    $96B5   UNKNOWN  $96B5           ; Unknown 9xxx instruction
$C26    $C35E   RND      V3, #5E         ; V3 = random & 5E
$C28    $72B9   ADD      V2, #B9         ; Add 185 to V2
$C2A    $FE78   UNKNOWN  FE78            ; Unknown Fxxx instruction
$C2C    $08D2   SYS      $8D2            ; System call to 8D2
$C2E    $4BC9   SNE      VB, #C9         ; Skip if VB != 201
$C30    $0666   SYS      $666            ; System call to 666
$C32    $B0BE   JP       V0, $0BE        ; Jump to V0 + 0BE
$C34    $0524   SYS      $524            ; System call to 524
$C36    $CF0D   RND      VF, #0D         ; VF = random & 0D
$C38    $DC34   DRW      VC, V3, #4      ; Draw 4-byte sprite at VC, V3
$C3A    $C394   RND      V3, #94         ; V3 = random & 94
$C3C    $C5B3   RND      V5, #B3         ; V5 = random & B3
$C3E    $E771   UNKNOWN  $E771           ; Unknown Exxx instruction
$C40    $41B3   SNE      V1, #B3         ; Skip if V1 != 179
$C42    $6B99   LD       VB, #99         ; Load 153 into VB
$C44    $BF6F   JP       V0, $F6F        ; Jump to V0 + F6F
$C46    $910D   UNKNOWN  $910D           ; Unknown 9xxx instruction
$C48    $5489   UNKNOWN  $5489           ; Unknown 5xxx instruction
$C4A    $7819   ADD      V8, #19         ; Add 25 to V8
$C4C    $F310   UNKNOWN  F310            ; Unknown Fxxx instruction
$C4E    $B2C5   JP       V0, $2C5        ; Jump to V0 + 2C5
$C50    $C1F4   RND      V1, #F4         ; V1 = random & F4
$C52    $3902   SE       V9, #02         ; Skip if V9 == 2
$C54    $E901   UNKNOWN  $E901           ; Unknown Exxx instruction
$C56    $4143   SNE      V1, #43         ; Skip if V1 != 67
$C58    $57B7   UNKNOWN  $57B7           ; Unknown 5xxx instruction
$C5A    $5E51   UNKNOWN  $5E51           ; Unknown 5xxx instruction
$C5C    $D38F   DRW      V3, V8, #F      ; Draw 15-byte sprite at V3, V8
$C5E    $C338   RND      V3, #38         ; V3 = random & 38
$C60    $4A1B   SNE      VA, #1B         ; Skip if VA != 27
$C62    $6E51   LD       VE, #51         ; Load 81 into VE
$C64    $4FCA   SNE      VF, #CA         ; Skip if VF != 202
$C66    $CE2F   RND      VE, #2F         ; VE = random & 2F
$C68    $1CD7   JP       $CD7            ; Jump to CD7
$C6A    $1A28   JP       $A28            ; Jump to A28
$C6C    $CFDF   RND      VF, #DF         ; VF = random & DF
$C6E    $D972   DRW      V9, V7, #2      ; Draw 2-byte sprite at V9, V7
$C70    $ADA9   LD       I, $DA9         ; Load DA9 into I
$C72    $FADC   UNKNOWN  FADC            ; Unknown Fxxx instruction
$C74    $1A8C   JP       $A8C            ; Jump to A8C
$C76    $AA29   LD       I, $A29         ; Load A29 into I
$C78    $F6DD   UNKNOWN  F6DD            ; Unknown Fxxx instruction
$C7A    $4E7D   SNE      VE, #7D         ; Skip if VE != 125
$C7C    $BFC0   JP       V0, $FC0        ; Jump to V0 + FC0
$C7E    $52A0   SE       V2, VA          ; Skip if V2 == VA
$C80    $D231   DRW      V2, V3, #1      ; Draw 1-byte sprite at V2, V3
$C82    $7A3A   ADD      VA, #3A         ; Add 58 to VA
$C84    $6530   LD       V5, #30         ; Load 48 into V5
$C86    $F8CE   UNKNOWN  F8CE            ; Unknown Fxxx instruction
$C88    $D88C   DRW      V8, V8, #C      ; Draw 12-byte sprite at V8, V8
$C8A    $4587   SNE      V5, #87         ; Skip if V5 != 135
$C8C    $29E7   CALL     $9E7            ; Call subroutine at 9E7
$C8E    $4477   SNE      V4, #77         ; Skip if V4 != 119
$C90    $DE51   DRW      VE, V5, #1      ; Draw 1-byte sprite at VE, V5
$C92    $33EB   SE       V3, #EB         ; Skip if V3 == 235
$C94    $8969   UNKNOWN  8969            ; Unknown 8xxx instruction
$C96    $53F1   UNKNOWN  $53F1           ; Unknown 5xxx instruction
$C98    $F9CC   UNKNOWN  F9CC            ; Unknown Fxxx instruction
$C9A    $5196   UNKNOWN  $5196           ; Unknown 5xxx instruction
$C9C    $C519   RND      V5, #19         ; V5 = random & 19
$C9E    $E7B2   UNKNOWN  $E7B2           ; Unknown Exxx instruction
$CA0    $80A5   SUB      V0, VA          ; V0 -= VA, VF = !borrow
$CA2    $9B20   SNE      VB, V2          ; Skip if VB != V2
$CA4    $5E83   UNKNOWN  $5E83           ; Unknown 5xxx instruction
$CA6    $FE48   UNKNOWN  FE48            ; Unknown Fxxx instruction
$CA8    $21EB   CALL     $1EB            ; Call subroutine at 1EB
$CAA    $D805   DRW      V8, V0, #5      ; Draw 5-byte sprite at V8, V0
$CAC    $099F   SYS      $99F            ; System call to 99F
$CAE    $5A6A   UNKNOWN  $5A6A           ; Unknown 5xxx instruction
$CB0    $16E4   JP       $6E4            ; Jump to 6E4
$CB2    $D4E1   DRW      V4, VE, #1      ; Draw 1-byte sprite at V4, VE
$CB4    $1CB7   JP       $CB7            ; Jump to CB7
$CB6    $E503   UNKNOWN  $E503           ; Unknown Exxx instruction
$CB8    $134C   JP       $34C            ; Jump to 34C
$CBA    $3C5B   SE       VC, #5B         ; Skip if VC == 91
$CBC    $9442   UNKNOWN  $9442           ; Unknown 9xxx instruction
$CBE    $E12D   UNKNOWN  $E12D           ; Unknown Exxx instruction
$CC0    $C3AA   RND      V3, #AA         ; V3 = random & AA
$CC2    $1188   JP       $188            ; Jump to 188
$CC4    $0818   SYS      $818            ; System call to 818
$CC6    $9BE2   UNKNOWN  $9BE2           ; Unknown 9xxx instruction
$CC8    $F671   UNKNOWN  F671            ; Unknown Fxxx instruction
$CCA    $F62D   UNKNOWN  F62D            ; Unknown Fxxx instruction
$CCC    $64B2   LD       V4, #B2         ; Load 178 into V4
$CCE    $D72E   DRW      V7, V2, #E      ; Draw 14-byte sprite at V7, V2
$CD0    $950B   UNKNOWN  $950B           ; Unknown 9xxx instruction
$CD2    $9BB0   SNE      VB, VB          ; Skip if VB != VB
$CD4    $A8B8   LD       I, $8B8         ; Load 8B8 into I
$CD6    $8DE7   SUBN     VD, VE          ; VD = VE - VD, VF = !borrow
$CD8    $255F   CALL     $55F            ; Call subroutine at 55F
$CDA    $1E83   JP       $E83            ; Jump to E83
$CDC    $C4ED   RND      V4, #ED         ; V4 = random & ED
$CDE    $240E   CALL     $40E            ; Call subroutine at 40E
$CE0    $A30B   LD       I, $30B         ; Load 30B into I
$CE2    $4603   SNE      V6, #03         ; Skip if V6 != 3
$CE4    $9DF6   UNKNOWN  $9DF6           ; Unknown 9xxx instruction
$CE6    $47F9   SNE      V7, #F9         ; Skip if V7 != 249
$CE8    $0BF0   SYS      $BF0            ; System call to BF0
$CEA    $60A3   LD       V0, #A3         ; Load 163 into V0
$CEC    $0219   SYS      $219            ; System call to 219
$CEE    $049C   SYS      $49C            ; System call to 49C
$CF0    $C1E2   RND      V1, #E2         ; V1 = random & E2
$CF2    $2259   CALL     $259            ; Call subroutine at 259
$CF4    $DF3D   DRW      VF, V3, #D      ; Draw 13-byte sprite at VF, V3
$CF6    $F4A6   UNKNOWN  F4A6            ; Unknown Fxxx instruction
$CF8    $E75A   UNKNOWN  $E75A           ; Unknown Exxx instruction
$CFA    $BAE3   JP       V0, $AE3        ; Jump to V0 + AE3
$CFC    $B35E   JP       V0, $35E        ; Jump to V0 + 35E
$CFE    $B7B6   JP       V0, $7B6        ; Jump to V0 + 7B6
$D00    $E7A3   UNKNOWN  $E7A3           ; Unknown Exxx instruction
$D02    $4250   SNE      V2, #50         ; Skip if V2 != 80
$D04    $C15B   RND      V1, #5B         ; V1 = random & 5B
$D06    $6002   LD       V0, #02         ; Load 2 into V0
$D08    $F1F8   UNKNOWN  F1F8            ; Unknown Fxxx instruction
$D0A    $5A47   UNKNOWN  $5A47           ; Unknown 5xxx instruction
$D0C    $D862   DRW      V8, V6, #2      ; Draw 2-byte sprite at V8, V6
$D0E    $97EC   UNKNOWN  $97EC           ; Unknown 9xxx instruction
$D10    $DC34   DRW      VC, V3, #4      ; Draw 4-byte sprite at VC, V3
$D12    $0B5D   SYS      $B5D            ; System call to B5D
$D14    $BBE3   JP       V0, $BE3        ; Jump to V0 + BE3
$D16    $CAF9   RND      VA, #F9         ; VA = random & F9
$D18    $10F8   JP       $0F8            ; Jump to 0F8
$D1A    $4D93   SNE      VD, #93         ; Skip if VD != 147
$D1C    $C9F9   RND      V9, #F9         ; V9 = random & F9
$D1E    $FFC6   UNKNOWN  FFC6            ; Unknown Fxxx instruction
$D20    $179A   JP       $79A            ; Jump to 79A
$D22    $CBE0   RND      VB, #E0         ; VB = random & E0
$D24    $5103   UNKNOWN  $5103           ; Unknown 5xxx instruction
$D26    $4481   SNE      V4, #81         ; Skip if V4 != 129
$D28    $260C   CALL     $60C            ; Call subroutine at 60C
$D2A    $8E51   OR       VE, V5          ; VE |= V5
$D2C    $8F0C   UNKNOWN  8F0C            ; Unknown 8xxx instruction
$D2E    $D723   DRW      V7, V2, #3      ; Draw 3-byte sprite at V7, V2
$D30    $5B8C   UNKNOWN  $5B8C           ; Unknown 5xxx instruction
$D32    $F955   LD       [I], V9         ; Store V0-V9 at I
$D34    $8A5D   UNKNOWN  8A5D            ; Unknown 8xxx instruction
$D36    $6B47   LD       VB, #47         ; Load 71 into VB
$D38    $17DE   JP       $7DE            ; Jump to 7DE
$D3A    $0B70   SYS      $B70            ; System call to B70
$D3C    $86EF   UNKNOWN  86EF            ; Unknown 8xxx instruction
$D3E    $A355   LD       I, $355         ; Load 355 into I
$D40    $0BA7   SYS      $BA7            ; System call to BA7
$D42    $B842   JP       V0, $842        ; Jump to V0 + 842
$D44    $7F57   ADD      VF, #57         ; Add 87 to VF
$D46    $668C   LD       V6, #8C         ; Load 140 into V6
$D48    $EB8A   UNKNOWN  $EB8A           ; Unknown Exxx instruction
$D4A    $FF00   UNKNOWN  FF00            ; Unknown Fxxx instruction
$D4C    $1399   JP       $399            ; Jump to 399
$D4E    $A7C0   LD       I, $7C0         ; Load 7C0 into I
$D50    $D5C5   DRW      V5, VC, #5      ; Draw 5-byte sprite at V5, VC
$D52    $3EF7   SE       VE, #F7         ; Skip if VE == 247
$D54    $899E   SHL      V9              ; V9 <<= 1, VF = MSB
$D56    $91DD   UNKNOWN  $91DD           ; Unknown 9xxx instruction
$D58    $10FB   JP       $0FB            ; Jump to 0FB
$D5A    $4A90   SNE      VA, #90         ; Skip if VA != 144
$D5C    $0547   SYS      $547            ; System call to 547
$D5E    $A4F4   LD       I, $4F4         ; Load 4F4 into I
$D60    $4BD1   SNE      VB, #D1         ; Skip if VB != 209
$D62    $2F2C   CALL     $F2C            ; Call subroutine at F2C
$D64    $1A2B   JP       $A2B            ; Jump to A2B
$D66    $AA48   LD       I, $A48         ; Load A48 into I
$D68    $C49F   RND      V4, #9F         ; V4 = random & 9F
$D6A    $17D3   JP       $7D3            ; Jump to 7D3
$D6C    $F98A   UNKNOWN  F98A            ; Unknown Fxxx instruction
$D6E    $AB42   LD       I, $B42         ; Load B42 into I
$D70    $1E41   JP       $E41            ; Jump to E41
$D72    $60B0   LD       V0, #B0         ; Load 176 into V0
$D74    $EE8F   UNKNOWN  $EE8F           ; Unknown Exxx instruction
$D76    $4239   SNE      V2, #39         ; Skip if V2 != 57
$D78    $73CA   ADD      V3, #CA         ; Add 202 to V3
$D7A    $9C5B   UNKNOWN  $9C5B           ; Unknown 9xxx instruction
$D7C    $0BF8   SYS      $BF8            ; System call to BF8
$D7E    $9770   SNE      V7, V7          ; Skip if V7 != V7
$D80    $A1BA   LD       I, $1BA         ; Load 1BA into I
$D82    $A909   LD       I, $909         ; Load 909 into I
$D84    $1F21   JP       $F21            ; Jump to F21
$D86    $362A   SE       V6, #2A         ; Skip if V6 == 42
$D88    $798F   ADD      V9, #8F         ; Add 143 to V9
$D8A    $17C5   JP       $7C5            ; Jump to 7C5
$D8C    $1944   JP       $944            ; Jump to 944
$D8E    $CE28   RND      VE, #28         ; VE = random & 28
$D90    $3A85   SE       VA, #85         ; Skip if VA == 133
$D92    $2B04   CALL     $B04            ; Call subroutine at B04
$D94    $5487   UNKNOWN  $5487           ; Unknown 5xxx instruction
$D96    $E003   UNKNOWN  $E003           ; Unknown Exxx instruction
$D98    $1609   JP       $609            ; Jump to 609
$D9A    $0072   SYS      $072            ; System call to 072
$D9C    $BA72   JP       V0, $A72        ; Jump to V0 + A72
$D9E    $C400   RND      V4, #00         ; V4 = random & 00
$DA0    $EA7F   UNKNOWN  $EA7F           ; Unknown Exxx instruction
$DA2    $2FCA   CALL     $FCA            ; Call subroutine at FCA
$DA4    $238C   CALL     $38C            ; Call subroutine at 38C
$DA6    $56C7   UNKNOWN  $56C7           ; Unknown 5xxx instruction
$DA8    $D897   DRW      V8, V9, #7      ; Draw 7-byte sprite at V8, V9
$DAA    $6AF7   LD       VA, #F7         ; Load 247 into VA
$DAC    $C61E   RND      V6, #1E         ; V6 = random & 1E
$DAE    $E3C0   UNKNOWN  $E3C0           ; Unknown Exxx instruction
$DB0    $1CD0   JP       $CD0            ; Jump to CD0
$DB2    $D230   DRW      V2, V3, #0      ; Draw 0-byte sprite at V2, V3
$DB4    $28F6   CALL     $8F6            ; Call subroutine at 8F6
$DB6    $09B2   SYS      $9B2            ; System call to 9B2
$DB8    $2284   CALL     $284            ; Call subroutine at 284
$DBA    $2941   CALL     $941            ; Call subroutine at 941
$DBC    $414D   SNE      V1, #4D         ; Skip if V1 != 77
$DBE    $4F5B   SNE      VF, #5B         ; Skip if VF != 91
$DC0    $0CA0   SYS      $CA0            ; System call to CA0
$DC2    $1A32   JP       $A32            ; Jump to A32
$DC4    $4F5F   SNE      VF, #5F         ; Skip if VF != 95
$DC6    $0C4A   SYS      $C4A            ; System call to C4A
$DC8    $5E82   UNKNOWN  $5E82           ; Unknown 5xxx instruction
$DCA    $9C9C   UNKNOWN  $9C9C           ; Unknown 9xxx instruction
$DCC    $B07E   JP       V0, $07E        ; Jump to V0 + 07E
$DCE    $564F   UNKNOWN  $564F           ; Unknown 5xxx instruction
$DD0    $092F   SYS      $92F            ; System call to 92F
$DD2    $735D   ADD      V3, #5D         ; Add 93 to V3
$DD4    $F537   UNKNOWN  F537            ; Unknown Fxxx instruction
$DD6    $CA3D   RND      VA, #3D         ; VA = random & 3D
$DD8    $7710   ADD      V7, #10         ; Add 16 to V7
$DDA    $0F61   SYS      $F61            ; System call to F61
$DDC    $7A2E   ADD      VA, #2E         ; Add 46 to VA
$DDE    $CC9E   RND      VC, #9E         ; VC = random & 9E
$DE0    $CA70   RND      VA, #70         ; VA = random & 70
$DE2    $C65B   RND      V6, #5B         ; V6 = random & 5B
$DE4    $F574   UNKNOWN  F574            ; Unknown Fxxx instruction
$DE6    $CB79   RND      VB, #79         ; VB = random & 79
$DE8    $99C5   UNKNOWN  $99C5           ; Unknown 9xxx instruction
$DEA    $3DE2   SE       VD, #E2         ; Skip if VD == 226
$DEC    $6358   LD       V3, #58         ; Load 88 into V3
$DEE    $3244   SE       V2, #44         ; Skip if V2 == 68
$DF0    $1049   JP       $049            ; Jump to 049
$DF2    $4C00   SNE      VC, #00         ; Skip if VC != 0
$DF4    $5C0F   UNKNOWN  $5C0F           ; Unknown 5xxx instruction
$DF6    $C857   RND      V8, #57         ; V8 = random & 57
$DF8    $A753   LD       I, $753         ; Load 753 into I
$DFA    $3EFF   SE       VE, #FF         ; Skip if VE == 255
$DFC    $4C62   SNE      VC, #62         ; Skip if VC != 98
$DFE    $4987   SNE      V9, #87         ; Skip if V9 != 135
$E00    $98C8   UNKNOWN  $98C8           ; Unknown 9xxx instruction
$E02    $350C   SE       V5, #0C         ; Skip if V5 == 12
$E04    $9F67   UNKNOWN  $9F67           ; Unknown 9xxx instruction
$E06    $E2E8   UNKNOWN  $E2E8           ; Unknown Exxx instruction
$E08    $E677   UNKNOWN  $E677           ; Unknown Exxx instruction
$E0A    $F84B   UNKNOWN  F84B            ; Unknown Fxxx instruction
$E0C    $C916   RND      V9, #16         ; V9 = random & 16
$E0E    $B127   JP       V0, $127        ; Jump to V0 + 127
$E10    $9D81   UNKNOWN  $9D81           ; Unknown 9xxx instruction
$E12    $8219   UNKNOWN  8219            ; Unknown 8xxx instruction
$E14    $217A   CALL     $17A            ; Call subroutine at 17A
$E16    $8B1B   UNKNOWN  8B1B            ; Unknown 8xxx instruction
$E18    $8EBB   UNKNOWN  8EBB            ; Unknown 8xxx instruction
$E1A    $6392   LD       V3, #92         ; Load 146 into V3
$E1C    $AB2C   LD       I, $B2C         ; Load B2C into I
$E1E    $91A5   UNKNOWN  $91A5           ; Unknown 9xxx instruction
$E20    $5515   UNKNOWN  $5515           ; Unknown 5xxx instruction
$E22    $DA14   DRW      VA, V1, #4      ; Draw 4-byte sprite at VA, V1
$E24    $17A5   JP       $7A5            ; Jump to 7A5
$E26    $FFCA   UNKNOWN  FFCA            ; Unknown Fxxx instruction
$E28    $EDA6   UNKNOWN  $EDA6           ; Unknown Exxx instruction
$E2A    $0A7C   SYS      $A7C            ; System call to A7C
$E2C    $895D   UNKNOWN  895D            ; Unknown 8xxx instruction
$E2E    $3C14   SE       VC, #14         ; Skip if VC == 20
$E30    $D81F   DRW      V8, V1, #F      ; Draw 15-byte sprite at V8, V1
$E32    $71EA   ADD      V1, #EA         ; Add 234 to V1
$E34    $B1A9   JP       V0, $1A9        ; Jump to V0 + 1A9
$E36    $245D   CALL     $45D            ; Call subroutine at 45D
$E38    $27F3   CALL     $7F3            ; Call subroutine at 7F3
$E3A    $A7DA   LD       I, $7DA         ; Load 7DA into I
$E3C    $CD8E   RND      VD, #8E         ; VD = random & 8E
$E3E    $999C   UNKNOWN  $999C           ; Unknown 9xxx instruction
$E40    $9C39   UNKNOWN  $9C39           ; Unknown 9xxx instruction
$E42    $1955   JP       $955            ; Jump to 955
$E44    $C381   RND      V3, #81         ; V3 = random & 81
$E46    $9988   UNKNOWN  $9988           ; Unknown 9xxx instruction
$E48    $BFB2   JP       V0, $FB2        ; Jump to V0 + FB2
$E4A    $52E7   UNKNOWN  $52E7           ; Unknown 5xxx instruction
$E4C    $765C   ADD      V6, #5C         ; Add 92 to V6
$E4E    $32D8   SE       V2, #D8         ; Skip if V2 == 216
$E50    $407A   SNE      V0, #7A         ; Skip if V0 != 122
$E52    $6168   LD       V1, #68         ; Load 104 into V1
$E54    $DC72   DRW      VC, V7, #2      ; Draw 2-byte sprite at VC, V7
$E56    $2FE4   CALL     $FE4            ; Call subroutine at FE4
$E58    $81B5   SUB      V1, VB          ; V1 -= VB, VF = !borrow
$E5A    $2FD7   CALL     $FD7            ; Call subroutine at FD7
$E5C    $E926   UNKNOWN  $E926           ; Unknown Exxx instruction
$E5E    $2DA0   CALL     $DA0            ; Call subroutine at DA0
$E60    $03D0   SYS      $3D0            ; System call to 3D0
$E62    $6743   LD       V7, #43         ; Load 67 into V7
$E64    $0DC3   SYS      $DC3            ; System call to DC3
$E66    $3AB8   SE       VA, #B8         ; Skip if VA == 184
$E68    $0984   SYS      $984            ; System call to 984
$E6A    $2DFE   CALL     $DFE            ; Call subroutine at DFE
$E6C    $839B   UNKNOWN  839B            ; Unknown 8xxx instruction
$E6E    $E9B1   UNKNOWN  $E9B1           ; Unknown Exxx instruction
$E70    $C48A   RND      V4, #8A         ; V4 = random & 8A
$E72    $6B33   LD       VB, #33         ; Load 51 into VB
$E74    $9D74   UNKNOWN  $9D74           ; Unknown 9xxx instruction
$E76    $65E6   LD       V5, #E6         ; Load 230 into V5
$E78    $1E08   JP       $E08            ; Jump to E08
$E7A    $2D01   CALL     $D01            ; Call subroutine at D01
$E7C    $E0E4   UNKNOWN  $E0E4           ; Unknown Exxx instruction
$E7E    $2C9E   CALL     $C9E            ; Call subroutine at C9E
$E80    $1D80   JP       $D80            ; Jump to D80
$E82    $1D97   JP       $D97            ; Jump to D97
$E84    $927E   UNKNOWN  $927E           ; Unknown 9xxx instruction
$E86    $DE78   DRW      VE, V7, #8      ; Draw 8-byte sprite at VE, V7
$E88    $8313   XOR      V3, V1          ; V3 ^= V1
$E8A    $B6CF   JP       V0, $6CF        ; Jump to V0 + 6CF
$E8C    $A037   LD       I, $037         ; Load 037 into I
$E8E    $EF52   UNKNOWN  $EF52           ; Unknown Exxx instruction
$E90    $2234   CALL     $234            ; Call subroutine at 234
$E92    $F106   UNKNOWN  F106            ; Unknown Fxxx instruction
$E94    $2877   CALL     $877            ; Call subroutine at 877
$E96    $5AC4   UNKNOWN  $5AC4           ; Unknown 5xxx instruction
$E98    $1EBC   JP       $EBC            ; Jump to EBC
$E9A    $C9F2   RND      V9, #F2         ; V9 = random & F2
$E9C    $8170   LD       V1, V7          ; V1 = V7
$E9E    $5366   UNKNOWN  $5366           ; Unknown 5xxx instruction
$EA0    $DD54   DRW      VD, V5, #4      ; Draw 4-byte sprite at VD, V5
$EA2    $61CC   LD       V1, #CC         ; Load 204 into V1
$EA4    $7B93   ADD      VB, #93         ; Add 147 to VB
$EA6    $B0A5   JP       V0, $0A5        ; Jump to V0 + 0A5
$EA8    $10B8   JP       $0B8            ; Jump to 0B8
$EAA    $04BE   SYS      $4BE            ; System call to 4BE
$EAC    $CE36   RND      VE, #36         ; VE = random & 36
$EAE    $56FD   UNKNOWN  $56FD           ; Unknown 5xxx instruction
$EB0    $0437   SYS      $437            ; System call to 437
$EB2    $2092   CALL     $092            ; Call subroutine at 092
$EB4    $2EB4   CALL     $EB4            ; Call subroutine at EB4
$EB6    $37C0   SE       V7, #C0         ; Skip if V7 == 192
$EB8    $D106   DRW      V1, V0, #6      ; Draw 6-byte sprite at V1, V0
$EBA    $5115   UNKNOWN  $5115           ; Unknown 5xxx instruction
$EBC    $8BE0   LD       VB, VE          ; VB = VE
$EBE    $85B7   SUBN     V5, VB          ; V5 = VB - V5, VF = !borrow
$EC0    $3AD5   SE       VA, #D5         ; Skip if VA == 213
$EC2    $B712   JP       V0, $712        ; Jump to V0 + 712
$EC4    $ADCC   LD       I, $DCC         ; Load DCC into I
$EC6    $7FD0   ADD      VF, #D0         ; Add 208 to VF
$EC8    $8E5B   UNKNOWN  8E5B            ; Unknown 8xxx instruction
$ECA    $D0E3   DRW      V0, VE, #3      ; Draw 3-byte sprite at V0, VE
$ECC    $72DA   ADD      V2, #DA         ; Add 218 to V2
$ECE    $5ECB   UNKNOWN  $5ECB           ; Unknown 5xxx instruction
$ED0    $5450   SE       V4, V5          ; Skip if V4 == V5
$ED2    $F940   UNKNOWN  F940            ; Unknown Fxxx instruction
$ED4    $D5B4   DRW      V5, VB, #4      ; Draw 4-byte sprite at V5, VB
$ED6    $F113   UNKNOWN  F113            ; Unknown Fxxx instruction
$ED8    $BDF7   JP       V0, $DF7        ; Jump to V0 + DF7
$EDA    $8E08   UNKNOWN  8E08            ; Unknown 8xxx instruction
$EDC    $D374   DRW      V3, V7, #4      ; Draw 4-byte sprite at V3, V7
$EDE    $9CA6   UNKNOWN  $9CA6           ; Unknown 9xxx instruction
$EE0    $1AA6   JP       $AA6            ; Jump to AA6
$EE2    $BE01   JP       V0, $E01        ; Jump to V0 + E01
$EE4    $A554   LD       I, $554         ; Load 554 into I
$EE6    $C58A   RND      V5, #8A         ; V5 = random & 8A
$EE8    $A878   LD       I, $878         ; Load 878 into I
$EEA    $1534   JP       $534            ; Jump to 534
$EEC    $CD88   RND      VD, #88         ; VD = random & 88
$EEE    $226F   CALL     $26F            ; Call subroutine at 26F
$EF0    $E797   UNKNOWN  $E797           ; Unknown Exxx instruction
$EF2    $C079   RND      V0, #79         ; V0 = random & 79
$EF4    $4A80   SNE      VA, #80         ; Skip if VA != 128
$EF6    $D30E   DRW      V3, V0, #E      ; Draw 14-byte sprite at V3, V0
$EF8    $BE23   JP       V0, $E23        ; Jump to V0 + E23
$EFA    $3AA5   SE       VA, #A5         ; Skip if VA == 165
$EFC    $CEE7   RND      VE, #E7         ; VE = random & E7
$EFE    $11AD   JP       $1AD            ; Jump to 1AD
$F00    $70CF   ADD      V0, #CF         ; Add 207 to V0
$F02    $7A49   ADD      VA, #49         ; Add 73 to VA
$F04    $D33F   DRW      V3, V3, #F      ; Draw 15-byte sprite at V3, V3
$F06    $EEE0   UNKNOWN  $EEE0           ; Unknown Exxx instruction
$F08    $332F   SE       V3, #2F         ; Skip if V3 == 47
$F0A    $1D2F   JP       $D2F            ; Jump to D2F
$F0C    $560A   UNKNOWN  $560A           ; Unknown 5xxx instruction
$F0E    $46A7   SNE      V6, #A7         ; Skip if V6 != 167
$F10    $B6DD   JP       V0, $6DD        ; Jump to V0 + 6DD
$F12    $56D8   UNKNOWN  $56D8           ; Unknown 5xxx instruction
$F14    $2DA0   CALL     $DA0            ; Call subroutine at DA0
$F16    $335B   SE       V3, #5B         ; Skip if V3 == 91
$F18    $51B7   UNKNOWN  $51B7           ; Unknown 5xxx instruction
$F1A    $9DB1   UNKNOWN  $9DB1           ; Unknown 9xxx instruction
$F1C    $0823   SYS      $823            ; System call to 823
$F1E    $05C4   SYS      $5C4            ; System call to 5C4
$F20    $B31A   JP       V0, $31A        ; Jump to V0 + 31A
$F22    $3CA5   SE       VC, #A5         ; Skip if VC == 165
$F24    $0D66   SYS      $D66            ; System call to D66
$F26    $7976   ADD      V9, #76         ; Add 118 to V9
$F28    $93B1   UNKNOWN  $93B1           ; Unknown 9xxx instruction
$F2A    $176B   JP       $76B            ; Jump to 76B
$F2C    $2D15   CALL     $D15            ; Call subroutine at D15
$F2E    $20E7   CALL     $0E7            ; Call subroutine at 0E7
$F30    $CF86   RND      VF, #86         ; VF = random & 86
$F32    $F18B   UNKNOWN  F18B            ; Unknown Fxxx instruction
$F34    $224E   CALL     $24E            ; Call subroutine at 24E
$F36    $4C21   SNE      VC, #21         ; Skip if VC != 33
$F38    $880C   UNKNOWN  880C            ; Unknown 8xxx instruction
$F3A    $572E   UNKNOWN  $572E           ; Unknown 5xxx instruction
$F3C    $41B9   SNE      V1, #B9         ; Skip if V1 != 185
$F3E    $4246   SNE      V2, #46         ; Skip if V2 != 70
$F40    $95CE   UNKNOWN  $95CE           ; Unknown 9xxx instruction
$F42    $0FB0   SYS      $FB0            ; System call to FB0
$F44    $0C42   SYS      $C42            ; System call to C42
$F46    $8F24   ADD      VF, V2          ; VF += V2, VF = carry
$F48    $827F   UNKNOWN  827F            ; Unknown 8xxx instruction
$F4A    $0D5B   SYS      $D5B            ; System call to D5B
$F4C    $A3A2   LD       I, $3A2         ; Load 3A2 into I
$F4E    $CA1B   RND      VA, #1B         ; VA = random & 1B
$F50    $CF07   RND      VF, #07         ; VF = random & 07
$F52    $F3D3   UNKNOWN  F3D3            ; Unknown Fxxx instruction
$F54    $B027   JP       V0, $027        ; Jump to V0 + 027
$F56    $91A4   UNKNOWN  $91A4           ; Unknown 9xxx instruction
$F58    $BFE7   JP       V0, $FE7        ; Jump to V0 + FE7
$F5A    $F591   UNKNOWN  F591            ; Unknown Fxxx instruction
$F5C    $E9BF   UNKNOWN  $E9BF           ; Unknown Exxx instruction
$F5E    $6D4D   LD       VD, #4D         ; Load 77 into VD
$F60    $3775   SE       V7, #75         ; Skip if V7 == 117
$F62    $B4CE   JP       V0, $4CE        ; Jump to V0 + 4CE
$F64    $C4AF   RND      V4, #AF         ; V4 = random & AF
$F66    $6A2F   LD       VA, #2F         ; Load 47 into VA
$F68    $F208   UNKNOWN  F208            ; Unknown Fxxx instruction
$F6A    $21EE   CALL     $1EE            ; Call subroutine at 1EE
$F6C    $D5B3   DRW      V5, VB, #3      ; Draw 3-byte sprite at V5, VB
$F6E    $8157   SUBN     V1, V5          ; V1 = V5 - V1, VF = !borrow
$F70    $457C   SNE      V5, #7C         ; Skip if V5 != 124
$F72    $99F5   UNKNOWN  $99F5           ; Unknown 9xxx instruction
$F74    $DC16   DRW      VC, V1, #6      ; Draw 6-byte sprite at VC, V1
$F76    $4CE8   SNE      VC, #E8         ; Skip if VC != 232
$F78    $305A   SE       V0, #5A         ; Skip if V0 == 90
$F7A    $9D4E   UNKNOWN  $9D4E           ; Unknown 9xxx instruction
$F7C    $7520   ADD      V5, #20         ; Add 32 to V5
$F7E    $8824   ADD      V8, V2          ; V8 += V2, VF = carry
$F80    $08F7   SYS      $8F7            ; System call to 8F7
$F82    $47AA   SNE      V7, #AA         ; Skip if V7 != 170
$F84    $EFC2   UNKNOWN  $EFC2           ; Unknown Exxx instruction
$F86    $D41A   DRW      V4, V1, #A      ; Draw 10-byte sprite at V4, V1
$F88    $C975   RND      V9, #75         ; V9 = random & 75
$F8A    $2610   CALL     $610            ; Call subroutine at 610
$F8C    $FC9C   UNKNOWN  FC9C            ; Unknown Fxxx instruction
$F8E    $7930   ADD      V9, #30         ; Add 48 to V9
$F90    $A37B   LD       I, $37B         ; Load 37B into I
$F92    $D7F9   DRW      V7, VF, #9      ; Draw 9-byte sprite at V7, VF
$F94    $7CAC   ADD      VC, #AC         ; Add 172 to VC
$F96    $DE6A   DRW      VE, V6, #A      ; Draw 10-byte sprite at VE, V6
$F98    $2994   CALL     $994            ; Call subroutine at 994
$F9A    $FC4D   UNKNOWN  FC4D            ; Unknown Fxxx instruction
$F9C    $B004   JP       V0, $004        ; Jump to V0 + 004
$F9E    $4082   SNE      V0, #82         ; Skip if V0 != 130
$FA0    $CB80   RND      VB, #80         ; VB = random & 80
$FA2    $CF5C   RND      VF, #5C         ; VF = random & 5C
$FA4    $E667   UNKNOWN  $E667           ; Unknown Exxx instruction
$FA6    $85D7   SUBN     V5, VD          ; V5 = VD - V5, VF = !borrow
$FA8    $0018   SYS      $018            ; System call to 018
$FAA    $6562   LD       V5, #62         ; Load 98 into V5
$FAC    $8CE4   ADD      VC, VE          ; VC += VE, VF = carry
$FAE    $AC49   LD       I, $C49         ; Load C49 into I
$FB0    $BFB2   JP       V0, $FB2        ; Jump to V0 + FB2
$FB2    $9980   SNE      V9, V8          ; Skip if V9 != V8
$FB4    $FE50   UNKNOWN  FE50            ; Unknown Fxxx instruction
$FB6    $573C   UNKNOWN  $573C           ; Unknown 5xxx instruction
$FB8    $AE30   LD       I, $E30         ; Load E30 into I
$FBA    $DDE7   DRW      VD, VE, #7      ; Draw 7-byte sprite at VD, VE
$FBC    $E941   UNKNOWN  $E941           ; Unknown Exxx instruction
$FBE    $A474   LD       I, $474         ; Load 474 into I
$FC0    $1EDF   JP       $EDF            ; Jump to EDF
$FC2    $E4C9   UNKNOWN  $E4C9           ; Unknown Exxx instruction
$FC4    $9E50   SNE      VE, V5          ; Skip if VE != V5
$FC6    $07EB   SYS      $7EB            ; System call to 7EB
$FC8    $8A57   SUBN     VA, V5          ; VA = V5 - VA, VF = !borrow
$FCA    $F3AE   UNKNOWN  F3AE            ; Unknown Fxxx instruction
$FCC    $119F   JP       $19F            ; Jump to 19F
$FCE    $ADE7   LD       I, $DE7         ; Load DE7 into I
$FD0    $4CC6   SNE      VC, #C6         ; Skip if VC != 198
$FD2    $6CAE   LD       VC, #AE         ; Load 174 into VC
$FD4    $984C   UNKNOWN  $984C           ; Unknown 9xxx instruction
$FD6    $BE0D   JP       V0, $E0D        ; Jump to V0 + E0D
$FD8    $2060   CALL     $060            ; Call subroutine at 060
$FDA    $B61C   JP       V0, $61C        ; Jump to V0 + 61C
$FDC    $D7B9   DRW      V7, VB, #9      ; Draw 9-byte sprite at V7, VB
$FDE    $2A7F   CALL     $A7F            ; Call subroutine at A7F
$FE0    $B047   JP       V0, $047        ; Jump to V0 + 047
$FE2    $02E7   SYS      $2E7            ; System call to 2E7
$FE4    $72C6   ADD      V2, #C6         ; Add 198 to V2
$FE6    $31EA   SE       V1, #EA         ; Skip if V1 == 234
$FE8    $CBC1   RND      VB, #C1         ; VB = random & C1
$FEA    $2B09   CALL     $B09            ; Call subroutine at B09
$FEC    $5CDE   UNKNOWN  $5CDE           ; Unknown 5xxx instruction
$FEE    $BB2F   JP       V0, $B2F        ; Jump to V0 + B2F
$FF0    $DEA5   DRW      VE, VA, #5      ; Draw 5-byte sprite at VE, VA
$FF2    $439F   SNE      V3, #9F         ; Skip if V3 != 159
$FF4    $23A5   CALL     $3A5            ; Call subroutine at 3A5
$FF6    $1436   JP       $436            ; Jump to 436
$FF8    $DEC4   DRW      VE, VC, #4      ; Draw 4-byte sprite at VE, VC
$FFA    $DA44   DRW      VA, V4, #4      ; Draw 4-byte sprite at VA, V4
$FFC    $DC41   DRW      VC, V4, #1      ; Draw 1-byte sprite at VC, V4
$FFE    $9E96   UNKNOWN  $9E96           ; Unknown 9xxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 480 (26.8%)
  JP      : 248 (13.8%)
  LD      : 206 (11.5%)
  CALL    : 136 ( 7.6%)
  RND     : 126 ( 7.0%)
  SNE     : 115 ( 6.4%)
  SE      : 113 ( 6.3%)
  DRW     : 109 ( 6.1%)
  SYS     : 107 ( 6.0%)
  ADD     : 105 ( 5.9%)
  SUBN    :  12 ( 0.7%)
  SUB     :   8 ( 0.4%)
  AND     :   7 ( 0.4%)
  SHL     :   6 ( 0.3%)
  SHR     :   6 ( 0.3%)
  XOR     :   4 ( 0.2%)
  OR      :   3 ( 0.2%)
  SKNP    :   1 ( 0.1%)

Memory Operations: 311 (17.4%)
Arithmetic Operations: 139 (7.8%)
