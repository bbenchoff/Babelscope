
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B369D01_I18105_C7865_a6a9c1826cc7.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 369
Instance: 18105
Direction: descending
Final Array: [232, 216, 200, 184, 168, 152, 136, 120]
Operations: R:0 W:8 C:0 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 118
Sort Array References:
  $202: LD [I], V0 ; Store V0-V0 at I
  $210: LD I, $283 ; Load 283 into I
  $23E: LD I, $C71 ; Load C71 into I
  $270: LD I, $117 ; Load 117 into I
  $286: LD I, $A5D ; Load A5D into I
  $28C: LD I, $D56 ; Load D56 into I
  $29C: LD I, $438 ; Load 438 into I
  $2B8: LD I, $4F8 ; Load 4F8 into I
  $2BA: LD I, $C8A ; Load C8A into I
  $2BC: LD I, $279 ; Load 279 into I
  $2E4: LD I, $898 ; Load 898 into I
  $2F4: LD I, $898 ; Load 898 into I
  $304: LD I, $898 ; Load 898 into I
  $326: LD I, $6BB ; Load 6BB into I
  $34A: LD I, $DFF ; Load DFF into I
  $364: LD I, $FDF ; Load FDF into I
  $380: LD I, $7CD ; Load 7CD into I
  $3A0: LD I, $6B7 ; Load 6B7 into I
  $3D8: LD I, $72C ; Load 72C into I
  $3DC: LD I, $96E ; Load 96E into I
  $3E8: LD I, $68F ; Load 68F into I
  $3F8: LD I, $492 ; Load 492 into I
  $420: LD I, $4FF ; Load 4FF into I
  $448: LD I, $C75 ; Load C75 into I
  $494: LD I, $5F2 ; Load 5F2 into I
  $4A8: LD I, $83C ; Load 83C into I
  $4C2: LD I, $C3E ; Load C3E into I
  $4EC: LD I, $CDC ; Load CDC into I
  $4F4: LD I, $6B9 ; Load 6B9 into I
  $508: ADD I, VE ; I ADDRESS MANIPULATION
  $518: LD I, $038 ; Load 038 into I
  $51E: LD I, $18B ; Load 18B into I
  $542: LD I, $81B ; Load 81B into I
  $55A: LD I, $CA1 ; Load CA1 into I
  $570: LD I, $855 ; Load 855 into I
  $5A0: LD I, $A32 ; Load A32 into I
  $5B8: LD I, $5ED ; Load 5ED into I
  $5D6: LD I, $082 ; Load 082 into I
  $5DA: LD I, $F54 ; Load F54 into I
  $5F6: LD I, $621 ; Load 621 into I
  $628: LD I, $D7A ; Load D7A into I
  $680: LD I, $15C ; Load 15C into I
  $69C: LD I, $22A ; Load 22A into I
  $6A0: LD I, $90D ; Load 90D into I
  $6A4: LD I, $DDE ; Load DDE into I
  $6BA: LD I, $CEE ; Load CEE into I
  $6C8: LD I, $959 ; Load 959 into I
  $6DC: LD I, $047 ; Load 047 into I
  $6FE: LD I, $F32 ; Load F32 into I
  $71E: LD I, $084 ; Load 084 into I
  $732: LD I, $6AF ; Load 6AF into I
  $790: LD I, $8AE ; Load 8AE into I
  $792: LD I, $2FB ; Load 2FB into I
  $7B0: LD I, $477 ; Load 477 into I
  $7DE: LD I, $557 ; Load 557 into I
  $7E8: LD I, $B7B ; Load B7B into I
  $806: LD I, $61F ; Load 61F into I
  $810: LD I, $D0C ; Load D0C into I
  $854: LD I, $EFD ; Load EFD into I
  $884: LD I, $AA4 ; Load AA4 into I
  $892: LD I, $07B ; Load 07B into I
  $8B6: LD I, $908 ; Load 908 into I
  $8DC: LD I, $178 ; Load 178 into I
  $8F8: LD I, $675 ; Load 675 into I
  $91E: LD I, $7BB ; Load 7BB into I
  $92A: LD I, $B3A ; Load B3A into I
  $94C: LD I, $F4A ; Load F4A into I
  $954: LD I, $7CE ; Load 7CE into I
  $988: LD I, $04E ; Load 04E into I
  $98E: LD I, $D14 ; Load D14 into I
  $992: LD I, $354 ; Load 354 into I
  $9CA: LD I, $FD7 ; Load FD7 into I
  $9E2: LD I, $A06 ; Load A06 into I
  $A0A: LD I, $A8A ; Load A8A into I
  $A10: LD I, $E2E ; Load E2E into I
  $A16: LD I, $1A9 ; Load 1A9 into I
  $A1E: LD I, $BAF ; Load BAF into I
  $A42: LD I, $7B5 ; Load 7B5 into I
  $A60: LD I, $B0A ; Load B0A into I
  $A64: LD I, $5AC ; Load 5AC into I
  $A6C: LD I, $50A ; Load 50A into I
  $A7E: LD I, $6AB ; Load 6AB into I
  $AF2: LD I, $6C1 ; Load 6C1 into I
  $B1E: LD I, $539 ; Load 539 into I
  $B28: LD I, $EF8 ; Load EF8 into I
  $B44: LD I, $0EB ; Load 0EB into I
  $B66: LD I, $1DE ; Load 1DE into I
  $B92: LD I, $209 ; Load 209 into I
  $BC0: LD [I], V1 ; Store V0-V1 at I
  $BCA: LD I, $531 ; Load 531 into I
  $BF6: LD I, $B93 ; Load B93 into I
  $BFC: LD I, $30E ; Load 30E into I
  $C3A: LD I, $CB2 ; Load CB2 into I
  $C3E: LD I, $1D0 ; Load 1D0 into I
  $C42: LD I, $D99 ; Load D99 into I
  $C44: LD I, $8AD ; Load 8AD into I
  $C76: LD I, $BDD ; Load BDD into I
  $CFC: LD I, $A88 ; Load A88 into I
  $D18: LD I, $5CA ; Load 5CA into I
  $D4C: LD I, $34C ; Load 34C into I
  $D86: LD I, $940 ; Load 940 into I
  $DA8: LD I, $8C2 ; Load 8C2 into I
  $DC2: LD I, $8E8 ; Load 8E8 into I
  $DC8: LD I, $D52 ; Load D52 into I
  $DCE: LD I, $32D ; Load 32D into I
  $DDE: LD I, $F17 ; Load F17 into I
  $E18: LD I, $3E1 ; Load 3E1 into I
  $E8C: LD I, $78A ; Load 78A into I
  $EA8: LD I, $2F0 ; Load 2F0 into I
  $EE6: LD I, $55A ; Load 55A into I
  $EF0: LD I, $043 ; Load 043 into I
  $F5A: LD I, $4A9 ; Load 4A9 into I
  $F7A: LD I, $985 ; Load 985 into I
  $F98: LD I, $944 ; Load 944 into I
  $FAE: LD I, $43E ; Load 43E into I
  $FB2: LD I, $274 ; Load 274 into I
  $FD0: LD I, $571 ; Load 571 into I
  $FDC: LD I, $D30 ; Load D30 into I

CONTROL FLOW ANALYSIS:
Jumps: 198
Calls: 107
Branches: 252
Loops: 99
Loop Structures:
  $2A8 -> $0D2 (backward jump)
  $356 -> $1E0 (backward jump)
  $38C -> $12F (backward jump)
  $38E -> $155 (backward jump)
  $3A4 -> $1C1 (backward jump)
  $48C -> $00B (backward jump)
  $52E -> $163 (backward jump)
  $538 -> $15B (backward jump)
  $540 -> $238 (backward jump)
  $5A4 -> $1B7 (backward jump)
  $5C4 -> $5A5 (backward jump)
  $614 -> $1EA (backward jump)
  $64A -> $620 (backward jump)
  $6D0 -> $312 (backward jump)
  $70C -> $378 (backward jump)
  $764 -> $56F (backward jump)
  $778 -> $445 (backward jump)
  $780 -> $402 (backward jump)
  $7CA -> $7BA (backward jump)
  $7CE -> $58A (backward jump)
  $7F8 -> $269 (backward jump)
  $802 -> $575 (backward jump)
  $81E -> $322 (backward jump)
  $842 -> $703 (backward jump)
  $85A -> $434 (backward jump)
  $8CA -> $18F (backward jump)
  $8E2 -> $1B3 (backward jump)
  $8EC -> $454 (backward jump)
  $920 -> $717 (backward jump)
  $936 -> $79D (backward jump)
  $94A -> $017 (backward jump)
  $96A -> $20F (backward jump)
  $998 -> $151 (backward jump)
  $9AE -> $5DE (backward jump)
  $9DA -> $065 (backward jump)
  $9F2 -> $587 (backward jump)
  $A24 -> $4F3 (backward jump)
  $A46 -> $32F (backward jump)
  $AB6 -> $6A2 (backward jump)
  $ABE -> $118 (backward jump)
  $ACA -> $0D9 (backward jump)
  $AE4 -> $99C (backward jump)
  $B00 -> $A9A (backward jump)
  $B0A -> $9D5 (backward jump)
  $B24 -> $1CD (backward jump)
  $B2E -> $6DE (backward jump)
  $B4A -> $4A5 (backward jump)
  $B60 -> $B4E (backward jump)
  $B88 -> $541 (backward jump)
  $BAA -> $5A5 (backward jump)
  $BD2 -> $A43 (backward jump)
  $C38 -> $13D (backward jump)
  $C6E -> $468 (backward jump)
  $C88 -> $23E (backward jump)
  $C92 -> $74E (backward jump)
  $C9C -> $C49 (backward jump)
  $CBA -> $C77 (backward jump)
  $D14 -> $524 (backward jump)
  $D26 -> $ABD (backward jump)
  $D6C -> $856 (backward jump)
  $D7E -> $5C6 (backward jump)
  $D9A -> $034 (backward jump)
  $D9C -> $56B (backward jump)
  $DA4 -> $08D (backward jump)
  $DB2 -> $7C6 (backward jump)
  $DB8 -> $209 (backward jump)
  $DD2 -> $6A3 (backward jump)
  $DDA -> $D85 (backward jump)
  $DEE -> $767 (backward jump)
  $DF0 -> $744 (backward jump)
  $E0A -> $A1F (backward jump)
  $E2E -> $708 (backward jump)
  $E30 -> $E22 (backward jump)
  $E44 -> $DFE (backward jump)
  $E62 -> $641 (backward jump)
  $E82 -> $795 (backward jump)
  $E9A -> $1CC (backward jump)
  $E9E -> $06B (backward jump)
  $EBC -> $2A5 (backward jump)
  $EC4 -> $35B (backward jump)
  $EC6 -> $766 (backward jump)
  $ED8 -> $8CF (backward jump)
  $EE2 -> $D5D (backward jump)
  $F00 -> $1ED (backward jump)
  $F28 -> $D7B (backward jump)
  $F36 -> $834 (backward jump)
  $F42 -> $88A (backward jump)
  $F46 -> $A62 (backward jump)
  $F60 -> $3D2 (backward jump)
  $F64 -> $BA5 (backward jump)
  $F66 -> $E94 (backward jump)
  $F6E -> $F26 (backward jump)
  $F74 -> $17A (backward jump)
  $F7C -> $46C (backward jump)
  $F9A -> $ECA (backward jump)
  $FA8 -> $8B7 (backward jump)
  $FE0 -> $5F0 (backward jump)
  $FFA -> $2AC (backward jump)
  $FFE -> $03D (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $24D9   CALL     $4D9            ; Call subroutine at 4D9
$202    $F055   LD       [I], V0         ; Store V0-V0 at I
$204    $5A34   UNKNOWN  $5A34           ; Unknown 5xxx instruction
$206    $D210   DRW      V2, V1, #0      ; Draw 0-byte sprite at V2, V1
$208    $95B5   UNKNOWN  $95B5           ; Unknown 9xxx instruction
$20A    $3AC2   SE       VA, #C2         ; Skip if VA == 194
$20C    $B8D0   JP       V0, $8D0        ; Jump to V0 + 8D0
$20E    $05BF   SYS      $5BF            ; System call to 5BF
$210    $A283   LD       I, $283         ; Load 283 into I
$212    $C08A   RND      V0, #8A         ; V0 = random & 8A
$214    $2267   CALL     $267            ; Call subroutine at 267
$216    $468C   SNE      V6, #8C         ; Skip if V6 != 140
$218    $DECF   DRW      VE, VC, #F      ; Draw 15-byte sprite at VE, VC
$21A    $8616   SHR      V6              ; V6 >>= 1, VF = LSB
$21C    $0F4E   SYS      $F4E            ; System call to F4E
$21E    $6B19   LD       VB, #19         ; Load 25 into VB
$220    $8334   ADD      V3, V3          ; V3 += V3, VF = carry
$222    $BF4E   JP       V0, $F4E        ; Jump to V0 + F4E
$224    $20DC   CALL     $0DC            ; Call subroutine at 0DC
$226    $D190   DRW      V1, V9, #0      ; Draw 0-byte sprite at V1, V9
$228    $EE69   UNKNOWN  $EE69           ; Unknown Exxx instruction
$22A    $9EA6   UNKNOWN  $9EA6           ; Unknown 9xxx instruction
$22C    $2DCA   CALL     $DCA            ; Call subroutine at DCA
$22E    $370B   SE       V7, #0B         ; Skip if V7 == 11
$230    $4833   SNE      V8, #33         ; Skip if V8 != 51
$232    $9A12   UNKNOWN  $9A12           ; Unknown 9xxx instruction
$234    $9A2D   UNKNOWN  $9A2D           ; Unknown 9xxx instruction
$236    $E3B0   UNKNOWN  $E3B0           ; Unknown Exxx instruction
$238    $16C6   JP       $6C6            ; Jump to 6C6
$23A    $31C7   SE       V1, #C7         ; Skip if V1 == 199
$23C    $9669   UNKNOWN  $9669           ; Unknown 9xxx instruction
$23E    $AC71   LD       I, $C71         ; Load C71 into I
$240    $89E3   XOR      V9, VE          ; V9 ^= VE
$242    $7422   ADD      V4, #22         ; Add 34 to V4
$244    $90A9   UNKNOWN  $90A9           ; Unknown 9xxx instruction
$246    $29EC   CALL     $9EC            ; Call subroutine at 9EC
$248    $5635   UNKNOWN  $5635           ; Unknown 5xxx instruction
$24A    $12C7   JP       $2C7            ; Jump to 2C7
$24C    $C567   RND      V5, #67         ; V5 = random & 67
$24E    $2529   CALL     $529            ; Call subroutine at 529
$250    $BD31   JP       V0, $D31        ; Jump to V0 + D31
$252    $8631   OR       V6, V3          ; V6 |= V3
$254    $7EF9   ADD      VE, #F9         ; Add 249 to VE
$256    $EF6B   UNKNOWN  $EF6B           ; Unknown Exxx instruction
$258    $C73E   RND      V7, #3E         ; V7 = random & 3E
$25A    $F800   UNKNOWN  F800            ; Unknown Fxxx instruction
$25C    $04C0   SYS      $4C0            ; System call to 4C0
$25E    $FD28   UNKNOWN  FD28            ; Unknown Fxxx instruction
$260    $94D9   UNKNOWN  $94D9           ; Unknown 9xxx instruction
$262    $88BF   UNKNOWN  88BF            ; Unknown 8xxx instruction
$264    $6B47   LD       VB, #47         ; Load 71 into VB
$266    $724E   ADD      V2, #4E         ; Add 78 to V2
$268    $DF04   DRW      VF, V0, #4      ; Draw 4-byte sprite at VF, V0
$26A    $5EA4   UNKNOWN  $5EA4           ; Unknown 5xxx instruction
$26C    $8F6E   SHL      VF              ; VF <<= 1, VF = MSB
$26E    $FBE1   UNKNOWN  FBE1            ; Unknown Fxxx instruction
$270    $A117   LD       I, $117         ; Load 117 into I
$272    $F7B5   UNKNOWN  F7B5            ; Unknown Fxxx instruction
$274    $1B4E   JP       $B4E            ; Jump to B4E
$276    $40FD   SNE      V0, #FD         ; Skip if V0 != 253
$278    $B93A   JP       V0, $93A        ; Jump to V0 + 93A
$27A    $0689   SYS      $689            ; System call to 689
$27C    $D00B   DRW      V0, V0, #B      ; Draw 11-byte sprite at V0, V0
$27E    $9AE0   SNE      VA, VE          ; Skip if VA != VE
$280    $37BA   SE       V7, #BA         ; Skip if V7 == 186
$282    $E083   UNKNOWN  $E083           ; Unknown Exxx instruction
$284    $DC5D   DRW      VC, V5, #D      ; Draw 13-byte sprite at VC, V5
$286    $AA5D   LD       I, $A5D         ; Load A5D into I
$288    $EE4B   UNKNOWN  $EE4B           ; Unknown Exxx instruction
$28A    $3C98   SE       VC, #98         ; Skip if VC == 152
$28C    $AD56   LD       I, $D56         ; Load D56 into I
$28E    $17AD   JP       $7AD            ; Jump to 7AD
$290    $8C16   SHR      VC              ; VC >>= 1, VF = LSB
$292    $32D6   SE       V2, #D6         ; Skip if V2 == 214
$294    $0E9E   SYS      $E9E            ; System call to E9E
$296    $8B2D   UNKNOWN  8B2D            ; Unknown 8xxx instruction
$298    $BF53   JP       V0, $F53        ; Jump to V0 + F53
$29A    $7D6A   ADD      VD, #6A         ; Add 106 to VD
$29C    $A438   LD       I, $438         ; Load 438 into I
$29E    $7ACD   ADD      VA, #CD         ; Add 205 to VA
$2A0    $952C   UNKNOWN  $952C           ; Unknown 9xxx instruction
$2A2    $5CF7   UNKNOWN  $5CF7           ; Unknown 5xxx instruction
$2A4    $F3C3   UNKNOWN  F3C3            ; Unknown Fxxx instruction
$2A6    $9989   UNKNOWN  $9989           ; Unknown 9xxx instruction
$2A8    $B0D2   JP       V0, $0D2        ; Jump to V0 + 0D2
$2AA    $20EB   CALL     $0EB            ; Call subroutine at 0EB
$2AC    $D11A   DRW      V1, V1, #A      ; Draw 10-byte sprite at V1, V1
$2AE    $70E0   ADD      V0, #E0         ; Add 224 to V0
$2B0    $F1A3   UNKNOWN  F1A3            ; Unknown Fxxx instruction
$2B2    $1A60   JP       $A60            ; Jump to A60
$2B4    $1B57   JP       $B57            ; Jump to B57
$2B6    $DAAF   DRW      VA, VA, #F      ; Draw 15-byte sprite at VA, VA
$2B8    $A4F8   LD       I, $4F8         ; Load 4F8 into I
$2BA    $AC8A   LD       I, $C8A         ; Load C8A into I
$2BC    $A279   LD       I, $279         ; Load 279 into I
$2BE    $C85B   RND      V8, #5B         ; V8 = random & 5B
$2C0    $072A   SYS      $72A            ; System call to 72A
$2C2    $5C8B   UNKNOWN  $5C8B           ; Unknown 5xxx instruction
$2C4    $9C90   SNE      VC, V9          ; Skip if VC != V9
$2C6    $1A7E   JP       $A7E            ; Jump to A7E
$2C8    $678A   LD       V7, #8A         ; Load 138 into V7
$2CA    $1B5C   JP       $B5C            ; Jump to B5C
$2CC    $700A   ADD      V0, #0A         ; Add 10 to V0
$2CE    $4397   SNE      V3, #97         ; Skip if V3 != 151
$2D0    $CF41   RND      VF, #41         ; VF = random & 41
$2D2    $D1F7   DRW      V1, VF, #7      ; Draw 7-byte sprite at V1, VF
$2D4    $D798   DRW      V7, V9, #8      ; Draw 8-byte sprite at V7, V9
$2D6    $8878   UNKNOWN  8878            ; Unknown 8xxx instruction
$2D8    $6858   LD       V8, #58         ; Load 88 into V8
$2DA    $4838   SNE      V8, #38         ; Skip if V8 != 56
$2DC    $2818   CALL     $818            ; Call subroutine at 818
$2DE    $08F8   SYS      $8F8            ; System call to 8F8
$2E0    $E8D8   UNKNOWN  $E8D8           ; Unknown Exxx instruction
$2E2    $C8B8   RND      V8, #B8         ; V8 = random & B8
$2E4    $A898   LD       I, $898         ; Load 898 into I
$2E6    $8878   UNKNOWN  8878            ; Unknown 8xxx instruction
$2E8    $6858   LD       V8, #58         ; Load 88 into V8
$2EA    $4838   SNE      V8, #38         ; Skip if V8 != 56
$2EC    $2818   CALL     $818            ; Call subroutine at 818
$2EE    $08F8   SYS      $8F8            ; System call to 8F8
$2F0    $E8D8   UNKNOWN  $E8D8           ; Unknown Exxx instruction
$2F2    $C8B8   RND      V8, #B8         ; V8 = random & B8
$2F4    $A898   LD       I, $898         ; Load 898 into I
$2F6    $8878   UNKNOWN  8878            ; Unknown 8xxx instruction
$2F8    $6858   LD       V8, #58         ; Load 88 into V8
$2FA    $4838   SNE      V8, #38         ; Skip if V8 != 56
$2FC    $2818   CALL     $818            ; Call subroutine at 818
$2FE    $08F8   SYS      $8F8            ; System call to 8F8
$300    $E8D8   UNKNOWN  $E8D8           ; Unknown Exxx instruction
$302    $C8B8   RND      V8, #B8         ; V8 = random & B8
$304    $A898   LD       I, $898         ; Load 898 into I
$306    $8878   UNKNOWN  8878            ; Unknown 8xxx instruction
$308    $6858   LD       V8, #58         ; Load 88 into V8
$30A    $4838   SNE      V8, #38         ; Skip if V8 != 56
$30C    $BA10   JP       V0, $A10        ; Jump to V0 + A10
$30E    $808E   SHL      V0              ; V0 <<= 1, VF = MSB
$310    $1B06   JP       $B06            ; Jump to B06
$312    $455A   SNE      V5, #5A         ; Skip if V5 != 90
$314    $BE6E   JP       V0, $E6E        ; Jump to V0 + E6E
$316    $1A02   JP       $A02            ; Jump to A02
$318    $6950   LD       V9, #50         ; Load 80 into V9
$31A    $2561   CALL     $561            ; Call subroutine at 561
$31C    $7983   ADD      V9, #83         ; Add 131 to V9
$31E    $BB8D   JP       V0, $B8D        ; Jump to V0 + B8D
$320    $E7D3   UNKNOWN  $E7D3           ; Unknown Exxx instruction
$322    $5751   UNKNOWN  $5751           ; Unknown 5xxx instruction
$324    $93C1   UNKNOWN  $93C1           ; Unknown 9xxx instruction
$326    $A6BB   LD       I, $6BB         ; Load 6BB into I
$328    $8B18   UNKNOWN  8B18            ; Unknown 8xxx instruction
$32A    $EB25   UNKNOWN  $EB25           ; Unknown Exxx instruction
$32C    $1694   JP       $694            ; Jump to 694
$32E    $35DB   SE       V5, #DB         ; Skip if V5 == 219
$330    $B748   JP       V0, $748        ; Jump to V0 + 748
$332    $409D   SNE      V0, #9D         ; Skip if V0 != 157
$334    $6452   LD       V4, #52         ; Load 82 into V4
$336    $5398   UNKNOWN  $5398           ; Unknown 5xxx instruction
$338    $4959   SNE      V9, #59         ; Skip if V9 != 89
$33A    $66E5   LD       V6, #E5         ; Load 229 into V6
$33C    $208A   CALL     $08A            ; Call subroutine at 08A
$33E    $DB15   DRW      VB, V1, #5      ; Draw 5-byte sprite at VB, V1
$340    $2F83   CALL     $F83            ; Call subroutine at F83
$342    $3616   SE       V6, #16         ; Skip if V6 == 22
$344    $E0EE   UNKNOWN  $E0EE           ; Unknown Exxx instruction
$346    $8761   OR       V7, V6          ; V7 |= V6
$348    $49C8   SNE      V9, #C8         ; Skip if V9 != 200
$34A    $ADFF   LD       I, $DFF         ; Load DFF into I
$34C    $0AFE   SYS      $AFE            ; System call to AFE
$34E    $B55E   JP       V0, $55E        ; Jump to V0 + 55E
$350    $4C63   SNE      VC, #63         ; Skip if VC != 99
$352    $3F8E   SE       VF, #8E         ; Skip if VF == 142
$354    $3D4D   SE       VD, #4D         ; Skip if VD == 77
$356    $B1E0   JP       V0, $1E0        ; Jump to V0 + 1E0
$358    $15BD   JP       $5BD            ; Jump to 5BD
$35A    $4518   SNE      V5, #18         ; Skip if V5 != 24
$35C    $BB0F   JP       V0, $B0F        ; Jump to V0 + B0F
$35E    $D484   DRW      V4, V8, #4      ; Draw 4-byte sprite at V4, V8
$360    $8A62   AND      VA, V6          ; VA &= V6
$362    $64B1   LD       V4, #B1         ; Load 177 into V4
$364    $AFDF   LD       I, $FDF         ; Load FDF into I
$366    $EE2F   UNKNOWN  $EE2F           ; Unknown Exxx instruction
$368    $190D   JP       $90D            ; Jump to 90D
$36A    $B67F   JP       V0, $67F        ; Jump to V0 + 67F
$36C    $5E5B   UNKNOWN  $5E5B           ; Unknown 5xxx instruction
$36E    $C340   RND      V3, #40         ; V3 = random & 40
$370    $54A4   UNKNOWN  $54A4           ; Unknown 5xxx instruction
$372    $EE63   UNKNOWN  $EE63           ; Unknown Exxx instruction
$374    $8B9A   UNKNOWN  8B9A            ; Unknown 8xxx instruction
$376    $E0F0   UNKNOWN  $E0F0           ; Unknown Exxx instruction
$378    $34EA   SE       V4, #EA         ; Skip if V4 == 234
$37A    $588B   UNKNOWN  $588B           ; Unknown 5xxx instruction
$37C    $C8D1   RND      V8, #D1         ; V8 = random & D1
$37E    $1790   JP       $790            ; Jump to 790
$380    $A7CD   LD       I, $7CD         ; Load 7CD into I
$382    $8099   UNKNOWN  8099            ; Unknown 8xxx instruction
$384    $BFCB   JP       V0, $FCB        ; Jump to V0 + FCB
$386    $5F99   UNKNOWN  $5F99           ; Unknown 5xxx instruction
$388    $646B   LD       V4, #6B         ; Load 107 into V4
$38A    $BD7C   JP       V0, $D7C        ; Jump to V0 + D7C
$38C    $112F   JP       $12F            ; Jump to 12F
$38E    $B155   JP       V0, $155        ; Jump to V0 + 155
$390    $7F5F   ADD      VF, #5F         ; Add 95 to VF
$392    $69B1   LD       V9, #B1         ; Load 177 into V9
$394    $809A   UNKNOWN  809A            ; Unknown 8xxx instruction
$396    $5BD2   UNKNOWN  $5BD2           ; Unknown 5xxx instruction
$398    $33F2   SE       V3, #F2         ; Skip if V3 == 242
$39A    $3DD9   SE       VD, #D9         ; Skip if VD == 217
$39C    $C20B   RND      V2, #0B         ; V2 = random & 0B
$39E    $9F9E   UNKNOWN  $9F9E           ; Unknown 9xxx instruction
$3A0    $A6B7   LD       I, $6B7         ; Load 6B7 into I
$3A2    $22DD   CALL     $2DD            ; Call subroutine at 2DD
$3A4    $11C1   JP       $1C1            ; Jump to 1C1
$3A6    $B7CF   JP       V0, $7CF        ; Jump to V0 + 7CF
$3A8    $B4F5   JP       V0, $4F5        ; Jump to V0 + 4F5
$3AA    $3792   SE       V7, #92         ; Skip if V7 == 146
$3AC    $1BF7   JP       $BF7            ; Jump to BF7
$3AE    $4174   SNE      V1, #74         ; Skip if V1 != 116
$3B0    $BDA2   JP       V0, $DA2        ; Jump to V0 + DA2
$3B2    $C091   RND      V0, #91         ; V0 = random & 91
$3B4    $CD75   RND      VD, #75         ; VD = random & 75
$3B6    $967F   UNKNOWN  $967F           ; Unknown 9xxx instruction
$3B8    $6053   LD       V0, #53         ; Load 83 into V0
$3BA    $DB98   DRW      VB, V9, #8      ; Draw 8-byte sprite at VB, V9
$3BC    $EB5B   UNKNOWN  $EB5B           ; Unknown Exxx instruction
$3BE    $7927   ADD      V9, #27         ; Add 39 to V9
$3C0    $7672   ADD      V6, #72         ; Add 114 to V6
$3C2    $B9AD   JP       V0, $9AD        ; Jump to V0 + 9AD
$3C4    $359E   SE       V5, #9E         ; Skip if V5 == 158
$3C6    $4963   SNE      V9, #63         ; Skip if V9 != 99
$3C8    $F176   UNKNOWN  F176            ; Unknown Fxxx instruction
$3CA    $28D1   CALL     $8D1            ; Call subroutine at 8D1
$3CC    $FEAF   UNKNOWN  FEAF            ; Unknown Fxxx instruction
$3CE    $4F2E   SNE      VF, #2E         ; Skip if VF != 46
$3D0    $C64A   RND      V6, #4A         ; V6 = random & 4A
$3D2    $9F72   UNKNOWN  $9F72           ; Unknown 9xxx instruction
$3D4    $8342   AND      V3, V4          ; V3 &= V4
$3D6    $F3B5   UNKNOWN  F3B5            ; Unknown Fxxx instruction
$3D8    $A72C   LD       I, $72C         ; Load 72C into I
$3DA    $3489   SE       V4, #89         ; Skip if V4 == 137
$3DC    $A96E   LD       I, $96E         ; Load 96E into I
$3DE    $6C9D   LD       VC, #9D         ; Load 157 into VC
$3E0    $18C5   JP       $8C5            ; Jump to 8C5
$3E2    $5A63   UNKNOWN  $5A63           ; Unknown 5xxx instruction
$3E4    $5F62   UNKNOWN  $5F62           ; Unknown 5xxx instruction
$3E6    $509F   UNKNOWN  $509F           ; Unknown 5xxx instruction
$3E8    $A68F   LD       I, $68F         ; Load 68F into I
$3EA    $37B5   SE       V7, #B5         ; Skip if V7 == 181
$3EC    $5868   UNKNOWN  $5868           ; Unknown 5xxx instruction
$3EE    $5BCD   UNKNOWN  $5BCD           ; Unknown 5xxx instruction
$3F0    $8B7A   UNKNOWN  8B7A            ; Unknown 8xxx instruction
$3F2    $C1B3   RND      V1, #B3         ; V1 = random & B3
$3F4    $8AFF   UNKNOWN  8AFF            ; Unknown 8xxx instruction
$3F6    $FC8B   UNKNOWN  FC8B            ; Unknown Fxxx instruction
$3F8    $A492   LD       I, $492         ; Load 492 into I
$3FA    $335A   SE       V3, #5A         ; Skip if V3 == 90
$3FC    $E05E   UNKNOWN  $E05E           ; Unknown Exxx instruction
$3FE    $8653   XOR      V6, V5          ; V6 ^= V5
$400    $4623   SNE      V6, #23         ; Skip if V6 != 35
$402    $26E5   CALL     $6E5            ; Call subroutine at 6E5
$404    $94D9   UNKNOWN  $94D9           ; Unknown 9xxx instruction
$406    $46FA   SNE      V6, #FA         ; Skip if V6 != 250
$408    $7E1D   ADD      VE, #1D         ; Add 29 to VE
$40A    $8F99   UNKNOWN  8F99            ; Unknown 8xxx instruction
$40C    $081B   SYS      $81B            ; System call to 81B
$40E    $4478   SNE      V4, #78         ; Skip if V4 != 120
$410    $1B89   JP       $B89            ; Jump to B89
$412    $9DC9   UNKNOWN  $9DC9           ; Unknown 9xxx instruction
$414    $7323   ADD      V3, #23         ; Add 35 to V3
$416    $1FB8   JP       $FB8            ; Jump to FB8
$418    $9FCE   UNKNOWN  $9FCE           ; Unknown 9xxx instruction
$41A    $230C   CALL     $30C            ; Call subroutine at 30C
$41C    $2EBC   CALL     $EBC            ; Call subroutine at EBC
$41E    $745F   ADD      V4, #5F         ; Add 95 to V4
$420    $A4FF   LD       I, $4FF         ; Load 4FF into I
$422    $1808   JP       $808            ; Jump to 808
$424    $4782   SNE      V7, #82         ; Skip if V7 != 130
$426    $E5F3   UNKNOWN  $E5F3           ; Unknown Exxx instruction
$428    $1DE9   JP       $DE9            ; Jump to DE9
$42A    $2367   CALL     $367            ; Call subroutine at 367
$42C    $498E   SNE      V9, #8E         ; Skip if V9 != 142
$42E    $40DB   SNE      V0, #DB         ; Skip if V0 != 219
$430    $8D18   UNKNOWN  8D18            ; Unknown 8xxx instruction
$432    $19D3   JP       $9D3            ; Jump to 9D3
$434    $6690   LD       V6, #90         ; Load 144 into V6
$436    $5289   UNKNOWN  $5289           ; Unknown 5xxx instruction
$438    $F34D   UNKNOWN  F34D            ; Unknown Fxxx instruction
$43A    $8529   UNKNOWN  8529            ; Unknown 8xxx instruction
$43C    $854F   UNKNOWN  854F            ; Unknown 8xxx instruction
$43E    $0B86   SYS      $B86            ; System call to B86
$440    $64B6   LD       V4, #B6         ; Load 182 into V4
$442    $597F   UNKNOWN  $597F           ; Unknown 5xxx instruction
$444    $364B   SE       V6, #4B         ; Skip if V6 == 75
$446    $7E3A   ADD      VE, #3A         ; Add 58 to VE
$448    $AC75   LD       I, $C75         ; Load C75 into I
$44A    $1DA9   JP       $DA9            ; Jump to DA9
$44C    $F15B   UNKNOWN  F15B            ; Unknown Fxxx instruction
$44E    $FAA4   UNKNOWN  FAA4            ; Unknown Fxxx instruction
$450    $FA5E   UNKNOWN  FA5E            ; Unknown Fxxx instruction
$452    $3ED5   SE       VE, #D5         ; Skip if VE == 213
$454    $926A   UNKNOWN  $926A           ; Unknown 9xxx instruction
$456    $4402   SNE      V4, #02         ; Skip if V4 != 2
$458    $0D57   SYS      $D57            ; System call to D57
$45A    $52A3   UNKNOWN  $52A3           ; Unknown 5xxx instruction
$45C    $E832   UNKNOWN  $E832           ; Unknown Exxx instruction
$45E    $461D   SNE      V6, #1D         ; Skip if V6 != 29
$460    $2A99   CALL     $A99            ; Call subroutine at A99
$462    $226B   CALL     $26B            ; Call subroutine at 26B
$464    $844D   UNKNOWN  844D            ; Unknown 8xxx instruction
$466    $63DB   LD       V3, #DB         ; Load 219 into V3
$468    $BFFD   JP       V0, $FFD        ; Jump to V0 + FFD
$46A    $B651   JP       V0, $651        ; Jump to V0 + 651
$46C    $D556   DRW      V5, V5, #6      ; Draw 6-byte sprite at V5, V5
$46E    $7799   ADD      V7, #99         ; Add 153 to V7
$470    $F8D3   UNKNOWN  F8D3            ; Unknown Fxxx instruction
$472    $540B   UNKNOWN  $540B           ; Unknown 5xxx instruction
$474    $CE28   RND      VE, #28         ; VE = random & 28
$476    $6CD8   LD       VC, #D8         ; Load 216 into VC
$478    $2559   CALL     $559            ; Call subroutine at 559
$47A    $8B37   SUBN     VB, V3          ; VB = V3 - VB, VF = !borrow
$47C    $E8B3   UNKNOWN  $E8B3           ; Unknown Exxx instruction
$47E    $4D01   SNE      VD, #01         ; Skip if VD != 1
$480    $6E22   LD       VE, #22         ; Load 34 into VE
$482    $2D3E   CALL     $D3E            ; Call subroutine at D3E
$484    $F527   UNKNOWN  F527            ; Unknown Fxxx instruction
$486    $6B5E   LD       VB, #5E         ; Load 94 into VB
$488    $CB28   RND      VB, #28         ; VB = random & 28
$48A    $3DC3   SE       VD, #C3         ; Skip if VD == 195
$48C    $B00B   JP       V0, $00B        ; Jump to V0 + 00B
$48E    $196C   JP       $96C            ; Jump to 96C
$490    $935A   UNKNOWN  $935A           ; Unknown 9xxx instruction
$492    $D21B   DRW      V2, V1, #B      ; Draw 11-byte sprite at V2, V1
$494    $A5F2   LD       I, $5F2         ; Load 5F2 into I
$496    $3B40   SE       VB, #40         ; Skip if VB == 64
$498    $6A47   LD       VA, #47         ; Load 71 into VA
$49A    $BEF2   JP       V0, $EF2        ; Jump to V0 + EF2
$49C    $941E   UNKNOWN  $941E           ; Unknown 9xxx instruction
$49E    $C82C   RND      V8, #2C         ; V8 = random & 2C
$4A0    $3FC8   SE       VF, #C8         ; Skip if VF == 200
$4A2    $DBA5   DRW      VB, VA, #5      ; Draw 5-byte sprite at VB, VA
$4A4    $D273   DRW      V2, V7, #3      ; Draw 3-byte sprite at V2, V7
$4A6    $7294   ADD      V2, #94         ; Add 148 to V2
$4A8    $A83C   LD       I, $83C         ; Load 83C into I
$4AA    $0B6E   SYS      $B6E            ; System call to B6E
$4AC    $053C   SYS      $53C            ; System call to 53C
$4AE    $155E   JP       $55E            ; Jump to 55E
$4B0    $3076   SE       V0, #76         ; Skip if V0 == 118
$4B2    $6DE2   LD       VD, #E2         ; Load 226 into VD
$4B4    $4139   SNE      V1, #39         ; Skip if V1 != 57
$4B6    $F3E1   UNKNOWN  F3E1            ; Unknown Fxxx instruction
$4B8    $0432   SYS      $432            ; System call to 432
$4BA    $C939   RND      V9, #39         ; V9 = random & 39
$4BC    $6EF5   LD       VE, #F5         ; Load 245 into VE
$4BE    $0531   SYS      $531            ; System call to 531
$4C0    $FD2D   UNKNOWN  FD2D            ; Unknown Fxxx instruction
$4C2    $AC3E   LD       I, $C3E         ; Load C3E into I
$4C4    $1564   JP       $564            ; Jump to 564
$4C6    $9D20   SNE      VD, V2          ; Skip if VD != V2
$4C8    $3E1A   SE       VE, #1A         ; Skip if VE == 26
$4CA    $76C7   ADD      V6, #C7         ; Add 199 to V6
$4CC    $CDE6   RND      VD, #E6         ; VD = random & E6
$4CE    $CB87   RND      VB, #87         ; VB = random & 87
$4D0    $6B56   LD       VB, #56         ; Load 86 into VB
$4D2    $2F38   CALL     $F38            ; Call subroutine at F38
$4D4    $631C   LD       V3, #1C         ; Load 28 into V3
$4D6    $3480   SE       V4, #80         ; Skip if V4 == 128
$4D8    $3F94   SE       VF, #94         ; Skip if VF == 148
$4DA    $43AA   SNE      V3, #AA         ; Skip if V3 != 170
$4DC    $9398   UNKNOWN  $9398           ; Unknown 9xxx instruction
$4DE    $7D7B   ADD      VD, #7B         ; Add 123 to VD
$4E0    $5B8F   UNKNOWN  $5B8F           ; Unknown 5xxx instruction
$4E2    $E9D0   UNKNOWN  $E9D0           ; Unknown Exxx instruction
$4E4    $3A66   SE       VA, #66         ; Skip if VA == 102
$4E6    $550F   UNKNOWN  $550F           ; Unknown 5xxx instruction
$4E8    $5773   UNKNOWN  $5773           ; Unknown 5xxx instruction
$4EA    $3992   SE       V9, #92         ; Skip if V9 == 146
$4EC    $ACDC   LD       I, $CDC         ; Load CDC into I
$4EE    $DAB5   DRW      VA, VB, #5      ; Draw 5-byte sprite at VA, VB
$4F0    $0A3E   SYS      $A3E            ; System call to A3E
$4F2    $966B   UNKNOWN  $966B           ; Unknown 9xxx instruction
$4F4    $A6B9   LD       I, $6B9         ; Load 6B9 into I
$4F6    $0EA5   SYS      $EA5            ; System call to EA5
$4F8    $4454   SNE      V4, #54         ; Skip if V4 != 84
$4FA    $1658   JP       $658            ; Jump to 658
$4FC    $5DE6   UNKNOWN  $5DE6           ; Unknown 5xxx instruction
$4FE    $5F51   UNKNOWN  $5F51           ; Unknown 5xxx instruction
$500    $4DC1   SNE      VD, #C1         ; Skip if VD != 193
$502    $1DB1   JP       $DB1            ; Jump to DB1
$504    $5325   UNKNOWN  $5325           ; Unknown 5xxx instruction
$506    $8335   SUB      V3, V3          ; V3 -= V3, VF = !borrow
$508    $FE1E   ADD      I, VE           ; I += VE
$50A    $09CA   SYS      $9CA            ; System call to 9CA
$50C    $2393   CALL     $393            ; Call subroutine at 393
$50E    $37D2   SE       V7, #D2         ; Skip if V7 == 210
$510    $FF9F   UNKNOWN  FF9F            ; Unknown Fxxx instruction
$512    $9E1B   UNKNOWN  $9E1B           ; Unknown 9xxx instruction
$514    $7D0E   ADD      VD, #0E         ; Add 14 to VD
$516    $1E60   JP       $E60            ; Jump to E60
$518    $A038   LD       I, $038         ; Load 038 into I
$51A    $EE00   UNKNOWN  $EE00           ; Unknown Exxx instruction
$51C    $7C2D   ADD      VC, #2D         ; Add 45 to VC
$51E    $A18B   LD       I, $18B         ; Load 18B into I
$520    $6A4C   LD       VA, #4C         ; Load 76 into VA
$522    $3891   SE       V8, #91         ; Skip if V8 == 145
$524    $167E   JP       $67E            ; Jump to 67E
$526    $CC7E   RND      VC, #7E         ; VC = random & 7E
$528    $98A4   UNKNOWN  $98A4           ; Unknown 9xxx instruction
$52A    $DDB8   DRW      VD, VB, #8      ; Draw 8-byte sprite at VD, VB
$52C    $0F09   SYS      $F09            ; System call to F09
$52E    $B163   JP       V0, $163        ; Jump to V0 + 163
$530    $09B9   SYS      $9B9            ; System call to 9B9
$532    $8328   UNKNOWN  8328            ; Unknown 8xxx instruction
$534    $F6DF   UNKNOWN  F6DF            ; Unknown Fxxx instruction
$536    $2126   CALL     $126            ; Call subroutine at 126
$538    $115B   JP       $15B            ; Jump to 15B
$53A    $E395   UNKNOWN  $E395           ; Unknown Exxx instruction
$53C    $237A   CALL     $37A            ; Call subroutine at 37A
$53E    $1934   JP       $934            ; Jump to 934
$540    $1238   JP       $238            ; Jump to 238
$542    $A81B   LD       I, $81B         ; Load 81B into I
$544    $4033   SNE      V0, #33         ; Skip if V0 != 51
$546    $F55C   UNKNOWN  F55C            ; Unknown Fxxx instruction
$548    $EF09   UNKNOWN  $EF09           ; Unknown Exxx instruction
$54A    $34F7   SE       V4, #F7         ; Skip if V4 == 247
$54C    $D62D   DRW      V6, V2, #D      ; Draw 13-byte sprite at V6, V2
$54E    $19DD   JP       $9DD            ; Jump to 9DD
$550    $0F6C   SYS      $F6C            ; System call to F6C
$552    $F967   UNKNOWN  F967            ; Unknown Fxxx instruction
$554    $795A   ADD      V9, #5A         ; Add 90 to V9
$556    $C028   RND      V0, #28         ; V0 = random & 28
$558    $95F5   UNKNOWN  $95F5           ; Unknown 9xxx instruction
$55A    $ACA1   LD       I, $CA1         ; Load CA1 into I
$55C    $9B5B   UNKNOWN  $9B5B           ; Unknown 9xxx instruction
$55E    $C6E3   RND      V6, #E3         ; V6 = random & E3
$560    $F9D3   UNKNOWN  F9D3            ; Unknown Fxxx instruction
$562    $5E18   UNKNOWN  $5E18           ; Unknown 5xxx instruction
$564    $F506   UNKNOWN  F506            ; Unknown Fxxx instruction
$566    $5BE5   UNKNOWN  $5BE5           ; Unknown 5xxx instruction
$568    $FF24   UNKNOWN  FF24            ; Unknown Fxxx instruction
$56A    $99EC   UNKNOWN  $99EC           ; Unknown 9xxx instruction
$56C    $CEAE   RND      VE, #AE         ; VE = random & AE
$56E    $E7F8   UNKNOWN  $E7F8           ; Unknown Exxx instruction
$570    $A855   LD       I, $855         ; Load 855 into I
$572    $54CC   UNKNOWN  $54CC           ; Unknown 5xxx instruction
$574    $91C3   UNKNOWN  $91C3           ; Unknown 9xxx instruction
$576    $1636   JP       $636            ; Jump to 636
$578    $FF0B   UNKNOWN  FF0B            ; Unknown Fxxx instruction
$57A    $64B8   LD       V4, #B8         ; Load 184 into V4
$57C    $FC86   UNKNOWN  FC86            ; Unknown Fxxx instruction
$57E    $BAC7   JP       V0, $AC7        ; Jump to V0 + AC7
$580    $FD03   UNKNOWN  FD03            ; Unknown Fxxx instruction
$582    $F45D   UNKNOWN  F45D            ; Unknown Fxxx instruction
$584    $046D   SYS      $46D            ; System call to 46D
$586    $9630   SNE      V6, V3          ; Skip if V6 != V3
$588    $508E   UNKNOWN  $508E           ; Unknown 5xxx instruction
$58A    $DF0D   DRW      VF, V0, #D      ; Draw 13-byte sprite at VF, V0
$58C    $7C40   ADD      VC, #40         ; Add 64 to VC
$58E    $C07E   RND      V0, #7E         ; V0 = random & 7E
$590    $2174   CALL     $174            ; Call subroutine at 174
$592    $B656   JP       V0, $656        ; Jump to V0 + 656
$594    $B93A   JP       V0, $93A        ; Jump to V0 + 93A
$596    $8BEB   UNKNOWN  8BEB            ; Unknown 8xxx instruction
$598    $8655   SUB      V6, V5          ; V6 -= V5, VF = !borrow
$59A    $90A1   UNKNOWN  $90A1           ; Unknown 9xxx instruction
$59C    $7B14   ADD      VB, #14         ; Add 20 to VB
$59E    $C604   RND      V6, #04         ; V6 = random & 04
$5A0    $AA32   LD       I, $A32         ; Load A32 into I
$5A2    $1DEC   JP       $DEC            ; Jump to DEC
$5A4    $B1B7   JP       V0, $1B7        ; Jump to V0 + 1B7
$5A6    $3DC0   SE       VD, #C0         ; Skip if VD == 192
$5A8    $4DB9   SNE      VD, #B9         ; Skip if VD != 185
$5AA    $5CDF   UNKNOWN  $5CDF           ; Unknown 5xxx instruction
$5AC    $046A   SYS      $46A            ; System call to 46A
$5AE    $69BA   LD       V9, #BA         ; Load 186 into V9
$5B0    $5954   UNKNOWN  $5954           ; Unknown 5xxx instruction
$5B2    $D67F   DRW      V6, V7, #F      ; Draw 15-byte sprite at V6, V7
$5B4    $5052   UNKNOWN  $5052           ; Unknown 5xxx instruction
$5B6    $49A6   SNE      V9, #A6         ; Skip if V9 != 166
$5B8    $A5ED   LD       I, $5ED         ; Load 5ED into I
$5BA    $81B2   AND      V1, VB          ; V1 &= VB
$5BC    $8A36   SHR      VA              ; VA >>= 1, VF = LSB
$5BE    $042D   SYS      $42D            ; System call to 42D
$5C0    $07C5   SYS      $7C5            ; System call to 7C5
$5C2    $8186   SHR      V1              ; V1 >>= 1, VF = LSB
$5C4    $15A5   JP       $5A5            ; Jump to 5A5
$5C6    $E847   UNKNOWN  $E847           ; Unknown Exxx instruction
$5C8    $FE46   UNKNOWN  FE46            ; Unknown Fxxx instruction
$5CA    $07A6   SYS      $7A6            ; System call to 7A6
$5CC    $C769   RND      V7, #69         ; V7 = random & 69
$5CE    $DAB2   DRW      VA, VB, #2      ; Draw 2-byte sprite at VA, VB
$5D0    $2F85   CALL     $F85            ; Call subroutine at F85
$5D2    $FB70   UNKNOWN  FB70            ; Unknown Fxxx instruction
$5D4    $9903   UNKNOWN  $9903           ; Unknown 9xxx instruction
$5D6    $A082   LD       I, $082         ; Load 082 into I
$5D8    $376E   SE       V7, #6E         ; Skip if V7 == 110
$5DA    $AF54   LD       I, $F54         ; Load F54 into I
$5DC    $4D52   SNE      VD, #52         ; Skip if VD != 82
$5DE    $63F6   LD       V3, #F6         ; Load 246 into V3
$5E0    $D355   DRW      V3, V5, #5      ; Draw 5-byte sprite at V3, V5
$5E2    $392E   SE       V9, #2E         ; Skip if V9 == 46
$5E4    $7FD0   ADD      VF, #D0         ; Add 208 to VF
$5E6    $3030   SE       V0, #30         ; Skip if V0 == 48
$5E8    $1F44   JP       $F44            ; Jump to F44
$5EA    $E670   UNKNOWN  $E670           ; Unknown Exxx instruction
$5EC    $0C73   SYS      $C73            ; System call to C73
$5EE    $B655   JP       V0, $655        ; Jump to V0 + 655
$5F0    $D80D   DRW      V8, V0, #D      ; Draw 13-byte sprite at V8, V0
$5F2    $515B   UNKNOWN  $515B           ; Unknown 5xxx instruction
$5F4    $25A6   CALL     $5A6            ; Call subroutine at 5A6
$5F6    $A621   LD       I, $621         ; Load 621 into I
$5F8    $8653   XOR      V6, V5          ; V6 ^= V5
$5FA    $87C9   UNKNOWN  87C9            ; Unknown 8xxx instruction
$5FC    $E715   UNKNOWN  $E715           ; Unknown Exxx instruction
$5FE    $913E   UNKNOWN  $913E           ; Unknown 9xxx instruction
$600    $9809   UNKNOWN  $9809           ; Unknown 9xxx instruction
$602    $239C   CALL     $39C            ; Call subroutine at 39C
$604    $7730   ADD      V7, #30         ; Add 48 to V7
$606    $9590   SNE      V5, V9          ; Skip if V5 != V9
$608    $510C   UNKNOWN  $510C           ; Unknown 5xxx instruction
$60A    $1A9F   JP       $A9F            ; Jump to A9F
$60C    $0162   SYS      $162            ; System call to 162
$60E    $BCF8   JP       V0, $CF8        ; Jump to V0 + CF8
$610    $0A4B   SYS      $A4B            ; System call to A4B
$612    $B8E3   JP       V0, $8E3        ; Jump to V0 + 8E3
$614    $11EA   JP       $1EA            ; Jump to 1EA
$616    $3A68   SE       VA, #68         ; Skip if VA == 104
$618    $804E   SHL      V0              ; V0 <<= 1, VF = MSB
$61A    $22F0   CALL     $2F0            ; Call subroutine at 2F0
$61C    $DBBB   DRW      VB, VB, #B      ; Draw 11-byte sprite at VB, VB
$61E    $89F8   UNKNOWN  89F8            ; Unknown 8xxx instruction
$620    $D1E7   DRW      V1, VE, #7      ; Draw 7-byte sprite at V1, VE
$622    $6E47   LD       VE, #47         ; Load 71 into VE
$624    $4965   SNE      V9, #65         ; Skip if V9 != 101
$626    $FB63   UNKNOWN  FB63            ; Unknown Fxxx instruction
$628    $AD7A   LD       I, $D7A         ; Load D7A into I
$62A    $EF85   UNKNOWN  $EF85           ; Unknown Exxx instruction
$62C    $38C2   SE       V8, #C2         ; Skip if V8 == 194
$62E    $206E   CALL     $06E            ; Call subroutine at 06E
$630    $91FB   UNKNOWN  $91FB           ; Unknown 9xxx instruction
$632    $9384   UNKNOWN  $9384           ; Unknown 9xxx instruction
$634    $E084   UNKNOWN  $E084           ; Unknown Exxx instruction
$636    $57A3   UNKNOWN  $57A3           ; Unknown 5xxx instruction
$638    $F0EE   UNKNOWN  F0EE            ; Unknown Fxxx instruction
$63A    $88EF   UNKNOWN  88EF            ; Unknown 8xxx instruction
$63C    $28C2   CALL     $8C2            ; Call subroutine at 8C2
$63E    $6CB5   LD       VC, #B5         ; Load 181 into VC
$640    $6A2E   LD       VA, #2E         ; Load 46 into VA
$642    $D669   DRW      V6, V6, #9      ; Draw 9-byte sprite at V6, V6
$644    $0FEA   SYS      $FEA            ; System call to FEA
$646    $8974   ADD      V9, V7          ; V9 += V7, VF = carry
$648    $BB4D   JP       V0, $B4D        ; Jump to V0 + B4D
$64A    $B620   JP       V0, $620        ; Jump to V0 + 620
$64C    $7F1F   ADD      VF, #1F         ; Add 31 to VF
$64E    $7B4A   ADD      VB, #4A         ; Add 74 to VB
$650    $7D3B   ADD      VD, #3B         ; Add 59 to VD
$652    $90DC   UNKNOWN  $90DC           ; Unknown 9xxx instruction
$654    $C637   RND      V6, #37         ; V6 = random & 37
$656    $4ACA   SNE      VA, #CA         ; Skip if VA != 202
$658    $C820   RND      V8, #20         ; V8 = random & 20
$65A    $961C   UNKNOWN  $961C           ; Unknown 9xxx instruction
$65C    $0465   SYS      $465            ; System call to 465
$65E    $CEAA   RND      VE, #AA         ; VE = random & AA
$660    $2592   CALL     $592            ; Call subroutine at 592
$662    $C247   RND      V2, #47         ; V2 = random & 47
$664    $DB7F   DRW      VB, V7, #F      ; Draw 15-byte sprite at VB, V7
$666    $2098   CALL     $098            ; Call subroutine at 098
$668    $6CC0   LD       VC, #C0         ; Load 192 into VC
$66A    $5A0D   UNKNOWN  $5A0D           ; Unknown 5xxx instruction
$66C    $93B6   UNKNOWN  $93B6           ; Unknown 9xxx instruction
$66E    $674E   LD       V7, #4E         ; Load 78 into V7
$670    $93EB   UNKNOWN  $93EB           ; Unknown 9xxx instruction
$672    $046D   SYS      $46D            ; System call to 46D
$674    $0B4D   SYS      $B4D            ; System call to B4D
$676    $C780   RND      V7, #80         ; V7 = random & 80
$678    $ED41   UNKNOWN  $ED41           ; Unknown Exxx instruction
$67A    $7F00   ADD      VF, #00         ; Add 0 to VF
$67C    $F727   UNKNOWN  F727            ; Unknown Fxxx instruction
$67E    $56A8   UNKNOWN  $56A8           ; Unknown 5xxx instruction
$680    $A15C   LD       I, $15C         ; Load 15C into I
$682    $84C3   XOR      V4, VC          ; V4 ^= VC
$684    $68C0   LD       V8, #C0         ; Load 192 into V8
$686    $078F   SYS      $78F            ; System call to 78F
$688    $69B2   LD       V9, #B2         ; Load 178 into V9
$68A    $656C   LD       V5, #6C         ; Load 108 into V5
$68C    $9A81   UNKNOWN  $9A81           ; Unknown 9xxx instruction
$68E    $9E48   UNKNOWN  $9E48           ; Unknown 9xxx instruction
$690    $61F8   LD       V1, #F8         ; Load 248 into V1
$692    $2FE8   CALL     $FE8            ; Call subroutine at FE8
$694    $25FD   CALL     $5FD            ; Call subroutine at 5FD
$696    $9D5E   UNKNOWN  $9D5E           ; Unknown 9xxx instruction
$698    $902B   UNKNOWN  $902B           ; Unknown 9xxx instruction
$69A    $3C42   SE       VC, #42         ; Skip if VC == 66
$69C    $A22A   LD       I, $22A         ; Load 22A into I
$69E    $0B90   SYS      $B90            ; System call to B90
$6A0    $A90D   LD       I, $90D         ; Load 90D into I
$6A2    $7390   ADD      V3, #90         ; Add 144 to V3
$6A4    $ADDE   LD       I, $DDE         ; Load DDE into I
$6A6    $3FDF   SE       VF, #DF         ; Skip if VF == 223
$6A8    $8173   XOR      V1, V7          ; V1 ^= V7
$6AA    $7FB2   ADD      VF, #B2         ; Add 178 to VF
$6AC    $8D03   XOR      VD, V0          ; VD ^= V0
$6AE    $1CE5   JP       $CE5            ; Jump to CE5
$6B0    $7DB1   ADD      VD, #B1         ; Add 177 to VD
$6B2    $D8E2   DRW      V8, VE, #2      ; Draw 2-byte sprite at V8, VE
$6B4    $812E   SHL      V1              ; V1 <<= 1, VF = MSB
$6B6    $455C   SNE      V5, #5C         ; Skip if V5 != 92
$6B8    $EF35   UNKNOWN  $EF35           ; Unknown Exxx instruction
$6BA    $ACEE   LD       I, $CEE         ; Load CEE into I
$6BC    $E7ED   UNKNOWN  $E7ED           ; Unknown Exxx instruction
$6BE    $5B50   SE       VB, V5          ; Skip if VB == V5
$6C0    $BBBD   JP       V0, $BBD        ; Jump to V0 + BBD
$6C2    $4BD9   SNE      VB, #D9         ; Skip if VB != 217
$6C4    $F31F   UNKNOWN  F31F            ; Unknown Fxxx instruction
$6C6    $43B4   SNE      V3, #B4         ; Skip if V3 != 180
$6C8    $A959   LD       I, $959         ; Load 959 into I
$6CA    $E13D   UNKNOWN  $E13D           ; Unknown Exxx instruction
$6CC    $B84A   JP       V0, $84A        ; Jump to V0 + 84A
$6CE    $48B3   SNE      V8, #B3         ; Skip if V8 != 179
$6D0    $1312   JP       $312            ; Jump to 312
$6D2    $E315   UNKNOWN  $E315           ; Unknown Exxx instruction
$6D4    $E8C5   UNKNOWN  $E8C5           ; Unknown Exxx instruction
$6D6    $9B66   UNKNOWN  $9B66           ; Unknown 9xxx instruction
$6D8    $1E45   JP       $E45            ; Jump to E45
$6DA    $0401   SYS      $401            ; System call to 401
$6DC    $A047   LD       I, $047         ; Load 047 into I
$6DE    $0E6E   SYS      $E6E            ; System call to E6E
$6E0    $E75C   UNKNOWN  $E75C           ; Unknown Exxx instruction
$6E2    $B809   JP       V0, $809        ; Jump to V0 + 809
$6E4    $023F   SYS      $23F            ; System call to 23F
$6E6    $D149   DRW      V1, V4, #9      ; Draw 9-byte sprite at V1, V4
$6E8    $5019   UNKNOWN  $5019           ; Unknown 5xxx instruction
$6EA    $CF3A   RND      VF, #3A         ; VF = random & 3A
$6EC    $1966   JP       $966            ; Jump to 966
$6EE    $3C04   SE       VC, #04         ; Skip if VC == 4
$6F0    $B953   JP       V0, $953        ; Jump to V0 + 953
$6F2    $8DCE   SHL      VD              ; VD <<= 1, VF = MSB
$6F4    $5FE4   UNKNOWN  $5FE4           ; Unknown 5xxx instruction
$6F6    $98BD   UNKNOWN  $98BD           ; Unknown 9xxx instruction
$6F8    $25FE   CALL     $5FE            ; Call subroutine at 5FE
$6FA    $02A3   SYS      $2A3            ; System call to 2A3
$6FC    $95C5   UNKNOWN  $95C5           ; Unknown 9xxx instruction
$6FE    $AF32   LD       I, $F32         ; Load F32 into I
$700    $8F35   SUB      VF, V3          ; VF -= V3, VF = !borrow
$702    $6B6C   LD       VB, #6C         ; Load 108 into VB
$704    $7A61   ADD      VA, #61         ; Add 97 to VA
$706    $3FE9   SE       VF, #E9         ; Skip if VF == 233
$708    $C564   RND      V5, #64         ; V5 = random & 64
$70A    $F923   UNKNOWN  F923            ; Unknown Fxxx instruction
$70C    $B378   JP       V0, $378        ; Jump to V0 + 378
$70E    $76BE   ADD      V6, #BE         ; Add 190 to V6
$710    $2B91   CALL     $B91            ; Call subroutine at B91
$712    $C72A   RND      V7, #2A         ; V7 = random & 2A
$714    $D9A0   DRW      V9, VA, #0      ; Draw 0-byte sprite at V9, VA
$716    $F72E   UNKNOWN  F72E            ; Unknown Fxxx instruction
$718    $EED3   UNKNOWN  $EED3           ; Unknown Exxx instruction
$71A    $3B0E   SE       VB, #0E         ; Skip if VB == 14
$71C    $98AA   UNKNOWN  $98AA           ; Unknown 9xxx instruction
$71E    $A084   LD       I, $084         ; Load 084 into I
$720    $7072   ADD      V0, #72         ; Add 114 to V0
$722    $FEDA   UNKNOWN  FEDA            ; Unknown Fxxx instruction
$724    $2B9B   CALL     $B9B            ; Call subroutine at B9B
$726    $8F71   OR       VF, V7          ; VF |= V7
$728    $FB28   UNKNOWN  FB28            ; Unknown Fxxx instruction
$72A    $CBF8   RND      VB, #F8         ; VB = random & F8
$72C    $8B3E   SHL      VB              ; VB <<= 1, VF = MSB
$72E    $D59C   DRW      V5, V9, #C      ; Draw 12-byte sprite at V5, V9
$730    $87CD   UNKNOWN  87CD            ; Unknown 8xxx instruction
$732    $A6AF   LD       I, $6AF         ; Load 6AF into I
$734    $340E   SE       V4, #0E         ; Skip if V4 == 14
$736    $EB44   UNKNOWN  $EB44           ; Unknown Exxx instruction
$738    $6C07   LD       VC, #07         ; Load 7 into VC
$73A    $6B99   LD       VB, #99         ; Load 153 into VB
$73C    $0165   SYS      $165            ; System call to 165
$73E    $2DD9   CALL     $DD9            ; Call subroutine at DD9
$740    $07DF   SYS      $7DF            ; System call to 7DF
$742    $EEFC   UNKNOWN  $EEFC           ; Unknown Exxx instruction
$744    $D1E2   DRW      V1, VE, #2      ; Draw 2-byte sprite at V1, VE
$746    $F288   UNKNOWN  F288            ; Unknown Fxxx instruction
$748    $67F9   LD       V7, #F9         ; Load 249 into V7
$74A    $8672   AND      V6, V7          ; V6 &= V7
$74C    $2960   CALL     $960            ; Call subroutine at 960
$74E    $2A59   CALL     $A59            ; Call subroutine at A59
$750    $204F   CALL     $04F            ; Call subroutine at 04F
$752    $1859   JP       $859            ; Jump to 859
$754    $F0CD   UNKNOWN  F0CD            ; Unknown Fxxx instruction
$756    $BEA9   JP       V0, $EA9        ; Jump to V0 + EA9
$758    $E8DD   UNKNOWN  $E8DD           ; Unknown Exxx instruction
$75A    $0B33   SYS      $B33            ; System call to B33
$75C    $EA1D   UNKNOWN  $EA1D           ; Unknown Exxx instruction
$75E    $1F70   JP       $F70            ; Jump to F70
$760    $6530   LD       V5, #30         ; Load 48 into V5
$762    $381B   SE       V8, #1B         ; Skip if V8 == 27
$764    $156F   JP       $56F            ; Jump to 56F
$766    $EFA7   UNKNOWN  $EFA7           ; Unknown Exxx instruction
$768    $D2F0   DRW      V2, VF, #0      ; Draw 0-byte sprite at V2, VF
$76A    $5302   UNKNOWN  $5302           ; Unknown 5xxx instruction
$76C    $4189   SNE      V1, #89         ; Skip if V1 != 137
$76E    $7D4E   ADD      VD, #4E         ; Add 78 to VD
$770    $CC4C   RND      VC, #4C         ; VC = random & 4C
$772    $3534   SE       V5, #34         ; Skip if V5 == 52
$774    $DACF   DRW      VA, VC, #F      ; Draw 15-byte sprite at VA, VC
$776    $1B6E   JP       $B6E            ; Jump to B6E
$778    $1445   JP       $445            ; Jump to 445
$77A    $F2F8   UNKNOWN  F2F8            ; Unknown Fxxx instruction
$77C    $21AB   CALL     $1AB            ; Call subroutine at 1AB
$77E    $ED1A   UNKNOWN  $ED1A           ; Unknown Exxx instruction
$780    $B402   JP       V0, $402        ; Jump to V0 + 402
$782    $938D   UNKNOWN  $938D           ; Unknown 9xxx instruction
$784    $53FE   UNKNOWN  $53FE           ; Unknown 5xxx instruction
$786    $77A1   ADD      V7, #A1         ; Add 161 to V7
$788    $2A4A   CALL     $A4A            ; Call subroutine at A4A
$78A    $7923   ADD      V9, #23         ; Add 35 to V9
$78C    $2514   CALL     $514            ; Call subroutine at 514
$78E    $8CC2   AND      VC, VC          ; VC &= VC
$790    $A8AE   LD       I, $8AE         ; Load 8AE into I
$792    $A2FB   LD       I, $2FB         ; Load 2FB into I
$794    $42E0   SNE      V2, #E0         ; Skip if V2 != 224
$796    $46BB   SNE      V6, #BB         ; Skip if V6 != 187
$798    $076A   SYS      $76A            ; System call to 76A
$79A    $9DF4   UNKNOWN  $9DF4           ; Unknown 9xxx instruction
$79C    $87FD   UNKNOWN  87FD            ; Unknown 8xxx instruction
$79E    $EB11   UNKNOWN  $EB11           ; Unknown Exxx instruction
$7A0    $33B5   SE       V3, #B5         ; Skip if V3 == 181
$7A2    $993C   UNKNOWN  $993C           ; Unknown 9xxx instruction
$7A4    $1E79   JP       $E79            ; Jump to E79
$7A6    $57AC   UNKNOWN  $57AC           ; Unknown 5xxx instruction
$7A8    $68DC   LD       V8, #DC         ; Load 220 into V8
$7AA    $0A83   SYS      $A83            ; System call to A83
$7AC    $9363   UNKNOWN  $9363           ; Unknown 9xxx instruction
$7AE    $0182   SYS      $182            ; System call to 182
$7B0    $A477   LD       I, $477         ; Load 477 into I
$7B2    $2E49   CALL     $E49            ; Call subroutine at E49
$7B4    $E0BF   UNKNOWN  $E0BF           ; Unknown Exxx instruction
$7B6    $3275   SE       V2, #75         ; Skip if V2 == 117
$7B8    $EBD4   UNKNOWN  $EBD4           ; Unknown Exxx instruction
$7BA    $2F1E   CALL     $F1E            ; Call subroutine at F1E
$7BC    $63AC   LD       V3, #AC         ; Load 172 into V3
$7BE    $4E68   SNE      VE, #68         ; Skip if VE != 104
$7C0    $4228   SNE      V2, #28         ; Skip if V2 != 40
$7C2    $7D29   ADD      VD, #29         ; Add 41 to VD
$7C4    $6D48   LD       VD, #48         ; Load 72 into VD
$7C6    $27A0   CALL     $7A0            ; Call subroutine at 7A0
$7C8    $812D   UNKNOWN  812D            ; Unknown 8xxx instruction
$7CA    $17BA   JP       $7BA            ; Jump to 7BA
$7CC    $3817   SE       V8, #17         ; Skip if V8 == 23
$7CE    $B58A   JP       V0, $58A        ; Jump to V0 + 58A
$7D0    $D21E   DRW      V2, V1, #E      ; Draw 14-byte sprite at V2, V1
$7D2    $FF97   UNKNOWN  FF97            ; Unknown Fxxx instruction
$7D4    $3A9F   SE       VA, #9F         ; Skip if VA == 159
$7D6    $5581   UNKNOWN  $5581           ; Unknown 5xxx instruction
$7D8    $748C   ADD      V4, #8C         ; Add 140 to V4
$7DA    $9C2D   UNKNOWN  $9C2D           ; Unknown 9xxx instruction
$7DC    $728F   ADD      V2, #8F         ; Add 143 to V2
$7DE    $A557   LD       I, $557         ; Load 557 into I
$7E0    $8EDA   UNKNOWN  8EDA            ; Unknown 8xxx instruction
$7E2    $E587   UNKNOWN  $E587           ; Unknown Exxx instruction
$7E4    $C21B   RND      V2, #1B         ; V2 = random & 1B
$7E6    $FCD1   UNKNOWN  FCD1            ; Unknown Fxxx instruction
$7E8    $AB7B   LD       I, $B7B         ; Load B7B into I
$7EA    $87A1   OR       V7, VA          ; V7 |= VA
$7EC    $33C9   SE       V3, #C9         ; Skip if V3 == 201
$7EE    $E7F4   UNKNOWN  $E7F4           ; Unknown Exxx instruction
$7F0    $C532   RND      V5, #32         ; V5 = random & 32
$7F2    $959D   UNKNOWN  $959D           ; Unknown 9xxx instruction
$7F4    $47E5   SNE      V7, #E5         ; Skip if V7 != 229
$7F6    $504A   UNKNOWN  $504A           ; Unknown 5xxx instruction
$7F8    $1269   JP       $269            ; Jump to 269
$7FA    $1BE8   JP       $BE8            ; Jump to BE8
$7FC    $0EFD   SYS      $EFD            ; System call to EFD
$7FE    $0D50   SYS      $D50            ; System call to D50
$800    $3916   SE       V9, #16         ; Skip if V9 == 22
$802    $1575   JP       $575            ; Jump to 575
$804    $8EE5   SUB      VE, VE          ; VE -= VE, VF = !borrow
$806    $A61F   LD       I, $61F         ; Load 61F into I
$808    $49ED   SNE      V9, #ED         ; Skip if V9 != 237
$80A    $53C9   UNKNOWN  $53C9           ; Unknown 5xxx instruction
$80C    $37F7   SE       V7, #F7         ; Skip if V7 == 247
$80E    $756C   ADD      V5, #6C         ; Add 108 to V5
$810    $AD0C   LD       I, $D0C         ; Load D0C into I
$812    $DCCD   DRW      VC, VC, #D      ; Draw 13-byte sprite at VC, VC
$814    $ECE8   UNKNOWN  $ECE8           ; Unknown Exxx instruction
$816    $480A   SNE      V8, #0A         ; Skip if V8 != 10
$818    $80CB   UNKNOWN  80CB            ; Unknown 8xxx instruction
$81A    $6015   LD       V0, #15         ; Load 21 into V0
$81C    $C6C8   RND      V6, #C8         ; V6 = random & C8
$81E    $B322   JP       V0, $322        ; Jump to V0 + 322
$820    $4714   SNE      V7, #14         ; Skip if V7 != 20
$822    $9C28   UNKNOWN  $9C28           ; Unknown 9xxx instruction
$824    $5086   UNKNOWN  $5086           ; Unknown 5xxx instruction
$826    $0571   SYS      $571            ; System call to 571
$828    $1A50   JP       $A50            ; Jump to A50
$82A    $C4CC   RND      V4, #CC         ; V4 = random & CC
$82C    $BDDE   JP       V0, $DDE        ; Jump to V0 + DDE
$82E    $CB82   RND      VB, #82         ; VB = random & 82
$830    $E31C   UNKNOWN  $E31C           ; Unknown Exxx instruction
$832    $6CC4   LD       VC, #C4         ; Load 196 into VC
$834    $C85B   RND      V8, #5B         ; V8 = random & 5B
$836    $9EDC   UNKNOWN  $9EDC           ; Unknown 9xxx instruction
$838    $C355   RND      V3, #55         ; V3 = random & 55
$83A    $41F2   SNE      V1, #F2         ; Skip if V1 != 242
$83C    $FB94   UNKNOWN  FB94            ; Unknown Fxxx instruction
$83E    $1B0A   JP       $B0A            ; Jump to B0A
$840    $86D5   SUB      V6, VD          ; V6 -= VD, VF = !borrow
$842    $1703   JP       $703            ; Jump to 703
$844    $77A5   ADD      V7, #A5         ; Add 165 to V7
$846    $851E   SHL      V5              ; V5 <<= 1, VF = MSB
$848    $8673   XOR      V6, V7          ; V6 ^= V7
$84A    $E2A8   UNKNOWN  $E2A8           ; Unknown Exxx instruction
$84C    $5999   UNKNOWN  $5999           ; Unknown 5xxx instruction
$84E    $C820   RND      V8, #20         ; V8 = random & 20
$850    $6E83   LD       VE, #83         ; Load 131 into VE
$852    $851E   SHL      V5              ; V5 <<= 1, VF = MSB
$854    $AEFD   LD       I, $EFD         ; Load EFD into I
$856    $EBD3   UNKNOWN  $EBD3           ; Unknown Exxx instruction
$858    $903B   UNKNOWN  $903B           ; Unknown 9xxx instruction
$85A    $1434   JP       $434            ; Jump to 434
$85C    $454C   SNE      V5, #4C         ; Skip if V5 != 76
$85E    $C04D   RND      V0, #4D         ; V0 = random & 4D
$860    $BFCA   JP       V0, $FCA        ; Jump to V0 + FCA
$862    $E5DD   UNKNOWN  $E5DD           ; Unknown Exxx instruction
$864    $9BF3   UNKNOWN  $9BF3           ; Unknown 9xxx instruction
$866    $0DD3   SYS      $DD3            ; System call to DD3
$868    $4FFF   SNE      VF, #FF         ; Skip if VF != 255
$86A    $7400   ADD      V4, #00         ; Add 0 to V4
$86C    $C20F   RND      V2, #0F         ; V2 = random & 0F
$86E    $52A8   UNKNOWN  $52A8           ; Unknown 5xxx instruction
$870    $5DF9   UNKNOWN  $5DF9           ; Unknown 5xxx instruction
$872    $3384   SE       V3, #84         ; Skip if V3 == 132
$874    $3903   SE       V9, #03         ; Skip if V9 == 3
$876    $63B0   LD       V3, #B0         ; Load 176 into V3
$878    $C55B   RND      V5, #5B         ; V5 = random & 5B
$87A    $E39D   UNKNOWN  $E39D           ; Unknown Exxx instruction
$87C    $516D   UNKNOWN  $516D           ; Unknown 5xxx instruction
$87E    $883E   SHL      V8              ; V8 <<= 1, VF = MSB
$880    $CB85   RND      VB, #85         ; VB = random & 85
$882    $E8FE   UNKNOWN  $E8FE           ; Unknown Exxx instruction
$884    $AAA4   LD       I, $AA4         ; Load AA4 into I
$886    $358A   SE       V5, #8A         ; Skip if V5 == 138
$888    $F8FF   UNKNOWN  F8FF            ; Unknown Fxxx instruction
$88A    $392E   SE       V9, #2E         ; Skip if V9 == 46
$88C    $4213   SNE      V2, #13         ; Skip if V2 != 19
$88E    $8E89   UNKNOWN  8E89            ; Unknown 8xxx instruction
$890    $6FF5   LD       VF, #F5         ; Load 245 into VF
$892    $A07B   LD       I, $07B         ; Load 07B into I
$894    $ED4A   UNKNOWN  $ED4A           ; Unknown Exxx instruction
$896    $0AF4   SYS      $AF4            ; System call to AF4
$898    $0C82   SYS      $C82            ; System call to C82
$89A    $8C35   SUB      VC, V3          ; VC -= V3, VF = !borrow
$89C    $4A75   SNE      VA, #75         ; Skip if VA != 117
$89E    $2275   CALL     $275            ; Call subroutine at 275
$8A0    $276D   CALL     $76D            ; Call subroutine at 76D
$8A2    $F325   UNKNOWN  F325            ; Unknown Fxxx instruction
$8A4    $44F6   SNE      V4, #F6         ; Skip if V4 != 246
$8A6    $0216   SYS      $216            ; System call to 216
$8A8    $C2BB   RND      V2, #BB         ; V2 = random & BB
$8AA    $C37F   RND      V3, #7F         ; V3 = random & 7F
$8AC    $65E4   LD       V5, #E4         ; Load 228 into V5
$8AE    $D6B3   DRW      V6, VB, #3      ; Draw 3-byte sprite at V6, VB
$8B0    $0F46   SYS      $F46            ; System call to F46
$8B2    $FFA0   UNKNOWN  FFA0            ; Unknown Fxxx instruction
$8B4    $EF66   UNKNOWN  $EF66           ; Unknown Exxx instruction
$8B6    $A908   LD       I, $908         ; Load 908 into I
$8B8    $F95E   UNKNOWN  F95E            ; Unknown Fxxx instruction
$8BA    $96D2   UNKNOWN  $96D2           ; Unknown 9xxx instruction
$8BC    $CF7A   RND      VF, #7A         ; VF = random & 7A
$8BE    $5CE0   SE       VC, VE          ; Skip if VC == VE
$8C0    $3D38   SE       VD, #38         ; Skip if VD == 56
$8C2    $3471   SE       V4, #71         ; Skip if V4 == 113
$8C4    $FFBE   UNKNOWN  FFBE            ; Unknown Fxxx instruction
$8C6    $8786   SHR      V7              ; V7 >>= 1, VF = LSB
$8C8    $28C0   CALL     $8C0            ; Call subroutine at 8C0
$8CA    $118F   JP       $18F            ; Jump to 18F
$8CC    $64ED   LD       V4, #ED         ; Load 237 into V4
$8CE    $7542   ADD      V5, #42         ; Add 66 to V5
$8D0    $D911   DRW      V9, V1, #1      ; Draw 1-byte sprite at V9, V1
$8D2    $06CB   SYS      $6CB            ; System call to 6CB
$8D4    $B8EC   JP       V0, $8EC        ; Jump to V0 + 8EC
$8D6    $E08B   UNKNOWN  $E08B           ; Unknown Exxx instruction
$8D8    $5886   UNKNOWN  $5886           ; Unknown 5xxx instruction
$8DA    $BEE6   JP       V0, $EE6        ; Jump to V0 + EE6
$8DC    $A178   LD       I, $178         ; Load 178 into I
$8DE    $2F04   CALL     $F04            ; Call subroutine at F04
$8E0    $8BF2   AND      VB, VF          ; VB &= VF
$8E2    $B1B3   JP       V0, $1B3        ; Jump to V0 + 1B3
$8E4    $37FA   SE       V7, #FA         ; Skip if V7 == 250
$8E6    $EBED   UNKNOWN  $EBED           ; Unknown Exxx instruction
$8E8    $424D   SNE      V2, #4D         ; Skip if V2 != 77
$8EA    $3B79   SE       VB, #79         ; Skip if VB == 121
$8EC    $B454   JP       V0, $454        ; Jump to V0 + 454
$8EE    $6C91   LD       VC, #91         ; Load 145 into VC
$8F0    $46CE   SNE      V6, #CE         ; Skip if V6 != 206
$8F2    $5FC6   UNKNOWN  $5FC6           ; Unknown 5xxx instruction
$8F4    $9E10   SNE      VE, V1          ; Skip if VE != V1
$8F6    $59D1   UNKNOWN  $59D1           ; Unknown 5xxx instruction
$8F8    $A675   LD       I, $675         ; Load 675 into I
$8FA    $1BAE   JP       $BAE            ; Jump to BAE
$8FC    $7BD0   ADD      VB, #D0         ; Add 208 to VB
$8FE    $6D86   LD       VD, #86         ; Load 134 into VD
$900    $6FCC   LD       VF, #CC         ; Load 204 into VF
$902    $CA8B   RND      VA, #8B         ; VA = random & 8B
$904    $D596   DRW      V5, V9, #6      ; Draw 6-byte sprite at V5, V9
$906    $E5C7   UNKNOWN  $E5C7           ; Unknown Exxx instruction
$908    $D196   DRW      V1, V9, #6      ; Draw 6-byte sprite at V1, V9
$90A    $3670   SE       V6, #70         ; Skip if V6 == 112
$90C    $DE3F   DRW      VE, V3, #F      ; Draw 15-byte sprite at VE, V3
$90E    $9FF8   UNKNOWN  $9FF8           ; Unknown 9xxx instruction
$910    $8F95   SUB      VF, V9          ; VF -= V9, VF = !borrow
$912    $5D85   UNKNOWN  $5D85           ; Unknown 5xxx instruction
$914    $DE01   DRW      VE, V0, #1      ; Draw 1-byte sprite at VE, V0
$916    $46CA   SNE      V6, #CA         ; Skip if V6 != 202
$918    $513E   UNKNOWN  $513E           ; Unknown 5xxx instruction
$91A    $3DD0   SE       VD, #D0         ; Skip if VD == 208
$91C    $FE8C   UNKNOWN  FE8C            ; Unknown Fxxx instruction
$91E    $A7BB   LD       I, $7BB         ; Load 7BB into I
$920    $B717   JP       V0, $717        ; Jump to V0 + 717
$922    $494F   SNE      V9, #4F         ; Skip if V9 != 79
$924    $FAE0   UNKNOWN  FAE0            ; Unknown Fxxx instruction
$926    $4204   SNE      V2, #04         ; Skip if V2 != 4
$928    $CC60   RND      VC, #60         ; VC = random & 60
$92A    $AB3A   LD       I, $B3A         ; Load B3A into I
$92C    $6520   LD       V5, #20         ; Load 32 into V5
$92E    $9171   UNKNOWN  $9171           ; Unknown 9xxx instruction
$930    $C480   RND      V4, #80         ; V4 = random & 80
$932    $C403   RND      V4, #03         ; V4 = random & 03
$934    $387C   SE       V8, #7C         ; Skip if V8 == 124
$936    $B79D   JP       V0, $79D        ; Jump to V0 + 79D
$938    $79FC   ADD      V9, #FC         ; Add 252 to V9
$93A    $091E   SYS      $91E            ; System call to 91E
$93C    $59D9   UNKNOWN  $59D9           ; Unknown 5xxx instruction
$93E    $C3C7   RND      V3, #C7         ; V3 = random & C7
$940    $1F9E   JP       $F9E            ; Jump to F9E
$942    $2446   CALL     $446            ; Call subroutine at 446
$944    $05E1   SYS      $5E1            ; System call to 5E1
$946    $0D98   SYS      $D98            ; System call to D98
$948    $FEDF   UNKNOWN  FEDF            ; Unknown Fxxx instruction
$94A    $B017   JP       V0, $017        ; Jump to V0 + 017
$94C    $AF4A   LD       I, $F4A         ; Load F4A into I
$94E    $58CC   UNKNOWN  $58CC           ; Unknown 5xxx instruction
$950    $2172   CALL     $172            ; Call subroutine at 172
$952    $E0C7   UNKNOWN  $E0C7           ; Unknown Exxx instruction
$954    $A7CE   LD       I, $7CE         ; Load 7CE into I
$956    $2CF0   CALL     $CF0            ; Call subroutine at CF0
$958    $C987   RND      V9, #87         ; V9 = random & 87
$95A    $D774   DRW      V7, V7, #4      ; Draw 4-byte sprite at V7, V7
$95C    $F374   UNKNOWN  F374            ; Unknown Fxxx instruction
$95E    $4AA1   SNE      VA, #A1         ; Skip if VA != 161
$960    $D4EB   DRW      V4, VE, #B      ; Draw 11-byte sprite at V4, VE
$962    $D784   DRW      V7, V8, #4      ; Draw 4-byte sprite at V7, V8
$964    $C52D   RND      V5, #2D         ; V5 = random & 2D
$966    $7672   ADD      V6, #72         ; Add 114 to V6
$968    $3383   SE       V3, #83         ; Skip if V3 == 131
$96A    $B20F   JP       V0, $20F        ; Jump to V0 + 20F
$96C    $54C4   UNKNOWN  $54C4           ; Unknown 5xxx instruction
$96E    $DCD8   DRW      VC, VD, #8      ; Draw 8-byte sprite at VC, VD
$970    $9B4B   UNKNOWN  $9B4B           ; Unknown 9xxx instruction
$972    $C036   RND      V0, #36         ; V0 = random & 36
$974    $C782   RND      V7, #82         ; V7 = random & 82
$976    $6AC7   LD       VA, #C7         ; Load 199 into VA
$978    $4454   SNE      V4, #54         ; Skip if V4 != 84
$97A    $1DA5   JP       $DA5            ; Jump to DA5
$97C    $74D4   ADD      V4, #D4         ; Add 212 to V4
$97E    $0E27   SYS      $E27            ; System call to E27
$980    $55EB   UNKNOWN  $55EB           ; Unknown 5xxx instruction
$982    $F3A3   UNKNOWN  F3A3            ; Unknown Fxxx instruction
$984    $9B9E   UNKNOWN  $9B9E           ; Unknown 9xxx instruction
$986    $CA9D   RND      VA, #9D         ; VA = random & 9D
$988    $A04E   LD       I, $04E         ; Load 04E into I
$98A    $2EDD   CALL     $EDD            ; Call subroutine at EDD
$98C    $62D5   LD       V2, #D5         ; Load 213 into V2
$98E    $AD14   LD       I, $D14         ; Load D14 into I
$990    $D3D2   DRW      V3, VD, #2      ; Draw 2-byte sprite at V3, VD
$992    $A354   LD       I, $354         ; Load 354 into I
$994    $5C57   UNKNOWN  $5C57           ; Unknown 5xxx instruction
$996    $681D   LD       V8, #1D         ; Load 29 into V8
$998    $B151   JP       V0, $151        ; Jump to V0 + 151
$99A    $03A1   SYS      $3A1            ; System call to 3A1
$99C    $5F5A   UNKNOWN  $5F5A           ; Unknown 5xxx instruction
$99E    $D47A   DRW      V4, V7, #A      ; Draw 10-byte sprite at V4, V7
$9A0    $709D   ADD      V0, #9D         ; Add 157 to V0
$9A2    $3084   SE       V0, #84         ; Skip if V0 == 132
$9A4    $93FC   UNKNOWN  $93FC           ; Unknown 9xxx instruction
$9A6    $33A8   SE       V3, #A8         ; Skip if V3 == 168
$9A8    $7F20   ADD      VF, #20         ; Add 32 to VF
$9AA    $E981   UNKNOWN  $E981           ; Unknown Exxx instruction
$9AC    $048D   SYS      $48D            ; System call to 48D
$9AE    $15DE   JP       $5DE            ; Jump to 5DE
$9B0    $2C8F   CALL     $C8F            ; Call subroutine at C8F
$9B2    $4B42   SNE      VB, #42         ; Skip if VB != 66
$9B4    $D5AF   DRW      V5, VA, #F      ; Draw 15-byte sprite at V5, VA
$9B6    $DE16   DRW      VE, V1, #6      ; Draw 6-byte sprite at VE, V1
$9B8    $9734   UNKNOWN  $9734           ; Unknown 9xxx instruction
$9BA    $BA42   JP       V0, $A42        ; Jump to V0 + A42
$9BC    $7510   ADD      V5, #10         ; Add 16 to V5
$9BE    $CA26   RND      VA, #26         ; VA = random & 26
$9C0    $3CAB   SE       VC, #AB         ; Skip if VC == 171
$9C2    $4240   SNE      V2, #40         ; Skip if V2 != 64
$9C4    $2987   CALL     $987            ; Call subroutine at 987
$9C6    $9C2D   UNKNOWN  $9C2D           ; Unknown 9xxx instruction
$9C8    $D776   DRW      V7, V7, #6      ; Draw 6-byte sprite at V7, V7
$9CA    $AFD7   LD       I, $FD7         ; Load FD7 into I
$9CC    $604A   LD       V0, #4A         ; Load 74 into V0
$9CE    $990E   UNKNOWN  $990E           ; Unknown 9xxx instruction
$9D0    $EED2   UNKNOWN  $EED2           ; Unknown Exxx instruction
$9D2    $0C40   SYS      $C40            ; System call to C40
$9D4    $38EC   SE       V8, #EC         ; Skip if V8 == 236
$9D6    $43C8   SNE      V3, #C8         ; Skip if V3 != 200
$9D8    $289A   CALL     $89A            ; Call subroutine at 89A
$9DA    $B065   JP       V0, $065        ; Jump to V0 + 065
$9DC    $43C9   SNE      V3, #C9         ; Skip if V3 != 201
$9DE    $034F   SYS      $34F            ; System call to 34F
$9E0    $498B   SNE      V9, #8B         ; Skip if V9 != 139
$9E2    $AA06   LD       I, $A06         ; Load A06 into I
$9E4    $E0A5   UNKNOWN  $E0A5           ; Unknown Exxx instruction
$9E6    $7AC3   ADD      VA, #C3         ; Add 195 to VA
$9E8    $4B39   SNE      VB, #39         ; Skip if VB != 57
$9EA    $EC36   UNKNOWN  $EC36           ; Unknown Exxx instruction
$9EC    $7DB3   ADD      VD, #B3         ; Add 179 to VD
$9EE    $8D34   ADD      VD, V3          ; VD += V3, VF = carry
$9F0    $859E   SHL      V5              ; V5 <<= 1, VF = MSB
$9F2    $B587   JP       V0, $587        ; Jump to V0 + 587
$9F4    $BDBA   JP       V0, $DBA        ; Jump to V0 + DBA
$9F6    $49BE   SNE      V9, #BE         ; Skip if V9 != 190
$9F8    $4B95   SNE      VB, #95         ; Skip if VB != 149
$9FA    $D5D7   DRW      V5, VD, #7      ; Draw 7-byte sprite at V5, VD
$9FC    $6519   LD       V5, #19         ; Load 25 into V5
$9FE    $9C54   UNKNOWN  $9C54           ; Unknown 9xxx instruction
$A00    $8FC8   UNKNOWN  8FC8            ; Unknown 8xxx instruction
$A02    $C31E   RND      V3, #1E         ; V3 = random & 1E
$A04    $D4F4   DRW      V4, VF, #4      ; Draw 4-byte sprite at V4, VF
$A06    $8A78   UNKNOWN  8A78            ; Unknown 8xxx instruction
$A08    $62F6   LD       V2, #F6         ; Load 246 into V2
$A0A    $AA8A   LD       I, $A8A         ; Load A8A into I
$A0C    $5A50   SE       VA, V5          ; Skip if VA == V5
$A0E    $893A   UNKNOWN  893A            ; Unknown 8xxx instruction
$A10    $AE2E   LD       I, $E2E         ; Load E2E into I
$A12    $7429   ADD      V4, #29         ; Add 41 to V4
$A14    $55ED   UNKNOWN  $55ED           ; Unknown 5xxx instruction
$A16    $A1A9   LD       I, $1A9         ; Load 1A9 into I
$A18    $015B   SYS      $15B            ; System call to 15B
$A1A    $054D   SYS      $54D            ; System call to 54D
$A1C    $DC94   DRW      VC, V9, #4      ; Draw 4-byte sprite at VC, V9
$A1E    $ABAF   LD       I, $BAF         ; Load BAF into I
$A20    $D093   DRW      V0, V9, #3      ; Draw 3-byte sprite at V0, V9
$A22    $570D   UNKNOWN  $570D           ; Unknown 5xxx instruction
$A24    $14F3   JP       $4F3            ; Jump to 4F3
$A26    $BBD1   JP       V0, $BD1        ; Jump to V0 + BD1
$A28    $6727   LD       V7, #27         ; Load 39 into V7
$A2A    $6977   LD       V9, #77         ; Load 119 into V9
$A2C    $6B87   LD       VB, #87         ; Load 135 into VB
$A2E    $0601   SYS      $601            ; System call to 601
$A30    $33CE   SE       V3, #CE         ; Skip if V3 == 206
$A32    $0F33   SYS      $F33            ; System call to F33
$A34    $F579   UNKNOWN  F579            ; Unknown Fxxx instruction
$A36    $84BD   UNKNOWN  84BD            ; Unknown 8xxx instruction
$A38    $6C3B   LD       VC, #3B         ; Load 59 into VC
$A3A    $C245   RND      V2, #45         ; V2 = random & 45
$A3C    $F349   UNKNOWN  F349            ; Unknown Fxxx instruction
$A3E    $92B0   SNE      V2, VB          ; Skip if V2 != VB
$A40    $5FEB   UNKNOWN  $5FEB           ; Unknown 5xxx instruction
$A42    $A7B5   LD       I, $7B5         ; Load 7B5 into I
$A44    $C3D7   RND      V3, #D7         ; V3 = random & D7
$A46    $132F   JP       $32F            ; Jump to 32F
$A48    $21DA   CALL     $1DA            ; Call subroutine at 1DA
$A4A    $880E   SHL      V8              ; V8 <<= 1, VF = MSB
$A4C    $3B4F   SE       VB, #4F         ; Skip if VB == 79
$A4E    $497F   SNE      V9, #7F         ; Skip if V9 != 127
$A50    $8E5A   UNKNOWN  8E5A            ; Unknown 8xxx instruction
$A52    $4681   SNE      V6, #81         ; Skip if V6 != 129
$A54    $0BE3   SYS      $BE3            ; System call to BE3
$A56    $EAC8   UNKNOWN  $EAC8           ; Unknown Exxx instruction
$A58    $E457   UNKNOWN  $E457           ; Unknown Exxx instruction
$A5A    $D1E2   DRW      V1, VE, #2      ; Draw 2-byte sprite at V1, VE
$A5C    $78FE   ADD      V8, #FE         ; Add 254 to V8
$A5E    $35CF   SE       V5, #CF         ; Skip if V5 == 207
$A60    $AB0A   LD       I, $B0A         ; Load B0A into I
$A62    $2516   CALL     $516            ; Call subroutine at 516
$A64    $A5AC   LD       I, $5AC         ; Load 5AC into I
$A66    $CD30   RND      VD, #30         ; VD = random & 30
$A68    $38E3   SE       V8, #E3         ; Skip if V8 == 227
$A6A    $7A12   ADD      VA, #12         ; Add 18 to VA
$A6C    $A50A   LD       I, $50A         ; Load 50A into I
$A6E    $CE94   RND      VE, #94         ; VE = random & 94
$A70    $25A7   CALL     $5A7            ; Call subroutine at 5A7
$A72    $0572   SYS      $572            ; System call to 572
$A74    $D683   DRW      V6, V8, #3      ; Draw 3-byte sprite at V6, V8
$A76    $73B1   ADD      V3, #B1         ; Add 177 to V3
$A78    $42D6   SNE      V2, #D6         ; Skip if V2 != 214
$A7A    $228C   CALL     $28C            ; Call subroutine at 28C
$A7C    $D14E   DRW      V1, V4, #E      ; Draw 14-byte sprite at V1, V4
$A7E    $A6AB   LD       I, $6AB         ; Load 6AB into I
$A80    $54DF   UNKNOWN  $54DF           ; Unknown 5xxx instruction
$A82    $47F4   SNE      V7, #F4         ; Skip if V7 != 244
$A84    $882D   UNKNOWN  882D            ; Unknown 8xxx instruction
$A86    $CA45   RND      VA, #45         ; VA = random & 45
$A88    $DFFB   DRW      VF, VF, #B      ; Draw 11-byte sprite at VF, VF
$A8A    $CEA0   RND      VE, #A0         ; VE = random & A0
$A8C    $ED49   UNKNOWN  $ED49           ; Unknown Exxx instruction
$A8E    $EBF8   UNKNOWN  $EBF8           ; Unknown Exxx instruction
$A90    $9380   SNE      V3, V8          ; Skip if V3 != V8
$A92    $2770   CALL     $770            ; Call subroutine at 770
$A94    $7095   ADD      V0, #95         ; Add 149 to V0
$A96    $6D2C   LD       VD, #2C         ; Load 44 into VD
$A98    $568A   UNKNOWN  $568A           ; Unknown 5xxx instruction
$A9A    $7F77   ADD      VF, #77         ; Add 119 to VF
$A9C    $4F36   SNE      VF, #36         ; Skip if VF != 54
$A9E    $CDE7   RND      VD, #E7         ; VD = random & E7
$AA0    $08DC   SYS      $8DC            ; System call to 8DC
$AA2    $8DE4   ADD      VD, VE          ; VD += VE, VF = carry
$AA4    $6D71   LD       VD, #71         ; Load 113 into VD
$AA6    $563B   UNKNOWN  $563B           ; Unknown 5xxx instruction
$AA8    $F85F   UNKNOWN  F85F            ; Unknown Fxxx instruction
$AAA    $30E1   SE       V0, #E1         ; Skip if V0 == 225
$AAC    $6748   LD       V7, #48         ; Load 72 into V7
$AAE    $8BDB   UNKNOWN  8BDB            ; Unknown 8xxx instruction
$AB0    $6BE2   LD       VB, #E2         ; Load 226 into VB
$AB2    $FEE4   UNKNOWN  FEE4            ; Unknown Fxxx instruction
$AB4    $7324   ADD      V3, #24         ; Add 36 to V3
$AB6    $16A2   JP       $6A2            ; Jump to 6A2
$AB8    $DBE3   DRW      VB, VE, #3      ; Draw 3-byte sprite at VB, VE
$ABA    $3FDA   SE       VF, #DA         ; Skip if VF == 218
$ABC    $21CB   CALL     $1CB            ; Call subroutine at 1CB
$ABE    $B118   JP       V0, $118        ; Jump to V0 + 118
$AC0    $E6B8   UNKNOWN  $E6B8           ; Unknown Exxx instruction
$AC2    $3713   SE       V7, #13         ; Skip if V7 == 19
$AC4    $6D2A   LD       VD, #2A         ; Load 42 into VD
$AC6    $0832   SYS      $832            ; System call to 832
$AC8    $0D4C   SYS      $D4C            ; System call to D4C
$ACA    $B0D9   JP       V0, $0D9        ; Jump to V0 + 0D9
$ACC    $4299   SNE      V2, #99         ; Skip if V2 != 153
$ACE    $FB66   UNKNOWN  FB66            ; Unknown Fxxx instruction
$AD0    $981B   UNKNOWN  $981B           ; Unknown 9xxx instruction
$AD2    $72A1   ADD      V2, #A1         ; Add 161 to V2
$AD4    $3E97   SE       VE, #97         ; Skip if VE == 151
$AD6    $88FE   SHL      V8              ; V8 <<= 1, VF = MSB
$AD8    $ED6D   UNKNOWN  $ED6D           ; Unknown Exxx instruction
$ADA    $020C   SYS      $20C            ; System call to 20C
$ADC    $6409   LD       V4, #09         ; Load 9 into V4
$ADE    $3318   SE       V3, #18         ; Skip if V3 == 24
$AE0    $EC3A   UNKNOWN  $EC3A           ; Unknown Exxx instruction
$AE2    $4100   SNE      V1, #00         ; Skip if V1 != 0
$AE4    $199C   JP       $99C            ; Jump to 99C
$AE6    $EFDE   UNKNOWN  $EFDE           ; Unknown Exxx instruction
$AE8    $0679   SYS      $679            ; System call to 679
$AEA    $5873   UNKNOWN  $5873           ; Unknown 5xxx instruction
$AEC    $3C0B   SE       VC, #0B         ; Skip if VC == 11
$AEE    $1F6E   JP       $F6E            ; Jump to F6E
$AF0    $3DF0   SE       VD, #F0         ; Skip if VD == 240
$AF2    $A6C1   LD       I, $6C1         ; Load 6C1 into I
$AF4    $5054   UNKNOWN  $5054           ; Unknown 5xxx instruction
$AF6    $DCFB   DRW      VC, VF, #B      ; Draw 11-byte sprite at VC, VF
$AF8    $633D   LD       V3, #3D         ; Load 61 into V3
$AFA    $1F9D   JP       $F9D            ; Jump to F9D
$AFC    $881F   UNKNOWN  881F            ; Unknown 8xxx instruction
$AFE    $C79C   RND      V7, #9C         ; V7 = random & 9C
$B00    $BA9A   JP       V0, $A9A        ; Jump to V0 + A9A
$B02    $38C2   SE       V8, #C2         ; Skip if V8 == 194
$B04    $4361   SNE      V3, #61         ; Skip if V3 != 97
$B06    $9848   UNKNOWN  $9848           ; Unknown 9xxx instruction
$B08    $623A   LD       V2, #3A         ; Load 58 into V2
$B0A    $B9D5   JP       V0, $9D5        ; Jump to V0 + 9D5
$B0C    $FC4F   UNKNOWN  FC4F            ; Unknown Fxxx instruction
$B0E    $5923   UNKNOWN  $5923           ; Unknown 5xxx instruction
$B10    $745B   ADD      V4, #5B         ; Add 91 to V4
$B12    $EBFB   UNKNOWN  $EBFB           ; Unknown Exxx instruction
$B14    $842F   UNKNOWN  842F            ; Unknown 8xxx instruction
$B16    $5D27   UNKNOWN  $5D27           ; Unknown 5xxx instruction
$B18    $E2B0   UNKNOWN  $E2B0           ; Unknown Exxx instruction
$B1A    $681D   LD       V8, #1D         ; Load 29 into V8
$B1C    $6689   LD       V6, #89         ; Load 137 into V6
$B1E    $A539   LD       I, $539         ; Load 539 into I
$B20    $D41A   DRW      V4, V1, #A      ; Draw 10-byte sprite at V4, V1
$B22    $50E7   UNKNOWN  $50E7           ; Unknown 5xxx instruction
$B24    $11CD   JP       $1CD            ; Jump to 1CD
$B26    $1EA7   JP       $EA7            ; Jump to EA7
$B28    $AEF8   LD       I, $EF8         ; Load EF8 into I
$B2A    $798D   ADD      V9, #8D         ; Add 141 to V9
$B2C    $524F   UNKNOWN  $524F           ; Unknown 5xxx instruction
$B2E    $B6DE   JP       V0, $6DE        ; Jump to V0 + 6DE
$B30    $BD09   JP       V0, $D09        ; Jump to V0 + D09
$B32    $2097   CALL     $097            ; Call subroutine at 097
$B34    $717D   ADD      V1, #7D         ; Add 125 to V1
$B36    $4D0E   SNE      VD, #0E         ; Skip if VD != 14
$B38    $FDCB   UNKNOWN  FDCB            ; Unknown Fxxx instruction
$B3A    $9640   SNE      V6, V4          ; Skip if V6 != V4
$B3C    $1CA2   JP       $CA2            ; Jump to CA2
$B3E    $0692   SYS      $692            ; System call to 692
$B40    $5A2C   UNKNOWN  $5A2C           ; Unknown 5xxx instruction
$B42    $C0D5   RND      V0, #D5         ; V0 = random & D5
$B44    $A0EB   LD       I, $0EB         ; Load 0EB into I
$B46    $8260   LD       V2, V6          ; V2 = V6
$B48    $50FE   UNKNOWN  $50FE           ; Unknown 5xxx instruction
$B4A    $B4A5   JP       V0, $4A5        ; Jump to V0 + 4A5
$B4C    $F1BE   UNKNOWN  F1BE            ; Unknown Fxxx instruction
$B4E    $2AD9   CALL     $AD9            ; Call subroutine at AD9
$B50    $8F86   SHR      VF              ; VF >>= 1, VF = LSB
$B52    $2389   CALL     $389            ; Call subroutine at 389
$B54    $867D   UNKNOWN  867D            ; Unknown 8xxx instruction
$B56    $D5A6   DRW      V5, VA, #6      ; Draw 6-byte sprite at V5, VA
$B58    $1EFD   JP       $EFD            ; Jump to EFD
$B5A    $5400   SE       V4, V0          ; Skip if V4 == V0
$B5C    $3251   SE       V2, #51         ; Skip if V2 == 81
$B5E    $C041   RND      V0, #41         ; V0 = random & 41
$B60    $1B4E   JP       $B4E            ; Jump to B4E
$B62    $3893   SE       V8, #93         ; Skip if V8 == 147
$B64    $2E6C   CALL     $E6C            ; Call subroutine at E6C
$B66    $A1DE   LD       I, $1DE         ; Load 1DE into I
$B68    $6D96   LD       VD, #96         ; Load 150 into VD
$B6A    $D2DC   DRW      V2, VD, #C      ; Draw 12-byte sprite at V2, VD
$B6C    $0C77   SYS      $C77            ; System call to C77
$B6E    $62F5   LD       V2, #F5         ; Load 245 into V2
$B70    $5239   UNKNOWN  $5239           ; Unknown 5xxx instruction
$B72    $D84C   DRW      V8, V4, #C      ; Draw 12-byte sprite at V8, V4
$B74    $2F88   CALL     $F88            ; Call subroutine at F88
$B76    $5BAE   UNKNOWN  $5BAE           ; Unknown 5xxx instruction
$B78    $82ED   UNKNOWN  82ED            ; Unknown 8xxx instruction
$B7A    $8531   OR       V5, V3          ; V5 |= V3
$B7C    $EEDB   UNKNOWN  $EEDB           ; Unknown Exxx instruction
$B7E    $CE3D   RND      VE, #3D         ; VE = random & 3D
$B80    $6FD9   LD       VF, #D9         ; Load 217 into VF
$B82    $7A56   ADD      VA, #56         ; Add 86 to VA
$B84    $D54F   DRW      V5, V4, #F      ; Draw 15-byte sprite at V5, V4
$B86    $8D1D   UNKNOWN  8D1D            ; Unknown 8xxx instruction
$B88    $1541   JP       $541            ; Jump to 541
$B8A    $F95F   UNKNOWN  F95F            ; Unknown Fxxx instruction
$B8C    $9E60   SNE      VE, V6          ; Skip if VE != V6
$B8E    $3D47   SE       VD, #47         ; Skip if VD == 71
$B90    $E270   UNKNOWN  $E270           ; Unknown Exxx instruction
$B92    $A209   LD       I, $209         ; Load 209 into I
$B94    $071E   SYS      $71E            ; System call to 71E
$B96    $EDF6   UNKNOWN  $EDF6           ; Unknown Exxx instruction
$B98    $7955   ADD      V9, #55         ; Add 85 to V9
$B9A    $45CE   SNE      V5, #CE         ; Skip if V5 != 206
$B9C    $36E7   SE       V6, #E7         ; Skip if V6 == 231
$B9E    $FE51   UNKNOWN  FE51            ; Unknown Fxxx instruction
$BA0    $0DE2   SYS      $DE2            ; System call to DE2
$BA2    $39A3   SE       V9, #A3         ; Skip if V9 == 163
$BA4    $7120   ADD      V1, #20         ; Add 32 to V1
$BA6    $1F96   JP       $F96            ; Jump to F96
$BA8    $5541   UNKNOWN  $5541           ; Unknown 5xxx instruction
$BAA    $15A5   JP       $5A5            ; Jump to 5A5
$BAC    $513E   UNKNOWN  $513E           ; Unknown 5xxx instruction
$BAE    $7052   ADD      V0, #52         ; Add 82 to V0
$BB0    $78BE   ADD      V8, #BE         ; Add 190 to V8
$BB2    $5D52   UNKNOWN  $5D52           ; Unknown 5xxx instruction
$BB4    $DAAA   DRW      VA, VA, #A      ; Draw 10-byte sprite at VA, VA
$BB6    $C06F   RND      V0, #6F         ; V0 = random & 6F
$BB8    $4688   SNE      V6, #88         ; Skip if V6 != 136
$BBA    $7F92   ADD      VF, #92         ; Add 146 to VF
$BBC    $24F5   CALL     $4F5            ; Call subroutine at 4F5
$BBE    $202F   CALL     $02F            ; Call subroutine at 02F
$BC0    $F155   LD       [I], V1         ; Store V0-V1 at I
$BC2    $5484   UNKNOWN  $5484           ; Unknown 5xxx instruction
$BC4    $C430   RND      V4, #30         ; V4 = random & 30
$BC6    $9747   UNKNOWN  $9747           ; Unknown 9xxx instruction
$BC8    $4779   SNE      V7, #79         ; Skip if V7 != 121
$BCA    $A531   LD       I, $531         ; Load 531 into I
$BCC    $DFED   DRW      VF, VE, #D      ; Draw 13-byte sprite at VF, VE
$BCE    $5ACA   UNKNOWN  $5ACA           ; Unknown 5xxx instruction
$BD0    $0E9D   SYS      $E9D            ; System call to E9D
$BD2    $BA43   JP       V0, $A43        ; Jump to V0 + A43
$BD4    $4C29   SNE      VC, #29         ; Skip if VC != 41
$BD6    $4415   SNE      V4, #15         ; Skip if V4 != 21
$BD8    $E17D   UNKNOWN  $E17D           ; Unknown Exxx instruction
$BDA    $CB6D   RND      VB, #6D         ; VB = random & 6D
$BDC    $98FF   UNKNOWN  $98FF           ; Unknown 9xxx instruction
$BDE    $4E8A   SNE      VE, #8A         ; Skip if VE != 138
$BE0    $6E7B   LD       VE, #7B         ; Load 123 into VE
$BE2    $6647   LD       V6, #47         ; Load 71 into V6
$BE4    $5D91   UNKNOWN  $5D91           ; Unknown 5xxx instruction
$BE6    $CAA2   RND      VA, #A2         ; VA = random & A2
$BE8    $409F   SNE      V0, #9F         ; Skip if V0 != 159
$BEA    $6AE2   LD       VA, #E2         ; Load 226 into VA
$BEC    $7560   ADD      V5, #60         ; Add 96 to V5
$BEE    $80CE   SHL      V0              ; V0 <<= 1, VF = MSB
$BF0    $5A32   UNKNOWN  $5A32           ; Unknown 5xxx instruction
$BF2    $D492   DRW      V4, V9, #2      ; Draw 2-byte sprite at V4, V9
$BF4    $CE27   RND      VE, #27         ; VE = random & 27
$BF6    $AB93   LD       I, $B93         ; Load B93 into I
$BF8    $5819   UNKNOWN  $5819           ; Unknown 5xxx instruction
$BFA    $E5E1   UNKNOWN  $E5E1           ; Unknown Exxx instruction
$BFC    $A30E   LD       I, $30E         ; Load 30E into I
$BFE    $C475   RND      V4, #75         ; V4 = random & 75
$C00    $62D5   LD       V2, #D5         ; Load 213 into V2
$C02    $60EE   LD       V0, #EE         ; Load 238 into V0
$C04    $0932   SYS      $932            ; System call to 932
$C06    $E390   UNKNOWN  $E390           ; Unknown Exxx instruction
$C08    $E83F   UNKNOWN  $E83F           ; Unknown Exxx instruction
$C0A    $93A1   UNKNOWN  $93A1           ; Unknown 9xxx instruction
$C0C    $D69E   DRW      V6, V9, #E      ; Draw 14-byte sprite at V6, V9
$C0E    $3316   SE       V3, #16         ; Skip if V3 == 22
$C10    $1FB6   JP       $FB6            ; Jump to FB6
$C12    $C8B5   RND      V8, #B5         ; V8 = random & B5
$C14    $C362   RND      V3, #62         ; V3 = random & 62
$C16    $8F61   OR       VF, V6          ; VF |= V6
$C18    $C476   RND      V4, #76         ; V4 = random & 76
$C1A    $7385   ADD      V3, #85         ; Add 133 to V3
$C1C    $4334   SNE      V3, #34         ; Skip if V3 != 52
$C1E    $6D3F   LD       VD, #3F         ; Load 63 into VD
$C20    $E2EF   UNKNOWN  $E2EF           ; Unknown Exxx instruction
$C22    $41E2   SNE      V1, #E2         ; Skip if V1 != 226
$C24    $C934   RND      V9, #34         ; V9 = random & 34
$C26    $623A   LD       V2, #3A         ; Load 58 into V2
$C28    $5A22   UNKNOWN  $5A22           ; Unknown 5xxx instruction
$C2A    $E0A0   UNKNOWN  $E0A0           ; Unknown Exxx instruction
$C2C    $6CFC   LD       VC, #FC         ; Load 252 into VC
$C2E    $7395   ADD      V3, #95         ; Add 149 to V3
$C30    $708F   ADD      V0, #8F         ; Add 143 to V0
$C32    $6D52   LD       VD, #52         ; Load 82 into VD
$C34    $9BDD   UNKNOWN  $9BDD           ; Unknown 9xxx instruction
$C36    $5D8A   UNKNOWN  $5D8A           ; Unknown 5xxx instruction
$C38    $B13D   JP       V0, $13D        ; Jump to V0 + 13D
$C3A    $ACB2   LD       I, $CB2         ; Load CB2 into I
$C3C    $2A98   CALL     $A98            ; Call subroutine at A98
$C3E    $A1D0   LD       I, $1D0         ; Load 1D0 into I
$C40    $424A   SNE      V2, #4A         ; Skip if V2 != 74
$C42    $AD99   LD       I, $D99         ; Load D99 into I
$C44    $A8AD   LD       I, $8AD         ; Load 8AD into I
$C46    $5A59   UNKNOWN  $5A59           ; Unknown 5xxx instruction
$C48    $7AD9   ADD      VA, #D9         ; Add 217 to VA
$C4A    $2432   CALL     $432            ; Call subroutine at 432
$C4C    $0DAB   SYS      $DAB            ; System call to DAB
$C4E    $FF29   LD       F, VF           ; I = sprite address for digit VF
$C50    $5D5D   UNKNOWN  $5D5D           ; Unknown 5xxx instruction
$C52    $3A5F   SE       VA, #5F         ; Skip if VA == 95
$C54    $2439   CALL     $439            ; Call subroutine at 439
$C56    $783B   ADD      V8, #3B         ; Add 59 to V8
$C58    $40E1   SNE      V0, #E1         ; Skip if V0 != 225
$C5A    $7DE0   ADD      VD, #E0         ; Add 224 to VD
$C5C    $2540   CALL     $540            ; Call subroutine at 540
$C5E    $8C04   ADD      VC, V0          ; VC += V0, VF = carry
$C60    $3176   SE       V1, #76         ; Skip if V1 == 118
$C62    $42C7   SNE      V2, #C7         ; Skip if V2 != 199
$C64    $E5B2   UNKNOWN  $E5B2           ; Unknown Exxx instruction
$C66    $8B85   SUB      VB, V8          ; VB -= V8, VF = !borrow
$C68    $7C52   ADD      VC, #52         ; Add 82 to VC
$C6A    $EA92   UNKNOWN  $EA92           ; Unknown Exxx instruction
$C6C    $9243   UNKNOWN  $9243           ; Unknown 9xxx instruction
$C6E    $B468   JP       V0, $468        ; Jump to V0 + 468
$C70    $4A5A   SNE      VA, #5A         ; Skip if VA != 90
$C72    $5778   UNKNOWN  $5778           ; Unknown 5xxx instruction
$C74    $6D76   LD       VD, #76         ; Load 118 into VD
$C76    $ABDD   LD       I, $BDD         ; Load BDD into I
$C78    $DB25   DRW      VB, V2, #5      ; Draw 5-byte sprite at VB, V2
$C7A    $94A5   UNKNOWN  $94A5           ; Unknown 9xxx instruction
$C7C    $DE61   DRW      VE, V6, #1      ; Draw 1-byte sprite at VE, V6
$C7E    $3668   SE       V6, #68         ; Skip if V6 == 104
$C80    $9FFF   UNKNOWN  $9FFF           ; Unknown 9xxx instruction
$C82    $6443   LD       V4, #43         ; Load 67 into V4
$C84    $BE51   JP       V0, $E51        ; Jump to V0 + E51
$C86    $779A   ADD      V7, #9A         ; Add 154 to V7
$C88    $123E   JP       $23E            ; Jump to 23E
$C8A    $738B   ADD      V3, #8B         ; Add 139 to V3
$C8C    $90D8   UNKNOWN  $90D8           ; Unknown 9xxx instruction
$C8E    $77F4   ADD      V7, #F4         ; Add 244 to V7
$C90    $FBF0   UNKNOWN  FBF0            ; Unknown Fxxx instruction
$C92    $174E   JP       $74E            ; Jump to 74E
$C94    $5253   UNKNOWN  $5253           ; Unknown 5xxx instruction
$C96    $7A4F   ADD      VA, #4F         ; Add 79 to VA
$C98    $5C63   UNKNOWN  $5C63           ; Unknown 5xxx instruction
$C9A    $806D   UNKNOWN  806D            ; Unknown 8xxx instruction
$C9C    $1C49   JP       $C49            ; Jump to C49
$C9E    $9B8A   UNKNOWN  $9B8A           ; Unknown 9xxx instruction
$CA0    $CF63   RND      VF, #63         ; VF = random & 63
$CA2    $3055   SE       V0, #55         ; Skip if V0 == 85
$CA4    $6A7E   LD       VA, #7E         ; Load 126 into VA
$CA6    $09AC   SYS      $9AC            ; System call to 9AC
$CA8    $388E   SE       V8, #8E         ; Skip if V8 == 142
$CAA    $2B80   CALL     $B80            ; Call subroutine at B80
$CAC    $776F   ADD      V7, #6F         ; Add 111 to V7
$CAE    $5DE0   SE       VD, VE          ; Skip if VD == VE
$CB0    $CCE1   RND      VC, #E1         ; VC = random & E1
$CB2    $BE21   JP       V0, $E21        ; Jump to V0 + E21
$CB4    $80C9   UNKNOWN  80C9            ; Unknown 8xxx instruction
$CB6    $D44E   DRW      V4, V4, #E      ; Draw 14-byte sprite at V4, V4
$CB8    $DCA3   DRW      VC, VA, #3      ; Draw 3-byte sprite at VC, VA
$CBA    $1C77   JP       $C77            ; Jump to C77
$CBC    $456A   SNE      V5, #6A         ; Skip if V5 != 106
$CBE    $8222   AND      V2, V2          ; V2 &= V2
$CC0    $3B4E   SE       VB, #4E         ; Skip if VB == 78
$CC2    $3449   SE       V4, #49         ; Skip if V4 == 73
$CC4    $C1BE   RND      V1, #BE         ; V1 = random & BE
$CC6    $8B29   UNKNOWN  8B29            ; Unknown 8xxx instruction
$CC8    $03B8   SYS      $3B8            ; System call to 3B8
$CCA    $8DA7   SUBN     VD, VA          ; VD = VA - VD, VF = !borrow
$CCC    $2B18   CALL     $B18            ; Call subroutine at B18
$CCE    $EB52   UNKNOWN  $EB52           ; Unknown Exxx instruction
$CD0    $0AF4   SYS      $AF4            ; System call to AF4
$CD2    $E05B   UNKNOWN  $E05B           ; Unknown Exxx instruction
$CD4    $F3C5   UNKNOWN  F3C5            ; Unknown Fxxx instruction
$CD6    $F215   LD       DT, V2          ; Delay timer = V2
$CD8    $315E   SE       V1, #5E         ; Skip if V1 == 94
$CDA    $9DA1   UNKNOWN  $9DA1           ; Unknown 9xxx instruction
$CDC    $66D5   LD       V6, #D5         ; Load 213 into V6
$CDE    $8E49   UNKNOWN  8E49            ; Unknown 8xxx instruction
$CE0    $E8E2   UNKNOWN  $E8E2           ; Unknown Exxx instruction
$CE2    $5F63   UNKNOWN  $5F63           ; Unknown 5xxx instruction
$CE4    $D147   DRW      V1, V4, #7      ; Draw 7-byte sprite at V1, V4
$CE6    $25A2   CALL     $5A2            ; Call subroutine at 5A2
$CE8    $0F6E   SYS      $F6E            ; System call to F6E
$CEA    $9E63   UNKNOWN  $9E63           ; Unknown 9xxx instruction
$CEC    $D198   DRW      V1, V9, #8      ; Draw 8-byte sprite at V1, V9
$CEE    $8818   UNKNOWN  8818            ; Unknown 8xxx instruction
$CF0    $8116   SHR      V1              ; V1 >>= 1, VF = LSB
$CF2    $68E3   LD       V8, #E3         ; Load 227 into V8
$CF4    $4359   SNE      V3, #59         ; Skip if V3 != 89
$CF6    $2C6A   CALL     $C6A            ; Call subroutine at C6A
$CF8    $F6B1   UNKNOWN  F6B1            ; Unknown Fxxx instruction
$CFA    $DA17   DRW      VA, V1, #7      ; Draw 7-byte sprite at VA, V1
$CFC    $AA88   LD       I, $A88         ; Load A88 into I
$CFE    $6DA9   LD       VD, #A9         ; Load 169 into VD
$D00    $777B   ADD      V7, #7B         ; Add 123 to V7
$D02    $48F0   SNE      V8, #F0         ; Skip if V8 != 240
$D04    $EEB6   UNKNOWN  $EEB6           ; Unknown Exxx instruction
$D06    $06EE   SYS      $6EE            ; System call to 6EE
$D08    $C9E2   RND      V9, #E2         ; V9 = random & E2
$D0A    $8BCC   UNKNOWN  8BCC            ; Unknown 8xxx instruction
$D0C    $C2D2   RND      V2, #D2         ; V2 = random & D2
$D0E    $CE26   RND      VE, #26         ; VE = random & 26
$D10    $0CC6   SYS      $CC6            ; System call to CC6
$D12    $884B   UNKNOWN  884B            ; Unknown 8xxx instruction
$D14    $B524   JP       V0, $524        ; Jump to V0 + 524
$D16    $D780   DRW      V7, V8, #0      ; Draw 0-byte sprite at V7, V8
$D18    $A5CA   LD       I, $5CA         ; Load 5CA into I
$D1A    $0B99   SYS      $B99            ; System call to B99
$D1C    $7757   ADD      V7, #57         ; Add 87 to V7
$D1E    $4CB6   SNE      VC, #B6         ; Skip if VC != 182
$D20    $39FC   SE       V9, #FC         ; Skip if V9 == 252
$D22    $7BA4   ADD      VB, #A4         ; Add 164 to VB
$D24    $7A11   ADD      VA, #11         ; Add 17 to VA
$D26    $BABD   JP       V0, $ABD        ; Jump to V0 + ABD
$D28    $FB9C   UNKNOWN  FB9C            ; Unknown Fxxx instruction
$D2A    $C130   RND      V1, #30         ; V1 = random & 30
$D2C    $614C   LD       V1, #4C         ; Load 76 into V1
$D2E    $D359   DRW      V3, V5, #9      ; Draw 9-byte sprite at V3, V5
$D30    $D2FA   DRW      V2, VF, #A      ; Draw 10-byte sprite at V2, VF
$D32    $524B   UNKNOWN  $524B           ; Unknown 5xxx instruction
$D34    $32A7   SE       V2, #A7         ; Skip if V2 == 167
$D36    $6309   LD       V3, #09         ; Load 9 into V3
$D38    $DF3E   DRW      VF, V3, #E      ; Draw 14-byte sprite at VF, V3
$D3A    $2077   CALL     $077            ; Call subroutine at 077
$D3C    $3752   SE       V7, #52         ; Skip if V7 == 82
$D3E    $9ECC   UNKNOWN  $9ECC           ; Unknown 9xxx instruction
$D40    $2FB9   CALL     $FB9            ; Call subroutine at FB9
$D42    $776E   ADD      V7, #6E         ; Add 110 to V7
$D44    $D75D   DRW      V7, V5, #D      ; Draw 13-byte sprite at V7, V5
$D46    $52AE   UNKNOWN  $52AE           ; Unknown 5xxx instruction
$D48    $5CEB   UNKNOWN  $5CEB           ; Unknown 5xxx instruction
$D4A    $BFA5   JP       V0, $FA5        ; Jump to V0 + FA5
$D4C    $A34C   LD       I, $34C         ; Load 34C into I
$D4E    $65E2   LD       V5, #E2         ; Load 226 into V5
$D50    $7904   ADD      V9, #04         ; Add 4 to V9
$D52    $9D65   UNKNOWN  $9D65           ; Unknown 9xxx instruction
$D54    $331B   SE       V3, #1B         ; Skip if V3 == 27
$D56    $6585   LD       V5, #85         ; Load 133 into V5
$D58    $0292   SYS      $292            ; System call to 292
$D5A    $2982   CALL     $982            ; Call subroutine at 982
$D5C    $5AEA   UNKNOWN  $5AEA           ; Unknown 5xxx instruction
$D5E    $00D6   SYS      $0D6            ; System call to 0D6
$D60    $0730   SYS      $730            ; System call to 730
$D62    $C7B6   RND      V7, #B6         ; V7 = random & B6
$D64    $046D   SYS      $46D            ; System call to 46D
$D66    $E8DA   UNKNOWN  $E8DA           ; Unknown Exxx instruction
$D68    $7155   ADD      V1, #55         ; Add 85 to V1
$D6A    $C4F1   RND      V4, #F1         ; V4 = random & F1
$D6C    $B856   JP       V0, $856        ; Jump to V0 + 856
$D6E    $4017   SNE      V0, #17         ; Skip if V0 != 23
$D70    $046A   SYS      $46A            ; System call to 46A
$D72    $D611   DRW      V6, V1, #1      ; Draw 1-byte sprite at V6, V1
$D74    $61C6   LD       V1, #C6         ; Load 198 into V1
$D76    $53A4   UNKNOWN  $53A4           ; Unknown 5xxx instruction
$D78    $9466   UNKNOWN  $9466           ; Unknown 9xxx instruction
$D7A    $0CE1   SYS      $CE1            ; System call to CE1
$D7C    $85CF   UNKNOWN  85CF            ; Unknown 8xxx instruction
$D7E    $15C6   JP       $5C6            ; Jump to 5C6
$D80    $3502   SE       V5, #02         ; Skip if V5 == 2
$D82    $0A19   SYS      $A19            ; System call to A19
$D84    $25EE   CALL     $5EE            ; Call subroutine at 5EE
$D86    $A940   LD       I, $940         ; Load 940 into I
$D88    $91F6   UNKNOWN  $91F6           ; Unknown 9xxx instruction
$D8A    $E0E8   UNKNOWN  $E0E8           ; Unknown Exxx instruction
$D8C    $2730   CALL     $730            ; Call subroutine at 730
$D8E    $6F93   LD       VF, #93         ; Load 147 into VF
$D90    $2B24   CALL     $B24            ; Call subroutine at B24
$D92    $C22D   RND      V2, #2D         ; V2 = random & 2D
$D94    $2DDF   CALL     $DDF            ; Call subroutine at DDF
$D96    $EF9D   UNKNOWN  $EF9D           ; Unknown Exxx instruction
$D98    $FEC6   UNKNOWN  FEC6            ; Unknown Fxxx instruction
$D9A    $1034   JP       $034            ; Jump to 034
$D9C    $156B   JP       $56B            ; Jump to 56B
$D9E    $2E3D   CALL     $E3D            ; Call subroutine at E3D
$DA0    $CB11   RND      VB, #11         ; VB = random & 11
$DA2    $911F   UNKNOWN  $911F           ; Unknown 9xxx instruction
$DA4    $108D   JP       $08D            ; Jump to 08D
$DA6    $F8F6   UNKNOWN  F8F6            ; Unknown Fxxx instruction
$DA8    $A8C2   LD       I, $8C2         ; Load 8C2 into I
$DAA    $CF9A   RND      VF, #9A         ; VF = random & 9A
$DAC    $3915   SE       V9, #15         ; Skip if V9 == 21
$DAE    $7A8F   ADD      VA, #8F         ; Add 143 to VA
$DB0    $9433   UNKNOWN  $9433           ; Unknown 9xxx instruction
$DB2    $17C6   JP       $7C6            ; Jump to 7C6
$DB4    $D616   DRW      V6, V1, #6      ; Draw 6-byte sprite at V6, V1
$DB6    $319E   SE       V1, #9E         ; Skip if V1 == 158
$DB8    $1209   JP       $209            ; Jump to 209
$DBA    $F275   UNKNOWN  F275            ; Unknown Fxxx instruction
$DBC    $802E   SHL      V0              ; V0 <<= 1, VF = MSB
$DBE    $FAA6   UNKNOWN  FAA6            ; Unknown Fxxx instruction
$DC0    $D92A   DRW      V9, V2, #A      ; Draw 10-byte sprite at V9, V2
$DC2    $A8E8   LD       I, $8E8         ; Load 8E8 into I
$DC4    $E47D   UNKNOWN  $E47D           ; Unknown Exxx instruction
$DC6    $8B4B   UNKNOWN  8B4B            ; Unknown 8xxx instruction
$DC8    $AD52   LD       I, $D52         ; Load D52 into I
$DCA    $6B7A   LD       VB, #7A         ; Load 122 into VB
$DCC    $7D2D   ADD      VD, #2D         ; Add 45 to VD
$DCE    $A32D   LD       I, $32D         ; Load 32D into I
$DD0    $6801   LD       V8, #01         ; Load 1 into V8
$DD2    $16A3   JP       $6A3            ; Jump to 6A3
$DD4    $EFA8   UNKNOWN  $EFA8           ; Unknown Exxx instruction
$DD6    $0BA9   SYS      $BA9            ; System call to BA9
$DD8    $EA3C   UNKNOWN  $EA3C           ; Unknown Exxx instruction
$DDA    $1D85   JP       $D85            ; Jump to D85
$DDC    $EEC4   UNKNOWN  $EEC4           ; Unknown Exxx instruction
$DDE    $AF17   LD       I, $F17         ; Load F17 into I
$DE0    $5202   UNKNOWN  $5202           ; Unknown 5xxx instruction
$DE2    $5520   SE       V5, V2          ; Skip if V5 == V2
$DE4    $3C0B   SE       VC, #0B         ; Skip if VC == 11
$DE6    $4B57   SNE      VB, #57         ; Skip if VB != 87
$DE8    $305C   SE       V0, #5C         ; Skip if V0 == 92
$DEA    $4779   SNE      V7, #79         ; Skip if V7 != 121
$DEC    $DCBB   DRW      VC, VB, #B      ; Draw 11-byte sprite at VC, VB
$DEE    $B767   JP       V0, $767        ; Jump to V0 + 767
$DF0    $B744   JP       V0, $744        ; Jump to V0 + 744
$DF2    $9D56   UNKNOWN  $9D56           ; Unknown 9xxx instruction
$DF4    $9023   UNKNOWN  $9023           ; Unknown 9xxx instruction
$DF6    $0813   SYS      $813            ; System call to 813
$DF8    $5176   UNKNOWN  $5176           ; Unknown 5xxx instruction
$DFA    $6D15   LD       VD, #15         ; Load 21 into VD
$DFC    $55C3   UNKNOWN  $55C3           ; Unknown 5xxx instruction
$DFE    $326B   SE       V2, #6B         ; Skip if V2 == 107
$E00    $DA6A   DRW      VA, V6, #A      ; Draw 10-byte sprite at VA, V6
$E02    $5133   UNKNOWN  $5133           ; Unknown 5xxx instruction
$E04    $FA43   UNKNOWN  FA43            ; Unknown Fxxx instruction
$E06    $FF53   UNKNOWN  FF53            ; Unknown Fxxx instruction
$E08    $DC98   DRW      VC, V9, #8      ; Draw 8-byte sprite at VC, V9
$E0A    $1A1F   JP       $A1F            ; Jump to A1F
$E0C    $7FF7   ADD      VF, #F7         ; Add 247 to VF
$E0E    $709C   ADD      V0, #9C         ; Add 156 to V0
$E10    $28AE   CALL     $8AE            ; Call subroutine at 8AE
$E12    $06DC   SYS      $6DC            ; System call to 6DC
$E14    $06F6   SYS      $6F6            ; System call to 6F6
$E16    $70BA   ADD      V0, #BA         ; Add 186 to V0
$E18    $A3E1   LD       I, $3E1         ; Load 3E1 into I
$E1A    $99BE   UNKNOWN  $99BE           ; Unknown 9xxx instruction
$E1C    $2328   CALL     $328            ; Call subroutine at 328
$E1E    $5232   UNKNOWN  $5232           ; Unknown 5xxx instruction
$E20    $2674   CALL     $674            ; Call subroutine at 674
$E22    $5FF4   UNKNOWN  $5FF4           ; Unknown 5xxx instruction
$E24    $EDC4   UNKNOWN  $EDC4           ; Unknown Exxx instruction
$E26    $E6F3   UNKNOWN  $E6F3           ; Unknown Exxx instruction
$E28    $267E   CALL     $67E            ; Call subroutine at 67E
$E2A    $73F9   ADD      V3, #F9         ; Add 249 to V3
$E2C    $6AE2   LD       VA, #E2         ; Load 226 into VA
$E2E    $1708   JP       $708            ; Jump to 708
$E30    $1E22   JP       $E22            ; Jump to E22
$E32    $392E   SE       V9, #2E         ; Skip if V9 == 46
$E34    $C3FF   RND      V3, #FF         ; V3 = random & FF
$E36    $321B   SE       V2, #1B         ; Skip if V2 == 27
$E38    $2EBA   CALL     $EBA            ; Call subroutine at EBA
$E3A    $8BC6   SHR      VB              ; VB >>= 1, VF = LSB
$E3C    $6E4D   LD       VE, #4D         ; Load 77 into VE
$E3E    $7BC7   ADD      VB, #C7         ; Add 199 to VB
$E40    $08C9   SYS      $8C9            ; System call to 8C9
$E42    $55B7   UNKNOWN  $55B7           ; Unknown 5xxx instruction
$E44    $1DFE   JP       $DFE            ; Jump to DFE
$E46    $F44F   UNKNOWN  F44F            ; Unknown Fxxx instruction
$E48    $6564   LD       V5, #64         ; Load 100 into V5
$E4A    $E0D5   UNKNOWN  $E0D5           ; Unknown Exxx instruction
$E4C    $51BF   UNKNOWN  $51BF           ; Unknown 5xxx instruction
$E4E    $9A7A   UNKNOWN  $9A7A           ; Unknown 9xxx instruction
$E50    $9213   UNKNOWN  $9213           ; Unknown 9xxx instruction
$E52    $5A03   UNKNOWN  $5A03           ; Unknown 5xxx instruction
$E54    $EBEF   UNKNOWN  $EBEF           ; Unknown Exxx instruction
$E56    $DAD6   DRW      VA, VD, #6      ; Draw 6-byte sprite at VA, VD
$E58    $D578   DRW      V5, V7, #8      ; Draw 8-byte sprite at V5, V7
$E5A    $E020   UNKNOWN  $E020           ; Unknown Exxx instruction
$E5C    $990A   UNKNOWN  $990A           ; Unknown 9xxx instruction
$E5E    $76D1   ADD      V6, #D1         ; Add 209 to V6
$E60    $E4E1   UNKNOWN  $E4E1           ; Unknown Exxx instruction
$E62    $B641   JP       V0, $641        ; Jump to V0 + 641
$E64    $8B04   ADD      VB, V0          ; VB += V0, VF = carry
$E66    $C303   RND      V3, #03         ; V3 = random & 03
$E68    $0F4A   SYS      $F4A            ; System call to F4A
$E6A    $2177   CALL     $177            ; Call subroutine at 177
$E6C    $28C2   CALL     $8C2            ; Call subroutine at 8C2
$E6E    $0A72   SYS      $A72            ; System call to A72
$E70    $D505   DRW      V5, V0, #5      ; Draw 5-byte sprite at V5, V0
$E72    $395E   SE       V9, #5E         ; Skip if V9 == 94
$E74    $9FA5   UNKNOWN  $9FA5           ; Unknown 9xxx instruction
$E76    $4E4A   SNE      VE, #4A         ; Skip if VE != 74
$E78    $8C47   SUBN     VC, V4          ; VC = V4 - VC, VF = !borrow
$E7A    $DF0B   DRW      VF, V0, #B      ; Draw 11-byte sprite at VF, V0
$E7C    $6A58   LD       VA, #58         ; Load 88 into VA
$E7E    $F3AB   UNKNOWN  F3AB            ; Unknown Fxxx instruction
$E80    $E3CD   UNKNOWN  $E3CD           ; Unknown Exxx instruction
$E82    $B795   JP       V0, $795        ; Jump to V0 + 795
$E84    $E11C   UNKNOWN  $E11C           ; Unknown Exxx instruction
$E86    $3004   SE       V0, #04         ; Skip if V0 == 4
$E88    $DCFF   DRW      VC, VF, #F      ; Draw 15-byte sprite at VC, VF
$E8A    $ED26   UNKNOWN  $ED26           ; Unknown Exxx instruction
$E8C    $A78A   LD       I, $78A         ; Load 78A into I
$E8E    $430D   SNE      V3, #0D         ; Skip if V3 != 13
$E90    $F6AE   UNKNOWN  F6AE            ; Unknown Fxxx instruction
$E92    $D14E   DRW      V1, V4, #E      ; Draw 14-byte sprite at V1, V4
$E94    $2DD5   CALL     $DD5            ; Call subroutine at DD5
$E96    $F5DB   UNKNOWN  F5DB            ; Unknown Fxxx instruction
$E98    $45AF   SNE      V5, #AF         ; Skip if V5 != 175
$E9A    $B1CC   JP       V0, $1CC        ; Jump to V0 + 1CC
$E9C    $3327   SE       V3, #27         ; Skip if V3 == 39
$E9E    $106B   JP       $06B            ; Jump to 06B
$EA0    $5062   UNKNOWN  $5062           ; Unknown 5xxx instruction
$EA2    $D3D6   DRW      V3, VD, #6      ; Draw 6-byte sprite at V3, VD
$EA4    $C749   RND      V7, #49         ; V7 = random & 49
$EA6    $39B1   SE       V9, #B1         ; Skip if V9 == 177
$EA8    $A2F0   LD       I, $2F0         ; Load 2F0 into I
$EAA    $5EF0   SE       VE, VF          ; Skip if VE == VF
$EAC    $0990   SYS      $990            ; System call to 990
$EAE    $D9A4   DRW      V9, VA, #4      ; Draw 4-byte sprite at V9, VA
$EB0    $E938   UNKNOWN  $E938           ; Unknown Exxx instruction
$EB2    $9006   UNKNOWN  $9006           ; Unknown 9xxx instruction
$EB4    $720F   ADD      V2, #0F         ; Add 15 to V2
$EB6    $610C   LD       V1, #0C         ; Load 12 into V1
$EB8    $D4AA   DRW      V4, VA, #A      ; Draw 10-byte sprite at V4, VA
$EBA    $5F4F   UNKNOWN  $5F4F           ; Unknown 5xxx instruction
$EBC    $B2A5   JP       V0, $2A5        ; Jump to V0 + 2A5
$EBE    $357E   SE       V5, #7E         ; Skip if V5 == 126
$EC0    $4122   SNE      V1, #22         ; Skip if V1 != 34
$EC2    $E417   UNKNOWN  $E417           ; Unknown Exxx instruction
$EC4    $135B   JP       $35B            ; Jump to 35B
$EC6    $1766   JP       $766            ; Jump to 766
$EC8    $60F9   LD       V0, #F9         ; Load 249 into V0
$ECA    $22FD   CALL     $2FD            ; Call subroutine at 2FD
$ECC    $9384   UNKNOWN  $9384           ; Unknown 9xxx instruction
$ECE    $F0FB   UNKNOWN  F0FB            ; Unknown Fxxx instruction
$ED0    $C718   RND      V7, #18         ; V7 = random & 18
$ED2    $483F   SNE      V8, #3F         ; Skip if V8 != 63
$ED4    $5C3A   UNKNOWN  $5C3A           ; Unknown 5xxx instruction
$ED6    $7278   ADD      V2, #78         ; Add 120 to V2
$ED8    $B8CF   JP       V0, $8CF        ; Jump to V0 + 8CF
$EDA    $EF2B   UNKNOWN  $EF2B           ; Unknown Exxx instruction
$EDC    $3146   SE       V1, #46         ; Skip if V1 == 70
$EDE    $84F2   AND      V4, VF          ; V4 &= VF
$EE0    $5192   UNKNOWN  $5192           ; Unknown 5xxx instruction
$EE2    $1D5D   JP       $D5D            ; Jump to D5D
$EE4    $E479   UNKNOWN  $E479           ; Unknown Exxx instruction
$EE6    $A55A   LD       I, $55A         ; Load 55A into I
$EE8    $6DB2   LD       VD, #B2         ; Load 178 into VD
$EEA    $DAB6   DRW      VA, VB, #6      ; Draw 6-byte sprite at VA, VB
$EEC    $6502   LD       V5, #02         ; Load 2 into V5
$EEE    $6BB8   LD       VB, #B8         ; Load 184 into VB
$EF0    $A043   LD       I, $043         ; Load 043 into I
$EF2    $F3D0   UNKNOWN  F3D0            ; Unknown Fxxx instruction
$EF4    $6DA9   LD       VD, #A9         ; Load 169 into VD
$EF6    $3BBD   SE       VB, #BD         ; Skip if VB == 189
$EF8    $8983   XOR      V9, V8          ; V9 ^= V8
$EFA    $FCE7   UNKNOWN  FCE7            ; Unknown Fxxx instruction
$EFC    $8AC4   ADD      VA, VC          ; VA += VC, VF = carry
$EFE    $F2B9   UNKNOWN  F2B9            ; Unknown Fxxx instruction
$F00    $B1ED   JP       V0, $1ED        ; Jump to V0 + 1ED
$F02    $6ED0   LD       VE, #D0         ; Load 208 into VE
$F04    $978F   UNKNOWN  $978F           ; Unknown 9xxx instruction
$F06    $80F8   UNKNOWN  80F8            ; Unknown 8xxx instruction
$F08    $2B89   CALL     $B89            ; Call subroutine at B89
$F0A    $6178   LD       V1, #78         ; Load 120 into V1
$F0C    $DE94   DRW      VE, V9, #4      ; Draw 4-byte sprite at VE, V9
$F0E    $6956   LD       V9, #56         ; Load 86 into V9
$F10    $0B13   SYS      $B13            ; System call to B13
$F12    $7B93   ADD      VB, #93         ; Add 147 to VB
$F14    $7473   ADD      V4, #73         ; Add 115 to V4
$F16    $3FFC   SE       VF, #FC         ; Skip if VF == 252
$F18    $997E   UNKNOWN  $997E           ; Unknown 9xxx instruction
$F1A    $2760   CALL     $760            ; Call subroutine at 760
$F1C    $D632   DRW      V6, V3, #2      ; Draw 2-byte sprite at V6, V3
$F1E    $EB4A   UNKNOWN  $EB4A           ; Unknown Exxx instruction
$F20    $248C   CALL     $48C            ; Call subroutine at 48C
$F22    $F4F6   UNKNOWN  F4F6            ; Unknown Fxxx instruction
$F24    $4DCF   SNE      VD, #CF         ; Skip if VD != 207
$F26    $972A   UNKNOWN  $972A           ; Unknown 9xxx instruction
$F28    $BD7B   JP       V0, $D7B        ; Jump to V0 + D7B
$F2A    $021F   SYS      $21F            ; System call to 21F
$F2C    $7367   ADD      V3, #67         ; Add 103 to V3
$F2E    $DA4B   DRW      VA, V4, #B      ; Draw 11-byte sprite at VA, V4
$F30    $E8B7   UNKNOWN  $E8B7           ; Unknown Exxx instruction
$F32    $D4BC   DRW      V4, VB, #C      ; Draw 12-byte sprite at V4, VB
$F34    $25E8   CALL     $5E8            ; Call subroutine at 5E8
$F36    $B834   JP       V0, $834        ; Jump to V0 + 834
$F38    $E9A4   UNKNOWN  $E9A4           ; Unknown Exxx instruction
$F3A    $5AA8   UNKNOWN  $5AA8           ; Unknown 5xxx instruction
$F3C    $46CF   SNE      V6, #CF         ; Skip if V6 != 207
$F3E    $EF7B   UNKNOWN  $EF7B           ; Unknown Exxx instruction
$F40    $0D99   SYS      $D99            ; System call to D99
$F42    $B88A   JP       V0, $88A        ; Jump to V0 + 88A
$F44    $D81D   DRW      V8, V1, #D      ; Draw 13-byte sprite at V8, V1
$F46    $1A62   JP       $A62            ; Jump to A62
$F48    $FD58   UNKNOWN  FD58            ; Unknown Fxxx instruction
$F4A    $0C1A   SYS      $C1A            ; System call to C1A
$F4C    $395F   SE       V9, #5F         ; Skip if V9 == 95
$F4E    $7083   ADD      V0, #83         ; Add 131 to V0
$F50    $6E9C   LD       VE, #9C         ; Load 156 into VE
$F52    $7153   ADD      V1, #53         ; Add 83 to V1
$F54    $F7F2   UNKNOWN  F7F2            ; Unknown Fxxx instruction
$F56    $85B8   UNKNOWN  85B8            ; Unknown 8xxx instruction
$F58    $7412   ADD      V4, #12         ; Add 18 to V4
$F5A    $A4A9   LD       I, $4A9         ; Load 4A9 into I
$F5C    $EA29   UNKNOWN  $EA29           ; Unknown Exxx instruction
$F5E    $89BC   UNKNOWN  89BC            ; Unknown 8xxx instruction
$F60    $13D2   JP       $3D2            ; Jump to 3D2
$F62    $9368   UNKNOWN  $9368           ; Unknown 9xxx instruction
$F64    $1BA5   JP       $BA5            ; Jump to BA5
$F66    $BE94   JP       V0, $E94        ; Jump to V0 + E94
$F68    $9D05   UNKNOWN  $9D05           ; Unknown 9xxx instruction
$F6A    $545A   UNKNOWN  $545A           ; Unknown 5xxx instruction
$F6C    $DD3C   DRW      VD, V3, #C      ; Draw 12-byte sprite at VD, V3
$F6E    $1F26   JP       $F26            ; Jump to F26
$F70    $8EE4   ADD      VE, VE          ; VE += VE, VF = carry
$F72    $60B4   LD       V0, #B4         ; Load 180 into V0
$F74    $B17A   JP       V0, $17A        ; Jump to V0 + 17A
$F76    $4EFE   SNE      VE, #FE         ; Skip if VE != 254
$F78    $DA5B   DRW      VA, V5, #B      ; Draw 11-byte sprite at VA, V5
$F7A    $A985   LD       I, $985         ; Load 985 into I
$F7C    $146C   JP       $46C            ; Jump to 46C
$F7E    $9FD3   UNKNOWN  $9FD3           ; Unknown 9xxx instruction
$F80    $88D5   SUB      V8, VD          ; V8 -= VD, VF = !borrow
$F82    $3EE7   SE       VE, #E7         ; Skip if VE == 231
$F84    $6748   LD       V7, #48         ; Load 72 into V7
$F86    $E0DD   UNKNOWN  $E0DD           ; Unknown Exxx instruction
$F88    $73CF   ADD      V3, #CF         ; Add 207 to V3
$F8A    $3B46   SE       VB, #46         ; Skip if VB == 70
$F8C    $00F8   SYS      $0F8            ; System call to 0F8
$F8E    $325F   SE       V2, #5F         ; Skip if V2 == 95
$F90    $CF9E   RND      VF, #9E         ; VF = random & 9E
$F92    $2485   CALL     $485            ; Call subroutine at 485
$F94    $8C0D   UNKNOWN  8C0D            ; Unknown 8xxx instruction
$F96    $8D8B   UNKNOWN  8D8B            ; Unknown 8xxx instruction
$F98    $A944   LD       I, $944         ; Load 944 into I
$F9A    $BECA   JP       V0, $ECA        ; Jump to V0 + ECA
$F9C    $30ED   SE       V0, #ED         ; Skip if V0 == 237
$F9E    $DC98   DRW      VC, V9, #8      ; Draw 8-byte sprite at VC, V9
$FA0    $7E49   ADD      VE, #49         ; Add 73 to VE
$FA2    $E412   UNKNOWN  $E412           ; Unknown Exxx instruction
$FA4    $5C71   UNKNOWN  $5C71           ; Unknown 5xxx instruction
$FA6    $EFBC   UNKNOWN  $EFBC           ; Unknown Exxx instruction
$FA8    $18B7   JP       $8B7            ; Jump to 8B7
$FAA    $C583   RND      V5, #83         ; V5 = random & 83
$FAC    $27C4   CALL     $7C4            ; Call subroutine at 7C4
$FAE    $A43E   LD       I, $43E         ; Load 43E into I
$FB0    $3DB0   SE       VD, #B0         ; Skip if VD == 176
$FB2    $A274   LD       I, $274         ; Load 274 into I
$FB4    $53F6   UNKNOWN  $53F6           ; Unknown 5xxx instruction
$FB6    $D4FF   DRW      V4, VF, #F      ; Draw 15-byte sprite at V4, VF
$FB8    $7AC4   ADD      VA, #C4         ; Add 196 to VA
$FBA    $EB5A   UNKNOWN  $EB5A           ; Unknown Exxx instruction
$FBC    $43C6   SNE      V3, #C6         ; Skip if V3 != 198
$FBE    $7CFE   ADD      VC, #FE         ; Add 254 to VC
$FC0    $E06A   UNKNOWN  $E06A           ; Unknown Exxx instruction
$FC2    $3ED7   SE       VE, #D7         ; Skip if VE == 215
$FC4    $D39F   DRW      V3, V9, #F      ; Draw 15-byte sprite at V3, V9
$FC6    $04FC   SYS      $4FC            ; System call to 4FC
$FC8    $8312   AND      V3, V1          ; V3 &= V1
$FCA    $6407   LD       V4, #07         ; Load 7 into V4
$FCC    $3791   SE       V7, #91         ; Skip if V7 == 145
$FCE    $3A2E   SE       VA, #2E         ; Skip if VA == 46
$FD0    $A571   LD       I, $571         ; Load 571 into I
$FD2    $2667   CALL     $667            ; Call subroutine at 667
$FD4    $E32C   UNKNOWN  $E32C           ; Unknown Exxx instruction
$FD6    $96E3   UNKNOWN  $96E3           ; Unknown 9xxx instruction
$FD8    $E780   UNKNOWN  $E780           ; Unknown Exxx instruction
$FDA    $0820   SYS      $820            ; System call to 820
$FDC    $AD30   LD       I, $D30         ; Load D30 into I
$FDE    $86EC   UNKNOWN  86EC            ; Unknown 8xxx instruction
$FE0    $15F0   JP       $5F0            ; Jump to 5F0
$FE2    $0497   SYS      $497            ; System call to 497
$FE4    $9903   UNKNOWN  $9903           ; Unknown 9xxx instruction
$FE6    $9D45   UNKNOWN  $9D45           ; Unknown 9xxx instruction
$FE8    $6937   LD       V9, #37         ; Load 55 into V9
$FEA    $3F7B   SE       VF, #7B         ; Skip if VF == 123
$FEC    $94F5   UNKNOWN  $94F5           ; Unknown 9xxx instruction
$FEE    $5B5E   UNKNOWN  $5B5E           ; Unknown 5xxx instruction
$FF0    $007D   SYS      $07D            ; System call to 07D
$FF2    $9CA0   SNE      VC, VA          ; Skip if VC != VA
$FF4    $4DE4   SNE      VD, #E4         ; Skip if VD != 228
$FF6    $0C7D   SYS      $C7D            ; System call to C7D
$FF8    $5131   UNKNOWN  $5131           ; Unknown 5xxx instruction
$FFA    $B2AC   JP       V0, $2AC        ; Jump to V0 + 2AC
$FFC    $6BC4   LD       VB, #C4         ; Load 196 into VB
$FFE    $B03D   JP       V0, $03D        ; Jump to V0 + 03D

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 485 (27.1%)
  LD      : 244 (13.6%)
  JP      : 198 (11.0%)
  SE      : 132 ( 7.4%)
  ADD     : 121 ( 6.8%)
  SNE     : 120 ( 6.7%)
  SYS     : 114 ( 6.4%)
  DRW     : 110 ( 6.1%)
  CALL    : 107 ( 6.0%)
  RND     : 104 ( 5.8%)
  SHL     :  14 ( 0.8%)
  AND     :   9 ( 0.5%)
  SUB     :   9 ( 0.5%)
  SHR     :   8 ( 0.4%)
  XOR     :   8 ( 0.4%)
  OR      :   6 ( 0.3%)
  SUBN    :   3 ( 0.2%)

Memory Operations: 365 (20.4%)
Arithmetic Operations: 156 (8.7%)
