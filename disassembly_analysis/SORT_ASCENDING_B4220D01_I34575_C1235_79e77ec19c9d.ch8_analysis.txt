
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B4220D01_I34575_C1235_79e77ec19c9d.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 4220
Instance: 34575
Direction: ascending
Final Array: [0, 6, 9, 16, 41, 123, 211, 211]
Operations: R:0 W:1 C:72 S:5

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 105
Sort Array References:
  $220: LD I, $F93 ; Load F93 into I
  $238: LD I, $4E3 ; Load 4E3 into I
  $23E: LD I, $4A1 ; Load 4A1 into I
  $256: LD I, $F81 ; Load F81 into I
  $266: LD I, $D96 ; Load D96 into I
  $27C: LD I, $12B ; Load 12B into I
  $292: LD I, $7C8 ; Load 7C8 into I
  $29E: LD I, $94A ; Load 94A into I
  $2B4: LD I, $25E ; Load 25E into I
  $2C8: LD I, $D84 ; Load D84 into I
  $2D0: LD I, $C93 ; Load C93 into I
  $2E6: LD I, $A61 ; Load A61 into I
  $2F6: LD I, $8E1 ; Load 8E1 into I
  $30E: LD I, $16B ; Load 16B into I
  $31A: LD I, $C09 ; Load C09 into I
  $328: LD I, $194 ; Load 194 into I
  $330: LD I, $9F0 ; Load 9F0 into I
  $334: LD I, $8CD ; Load 8CD into I
  $3A4: LD I, $7A3 ; Load 7A3 into I
  $3E6: LD I, $70E ; Load 70E into I
  $3FC: LD I, $40A ; Load 40A into I
  $406: LD I, $06A ; Load 06A into I
  $40E: LD I, $4B0 ; Load 4B0 into I
  $42A: LD I, $E5F ; Load E5F into I
  $46E: LD I, $F0B ; Load F0B into I
  $486: LD I, $FE8 ; Load FE8 into I
  $52A: LD I, $460 ; Load 460 into I
  $56E: LD I, $0AE ; Load 0AE into I
  $574: LD I, $C4D ; Load C4D into I
  $5B0: LD I, $D4C ; Load D4C into I
  $5EA: LD I, $FAA ; Load FAA into I
  $5EE: LD I, $2B2 ; Load 2B2 into I
  $642: LD I, $FD7 ; Load FD7 into I
  $666: LD I, $C53 ; Load C53 into I
  $672: LD I, $8B2 ; Load 8B2 into I
  $67E: LD I, $488 ; Load 488 into I
  $6C2: LD I, $28A ; Load 28A into I
  $6C4: LD I, $DF7 ; Load DF7 into I
  $6EE: LD I, $C79 ; Load C79 into I
  $72C: LD I, $04A ; Load 04A into I
  $73E: LD I, $DD5 ; Load DD5 into I
  $784: LD I, $811 ; Load 811 into I
  $7AC: LD I, $BC9 ; Load BC9 into I
  $7D0: LD I, $F12 ; Load F12 into I
  $7D8: LD I, $10D ; Load 10D into I
  $7DA: LD I, $595 ; Load 595 into I
  $810: LD I, $80C ; Load 80C into I
  $816: LD I, $0CE ; Load 0CE into I
  $81A: LD I, $BC0 ; Load BC0 into I
  $848: LD I, $6FC ; Load 6FC into I
  $86C: LD I, $1B1 ; Load 1B1 into I
  $86E: LD I, $EB0 ; Load EB0 into I
  $872: LD I, $2E2 ; Load 2E2 into I
  $87C: LD I, $6C6 ; Load 6C6 into I
  $886: LD I, $189 ; Load 189 into I
  $8CE: LD I, $7E6 ; Load 7E6 into I
  $8E6: LD I, $270 ; Load 270 into I
  $922: LD I, $3EA ; Load 3EA into I
  $938: LD I, $CA4 ; Load CA4 into I
  $946: LD I, $1DB ; Load 1DB into I
  $986: LD I, $039 ; Load 039 into I
  $9B0: LD I, $FB9 ; Load FB9 into I
  $9FC: LD I, $82D ; Load 82D into I
  $A08: LD I, $36B ; Load 36B into I
  $A32: LD I, $11B ; Load 11B into I
  $A48: LD I, $370 ; Load 370 into I
  $A66: LD I, $3DB ; Load 3DB into I
  $A76: LD I, $4F8 ; Load 4F8 into I
  $AEA: LD I, $5AC ; Load 5AC into I
  $AF2: LD I, $0CA ; Load 0CA into I
  $B2A: LD I, $59B ; Load 59B into I
  $B6E: LD I, $2DD ; Load 2DD into I
  $BC8: LD I, $2D0 ; Load 2D0 into I
  $BCE: LD I, $597 ; Load 597 into I
  $BE8: LD I, $1A5 ; Load 1A5 into I
  $C0E: LD I, $965 ; Load 965 into I
  $C2A: LD I, $249 ; Load 249 into I
  $CC0: LD I, $EA8 ; Load EA8 into I
  $CDE: LD I, $7A4 ; Load 7A4 into I
  $CE0: LD I, $918 ; Load 918 into I
  $CE8: LD I, $8EE ; Load 8EE into I
  $D08: LD I, $957 ; Load 957 into I
  $D0E: LD I, $BE1 ; Load BE1 into I
  $D1A: LD I, $DDD ; Load DDD into I
  $D22: LD I, $3DA ; Load 3DA into I
  $D3A: LD I, $AB7 ; Load AB7 into I
  $D66: LD I, $652 ; Load 652 into I
  $DB0: LD I, $4CC ; Load 4CC into I
  $DF2: LD I, $09A ; Load 09A into I
  $DF6: LD I, $87E ; Load 87E into I
  $EA2: LD I, $493 ; Load 493 into I
  $EA6: LD I, $7F0 ; Load 7F0 into I
  $EC4: LD I, $2E5 ; Load 2E5 into I
  $EEA: LD I, $48E ; Load 48E into I
  $EF2: LD I, $38A ; Load 38A into I
  $EF4: LD I, $8DF ; Load 8DF into I
  $F3C: LD I, $E5E ; Load E5E into I
  $F64: LD I, $D59 ; Load D59 into I
  $F72: LD I, $7CC ; Load 7CC into I
  $F7E: LD I, $9D7 ; Load 9D7 into I
  $FA2: LD I, $262 ; Load 262 into I
  $FA6: LD I, $3ED ; Load 3ED into I
  $FCE: LD I, $EC2 ; Load EC2 into I
  $FD6: LD I, $9E8 ; Load 9E8 into I
  $FE2: LD I, $CC6 ; Load CC6 into I

CONTROL FLOW ANALYSIS:
Jumps: 211
Calls: 109
Branches: 266
Loops: 117
Loop Structures:
  $216 -> $172 (backward jump)
  $27E -> $00E (backward jump)
  $2C0 -> $2A7 (backward jump)
  $2EE -> $148 (backward jump)
  $340 -> $1E5 (backward jump)
  $356 -> $0C3 (backward jump)
  $3EA -> $061 (backward jump)
  $3F0 -> $144 (backward jump)
  $3FA -> $1E6 (backward jump)
  $434 -> $18B (backward jump)
  $452 -> $170 (backward jump)
  $474 -> $3FB (backward jump)
  $498 -> $00F (backward jump)
  $4A8 -> $31F (backward jump)
  $50E -> $371 (backward jump)
  $52E -> $29B (backward jump)
  $532 -> $522 (backward jump)
  $534 -> $3CA (backward jump)
  $56C -> $469 (backward jump)
  $5A4 -> $186 (backward jump)
  $5D2 -> $3B6 (backward jump)
  $61A -> $2AE (backward jump)
  $62A -> $08F (backward jump)
  $638 -> $622 (backward jump)
  $67A -> $5D9 (backward jump)
  $6A8 -> $5CE (backward jump)
  $6CE -> $176 (backward jump)
  $728 -> $0D6 (backward jump)
  $74C -> $0D4 (backward jump)
  $75A -> $061 (backward jump)
  $7B0 -> $487 (backward jump)
  $7B8 -> $4B2 (backward jump)
  $7EC -> $006 (backward jump)
  $8A0 -> $81D (backward jump)
  $8A8 -> $268 (backward jump)
  $8AE -> $802 (backward jump)
  $8C8 -> $508 (backward jump)
  $8EA -> $209 (backward jump)
  $90E -> $773 (backward jump)
  $928 -> $90C (backward jump)
  $950 -> $3C4 (backward jump)
  $95C -> $430 (backward jump)
  $970 -> $149 (backward jump)
  $974 -> $474 (backward jump)
  $9A0 -> $673 (backward jump)
  $9B2 -> $856 (backward jump)
  $9BE -> $24A (backward jump)
  $9C4 -> $5EA (backward jump)
  $9DE -> $678 (backward jump)
  $A0E -> $966 (backward jump)
  $A10 -> $042 (backward jump)
  $A2A -> $619 (backward jump)
  $A42 -> $81F (backward jump)
  $A5C -> $0A0 (backward jump)
  $A72 -> $9B9 (backward jump)
  $A84 -> $2DF (backward jump)
  $A98 -> $294 (backward jump)
  $AA0 -> $742 (backward jump)
  $ABA -> $717 (backward jump)
  $ADC -> $127 (backward jump)
  $ADE -> $4BF (backward jump)
  $B0E -> $256 (backward jump)
  $B18 -> $AA7 (backward jump)
  $B3A -> $523 (backward jump)
  $B40 -> $47C (backward jump)
  $B62 -> $55C (backward jump)
  $B6C -> $AFE (backward jump)
  $B82 -> $3E3 (backward jump)
  $B8E -> $152 (backward jump)
  $BA2 -> $02D (backward jump)
  $BBE -> $0C6 (backward jump)
  $BC6 -> $2E7 (backward jump)
  $BE4 -> $771 (backward jump)
  $BFC -> $128 (backward jump)
  $C04 -> $65E (backward jump)
  $C1C -> $74E (backward jump)
  $C3E -> $A28 (backward jump)
  $C50 -> $8D8 (backward jump)
  $C94 -> $17C (backward jump)
  $CA6 -> $916 (backward jump)
  $CAC -> $8B2 (backward jump)
  $CB6 -> $872 (backward jump)
  $CD8 -> $24C (backward jump)
  $D24 -> $A84 (backward jump)
  $D30 -> $3D6 (backward jump)
  $D3E -> $C76 (backward jump)
  $D4E -> $0D7 (backward jump)
  $D6A -> $8D7 (backward jump)
  $D74 -> $C74 (backward jump)
  $D76 -> $C4F (backward jump)
  $D8A -> $35B (backward jump)
  $D8E -> $342 (backward jump)
  $D9E -> $643 (backward jump)
  $DA6 -> $6EC (backward jump)
  $DA8 -> $75C (backward jump)
  $DC8 -> $592 (backward jump)
  $DCE -> $B03 (backward jump)
  $E08 -> $05F (backward jump)
  $E22 -> $AD6 (backward jump)
  $E5C -> $025 (backward jump)
  $E84 -> $D1C (backward jump)
  $E94 -> $921 (backward jump)
  $EAA -> $541 (backward jump)
  $EB6 -> $B4D (backward jump)
  $EBA -> $E13 (backward jump)
  $EC2 -> $663 (backward jump)
  $ECE -> $97B (backward jump)
  $EF0 -> $0DA (backward jump)
  $F0C -> $5E3 (backward jump)
  $F22 -> $945 (backward jump)
  $F28 -> $58D (backward jump)
  $F2E -> $CE4 (backward jump)
  $F40 -> $A19 (backward jump)
  $FC4 -> $823 (backward jump)
  $FDE -> $7D2 (backward jump)
  $FE4 -> $E47 (backward jump)
  $FF0 -> $1B8 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $17B5   JP       $7B5            ; Jump to 7B5
$202    $D4D4   DRW      V4, VD, #4      ; Draw 4-byte sprite at V4, VD
$204    $5519   UNKNOWN  $5519           ; Unknown 5xxx instruction
$206    $34A3   SE       V4, #A3         ; Skip if V4 == 163
$208    $F150   UNKNOWN  F150            ; Unknown Fxxx instruction
$20A    $82F2   AND      V2, VF          ; V2 &= VF
$20C    $2F9D   CALL     $F9D            ; Call subroutine at F9D
$20E    $0A30   SYS      $A30            ; System call to A30
$210    $F3A2   UNKNOWN  F3A2            ; Unknown Fxxx instruction
$212    $D97E   DRW      V9, V7, #E      ; Draw 14-byte sprite at V9, V7
$214    $7CDE   ADD      VC, #DE         ; Add 222 to VC
$216    $B172   JP       V0, $172        ; Jump to V0 + 172
$218    $4D96   SNE      VD, #96         ; Skip if VD != 150
$21A    $C889   RND      V8, #89         ; V8 = random & 89
$21C    $8E71   OR       VE, V7          ; VE |= V7
$21E    $7C60   ADD      VC, #60         ; Add 96 to VC
$220    $AF93   LD       I, $F93         ; Load F93 into I
$222    $5104   UNKNOWN  $5104           ; Unknown 5xxx instruction
$224    $015D   SYS      $15D            ; System call to 15D
$226    $CD66   RND      VD, #66         ; VD = random & 66
$228    $8854   ADD      V8, V5          ; V8 += V5, VF = carry
$22A    $E8BC   UNKNOWN  $E8BC           ; Unknown Exxx instruction
$22C    $E176   UNKNOWN  $E176           ; Unknown Exxx instruction
$22E    $FECD   UNKNOWN  FECD            ; Unknown Fxxx instruction
$230    $2F4A   CALL     $F4A            ; Call subroutine at F4A
$232    $7E12   ADD      VE, #12         ; Add 18 to VE
$234    $2483   CALL     $483            ; Call subroutine at 483
$236    $E12D   UNKNOWN  $E12D           ; Unknown Exxx instruction
$238    $A4E3   LD       I, $4E3         ; Load 4E3 into I
$23A    $9C1D   UNKNOWN  $9C1D           ; Unknown 9xxx instruction
$23C    $01CF   SYS      $1CF            ; System call to 1CF
$23E    $A4A1   LD       I, $4A1         ; Load 4A1 into I
$240    $E466   UNKNOWN  $E466           ; Unknown Exxx instruction
$242    $C7DF   RND      V7, #DF         ; V7 = random & DF
$244    $404D   SNE      V0, #4D         ; Skip if V0 != 77
$246    $DD63   DRW      VD, V6, #3      ; Draw 3-byte sprite at VD, V6
$248    $D391   DRW      V3, V9, #1      ; Draw 1-byte sprite at V3, V9
$24A    $787A   ADD      V8, #7A         ; Add 122 to V8
$24C    $8193   XOR      V1, V9          ; V1 ^= V9
$24E    $EB42   UNKNOWN  $EB42           ; Unknown Exxx instruction
$250    $8EC8   UNKNOWN  8EC8            ; Unknown 8xxx instruction
$252    $D46A   DRW      V4, V6, #A      ; Draw 10-byte sprite at V4, V6
$254    $B5DA   JP       V0, $5DA        ; Jump to V0 + 5DA
$256    $AF81   LD       I, $F81         ; Load F81 into I
$258    $04B8   SYS      $4B8            ; System call to 4B8
$25A    $210E   CALL     $10E            ; Call subroutine at 10E
$25C    $E1FE   UNKNOWN  $E1FE           ; Unknown Exxx instruction
$25E    $81C2   AND      V1, VC          ; V1 &= VC
$260    $B467   JP       V0, $467        ; Jump to V0 + 467
$262    $57B8   UNKNOWN  $57B8           ; Unknown 5xxx instruction
$264    $E981   UNKNOWN  $E981           ; Unknown Exxx instruction
$266    $AD96   LD       I, $D96         ; Load D96 into I
$268    $DDD8   DRW      VD, VD, #8      ; Draw 8-byte sprite at VD, VD
$26A    $12EF   JP       $2EF            ; Jump to 2EF
$26C    $421D   SNE      V2, #1D         ; Skip if V2 != 29
$26E    $7073   ADD      V0, #73         ; Add 115 to V0
$270    $73A8   ADD      V3, #A8         ; Add 168 to V3
$272    $398E   SE       V9, #8E         ; Skip if V9 == 142
$274    $DC58   DRW      VC, V5, #8      ; Draw 8-byte sprite at VC, V5
$276    $7240   ADD      V2, #40         ; Add 64 to V2
$278    $943B   UNKNOWN  $943B           ; Unknown 9xxx instruction
$27A    $BA95   JP       V0, $A95        ; Jump to V0 + A95
$27C    $A12B   LD       I, $12B         ; Load 12B into I
$27E    $B00E   JP       V0, $00E        ; Jump to V0 + 00E
$280    $F54D   UNKNOWN  F54D            ; Unknown Fxxx instruction
$282    $60E7   LD       V0, #E7         ; Load 231 into V0
$284    $3A78   SE       VA, #78         ; Skip if VA == 120
$286    $4D5F   SNE      VD, #5F         ; Skip if VD != 95
$288    $22D1   CALL     $2D1            ; Call subroutine at 2D1
$28A    $1B86   JP       $B86            ; Jump to B86
$28C    $2EF1   CALL     $EF1            ; Call subroutine at EF1
$28E    $7D15   ADD      VD, #15         ; Add 21 to VD
$290    $D757   DRW      V7, V5, #7      ; Draw 7-byte sprite at V7, V5
$292    $A7C8   LD       I, $7C8         ; Load 7C8 into I
$294    $5CC6   UNKNOWN  $5CC6           ; Unknown 5xxx instruction
$296    $C26E   RND      V2, #6E         ; V2 = random & 6E
$298    $CDD7   RND      VD, #D7         ; VD = random & D7
$29A    $8C4A   UNKNOWN  8C4A            ; Unknown 8xxx instruction
$29C    $9737   UNKNOWN  $9737           ; Unknown 9xxx instruction
$29E    $A94A   LD       I, $94A         ; Load 94A into I
$2A0    $D614   DRW      V6, V1, #4      ; Draw 4-byte sprite at V6, V1
$2A2    $6A65   LD       VA, #65         ; Load 101 into VA
$2A4    $C7AD   RND      V7, #AD         ; V7 = random & AD
$2A6    $9FF9   UNKNOWN  $9FF9           ; Unknown 9xxx instruction
$2A8    $8338   UNKNOWN  8338            ; Unknown 8xxx instruction
$2AA    $835F   UNKNOWN  835F            ; Unknown 8xxx instruction
$2AC    $5464   UNKNOWN  $5464           ; Unknown 5xxx instruction
$2AE    $9394   UNKNOWN  $9394           ; Unknown 9xxx instruction
$2B0    $8851   OR       V8, V5          ; V8 |= V5
$2B2    $591B   UNKNOWN  $591B           ; Unknown 5xxx instruction
$2B4    $A25E   LD       I, $25E         ; Load 25E into I
$2B6    $06F9   SYS      $6F9            ; System call to 6F9
$2B8    $DDD1   DRW      VD, VD, #1      ; Draw 1-byte sprite at VD, VD
$2BA    $0265   SYS      $265            ; System call to 265
$2BC    $9688   UNKNOWN  $9688           ; Unknown 9xxx instruction
$2BE    $1436   JP       $436            ; Jump to 436
$2C0    $12A7   JP       $2A7            ; Jump to 2A7
$2C2    $50D9   UNKNOWN  $50D9           ; Unknown 5xxx instruction
$2C4    $2C8A   CALL     $C8A            ; Call subroutine at C8A
$2C6    $3556   SE       V5, #56         ; Skip if V5 == 86
$2C8    $AD84   LD       I, $D84         ; Load D84 into I
$2CA    $3650   SE       V6, #50         ; Skip if V6 == 80
$2CC    $60ED   LD       V0, #ED         ; Load 237 into V0
$2CE    $330D   SE       V3, #0D         ; Skip if V3 == 13
$2D0    $AC93   LD       I, $C93         ; Load C93 into I
$2D2    $3CA8   SE       VC, #A8         ; Skip if VC == 168
$2D4    $CE30   RND      VE, #30         ; VE = random & 30
$2D6    $7A10   ADD      VA, #10         ; Add 16 to VA
$2D8    $6F29   LD       VF, #29         ; Load 41 into VF
$2DA    $0F59   SYS      $F59            ; System call to F59
$2DC    $8F68   UNKNOWN  8F68            ; Unknown 8xxx instruction
$2DE    $7AFB   ADD      VA, #FB         ; Add 251 to VA
$2E0    $97B6   UNKNOWN  $97B6           ; Unknown 9xxx instruction
$2E2    $EE47   UNKNOWN  $EE47           ; Unknown Exxx instruction
$2E4    $2CDC   CALL     $CDC            ; Call subroutine at CDC
$2E6    $AA61   LD       I, $A61         ; Load A61 into I
$2E8    $B332   JP       V0, $332        ; Jump to V0 + 332
$2EA    $C889   RND      V8, #89         ; V8 = random & 89
$2EC    $0263   SYS      $263            ; System call to 263
$2EE    $1148   JP       $148            ; Jump to 148
$2F0    $9CF3   UNKNOWN  $9CF3           ; Unknown 9xxx instruction
$2F2    $ECB0   UNKNOWN  $ECB0           ; Unknown Exxx instruction
$2F4    $8B7D   UNKNOWN  8B7D            ; Unknown 8xxx instruction
$2F6    $A8E1   LD       I, $8E1         ; Load 8E1 into I
$2F8    $D100   DRW      V1, V0, #0      ; Draw 0-byte sprite at V1, V0
$2FA    $EC05   UNKNOWN  $EC05           ; Unknown Exxx instruction
$2FC    $3840   SE       V8, #40         ; Skip if V8 == 64
$2FE    $8B02   AND      VB, V0          ; VB &= V0
$300    $0006   SYS      $006            ; System call to 006
$302    $0910   SYS      $910            ; System call to 910
$304    $297B   CALL     $97B            ; Call subroutine at 97B
$306    $D3D3   DRW      V3, VD, #3      ; Draw 3-byte sprite at V3, VD
$308    $7752   ADD      V7, #52         ; Add 82 to V7
$30A    $5DE1   UNKNOWN  $5DE1           ; Unknown 5xxx instruction
$30C    $7A3B   ADD      VA, #3B         ; Add 59 to VA
$30E    $A16B   LD       I, $16B         ; Load 16B into I
$310    $645A   LD       V4, #5A         ; Load 90 into V4
$312    $CAD4   RND      VA, #D4         ; VA = random & D4
$314    $580D   UNKNOWN  $580D           ; Unknown 5xxx instruction
$316    $9BE9   UNKNOWN  $9BE9           ; Unknown 9xxx instruction
$318    $D024   DRW      V0, V2, #4      ; Draw 4-byte sprite at V0, V2
$31A    $AC09   LD       I, $C09         ; Load C09 into I
$31C    $E9E6   UNKNOWN  $E9E6           ; Unknown Exxx instruction
$31E    $C047   RND      V0, #47         ; V0 = random & 47
$320    $FC82   UNKNOWN  FC82            ; Unknown Fxxx instruction
$322    $4D60   SNE      VD, #60         ; Skip if VD != 96
$324    $1785   JP       $785            ; Jump to 785
$326    $6E47   LD       VE, #47         ; Load 71 into VE
$328    $A194   LD       I, $194         ; Load 194 into I
$32A    $8565   SUB      V5, V6          ; V5 -= V6, VF = !borrow
$32C    $8E5E   SHL      VE              ; VE <<= 1, VF = MSB
$32E    $3BCB   SE       VB, #CB         ; Skip if VB == 203
$330    $A9F0   LD       I, $9F0         ; Load 9F0 into I
$332    $8BA6   SHR      VB              ; VB >>= 1, VF = LSB
$334    $A8CD   LD       I, $8CD         ; Load 8CD into I
$336    $5708   UNKNOWN  $5708           ; Unknown 5xxx instruction
$338    $D09D   DRW      V0, V9, #D      ; Draw 13-byte sprite at V0, V9
$33A    $51EC   UNKNOWN  $51EC           ; Unknown 5xxx instruction
$33C    $834F   UNKNOWN  834F            ; Unknown 8xxx instruction
$33E    $0CDF   SYS      $CDF            ; System call to CDF
$340    $11E5   JP       $1E5            ; Jump to 1E5
$342    $08EA   SYS      $8EA            ; System call to 8EA
$344    $BA46   JP       V0, $A46        ; Jump to V0 + A46
$346    $9A6B   UNKNOWN  $9A6B           ; Unknown 9xxx instruction
$348    $B777   JP       V0, $777        ; Jump to V0 + 777
$34A    $39C6   SE       V9, #C6         ; Skip if V9 == 198
$34C    $9425   UNKNOWN  $9425           ; Unknown 9xxx instruction
$34E    $9D94   UNKNOWN  $9D94           ; Unknown 9xxx instruction
$350    $B8C7   JP       V0, $8C7        ; Jump to V0 + 8C7
$352    $BB3D   JP       V0, $B3D        ; Jump to V0 + B3D
$354    $FDB4   UNKNOWN  FDB4            ; Unknown Fxxx instruction
$356    $10C3   JP       $0C3            ; Jump to 0C3
$358    $6263   LD       V2, #63         ; Load 99 into V2
$35A    $2A8B   CALL     $A8B            ; Call subroutine at A8B
$35C    $9FC7   UNKNOWN  $9FC7           ; Unknown 9xxx instruction
$35E    $336C   SE       V3, #6C         ; Skip if V3 == 108
$360    $86FE   SHL      V6              ; V6 <<= 1, VF = MSB
$362    $662C   LD       V6, #2C         ; Load 44 into V6
$364    $8670   LD       V6, V7          ; V6 = V7
$366    $9C23   UNKNOWN  $9C23           ; Unknown 9xxx instruction
$368    $76CA   ADD      V6, #CA         ; Add 202 to V6
$36A    $6402   LD       V4, #02         ; Load 2 into V4
$36C    $E338   UNKNOWN  $E338           ; Unknown Exxx instruction
$36E    $CB0A   RND      VB, #0A         ; VB = random & 0A
$370    $F0D0   UNKNOWN  F0D0            ; Unknown Fxxx instruction
$372    $2E16   CALL     $E16            ; Call subroutine at E16
$374    $7C54   ADD      VC, #54         ; Add 84 to VC
$376    $71BF   ADD      V1, #BF         ; Add 191 to V1
$378    $4BC4   SNE      VB, #C4         ; Skip if VB != 196
$37A    $3EB5   SE       VE, #B5         ; Skip if VE == 181
$37C    $938A   UNKNOWN  $938A           ; Unknown 9xxx instruction
$37E    $3FC5   SE       VF, #C5         ; Skip if VF == 197
$380    $D77C   DRW      V7, V7, #C      ; Draw 12-byte sprite at V7, V7
$382    $67D1   LD       V7, #D1         ; Load 209 into V7
$384    $F392   UNKNOWN  F392            ; Unknown Fxxx instruction
$386    $19CD   JP       $9CD            ; Jump to 9CD
$388    $EC15   UNKNOWN  $EC15           ; Unknown Exxx instruction
$38A    $0E26   SYS      $E26            ; System call to E26
$38C    $92AB   UNKNOWN  $92AB           ; Unknown 9xxx instruction
$38E    $5430   SE       V4, V3          ; Skip if V4 == V3
$390    $C491   RND      V4, #91         ; V4 = random & 91
$392    $2B78   CALL     $B78            ; Call subroutine at B78
$394    $7173   ADD      V1, #73         ; Add 115 to V1
$396    $4DDE   SNE      VD, #DE         ; Skip if VD != 222
$398    $D92F   DRW      V9, V2, #F      ; Draw 15-byte sprite at V9, V2
$39A    $7119   ADD      V1, #19         ; Add 25 to V1
$39C    $7B05   ADD      VB, #05         ; Add 5 to VB
$39E    $8D0A   UNKNOWN  8D0A            ; Unknown 8xxx instruction
$3A0    $DA6F   DRW      VA, V6, #F      ; Draw 15-byte sprite at VA, V6
$3A2    $5D3F   UNKNOWN  $5D3F           ; Unknown 5xxx instruction
$3A4    $A7A3   LD       I, $7A3         ; Load 7A3 into I
$3A6    $E652   UNKNOWN  $E652           ; Unknown Exxx instruction
$3A8    $E7E5   UNKNOWN  $E7E5           ; Unknown Exxx instruction
$3AA    $D268   DRW      V2, V6, #8      ; Draw 8-byte sprite at V2, V6
$3AC    $9463   UNKNOWN  $9463           ; Unknown 9xxx instruction
$3AE    $0DFF   SYS      $DFF            ; System call to DFF
$3B0    $CB0C   RND      VB, #0C         ; VB = random & 0C
$3B2    $EC20   UNKNOWN  $EC20           ; Unknown Exxx instruction
$3B4    $D9CC   DRW      V9, VC, #C      ; Draw 12-byte sprite at V9, VC
$3B6    $1A2A   JP       $A2A            ; Jump to A2A
$3B8    $E6FA   UNKNOWN  $E6FA           ; Unknown Exxx instruction
$3BA    $B62A   JP       V0, $62A        ; Jump to V0 + 62A
$3BC    $57BF   UNKNOWN  $57BF           ; Unknown 5xxx instruction
$3BE    $0AFF   SYS      $AFF            ; System call to AFF
$3C0    $5E0F   UNKNOWN  $5E0F           ; Unknown 5xxx instruction
$3C2    $E0F8   UNKNOWN  $E0F8           ; Unknown Exxx instruction
$3C4    $9938   UNKNOWN  $9938           ; Unknown 9xxx instruction
$3C6    $E70D   UNKNOWN  $E70D           ; Unknown Exxx instruction
$3C8    $7BD8   ADD      VB, #D8         ; Add 216 to VB
$3CA    $4876   SNE      V8, #76         ; Skip if V8 != 118
$3CC    $7A1B   ADD      VA, #1B         ; Add 27 to VA
$3CE    $36E4   SE       V6, #E4         ; Skip if V6 == 228
$3D0    $4F9A   SNE      VF, #9A         ; Skip if VF != 154
$3D2    $5188   UNKNOWN  $5188           ; Unknown 5xxx instruction
$3D4    $9C26   UNKNOWN  $9C26           ; Unknown 9xxx instruction
$3D6    $48AE   SNE      V8, #AE         ; Skip if V8 != 174
$3D8    $D634   DRW      V6, V3, #4      ; Draw 4-byte sprite at V6, V3
$3DA    $96E4   UNKNOWN  $96E4           ; Unknown 9xxx instruction
$3DC    $BA7E   JP       V0, $A7E        ; Jump to V0 + A7E
$3DE    $3CB2   SE       VC, #B2         ; Skip if VC == 178
$3E0    $0C38   SYS      $C38            ; System call to C38
$3E2    $E06E   UNKNOWN  $E06E           ; Unknown Exxx instruction
$3E4    $662E   LD       V6, #2E         ; Load 46 into V6
$3E6    $A70E   LD       I, $70E         ; Load 70E into I
$3E8    $2AF4   CALL     $AF4            ; Call subroutine at AF4
$3EA    $1061   JP       $061            ; Jump to 061
$3EC    $EB8A   UNKNOWN  $EB8A           ; Unknown Exxx instruction
$3EE    $6B2E   LD       VB, #2E         ; Load 46 into VB
$3F0    $1144   JP       $144            ; Jump to 144
$3F2    $B6D4   JP       V0, $6D4        ; Jump to V0 + 6D4
$3F4    $E1F0   UNKNOWN  $E1F0           ; Unknown Exxx instruction
$3F6    $4AF0   SNE      VA, #F0         ; Skip if VA != 240
$3F8    $1CA9   JP       $CA9            ; Jump to CA9
$3FA    $11E6   JP       $1E6            ; Jump to 1E6
$3FC    $A40A   LD       I, $40A         ; Load 40A into I
$3FE    $5762   UNKNOWN  $5762           ; Unknown 5xxx instruction
$400    $D5D6   DRW      V5, VD, #6      ; Draw 6-byte sprite at V5, VD
$402    $DE97   DRW      VE, V9, #7      ; Draw 7-byte sprite at VE, V9
$404    $FC0B   UNKNOWN  FC0B            ; Unknown Fxxx instruction
$406    $A06A   LD       I, $06A         ; Load 06A into I
$408    $035E   SYS      $35E            ; System call to 35E
$40A    $F285   UNKNOWN  F285            ; Unknown Fxxx instruction
$40C    $8FD2   AND      VF, VD          ; VF &= VD
$40E    $A4B0   LD       I, $4B0         ; Load 4B0 into I
$410    $B974   JP       V0, $974        ; Jump to V0 + 974
$412    $CBF8   RND      VB, #F8         ; VB = random & F8
$414    $4554   SNE      V5, #54         ; Skip if V5 != 84
$416    $BDAE   JP       V0, $DAE        ; Jump to V0 + DAE
$418    $4829   SNE      V8, #29         ; Skip if V8 != 41
$41A    $47D8   SNE      V7, #D8         ; Skip if V7 != 216
$41C    $9346   UNKNOWN  $9346           ; Unknown 9xxx instruction
$41E    $407A   SNE      V0, #7A         ; Skip if V0 != 122
$420    $744C   ADD      V4, #4C         ; Add 76 to V4
$422    $44F9   SNE      V4, #F9         ; Skip if V4 != 249
$424    $2A2B   CALL     $A2B            ; Call subroutine at A2B
$426    $6EC3   LD       VE, #C3         ; Load 195 into VE
$428    $05F6   SYS      $5F6            ; System call to 5F6
$42A    $AE5F   LD       I, $E5F         ; Load E5F into I
$42C    $6B3E   LD       VB, #3E         ; Load 62 into VB
$42E    $BA8E   JP       V0, $A8E        ; Jump to V0 + A8E
$430    $B56E   JP       V0, $56E        ; Jump to V0 + 56E
$432    $8727   SUBN     V7, V2          ; V7 = V2 - V7, VF = !borrow
$434    $B18B   JP       V0, $18B        ; Jump to V0 + 18B
$436    $FB52   UNKNOWN  FB52            ; Unknown Fxxx instruction
$438    $1DF0   JP       $DF0            ; Jump to DF0
$43A    $1C31   JP       $C31            ; Jump to C31
$43C    $2EB2   CALL     $EB2            ; Call subroutine at EB2
$43E    $38BC   SE       V8, #BC         ; Skip if V8 == 188
$440    $9ACF   UNKNOWN  $9ACF           ; Unknown 9xxx instruction
$442    $6FE0   LD       VF, #E0         ; Load 224 into VF
$444    $41FA   SNE      V1, #FA         ; Skip if V1 != 250
$446    $73F2   ADD      V3, #F2         ; Add 242 to V3
$448    $D943   DRW      V9, V4, #3      ; Draw 3-byte sprite at V9, V4
$44A    $6CA4   LD       VC, #A4         ; Load 164 into VC
$44C    $4CB2   SNE      VC, #B2         ; Skip if VC != 178
$44E    $02C8   SYS      $2C8            ; System call to 2C8
$450    $F5D7   UNKNOWN  F5D7            ; Unknown Fxxx instruction
$452    $B170   JP       V0, $170        ; Jump to V0 + 170
$454    $E66F   UNKNOWN  $E66F           ; Unknown Exxx instruction
$456    $34BF   SE       V4, #BF         ; Skip if V4 == 191
$458    $D048   DRW      V0, V4, #8      ; Draw 8-byte sprite at V0, V4
$45A    $2983   CALL     $983            ; Call subroutine at 983
$45C    $9D66   UNKNOWN  $9D66           ; Unknown 9xxx instruction
$45E    $178E   JP       $78E            ; Jump to 78E
$460    $D279   DRW      V2, V7, #9      ; Draw 9-byte sprite at V2, V7
$462    $09CC   SYS      $9CC            ; System call to 9CC
$464    $D1BE   DRW      V1, VB, #E      ; Draw 14-byte sprite at V1, VB
$466    $E74A   UNKNOWN  $E74A           ; Unknown Exxx instruction
$468    $CE55   RND      VE, #55         ; VE = random & 55
$46A    $F215   LD       DT, V2          ; Delay timer = V2
$46C    $4AA6   SNE      VA, #A6         ; Skip if VA != 166
$46E    $AF0B   LD       I, $F0B         ; Load F0B into I
$470    $9391   UNKNOWN  $9391           ; Unknown 9xxx instruction
$472    $C5A7   RND      V5, #A7         ; V5 = random & A7
$474    $13FB   JP       $3FB            ; Jump to 3FB
$476    $742F   ADD      V4, #2F         ; Add 47 to V4
$478    $FB83   UNKNOWN  FB83            ; Unknown Fxxx instruction
$47A    $7798   ADD      V7, #98         ; Add 152 to V7
$47C    $561D   UNKNOWN  $561D           ; Unknown 5xxx instruction
$47E    $7C9F   ADD      VC, #9F         ; Add 159 to VC
$480    $B798   JP       V0, $798        ; Jump to V0 + 798
$482    $8A38   UNKNOWN  8A38            ; Unknown 8xxx instruction
$484    $38E7   SE       V8, #E7         ; Skip if V8 == 231
$486    $AFE8   LD       I, $FE8         ; Load FE8 into I
$488    $08A7   SYS      $8A7            ; System call to 8A7
$48A    $5075   UNKNOWN  $5075           ; Unknown 5xxx instruction
$48C    $EB7E   UNKNOWN  $EB7E           ; Unknown Exxx instruction
$48E    $8C58   UNKNOWN  8C58            ; Unknown 8xxx instruction
$490    $9F74   UNKNOWN  $9F74           ; Unknown 9xxx instruction
$492    $2364   CALL     $364            ; Call subroutine at 364
$494    $456D   SNE      V5, #6D         ; Skip if V5 != 109
$496    $951F   UNKNOWN  $951F           ; Unknown 9xxx instruction
$498    $B00F   JP       V0, $00F        ; Jump to V0 + 00F
$49A    $C061   RND      V0, #61         ; V0 = random & 61
$49C    $40EC   SNE      V0, #EC         ; Skip if V0 != 236
$49E    $2196   CALL     $196            ; Call subroutine at 196
$4A0    $90E8   UNKNOWN  $90E8           ; Unknown 9xxx instruction
$4A2    $85F6   SHR      V5              ; V5 >>= 1, VF = LSB
$4A4    $8535   SUB      V5, V3          ; V5 -= V3, VF = !borrow
$4A6    $4C3A   SNE      VC, #3A         ; Skip if VC != 58
$4A8    $131F   JP       $31F            ; Jump to 31F
$4AA    $500B   UNKNOWN  $500B           ; Unknown 5xxx instruction
$4AC    $6241   LD       V2, #41         ; Load 65 into V2
$4AE    $77B2   ADD      V7, #B2         ; Add 178 to V7
$4B0    $3BED   SE       VB, #ED         ; Skip if VB == 237
$4B2    $7006   ADD      V0, #06         ; Add 6 to V0
$4B4    $9906   UNKNOWN  $9906           ; Unknown 9xxx instruction
$4B6    $5B55   UNKNOWN  $5B55           ; Unknown 5xxx instruction
$4B8    $95EF   UNKNOWN  $95EF           ; Unknown 9xxx instruction
$4BA    $DF87   DRW      VF, V8, #7      ; Draw 7-byte sprite at VF, V8
$4BC    $C879   RND      V8, #79         ; V8 = random & 79
$4BE    $16CC   JP       $6CC            ; Jump to 6CC
$4C0    $FB7A   UNKNOWN  FB7A            ; Unknown Fxxx instruction
$4C2    $D6FF   DRW      V6, VF, #F      ; Draw 15-byte sprite at V6, VF
$4C4    $9D60   SNE      VD, V6          ; Skip if VD != V6
$4C6    $B94C   JP       V0, $94C        ; Jump to V0 + 94C
$4C8    $F6CD   UNKNOWN  F6CD            ; Unknown Fxxx instruction
$4CA    $E83C   UNKNOWN  $E83C           ; Unknown Exxx instruction
$4CC    $0DA7   SYS      $DA7            ; System call to DA7
$4CE    $00A8   SYS      $0A8            ; System call to 0A8
$4D0    $D0EB   DRW      V0, VE, #B      ; Draw 11-byte sprite at V0, VE
$4D2    $3DFD   SE       VD, #FD         ; Skip if VD == 253
$4D4    $8CB1   OR       VC, VB          ; VC |= VB
$4D6    $84C6   SHR      V4              ; V4 >>= 1, VF = LSB
$4D8    $505D   UNKNOWN  $505D           ; Unknown 5xxx instruction
$4DA    $B9A3   JP       V0, $9A3        ; Jump to V0 + 9A3
$4DC    $00F4   SYS      $0F4            ; System call to 0F4
$4DE    $3320   SE       V3, #20         ; Skip if V3 == 32
$4E0    $830D   UNKNOWN  830D            ; Unknown 8xxx instruction
$4E2    $E6FE   UNKNOWN  $E6FE           ; Unknown Exxx instruction
$4E4    $0B92   SYS      $B92            ; System call to B92
$4E6    $8294   ADD      V2, V9          ; V2 += V9, VF = carry
$4E8    $1902   JP       $902            ; Jump to 902
$4EA    $37F0   SE       V7, #F0         ; Skip if V7 == 240
$4EC    $9095   UNKNOWN  $9095           ; Unknown 9xxx instruction
$4EE    $82EB   UNKNOWN  82EB            ; Unknown 8xxx instruction
$4F0    $24DC   CALL     $4DC            ; Call subroutine at 4DC
$4F2    $865E   SHL      V6              ; V6 <<= 1, VF = MSB
$4F4    $2CDF   CALL     $CDF            ; Call subroutine at CDF
$4F6    $2384   CALL     $384            ; Call subroutine at 384
$4F8    $18BC   JP       $8BC            ; Jump to 8BC
$4FA    $54C8   UNKNOWN  $54C8           ; Unknown 5xxx instruction
$4FC    $F016   UNKNOWN  F016            ; Unknown Fxxx instruction
$4FE    $1687   JP       $687            ; Jump to 687
$500    $5525   UNKNOWN  $5525           ; Unknown 5xxx instruction
$502    $D991   DRW      V9, V9, #1      ; Draw 1-byte sprite at V9, V9
$504    $FD43   UNKNOWN  FD43            ; Unknown Fxxx instruction
$506    $4432   SNE      V4, #32         ; Skip if V4 != 50
$508    $5577   UNKNOWN  $5577           ; Unknown 5xxx instruction
$50A    $9DF2   UNKNOWN  $9DF2           ; Unknown 9xxx instruction
$50C    $FA96   UNKNOWN  FA96            ; Unknown Fxxx instruction
$50E    $1371   JP       $371            ; Jump to 371
$510    $E035   UNKNOWN  $E035           ; Unknown Exxx instruction
$512    $F87F   UNKNOWN  F87F            ; Unknown Fxxx instruction
$514    $99C8   UNKNOWN  $99C8           ; Unknown 9xxx instruction
$516    $07E2   SYS      $7E2            ; System call to 7E2
$518    $957B   UNKNOWN  $957B           ; Unknown 9xxx instruction
$51A    $8BA0   LD       VB, VA          ; VB = VA
$51C    $3338   SE       V3, #38         ; Skip if V3 == 56
$51E    $8C25   SUB      VC, V2          ; VC -= V2, VF = !borrow
$520    $9176   UNKNOWN  $9176           ; Unknown 9xxx instruction
$522    $95F2   UNKNOWN  $95F2           ; Unknown 9xxx instruction
$524    $2C8E   CALL     $C8E            ; Call subroutine at C8E
$526    $76BC   ADD      V6, #BC         ; Add 188 to V6
$528    $CD18   RND      VD, #18         ; VD = random & 18
$52A    $A460   LD       I, $460         ; Load 460 into I
$52C    $4098   SNE      V0, #98         ; Skip if V0 != 152
$52E    $129B   JP       $29B            ; Jump to 29B
$530    $B76C   JP       V0, $76C        ; Jump to V0 + 76C
$532    $B522   JP       V0, $522        ; Jump to V0 + 522
$534    $B3CA   JP       V0, $3CA        ; Jump to V0 + 3CA
$536    $CC3A   RND      VC, #3A         ; VC = random & 3A
$538    $E6E0   UNKNOWN  $E6E0           ; Unknown Exxx instruction
$53A    $E5AF   UNKNOWN  $E5AF           ; Unknown Exxx instruction
$53C    $7EF3   ADD      VE, #F3         ; Add 243 to VE
$53E    $955F   UNKNOWN  $955F           ; Unknown 9xxx instruction
$540    $9FA8   UNKNOWN  $9FA8           ; Unknown 9xxx instruction
$542    $4917   SNE      V9, #17         ; Skip if V9 != 23
$544    $42FD   SNE      V2, #FD         ; Skip if V2 != 253
$546    $494C   SNE      V9, #4C         ; Skip if V9 != 76
$548    $BC73   JP       V0, $C73        ; Jump to V0 + C73
$54A    $82BC   UNKNOWN  82BC            ; Unknown 8xxx instruction
$54C    $1A76   JP       $A76            ; Jump to A76
$54E    $21F9   CALL     $1F9            ; Call subroutine at 1F9
$550    $C12F   RND      V1, #2F         ; V1 = random & 2F
$552    $F461   UNKNOWN  F461            ; Unknown Fxxx instruction
$554    $E844   UNKNOWN  $E844           ; Unknown Exxx instruction
$556    $DAB0   DRW      VA, VB, #0      ; Draw 0-byte sprite at VA, VB
$558    $BFB5   JP       V0, $FB5        ; Jump to V0 + FB5
$55A    $F817   UNKNOWN  F817            ; Unknown Fxxx instruction
$55C    $487B   SNE      V8, #7B         ; Skip if V8 != 123
$55E    $3D49   SE       VD, #49         ; Skip if VD == 73
$560    $5C7C   UNKNOWN  $5C7C           ; Unknown 5xxx instruction
$562    $3AEC   SE       VA, #EC         ; Skip if VA == 236
$564    $51E4   UNKNOWN  $51E4           ; Unknown 5xxx instruction
$566    $3BE0   SE       VB, #E0         ; Skip if VB == 224
$568    $3301   SE       V3, #01         ; Skip if V3 == 1
$56A    $F336   UNKNOWN  F336            ; Unknown Fxxx instruction
$56C    $1469   JP       $469            ; Jump to 469
$56E    $A0AE   LD       I, $0AE         ; Load 0AE into I
$570    $85AE   SHL      V5              ; V5 <<= 1, VF = MSB
$572    $E3BC   UNKNOWN  $E3BC           ; Unknown Exxx instruction
$574    $AC4D   LD       I, $C4D         ; Load C4D into I
$576    $7223   ADD      V2, #23         ; Add 35 to V2
$578    $42B0   SNE      V2, #B0         ; Skip if V2 != 176
$57A    $839D   UNKNOWN  839D            ; Unknown 8xxx instruction
$57C    $477B   SNE      V7, #7B         ; Skip if V7 != 123
$57E    $DE07   DRW      VE, V0, #7      ; Draw 7-byte sprite at VE, V0
$580    $D8D6   DRW      V8, VD, #6      ; Draw 6-byte sprite at V8, VD
$582    $202A   CALL     $02A            ; Call subroutine at 02A
$584    $67BC   LD       V7, #BC         ; Load 188 into V7
$586    $6FEA   LD       VF, #EA         ; Load 234 into VF
$588    $24E8   CALL     $4E8            ; Call subroutine at 4E8
$58A    $0F3A   SYS      $F3A            ; System call to F3A
$58C    $D70E   DRW      V7, V0, #E      ; Draw 14-byte sprite at V7, V0
$58E    $01CD   SYS      $1CD            ; System call to 1CD
$590    $9A2B   UNKNOWN  $9A2B           ; Unknown 9xxx instruction
$592    $53EF   UNKNOWN  $53EF           ; Unknown 5xxx instruction
$594    $8F34   ADD      VF, V3          ; VF += V3, VF = carry
$596    $D9F9   DRW      V9, VF, #9      ; Draw 9-byte sprite at V9, VF
$598    $87BC   UNKNOWN  87BC            ; Unknown 8xxx instruction
$59A    $28FF   CALL     $8FF            ; Call subroutine at 8FF
$59C    $0AAC   SYS      $AAC            ; System call to AAC
$59E    $FBD1   UNKNOWN  FBD1            ; Unknown Fxxx instruction
$5A0    $94D5   UNKNOWN  $94D5           ; Unknown 9xxx instruction
$5A2    $6445   LD       V4, #45         ; Load 69 into V4
$5A4    $1186   JP       $186            ; Jump to 186
$5A6    $B62B   JP       V0, $62B        ; Jump to V0 + 62B
$5A8    $CCE9   RND      VC, #E9         ; VC = random & E9
$5AA    $25FA   CALL     $5FA            ; Call subroutine at 5FA
$5AC    $F8BD   UNKNOWN  F8BD            ; Unknown Fxxx instruction
$5AE    $3069   SE       V0, #69         ; Skip if V0 == 105
$5B0    $AD4C   LD       I, $D4C         ; Load D4C into I
$5B2    $2988   CALL     $988            ; Call subroutine at 988
$5B4    $0C25   SYS      $C25            ; System call to C25
$5B6    $07CC   SYS      $7CC            ; System call to 7CC
$5B8    $F841   UNKNOWN  F841            ; Unknown Fxxx instruction
$5BA    $753B   ADD      V5, #3B         ; Add 59 to V5
$5BC    $941C   UNKNOWN  $941C           ; Unknown 9xxx instruction
$5BE    $1942   JP       $942            ; Jump to 942
$5C0    $0987   SYS      $987            ; System call to 987
$5C2    $95A4   UNKNOWN  $95A4           ; Unknown 9xxx instruction
$5C4    $D734   DRW      V7, V3, #4      ; Draw 4-byte sprite at V7, V3
$5C6    $45E5   SNE      V5, #E5         ; Skip if V5 != 229
$5C8    $BA81   JP       V0, $A81        ; Jump to V0 + A81
$5CA    $D1E9   DRW      V1, VE, #9      ; Draw 9-byte sprite at V1, VE
$5CC    $563B   UNKNOWN  $563B           ; Unknown 5xxx instruction
$5CE    $B81D   JP       V0, $81D        ; Jump to V0 + 81D
$5D0    $93CD   UNKNOWN  $93CD           ; Unknown 9xxx instruction
$5D2    $B3B6   JP       V0, $3B6        ; Jump to V0 + 3B6
$5D4    $F547   UNKNOWN  F547            ; Unknown Fxxx instruction
$5D6    $4589   SNE      V5, #89         ; Skip if V5 != 137
$5D8    $2847   CALL     $847            ; Call subroutine at 847
$5DA    $97A6   UNKNOWN  $97A6           ; Unknown 9xxx instruction
$5DC    $BF65   JP       V0, $F65        ; Jump to V0 + F65
$5DE    $75C2   ADD      V5, #C2         ; Add 194 to V5
$5E0    $0E25   SYS      $E25            ; System call to E25
$5E2    $E3D4   UNKNOWN  $E3D4           ; Unknown Exxx instruction
$5E4    $3C6B   SE       VC, #6B         ; Skip if VC == 107
$5E6    $058C   SYS      $58C            ; System call to 58C
$5E8    $C10A   RND      V1, #0A         ; V1 = random & 0A
$5EA    $AFAA   LD       I, $FAA         ; Load FAA into I
$5EC    $90AD   UNKNOWN  $90AD           ; Unknown 9xxx instruction
$5EE    $A2B2   LD       I, $2B2         ; Load 2B2 into I
$5F0    $7A77   ADD      VA, #77         ; Add 119 to VA
$5F2    $97C4   UNKNOWN  $97C4           ; Unknown 9xxx instruction
$5F4    $E8E2   UNKNOWN  $E8E2           ; Unknown Exxx instruction
$5F6    $910A   UNKNOWN  $910A           ; Unknown 9xxx instruction
$5F8    $0A38   SYS      $A38            ; System call to A38
$5FA    $8D8A   UNKNOWN  8D8A            ; Unknown 8xxx instruction
$5FC    $FEFE   UNKNOWN  FEFE            ; Unknown Fxxx instruction
$5FE    $46FA   SNE      V6, #FA         ; Skip if V6 != 250
$600    $EDD3   UNKNOWN  $EDD3           ; Unknown Exxx instruction
$602    $B632   JP       V0, $632        ; Jump to V0 + 632
$604    $2DF9   CALL     $DF9            ; Call subroutine at DF9
$606    $EE98   UNKNOWN  $EE98           ; Unknown Exxx instruction
$608    $82DD   UNKNOWN  82DD            ; Unknown 8xxx instruction
$60A    $9EA3   UNKNOWN  $9EA3           ; Unknown 9xxx instruction
$60C    $BD79   JP       V0, $D79        ; Jump to V0 + D79
$60E    $F335   UNKNOWN  F335            ; Unknown Fxxx instruction
$610    $8E3A   UNKNOWN  8E3A            ; Unknown 8xxx instruction
$612    $5F12   UNKNOWN  $5F12           ; Unknown 5xxx instruction
$614    $7139   ADD      V1, #39         ; Add 57 to V1
$616    $5B55   UNKNOWN  $5B55           ; Unknown 5xxx instruction
$618    $7A70   ADD      VA, #70         ; Add 112 to VA
$61A    $12AE   JP       $2AE            ; Jump to 2AE
$61C    $40A6   SNE      V0, #A6         ; Skip if V0 != 166
$61E    $B743   JP       V0, $743        ; Jump to V0 + 743
$620    $2D75   CALL     $D75            ; Call subroutine at D75
$622    $4FD4   SNE      VF, #D4         ; Skip if VF != 212
$624    $6F9D   LD       VF, #9D         ; Load 157 into VF
$626    $2215   CALL     $215            ; Call subroutine at 215
$628    $7947   ADD      V9, #47         ; Add 71 to V9
$62A    $B08F   JP       V0, $08F        ; Jump to V0 + 08F
$62C    $F673   UNKNOWN  F673            ; Unknown Fxxx instruction
$62E    $79CE   ADD      V9, #CE         ; Add 206 to V9
$630    $0702   SYS      $702            ; System call to 702
$632    $4282   SNE      V2, #82         ; Skip if V2 != 130
$634    $98A4   UNKNOWN  $98A4           ; Unknown 9xxx instruction
$636    $3451   SE       V4, #51         ; Skip if V4 == 81
$638    $1622   JP       $622            ; Jump to 622
$63A    $EF66   UNKNOWN  $EF66           ; Unknown Exxx instruction
$63C    $61D4   LD       V1, #D4         ; Load 212 into V1
$63E    $4366   SNE      V3, #66         ; Skip if V3 != 102
$640    $646A   LD       V4, #6A         ; Load 106 into V4
$642    $AFD7   LD       I, $FD7         ; Load FD7 into I
$644    $DCAE   DRW      VC, VA, #E      ; Draw 14-byte sprite at VC, VA
$646    $3FE6   SE       VF, #E6         ; Skip if VF == 230
$648    $679F   LD       V7, #9F         ; Load 159 into V7
$64A    $40FD   SNE      V0, #FD         ; Skip if V0 != 253
$64C    $B804   JP       V0, $804        ; Jump to V0 + 804
$64E    $4892   SNE      V8, #92         ; Skip if V8 != 146
$650    $9792   UNKNOWN  $9792           ; Unknown 9xxx instruction
$652    $320D   SE       V2, #0D         ; Skip if V2 == 13
$654    $6EEF   LD       VE, #EF         ; Load 239 into VE
$656    $0B7F   SYS      $B7F            ; System call to B7F
$658    $78B6   ADD      V8, #B6         ; Add 182 to V8
$65A    $C15F   RND      V1, #5F         ; V1 = random & 5F
$65C    $9895   UNKNOWN  $9895           ; Unknown 9xxx instruction
$65E    $7362   ADD      V3, #62         ; Add 98 to V3
$660    $6403   LD       V4, #03         ; Load 3 into V4
$662    $91DF   UNKNOWN  $91DF           ; Unknown 9xxx instruction
$664    $C8AA   RND      V8, #AA         ; V8 = random & AA
$666    $AC53   LD       I, $C53         ; Load C53 into I
$668    $D4D8   DRW      V4, VD, #8      ; Draw 8-byte sprite at V4, VD
$66A    $7F84   ADD      VF, #84         ; Add 132 to VF
$66C    $6152   LD       V1, #52         ; Load 82 into V1
$66E    $7AD9   ADD      VA, #D9         ; Add 217 to VA
$670    $9B92   UNKNOWN  $9B92           ; Unknown 9xxx instruction
$672    $A8B2   LD       I, $8B2         ; Load 8B2 into I
$674    $42A4   SNE      V2, #A4         ; Skip if V2 != 164
$676    $3235   SE       V2, #35         ; Skip if V2 == 53
$678    $518A   UNKNOWN  $518A           ; Unknown 5xxx instruction
$67A    $15D9   JP       $5D9            ; Jump to 5D9
$67C    $7C0F   ADD      VC, #0F         ; Add 15 to VC
$67E    $A488   LD       I, $488         ; Load 488 into I
$680    $DCB8   DRW      VC, VB, #8      ; Draw 8-byte sprite at VC, VB
$682    $9BC0   SNE      VB, VC          ; Skip if VB != VC
$684    $FB87   UNKNOWN  FB87            ; Unknown Fxxx instruction
$686    $C4E1   RND      V4, #E1         ; V4 = random & E1
$688    $195C   JP       $95C            ; Jump to 95C
$68A    $80E1   OR       V0, VE          ; V0 |= VE
$68C    $5B95   UNKNOWN  $5B95           ; Unknown 5xxx instruction
$68E    $7169   ADD      V1, #69         ; Add 105 to V1
$690    $1D8B   JP       $D8B            ; Jump to D8B
$692    $8604   ADD      V6, V0          ; V6 += V0, VF = carry
$694    $6CB9   LD       VC, #B9         ; Load 185 into VC
$696    $2CD5   CALL     $CD5            ; Call subroutine at CD5
$698    $D05A   DRW      V0, V5, #A      ; Draw 10-byte sprite at V0, V5
$69A    $498C   SNE      V9, #8C         ; Skip if V9 != 140
$69C    $31C7   SE       V1, #C7         ; Skip if V1 == 199
$69E    $3DAE   SE       VD, #AE         ; Skip if VD == 174
$6A0    $56D5   UNKNOWN  $56D5           ; Unknown 5xxx instruction
$6A2    $BF63   JP       V0, $F63        ; Jump to V0 + F63
$6A4    $DBB0   DRW      VB, VB, #0      ; Draw 0-byte sprite at VB, VB
$6A6    $DEFC   DRW      VE, VF, #C      ; Draw 12-byte sprite at VE, VF
$6A8    $15CE   JP       $5CE            ; Jump to 5CE
$6AA    $DE3B   DRW      VE, V3, #B      ; Draw 11-byte sprite at VE, V3
$6AC    $C208   RND      V2, #08         ; V2 = random & 08
$6AE    $76E9   ADD      V6, #E9         ; Add 233 to V6
$6B0    $0457   SYS      $457            ; System call to 457
$6B2    $D0D6   DRW      V0, VD, #6      ; Draw 6-byte sprite at V0, VD
$6B4    $CD0C   RND      VD, #0C         ; VD = random & 0C
$6B6    $6CB6   LD       VC, #B6         ; Load 182 into VC
$6B8    $C534   RND      V5, #34         ; V5 = random & 34
$6BA    $BA9C   JP       V0, $A9C        ; Jump to V0 + A9C
$6BC    $F8BD   UNKNOWN  F8BD            ; Unknown Fxxx instruction
$6BE    $8ADC   UNKNOWN  8ADC            ; Unknown 8xxx instruction
$6C0    $46F4   SNE      V6, #F4         ; Skip if V6 != 244
$6C2    $A28A   LD       I, $28A         ; Load 28A into I
$6C4    $ADF7   LD       I, $DF7         ; Load DF7 into I
$6C6    $80E6   SHR      V0              ; V0 >>= 1, VF = LSB
$6C8    $99AF   UNKNOWN  $99AF           ; Unknown 9xxx instruction
$6CA    $1EC0   JP       $EC0            ; Jump to EC0
$6CC    $5B3D   UNKNOWN  $5B3D           ; Unknown 5xxx instruction
$6CE    $1176   JP       $176            ; Jump to 176
$6D0    $09F5   SYS      $9F5            ; System call to 9F5
$6D2    $3C25   SE       VC, #25         ; Skip if VC == 37
$6D4    $9A10   SNE      VA, V1          ; Skip if VA != V1
$6D6    $1CA0   JP       $CA0            ; Jump to CA0
$6D8    $ED00   UNKNOWN  $ED00           ; Unknown Exxx instruction
$6DA    $0A9E   SYS      $A9E            ; System call to A9E
$6DC    $6343   LD       V3, #43         ; Load 67 into V3
$6DE    $3D72   SE       VD, #72         ; Skip if VD == 114
$6E0    $2D78   CALL     $D78            ; Call subroutine at D78
$6E2    $06A8   SYS      $6A8            ; System call to 6A8
$6E4    $4E23   SNE      VE, #23         ; Skip if VE != 35
$6E6    $0059   SYS      $059            ; System call to 059
$6E8    $C92A   RND      V9, #2A         ; V9 = random & 2A
$6EA    $C17D   RND      V1, #7D         ; V1 = random & 7D
$6EC    $8508   UNKNOWN  8508            ; Unknown 8xxx instruction
$6EE    $AC79   LD       I, $C79         ; Load C79 into I
$6F0    $31AC   SE       V1, #AC         ; Skip if V1 == 172
$6F2    $57FE   UNKNOWN  $57FE           ; Unknown 5xxx instruction
$6F4    $D450   DRW      V4, V5, #0      ; Draw 0-byte sprite at V4, V5
$6F6    $5A66   UNKNOWN  $5A66           ; Unknown 5xxx instruction
$6F8    $9BD9   UNKNOWN  $9BD9           ; Unknown 9xxx instruction
$6FA    $3075   SE       V0, #75         ; Skip if V0 == 117
$6FC    $8271   OR       V2, V7          ; V2 |= V7
$6FE    $5DE8   UNKNOWN  $5DE8           ; Unknown 5xxx instruction
$700    $E49D   UNKNOWN  $E49D           ; Unknown Exxx instruction
$702    $EB54   UNKNOWN  $EB54           ; Unknown Exxx instruction
$704    $5672   UNKNOWN  $5672           ; Unknown 5xxx instruction
$706    $C297   RND      V2, #97         ; V2 = random & 97
$708    $3464   SE       V4, #64         ; Skip if V4 == 100
$70A    $3E6B   SE       VE, #6B         ; Skip if VE == 107
$70C    $3E5D   SE       VE, #5D         ; Skip if VE == 93
$70E    $D8F0   DRW      V8, VF, #0      ; Draw 0-byte sprite at V8, VF
$710    $0A06   SYS      $A06            ; System call to A06
$712    $5307   UNKNOWN  $5307           ; Unknown 5xxx instruction
$714    $438D   SNE      V3, #8D         ; Skip if V3 != 141
$716    $0D08   SYS      $D08            ; System call to D08
$718    $59EC   UNKNOWN  $59EC           ; Unknown 5xxx instruction
$71A    $0F91   SYS      $F91            ; System call to F91
$71C    $7329   ADD      V3, #29         ; Add 41 to V3
$71E    $5D8D   UNKNOWN  $5D8D           ; Unknown 5xxx instruction
$720    $BE06   JP       V0, $E06        ; Jump to V0 + E06
$722    $0E8B   SYS      $E8B            ; System call to E8B
$724    $CCEA   RND      VC, #EA         ; VC = random & EA
$726    $577A   UNKNOWN  $577A           ; Unknown 5xxx instruction
$728    $10D6   JP       $0D6            ; Jump to 0D6
$72A    $4D2A   SNE      VD, #2A         ; Skip if VD != 42
$72C    $A04A   LD       I, $04A         ; Load 04A into I
$72E    $0C3B   SYS      $C3B            ; System call to C3B
$730    $CCA3   RND      VC, #A3         ; VC = random & A3
$732    $0F43   SYS      $F43            ; System call to F43
$734    $8772   AND      V7, V7          ; V7 &= V7
$736    $1D17   JP       $D17            ; Jump to D17
$738    $7ED5   ADD      VE, #D5         ; Add 213 to VE
$73A    $202E   CALL     $02E            ; Call subroutine at 02E
$73C    $DF71   DRW      VF, V7, #1      ; Draw 1-byte sprite at VF, V7
$73E    $ADD5   LD       I, $DD5         ; Load DD5 into I
$740    $1B24   JP       $B24            ; Jump to B24
$742    $9451   UNKNOWN  $9451           ; Unknown 9xxx instruction
$744    $3220   SE       V2, #20         ; Skip if V2 == 32
$746    $40D6   SNE      V0, #D6         ; Skip if V0 != 214
$748    $0DD1   SYS      $DD1            ; System call to DD1
$74A    $5E2C   UNKNOWN  $5E2C           ; Unknown 5xxx instruction
$74C    $10D4   JP       $0D4            ; Jump to 0D4
$74E    $03DD   SYS      $3DD            ; System call to 3DD
$750    $3797   SE       V7, #97         ; Skip if V7 == 151
$752    $7FFB   ADD      VF, #FB         ; Add 251 to VF
$754    $E2B6   UNKNOWN  $E2B6           ; Unknown Exxx instruction
$756    $577C   UNKNOWN  $577C           ; Unknown 5xxx instruction
$758    $4094   SNE      V0, #94         ; Skip if V0 != 148
$75A    $B061   JP       V0, $061        ; Jump to V0 + 061
$75C    $28E3   CALL     $8E3            ; Call subroutine at 8E3
$75E    $8684   ADD      V6, V8          ; V6 += V8, VF = carry
$760    $7546   ADD      V5, #46         ; Add 70 to V5
$762    $C14D   RND      V1, #4D         ; V1 = random & 4D
$764    $C34F   RND      V3, #4F         ; V3 = random & 4F
$766    $3EB8   SE       VE, #B8         ; Skip if VE == 184
$768    $2F4F   CALL     $F4F            ; Call subroutine at F4F
$76A    $9234   UNKNOWN  $9234           ; Unknown 9xxx instruction
$76C    $17E9   JP       $7E9            ; Jump to 7E9
$76E    $D74A   DRW      V7, V4, #A      ; Draw 10-byte sprite at V7, V4
$770    $1DA2   JP       $DA2            ; Jump to DA2
$772    $70CF   ADD      V0, #CF         ; Add 207 to V0
$774    $87CD   UNKNOWN  87CD            ; Unknown 8xxx instruction
$776    $5AD2   UNKNOWN  $5AD2           ; Unknown 5xxx instruction
$778    $68B2   LD       V8, #B2         ; Load 178 into V8
$77A    $5BEB   UNKNOWN  $5BEB           ; Unknown 5xxx instruction
$77C    $CBF2   RND      VB, #F2         ; VB = random & F2
$77E    $183A   JP       $83A            ; Jump to 83A
$780    $52BA   UNKNOWN  $52BA           ; Unknown 5xxx instruction
$782    $DA0F   DRW      VA, V0, #F      ; Draw 15-byte sprite at VA, V0
$784    $A811   LD       I, $811         ; Load 811 into I
$786    $EF19   UNKNOWN  $EF19           ; Unknown Exxx instruction
$788    $CA17   RND      VA, #17         ; VA = random & 17
$78A    $183A   JP       $83A            ; Jump to 83A
$78C    $0152   SYS      $152            ; System call to 152
$78E    $FB2F   UNKNOWN  FB2F            ; Unknown Fxxx instruction
$790    $C49B   RND      V4, #9B         ; V4 = random & 9B
$792    $2B55   CALL     $B55            ; Call subroutine at B55
$794    $D0D9   DRW      V0, VD, #9      ; Draw 9-byte sprite at V0, VD
$796    $C45C   RND      V4, #5C         ; V4 = random & 5C
$798    $5643   UNKNOWN  $5643           ; Unknown 5xxx instruction
$79A    $C4F1   RND      V4, #F1         ; V4 = random & F1
$79C    $CCE4   RND      VC, #E4         ; VC = random & E4
$79E    $ED2C   UNKNOWN  $ED2C           ; Unknown Exxx instruction
$7A0    $9B80   SNE      VB, V8          ; Skip if VB != V8
$7A2    $BDF4   JP       V0, $DF4        ; Jump to V0 + DF4
$7A4    $75B2   ADD      V5, #B2         ; Add 178 to V5
$7A6    $F8FF   UNKNOWN  F8FF            ; Unknown Fxxx instruction
$7A8    $406E   SNE      V0, #6E         ; Skip if V0 != 110
$7AA    $3110   SE       V1, #10         ; Skip if V1 == 16
$7AC    $ABC9   LD       I, $BC9         ; Load BC9 into I
$7AE    $9FE5   UNKNOWN  $9FE5           ; Unknown 9xxx instruction
$7B0    $B487   JP       V0, $487        ; Jump to V0 + 487
$7B2    $2474   CALL     $474            ; Call subroutine at 474
$7B4    $374A   SE       V7, #4A         ; Skip if V7 == 74
$7B6    $9A09   UNKNOWN  $9A09           ; Unknown 9xxx instruction
$7B8    $14B2   JP       $4B2            ; Jump to 4B2
$7BA    $313C   SE       V1, #3C         ; Skip if V1 == 60
$7BC    $4D95   SNE      VD, #95         ; Skip if VD != 149
$7BE    $BD4E   JP       V0, $D4E        ; Jump to V0 + D4E
$7C0    $49AB   SNE      V9, #AB         ; Skip if V9 != 171
$7C2    $428A   SNE      V2, #8A         ; Skip if V2 != 138
$7C4    $CE68   RND      VE, #68         ; VE = random & 68
$7C6    $9370   SNE      V3, V7          ; Skip if V3 != V7
$7C8    $F876   UNKNOWN  F876            ; Unknown Fxxx instruction
$7CA    $D4C2   DRW      V4, VC, #2      ; Draw 2-byte sprite at V4, VC
$7CC    $E9CE   UNKNOWN  $E9CE           ; Unknown Exxx instruction
$7CE    $2EB4   CALL     $EB4            ; Call subroutine at EB4
$7D0    $AF12   LD       I, $F12         ; Load F12 into I
$7D2    $8C6C   UNKNOWN  8C6C            ; Unknown 8xxx instruction
$7D4    $03DD   SYS      $3DD            ; System call to 3DD
$7D6    $6E23   LD       VE, #23         ; Load 35 into VE
$7D8    $A10D   LD       I, $10D         ; Load 10D into I
$7DA    $A595   LD       I, $595         ; Load 595 into I
$7DC    $39DC   SE       V9, #DC         ; Skip if V9 == 220
$7DE    $DBC0   DRW      VB, VC, #0      ; Draw 0-byte sprite at VB, VC
$7E0    $552B   UNKNOWN  $552B           ; Unknown 5xxx instruction
$7E2    $9722   UNKNOWN  $9722           ; Unknown 9xxx instruction
$7E4    $48AE   SNE      V8, #AE         ; Skip if V8 != 174
$7E6    $5DB7   UNKNOWN  $5DB7           ; Unknown 5xxx instruction
$7E8    $453E   SNE      V5, #3E         ; Skip if V5 != 62
$7EA    $E7D8   UNKNOWN  $E7D8           ; Unknown Exxx instruction
$7EC    $1006   JP       $006            ; Jump to 006
$7EE    $9158   UNKNOWN  $9158           ; Unknown 9xxx instruction
$7F0    $8787   SUBN     V7, V8          ; V7 = V8 - V7, VF = !borrow
$7F2    $43E6   SNE      V3, #E6         ; Skip if V3 != 230
$7F4    $1DEE   JP       $DEE            ; Jump to DEE
$7F6    $C600   RND      V6, #00         ; V6 = random & 00
$7F8    $3DC3   SE       VD, #C3         ; Skip if VD == 195
$7FA    $B9A8   JP       V0, $9A8        ; Jump to V0 + 9A8
$7FC    $93A1   UNKNOWN  $93A1           ; Unknown 9xxx instruction
$7FE    $1AF4   JP       $AF4            ; Jump to AF4
$800    $8C53   XOR      VC, V5          ; VC ^= V5
$802    $378C   SE       V7, #8C         ; Skip if V7 == 140
$804    $DE5B   DRW      VE, V5, #B      ; Draw 11-byte sprite at VE, V5
$806    $FC8B   UNKNOWN  FC8B            ; Unknown Fxxx instruction
$808    $9785   UNKNOWN  $9785           ; Unknown 9xxx instruction
$80A    $711C   ADD      V1, #1C         ; Add 28 to V1
$80C    $5808   UNKNOWN  $5808           ; Unknown 5xxx instruction
$80E    $BED5   JP       V0, $ED5        ; Jump to V0 + ED5
$810    $A80C   LD       I, $80C         ; Load 80C into I
$812    $4F9E   SNE      VF, #9E         ; Skip if VF != 158
$814    $2C15   CALL     $C15            ; Call subroutine at C15
$816    $A0CE   LD       I, $0CE         ; Load 0CE into I
$818    $D8CC   DRW      V8, VC, #C      ; Draw 12-byte sprite at V8, VC
$81A    $ABC0   LD       I, $BC0         ; Load BC0 into I
$81C    $871C   UNKNOWN  871C            ; Unknown 8xxx instruction
$81E    $0D1C   SYS      $D1C            ; System call to D1C
$820    $D246   DRW      V2, V4, #6      ; Draw 6-byte sprite at V2, V4
$822    $C28B   RND      V2, #8B         ; V2 = random & 8B
$824    $70F8   ADD      V0, #F8         ; Add 248 to V0
$826    $F6FB   UNKNOWN  F6FB            ; Unknown Fxxx instruction
$828    $3790   SE       V7, #90         ; Skip if V7 == 144
$82A    $2669   CALL     $669            ; Call subroutine at 669
$82C    $57E5   UNKNOWN  $57E5           ; Unknown 5xxx instruction
$82E    $3AC4   SE       VA, #C4         ; Skip if VA == 196
$830    $CFF1   RND      VF, #F1         ; VF = random & F1
$832    $7171   ADD      V1, #71         ; Add 113 to V1
$834    $4DC7   SNE      VD, #C7         ; Skip if VD != 199
$836    $855E   SHL      V5              ; V5 <<= 1, VF = MSB
$838    $2226   CALL     $226            ; Call subroutine at 226
$83A    $52E6   UNKNOWN  $52E6           ; Unknown 5xxx instruction
$83C    $C552   RND      V5, #52         ; V5 = random & 52
$83E    $D79E   DRW      V7, V9, #E      ; Draw 14-byte sprite at V7, V9
$840    $E9E3   UNKNOWN  $E9E3           ; Unknown Exxx instruction
$842    $80FC   UNKNOWN  80FC            ; Unknown 8xxx instruction
$844    $9CC9   UNKNOWN  $9CC9           ; Unknown 9xxx instruction
$846    $B9E9   JP       V0, $9E9        ; Jump to V0 + 9E9
$848    $A6FC   LD       I, $6FC         ; Load 6FC into I
$84A    $372A   SE       V7, #2A         ; Skip if V7 == 42
$84C    $7AD1   ADD      VA, #D1         ; Add 209 to VA
$84E    $BF45   JP       V0, $F45        ; Jump to V0 + F45
$850    $9602   UNKNOWN  $9602           ; Unknown 9xxx instruction
$852    $6389   LD       V3, #89         ; Load 137 into V3
$854    $3074   SE       V0, #74         ; Skip if V0 == 116
$856    $3ACA   SE       VA, #CA         ; Skip if VA == 202
$858    $6B3C   LD       VB, #3C         ; Load 60 into VB
$85A    $5D0B   UNKNOWN  $5D0B           ; Unknown 5xxx instruction
$85C    $F7E8   UNKNOWN  F7E8            ; Unknown Fxxx instruction
$85E    $D411   DRW      V4, V1, #1      ; Draw 1-byte sprite at V4, V1
$860    $EBA2   UNKNOWN  $EBA2           ; Unknown Exxx instruction
$862    $7C3B   ADD      VC, #3B         ; Add 59 to VC
$864    $1B24   JP       $B24            ; Jump to B24
$866    $2A0A   CALL     $A0A            ; Call subroutine at A0A
$868    $6C7E   LD       VC, #7E         ; Load 126 into VC
$86A    $8290   LD       V2, V9          ; V2 = V9
$86C    $A1B1   LD       I, $1B1         ; Load 1B1 into I
$86E    $AEB0   LD       I, $EB0         ; Load EB0 into I
$870    $45A5   SNE      V5, #A5         ; Skip if V5 != 165
$872    $A2E2   LD       I, $2E2         ; Load 2E2 into I
$874    $9BFB   UNKNOWN  $9BFB           ; Unknown 9xxx instruction
$876    $6465   LD       V4, #65         ; Load 101 into V4
$878    $2A75   CALL     $A75            ; Call subroutine at A75
$87A    $9B4F   UNKNOWN  $9B4F           ; Unknown 9xxx instruction
$87C    $A6C6   LD       I, $6C6         ; Load 6C6 into I
$87E    $903D   UNKNOWN  $903D           ; Unknown 9xxx instruction
$880    $6BAE   LD       VB, #AE         ; Load 174 into VB
$882    $D2B8   DRW      V2, VB, #8      ; Draw 8-byte sprite at V2, VB
$884    $D546   DRW      V5, V4, #6      ; Draw 6-byte sprite at V5, V4
$886    $A189   LD       I, $189         ; Load 189 into I
$888    $3EA9   SE       VE, #A9         ; Skip if VE == 169
$88A    $2DF3   CALL     $DF3            ; Call subroutine at DF3
$88C    $DF2F   DRW      VF, V2, #F      ; Draw 15-byte sprite at VF, V2
$88E    $2CEA   CALL     $CEA            ; Call subroutine at CEA
$890    $5F6A   UNKNOWN  $5F6A           ; Unknown 5xxx instruction
$892    $C377   RND      V3, #77         ; V3 = random & 77
$894    $4B49   SNE      VB, #49         ; Skip if VB != 73
$896    $0829   SYS      $829            ; System call to 829
$898    $297E   CALL     $97E            ; Call subroutine at 97E
$89A    $9809   UNKNOWN  $9809           ; Unknown 9xxx instruction
$89C    $D980   DRW      V9, V8, #0      ; Draw 0-byte sprite at V9, V8
$89E    $D896   DRW      V8, V9, #6      ; Draw 6-byte sprite at V8, V9
$8A0    $B81D   JP       V0, $81D        ; Jump to V0 + 81D
$8A2    $CEBE   RND      VE, #BE         ; VE = random & BE
$8A4    $D91A   DRW      V9, V1, #A      ; Draw 10-byte sprite at V9, V1
$8A6    $222B   CALL     $22B            ; Call subroutine at 22B
$8A8    $1268   JP       $268            ; Jump to 268
$8AA    $734B   ADD      V3, #4B         ; Add 75 to V3
$8AC    $8A87   SUBN     VA, V8          ; VA = V8 - VA, VF = !borrow
$8AE    $1802   JP       $802            ; Jump to 802
$8B0    $C916   RND      V9, #16         ; V9 = random & 16
$8B2    $38A9   SE       V8, #A9         ; Skip if V8 == 169
$8B4    $E954   UNKNOWN  $E954           ; Unknown Exxx instruction
$8B6    $82DD   UNKNOWN  82DD            ; Unknown 8xxx instruction
$8B8    $5004   UNKNOWN  $5004           ; Unknown 5xxx instruction
$8BA    $58D0   SE       V8, VD          ; Skip if V8 == VD
$8BC    $675C   LD       V7, #5C         ; Load 92 into V7
$8BE    $FA87   UNKNOWN  FA87            ; Unknown Fxxx instruction
$8C0    $482E   SNE      V8, #2E         ; Skip if V8 != 46
$8C2    $D9E5   DRW      V9, VE, #5      ; Draw 5-byte sprite at V9, VE
$8C4    $9C5D   UNKNOWN  $9C5D           ; Unknown 9xxx instruction
$8C6    $BECE   JP       V0, $ECE        ; Jump to V0 + ECE
$8C8    $1508   JP       $508            ; Jump to 508
$8CA    $E617   UNKNOWN  $E617           ; Unknown Exxx instruction
$8CC    $CD14   RND      VD, #14         ; VD = random & 14
$8CE    $A7E6   LD       I, $7E6         ; Load 7E6 into I
$8D0    $2B98   CALL     $B98            ; Call subroutine at B98
$8D2    $2B9E   CALL     $B9E            ; Call subroutine at B9E
$8D4    $3D03   SE       VD, #03         ; Skip if VD == 3
$8D6    $EF5C   UNKNOWN  $EF5C           ; Unknown Exxx instruction
$8D8    $2B7A   CALL     $B7A            ; Call subroutine at B7A
$8DA    $34B3   SE       V4, #B3         ; Skip if V4 == 179
$8DC    $C90E   RND      V9, #0E         ; V9 = random & 0E
$8DE    $3B6F   SE       VB, #6F         ; Skip if VB == 111
$8E0    $C095   RND      V0, #95         ; V0 = random & 95
$8E2    $2D16   CALL     $D16            ; Call subroutine at D16
$8E4    $95D2   UNKNOWN  $95D2           ; Unknown 9xxx instruction
$8E6    $A270   LD       I, $270         ; Load 270 into I
$8E8    $C43D   RND      V4, #3D         ; V4 = random & 3D
$8EA    $1209   JP       $209            ; Jump to 209
$8EC    $4E14   SNE      VE, #14         ; Skip if VE != 20
$8EE    $29A0   CALL     $9A0            ; Call subroutine at 9A0
$8F0    $7150   ADD      V1, #50         ; Add 80 to V1
$8F2    $40F5   SNE      V0, #F5         ; Skip if V0 != 245
$8F4    $86BB   UNKNOWN  86BB            ; Unknown 8xxx instruction
$8F6    $6514   LD       V5, #14         ; Load 20 into V5
$8F8    $0F1F   SYS      $F1F            ; System call to F1F
$8FA    $6F92   LD       VF, #92         ; Load 146 into VF
$8FC    $5FF0   SE       VF, VF          ; Skip if VF == VF
$8FE    $468B   SNE      V6, #8B         ; Skip if V6 != 139
$900    $CCA0   RND      VC, #A0         ; VC = random & A0
$902    $BEA3   JP       V0, $EA3        ; Jump to V0 + EA3
$904    $42A0   SNE      V2, #A0         ; Skip if V2 != 160
$906    $FB60   UNKNOWN  FB60            ; Unknown Fxxx instruction
$908    $03EE   SYS      $3EE            ; System call to 3EE
$90A    $E0DE   UNKNOWN  $E0DE           ; Unknown Exxx instruction
$90C    $F44A   UNKNOWN  F44A            ; Unknown Fxxx instruction
$90E    $B773   JP       V0, $773        ; Jump to V0 + 773
$910    $52E5   UNKNOWN  $52E5           ; Unknown 5xxx instruction
$912    $7A16   ADD      VA, #16         ; Add 22 to VA
$914    $5312   UNKNOWN  $5312           ; Unknown 5xxx instruction
$916    $018F   SYS      $18F            ; System call to 18F
$918    $5613   UNKNOWN  $5613           ; Unknown 5xxx instruction
$91A    $7B9A   ADD      VB, #9A         ; Add 154 to VB
$91C    $BC92   JP       V0, $C92        ; Jump to V0 + C92
$91E    $3AC1   SE       VA, #C1         ; Skip if VA == 193
$920    $F4D2   UNKNOWN  F4D2            ; Unknown Fxxx instruction
$922    $A3EA   LD       I, $3EA         ; Load 3EA into I
$924    $D1F0   DRW      V1, VF, #0      ; Draw 0-byte sprite at V1, VF
$926    $8608   UNKNOWN  8608            ; Unknown 8xxx instruction
$928    $B90C   JP       V0, $90C        ; Jump to V0 + 90C
$92A    $E913   UNKNOWN  $E913           ; Unknown Exxx instruction
$92C    $9243   UNKNOWN  $9243           ; Unknown 9xxx instruction
$92E    $FBE5   UNKNOWN  FBE5            ; Unknown Fxxx instruction
$930    $49EA   SNE      V9, #EA         ; Skip if V9 != 234
$932    $986F   UNKNOWN  $986F           ; Unknown 9xxx instruction
$934    $C29A   RND      V2, #9A         ; V2 = random & 9A
$936    $8CA4   ADD      VC, VA          ; VC += VA, VF = carry
$938    $ACA4   LD       I, $CA4         ; Load CA4 into I
$93A    $47D1   SNE      V7, #D1         ; Skip if V7 != 209
$93C    $88A8   UNKNOWN  88A8            ; Unknown 8xxx instruction
$93E    $0135   SYS      $135            ; System call to 135
$940    $E0DB   UNKNOWN  $E0DB           ; Unknown Exxx instruction
$942    $1BFD   JP       $BFD            ; Jump to BFD
$944    $D187   DRW      V1, V8, #7      ; Draw 7-byte sprite at V1, V8
$946    $A1DB   LD       I, $1DB         ; Load 1DB into I
$948    $8646   SHR      V6              ; V6 >>= 1, VF = LSB
$94A    $9B2C   UNKNOWN  $9B2C           ; Unknown 9xxx instruction
$94C    $E8F5   UNKNOWN  $E8F5           ; Unknown Exxx instruction
$94E    $BC6D   JP       V0, $C6D        ; Jump to V0 + C6D
$950    $B3C4   JP       V0, $3C4        ; Jump to V0 + 3C4
$952    $E024   UNKNOWN  $E024           ; Unknown Exxx instruction
$954    $7562   ADD      V5, #62         ; Add 98 to V5
$956    $C179   RND      V1, #79         ; V1 = random & 79
$958    $57C7   UNKNOWN  $57C7           ; Unknown 5xxx instruction
$95A    $8F7E   SHL      VF              ; VF <<= 1, VF = MSB
$95C    $1430   JP       $430            ; Jump to 430
$95E    $936F   UNKNOWN  $936F           ; Unknown 9xxx instruction
$960    $FA86   UNKNOWN  FA86            ; Unknown Fxxx instruction
$962    $CCA2   RND      VC, #A2         ; VC = random & A2
$964    $91F8   UNKNOWN  $91F8           ; Unknown 9xxx instruction
$966    $325B   SE       V2, #5B         ; Skip if V2 == 91
$968    $7E43   ADD      VE, #43         ; Add 67 to VE
$96A    $42C3   SNE      V2, #C3         ; Skip if V2 != 195
$96C    $6FF5   LD       VF, #F5         ; Load 245 into VF
$96E    $671F   LD       V7, #1F         ; Load 31 into V7
$970    $B149   JP       V0, $149        ; Jump to V0 + 149
$972    $D4AC   DRW      V4, VA, #C      ; Draw 12-byte sprite at V4, VA
$974    $B474   JP       V0, $474        ; Jump to V0 + 474
$976    $CABC   RND      VA, #BC         ; VA = random & BC
$978    $7C1D   ADD      VC, #1D         ; Add 29 to VC
$97A    $E841   UNKNOWN  $E841           ; Unknown Exxx instruction
$97C    $1C70   JP       $C70            ; Jump to C70
$97E    $3866   SE       V8, #66         ; Skip if V8 == 102
$980    $D236   DRW      V2, V3, #6      ; Draw 6-byte sprite at V2, V3
$982    $785A   ADD      V8, #5A         ; Add 90 to V8
$984    $0046   SYS      $046            ; System call to 046
$986    $A039   LD       I, $039         ; Load 039 into I
$988    $9D67   UNKNOWN  $9D67           ; Unknown 9xxx instruction
$98A    $2C8B   CALL     $C8B            ; Call subroutine at C8B
$98C    $D9C1   DRW      V9, VC, #1      ; Draw 1-byte sprite at V9, VC
$98E    $42A0   SNE      V2, #A0         ; Skip if V2 != 160
$990    $026A   SYS      $26A            ; System call to 26A
$992    $9F44   UNKNOWN  $9F44           ; Unknown 9xxx instruction
$994    $04BE   SYS      $4BE            ; System call to 4BE
$996    $46E3   SNE      V6, #E3         ; Skip if V6 != 227
$998    $C67D   RND      V6, #7D         ; V6 = random & 7D
$99A    $5FB7   UNKNOWN  $5FB7           ; Unknown 5xxx instruction
$99C    $7D29   ADD      VD, #29         ; Add 41 to VD
$99E    $CEE8   RND      VE, #E8         ; VE = random & E8
$9A0    $B673   JP       V0, $673        ; Jump to V0 + 673
$9A2    $8279   UNKNOWN  8279            ; Unknown 8xxx instruction
$9A4    $EA24   UNKNOWN  $EA24           ; Unknown Exxx instruction
$9A6    $478B   SNE      V7, #8B         ; Skip if V7 != 139
$9A8    $02BC   SYS      $2BC            ; System call to 2BC
$9AA    $85C9   UNKNOWN  85C9            ; Unknown 8xxx instruction
$9AC    $2441   CALL     $441            ; Call subroutine at 441
$9AE    $1DC0   JP       $DC0            ; Jump to DC0
$9B0    $AFB9   LD       I, $FB9         ; Load FB9 into I
$9B2    $1856   JP       $856            ; Jump to 856
$9B4    $55F1   UNKNOWN  $55F1           ; Unknown 5xxx instruction
$9B6    $C34E   RND      V3, #4E         ; V3 = random & 4E
$9B8    $2F18   CALL     $F18            ; Call subroutine at F18
$9BA    $B9CC   JP       V0, $9CC        ; Jump to V0 + 9CC
$9BC    $8CF0   LD       VC, VF          ; VC = VF
$9BE    $B24A   JP       V0, $24A        ; Jump to V0 + 24A
$9C0    $4210   SNE      V2, #10         ; Skip if V2 != 16
$9C2    $280A   CALL     $80A            ; Call subroutine at 80A
$9C4    $15EA   JP       $5EA            ; Jump to 5EA
$9C6    $0649   SYS      $649            ; System call to 649
$9C8    $D531   DRW      V5, V3, #1      ; Draw 1-byte sprite at V5, V3
$9CA    $2117   CALL     $117            ; Call subroutine at 117
$9CC    $55DC   UNKNOWN  $55DC           ; Unknown 5xxx instruction
$9CE    $7AFE   ADD      VA, #FE         ; Add 254 to VA
$9D0    $C37F   RND      V3, #7F         ; V3 = random & 7F
$9D2    $1EF7   JP       $EF7            ; Jump to EF7
$9D4    $E935   UNKNOWN  $E935           ; Unknown Exxx instruction
$9D6    $F40B   UNKNOWN  F40B            ; Unknown Fxxx instruction
$9D8    $8B27   SUBN     VB, V2          ; VB = V2 - VB, VF = !borrow
$9DA    $5DB7   UNKNOWN  $5DB7           ; Unknown 5xxx instruction
$9DC    $CDC9   RND      VD, #C9         ; VD = random & C9
$9DE    $B678   JP       V0, $678        ; Jump to V0 + 678
$9E0    $903E   UNKNOWN  $903E           ; Unknown 9xxx instruction
$9E2    $084A   SYS      $84A            ; System call to 84A
$9E4    $DD51   DRW      VD, V5, #1      ; Draw 1-byte sprite at VD, V5
$9E6    $CFEE   RND      VF, #EE         ; VF = random & EE
$9E8    $2D0B   CALL     $D0B            ; Call subroutine at D0B
$9EA    $6B42   LD       VB, #42         ; Load 66 into VB
$9EC    $F768   UNKNOWN  F768            ; Unknown Fxxx instruction
$9EE    $27CF   CALL     $7CF            ; Call subroutine at 7CF
$9F0    $54A6   UNKNOWN  $54A6           ; Unknown 5xxx instruction
$9F2    $5671   UNKNOWN  $5671           ; Unknown 5xxx instruction
$9F4    $4AAD   SNE      VA, #AD         ; Skip if VA != 173
$9F6    $C2CE   RND      V2, #CE         ; V2 = random & CE
$9F8    $3953   SE       V9, #53         ; Skip if V9 == 83
$9FA    $7A8D   ADD      VA, #8D         ; Add 141 to VA
$9FC    $A82D   LD       I, $82D         ; Load 82D into I
$9FE    $1F8A   JP       $F8A            ; Jump to F8A
$A00    $E58E   UNKNOWN  $E58E           ; Unknown Exxx instruction
$A02    $4283   SNE      V2, #83         ; Skip if V2 != 131
$A04    $F7EA   UNKNOWN  F7EA            ; Unknown Fxxx instruction
$A06    $E34E   UNKNOWN  $E34E           ; Unknown Exxx instruction
$A08    $A36B   LD       I, $36B         ; Load 36B into I
$A0A    $7E33   ADD      VE, #33         ; Add 51 to VE
$A0C    $532F   UNKNOWN  $532F           ; Unknown 5xxx instruction
$A0E    $1966   JP       $966            ; Jump to 966
$A10    $B042   JP       V0, $042        ; Jump to V0 + 042
$A12    $D0D6   DRW      V0, VD, #6      ; Draw 6-byte sprite at V0, VD
$A14    $7B30   ADD      VB, #30         ; Add 48 to VB
$A16    $8884   ADD      V8, V8          ; V8 += V8, VF = carry
$A18    $8FD6   SHR      VF              ; VF >>= 1, VF = LSB
$A1A    $768E   ADD      V6, #8E         ; Add 142 to V6
$A1C    $4F68   SNE      VF, #68         ; Skip if VF != 104
$A1E    $FC46   UNKNOWN  FC46            ; Unknown Fxxx instruction
$A20    $570F   UNKNOWN  $570F           ; Unknown 5xxx instruction
$A22    $03DE   SYS      $3DE            ; System call to 3DE
$A24    $ED24   UNKNOWN  $ED24           ; Unknown Exxx instruction
$A26    $F943   UNKNOWN  F943            ; Unknown Fxxx instruction
$A28    $07E8   SYS      $7E8            ; System call to 7E8
$A2A    $B619   JP       V0, $619        ; Jump to V0 + 619
$A2C    $0955   SYS      $955            ; System call to 955
$A2E    $4E0A   SNE      VE, #0A         ; Skip if VE != 10
$A30    $9971   UNKNOWN  $9971           ; Unknown 9xxx instruction
$A32    $A11B   LD       I, $11B         ; Load 11B into I
$A34    $612C   LD       V1, #2C         ; Load 44 into V1
$A36    $CA71   RND      VA, #71         ; VA = random & 71
$A38    $20A7   CALL     $0A7            ; Call subroutine at 0A7
$A3A    $ED99   UNKNOWN  $ED99           ; Unknown Exxx instruction
$A3C    $6D35   LD       VD, #35         ; Load 53 into VD
$A3E    $F7E9   UNKNOWN  F7E9            ; Unknown Fxxx instruction
$A40    $E1A4   UNKNOWN  $E1A4           ; Unknown Exxx instruction
$A42    $B81F   JP       V0, $81F        ; Jump to V0 + 81F
$A44    $E148   UNKNOWN  $E148           ; Unknown Exxx instruction
$A46    $CE50   RND      VE, #50         ; VE = random & 50
$A48    $A370   LD       I, $370         ; Load 370 into I
$A4A    $D9C6   DRW      V9, VC, #6      ; Draw 6-byte sprite at V9, VC
$A4C    $57FB   UNKNOWN  $57FB           ; Unknown 5xxx instruction
$A4E    $6D99   LD       VD, #99         ; Load 153 into VD
$A50    $ED5E   UNKNOWN  $ED5E           ; Unknown Exxx instruction
$A52    $765D   ADD      V6, #5D         ; Add 93 to V6
$A54    $EBE6   UNKNOWN  $EBE6           ; Unknown Exxx instruction
$A56    $5568   UNKNOWN  $5568           ; Unknown 5xxx instruction
$A58    $84AE   SHL      V4              ; V4 <<= 1, VF = MSB
$A5A    $7B23   ADD      VB, #23         ; Add 35 to VB
$A5C    $B0A0   JP       V0, $0A0        ; Jump to V0 + 0A0
$A5E    $BDC1   JP       V0, $DC1        ; Jump to V0 + DC1
$A60    $2270   CALL     $270            ; Call subroutine at 270
$A62    $C5DA   RND      V5, #DA         ; V5 = random & DA
$A64    $3D06   SE       VD, #06         ; Skip if VD == 6
$A66    $A3DB   LD       I, $3DB         ; Load 3DB into I
$A68    $4C91   SNE      VC, #91         ; Skip if VC != 145
$A6A    $3225   SE       V2, #25         ; Skip if V2 == 37
$A6C    $FA2A   UNKNOWN  FA2A            ; Unknown Fxxx instruction
$A6E    $BE45   JP       V0, $E45        ; Jump to V0 + E45
$A70    $7A19   ADD      VA, #19         ; Add 25 to VA
$A72    $19B9   JP       $9B9            ; Jump to 9B9
$A74    $CBE9   RND      VB, #E9         ; VB = random & E9
$A76    $A4F8   LD       I, $4F8         ; Load 4F8 into I
$A78    $FE23   UNKNOWN  FE23            ; Unknown Fxxx instruction
$A7A    $DED2   DRW      VE, VD, #2      ; Draw 2-byte sprite at VE, VD
$A7C    $5935   UNKNOWN  $5935           ; Unknown 5xxx instruction
$A7E    $1BC7   JP       $BC7            ; Jump to BC7
$A80    $D7B7   DRW      V7, VB, #7      ; Draw 7-byte sprite at V7, VB
$A82    $DEAD   DRW      VE, VA, #D      ; Draw 13-byte sprite at VE, VA
$A84    $B2DF   JP       V0, $2DF        ; Jump to V0 + 2DF
$A86    $3B5F   SE       VB, #5F         ; Skip if VB == 95
$A88    $2AFD   CALL     $AFD            ; Call subroutine at AFD
$A8A    $43A5   SNE      V3, #A5         ; Skip if V3 != 165
$A8C    $8C3E   SHL      VC              ; VC <<= 1, VF = MSB
$A8E    $1F88   JP       $F88            ; Jump to F88
$A90    $20A0   CALL     $0A0            ; Call subroutine at 0A0
$A92    $5563   UNKNOWN  $5563           ; Unknown 5xxx instruction
$A94    $3914   SE       V9, #14         ; Skip if V9 == 20
$A96    $597E   UNKNOWN  $597E           ; Unknown 5xxx instruction
$A98    $1294   JP       $294            ; Jump to 294
$A9A    $7617   ADD      V6, #17         ; Add 23 to V6
$A9C    $05CF   SYS      $5CF            ; System call to 5CF
$A9E    $D90B   DRW      V9, V0, #B      ; Draw 11-byte sprite at V9, V0
$AA0    $1742   JP       $742            ; Jump to 742
$AA2    $885A   UNKNOWN  885A            ; Unknown 8xxx instruction
$AA4    $39D0   SE       V9, #D0         ; Skip if V9 == 208
$AA6    $1FD6   JP       $FD6            ; Jump to FD6
$AA8    $E8F4   UNKNOWN  $E8F4           ; Unknown Exxx instruction
$AAA    $4654   SNE      V6, #54         ; Skip if V6 != 84
$AAC    $6265   LD       V2, #65         ; Load 101 into V2
$AAE    $FFD1   UNKNOWN  FFD1            ; Unknown Fxxx instruction
$AB0    $49F1   SNE      V9, #F1         ; Skip if V9 != 241
$AB2    $017F   SYS      $17F            ; System call to 17F
$AB4    $33C7   SE       V3, #C7         ; Skip if V3 == 199
$AB6    $1CEC   JP       $CEC            ; Jump to CEC
$AB8    $626A   LD       V2, #6A         ; Load 106 into V2
$ABA    $1717   JP       $717            ; Jump to 717
$ABC    $50C1   UNKNOWN  $50C1           ; Unknown 5xxx instruction
$ABE    $CCC2   RND      VC, #C2         ; VC = random & C2
$AC0    $6B56   LD       VB, #56         ; Load 86 into VB
$AC2    $45D5   SNE      V5, #D5         ; Skip if V5 != 213
$AC4    $EE44   UNKNOWN  $EE44           ; Unknown Exxx instruction
$AC6    $C119   RND      V1, #19         ; V1 = random & 19
$AC8    $C14F   RND      V1, #4F         ; V1 = random & 4F
$ACA    $2BC5   CALL     $BC5            ; Call subroutine at BC5
$ACC    $6422   LD       V4, #22         ; Load 34 into V4
$ACE    $413F   SNE      V1, #3F         ; Skip if V1 != 63
$AD0    $ED0C   UNKNOWN  $ED0C           ; Unknown Exxx instruction
$AD2    $55A0   SE       V5, VA          ; Skip if V5 == VA
$AD4    $CA68   RND      VA, #68         ; VA = random & 68
$AD6    $F8DD   UNKNOWN  F8DD            ; Unknown Fxxx instruction
$AD8    $3397   SE       V3, #97         ; Skip if V3 == 151
$ADA    $C75A   RND      V7, #5A         ; V7 = random & 5A
$ADC    $1127   JP       $127            ; Jump to 127
$ADE    $B4BF   JP       V0, $4BF        ; Jump to V0 + 4BF
$AE0    $F053   UNKNOWN  F053            ; Unknown Fxxx instruction
$AE2    $4A0B   SNE      VA, #0B         ; Skip if VA != 11
$AE4    $6563   LD       V5, #63         ; Load 99 into V5
$AE6    $99DD   UNKNOWN  $99DD           ; Unknown 9xxx instruction
$AE8    $95C6   UNKNOWN  $95C6           ; Unknown 9xxx instruction
$AEA    $A5AC   LD       I, $5AC         ; Load 5AC into I
$AEC    $D2B2   DRW      V2, VB, #2      ; Draw 2-byte sprite at V2, VB
$AEE    $7901   ADD      V9, #01         ; Add 1 to V9
$AF0    $F593   UNKNOWN  F593            ; Unknown Fxxx instruction
$AF2    $A0CA   LD       I, $0CA         ; Load 0CA into I
$AF4    $977B   UNKNOWN  $977B           ; Unknown 9xxx instruction
$AF6    $C3A5   RND      V3, #A5         ; V3 = random & A5
$AF8    $D720   DRW      V7, V2, #0      ; Draw 0-byte sprite at V7, V2
$AFA    $4394   SNE      V3, #94         ; Skip if V3 != 148
$AFC    $4857   SNE      V8, #57         ; Skip if V8 != 87
$AFE    $D54C   DRW      V5, V4, #C      ; Draw 12-byte sprite at V5, V4
$B00    $214C   CALL     $14C            ; Call subroutine at 14C
$B02    $7703   ADD      V7, #03         ; Add 3 to V7
$B04    $1C6D   JP       $C6D            ; Jump to C6D
$B06    $BC9A   JP       V0, $C9A        ; Jump to V0 + C9A
$B08    $395A   SE       V9, #5A         ; Skip if V9 == 90
$B0A    $2440   CALL     $440            ; Call subroutine at 440
$B0C    $C8B7   RND      V8, #B7         ; V8 = random & B7
$B0E    $B256   JP       V0, $256        ; Jump to V0 + 256
$B10    $5E9E   UNKNOWN  $5E9E           ; Unknown 5xxx instruction
$B12    $0266   SYS      $266            ; System call to 266
$B14    $075B   SYS      $75B            ; System call to 75B
$B16    $9AB6   UNKNOWN  $9AB6           ; Unknown 9xxx instruction
$B18    $1AA7   JP       $AA7            ; Jump to AA7
$B1A    $D502   DRW      V5, V0, #2      ; Draw 2-byte sprite at V5, V0
$B1C    $70BE   ADD      V0, #BE         ; Add 190 to V0
$B1E    $3710   SE       V7, #10         ; Skip if V7 == 16
$B20    $3219   SE       V2, #19         ; Skip if V2 == 25
$B22    $9D53   UNKNOWN  $9D53           ; Unknown 9xxx instruction
$B24    $4246   SNE      V2, #46         ; Skip if V2 != 70
$B26    $93E8   UNKNOWN  $93E8           ; Unknown 9xxx instruction
$B28    $74CD   ADD      V4, #CD         ; Add 205 to V4
$B2A    $A59B   LD       I, $59B         ; Load 59B into I
$B2C    $9F80   SNE      VF, V8          ; Skip if VF != V8
$B2E    $C80E   RND      V8, #0E         ; V8 = random & 0E
$B30    $6A23   LD       VA, #23         ; Load 35 into VA
$B32    $257C   CALL     $57C            ; Call subroutine at 57C
$B34    $316D   SE       V1, #6D         ; Skip if V1 == 109
$B36    $25E3   CALL     $5E3            ; Call subroutine at 5E3
$B38    $3AF8   SE       VA, #F8         ; Skip if VA == 248
$B3A    $B523   JP       V0, $523        ; Jump to V0 + 523
$B3C    $260C   CALL     $60C            ; Call subroutine at 60C
$B3E    $E363   UNKNOWN  $E363           ; Unknown Exxx instruction
$B40    $B47C   JP       V0, $47C        ; Jump to V0 + 47C
$B42    $3011   SE       V0, #11         ; Skip if V0 == 17
$B44    $3010   SE       V0, #10         ; Skip if V0 == 16
$B46    $FE1C   UNKNOWN  FE1C            ; Unknown Fxxx instruction
$B48    $D3C1   DRW      V3, VC, #1      ; Draw 1-byte sprite at V3, VC
$B4A    $1F72   JP       $F72            ; Jump to F72
$B4C    $6631   LD       V6, #31         ; Load 49 into V6
$B4E    $8670   LD       V6, V7          ; V6 = V7
$B50    $D4B8   DRW      V4, VB, #8      ; Draw 8-byte sprite at V4, VB
$B52    $0DB8   SYS      $DB8            ; System call to DB8
$B54    $7161   ADD      V1, #61         ; Add 97 to V1
$B56    $9547   UNKNOWN  $9547           ; Unknown 9xxx instruction
$B58    $8DF5   SUB      VD, VF          ; VD -= VF, VF = !borrow
$B5A    $E7EA   UNKNOWN  $E7EA           ; Unknown Exxx instruction
$B5C    $E874   UNKNOWN  $E874           ; Unknown Exxx instruction
$B5E    $81D3   XOR      V1, VD          ; V1 ^= VD
$B60    $37CD   SE       V7, #CD         ; Skip if V7 == 205
$B62    $155C   JP       $55C            ; Jump to 55C
$B64    $9D4B   UNKNOWN  $9D4B           ; Unknown 9xxx instruction
$B66    $8C02   AND      VC, V0          ; VC &= V0
$B68    $FC05   UNKNOWN  FC05            ; Unknown Fxxx instruction
$B6A    $E4E6   UNKNOWN  $E4E6           ; Unknown Exxx instruction
$B6C    $BAFE   JP       V0, $AFE        ; Jump to V0 + AFE
$B6E    $A2DD   LD       I, $2DD         ; Load 2DD into I
$B70    $8437   SUBN     V4, V3          ; V4 = V3 - V4, VF = !borrow
$B72    $816A   UNKNOWN  816A            ; Unknown 8xxx instruction
$B74    $D9DD   DRW      V9, VD, #D      ; Draw 13-byte sprite at V9, VD
$B76    $EA82   UNKNOWN  $EA82           ; Unknown Exxx instruction
$B78    $DC2A   DRW      VC, V2, #A      ; Draw 10-byte sprite at VC, V2
$B7A    $8194   ADD      V1, V9          ; V1 += V9, VF = carry
$B7C    $7C07   ADD      VC, #07         ; Add 7 to VC
$B7E    $3FC3   SE       VF, #C3         ; Skip if VF == 195
$B80    $8E77   SUBN     VE, V7          ; VE = V7 - VE, VF = !borrow
$B82    $13E3   JP       $3E3            ; Jump to 3E3
$B84    $DA65   DRW      VA, V6, #5      ; Draw 5-byte sprite at VA, V6
$B86    $6D56   LD       VD, #56         ; Load 86 into VD
$B88    $0D28   SYS      $D28            ; System call to D28
$B8A    $0BA2   SYS      $BA2            ; System call to BA2
$B8C    $6B31   LD       VB, #31         ; Load 49 into VB
$B8E    $B152   JP       V0, $152        ; Jump to V0 + 152
$B90    $3D35   SE       VD, #35         ; Skip if VD == 53
$B92    $DFCC   DRW      VF, VC, #C      ; Draw 12-byte sprite at VF, VC
$B94    $CC78   RND      VC, #78         ; VC = random & 78
$B96    $57C2   UNKNOWN  $57C2           ; Unknown 5xxx instruction
$B98    $9924   UNKNOWN  $9924           ; Unknown 9xxx instruction
$B9A    $CBDE   RND      VB, #DE         ; VB = random & DE
$B9C    $00D5   SYS      $0D5            ; System call to 0D5
$B9E    $456E   SNE      V5, #6E         ; Skip if V5 != 110
$BA0    $D4D3   DRW      V4, VD, #3      ; Draw 3-byte sprite at V4, VD
$BA2    $B02D   JP       V0, $02D        ; Jump to V0 + 02D
$BA4    $5ADA   UNKNOWN  $5ADA           ; Unknown 5xxx instruction
$BA6    $CABF   RND      VA, #BF         ; VA = random & BF
$BA8    $D87C   DRW      V8, V7, #C      ; Draw 12-byte sprite at V8, V7
$BAA    $2F3D   CALL     $F3D            ; Call subroutine at F3D
$BAC    $E4D9   UNKNOWN  $E4D9           ; Unknown Exxx instruction
$BAE    $2B2B   CALL     $B2B            ; Call subroutine at B2B
$BB0    $5A23   UNKNOWN  $5A23           ; Unknown 5xxx instruction
$BB2    $6762   LD       V7, #62         ; Load 98 into V7
$BB4    $F574   UNKNOWN  F574            ; Unknown Fxxx instruction
$BB6    $45B8   SNE      V5, #B8         ; Skip if V5 != 184
$BB8    $D99F   DRW      V9, V9, #F      ; Draw 15-byte sprite at V9, V9
$BBA    $51CD   UNKNOWN  $51CD           ; Unknown 5xxx instruction
$BBC    $22A9   CALL     $2A9            ; Call subroutine at 2A9
$BBE    $B0C6   JP       V0, $0C6        ; Jump to V0 + 0C6
$BC0    $9FB2   UNKNOWN  $9FB2           ; Unknown 9xxx instruction
$BC2    $01DD   SYS      $1DD            ; System call to 1DD
$BC4    $9041   UNKNOWN  $9041           ; Unknown 9xxx instruction
$BC6    $B2E7   JP       V0, $2E7        ; Jump to V0 + 2E7
$BC8    $A2D0   LD       I, $2D0         ; Load 2D0 into I
$BCA    $E47B   UNKNOWN  $E47B           ; Unknown Exxx instruction
$BCC    $2A4A   CALL     $A4A            ; Call subroutine at A4A
$BCE    $A597   LD       I, $597         ; Load 597 into I
$BD0    $2B61   CALL     $B61            ; Call subroutine at B61
$BD2    $3F6F   SE       VF, #6F         ; Skip if VF == 111
$BD4    $E4C9   UNKNOWN  $E4C9           ; Unknown Exxx instruction
$BD6    $D400   DRW      V4, V0, #0      ; Draw 0-byte sprite at V4, V0
$BD8    $2B8B   CALL     $B8B            ; Call subroutine at B8B
$BDA    $43EC   SNE      V3, #EC         ; Skip if V3 != 236
$BDC    $8C7C   UNKNOWN  8C7C            ; Unknown 8xxx instruction
$BDE    $420D   SNE      V2, #0D         ; Skip if V2 != 13
$BE0    $3831   SE       V8, #31         ; Skip if V8 == 49
$BE2    $786E   ADD      V8, #6E         ; Add 110 to V8
$BE4    $B771   JP       V0, $771        ; Jump to V0 + 771
$BE6    $DA85   DRW      VA, V8, #5      ; Draw 5-byte sprite at VA, V8
$BE8    $A1A5   LD       I, $1A5         ; Load 1A5 into I
$BEA    $200C   CALL     $00C            ; Call subroutine at 00C
$BEC    $3CA0   SE       VC, #A0         ; Skip if VC == 160
$BEE    $0E9F   SYS      $E9F            ; System call to E9F
$BF0    $C8A4   RND      V8, #A4         ; V8 = random & A4
$BF2    $37EC   SE       V7, #EC         ; Skip if V7 == 236
$BF4    $1DEE   JP       $DEE            ; Jump to DEE
$BF6    $D62B   DRW      V6, V2, #B      ; Draw 11-byte sprite at V6, V2
$BF8    $064D   SYS      $64D            ; System call to 64D
$BFA    $E228   UNKNOWN  $E228           ; Unknown Exxx instruction
$BFC    $1128   JP       $128            ; Jump to 128
$BFE    $3DE1   SE       VD, #E1         ; Skip if VD == 225
$C00    $375F   SE       V7, #5F         ; Skip if V7 == 95
$C02    $567B   UNKNOWN  $567B           ; Unknown 5xxx instruction
$C04    $165E   JP       $65E            ; Jump to 65E
$C06    $3827   SE       V8, #27         ; Skip if V8 == 39
$C08    $4CAC   SNE      VC, #AC         ; Skip if VC != 172
$C0A    $F7C5   UNKNOWN  F7C5            ; Unknown Fxxx instruction
$C0C    $6B25   LD       VB, #25         ; Load 37 into VB
$C0E    $A965   LD       I, $965         ; Load 965 into I
$C10    $9327   UNKNOWN  $9327           ; Unknown 9xxx instruction
$C12    $307D   SE       V0, #7D         ; Skip if V0 == 125
$C14    $3BFE   SE       VB, #FE         ; Skip if VB == 254
$C16    $D912   DRW      V9, V1, #2      ; Draw 2-byte sprite at V9, V1
$C18    $69BC   LD       V9, #BC         ; Load 188 into V9
$C1A    $947E   UNKNOWN  $947E           ; Unknown 9xxx instruction
$C1C    $174E   JP       $74E            ; Jump to 74E
$C1E    $2101   CALL     $101            ; Call subroutine at 101
$C20    $F994   UNKNOWN  F994            ; Unknown Fxxx instruction
$C22    $F96A   UNKNOWN  F96A            ; Unknown Fxxx instruction
$C24    $9FF5   UNKNOWN  $9FF5           ; Unknown 9xxx instruction
$C26    $05ED   SYS      $5ED            ; System call to 5ED
$C28    $F0C2   UNKNOWN  F0C2            ; Unknown Fxxx instruction
$C2A    $A249   LD       I, $249         ; Load 249 into I
$C2C    $D868   DRW      V8, V6, #8      ; Draw 8-byte sprite at V8, V6
$C2E    $0072   SYS      $072            ; System call to 072
$C30    $762B   ADD      V6, #2B         ; Add 43 to V6
$C32    $C887   RND      V8, #87         ; V8 = random & 87
$C34    $5D5E   UNKNOWN  $5D5E           ; Unknown 5xxx instruction
$C36    $8880   LD       V8, V8          ; V8 = V8
$C38    $848D   UNKNOWN  848D            ; Unknown 8xxx instruction
$C3A    $D104   DRW      V1, V0, #4      ; Draw 4-byte sprite at V1, V0
$C3C    $8806   SHR      V8              ; V8 >>= 1, VF = LSB
$C3E    $1A28   JP       $A28            ; Jump to A28
$C40    $8C44   ADD      VC, V4          ; VC += V4, VF = carry
$C42    $CCC2   RND      VC, #C2         ; VC = random & C2
$C44    $00D8   SYS      $0D8            ; System call to 0D8
$C46    $003A   SYS      $03A            ; System call to 03A
$C48    $5A72   UNKNOWN  $5A72           ; Unknown 5xxx instruction
$C4A    $F626   UNKNOWN  F626            ; Unknown Fxxx instruction
$C4C    $1E68   JP       $E68            ; Jump to E68
$C4E    $E726   UNKNOWN  $E726           ; Unknown Exxx instruction
$C50    $B8D8   JP       V0, $8D8        ; Jump to V0 + 8D8
$C52    $9A3A   UNKNOWN  $9A3A           ; Unknown 9xxx instruction
$C54    $8ABC   UNKNOWN  8ABC            ; Unknown 8xxx instruction
$C56    $7190   ADD      V1, #90         ; Add 144 to V1
$C58    $DD44   DRW      VD, V4, #4      ; Draw 4-byte sprite at VD, V4
$C5A    $E7B2   UNKNOWN  $E7B2           ; Unknown Exxx instruction
$C5C    $ED89   UNKNOWN  $ED89           ; Unknown Exxx instruction
$C5E    $F359   UNKNOWN  F359            ; Unknown Fxxx instruction
$C60    $EC32   UNKNOWN  $EC32           ; Unknown Exxx instruction
$C62    $5C09   UNKNOWN  $5C09           ; Unknown 5xxx instruction
$C64    $27D1   CALL     $7D1            ; Call subroutine at 7D1
$C66    $3018   SE       V0, #18         ; Skip if V0 == 24
$C68    $438E   SNE      V3, #8E         ; Skip if V3 != 142
$C6A    $3E78   SE       VE, #78         ; Skip if VE == 120
$C6C    $6C18   LD       VC, #18         ; Load 24 into VC
$C6E    $8302   AND      V3, V0          ; V3 &= V0
$C70    $E9F2   UNKNOWN  $E9F2           ; Unknown Exxx instruction
$C72    $39C3   SE       V9, #C3         ; Skip if V9 == 195
$C74    $BEDB   JP       V0, $EDB        ; Jump to V0 + EDB
$C76    $3B75   SE       VB, #75         ; Skip if VB == 117
$C78    $DADA   DRW      VA, VD, #A      ; Draw 10-byte sprite at VA, VD
$C7A    $939D   UNKNOWN  $939D           ; Unknown 9xxx instruction
$C7C    $4FFD   SNE      VF, #FD         ; Skip if VF != 253
$C7E    $5699   UNKNOWN  $5699           ; Unknown 5xxx instruction
$C80    $5C8E   UNKNOWN  $5C8E           ; Unknown 5xxx instruction
$C82    $DC53   DRW      VC, V5, #3      ; Draw 3-byte sprite at VC, V5
$C84    $7B95   ADD      VB, #95         ; Add 149 to VB
$C86    $1FA9   JP       $FA9            ; Jump to FA9
$C88    $F5FA   UNKNOWN  F5FA            ; Unknown Fxxx instruction
$C8A    $C371   RND      V3, #71         ; V3 = random & 71
$C8C    $680D   LD       V8, #0D         ; Load 13 into V8
$C8E    $E6FA   UNKNOWN  $E6FA           ; Unknown Exxx instruction
$C90    $50E7   UNKNOWN  $50E7           ; Unknown 5xxx instruction
$C92    $05B1   SYS      $5B1            ; System call to 5B1
$C94    $B17C   JP       V0, $17C        ; Jump to V0 + 17C
$C96    $7098   ADD      V0, #98         ; Add 152 to V0
$C98    $413C   SNE      V1, #3C         ; Skip if V1 != 60
$C9A    $DB9D   DRW      VB, V9, #D      ; Draw 13-byte sprite at VB, V9
$C9C    $9D47   UNKNOWN  $9D47           ; Unknown 9xxx instruction
$C9E    $E4BE   UNKNOWN  $E4BE           ; Unknown Exxx instruction
$CA0    $BD5C   JP       V0, $D5C        ; Jump to V0 + D5C
$CA2    $86AD   UNKNOWN  86AD            ; Unknown 8xxx instruction
$CA4    $0C10   SYS      $C10            ; System call to C10
$CA6    $1916   JP       $916            ; Jump to 916
$CA8    $7402   ADD      V4, #02         ; Add 2 to V4
$CAA    $FABD   UNKNOWN  FABD            ; Unknown Fxxx instruction
$CAC    $B8B2   JP       V0, $8B2        ; Jump to V0 + 8B2
$CAE    $BFE9   JP       V0, $FE9        ; Jump to V0 + FE9
$CB0    $5CF4   UNKNOWN  $5CF4           ; Unknown 5xxx instruction
$CB2    $0910   SYS      $910            ; System call to 910
$CB4    $4D8A   SNE      VD, #8A         ; Skip if VD != 138
$CB6    $1872   JP       $872            ; Jump to 872
$CB8    $7201   ADD      V2, #01         ; Add 1 to V2
$CBA    $722F   ADD      V2, #2F         ; Add 47 to V2
$CBC    $E151   UNKNOWN  $E151           ; Unknown Exxx instruction
$CBE    $F85A   UNKNOWN  F85A            ; Unknown Fxxx instruction
$CC0    $AEA8   LD       I, $EA8         ; Load EA8 into I
$CC2    $9ADA   UNKNOWN  $9ADA           ; Unknown 9xxx instruction
$CC4    $37F8   SE       V7, #F8         ; Skip if V7 == 248
$CC6    $C030   RND      V0, #30         ; V0 = random & 30
$CC8    $4920   SNE      V9, #20         ; Skip if V9 != 32
$CCA    $3B27   SE       VB, #27         ; Skip if VB == 39
$CCC    $3A32   SE       VA, #32         ; Skip if VA == 50
$CCE    $412D   SNE      V1, #2D         ; Skip if V1 != 45
$CD0    $EB3E   UNKNOWN  $EB3E           ; Unknown Exxx instruction
$CD2    $BEC0   JP       V0, $EC0        ; Jump to V0 + EC0
$CD4    $D14E   DRW      V1, V4, #E      ; Draw 14-byte sprite at V1, V4
$CD6    $451F   SNE      V5, #1F         ; Skip if V5 != 31
$CD8    $124C   JP       $24C            ; Jump to 24C
$CDA    $59C2   UNKNOWN  $59C2           ; Unknown 5xxx instruction
$CDC    $EBA2   UNKNOWN  $EBA2           ; Unknown Exxx instruction
$CDE    $A7A4   LD       I, $7A4         ; Load 7A4 into I
$CE0    $A918   LD       I, $918         ; Load 918 into I
$CE2    $CB07   RND      VB, #07         ; VB = random & 07
$CE4    $F4A6   UNKNOWN  F4A6            ; Unknown Fxxx instruction
$CE6    $20F9   CALL     $0F9            ; Call subroutine at 0F9
$CE8    $A8EE   LD       I, $8EE         ; Load 8EE into I
$CEA    $049F   SYS      $49F            ; System call to 49F
$CEC    $2957   CALL     $957            ; Call subroutine at 957
$CEE    $40FC   SNE      V0, #FC         ; Skip if V0 != 252
$CF0    $C583   RND      V5, #83         ; V5 = random & 83
$CF2    $CA2A   RND      VA, #2A         ; VA = random & 2A
$CF4    $EF83   UNKNOWN  $EF83           ; Unknown Exxx instruction
$CF6    $076F   SYS      $76F            ; System call to 76F
$CF8    $FAD0   UNKNOWN  FAD0            ; Unknown Fxxx instruction
$CFA    $94F4   UNKNOWN  $94F4           ; Unknown 9xxx instruction
$CFC    $01D7   SYS      $1D7            ; System call to 1D7
$CFE    $6AC9   LD       VA, #C9         ; Load 201 into VA
$D00    $D425   DRW      V4, V2, #5      ; Draw 5-byte sprite at V4, V2
$D02    $2429   CALL     $429            ; Call subroutine at 429
$D04    $219A   CALL     $19A            ; Call subroutine at 19A
$D06    $D13D   DRW      V1, V3, #D      ; Draw 13-byte sprite at V1, V3
$D08    $A957   LD       I, $957         ; Load 957 into I
$D0A    $868B   UNKNOWN  868B            ; Unknown 8xxx instruction
$D0C    $EC9E   SKP      VC              ; Skip if key VC pressed
$D0E    $ABE1   LD       I, $BE1         ; Load BE1 into I
$D10    $44F1   SNE      V4, #F1         ; Skip if V4 != 241
$D12    $2676   CALL     $676            ; Call subroutine at 676
$D14    $FC4D   UNKNOWN  FC4D            ; Unknown Fxxx instruction
$D16    $75C0   ADD      V5, #C0         ; Add 192 to V5
$D18    $9FAD   UNKNOWN  $9FAD           ; Unknown 9xxx instruction
$D1A    $ADDD   LD       I, $DDD         ; Load DDD into I
$D1C    $8326   SHR      V3              ; V3 >>= 1, VF = LSB
$D1E    $473F   SNE      V7, #3F         ; Skip if V7 != 63
$D20    $EF54   UNKNOWN  $EF54           ; Unknown Exxx instruction
$D22    $A3DA   LD       I, $3DA         ; Load 3DA into I
$D24    $BA84   JP       V0, $A84        ; Jump to V0 + A84
$D26    $6F7B   LD       VF, #7B         ; Load 123 into VF
$D28    $7933   ADD      V9, #33         ; Add 51 to V9
$D2A    $03A5   SYS      $3A5            ; System call to 3A5
$D2C    $6A6E   LD       VA, #6E         ; Load 110 into VA
$D2E    $3687   SE       V6, #87         ; Skip if V6 == 135
$D30    $B3D6   JP       V0, $3D6        ; Jump to V0 + 3D6
$D32    $6B82   LD       VB, #82         ; Load 130 into VB
$D34    $3392   SE       V3, #92         ; Skip if V3 == 146
$D36    $660E   LD       V6, #0E         ; Load 14 into V6
$D38    $3709   SE       V7, #09         ; Skip if V7 == 9
$D3A    $AAB7   LD       I, $AB7         ; Load AB7 into I
$D3C    $54E2   UNKNOWN  $54E2           ; Unknown 5xxx instruction
$D3E    $1C76   JP       $C76            ; Jump to C76
$D40    $C1CF   RND      V1, #CF         ; V1 = random & CF
$D42    $6726   LD       V7, #26         ; Load 38 into V7
$D44    $DEFF   DRW      VE, VF, #F      ; Draw 15-byte sprite at VE, VF
$D46    $CCA4   RND      VC, #A4         ; VC = random & A4
$D48    $8DF0   LD       VD, VF          ; VD = VF
$D4A    $2D45   CALL     $D45            ; Call subroutine at D45
$D4C    $8CBA   UNKNOWN  8CBA            ; Unknown 8xxx instruction
$D4E    $B0D7   JP       V0, $0D7        ; Jump to V0 + 0D7
$D50    $C359   RND      V3, #59         ; V3 = random & 59
$D52    $40D4   SNE      V0, #D4         ; Skip if V0 != 212
$D54    $D316   DRW      V3, V1, #6      ; Draw 6-byte sprite at V3, V1
$D56    $2195   CALL     $195            ; Call subroutine at 195
$D58    $3969   SE       V9, #69         ; Skip if V9 == 105
$D5A    $E799   UNKNOWN  $E799           ; Unknown Exxx instruction
$D5C    $9491   UNKNOWN  $9491           ; Unknown 9xxx instruction
$D5E    $91C8   UNKNOWN  $91C8           ; Unknown 9xxx instruction
$D60    $3935   SE       V9, #35         ; Skip if V9 == 53
$D62    $343E   SE       V4, #3E         ; Skip if V4 == 62
$D64    $F4C5   UNKNOWN  F4C5            ; Unknown Fxxx instruction
$D66    $A652   LD       I, $652         ; Load 652 into I
$D68    $2253   CALL     $253            ; Call subroutine at 253
$D6A    $B8D7   JP       V0, $8D7        ; Jump to V0 + 8D7
$D6C    $0D89   SYS      $D89            ; System call to D89
$D6E    $CF88   RND      VF, #88         ; VF = random & 88
$D70    $6453   LD       V4, #53         ; Load 83 into V4
$D72    $DECB   DRW      VE, VC, #B      ; Draw 11-byte sprite at VE, VC
$D74    $BC74   JP       V0, $C74        ; Jump to V0 + C74
$D76    $1C4F   JP       $C4F            ; Jump to C4F
$D78    $C06C   RND      V0, #6C         ; V0 = random & 6C
$D7A    $F8F2   UNKNOWN  F8F2            ; Unknown Fxxx instruction
$D7C    $6BB8   LD       VB, #B8         ; Load 184 into VB
$D7E    $47E4   SNE      V7, #E4         ; Skip if V7 != 228
$D80    $FEB9   UNKNOWN  FEB9            ; Unknown Fxxx instruction
$D82    $C359   RND      V3, #59         ; V3 = random & 59
$D84    $2572   CALL     $572            ; Call subroutine at 572
$D86    $CD23   RND      VD, #23         ; VD = random & 23
$D88    $3681   SE       V6, #81         ; Skip if V6 == 129
$D8A    $135B   JP       $35B            ; Jump to 35B
$D8C    $299D   CALL     $99D            ; Call subroutine at 99D
$D8E    $1342   JP       $342            ; Jump to 342
$D90    $D702   DRW      V7, V0, #2      ; Draw 2-byte sprite at V7, V0
$D92    $C6D5   RND      V6, #D5         ; V6 = random & D5
$D94    $26AD   CALL     $6AD            ; Call subroutine at 6AD
$D96    $E46D   UNKNOWN  $E46D           ; Unknown Exxx instruction
$D98    $EECE   UNKNOWN  $EECE           ; Unknown Exxx instruction
$D9A    $9CAC   UNKNOWN  $9CAC           ; Unknown 9xxx instruction
$D9C    $D52F   DRW      V5, V2, #F      ; Draw 15-byte sprite at V5, V2
$D9E    $1643   JP       $643            ; Jump to 643
$DA0    $8A1A   UNKNOWN  8A1A            ; Unknown 8xxx instruction
$DA2    $3C72   SE       VC, #72         ; Skip if VC == 114
$DA4    $3040   SE       V0, #40         ; Skip if V0 == 64
$DA6    $B6EC   JP       V0, $6EC        ; Jump to V0 + 6EC
$DA8    $175C   JP       $75C            ; Jump to 75C
$DAA    $4D74   SNE      VD, #74         ; Skip if VD != 116
$DAC    $8501   OR       V5, V0          ; V5 |= V0
$DAE    $639B   LD       V3, #9B         ; Load 155 into V3
$DB0    $A4CC   LD       I, $4CC         ; Load 4CC into I
$DB2    $2633   CALL     $633            ; Call subroutine at 633
$DB4    $62D6   LD       V2, #D6         ; Load 214 into V2
$DB6    $9803   UNKNOWN  $9803           ; Unknown 9xxx instruction
$DB8    $28B2   CALL     $8B2            ; Call subroutine at 8B2
$DBA    $0DAD   SYS      $DAD            ; System call to DAD
$DBC    $E424   UNKNOWN  $E424           ; Unknown Exxx instruction
$DBE    $0CBE   SYS      $CBE            ; System call to CBE
$DC0    $7CE1   ADD      VC, #E1         ; Add 225 to VC
$DC2    $752D   ADD      V5, #2D         ; Add 45 to V5
$DC4    $4427   SNE      V4, #27         ; Skip if V4 != 39
$DC6    $6004   LD       V0, #04         ; Load 4 into V0
$DC8    $1592   JP       $592            ; Jump to 592
$DCA    $3B5C   SE       VB, #5C         ; Skip if VB == 92
$DCC    $0290   SYS      $290            ; System call to 290
$DCE    $1B03   JP       $B03            ; Jump to B03
$DD0    $C825   RND      V8, #25         ; V8 = random & 25
$DD2    $EEDB   UNKNOWN  $EEDB           ; Unknown Exxx instruction
$DD4    $E663   UNKNOWN  $E663           ; Unknown Exxx instruction
$DD6    $C976   RND      V9, #76         ; V9 = random & 76
$DD8    $2588   CALL     $588            ; Call subroutine at 588
$DDA    $8FDD   UNKNOWN  8FDD            ; Unknown 8xxx instruction
$DDC    $54CD   UNKNOWN  $54CD           ; Unknown 5xxx instruction
$DDE    $5968   UNKNOWN  $5968           ; Unknown 5xxx instruction
$DE0    $9C06   UNKNOWN  $9C06           ; Unknown 9xxx instruction
$DE2    $410C   SNE      V1, #0C         ; Skip if V1 != 12
$DE4    $897D   UNKNOWN  897D            ; Unknown 8xxx instruction
$DE6    $D71E   DRW      V7, V1, #E      ; Draw 14-byte sprite at V7, V1
$DE8    $986F   UNKNOWN  $986F           ; Unknown 9xxx instruction
$DEA    $EF95   UNKNOWN  $EF95           ; Unknown Exxx instruction
$DEC    $4BD0   SNE      VB, #D0         ; Skip if VB != 208
$DEE    $4DC8   SNE      VD, #C8         ; Skip if VD != 200
$DF0    $D3BC   DRW      V3, VB, #C      ; Draw 12-byte sprite at V3, VB
$DF2    $A09A   LD       I, $09A         ; Load 09A into I
$DF4    $2907   CALL     $907            ; Call subroutine at 907
$DF6    $A87E   LD       I, $87E         ; Load 87E into I
$DF8    $DF6E   DRW      VF, V6, #E      ; Draw 14-byte sprite at VF, V6
$DFA    $DBB5   DRW      VB, VB, #5      ; Draw 5-byte sprite at VB, VB
$DFC    $23B0   CALL     $3B0            ; Call subroutine at 3B0
$DFE    $E251   UNKNOWN  $E251           ; Unknown Exxx instruction
$E00    $0813   SYS      $813            ; System call to 813
$E02    $D1B2   DRW      V1, VB, #2      ; Draw 2-byte sprite at V1, VB
$E04    $8827   SUBN     V8, V2          ; V8 = V2 - V8, VF = !borrow
$E06    $065B   SYS      $65B            ; System call to 65B
$E08    $B05F   JP       V0, $05F        ; Jump to V0 + 05F
$E0A    $C9CE   RND      V9, #CE         ; V9 = random & CE
$E0C    $9A55   UNKNOWN  $9A55           ; Unknown 9xxx instruction
$E0E    $6AE9   LD       VA, #E9         ; Load 233 into VA
$E10    $35AE   SE       V5, #AE         ; Skip if V5 == 174
$E12    $EC96   UNKNOWN  $EC96           ; Unknown Exxx instruction
$E14    $2497   CALL     $497            ; Call subroutine at 497
$E16    $75F6   ADD      V5, #F6         ; Add 246 to V5
$E18    $4377   SNE      V3, #77         ; Skip if V3 != 119
$E1A    $91C8   UNKNOWN  $91C8           ; Unknown 9xxx instruction
$E1C    $8950   LD       V9, V5          ; V9 = V5
$E1E    $04FB   SYS      $4FB            ; System call to 4FB
$E20    $8EC8   UNKNOWN  8EC8            ; Unknown 8xxx instruction
$E22    $1AD6   JP       $AD6            ; Jump to AD6
$E24    $3BB3   SE       VB, #B3         ; Skip if VB == 179
$E26    $0AD9   SYS      $AD9            ; System call to AD9
$E28    $089A   SYS      $89A            ; System call to 89A
$E2A    $8AEA   UNKNOWN  8AEA            ; Unknown 8xxx instruction
$E2C    $8820   LD       V8, V2          ; V8 = V2
$E2E    $EF22   UNKNOWN  $EF22           ; Unknown Exxx instruction
$E30    $5A80   SE       VA, V8          ; Skip if VA == V8
$E32    $0DB6   SYS      $DB6            ; System call to DB6
$E34    $5276   UNKNOWN  $5276           ; Unknown 5xxx instruction
$E36    $DD67   DRW      VD, V6, #7      ; Draw 7-byte sprite at VD, V6
$E38    $C548   RND      V5, #48         ; V5 = random & 48
$E3A    $DD76   DRW      VD, V7, #6      ; Draw 6-byte sprite at VD, V7
$E3C    $F6A7   UNKNOWN  F6A7            ; Unknown Fxxx instruction
$E3E    $8C6A   UNKNOWN  8C6A            ; Unknown 8xxx instruction
$E40    $D181   DRW      V1, V8, #1      ; Draw 1-byte sprite at V1, V8
$E42    $EC6B   UNKNOWN  $EC6B           ; Unknown Exxx instruction
$E44    $57D3   UNKNOWN  $57D3           ; Unknown 5xxx instruction
$E46    $7DC2   ADD      VD, #C2         ; Add 194 to VD
$E48    $35D6   SE       V5, #D6         ; Skip if V5 == 214
$E4A    $C669   RND      V6, #69         ; V6 = random & 69
$E4C    $091C   SYS      $91C            ; System call to 91C
$E4E    $9968   UNKNOWN  $9968           ; Unknown 9xxx instruction
$E50    $928D   UNKNOWN  $928D           ; Unknown 9xxx instruction
$E52    $F51D   UNKNOWN  F51D            ; Unknown Fxxx instruction
$E54    $3963   SE       V9, #63         ; Skip if V9 == 99
$E56    $327E   SE       V2, #7E         ; Skip if V2 == 126
$E58    $CBC3   RND      VB, #C3         ; VB = random & C3
$E5A    $F0FF   UNKNOWN  F0FF            ; Unknown Fxxx instruction
$E5C    $1025   JP       $025            ; Jump to 025
$E5E    $44BF   SNE      V4, #BF         ; Skip if V4 != 191
$E60    $210C   CALL     $10C            ; Call subroutine at 10C
$E62    $576B   UNKNOWN  $576B           ; Unknown 5xxx instruction
$E64    $C249   RND      V2, #49         ; V2 = random & 49
$E66    $944A   UNKNOWN  $944A           ; Unknown 9xxx instruction
$E68    $027C   SYS      $27C            ; System call to 27C
$E6A    $0064   SYS      $064            ; System call to 064
$E6C    $C785   RND      V7, #85         ; V7 = random & 85
$E6E    $6CD9   LD       VC, #D9         ; Load 217 into VC
$E70    $C7B9   RND      V7, #B9         ; V7 = random & B9
$E72    $6A06   LD       VA, #06         ; Load 6 into VA
$E74    $562D   UNKNOWN  $562D           ; Unknown 5xxx instruction
$E76    $4EDE   SNE      VE, #DE         ; Skip if VE != 222
$E78    $E474   UNKNOWN  $E474           ; Unknown Exxx instruction
$E7A    $F1F6   UNKNOWN  F1F6            ; Unknown Fxxx instruction
$E7C    $361D   SE       V6, #1D         ; Skip if V6 == 29
$E7E    $6342   LD       V3, #42         ; Load 66 into V3
$E80    $C2D5   RND      V2, #D5         ; V2 = random & D5
$E82    $0BA9   SYS      $BA9            ; System call to BA9
$E84    $BD1C   JP       V0, $D1C        ; Jump to V0 + D1C
$E86    $2320   CALL     $320            ; Call subroutine at 320
$E88    $C944   RND      V9, #44         ; V9 = random & 44
$E8A    $D5E9   DRW      V5, VE, #9      ; Draw 9-byte sprite at V5, VE
$E8C    $027E   SYS      $27E            ; System call to 27E
$E8E    $7D09   ADD      VD, #09         ; Add 9 to VD
$E90    $42C9   SNE      V2, #C9         ; Skip if V2 != 201
$E92    $6DE8   LD       VD, #E8         ; Load 232 into VD
$E94    $B921   JP       V0, $921        ; Jump to V0 + 921
$E96    $6A40   LD       VA, #40         ; Load 64 into VA
$E98    $C10C   RND      V1, #0C         ; V1 = random & 0C
$E9A    $64A1   LD       V4, #A1         ; Load 161 into V4
$E9C    $809C   UNKNOWN  809C            ; Unknown 8xxx instruction
$E9E    $C48B   RND      V4, #8B         ; V4 = random & 8B
$EA0    $5152   UNKNOWN  $5152           ; Unknown 5xxx instruction
$EA2    $A493   LD       I, $493         ; Load 493 into I
$EA4    $7848   ADD      V8, #48         ; Add 72 to V8
$EA6    $A7F0   LD       I, $7F0         ; Load 7F0 into I
$EA8    $C30D   RND      V3, #0D         ; V3 = random & 0D
$EAA    $1541   JP       $541            ; Jump to 541
$EAC    $0774   SYS      $774            ; System call to 774
$EAE    $5080   SE       V0, V8          ; Skip if V0 == V8
$EB0    $2D6E   CALL     $D6E            ; Call subroutine at D6E
$EB2    $2A56   CALL     $A56            ; Call subroutine at A56
$EB4    $CEB3   RND      VE, #B3         ; VE = random & B3
$EB6    $BB4D   JP       V0, $B4D        ; Jump to V0 + B4D
$EB8    $542C   UNKNOWN  $542C           ; Unknown 5xxx instruction
$EBA    $BE13   JP       V0, $E13        ; Jump to V0 + E13
$EBC    $956B   UNKNOWN  $956B           ; Unknown 9xxx instruction
$EBE    $335E   SE       V3, #5E         ; Skip if V3 == 94
$EC0    $5915   UNKNOWN  $5915           ; Unknown 5xxx instruction
$EC2    $1663   JP       $663            ; Jump to 663
$EC4    $A2E5   LD       I, $2E5         ; Load 2E5 into I
$EC6    $F59E   UNKNOWN  F59E            ; Unknown Fxxx instruction
$EC8    $F667   UNKNOWN  F667            ; Unknown Fxxx instruction
$ECA    $5938   UNKNOWN  $5938           ; Unknown 5xxx instruction
$ECC    $83B4   ADD      V3, VB          ; V3 += VB, VF = carry
$ECE    $B97B   JP       V0, $97B        ; Jump to V0 + 97B
$ED0    $E91B   UNKNOWN  $E91B           ; Unknown Exxx instruction
$ED2    $0E5B   SYS      $E5B            ; System call to E5B
$ED4    $33D3   SE       V3, #D3         ; Skip if V3 == 211
$ED6    $3FD7   SE       VF, #D7         ; Skip if VF == 215
$ED8    $4E79   SNE      VE, #79         ; Skip if VE != 121
$EDA    $DCBF   DRW      VC, VB, #F      ; Draw 15-byte sprite at VC, VB
$EDC    $2482   CALL     $482            ; Call subroutine at 482
$EDE    $3EAC   SE       VE, #AC         ; Skip if VE == 172
$EE0    $F0E5   UNKNOWN  F0E5            ; Unknown Fxxx instruction
$EE2    $F050   UNKNOWN  F050            ; Unknown Fxxx instruction
$EE4    $CB91   RND      VB, #91         ; VB = random & 91
$EE6    $DE90   DRW      VE, V9, #0      ; Draw 0-byte sprite at VE, V9
$EE8    $69F0   LD       V9, #F0         ; Load 240 into V9
$EEA    $A48E   LD       I, $48E         ; Load 48E into I
$EEC    $3355   SE       V3, #55         ; Skip if V3 == 85
$EEE    $C4CE   RND      V4, #CE         ; V4 = random & CE
$EF0    $B0DA   JP       V0, $0DA        ; Jump to V0 + 0DA
$EF2    $A38A   LD       I, $38A         ; Load 38A into I
$EF4    $A8DF   LD       I, $8DF         ; Load 8DF into I
$EF6    $CA27   RND      VA, #27         ; VA = random & 27
$EF8    $94F0   SNE      V4, VF          ; Skip if V4 != VF
$EFA    $8902   AND      V9, V0          ; V9 &= V0
$EFC    $D1ED   DRW      V1, VE, #D      ; Draw 13-byte sprite at V1, VE
$EFE    $D158   DRW      V1, V5, #8      ; Draw 8-byte sprite at V1, V5
$F00    $72DA   ADD      V2, #DA         ; Add 218 to V2
$F02    $E581   UNKNOWN  $E581           ; Unknown Exxx instruction
$F04    $30C5   SE       V0, #C5         ; Skip if V0 == 197
$F06    $56FB   UNKNOWN  $56FB           ; Unknown 5xxx instruction
$F08    $27A3   CALL     $7A3            ; Call subroutine at 7A3
$F0A    $4A12   SNE      VA, #12         ; Skip if VA != 18
$F0C    $15E3   JP       $5E3            ; Jump to 5E3
$F0E    $44EF   SNE      V4, #EF         ; Skip if V4 != 239
$F10    $22FB   CALL     $2FB            ; Call subroutine at 2FB
$F12    $CA41   RND      VA, #41         ; VA = random & 41
$F14    $8DEC   UNKNOWN  8DEC            ; Unknown 8xxx instruction
$F16    $F291   UNKNOWN  F291            ; Unknown Fxxx instruction
$F18    $5588   UNKNOWN  $5588           ; Unknown 5xxx instruction
$F1A    $066B   SYS      $66B            ; System call to 66B
$F1C    $C5E2   RND      V5, #E2         ; V5 = random & E2
$F1E    $4545   SNE      V5, #45         ; Skip if V5 != 69
$F20    $4EF8   SNE      VE, #F8         ; Skip if VE != 248
$F22    $1945   JP       $945            ; Jump to 945
$F24    $92A2   UNKNOWN  $92A2           ; Unknown 9xxx instruction
$F26    $2AA0   CALL     $AA0            ; Call subroutine at AA0
$F28    $158D   JP       $58D            ; Jump to 58D
$F2A    $F3AD   UNKNOWN  F3AD            ; Unknown Fxxx instruction
$F2C    $3D4D   SE       VD, #4D         ; Skip if VD == 77
$F2E    $BCE4   JP       V0, $CE4        ; Jump to V0 + CE4
$F30    $EE8B   UNKNOWN  $EE8B           ; Unknown Exxx instruction
$F32    $3E65   SE       VE, #65         ; Skip if VE == 101
$F34    $0BD2   SYS      $BD2            ; System call to BD2
$F36    $CB19   RND      VB, #19         ; VB = random & 19
$F38    $D071   DRW      V0, V7, #1      ; Draw 1-byte sprite at V0, V7
$F3A    $90AC   UNKNOWN  $90AC           ; Unknown 9xxx instruction
$F3C    $AE5E   LD       I, $E5E         ; Load E5E into I
$F3E    $D27C   DRW      V2, V7, #C      ; Draw 12-byte sprite at V2, V7
$F40    $BA19   JP       V0, $A19        ; Jump to V0 + A19
$F42    $ED18   UNKNOWN  $ED18           ; Unknown Exxx instruction
$F44    $DB37   DRW      VB, V3, #7      ; Draw 7-byte sprite at VB, V3
$F46    $35BE   SE       V5, #BE         ; Skip if V5 == 190
$F48    $04CF   SYS      $4CF            ; System call to 4CF
$F4A    $414D   SNE      V1, #4D         ; Skip if V1 != 77
$F4C    $C79E   RND      V7, #9E         ; V7 = random & 9E
$F4E    $E054   UNKNOWN  $E054           ; Unknown Exxx instruction
$F50    $F460   UNKNOWN  F460            ; Unknown Fxxx instruction
$F52    $E7FB   UNKNOWN  $E7FB           ; Unknown Exxx instruction
$F54    $9232   UNKNOWN  $9232           ; Unknown 9xxx instruction
$F56    $35C1   SE       V5, #C1         ; Skip if V5 == 193
$F58    $DAE1   DRW      VA, VE, #1      ; Draw 1-byte sprite at VA, VE
$F5A    $3A67   SE       VA, #67         ; Skip if VA == 103
$F5C    $F461   UNKNOWN  F461            ; Unknown Fxxx instruction
$F5E    $8717   SUBN     V7, V1          ; V7 = V1 - V7, VF = !borrow
$F60    $8CFE   SHL      VC              ; VC <<= 1, VF = MSB
$F62    $516F   UNKNOWN  $516F           ; Unknown 5xxx instruction
$F64    $AD59   LD       I, $D59         ; Load D59 into I
$F66    $0826   SYS      $826            ; System call to 826
$F68    $D36E   DRW      V3, V6, #E      ; Draw 14-byte sprite at V3, V6
$F6A    $EBE5   UNKNOWN  $EBE5           ; Unknown Exxx instruction
$F6C    $8054   ADD      V0, V5          ; V0 += V5, VF = carry
$F6E    $5486   UNKNOWN  $5486           ; Unknown 5xxx instruction
$F70    $C19C   RND      V1, #9C         ; V1 = random & 9C
$F72    $A7CC   LD       I, $7CC         ; Load 7CC into I
$F74    $FDFF   UNKNOWN  FDFF            ; Unknown Fxxx instruction
$F76    $5FB1   UNKNOWN  $5FB1           ; Unknown 5xxx instruction
$F78    $D338   DRW      V3, V3, #8      ; Draw 8-byte sprite at V3, V3
$F7A    $2C96   CALL     $C96            ; Call subroutine at C96
$F7C    $77F1   ADD      V7, #F1         ; Add 241 to V7
$F7E    $A9D7   LD       I, $9D7         ; Load 9D7 into I
$F80    $4450   SNE      V4, #50         ; Skip if V4 != 80
$F82    $5F21   UNKNOWN  $5F21           ; Unknown 5xxx instruction
$F84    $CEC6   RND      VE, #C6         ; VE = random & C6
$F86    $D7CE   DRW      V7, VC, #E      ; Draw 14-byte sprite at V7, VC
$F88    $D6F7   DRW      V6, VF, #7      ; Draw 7-byte sprite at V6, VF
$F8A    $78FE   ADD      V8, #FE         ; Add 254 to V8
$F8C    $8FA9   UNKNOWN  8FA9            ; Unknown 8xxx instruction
$F8E    $D737   DRW      V7, V3, #7      ; Draw 7-byte sprite at V7, V3
$F90    $C319   RND      V3, #19         ; V3 = random & 19
$F92    $D7CE   DRW      V7, VC, #E      ; Draw 14-byte sprite at V7, VC
$F94    $DD01   DRW      VD, V0, #1      ; Draw 1-byte sprite at VD, V0
$F96    $6F90   LD       VF, #90         ; Load 144 into VF
$F98    $9B4C   UNKNOWN  $9B4C           ; Unknown 9xxx instruction
$F9A    $5BD9   UNKNOWN  $5BD9           ; Unknown 5xxx instruction
$F9C    $FC68   UNKNOWN  FC68            ; Unknown Fxxx instruction
$F9E    $8016   SHR      V0              ; V0 >>= 1, VF = LSB
$FA0    $5C37   UNKNOWN  $5C37           ; Unknown 5xxx instruction
$FA2    $A262   LD       I, $262         ; Load 262 into I
$FA4    $8429   UNKNOWN  8429            ; Unknown 8xxx instruction
$FA6    $A3ED   LD       I, $3ED         ; Load 3ED into I
$FA8    $3ED6   SE       VE, #D6         ; Skip if VE == 214
$FAA    $8B5B   UNKNOWN  8B5B            ; Unknown 8xxx instruction
$FAC    $552E   UNKNOWN  $552E           ; Unknown 5xxx instruction
$FAE    $8DF6   SHR      VD              ; VD >>= 1, VF = LSB
$FB0    $911C   UNKNOWN  $911C           ; Unknown 9xxx instruction
$FB2    $92F0   SNE      V2, VF          ; Skip if V2 != VF
$FB4    $6AF3   LD       VA, #F3         ; Load 243 into VA
$FB6    $66AA   LD       V6, #AA         ; Load 170 into V6
$FB8    $F2C8   UNKNOWN  F2C8            ; Unknown Fxxx instruction
$FBA    $9E75   UNKNOWN  $9E75           ; Unknown 9xxx instruction
$FBC    $3D2F   SE       VD, #2F         ; Skip if VD == 47
$FBE    $5F6E   UNKNOWN  $5F6E           ; Unknown 5xxx instruction
$FC0    $FAF2   UNKNOWN  FAF2            ; Unknown Fxxx instruction
$FC2    $3F63   SE       VF, #63         ; Skip if VF == 99
$FC4    $B823   JP       V0, $823        ; Jump to V0 + 823
$FC6    $206B   CALL     $06B            ; Call subroutine at 06B
$FC8    $93A4   UNKNOWN  $93A4           ; Unknown 9xxx instruction
$FCA    $D835   DRW      V8, V3, #5      ; Draw 5-byte sprite at V8, V3
$FCC    $F9EB   UNKNOWN  F9EB            ; Unknown Fxxx instruction
$FCE    $AEC2   LD       I, $EC2         ; Load EC2 into I
$FD0    $FFF9   UNKNOWN  FFF9            ; Unknown Fxxx instruction
$FD2    $2ABA   CALL     $ABA            ; Call subroutine at ABA
$FD4    $DCAA   DRW      VC, VA, #A      ; Draw 10-byte sprite at VC, VA
$FD6    $A9E8   LD       I, $9E8         ; Load 9E8 into I
$FD8    $F062   UNKNOWN  F062            ; Unknown Fxxx instruction
$FDA    $04D3   SYS      $4D3            ; System call to 4D3
$FDC    $2EEA   CALL     $EEA            ; Call subroutine at EEA
$FDE    $B7D2   JP       V0, $7D2        ; Jump to V0 + 7D2
$FE0    $4CE9   SNE      VC, #E9         ; Skip if VC != 233
$FE2    $ACC6   LD       I, $CC6         ; Load CC6 into I
$FE4    $1E47   JP       $E47            ; Jump to E47
$FE6    $8A5B   UNKNOWN  8A5B            ; Unknown 8xxx instruction
$FE8    $EB53   UNKNOWN  $EB53           ; Unknown Exxx instruction
$FEA    $98ED   UNKNOWN  $98ED           ; Unknown 9xxx instruction
$FEC    $553E   UNKNOWN  $553E           ; Unknown 5xxx instruction
$FEE    $0981   SYS      $981            ; System call to 981
$FF0    $B1B8   JP       V0, $1B8        ; Jump to V0 + 1B8
$FF2    $41DD   SNE      V1, #DD         ; Skip if V1 != 221
$FF4    $3CD8   SE       VC, #D8         ; Skip if VC == 216
$FF6    $4BE1   SNE      VB, #E1         ; Skip if VB != 225
$FF8    $E5BC   UNKNOWN  $E5BC           ; Unknown Exxx instruction
$FFA    $9240   SNE      V2, V4          ; Skip if V2 != V4
$FFC    $0775   SYS      $775            ; System call to 775
$FFE    $35E0   SE       V5, #E0         ; Skip if V5 == 224

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 482 (26.9%)
  JP      : 211 (11.8%)
  LD      : 197 (11.0%)
  SE      : 136 ( 7.6%)
  DRW     : 135 ( 7.5%)
  SNE     : 129 ( 7.2%)
  RND     : 122 ( 6.8%)
  SYS     : 113 ( 6.3%)
  CALL    : 109 ( 6.1%)
  ADD     : 109 ( 6.1%)
  SHR     :  10 ( 0.6%)
  SHL     :   9 ( 0.5%)
  AND     :   8 ( 0.4%)
  SUBN    :   8 ( 0.4%)
  OR      :   6 ( 0.3%)
  SUB     :   4 ( 0.2%)
  XOR     :   3 ( 0.2%)
  SKP     :   1 ( 0.1%)

Memory Operations: 306 (17.1%)
Arithmetic Operations: 138 (7.7%)
