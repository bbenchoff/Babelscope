
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B1551D01_I33542_C1001_cacd452e115f.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 1551
Instance: 33542
Direction: ascending
Final Array: [1, 2, 3, 111, 136, 145, 174, 177]
Operations: R:0 W:1 C:86 S:3

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 113
Sort Array References:
  $224: LD I, $054 ; Load 054 into I
  $226: LD I, $50E ; Load 50E into I
  $252: LD I, $AA9 ; Load AA9 into I
  $2BE: LD I, $F1C ; Load F1C into I
  $2CE: LD I, $38F ; Load 38F into I
  $2DA: LD I, $8B9 ; Load 8B9 into I
  $2E0: LD I, $C62 ; Load C62 into I
  $2FC: LD I, $E25 ; Load E25 into I
  $306: LD I, $EB1 ; Load EB1 into I
  $314: LD I, $DC3 ; Load DC3 into I
  $318: LD I, $8A3 ; Load 8A3 into I
  $31E: LD I, $004 ; Load 004 into I
  $326: LD I, $F3E ; Load F3E into I
  $32A: LD I, $B79 ; Load B79 into I
  $32C: LD I, $677 ; Load 677 into I
  $330: LD I, $C70 ; Load C70 into I
  $3B2: LD I, $ED6 ; Load ED6 into I
  $3CA: LD I, $3F7 ; Load 3F7 into I
  $3D4: LD I, $3E9 ; Load 3E9 into I
  $3F2: LD I, $AF7 ; Load AF7 into I
  $436: LD I, $B51 ; Load B51 into I
  $44E: LD I, $0DC ; Load 0DC into I
  $454: LD I, $5A8 ; Load 5A8 into I
  $480: LD I, $72C ; Load 72C into I
  $48C: LD I, $8AF ; Load 8AF into I
  $4AE: LD I, $835 ; Load 835 into I
  $4C4: LD I, $6C1 ; Load 6C1 into I
  $4D4: LD I, $5C1 ; Load 5C1 into I
  $4D6: LD I, $323 ; Load 323 into I
  $4DA: LD I, $1DA ; Load 1DA into I
  $532: LD I, $1AE ; Load 1AE into I
  $56E: LD I, $6F4 ; Load 6F4 into I
  $586: LD I, $BF6 ; Load BF6 into I
  $5CA: LD I, $F76 ; Load F76 into I
  $5DA: LD I, $B85 ; Load B85 into I
  $5FE: LD I, $3A5 ; Load 3A5 into I
  $606: LD I, $8FA ; Load 8FA into I
  $618: LD I, $28B ; Load 28B into I
  $634: LD I, $EF2 ; Load EF2 into I
  $674: LD I, $C68 ; Load C68 into I
  $676: LD I, $FC6 ; Load FC6 into I
  $698: LD I, $2B7 ; Load 2B7 into I
  $6A0: LD I, $9F7 ; Load 9F7 into I
  $6BC: LD I, $4F0 ; Load 4F0 into I
  $6EC: LD I, $121 ; Load 121 into I
  $710: LD I, $0A9 ; Load 0A9 into I
  $716: LD I, $D19 ; Load D19 into I
  $72C: LD I, $962 ; Load 962 into I
  $746: LD I, $4BF ; Load 4BF into I
  $748: LD I, $776 ; Load 776 into I
  $762: LD I, $B87 ; Load B87 into I
  $7C6: LD I, $162 ; Load 162 into I
  $7E2: LD I, $2BB ; Load 2BB into I
  $7EC: LD I, $D33 ; Load D33 into I
  $838: LD I, $A97 ; Load A97 into I
  $862: LD I, $AAD ; Load AAD into I
  $866: LD I, $DB5 ; Load DB5 into I
  $874: LD I, $18A ; Load 18A into I
  $890: LD I, $C9A ; Load C9A into I
  $908: LD I, $3FE ; Load 3FE into I
  $91C: LD I, $4EB ; Load 4EB into I
  $93C: LD I, $519 ; Load 519 into I
  $982: LD I, $4D1 ; Load 4D1 into I
  $98E: LD I, $C07 ; Load C07 into I
  $9C4: LD I, $CDB ; Load CDB into I
  $9CC: LD I, $565 ; Load 565 into I
  $9D4: LD I, $85F ; Load 85F into I
  $9EC: LD I, $55C ; Load 55C into I
  $A90: LD I, $FAE ; Load FAE into I
  $AB8: LD I, $B54 ; Load B54 into I
  $ABC: LD I, $D17 ; Load D17 into I
  $B34: LD I, $CEF ; Load CEF into I
  $B4E: LD I, $CF0 ; Load CF0 into I
  $B54: LD I, $CA9 ; Load CA9 into I
  $B66: LD I, $774 ; Load 774 into I
  $B96: LD [I], V6 ; Store V0-V6 at I
  $BB0: LD I, $878 ; Load 878 into I
  $BB2: LD I, $DD6 ; Load DD6 into I
  $BB4: LD I, $A4E ; Load A4E into I
  $BC8: LD I, $0D9 ; Load 0D9 into I
  $BF8: LD I, $3F8 ; Load 3F8 into I
  $C34: LD I, $806 ; Load 806 into I
  $C46: LD I, $37A ; Load 37A into I
  $C78: LD I, $96E ; Load 96E into I
  $C7E: LD I, $BB6 ; Load BB6 into I
  $C88: LD I, $279 ; Load 279 into I
  $CC4: LD I, $AB2 ; Load AB2 into I
  $D1A: LD I, $381 ; Load 381 into I
  $D64: LD I, $1CE ; Load 1CE into I
  $D84: LD I, $72C ; Load 72C into I
  $DC0: LD I, $F05 ; Load F05 into I
  $DC6: LD I, $653 ; Load 653 into I
  $DE2: LD I, $FA4 ; Load FA4 into I
  $E26: LD I, $2D1 ; Load 2D1 into I
  $E2A: LD I, $147 ; Load 147 into I
  $E76: LD I, $B36 ; Load B36 into I
  $E7A: LD I, $BB2 ; Load BB2 into I
  $E80: LD I, $211 ; Load 211 into I
  $E8A: LD I, $126 ; Load 126 into I
  $E96: LD I, $F7C ; Load F7C into I
  $E98: LD I, $A96 ; Load A96 into I
  $EBC: LD I, $453 ; Load 453 into I
  $EE8: LD I, $6FF ; Load 6FF into I
  $EEC: LD I, $F49 ; Load F49 into I
  $EF4: LD I, $F5D ; Load F5D into I
  $F14: LD I, $2CE ; Load 2CE into I
  $F24: LD I, $3C7 ; Load 3C7 into I
  $F68: LD I, $BA6 ; Load BA6 into I
  $F6A: LD I, $9B5 ; Load 9B5 into I
  $F7C: LD I, $1A6 ; Load 1A6 into I
  $F98: LD I, $E58 ; Load E58 into I
  $FAA: LD I, $E82 ; Load E82 into I
  $FC8: LD I, $867 ; Load 867 into I

CONTROL FLOW ANALYSIS:
Jumps: 219
Calls: 112
Branches: 231
Loops: 129
Loop Structures:
  $2B2 -> $1A9 (backward jump)
  $328 -> $323 (backward jump)
  $36E -> $25F (backward jump)
  $406 -> $201 (backward jump)
  $426 -> $18F (backward jump)
  $432 -> $287 (backward jump)
  $474 -> $145 (backward jump)
  $4BA -> $3FE (backward jump)
  $4DC -> $4DA (backward jump)
  $4DE -> $026 (backward jump)
  $4E2 -> $397 (backward jump)
  $4EA -> $172 (backward jump)
  $4F8 -> $2DE (backward jump)
  $4FA -> $42C (backward jump)
  $514 -> $3F4 (backward jump)
  $526 -> $426 (backward jump)
  $528 -> $357 (backward jump)
  $530 -> $3C9 (backward jump)
  $590 -> $496 (backward jump)
  $59A -> $2B9 (backward jump)
  $5A8 -> $13F (backward jump)
  $5D4 -> $5BB (backward jump)
  $5E8 -> $3D5 (backward jump)
  $602 -> $36E (backward jump)
  $612 -> $0C5 (backward jump)
  $622 -> $434 (backward jump)
  $63A -> $3B3 (backward jump)
  $63E -> $1B5 (backward jump)
  $64A -> $50C (backward jump)
  $6A2 -> $3E1 (backward jump)
  $6A4 -> $198 (backward jump)
  $6C0 -> $3E8 (backward jump)
  $6CA -> $0E5 (backward jump)
  $6D0 -> $522 (backward jump)
  $6E6 -> $616 (backward jump)
  $6E8 -> $374 (backward jump)
  $714 -> $460 (backward jump)
  $73E -> $3D7 (backward jump)
  $76A -> $176 (backward jump)
  $79E -> $144 (backward jump)
  $7A4 -> $31B (backward jump)
  $7D2 -> $345 (backward jump)
  $812 -> $6C5 (backward jump)
  $840 -> $718 (backward jump)
  $84C -> $6B6 (backward jump)
  $858 -> $6AE (backward jump)
  $882 -> $62C (backward jump)
  $8E2 -> $1F7 (backward jump)
  $91E -> $324 (backward jump)
  $92A -> $1C0 (backward jump)
  $95A -> $47C (backward jump)
  $962 -> $1E9 (backward jump)
  $96A -> $4F1 (backward jump)
  $970 -> $3F9 (backward jump)
  $9A4 -> $8DE (backward jump)
  $9C6 -> $971 (backward jump)
  $9CE -> $19A (backward jump)
  $9D2 -> $880 (backward jump)
  $9F4 -> $4C1 (backward jump)
  $A0C -> $801 (backward jump)
  $A16 -> $9B6 (backward jump)
  $A48 -> $7B9 (backward jump)
  $A76 -> $23C (backward jump)
  $A98 -> $50A (backward jump)
  $AA0 -> $135 (backward jump)
  $AFC -> $007 (backward jump)
  $B12 -> $040 (backward jump)
  $B2A -> $9B4 (backward jump)
  $B32 -> $9C1 (backward jump)
  $B3C -> $1B1 (backward jump)
  $B6C -> $035 (backward jump)
  $BA8 -> $408 (backward jump)
  $BAE -> $5D7 (backward jump)
  $BD8 -> $A8E (backward jump)
  $BF4 -> $BDF (backward jump)
  $C10 -> $A99 (backward jump)
  $C20 -> $2FC (backward jump)
  $C28 -> $7B0 (backward jump)
  $C66 -> $66C (backward jump)
  $C68 -> $6BB (backward jump)
  $C6A -> $4FE (backward jump)
  $C7C -> $739 (backward jump)
  $C8E -> $B7A (backward jump)
  $CBE -> $0C4 (backward jump)
  $CFE -> $B67 (backward jump)
  $D0A -> $368 (backward jump)
  $D0C -> $4A7 (backward jump)
  $D0E -> $7D9 (backward jump)
  $D14 -> $2FF (backward jump)
  $D20 -> $032 (backward jump)
  $D3A -> $7EB (backward jump)
  $D44 -> $A4F (backward jump)
  $D46 -> $3D2 (backward jump)
  $D48 -> $17E (backward jump)
  $D5E -> $726 (backward jump)
  $D6C -> $7B9 (backward jump)
  $D8C -> $654 (backward jump)
  $D9A -> $30F (backward jump)
  $D9E -> $033 (backward jump)
  $DB6 -> $39B (backward jump)
  $DD4 -> $AD0 (backward jump)
  $DE6 -> $ADD (backward jump)
  $DF8 -> $A4D (backward jump)
  $E0A -> $D79 (backward jump)
  $E16 -> $AA9 (backward jump)
  $E30 -> $3A4 (backward jump)
  $E3E -> $7FA (backward jump)
  $E44 -> $644 (backward jump)
  $E46 -> $565 (backward jump)
  $E6E -> $55B (backward jump)
  $EA8 -> $888 (backward jump)
  $EAE -> $4F1 (backward jump)
  $EB6 -> $46C (backward jump)
  $EFE -> $5C4 (backward jump)
  $F04 -> $0DF (backward jump)
  $F0A -> $0A9 (backward jump)
  $F12 -> $735 (backward jump)
  $F26 -> $978 (backward jump)
  $F2A -> $C1D (backward jump)
  $F2C -> $088 (backward jump)
  $F2E -> $919 (backward jump)
  $F3A -> $5C1 (backward jump)
  $F48 -> $BB8 (backward jump)
  $F5C -> $716 (backward jump)
  $F60 -> $2F0 (backward jump)
  $FA4 -> $343 (backward jump)
  $FBE -> $274 (backward jump)
  $FEE -> $1A0 (backward jump)
  $FFA -> $E01 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $E83A   UNKNOWN  $E83A           ; Unknown Exxx instruction
$202    $CA8C   RND      VA, #8C         ; VA = random & 8C
$204    $1FEE   JP       $FEE            ; Jump to FEE
$206    $F270   UNKNOWN  F270            ; Unknown Fxxx instruction
$208    $D7EC   DRW      V7, VE, #C      ; Draw 12-byte sprite at V7, VE
$20A    $C155   RND      V1, #55         ; V1 = random & 55
$20C    $C970   RND      V9, #70         ; V9 = random & 70
$20E    $71B4   ADD      V1, #B4         ; Add 180 to V1
$210    $DA45   DRW      VA, V4, #5      ; Draw 5-byte sprite at VA, V4
$212    $946A   UNKNOWN  $946A           ; Unknown 9xxx instruction
$214    $D94B   DRW      V9, V4, #B      ; Draw 11-byte sprite at V9, V4
$216    $ECBE   UNKNOWN  $ECBE           ; Unknown Exxx instruction
$218    $8B8B   UNKNOWN  8B8B            ; Unknown 8xxx instruction
$21A    $6C6F   LD       VC, #6F         ; Load 111 into VC
$21C    $D35F   DRW      V3, V5, #F      ; Draw 15-byte sprite at V3, V5
$21E    $0A55   SYS      $A55            ; System call to A55
$220    $2252   CALL     $252            ; Call subroutine at 252
$222    $3F2C   SE       VF, #2C         ; Skip if VF == 44
$224    $A054   LD       I, $054         ; Load 054 into I
$226    $A50E   LD       I, $50E         ; Load 50E into I
$228    $46B5   SNE      V6, #B5         ; Skip if V6 != 181
$22A    $70FD   ADD      V0, #FD         ; Add 253 to V0
$22C    $4EC1   SNE      VE, #C1         ; Skip if VE != 193
$22E    $7605   ADD      V6, #05         ; Add 5 to V6
$230    $424C   SNE      V2, #4C         ; Skip if V2 != 76
$232    $C3FC   RND      V3, #FC         ; V3 = random & FC
$234    $9C39   UNKNOWN  $9C39           ; Unknown 9xxx instruction
$236    $D35F   DRW      V3, V5, #F      ; Draw 15-byte sprite at V3, V5
$238    $E343   UNKNOWN  $E343           ; Unknown Exxx instruction
$23A    $9C8B   UNKNOWN  $9C8B           ; Unknown 9xxx instruction
$23C    $732B   ADD      V3, #2B         ; Add 43 to V3
$23E    $FD7C   UNKNOWN  FD7C            ; Unknown Fxxx instruction
$240    $7AAE   ADD      VA, #AE         ; Add 174 to VA
$242    $3F9D   SE       VF, #9D         ; Skip if VF == 157
$244    $30D3   SE       V0, #D3         ; Skip if V0 == 211
$246    $FA9E   UNKNOWN  FA9E            ; Unknown Fxxx instruction
$248    $1818   JP       $818            ; Jump to 818
$24A    $1972   JP       $972            ; Jump to 972
$24C    $75EC   ADD      V5, #EC         ; Add 236 to V5
$24E    $DBEE   DRW      VB, VE, #E      ; Draw 14-byte sprite at VB, VE
$250    $82AA   UNKNOWN  82AA            ; Unknown 8xxx instruction
$252    $AAA9   LD       I, $AA9         ; Load AA9 into I
$254    $D926   DRW      V9, V2, #6      ; Draw 6-byte sprite at V9, V2
$256    $3D2B   SE       VD, #2B         ; Skip if VD == 43
$258    $BCFD   JP       V0, $CFD        ; Jump to V0 + CFD
$25A    $B8B6   JP       V0, $8B6        ; Jump to V0 + 8B6
$25C    $5261   UNKNOWN  $5261           ; Unknown 5xxx instruction
$25E    $E11B   UNKNOWN  $E11B           ; Unknown Exxx instruction
$260    $803B   UNKNOWN  803B            ; Unknown 8xxx instruction
$262    $34D3   SE       V4, #D3         ; Skip if V4 == 211
$264    $7FAF   ADD      VF, #AF         ; Add 175 to VF
$266    $1EC7   JP       $EC7            ; Jump to EC7
$268    $6287   LD       V2, #87         ; Load 135 into V2
$26A    $FE2F   UNKNOWN  FE2F            ; Unknown Fxxx instruction
$26C    $BC3E   JP       V0, $C3E        ; Jump to V0 + C3E
$26E    $3852   SE       V8, #52         ; Skip if V8 == 82
$270    $3826   SE       V8, #26         ; Skip if V8 == 38
$272    $41A4   SNE      V1, #A4         ; Skip if V1 != 164
$274    $B3EC   JP       V0, $3EC        ; Jump to V0 + 3EC
$276    $68BB   LD       V8, #BB         ; Load 187 into V8
$278    $C3BD   RND      V3, #BD         ; V3 = random & BD
$27A    $0FDA   SYS      $FDA            ; System call to FDA
$27C    $1854   JP       $854            ; Jump to 854
$27E    $4E08   SNE      VE, #08         ; Skip if VE != 8
$280    $3028   SE       V0, #28         ; Skip if V0 == 40
$282    $9E5B   UNKNOWN  $9E5B           ; Unknown 9xxx instruction
$284    $9F49   UNKNOWN  $9F49           ; Unknown 9xxx instruction
$286    $DE0C   DRW      VE, V0, #C      ; Draw 12-byte sprite at VE, V0
$288    $0260   SYS      $260            ; System call to 260
$28A    $2B39   CALL     $B39            ; Call subroutine at B39
$28C    $767F   ADD      V6, #7F         ; Add 127 to V6
$28E    $305D   SE       V0, #5D         ; Skip if V0 == 93
$290    $8B9B   UNKNOWN  8B9B            ; Unknown 8xxx instruction
$292    $D43F   DRW      V4, V3, #F      ; Draw 15-byte sprite at V4, V3
$294    $1EDA   JP       $EDA            ; Jump to EDA
$296    $63F8   LD       V3, #F8         ; Load 248 into V3
$298    $B837   JP       V0, $837        ; Jump to V0 + 837
$29A    $949E   UNKNOWN  $949E           ; Unknown 9xxx instruction
$29C    $9619   UNKNOWN  $9619           ; Unknown 9xxx instruction
$29E    $E79D   UNKNOWN  $E79D           ; Unknown Exxx instruction
$2A0    $25B8   CALL     $5B8            ; Call subroutine at 5B8
$2A2    $278E   CALL     $78E            ; Call subroutine at 78E
$2A4    $1A79   JP       $A79            ; Jump to A79
$2A6    $4785   SNE      V7, #85         ; Skip if V7 != 133
$2A8    $47A0   SNE      V7, #A0         ; Skip if V7 != 160
$2AA    $9550   SNE      V5, V5          ; Skip if V5 != V5
$2AC    $EEC6   UNKNOWN  $EEC6           ; Unknown Exxx instruction
$2AE    $FC02   UNKNOWN  FC02            ; Unknown Fxxx instruction
$2B0    $B396   JP       V0, $396        ; Jump to V0 + 396
$2B2    $B1A9   JP       V0, $1A9        ; Jump to V0 + 1A9
$2B4    $403D   SNE      V0, #3D         ; Skip if V0 != 61
$2B6    $2DCB   CALL     $DCB            ; Call subroutine at DCB
$2B8    $D416   DRW      V4, V1, #6      ; Draw 6-byte sprite at V4, V1
$2BA    $59AF   UNKNOWN  $59AF           ; Unknown 5xxx instruction
$2BC    $51AF   UNKNOWN  $51AF           ; Unknown 5xxx instruction
$2BE    $AF1C   LD       I, $F1C         ; Load F1C into I
$2C0    $CA3C   RND      VA, #3C         ; VA = random & 3C
$2C2    $F072   UNKNOWN  F072            ; Unknown Fxxx instruction
$2C4    $32D7   SE       V2, #D7         ; Skip if V2 == 215
$2C6    $D69C   DRW      V6, V9, #C      ; Draw 12-byte sprite at V6, V9
$2C8    $5259   UNKNOWN  $5259           ; Unknown 5xxx instruction
$2CA    $F9C9   UNKNOWN  F9C9            ; Unknown Fxxx instruction
$2CC    $491C   SNE      V9, #1C         ; Skip if V9 != 28
$2CE    $A38F   LD       I, $38F         ; Load 38F into I
$2D0    $C0D0   RND      V0, #D0         ; V0 = random & D0
$2D2    $8300   LD       V3, V0          ; V3 = V0
$2D4    $83AC   UNKNOWN  83AC            ; Unknown 8xxx instruction
$2D6    $29C7   CALL     $9C7            ; Call subroutine at 9C7
$2D8    $0B39   SYS      $B39            ; System call to B39
$2DA    $A8B9   LD       I, $8B9         ; Load 8B9 into I
$2DC    $36DE   SE       V6, #DE         ; Skip if V6 == 222
$2DE    $C76E   RND      V7, #6E         ; V7 = random & 6E
$2E0    $AC62   LD       I, $C62         ; Load C62 into I
$2E2    $5E22   UNKNOWN  $5E22           ; Unknown 5xxx instruction
$2E4    $9D0E   UNKNOWN  $9D0E           ; Unknown 9xxx instruction
$2E6    $FF21   UNKNOWN  FF21            ; Unknown Fxxx instruction
$2E8    $4A20   SNE      VA, #20         ; Skip if VA != 32
$2EA    $35EC   SE       V5, #EC         ; Skip if V5 == 236
$2EC    $6DB9   LD       VD, #B9         ; Load 185 into VD
$2EE    $E5F7   UNKNOWN  $E5F7           ; Unknown Exxx instruction
$2F0    $DA0B   DRW      VA, V0, #B      ; Draw 11-byte sprite at VA, V0
$2F2    $7375   ADD      V3, #75         ; Add 117 to V3
$2F4    $13D7   JP       $3D7            ; Jump to 3D7
$2F6    $28FA   CALL     $8FA            ; Call subroutine at 8FA
$2F8    $30CA   SE       V0, #CA         ; Skip if V0 == 202
$2FA    $86F4   ADD      V6, VF          ; V6 += VF, VF = carry
$2FC    $AE25   LD       I, $E25         ; Load E25 into I
$2FE    $E874   UNKNOWN  $E874           ; Unknown Exxx instruction
$300    $0102   SYS      $102            ; System call to 102
$302    $036F   SYS      $36F            ; System call to 36F
$304    $8891   OR       V8, V9          ; V8 |= V9
$306    $AEB1   LD       I, $EB1         ; Load EB1 into I
$308    $6CAD   LD       VC, #AD         ; Load 173 into VC
$30A    $31E0   SE       V1, #E0         ; Skip if V1 == 224
$30C    $EF75   UNKNOWN  $EF75           ; Unknown Exxx instruction
$30E    $8556   SHR      V5              ; V5 >>= 1, VF = LSB
$310    $E4B8   UNKNOWN  $E4B8           ; Unknown Exxx instruction
$312    $D233   DRW      V2, V3, #3      ; Draw 3-byte sprite at V2, V3
$314    $ADC3   LD       I, $DC3         ; Load DC3 into I
$316    $7DEB   ADD      VD, #EB         ; Add 235 to VD
$318    $A8A3   LD       I, $8A3         ; Load 8A3 into I
$31A    $1453   JP       $453            ; Jump to 453
$31C    $D0F4   DRW      V0, VF, #4      ; Draw 4-byte sprite at V0, VF
$31E    $A004   LD       I, $004         ; Load 004 into I
$320    $DEEE   DRW      VE, VE, #E      ; Draw 14-byte sprite at VE, VE
$322    $3B06   SE       VB, #06         ; Skip if VB == 6
$324    $137C   JP       $37C            ; Jump to 37C
$326    $AF3E   LD       I, $F3E         ; Load F3E into I
$328    $1323   JP       $323            ; Jump to 323
$32A    $AB79   LD       I, $B79         ; Load B79 into I
$32C    $A677   LD       I, $677         ; Load 677 into I
$32E    $EE07   UNKNOWN  $EE07           ; Unknown Exxx instruction
$330    $AC70   LD       I, $C70         ; Load C70 into I
$332    $EDE9   UNKNOWN  $EDE9           ; Unknown Exxx instruction
$334    $CFE5   RND      VF, #E5         ; VF = random & E5
$336    $E2B5   UNKNOWN  $E2B5           ; Unknown Exxx instruction
$338    $0E74   SYS      $E74            ; System call to E74
$33A    $5C05   UNKNOWN  $5C05           ; Unknown 5xxx instruction
$33C    $60C5   LD       V0, #C5         ; Load 197 into V0
$33E    $1D36   JP       $D36            ; Jump to D36
$340    $3B14   SE       VB, #14         ; Skip if VB == 20
$342    $485A   SNE      V8, #5A         ; Skip if V8 != 90
$344    $E913   UNKNOWN  $E913           ; Unknown Exxx instruction
$346    $E5C9   UNKNOWN  $E5C9           ; Unknown Exxx instruction
$348    $D7CB   DRW      V7, VC, #B      ; Draw 11-byte sprite at V7, VC
$34A    $C536   RND      V5, #36         ; V5 = random & 36
$34C    $6EC4   LD       VE, #C4         ; Load 196 into VE
$34E    $9AAF   UNKNOWN  $9AAF           ; Unknown 9xxx instruction
$350    $7CD7   ADD      VC, #D7         ; Add 215 to VC
$352    $52EE   UNKNOWN  $52EE           ; Unknown 5xxx instruction
$354    $4C85   SNE      VC, #85         ; Skip if VC != 133
$356    $2B4D   CALL     $B4D            ; Call subroutine at B4D
$358    $2271   CALL     $271            ; Call subroutine at 271
$35A    $F8DF   UNKNOWN  F8DF            ; Unknown Fxxx instruction
$35C    $2324   CALL     $324            ; Call subroutine at 324
$35E    $741D   ADD      V4, #1D         ; Add 29 to V4
$360    $3BA3   SE       VB, #A3         ; Skip if VB == 163
$362    $5623   UNKNOWN  $5623           ; Unknown 5xxx instruction
$364    $6165   LD       V1, #65         ; Load 101 into V1
$366    $68CA   LD       V8, #CA         ; Load 202 into V8
$368    $72EB   ADD      V2, #EB         ; Add 235 to V2
$36A    $87CC   UNKNOWN  87CC            ; Unknown 8xxx instruction
$36C    $6934   LD       V9, #34         ; Load 52 into V9
$36E    $125F   JP       $25F            ; Jump to 25F
$370    $1870   JP       $870            ; Jump to 870
$372    $7875   ADD      V8, #75         ; Add 117 to V8
$374    $9749   UNKNOWN  $9749           ; Unknown 9xxx instruction
$376    $C7AE   RND      V7, #AE         ; V7 = random & AE
$378    $DE53   DRW      VE, V5, #3      ; Draw 3-byte sprite at VE, V5
$37A    $ED52   UNKNOWN  $ED52           ; Unknown Exxx instruction
$37C    $6F09   LD       VF, #09         ; Load 9 into VF
$37E    $593A   UNKNOWN  $593A           ; Unknown 5xxx instruction
$380    $169E   JP       $69E            ; Jump to 69E
$382    $018F   SYS      $18F            ; System call to 18F
$384    $E67B   UNKNOWN  $E67B           ; Unknown Exxx instruction
$386    $6A89   LD       VA, #89         ; Load 137 into VA
$388    $756E   ADD      V5, #6E         ; Add 110 to V5
$38A    $42AB   SNE      V2, #AB         ; Skip if V2 != 171
$38C    $4A20   SNE      VA, #20         ; Skip if VA != 32
$38E    $BF08   JP       V0, $F08        ; Jump to V0 + F08
$390    $5A65   UNKNOWN  $5A65           ; Unknown 5xxx instruction
$392    $8F7F   UNKNOWN  8F7F            ; Unknown 8xxx instruction
$394    $0FDD   SYS      $FDD            ; System call to FDD
$396    $7677   ADD      V6, #77         ; Add 119 to V6
$398    $F406   UNKNOWN  F406            ; Unknown Fxxx instruction
$39A    $CB3B   RND      VB, #3B         ; VB = random & 3B
$39C    $3F03   SE       VF, #03         ; Skip if VF == 3
$39E    $6B20   LD       VB, #20         ; Load 32 into VB
$3A0    $3407   SE       V4, #07         ; Skip if V4 == 7
$3A2    $F7C9   UNKNOWN  F7C9            ; Unknown Fxxx instruction
$3A4    $E687   UNKNOWN  $E687           ; Unknown Exxx instruction
$3A6    $841C   UNKNOWN  841C            ; Unknown 8xxx instruction
$3A8    $D472   DRW      V4, V7, #2      ; Draw 2-byte sprite at V4, V7
$3AA    $80A2   AND      V0, VA          ; V0 &= VA
$3AC    $6AD0   LD       VA, #D0         ; Load 208 into VA
$3AE    $1BA7   JP       $BA7            ; Jump to BA7
$3B0    $144E   JP       $44E            ; Jump to 44E
$3B2    $AED6   LD       I, $ED6         ; Load ED6 into I
$3B4    $69C0   LD       V9, #C0         ; Load 192 into V9
$3B6    $FF82   UNKNOWN  FF82            ; Unknown Fxxx instruction
$3B8    $1A85   JP       $A85            ; Jump to A85
$3BA    $4785   SNE      V7, #85         ; Skip if V7 != 133
$3BC    $6628   LD       V6, #28         ; Load 40 into V6
$3BE    $D2F3   DRW      V2, VF, #3      ; Draw 3-byte sprite at V2, VF
$3C0    $3D8F   SE       VD, #8F         ; Skip if VD == 143
$3C2    $BBBC   JP       V0, $BBC        ; Jump to V0 + BBC
$3C4    $390D   SE       V9, #0D         ; Skip if V9 == 13
$3C6    $E64E   UNKNOWN  $E64E           ; Unknown Exxx instruction
$3C8    $51BC   UNKNOWN  $51BC           ; Unknown 5xxx instruction
$3CA    $A3F7   LD       I, $3F7         ; Load 3F7 into I
$3CC    $C9AD   RND      V9, #AD         ; V9 = random & AD
$3CE    $8385   SUB      V3, V8          ; V3 -= V8, VF = !borrow
$3D0    $BB06   JP       V0, $B06        ; Jump to V0 + B06
$3D2    $0726   SYS      $726            ; System call to 726
$3D4    $A3E9   LD       I, $3E9         ; Load 3E9 into I
$3D6    $59BC   UNKNOWN  $59BC           ; Unknown 5xxx instruction
$3D8    $358B   SE       V5, #8B         ; Skip if V5 == 139
$3DA    $BCB6   JP       V0, $CB6        ; Jump to V0 + CB6
$3DC    $69A5   LD       V9, #A5         ; Load 165 into V9
$3DE    $2E11   CALL     $E11            ; Call subroutine at E11
$3E0    $5DDB   UNKNOWN  $5DDB           ; Unknown 5xxx instruction
$3E2    $64EF   LD       V4, #EF         ; Load 239 into V4
$3E4    $094E   SYS      $94E            ; System call to 94E
$3E6    $95DA   UNKNOWN  $95DA           ; Unknown 9xxx instruction
$3E8    $D852   DRW      V8, V5, #2      ; Draw 2-byte sprite at V8, V5
$3EA    $5C37   UNKNOWN  $5C37           ; Unknown 5xxx instruction
$3EC    $1F5E   JP       $F5E            ; Jump to F5E
$3EE    $FCB1   UNKNOWN  FCB1            ; Unknown Fxxx instruction
$3F0    $4F97   SNE      VF, #97         ; Skip if VF != 151
$3F2    $AAF7   LD       I, $AF7         ; Load AF7 into I
$3F4    $43F2   SNE      V3, #F2         ; Skip if V3 != 242
$3F6    $85A0   LD       V5, VA          ; V5 = VA
$3F8    $069A   SYS      $69A            ; System call to 69A
$3FA    $7A8B   ADD      VA, #8B         ; Add 139 to VA
$3FC    $6381   LD       V3, #81         ; Load 129 into V3
$3FE    $F0DC   UNKNOWN  F0DC            ; Unknown Fxxx instruction
$400    $2191   CALL     $191            ; Call subroutine at 191
$402    $DC60   DRW      VC, V6, #0      ; Draw 0-byte sprite at VC, V6
$404    $70ED   ADD      V0, #ED         ; Add 237 to V0
$406    $1201   JP       $201            ; Jump to 201
$408    $8E31   OR       VE, V3          ; VE |= V3
$40A    $8A4E   SHL      VA              ; VA <<= 1, VF = MSB
$40C    $080A   SYS      $80A            ; System call to 80A
$40E    $C6CF   RND      V6, #CF         ; V6 = random & CF
$410    $08A2   SYS      $8A2            ; System call to 8A2
$412    $D229   DRW      V2, V2, #9      ; Draw 9-byte sprite at V2, V2
$414    $7B39   ADD      VB, #39         ; Add 57 to VB
$416    $FE8F   UNKNOWN  FE8F            ; Unknown Fxxx instruction
$418    $E953   UNKNOWN  $E953           ; Unknown Exxx instruction
$41A    $4F99   SNE      VF, #99         ; Skip if VF != 153
$41C    $E475   UNKNOWN  $E475           ; Unknown Exxx instruction
$41E    $9F5E   UNKNOWN  $9F5E           ; Unknown 9xxx instruction
$420    $B91C   JP       V0, $91C        ; Jump to V0 + 91C
$422    $71ED   ADD      V1, #ED         ; Add 237 to V1
$424    $FBAE   UNKNOWN  FBAE            ; Unknown Fxxx instruction
$426    $B18F   JP       V0, $18F        ; Jump to V0 + 18F
$428    $2F41   CALL     $F41            ; Call subroutine at F41
$42A    $0645   SYS      $645            ; System call to 645
$42C    $CF71   RND      VF, #71         ; VF = random & 71
$42E    $38AA   SE       V8, #AA         ; Skip if V8 == 170
$430    $5A31   UNKNOWN  $5A31           ; Unknown 5xxx instruction
$432    $B287   JP       V0, $287        ; Jump to V0 + 287
$434    $2230   CALL     $230            ; Call subroutine at 230
$436    $AB51   LD       I, $B51         ; Load B51 into I
$438    $9FE8   UNKNOWN  $9FE8           ; Unknown 9xxx instruction
$43A    $CDE9   RND      VD, #E9         ; VD = random & E9
$43C    $23FB   CALL     $3FB            ; Call subroutine at 3FB
$43E    $4559   SNE      V5, #59         ; Skip if V5 != 89
$440    $FB0D   UNKNOWN  FB0D            ; Unknown Fxxx instruction
$442    $5C5A   UNKNOWN  $5C5A           ; Unknown 5xxx instruction
$444    $918E   UNKNOWN  $918E           ; Unknown 9xxx instruction
$446    $9C4A   UNKNOWN  $9C4A           ; Unknown 9xxx instruction
$448    $4A6D   SNE      VA, #6D         ; Skip if VA != 109
$44A    $8C45   SUB      VC, V4          ; VC -= V4, VF = !borrow
$44C    $E795   UNKNOWN  $E795           ; Unknown Exxx instruction
$44E    $A0DC   LD       I, $0DC         ; Load 0DC into I
$450    $B988   JP       V0, $988        ; Jump to V0 + 988
$452    $CB05   RND      VB, #05         ; VB = random & 05
$454    $A5A8   LD       I, $5A8         ; Load 5A8 into I
$456    $EEB9   UNKNOWN  $EEB9           ; Unknown Exxx instruction
$458    $7A2D   ADD      VA, #2D         ; Add 45 to VA
$45A    $D4D7   DRW      V4, VD, #7      ; Draw 7-byte sprite at V4, VD
$45C    $FCFC   UNKNOWN  FCFC            ; Unknown Fxxx instruction
$45E    $67A9   LD       V7, #A9         ; Load 169 into V7
$460    $32BE   SE       V2, #BE         ; Skip if V2 == 190
$462    $BE7D   JP       V0, $E7D        ; Jump to V0 + E7D
$464    $5D39   UNKNOWN  $5D39           ; Unknown 5xxx instruction
$466    $EF9A   UNKNOWN  $EF9A           ; Unknown Exxx instruction
$468    $1F27   JP       $F27            ; Jump to F27
$46A    $7A30   ADD      VA, #30         ; Add 48 to VA
$46C    $DFE4   DRW      VF, VE, #4      ; Draw 4-byte sprite at VF, VE
$46E    $79FD   ADD      V9, #FD         ; Add 253 to V9
$470    $0C6C   SYS      $C6C            ; System call to C6C
$472    $2252   CALL     $252            ; Call subroutine at 252
$474    $B145   JP       V0, $145        ; Jump to V0 + 145
$476    $3887   SE       V8, #87         ; Skip if V8 == 135
$478    $EFB2   UNKNOWN  $EFB2           ; Unknown Exxx instruction
$47A    $48E5   SNE      V8, #E5         ; Skip if V8 != 229
$47C    $1582   JP       $582            ; Jump to 582
$47E    $54F7   UNKNOWN  $54F7           ; Unknown 5xxx instruction
$480    $A72C   LD       I, $72C         ; Load 72C into I
$482    $0114   SYS      $114            ; System call to 114
$484    $B650   JP       V0, $650        ; Jump to V0 + 650
$486    $8C17   SUBN     VC, V1          ; VC = V1 - VC, VF = !borrow
$488    $8E1A   UNKNOWN  8E1A            ; Unknown 8xxx instruction
$48A    $7189   ADD      V1, #89         ; Add 137 to V1
$48C    $A8AF   LD       I, $8AF         ; Load 8AF into I
$48E    $7138   ADD      V1, #38         ; Add 56 to V1
$490    $CCAA   RND      VC, #AA         ; VC = random & AA
$492    $3401   SE       V4, #01         ; Skip if V4 == 1
$494    $407A   SNE      V0, #7A         ; Skip if V0 != 122
$496    $86C0   LD       V6, VC          ; V6 = VC
$498    $050F   SYS      $50F            ; System call to 50F
$49A    $190A   JP       $90A            ; Jump to 90A
$49C    $0AF7   SYS      $AF7            ; System call to AF7
$49E    $540F   UNKNOWN  $540F           ; Unknown 5xxx instruction
$4A0    $2A89   CALL     $A89            ; Call subroutine at A89
$4A2    $3DBF   SE       VD, #BF         ; Skip if VD == 191
$4A4    $E58C   UNKNOWN  $E58C           ; Unknown Exxx instruction
$4A6    $CC6B   RND      VC, #6B         ; VC = random & 6B
$4A8    $5DF9   UNKNOWN  $5DF9           ; Unknown 5xxx instruction
$4AA    $44BF   SNE      V4, #BF         ; Skip if V4 != 191
$4AC    $EA86   UNKNOWN  $EA86           ; Unknown Exxx instruction
$4AE    $A835   LD       I, $835         ; Load 835 into I
$4B0    $61CC   LD       V1, #CC         ; Load 204 into V1
$4B2    $C505   RND      V5, #05         ; V5 = random & 05
$4B4    $9A94   UNKNOWN  $9A94           ; Unknown 9xxx instruction
$4B6    $4798   SNE      V7, #98         ; Skip if V7 != 152
$4B8    $2363   CALL     $363            ; Call subroutine at 363
$4BA    $13FE   JP       $3FE            ; Jump to 3FE
$4BC    $C6E0   RND      V6, #E0         ; V6 = random & E0
$4BE    $F06C   UNKNOWN  F06C            ; Unknown Fxxx instruction
$4C0    $BFE9   JP       V0, $FE9        ; Jump to V0 + FE9
$4C2    $278F   CALL     $78F            ; Call subroutine at 78F
$4C4    $A6C1   LD       I, $6C1         ; Load 6C1 into I
$4C6    $2B39   CALL     $B39            ; Call subroutine at B39
$4C8    $62E0   LD       V2, #E0         ; Load 224 into V2
$4CA    $52A2   UNKNOWN  $52A2           ; Unknown 5xxx instruction
$4CC    $6582   LD       V5, #82         ; Load 130 into V5
$4CE    $D12D   DRW      V1, V2, #D      ; Draw 13-byte sprite at V1, V2
$4D0    $CAB3   RND      VA, #B3         ; VA = random & B3
$4D2    $E402   UNKNOWN  $E402           ; Unknown Exxx instruction
$4D4    $A5C1   LD       I, $5C1         ; Load 5C1 into I
$4D6    $A323   LD       I, $323         ; Load 323 into I
$4D8    $D21F   DRW      V2, V1, #F      ; Draw 15-byte sprite at V2, V1
$4DA    $A1DA   LD       I, $1DA         ; Load 1DA into I
$4DC    $B4DA   JP       V0, $4DA        ; Jump to V0 + 4DA
$4DE    $B026   JP       V0, $026        ; Jump to V0 + 026
$4E0    $50B2   UNKNOWN  $50B2           ; Unknown 5xxx instruction
$4E2    $1397   JP       $397            ; Jump to 397
$4E4    $77EF   ADD      V7, #EF         ; Add 239 to V7
$4E6    $F43A   UNKNOWN  F43A            ; Unknown Fxxx instruction
$4E8    $9DE4   UNKNOWN  $9DE4           ; Unknown 9xxx instruction
$4EA    $1172   JP       $172            ; Jump to 172
$4EC    $21CA   CALL     $1CA            ; Call subroutine at 1CA
$4EE    $6E96   LD       VE, #96         ; Load 150 into VE
$4F0    $8525   SUB      V5, V2          ; V5 -= V2, VF = !borrow
$4F2    $F447   UNKNOWN  F447            ; Unknown Fxxx instruction
$4F4    $BE24   JP       V0, $E24        ; Jump to V0 + E24
$4F6    $DA2A   DRW      VA, V2, #A      ; Draw 10-byte sprite at VA, V2
$4F8    $B2DE   JP       V0, $2DE        ; Jump to V0 + 2DE
$4FA    $B42C   JP       V0, $42C        ; Jump to V0 + 42C
$4FC    $8058   UNKNOWN  8058            ; Unknown 8xxx instruction
$4FE    $C0A0   RND      V0, #A0         ; V0 = random & A0
$500    $EDA2   UNKNOWN  $EDA2           ; Unknown Exxx instruction
$502    $C322   RND      V3, #22         ; V3 = random & 22
$504    $72D1   ADD      V2, #D1         ; Add 209 to V2
$506    $53CD   UNKNOWN  $53CD           ; Unknown 5xxx instruction
$508    $3342   SE       V3, #42         ; Skip if V3 == 66
$50A    $06DC   SYS      $6DC            ; System call to 6DC
$50C    $5447   UNKNOWN  $5447           ; Unknown 5xxx instruction
$50E    $DCF8   DRW      VC, VF, #8      ; Draw 8-byte sprite at VC, VF
$510    $36CA   SE       V6, #CA         ; Skip if V6 == 202
$512    $04B1   SYS      $4B1            ; System call to 4B1
$514    $B3F4   JP       V0, $3F4        ; Jump to V0 + 3F4
$516    $CD0B   RND      VD, #0B         ; VD = random & 0B
$518    $E089   UNKNOWN  $E089           ; Unknown Exxx instruction
$51A    $F96B   UNKNOWN  F96B            ; Unknown Fxxx instruction
$51C    $8E84   ADD      VE, V8          ; VE += V8, VF = carry
$51E    $EABA   UNKNOWN  $EABA           ; Unknown Exxx instruction
$520    $356F   SE       V5, #6F         ; Skip if V5 == 111
$522    $F17C   UNKNOWN  F17C            ; Unknown Fxxx instruction
$524    $7251   ADD      V2, #51         ; Add 81 to V2
$526    $1426   JP       $426            ; Jump to 426
$528    $1357   JP       $357            ; Jump to 357
$52A    $4A3B   SNE      VA, #3B         ; Skip if VA != 59
$52C    $D0BC   DRW      V0, VB, #C      ; Draw 12-byte sprite at V0, VB
$52E    $658C   LD       V5, #8C         ; Load 140 into V5
$530    $13C9   JP       $3C9            ; Jump to 3C9
$532    $A1AE   LD       I, $1AE         ; Load 1AE into I
$534    $8033   XOR      V0, V3          ; V0 ^= V3
$536    $4642   SNE      V6, #42         ; Skip if V6 != 66
$538    $C398   RND      V3, #98         ; V3 = random & 98
$53A    $F964   UNKNOWN  F964            ; Unknown Fxxx instruction
$53C    $77B5   ADD      V7, #B5         ; Add 181 to V7
$53E    $C941   RND      V9, #41         ; V9 = random & 41
$540    $02A0   SYS      $2A0            ; System call to 2A0
$542    $62D5   LD       V2, #D5         ; Load 213 into V2
$544    $3DB0   SE       VD, #B0         ; Skip if VD == 176
$546    $4B29   SNE      VB, #29         ; Skip if VB != 41
$548    $7DBB   ADD      VD, #BB         ; Add 187 to VD
$54A    $9AF3   UNKNOWN  $9AF3           ; Unknown 9xxx instruction
$54C    $93F0   SNE      V3, VF          ; Skip if V3 != VF
$54E    $6283   LD       V2, #83         ; Load 131 into V2
$550    $00AF   SYS      $0AF            ; System call to 0AF
$552    $E114   UNKNOWN  $E114           ; Unknown Exxx instruction
$554    $CE6B   RND      VE, #6B         ; VE = random & 6B
$556    $5BF3   UNKNOWN  $5BF3           ; Unknown 5xxx instruction
$558    $B640   JP       V0, $640        ; Jump to V0 + 640
$55A    $0277   SYS      $277            ; System call to 277
$55C    $FAEE   UNKNOWN  FAEE            ; Unknown Fxxx instruction
$55E    $5834   UNKNOWN  $5834           ; Unknown 5xxx instruction
$560    $42C9   SNE      V2, #C9         ; Skip if V2 != 201
$562    $75DA   ADD      V5, #DA         ; Add 218 to V5
$564    $9F12   UNKNOWN  $9F12           ; Unknown 9xxx instruction
$566    $3983   SE       V9, #83         ; Skip if V9 == 131
$568    $9818   UNKNOWN  $9818           ; Unknown 9xxx instruction
$56A    $5577   UNKNOWN  $5577           ; Unknown 5xxx instruction
$56C    $79C5   ADD      V9, #C5         ; Add 197 to V9
$56E    $A6F4   LD       I, $6F4         ; Load 6F4 into I
$570    $392A   SE       V9, #2A         ; Skip if V9 == 42
$572    $0AFB   SYS      $AFB            ; System call to AFB
$574    $043E   SYS      $43E            ; System call to 43E
$576    $FDC0   UNKNOWN  FDC0            ; Unknown Fxxx instruction
$578    $843E   SHL      V4              ; V4 <<= 1, VF = MSB
$57A    $2AE9   CALL     $AE9            ; Call subroutine at AE9
$57C    $B770   JP       V0, $770        ; Jump to V0 + 770
$57E    $6830   LD       V8, #30         ; Load 48 into V8
$580    $1999   JP       $999            ; Jump to 999
$582    $767D   ADD      V6, #7D         ; Add 125 to V6
$584    $8E5F   UNKNOWN  8E5F            ; Unknown 8xxx instruction
$586    $ABF6   LD       I, $BF6         ; Load BF6 into I
$588    $0FBE   SYS      $FBE            ; System call to FBE
$58A    $DC20   DRW      VC, V2, #0      ; Draw 0-byte sprite at VC, V2
$58C    $76BC   ADD      V6, #BC         ; Add 188 to V6
$58E    $001D   SYS      $01D            ; System call to 01D
$590    $1496   JP       $496            ; Jump to 496
$592    $2C4C   CALL     $C4C            ; Call subroutine at C4C
$594    $FFDA   UNKNOWN  FFDA            ; Unknown Fxxx instruction
$596    $1DAA   JP       $DAA            ; Jump to DAA
$598    $8992   AND      V9, V9          ; V9 &= V9
$59A    $12B9   JP       $2B9            ; Jump to 2B9
$59C    $8D58   UNKNOWN  8D58            ; Unknown 8xxx instruction
$59E    $2569   CALL     $569            ; Call subroutine at 569
$5A0    $DABE   DRW      VA, VB, #E      ; Draw 14-byte sprite at VA, VB
$5A2    $C976   RND      V9, #76         ; V9 = random & 76
$5A4    $D071   DRW      V0, V7, #1      ; Draw 1-byte sprite at V0, V7
$5A6    $EB15   UNKNOWN  $EB15           ; Unknown Exxx instruction
$5A8    $113F   JP       $13F            ; Jump to 13F
$5AA    $2CB8   CALL     $CB8            ; Call subroutine at CB8
$5AC    $E595   UNKNOWN  $E595           ; Unknown Exxx instruction
$5AE    $56A8   UNKNOWN  $56A8           ; Unknown 5xxx instruction
$5B0    $6074   LD       V0, #74         ; Load 116 into V0
$5B2    $2129   CALL     $129            ; Call subroutine at 129
$5B4    $2E44   CALL     $E44            ; Call subroutine at E44
$5B6    $53C9   UNKNOWN  $53C9           ; Unknown 5xxx instruction
$5B8    $8857   SUBN     V8, V5          ; V8 = V5 - V8, VF = !borrow
$5BA    $052B   SYS      $52B            ; System call to 52B
$5BC    $23E4   CALL     $3E4            ; Call subroutine at 3E4
$5BE    $1C32   JP       $C32            ; Jump to C32
$5C0    $04CE   SYS      $4CE            ; System call to 4CE
$5C2    $7B33   ADD      VB, #33         ; Add 51 to VB
$5C4    $7021   ADD      V0, #21         ; Add 33 to V0
$5C6    $83A0   LD       V3, VA          ; V3 = VA
$5C8    $1866   JP       $866            ; Jump to 866
$5CA    $AF76   LD       I, $F76         ; Load F76 into I
$5CC    $59AF   UNKNOWN  $59AF           ; Unknown 5xxx instruction
$5CE    $D6A1   DRW      V6, VA, #1      ; Draw 1-byte sprite at V6, VA
$5D0    $FCFB   UNKNOWN  FCFB            ; Unknown Fxxx instruction
$5D2    $1A26   JP       $A26            ; Jump to A26
$5D4    $15BB   JP       $5BB            ; Jump to 5BB
$5D6    $D90C   DRW      V9, V0, #C      ; Draw 12-byte sprite at V9, V0
$5D8    $D566   DRW      V5, V6, #6      ; Draw 6-byte sprite at V5, V6
$5DA    $AB85   LD       I, $B85         ; Load B85 into I
$5DC    $2D0B   CALL     $D0B            ; Call subroutine at D0B
$5DE    $0F1D   SYS      $F1D            ; System call to F1D
$5E0    $23C2   CALL     $3C2            ; Call subroutine at 3C2
$5E2    $33A6   SE       V3, #A6         ; Skip if V3 == 166
$5E4    $5E16   UNKNOWN  $5E16           ; Unknown 5xxx instruction
$5E6    $61E4   LD       V1, #E4         ; Load 228 into V1
$5E8    $B3D5   JP       V0, $3D5        ; Jump to V0 + 3D5
$5EA    $89C9   UNKNOWN  89C9            ; Unknown 8xxx instruction
$5EC    $8C23   XOR      VC, V2          ; VC ^= V2
$5EE    $7498   ADD      V4, #98         ; Add 152 to V4
$5F0    $0A75   SYS      $A75            ; System call to A75
$5F2    $6FCB   LD       VF, #CB         ; Load 203 into VF
$5F4    $C0AB   RND      V0, #AB         ; V0 = random & AB
$5F6    $C300   RND      V3, #00         ; V3 = random & 00
$5F8    $0EFC   SYS      $EFC            ; System call to EFC
$5FA    $F20D   UNKNOWN  F20D            ; Unknown Fxxx instruction
$5FC    $2C5F   CALL     $C5F            ; Call subroutine at C5F
$5FE    $A3A5   LD       I, $3A5         ; Load 3A5 into I
$600    $2563   CALL     $563            ; Call subroutine at 563
$602    $136E   JP       $36E            ; Jump to 36E
$604    $F3BE   UNKNOWN  F3BE            ; Unknown Fxxx instruction
$606    $A8FA   LD       I, $8FA         ; Load 8FA into I
$608    $5BEE   UNKNOWN  $5BEE           ; Unknown 5xxx instruction
$60A    $1D66   JP       $D66            ; Jump to D66
$60C    $739C   ADD      V3, #9C         ; Add 156 to V3
$60E    $8B20   LD       VB, V2          ; VB = V2
$610    $0FCB   SYS      $FCB            ; System call to FCB
$612    $B0C5   JP       V0, $0C5        ; Jump to V0 + 0C5
$614    $32D8   SE       V2, #D8         ; Skip if V2 == 216
$616    $518A   UNKNOWN  $518A           ; Unknown 5xxx instruction
$618    $A28B   LD       I, $28B         ; Load 28B into I
$61A    $833E   SHL      V3              ; V3 <<= 1, VF = MSB
$61C    $BCBA   JP       V0, $CBA        ; Jump to V0 + CBA
$61E    $BEB0   JP       V0, $EB0        ; Jump to V0 + EB0
$620    $7176   ADD      V1, #76         ; Add 118 to V1
$622    $B434   JP       V0, $434        ; Jump to V0 + 434
$624    $CCEE   RND      VC, #EE         ; VC = random & EE
$626    $1CD2   JP       $CD2            ; Jump to CD2
$628    $F952   UNKNOWN  F952            ; Unknown Fxxx instruction
$62A    $30CB   SE       V0, #CB         ; Skip if V0 == 203
$62C    $4423   SNE      V4, #23         ; Skip if V4 != 35
$62E    $EE75   UNKNOWN  $EE75           ; Unknown Exxx instruction
$630    $6D54   LD       VD, #54         ; Load 84 into VD
$632    $7962   ADD      V9, #62         ; Add 98 to V9
$634    $AEF2   LD       I, $EF2         ; Load EF2 into I
$636    $3D44   SE       VD, #44         ; Skip if VD == 68
$638    $409E   SNE      V0, #9E         ; Skip if V0 != 158
$63A    $13B3   JP       $3B3            ; Jump to 3B3
$63C    $22B1   CALL     $2B1            ; Call subroutine at 2B1
$63E    $11B5   JP       $1B5            ; Jump to 1B5
$640    $2AF9   CALL     $AF9            ; Call subroutine at AF9
$642    $DCCF   DRW      VC, VC, #F      ; Draw 15-byte sprite at VC, VC
$644    $E80A   UNKNOWN  $E80A           ; Unknown Exxx instruction
$646    $B916   JP       V0, $916        ; Jump to V0 + 916
$648    $4DA9   SNE      VD, #A9         ; Skip if VD != 169
$64A    $B50C   JP       V0, $50C        ; Jump to V0 + 50C
$64C    $69C2   LD       V9, #C2         ; Load 194 into V9
$64E    $29CF   CALL     $9CF            ; Call subroutine at 9CF
$650    $5E4E   UNKNOWN  $5E4E           ; Unknown 5xxx instruction
$652    $67A5   LD       V7, #A5         ; Load 165 into V7
$654    $7927   ADD      V9, #27         ; Add 39 to V9
$656    $B9C6   JP       V0, $9C6        ; Jump to V0 + 9C6
$658    $5860   SE       V8, V6          ; Skip if V8 == V6
$65A    $76D7   ADD      V6, #D7         ; Add 215 to V6
$65C    $64E9   LD       V4, #E9         ; Load 233 into V4
$65E    $CAD7   RND      VA, #D7         ; VA = random & D7
$660    $1A37   JP       $A37            ; Jump to A37
$662    $0146   SYS      $146            ; System call to 146
$664    $56F3   UNKNOWN  $56F3           ; Unknown 5xxx instruction
$666    $16C2   JP       $6C2            ; Jump to 6C2
$668    $3FB0   SE       VF, #B0         ; Skip if VF == 176
$66A    $0E84   SYS      $E84            ; System call to E84
$66C    $BB60   JP       V0, $B60        ; Jump to V0 + B60
$66E    $7904   ADD      V9, #04         ; Add 4 to V9
$670    $C117   RND      V1, #17         ; V1 = random & 17
$672    $C609   RND      V6, #09         ; V6 = random & 09
$674    $AC68   LD       I, $C68         ; Load C68 into I
$676    $AFC6   LD       I, $FC6         ; Load FC6 into I
$678    $CBBA   RND      VB, #BA         ; VB = random & BA
$67A    $D27D   DRW      V2, V7, #D      ; Draw 13-byte sprite at V2, V7
$67C    $6B7F   LD       VB, #7F         ; Load 127 into VB
$67E    $40DA   SNE      V0, #DA         ; Skip if V0 != 218
$680    $BE45   JP       V0, $E45        ; Jump to V0 + E45
$682    $75FC   ADD      V5, #FC         ; Add 252 to V5
$684    $5D00   SE       VD, V0          ; Skip if VD == V0
$686    $3A97   SE       VA, #97         ; Skip if VA == 151
$688    $789A   ADD      V8, #9A         ; Add 154 to V8
$68A    $C415   RND      V4, #15         ; V4 = random & 15
$68C    $F785   UNKNOWN  F785            ; Unknown Fxxx instruction
$68E    $20EE   CALL     $0EE            ; Call subroutine at 0EE
$690    $EB92   UNKNOWN  $EB92           ; Unknown Exxx instruction
$692    $D888   DRW      V8, V8, #8      ; Draw 8-byte sprite at V8, V8
$694    $886D   UNKNOWN  886D            ; Unknown 8xxx instruction
$696    $E5CD   UNKNOWN  $E5CD           ; Unknown Exxx instruction
$698    $A2B7   LD       I, $2B7         ; Load 2B7 into I
$69A    $D3F8   DRW      V3, VF, #8      ; Draw 8-byte sprite at V3, VF
$69C    $FECB   UNKNOWN  FECB            ; Unknown Fxxx instruction
$69E    $5CE1   UNKNOWN  $5CE1           ; Unknown 5xxx instruction
$6A0    $A9F7   LD       I, $9F7         ; Load 9F7 into I
$6A2    $13E1   JP       $3E1            ; Jump to 3E1
$6A4    $1198   JP       $198            ; Jump to 198
$6A6    $E1BE   UNKNOWN  $E1BE           ; Unknown Exxx instruction
$6A8    $C475   RND      V4, #75         ; V4 = random & 75
$6AA    $ECB6   UNKNOWN  $ECB6           ; Unknown Exxx instruction
$6AC    $CFB9   RND      VF, #B9         ; VF = random & B9
$6AE    $2712   CALL     $712            ; Call subroutine at 712
$6B0    $6C4B   LD       VC, #4B         ; Load 75 into VC
$6B2    $5175   UNKNOWN  $5175           ; Unknown 5xxx instruction
$6B4    $98EF   UNKNOWN  $98EF           ; Unknown 9xxx instruction
$6B6    $FD63   UNKNOWN  FD63            ; Unknown Fxxx instruction
$6B8    $4F2D   SNE      VF, #2D         ; Skip if VF != 45
$6BA    $341C   SE       V4, #1C         ; Skip if V4 == 28
$6BC    $A4F0   LD       I, $4F0         ; Load 4F0 into I
$6BE    $0FB8   SYS      $FB8            ; System call to FB8
$6C0    $B3E8   JP       V0, $3E8        ; Jump to V0 + 3E8
$6C2    $8720   LD       V7, V2          ; V7 = V2
$6C4    $387D   SE       V8, #7D         ; Skip if V8 == 125
$6C6    $46CD   SNE      V6, #CD         ; Skip if V6 != 205
$6C8    $4AA7   SNE      VA, #A7         ; Skip if VA != 167
$6CA    $B0E5   JP       V0, $0E5        ; Jump to V0 + 0E5
$6CC    $515E   UNKNOWN  $515E           ; Unknown 5xxx instruction
$6CE    $29CE   CALL     $9CE            ; Call subroutine at 9CE
$6D0    $B522   JP       V0, $522        ; Jump to V0 + 522
$6D2    $86E7   SUBN     V6, VE          ; V6 = VE - V6, VF = !borrow
$6D4    $FAE2   UNKNOWN  FAE2            ; Unknown Fxxx instruction
$6D6    $BE28   JP       V0, $E28        ; Jump to V0 + E28
$6D8    $B6FC   JP       V0, $6FC        ; Jump to V0 + 6FC
$6DA    $FC8F   UNKNOWN  FC8F            ; Unknown Fxxx instruction
$6DC    $842F   UNKNOWN  842F            ; Unknown 8xxx instruction
$6DE    $BC37   JP       V0, $C37        ; Jump to V0 + C37
$6E0    $4785   SNE      V7, #85         ; Skip if V7 != 133
$6E2    $39AF   SE       V9, #AF         ; Skip if V9 == 175
$6E4    $636E   LD       V3, #6E         ; Load 110 into V3
$6E6    $B616   JP       V0, $616        ; Jump to V0 + 616
$6E8    $1374   JP       $374            ; Jump to 374
$6EA    $DE8E   DRW      VE, V8, #E      ; Draw 14-byte sprite at VE, V8
$6EC    $A121   LD       I, $121         ; Load 121 into I
$6EE    $2BB5   CALL     $BB5            ; Call subroutine at BB5
$6F0    $2ADD   CALL     $ADD            ; Call subroutine at ADD
$6F2    $84C0   LD       V4, VC          ; V4 = VC
$6F4    $F44C   UNKNOWN  F44C            ; Unknown Fxxx instruction
$6F6    $941E   UNKNOWN  $941E           ; Unknown 9xxx instruction
$6F8    $68F3   LD       V8, #F3         ; Load 243 into V8
$6FA    $E61C   UNKNOWN  $E61C           ; Unknown Exxx instruction
$6FC    $E49F   UNKNOWN  $E49F           ; Unknown Exxx instruction
$6FE    $78B3   ADD      V8, #B3         ; Add 179 to V8
$700    $9011   UNKNOWN  $9011           ; Unknown 9xxx instruction
$702    $CD04   RND      VD, #04         ; VD = random & 04
$704    $8D63   XOR      VD, V6          ; VD ^= V6
$706    $005B   SYS      $05B            ; System call to 05B
$708    $DE5A   DRW      VE, V5, #A      ; Draw 10-byte sprite at VE, V5
$70A    $60C0   LD       V0, #C0         ; Load 192 into V0
$70C    $97A0   SNE      V7, VA          ; Skip if V7 != VA
$70E    $2F9D   CALL     $F9D            ; Call subroutine at F9D
$710    $A0A9   LD       I, $0A9         ; Load 0A9 into I
$712    $617A   LD       V1, #7A         ; Load 122 into V1
$714    $1460   JP       $460            ; Jump to 460
$716    $AD19   LD       I, $D19         ; Load D19 into I
$718    $CCE8   RND      VC, #E8         ; VC = random & E8
$71A    $8577   SUBN     V5, V7          ; V5 = V7 - V5, VF = !borrow
$71C    $F4C5   UNKNOWN  F4C5            ; Unknown Fxxx instruction
$71E    $9354   UNKNOWN  $9354           ; Unknown 9xxx instruction
$720    $3D30   SE       VD, #30         ; Skip if VD == 48
$722    $FCA4   UNKNOWN  FCA4            ; Unknown Fxxx instruction
$724    $954A   UNKNOWN  $954A           ; Unknown 9xxx instruction
$726    $D591   DRW      V5, V9, #1      ; Draw 1-byte sprite at V5, V9
$728    $EBC9   UNKNOWN  $EBC9           ; Unknown Exxx instruction
$72A    $26EE   CALL     $6EE            ; Call subroutine at 6EE
$72C    $A962   LD       I, $962         ; Load 962 into I
$72E    $DBCA   DRW      VB, VC, #A      ; Draw 10-byte sprite at VB, VC
$730    $30DF   SE       V0, #DF         ; Skip if V0 == 223
$732    $FA2B   UNKNOWN  FA2B            ; Unknown Fxxx instruction
$734    $001D   SYS      $01D            ; System call to 01D
$736    $F840   UNKNOWN  F840            ; Unknown Fxxx instruction
$738    $6EF8   LD       VE, #F8         ; Load 248 into VE
$73A    $BB4E   JP       V0, $B4E        ; Jump to V0 + B4E
$73C    $5B6C   UNKNOWN  $5B6C           ; Unknown 5xxx instruction
$73E    $13D7   JP       $3D7            ; Jump to 3D7
$740    $6C38   LD       VC, #38         ; Load 56 into VC
$742    $9455   UNKNOWN  $9455           ; Unknown 9xxx instruction
$744    $7567   ADD      V5, #67         ; Add 103 to V5
$746    $A4BF   LD       I, $4BF         ; Load 4BF into I
$748    $A776   LD       I, $776         ; Load 776 into I
$74A    $3391   SE       V3, #91         ; Skip if V3 == 145
$74C    $1D45   JP       $D45            ; Jump to D45
$74E    $D326   DRW      V3, V2, #6      ; Draw 6-byte sprite at V3, V2
$750    $F4DE   UNKNOWN  F4DE            ; Unknown Fxxx instruction
$752    $F712   UNKNOWN  F712            ; Unknown Fxxx instruction
$754    $DDDD   DRW      VD, VD, #D      ; Draw 13-byte sprite at VD, VD
$756    $2316   CALL     $316            ; Call subroutine at 316
$758    $EF62   UNKNOWN  $EF62           ; Unknown Exxx instruction
$75A    $5E50   SE       VE, V5          ; Skip if VE == V5
$75C    $24A9   CALL     $4A9            ; Call subroutine at 4A9
$75E    $0E7E   SYS      $E7E            ; System call to E7E
$760    $BC6D   JP       V0, $C6D        ; Jump to V0 + C6D
$762    $AB87   LD       I, $B87         ; Load B87 into I
$764    $5502   UNKNOWN  $5502           ; Unknown 5xxx instruction
$766    $CF50   RND      VF, #50         ; VF = random & 50
$768    $269F   CALL     $69F            ; Call subroutine at 69F
$76A    $1176   JP       $176            ; Jump to 176
$76C    $0D36   SYS      $D36            ; System call to D36
$76E    $6FED   LD       VF, #ED         ; Load 237 into VF
$770    $067B   SYS      $67B            ; System call to 67B
$772    $EEF7   UNKNOWN  $EEF7           ; Unknown Exxx instruction
$774    $DE22   DRW      VE, V2, #2      ; Draw 2-byte sprite at VE, V2
$776    $7B7A   ADD      VB, #7A         ; Add 122 to VB
$778    $9DDC   UNKNOWN  $9DDC           ; Unknown 9xxx instruction
$77A    $6A48   LD       VA, #48         ; Load 72 into VA
$77C    $F9DC   UNKNOWN  F9DC            ; Unknown Fxxx instruction
$77E    $1BF3   JP       $BF3            ; Jump to BF3
$780    $5440   SE       V4, V4          ; Skip if V4 == V4
$782    $1BA1   JP       $BA1            ; Jump to BA1
$784    $FAED   UNKNOWN  FAED            ; Unknown Fxxx instruction
$786    $E043   UNKNOWN  $E043           ; Unknown Exxx instruction
$788    $E88D   UNKNOWN  $E88D           ; Unknown Exxx instruction
$78A    $82DD   UNKNOWN  82DD            ; Unknown 8xxx instruction
$78C    $E58F   UNKNOWN  $E58F           ; Unknown Exxx instruction
$78E    $02E5   SYS      $2E5            ; System call to 2E5
$790    $DCBF   DRW      VC, VB, #F      ; Draw 15-byte sprite at VC, VB
$792    $321B   SE       V2, #1B         ; Skip if V2 == 27
$794    $5F82   UNKNOWN  $5F82           ; Unknown 5xxx instruction
$796    $EC5B   UNKNOWN  $EC5B           ; Unknown Exxx instruction
$798    $3CE6   SE       VC, #E6         ; Skip if VC == 230
$79A    $8CF4   ADD      VC, VF          ; VC += VF, VF = carry
$79C    $63A0   LD       V3, #A0         ; Load 160 into V3
$79E    $B144   JP       V0, $144        ; Jump to V0 + 144
$7A0    $6434   LD       V4, #34         ; Load 52 into V4
$7A2    $B89C   JP       V0, $89C        ; Jump to V0 + 89C
$7A4    $131B   JP       $31B            ; Jump to 31B
$7A6    $5015   UNKNOWN  $5015           ; Unknown 5xxx instruction
$7A8    $00AD   SYS      $0AD            ; System call to 0AD
$7AA    $E669   UNKNOWN  $E669           ; Unknown Exxx instruction
$7AC    $C621   RND      V6, #21         ; V6 = random & 21
$7AE    $6FEC   LD       VF, #EC         ; Load 236 into VF
$7B0    $3F96   SE       VF, #96         ; Skip if VF == 150
$7B2    $793A   ADD      V9, #3A         ; Add 58 to V9
$7B4    $4222   SNE      V2, #22         ; Skip if V2 != 34
$7B6    $90EE   UNKNOWN  $90EE           ; Unknown 9xxx instruction
$7B8    $9081   UNKNOWN  $9081           ; Unknown 9xxx instruction
$7BA    $0DFC   SYS      $DFC            ; System call to DFC
$7BC    $872C   UNKNOWN  872C            ; Unknown 8xxx instruction
$7BE    $C5D4   RND      V5, #D4         ; V5 = random & D4
$7C0    $B930   JP       V0, $930        ; Jump to V0 + 930
$7C2    $5C2A   UNKNOWN  $5C2A           ; Unknown 5xxx instruction
$7C4    $9B61   UNKNOWN  $9B61           ; Unknown 9xxx instruction
$7C6    $A162   LD       I, $162         ; Load 162 into I
$7C8    $C4C7   RND      V4, #C7         ; V4 = random & C7
$7CA    $C070   RND      V0, #70         ; V0 = random & 70
$7CC    $8BB7   SUBN     VB, VB          ; VB = VB - VB, VF = !borrow
$7CE    $45B2   SNE      V5, #B2         ; Skip if V5 != 178
$7D0    $5370   SE       V3, V7          ; Skip if V3 == V7
$7D2    $B345   JP       V0, $345        ; Jump to V0 + 345
$7D4    $53C9   UNKNOWN  $53C9           ; Unknown 5xxx instruction
$7D6    $DACE   DRW      VA, VC, #E      ; Draw 14-byte sprite at VA, VC
$7D8    $C936   RND      V9, #36         ; V9 = random & 36
$7DA    $26C9   CALL     $6C9            ; Call subroutine at 6C9
$7DC    $21F2   CALL     $1F2            ; Call subroutine at 1F2
$7DE    $0E28   SYS      $E28            ; System call to E28
$7E0    $DA74   DRW      VA, V7, #4      ; Draw 4-byte sprite at VA, V7
$7E2    $A2BB   LD       I, $2BB         ; Load 2BB into I
$7E4    $46CC   SNE      V6, #CC         ; Skip if V6 != 204
$7E6    $DFA5   DRW      VF, VA, #5      ; Draw 5-byte sprite at VF, VA
$7E8    $D8AE   DRW      V8, VA, #E      ; Draw 14-byte sprite at V8, VA
$7EA    $8F7A   UNKNOWN  8F7A            ; Unknown 8xxx instruction
$7EC    $AD33   LD       I, $D33         ; Load D33 into I
$7EE    $BCF5   JP       V0, $CF5        ; Jump to V0 + CF5
$7F0    $3D9D   SE       VD, #9D         ; Skip if VD == 157
$7F2    $3810   SE       V8, #10         ; Skip if V8 == 16
$7F4    $92EE   UNKNOWN  $92EE           ; Unknown 9xxx instruction
$7F6    $D18E   DRW      V1, V8, #E      ; Draw 14-byte sprite at V1, V8
$7F8    $3DC0   SE       VD, #C0         ; Skip if VD == 192
$7FA    $254B   CALL     $54B            ; Call subroutine at 54B
$7FC    $F6AA   UNKNOWN  F6AA            ; Unknown Fxxx instruction
$7FE    $D0D0   DRW      V0, VD, #0      ; Draw 0-byte sprite at V0, VD
$800    $4A77   SNE      VA, #77         ; Skip if VA != 119
$802    $C144   RND      V1, #44         ; V1 = random & 44
$804    $D427   DRW      V4, V2, #7      ; Draw 7-byte sprite at V4, V2
$806    $7B4D   ADD      VB, #4D         ; Add 77 to VB
$808    $6D46   LD       VD, #46         ; Load 70 into VD
$80A    $52E6   UNKNOWN  $52E6           ; Unknown 5xxx instruction
$80C    $8B5B   UNKNOWN  8B5B            ; Unknown 8xxx instruction
$80E    $0C5A   SYS      $C5A            ; System call to C5A
$810    $992E   UNKNOWN  $992E           ; Unknown 9xxx instruction
$812    $16C5   JP       $6C5            ; Jump to 6C5
$814    $BF14   JP       V0, $F14        ; Jump to V0 + F14
$816    $3A47   SE       VA, #47         ; Skip if VA == 71
$818    $79E7   ADD      V9, #E7         ; Add 231 to V9
$81A    $E930   UNKNOWN  $E930           ; Unknown Exxx instruction
$81C    $38E6   SE       V8, #E6         ; Skip if V8 == 230
$81E    $56F5   UNKNOWN  $56F5           ; Unknown 5xxx instruction
$820    $7617   ADD      V6, #17         ; Add 23 to V6
$822    $316D   SE       V1, #6D         ; Skip if V1 == 109
$824    $8FA5   SUB      VF, VA          ; VF -= VA, VF = !borrow
$826    $0014   SYS      $014            ; System call to 014
$828    $2466   CALL     $466            ; Call subroutine at 466
$82A    $E1CE   UNKNOWN  $E1CE           ; Unknown Exxx instruction
$82C    $0274   SYS      $274            ; System call to 274
$82E    $579C   UNKNOWN  $579C           ; Unknown 5xxx instruction
$830    $9249   UNKNOWN  $9249           ; Unknown 9xxx instruction
$832    $83E8   UNKNOWN  83E8            ; Unknown 8xxx instruction
$834    $DF38   DRW      VF, V3, #8      ; Draw 8-byte sprite at VF, V3
$836    $E84A   UNKNOWN  $E84A           ; Unknown Exxx instruction
$838    $AA97   LD       I, $A97         ; Load A97 into I
$83A    $7F1B   ADD      VF, #1B         ; Add 27 to VF
$83C    $593C   UNKNOWN  $593C           ; Unknown 5xxx instruction
$83E    $4590   SNE      V5, #90         ; Skip if V5 != 144
$840    $B718   JP       V0, $718        ; Jump to V0 + 718
$842    $D0DE   DRW      V0, VD, #E      ; Draw 14-byte sprite at V0, VD
$844    $3EA7   SE       VE, #A7         ; Skip if VE == 167
$846    $0D8E   SYS      $D8E            ; System call to D8E
$848    $0155   SYS      $155            ; System call to 155
$84A    $D5E7   DRW      V5, VE, #7      ; Draw 7-byte sprite at V5, VE
$84C    $B6B6   JP       V0, $6B6        ; Jump to V0 + 6B6
$84E    $4E87   SNE      VE, #87         ; Skip if VE != 135
$850    $0AE8   SYS      $AE8            ; System call to AE8
$852    $F816   UNKNOWN  F816            ; Unknown Fxxx instruction
$854    $DCE4   DRW      VC, VE, #4      ; Draw 4-byte sprite at VC, VE
$856    $7685   ADD      V6, #85         ; Add 133 to V6
$858    $16AE   JP       $6AE            ; Jump to 6AE
$85A    $799A   ADD      V9, #9A         ; Add 154 to V9
$85C    $46CB   SNE      V6, #CB         ; Skip if V6 != 203
$85E    $DC88   DRW      VC, V8, #8      ; Draw 8-byte sprite at VC, V8
$860    $4C39   SNE      VC, #39         ; Skip if VC != 57
$862    $AAAD   LD       I, $AAD         ; Load AAD into I
$864    $61AA   LD       V1, #AA         ; Load 170 into V1
$866    $ADB5   LD       I, $DB5         ; Load DB5 into I
$868    $9A4C   UNKNOWN  $9A4C           ; Unknown 9xxx instruction
$86A    $607B   LD       V0, #7B         ; Load 123 into V0
$86C    $5BE9   UNKNOWN  $5BE9           ; Unknown 5xxx instruction
$86E    $61F9   LD       V1, #F9         ; Load 249 into V1
$870    $41F0   SNE      V1, #F0         ; Skip if V1 != 240
$872    $5C20   SE       VC, V2          ; Skip if VC == V2
$874    $A18A   LD       I, $18A         ; Load 18A into I
$876    $911A   UNKNOWN  $911A           ; Unknown 9xxx instruction
$878    $2715   CALL     $715            ; Call subroutine at 715
$87A    $504E   UNKNOWN  $504E           ; Unknown 5xxx instruction
$87C    $D35A   DRW      V3, V5, #A      ; Draw 10-byte sprite at V3, V5
$87E    $9F7B   UNKNOWN  $9F7B           ; Unknown 9xxx instruction
$880    $9CFD   UNKNOWN  $9CFD           ; Unknown 9xxx instruction
$882    $162C   JP       $62C            ; Jump to 62C
$884    $3F5F   SE       VF, #5F         ; Skip if VF == 95
$886    $5487   UNKNOWN  $5487           ; Unknown 5xxx instruction
$888    $070D   SYS      $70D            ; System call to 70D
$88A    $CAA4   RND      VA, #A4         ; VA = random & A4
$88C    $BFDF   JP       V0, $FDF        ; Jump to V0 + FDF
$88E    $DDB1   DRW      VD, VB, #1      ; Draw 1-byte sprite at VD, VB
$890    $AC9A   LD       I, $C9A         ; Load C9A into I
$892    $29CF   CALL     $9CF            ; Call subroutine at 9CF
$894    $0B33   SYS      $B33            ; System call to B33
$896    $8E22   AND      VE, V2          ; VE &= V2
$898    $2686   CALL     $686            ; Call subroutine at 686
$89A    $D181   DRW      V1, V8, #1      ; Draw 1-byte sprite at V1, V8
$89C    $BD07   JP       V0, $D07        ; Jump to V0 + D07
$89E    $72BB   ADD      V2, #BB         ; Add 187 to V2
$8A0    $2D05   CALL     $D05            ; Call subroutine at D05
$8A2    $8E48   UNKNOWN  8E48            ; Unknown 8xxx instruction
$8A4    $305D   SE       V0, #5D         ; Skip if V0 == 93
$8A6    $3D5E   SE       VD, #5E         ; Skip if VD == 94
$8A8    $8F51   OR       VF, V5          ; VF |= V5
$8AA    $35F5   SE       V5, #F5         ; Skip if V5 == 245
$8AC    $5802   UNKNOWN  $5802           ; Unknown 5xxx instruction
$8AE    $87C0   LD       V7, VC          ; V7 = VC
$8B0    $9043   UNKNOWN  $9043           ; Unknown 9xxx instruction
$8B2    $072A   SYS      $72A            ; System call to 72A
$8B4    $19F9   JP       $9F9            ; Jump to 9F9
$8B6    $EB8F   UNKNOWN  $EB8F           ; Unknown Exxx instruction
$8B8    $DD24   DRW      VD, V2, #4      ; Draw 4-byte sprite at VD, V2
$8BA    $595A   UNKNOWN  $595A           ; Unknown 5xxx instruction
$8BC    $6056   LD       V0, #56         ; Load 86 into V0
$8BE    $76D2   ADD      V6, #D2         ; Add 210 to V6
$8C0    $F9A7   UNKNOWN  F9A7            ; Unknown Fxxx instruction
$8C2    $1FA4   JP       $FA4            ; Jump to FA4
$8C4    $7E60   ADD      VE, #60         ; Add 96 to VE
$8C6    $EDA0   UNKNOWN  $EDA0           ; Unknown Exxx instruction
$8C8    $8D33   XOR      VD, V3          ; VD ^= V3
$8CA    $0A87   SYS      $A87            ; System call to A87
$8CC    $BF5C   JP       V0, $F5C        ; Jump to V0 + F5C
$8CE    $BF0E   JP       V0, $F0E        ; Jump to V0 + F0E
$8D0    $85C2   AND      V5, VC          ; V5 &= VC
$8D2    $C153   RND      V1, #53         ; V1 = random & 53
$8D4    $0C0B   SYS      $C0B            ; System call to C0B
$8D6    $F556   UNKNOWN  F556            ; Unknown Fxxx instruction
$8D8    $7948   ADD      V9, #48         ; Add 72 to V9
$8DA    $E3B8   UNKNOWN  $E3B8           ; Unknown Exxx instruction
$8DC    $6F61   LD       VF, #61         ; Load 97 into VF
$8DE    $070B   SYS      $70B            ; System call to 70B
$8E0    $686F   LD       V8, #6F         ; Load 111 into V8
$8E2    $B1F7   JP       V0, $1F7        ; Jump to V0 + 1F7
$8E4    $22EA   CALL     $2EA            ; Call subroutine at 2EA
$8E6    $2685   CALL     $685            ; Call subroutine at 685
$8E8    $BF65   JP       V0, $F65        ; Jump to V0 + F65
$8EA    $E752   UNKNOWN  $E752           ; Unknown Exxx instruction
$8EC    $E8DA   UNKNOWN  $E8DA           ; Unknown Exxx instruction
$8EE    $2DDD   CALL     $DDD            ; Call subroutine at DDD
$8F0    $911A   UNKNOWN  $911A           ; Unknown 9xxx instruction
$8F2    $DF0C   DRW      VF, V0, #C      ; Draw 12-byte sprite at VF, V0
$8F4    $93B2   UNKNOWN  $93B2           ; Unknown 9xxx instruction
$8F6    $D463   DRW      V4, V6, #3      ; Draw 3-byte sprite at V4, V6
$8F8    $C1FE   RND      V1, #FE         ; V1 = random & FE
$8FA    $CA7A   RND      VA, #7A         ; VA = random & 7A
$8FC    $6760   LD       V7, #60         ; Load 96 into V7
$8FE    $53FB   UNKNOWN  $53FB           ; Unknown 5xxx instruction
$900    $76BF   ADD      V6, #BF         ; Add 191 to V6
$902    $DF1D   DRW      VF, V1, #D      ; Draw 13-byte sprite at VF, V1
$904    $37C0   SE       V7, #C0         ; Skip if V7 == 192
$906    $282C   CALL     $82C            ; Call subroutine at 82C
$908    $A3FE   LD       I, $3FE         ; Load 3FE into I
$90A    $581B   UNKNOWN  $581B           ; Unknown 5xxx instruction
$90C    $C3F0   RND      V3, #F0         ; V3 = random & F0
$90E    $4CDB   SNE      VC, #DB         ; Skip if VC != 219
$910    $4269   SNE      V2, #69         ; Skip if V2 != 105
$912    $311E   SE       V1, #1E         ; Skip if V1 == 30
$914    $3E24   SE       VE, #24         ; Skip if VE == 36
$916    $CCC4   RND      VC, #C4         ; VC = random & C4
$918    $81E6   SHR      V1              ; V1 >>= 1, VF = LSB
$91A    $D4EC   DRW      V4, VE, #C      ; Draw 12-byte sprite at V4, VE
$91C    $A4EB   LD       I, $4EB         ; Load 4EB into I
$91E    $1324   JP       $324            ; Jump to 324
$920    $38C9   SE       V8, #C9         ; Skip if V8 == 201
$922    $1BF4   JP       $BF4            ; Jump to BF4
$924    $FB69   UNKNOWN  FB69            ; Unknown Fxxx instruction
$926    $0644   SYS      $644            ; System call to 644
$928    $BE04   JP       V0, $E04        ; Jump to V0 + E04
$92A    $B1C0   JP       V0, $1C0        ; Jump to V0 + 1C0
$92C    $B95D   JP       V0, $95D        ; Jump to V0 + 95D
$92E    $9F28   UNKNOWN  $9F28           ; Unknown 9xxx instruction
$930    $6F0C   LD       VF, #0C         ; Load 12 into VF
$932    $34A0   SE       V4, #A0         ; Skip if V4 == 160
$934    $343C   SE       V4, #3C         ; Skip if V4 == 60
$936    $505A   UNKNOWN  $505A           ; Unknown 5xxx instruction
$938    $F7A7   UNKNOWN  F7A7            ; Unknown Fxxx instruction
$93A    $D847   DRW      V8, V4, #7      ; Draw 7-byte sprite at V8, V4
$93C    $A519   LD       I, $519         ; Load 519 into I
$93E    $F64D   UNKNOWN  F64D            ; Unknown Fxxx instruction
$940    $29DF   CALL     $9DF            ; Call subroutine at 9DF
$942    $BA1C   JP       V0, $A1C        ; Jump to V0 + A1C
$944    $D8B1   DRW      V8, VB, #1      ; Draw 1-byte sprite at V8, VB
$946    $35C6   SE       V5, #C6         ; Skip if V5 == 198
$948    $063F   SYS      $63F            ; System call to 63F
$94A    $986B   UNKNOWN  $986B           ; Unknown 9xxx instruction
$94C    $0BB7   SYS      $BB7            ; System call to BB7
$94E    $7385   ADD      V3, #85         ; Add 133 to V3
$950    $BDEB   JP       V0, $DEB        ; Jump to V0 + DEB
$952    $EF5F   UNKNOWN  $EF5F           ; Unknown Exxx instruction
$954    $04C2   SYS      $4C2            ; System call to 4C2
$956    $7F9D   ADD      VF, #9D         ; Add 157 to VF
$958    $4170   SNE      V1, #70         ; Skip if V1 != 112
$95A    $147C   JP       $47C            ; Jump to 47C
$95C    $8922   AND      V9, V2          ; V9 &= V2
$95E    $0D8F   SYS      $D8F            ; System call to D8F
$960    $8549   UNKNOWN  8549            ; Unknown 8xxx instruction
$962    $B1E9   JP       V0, $1E9        ; Jump to V0 + 1E9
$964    $717A   ADD      V1, #7A         ; Add 122 to V1
$966    $0F6B   SYS      $F6B            ; System call to F6B
$968    $088A   SYS      $88A            ; System call to 88A
$96A    $B4F1   JP       V0, $4F1        ; Jump to V0 + 4F1
$96C    $5A3E   UNKNOWN  $5A3E           ; Unknown 5xxx instruction
$96E    $2E0F   CALL     $E0F            ; Call subroutine at E0F
$970    $13F9   JP       $3F9            ; Jump to 3F9
$972    $1AD8   JP       $AD8            ; Jump to AD8
$974    $E425   UNKNOWN  $E425           ; Unknown Exxx instruction
$976    $5DA7   UNKNOWN  $5DA7           ; Unknown 5xxx instruction
$978    $6371   LD       V3, #71         ; Load 113 into V3
$97A    $82BC   UNKNOWN  82BC            ; Unknown 8xxx instruction
$97C    $6E2B   LD       VE, #2B         ; Load 43 into VE
$97E    $CAE1   RND      VA, #E1         ; VA = random & E1
$980    $43CB   SNE      V3, #CB         ; Skip if V3 != 203
$982    $A4D1   LD       I, $4D1         ; Load 4D1 into I
$984    $24DF   CALL     $4DF            ; Call subroutine at 4DF
$986    $F53E   UNKNOWN  F53E            ; Unknown Fxxx instruction
$988    $96BF   UNKNOWN  $96BF           ; Unknown 9xxx instruction
$98A    $3E8F   SE       VE, #8F         ; Skip if VE == 143
$98C    $664C   LD       V6, #4C         ; Load 76 into V6
$98E    $AC07   LD       I, $C07         ; Load C07 into I
$990    $0D51   SYS      $D51            ; System call to D51
$992    $7572   ADD      V5, #72         ; Add 114 to V5
$994    $0181   SYS      $181            ; System call to 181
$996    $1F70   JP       $F70            ; Jump to F70
$998    $86F9   UNKNOWN  86F9            ; Unknown 8xxx instruction
$99A    $3E4C   SE       VE, #4C         ; Skip if VE == 76
$99C    $8EAD   UNKNOWN  8EAD            ; Unknown 8xxx instruction
$99E    $D82C   DRW      V8, V2, #C      ; Draw 12-byte sprite at V8, V2
$9A0    $4D45   SNE      VD, #45         ; Skip if VD != 69
$9A2    $9C67   UNKNOWN  $9C67           ; Unknown 9xxx instruction
$9A4    $B8DE   JP       V0, $8DE        ; Jump to V0 + 8DE
$9A6    $7CEA   ADD      VC, #EA         ; Add 234 to VC
$9A8    $96FC   UNKNOWN  $96FC           ; Unknown 9xxx instruction
$9AA    $F3EE   UNKNOWN  F3EE            ; Unknown Fxxx instruction
$9AC    $F6EF   UNKNOWN  F6EF            ; Unknown Fxxx instruction
$9AE    $593C   UNKNOWN  $593C           ; Unknown 5xxx instruction
$9B0    $9947   UNKNOWN  $9947           ; Unknown 9xxx instruction
$9B2    $322F   SE       V2, #2F         ; Skip if V2 == 47
$9B4    $CDA6   RND      VD, #A6         ; VD = random & A6
$9B6    $E92C   UNKNOWN  $E92C           ; Unknown Exxx instruction
$9B8    $EDA5   UNKNOWN  $EDA5           ; Unknown Exxx instruction
$9BA    $3340   SE       V3, #40         ; Skip if V3 == 64
$9BC    $6299   LD       V2, #99         ; Load 153 into V2
$9BE    $4509   SNE      V5, #09         ; Skip if V5 != 9
$9C0    $46EB   SNE      V6, #EB         ; Skip if V6 != 235
$9C2    $66FE   LD       V6, #FE         ; Load 254 into V6
$9C4    $ACDB   LD       I, $CDB         ; Load CDB into I
$9C6    $B971   JP       V0, $971        ; Jump to V0 + 971
$9C8    $8DF1   OR       VD, VF          ; VD |= VF
$9CA    $4374   SNE      V3, #74         ; Skip if V3 != 116
$9CC    $A565   LD       I, $565         ; Load 565 into I
$9CE    $119A   JP       $19A            ; Jump to 19A
$9D0    $995F   UNKNOWN  $995F           ; Unknown 9xxx instruction
$9D2    $1880   JP       $880            ; Jump to 880
$9D4    $A85F   LD       I, $85F         ; Load 85F into I
$9D6    $7BA5   ADD      VB, #A5         ; Add 165 to VB
$9D8    $4789   SNE      V7, #89         ; Skip if V7 != 137
$9DA    $DB83   DRW      VB, V8, #3      ; Draw 3-byte sprite at VB, V8
$9DC    $8AD9   UNKNOWN  8AD9            ; Unknown 8xxx instruction
$9DE    $4093   SNE      V0, #93         ; Skip if V0 != 147
$9E0    $57F5   UNKNOWN  $57F5           ; Unknown 5xxx instruction
$9E2    $645C   LD       V4, #5C         ; Load 92 into V4
$9E4    $6901   LD       V9, #01         ; Load 1 into V9
$9E6    $417E   SNE      V1, #7E         ; Skip if V1 != 126
$9E8    $3B98   SE       VB, #98         ; Skip if VB == 152
$9EA    $60F4   LD       V0, #F4         ; Load 244 into V0
$9EC    $A55C   LD       I, $55C         ; Load 55C into I
$9EE    $D119   DRW      V1, V1, #9      ; Draw 9-byte sprite at V1, V1
$9F0    $8FF8   UNKNOWN  8FF8            ; Unknown 8xxx instruction
$9F2    $FD36   UNKNOWN  FD36            ; Unknown Fxxx instruction
$9F4    $B4C1   JP       V0, $4C1        ; Jump to V0 + 4C1
$9F6    $22D6   CALL     $2D6            ; Call subroutine at 2D6
$9F8    $8027   SUBN     V0, V2          ; V0 = V2 - V0, VF = !borrow
$9FA    $1AB2   JP       $AB2            ; Jump to AB2
$9FC    $47B8   SNE      V7, #B8         ; Skip if V7 != 184
$9FE    $5C05   UNKNOWN  $5C05           ; Unknown 5xxx instruction
$A00    $1F2E   JP       $F2E            ; Jump to F2E
$A02    $EC3C   UNKNOWN  $EC3C           ; Unknown Exxx instruction
$A04    $4866   SNE      V8, #66         ; Skip if V8 != 102
$A06    $C71B   RND      V7, #1B         ; V7 = random & 1B
$A08    $CC94   RND      VC, #94         ; VC = random & 94
$A0A    $6F35   LD       VF, #35         ; Load 53 into VF
$A0C    $1801   JP       $801            ; Jump to 801
$A0E    $FDE4   UNKNOWN  FDE4            ; Unknown Fxxx instruction
$A10    $D007   DRW      V0, V0, #7      ; Draw 7-byte sprite at V0, V0
$A12    $6786   LD       V7, #86         ; Load 134 into V7
$A14    $C403   RND      V4, #03         ; V4 = random & 03
$A16    $19B6   JP       $9B6            ; Jump to 9B6
$A18    $D353   DRW      V3, V5, #3      ; Draw 3-byte sprite at V3, V5
$A1A    $EBE7   UNKNOWN  $EBE7           ; Unknown Exxx instruction
$A1C    $9271   UNKNOWN  $9271           ; Unknown 9xxx instruction
$A1E    $E6A9   UNKNOWN  $E6A9           ; Unknown Exxx instruction
$A20    $0514   SYS      $514            ; System call to 514
$A22    $3E34   SE       VE, #34         ; Skip if VE == 52
$A24    $03AB   SYS      $3AB            ; System call to 3AB
$A26    $629A   LD       V2, #9A         ; Load 154 into V2
$A28    $F13A   UNKNOWN  F13A            ; Unknown Fxxx instruction
$A2A    $1A3B   JP       $A3B            ; Jump to A3B
$A2C    $7E45   ADD      VE, #45         ; Add 69 to VE
$A2E    $D93D   DRW      V9, V3, #D      ; Draw 13-byte sprite at V9, V3
$A30    $7106   ADD      V1, #06         ; Add 6 to V1
$A32    $5CF9   UNKNOWN  $5CF9           ; Unknown 5xxx instruction
$A34    $82BD   UNKNOWN  82BD            ; Unknown 8xxx instruction
$A36    $8E52   AND      VE, V5          ; VE &= V5
$A38    $9114   UNKNOWN  $9114           ; Unknown 9xxx instruction
$A3A    $1C2C   JP       $C2C            ; Jump to C2C
$A3C    $7D31   ADD      VD, #31         ; Add 49 to VD
$A3E    $8572   AND      V5, V7          ; V5 &= V7
$A40    $0083   SYS      $083            ; System call to 083
$A42    $2362   CALL     $362            ; Call subroutine at 362
$A44    $339A   SE       V3, #9A         ; Skip if V3 == 154
$A46    $0688   SYS      $688            ; System call to 688
$A48    $17B9   JP       $7B9            ; Jump to 7B9
$A4A    $3775   SE       V7, #75         ; Skip if V7 == 117
$A4C    $7BFF   ADD      VB, #FF         ; Add 255 to VB
$A4E    $0F56   SYS      $F56            ; System call to F56
$A50    $640D   LD       V4, #0D         ; Load 13 into V4
$A52    $D1F8   DRW      V1, VF, #8      ; Draw 8-byte sprite at V1, VF
$A54    $CFF6   RND      VF, #F6         ; VF = random & F6
$A56    $60B9   LD       V0, #B9         ; Load 185 into V0
$A58    $CDE6   RND      VD, #E6         ; VD = random & E6
$A5A    $E6A9   UNKNOWN  $E6A9           ; Unknown Exxx instruction
$A5C    $8136   SHR      V1              ; V1 >>= 1, VF = LSB
$A5E    $E922   UNKNOWN  $E922           ; Unknown Exxx instruction
$A60    $07AD   SYS      $7AD            ; System call to 7AD
$A62    $CD15   RND      VD, #15         ; VD = random & 15
$A64    $C112   RND      V1, #12         ; V1 = random & 12
$A66    $49CF   SNE      V9, #CF         ; Skip if V9 != 207
$A68    $C374   RND      V3, #74         ; V3 = random & 74
$A6A    $EFAB   UNKNOWN  $EFAB           ; Unknown Exxx instruction
$A6C    $5914   UNKNOWN  $5914           ; Unknown 5xxx instruction
$A6E    $6F49   LD       VF, #49         ; Load 73 into VF
$A70    $255E   CALL     $55E            ; Call subroutine at 55E
$A72    $DB42   DRW      VB, V4, #2      ; Draw 2-byte sprite at VB, V4
$A74    $5922   UNKNOWN  $5922           ; Unknown 5xxx instruction
$A76    $123C   JP       $23C            ; Jump to 23C
$A78    $E8AF   UNKNOWN  $E8AF           ; Unknown Exxx instruction
$A7A    $3034   SE       V0, #34         ; Skip if V0 == 52
$A7C    $D620   DRW      V6, V2, #0      ; Draw 0-byte sprite at V6, V2
$A7E    $BC68   JP       V0, $C68        ; Jump to V0 + C68
$A80    $573F   UNKNOWN  $573F           ; Unknown 5xxx instruction
$A82    $D601   DRW      V6, V0, #1      ; Draw 1-byte sprite at V6, V0
$A84    $091E   SYS      $91E            ; System call to 91E
$A86    $224C   CALL     $24C            ; Call subroutine at 24C
$A88    $EDFA   UNKNOWN  $EDFA           ; Unknown Exxx instruction
$A8A    $D8AF   DRW      V8, VA, #F      ; Draw 15-byte sprite at V8, VA
$A8C    $E676   UNKNOWN  $E676           ; Unknown Exxx instruction
$A8E    $55C0   SE       V5, VC          ; Skip if V5 == VC
$A90    $AFAE   LD       I, $FAE         ; Load FAE into I
$A92    $89B3   XOR      V9, VB          ; V9 ^= VB
$A94    $6147   LD       V1, #47         ; Load 71 into V1
$A96    $5FCE   UNKNOWN  $5FCE           ; Unknown 5xxx instruction
$A98    $150A   JP       $50A            ; Jump to 50A
$A9A    $81AE   SHL      V1              ; V1 <<= 1, VF = MSB
$A9C    $6945   LD       V9, #45         ; Load 69 into V9
$A9E    $C89D   RND      V8, #9D         ; V8 = random & 9D
$AA0    $1135   JP       $135            ; Jump to 135
$AA2    $DF6C   DRW      VF, V6, #C      ; Draw 12-byte sprite at VF, V6
$AA4    $F411   UNKNOWN  F411            ; Unknown Fxxx instruction
$AA6    $4FE9   SNE      VF, #E9         ; Skip if VF != 233
$AA8    $7E71   ADD      VE, #71         ; Add 113 to VE
$AAA    $7CB5   ADD      VC, #B5         ; Add 181 to VC
$AAC    $578A   UNKNOWN  $578A           ; Unknown 5xxx instruction
$AAE    $EEA1   SKNP     VE              ; Skip if key VE not pressed
$AB0    $C2A8   RND      V2, #A8         ; V2 = random & A8
$AB2    $3530   SE       V5, #30         ; Skip if V5 == 48
$AB4    $DC5F   DRW      VC, V5, #F      ; Draw 15-byte sprite at VC, V5
$AB6    $DA21   DRW      VA, V2, #1      ; Draw 1-byte sprite at VA, V2
$AB8    $AB54   LD       I, $B54         ; Load B54 into I
$ABA    $D736   DRW      V7, V3, #6      ; Draw 6-byte sprite at V7, V3
$ABC    $AD17   LD       I, $D17         ; Load D17 into I
$ABE    $C00D   RND      V0, #0D         ; V0 = random & 0D
$AC0    $EE04   UNKNOWN  $EE04           ; Unknown Exxx instruction
$AC2    $0928   SYS      $928            ; System call to 928
$AC4    $D923   DRW      V9, V2, #3      ; Draw 3-byte sprite at V9, V2
$AC6    $C975   RND      V9, #75         ; V9 = random & 75
$AC8    $85AA   UNKNOWN  85AA            ; Unknown 8xxx instruction
$ACA    $9498   UNKNOWN  $9498           ; Unknown 9xxx instruction
$ACC    $73C8   ADD      V3, #C8         ; Add 200 to V3
$ACE    $C0B1   RND      V0, #B1         ; V0 = random & B1
$AD0    $BCF0   JP       V0, $CF0        ; Jump to V0 + CF0
$AD2    $EE4C   UNKNOWN  $EE4C           ; Unknown Exxx instruction
$AD4    $626F   LD       V2, #6F         ; Load 111 into V2
$AD6    $78BB   ADD      V8, #BB         ; Add 187 to V8
$AD8    $6AE3   LD       VA, #E3         ; Load 227 into VA
$ADA    $7BCE   ADD      VB, #CE         ; Add 206 to VB
$ADC    $8414   ADD      V4, V1          ; V4 += V1, VF = carry
$ADE    $E864   UNKNOWN  $E864           ; Unknown Exxx instruction
$AE0    $D0F2   DRW      V0, VF, #2      ; Draw 2-byte sprite at V0, VF
$AE2    $E05B   UNKNOWN  $E05B           ; Unknown Exxx instruction
$AE4    $6BD3   LD       VB, #D3         ; Load 211 into VB
$AE6    $E92B   UNKNOWN  $E92B           ; Unknown Exxx instruction
$AE8    $3E37   SE       VE, #37         ; Skip if VE == 55
$AEA    $52A5   UNKNOWN  $52A5           ; Unknown 5xxx instruction
$AEC    $9158   UNKNOWN  $9158           ; Unknown 9xxx instruction
$AEE    $E698   UNKNOWN  $E698           ; Unknown Exxx instruction
$AF0    $ED7D   UNKNOWN  $ED7D           ; Unknown Exxx instruction
$AF2    $0801   SYS      $801            ; System call to 801
$AF4    $F732   UNKNOWN  F732            ; Unknown Fxxx instruction
$AF6    $EBA2   UNKNOWN  $EBA2           ; Unknown Exxx instruction
$AF8    $6EE2   LD       VE, #E2         ; Load 226 into VE
$AFA    $31C8   SE       V1, #C8         ; Skip if V1 == 200
$AFC    $1007   JP       $007            ; Jump to 007
$AFE    $FA2E   UNKNOWN  FA2E            ; Unknown Fxxx instruction
$B00    $D264   DRW      V2, V6, #4      ; Draw 4-byte sprite at V2, V6
$B02    $6C6B   LD       VC, #6B         ; Load 107 into VC
$B04    $DF86   DRW      VF, V8, #6      ; Draw 6-byte sprite at VF, V8
$B06    $91F5   UNKNOWN  $91F5           ; Unknown 9xxx instruction
$B08    $C301   RND      V3, #01         ; V3 = random & 01
$B0A    $91F8   UNKNOWN  $91F8           ; Unknown 9xxx instruction
$B0C    $49FB   SNE      V9, #FB         ; Skip if V9 != 251
$B0E    $2D28   CALL     $D28            ; Call subroutine at D28
$B10    $59E1   UNKNOWN  $59E1           ; Unknown 5xxx instruction
$B12    $1040   JP       $040            ; Jump to 040
$B14    $7088   ADD      V0, #88         ; Add 136 to V0
$B16    $C8C6   RND      V8, #C6         ; V8 = random & C6
$B18    $2149   CALL     $149            ; Call subroutine at 149
$B1A    $6689   LD       V6, #89         ; Load 137 into V6
$B1C    $FCD5   UNKNOWN  FCD5            ; Unknown Fxxx instruction
$B1E    $8582   AND      V5, V8          ; V5 &= V8
$B20    $CD98   RND      VD, #98         ; VD = random & 98
$B22    $690F   LD       V9, #0F         ; Load 15 into V9
$B24    $653D   LD       V5, #3D         ; Load 61 into V5
$B26    $9235   UNKNOWN  $9235           ; Unknown 9xxx instruction
$B28    $8544   ADD      V5, V4          ; V5 += V4, VF = carry
$B2A    $19B4   JP       $9B4            ; Jump to 9B4
$B2C    $44E6   SNE      V4, #E6         ; Skip if V4 != 230
$B2E    $EC82   UNKNOWN  $EC82           ; Unknown Exxx instruction
$B30    $5008   UNKNOWN  $5008           ; Unknown 5xxx instruction
$B32    $19C1   JP       $9C1            ; Jump to 9C1
$B34    $ACEF   LD       I, $CEF         ; Load CEF into I
$B36    $93BC   UNKNOWN  $93BC           ; Unknown 9xxx instruction
$B38    $2B3D   CALL     $B3D            ; Call subroutine at B3D
$B3A    $E29D   UNKNOWN  $E29D           ; Unknown Exxx instruction
$B3C    $11B1   JP       $1B1            ; Jump to 1B1
$B3E    $EBE4   UNKNOWN  $EBE4           ; Unknown Exxx instruction
$B40    $5714   UNKNOWN  $5714           ; Unknown 5xxx instruction
$B42    $D28D   DRW      V2, V8, #D      ; Draw 13-byte sprite at V2, V8
$B44    $ED6E   UNKNOWN  $ED6E           ; Unknown Exxx instruction
$B46    $4473   SNE      V4, #73         ; Skip if V4 != 115
$B48    $FB20   UNKNOWN  FB20            ; Unknown Fxxx instruction
$B4A    $8CCE   SHL      VC              ; VC <<= 1, VF = MSB
$B4C    $663F   LD       V6, #3F         ; Load 63 into V6
$B4E    $ACF0   LD       I, $CF0         ; Load CF0 into I
$B50    $5FBE   UNKNOWN  $5FBE           ; Unknown 5xxx instruction
$B52    $CE39   RND      VE, #39         ; VE = random & 39
$B54    $ACA9   LD       I, $CA9         ; Load CA9 into I
$B56    $BF7C   JP       V0, $F7C        ; Jump to V0 + F7C
$B58    $48B6   SNE      V8, #B6         ; Skip if V8 != 182
$B5A    $8F42   AND      VF, V4          ; VF &= V4
$B5C    $3FE0   SE       VF, #E0         ; Skip if VF == 224
$B5E    $9737   UNKNOWN  $9737           ; Unknown 9xxx instruction
$B60    $E30B   UNKNOWN  $E30B           ; Unknown Exxx instruction
$B62    $FDE3   UNKNOWN  FDE3            ; Unknown Fxxx instruction
$B64    $71B4   ADD      V1, #B4         ; Add 180 to V1
$B66    $A774   LD       I, $774         ; Load 774 into I
$B68    $85CF   UNKNOWN  85CF            ; Unknown 8xxx instruction
$B6A    $2A40   CALL     $A40            ; Call subroutine at A40
$B6C    $B035   JP       V0, $035        ; Jump to V0 + 035
$B6E    $6FCD   LD       VF, #CD         ; Load 205 into VF
$B70    $61DA   LD       V1, #DA         ; Load 218 into V1
$B72    $7BEF   ADD      VB, #EF         ; Add 239 to VB
$B74    $3A1F   SE       VA, #1F         ; Skip if VA == 31
$B76    $2952   CALL     $952            ; Call subroutine at 952
$B78    $E3FA   UNKNOWN  $E3FA           ; Unknown Exxx instruction
$B7A    $4810   SNE      V8, #10         ; Skip if V8 != 16
$B7C    $5FC7   UNKNOWN  $5FC7           ; Unknown 5xxx instruction
$B7E    $80DF   UNKNOWN  80DF            ; Unknown 8xxx instruction
$B80    $5A85   UNKNOWN  $5A85           ; Unknown 5xxx instruction
$B82    $C955   RND      V9, #55         ; V9 = random & 55
$B84    $DA2D   DRW      VA, V2, #D      ; Draw 13-byte sprite at VA, V2
$B86    $DA07   DRW      VA, V0, #7      ; Draw 7-byte sprite at VA, V0
$B88    $3CFC   SE       VC, #FC         ; Skip if VC == 252
$B8A    $0908   SYS      $908            ; System call to 908
$B8C    $E1BB   UNKNOWN  $E1BB           ; Unknown Exxx instruction
$B8E    $6083   LD       V0, #83         ; Load 131 into V0
$B90    $C68B   RND      V6, #8B         ; V6 = random & 8B
$B92    $8200   LD       V2, V0          ; V2 = V0
$B94    $F25A   UNKNOWN  F25A            ; Unknown Fxxx instruction
$B96    $F655   LD       [I], V6         ; Store V0-V6 at I
$B98    $0956   SYS      $956            ; System call to 956
$B9A    $8FCA   UNKNOWN  8FCA            ; Unknown 8xxx instruction
$B9C    $5A57   UNKNOWN  $5A57           ; Unknown 5xxx instruction
$B9E    $E6D5   UNKNOWN  $E6D5           ; Unknown Exxx instruction
$BA0    $FA07   LD       VA, DT          ; VA = delay timer
$BA2    $4AFD   SNE      VA, #FD         ; Skip if VA != 253
$BA4    $4437   SNE      V4, #37         ; Skip if V4 != 55
$BA6    $E5A0   UNKNOWN  $E5A0           ; Unknown Exxx instruction
$BA8    $1408   JP       $408            ; Jump to 408
$BAA    $D42F   DRW      V4, V2, #F      ; Draw 15-byte sprite at V4, V2
$BAC    $6350   LD       V3, #50         ; Load 80 into V3
$BAE    $B5D7   JP       V0, $5D7        ; Jump to V0 + 5D7
$BB0    $A878   LD       I, $878         ; Load 878 into I
$BB2    $ADD6   LD       I, $DD6         ; Load DD6 into I
$BB4    $AA4E   LD       I, $A4E         ; Load A4E into I
$BB6    $525B   UNKNOWN  $525B           ; Unknown 5xxx instruction
$BB8    $CF28   RND      VF, #28         ; VF = random & 28
$BBA    $7456   ADD      V4, #56         ; Add 86 to V4
$BBC    $3E0D   SE       VE, #0D         ; Skip if VE == 13
$BBE    $8A03   XOR      VA, V0          ; VA ^= V0
$BC0    $4F8D   SNE      VF, #8D         ; Skip if VF != 141
$BC2    $5F0D   UNKNOWN  $5F0D           ; Unknown 5xxx instruction
$BC4    $3D4B   SE       VD, #4B         ; Skip if VD == 75
$BC6    $53EA   UNKNOWN  $53EA           ; Unknown 5xxx instruction
$BC8    $A0D9   LD       I, $0D9         ; Load 0D9 into I
$BCA    $C3F0   RND      V3, #F0         ; V3 = random & F0
$BCC    $9A4D   UNKNOWN  $9A4D           ; Unknown 9xxx instruction
$BCE    $0E0C   SYS      $E0C            ; System call to E0C
$BD0    $3A8B   SE       VA, #8B         ; Skip if VA == 139
$BD2    $DA6F   DRW      VA, V6, #F      ; Draw 15-byte sprite at VA, V6
$BD4    $2485   CALL     $485            ; Call subroutine at 485
$BD6    $329A   SE       V2, #9A         ; Skip if V2 == 154
$BD8    $BA8E   JP       V0, $A8E        ; Jump to V0 + A8E
$BDA    $CC8C   RND      VC, #8C         ; VC = random & 8C
$BDC    $352F   SE       V5, #2F         ; Skip if V5 == 47
$BDE    $F938   UNKNOWN  F938            ; Unknown Fxxx instruction
$BE0    $8622   AND      V6, V2          ; V6 &= V2
$BE2    $99FB   UNKNOWN  $99FB           ; Unknown 9xxx instruction
$BE4    $56E9   UNKNOWN  $56E9           ; Unknown 5xxx instruction
$BE6    $1D4B   JP       $D4B            ; Jump to D4B
$BE8    $56E6   UNKNOWN  $56E6           ; Unknown 5xxx instruction
$BEA    $50B2   UNKNOWN  $50B2           ; Unknown 5xxx instruction
$BEC    $8399   UNKNOWN  8399            ; Unknown 8xxx instruction
$BEE    $2D31   CALL     $D31            ; Call subroutine at D31
$BF0    $D5DB   DRW      V5, VD, #B      ; Draw 11-byte sprite at V5, VD
$BF2    $5DBF   UNKNOWN  $5DBF           ; Unknown 5xxx instruction
$BF4    $1BDF   JP       $BDF            ; Jump to BDF
$BF6    $4643   SNE      V6, #43         ; Skip if V6 != 67
$BF8    $A3F8   LD       I, $3F8         ; Load 3F8 into I
$BFA    $FD79   UNKNOWN  FD79            ; Unknown Fxxx instruction
$BFC    $DE8E   DRW      VE, V8, #E      ; Draw 14-byte sprite at VE, V8
$BFE    $2ED3   CALL     $ED3            ; Call subroutine at ED3
$C00    $EBBC   UNKNOWN  $EBBC           ; Unknown Exxx instruction
$C02    $D363   DRW      V3, V6, #3      ; Draw 3-byte sprite at V3, V6
$C04    $357F   SE       V5, #7F         ; Skip if V5 == 127
$C06    $3D3C   SE       VD, #3C         ; Skip if VD == 60
$C08    $D06E   DRW      V0, V6, #E      ; Draw 14-byte sprite at V0, V6
$C0A    $797C   ADD      V9, #7C         ; Add 124 to V9
$C0C    $C033   RND      V0, #33         ; V0 = random & 33
$C0E    $5A61   UNKNOWN  $5A61           ; Unknown 5xxx instruction
$C10    $BA99   JP       V0, $A99        ; Jump to V0 + A99
$C12    $963B   UNKNOWN  $963B           ; Unknown 9xxx instruction
$C14    $2F68   CALL     $F68            ; Call subroutine at F68
$C16    $3351   SE       V3, #51         ; Skip if V3 == 81
$C18    $3DE3   SE       VD, #E3         ; Skip if VD == 227
$C1A    $F237   UNKNOWN  F237            ; Unknown Fxxx instruction
$C1C    $6DBC   LD       VD, #BC         ; Load 188 into VD
$C1E    $6B4A   LD       VB, #4A         ; Load 74 into VB
$C20    $12FC   JP       $2FC            ; Jump to 2FC
$C22    $C6F1   RND      V6, #F1         ; V6 = random & F1
$C24    $D53A   DRW      V5, V3, #A      ; Draw 10-byte sprite at V5, V3
$C26    $D00B   DRW      V0, V0, #B      ; Draw 11-byte sprite at V0, V0
$C28    $17B0   JP       $7B0            ; Jump to 7B0
$C2A    $1DF3   JP       $DF3            ; Jump to DF3
$C2C    $414A   SNE      V1, #4A         ; Skip if V1 != 74
$C2E    $74CD   ADD      V4, #CD         ; Add 205 to V4
$C30    $E57F   UNKNOWN  $E57F           ; Unknown Exxx instruction
$C32    $2B99   CALL     $B99            ; Call subroutine at B99
$C34    $A806   LD       I, $806         ; Load 806 into I
$C36    $CF3C   RND      VF, #3C         ; VF = random & 3C
$C38    $D9B8   DRW      V9, VB, #8      ; Draw 8-byte sprite at V9, VB
$C3A    $015B   SYS      $15B            ; System call to 15B
$C3C    $32BC   SE       V2, #BC         ; Skip if V2 == 188
$C3E    $503C   UNKNOWN  $503C           ; Unknown 5xxx instruction
$C40    $21A6   CALL     $1A6            ; Call subroutine at 1A6
$C42    $FE20   UNKNOWN  FE20            ; Unknown Fxxx instruction
$C44    $D13D   DRW      V1, V3, #D      ; Draw 13-byte sprite at V1, V3
$C46    $A37A   LD       I, $37A         ; Load 37A into I
$C48    $9FD6   UNKNOWN  $9FD6           ; Unknown 9xxx instruction
$C4A    $9598   UNKNOWN  $9598           ; Unknown 9xxx instruction
$C4C    $49BF   SNE      V9, #BF         ; Skip if V9 != 191
$C4E    $C0A1   RND      V0, #A1         ; V0 = random & A1
$C50    $7925   ADD      V9, #25         ; Add 37 to V9
$C52    $092D   SYS      $92D            ; System call to 92D
$C54    $E9C7   UNKNOWN  $E9C7           ; Unknown Exxx instruction
$C56    $F8A2   UNKNOWN  F8A2            ; Unknown Fxxx instruction
$C58    $4A63   SNE      VA, #63         ; Skip if VA != 99
$C5A    $2815   CALL     $815            ; Call subroutine at 815
$C5C    $4220   SNE      V2, #20         ; Skip if V2 != 32
$C5E    $292C   CALL     $92C            ; Call subroutine at 92C
$C60    $02E3   SYS      $2E3            ; System call to 2E3
$C62    $03EE   SYS      $3EE            ; System call to 3EE
$C64    $623E   LD       V2, #3E         ; Load 62 into V2
$C66    $B66C   JP       V0, $66C        ; Jump to V0 + 66C
$C68    $16BB   JP       $6BB            ; Jump to 6BB
$C6A    $14FE   JP       $4FE            ; Jump to 4FE
$C6C    $F34C   UNKNOWN  F34C            ; Unknown Fxxx instruction
$C6E    $0CDE   SYS      $CDE            ; System call to CDE
$C70    $D6F7   DRW      V6, VF, #7      ; Draw 7-byte sprite at V6, VF
$C72    $909E   UNKNOWN  $909E           ; Unknown 9xxx instruction
$C74    $CF8F   RND      VF, #8F         ; VF = random & 8F
$C76    $42EE   SNE      V2, #EE         ; Skip if V2 != 238
$C78    $A96E   LD       I, $96E         ; Load 96E into I
$C7A    $63F1   LD       V3, #F1         ; Load 241 into V3
$C7C    $1739   JP       $739            ; Jump to 739
$C7E    $ABB6   LD       I, $BB6         ; Load BB6 into I
$C80    $01FA   SYS      $1FA            ; System call to 1FA
$C82    $6D55   LD       VD, #55         ; Load 85 into VD
$C84    $2469   CALL     $469            ; Call subroutine at 469
$C86    $F07A   UNKNOWN  F07A            ; Unknown Fxxx instruction
$C88    $A279   LD       I, $279         ; Load 279 into I
$C8A    $5DA5   UNKNOWN  $5DA5           ; Unknown 5xxx instruction
$C8C    $3253   SE       V2, #53         ; Skip if V2 == 83
$C8E    $BB7A   JP       V0, $B7A        ; Jump to V0 + B7A
$C90    $060F   SYS      $60F            ; System call to 60F
$C92    $0D60   SYS      $D60            ; System call to D60
$C94    $517A   UNKNOWN  $517A           ; Unknown 5xxx instruction
$C96    $0E19   SYS      $E19            ; System call to E19
$C98    $7138   ADD      V1, #38         ; Add 56 to V1
$C9A    $29D7   CALL     $9D7            ; Call subroutine at 9D7
$C9C    $4BA5   SNE      VB, #A5         ; Skip if VB != 165
$C9E    $61C4   LD       V1, #C4         ; Load 196 into V1
$CA0    $474E   SNE      V7, #4E         ; Skip if V7 != 78
$CA2    $81A2   AND      V1, VA          ; V1 &= VA
$CA4    $043A   SYS      $43A            ; System call to 43A
$CA6    $5C79   UNKNOWN  $5C79           ; Unknown 5xxx instruction
$CA8    $8511   OR       V5, V1          ; V5 |= V1
$CAA    $2330   CALL     $330            ; Call subroutine at 330
$CAC    $05E3   SYS      $5E3            ; System call to 5E3
$CAE    $7677   ADD      V6, #77         ; Add 119 to V6
$CB0    $71B8   ADD      V1, #B8         ; Add 184 to V1
$CB2    $0B03   SYS      $B03            ; System call to B03
$CB4    $563C   UNKNOWN  $563C           ; Unknown 5xxx instruction
$CB6    $F4EA   UNKNOWN  F4EA            ; Unknown Fxxx instruction
$CB8    $8357   SUBN     V3, V5          ; V3 = V5 - V3, VF = !borrow
$CBA    $95BB   UNKNOWN  $95BB           ; Unknown 9xxx instruction
$CBC    $6882   LD       V8, #82         ; Load 130 into V8
$CBE    $10C4   JP       $0C4            ; Jump to 0C4
$CC0    $3631   SE       V6, #31         ; Skip if V6 == 49
$CC2    $F0D0   UNKNOWN  F0D0            ; Unknown Fxxx instruction
$CC4    $AAB2   LD       I, $AB2         ; Load AB2 into I
$CC6    $7CCB   ADD      VC, #CB         ; Add 203 to VC
$CC8    $DCFC   DRW      VC, VF, #C      ; Draw 12-byte sprite at VC, VF
$CCA    $869A   UNKNOWN  869A            ; Unknown 8xxx instruction
$CCC    $8D7F   UNKNOWN  8D7F            ; Unknown 8xxx instruction
$CCE    $D3E7   DRW      V3, VE, #7      ; Draw 7-byte sprite at V3, VE
$CD0    $FE2A   UNKNOWN  FE2A            ; Unknown Fxxx instruction
$CD2    $845C   UNKNOWN  845C            ; Unknown 8xxx instruction
$CD4    $FD6C   UNKNOWN  FD6C            ; Unknown Fxxx instruction
$CD6    $0466   SYS      $466            ; System call to 466
$CD8    $7FCF   ADD      VF, #CF         ; Add 207 to VF
$CDA    $FF6A   UNKNOWN  FF6A            ; Unknown Fxxx instruction
$CDC    $8E80   LD       VE, V8          ; VE = V8
$CDE    $928E   UNKNOWN  $928E           ; Unknown 9xxx instruction
$CE0    $DD60   DRW      VD, V6, #0      ; Draw 0-byte sprite at VD, V6
$CE2    $95B4   UNKNOWN  $95B4           ; Unknown 9xxx instruction
$CE4    $06F0   SYS      $6F0            ; System call to 6F0
$CE6    $FDB1   UNKNOWN  FDB1            ; Unknown Fxxx instruction
$CE8    $1DC4   JP       $DC4            ; Jump to DC4
$CEA    $40B9   SNE      V0, #B9         ; Skip if V0 != 185
$CEC    $EB6E   UNKNOWN  $EB6E           ; Unknown Exxx instruction
$CEE    $C76C   RND      V7, #6C         ; V7 = random & 6C
$CF0    $F868   UNKNOWN  F868            ; Unknown Fxxx instruction
$CF2    $ED83   UNKNOWN  $ED83           ; Unknown Exxx instruction
$CF4    $029F   SYS      $29F            ; System call to 29F
$CF6    $C069   RND      V0, #69         ; V0 = random & 69
$CF8    $9D3C   UNKNOWN  $9D3C           ; Unknown 9xxx instruction
$CFA    $4D1B   SNE      VD, #1B         ; Skip if VD != 27
$CFC    $3811   SE       V8, #11         ; Skip if V8 == 17
$CFE    $1B67   JP       $B67            ; Jump to B67
$D00    $D27E   DRW      V2, V7, #E      ; Draw 14-byte sprite at V2, V7
$D02    $3DAB   SE       VD, #AB         ; Skip if VD == 171
$D04    $9B02   UNKNOWN  $9B02           ; Unknown 9xxx instruction
$D06    $D9D2   DRW      V9, VD, #2      ; Draw 2-byte sprite at V9, VD
$D08    $578F   UNKNOWN  $578F           ; Unknown 5xxx instruction
$D0A    $1368   JP       $368            ; Jump to 368
$D0C    $14A7   JP       $4A7            ; Jump to 4A7
$D0E    $17D9   JP       $7D9            ; Jump to 7D9
$D10    $CCCC   RND      VC, #CC         ; VC = random & CC
$D12    $C94A   RND      V9, #4A         ; V9 = random & 4A
$D14    $B2FF   JP       V0, $2FF        ; Jump to V0 + 2FF
$D16    $C3B2   RND      V3, #B2         ; V3 = random & B2
$D18    $FCBC   UNKNOWN  FCBC            ; Unknown Fxxx instruction
$D1A    $A381   LD       I, $381         ; Load 381 into I
$D1C    $E303   UNKNOWN  $E303           ; Unknown Exxx instruction
$D1E    $689F   LD       V8, #9F         ; Load 159 into V8
$D20    $B032   JP       V0, $032        ; Jump to V0 + 032
$D22    $E7B1   UNKNOWN  $E7B1           ; Unknown Exxx instruction
$D24    $8D94   ADD      VD, V9          ; VD += V9, VF = carry
$D26    $E03D   UNKNOWN  $E03D           ; Unknown Exxx instruction
$D28    $E0D8   UNKNOWN  $E0D8           ; Unknown Exxx instruction
$D2A    $5A1C   UNKNOWN  $5A1C           ; Unknown 5xxx instruction
$D2C    $4A77   SNE      VA, #77         ; Skip if VA != 119
$D2E    $0B67   SYS      $B67            ; System call to B67
$D30    $DB75   DRW      VB, V7, #5      ; Draw 5-byte sprite at VB, V7
$D32    $EA84   UNKNOWN  $EA84           ; Unknown Exxx instruction
$D34    $C26E   RND      V2, #6E         ; V2 = random & 6E
$D36    $4F4E   SNE      VF, #4E         ; Skip if VF != 78
$D38    $84D2   AND      V4, VD          ; V4 &= VD
$D3A    $B7EB   JP       V0, $7EB        ; Jump to V0 + 7EB
$D3C    $EB1D   UNKNOWN  $EB1D           ; Unknown Exxx instruction
$D3E    $7ADC   ADD      VA, #DC         ; Add 220 to VA
$D40    $2C81   CALL     $C81            ; Call subroutine at C81
$D42    $242B   CALL     $42B            ; Call subroutine at 42B
$D44    $BA4F   JP       V0, $A4F        ; Jump to V0 + A4F
$D46    $B3D2   JP       V0, $3D2        ; Jump to V0 + 3D2
$D48    $117E   JP       $17E            ; Jump to 17E
$D4A    $3AEB   SE       VA, #EB         ; Skip if VA == 235
$D4C    $0DEB   SYS      $DEB            ; System call to DEB
$D4E    $EE5D   UNKNOWN  $EE5D           ; Unknown Exxx instruction
$D50    $2F0E   CALL     $F0E            ; Call subroutine at F0E
$D52    $3E3D   SE       VE, #3D         ; Skip if VE == 61
$D54    $783F   ADD      V8, #3F         ; Add 63 to V8
$D56    $DACE   DRW      VA, VC, #E      ; Draw 14-byte sprite at VA, VC
$D58    $DFC2   DRW      VF, VC, #2      ; Draw 2-byte sprite at VF, VC
$D5A    $20F5   CALL     $0F5            ; Call subroutine at 0F5
$D5C    $22BA   CALL     $2BA            ; Call subroutine at 2BA
$D5E    $B726   JP       V0, $726        ; Jump to V0 + 726
$D60    $723C   ADD      V2, #3C         ; Add 60 to V2
$D62    $5EBB   UNKNOWN  $5EBB           ; Unknown 5xxx instruction
$D64    $A1CE   LD       I, $1CE         ; Load 1CE into I
$D66    $E422   UNKNOWN  $E422           ; Unknown Exxx instruction
$D68    $C453   RND      V4, #53         ; V4 = random & 53
$D6A    $C8F2   RND      V8, #F2         ; V8 = random & F2
$D6C    $17B9   JP       $7B9            ; Jump to 7B9
$D6E    $0EF2   SYS      $EF2            ; System call to EF2
$D70    $0176   SYS      $176            ; System call to 176
$D72    $D950   DRW      V9, V5, #0      ; Draw 0-byte sprite at V9, V5
$D74    $ED89   UNKNOWN  $ED89           ; Unknown Exxx instruction
$D76    $45FF   SNE      V5, #FF         ; Skip if V5 != 255
$D78    $816B   UNKNOWN  816B            ; Unknown 8xxx instruction
$D7A    $2FE5   CALL     $FE5            ; Call subroutine at FE5
$D7C    $D8B4   DRW      V8, VB, #4      ; Draw 4-byte sprite at V8, VB
$D7E    $7EC6   ADD      VE, #C6         ; Add 198 to VE
$D80    $DA7E   DRW      VA, V7, #E      ; Draw 14-byte sprite at VA, V7
$D82    $D493   DRW      V4, V9, #3      ; Draw 3-byte sprite at V4, V9
$D84    $A72C   LD       I, $72C         ; Load 72C into I
$D86    $7958   ADD      V9, #58         ; Add 88 to V9
$D88    $752B   ADD      V5, #2B         ; Add 43 to V5
$D8A    $2D2A   CALL     $D2A            ; Call subroutine at D2A
$D8C    $B654   JP       V0, $654        ; Jump to V0 + 654
$D8E    $6C41   LD       VC, #41         ; Load 65 into VC
$D90    $D62C   DRW      V6, V2, #C      ; Draw 12-byte sprite at V6, V2
$D92    $8170   LD       V1, V7          ; V1 = V7
$D94    $5717   UNKNOWN  $5717           ; Unknown 5xxx instruction
$D96    $468C   SNE      V6, #8C         ; Skip if V6 != 140
$D98    $F3B4   UNKNOWN  F3B4            ; Unknown Fxxx instruction
$D9A    $B30F   JP       V0, $30F        ; Jump to V0 + 30F
$D9C    $41F1   SNE      V1, #F1         ; Skip if V1 != 241
$D9E    $B033   JP       V0, $033        ; Jump to V0 + 033
$DA0    $C7A7   RND      V7, #A7         ; V7 = random & A7
$DA2    $2AF9   CALL     $AF9            ; Call subroutine at AF9
$DA4    $ED80   UNKNOWN  $ED80           ; Unknown Exxx instruction
$DA6    $210E   CALL     $10E            ; Call subroutine at 10E
$DA8    $5ED5   UNKNOWN  $5ED5           ; Unknown 5xxx instruction
$DAA    $54BF   UNKNOWN  $54BF           ; Unknown 5xxx instruction
$DAC    $353B   SE       V5, #3B         ; Skip if V5 == 59
$DAE    $C859   RND      V8, #59         ; V8 = random & 59
$DB0    $5573   UNKNOWN  $5573           ; Unknown 5xxx instruction
$DB2    $C2BC   RND      V2, #BC         ; V2 = random & BC
$DB4    $D61A   DRW      V6, V1, #A      ; Draw 10-byte sprite at V6, V1
$DB6    $B39B   JP       V0, $39B        ; Jump to V0 + 39B
$DB8    $333E   SE       V3, #3E         ; Skip if V3 == 62
$DBA    $CCA8   RND      VC, #A8         ; VC = random & A8
$DBC    $2681   CALL     $681            ; Call subroutine at 681
$DBE    $E6ED   UNKNOWN  $E6ED           ; Unknown Exxx instruction
$DC0    $AF05   LD       I, $F05         ; Load F05 into I
$DC2    $9CD4   UNKNOWN  $9CD4           ; Unknown 9xxx instruction
$DC4    $694B   LD       V9, #4B         ; Load 75 into V9
$DC6    $A653   LD       I, $653         ; Load 653 into I
$DC8    $4FA6   SNE      VF, #A6         ; Skip if VF != 166
$DCA    $25FA   CALL     $5FA            ; Call subroutine at 5FA
$DCC    $83CA   UNKNOWN  83CA            ; Unknown 8xxx instruction
$DCE    $05F5   SYS      $5F5            ; System call to 5F5
$DD0    $021B   SYS      $21B            ; System call to 21B
$DD2    $FA96   UNKNOWN  FA96            ; Unknown Fxxx instruction
$DD4    $1AD0   JP       $AD0            ; Jump to AD0
$DD6    $948A   UNKNOWN  $948A           ; Unknown 9xxx instruction
$DD8    $40F0   SNE      V0, #F0         ; Skip if V0 != 240
$DDA    $454E   SNE      V5, #4E         ; Skip if V5 != 78
$DDC    $F920   UNKNOWN  F920            ; Unknown Fxxx instruction
$DDE    $F10C   UNKNOWN  F10C            ; Unknown Fxxx instruction
$DE0    $8A5D   UNKNOWN  8A5D            ; Unknown 8xxx instruction
$DE2    $AFA4   LD       I, $FA4         ; Load FA4 into I
$DE4    $E22A   UNKNOWN  $E22A           ; Unknown Exxx instruction
$DE6    $BADD   JP       V0, $ADD        ; Jump to V0 + ADD
$DE8    $384B   SE       V8, #4B         ; Skip if V8 == 75
$DEA    $ED35   UNKNOWN  $ED35           ; Unknown Exxx instruction
$DEC    $01B7   SYS      $1B7            ; System call to 1B7
$DEE    $E7F5   UNKNOWN  $E7F5           ; Unknown Exxx instruction
$DF0    $82C0   LD       V2, VC          ; V2 = VC
$DF2    $5AD5   UNKNOWN  $5AD5           ; Unknown 5xxx instruction
$DF4    $6432   LD       V4, #32         ; Load 50 into V4
$DF6    $9F26   UNKNOWN  $9F26           ; Unknown 9xxx instruction
$DF8    $BA4D   JP       V0, $A4D        ; Jump to V0 + A4D
$DFA    $0B4E   SYS      $B4E            ; System call to B4E
$DFC    $E154   UNKNOWN  $E154           ; Unknown Exxx instruction
$DFE    $8993   XOR      V9, V9          ; V9 ^= V9
$E00    $2FE0   CALL     $FE0            ; Call subroutine at FE0
$E02    $2976   CALL     $976            ; Call subroutine at 976
$E04    $3997   SE       V9, #97         ; Skip if V9 == 151
$E06    $22F5   CALL     $2F5            ; Call subroutine at 2F5
$E08    $458E   SNE      V5, #8E         ; Skip if V5 != 142
$E0A    $BD79   JP       V0, $D79        ; Jump to V0 + D79
$E0C    $27E9   CALL     $7E9            ; Call subroutine at 7E9
$E0E    $768F   ADD      V6, #8F         ; Add 143 to V6
$E10    $86AD   UNKNOWN  86AD            ; Unknown 8xxx instruction
$E12    $7005   ADD      V0, #05         ; Add 5 to V0
$E14    $E5C5   UNKNOWN  $E5C5           ; Unknown Exxx instruction
$E16    $BAA9   JP       V0, $AA9        ; Jump to V0 + AA9
$E18    $EFB6   UNKNOWN  $EFB6           ; Unknown Exxx instruction
$E1A    $3896   SE       V8, #96         ; Skip if V8 == 150
$E1C    $FC30   UNKNOWN  FC30            ; Unknown Fxxx instruction
$E1E    $870C   UNKNOWN  870C            ; Unknown 8xxx instruction
$E20    $77D3   ADD      V7, #D3         ; Add 211 to V7
$E22    $F0F3   UNKNOWN  F0F3            ; Unknown Fxxx instruction
$E24    $85F7   SUBN     V5, VF          ; V5 = VF - V5, VF = !borrow
$E26    $A2D1   LD       I, $2D1         ; Load 2D1 into I
$E28    $DA80   DRW      VA, V8, #0      ; Draw 0-byte sprite at VA, V8
$E2A    $A147   LD       I, $147         ; Load 147 into I
$E2C    $6EAD   LD       VE, #AD         ; Load 173 into VE
$E2E    $E70B   UNKNOWN  $E70B           ; Unknown Exxx instruction
$E30    $B3A4   JP       V0, $3A4        ; Jump to V0 + 3A4
$E32    $50B0   SE       V0, VB          ; Skip if V0 == VB
$E34    $C7A9   RND      V7, #A9         ; V7 = random & A9
$E36    $FD3C   UNKNOWN  FD3C            ; Unknown Fxxx instruction
$E38    $DD10   DRW      VD, V1, #0      ; Draw 0-byte sprite at VD, V1
$E3A    $E56E   UNKNOWN  $E56E           ; Unknown Exxx instruction
$E3C    $E2EF   UNKNOWN  $E2EF           ; Unknown Exxx instruction
$E3E    $B7FA   JP       V0, $7FA        ; Jump to V0 + 7FA
$E40    $4085   SNE      V0, #85         ; Skip if V0 != 133
$E42    $2BB2   CALL     $BB2            ; Call subroutine at BB2
$E44    $B644   JP       V0, $644        ; Jump to V0 + 644
$E46    $B565   JP       V0, $565        ; Jump to V0 + 565
$E48    $D0CB   DRW      V0, VC, #B      ; Draw 11-byte sprite at V0, VC
$E4A    $FCB3   UNKNOWN  FCB3            ; Unknown Fxxx instruction
$E4C    $6570   LD       V5, #70         ; Load 112 into V5
$E4E    $0DA6   SYS      $DA6            ; System call to DA6
$E50    $6CDD   LD       VC, #DD         ; Load 221 into VC
$E52    $3263   SE       V2, #63         ; Skip if V2 == 99
$E54    $D80E   DRW      V8, V0, #E      ; Draw 14-byte sprite at V8, V0
$E56    $0E58   SYS      $E58            ; System call to E58
$E58    $E4B8   UNKNOWN  $E4B8           ; Unknown Exxx instruction
$E5A    $3747   SE       V7, #47         ; Skip if V7 == 71
$E5C    $3A33   SE       VA, #33         ; Skip if VA == 51
$E5E    $2350   CALL     $350            ; Call subroutine at 350
$E60    $4838   SNE      V8, #38         ; Skip if V8 != 56
$E62    $096D   SYS      $96D            ; System call to 96D
$E64    $D1AA   DRW      V1, VA, #A      ; Draw 10-byte sprite at V1, VA
$E66    $D540   DRW      V5, V4, #0      ; Draw 0-byte sprite at V5, V4
$E68    $3950   SE       V9, #50         ; Skip if V9 == 80
$E6A    $57DB   UNKNOWN  $57DB           ; Unknown 5xxx instruction
$E6C    $0FA6   SYS      $FA6            ; System call to FA6
$E6E    $B55B   JP       V0, $55B        ; Jump to V0 + 55B
$E70    $C76C   RND      V7, #6C         ; V7 = random & 6C
$E72    $7F49   ADD      VF, #49         ; Add 73 to VF
$E74    $E286   UNKNOWN  $E286           ; Unknown Exxx instruction
$E76    $AB36   LD       I, $B36         ; Load B36 into I
$E78    $9A38   UNKNOWN  $9A38           ; Unknown 9xxx instruction
$E7A    $ABB2   LD       I, $BB2         ; Load BB2 into I
$E7C    $EA0A   UNKNOWN  $EA0A           ; Unknown Exxx instruction
$E7E    $6B4B   LD       VB, #4B         ; Load 75 into VB
$E80    $A211   LD       I, $211         ; Load 211 into I
$E82    $432A   SNE      V3, #2A         ; Skip if V3 != 42
$E84    $5307   UNKNOWN  $5307           ; Unknown 5xxx instruction
$E86    $089E   SYS      $89E            ; System call to 89E
$E88    $5DB9   UNKNOWN  $5DB9           ; Unknown 5xxx instruction
$E8A    $A126   LD       I, $126         ; Load 126 into I
$E8C    $0A08   SYS      $A08            ; System call to A08
$E8E    $2171   CALL     $171            ; Call subroutine at 171
$E90    $341F   SE       V4, #1F         ; Skip if V4 == 31
$E92    $07DB   SYS      $7DB            ; System call to 7DB
$E94    $63C9   LD       V3, #C9         ; Load 201 into V3
$E96    $AF7C   LD       I, $F7C         ; Load F7C into I
$E98    $AA96   LD       I, $A96         ; Load A96 into I
$E9A    $F688   UNKNOWN  F688            ; Unknown Fxxx instruction
$E9C    $85FC   UNKNOWN  85FC            ; Unknown 8xxx instruction
$E9E    $D6C0   DRW      V6, VC, #0      ; Draw 0-byte sprite at V6, VC
$EA0    $3DDA   SE       VD, #DA         ; Skip if VD == 218
$EA2    $863C   UNKNOWN  863C            ; Unknown 8xxx instruction
$EA4    $7BAD   ADD      VB, #AD         ; Add 173 to VB
$EA6    $D48A   DRW      V4, V8, #A      ; Draw 10-byte sprite at V4, V8
$EA8    $B888   JP       V0, $888        ; Jump to V0 + 888
$EAA    $C79F   RND      V7, #9F         ; V7 = random & 9F
$EAC    $388E   SE       V8, #8E         ; Skip if V8 == 142
$EAE    $14F1   JP       $4F1            ; Jump to 4F1
$EB0    $4151   SNE      V1, #51         ; Skip if V1 != 81
$EB2    $FA22   UNKNOWN  FA22            ; Unknown Fxxx instruction
$EB4    $E6BF   UNKNOWN  $E6BF           ; Unknown Exxx instruction
$EB6    $146C   JP       $46C            ; Jump to 46C
$EB8    $EA8B   UNKNOWN  $EA8B           ; Unknown Exxx instruction
$EBA    $01C4   SYS      $1C4            ; System call to 1C4
$EBC    $A453   LD       I, $453         ; Load 453 into I
$EBE    $C63B   RND      V6, #3B         ; V6 = random & 3B
$EC0    $EE60   UNKNOWN  $EE60           ; Unknown Exxx instruction
$EC2    $9769   UNKNOWN  $9769           ; Unknown 9xxx instruction
$EC4    $8A9D   UNKNOWN  8A9D            ; Unknown 8xxx instruction
$EC6    $2476   CALL     $476            ; Call subroutine at 476
$EC8    $653D   LD       V5, #3D         ; Load 61 into V5
$ECA    $6D81   LD       VD, #81         ; Load 129 into VD
$ECC    $0494   SYS      $494            ; System call to 494
$ECE    $22DE   CALL     $2DE            ; Call subroutine at 2DE
$ED0    $4BB5   SNE      VB, #B5         ; Skip if VB != 181
$ED2    $DF85   DRW      VF, V8, #5      ; Draw 5-byte sprite at VF, V8
$ED4    $2AEE   CALL     $AEE            ; Call subroutine at AEE
$ED6    $0D61   SYS      $D61            ; System call to D61
$ED8    $5706   UNKNOWN  $5706           ; Unknown 5xxx instruction
$EDA    $EA71   UNKNOWN  $EA71           ; Unknown Exxx instruction
$EDC    $01D0   SYS      $1D0            ; System call to 1D0
$EDE    $DD8B   DRW      VD, V8, #B      ; Draw 11-byte sprite at VD, V8
$EE0    $6DC5   LD       VD, #C5         ; Load 197 into VD
$EE2    $40DE   SNE      V0, #DE         ; Skip if V0 != 222
$EE4    $3815   SE       V8, #15         ; Skip if V8 == 21
$EE6    $998A   UNKNOWN  $998A           ; Unknown 9xxx instruction
$EE8    $A6FF   LD       I, $6FF         ; Load 6FF into I
$EEA    $612B   LD       V1, #2B         ; Load 43 into V1
$EEC    $AF49   LD       I, $F49         ; Load F49 into I
$EEE    $6D18   LD       VD, #18         ; Load 24 into VD
$EF0    $DC5F   DRW      VC, V5, #F      ; Draw 15-byte sprite at VC, V5
$EF2    $5048   UNKNOWN  $5048           ; Unknown 5xxx instruction
$EF4    $AF5D   LD       I, $F5D         ; Load F5D into I
$EF6    $FE76   UNKNOWN  FE76            ; Unknown Fxxx instruction
$EF8    $FDD3   UNKNOWN  FDD3            ; Unknown Fxxx instruction
$EFA    $45D6   SNE      V5, #D6         ; Skip if V5 != 214
$EFC    $C359   RND      V3, #59         ; V3 = random & 59
$EFE    $B5C4   JP       V0, $5C4        ; Jump to V0 + 5C4
$F00    $39C5   SE       V9, #C5         ; Skip if V9 == 197
$F02    $CE5C   RND      VE, #5C         ; VE = random & 5C
$F04    $10DF   JP       $0DF            ; Jump to 0DF
$F06    $F614   UNKNOWN  F614            ; Unknown Fxxx instruction
$F08    $67E9   LD       V7, #E9         ; Load 233 into V7
$F0A    $10A9   JP       $0A9            ; Jump to 0A9
$F0C    $CE4A   RND      VE, #4A         ; VE = random & 4A
$F0E    $231C   CALL     $31C            ; Call subroutine at 31C
$F10    $8DB9   UNKNOWN  8DB9            ; Unknown 8xxx instruction
$F12    $B735   JP       V0, $735        ; Jump to V0 + 735
$F14    $A2CE   LD       I, $2CE         ; Load 2CE into I
$F16    $5284   UNKNOWN  $5284           ; Unknown 5xxx instruction
$F18    $4FC9   SNE      VF, #C9         ; Skip if VF != 201
$F1A    $0DAA   SYS      $DAA            ; System call to DAA
$F1C    $E082   UNKNOWN  $E082           ; Unknown Exxx instruction
$F1E    $98C5   UNKNOWN  $98C5           ; Unknown 9xxx instruction
$F20    $020F   SYS      $20F            ; System call to 20F
$F22    $C6BF   RND      V6, #BF         ; V6 = random & BF
$F24    $A3C7   LD       I, $3C7         ; Load 3C7 into I
$F26    $B978   JP       V0, $978        ; Jump to V0 + 978
$F28    $3E22   SE       VE, #22         ; Skip if VE == 34
$F2A    $1C1D   JP       $C1D            ; Jump to C1D
$F2C    $B088   JP       V0, $088        ; Jump to V0 + 088
$F2E    $1919   JP       $919            ; Jump to 919
$F30    $D933   DRW      V9, V3, #3      ; Draw 3-byte sprite at V9, V3
$F32    $6948   LD       V9, #48         ; Load 72 into V9
$F34    $27D4   CALL     $7D4            ; Call subroutine at 7D4
$F36    $0A5C   SYS      $A5C            ; System call to A5C
$F38    $3966   SE       V9, #66         ; Skip if V9 == 102
$F3A    $15C1   JP       $5C1            ; Jump to 5C1
$F3C    $CB80   RND      VB, #80         ; VB = random & 80
$F3E    $2039   CALL     $039            ; Call subroutine at 039
$F40    $C3AE   RND      V3, #AE         ; V3 = random & AE
$F42    $57E3   UNKNOWN  $57E3           ; Unknown 5xxx instruction
$F44    $4729   SNE      V7, #29         ; Skip if V7 != 41
$F46    $7ED5   ADD      VE, #D5         ; Add 213 to VE
$F48    $BBB8   JP       V0, $BB8        ; Jump to V0 + BB8
$F4A    $9F6F   UNKNOWN  $9F6F           ; Unknown 9xxx instruction
$F4C    $F376   UNKNOWN  F376            ; Unknown Fxxx instruction
$F4E    $6310   LD       V3, #10         ; Load 16 into V3
$F50    $62B5   LD       V2, #B5         ; Load 181 into V2
$F52    $2FA0   CALL     $FA0            ; Call subroutine at FA0
$F54    $C3AE   RND      V3, #AE         ; V3 = random & AE
$F56    $2D73   CALL     $D73            ; Call subroutine at D73
$F58    $C4A6   RND      V4, #A6         ; V4 = random & A6
$F5A    $F7BC   UNKNOWN  F7BC            ; Unknown Fxxx instruction
$F5C    $B716   JP       V0, $716        ; Jump to V0 + 716
$F5E    $757B   ADD      V5, #7B         ; Add 123 to V5
$F60    $B2F0   JP       V0, $2F0        ; Jump to V0 + 2F0
$F62    $8D44   ADD      VD, V4          ; VD += V4, VF = carry
$F64    $6D4D   LD       VD, #4D         ; Load 77 into VD
$F66    $D011   DRW      V0, V1, #1      ; Draw 1-byte sprite at V0, V1
$F68    $ABA6   LD       I, $BA6         ; Load BA6 into I
$F6A    $A9B5   LD       I, $9B5         ; Load 9B5 into I
$F6C    $87B9   UNKNOWN  87B9            ; Unknown 8xxx instruction
$F6E    $EDB1   UNKNOWN  $EDB1           ; Unknown Exxx instruction
$F70    $3CBA   SE       VC, #BA         ; Skip if VC == 186
$F72    $E5C6   UNKNOWN  $E5C6           ; Unknown Exxx instruction
$F74    $9748   UNKNOWN  $9748           ; Unknown 9xxx instruction
$F76    $7DED   ADD      VD, #ED         ; Add 237 to VD
$F78    $216A   CALL     $16A            ; Call subroutine at 16A
$F7A    $071B   SYS      $71B            ; System call to 71B
$F7C    $A1A6   LD       I, $1A6         ; Load 1A6 into I
$F7E    $30F0   SE       V0, #F0         ; Skip if V0 == 240
$F80    $F58D   UNKNOWN  F58D            ; Unknown Fxxx instruction
$F82    $3847   SE       V8, #47         ; Skip if V8 == 71
$F84    $56C0   SE       V6, VC          ; Skip if V6 == VC
$F86    $C1DC   RND      V1, #DC         ; V1 = random & DC
$F88    $CECC   RND      VE, #CC         ; VE = random & CC
$F8A    $71BD   ADD      V1, #BD         ; Add 189 to V1
$F8C    $D77B   DRW      V7, V7, #B      ; Draw 11-byte sprite at V7, V7
$F8E    $D258   DRW      V2, V5, #8      ; Draw 8-byte sprite at V2, V5
$F90    $6A6F   LD       VA, #6F         ; Load 111 into VA
$F92    $7BB2   ADD      VB, #B2         ; Add 178 to VB
$F94    $0988   SYS      $988            ; System call to 988
$F96    $5F37   UNKNOWN  $5F37           ; Unknown 5xxx instruction
$F98    $AE58   LD       I, $E58         ; Load E58 into I
$F9A    $43C1   SNE      V3, #C1         ; Skip if V3 != 193
$F9C    $2DB3   CALL     $DB3            ; Call subroutine at DB3
$F9E    $CD09   RND      VD, #09         ; VD = random & 09
$FA0    $3BD4   SE       VB, #D4         ; Skip if VB == 212
$FA2    $3534   SE       V5, #34         ; Skip if V5 == 52
$FA4    $1343   JP       $343            ; Jump to 343
$FA6    $0558   SYS      $558            ; System call to 558
$FA8    $567F   UNKNOWN  $567F           ; Unknown 5xxx instruction
$FAA    $AE82   LD       I, $E82         ; Load E82 into I
$FAC    $05C5   SYS      $5C5            ; System call to 5C5
$FAE    $683D   LD       V8, #3D         ; Load 61 into V8
$FB0    $03F4   SYS      $3F4            ; System call to 3F4
$FB2    $2A50   CALL     $A50            ; Call subroutine at A50
$FB4    $85D9   UNKNOWN  85D9            ; Unknown 8xxx instruction
$FB6    $990F   UNKNOWN  $990F           ; Unknown 9xxx instruction
$FB8    $24E6   CALL     $4E6            ; Call subroutine at 4E6
$FBA    $DD08   DRW      VD, V0, #8      ; Draw 8-byte sprite at VD, V0
$FBC    $C82E   RND      V8, #2E         ; V8 = random & 2E
$FBE    $1274   JP       $274            ; Jump to 274
$FC0    $D17E   DRW      V1, V7, #E      ; Draw 14-byte sprite at V1, V7
$FC2    $60B1   LD       V0, #B1         ; Load 177 into V0
$FC4    $7141   ADD      V1, #41         ; Add 65 to V1
$FC6    $0C3D   SYS      $C3D            ; System call to C3D
$FC8    $A867   LD       I, $867         ; Load 867 into I
$FCA    $D488   DRW      V4, V8, #8      ; Draw 8-byte sprite at V4, V8
$FCC    $EDE2   UNKNOWN  $EDE2           ; Unknown Exxx instruction
$FCE    $9C54   UNKNOWN  $9C54           ; Unknown 9xxx instruction
$FD0    $4FA6   SNE      VF, #A6         ; Skip if VF != 166
$FD2    $049D   SYS      $49D            ; System call to 49D
$FD4    $FCAB   UNKNOWN  FCAB            ; Unknown Fxxx instruction
$FD6    $D748   DRW      V7, V4, #8      ; Draw 8-byte sprite at V7, V4
$FD8    $E900   UNKNOWN  $E900           ; Unknown Exxx instruction
$FDA    $EF4C   UNKNOWN  $EF4C           ; Unknown Exxx instruction
$FDC    $BFF8   JP       V0, $FF8        ; Jump to V0 + FF8
$FDE    $2055   CALL     $055            ; Call subroutine at 055
$FE0    $77ED   ADD      V7, #ED         ; Add 237 to V7
$FE2    $8F00   LD       VF, V0          ; VF = V0
$FE4    $35F4   SE       V5, #F4         ; Skip if V5 == 244
$FE6    $676A   LD       V7, #6A         ; Load 106 into V7
$FE8    $E19C   UNKNOWN  $E19C           ; Unknown Exxx instruction
$FEA    $9A24   UNKNOWN  $9A24           ; Unknown 9xxx instruction
$FEC    $2AC3   CALL     $AC3            ; Call subroutine at AC3
$FEE    $11A0   JP       $1A0            ; Jump to 1A0
$FF0    $66DF   LD       V6, #DF         ; Load 223 into V6
$FF2    $64C8   LD       V4, #C8         ; Load 200 into V4
$FF4    $4E89   SNE      VE, #89         ; Skip if VE != 137
$FF6    $01D5   SYS      $1D5            ; System call to 1D5
$FF8    $9419   UNKNOWN  $9419           ; Unknown 9xxx instruction
$FFA    $1E01   JP       $E01            ; Jump to E01
$FFC    $71AC   ADD      V1, #AC         ; Add 172 to V1
$FFE    $8A46   SHR      VA              ; VA >>= 1, VF = LSB

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 456 (25.4%)
  LD      : 246 (13.7%)
  JP      : 219 (12.2%)
  DRW     : 135 ( 7.5%)
  SE      : 128 ( 7.1%)
  SYS     : 124 ( 6.9%)
  ADD     : 113 ( 6.3%)
  CALL    : 112 ( 6.2%)
  RND     : 111 ( 6.2%)
  SNE     : 102 ( 5.7%)
  AND     :  12 ( 0.7%)
  SUBN    :   8 ( 0.4%)
  XOR     :   7 ( 0.4%)
  OR      :   5 ( 0.3%)
  SHL     :   5 ( 0.3%)
  SHR     :   4 ( 0.2%)
  SUB     :   4 ( 0.2%)
  SKNP    :   1 ( 0.1%)

Memory Operations: 359 (20.0%)
Arithmetic Operations: 149 (8.3%)
