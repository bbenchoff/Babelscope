
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B1824D01_I38135_C7470_10cd24cb8b9b.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 1824
Instance: 38135
Direction: descending
Final Array: [206, 206, 206, 206, 206, 206, 175, 48]
Operations: R:0 W:6 C:293 S:74

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 126
Sort Array References:
  $236: LD I, $04A ; Load 04A into I
  $246: LD I, $A7C ; Load A7C into I
  $252: LD I, $9A8 ; Load 9A8 into I
  $2C4: LD I, $492 ; Load 492 into I
  $306: LD I, $F30 ; Load F30 into I
  $320: LD I, $FEB ; Load FEB into I
  $326: LD I, $9B0 ; Load 9B0 into I
  $32A: LD I, $7CB ; Load 7CB into I
  $33A: LD I, $10A ; Load 10A into I
  $360: LD I, $EEA ; Load EEA into I
  $39C: LD I, $1BC ; Load 1BC into I
  $3FA: LD I, $D5B ; Load D5B into I
  $42A: LD I, $2AF ; Load 2AF into I
  $432: LD I, $AC7 ; Load AC7 into I
  $438: LD I, $028 ; Load 028 into I
  $43A: LD I, $BF5 ; Load BF5 into I
  $444: LD I, $EE3 ; Load EE3 into I
  $44A: LD I, $1AD ; Load 1AD into I
  $46E: LD I, $018 ; Load 018 into I
  $482: ADD I, VD ; I ADDRESS MANIPULATION
  $486: LD I, $10D ; Load 10D into I
  $4AE: LD I, $4A3 ; Load 4A3 into I
  $504: LD I, $18F ; Load 18F into I
  $52C: LD I, $035 ; Load 035 into I
  $52E: LD I, $807 ; Load 807 into I
  $530: LD I, $D2B ; Load D2B into I
  $536: LD I, $9AB ; Load 9AB into I
  $542: LD I, $7D4 ; Load 7D4 into I
  $574: LD I, $95A ; Load 95A into I
  $5C0: LD I, $48F ; Load 48F into I
  $5CA: LD I, $40D ; Load 40D into I
  $5D2: LD I, $DAC ; Load DAC into I
  $5D6: LD I, $667 ; Load 667 into I
  $5D8: LD I, $D5D ; Load D5D into I
  $5DE: LD I, $904 ; Load 904 into I
  $606: LD I, $FF1 ; Load FF1 into I
  $658: LD I, $2DA ; Load 2DA into I
  $66E: LD I, $253 ; Load 253 into I
  $678: LD I, $C91 ; Load C91 into I
  $69C: LD I, $6E1 ; Load 6E1 into I
  $6C8: LD I, $CEE ; Load CEE into I
  $716: LD I, $53F ; Load 53F into I
  $73A: LD I, $400 ; Load 400 into I
  $770: LD I, $6DB ; Load 6DB into I
  $7A6: LD I, $5C5 ; Load 5C5 into I
  $7B0: LD V7, [I] ; Load V0-V7 from I
  $7B2: LD I, $D55 ; Load D55 into I
  $7C2: LD I, $133 ; Load 133 into I
  $7E2: LD I, $7EB ; Load 7EB into I
  $7F4: LD I, $395 ; Load 395 into I
  $80E: LD I, $A15 ; Load A15 into I
  $822: LD I, $AD6 ; Load AD6 into I
  $828: LD I, $99D ; Load 99D into I
  $82A: LD I, $6D3 ; Load 6D3 into I
  $832: LD I, $4D5 ; Load 4D5 into I
  $864: LD I, $4D8 ; Load 4D8 into I
  $87A: LD I, $DDB ; Load DDB into I
  $87C: LD I, $EC1 ; Load EC1 into I
  $8A4: LD I, $11E ; Load 11E into I
  $8D0: LD I, $5AC ; Load 5AC into I
  $948: LD I, $90A ; Load 90A into I
  $960: LD I, $2C8 ; Load 2C8 into I
  $9A4: LD I, $F2A ; Load F2A into I
  $9C0: LD I, $9E2 ; Load 9E2 into I
  $9CA: LD I, $861 ; Load 861 into I
  $9D6: LD I, $AA6 ; Load AA6 into I
  $9F0: LD I, $1D1 ; Load 1D1 into I
  $A32: LD I, $E56 ; Load E56 into I
  $A38: LD I, $CC4 ; Load CC4 into I
  $A40: LD I, $2AA ; Load 2AA into I
  $A5C: LD I, $D12 ; Load D12 into I
  $A7C: LD I, $38B ; Load 38B into I
  $AC0: LD I, $A32 ; Load A32 into I
  $AD6: LD I, $482 ; Load 482 into I
  $AEA: LD I, $22A ; Load 22A into I
  $AFC: LD I, $9C3 ; Load 9C3 into I
  $B04: LD I, $9FC ; Load 9FC into I
  $B18: LD I, $27E ; Load 27E into I
  $B62: LD I, $324 ; Load 324 into I
  $B82: LD I, $E67 ; Load E67 into I
  $B8A: LD I, $1C9 ; Load 1C9 into I
  $B8C: LD I, $ACB ; Load ACB into I
  $B98: LD I, $1C5 ; Load 1C5 into I
  $BCA: LD I, $D8E ; Load D8E into I
  $BCE: LD I, $404 ; Load 404 into I
  $BDC: LD I, $50F ; Load 50F into I
  $C1C: LD I, $7C8 ; Load 7C8 into I
  $C28: LD I, $CB0 ; Load CB0 into I
  $C5E: LD I, $FD7 ; Load FD7 into I
  $C80: LD I, $A55 ; Load A55 into I
  $C86: LD I, $D85 ; Load D85 into I
  $CAA: LD I, $B7B ; Load B7B into I
  $CAC: LD I, $F39 ; Load F39 into I
  $CBE: LD I, $BAE ; Load BAE into I
  $CCE: LD I, $7CB ; Load 7CB into I
  $CF6: LD I, $FF6 ; Load FF6 into I
  $D0A: LD I, $859 ; Load 859 into I
  $D40: LD I, $9DB ; Load 9DB into I
  $D42: LD I, $2AB ; Load 2AB into I
  $D72: LD I, $687 ; Load 687 into I
  $D74: LD I, $00C ; Load 00C into I
  $DB2: ADD I, VE ; I ADDRESS MANIPULATION
  $DBA: LD I, $CFB ; Load CFB into I
  $DBC: LD I, $E56 ; Load E56 into I
  $DD0: LD I, $5A4 ; Load 5A4 into I
  $DDA: LD I, $1A6 ; Load 1A6 into I
  $DE8: LD I, $A0C ; Load A0C into I
  $DF8: LD I, $9F4 ; Load 9F4 into I
  $E02: LD I, $288 ; Load 288 into I
  $E48: LD I, $3B8 ; Load 3B8 into I
  $E52: LD I, $2B3 ; Load 2B3 into I
  $E58: LD I, $6B6 ; Load 6B6 into I
  $E8A: LD I, $715 ; Load 715 into I
  $EB4: LD I, $276 ; Load 276 into I
  $EBC: LD I, $CDB ; Load CDB into I
  $EE2: LD I, $FD8 ; Load FD8 into I
  $EFA: LD I, $1DA ; Load 1DA into I
  $F24: LD I, $C8D ; Load C8D into I
  $F34: LD I, $C08 ; Load C08 into I
  $F68: LD I, $E74 ; Load E74 into I
  $F6A: LD I, $790 ; Load 790 into I
  $F86: LD I, $BE2 ; Load BE2 into I
  $FC0: LD I, $A95 ; Load A95 into I
  $FEA: LD I, $B82 ; Load B82 into I
  $FF2: LD I, $560 ; Load 560 into I
  $FFE: LD I, $8F3 ; Load 8F3 into I

CONTROL FLOW ANALYSIS:
Jumps: 226
Calls: 103
Branches: 238
Loops: 127
Loop Structures:
  $256 -> $1E0 (backward jump)
  $336 -> $0D2 (backward jump)
  $340 -> $2E1 (backward jump)
  $3F2 -> $37B (backward jump)
  $416 -> $272 (backward jump)
  $442 -> $06F (backward jump)
  $45A -> $119 (backward jump)
  $478 -> $433 (backward jump)
  $52A -> $24A (backward jump)
  $546 -> $374 (backward jump)
  $550 -> $2E5 (backward jump)
  $566 -> $4F6 (backward jump)
  $5A0 -> $095 (backward jump)
  $5A8 -> $31F (backward jump)
  $618 -> $443 (backward jump)
  $696 -> $4EE (backward jump)
  $6D6 -> $52F (backward jump)
  $724 -> $475 (backward jump)
  $73E -> $362 (backward jump)
  $78C -> $6CC (backward jump)
  $7C8 -> $758 (backward jump)
  $7F6 -> $0AB (backward jump)
  $800 -> $5E5 (backward jump)
  $802 -> $5F6 (backward jump)
  $84E -> $653 (backward jump)
  $870 -> $1D1 (backward jump)
  $884 -> $420 (backward jump)
  $88A -> $856 (backward jump)
  $8AE -> $24D (backward jump)
  $8BC -> $58F (backward jump)
  $8C8 -> $858 (backward jump)
  $8E4 -> $253 (backward jump)
  $938 -> $5E3 (backward jump)
  $944 -> $2AD (backward jump)
  $94C -> $3BE (backward jump)
  $94E -> $17F (backward jump)
  $976 -> $664 (backward jump)
  $978 -> $133 (backward jump)
  $980 -> $905 (backward jump)
  $9AE -> $145 (backward jump)
  $9B0 -> $531 (backward jump)
  $9D4 -> $9AF (backward jump)
  $A1A -> $06B (backward jump)
  $A3E -> $478 (backward jump)
  $A42 -> $631 (backward jump)
  $A50 -> $339 (backward jump)
  $A54 -> $732 (backward jump)
  $A5E -> $2F2 (backward jump)
  $A72 -> $2DE (backward jump)
  $A7A -> $6D5 (backward jump)
  $A8C -> $505 (backward jump)
  $A9A -> $7E3 (backward jump)
  $AB0 -> $947 (backward jump)
  $AE6 -> $915 (backward jump)
  $AF8 -> $59E (backward jump)
  $B06 -> $90C (backward jump)
  $B22 -> $AAA (backward jump)
  $B46 -> $AB2 (backward jump)
  $B66 -> $AB9 (backward jump)
  $B90 -> $90D (backward jump)
  $BA4 -> $3D9 (backward jump)
  $BAE -> $32D (backward jump)
  $BBC -> $AF9 (backward jump)
  $BC8 -> $8AF (backward jump)
  $BD8 -> $587 (backward jump)
  $BF8 -> $305 (backward jump)
  $C04 -> $950 (backward jump)
  $C06 -> $31F (backward jump)
  $C20 -> $7AF (backward jump)
  $C22 -> $58D (backward jump)
  $C26 -> $BDB (backward jump)
  $C2A -> $1B4 (backward jump)
  $C48 -> $429 (backward jump)
  $C6E -> $B86 (backward jump)
  $C70 -> $A00 (backward jump)
  $C78 -> $09E (backward jump)
  $CC0 -> $178 (backward jump)
  $CDC -> $AE9 (backward jump)
  $CDE -> $C39 (backward jump)
  $D32 -> $647 (backward jump)
  $D34 -> $160 (backward jump)
  $D50 -> $452 (backward jump)
  $D5C -> $3E5 (backward jump)
  $D5E -> $BD3 (backward jump)
  $D76 -> $C28 (backward jump)
  $D88 -> $060 (backward jump)
  $DA6 -> $610 (backward jump)
  $DAE -> $956 (backward jump)
  $DD2 -> $928 (backward jump)
  $DD8 -> $7C9 (backward jump)
  $E0C -> $880 (backward jump)
  $E22 -> $B72 (backward jump)
  $E2A -> $007 (backward jump)
  $E2E -> $8C7 (backward jump)
  $E30 -> $9A8 (backward jump)
  $E3C -> $2C1 (backward jump)
  $E3E -> $74B (backward jump)
  $E40 -> $026 (backward jump)
  $E4A -> $5D3 (backward jump)
  $E4E -> $4F8 (backward jump)
  $E6E -> $CBD (backward jump)
  $E8E -> $AF6 (backward jump)
  $E92 -> $D49 (backward jump)
  $EA4 -> $54B (backward jump)
  $EA6 -> $11D (backward jump)
  $EA8 -> $5AA (backward jump)
  $EB6 -> $50D (backward jump)
  $ECA -> $104 (backward jump)
  $EDA -> $C13 (backward jump)
  $EEA -> $594 (backward jump)
  $F0A -> $EF4 (backward jump)
  $F1E -> $7FE (backward jump)
  $F22 -> $7E8 (backward jump)
  $F2E -> $A2B (backward jump)
  $F3E -> $33F (backward jump)
  $F54 -> $403 (backward jump)
  $F5A -> $AC2 (backward jump)
  $F64 -> $36E (backward jump)
  $F82 -> $6B5 (backward jump)
  $F88 -> $07A (backward jump)
  $F9C -> $75B (backward jump)
  $FC4 -> $3E2 (backward jump)
  $FCE -> $454 (backward jump)
  $FD4 -> $029 (backward jump)
  $FDA -> $289 (backward jump)
  $FE0 -> $BF7 (backward jump)
  $FE8 -> $F7B (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $6C8E   LD       VC, #8E         ; Load 142 into VC
$202    $3FE8   SE       VF, #E8         ; Skip if VF == 232
$204    $8A1C   UNKNOWN  8A1C            ; Unknown 8xxx instruction
$206    $1A2D   JP       $A2D            ; Jump to A2D
$208    $2E42   CALL     $E42            ; Call subroutine at E42
$20A    $D691   DRW      V6, V9, #1      ; Draw 1-byte sprite at V6, V9
$20C    $C4A0   RND      V4, #A0         ; V4 = random & A0
$20E    $691A   LD       V9, #1A         ; Load 26 into V9
$210    $3F62   SE       VF, #62         ; Skip if VF == 98
$212    $0CF1   SYS      $CF1            ; System call to CF1
$214    $6AD2   LD       VA, #D2         ; Load 210 into VA
$216    $FE1A   UNKNOWN  FE1A            ; Unknown Fxxx instruction
$218    $CFCC   RND      VF, #CC         ; VF = random & CC
$21A    $195A   JP       $95A            ; Jump to 95A
$21C    $BA6B   JP       V0, $A6B        ; Jump to V0 + A6B
$21E    $C497   RND      V4, #97         ; V4 = random & 97
$220    $392A   SE       V9, #2A         ; Skip if V9 == 42
$222    $DEA3   DRW      VE, VA, #3      ; Draw 3-byte sprite at VE, VA
$224    $0C5A   SYS      $C5A            ; System call to C5A
$226    $ECFB   UNKNOWN  $ECFB           ; Unknown Exxx instruction
$228    $3697   SE       V6, #97         ; Skip if V6 == 151
$22A    $3DB8   SE       VD, #B8         ; Skip if VD == 184
$22C    $025E   SYS      $25E            ; System call to 25E
$22E    $919D   UNKNOWN  $919D           ; Unknown 9xxx instruction
$230    $9640   SNE      V6, V4          ; Skip if V6 != V4
$232    $7990   ADD      V9, #90         ; Add 144 to V9
$234    $C16F   RND      V1, #6F         ; V1 = random & 6F
$236    $A04A   LD       I, $04A         ; Load 04A into I
$238    $9537   UNKNOWN  $9537           ; Unknown 9xxx instruction
$23A    $C122   RND      V1, #22         ; V1 = random & 22
$23C    $4683   SNE      V6, #83         ; Skip if V6 != 131
$23E    $5664   UNKNOWN  $5664           ; Unknown 5xxx instruction
$240    $9036   UNKNOWN  $9036           ; Unknown 9xxx instruction
$242    $240F   CALL     $40F            ; Call subroutine at 40F
$244    $13D1   JP       $3D1            ; Jump to 3D1
$246    $AA7C   LD       I, $A7C         ; Load A7C into I
$248    $7101   ADD      V1, #01         ; Add 1 to V1
$24A    $5710   SE       V7, V1          ; Skip if V7 == V1
$24C    $99D9   UNKNOWN  $99D9           ; Unknown 9xxx instruction
$24E    $67FF   LD       V7, #FF         ; Load 255 into V7
$250    $E841   UNKNOWN  $E841           ; Unknown Exxx instruction
$252    $A9A8   LD       I, $9A8         ; Load 9A8 into I
$254    $8AFD   UNKNOWN  8AFD            ; Unknown 8xxx instruction
$256    $11E0   JP       $1E0            ; Jump to 1E0
$258    $7B8C   ADD      VB, #8C         ; Add 140 to VB
$25A    $4C23   SNE      VC, #23         ; Skip if VC != 35
$25C    $1A24   JP       $A24            ; Jump to A24
$25E    $7CAE   ADD      VC, #AE         ; Add 174 to VC
$260    $96E0   SNE      V6, VE          ; Skip if V6 != VE
$262    $8E83   XOR      VE, V8          ; VE ^= V8
$264    $4DC3   SNE      VD, #C3         ; Skip if VD != 195
$266    $9DCE   UNKNOWN  $9DCE           ; Unknown 9xxx instruction
$268    $CBDE   RND      VB, #DE         ; VB = random & DE
$26A    $6531   LD       V5, #31         ; Load 49 into V5
$26C    $56A2   UNKNOWN  $56A2           ; Unknown 5xxx instruction
$26E    $9055   UNKNOWN  $9055           ; Unknown 9xxx instruction
$270    $EE18   UNKNOWN  $EE18           ; Unknown Exxx instruction
$272    $E1DC   UNKNOWN  $E1DC           ; Unknown Exxx instruction
$274    $BDD9   JP       V0, $DD9        ; Jump to V0 + DD9
$276    $91F5   UNKNOWN  $91F5           ; Unknown 9xxx instruction
$278    $1DBF   JP       $DBF            ; Jump to DBF
$27A    $B98C   JP       V0, $98C        ; Jump to V0 + 98C
$27C    $D132   DRW      V1, V3, #2      ; Draw 2-byte sprite at V1, V3
$27E    $9A7C   UNKNOWN  $9A7C           ; Unknown 9xxx instruction
$280    $E84B   UNKNOWN  $E84B           ; Unknown Exxx instruction
$282    $CFB8   RND      VF, #B8         ; VF = random & B8
$284    $679B   LD       V7, #9B         ; Load 155 into V7
$286    $4388   SNE      V3, #88         ; Skip if V3 != 136
$288    $E298   UNKNOWN  $E298           ; Unknown Exxx instruction
$28A    $8BF9   UNKNOWN  8BF9            ; Unknown 8xxx instruction
$28C    $91F5   UNKNOWN  $91F5           ; Unknown 9xxx instruction
$28E    $1CBB   JP       $CBB            ; Jump to CBB
$290    $267F   CALL     $67F            ; Call subroutine at 67F
$292    $CB82   RND      VB, #82         ; VB = random & 82
$294    $63B8   LD       V3, #B8         ; Load 184 into V3
$296    $3424   SE       V4, #24         ; Skip if V4 == 36
$298    $9ACF   UNKNOWN  $9ACF           ; Unknown 9xxx instruction
$29A    $1C9D   JP       $C9D            ; Jump to C9D
$29C    $E1C2   UNKNOWN  $E1C2           ; Unknown Exxx instruction
$29E    $84BF   UNKNOWN  84BF            ; Unknown 8xxx instruction
$2A0    $3B8B   SE       VB, #8B         ; Skip if VB == 139
$2A2    $BDAB   JP       V0, $DAB        ; Jump to V0 + DAB
$2A4    $F2C9   UNKNOWN  F2C9            ; Unknown Fxxx instruction
$2A6    $23AD   CALL     $3AD            ; Call subroutine at 3AD
$2A8    $5ADD   UNKNOWN  $5ADD           ; Unknown 5xxx instruction
$2AA    $E417   UNKNOWN  $E417           ; Unknown Exxx instruction
$2AC    $91B2   UNKNOWN  $91B2           ; Unknown 9xxx instruction
$2AE    $8894   ADD      V8, V9          ; V8 += V9, VF = carry
$2B0    $DD2C   DRW      VD, V2, #C      ; Draw 12-byte sprite at VD, V2
$2B2    $33C6   SE       V3, #C6         ; Skip if V3 == 198
$2B4    $E7E3   UNKNOWN  $E7E3           ; Unknown Exxx instruction
$2B6    $C611   RND      V6, #11         ; V6 = random & 11
$2B8    $4E2B   SNE      VE, #2B         ; Skip if VE != 43
$2BA    $B805   JP       V0, $805        ; Jump to V0 + 805
$2BC    $4532   SNE      V5, #32         ; Skip if V5 != 50
$2BE    $72E2   ADD      V2, #E2         ; Add 226 to V2
$2C0    $9583   UNKNOWN  $9583           ; Unknown 9xxx instruction
$2C2    $2D38   CALL     $D38            ; Call subroutine at D38
$2C4    $A492   LD       I, $492         ; Load 492 into I
$2C6    $F25B   UNKNOWN  F25B            ; Unknown Fxxx instruction
$2C8    $CECE   RND      VE, #CE         ; VE = random & CE
$2CA    $CECE   RND      VE, #CE         ; VE = random & CE
$2CC    $CECE   RND      VE, #CE         ; VE = random & CE
$2CE    $CECE   RND      VE, #CE         ; VE = random & CE
$2D0    $CECE   RND      VE, #CE         ; VE = random & CE
$2D2    $CECE   RND      VE, #CE         ; VE = random & CE
$2D4    $CECE   RND      VE, #CE         ; VE = random & CE
$2D6    $CECE   RND      VE, #CE         ; VE = random & CE
$2D8    $CECE   RND      VE, #CE         ; VE = random & CE
$2DA    $CECE   RND      VE, #CE         ; VE = random & CE
$2DC    $CECE   RND      VE, #CE         ; VE = random & CE
$2DE    $CECE   RND      VE, #CE         ; VE = random & CE
$2E0    $CECE   RND      VE, #CE         ; VE = random & CE
$2E2    $CECE   RND      VE, #CE         ; VE = random & CE
$2E4    $CECE   RND      VE, #CE         ; VE = random & CE
$2E6    $CECE   RND      VE, #CE         ; VE = random & CE
$2E8    $CECE   RND      VE, #CE         ; VE = random & CE
$2EA    $CECE   RND      VE, #CE         ; VE = random & CE
$2EC    $CECE   RND      VE, #CE         ; VE = random & CE
$2EE    $CECE   RND      VE, #CE         ; VE = random & CE
$2F0    $CECE   RND      VE, #CE         ; VE = random & CE
$2F2    $CECE   RND      VE, #CE         ; VE = random & CE
$2F4    $CECE   RND      VE, #CE         ; VE = random & CE
$2F6    $CECE   RND      VE, #CE         ; VE = random & CE
$2F8    $CECE   RND      VE, #CE         ; VE = random & CE
$2FA    $CECE   RND      VE, #CE         ; VE = random & CE
$2FC    $CECE   RND      VE, #CE         ; VE = random & CE
$2FE    $CECE   RND      VE, #CE         ; VE = random & CE
$300    $CECE   RND      VE, #CE         ; VE = random & CE
$302    $CECE   RND      VE, #CE         ; VE = random & CE
$304    $CECE   RND      VE, #CE         ; VE = random & CE
$306    $AF30   LD       I, $F30         ; Load F30 into I
$308    $3038   SE       V0, #38         ; Skip if V0 == 56
$30A    $5338   UNKNOWN  $5338           ; Unknown 5xxx instruction
$30C    $1DDB   JP       $DDB            ; Jump to DDB
$30E    $80DE   SHL      V0              ; V0 <<= 1, VF = MSB
$310    $3A3B   SE       VA, #3B         ; Skip if VA == 59
$312    $938E   UNKNOWN  $938E           ; Unknown 9xxx instruction
$314    $D571   DRW      V5, V7, #1      ; Draw 1-byte sprite at V5, V7
$316    $C9D5   RND      V9, #D5         ; V9 = random & D5
$318    $8A66   SHR      VA              ; VA >>= 1, VF = LSB
$31A    $DFCF   DRW      VF, VC, #F      ; Draw 15-byte sprite at VF, VC
$31C    $3DC9   SE       VD, #C9         ; Skip if VD == 201
$31E    $08E4   SYS      $8E4            ; System call to 8E4
$320    $AFEB   LD       I, $FEB         ; Load FEB into I
$322    $4DF9   SNE      VD, #F9         ; Skip if VD != 249
$324    $3453   SE       V4, #53         ; Skip if V4 == 83
$326    $A9B0   LD       I, $9B0         ; Load 9B0 into I
$328    $6636   LD       V6, #36         ; Load 54 into V6
$32A    $A7CB   LD       I, $7CB         ; Load 7CB into I
$32C    $D6EC   DRW      V6, VE, #C      ; Draw 12-byte sprite at V6, VE
$32E    $2297   CALL     $297            ; Call subroutine at 297
$330    $8155   SUB      V1, V5          ; V1 -= V5, VF = !borrow
$332    $F769   UNKNOWN  F769            ; Unknown Fxxx instruction
$334    $440C   SNE      V4, #0C         ; Skip if V4 != 12
$336    $10D2   JP       $0D2            ; Jump to 0D2
$338    $89D4   ADD      V9, VD          ; V9 += VD, VF = carry
$33A    $A10A   LD       I, $10A         ; Load 10A into I
$33C    $EAC5   UNKNOWN  $EAC5           ; Unknown Exxx instruction
$33E    $66E1   LD       V6, #E1         ; Load 225 into V6
$340    $12E1   JP       $2E1            ; Jump to 2E1
$342    $38B9   SE       V8, #B9         ; Skip if V8 == 185
$344    $E17F   UNKNOWN  $E17F           ; Unknown Exxx instruction
$346    $E47D   UNKNOWN  $E47D           ; Unknown Exxx instruction
$348    $4747   SNE      V7, #47         ; Skip if V7 != 71
$34A    $4ECC   SNE      VE, #CC         ; Skip if VE != 204
$34C    $ED24   UNKNOWN  $ED24           ; Unknown Exxx instruction
$34E    $FF10   UNKNOWN  FF10            ; Unknown Fxxx instruction
$350    $2F2E   CALL     $F2E            ; Call subroutine at F2E
$352    $43ED   SNE      V3, #ED         ; Skip if V3 != 237
$354    $5395   UNKNOWN  $5395           ; Unknown 5xxx instruction
$356    $49A8   SNE      V9, #A8         ; Skip if V9 != 168
$358    $E112   UNKNOWN  $E112           ; Unknown Exxx instruction
$35A    $2C90   CALL     $C90            ; Call subroutine at C90
$35C    $613A   LD       V1, #3A         ; Load 58 into V1
$35E    $6D47   LD       VD, #47         ; Load 71 into VD
$360    $AEEA   LD       I, $EEA         ; Load EEA into I
$362    $1FD2   JP       $FD2            ; Jump to FD2
$364    $3EEC   SE       VE, #EC         ; Skip if VE == 236
$366    $39E9   SE       V9, #E9         ; Skip if V9 == 233
$368    $397C   SE       V9, #7C         ; Skip if V9 == 124
$36A    $2AB0   CALL     $AB0            ; Call subroutine at AB0
$36C    $DEC1   DRW      VE, VC, #1      ; Draw 1-byte sprite at VE, VC
$36E    $2BF5   CALL     $BF5            ; Call subroutine at BF5
$370    $3C51   SE       VC, #51         ; Skip if VC == 81
$372    $C60F   RND      V6, #0F         ; V6 = random & 0F
$374    $72FF   ADD      V2, #FF         ; Add 255 to V2
$376    $3355   SE       V3, #55         ; Skip if V3 == 85
$378    $EB05   UNKNOWN  $EB05           ; Unknown Exxx instruction
$37A    $E994   UNKNOWN  $E994           ; Unknown Exxx instruction
$37C    $549D   UNKNOWN  $549D           ; Unknown 5xxx instruction
$37E    $E4AA   UNKNOWN  $E4AA           ; Unknown Exxx instruction
$380    $4AC3   SNE      VA, #C3         ; Skip if VA != 195
$382    $CCA2   RND      VC, #A2         ; VC = random & A2
$384    $EFAA   UNKNOWN  $EFAA           ; Unknown Exxx instruction
$386    $56A9   UNKNOWN  $56A9           ; Unknown 5xxx instruction
$388    $58BA   UNKNOWN  $58BA           ; Unknown 5xxx instruction
$38A    $4EA8   SNE      VE, #A8         ; Skip if VE != 168
$38C    $73EF   ADD      V3, #EF         ; Add 239 to V3
$38E    $B686   JP       V0, $686        ; Jump to V0 + 686
$390    $2437   CALL     $437            ; Call subroutine at 437
$392    $8C58   UNKNOWN  8C58            ; Unknown 8xxx instruction
$394    $15FA   JP       $5FA            ; Jump to 5FA
$396    $67E0   LD       V7, #E0         ; Load 224 into V7
$398    $440A   SNE      V4, #0A         ; Skip if V4 != 10
$39A    $759C   ADD      V5, #9C         ; Add 156 to V5
$39C    $A1BC   LD       I, $1BC         ; Load 1BC into I
$39E    $899D   UNKNOWN  899D            ; Unknown 8xxx instruction
$3A0    $4B5C   SNE      VB, #5C         ; Skip if VB != 92
$3A2    $DC94   DRW      VC, V9, #4      ; Draw 4-byte sprite at VC, V9
$3A4    $D499   DRW      V4, V9, #9      ; Draw 9-byte sprite at V4, V9
$3A6    $2DCF   CALL     $DCF            ; Call subroutine at DCF
$3A8    $7230   ADD      V2, #30         ; Add 48 to V2
$3AA    $351C   SE       V5, #1C         ; Skip if V5 == 28
$3AC    $6453   LD       V4, #53         ; Load 83 into V4
$3AE    $BF1B   JP       V0, $F1B        ; Jump to V0 + F1B
$3B0    $602D   LD       V0, #2D         ; Load 45 into V0
$3B2    $5278   UNKNOWN  $5278           ; Unknown 5xxx instruction
$3B4    $8A5A   UNKNOWN  8A5A            ; Unknown 8xxx instruction
$3B6    $B755   JP       V0, $755        ; Jump to V0 + 755
$3B8    $BDED   JP       V0, $DED        ; Jump to V0 + DED
$3BA    $D7A3   DRW      V7, VA, #3      ; Draw 3-byte sprite at V7, VA
$3BC    $07D4   SYS      $7D4            ; System call to 7D4
$3BE    $4EC2   SNE      VE, #C2         ; Skip if VE != 194
$3C0    $4C52   SNE      VC, #52         ; Skip if VC != 82
$3C2    $830B   UNKNOWN  830B            ; Unknown 8xxx instruction
$3C4    $D55D   DRW      V5, V5, #D      ; Draw 13-byte sprite at V5, V5
$3C6    $08A8   SYS      $8A8            ; System call to 8A8
$3C8    $8F92   AND      VF, V9          ; VF &= V9
$3CA    $54D7   UNKNOWN  $54D7           ; Unknown 5xxx instruction
$3CC    $0A5E   SYS      $A5E            ; System call to A5E
$3CE    $E962   UNKNOWN  $E962           ; Unknown Exxx instruction
$3D0    $0039   SYS      $039            ; System call to 039
$3D2    $1C5E   JP       $C5E            ; Jump to C5E
$3D4    $E425   UNKNOWN  $E425           ; Unknown Exxx instruction
$3D6    $C6D6   RND      V6, #D6         ; V6 = random & D6
$3D8    $56BC   UNKNOWN  $56BC           ; Unknown 5xxx instruction
$3DA    $5B25   UNKNOWN  $5B25           ; Unknown 5xxx instruction
$3DC    $B772   JP       V0, $772        ; Jump to V0 + 772
$3DE    $FA2E   UNKNOWN  FA2E            ; Unknown Fxxx instruction
$3E0    $D052   DRW      V0, V5, #2      ; Draw 2-byte sprite at V0, V5
$3E2    $0173   SYS      $173            ; System call to 173
$3E4    $8166   SHR      V1              ; V1 >>= 1, VF = LSB
$3E6    $454E   SNE      V5, #4E         ; Skip if V5 != 78
$3E8    $06EA   SYS      $6EA            ; System call to 6EA
$3EA    $E0BA   UNKNOWN  $E0BA           ; Unknown Exxx instruction
$3EC    $5645   UNKNOWN  $5645           ; Unknown 5xxx instruction
$3EE    $7D68   ADD      VD, #68         ; Add 104 to VD
$3F0    $F17D   UNKNOWN  F17D            ; Unknown Fxxx instruction
$3F2    $137B   JP       $37B            ; Jump to 37B
$3F4    $8584   ADD      V5, V8          ; V5 += V8, VF = carry
$3F6    $1CE3   JP       $CE3            ; Jump to CE3
$3F8    $2E8D   CALL     $E8D            ; Call subroutine at E8D
$3FA    $AD5B   LD       I, $D5B         ; Load D5B into I
$3FC    $8855   SUB      V8, V5          ; V8 -= V5, VF = !borrow
$3FE    $45E2   SNE      V5, #E2         ; Skip if V5 != 226
$400    $421A   SNE      V2, #1A         ; Skip if V2 != 26
$402    $F260   UNKNOWN  F260            ; Unknown Fxxx instruction
$404    $DE76   DRW      VE, V7, #6      ; Draw 6-byte sprite at VE, V7
$406    $D17E   DRW      V1, V7, #E      ; Draw 14-byte sprite at V1, V7
$408    $80DF   UNKNOWN  80DF            ; Unknown 8xxx instruction
$40A    $9192   UNKNOWN  $9192           ; Unknown 9xxx instruction
$40C    $9151   UNKNOWN  $9151           ; Unknown 9xxx instruction
$40E    $52C4   UNKNOWN  $52C4           ; Unknown 5xxx instruction
$410    $C2FD   RND      V2, #FD         ; V2 = random & FD
$412    $9F16   UNKNOWN  $9F16           ; Unknown 9xxx instruction
$414    $CC02   RND      VC, #02         ; VC = random & 02
$416    $1272   JP       $272            ; Jump to 272
$418    $0FCA   SYS      $FCA            ; System call to FCA
$41A    $935D   UNKNOWN  $935D           ; Unknown 9xxx instruction
$41C    $1510   JP       $510            ; Jump to 510
$41E    $F9F5   UNKNOWN  F9F5            ; Unknown Fxxx instruction
$420    $D4E3   DRW      V4, VE, #3      ; Draw 3-byte sprite at V4, VE
$422    $C2B3   RND      V2, #B3         ; V2 = random & B3
$424    $E9F9   UNKNOWN  $E9F9           ; Unknown Exxx instruction
$426    $14AC   JP       $4AC            ; Jump to 4AC
$428    $B81B   JP       V0, $81B        ; Jump to V0 + 81B
$42A    $A2AF   LD       I, $2AF         ; Load 2AF into I
$42C    $397D   SE       V9, #7D         ; Skip if V9 == 125
$42E    $FB38   UNKNOWN  FB38            ; Unknown Fxxx instruction
$430    $8B7E   SHL      VB              ; VB <<= 1, VF = MSB
$432    $AAC7   LD       I, $AC7         ; Load AC7 into I
$434    $14FE   JP       $4FE            ; Jump to 4FE
$436    $488F   SNE      V8, #8F         ; Skip if V8 != 143
$438    $A028   LD       I, $028         ; Load 028 into I
$43A    $ABF5   LD       I, $BF5         ; Load BF5 into I
$43C    $0705   SYS      $705            ; System call to 705
$43E    $802E   SHL      V0              ; V0 <<= 1, VF = MSB
$440    $2045   CALL     $045            ; Call subroutine at 045
$442    $106F   JP       $06F            ; Jump to 06F
$444    $AEE3   LD       I, $EE3         ; Load EE3 into I
$446    $3AF6   SE       VA, #F6         ; Skip if VA == 246
$448    $CC28   RND      VC, #28         ; VC = random & 28
$44A    $A1AD   LD       I, $1AD         ; Load 1AD into I
$44C    $E396   UNKNOWN  $E396           ; Unknown Exxx instruction
$44E    $97F7   UNKNOWN  $97F7           ; Unknown 9xxx instruction
$450    $C354   RND      V3, #54         ; V3 = random & 54
$452    $638A   LD       V3, #8A         ; Load 138 into V3
$454    $88F9   UNKNOWN  88F9            ; Unknown 8xxx instruction
$456    $B8CD   JP       V0, $8CD        ; Jump to V0 + 8CD
$458    $27A9   CALL     $7A9            ; Call subroutine at 7A9
$45A    $1119   JP       $119            ; Jump to 119
$45C    $02D7   SYS      $2D7            ; System call to 2D7
$45E    $8D85   SUB      VD, V8          ; VD -= V8, VF = !borrow
$460    $CB2C   RND      VB, #2C         ; VB = random & 2C
$462    $7254   ADD      V2, #54         ; Add 84 to V2
$464    $D295   DRW      V2, V9, #5      ; Draw 5-byte sprite at V2, V9
$466    $75A4   ADD      V5, #A4         ; Add 164 to V5
$468    $9212   UNKNOWN  $9212           ; Unknown 9xxx instruction
$46A    $6FE7   LD       VF, #E7         ; Load 231 into VF
$46C    $457C   SNE      V5, #7C         ; Skip if V5 != 124
$46E    $A018   LD       I, $018         ; Load 018 into I
$470    $4019   SNE      V0, #19         ; Skip if V0 != 25
$472    $9F3A   UNKNOWN  $9F3A           ; Unknown 9xxx instruction
$474    $D8C9   DRW      V8, VC, #9      ; Draw 9-byte sprite at V8, VC
$476    $CE83   RND      VE, #83         ; VE = random & 83
$478    $B433   JP       V0, $433        ; Jump to V0 + 433
$47A    $7428   ADD      V4, #28         ; Add 40 to V4
$47C    $0154   SYS      $154            ; System call to 154
$47E    $BD97   JP       V0, $D97        ; Jump to V0 + D97
$480    $71EA   ADD      V1, #EA         ; Add 234 to V1
$482    $FD1E   ADD      I, VD           ; I += VD
$484    $DB3C   DRW      VB, V3, #C      ; Draw 12-byte sprite at VB, V3
$486    $A10D   LD       I, $10D         ; Load 10D into I
$488    $9B7D   UNKNOWN  $9B7D           ; Unknown 9xxx instruction
$48A    $2A26   CALL     $A26            ; Call subroutine at A26
$48C    $50A4   UNKNOWN  $50A4           ; Unknown 5xxx instruction
$48E    $4C99   SNE      VC, #99         ; Skip if VC != 153
$490    $9634   UNKNOWN  $9634           ; Unknown 9xxx instruction
$492    $158D   JP       $58D            ; Jump to 58D
$494    $84FD   UNKNOWN  84FD            ; Unknown 8xxx instruction
$496    $624B   LD       V2, #4B         ; Load 75 into V2
$498    $BBAA   JP       V0, $BAA        ; Jump to V0 + BAA
$49A    $6E13   LD       VE, #13         ; Load 19 into VE
$49C    $262A   CALL     $62A            ; Call subroutine at 62A
$49E    $EFFD   UNKNOWN  $EFFD           ; Unknown Exxx instruction
$4A0    $5952   UNKNOWN  $5952           ; Unknown 5xxx instruction
$4A2    $FA3B   UNKNOWN  FA3B            ; Unknown Fxxx instruction
$4A4    $82D3   XOR      V2, VD          ; V2 ^= VD
$4A6    $6A9C   LD       VA, #9C         ; Load 156 into VA
$4A8    $6CAE   LD       VC, #AE         ; Load 174 into VC
$4AA    $58CF   UNKNOWN  $58CF           ; Unknown 5xxx instruction
$4AC    $B783   JP       V0, $783        ; Jump to V0 + 783
$4AE    $A4A3   LD       I, $4A3         ; Load 4A3 into I
$4B0    $8C7F   UNKNOWN  8C7F            ; Unknown 8xxx instruction
$4B2    $8706   SHR      V7              ; V7 >>= 1, VF = LSB
$4B4    $1B04   JP       $B04            ; Jump to B04
$4B6    $7F7B   ADD      VF, #7B         ; Add 123 to VF
$4B8    $2B5C   CALL     $B5C            ; Call subroutine at B5C
$4BA    $DEC5   DRW      VE, VC, #5      ; Draw 5-byte sprite at VE, VC
$4BC    $8B0F   UNKNOWN  8B0F            ; Unknown 8xxx instruction
$4BE    $F86F   UNKNOWN  F86F            ; Unknown Fxxx instruction
$4C0    $595C   UNKNOWN  $595C           ; Unknown 5xxx instruction
$4C2    $F7A0   UNKNOWN  F7A0            ; Unknown Fxxx instruction
$4C4    $8005   SUB      V0, V0          ; V0 -= V0, VF = !borrow
$4C6    $3BB9   SE       VB, #B9         ; Skip if VB == 185
$4C8    $47D0   SNE      V7, #D0         ; Skip if V7 != 208
$4CA    $5D35   UNKNOWN  $5D35           ; Unknown 5xxx instruction
$4CC    $37DF   SE       V7, #DF         ; Skip if V7 == 223
$4CE    $51A3   UNKNOWN  $51A3           ; Unknown 5xxx instruction
$4D0    $395D   SE       V9, #5D         ; Skip if V9 == 93
$4D2    $4B2E   SNE      VB, #2E         ; Skip if VB != 46
$4D4    $2FB0   CALL     $FB0            ; Call subroutine at FB0
$4D6    $019E   SYS      $19E            ; System call to 19E
$4D8    $1AE5   JP       $AE5            ; Jump to AE5
$4DA    $477A   SNE      V7, #7A         ; Skip if V7 != 122
$4DC    $2BD4   CALL     $BD4            ; Call subroutine at BD4
$4DE    $C010   RND      V0, #10         ; V0 = random & 10
$4E0    $BD90   JP       V0, $D90        ; Jump to V0 + D90
$4E2    $87DD   UNKNOWN  87DD            ; Unknown 8xxx instruction
$4E4    $64A3   LD       V4, #A3         ; Load 163 into V4
$4E6    $7978   ADD      V9, #78         ; Add 120 to V9
$4E8    $2FCD   CALL     $FCD            ; Call subroutine at FCD
$4EA    $FF6C   UNKNOWN  FF6C            ; Unknown Fxxx instruction
$4EC    $790A   ADD      V9, #0A         ; Add 10 to V9
$4EE    $095E   SYS      $95E            ; System call to 95E
$4F0    $7AF6   ADD      VA, #F6         ; Add 246 to VA
$4F2    $D61B   DRW      V6, V1, #B      ; Draw 11-byte sprite at V6, V1
$4F4    $48FF   SNE      V8, #FF         ; Skip if V8 != 255
$4F6    $0BE5   SYS      $BE5            ; System call to BE5
$4F8    $5AB6   UNKNOWN  $5AB6           ; Unknown 5xxx instruction
$4FA    $DF48   DRW      VF, V4, #8      ; Draw 8-byte sprite at VF, V4
$4FC    $63F8   LD       V3, #F8         ; Load 248 into V3
$4FE    $2BD0   CALL     $BD0            ; Call subroutine at BD0
$500    $34AD   SE       V4, #AD         ; Skip if V4 == 173
$502    $0351   SYS      $351            ; System call to 351
$504    $A18F   LD       I, $18F         ; Load 18F into I
$506    $5BCA   UNKNOWN  $5BCA           ; Unknown 5xxx instruction
$508    $18E1   JP       $8E1            ; Jump to 8E1
$50A    $BD93   JP       V0, $D93        ; Jump to V0 + D93
$50C    $042F   SYS      $42F            ; System call to 42F
$50E    $98E2   UNKNOWN  $98E2           ; Unknown 9xxx instruction
$510    $E675   UNKNOWN  $E675           ; Unknown Exxx instruction
$512    $9710   SNE      V7, V1          ; Skip if V7 != V1
$514    $BF01   JP       V0, $F01        ; Jump to V0 + F01
$516    $22E2   CALL     $2E2            ; Call subroutine at 2E2
$518    $F3EE   UNKNOWN  F3EE            ; Unknown Fxxx instruction
$51A    $8686   SHR      V6              ; V6 >>= 1, VF = LSB
$51C    $02BA   SYS      $2BA            ; System call to 2BA
$51E    $7A52   ADD      VA, #52         ; Add 82 to VA
$520    $582F   UNKNOWN  $582F           ; Unknown 5xxx instruction
$522    $9BE4   UNKNOWN  $9BE4           ; Unknown 9xxx instruction
$524    $984D   UNKNOWN  $984D           ; Unknown 9xxx instruction
$526    $0D96   SYS      $D96            ; System call to D96
$528    $D262   DRW      V2, V6, #2      ; Draw 2-byte sprite at V2, V6
$52A    $124A   JP       $24A            ; Jump to 24A
$52C    $A035   LD       I, $035         ; Load 035 into I
$52E    $A807   LD       I, $807         ; Load 807 into I
$530    $AD2B   LD       I, $D2B         ; Load D2B into I
$532    $1CC6   JP       $CC6            ; Jump to CC6
$534    $F1DA   UNKNOWN  F1DA            ; Unknown Fxxx instruction
$536    $A9AB   LD       I, $9AB         ; Load 9AB into I
$538    $80CB   UNKNOWN  80CB            ; Unknown 8xxx instruction
$53A    $D9BF   DRW      V9, VB, #F      ; Draw 15-byte sprite at V9, VB
$53C    $01DD   SYS      $1DD            ; System call to 1DD
$53E    $BDF4   JP       V0, $DF4        ; Jump to V0 + DF4
$540    $F9EC   UNKNOWN  F9EC            ; Unknown Fxxx instruction
$542    $A7D4   LD       I, $7D4         ; Load 7D4 into I
$544    $D29D   DRW      V2, V9, #D      ; Draw 13-byte sprite at V2, V9
$546    $1374   JP       $374            ; Jump to 374
$548    $8500   LD       V5, V0          ; V5 = V0
$54A    $5A29   UNKNOWN  $5A29           ; Unknown 5xxx instruction
$54C    $1AEE   JP       $AEE            ; Jump to AEE
$54E    $9508   UNKNOWN  $9508           ; Unknown 9xxx instruction
$550    $B2E5   JP       V0, $2E5        ; Jump to V0 + 2E5
$552    $6F6C   LD       VF, #6C         ; Load 108 into VF
$554    $4B76   SNE      VB, #76         ; Skip if VB != 118
$556    $BC70   JP       V0, $C70        ; Jump to V0 + C70
$558    $D91B   DRW      V9, V1, #B      ; Draw 11-byte sprite at V9, V1
$55A    $48AC   SNE      V8, #AC         ; Skip if V8 != 172
$55C    $63EB   LD       V3, #EB         ; Load 235 into V3
$55E    $403C   SNE      V0, #3C         ; Skip if V0 != 60
$560    $6A0E   LD       VA, #0E         ; Load 14 into VA
$562    $7170   ADD      V1, #70         ; Add 112 to V1
$564    $4F07   SNE      VF, #07         ; Skip if VF != 7
$566    $B4F6   JP       V0, $4F6        ; Jump to V0 + 4F6
$568    $41A7   SNE      V1, #A7         ; Skip if V1 != 167
$56A    $77EB   ADD      V7, #EB         ; Add 235 to V7
$56C    $41A3   SNE      V1, #A3         ; Skip if V1 != 163
$56E    $FE3E   UNKNOWN  FE3E            ; Unknown Fxxx instruction
$570    $E945   UNKNOWN  $E945           ; Unknown Exxx instruction
$572    $030A   SYS      $30A            ; System call to 30A
$574    $A95A   LD       I, $95A         ; Load 95A into I
$576    $DA7E   DRW      VA, V7, #E      ; Draw 14-byte sprite at VA, V7
$578    $61B4   LD       V1, #B4         ; Load 180 into V1
$57A    $D8BC   DRW      V8, VB, #C      ; Draw 12-byte sprite at V8, VB
$57C    $D1C5   DRW      V1, VC, #5      ; Draw 5-byte sprite at V1, VC
$57E    $E4D6   UNKNOWN  $E4D6           ; Unknown Exxx instruction
$580    $4082   SNE      V0, #82         ; Skip if V0 != 130
$582    $C6D4   RND      V6, #D4         ; V6 = random & D4
$584    $6A94   LD       VA, #94         ; Load 148 into VA
$586    $699A   LD       V9, #9A         ; Load 154 into V9
$588    $DDD6   DRW      VD, VD, #6      ; Draw 6-byte sprite at VD, VD
$58A    $1DDC   JP       $DDC            ; Jump to DDC
$58C    $57C9   UNKNOWN  $57C9           ; Unknown 5xxx instruction
$58E    $C078   RND      V0, #78         ; V0 = random & 78
$590    $6E21   LD       VE, #21         ; Load 33 into VE
$592    $CC57   RND      VC, #57         ; VC = random & 57
$594    $518B   UNKNOWN  $518B           ; Unknown 5xxx instruction
$596    $7A23   ADD      VA, #23         ; Add 35 to VA
$598    $9F5E   UNKNOWN  $9F5E           ; Unknown 9xxx instruction
$59A    $DD3D   DRW      VD, V3, #D      ; Draw 13-byte sprite at VD, V3
$59C    $60E6   LD       V0, #E6         ; Load 230 into V0
$59E    $0B73   SYS      $B73            ; System call to B73
$5A0    $B095   JP       V0, $095        ; Jump to V0 + 095
$5A2    $9CCF   UNKNOWN  $9CCF           ; Unknown 9xxx instruction
$5A4    $6CE1   LD       VC, #E1         ; Load 225 into VC
$5A6    $D0B6   DRW      V0, VB, #6      ; Draw 6-byte sprite at V0, VB
$5A8    $B31F   JP       V0, $31F        ; Jump to V0 + 31F
$5AA    $F705   UNKNOWN  F705            ; Unknown Fxxx instruction
$5AC    $BDF1   JP       V0, $DF1        ; Jump to V0 + DF1
$5AE    $3444   SE       V4, #44         ; Skip if V4 == 68
$5B0    $3732   SE       V7, #32         ; Skip if V7 == 50
$5B2    $677F   LD       V7, #7F         ; Load 127 into V7
$5B4    $F3B4   UNKNOWN  F3B4            ; Unknown Fxxx instruction
$5B6    $228A   CALL     $28A            ; Call subroutine at 28A
$5B8    $8146   SHR      V1              ; V1 >>= 1, VF = LSB
$5BA    $8298   UNKNOWN  8298            ; Unknown 8xxx instruction
$5BC    $EDB8   UNKNOWN  $EDB8           ; Unknown Exxx instruction
$5BE    $D5EC   DRW      V5, VE, #C      ; Draw 12-byte sprite at V5, VE
$5C0    $A48F   LD       I, $48F         ; Load 48F into I
$5C2    $C483   RND      V4, #83         ; V4 = random & 83
$5C4    $E683   UNKNOWN  $E683           ; Unknown Exxx instruction
$5C6    $C741   RND      V7, #41         ; V7 = random & 41
$5C8    $7853   ADD      V8, #53         ; Add 83 to V8
$5CA    $A40D   LD       I, $40D         ; Load 40D into I
$5CC    $4C14   SNE      VC, #14         ; Skip if VC != 20
$5CE    $5084   UNKNOWN  $5084           ; Unknown 5xxx instruction
$5D0    $24B8   CALL     $4B8            ; Call subroutine at 4B8
$5D2    $ADAC   LD       I, $DAC         ; Load DAC into I
$5D4    $7EE7   ADD      VE, #E7         ; Add 231 to VE
$5D6    $A667   LD       I, $667         ; Load 667 into I
$5D8    $AD5D   LD       I, $D5D         ; Load D5D into I
$5DA    $5D6F   UNKNOWN  $5D6F           ; Unknown 5xxx instruction
$5DC    $8A50   LD       VA, V5          ; VA = V5
$5DE    $A904   LD       I, $904         ; Load 904 into I
$5E0    $2790   CALL     $790            ; Call subroutine at 790
$5E2    $8C70   LD       VC, V7          ; VC = V7
$5E4    $2510   CALL     $510            ; Call subroutine at 510
$5E6    $94E5   UNKNOWN  $94E5           ; Unknown 9xxx instruction
$5E8    $87FE   SHL      V7              ; V7 <<= 1, VF = MSB
$5EA    $F46C   UNKNOWN  F46C            ; Unknown Fxxx instruction
$5EC    $8A45   SUB      VA, V4          ; VA -= V4, VF = !borrow
$5EE    $5BCD   UNKNOWN  $5BCD           ; Unknown 5xxx instruction
$5F0    $73B0   ADD      V3, #B0         ; Add 176 to V3
$5F2    $C4A6   RND      V4, #A6         ; V4 = random & A6
$5F4    $180A   JP       $80A            ; Jump to 80A
$5F6    $BD8E   JP       V0, $D8E        ; Jump to V0 + D8E
$5F8    $2D4E   CALL     $D4E            ; Call subroutine at D4E
$5FA    $8F8C   UNKNOWN  8F8C            ; Unknown 8xxx instruction
$5FC    $E112   UNKNOWN  $E112           ; Unknown Exxx instruction
$5FE    $7FFD   ADD      VF, #FD         ; Add 253 to VF
$600    $D1FE   DRW      V1, VF, #E      ; Draw 14-byte sprite at V1, VF
$602    $F5BE   UNKNOWN  F5BE            ; Unknown Fxxx instruction
$604    $6A21   LD       VA, #21         ; Load 33 into VA
$606    $AFF1   LD       I, $FF1         ; Load FF1 into I
$608    $5277   UNKNOWN  $5277           ; Unknown 5xxx instruction
$60A    $422E   SNE      V2, #2E         ; Skip if V2 != 46
$60C    $DA5F   DRW      VA, V5, #F      ; Draw 15-byte sprite at VA, V5
$60E    $6093   LD       V0, #93         ; Load 147 into V0
$610    $D553   DRW      V5, V5, #3      ; Draw 3-byte sprite at V5, V5
$612    $96AD   UNKNOWN  $96AD           ; Unknown 9xxx instruction
$614    $DA04   DRW      VA, V0, #4      ; Draw 4-byte sprite at VA, V0
$616    $4284   SNE      V2, #84         ; Skip if V2 != 132
$618    $1443   JP       $443            ; Jump to 443
$61A    $989A   UNKNOWN  $989A           ; Unknown 9xxx instruction
$61C    $34AE   SE       V4, #AE         ; Skip if V4 == 174
$61E    $90B8   UNKNOWN  $90B8           ; Unknown 9xxx instruction
$620    $EC79   UNKNOWN  $EC79           ; Unknown Exxx instruction
$622    $85ED   UNKNOWN  85ED            ; Unknown 8xxx instruction
$624    $C56C   RND      V5, #6C         ; V5 = random & 6C
$626    $716C   ADD      V1, #6C         ; Add 108 to V1
$628    $C1AF   RND      V1, #AF         ; V1 = random & AF
$62A    $F4EE   UNKNOWN  F4EE            ; Unknown Fxxx instruction
$62C    $35A2   SE       V5, #A2         ; Skip if V5 == 162
$62E    $0A58   SYS      $A58            ; System call to A58
$630    $1774   JP       $774            ; Jump to 774
$632    $2DD1   CALL     $DD1            ; Call subroutine at DD1
$634    $F577   UNKNOWN  F577            ; Unknown Fxxx instruction
$636    $C1E2   RND      V1, #E2         ; V1 = random & E2
$638    $5615   UNKNOWN  $5615           ; Unknown 5xxx instruction
$63A    $D622   DRW      V6, V2, #2      ; Draw 2-byte sprite at V6, V2
$63C    $2C47   CALL     $C47            ; Call subroutine at C47
$63E    $EDDF   UNKNOWN  $EDDF           ; Unknown Exxx instruction
$640    $EC8B   UNKNOWN  $EC8B           ; Unknown Exxx instruction
$642    $6662   LD       V6, #62         ; Load 98 into V6
$644    $BBF4   JP       V0, $BF4        ; Jump to V0 + BF4
$646    $18AA   JP       $8AA            ; Jump to 8AA
$648    $DAAE   DRW      VA, VA, #E      ; Draw 14-byte sprite at VA, VA
$64A    $54C1   UNKNOWN  $54C1           ; Unknown 5xxx instruction
$64C    $7F57   ADD      VF, #57         ; Add 87 to VF
$64E    $F510   UNKNOWN  F510            ; Unknown Fxxx instruction
$650    $3550   SE       V5, #50         ; Skip if V5 == 80
$652    $2257   CALL     $257            ; Call subroutine at 257
$654    $5B22   UNKNOWN  $5B22           ; Unknown 5xxx instruction
$656    $E84E   UNKNOWN  $E84E           ; Unknown Exxx instruction
$658    $A2DA   LD       I, $2DA         ; Load 2DA into I
$65A    $3012   SE       V0, #12         ; Skip if V0 == 18
$65C    $DBC4   DRW      VB, VC, #4      ; Draw 4-byte sprite at VB, VC
$65E    $407E   SNE      V0, #7E         ; Skip if V0 != 126
$660    $8A0D   UNKNOWN  8A0D            ; Unknown 8xxx instruction
$662    $0E0F   SYS      $E0F            ; System call to E0F
$664    $C5FF   RND      V5, #FF         ; V5 = random & FF
$666    $98CB   UNKNOWN  $98CB           ; Unknown 9xxx instruction
$668    $BEA1   JP       V0, $EA1        ; Jump to V0 + EA1
$66A    $1D74   JP       $D74            ; Jump to D74
$66C    $4795   SNE      V7, #95         ; Skip if V7 != 149
$66E    $A253   LD       I, $253         ; Load 253 into I
$670    $F05D   UNKNOWN  F05D            ; Unknown Fxxx instruction
$672    $813C   UNKNOWN  813C            ; Unknown 8xxx instruction
$674    $F8F3   UNKNOWN  F8F3            ; Unknown Fxxx instruction
$676    $E3DE   UNKNOWN  $E3DE           ; Unknown Exxx instruction
$678    $AC91   LD       I, $C91         ; Load C91 into I
$67A    $5137   UNKNOWN  $5137           ; Unknown 5xxx instruction
$67C    $643B   LD       V4, #3B         ; Load 59 into V4
$67E    $7265   ADD      V2, #65         ; Add 101 to V2
$680    $3F3E   SE       VF, #3E         ; Skip if VF == 62
$682    $236A   CALL     $36A            ; Call subroutine at 36A
$684    $19DA   JP       $9DA            ; Jump to 9DA
$686    $EB6C   UNKNOWN  $EB6C           ; Unknown Exxx instruction
$688    $9872   UNKNOWN  $9872           ; Unknown 9xxx instruction
$68A    $C231   RND      V2, #31         ; V2 = random & 31
$68C    $DA93   DRW      VA, V9, #3      ; Draw 3-byte sprite at VA, V9
$68E    $2443   CALL     $443            ; Call subroutine at 443
$690    $945D   UNKNOWN  $945D           ; Unknown 9xxx instruction
$692    $8152   AND      V1, V5          ; V1 &= V5
$694    $8BD0   LD       VB, VD          ; VB = VD
$696    $14EE   JP       $4EE            ; Jump to 4EE
$698    $09C3   SYS      $9C3            ; System call to 9C3
$69A    $2F27   CALL     $F27            ; Call subroutine at F27
$69C    $A6E1   LD       I, $6E1         ; Load 6E1 into I
$69E    $6E67   LD       VE, #67         ; Load 103 into VE
$6A0    $3172   SE       V1, #72         ; Skip if V1 == 114
$6A2    $2887   CALL     $887            ; Call subroutine at 887
$6A4    $E72F   UNKNOWN  $E72F           ; Unknown Exxx instruction
$6A6    $F943   UNKNOWN  F943            ; Unknown Fxxx instruction
$6A8    $4607   SNE      V6, #07         ; Skip if V6 != 7
$6AA    $82E6   SHR      V2              ; V2 >>= 1, VF = LSB
$6AC    $0C0F   SYS      $C0F            ; System call to C0F
$6AE    $0B0D   SYS      $B0D            ; System call to B0D
$6B0    $D830   DRW      V8, V3, #0      ; Draw 0-byte sprite at V8, V3
$6B2    $3DF0   SE       VD, #F0         ; Skip if VD == 240
$6B4    $5583   UNKNOWN  $5583           ; Unknown 5xxx instruction
$6B6    $30F1   SE       V0, #F1         ; Skip if V0 == 241
$6B8    $38EE   SE       V8, #EE         ; Skip if V8 == 238
$6BA    $9C50   SNE      VC, V5          ; Skip if VC != V5
$6BC    $2211   CALL     $211            ; Call subroutine at 211
$6BE    $00C9   SYS      $0C9            ; System call to 0C9
$6C0    $6D64   LD       VD, #64         ; Load 100 into VD
$6C2    $5CC9   UNKNOWN  $5CC9           ; Unknown 5xxx instruction
$6C4    $CDB8   RND      VD, #B8         ; VD = random & B8
$6C6    $E996   UNKNOWN  $E996           ; Unknown Exxx instruction
$6C8    $ACEE   LD       I, $CEE         ; Load CEE into I
$6CA    $E7B7   UNKNOWN  $E7B7           ; Unknown Exxx instruction
$6CC    $936A   UNKNOWN  $936A           ; Unknown 9xxx instruction
$6CE    $E074   UNKNOWN  $E074           ; Unknown Exxx instruction
$6D0    $C510   RND      V5, #10         ; V5 = random & 10
$6D2    $8D1B   UNKNOWN  8D1B            ; Unknown 8xxx instruction
$6D4    $5726   UNKNOWN  $5726           ; Unknown 5xxx instruction
$6D6    $152F   JP       $52F            ; Jump to 52F
$6D8    $78C7   ADD      V8, #C7         ; Add 199 to V8
$6DA    $8353   XOR      V3, V5          ; V3 ^= V5
$6DC    $4FBE   SNE      VF, #BE         ; Skip if VF != 190
$6DE    $394B   SE       V9, #4B         ; Skip if V9 == 75
$6E0    $E744   UNKNOWN  $E744           ; Unknown Exxx instruction
$6E2    $0B9E   SYS      $B9E            ; System call to B9E
$6E4    $0EA2   SYS      $EA2            ; System call to EA2
$6E6    $D535   DRW      V5, V3, #5      ; Draw 5-byte sprite at V5, V3
$6E8    $C6F6   RND      V6, #F6         ; V6 = random & F6
$6EA    $D4E2   DRW      V4, VE, #2      ; Draw 2-byte sprite at V4, VE
$6EC    $5287   UNKNOWN  $5287           ; Unknown 5xxx instruction
$6EE    $8E75   SUB      VE, V7          ; VE -= V7, VF = !borrow
$6F0    $89E6   SHR      V9              ; V9 >>= 1, VF = LSB
$6F2    $F24B   UNKNOWN  F24B            ; Unknown Fxxx instruction
$6F4    $08D4   SYS      $8D4            ; System call to 8D4
$6F6    $BAAD   JP       V0, $AAD        ; Jump to V0 + AAD
$6F8    $52DF   UNKNOWN  $52DF           ; Unknown 5xxx instruction
$6FA    $7B61   ADD      VB, #61         ; Add 97 to VB
$6FC    $858B   UNKNOWN  858B            ; Unknown 8xxx instruction
$6FE    $EC1F   UNKNOWN  $EC1F           ; Unknown Exxx instruction
$700    $8A25   SUB      VA, V2          ; VA -= V2, VF = !borrow
$702    $BF6A   JP       V0, $F6A        ; Jump to V0 + F6A
$704    $6188   LD       V1, #88         ; Load 136 into V1
$706    $88EB   UNKNOWN  88EB            ; Unknown 8xxx instruction
$708    $983C   UNKNOWN  $983C           ; Unknown 9xxx instruction
$70A    $177B   JP       $77B            ; Jump to 77B
$70C    $0FB8   SYS      $FB8            ; System call to FB8
$70E    $F195   UNKNOWN  F195            ; Unknown Fxxx instruction
$710    $1A9E   JP       $A9E            ; Jump to A9E
$712    $46AE   SNE      V6, #AE         ; Skip if V6 != 174
$714    $8C8D   UNKNOWN  8C8D            ; Unknown 8xxx instruction
$716    $A53F   LD       I, $53F         ; Load 53F into I
$718    $E134   UNKNOWN  $E134           ; Unknown Exxx instruction
$71A    $3FF2   SE       VF, #F2         ; Skip if VF == 242
$71C    $E2BE   UNKNOWN  $E2BE           ; Unknown Exxx instruction
$71E    $6985   LD       V9, #85         ; Load 133 into V9
$720    $519B   UNKNOWN  $519B           ; Unknown 5xxx instruction
$722    $FB94   UNKNOWN  FB94            ; Unknown Fxxx instruction
$724    $1475   JP       $475            ; Jump to 475
$726    $809A   UNKNOWN  809A            ; Unknown 8xxx instruction
$728    $72DC   ADD      V2, #DC         ; Add 220 to V2
$72A    $68D6   LD       V8, #D6         ; Load 214 into V8
$72C    $EA84   UNKNOWN  $EA84           ; Unknown Exxx instruction
$72E    $00FD   SYS      $0FD            ; System call to 0FD
$730    $BD7A   JP       V0, $D7A        ; Jump to V0 + D7A
$732    $313B   SE       V1, #3B         ; Skip if V1 == 59
$734    $2EF7   CALL     $EF7            ; Call subroutine at EF7
$736    $35CB   SE       V5, #CB         ; Skip if V5 == 203
$738    $8E36   SHR      VE              ; VE >>= 1, VF = LSB
$73A    $A400   LD       I, $400         ; Load 400 into I
$73C    $8D55   SUB      VD, V5          ; VD -= V5, VF = !borrow
$73E    $1362   JP       $362            ; Jump to 362
$740    $1C2B   JP       $C2B            ; Jump to C2B
$742    $F17D   UNKNOWN  F17D            ; Unknown Fxxx instruction
$744    $976D   UNKNOWN  $976D           ; Unknown 9xxx instruction
$746    $C5C7   RND      V5, #C7         ; V5 = random & C7
$748    $FACA   UNKNOWN  FACA            ; Unknown Fxxx instruction
$74A    $739B   ADD      V3, #9B         ; Add 155 to V3
$74C    $2595   CALL     $595            ; Call subroutine at 595
$74E    $4230   SNE      V2, #30         ; Skip if V2 != 48
$750    $E32D   UNKNOWN  $E32D           ; Unknown Exxx instruction
$752    $4C83   SNE      VC, #83         ; Skip if VC != 131
$754    $6B85   LD       VB, #85         ; Load 133 into VB
$756    $40E2   SNE      V0, #E2         ; Skip if V0 != 226
$758    $9F9D   UNKNOWN  $9F9D           ; Unknown 9xxx instruction
$75A    $D4D7   DRW      V4, VD, #7      ; Draw 7-byte sprite at V4, VD
$75C    $057F   SYS      $57F            ; System call to 57F
$75E    $4660   SNE      V6, #60         ; Skip if V6 != 96
$760    $BEF6   JP       V0, $EF6        ; Jump to V0 + EF6
$762    $1E99   JP       $E99            ; Jump to E99
$764    $9862   UNKNOWN  $9862           ; Unknown 9xxx instruction
$766    $E5A0   UNKNOWN  $E5A0           ; Unknown Exxx instruction
$768    $9789   UNKNOWN  $9789           ; Unknown 9xxx instruction
$76A    $2218   CALL     $218            ; Call subroutine at 218
$76C    $30BD   SE       V0, #BD         ; Skip if V0 == 189
$76E    $5BE2   UNKNOWN  $5BE2           ; Unknown 5xxx instruction
$770    $A6DB   LD       I, $6DB         ; Load 6DB into I
$772    $8167   SUBN     V1, V6          ; V1 = V6 - V1, VF = !borrow
$774    $E754   UNKNOWN  $E754           ; Unknown Exxx instruction
$776    $385B   SE       V8, #5B         ; Skip if V8 == 91
$778    $57A0   SE       V7, VA          ; Skip if V7 == VA
$77A    $9463   UNKNOWN  $9463           ; Unknown 9xxx instruction
$77C    $6691   LD       V6, #91         ; Load 145 into V6
$77E    $7887   ADD      V8, #87         ; Add 135 to V8
$780    $50EB   UNKNOWN  $50EB           ; Unknown 5xxx instruction
$782    $4081   SNE      V0, #81         ; Skip if V0 != 129
$784    $74B0   ADD      V4, #B0         ; Add 176 to V4
$786    $BB96   JP       V0, $B96        ; Jump to V0 + B96
$788    $2387   CALL     $387            ; Call subroutine at 387
$78A    $8092   AND      V0, V9          ; V0 &= V9
$78C    $B6CC   JP       V0, $6CC        ; Jump to V0 + 6CC
$78E    $7213   ADD      V2, #13         ; Add 19 to V2
$790    $7701   ADD      V7, #01         ; Add 1 to V7
$792    $BE0A   JP       V0, $E0A        ; Jump to V0 + E0A
$794    $2E2C   CALL     $E2C            ; Call subroutine at E2C
$796    $8909   UNKNOWN  8909            ; Unknown 8xxx instruction
$798    $42B9   SNE      V2, #B9         ; Skip if V2 != 185
$79A    $D85D   DRW      V8, V5, #D      ; Draw 13-byte sprite at V8, V5
$79C    $F552   UNKNOWN  F552            ; Unknown Fxxx instruction
$79E    $ECC3   UNKNOWN  $ECC3           ; Unknown Exxx instruction
$7A0    $E57A   UNKNOWN  $E57A           ; Unknown Exxx instruction
$7A2    $041A   SYS      $41A            ; System call to 41A
$7A4    $891A   UNKNOWN  891A            ; Unknown 8xxx instruction
$7A6    $A5C5   LD       I, $5C5         ; Load 5C5 into I
$7A8    $F088   UNKNOWN  F088            ; Unknown Fxxx instruction
$7AA    $4732   SNE      V7, #32         ; Skip if V7 != 50
$7AC    $556C   UNKNOWN  $556C           ; Unknown 5xxx instruction
$7AE    $9FAB   UNKNOWN  $9FAB           ; Unknown 9xxx instruction
$7B0    $F765   LD       V7, [I]         ; Load V0-V7 from I
$7B2    $AD55   LD       I, $D55         ; Load D55 into I
$7B4    $9E92   UNKNOWN  $9E92           ; Unknown 9xxx instruction
$7B6    $DE02   DRW      VE, V0, #2      ; Draw 2-byte sprite at VE, V0
$7B8    $3672   SE       V6, #72         ; Skip if V6 == 114
$7BA    $FB41   UNKNOWN  FB41            ; Unknown Fxxx instruction
$7BC    $7849   ADD      V8, #49         ; Add 73 to V8
$7BE    $8D57   SUBN     VD, V5          ; VD = V5 - VD, VF = !borrow
$7C0    $BDDF   JP       V0, $DDF        ; Jump to V0 + DDF
$7C2    $A133   LD       I, $133         ; Load 133 into I
$7C4    $94C0   SNE      V4, VC          ; Skip if V4 != VC
$7C6    $7EBE   ADD      VE, #BE         ; Add 190 to VE
$7C8    $B758   JP       V0, $758        ; Jump to V0 + 758
$7CA    $406C   SNE      V0, #6C         ; Skip if V0 != 108
$7CC    $3E60   SE       VE, #60         ; Skip if VE == 96
$7CE    $3F0B   SE       VF, #0B         ; Skip if VF == 11
$7D0    $2623   CALL     $623            ; Call subroutine at 623
$7D2    $09B2   SYS      $9B2            ; System call to 9B2
$7D4    $31AE   SE       V1, #AE         ; Skip if V1 == 174
$7D6    $08B5   SYS      $8B5            ; System call to 8B5
$7D8    $D4D5   DRW      V4, VD, #5      ; Draw 5-byte sprite at V4, VD
$7DA    $F3A9   UNKNOWN  F3A9            ; Unknown Fxxx instruction
$7DC    $9955   UNKNOWN  $9955           ; Unknown 9xxx instruction
$7DE    $EABE   UNKNOWN  $EABE           ; Unknown Exxx instruction
$7E0    $5541   UNKNOWN  $5541           ; Unknown 5xxx instruction
$7E2    $A7EB   LD       I, $7EB         ; Load 7EB into I
$7E4    $516A   UNKNOWN  $516A           ; Unknown 5xxx instruction
$7E6    $6554   LD       V5, #54         ; Load 84 into V5
$7E8    $9E43   UNKNOWN  $9E43           ; Unknown 9xxx instruction
$7EA    $3384   SE       V3, #84         ; Skip if V3 == 132
$7EC    $8B3F   UNKNOWN  8B3F            ; Unknown 8xxx instruction
$7EE    $EAB6   UNKNOWN  $EAB6           ; Unknown Exxx instruction
$7F0    $850F   UNKNOWN  850F            ; Unknown 8xxx instruction
$7F2    $5BF9   UNKNOWN  $5BF9           ; Unknown 5xxx instruction
$7F4    $A395   LD       I, $395         ; Load 395 into I
$7F6    $10AB   JP       $0AB            ; Jump to 0AB
$7F8    $8EC8   UNKNOWN  8EC8            ; Unknown 8xxx instruction
$7FA    $36BC   SE       V6, #BC         ; Skip if V6 == 188
$7FC    $9791   UNKNOWN  $9791           ; Unknown 9xxx instruction
$7FE    $7EFC   ADD      VE, #FC         ; Add 252 to VE
$800    $15E5   JP       $5E5            ; Jump to 5E5
$802    $B5F6   JP       V0, $5F6        ; Jump to V0 + 5F6
$804    $9E2B   UNKNOWN  $9E2B           ; Unknown 9xxx instruction
$806    $812F   UNKNOWN  812F            ; Unknown 8xxx instruction
$808    $CD66   RND      VD, #66         ; VD = random & 66
$80A    $8043   XOR      V0, V4          ; V0 ^= V4
$80C    $3CDA   SE       VC, #DA         ; Skip if VC == 218
$80E    $AA15   LD       I, $A15         ; Load A15 into I
$810    $867A   UNKNOWN  867A            ; Unknown 8xxx instruction
$812    $EBEF   UNKNOWN  $EBEF           ; Unknown Exxx instruction
$814    $94EA   UNKNOWN  $94EA           ; Unknown 9xxx instruction
$816    $CBB4   RND      VB, #B4         ; VB = random & B4
$818    $E7A3   UNKNOWN  $E7A3           ; Unknown Exxx instruction
$81A    $884A   UNKNOWN  884A            ; Unknown 8xxx instruction
$81C    $01C4   SYS      $1C4            ; System call to 1C4
$81E    $1FA4   JP       $FA4            ; Jump to FA4
$820    $2036   CALL     $036            ; Call subroutine at 036
$822    $AAD6   LD       I, $AD6         ; Load AD6 into I
$824    $0BF0   SYS      $BF0            ; System call to BF0
$826    $5F2B   UNKNOWN  $5F2B           ; Unknown 5xxx instruction
$828    $A99D   LD       I, $99D         ; Load 99D into I
$82A    $A6D3   LD       I, $6D3         ; Load 6D3 into I
$82C    $3311   SE       V3, #11         ; Skip if V3 == 17
$82E    $EDEB   UNKNOWN  $EDEB           ; Unknown Exxx instruction
$830    $CE7B   RND      VE, #7B         ; VE = random & 7B
$832    $A4D5   LD       I, $4D5         ; Load 4D5 into I
$834    $5A14   UNKNOWN  $5A14           ; Unknown 5xxx instruction
$836    $C8B1   RND      V8, #B1         ; V8 = random & B1
$838    $6DC8   LD       VD, #C8         ; Load 200 into VD
$83A    $BE5A   JP       V0, $E5A        ; Jump to V0 + E5A
$83C    $B85A   JP       V0, $85A        ; Jump to V0 + 85A
$83E    $54E8   UNKNOWN  $54E8           ; Unknown 5xxx instruction
$840    $79AE   ADD      V9, #AE         ; Add 174 to V9
$842    $3A44   SE       VA, #44         ; Skip if VA == 68
$844    $E831   UNKNOWN  $E831           ; Unknown Exxx instruction
$846    $4EB2   SNE      VE, #B2         ; Skip if VE != 178
$848    $3F76   SE       VF, #76         ; Skip if VF == 118
$84A    $2374   CALL     $374            ; Call subroutine at 374
$84C    $7A30   ADD      VA, #30         ; Add 48 to VA
$84E    $1653   JP       $653            ; Jump to 653
$850    $242F   CALL     $42F            ; Call subroutine at 42F
$852    $93B7   UNKNOWN  $93B7           ; Unknown 9xxx instruction
$854    $DC5E   DRW      VC, V5, #E      ; Draw 14-byte sprite at VC, V5
$856    $98B1   UNKNOWN  $98B1           ; Unknown 9xxx instruction
$858    $3EA7   SE       VE, #A7         ; Skip if VE == 167
$85A    $0826   SYS      $826            ; System call to 826
$85C    $BFB0   JP       V0, $FB0        ; Jump to V0 + FB0
$85E    $7932   ADD      V9, #32         ; Add 50 to V9
$860    $449C   SNE      V4, #9C         ; Skip if V4 != 156
$862    $F949   UNKNOWN  F949            ; Unknown Fxxx instruction
$864    $A4D8   LD       I, $4D8         ; Load 4D8 into I
$866    $2FFD   CALL     $FFD            ; Call subroutine at FFD
$868    $D7F5   DRW      V7, VF, #5      ; Draw 5-byte sprite at V7, VF
$86A    $C661   RND      V6, #61         ; V6 = random & 61
$86C    $8B58   UNKNOWN  8B58            ; Unknown 8xxx instruction
$86E    $5D94   UNKNOWN  $5D94           ; Unknown 5xxx instruction
$870    $B1D1   JP       V0, $1D1        ; Jump to V0 + 1D1
$872    $952A   UNKNOWN  $952A           ; Unknown 9xxx instruction
$874    $5D94   UNKNOWN  $5D94           ; Unknown 5xxx instruction
$876    $95F7   UNKNOWN  $95F7           ; Unknown 9xxx instruction
$878    $DBBF   DRW      VB, VB, #F      ; Draw 15-byte sprite at VB, VB
$87A    $ADDB   LD       I, $DDB         ; Load DDB into I
$87C    $AEC1   LD       I, $EC1         ; Load EC1 into I
$87E    $8F15   SUB      VF, V1          ; VF -= V1, VF = !borrow
$880    $E5EF   UNKNOWN  $E5EF           ; Unknown Exxx instruction
$882    $88E3   XOR      V8, VE          ; V8 ^= VE
$884    $B420   JP       V0, $420        ; Jump to V0 + 420
$886    $98E1   UNKNOWN  $98E1           ; Unknown 9xxx instruction
$888    $BF0B   JP       V0, $F0B        ; Jump to V0 + F0B
$88A    $B856   JP       V0, $856        ; Jump to V0 + 856
$88C    $CF9F   RND      VF, #9F         ; VF = random & 9F
$88E    $C61F   RND      V6, #1F         ; V6 = random & 1F
$890    $BB40   JP       V0, $B40        ; Jump to V0 + B40
$892    $FD84   UNKNOWN  FD84            ; Unknown Fxxx instruction
$894    $84CE   SHL      V4              ; V4 <<= 1, VF = MSB
$896    $69E2   LD       V9, #E2         ; Load 226 into V9
$898    $1C0B   JP       $C0B            ; Jump to C0B
$89A    $1BFA   JP       $BFA            ; Jump to BFA
$89C    $958B   UNKNOWN  $958B           ; Unknown 9xxx instruction
$89E    $492D   SNE      V9, #2D         ; Skip if V9 != 45
$8A0    $BAAF   JP       V0, $AAF        ; Jump to V0 + AAF
$8A2    $722B   ADD      V2, #2B         ; Add 43 to V2
$8A4    $A11E   LD       I, $11E         ; Load 11E into I
$8A6    $9032   UNKNOWN  $9032           ; Unknown 9xxx instruction
$8A8    $05B6   SYS      $5B6            ; System call to 5B6
$8AA    $FEB3   UNKNOWN  FEB3            ; Unknown Fxxx instruction
$8AC    $1EA4   JP       $EA4            ; Jump to EA4
$8AE    $124D   JP       $24D            ; Jump to 24D
$8B0    $9123   UNKNOWN  $9123           ; Unknown 9xxx instruction
$8B2    $CC77   RND      VC, #77         ; VC = random & 77
$8B4    $1D19   JP       $D19            ; Jump to D19
$8B6    $3342   SE       V3, #42         ; Skip if V3 == 66
$8B8    $7F70   ADD      VF, #70         ; Add 112 to VF
$8BA    $7AAB   ADD      VA, #AB         ; Add 171 to VA
$8BC    $158F   JP       $58F            ; Jump to 58F
$8BE    $6693   LD       V6, #93         ; Load 147 into V6
$8C0    $F885   UNKNOWN  F885            ; Unknown Fxxx instruction
$8C2    $3D85   SE       VD, #85         ; Skip if VD == 133
$8C4    $BB28   JP       V0, $B28        ; Jump to V0 + B28
$8C6    $2B3D   CALL     $B3D            ; Call subroutine at B3D
$8C8    $1858   JP       $858            ; Jump to 858
$8CA    $3B64   SE       VB, #64         ; Skip if VB == 100
$8CC    $7ABE   ADD      VA, #BE         ; Add 190 to VA
$8CE    $493A   SNE      V9, #3A         ; Skip if V9 != 58
$8D0    $A5AC   LD       I, $5AC         ; Load 5AC into I
$8D2    $7EA9   ADD      VE, #A9         ; Add 169 to VE
$8D4    $FC74   UNKNOWN  FC74            ; Unknown Fxxx instruction
$8D6    $1CE1   JP       $CE1            ; Jump to CE1
$8D8    $8930   LD       V9, V3          ; V9 = V3
$8DA    $37F4   SE       V7, #F4         ; Skip if V7 == 244
$8DC    $52DB   UNKNOWN  $52DB           ; Unknown 5xxx instruction
$8DE    $F49B   UNKNOWN  F49B            ; Unknown Fxxx instruction
$8E0    $D3F2   DRW      V3, VF, #2      ; Draw 2-byte sprite at V3, VF
$8E2    $3AE8   SE       VA, #E8         ; Skip if VA == 232
$8E4    $1253   JP       $253            ; Jump to 253
$8E6    $CBAE   RND      VB, #AE         ; VB = random & AE
$8E8    $3F80   SE       VF, #80         ; Skip if VF == 128
$8EA    $30E5   SE       V0, #E5         ; Skip if V0 == 229
$8EC    $532D   UNKNOWN  $532D           ; Unknown 5xxx instruction
$8EE    $DB65   DRW      VB, V6, #5      ; Draw 5-byte sprite at VB, V6
$8F0    $0DE4   SYS      $DE4            ; System call to DE4
$8F2    $EE65   UNKNOWN  $EE65           ; Unknown Exxx instruction
$8F4    $2EE8   CALL     $EE8            ; Call subroutine at EE8
$8F6    $E831   UNKNOWN  $E831           ; Unknown Exxx instruction
$8F8    $6CC2   LD       VC, #C2         ; Load 194 into VC
$8FA    $3C09   SE       VC, #09         ; Skip if VC == 9
$8FC    $DB77   DRW      VB, V7, #7      ; Draw 7-byte sprite at VB, V7
$8FE    $FE72   UNKNOWN  FE72            ; Unknown Fxxx instruction
$900    $38DD   SE       V8, #DD         ; Skip if V8 == 221
$902    $FE8E   UNKNOWN  FE8E            ; Unknown Fxxx instruction
$904    $395A   SE       V9, #5A         ; Skip if V9 == 90
$906    $E46F   UNKNOWN  $E46F           ; Unknown Exxx instruction
$908    $5BC7   UNKNOWN  $5BC7           ; Unknown 5xxx instruction
$90A    $5726   UNKNOWN  $5726           ; Unknown 5xxx instruction
$90C    $603A   LD       V0, #3A         ; Load 58 into V0
$90E    $D731   DRW      V7, V3, #1      ; Draw 1-byte sprite at V7, V3
$910    $F82D   UNKNOWN  F82D            ; Unknown Fxxx instruction
$912    $969E   UNKNOWN  $969E           ; Unknown 9xxx instruction
$914    $D3AA   DRW      V3, VA, #A      ; Draw 10-byte sprite at V3, VA
$916    $2672   CALL     $672            ; Call subroutine at 672
$918    $08C5   SYS      $8C5            ; System call to 8C5
$91A    $E034   UNKNOWN  $E034           ; Unknown Exxx instruction
$91C    $DCE7   DRW      VC, VE, #7      ; Draw 7-byte sprite at VC, VE
$91E    $542E   UNKNOWN  $542E           ; Unknown 5xxx instruction
$920    $BCD4   JP       V0, $CD4        ; Jump to V0 + CD4
$922    $BC69   JP       V0, $C69        ; Jump to V0 + C69
$924    $D8E5   DRW      V8, VE, #5      ; Draw 5-byte sprite at V8, VE
$926    $FA4B   UNKNOWN  FA4B            ; Unknown Fxxx instruction
$928    $65E6   LD       V5, #E6         ; Load 230 into V5
$92A    $DFA6   DRW      VF, VA, #6      ; Draw 6-byte sprite at VF, VA
$92C    $92C7   UNKNOWN  $92C7           ; Unknown 9xxx instruction
$92E    $8578   UNKNOWN  8578            ; Unknown 8xxx instruction
$930    $E821   UNKNOWN  $E821           ; Unknown Exxx instruction
$932    $9EA4   UNKNOWN  $9EA4           ; Unknown 9xxx instruction
$934    $F2E4   UNKNOWN  F2E4            ; Unknown Fxxx instruction
$936    $907A   UNKNOWN  $907A           ; Unknown 9xxx instruction
$938    $B5E3   JP       V0, $5E3        ; Jump to V0 + 5E3
$93A    $F5E1   UNKNOWN  F5E1            ; Unknown Fxxx instruction
$93C    $7988   ADD      V9, #88         ; Add 136 to V9
$93E    $C0A6   RND      V0, #A6         ; V0 = random & A6
$940    $9075   UNKNOWN  $9075           ; Unknown 9xxx instruction
$942    $9A96   UNKNOWN  $9A96           ; Unknown 9xxx instruction
$944    $B2AD   JP       V0, $2AD        ; Jump to V0 + 2AD
$946    $EB76   UNKNOWN  $EB76           ; Unknown Exxx instruction
$948    $A90A   LD       I, $90A         ; Load 90A into I
$94A    $6510   LD       V5, #10         ; Load 16 into V5
$94C    $B3BE   JP       V0, $3BE        ; Jump to V0 + 3BE
$94E    $117F   JP       $17F            ; Jump to 17F
$950    $6BB4   LD       VB, #B4         ; Load 180 into VB
$952    $4409   SNE      V4, #09         ; Skip if V4 != 9
$954    $4EB1   SNE      VE, #B1         ; Skip if VE != 177
$956    $8BF5   SUB      VB, VF          ; VB -= VF, VF = !borrow
$958    $1BB2   JP       $BB2            ; Jump to BB2
$95A    $6AA6   LD       VA, #A6         ; Load 166 into VA
$95C    $FB57   UNKNOWN  FB57            ; Unknown Fxxx instruction
$95E    $8CA7   SUBN     VC, VA          ; VC = VA - VC, VF = !borrow
$960    $A2C8   LD       I, $2C8         ; Load 2C8 into I
$962    $C34B   RND      V3, #4B         ; V3 = random & 4B
$964    $8137   SUBN     V1, V3          ; V1 = V3 - V1, VF = !borrow
$966    $42B4   SNE      V2, #B4         ; Skip if V2 != 180
$968    $9710   SNE      V7, V1          ; Skip if V7 != V1
$96A    $FB5B   UNKNOWN  FB5B            ; Unknown Fxxx instruction
$96C    $587F   UNKNOWN  $587F           ; Unknown 5xxx instruction
$96E    $67BA   LD       V7, #BA         ; Load 186 into V7
$970    $9A14   UNKNOWN  $9A14           ; Unknown 9xxx instruction
$972    $C50A   RND      V5, #0A         ; V5 = random & 0A
$974    $E512   UNKNOWN  $E512           ; Unknown Exxx instruction
$976    $B664   JP       V0, $664        ; Jump to V0 + 664
$978    $1133   JP       $133            ; Jump to 133
$97A    $76FE   ADD      V6, #FE         ; Add 254 to V6
$97C    $E957   UNKNOWN  $E957           ; Unknown Exxx instruction
$97E    $F4C9   UNKNOWN  F4C9            ; Unknown Fxxx instruction
$980    $1905   JP       $905            ; Jump to 905
$982    $FDC0   UNKNOWN  FDC0            ; Unknown Fxxx instruction
$984    $CDD7   RND      VD, #D7         ; VD = random & D7
$986    $5209   UNKNOWN  $5209           ; Unknown 5xxx instruction
$988    $E4DA   UNKNOWN  $E4DA           ; Unknown Exxx instruction
$98A    $CE2C   RND      VE, #2C         ; VE = random & 2C
$98C    $EAE9   UNKNOWN  $EAE9           ; Unknown Exxx instruction
$98E    $30B7   SE       V0, #B7         ; Skip if V0 == 183
$990    $2C68   CALL     $C68            ; Call subroutine at C68
$992    $5725   UNKNOWN  $5725           ; Unknown 5xxx instruction
$994    $799F   ADD      V9, #9F         ; Add 159 to V9
$996    $8FCA   UNKNOWN  8FCA            ; Unknown 8xxx instruction
$998    $740D   ADD      V4, #0D         ; Add 13 to V4
$99A    $590D   UNKNOWN  $590D           ; Unknown 5xxx instruction
$99C    $3F7F   SE       VF, #7F         ; Skip if VF == 127
$99E    $3147   SE       V1, #47         ; Skip if V1 == 71
$9A0    $E0E2   UNKNOWN  $E0E2           ; Unknown Exxx instruction
$9A2    $87AD   UNKNOWN  87AD            ; Unknown 8xxx instruction
$9A4    $AF2A   LD       I, $F2A         ; Load F2A into I
$9A6    $29C5   CALL     $9C5            ; Call subroutine at 9C5
$9A8    $267B   CALL     $67B            ; Call subroutine at 67B
$9AA    $66BB   LD       V6, #BB         ; Load 187 into V6
$9AC    $F814   UNKNOWN  F814            ; Unknown Fxxx instruction
$9AE    $1145   JP       $145            ; Jump to 145
$9B0    $1531   JP       $531            ; Jump to 531
$9B2    $6B33   LD       VB, #33         ; Load 51 into VB
$9B4    $5798   UNKNOWN  $5798           ; Unknown 5xxx instruction
$9B6    $311E   SE       V1, #1E         ; Skip if V1 == 30
$9B8    $4033   SNE      V0, #33         ; Skip if V0 != 51
$9BA    $F741   UNKNOWN  F741            ; Unknown Fxxx instruction
$9BC    $1CA9   JP       $CA9            ; Jump to CA9
$9BE    $D9CD   DRW      V9, VC, #D      ; Draw 13-byte sprite at V9, VC
$9C0    $A9E2   LD       I, $9E2         ; Load 9E2 into I
$9C2    $3363   SE       V3, #63         ; Skip if V3 == 99
$9C4    $6A19   LD       VA, #19         ; Load 25 into VA
$9C6    $55E2   UNKNOWN  $55E2           ; Unknown 5xxx instruction
$9C8    $0F6F   SYS      $F6F            ; System call to F6F
$9CA    $A861   LD       I, $861         ; Load 861 into I
$9CC    $3F53   SE       VF, #53         ; Skip if VF == 83
$9CE    $C7CC   RND      V7, #CC         ; V7 = random & CC
$9D0    $D541   DRW      V5, V4, #1      ; Draw 1-byte sprite at V5, V4
$9D2    $2C33   CALL     $C33            ; Call subroutine at C33
$9D4    $B9AF   JP       V0, $9AF        ; Jump to V0 + 9AF
$9D6    $AAA6   LD       I, $AA6         ; Load AA6 into I
$9D8    $80C6   SHR      V0              ; V0 >>= 1, VF = LSB
$9DA    $EB38   UNKNOWN  $EB38           ; Unknown Exxx instruction
$9DC    $43B2   SNE      V3, #B2         ; Skip if V3 != 178
$9DE    $617D   LD       V1, #7D         ; Load 125 into V1
$9E0    $CC57   RND      VC, #57         ; VC = random & 57
$9E2    $62A8   LD       V2, #A8         ; Load 168 into V2
$9E4    $0CC0   SYS      $CC0            ; System call to CC0
$9E6    $0878   SYS      $878            ; System call to 878
$9E8    $801C   UNKNOWN  801C            ; Unknown 8xxx instruction
$9EA    $72B5   ADD      V2, #B5         ; Add 181 to V2
$9EC    $D89F   DRW      V8, V9, #F      ; Draw 15-byte sprite at V8, V9
$9EE    $5D59   UNKNOWN  $5D59           ; Unknown 5xxx instruction
$9F0    $A1D1   LD       I, $1D1         ; Load 1D1 into I
$9F2    $86E1   OR       V6, VE          ; V6 |= VE
$9F4    $9952   UNKNOWN  $9952           ; Unknown 9xxx instruction
$9F6    $BCFE   JP       V0, $CFE        ; Jump to V0 + CFE
$9F8    $69D3   LD       V9, #D3         ; Load 211 into V9
$9FA    $0D86   SYS      $D86            ; System call to D86
$9FC    $E8B3   UNKNOWN  $E8B3           ; Unknown Exxx instruction
$9FE    $3732   SE       V7, #32         ; Skip if V7 == 50
$A00    $DFFC   DRW      VF, VF, #C      ; Draw 12-byte sprite at VF, VF
$A02    $EAFA   UNKNOWN  $EAFA           ; Unknown Exxx instruction
$A04    $85EC   UNKNOWN  85EC            ; Unknown 8xxx instruction
$A06    $5D92   UNKNOWN  $5D92           ; Unknown 5xxx instruction
$A08    $C389   RND      V3, #89         ; V3 = random & 89
$A0A    $F829   LD       F, V8           ; I = sprite address for digit V8
$A0C    $5F01   UNKNOWN  $5F01           ; Unknown 5xxx instruction
$A0E    $7BB0   ADD      VB, #B0         ; Add 176 to VB
$A10    $7B69   ADD      VB, #69         ; Add 105 to VB
$A12    $DE75   DRW      VE, V7, #5      ; Draw 5-byte sprite at VE, V7
$A14    $86BD   UNKNOWN  86BD            ; Unknown 8xxx instruction
$A16    $9D3E   UNKNOWN  $9D3E           ; Unknown 9xxx instruction
$A18    $3FF6   SE       VF, #F6         ; Skip if VF == 246
$A1A    $106B   JP       $06B            ; Jump to 06B
$A1C    $9FC5   UNKNOWN  $9FC5           ; Unknown 9xxx instruction
$A1E    $8A47   SUBN     VA, V4          ; VA = V4 - VA, VF = !borrow
$A20    $0DB7   SYS      $DB7            ; System call to DB7
$A22    $3FEB   SE       VF, #EB         ; Skip if VF == 235
$A24    $4263   SNE      V2, #63         ; Skip if V2 != 99
$A26    $422B   SNE      V2, #2B         ; Skip if V2 != 43
$A28    $391E   SE       V9, #1E         ; Skip if V9 == 30
$A2A    $3B6C   SE       VB, #6C         ; Skip if VB == 108
$A2C    $E03D   UNKNOWN  $E03D           ; Unknown Exxx instruction
$A2E    $805C   UNKNOWN  805C            ; Unknown 8xxx instruction
$A30    $E34D   UNKNOWN  $E34D           ; Unknown Exxx instruction
$A32    $AE56   LD       I, $E56         ; Load E56 into I
$A34    $2FFE   CALL     $FFE            ; Call subroutine at FFE
$A36    $4DD1   SNE      VD, #D1         ; Skip if VD != 209
$A38    $ACC4   LD       I, $CC4         ; Load CC4 into I
$A3A    $3AF9   SE       VA, #F9         ; Skip if VA == 249
$A3C    $CCE3   RND      VC, #E3         ; VC = random & E3
$A3E    $B478   JP       V0, $478        ; Jump to V0 + 478
$A40    $A2AA   LD       I, $2AA         ; Load 2AA into I
$A42    $1631   JP       $631            ; Jump to 631
$A44    $DEAE   DRW      VE, VA, #E      ; Draw 14-byte sprite at VE, VA
$A46    $C8A8   RND      V8, #A8         ; V8 = random & A8
$A48    $98DF   UNKNOWN  $98DF           ; Unknown 9xxx instruction
$A4A    $2BA8   CALL     $BA8            ; Call subroutine at BA8
$A4C    $FA52   UNKNOWN  FA52            ; Unknown Fxxx instruction
$A4E    $5F7F   UNKNOWN  $5F7F           ; Unknown 5xxx instruction
$A50    $1339   JP       $339            ; Jump to 339
$A52    $C378   RND      V3, #78         ; V3 = random & 78
$A54    $B732   JP       V0, $732        ; Jump to V0 + 732
$A56    $5198   UNKNOWN  $5198           ; Unknown 5xxx instruction
$A58    $46C3   SNE      V6, #C3         ; Skip if V6 != 195
$A5A    $45AF   SNE      V5, #AF         ; Skip if V5 != 175
$A5C    $AD12   LD       I, $D12         ; Load D12 into I
$A5E    $12F2   JP       $2F2            ; Jump to 2F2
$A60    $8DE7   SUBN     VD, VE          ; VD = VE - VD, VF = !borrow
$A62    $65BA   LD       V5, #BA         ; Load 186 into V5
$A64    $080D   SYS      $80D            ; System call to 80D
$A66    $BD88   JP       V0, $D88        ; Jump to V0 + D88
$A68    $8B18   UNKNOWN  8B18            ; Unknown 8xxx instruction
$A6A    $C871   RND      V8, #71         ; V8 = random & 71
$A6C    $1F31   JP       $F31            ; Jump to F31
$A6E    $2AD5   CALL     $AD5            ; Call subroutine at AD5
$A70    $2838   CALL     $838            ; Call subroutine at 838
$A72    $12DE   JP       $2DE            ; Jump to 2DE
$A74    $85EF   UNKNOWN  85EF            ; Unknown 8xxx instruction
$A76    $97FA   UNKNOWN  $97FA           ; Unknown 9xxx instruction
$A78    $55F2   UNKNOWN  $55F2           ; Unknown 5xxx instruction
$A7A    $B6D5   JP       V0, $6D5        ; Jump to V0 + 6D5
$A7C    $A38B   LD       I, $38B         ; Load 38B into I
$A7E    $D70F   DRW      V7, V0, #F      ; Draw 15-byte sprite at V7, V0
$A80    $CE29   RND      VE, #29         ; VE = random & 29
$A82    $7E5F   ADD      VE, #5F         ; Add 95 to VE
$A84    $4C88   SNE      VC, #88         ; Skip if VC != 136
$A86    $3DDD   SE       VD, #DD         ; Skip if VD == 221
$A88    $E844   UNKNOWN  $E844           ; Unknown Exxx instruction
$A8A    $5C2A   UNKNOWN  $5C2A           ; Unknown 5xxx instruction
$A8C    $B505   JP       V0, $505        ; Jump to V0 + 505
$A8E    $8723   XOR      V7, V2          ; V7 ^= V2
$A90    $955F   UNKNOWN  $955F           ; Unknown 9xxx instruction
$A92    $675B   LD       V7, #5B         ; Load 91 into V7
$A94    $554B   UNKNOWN  $554B           ; Unknown 5xxx instruction
$A96    $7469   ADD      V4, #69         ; Add 105 to V4
$A98    $7D27   ADD      VD, #27         ; Add 39 to VD
$A9A    $17E3   JP       $7E3            ; Jump to 7E3
$A9C    $0827   SYS      $827            ; System call to 827
$A9E    $946B   UNKNOWN  $946B           ; Unknown 9xxx instruction
$AA0    $8B3E   SHL      VB              ; VB <<= 1, VF = MSB
$AA2    $3E79   SE       VE, #79         ; Skip if VE == 121
$AA4    $F82D   UNKNOWN  F82D            ; Unknown Fxxx instruction
$AA6    $3936   SE       V9, #36         ; Skip if V9 == 54
$AA8    $5988   UNKNOWN  $5988           ; Unknown 5xxx instruction
$AAA    $E445   UNKNOWN  $E445           ; Unknown Exxx instruction
$AAC    $474D   SNE      V7, #4D         ; Skip if V7 != 77
$AAE    $0B8B   SYS      $B8B            ; System call to B8B
$AB0    $1947   JP       $947            ; Jump to 947
$AB2    $5D2A   UNKNOWN  $5D2A           ; Unknown 5xxx instruction
$AB4    $7560   ADD      V5, #60         ; Add 96 to V5
$AB6    $CC6B   RND      VC, #6B         ; VC = random & 6B
$AB8    $0CBB   SYS      $CBB            ; System call to CBB
$ABA    $8604   ADD      V6, V0          ; V6 += V0, VF = carry
$ABC    $EDC4   UNKNOWN  $EDC4           ; Unknown Exxx instruction
$ABE    $5379   UNKNOWN  $5379           ; Unknown 5xxx instruction
$AC0    $AA32   LD       I, $A32         ; Load A32 into I
$AC2    $85C4   ADD      V5, VC          ; V5 += VC, VF = carry
$AC4    $DA6F   DRW      VA, V6, #F      ; Draw 15-byte sprite at VA, V6
$AC6    $F3C1   UNKNOWN  F3C1            ; Unknown Fxxx instruction
$AC8    $95A1   UNKNOWN  $95A1           ; Unknown 9xxx instruction
$ACA    $8A22   AND      VA, V2          ; VA &= V2
$ACC    $2B12   CALL     $B12            ; Call subroutine at B12
$ACE    $1BF1   JP       $BF1            ; Jump to BF1
$AD0    $D17B   DRW      V1, V7, #B      ; Draw 11-byte sprite at V1, V7
$AD2    $7D11   ADD      VD, #11         ; Add 17 to VD
$AD4    $60F8   LD       V0, #F8         ; Load 248 into V0
$AD6    $A482   LD       I, $482         ; Load 482 into I
$AD8    $1CE0   JP       $CE0            ; Jump to CE0
$ADA    $3C15   SE       VC, #15         ; Skip if VC == 21
$ADC    $0281   SYS      $281            ; System call to 281
$ADE    $69EB   LD       V9, #EB         ; Load 235 into V9
$AE0    $997B   UNKNOWN  $997B           ; Unknown 9xxx instruction
$AE2    $02E5   SYS      $2E5            ; System call to 2E5
$AE4    $CAD3   RND      VA, #D3         ; VA = random & D3
$AE6    $1915   JP       $915            ; Jump to 915
$AE8    $45CE   SNE      V5, #CE         ; Skip if V5 != 206
$AEA    $A22A   LD       I, $22A         ; Load 22A into I
$AEC    $D3F0   DRW      V3, VF, #0      ; Draw 0-byte sprite at V3, VF
$AEE    $8EC9   UNKNOWN  8EC9            ; Unknown 8xxx instruction
$AF0    $F791   UNKNOWN  F791            ; Unknown Fxxx instruction
$AF2    $C1A1   RND      V1, #A1         ; V1 = random & A1
$AF4    $2930   CALL     $930            ; Call subroutine at 930
$AF6    $4BA8   SNE      VB, #A8         ; Skip if VB != 168
$AF8    $159E   JP       $59E            ; Jump to 59E
$AFA    $F84C   UNKNOWN  F84C            ; Unknown Fxxx instruction
$AFC    $A9C3   LD       I, $9C3         ; Load 9C3 into I
$AFE    $73C9   ADD      V3, #C9         ; Add 201 to V3
$B00    $BC11   JP       V0, $C11        ; Jump to V0 + C11
$B02    $3EF6   SE       VE, #F6         ; Skip if VE == 246
$B04    $A9FC   LD       I, $9FC         ; Load 9FC into I
$B06    $190C   JP       $90C            ; Jump to 90C
$B08    $CB69   RND      VB, #69         ; VB = random & 69
$B0A    $1E40   JP       $E40            ; Jump to E40
$B0C    $5E1C   UNKNOWN  $5E1C           ; Unknown 5xxx instruction
$B0E    $9139   UNKNOWN  $9139           ; Unknown 9xxx instruction
$B10    $00AC   SYS      $0AC            ; System call to 0AC
$B12    $3EEF   SE       VE, #EF         ; Skip if VE == 239
$B14    $22BC   CALL     $2BC            ; Call subroutine at 2BC
$B16    $D418   DRW      V4, V1, #8      ; Draw 8-byte sprite at V4, V1
$B18    $A27E   LD       I, $27E         ; Load 27E into I
$B1A    $62B0   LD       V2, #B0         ; Load 176 into V2
$B1C    $5E52   UNKNOWN  $5E52           ; Unknown 5xxx instruction
$B1E    $4F32   SNE      VF, #32         ; Skip if VF != 50
$B20    $354D   SE       V5, #4D         ; Skip if V5 == 77
$B22    $BAAA   JP       V0, $AAA        ; Jump to V0 + AAA
$B24    $2521   CALL     $521            ; Call subroutine at 521
$B26    $6EA3   LD       VE, #A3         ; Load 163 into VE
$B28    $685B   LD       V8, #5B         ; Load 91 into V8
$B2A    $CA92   RND      VA, #92         ; VA = random & 92
$B2C    $E340   UNKNOWN  $E340           ; Unknown Exxx instruction
$B2E    $F9B2   UNKNOWN  F9B2            ; Unknown Fxxx instruction
$B30    $BE9D   JP       V0, $E9D        ; Jump to V0 + E9D
$B32    $1FC4   JP       $FC4            ; Jump to FC4
$B34    $42B8   SNE      V2, #B8         ; Skip if V2 != 184
$B36    $3C53   SE       VC, #53         ; Skip if VC == 83
$B38    $5661   UNKNOWN  $5661           ; Unknown 5xxx instruction
$B3A    $90AB   UNKNOWN  $90AB           ; Unknown 9xxx instruction
$B3C    $6765   LD       V7, #65         ; Load 101 into V7
$B3E    $783B   ADD      V8, #3B         ; Add 59 to V8
$B40    $D10A   DRW      V1, V0, #A      ; Draw 10-byte sprite at V1, V0
$B42    $74BC   ADD      V4, #BC         ; Add 188 to V4
$B44    $3F4B   SE       VF, #4B         ; Skip if VF == 75
$B46    $BAB2   JP       V0, $AB2        ; Jump to V0 + AB2
$B48    $704F   ADD      V0, #4F         ; Add 79 to V0
$B4A    $3ABC   SE       VA, #BC         ; Skip if VA == 188
$B4C    $CA04   RND      VA, #04         ; VA = random & 04
$B4E    $84D6   SHR      V4              ; V4 >>= 1, VF = LSB
$B50    $36AC   SE       V6, #AC         ; Skip if V6 == 172
$B52    $1F40   JP       $F40            ; Jump to F40
$B54    $68A1   LD       V8, #A1         ; Load 161 into V8
$B56    $84D3   XOR      V4, VD          ; V4 ^= VD
$B58    $F3B4   UNKNOWN  F3B4            ; Unknown Fxxx instruction
$B5A    $3BE7   SE       VB, #E7         ; Skip if VB == 231
$B5C    $740E   ADD      V4, #0E         ; Add 14 to V4
$B5E    $7E90   ADD      VE, #90         ; Add 144 to VE
$B60    $BF17   JP       V0, $F17        ; Jump to V0 + F17
$B62    $A324   LD       I, $324         ; Load 324 into I
$B64    $5513   UNKNOWN  $5513           ; Unknown 5xxx instruction
$B66    $1AB9   JP       $AB9            ; Jump to AB9
$B68    $BB88   JP       V0, $B88        ; Jump to V0 + B88
$B6A    $6540   LD       V5, #40         ; Load 64 into V5
$B6C    $5B1D   UNKNOWN  $5B1D           ; Unknown 5xxx instruction
$B6E    $F7CF   UNKNOWN  F7CF            ; Unknown Fxxx instruction
$B70    $CF19   RND      VF, #19         ; VF = random & 19
$B72    $CEAC   RND      VE, #AC         ; VE = random & AC
$B74    $445F   SNE      V4, #5F         ; Skip if V4 != 95
$B76    $299D   CALL     $99D            ; Call subroutine at 99D
$B78    $82C4   ADD      V2, VC          ; V2 += VC, VF = carry
$B7A    $9C08   UNKNOWN  $9C08           ; Unknown 9xxx instruction
$B7C    $0C18   SYS      $C18            ; System call to C18
$B7E    $DE6B   DRW      VE, V6, #B      ; Draw 11-byte sprite at VE, V6
$B80    $4A9A   SNE      VA, #9A         ; Skip if VA != 154
$B82    $AE67   LD       I, $E67         ; Load E67 into I
$B84    $8103   XOR      V1, V0          ; V1 ^= V0
$B86    $DE76   DRW      VE, V7, #6      ; Draw 6-byte sprite at VE, V7
$B88    $8D8F   UNKNOWN  8D8F            ; Unknown 8xxx instruction
$B8A    $A1C9   LD       I, $1C9         ; Load 1C9 into I
$B8C    $AACB   LD       I, $ACB         ; Load ACB into I
$B8E    $2A27   CALL     $A27            ; Call subroutine at A27
$B90    $190D   JP       $90D            ; Jump to 90D
$B92    $FC63   UNKNOWN  FC63            ; Unknown Fxxx instruction
$B94    $94E4   UNKNOWN  $94E4           ; Unknown 9xxx instruction
$B96    $D2EC   DRW      V2, VE, #C      ; Draw 12-byte sprite at V2, VE
$B98    $A1C5   LD       I, $1C5         ; Load 1C5 into I
$B9A    $8D5D   UNKNOWN  8D5D            ; Unknown 8xxx instruction
$B9C    $755C   ADD      V5, #5C         ; Add 92 to V5
$B9E    $BD3B   JP       V0, $D3B        ; Jump to V0 + D3B
$BA0    $2459   CALL     $459            ; Call subroutine at 459
$BA2    $6F05   LD       VF, #05         ; Load 5 into VF
$BA4    $B3D9   JP       V0, $3D9        ; Jump to V0 + 3D9
$BA6    $BF48   JP       V0, $F48        ; Jump to V0 + F48
$BA8    $F03C   UNKNOWN  F03C            ; Unknown Fxxx instruction
$BAA    $8058   UNKNOWN  8058            ; Unknown 8xxx instruction
$BAC    $460A   SNE      V6, #0A         ; Skip if V6 != 10
$BAE    $B32D   JP       V0, $32D        ; Jump to V0 + 32D
$BB0    $7891   ADD      V8, #91         ; Add 145 to V8
$BB2    $4F35   SNE      VF, #35         ; Skip if VF != 53
$BB4    $EA04   UNKNOWN  $EA04           ; Unknown Exxx instruction
$BB6    $52E0   SE       V2, VE          ; Skip if V2 == VE
$BB8    $E57D   UNKNOWN  $E57D           ; Unknown Exxx instruction
$BBA    $09CB   SYS      $9CB            ; System call to 9CB
$BBC    $BAF9   JP       V0, $AF9        ; Jump to V0 + AF9
$BBE    $484F   SNE      V8, #4F         ; Skip if V8 != 79
$BC0    $E200   UNKNOWN  $E200           ; Unknown Exxx instruction
$BC2    $9C95   UNKNOWN  $9C95           ; Unknown 9xxx instruction
$BC4    $9EB9   UNKNOWN  $9EB9           ; Unknown 9xxx instruction
$BC6    $0E19   SYS      $E19            ; System call to E19
$BC8    $B8AF   JP       V0, $8AF        ; Jump to V0 + 8AF
$BCA    $AD8E   LD       I, $D8E         ; Load D8E into I
$BCC    $212A   CALL     $12A            ; Call subroutine at 12A
$BCE    $A404   LD       I, $404         ; Load 404 into I
$BD0    $4B09   SNE      VB, #09         ; Skip if VB != 9
$BD2    $3283   SE       V2, #83         ; Skip if V2 == 131
$BD4    $6B5A   LD       VB, #5A         ; Load 90 into VB
$BD6    $66C5   LD       V6, #C5         ; Load 197 into V6
$BD8    $1587   JP       $587            ; Jump to 587
$BDA    $EA9A   UNKNOWN  $EA9A           ; Unknown Exxx instruction
$BDC    $A50F   LD       I, $50F         ; Load 50F into I
$BDE    $71F1   ADD      V1, #F1         ; Add 241 to V1
$BE0    $5345   UNKNOWN  $5345           ; Unknown 5xxx instruction
$BE2    $C1DC   RND      V1, #DC         ; V1 = random & DC
$BE4    $C007   RND      V0, #07         ; V0 = random & 07
$BE6    $8DF0   LD       VD, VF          ; VD = VF
$BE8    $4A42   SNE      VA, #42         ; Skip if VA != 66
$BEA    $5425   UNKNOWN  $5425           ; Unknown 5xxx instruction
$BEC    $0E92   SYS      $E92            ; System call to E92
$BEE    $9839   UNKNOWN  $9839           ; Unknown 9xxx instruction
$BF0    $5A49   UNKNOWN  $5A49           ; Unknown 5xxx instruction
$BF2    $41D0   SNE      V1, #D0         ; Skip if V1 != 208
$BF4    $1E2F   JP       $E2F            ; Jump to E2F
$BF6    $5DCB   UNKNOWN  $5DCB           ; Unknown 5xxx instruction
$BF8    $B305   JP       V0, $305        ; Jump to V0 + 305
$BFA    $66FA   LD       V6, #FA         ; Load 250 into V6
$BFC    $2480   CALL     $480            ; Call subroutine at 480
$BFE    $5426   UNKNOWN  $5426           ; Unknown 5xxx instruction
$C00    $E143   UNKNOWN  $E143           ; Unknown Exxx instruction
$C02    $4A4C   SNE      VA, #4C         ; Skip if VA != 76
$C04    $1950   JP       $950            ; Jump to 950
$C06    $131F   JP       $31F            ; Jump to 31F
$C08    $512E   UNKNOWN  $512E           ; Unknown 5xxx instruction
$C0A    $0B4D   SYS      $B4D            ; System call to B4D
$C0C    $4650   SNE      V6, #50         ; Skip if V6 != 80
$C0E    $848C   UNKNOWN  848C            ; Unknown 8xxx instruction
$C10    $E6D4   UNKNOWN  $E6D4           ; Unknown Exxx instruction
$C12    $0783   SYS      $783            ; System call to 783
$C14    $2F9A   CALL     $F9A            ; Call subroutine at F9A
$C16    $982F   UNKNOWN  $982F           ; Unknown 9xxx instruction
$C18    $D1CF   DRW      V1, VC, #F      ; Draw 15-byte sprite at V1, VC
$C1A    $CD54   RND      VD, #54         ; VD = random & 54
$C1C    $A7C8   LD       I, $7C8         ; Load 7C8 into I
$C1E    $D14C   DRW      V1, V4, #C      ; Draw 12-byte sprite at V1, V4
$C20    $17AF   JP       $7AF            ; Jump to 7AF
$C22    $B58D   JP       V0, $58D        ; Jump to V0 + 58D
$C24    $2422   CALL     $422            ; Call subroutine at 422
$C26    $1BDB   JP       $BDB            ; Jump to BDB
$C28    $ACB0   LD       I, $CB0         ; Load CB0 into I
$C2A    $B1B4   JP       V0, $1B4        ; Jump to V0 + 1B4
$C2C    $9FCB   UNKNOWN  $9FCB           ; Unknown 9xxx instruction
$C2E    $030B   SYS      $30B            ; System call to 30B
$C30    $04B0   SYS      $4B0            ; System call to 4B0
$C32    $297A   CALL     $97A            ; Call subroutine at 97A
$C34    $29B1   CALL     $9B1            ; Call subroutine at 9B1
$C36    $BC6F   JP       V0, $C6F        ; Jump to V0 + C6F
$C38    $D88B   DRW      V8, V8, #B      ; Draw 11-byte sprite at V8, V8
$C3A    $5D9C   UNKNOWN  $5D9C           ; Unknown 5xxx instruction
$C3C    $7AB8   ADD      VA, #B8         ; Add 184 to VA
$C3E    $E268   UNKNOWN  $E268           ; Unknown Exxx instruction
$C40    $3C4F   SE       VC, #4F         ; Skip if VC == 79
$C42    $C352   RND      V3, #52         ; V3 = random & 52
$C44    $5823   UNKNOWN  $5823           ; Unknown 5xxx instruction
$C46    $F245   UNKNOWN  F245            ; Unknown Fxxx instruction
$C48    $B429   JP       V0, $429        ; Jump to V0 + 429
$C4A    $1FBB   JP       $FBB            ; Jump to FBB
$C4C    $E53A   UNKNOWN  $E53A           ; Unknown Exxx instruction
$C4E    $6F58   LD       VF, #58         ; Load 88 into VF
$C50    $7676   ADD      V6, #76         ; Add 118 to V6
$C52    $625F   LD       V2, #5F         ; Load 95 into V2
$C54    $6E24   LD       VE, #24         ; Load 36 into VE
$C56    $3769   SE       V7, #69         ; Skip if V7 == 105
$C58    $C516   RND      V5, #16         ; V5 = random & 16
$C5A    $CEB6   RND      VE, #B6         ; VE = random & B6
$C5C    $D622   DRW      V6, V2, #2      ; Draw 2-byte sprite at V6, V2
$C5E    $AFD7   LD       I, $FD7         ; Load FD7 into I
$C60    $FF90   UNKNOWN  FF90            ; Unknown Fxxx instruction
$C62    $0F81   SYS      $F81            ; System call to F81
$C64    $DB38   DRW      VB, V3, #8      ; Draw 8-byte sprite at VB, V3
$C66    $FC8B   UNKNOWN  FC8B            ; Unknown Fxxx instruction
$C68    $EF44   UNKNOWN  $EF44           ; Unknown Exxx instruction
$C6A    $3B87   SE       VB, #87         ; Skip if VB == 135
$C6C    $333D   SE       V3, #3D         ; Skip if V3 == 61
$C6E    $1B86   JP       $B86            ; Jump to B86
$C70    $BA00   JP       V0, $A00        ; Jump to V0 + A00
$C72    $6339   LD       V3, #39         ; Load 57 into V3
$C74    $C6CE   RND      V6, #CE         ; V6 = random & CE
$C76    $7F09   ADD      VF, #09         ; Add 9 to VF
$C78    $109E   JP       $09E            ; Jump to 09E
$C7A    $6336   LD       V3, #36         ; Load 54 into V3
$C7C    $C7A8   RND      V7, #A8         ; V7 = random & A8
$C7E    $8ECE   SHL      VE              ; VE <<= 1, VF = MSB
$C80    $AA55   LD       I, $A55         ; Load A55 into I
$C82    $43B3   SNE      V3, #B3         ; Skip if V3 != 179
$C84    $8A13   XOR      VA, V1          ; VA ^= V1
$C86    $AD85   LD       I, $D85         ; Load D85 into I
$C88    $65E4   LD       V5, #E4         ; Load 228 into V5
$C8A    $4111   SNE      V1, #11         ; Skip if V1 != 17
$C8C    $741F   ADD      V4, #1F         ; Add 31 to V4
$C8E    $F956   UNKNOWN  F956            ; Unknown Fxxx instruction
$C90    $8254   ADD      V2, V5          ; V2 += V5, VF = carry
$C92    $DECB   DRW      VE, VC, #B      ; Draw 11-byte sprite at VE, VC
$C94    $7390   ADD      V3, #90         ; Add 144 to V3
$C96    $03BF   SYS      $3BF            ; System call to 3BF
$C98    $35D7   SE       V5, #D7         ; Skip if V5 == 215
$C9A    $991E   UNKNOWN  $991E           ; Unknown 9xxx instruction
$C9C    $CC89   RND      VC, #89         ; VC = random & 89
$C9E    $4E15   SNE      VE, #15         ; Skip if VE != 21
$CA0    $989E   UNKNOWN  $989E           ; Unknown 9xxx instruction
$CA2    $64C3   LD       V4, #C3         ; Load 195 into V4
$CA4    $CF9F   RND      VF, #9F         ; VF = random & 9F
$CA6    $8400   LD       V4, V0          ; V4 = V0
$CA8    $4138   SNE      V1, #38         ; Skip if V1 != 56
$CAA    $AB7B   LD       I, $B7B         ; Load B7B into I
$CAC    $AF39   LD       I, $F39         ; Load F39 into I
$CAE    $55C8   UNKNOWN  $55C8           ; Unknown 5xxx instruction
$CB0    $37C5   SE       V7, #C5         ; Skip if V7 == 197
$CB2    $0C76   SYS      $C76            ; System call to C76
$CB4    $F341   UNKNOWN  F341            ; Unknown Fxxx instruction
$CB6    $27BB   CALL     $7BB            ; Call subroutine at 7BB
$CB8    $8C19   UNKNOWN  8C19            ; Unknown 8xxx instruction
$CBA    $38EC   SE       V8, #EC         ; Skip if V8 == 236
$CBC    $1F11   JP       $F11            ; Jump to F11
$CBE    $ABAE   LD       I, $BAE         ; Load BAE into I
$CC0    $B178   JP       V0, $178        ; Jump to V0 + 178
$CC2    $D04E   DRW      V0, V4, #E      ; Draw 14-byte sprite at V0, V4
$CC4    $245E   CALL     $45E            ; Call subroutine at 45E
$CC6    $D343   DRW      V3, V4, #3      ; Draw 3-byte sprite at V3, V4
$CC8    $01DD   SYS      $1DD            ; System call to 1DD
$CCA    $D4CB   DRW      V4, VC, #B      ; Draw 11-byte sprite at V4, VC
$CCC    $78BA   ADD      V8, #BA         ; Add 186 to V8
$CCE    $A7CB   LD       I, $7CB         ; Load 7CB into I
$CD0    $D194   DRW      V1, V9, #4      ; Draw 4-byte sprite at V1, V9
$CD2    $D245   DRW      V2, V4, #5      ; Draw 5-byte sprite at V2, V4
$CD4    $2DA1   CALL     $DA1            ; Call subroutine at DA1
$CD6    $EEA4   UNKNOWN  $EEA4           ; Unknown Exxx instruction
$CD8    $998C   UNKNOWN  $998C           ; Unknown 9xxx instruction
$CDA    $1DBA   JP       $DBA            ; Jump to DBA
$CDC    $BAE9   JP       V0, $AE9        ; Jump to V0 + AE9
$CDE    $BC39   JP       V0, $C39        ; Jump to V0 + C39
$CE0    $2D1A   CALL     $D1A            ; Call subroutine at D1A
$CE2    $F61B   UNKNOWN  F61B            ; Unknown Fxxx instruction
$CE4    $E257   UNKNOWN  $E257           ; Unknown Exxx instruction
$CE6    $89F6   SHR      V9              ; V9 >>= 1, VF = LSB
$CE8    $5211   UNKNOWN  $5211           ; Unknown 5xxx instruction
$CEA    $74A8   ADD      V4, #A8         ; Add 168 to V4
$CEC    $293A   CALL     $93A            ; Call subroutine at 93A
$CEE    $D42E   DRW      V4, V2, #E      ; Draw 14-byte sprite at V4, V2
$CF0    $2D08   CALL     $D08            ; Call subroutine at D08
$CF2    $C0B2   RND      V0, #B2         ; V0 = random & B2
$CF4    $8420   LD       V4, V2          ; V4 = V2
$CF6    $AFF6   LD       I, $FF6         ; Load FF6 into I
$CF8    $FB3A   UNKNOWN  FB3A            ; Unknown Fxxx instruction
$CFA    $87C2   AND      V7, VC          ; V7 &= VC
$CFC    $911B   UNKNOWN  $911B           ; Unknown 9xxx instruction
$CFE    $51CB   UNKNOWN  $51CB           ; Unknown 5xxx instruction
$D00    $DC91   DRW      VC, V9, #1      ; Draw 1-byte sprite at VC, V9
$D02    $6A66   LD       VA, #66         ; Load 102 into VA
$D04    $D9AA   DRW      V9, VA, #A      ; Draw 10-byte sprite at V9, VA
$D06    $2CDD   CALL     $CDD            ; Call subroutine at CDD
$D08    $5EDD   UNKNOWN  $5EDD           ; Unknown 5xxx instruction
$D0A    $A859   LD       I, $859         ; Load 859 into I
$D0C    $DA03   DRW      VA, V0, #3      ; Draw 3-byte sprite at VA, V0
$D0E    $69BD   LD       V9, #BD         ; Load 189 into V9
$D10    $681F   LD       V8, #1F         ; Load 31 into V8
$D12    $72A4   ADD      V2, #A4         ; Add 164 to V2
$D14    $4EFD   SNE      VE, #FD         ; Skip if VE != 253
$D16    $73ED   ADD      V3, #ED         ; Add 237 to V3
$D18    $D329   DRW      V3, V2, #9      ; Draw 9-byte sprite at V3, V2
$D1A    $F68D   UNKNOWN  F68D            ; Unknown Fxxx instruction
$D1C    $4381   SNE      V3, #81         ; Skip if V3 != 129
$D1E    $EEE5   UNKNOWN  $EEE5           ; Unknown Exxx instruction
$D20    $CEDA   RND      VE, #DA         ; VE = random & DA
$D22    $0F3F   SYS      $F3F            ; System call to F3F
$D24    $F2EB   UNKNOWN  F2EB            ; Unknown Fxxx instruction
$D26    $37F3   SE       V7, #F3         ; Skip if V7 == 243
$D28    $6B3C   LD       VB, #3C         ; Load 60 into VB
$D2A    $61EB   LD       V1, #EB         ; Load 235 into V1
$D2C    $C8D1   RND      V8, #D1         ; V8 = random & D1
$D2E    $CC46   RND      VC, #46         ; VC = random & 46
$D30    $DF9B   DRW      VF, V9, #B      ; Draw 11-byte sprite at VF, V9
$D32    $B647   JP       V0, $647        ; Jump to V0 + 647
$D34    $1160   JP       $160            ; Jump to 160
$D36    $77B9   ADD      V7, #B9         ; Add 185 to V7
$D38    $7DA8   ADD      VD, #A8         ; Add 168 to VD
$D3A    $D2F0   DRW      V2, VF, #0      ; Draw 0-byte sprite at V2, VF
$D3C    $F86E   UNKNOWN  F86E            ; Unknown Fxxx instruction
$D3E    $C5C1   RND      V5, #C1         ; V5 = random & C1
$D40    $A9DB   LD       I, $9DB         ; Load 9DB into I
$D42    $A2AB   LD       I, $2AB         ; Load 2AB into I
$D44    $908F   UNKNOWN  $908F           ; Unknown 9xxx instruction
$D46    $6FBF   LD       VF, #BF         ; Load 191 into VF
$D48    $9EA1   UNKNOWN  $9EA1           ; Unknown 9xxx instruction
$D4A    $C3B9   RND      V3, #B9         ; V3 = random & B9
$D4C    $ED6E   UNKNOWN  $ED6E           ; Unknown Exxx instruction
$D4E    $EEE2   UNKNOWN  $EEE2           ; Unknown Exxx instruction
$D50    $B452   JP       V0, $452        ; Jump to V0 + 452
$D52    $851B   UNKNOWN  851B            ; Unknown 8xxx instruction
$D54    $4B25   SNE      VB, #25         ; Skip if VB != 37
$D56    $63C0   LD       V3, #C0         ; Load 192 into V3
$D58    $C9E7   RND      V9, #E7         ; V9 = random & E7
$D5A    $FE5F   UNKNOWN  FE5F            ; Unknown Fxxx instruction
$D5C    $13E5   JP       $3E5            ; Jump to 3E5
$D5E    $BBD3   JP       V0, $BD3        ; Jump to V0 + BD3
$D60    $7EA1   ADD      VE, #A1         ; Add 161 to VE
$D62    $6C74   LD       VC, #74         ; Load 116 into VC
$D64    $04E7   SYS      $4E7            ; System call to 4E7
$D66    $867F   UNKNOWN  867F            ; Unknown 8xxx instruction
$D68    $D677   DRW      V6, V7, #7      ; Draw 7-byte sprite at V6, V7
$D6A    $67E6   LD       V7, #E6         ; Load 230 into V7
$D6C    $C638   RND      V6, #38         ; V6 = random & 38
$D6E    $3F28   SE       VF, #28         ; Skip if VF == 40
$D70    $5A4B   UNKNOWN  $5A4B           ; Unknown 5xxx instruction
$D72    $A687   LD       I, $687         ; Load 687 into I
$D74    $A00C   LD       I, $00C         ; Load 00C into I
$D76    $BC28   JP       V0, $C28        ; Jump to V0 + C28
$D78    $0F60   SYS      $F60            ; System call to F60
$D7A    $2BF5   CALL     $BF5            ; Call subroutine at BF5
$D7C    $8C7C   UNKNOWN  8C7C            ; Unknown 8xxx instruction
$D7E    $0BA5   SYS      $BA5            ; System call to BA5
$D80    $F745   UNKNOWN  F745            ; Unknown Fxxx instruction
$D82    $53ED   UNKNOWN  $53ED           ; Unknown 5xxx instruction
$D84    $6699   LD       V6, #99         ; Load 153 into V6
$D86    $E0E9   UNKNOWN  $E0E9           ; Unknown Exxx instruction
$D88    $B060   JP       V0, $060        ; Jump to V0 + 060
$D8A    $35DE   SE       V5, #DE         ; Skip if V5 == 222
$D8C    $656D   LD       V5, #6D         ; Load 109 into V5
$D8E    $9D75   UNKNOWN  $9D75           ; Unknown 9xxx instruction
$D90    $0C43   SYS      $C43            ; System call to C43
$D92    $C7A3   RND      V7, #A3         ; V7 = random & A3
$D94    $38D2   SE       V8, #D2         ; Skip if V8 == 210
$D96    $440E   SNE      V4, #0E         ; Skip if V4 != 14
$D98    $F4B6   UNKNOWN  F4B6            ; Unknown Fxxx instruction
$D9A    $22E9   CALL     $2E9            ; Call subroutine at 2E9
$D9C    $4E4B   SNE      VE, #4B         ; Skip if VE != 75
$D9E    $9A6A   UNKNOWN  $9A6A           ; Unknown 9xxx instruction
$DA0    $9656   UNKNOWN  $9656           ; Unknown 9xxx instruction
$DA2    $7889   ADD      V8, #89         ; Add 137 to V8
$DA4    $DE05   DRW      VE, V0, #5      ; Draw 5-byte sprite at VE, V0
$DA6    $B610   JP       V0, $610        ; Jump to V0 + 610
$DA8    $7A86   ADD      VA, #86         ; Add 134 to VA
$DAA    $0AFF   SYS      $AFF            ; System call to AFF
$DAC    $67B7   LD       V7, #B7         ; Load 183 into V7
$DAE    $1956   JP       $956            ; Jump to 956
$DB0    $CA96   RND      VA, #96         ; VA = random & 96
$DB2    $FE1E   ADD      I, VE           ; I += VE
$DB4    $0DCA   SYS      $DCA            ; System call to DCA
$DB6    $4554   SNE      V5, #54         ; Skip if V5 != 84
$DB8    $DA54   DRW      VA, V5, #4      ; Draw 4-byte sprite at VA, V5
$DBA    $ACFB   LD       I, $CFB         ; Load CFB into I
$DBC    $AE56   LD       I, $E56         ; Load E56 into I
$DBE    $81D9   UNKNOWN  81D9            ; Unknown 8xxx instruction
$DC0    $23C9   CALL     $3C9            ; Call subroutine at 3C9
$DC2    $DC35   DRW      VC, V3, #5      ; Draw 5-byte sprite at VC, V3
$DC4    $90A5   UNKNOWN  $90A5           ; Unknown 9xxx instruction
$DC6    $0FE5   SYS      $FE5            ; System call to FE5
$DC8    $1DF6   JP       $DF6            ; Jump to DF6
$DCA    $2C8D   CALL     $C8D            ; Call subroutine at C8D
$DCC    $F05F   UNKNOWN  F05F            ; Unknown Fxxx instruction
$DCE    $4471   SNE      V4, #71         ; Skip if V4 != 113
$DD0    $A5A4   LD       I, $5A4         ; Load 5A4 into I
$DD2    $B928   JP       V0, $928        ; Jump to V0 + 928
$DD4    $D904   DRW      V9, V0, #4      ; Draw 4-byte sprite at V9, V0
$DD6    $0F72   SYS      $F72            ; System call to F72
$DD8    $B7C9   JP       V0, $7C9        ; Jump to V0 + 7C9
$DDA    $A1A6   LD       I, $1A6         ; Load 1A6 into I
$DDC    $81C3   XOR      V1, VC          ; V1 ^= VC
$DDE    $84D0   LD       V4, VD          ; V4 = VD
$DE0    $0ECA   SYS      $ECA            ; System call to ECA
$DE2    $FA19   UNKNOWN  FA19            ; Unknown Fxxx instruction
$DE4    $232D   CALL     $32D            ; Call subroutine at 32D
$DE6    $5FF9   UNKNOWN  $5FF9           ; Unknown 5xxx instruction
$DE8    $AA0C   LD       I, $A0C         ; Load A0C into I
$DEA    $9C37   UNKNOWN  $9C37           ; Unknown 9xxx instruction
$DEC    $D75B   DRW      V7, V5, #B      ; Draw 11-byte sprite at V7, V5
$DEE    $8DC6   SHR      VD              ; VD >>= 1, VF = LSB
$DF0    $F953   UNKNOWN  F953            ; Unknown Fxxx instruction
$DF2    $899A   UNKNOWN  899A            ; Unknown 8xxx instruction
$DF4    $FE76   UNKNOWN  FE76            ; Unknown Fxxx instruction
$DF6    $E06E   UNKNOWN  $E06E           ; Unknown Exxx instruction
$DF8    $A9F4   LD       I, $9F4         ; Load 9F4 into I
$DFA    $D17C   DRW      V1, V7, #C      ; Draw 12-byte sprite at V1, V7
$DFC    $3B86   SE       VB, #86         ; Skip if VB == 134
$DFE    $2760   CALL     $760            ; Call subroutine at 760
$E00    $E0C0   UNKNOWN  $E0C0           ; Unknown Exxx instruction
$E02    $A288   LD       I, $288         ; Load 288 into I
$E04    $7BA7   ADD      VB, #A7         ; Add 167 to VB
$E06    $0190   SYS      $190            ; System call to 190
$E08    $0CE8   SYS      $CE8            ; System call to CE8
$E0A    $5EE7   UNKNOWN  $5EE7           ; Unknown 5xxx instruction
$E0C    $B880   JP       V0, $880        ; Jump to V0 + 880
$E0E    $DBDF   DRW      VB, VD, #F      ; Draw 15-byte sprite at VB, VD
$E10    $66E1   LD       V6, #E1         ; Load 225 into V6
$E12    $3A9D   SE       VA, #9D         ; Skip if VA == 157
$E14    $6CAD   LD       VC, #AD         ; Load 173 into VC
$E16    $C9EC   RND      V9, #EC         ; V9 = random & EC
$E18    $7E29   ADD      VE, #29         ; Add 41 to VE
$E1A    $E015   UNKNOWN  $E015           ; Unknown Exxx instruction
$E1C    $55D9   UNKNOWN  $55D9           ; Unknown 5xxx instruction
$E1E    $4B53   SNE      VB, #53         ; Skip if VB != 83
$E20    $83FD   UNKNOWN  83FD            ; Unknown 8xxx instruction
$E22    $BB72   JP       V0, $B72        ; Jump to V0 + B72
$E24    $F211   UNKNOWN  F211            ; Unknown Fxxx instruction
$E26    $619F   LD       V1, #9F         ; Load 159 into V1
$E28    $249C   CALL     $49C            ; Call subroutine at 49C
$E2A    $1007   JP       $007            ; Jump to 007
$E2C    $7D01   ADD      VD, #01         ; Add 1 to VD
$E2E    $18C7   JP       $8C7            ; Jump to 8C7
$E30    $B9A8   JP       V0, $9A8        ; Jump to V0 + 9A8
$E32    $5890   SE       V8, V9          ; Skip if V8 == V9
$E34    $DB29   DRW      VB, V2, #9      ; Draw 9-byte sprite at VB, V2
$E36    $3D7F   SE       VD, #7F         ; Skip if VD == 127
$E38    $848E   SHL      V4              ; V4 <<= 1, VF = MSB
$E3A    $CA3F   RND      VA, #3F         ; VA = random & 3F
$E3C    $12C1   JP       $2C1            ; Jump to 2C1
$E3E    $B74B   JP       V0, $74B        ; Jump to V0 + 74B
$E40    $1026   JP       $026            ; Jump to 026
$E42    $062D   SYS      $62D            ; System call to 62D
$E44    $E8F1   UNKNOWN  $E8F1           ; Unknown Exxx instruction
$E46    $70BE   ADD      V0, #BE         ; Add 190 to V0
$E48    $A3B8   LD       I, $3B8         ; Load 3B8 into I
$E4A    $15D3   JP       $5D3            ; Jump to 5D3
$E4C    $C530   RND      V5, #30         ; V5 = random & 30
$E4E    $B4F8   JP       V0, $4F8        ; Jump to V0 + 4F8
$E50    $6EC3   LD       VE, #C3         ; Load 195 into VE
$E52    $A2B3   LD       I, $2B3         ; Load 2B3 into I
$E54    $9A64   UNKNOWN  $9A64           ; Unknown 9xxx instruction
$E56    $4F42   SNE      VF, #42         ; Skip if VF != 66
$E58    $A6B6   LD       I, $6B6         ; Load 6B6 into I
$E5A    $E4B9   UNKNOWN  $E4B9           ; Unknown Exxx instruction
$E5C    $27BC   CALL     $7BC            ; Call subroutine at 7BC
$E5E    $6969   LD       V9, #69         ; Load 105 into V9
$E60    $37A2   SE       V7, #A2         ; Skip if V7 == 162
$E62    $7572   ADD      V5, #72         ; Add 114 to V5
$E64    $C048   RND      V0, #48         ; V0 = random & 48
$E66    $955E   UNKNOWN  $955E           ; Unknown 9xxx instruction
$E68    $34F4   SE       V4, #F4         ; Skip if V4 == 244
$E6A    $45D3   SNE      V5, #D3         ; Skip if V5 != 211
$E6C    $F698   UNKNOWN  F698            ; Unknown Fxxx instruction
$E6E    $1CBD   JP       $CBD            ; Jump to CBD
$E70    $27A5   CALL     $7A5            ; Call subroutine at 7A5
$E72    $0A64   SYS      $A64            ; System call to A64
$E74    $31B4   SE       V1, #B4         ; Skip if V1 == 180
$E76    $75AE   ADD      V5, #AE         ; Add 174 to V5
$E78    $2092   CALL     $092            ; Call subroutine at 092
$E7A    $2C55   CALL     $C55            ; Call subroutine at C55
$E7C    $43E7   SNE      V3, #E7         ; Skip if V3 != 231
$E7E    $4362   SNE      V3, #62         ; Skip if V3 != 98
$E80    $E4BB   UNKNOWN  $E4BB           ; Unknown Exxx instruction
$E82    $5B15   UNKNOWN  $5B15           ; Unknown 5xxx instruction
$E84    $5B10   SE       VB, V1          ; Skip if VB == V1
$E86    $0A3B   SYS      $A3B            ; System call to A3B
$E88    $4B1C   SNE      VB, #1C         ; Skip if VB != 28
$E8A    $A715   LD       I, $715         ; Load 715 into I
$E8C    $CC39   RND      VC, #39         ; VC = random & 39
$E8E    $1AF6   JP       $AF6            ; Jump to AF6
$E90    $D2F1   DRW      V2, VF, #1      ; Draw 1-byte sprite at V2, VF
$E92    $1D49   JP       $D49            ; Jump to D49
$E94    $5F99   UNKNOWN  $5F99           ; Unknown 5xxx instruction
$E96    $065D   SYS      $65D            ; System call to 65D
$E98    $9AF9   UNKNOWN  $9AF9           ; Unknown 9xxx instruction
$E9A    $EF73   UNKNOWN  $EF73           ; Unknown Exxx instruction
$E9C    $FC9B   UNKNOWN  FC9B            ; Unknown Fxxx instruction
$E9E    $98C3   UNKNOWN  $98C3           ; Unknown 9xxx instruction
$EA0    $F9B8   UNKNOWN  F9B8            ; Unknown Fxxx instruction
$EA2    $6536   LD       V5, #36         ; Load 54 into V5
$EA4    $154B   JP       $54B            ; Jump to 54B
$EA6    $111D   JP       $11D            ; Jump to 11D
$EA8    $15AA   JP       $5AA            ; Jump to 5AA
$EAA    $D084   DRW      V0, V8, #4      ; Draw 4-byte sprite at V0, V8
$EAC    $7E59   ADD      VE, #59         ; Add 89 to VE
$EAE    $6BF2   LD       VB, #F2         ; Load 242 into VB
$EB0    $4FDB   SNE      VF, #DB         ; Skip if VF != 219
$EB2    $C7D4   RND      V7, #D4         ; V7 = random & D4
$EB4    $A276   LD       I, $276         ; Load 276 into I
$EB6    $B50D   JP       V0, $50D        ; Jump to V0 + 50D
$EB8    $D4D7   DRW      V4, VD, #7      ; Draw 7-byte sprite at V4, VD
$EBA    $EC63   UNKNOWN  $EC63           ; Unknown Exxx instruction
$EBC    $ACDB   LD       I, $CDB         ; Load CDB into I
$EBE    $677E   LD       V7, #7E         ; Load 126 into V7
$EC0    $7194   ADD      V1, #94         ; Add 148 to V1
$EC2    $0C54   SYS      $C54            ; System call to C54
$EC4    $6348   LD       V3, #48         ; Load 72 into V3
$EC6    $2CC5   CALL     $CC5            ; Call subroutine at CC5
$EC8    $96B8   UNKNOWN  $96B8           ; Unknown 9xxx instruction
$ECA    $1104   JP       $104            ; Jump to 104
$ECC    $2FA0   CALL     $FA0            ; Call subroutine at FA0
$ECE    $3914   SE       V9, #14         ; Skip if V9 == 20
$ED0    $6BF9   LD       VB, #F9         ; Load 249 into VB
$ED2    $79E0   ADD      V9, #E0         ; Add 224 to V9
$ED4    $32BB   SE       V2, #BB         ; Skip if V2 == 187
$ED6    $7833   ADD      V8, #33         ; Add 51 to V8
$ED8    $C796   RND      V7, #96         ; V7 = random & 96
$EDA    $1C13   JP       $C13            ; Jump to C13
$EDC    $3E50   SE       VE, #50         ; Skip if VE == 80
$EDE    $C814   RND      V8, #14         ; V8 = random & 14
$EE0    $241A   CALL     $41A            ; Call subroutine at 41A
$EE2    $AFD8   LD       I, $FD8         ; Load FD8 into I
$EE4    $4472   SNE      V4, #72         ; Skip if V4 != 114
$EE6    $270B   CALL     $70B            ; Call subroutine at 70B
$EE8    $3A76   SE       VA, #76         ; Skip if VA == 118
$EEA    $B594   JP       V0, $594        ; Jump to V0 + 594
$EEC    $6020   LD       V0, #20         ; Load 32 into V0
$EEE    $427A   SNE      V2, #7A         ; Skip if V2 != 122
$EF0    $50A5   UNKNOWN  $50A5           ; Unknown 5xxx instruction
$EF2    $693A   LD       V9, #3A         ; Load 58 into V9
$EF4    $62AF   LD       V2, #AF         ; Load 175 into V2
$EF6    $4D35   SNE      VD, #35         ; Skip if VD != 53
$EF8    $574D   UNKNOWN  $574D           ; Unknown 5xxx instruction
$EFA    $A1DA   LD       I, $1DA         ; Load 1DA into I
$EFC    $9F85   UNKNOWN  $9F85           ; Unknown 9xxx instruction
$EFE    $F1F3   UNKNOWN  F1F3            ; Unknown Fxxx instruction
$F00    $2DF7   CALL     $DF7            ; Call subroutine at DF7
$F02    $CC49   RND      VC, #49         ; VC = random & 49
$F04    $90F7   UNKNOWN  $90F7           ; Unknown 9xxx instruction
$F06    $D813   DRW      V8, V1, #3      ; Draw 3-byte sprite at V8, V1
$F08    $654F   LD       V5, #4F         ; Load 79 into V5
$F0A    $BEF4   JP       V0, $EF4        ; Jump to V0 + EF4
$F0C    $D292   DRW      V2, V9, #2      ; Draw 2-byte sprite at V2, V9
$F0E    $8449   UNKNOWN  8449            ; Unknown 8xxx instruction
$F10    $82A6   SHR      V2              ; V2 >>= 1, VF = LSB
$F12    $9BF5   UNKNOWN  $9BF5           ; Unknown 9xxx instruction
$F14    $3A78   SE       VA, #78         ; Skip if VA == 120
$F16    $EA0C   UNKNOWN  $EA0C           ; Unknown Exxx instruction
$F18    $8994   ADD      V9, V9          ; V9 += V9, VF = carry
$F1A    $FDE6   UNKNOWN  FDE6            ; Unknown Fxxx instruction
$F1C    $8510   LD       V5, V1          ; V5 = V1
$F1E    $17FE   JP       $7FE            ; Jump to 7FE
$F20    $6C9E   LD       VC, #9E         ; Load 158 into VC
$F22    $B7E8   JP       V0, $7E8        ; Jump to V0 + 7E8
$F24    $AC8D   LD       I, $C8D         ; Load C8D into I
$F26    $25EC   CALL     $5EC            ; Call subroutine at 5EC
$F28    $9E13   UNKNOWN  $9E13           ; Unknown 9xxx instruction
$F2A    $CD0A   RND      VD, #0A         ; VD = random & 0A
$F2C    $22B9   CALL     $2B9            ; Call subroutine at 2B9
$F2E    $1A2B   JP       $A2B            ; Jump to A2B
$F30    $8A9B   UNKNOWN  8A9B            ; Unknown 8xxx instruction
$F32    $81D3   XOR      V1, VD          ; V1 ^= VD
$F34    $AC08   LD       I, $C08         ; Load C08 into I
$F36    $ED7A   UNKNOWN  $ED7A           ; Unknown Exxx instruction
$F38    $CE2C   RND      VE, #2C         ; VE = random & 2C
$F3A    $0345   SYS      $345            ; System call to 345
$F3C    $098D   SYS      $98D            ; System call to 98D
$F3E    $133F   JP       $33F            ; Jump to 33F
$F40    $00D8   SYS      $0D8            ; System call to 0D8
$F42    $2E2D   CALL     $E2D            ; Call subroutine at E2D
$F44    $783F   ADD      V8, #3F         ; Add 63 to V8
$F46    $9A44   UNKNOWN  $9A44           ; Unknown 9xxx instruction
$F48    $D2DB   DRW      V2, VD, #B      ; Draw 11-byte sprite at V2, VD
$F4A    $8400   LD       V4, V0          ; V4 = V0
$F4C    $5EFF   UNKNOWN  $5EFF           ; Unknown 5xxx instruction
$F4E    $020A   SYS      $20A            ; System call to 20A
$F50    $4D53   SNE      VD, #53         ; Skip if VD != 83
$F52    $8EF8   UNKNOWN  8EF8            ; Unknown 8xxx instruction
$F54    $1403   JP       $403            ; Jump to 403
$F56    $6A43   LD       VA, #43         ; Load 67 into VA
$F58    $E522   UNKNOWN  $E522           ; Unknown Exxx instruction
$F5A    $1AC2   JP       $AC2            ; Jump to AC2
$F5C    $62BA   LD       V2, #BA         ; Load 186 into V2
$F5E    $5F27   UNKNOWN  $5F27           ; Unknown 5xxx instruction
$F60    $430F   SNE      V3, #0F         ; Skip if V3 != 15
$F62    $3D2D   SE       VD, #2D         ; Skip if VD == 45
$F64    $136E   JP       $36E            ; Jump to 36E
$F66    $5B84   UNKNOWN  $5B84           ; Unknown 5xxx instruction
$F68    $AE74   LD       I, $E74         ; Load E74 into I
$F6A    $A790   LD       I, $790         ; Load 790 into I
$F6C    $4F72   SNE      VF, #72         ; Skip if VF != 114
$F6E    $E4F1   UNKNOWN  $E4F1           ; Unknown Exxx instruction
$F70    $F146   UNKNOWN  F146            ; Unknown Fxxx instruction
$F72    $8691   OR       V6, V9          ; V6 |= V9
$F74    $0DEE   SYS      $DEE            ; System call to DEE
$F76    $6F5C   LD       VF, #5C         ; Load 92 into VF
$F78    $76B5   ADD      V6, #B5         ; Add 181 to V6
$F7A    $2C66   CALL     $C66            ; Call subroutine at C66
$F7C    $22C7   CALL     $2C7            ; Call subroutine at 2C7
$F7E    $D3D4   DRW      V3, VD, #4      ; Draw 4-byte sprite at V3, VD
$F80    $4AE3   SNE      VA, #E3         ; Skip if VA != 227
$F82    $16B5   JP       $6B5            ; Jump to 6B5
$F84    $E43D   UNKNOWN  $E43D           ; Unknown Exxx instruction
$F86    $ABE2   LD       I, $BE2         ; Load BE2 into I
$F88    $107A   JP       $07A            ; Jump to 07A
$F8A    $3281   SE       V2, #81         ; Skip if V2 == 129
$F8C    $8E35   SUB      VE, V3          ; VE -= V3, VF = !borrow
$F8E    $C881   RND      V8, #81         ; V8 = random & 81
$F90    $4E85   SNE      VE, #85         ; Skip if VE != 133
$F92    $9C95   UNKNOWN  $9C95           ; Unknown 9xxx instruction
$F94    $4C69   SNE      VC, #69         ; Skip if VC != 105
$F96    $85D4   ADD      V5, VD          ; V5 += VD, VF = carry
$F98    $7449   ADD      V4, #49         ; Add 73 to V4
$F9A    $ED69   UNKNOWN  $ED69           ; Unknown Exxx instruction
$F9C    $175B   JP       $75B            ; Jump to 75B
$F9E    $37AA   SE       V7, #AA         ; Skip if V7 == 170
$FA0    $41E4   SNE      V1, #E4         ; Skip if V1 != 228
$FA2    $9AE6   UNKNOWN  $9AE6           ; Unknown 9xxx instruction
$FA4    $2013   CALL     $013            ; Call subroutine at 013
$FA6    $D0E0   DRW      V0, VE, #0      ; Draw 0-byte sprite at V0, VE
$FA8    $E12E   UNKNOWN  $E12E           ; Unknown Exxx instruction
$FAA    $6DA4   LD       VD, #A4         ; Load 164 into VD
$FAC    $7930   ADD      V9, #30         ; Add 48 to V9
$FAE    $F83F   UNKNOWN  F83F            ; Unknown Fxxx instruction
$FB0    $81B3   XOR      V1, VB          ; V1 ^= VB
$FB2    $6B2C   LD       VB, #2C         ; Load 44 into VB
$FB4    $484A   SNE      V8, #4A         ; Skip if V8 != 74
$FB6    $FA6A   UNKNOWN  FA6A            ; Unknown Fxxx instruction
$FB8    $4E18   SNE      VE, #18         ; Skip if VE != 24
$FBA    $0D9D   SYS      $D9D            ; System call to D9D
$FBC    $D318   DRW      V3, V1, #8      ; Draw 8-byte sprite at V3, V1
$FBE    $DE50   DRW      VE, V5, #0      ; Draw 0-byte sprite at VE, V5
$FC0    $AA95   LD       I, $A95         ; Load A95 into I
$FC2    $8F43   XOR      VF, V4          ; VF ^= V4
$FC4    $B3E2   JP       V0, $3E2        ; Jump to V0 + 3E2
$FC6    $85BC   UNKNOWN  85BC            ; Unknown 8xxx instruction
$FC8    $F778   UNKNOWN  F778            ; Unknown Fxxx instruction
$FCA    $58C1   UNKNOWN  $58C1           ; Unknown 5xxx instruction
$FCC    $7237   ADD      V2, #37         ; Add 55 to V2
$FCE    $B454   JP       V0, $454        ; Jump to V0 + 454
$FD0    $5893   UNKNOWN  $5893           ; Unknown 5xxx instruction
$FD2    $66D2   LD       V6, #D2         ; Load 210 into V6
$FD4    $1029   JP       $029            ; Jump to 029
$FD6    $2592   CALL     $592            ; Call subroutine at 592
$FD8    $CFFA   RND      VF, #FA         ; VF = random & FA
$FDA    $1289   JP       $289            ; Jump to 289
$FDC    $474C   SNE      V7, #4C         ; Skip if V7 != 76
$FDE    $F04A   UNKNOWN  F04A            ; Unknown Fxxx instruction
$FE0    $1BF7   JP       $BF7            ; Jump to BF7
$FE2    $FF58   UNKNOWN  FF58            ; Unknown Fxxx instruction
$FE4    $320A   SE       V2, #0A         ; Skip if V2 == 10
$FE6    $612B   LD       V1, #2B         ; Load 43 into V1
$FE8    $1F7B   JP       $F7B            ; Jump to F7B
$FEA    $AB82   LD       I, $B82         ; Load B82 into I
$FEC    $8A63   XOR      VA, V6          ; VA ^= V6
$FEE    $27A5   CALL     $7A5            ; Call subroutine at 7A5
$FF0    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$FF2    $A560   LD       I, $560         ; Load 560 into I
$FF4    $D87E   DRW      V8, V7, #E      ; Draw 14-byte sprite at V8, V7
$FF6    $65CC   LD       V5, #CC         ; Load 204 into V5
$FF8    $8E9D   UNKNOWN  8E9D            ; Unknown 8xxx instruction
$FFA    $098E   SYS      $98E            ; System call to 98E
$FFC    $2A4C   CALL     $A4C            ; Call subroutine at A4C
$FFE    $A8F3   LD       I, $8F3         ; Load 8F3 into I

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 470 (26.2%)
  LD      : 252 (14.1%)
  JP      : 226 (12.6%)
  RND     : 130 ( 7.3%)
  SE      : 119 ( 6.6%)
  SNE     : 119 ( 6.6%)
  DRW     : 112 ( 6.2%)
  ADD     : 109 ( 6.1%)
  CALL    : 103 ( 5.7%)
  SYS     :  93 ( 5.2%)
  XOR     :  14 ( 0.8%)
  SHR     :  13 ( 0.7%)
  SUB     :  11 ( 0.6%)
  SHL     :   8 ( 0.4%)
  SUBN    :   6 ( 0.3%)
  AND     :   5 ( 0.3%)
  OR      :   2 ( 0.1%)

Memory Operations: 361 (20.1%)
Arithmetic Operations: 147 (8.2%)
