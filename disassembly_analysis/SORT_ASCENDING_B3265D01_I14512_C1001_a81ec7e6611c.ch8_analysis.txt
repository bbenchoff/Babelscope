
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B3265D01_I14512_C1001_a81ec7e6611c.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 3265
Instance: 14512
Direction: ascending
Final Array: [16, 16, 16, 16, 16, 16, 16, 196]
Operations: R:0 W:7 C:48 S:6

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 120
Sort Array References:
  $200: LD I, $B0A ; Load B0A into I
  $204: LD I, $F4C ; Load F4C into I
  $222: LD I, $EA3 ; Load EA3 into I
  $228: LD I, $EFA ; Load EFA into I
  $272: LD I, $B10 ; Load B10 into I
  $328: LD I, $A62 ; Load A62 into I
  $352: LD I, $381 ; Load 381 into I
  $366: LD I, $3AF ; Load 3AF into I
  $37A: LD I, $F32 ; Load F32 into I
  $37E: LD I, $3B2 ; Load 3B2 into I
  $384: LD I, $E1F ; Load E1F into I
  $3A8: LD I, $83F ; Load 83F into I
  $3B6: LD I, $730 ; Load 730 into I
  $3CA: LD I, $817 ; Load 817 into I
  $424: LD I, $F0E ; Load F0E into I
  $44A: LD I, $C46 ; Load C46 into I
  $44C: LD I, $103 ; Load 103 into I
  $466: LD I, $8B7 ; Load 8B7 into I
  $48C: LD I, $0AC ; Load 0AC into I
  $4D8: LD I, $C02 ; Load C02 into I
  $4DE: LD I, $35B ; Load 35B into I
  $4F4: LD I, $229 ; Load 229 into I
  $4FE: LD I, $752 ; Load 752 into I
  $500: LD I, $E09 ; Load E09 into I
  $50A: LD I, $B8E ; Load B8E into I
  $50C: LD I, $504 ; Load 504 into I
  $518: LD I, $C34 ; Load C34 into I
  $54C: LD I, $AB6 ; Load AB6 into I
  $564: LD I, $C99 ; Load C99 into I
  $588: LD I, $CD7 ; Load CD7 into I
  $58C: LD I, $254 ; Load 254 into I
  $5AC: LD I, $65C ; Load 65C into I
  $5EE: LD I, $2A5 ; Load 2A5 into I
  $600: LD I, $7F1 ; Load 7F1 into I
  $61A: LD I, $B83 ; Load B83 into I
  $62C: LD I, $D70 ; Load D70 into I
  $65E: LD I, $985 ; Load 985 into I
  $66A: LD I, $564 ; Load 564 into I
  $66C: LD I, $15D ; Load 15D into I
  $67A: LD I, $B36 ; Load B36 into I
  $698: LD I, $6E7 ; Load 6E7 into I
  $6E6: LD I, $A59 ; Load A59 into I
  $702: LD I, $6DB ; Load 6DB into I
  $70C: LD I, $B42 ; Load B42 into I
  $718: LD I, $B40 ; Load B40 into I
  $726: LD I, $910 ; Load 910 into I
  $72E: LD I, $158 ; Load 158 into I
  $736: LD I, $4F4 ; Load 4F4 into I
  $74A: LD I, $609 ; Load 609 into I
  $762: LD I, $6AB ; Load 6AB into I
  $78A: LD [I], V0 ; Store V0-V0 at I
  $7A2: LD I, $CB5 ; Load CB5 into I
  $7BE: LD I, $334 ; Load 334 into I
  $83E: LD I, $B09 ; Load B09 into I
  $860: LD I, $6FF ; Load 6FF into I
  $868: LD I, $8C7 ; Load 8C7 into I
  $870: LD I, $138 ; Load 138 into I
  $8CE: LD I, $EC6 ; Load EC6 into I
  $8DA: LD I, $79F ; Load 79F into I
  $8E2: LD I, $3B8 ; Load 3B8 into I
  $8FC: LD I, $929 ; Load 929 into I
  $902: LD I, $CEC ; Load CEC into I
  $916: LD I, $D77 ; Load D77 into I
  $944: LD I, $B6D ; Load B6D into I
  $94C: LD I, $A8C ; Load A8C into I
  $9B2: LD I, $6DB ; Load 6DB into I
  $9C4: LD I, $626 ; Load 626 into I
  $9E0: LD I, $15C ; Load 15C into I
  $9EC: LD I, $3DD ; Load 3DD into I
  $A18: LD I, $079 ; Load 079 into I
  $A24: LD I, $3F2 ; Load 3F2 into I
  $A58: LD I, $F23 ; Load F23 into I
  $A6A: LD I, $22F ; Load 22F into I
  $A96: LD I, $E26 ; Load E26 into I
  $A9E: LD I, $0FA ; Load 0FA into I
  $AC2: LD I, $B8B ; Load B8B into I
  $AF6: LD I, $16E ; Load 16E into I
  $B22: LD I, $A17 ; Load A17 into I
  $B26: LD I, $C06 ; Load C06 into I
  $B3C: LD I, $D06 ; Load D06 into I
  $B40: LD I, $552 ; Load 552 into I
  $B5C: LD I, $828 ; Load 828 into I
  $B78: LD I, $CB4 ; Load CB4 into I
  $C12: LD I, $3A5 ; Load 3A5 into I
  $C28: LD I, $7D6 ; Load 7D6 into I
  $C52: LD I, $D94 ; Load D94 into I
  $C6C: LD I, $131 ; Load 131 into I
  $C72: LD I, $38C ; Load 38C into I
  $C7A: LD I, $EDC ; Load EDC into I
  $C82: LD I, $5C6 ; Load 5C6 into I
  $CAC: LD I, $85B ; Load 85B into I
  $CEC: LD I, $185 ; Load 185 into I
  $CF4: LD I, $168 ; Load 168 into I
  $D1E: LD I, $21E ; Load 21E into I
  $D56: LD I, $CB9 ; Load CB9 into I
  $DA4: LD I, $1AB ; Load 1AB into I
  $DD2: LD I, $9EA ; Load 9EA into I
  $DF2: LD I, $11D ; Load 11D into I
  $E04: LD I, $758 ; Load 758 into I
  $E26: LD I, $1E8 ; Load 1E8 into I
  $E2E: LD I, $69E ; Load 69E into I
  $E3A: LD I, $223 ; Load 223 into I
  $E5A: LD I, $7D2 ; Load 7D2 into I
  $E7A: LD I, $4D0 ; Load 4D0 into I
  $EAC: LD I, $86E ; Load 86E into I
  $EDC: LD I, $252 ; Load 252 into I
  $EF8: LD I, $927 ; Load 927 into I
  $F12: LD I, $17F ; Load 17F into I
  $F18: LD I, $475 ; Load 475 into I
  $F1A: LD I, $C66 ; Load C66 into I
  $F2C: LD I, $2B9 ; Load 2B9 into I
  $F58: LD I, $9EE ; Load 9EE into I
  $F5A: LD I, $D41 ; Load D41 into I
  $F94: LD I, $1EF ; Load 1EF into I
  $FA0: LD I, $774 ; Load 774 into I
  $FAC: LD I, $C45 ; Load C45 into I
  $FAE: LD I, $339 ; Load 339 into I
  $FD0: LD I, $50C ; Load 50C into I
  $FD4: LD I, $150 ; Load 150 into I
  $FDE: LD I, $68E ; Load 68E into I

CONTROL FLOW ANALYSIS:
Jumps: 269
Calls: 101
Branches: 217
Loops: 169
Loop Structures:
  $21C -> $16A (backward jump)
  $24E -> $0E9 (backward jump)
  $26E -> $0E4 (backward jump)
  $2B6 -> $010 (backward jump)
  $2B8 -> $010 (backward jump)
  $2BA -> $010 (backward jump)
  $2BC -> $010 (backward jump)
  $2BE -> $010 (backward jump)
  $2C0 -> $010 (backward jump)
  $2C2 -> $010 (backward jump)
  $2C4 -> $010 (backward jump)
  $2C6 -> $010 (backward jump)
  $2C8 -> $010 (backward jump)
  $2CA -> $010 (backward jump)
  $2CC -> $010 (backward jump)
  $2CE -> $010 (backward jump)
  $2D0 -> $010 (backward jump)
  $2D2 -> $010 (backward jump)
  $2D4 -> $010 (backward jump)
  $2D6 -> $010 (backward jump)
  $2D8 -> $010 (backward jump)
  $2DA -> $010 (backward jump)
  $2DC -> $010 (backward jump)
  $2DE -> $010 (backward jump)
  $2E0 -> $010 (backward jump)
  $2E2 -> $010 (backward jump)
  $2E4 -> $010 (backward jump)
  $2E6 -> $010 (backward jump)
  $2E8 -> $010 (backward jump)
  $2EA -> $010 (backward jump)
  $2EC -> $010 (backward jump)
  $2EE -> $010 (backward jump)
  $2F0 -> $010 (backward jump)
  $2F2 -> $010 (backward jump)
  $2F4 -> $010 (backward jump)
  $2F6 -> $010 (backward jump)
  $2F8 -> $010 (backward jump)
  $2FA -> $010 (backward jump)
  $2FC -> $010 (backward jump)
  $2FE -> $010 (backward jump)
  $300 -> $010 (backward jump)
  $302 -> $010 (backward jump)
  $304 -> $010 (backward jump)
  $306 -> $0C4 (backward jump)
  $41C -> $166 (backward jump)
  $4A6 -> $0BF (backward jump)
  $4EE -> $316 (backward jump)
  $504 -> $137 (backward jump)
  $53C -> $42B (backward jump)
  $53E -> $385 (backward jump)
  $568 -> $438 (backward jump)
  $5D8 -> $47E (backward jump)
  $61C -> $19B (backward jump)
  $628 -> $2E8 (backward jump)
  $638 -> $4EB (backward jump)
  $656 -> $3D4 (backward jump)
  $668 -> $2DA (backward jump)
  $66E -> $17E (backward jump)
  $6BE -> $284 (backward jump)
  $6CA -> $648 (backward jump)
  $6D6 -> $0E3 (backward jump)
  $6D8 -> $467 (backward jump)
  $6DC -> $553 (backward jump)
  $6DE -> $229 (backward jump)
  $6EC -> $6EC (backward jump)
  $71C -> $584 (backward jump)
  $73A -> $226 (backward jump)
  $792 -> $78A (backward jump)
  $7B0 -> $0B0 (backward jump)
  $7CA -> $0A9 (backward jump)
  $7FE -> $33E (backward jump)
  $804 -> $12B (backward jump)
  $81C -> $6BF (backward jump)
  $88E -> $1DB (backward jump)
  $8C6 -> $3A4 (backward jump)
  $8E4 -> $58F (backward jump)
  $8E6 -> $546 (backward jump)
  $920 -> $1D1 (backward jump)
  $934 -> $660 (backward jump)
  $956 -> $7FE (backward jump)
  $968 -> $73A (backward jump)
  $984 -> $014 (backward jump)
  $988 -> $8F2 (backward jump)
  $994 -> $2DC (backward jump)
  $99A -> $001 (backward jump)
  $9AA -> $24F (backward jump)
  $9CC -> $3C7 (backward jump)
  $9D2 -> $372 (backward jump)
  $9F2 -> $9D6 (backward jump)
  $9F8 -> $249 (backward jump)
  $A04 -> $61F (backward jump)
  $A06 -> $0E9 (backward jump)
  $A26 -> $342 (backward jump)
  $A52 -> $167 (backward jump)
  $AB8 -> $A9D (backward jump)
  $ACE -> $506 (backward jump)
  $AE6 -> $49E (backward jump)
  $AF4 -> $5B6 (backward jump)
  $B3A -> $4AA (backward jump)
  $B54 -> $A97 (backward jump)
  $B58 -> $162 (backward jump)
  $B5A -> $7B4 (backward jump)
  $B6E -> $9AF (backward jump)
  $B88 -> $3DC (backward jump)
  $BAA -> $64B (backward jump)
  $BB6 -> $1AF (backward jump)
  $BCE -> $045 (backward jump)
  $BD2 -> $85E (backward jump)
  $BDA -> $A39 (backward jump)
  $BEE -> $16E (backward jump)
  $BF0 -> $7A2 (backward jump)
  $BF8 -> $183 (backward jump)
  $C1A -> $4B9 (backward jump)
  $C24 -> $4DE (backward jump)
  $C56 -> $A28 (backward jump)
  $C6E -> $AF1 (backward jump)
  $C7E -> $393 (backward jump)
  $CA8 -> $771 (backward jump)
  $CC2 -> $104 (backward jump)
  $CDE -> $BD8 (backward jump)
  $CF2 -> $CBD (backward jump)
  $CF6 -> $4AE (backward jump)
  $CF8 -> $561 (backward jump)
  $D04 -> $41F (backward jump)
  $D08 -> $2D5 (backward jump)
  $D10 -> $999 (backward jump)
  $D20 -> $32A (backward jump)
  $D2C -> $88F (backward jump)
  $D2E -> $A19 (backward jump)
  $D3C -> $C58 (backward jump)
  $D5A -> $0C1 (backward jump)
  $D5E -> $12C (backward jump)
  $D62 -> $227 (backward jump)
  $D70 -> $21B (backward jump)
  $D7A -> $4D7 (backward jump)
  $D9A -> $0D0 (backward jump)
  $DBA -> $6CA (backward jump)
  $DBC -> $C6C (backward jump)
  $DE2 -> $117 (backward jump)
  $E02 -> $C4F (backward jump)
  $E0C -> $DE9 (backward jump)
  $E1A -> $3FE (backward jump)
  $E1C -> $C13 (backward jump)
  $E2A -> $424 (backward jump)
  $E3C -> $592 (backward jump)
  $E44 -> $9AB (backward jump)
  $E5E -> $A5C (backward jump)
  $E84 -> $0A0 (backward jump)
  $E9E -> $4D4 (backward jump)
  $EA6 -> $1B4 (backward jump)
  $EA8 -> $1D5 (backward jump)
  $EAA -> $B7A (backward jump)
  $EAE -> $6D9 (backward jump)
  $ED2 -> $935 (backward jump)
  $EE0 -> $BF4 (backward jump)
  $F00 -> $42F (backward jump)
  $F0A -> $DBA (backward jump)
  $F26 -> $07E (backward jump)
  $F3A -> $841 (backward jump)
  $F46 -> $E5A (backward jump)
  $F60 -> $C84 (backward jump)
  $F88 -> $A5A (backward jump)
  $F92 -> $90D (backward jump)
  $F9A -> $6D5 (backward jump)
  $FB2 -> $F20 (backward jump)
  $FDC -> $062 (backward jump)
  $FE2 -> $BEB (backward jump)
  $FE6 -> $BD5 (backward jump)
  $FEC -> $B53 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $AB0A   LD       I, $B0A         ; Load B0A into I
$202    $F4B9   UNKNOWN  F4B9            ; Unknown Fxxx instruction
$204    $AF4C   LD       I, $F4C         ; Load F4C into I
$206    $676B   LD       V7, #6B         ; Load 107 into V7
$208    $0BE3   SYS      $BE3            ; System call to BE3
$20A    $F9C3   UNKNOWN  F9C3            ; Unknown Fxxx instruction
$20C    $B64D   JP       V0, $64D        ; Jump to V0 + 64D
$20E    $F8BB   UNKNOWN  F8BB            ; Unknown Fxxx instruction
$210    $BB41   JP       V0, $B41        ; Jump to V0 + B41
$212    $B236   JP       V0, $236        ; Jump to V0 + 236
$214    $8A15   SUB      VA, V1          ; VA -= V1, VF = !borrow
$216    $8607   SUBN     V6, V0          ; V6 = V0 - V6, VF = !borrow
$218    $6DC7   LD       VD, #C7         ; Load 199 into VD
$21A    $7951   ADD      V9, #51         ; Add 81 to V9
$21C    $B16A   JP       V0, $16A        ; Jump to V0 + 16A
$21E    $8A5C   UNKNOWN  8A5C            ; Unknown 8xxx instruction
$220    $7730   ADD      V7, #30         ; Add 48 to V7
$222    $AEA3   LD       I, $EA3         ; Load EA3 into I
$224    $2749   CALL     $749            ; Call subroutine at 749
$226    $BACF   JP       V0, $ACF        ; Jump to V0 + ACF
$228    $AEFA   LD       I, $EFA         ; Load EFA into I
$22A    $4892   SNE      V8, #92         ; Skip if V8 != 146
$22C    $9540   SNE      V5, V4          ; Skip if V5 != V4
$22E    $2ADE   CALL     $ADE            ; Call subroutine at ADE
$230    $D036   DRW      V0, V3, #6      ; Draw 6-byte sprite at V0, V3
$232    $4ECD   SNE      VE, #CD         ; Skip if VE != 205
$234    $F051   UNKNOWN  F051            ; Unknown Fxxx instruction
$236    $49F8   SNE      V9, #F8         ; Skip if V9 != 248
$238    $571F   UNKNOWN  $571F           ; Unknown 5xxx instruction
$23A    $6259   LD       V2, #59         ; Load 89 into V2
$23C    $53C8   UNKNOWN  $53C8           ; Unknown 5xxx instruction
$23E    $E5DC   UNKNOWN  $E5DC           ; Unknown Exxx instruction
$240    $C1A3   RND      V1, #A3         ; V1 = random & A3
$242    $8AA4   ADD      VA, VA          ; VA += VA, VF = carry
$244    $D0ED   DRW      V0, VE, #D      ; Draw 13-byte sprite at V0, VE
$246    $C81F   RND      V8, #1F         ; V8 = random & 1F
$248    $6D02   LD       VD, #02         ; Load 2 into VD
$24A    $8BBF   UNKNOWN  8BBF            ; Unknown 8xxx instruction
$24C    $6500   LD       V5, #00         ; Load 0 into V5
$24E    $10E9   JP       $0E9            ; Jump to 0E9
$250    $4F2E   SNE      VF, #2E         ; Skip if VF != 46
$252    $BB2F   JP       V0, $B2F        ; Jump to V0 + B2F
$254    $C658   RND      V6, #58         ; V6 = random & 58
$256    $7608   ADD      V6, #08         ; Add 8 to V6
$258    $7CFA   ADD      VC, #FA         ; Add 250 to VC
$25A    $34F7   SE       V4, #F7         ; Skip if V4 == 247
$25C    $77C0   ADD      V7, #C0         ; Add 192 to V7
$25E    $EA75   UNKNOWN  $EA75           ; Unknown Exxx instruction
$260    $EF4C   UNKNOWN  $EF4C           ; Unknown Exxx instruction
$262    $85BE   SHL      V5              ; V5 <<= 1, VF = MSB
$264    $FC1F   UNKNOWN  FC1F            ; Unknown Fxxx instruction
$266    $F487   UNKNOWN  F487            ; Unknown Fxxx instruction
$268    $FBB0   UNKNOWN  FBB0            ; Unknown Fxxx instruction
$26A    $4722   SNE      V7, #22         ; Skip if V7 != 34
$26C    $D241   DRW      V2, V4, #1      ; Draw 1-byte sprite at V2, V4
$26E    $10E4   JP       $0E4            ; Jump to 0E4
$270    $226E   CALL     $26E            ; Call subroutine at 26E
$272    $AB10   LD       I, $B10         ; Load B10 into I
$274    $9B22   UNKNOWN  $9B22           ; Unknown 9xxx instruction
$276    $1BCE   JP       $BCE            ; Jump to BCE
$278    $0A2C   SYS      $A2C            ; System call to A2C
$27A    $9939   UNKNOWN  $9939           ; Unknown 9xxx instruction
$27C    $8FED   UNKNOWN  8FED            ; Unknown 8xxx instruction
$27E    $DB9A   DRW      VB, V9, #A      ; Draw 10-byte sprite at VB, V9
$280    $7CBB   ADD      VC, #BB         ; Add 187 to VC
$282    $B505   JP       V0, $505        ; Jump to V0 + 505
$284    $9D1A   UNKNOWN  $9D1A           ; Unknown 9xxx instruction
$286    $12E8   JP       $2E8            ; Jump to 2E8
$288    $5405   UNKNOWN  $5405           ; Unknown 5xxx instruction
$28A    $17C3   JP       $7C3            ; Jump to 7C3
$28C    $5FB6   UNKNOWN  $5FB6           ; Unknown 5xxx instruction
$28E    $67E1   LD       V7, #E1         ; Load 225 into V7
$290    $C36D   RND      V3, #6D         ; V3 = random & 6D
$292    $5C28   UNKNOWN  $5C28           ; Unknown 5xxx instruction
$294    $02AF   SYS      $2AF            ; System call to 2AF
$296    $D6CE   DRW      V6, VC, #E      ; Draw 14-byte sprite at V6, VC
$298    $28A9   CALL     $8A9            ; Call subroutine at 8A9
$29A    $C9EE   RND      V9, #EE         ; V9 = random & EE
$29C    $E6D8   UNKNOWN  $E6D8           ; Unknown Exxx instruction
$29E    $BB72   JP       V0, $B72        ; Jump to V0 + B72
$2A0    $7152   ADD      V1, #52         ; Add 82 to V1
$2A2    $D029   DRW      V0, V2, #9      ; Draw 9-byte sprite at V0, V2
$2A4    $57B1   UNKNOWN  $57B1           ; Unknown 5xxx instruction
$2A6    $7168   ADD      V1, #68         ; Add 104 to V1
$2A8    $8E76   SHR      VE              ; VE >>= 1, VF = LSB
$2AA    $2998   CALL     $998            ; Call subroutine at 998
$2AC    $3503   SE       V5, #03         ; Skip if V5 == 3
$2AE    $D108   DRW      V1, V0, #8      ; Draw 8-byte sprite at V1, V0
$2B0    $65F4   LD       V5, #F4         ; Load 244 into V5
$2B2    $FFCE   UNKNOWN  FFCE            ; Unknown Fxxx instruction
$2B4    $8AE4   ADD      VA, VE          ; VA += VE, VF = carry
$2B6    $1010   JP       $010            ; Jump to 010
$2B8    $1010   JP       $010            ; Jump to 010
$2BA    $1010   JP       $010            ; Jump to 010
$2BC    $1010   JP       $010            ; Jump to 010
$2BE    $1010   JP       $010            ; Jump to 010
$2C0    $1010   JP       $010            ; Jump to 010
$2C2    $1010   JP       $010            ; Jump to 010
$2C4    $1010   JP       $010            ; Jump to 010
$2C6    $1010   JP       $010            ; Jump to 010
$2C8    $1010   JP       $010            ; Jump to 010
$2CA    $1010   JP       $010            ; Jump to 010
$2CC    $1010   JP       $010            ; Jump to 010
$2CE    $1010   JP       $010            ; Jump to 010
$2D0    $1010   JP       $010            ; Jump to 010
$2D2    $1010   JP       $010            ; Jump to 010
$2D4    $1010   JP       $010            ; Jump to 010
$2D6    $1010   JP       $010            ; Jump to 010
$2D8    $1010   JP       $010            ; Jump to 010
$2DA    $1010   JP       $010            ; Jump to 010
$2DC    $1010   JP       $010            ; Jump to 010
$2DE    $1010   JP       $010            ; Jump to 010
$2E0    $1010   JP       $010            ; Jump to 010
$2E2    $1010   JP       $010            ; Jump to 010
$2E4    $1010   JP       $010            ; Jump to 010
$2E6    $1010   JP       $010            ; Jump to 010
$2E8    $1010   JP       $010            ; Jump to 010
$2EA    $1010   JP       $010            ; Jump to 010
$2EC    $1010   JP       $010            ; Jump to 010
$2EE    $1010   JP       $010            ; Jump to 010
$2F0    $1010   JP       $010            ; Jump to 010
$2F2    $1010   JP       $010            ; Jump to 010
$2F4    $1010   JP       $010            ; Jump to 010
$2F6    $1010   JP       $010            ; Jump to 010
$2F8    $1010   JP       $010            ; Jump to 010
$2FA    $1010   JP       $010            ; Jump to 010
$2FC    $1010   JP       $010            ; Jump to 010
$2FE    $1010   JP       $010            ; Jump to 010
$300    $1010   JP       $010            ; Jump to 010
$302    $1010   JP       $010            ; Jump to 010
$304    $1010   JP       $010            ; Jump to 010
$306    $10C4   JP       $0C4            ; Jump to 0C4
$308    $5439   UNKNOWN  $5439           ; Unknown 5xxx instruction
$30A    $866E   SHL      V6              ; V6 <<= 1, VF = MSB
$30C    $5765   UNKNOWN  $5765           ; Unknown 5xxx instruction
$30E    $768D   ADD      V6, #8D         ; Add 141 to V6
$310    $4152   SNE      V1, #52         ; Skip if V1 != 82
$312    $EFB4   UNKNOWN  $EFB4           ; Unknown Exxx instruction
$314    $5D64   UNKNOWN  $5D64           ; Unknown 5xxx instruction
$316    $4C2B   SNE      VC, #2B         ; Skip if VC != 43
$318    $0EDA   SYS      $EDA            ; System call to EDA
$31A    $03BF   SYS      $3BF            ; System call to 3BF
$31C    $E0FE   UNKNOWN  $E0FE           ; Unknown Exxx instruction
$31E    $373B   SE       V7, #3B         ; Skip if V7 == 59
$320    $5537   UNKNOWN  $5537           ; Unknown 5xxx instruction
$322    $84DD   UNKNOWN  84DD            ; Unknown 8xxx instruction
$324    $6527   LD       V5, #27         ; Load 39 into V5
$326    $7A0D   ADD      VA, #0D         ; Add 13 to VA
$328    $AA62   LD       I, $A62         ; Load A62 into I
$32A    $B64F   JP       V0, $64F        ; Jump to V0 + 64F
$32C    $5066   UNKNOWN  $5066           ; Unknown 5xxx instruction
$32E    $BB3A   JP       V0, $B3A        ; Jump to V0 + B3A
$330    $FDB3   UNKNOWN  FDB3            ; Unknown Fxxx instruction
$332    $E735   UNKNOWN  $E735           ; Unknown Exxx instruction
$334    $02DA   SYS      $2DA            ; System call to 2DA
$336    $9B73   UNKNOWN  $9B73           ; Unknown 9xxx instruction
$338    $7A79   ADD      VA, #79         ; Add 121 to VA
$33A    $92B1   UNKNOWN  $92B1           ; Unknown 9xxx instruction
$33C    $BAAC   JP       V0, $AAC        ; Jump to V0 + AAC
$33E    $1F3A   JP       $F3A            ; Jump to F3A
$340    $4A82   SNE      VA, #82         ; Skip if VA != 130
$342    $5EBD   UNKNOWN  $5EBD           ; Unknown 5xxx instruction
$344    $D151   DRW      V1, V5, #1      ; Draw 1-byte sprite at V1, V5
$346    $3662   SE       V6, #62         ; Skip if V6 == 98
$348    $4070   SNE      V0, #70         ; Skip if V0 != 112
$34A    $EC55   UNKNOWN  $EC55           ; Unknown Exxx instruction
$34C    $DB13   DRW      VB, V1, #3      ; Draw 3-byte sprite at VB, V1
$34E    $9729   UNKNOWN  $9729           ; Unknown 9xxx instruction
$350    $40C2   SNE      V0, #C2         ; Skip if V0 != 194
$352    $A381   LD       I, $381         ; Load 381 into I
$354    $32E2   SE       V2, #E2         ; Skip if V2 == 226
$356    $9686   UNKNOWN  $9686           ; Unknown 9xxx instruction
$358    $01FC   SYS      $1FC            ; System call to 1FC
$35A    $E608   UNKNOWN  $E608           ; Unknown Exxx instruction
$35C    $0AD9   SYS      $AD9            ; System call to AD9
$35E    $2CA4   CALL     $CA4            ; Call subroutine at CA4
$360    $9CC6   UNKNOWN  $9CC6           ; Unknown 9xxx instruction
$362    $82E9   UNKNOWN  82E9            ; Unknown 8xxx instruction
$364    $4767   SNE      V7, #67         ; Skip if V7 != 103
$366    $A3AF   LD       I, $3AF         ; Load 3AF into I
$368    $E32B   UNKNOWN  $E32B           ; Unknown Exxx instruction
$36A    $E657   UNKNOWN  $E657           ; Unknown Exxx instruction
$36C    $3AC0   SE       VA, #C0         ; Skip if VA == 192
$36E    $E8FF   UNKNOWN  $E8FF           ; Unknown Exxx instruction
$370    $FBE7   UNKNOWN  FBE7            ; Unknown Fxxx instruction
$372    $FE75   UNKNOWN  FE75            ; Unknown Fxxx instruction
$374    $6EEE   LD       VE, #EE         ; Load 238 into VE
$376    $7D70   ADD      VD, #70         ; Add 112 to VD
$378    $FFC1   UNKNOWN  FFC1            ; Unknown Fxxx instruction
$37A    $AF32   LD       I, $F32         ; Load F32 into I
$37C    $E4C7   UNKNOWN  $E4C7           ; Unknown Exxx instruction
$37E    $A3B2   LD       I, $3B2         ; Load 3B2 into I
$380    $EB10   UNKNOWN  $EB10           ; Unknown Exxx instruction
$382    $4034   SNE      V0, #34         ; Skip if V0 != 52
$384    $AE1F   LD       I, $E1F         ; Load E1F into I
$386    $7212   ADD      V2, #12         ; Add 18 to V2
$388    $DAA9   DRW      VA, VA, #9      ; Draw 9-byte sprite at VA, VA
$38A    $6A24   LD       VA, #24         ; Load 36 into VA
$38C    $9007   UNKNOWN  $9007           ; Unknown 9xxx instruction
$38E    $37F2   SE       V7, #F2         ; Skip if V7 == 242
$390    $6639   LD       V6, #39         ; Load 57 into V6
$392    $E56A   UNKNOWN  $E56A           ; Unknown Exxx instruction
$394    $32DF   SE       V2, #DF         ; Skip if V2 == 223
$396    $001F   SYS      $01F            ; System call to 01F
$398    $2EA5   CALL     $EA5            ; Call subroutine at EA5
$39A    $2A7E   CALL     $A7E            ; Call subroutine at A7E
$39C    $7503   ADD      V5, #03         ; Add 3 to V5
$39E    $164E   JP       $64E            ; Jump to 64E
$3A0    $2A0D   CALL     $A0D            ; Call subroutine at A0D
$3A2    $C727   RND      V7, #27         ; V7 = random & 27
$3A4    $0BBE   SYS      $BBE            ; System call to BBE
$3A6    $5B50   SE       VB, V5          ; Skip if VB == V5
$3A8    $A83F   LD       I, $83F         ; Load 83F into I
$3AA    $6181   LD       V1, #81         ; Load 129 into V1
$3AC    $26EC   CALL     $6EC            ; Call subroutine at 6EC
$3AE    $193C   JP       $93C            ; Jump to 93C
$3B0    $E5D1   UNKNOWN  $E5D1           ; Unknown Exxx instruction
$3B2    $F07A   UNKNOWN  F07A            ; Unknown Fxxx instruction
$3B4    $2619   CALL     $619            ; Call subroutine at 619
$3B6    $A730   LD       I, $730         ; Load 730 into I
$3B8    $3241   SE       V2, #41         ; Skip if V2 == 65
$3BA    $EACB   UNKNOWN  $EACB           ; Unknown Exxx instruction
$3BC    $FD8B   UNKNOWN  FD8B            ; Unknown Fxxx instruction
$3BE    $3E5D   SE       VE, #5D         ; Skip if VE == 93
$3C0    $043E   SYS      $43E            ; System call to 43E
$3C2    $8A67   SUBN     VA, V6          ; VA = V6 - VA, VF = !borrow
$3C4    $9086   UNKNOWN  $9086           ; Unknown 9xxx instruction
$3C6    $DFD3   DRW      VF, VD, #3      ; Draw 3-byte sprite at VF, VD
$3C8    $2EC5   CALL     $EC5            ; Call subroutine at EC5
$3CA    $A817   LD       I, $817         ; Load 817 into I
$3CC    $CF36   RND      VF, #36         ; VF = random & 36
$3CE    $5BEA   UNKNOWN  $5BEA           ; Unknown 5xxx instruction
$3D0    $EB78   UNKNOWN  $EB78           ; Unknown Exxx instruction
$3D2    $0BCC   SYS      $BCC            ; System call to BCC
$3D4    $1FBA   JP       $FBA            ; Jump to FBA
$3D6    $09DC   SYS      $9DC            ; System call to 9DC
$3D8    $3CBE   SE       VC, #BE         ; Skip if VC == 190
$3DA    $25FB   CALL     $5FB            ; Call subroutine at 5FB
$3DC    $26CC   CALL     $6CC            ; Call subroutine at 6CC
$3DE    $D1ED   DRW      V1, VE, #D      ; Draw 13-byte sprite at V1, VE
$3E0    $35F0   SE       V5, #F0         ; Skip if V5 == 240
$3E2    $03E3   SYS      $3E3            ; System call to 3E3
$3E4    $F366   UNKNOWN  F366            ; Unknown Fxxx instruction
$3E6    $62E0   LD       V2, #E0         ; Load 224 into V2
$3E8    $9C59   UNKNOWN  $9C59           ; Unknown 9xxx instruction
$3EA    $BC24   JP       V0, $C24        ; Jump to V0 + C24
$3EC    $D9F0   DRW      V9, VF, #0      ; Draw 0-byte sprite at V9, VF
$3EE    $0EEC   SYS      $EEC            ; System call to EEC
$3F0    $BFF1   JP       V0, $FF1        ; Jump to V0 + FF1
$3F2    $18BE   JP       $8BE            ; Jump to 8BE
$3F4    $44AA   SNE      V4, #AA         ; Skip if V4 != 170
$3F6    $DBE5   DRW      VB, VE, #5      ; Draw 5-byte sprite at VB, VE
$3F8    $380A   SE       V8, #0A         ; Skip if V8 == 10
$3FA    $B446   JP       V0, $446        ; Jump to V0 + 446
$3FC    $C691   RND      V6, #91         ; V6 = random & 91
$3FE    $16F1   JP       $6F1            ; Jump to 6F1
$400    $6039   LD       V0, #39         ; Load 57 into V0
$402    $7014   ADD      V0, #14         ; Add 20 to V0
$404    $8644   ADD      V6, V4          ; V6 += V4, VF = carry
$406    $F8B9   UNKNOWN  F8B9            ; Unknown Fxxx instruction
$408    $C766   RND      V7, #66         ; V7 = random & 66
$40A    $FF48   UNKNOWN  FF48            ; Unknown Fxxx instruction
$40C    $95B6   UNKNOWN  $95B6           ; Unknown 9xxx instruction
$40E    $2F74   CALL     $F74            ; Call subroutine at F74
$410    $7A3A   ADD      VA, #3A         ; Add 58 to VA
$412    $779F   ADD      V7, #9F         ; Add 159 to V7
$414    $79F8   ADD      V9, #F8         ; Add 248 to V9
$416    $DA0F   DRW      VA, V0, #F      ; Draw 15-byte sprite at VA, V0
$418    $1D7D   JP       $D7D            ; Jump to D7D
$41A    $F6BF   UNKNOWN  F6BF            ; Unknown Fxxx instruction
$41C    $1166   JP       $166            ; Jump to 166
$41E    $424C   SNE      V2, #4C         ; Skip if V2 != 76
$420    $3E0C   SE       VE, #0C         ; Skip if VE == 12
$422    $26D7   CALL     $6D7            ; Call subroutine at 6D7
$424    $AF0E   LD       I, $F0E         ; Load F0E into I
$426    $81DF   UNKNOWN  81DF            ; Unknown 8xxx instruction
$428    $4C00   SNE      VC, #00         ; Skip if VC != 0
$42A    $67ED   LD       V7, #ED         ; Load 237 into V7
$42C    $70C7   ADD      V0, #C7         ; Add 199 to V0
$42E    $FEC0   UNKNOWN  FEC0            ; Unknown Fxxx instruction
$430    $F411   UNKNOWN  F411            ; Unknown Fxxx instruction
$432    $683E   LD       V8, #3E         ; Load 62 into V8
$434    $C015   RND      V0, #15         ; V0 = random & 15
$436    $5845   UNKNOWN  $5845           ; Unknown 5xxx instruction
$438    $E65D   UNKNOWN  $E65D           ; Unknown Exxx instruction
$43A    $9616   UNKNOWN  $9616           ; Unknown 9xxx instruction
$43C    $4C53   SNE      VC, #53         ; Skip if VC != 83
$43E    $3547   SE       V5, #47         ; Skip if V5 == 71
$440    $FC3F   UNKNOWN  FC3F            ; Unknown Fxxx instruction
$442    $2AED   CALL     $AED            ; Call subroutine at AED
$444    $5FF0   SE       VF, VF          ; Skip if VF == VF
$446    $61E1   LD       V1, #E1         ; Load 225 into V1
$448    $79A6   ADD      V9, #A6         ; Add 166 to V9
$44A    $AC46   LD       I, $C46         ; Load C46 into I
$44C    $A103   LD       I, $103         ; Load 103 into I
$44E    $819D   UNKNOWN  819D            ; Unknown 8xxx instruction
$450    $07A2   SYS      $7A2            ; System call to 7A2
$452    $8BAF   UNKNOWN  8BAF            ; Unknown 8xxx instruction
$454    $F6FB   UNKNOWN  F6FB            ; Unknown Fxxx instruction
$456    $6A33   LD       VA, #33         ; Load 51 into VA
$458    $DB21   DRW      VB, V2, #1      ; Draw 1-byte sprite at VB, V2
$45A    $3964   SE       V9, #64         ; Skip if V9 == 100
$45C    $4327   SNE      V3, #27         ; Skip if V3 != 39
$45E    $631E   LD       V3, #1E         ; Load 30 into V3
$460    $23F2   CALL     $3F2            ; Call subroutine at 3F2
$462    $D86E   DRW      V8, V6, #E      ; Draw 14-byte sprite at V8, V6
$464    $C63E   RND      V6, #3E         ; V6 = random & 3E
$466    $A8B7   LD       I, $8B7         ; Load 8B7 into I
$468    $3C63   SE       VC, #63         ; Skip if VC == 99
$46A    $FB44   UNKNOWN  FB44            ; Unknown Fxxx instruction
$46C    $FA26   UNKNOWN  FA26            ; Unknown Fxxx instruction
$46E    $455D   SNE      V5, #5D         ; Skip if V5 != 93
$470    $BDC2   JP       V0, $DC2        ; Jump to V0 + DC2
$472    $8F31   OR       VF, V3          ; VF |= V3
$474    $4C58   SNE      VC, #58         ; Skip if VC != 88
$476    $C528   RND      V5, #28         ; V5 = random & 28
$478    $F32C   UNKNOWN  F32C            ; Unknown Fxxx instruction
$47A    $1C0E   JP       $C0E            ; Jump to C0E
$47C    $BA8A   JP       V0, $A8A        ; Jump to V0 + A8A
$47E    $EDEA   UNKNOWN  $EDEA           ; Unknown Exxx instruction
$480    $4D96   SNE      VD, #96         ; Skip if VD != 150
$482    $C79A   RND      V7, #9A         ; V7 = random & 9A
$484    $DD22   DRW      VD, V2, #2      ; Draw 2-byte sprite at VD, V2
$486    $9451   UNKNOWN  $9451           ; Unknown 9xxx instruction
$488    $4B0E   SNE      VB, #0E         ; Skip if VB != 14
$48A    $C857   RND      V8, #57         ; V8 = random & 57
$48C    $A0AC   LD       I, $0AC         ; Load 0AC into I
$48E    $941E   UNKNOWN  $941E           ; Unknown 9xxx instruction
$490    $3578   SE       V5, #78         ; Skip if V5 == 120
$492    $B9B1   JP       V0, $9B1        ; Jump to V0 + 9B1
$494    $F62D   UNKNOWN  F62D            ; Unknown Fxxx instruction
$496    $EA42   UNKNOWN  $EA42           ; Unknown Exxx instruction
$498    $FB08   UNKNOWN  FB08            ; Unknown Fxxx instruction
$49A    $D0D3   DRW      V0, VD, #3      ; Draw 3-byte sprite at V0, VD
$49C    $9C95   UNKNOWN  $9C95           ; Unknown 9xxx instruction
$49E    $6855   LD       V8, #55         ; Load 85 into V8
$4A0    $1879   JP       $879            ; Jump to 879
$4A2    $464D   SNE      V6, #4D         ; Skip if V6 != 77
$4A4    $73E4   ADD      V3, #E4         ; Add 228 to V3
$4A6    $B0BF   JP       V0, $0BF        ; Jump to V0 + 0BF
$4A8    $8609   UNKNOWN  8609            ; Unknown 8xxx instruction
$4AA    $7DB4   ADD      VD, #B4         ; Add 180 to VD
$4AC    $F207   LD       V2, DT          ; V2 = delay timer
$4AE    $EE22   UNKNOWN  $EE22           ; Unknown Exxx instruction
$4B0    $7736   ADD      V7, #36         ; Add 54 to V7
$4B2    $C6FA   RND      V6, #FA         ; V6 = random & FA
$4B4    $353F   SE       V5, #3F         ; Skip if V5 == 63
$4B6    $C475   RND      V4, #75         ; V4 = random & 75
$4B8    $8175   SUB      V1, V7          ; V1 -= V7, VF = !borrow
$4BA    $C139   RND      V1, #39         ; V1 = random & 39
$4BC    $6EA3   LD       VE, #A3         ; Load 163 into VE
$4BE    $6727   LD       V7, #27         ; Load 39 into V7
$4C0    $2FC3   CALL     $FC3            ; Call subroutine at FC3
$4C2    $79D0   ADD      V9, #D0         ; Add 208 to V9
$4C4    $9DD5   UNKNOWN  $9DD5           ; Unknown 9xxx instruction
$4C6    $0468   SYS      $468            ; System call to 468
$4C8    $9CB4   UNKNOWN  $9CB4           ; Unknown 9xxx instruction
$4CA    $9ED2   UNKNOWN  $9ED2           ; Unknown 9xxx instruction
$4CC    $7EE2   ADD      VE, #E2         ; Add 226 to VE
$4CE    $3994   SE       V9, #94         ; Skip if V9 == 148
$4D0    $C236   RND      V2, #36         ; V2 = random & 36
$4D2    $0F74   SYS      $F74            ; System call to F74
$4D4    $6EE2   LD       VE, #E2         ; Load 226 into VE
$4D6    $3AD1   SE       VA, #D1         ; Skip if VA == 209
$4D8    $AC02   LD       I, $C02         ; Load C02 into I
$4DA    $1689   JP       $689            ; Jump to 689
$4DC    $FA89   UNKNOWN  FA89            ; Unknown Fxxx instruction
$4DE    $A35B   LD       I, $35B         ; Load 35B into I
$4E0    $1A94   JP       $A94            ; Jump to A94
$4E2    $DC4A   DRW      VC, V4, #A      ; Draw 10-byte sprite at VC, V4
$4E4    $DAD6   DRW      VA, VD, #6      ; Draw 6-byte sprite at VA, VD
$4E6    $4569   SNE      V5, #69         ; Skip if V5 != 105
$4E8    $9075   UNKNOWN  $9075           ; Unknown 9xxx instruction
$4EA    $5332   UNKNOWN  $5332           ; Unknown 5xxx instruction
$4EC    $2353   CALL     $353            ; Call subroutine at 353
$4EE    $1316   JP       $316            ; Jump to 316
$4F0    $1B4D   JP       $B4D            ; Jump to B4D
$4F2    $1C4C   JP       $C4C            ; Jump to C4C
$4F4    $A229   LD       I, $229         ; Load 229 into I
$4F6    $6581   LD       V5, #81         ; Load 129 into V5
$4F8    $754F   ADD      V5, #4F         ; Add 79 to V5
$4FA    $9449   UNKNOWN  $9449           ; Unknown 9xxx instruction
$4FC    $8D0E   SHL      VD              ; VD <<= 1, VF = MSB
$4FE    $A752   LD       I, $752         ; Load 752 into I
$500    $AE09   LD       I, $E09         ; Load E09 into I
$502    $553C   UNKNOWN  $553C           ; Unknown 5xxx instruction
$504    $1137   JP       $137            ; Jump to 137
$506    $8D9D   UNKNOWN  8D9D            ; Unknown 8xxx instruction
$508    $83BE   SHL      V3              ; V3 <<= 1, VF = MSB
$50A    $AB8E   LD       I, $B8E         ; Load B8E into I
$50C    $A504   LD       I, $504         ; Load 504 into I
$50E    $3285   SE       V2, #85         ; Skip if V2 == 133
$510    $6FEB   LD       VF, #EB         ; Load 235 into VF
$512    $274C   CALL     $74C            ; Call subroutine at 74C
$514    $8873   XOR      V8, V7          ; V8 ^= V7
$516    $8453   XOR      V4, V5          ; V4 ^= V5
$518    $AC34   LD       I, $C34         ; Load C34 into I
$51A    $8454   ADD      V4, V5          ; V4 += V5, VF = carry
$51C    $DC85   DRW      VC, V8, #5      ; Draw 5-byte sprite at VC, V8
$51E    $04C7   SYS      $4C7            ; System call to 4C7
$520    $CCA5   RND      VC, #A5         ; VC = random & A5
$522    $533E   UNKNOWN  $533E           ; Unknown 5xxx instruction
$524    $F06E   UNKNOWN  F06E            ; Unknown Fxxx instruction
$526    $81E0   LD       V1, VE          ; V1 = VE
$528    $C790   RND      V7, #90         ; V7 = random & 90
$52A    $7E7A   ADD      VE, #7A         ; Add 122 to VE
$52C    $1A1B   JP       $A1B            ; Jump to A1B
$52E    $C0F0   RND      V0, #F0         ; V0 = random & F0
$530    $CFAC   RND      VF, #AC         ; VF = random & AC
$532    $1547   JP       $547            ; Jump to 547
$534    $7938   ADD      V9, #38         ; Add 56 to V9
$536    $78D8   ADD      V8, #D8         ; Add 216 to V8
$538    $4E30   SNE      VE, #30         ; Skip if VE != 48
$53A    $F832   UNKNOWN  F832            ; Unknown Fxxx instruction
$53C    $B42B   JP       V0, $42B        ; Jump to V0 + 42B
$53E    $B385   JP       V0, $385        ; Jump to V0 + 385
$540    $CA72   RND      VA, #72         ; VA = random & 72
$542    $F1EF   UNKNOWN  F1EF            ; Unknown Fxxx instruction
$544    $434F   SNE      V3, #4F         ; Skip if V3 != 79
$546    $85E2   AND      V5, VE          ; V5 &= VE
$548    $74D2   ADD      V4, #D2         ; Add 210 to V4
$54A    $2B17   CALL     $B17            ; Call subroutine at B17
$54C    $AAB6   LD       I, $AB6         ; Load AB6 into I
$54E    $442D   SNE      V4, #2D         ; Skip if V4 != 45
$550    $379E   SE       V7, #9E         ; Skip if V7 == 158
$552    $68BE   LD       V8, #BE         ; Load 190 into V8
$554    $EC30   UNKNOWN  $EC30           ; Unknown Exxx instruction
$556    $B659   JP       V0, $659        ; Jump to V0 + 659
$558    $1F29   JP       $F29            ; Jump to F29
$55A    $D40B   DRW      V4, V0, #B      ; Draw 11-byte sprite at V4, V0
$55C    $7169   ADD      V1, #69         ; Add 105 to V1
$55E    $F85B   UNKNOWN  F85B            ; Unknown Fxxx instruction
$560    $5BC0   SE       VB, VC          ; Skip if VB == VC
$562    $2BAD   CALL     $BAD            ; Call subroutine at BAD
$564    $AC99   LD       I, $C99         ; Load C99 into I
$566    $E7FF   UNKNOWN  $E7FF           ; Unknown Exxx instruction
$568    $1438   JP       $438            ; Jump to 438
$56A    $C6A9   RND      V6, #A9         ; V6 = random & A9
$56C    $609D   LD       V0, #9D         ; Load 157 into V0
$56E    $9B3D   UNKNOWN  $9B3D           ; Unknown 9xxx instruction
$570    $5747   UNKNOWN  $5747           ; Unknown 5xxx instruction
$572    $1613   JP       $613            ; Jump to 613
$574    $76DF   ADD      V6, #DF         ; Add 223 to V6
$576    $46CE   SNE      V6, #CE         ; Skip if V6 != 206
$578    $9557   UNKNOWN  $9557           ; Unknown 9xxx instruction
$57A    $6C37   LD       VC, #37         ; Load 55 into VC
$57C    $3F90   SE       VF, #90         ; Skip if VF == 144
$57E    $9F40   SNE      VF, V4          ; Skip if VF != V4
$580    $CED8   RND      VE, #D8         ; VE = random & D8
$582    $6E5B   LD       VE, #5B         ; Load 91 into VE
$584    $DFB9   DRW      VF, VB, #9      ; Draw 9-byte sprite at VF, VB
$586    $DB8D   DRW      VB, V8, #D      ; Draw 13-byte sprite at VB, V8
$588    $ACD7   LD       I, $CD7         ; Load CD7 into I
$58A    $E1E2   UNKNOWN  $E1E2           ; Unknown Exxx instruction
$58C    $A254   LD       I, $254         ; Load 254 into I
$58E    $02BE   SYS      $2BE            ; System call to 2BE
$590    $9DB7   UNKNOWN  $9DB7           ; Unknown 9xxx instruction
$592    $E6FA   UNKNOWN  $E6FA           ; Unknown Exxx instruction
$594    $C289   RND      V2, #89         ; V2 = random & 89
$596    $8951   OR       V9, V5          ; V9 |= V5
$598    $51E1   UNKNOWN  $51E1           ; Unknown 5xxx instruction
$59A    $6174   LD       V1, #74         ; Load 116 into V1
$59C    $D7D8   DRW      V7, VD, #8      ; Draw 8-byte sprite at V7, VD
$59E    $9A3A   UNKNOWN  $9A3A           ; Unknown 9xxx instruction
$5A0    $34CF   SE       V4, #CF         ; Skip if V4 == 207
$5A2    $240D   CALL     $40D            ; Call subroutine at 40D
$5A4    $DBD4   DRW      VB, VD, #4      ; Draw 4-byte sprite at VB, VD
$5A6    $5D98   UNKNOWN  $5D98           ; Unknown 5xxx instruction
$5A8    $841E   SHL      V4              ; V4 <<= 1, VF = MSB
$5AA    $472E   SNE      V7, #2E         ; Skip if V7 != 46
$5AC    $A65C   LD       I, $65C         ; Load 65C into I
$5AE    $CBB9   RND      VB, #B9         ; VB = random & B9
$5B0    $ED77   UNKNOWN  $ED77           ; Unknown Exxx instruction
$5B2    $446D   SNE      V4, #6D         ; Skip if V4 != 109
$5B4    $D270   DRW      V2, V7, #0      ; Draw 0-byte sprite at V2, V7
$5B6    $D107   DRW      V1, V0, #7      ; Draw 7-byte sprite at V1, V0
$5B8    $0D60   SYS      $D60            ; System call to D60
$5BA    $6401   LD       V4, #01         ; Load 1 into V4
$5BC    $C9F6   RND      V9, #F6         ; V9 = random & F6
$5BE    $6E1B   LD       VE, #1B         ; Load 27 into VE
$5C0    $3DC4   SE       VD, #C4         ; Skip if VD == 196
$5C2    $85AD   UNKNOWN  85AD            ; Unknown 8xxx instruction
$5C4    $66F6   LD       V6, #F6         ; Load 246 into V6
$5C6    $BF9C   JP       V0, $F9C        ; Jump to V0 + F9C
$5C8    $B88A   JP       V0, $88A        ; Jump to V0 + 88A
$5CA    $335B   SE       V3, #5B         ; Skip if V3 == 91
$5CC    $F745   UNKNOWN  F745            ; Unknown Fxxx instruction
$5CE    $805E   SHL      V0              ; V0 <<= 1, VF = MSB
$5D0    $7D9D   ADD      VD, #9D         ; Add 157 to VD
$5D2    $7A51   ADD      VA, #51         ; Add 81 to VA
$5D4    $63A6   LD       V3, #A6         ; Load 166 into V3
$5D6    $E947   UNKNOWN  $E947           ; Unknown Exxx instruction
$5D8    $147E   JP       $47E            ; Jump to 47E
$5DA    $F8EC   UNKNOWN  F8EC            ; Unknown Fxxx instruction
$5DC    $D05B   DRW      V0, V5, #B      ; Draw 11-byte sprite at V0, V5
$5DE    $495A   SNE      V9, #5A         ; Skip if V9 != 90
$5E0    $39BB   SE       V9, #BB         ; Skip if V9 == 187
$5E2    $24A4   CALL     $4A4            ; Call subroutine at 4A4
$5E4    $DC6F   DRW      VC, V6, #F      ; Draw 15-byte sprite at VC, V6
$5E6    $46D8   SNE      V6, #D8         ; Skip if V6 != 216
$5E8    $FB74   UNKNOWN  FB74            ; Unknown Fxxx instruction
$5EA    $48F4   SNE      V8, #F4         ; Skip if V8 != 244
$5EC    $0A09   SYS      $A09            ; System call to A09
$5EE    $A2A5   LD       I, $2A5         ; Load 2A5 into I
$5F0    $1946   JP       $946            ; Jump to 946
$5F2    $E7EA   UNKNOWN  $E7EA           ; Unknown Exxx instruction
$5F4    $FB37   UNKNOWN  FB37            ; Unknown Fxxx instruction
$5F6    $BCD0   JP       V0, $CD0        ; Jump to V0 + CD0
$5F8    $1CF3   JP       $CF3            ; Jump to CF3
$5FA    $F96A   UNKNOWN  F96A            ; Unknown Fxxx instruction
$5FC    $665C   LD       V6, #5C         ; Load 92 into V6
$5FE    $CC4A   RND      VC, #4A         ; VC = random & 4A
$600    $A7F1   LD       I, $7F1         ; Load 7F1 into I
$602    $4221   SNE      V2, #21         ; Skip if V2 != 33
$604    $00AA   SYS      $0AA            ; System call to 0AA
$606    $5F88   UNKNOWN  $5F88           ; Unknown 5xxx instruction
$608    $997B   UNKNOWN  $997B           ; Unknown 9xxx instruction
$60A    $C670   RND      V6, #70         ; V6 = random & 70
$60C    $BE09   JP       V0, $E09        ; Jump to V0 + E09
$60E    $7AC7   ADD      VA, #C7         ; Add 199 to VA
$610    $CA9B   RND      VA, #9B         ; VA = random & 9B
$612    $86A7   SUBN     V6, VA          ; V6 = VA - V6, VF = !borrow
$614    $6E6A   LD       VE, #6A         ; Load 106 into VE
$616    $672A   LD       V7, #2A         ; Load 42 into V7
$618    $2D46   CALL     $D46            ; Call subroutine at D46
$61A    $AB83   LD       I, $B83         ; Load B83 into I
$61C    $B19B   JP       V0, $19B        ; Jump to V0 + 19B
$61E    $804F   UNKNOWN  804F            ; Unknown 8xxx instruction
$620    $F010   UNKNOWN  F010            ; Unknown Fxxx instruction
$622    $4D1A   SNE      VD, #1A         ; Skip if VD != 26
$624    $0995   SYS      $995            ; System call to 995
$626    $63DF   LD       V3, #DF         ; Load 223 into V3
$628    $12E8   JP       $2E8            ; Jump to 2E8
$62A    $97C6   UNKNOWN  $97C6           ; Unknown 9xxx instruction
$62C    $AD70   LD       I, $D70         ; Load D70 into I
$62E    $76EA   ADD      V6, #EA         ; Add 234 to V6
$630    $2799   CALL     $799            ; Call subroutine at 799
$632    $41C0   SNE      V1, #C0         ; Skip if V1 != 192
$634    $C4D6   RND      V4, #D6         ; V4 = random & D6
$636    $6902   LD       V9, #02         ; Load 2 into V9
$638    $B4EB   JP       V0, $4EB        ; Jump to V0 + 4EB
$63A    $6380   LD       V3, #80         ; Load 128 into V3
$63C    $B6F0   JP       V0, $6F0        ; Jump to V0 + 6F0
$63E    $F3D5   UNKNOWN  F3D5            ; Unknown Fxxx instruction
$640    $BC37   JP       V0, $C37        ; Jump to V0 + C37
$642    $4B49   SNE      VB, #49         ; Skip if VB != 73
$644    $D3D4   DRW      V3, VD, #4      ; Draw 4-byte sprite at V3, VD
$646    $2DCF   CALL     $DCF            ; Call subroutine at DCF
$648    $ECEE   UNKNOWN  $ECEE           ; Unknown Exxx instruction
$64A    $F1DF   UNKNOWN  F1DF            ; Unknown Fxxx instruction
$64C    $5B0D   UNKNOWN  $5B0D           ; Unknown 5xxx instruction
$64E    $C11C   RND      V1, #1C         ; V1 = random & 1C
$650    $8D9F   UNKNOWN  8D9F            ; Unknown 8xxx instruction
$652    $C579   RND      V5, #79         ; V5 = random & 79
$654    $1B3C   JP       $B3C            ; Jump to B3C
$656    $13D4   JP       $3D4            ; Jump to 3D4
$658    $B6B8   JP       V0, $6B8        ; Jump to V0 + 6B8
$65A    $D65D   DRW      V6, V5, #D      ; Draw 13-byte sprite at V6, V5
$65C    $F66C   UNKNOWN  F66C            ; Unknown Fxxx instruction
$65E    $A985   LD       I, $985         ; Load 985 into I
$660    $E72A   UNKNOWN  $E72A           ; Unknown Exxx instruction
$662    $6B71   LD       VB, #71         ; Load 113 into VB
$664    $625A   LD       V2, #5A         ; Load 90 into V2
$666    $6646   LD       V6, #46         ; Load 70 into V6
$668    $12DA   JP       $2DA            ; Jump to 2DA
$66A    $A564   LD       I, $564         ; Load 564 into I
$66C    $A15D   LD       I, $15D         ; Load 15D into I
$66E    $B17E   JP       V0, $17E        ; Jump to V0 + 17E
$670    $09C6   SYS      $9C6            ; System call to 9C6
$672    $5EBB   UNKNOWN  $5EBB           ; Unknown 5xxx instruction
$674    $CD6D   RND      VD, #6D         ; VD = random & 6D
$676    $43A7   SNE      V3, #A7         ; Skip if V3 != 167
$678    $651C   LD       V5, #1C         ; Load 28 into V5
$67A    $AB36   LD       I, $B36         ; Load B36 into I
$67C    $167F   JP       $67F            ; Jump to 67F
$67E    $72CA   ADD      V2, #CA         ; Add 202 to V2
$680    $F73C   UNKNOWN  F73C            ; Unknown Fxxx instruction
$682    $458D   SNE      V5, #8D         ; Skip if V5 != 141
$684    $88FB   UNKNOWN  88FB            ; Unknown 8xxx instruction
$686    $2CF7   CALL     $CF7            ; Call subroutine at CF7
$688    $D4A7   DRW      V4, VA, #7      ; Draw 7-byte sprite at V4, VA
$68A    $DF93   DRW      VF, V9, #3      ; Draw 3-byte sprite at VF, V9
$68C    $9A21   UNKNOWN  $9A21           ; Unknown 9xxx instruction
$68E    $898A   UNKNOWN  898A            ; Unknown 8xxx instruction
$690    $1DE1   JP       $DE1            ; Jump to DE1
$692    $3EFF   SE       VE, #FF         ; Skip if VE == 255
$694    $D2C4   DRW      V2, VC, #4      ; Draw 4-byte sprite at V2, VC
$696    $2386   CALL     $386            ; Call subroutine at 386
$698    $A6E7   LD       I, $6E7         ; Load 6E7 into I
$69A    $4974   SNE      V9, #74         ; Skip if V9 != 116
$69C    $5A77   UNKNOWN  $5A77           ; Unknown 5xxx instruction
$69E    $9DBC   UNKNOWN  $9DBC           ; Unknown 9xxx instruction
$6A0    $56C3   UNKNOWN  $56C3           ; Unknown 5xxx instruction
$6A2    $623D   LD       V2, #3D         ; Load 61 into V2
$6A4    $E9A8   UNKNOWN  $E9A8           ; Unknown Exxx instruction
$6A6    $9155   UNKNOWN  $9155           ; Unknown 9xxx instruction
$6A8    $76AD   ADD      V6, #AD         ; Add 173 to V6
$6AA    $8E73   XOR      VE, V7          ; VE ^= V7
$6AC    $F0C5   UNKNOWN  F0C5            ; Unknown Fxxx instruction
$6AE    $0EC8   SYS      $EC8            ; System call to EC8
$6B0    $5724   UNKNOWN  $5724           ; Unknown 5xxx instruction
$6B2    $2AA3   CALL     $AA3            ; Call subroutine at AA3
$6B4    $8FE7   SUBN     VF, VE          ; VF = VE - VF, VF = !borrow
$6B6    $D43B   DRW      V4, V3, #B      ; Draw 11-byte sprite at V4, V3
$6B8    $E5EF   UNKNOWN  $E5EF           ; Unknown Exxx instruction
$6BA    $7D19   ADD      VD, #19         ; Add 25 to VD
$6BC    $20F4   CALL     $0F4            ; Call subroutine at 0F4
$6BE    $B284   JP       V0, $284        ; Jump to V0 + 284
$6C0    $233B   CALL     $33B            ; Call subroutine at 33B
$6C2    $1CB4   JP       $CB4            ; Jump to CB4
$6C4    $7444   ADD      V4, #44         ; Add 68 to V4
$6C6    $F5CB   UNKNOWN  F5CB            ; Unknown Fxxx instruction
$6C8    $EFF9   UNKNOWN  $EFF9           ; Unknown Exxx instruction
$6CA    $B648   JP       V0, $648        ; Jump to V0 + 648
$6CC    $6D0D   LD       VD, #0D         ; Load 13 into VD
$6CE    $2EE9   CALL     $EE9            ; Call subroutine at EE9
$6D0    $FB18   LD       ST, VB          ; Sound timer = VB
$6D2    $252A   CALL     $52A            ; Call subroutine at 52A
$6D4    $D305   DRW      V3, V0, #5      ; Draw 5-byte sprite at V3, V0
$6D6    $10E3   JP       $0E3            ; Jump to 0E3
$6D8    $1467   JP       $467            ; Jump to 467
$6DA    $6E9B   LD       VE, #9B         ; Load 155 into VE
$6DC    $1553   JP       $553            ; Jump to 553
$6DE    $B229   JP       V0, $229        ; Jump to V0 + 229
$6E0    $F1E0   UNKNOWN  F1E0            ; Unknown Fxxx instruction
$6E2    $2FA9   CALL     $FA9            ; Call subroutine at FA9
$6E4    $6393   LD       V3, #93         ; Load 147 into V3
$6E6    $AA59   LD       I, $A59         ; Load A59 into I
$6E8    $4AE7   SNE      VA, #E7         ; Skip if VA != 231
$6EA    $754B   ADD      V5, #4B         ; Add 75 to V5
$6EC    $16EC   JP       $6EC            ; Jump to 6EC
$6EE    $FE51   UNKNOWN  FE51            ; Unknown Fxxx instruction
$6F0    $9F38   UNKNOWN  $9F38           ; Unknown 9xxx instruction
$6F2    $4C0F   SNE      VC, #0F         ; Skip if VC != 15
$6F4    $81B2   AND      V1, VB          ; V1 &= VB
$6F6    $F0C3   UNKNOWN  F0C3            ; Unknown Fxxx instruction
$6F8    $0189   SYS      $189            ; System call to 189
$6FA    $6181   LD       V1, #81         ; Load 129 into V1
$6FC    $D51A   DRW      V5, V1, #A      ; Draw 10-byte sprite at V5, V1
$6FE    $06BE   SYS      $6BE            ; System call to 6BE
$700    $85C4   ADD      V5, VC          ; V5 += VC, VF = carry
$702    $A6DB   LD       I, $6DB         ; Load 6DB into I
$704    $DE3C   DRW      VE, V3, #C      ; Draw 12-byte sprite at VE, V3
$706    $0627   SYS      $627            ; System call to 627
$708    $779C   ADD      V7, #9C         ; Add 156 to V7
$70A    $B8C0   JP       V0, $8C0        ; Jump to V0 + 8C0
$70C    $AB42   LD       I, $B42         ; Load B42 into I
$70E    $25DF   CALL     $5DF            ; Call subroutine at 5DF
$710    $BF4B   JP       V0, $F4B        ; Jump to V0 + F4B
$712    $2A53   CALL     $A53            ; Call subroutine at A53
$714    $D77C   DRW      V7, V7, #C      ; Draw 12-byte sprite at V7, V7
$716    $ED57   UNKNOWN  $ED57           ; Unknown Exxx instruction
$718    $AB40   LD       I, $B40         ; Load B40 into I
$71A    $7381   ADD      V3, #81         ; Add 129 to V3
$71C    $B584   JP       V0, $584        ; Jump to V0 + 584
$71E    $B8AB   JP       V0, $8AB        ; Jump to V0 + 8AB
$720    $DDF0   DRW      VD, VF, #0      ; Draw 0-byte sprite at VD, VF
$722    $3825   SE       V8, #25         ; Skip if V8 == 37
$724    $5FF1   UNKNOWN  $5FF1           ; Unknown 5xxx instruction
$726    $A910   LD       I, $910         ; Load 910 into I
$728    $4770   SNE      V7, #70         ; Skip if V7 != 112
$72A    $90CF   UNKNOWN  $90CF           ; Unknown 9xxx instruction
$72C    $5262   UNKNOWN  $5262           ; Unknown 5xxx instruction
$72E    $A158   LD       I, $158         ; Load 158 into I
$730    $FE43   UNKNOWN  FE43            ; Unknown Fxxx instruction
$732    $F9BE   UNKNOWN  F9BE            ; Unknown Fxxx instruction
$734    $96F3   UNKNOWN  $96F3           ; Unknown 9xxx instruction
$736    $A4F4   LD       I, $4F4         ; Load 4F4 into I
$738    $4CF5   SNE      VC, #F5         ; Skip if VC != 245
$73A    $B226   JP       V0, $226        ; Jump to V0 + 226
$73C    $6D9B   LD       VD, #9B         ; Load 155 into VD
$73E    $512A   UNKNOWN  $512A           ; Unknown 5xxx instruction
$740    $4360   SNE      V3, #60         ; Skip if V3 != 96
$742    $83C4   ADD      V3, VC          ; V3 += VC, VF = carry
$744    $DB5C   DRW      VB, V5, #C      ; Draw 12-byte sprite at VB, V5
$746    $35FC   SE       V5, #FC         ; Skip if V5 == 252
$748    $1AEF   JP       $AEF            ; Jump to AEF
$74A    $A609   LD       I, $609         ; Load 609 into I
$74C    $90AA   UNKNOWN  $90AA           ; Unknown 9xxx instruction
$74E    $EAD1   UNKNOWN  $EAD1           ; Unknown Exxx instruction
$750    $CCC8   RND      VC, #C8         ; VC = random & C8
$752    $1FD1   JP       $FD1            ; Jump to FD1
$754    $1FF0   JP       $FF0            ; Jump to FF0
$756    $46E7   SNE      V6, #E7         ; Skip if V6 != 231
$758    $5575   UNKNOWN  $5575           ; Unknown 5xxx instruction
$75A    $BCE1   JP       V0, $CE1        ; Jump to V0 + CE1
$75C    $75A6   ADD      V5, #A6         ; Add 166 to V5
$75E    $0344   SYS      $344            ; System call to 344
$760    $7B6A   ADD      VB, #6A         ; Add 106 to VB
$762    $A6AB   LD       I, $6AB         ; Load 6AB into I
$764    $40E2   SNE      V0, #E2         ; Skip if V0 != 226
$766    $33D7   SE       V3, #D7         ; Skip if V3 == 215
$768    $DD76   DRW      VD, V7, #6      ; Draw 6-byte sprite at VD, V7
$76A    $5A63   UNKNOWN  $5A63           ; Unknown 5xxx instruction
$76C    $7201   ADD      V2, #01         ; Add 1 to V2
$76E    $DF9C   DRW      VF, V9, #C      ; Draw 12-byte sprite at VF, V9
$770    $9A40   SNE      VA, V4          ; Skip if VA != V4
$772    $8281   OR       V2, V8          ; V2 |= V8
$774    $4FCE   SNE      VF, #CE         ; Skip if VF != 206
$776    $0E75   SYS      $E75            ; System call to E75
$778    $0799   SYS      $799            ; System call to 799
$77A    $8693   XOR      V6, V9          ; V6 ^= V9
$77C    $525C   UNKNOWN  $525C           ; Unknown 5xxx instruction
$77E    $B8A0   JP       V0, $8A0        ; Jump to V0 + 8A0
$780    $DC37   DRW      VC, V3, #7      ; Draw 7-byte sprite at VC, V3
$782    $D5C8   DRW      V5, VC, #8      ; Draw 8-byte sprite at V5, VC
$784    $D1C5   DRW      V1, VC, #5      ; Draw 5-byte sprite at V1, VC
$786    $5B79   UNKNOWN  $5B79           ; Unknown 5xxx instruction
$788    $412C   SNE      V1, #2C         ; Skip if V1 != 44
$78A    $F055   LD       [I], V0         ; Store V0-V0 at I
$78C    $64E0   LD       V4, #E0         ; Load 224 into V4
$78E    $F38F   UNKNOWN  F38F            ; Unknown Fxxx instruction
$790    $F530   UNKNOWN  F530            ; Unknown Fxxx instruction
$792    $178A   JP       $78A            ; Jump to 78A
$794    $54D5   UNKNOWN  $54D5           ; Unknown 5xxx instruction
$796    $04C8   SYS      $4C8            ; System call to 4C8
$798    $39DF   SE       V9, #DF         ; Skip if V9 == 223
$79A    $47F7   SNE      V7, #F7         ; Skip if V7 != 247
$79C    $3DC3   SE       VD, #C3         ; Skip if VD == 195
$79E    $CB45   RND      VB, #45         ; VB = random & 45
$7A0    $18F5   JP       $8F5            ; Jump to 8F5
$7A2    $ACB5   LD       I, $CB5         ; Load CB5 into I
$7A4    $74DF   ADD      V4, #DF         ; Add 223 to V4
$7A6    $7087   ADD      V0, #87         ; Add 135 to V0
$7A8    $CA72   RND      VA, #72         ; VA = random & 72
$7AA    $4D23   SNE      VD, #23         ; Skip if VD != 35
$7AC    $6D3C   LD       VD, #3C         ; Load 60 into VD
$7AE    $4C17   SNE      VC, #17         ; Skip if VC != 23
$7B0    $B0B0   JP       V0, $0B0        ; Jump to V0 + 0B0
$7B2    $C185   RND      V1, #85         ; V1 = random & 85
$7B4    $3985   SE       V9, #85         ; Skip if V9 == 133
$7B6    $FE5A   UNKNOWN  FE5A            ; Unknown Fxxx instruction
$7B8    $D459   DRW      V4, V5, #9      ; Draw 9-byte sprite at V4, V5
$7BA    $DC0B   DRW      VC, V0, #B      ; Draw 11-byte sprite at VC, V0
$7BC    $EF36   UNKNOWN  $EF36           ; Unknown Exxx instruction
$7BE    $A334   LD       I, $334         ; Load 334 into I
$7C0    $F0F4   UNKNOWN  F0F4            ; Unknown Fxxx instruction
$7C2    $F609   UNKNOWN  F609            ; Unknown Fxxx instruction
$7C4    $19B1   JP       $9B1            ; Jump to 9B1
$7C6    $B9EA   JP       V0, $9EA        ; Jump to V0 + 9EA
$7C8    $6CDF   LD       VC, #DF         ; Load 223 into VC
$7CA    $10A9   JP       $0A9            ; Jump to 0A9
$7CC    $2936   CALL     $936            ; Call subroutine at 936
$7CE    $F85E   UNKNOWN  F85E            ; Unknown Fxxx instruction
$7D0    $5A2D   UNKNOWN  $5A2D           ; Unknown 5xxx instruction
$7D2    $0421   SYS      $421            ; System call to 421
$7D4    $43A1   SNE      V3, #A1         ; Skip if V3 != 161
$7D6    $D514   DRW      V5, V1, #4      ; Draw 4-byte sprite at V5, V1
$7D8    $19A5   JP       $9A5            ; Jump to 9A5
$7DA    $3B94   SE       VB, #94         ; Skip if VB == 148
$7DC    $0101   SYS      $101            ; System call to 101
$7DE    $334E   SE       V3, #4E         ; Skip if V3 == 78
$7E0    $8161   OR       V1, V6          ; V1 |= V6
$7E2    $773F   ADD      V7, #3F         ; Add 63 to V7
$7E4    $3B51   SE       VB, #51         ; Skip if VB == 81
$7E6    $0C90   SYS      $C90            ; System call to C90
$7E8    $84D3   XOR      V4, VD          ; V4 ^= VD
$7EA    $4627   SNE      V6, #27         ; Skip if V6 != 39
$7EC    $7E4E   ADD      VE, #4E         ; Add 78 to VE
$7EE    $EAB8   UNKNOWN  $EAB8           ; Unknown Exxx instruction
$7F0    $C738   RND      V7, #38         ; V7 = random & 38
$7F2    $9A73   UNKNOWN  $9A73           ; Unknown 9xxx instruction
$7F4    $815D   UNKNOWN  815D            ; Unknown 8xxx instruction
$7F6    $0511   SYS      $511            ; System call to 511
$7F8    $5B50   SE       VB, V5          ; Skip if VB == V5
$7FA    $7CB5   ADD      VC, #B5         ; Add 181 to VC
$7FC    $2459   CALL     $459            ; Call subroutine at 459
$7FE    $B33E   JP       V0, $33E        ; Jump to V0 + 33E
$800    $F62B   UNKNOWN  F62B            ; Unknown Fxxx instruction
$802    $87DB   UNKNOWN  87DB            ; Unknown 8xxx instruction
$804    $112B   JP       $12B            ; Jump to 12B
$806    $1A71   JP       $A71            ; Jump to A71
$808    $69A9   LD       V9, #A9         ; Load 169 into V9
$80A    $04BC   SYS      $4BC            ; System call to 4BC
$80C    $F02A   UNKNOWN  F02A            ; Unknown Fxxx instruction
$80E    $9399   UNKNOWN  $9399           ; Unknown 9xxx instruction
$810    $C665   RND      V6, #65         ; V6 = random & 65
$812    $F629   LD       F, V6           ; I = sprite address for digit V6
$814    $CF32   RND      VF, #32         ; VF = random & 32
$816    $6289   LD       V2, #89         ; Load 137 into V2
$818    $5AFE   UNKNOWN  $5AFE           ; Unknown 5xxx instruction
$81A    $35F1   SE       V5, #F1         ; Skip if V5 == 241
$81C    $B6BF   JP       V0, $6BF        ; Jump to V0 + 6BF
$81E    $7215   ADD      V2, #15         ; Add 21 to V2
$820    $BB3C   JP       V0, $B3C        ; Jump to V0 + B3C
$822    $470C   SNE      V7, #0C         ; Skip if V7 != 12
$824    $E483   UNKNOWN  $E483           ; Unknown Exxx instruction
$826    $F0D4   UNKNOWN  F0D4            ; Unknown Fxxx instruction
$828    $3072   SE       V0, #72         ; Skip if V0 == 114
$82A    $2E10   CALL     $E10            ; Call subroutine at E10
$82C    $7224   ADD      V2, #24         ; Add 36 to V2
$82E    $97BB   UNKNOWN  $97BB           ; Unknown 9xxx instruction
$830    $741A   ADD      V4, #1A         ; Add 26 to V4
$832    $D54A   DRW      V5, V4, #A      ; Draw 10-byte sprite at V5, V4
$834    $FBDD   UNKNOWN  FBDD            ; Unknown Fxxx instruction
$836    $1DFA   JP       $DFA            ; Jump to DFA
$838    $7EDB   ADD      VE, #DB         ; Add 219 to VE
$83A    $529A   UNKNOWN  $529A           ; Unknown 5xxx instruction
$83C    $2659   CALL     $659            ; Call subroutine at 659
$83E    $AB09   LD       I, $B09         ; Load B09 into I
$840    $4826   SNE      V8, #26         ; Skip if V8 != 38
$842    $F45C   UNKNOWN  F45C            ; Unknown Fxxx instruction
$844    $0729   SYS      $729            ; System call to 729
$846    $C8A5   RND      V8, #A5         ; V8 = random & A5
$848    $F2C7   UNKNOWN  F2C7            ; Unknown Fxxx instruction
$84A    $F413   UNKNOWN  F413            ; Unknown Fxxx instruction
$84C    $4A94   SNE      VA, #94         ; Skip if VA != 148
$84E    $1E78   JP       $E78            ; Jump to E78
$850    $0FDF   SYS      $FDF            ; System call to FDF
$852    $598D   UNKNOWN  $598D           ; Unknown 5xxx instruction
$854    $8BE0   LD       VB, VE          ; VB = VE
$856    $3227   SE       V2, #27         ; Skip if V2 == 39
$858    $617F   LD       V1, #7F         ; Load 127 into V1
$85A    $940F   UNKNOWN  $940F           ; Unknown 9xxx instruction
$85C    $CB19   RND      VB, #19         ; VB = random & 19
$85E    $39FF   SE       V9, #FF         ; Skip if V9 == 255
$860    $A6FF   LD       I, $6FF         ; Load 6FF into I
$862    $8BFC   UNKNOWN  8BFC            ; Unknown 8xxx instruction
$864    $3C99   SE       VC, #99         ; Skip if VC == 153
$866    $FDC0   UNKNOWN  FDC0            ; Unknown Fxxx instruction
$868    $A8C7   LD       I, $8C7         ; Load 8C7 into I
$86A    $4113   SNE      V1, #13         ; Skip if V1 != 19
$86C    $61F8   LD       V1, #F8         ; Load 248 into V1
$86E    $5562   UNKNOWN  $5562           ; Unknown 5xxx instruction
$870    $A138   LD       I, $138         ; Load 138 into I
$872    $0375   SYS      $375            ; System call to 375
$874    $9F2C   UNKNOWN  $9F2C           ; Unknown 9xxx instruction
$876    $92B7   UNKNOWN  $92B7           ; Unknown 9xxx instruction
$878    $34C5   SE       V4, #C5         ; Skip if V4 == 197
$87A    $BC6C   JP       V0, $C6C        ; Jump to V0 + C6C
$87C    $38F3   SE       V8, #F3         ; Skip if V8 == 243
$87E    $F377   UNKNOWN  F377            ; Unknown Fxxx instruction
$880    $35B9   SE       V5, #B9         ; Skip if V5 == 185
$882    $7926   ADD      V9, #26         ; Add 38 to V9
$884    $628B   LD       V2, #8B         ; Load 139 into V2
$886    $311D   SE       V1, #1D         ; Skip if V1 == 29
$888    $9509   UNKNOWN  $9509           ; Unknown 9xxx instruction
$88A    $6F08   LD       VF, #08         ; Load 8 into VF
$88C    $C755   RND      V7, #55         ; V7 = random & 55
$88E    $11DB   JP       $1DB            ; Jump to 1DB
$890    $CEF0   RND      VE, #F0         ; VE = random & F0
$892    $4707   SNE      V7, #07         ; Skip if V7 != 7
$894    $8E8D   UNKNOWN  8E8D            ; Unknown 8xxx instruction
$896    $FE90   UNKNOWN  FE90            ; Unknown Fxxx instruction
$898    $CF0A   RND      VF, #0A         ; VF = random & 0A
$89A    $3A26   SE       VA, #26         ; Skip if VA == 38
$89C    $43B6   SNE      V3, #B6         ; Skip if V3 != 182
$89E    $90EE   UNKNOWN  $90EE           ; Unknown 9xxx instruction
$8A0    $65A0   LD       V5, #A0         ; Load 160 into V5
$8A2    $3A61   SE       VA, #61         ; Skip if VA == 97
$8A4    $5022   UNKNOWN  $5022           ; Unknown 5xxx instruction
$8A6    $DC6E   DRW      VC, V6, #E      ; Draw 14-byte sprite at VC, V6
$8A8    $F795   UNKNOWN  F795            ; Unknown Fxxx instruction
$8AA    $ED00   UNKNOWN  $ED00           ; Unknown Exxx instruction
$8AC    $881E   SHL      V8              ; V8 <<= 1, VF = MSB
$8AE    $342F   SE       V4, #2F         ; Skip if V4 == 47
$8B0    $221D   CALL     $21D            ; Call subroutine at 21D
$8B2    $8E0D   UNKNOWN  8E0D            ; Unknown 8xxx instruction
$8B4    $48B5   SNE      V8, #B5         ; Skip if V8 != 181
$8B6    $D65B   DRW      V6, V5, #B      ; Draw 11-byte sprite at V6, V5
$8B8    $547B   UNKNOWN  $547B           ; Unknown 5xxx instruction
$8BA    $DC7A   DRW      VC, V7, #A      ; Draw 10-byte sprite at VC, V7
$8BC    $25EA   CALL     $5EA            ; Call subroutine at 5EA
$8BE    $F060   UNKNOWN  F060            ; Unknown Fxxx instruction
$8C0    $FE09   UNKNOWN  FE09            ; Unknown Fxxx instruction
$8C2    $5D79   UNKNOWN  $5D79           ; Unknown 5xxx instruction
$8C4    $D975   DRW      V9, V7, #5      ; Draw 5-byte sprite at V9, V7
$8C6    $13A4   JP       $3A4            ; Jump to 3A4
$8C8    $645A   LD       V4, #5A         ; Load 90 into V4
$8CA    $EE2C   UNKNOWN  $EE2C           ; Unknown Exxx instruction
$8CC    $2FCE   CALL     $FCE            ; Call subroutine at FCE
$8CE    $AEC6   LD       I, $EC6         ; Load EC6 into I
$8D0    $8C81   OR       VC, V8          ; VC |= V8
$8D2    $4766   SNE      V7, #66         ; Skip if V7 != 102
$8D4    $C360   RND      V3, #60         ; V3 = random & 60
$8D6    $192A   JP       $92A            ; Jump to 92A
$8D8    $98B2   UNKNOWN  $98B2           ; Unknown 9xxx instruction
$8DA    $A79F   LD       I, $79F         ; Load 79F into I
$8DC    $080C   SYS      $80C            ; System call to 80C
$8DE    $1FB3   JP       $FB3            ; Jump to FB3
$8E0    $2785   CALL     $785            ; Call subroutine at 785
$8E2    $A3B8   LD       I, $3B8         ; Load 3B8 into I
$8E4    $158F   JP       $58F            ; Jump to 58F
$8E6    $B546   JP       V0, $546        ; Jump to V0 + 546
$8E8    $BEF5   JP       V0, $EF5        ; Jump to V0 + EF5
$8EA    $277B   CALL     $77B            ; Call subroutine at 77B
$8EC    $638F   LD       V3, #8F         ; Load 143 into V3
$8EE    $C272   RND      V2, #72         ; V2 = random & 72
$8F0    $35FC   SE       V5, #FC         ; Skip if V5 == 252
$8F2    $81E8   UNKNOWN  81E8            ; Unknown 8xxx instruction
$8F4    $0B49   SYS      $B49            ; System call to B49
$8F6    $CA91   RND      VA, #91         ; VA = random & 91
$8F8    $BE12   JP       V0, $E12        ; Jump to V0 + E12
$8FA    $D8E2   DRW      V8, VE, #2      ; Draw 2-byte sprite at V8, VE
$8FC    $A929   LD       I, $929         ; Load 929 into I
$8FE    $6CB8   LD       VC, #B8         ; Load 184 into VC
$900    $6D05   LD       VD, #05         ; Load 5 into VD
$902    $ACEC   LD       I, $CEC         ; Load CEC into I
$904    $31CB   SE       V1, #CB         ; Skip if V1 == 203
$906    $8C89   UNKNOWN  8C89            ; Unknown 8xxx instruction
$908    $58B2   UNKNOWN  $58B2           ; Unknown 5xxx instruction
$90A    $6181   LD       V1, #81         ; Load 129 into V1
$90C    $FC42   UNKNOWN  FC42            ; Unknown Fxxx instruction
$90E    $CB3B   RND      VB, #3B         ; VB = random & 3B
$910    $F027   UNKNOWN  F027            ; Unknown Fxxx instruction
$912    $7E91   ADD      VE, #91         ; Add 145 to VE
$914    $41EB   SNE      V1, #EB         ; Skip if V1 != 235
$916    $AD77   LD       I, $D77         ; Load D77 into I
$918    $24DA   CALL     $4DA            ; Call subroutine at 4DA
$91A    $E716   UNKNOWN  $E716           ; Unknown Exxx instruction
$91C    $24CF   CALL     $4CF            ; Call subroutine at 4CF
$91E    $EDE2   UNKNOWN  $EDE2           ; Unknown Exxx instruction
$920    $B1D1   JP       V0, $1D1        ; Jump to V0 + 1D1
$922    $C26E   RND      V2, #6E         ; V2 = random & 6E
$924    $D9D1   DRW      V9, VD, #1      ; Draw 1-byte sprite at V9, VD
$926    $FA27   UNKNOWN  FA27            ; Unknown Fxxx instruction
$928    $DB2C   DRW      VB, V2, #C      ; Draw 12-byte sprite at VB, V2
$92A    $7173   ADD      V1, #73         ; Add 115 to V1
$92C    $83CE   SHL      V3              ; V3 <<= 1, VF = MSB
$92E    $E105   UNKNOWN  $E105           ; Unknown Exxx instruction
$930    $97D4   UNKNOWN  $97D4           ; Unknown 9xxx instruction
$932    $C4D9   RND      V4, #D9         ; V4 = random & D9
$934    $1660   JP       $660            ; Jump to 660
$936    $4100   SNE      V1, #00         ; Skip if V1 != 0
$938    $D2A9   DRW      V2, VA, #9      ; Draw 9-byte sprite at V2, VA
$93A    $2D05   CALL     $D05            ; Call subroutine at D05
$93C    $DB8A   DRW      VB, V8, #A      ; Draw 10-byte sprite at VB, V8
$93E    $CA98   RND      VA, #98         ; VA = random & 98
$940    $503B   UNKNOWN  $503B           ; Unknown 5xxx instruction
$942    $ECA6   UNKNOWN  $ECA6           ; Unknown Exxx instruction
$944    $AB6D   LD       I, $B6D         ; Load B6D into I
$946    $6347   LD       V3, #47         ; Load 71 into V3
$948    $5922   UNKNOWN  $5922           ; Unknown 5xxx instruction
$94A    $71FF   ADD      V1, #FF         ; Add 255 to V1
$94C    $AA8C   LD       I, $A8C         ; Load A8C into I
$94E    $9CC3   UNKNOWN  $9CC3           ; Unknown 9xxx instruction
$950    $672C   LD       V7, #2C         ; Load 44 into V7
$952    $7048   ADD      V0, #48         ; Add 72 to V0
$954    $219F   CALL     $19F            ; Call subroutine at 19F
$956    $17FE   JP       $7FE            ; Jump to 7FE
$958    $E5A9   UNKNOWN  $E5A9           ; Unknown Exxx instruction
$95A    $559E   UNKNOWN  $559E           ; Unknown 5xxx instruction
$95C    $203F   CALL     $03F            ; Call subroutine at 03F
$95E    $D975   DRW      V9, V7, #5      ; Draw 5-byte sprite at V9, V7
$960    $5DC5   UNKNOWN  $5DC5           ; Unknown 5xxx instruction
$962    $3A92   SE       VA, #92         ; Skip if VA == 146
$964    $28A7   CALL     $8A7            ; Call subroutine at 8A7
$966    $39AB   SE       V9, #AB         ; Skip if V9 == 171
$968    $173A   JP       $73A            ; Jump to 73A
$96A    $E5AC   UNKNOWN  $E5AC           ; Unknown Exxx instruction
$96C    $EDEF   UNKNOWN  $EDEF           ; Unknown Exxx instruction
$96E    $573D   UNKNOWN  $573D           ; Unknown 5xxx instruction
$970    $86A7   SUBN     V6, VA          ; V6 = VA - V6, VF = !borrow
$972    $7F02   ADD      VF, #02         ; Add 2 to VF
$974    $47F8   SNE      V7, #F8         ; Skip if V7 != 248
$976    $8442   AND      V4, V4          ; V4 &= V4
$978    $D23D   DRW      V2, V3, #D      ; Draw 13-byte sprite at V2, V3
$97A    $46D7   SNE      V6, #D7         ; Skip if V6 != 215
$97C    $C685   RND      V6, #85         ; V6 = random & 85
$97E    $24B5   CALL     $4B5            ; Call subroutine at 4B5
$980    $BA0A   JP       V0, $A0A        ; Jump to V0 + A0A
$982    $0A2A   SYS      $A2A            ; System call to A2A
$984    $1014   JP       $014            ; Jump to 014
$986    $C0EE   RND      V0, #EE         ; V0 = random & EE
$988    $18F2   JP       $8F2            ; Jump to 8F2
$98A    $56D6   UNKNOWN  $56D6           ; Unknown 5xxx instruction
$98C    $C8BC   RND      V8, #BC         ; V8 = random & BC
$98E    $D2FA   DRW      V2, VF, #A      ; Draw 10-byte sprite at V2, VF
$990    $BC72   JP       V0, $C72        ; Jump to V0 + C72
$992    $1A94   JP       $A94            ; Jump to A94
$994    $12DC   JP       $2DC            ; Jump to 2DC
$996    $69DB   LD       V9, #DB         ; Load 219 into V9
$998    $E466   UNKNOWN  $E466           ; Unknown Exxx instruction
$99A    $1001   JP       $001            ; Jump to 001
$99C    $D63C   DRW      V6, V3, #C      ; Draw 12-byte sprite at V6, V3
$99E    $753A   ADD      V5, #3A         ; Add 58 to V5
$9A0    $0630   SYS      $630            ; System call to 630
$9A2    $25F7   CALL     $5F7            ; Call subroutine at 5F7
$9A4    $45A8   SNE      V5, #A8         ; Skip if V5 != 168
$9A6    $6997   LD       V9, #97         ; Load 151 into V9
$9A8    $4031   SNE      V0, #31         ; Skip if V0 != 49
$9AA    $124F   JP       $24F            ; Jump to 24F
$9AC    $3F32   SE       VF, #32         ; Skip if VF == 50
$9AE    $D0B4   DRW      V0, VB, #4      ; Draw 4-byte sprite at V0, VB
$9B0    $8F55   SUB      VF, V5          ; VF -= V5, VF = !borrow
$9B2    $A6DB   LD       I, $6DB         ; Load 6DB into I
$9B4    $BF0A   JP       V0, $F0A        ; Jump to V0 + F0A
$9B6    $5F79   UNKNOWN  $5F79           ; Unknown 5xxx instruction
$9B8    $FBC5   UNKNOWN  FBC5            ; Unknown Fxxx instruction
$9BA    $93DB   UNKNOWN  $93DB           ; Unknown 9xxx instruction
$9BC    $8A96   SHR      VA              ; VA >>= 1, VF = LSB
$9BE    $344A   SE       V4, #4A         ; Skip if V4 == 74
$9C0    $C00C   RND      V0, #0C         ; V0 = random & 0C
$9C2    $1D00   JP       $D00            ; Jump to D00
$9C4    $A626   LD       I, $626         ; Load 626 into I
$9C6    $3D51   SE       VD, #51         ; Skip if VD == 81
$9C8    $CA29   RND      VA, #29         ; VA = random & 29
$9CA    $016F   SYS      $16F            ; System call to 16F
$9CC    $B3C7   JP       V0, $3C7        ; Jump to V0 + 3C7
$9CE    $E922   UNKNOWN  $E922           ; Unknown Exxx instruction
$9D0    $FC15   LD       DT, VC          ; Delay timer = VC
$9D2    $1372   JP       $372            ; Jump to 372
$9D4    $6853   LD       V8, #53         ; Load 83 into V8
$9D6    $6A6A   LD       VA, #6A         ; Load 106 into VA
$9D8    $E23A   UNKNOWN  $E23A           ; Unknown Exxx instruction
$9DA    $EC6C   UNKNOWN  $EC6C           ; Unknown Exxx instruction
$9DC    $99A4   UNKNOWN  $99A4           ; Unknown 9xxx instruction
$9DE    $3D5C   SE       VD, #5C         ; Skip if VD == 92
$9E0    $A15C   LD       I, $15C         ; Load 15C into I
$9E2    $795D   ADD      V9, #5D         ; Add 93 to V9
$9E4    $ED6D   UNKNOWN  $ED6D           ; Unknown Exxx instruction
$9E6    $0418   SYS      $418            ; System call to 418
$9E8    $D08F   DRW      V0, V8, #F      ; Draw 15-byte sprite at V0, V8
$9EA    $1C98   JP       $C98            ; Jump to C98
$9EC    $A3DD   LD       I, $3DD         ; Load 3DD into I
$9EE    $250E   CALL     $50E            ; Call subroutine at 50E
$9F0    $7F23   ADD      VF, #23         ; Add 35 to VF
$9F2    $B9D6   JP       V0, $9D6        ; Jump to V0 + 9D6
$9F4    $D9D8   DRW      V9, VD, #8      ; Draw 8-byte sprite at V9, VD
$9F6    $D741   DRW      V7, V4, #1      ; Draw 1-byte sprite at V7, V4
$9F8    $B249   JP       V0, $249        ; Jump to V0 + 249
$9FA    $7B67   ADD      VB, #67         ; Add 103 to VB
$9FC    $C820   RND      V8, #20         ; V8 = random & 20
$9FE    $3967   SE       V9, #67         ; Skip if V9 == 103
$A00    $4BF8   SNE      VB, #F8         ; Skip if VB != 248
$A02    $4F50   SNE      VF, #50         ; Skip if VF != 80
$A04    $161F   JP       $61F            ; Jump to 61F
$A06    $B0E9   JP       V0, $0E9        ; Jump to V0 + 0E9
$A08    $0588   SYS      $588            ; System call to 588
$A0A    $F852   UNKNOWN  F852            ; Unknown Fxxx instruction
$A0C    $57A4   UNKNOWN  $57A4           ; Unknown 5xxx instruction
$A0E    $5D70   SE       VD, V7          ; Skip if VD == V7
$A10    $54BC   UNKNOWN  $54BC           ; Unknown 5xxx instruction
$A12    $40C2   SNE      V0, #C2         ; Skip if V0 != 194
$A14    $311D   SE       V1, #1D         ; Skip if V1 == 29
$A16    $1AD7   JP       $AD7            ; Jump to AD7
$A18    $A079   LD       I, $079         ; Load 079 into I
$A1A    $9ADD   UNKNOWN  $9ADD           ; Unknown 9xxx instruction
$A1C    $96C6   UNKNOWN  $96C6           ; Unknown 9xxx instruction
$A1E    $DA49   DRW      VA, V4, #9      ; Draw 9-byte sprite at VA, V4
$A20    $D7F0   DRW      V7, VF, #0      ; Draw 0-byte sprite at V7, VF
$A22    $6F32   LD       VF, #32         ; Load 50 into VF
$A24    $A3F2   LD       I, $3F2         ; Load 3F2 into I
$A26    $B342   JP       V0, $342        ; Jump to V0 + 342
$A28    $5940   SE       V9, V4          ; Skip if V9 == V4
$A2A    $27F8   CALL     $7F8            ; Call subroutine at 7F8
$A2C    $26E6   CALL     $6E6            ; Call subroutine at 6E6
$A2E    $CC69   RND      VC, #69         ; VC = random & 69
$A30    $5F4A   UNKNOWN  $5F4A           ; Unknown 5xxx instruction
$A32    $1D12   JP       $D12            ; Jump to D12
$A34    $E246   UNKNOWN  $E246           ; Unknown Exxx instruction
$A36    $E429   UNKNOWN  $E429           ; Unknown Exxx instruction
$A38    $47F6   SNE      V7, #F6         ; Skip if V7 != 246
$A3A    $89D5   SUB      V9, VD          ; V9 -= VD, VF = !borrow
$A3C    $CE21   RND      VE, #21         ; VE = random & 21
$A3E    $7BA2   ADD      VB, #A2         ; Add 162 to VB
$A40    $9CA2   UNKNOWN  $9CA2           ; Unknown 9xxx instruction
$A42    $21FA   CALL     $1FA            ; Call subroutine at 1FA
$A44    $F7FA   UNKNOWN  F7FA            ; Unknown Fxxx instruction
$A46    $BD83   JP       V0, $D83        ; Jump to V0 + D83
$A48    $4F62   SNE      VF, #62         ; Skip if VF != 98
$A4A    $02B8   SYS      $2B8            ; System call to 2B8
$A4C    $58B3   UNKNOWN  $58B3           ; Unknown 5xxx instruction
$A4E    $2A6A   CALL     $A6A            ; Call subroutine at A6A
$A50    $C4B1   RND      V4, #B1         ; V4 = random & B1
$A52    $B167   JP       V0, $167        ; Jump to V0 + 167
$A54    $8415   SUB      V4, V1          ; V4 -= V1, VF = !borrow
$A56    $1CFC   JP       $CFC            ; Jump to CFC
$A58    $AF23   LD       I, $F23         ; Load F23 into I
$A5A    $CCB7   RND      VC, #B7         ; VC = random & B7
$A5C    $0663   SYS      $663            ; System call to 663
$A5E    $9A08   UNKNOWN  $9A08           ; Unknown 9xxx instruction
$A60    $64B2   LD       V4, #B2         ; Load 178 into V4
$A62    $9C02   UNKNOWN  $9C02           ; Unknown 9xxx instruction
$A64    $EB69   UNKNOWN  $EB69           ; Unknown Exxx instruction
$A66    $8243   XOR      V2, V4          ; V2 ^= V4
$A68    $34F9   SE       V4, #F9         ; Skip if V4 == 249
$A6A    $A22F   LD       I, $22F         ; Load 22F into I
$A6C    $6B83   LD       VB, #83         ; Load 131 into VB
$A6E    $1ABD   JP       $ABD            ; Jump to ABD
$A70    $F089   UNKNOWN  F089            ; Unknown Fxxx instruction
$A72    $DA24   DRW      VA, V2, #4      ; Draw 4-byte sprite at VA, V2
$A74    $DB27   DRW      VB, V2, #7      ; Draw 7-byte sprite at VB, V2
$A76    $9B7B   UNKNOWN  $9B7B           ; Unknown 9xxx instruction
$A78    $6940   LD       V9, #40         ; Load 64 into V9
$A7A    $718C   ADD      V1, #8C         ; Add 140 to V1
$A7C    $1D04   JP       $D04            ; Jump to D04
$A7E    $7512   ADD      V5, #12         ; Add 18 to V5
$A80    $68DB   LD       V8, #DB         ; Load 219 into V8
$A82    $4AFF   SNE      VA, #FF         ; Skip if VA != 255
$A84    $CF79   RND      VF, #79         ; VF = random & 79
$A86    $5199   UNKNOWN  $5199           ; Unknown 5xxx instruction
$A88    $6CD6   LD       VC, #D6         ; Load 214 into VC
$A8A    $348A   SE       V4, #8A         ; Skip if V4 == 138
$A8C    $5ABB   UNKNOWN  $5ABB           ; Unknown 5xxx instruction
$A8E    $3D45   SE       VD, #45         ; Skip if VD == 69
$A90    $6C46   LD       VC, #46         ; Load 70 into VC
$A92    $FC84   UNKNOWN  FC84            ; Unknown Fxxx instruction
$A94    $D68C   DRW      V6, V8, #C      ; Draw 12-byte sprite at V6, V8
$A96    $AE26   LD       I, $E26         ; Load E26 into I
$A98    $BDD0   JP       V0, $DD0        ; Jump to V0 + DD0
$A9A    $E5C6   UNKNOWN  $E5C6           ; Unknown Exxx instruction
$A9C    $EA1A   UNKNOWN  $EA1A           ; Unknown Exxx instruction
$A9E    $A0FA   LD       I, $0FA         ; Load 0FA into I
$AA0    $EF96   UNKNOWN  $EF96           ; Unknown Exxx instruction
$AA2    $F329   LD       F, V3           ; I = sprite address for digit V3
$AA4    $8C4E   SHL      VC              ; VC <<= 1, VF = MSB
$AA6    $DDED   DRW      VD, VE, #D      ; Draw 13-byte sprite at VD, VE
$AA8    $7898   ADD      V8, #98         ; Add 152 to V8
$AAA    $48D0   SNE      V8, #D0         ; Skip if V8 != 208
$AAC    $7117   ADD      V1, #17         ; Add 23 to V1
$AAE    $05EC   SYS      $5EC            ; System call to 5EC
$AB0    $974C   UNKNOWN  $974C           ; Unknown 9xxx instruction
$AB2    $66A8   LD       V6, #A8         ; Load 168 into V6
$AB4    $352A   SE       V5, #2A         ; Skip if V5 == 42
$AB6    $5D8E   UNKNOWN  $5D8E           ; Unknown 5xxx instruction
$AB8    $1A9D   JP       $A9D            ; Jump to A9D
$ABA    $BC95   JP       V0, $C95        ; Jump to V0 + C95
$ABC    $75AE   ADD      V5, #AE         ; Add 174 to V5
$ABE    $E01D   UNKNOWN  $E01D           ; Unknown Exxx instruction
$AC0    $6F25   LD       VF, #25         ; Load 37 into VF
$AC2    $AB8B   LD       I, $B8B         ; Load B8B into I
$AC4    $CCB8   RND      VC, #B8         ; VC = random & B8
$AC6    $3D0B   SE       VD, #0B         ; Skip if VD == 11
$AC8    $71F0   ADD      V1, #F0         ; Add 240 to V1
$ACA    $4844   SNE      V8, #44         ; Skip if V8 != 68
$ACC    $7D88   ADD      VD, #88         ; Add 136 to VD
$ACE    $B506   JP       V0, $506        ; Jump to V0 + 506
$AD0    $BDDE   JP       V0, $DDE        ; Jump to V0 + DDE
$AD2    $2415   CALL     $415            ; Call subroutine at 415
$AD4    $4560   SNE      V5, #60         ; Skip if V5 != 96
$AD6    $0541   SYS      $541            ; System call to 541
$AD8    $01D5   SYS      $1D5            ; System call to 1D5
$ADA    $F7AB   UNKNOWN  F7AB            ; Unknown Fxxx instruction
$ADC    $F273   UNKNOWN  F273            ; Unknown Fxxx instruction
$ADE    $EF13   UNKNOWN  $EF13           ; Unknown Exxx instruction
$AE0    $7A59   ADD      VA, #59         ; Add 89 to VA
$AE2    $1D30   JP       $D30            ; Jump to D30
$AE4    $7EAF   ADD      VE, #AF         ; Add 175 to VE
$AE6    $B49E   JP       V0, $49E        ; Jump to V0 + 49E
$AE8    $5C2B   UNKNOWN  $5C2B           ; Unknown 5xxx instruction
$AEA    $5F3B   UNKNOWN  $5F3B           ; Unknown 5xxx instruction
$AEC    $287B   CALL     $87B            ; Call subroutine at 87B
$AEE    $DA67   DRW      VA, V6, #7      ; Draw 7-byte sprite at VA, V6
$AF0    $23CA   CALL     $3CA            ; Call subroutine at 3CA
$AF2    $27E0   CALL     $7E0            ; Call subroutine at 7E0
$AF4    $15B6   JP       $5B6            ; Jump to 5B6
$AF6    $A16E   LD       I, $16E         ; Load 16E into I
$AF8    $8109   UNKNOWN  8109            ; Unknown 8xxx instruction
$AFA    $DB41   DRW      VB, V4, #1      ; Draw 1-byte sprite at VB, V4
$AFC    $D702   DRW      V7, V0, #2      ; Draw 2-byte sprite at V7, V0
$AFE    $4360   SNE      V3, #60         ; Skip if V3 != 96
$B00    $FB18   LD       ST, VB          ; Sound timer = VB
$B02    $5B08   UNKNOWN  $5B08           ; Unknown 5xxx instruction
$B04    $2149   CALL     $149            ; Call subroutine at 149
$B06    $C555   RND      V5, #55         ; V5 = random & 55
$B08    $52BE   UNKNOWN  $52BE           ; Unknown 5xxx instruction
$B0A    $4766   SNE      V7, #66         ; Skip if V7 != 102
$B0C    $E95B   UNKNOWN  $E95B           ; Unknown Exxx instruction
$B0E    $68E6   LD       V8, #E6         ; Load 230 into V8
$B10    $7DDE   ADD      VD, #DE         ; Add 222 to VD
$B12    $1D5B   JP       $D5B            ; Jump to D5B
$B14    $C2CF   RND      V2, #CF         ; V2 = random & CF
$B16    $343A   SE       V4, #3A         ; Skip if V4 == 58
$B18    $5ED7   UNKNOWN  $5ED7           ; Unknown 5xxx instruction
$B1A    $9707   UNKNOWN  $9707           ; Unknown 9xxx instruction
$B1C    $7017   ADD      V0, #17         ; Add 23 to V0
$B1E    $5DC4   UNKNOWN  $5DC4           ; Unknown 5xxx instruction
$B20    $3A8B   SE       VA, #8B         ; Skip if VA == 139
$B22    $AA17   LD       I, $A17         ; Load A17 into I
$B24    $3AFC   SE       VA, #FC         ; Skip if VA == 252
$B26    $AC06   LD       I, $C06         ; Load C06 into I
$B28    $D68A   DRW      V6, V8, #A      ; Draw 10-byte sprite at V6, V8
$B2A    $2C0D   CALL     $C0D            ; Call subroutine at C0D
$B2C    $C834   RND      V8, #34         ; V8 = random & 34
$B2E    $8F0C   UNKNOWN  8F0C            ; Unknown 8xxx instruction
$B30    $C6BD   RND      V6, #BD         ; V6 = random & BD
$B32    $FABE   UNKNOWN  FABE            ; Unknown Fxxx instruction
$B34    $CA76   RND      VA, #76         ; VA = random & 76
$B36    $DF9A   DRW      VF, V9, #A      ; Draw 10-byte sprite at VF, V9
$B38    $7BB1   ADD      VB, #B1         ; Add 177 to VB
$B3A    $B4AA   JP       V0, $4AA        ; Jump to V0 + 4AA
$B3C    $AD06   LD       I, $D06         ; Load D06 into I
$B3E    $88F3   XOR      V8, VF          ; V8 ^= VF
$B40    $A552   LD       I, $552         ; Load 552 into I
$B42    $8EDC   UNKNOWN  8EDC            ; Unknown 8xxx instruction
$B44    $CB0D   RND      VB, #0D         ; VB = random & 0D
$B46    $56BA   UNKNOWN  $56BA           ; Unknown 5xxx instruction
$B48    $589E   UNKNOWN  $589E           ; Unknown 5xxx instruction
$B4A    $9074   UNKNOWN  $9074           ; Unknown 9xxx instruction
$B4C    $82A9   UNKNOWN  82A9            ; Unknown 8xxx instruction
$B4E    $D1F0   DRW      V1, VF, #0      ; Draw 0-byte sprite at V1, VF
$B50    $80E1   OR       V0, VE          ; V0 |= VE
$B52    $8C0B   UNKNOWN  8C0B            ; Unknown 8xxx instruction
$B54    $BA97   JP       V0, $A97        ; Jump to V0 + A97
$B56    $D089   DRW      V0, V8, #9      ; Draw 9-byte sprite at V0, V8
$B58    $1162   JP       $162            ; Jump to 162
$B5A    $B7B4   JP       V0, $7B4        ; Jump to V0 + 7B4
$B5C    $A828   LD       I, $828         ; Load 828 into I
$B5E    $E21C   UNKNOWN  $E21C           ; Unknown Exxx instruction
$B60    $8023   XOR      V0, V2          ; V0 ^= V2
$B62    $EF12   UNKNOWN  $EF12           ; Unknown Exxx instruction
$B64    $DD14   DRW      VD, V1, #4      ; Draw 4-byte sprite at VD, V1
$B66    $04DE   SYS      $4DE            ; System call to 4DE
$B68    $90AF   UNKNOWN  $90AF           ; Unknown 9xxx instruction
$B6A    $73AD   ADD      V3, #AD         ; Add 173 to V3
$B6C    $72C2   ADD      V2, #C2         ; Add 194 to V2
$B6E    $19AF   JP       $9AF            ; Jump to 9AF
$B70    $FCEF   UNKNOWN  FCEF            ; Unknown Fxxx instruction
$B72    $F7A1   UNKNOWN  F7A1            ; Unknown Fxxx instruction
$B74    $346C   SE       V4, #6C         ; Skip if V4 == 108
$B76    $EEEE   UNKNOWN  $EEEE           ; Unknown Exxx instruction
$B78    $ACB4   LD       I, $CB4         ; Load CB4 into I
$B7A    $DDD2   DRW      VD, VD, #2      ; Draw 2-byte sprite at VD, VD
$B7C    $0606   SYS      $606            ; System call to 606
$B7E    $0364   SYS      $364            ; System call to 364
$B80    $7898   ADD      V8, #98         ; Add 152 to V8
$B82    $002B   SYS      $02B            ; System call to 02B
$B84    $CD4E   RND      VD, #4E         ; VD = random & 4E
$B86    $31C1   SE       V1, #C1         ; Skip if V1 == 193
$B88    $B3DC   JP       V0, $3DC        ; Jump to V0 + 3DC
$B8A    $8AFD   UNKNOWN  8AFD            ; Unknown 8xxx instruction
$B8C    $E4F1   UNKNOWN  $E4F1           ; Unknown Exxx instruction
$B8E    $1BFA   JP       $BFA            ; Jump to BFA
$B90    $7861   ADD      V8, #61         ; Add 97 to V8
$B92    $57C8   UNKNOWN  $57C8           ; Unknown 5xxx instruction
$B94    $93D6   UNKNOWN  $93D6           ; Unknown 9xxx instruction
$B96    $0797   SYS      $797            ; System call to 797
$B98    $6BAF   LD       VB, #AF         ; Load 175 into VB
$B9A    $22C4   CALL     $2C4            ; Call subroutine at 2C4
$B9C    $7D46   ADD      VD, #46         ; Add 70 to VD
$B9E    $7DBC   ADD      VD, #BC         ; Add 188 to VD
$BA0    $82E0   LD       V2, VE          ; V2 = VE
$BA2    $FC39   UNKNOWN  FC39            ; Unknown Fxxx instruction
$BA4    $C55B   RND      V5, #5B         ; V5 = random & 5B
$BA6    $4BA0   SNE      VB, #A0         ; Skip if VB != 160
$BA8    $63F4   LD       V3, #F4         ; Load 244 into V3
$BAA    $B64B   JP       V0, $64B        ; Jump to V0 + 64B
$BAC    $5E5B   UNKNOWN  $5E5B           ; Unknown 5xxx instruction
$BAE    $6CAB   LD       VC, #AB         ; Load 171 into VC
$BB0    $6ED1   LD       VE, #D1         ; Load 209 into VE
$BB2    $6E6C   LD       VE, #6C         ; Load 108 into VE
$BB4    $EE18   UNKNOWN  $EE18           ; Unknown Exxx instruction
$BB6    $B1AF   JP       V0, $1AF        ; Jump to V0 + 1AF
$BB8    $0B5B   SYS      $B5B            ; System call to B5B
$BBA    $8477   SUBN     V4, V7          ; V4 = V7 - V4, VF = !borrow
$BBC    $1FE3   JP       $FE3            ; Jump to FE3
$BBE    $08A8   SYS      $8A8            ; System call to 8A8
$BC0    $278F   CALL     $78F            ; Call subroutine at 78F
$BC2    $919A   UNKNOWN  $919A           ; Unknown 9xxx instruction
$BC4    $6963   LD       V9, #63         ; Load 99 into V9
$BC6    $9FBF   UNKNOWN  $9FBF           ; Unknown 9xxx instruction
$BC8    $C967   RND      V9, #67         ; V9 = random & 67
$BCA    $817D   UNKNOWN  817D            ; Unknown 8xxx instruction
$BCC    $5081   UNKNOWN  $5081           ; Unknown 5xxx instruction
$BCE    $B045   JP       V0, $045        ; Jump to V0 + 045
$BD0    $7E33   ADD      VE, #33         ; Add 51 to VE
$BD2    $185E   JP       $85E            ; Jump to 85E
$BD4    $806D   UNKNOWN  806D            ; Unknown 8xxx instruction
$BD6    $72EB   ADD      V2, #EB         ; Add 235 to V2
$BD8    $C0B8   RND      V0, #B8         ; V0 = random & B8
$BDA    $BA39   JP       V0, $A39        ; Jump to V0 + A39
$BDC    $5561   UNKNOWN  $5561           ; Unknown 5xxx instruction
$BDE    $29E0   CALL     $9E0            ; Call subroutine at 9E0
$BE0    $73B8   ADD      V3, #B8         ; Add 184 to V3
$BE2    $91CA   UNKNOWN  $91CA           ; Unknown 9xxx instruction
$BE4    $DAA9   DRW      VA, VA, #9      ; Draw 9-byte sprite at VA, VA
$BE6    $E775   UNKNOWN  $E775           ; Unknown Exxx instruction
$BE8    $073D   SYS      $73D            ; System call to 73D
$BEA    $2442   CALL     $442            ; Call subroutine at 442
$BEC    $4C84   SNE      VC, #84         ; Skip if VC != 132
$BEE    $116E   JP       $16E            ; Jump to 16E
$BF0    $B7A2   JP       V0, $7A2        ; Jump to V0 + 7A2
$BF2    $3A7C   SE       VA, #7C         ; Skip if VA == 124
$BF4    $D309   DRW      V3, V0, #9      ; Draw 9-byte sprite at V3, V0
$BF6    $D32B   DRW      V3, V2, #B      ; Draw 11-byte sprite at V3, V2
$BF8    $1183   JP       $183            ; Jump to 183
$BFA    $8E04   ADD      VE, V0          ; VE += V0, VF = carry
$BFC    $6A6D   LD       VA, #6D         ; Load 109 into VA
$BFE    $7814   ADD      V8, #14         ; Add 20 to V8
$C00    $1EF6   JP       $EF6            ; Jump to EF6
$C02    $31D5   SE       V1, #D5         ; Skip if V1 == 213
$C04    $3812   SE       V8, #12         ; Skip if V8 == 18
$C06    $003B   SYS      $03B            ; System call to 03B
$C08    $DF70   DRW      VF, V7, #0      ; Draw 0-byte sprite at VF, V7
$C0A    $5783   UNKNOWN  $5783           ; Unknown 5xxx instruction
$C0C    $2496   CALL     $496            ; Call subroutine at 496
$C0E    $0E3A   SYS      $E3A            ; System call to E3A
$C10    $8E60   LD       VE, V6          ; VE = V6
$C12    $A3A5   LD       I, $3A5         ; Load 3A5 into I
$C14    $2C13   CALL     $C13            ; Call subroutine at C13
$C16    $D035   DRW      V0, V3, #5      ; Draw 5-byte sprite at V0, V3
$C18    $2828   CALL     $828            ; Call subroutine at 828
$C1A    $B4B9   JP       V0, $4B9        ; Jump to V0 + 4B9
$C1C    $CD40   RND      VD, #40         ; VD = random & 40
$C1E    $574C   UNKNOWN  $574C           ; Unknown 5xxx instruction
$C20    $92C1   UNKNOWN  $92C1           ; Unknown 9xxx instruction
$C22    $27B6   CALL     $7B6            ; Call subroutine at 7B6
$C24    $B4DE   JP       V0, $4DE        ; Jump to V0 + 4DE
$C26    $C88A   RND      V8, #8A         ; V8 = random & 8A
$C28    $A7D6   LD       I, $7D6         ; Load 7D6 into I
$C2A    $E8C6   UNKNOWN  $E8C6           ; Unknown Exxx instruction
$C2C    $DDA5   DRW      VD, VA, #5      ; Draw 5-byte sprite at VD, VA
$C2E    $757E   ADD      V5, #7E         ; Add 126 to V5
$C30    $BF81   JP       V0, $F81        ; Jump to V0 + F81
$C32    $3776   SE       V7, #76         ; Skip if V7 == 118
$C34    $4707   SNE      V7, #07         ; Skip if V7 != 7
$C36    $0570   SYS      $570            ; System call to 570
$C38    $E9A5   UNKNOWN  $E9A5           ; Unknown Exxx instruction
$C3A    $7995   ADD      V9, #95         ; Add 149 to V9
$C3C    $7956   ADD      V9, #56         ; Add 86 to V9
$C3E    $8C56   SHR      VC              ; VC >>= 1, VF = LSB
$C40    $2DCA   CALL     $DCA            ; Call subroutine at DCA
$C42    $9EA2   UNKNOWN  $9EA2           ; Unknown 9xxx instruction
$C44    $81F2   AND      V1, VF          ; V1 &= VF
$C46    $6A12   LD       VA, #12         ; Load 18 into VA
$C48    $E9CB   UNKNOWN  $E9CB           ; Unknown Exxx instruction
$C4A    $4A65   SNE      VA, #65         ; Skip if VA != 101
$C4C    $606A   LD       V0, #6A         ; Load 106 into V0
$C4E    $36C7   SE       V6, #C7         ; Skip if V6 == 199
$C50    $DCF5   DRW      VC, VF, #5      ; Draw 5-byte sprite at VC, VF
$C52    $AD94   LD       I, $D94         ; Load D94 into I
$C54    $5FDA   UNKNOWN  $5FDA           ; Unknown 5xxx instruction
$C56    $BA28   JP       V0, $A28        ; Jump to V0 + A28
$C58    $9756   UNKNOWN  $9756           ; Unknown 9xxx instruction
$C5A    $BF0B   JP       V0, $F0B        ; Jump to V0 + F0B
$C5C    $BD1A   JP       V0, $D1A        ; Jump to V0 + D1A
$C5E    $2B25   CALL     $B25            ; Call subroutine at B25
$C60    $C047   RND      V0, #47         ; V0 = random & 47
$C62    $C82E   RND      V8, #2E         ; V8 = random & 2E
$C64    $6006   LD       V0, #06         ; Load 6 into V0
$C66    $6DE7   LD       VD, #E7         ; Load 231 into VD
$C68    $20A5   CALL     $0A5            ; Call subroutine at 0A5
$C6A    $9173   UNKNOWN  $9173           ; Unknown 9xxx instruction
$C6C    $A131   LD       I, $131         ; Load 131 into I
$C6E    $BAF1   JP       V0, $AF1        ; Jump to V0 + AF1
$C70    $BFA3   JP       V0, $FA3        ; Jump to V0 + FA3
$C72    $A38C   LD       I, $38C         ; Load 38C into I
$C74    $6CDA   LD       VC, #DA         ; Load 218 into VC
$C76    $F0A3   UNKNOWN  F0A3            ; Unknown Fxxx instruction
$C78    $FE56   UNKNOWN  FE56            ; Unknown Fxxx instruction
$C7A    $AEDC   LD       I, $EDC         ; Load EDC into I
$C7C    $D400   DRW      V4, V0, #0      ; Draw 0-byte sprite at V4, V0
$C7E    $1393   JP       $393            ; Jump to 393
$C80    $5FBE   UNKNOWN  $5FBE           ; Unknown 5xxx instruction
$C82    $A5C6   LD       I, $5C6         ; Load 5C6 into I
$C84    $6E9A   LD       VE, #9A         ; Load 154 into VE
$C86    $8CDF   UNKNOWN  8CDF            ; Unknown 8xxx instruction
$C88    $1DB5   JP       $DB5            ; Jump to DB5
$C8A    $3AD2   SE       VA, #D2         ; Skip if VA == 210
$C8C    $9EDA   UNKNOWN  $9EDA           ; Unknown 9xxx instruction
$C8E    $5862   UNKNOWN  $5862           ; Unknown 5xxx instruction
$C90    $824E   SHL      V2              ; V2 <<= 1, VF = MSB
$C92    $6D39   LD       VD, #39         ; Load 57 into VD
$C94    $C801   RND      V8, #01         ; V8 = random & 01
$C96    $474D   SNE      V7, #4D         ; Skip if V7 != 77
$C98    $0A3D   SYS      $A3D            ; System call to A3D
$C9A    $5EB3   UNKNOWN  $5EB3           ; Unknown 5xxx instruction
$C9C    $0260   SYS      $260            ; System call to 260
$C9E    $53B2   UNKNOWN  $53B2           ; Unknown 5xxx instruction
$CA0    $826C   UNKNOWN  826C            ; Unknown 8xxx instruction
$CA2    $6ABA   LD       VA, #BA         ; Load 186 into VA
$CA4    $3114   SE       V1, #14         ; Skip if V1 == 20
$CA6    $EEB5   UNKNOWN  $EEB5           ; Unknown Exxx instruction
$CA8    $1771   JP       $771            ; Jump to 771
$CAA    $F8F1   UNKNOWN  F8F1            ; Unknown Fxxx instruction
$CAC    $A85B   LD       I, $85B         ; Load 85B into I
$CAE    $82FD   UNKNOWN  82FD            ; Unknown 8xxx instruction
$CB0    $78C6   ADD      V8, #C6         ; Add 198 to V8
$CB2    $FF8A   UNKNOWN  FF8A            ; Unknown Fxxx instruction
$CB4    $8DD1   OR       VD, VD          ; VD |= VD
$CB6    $3247   SE       V2, #47         ; Skip if V2 == 71
$CB8    $28CA   CALL     $8CA            ; Call subroutine at 8CA
$CBA    $E9A1   SKNP     V9              ; Skip if key V9 not pressed
$CBC    $DB51   DRW      VB, V5, #1      ; Draw 1-byte sprite at VB, V5
$CBE    $664A   LD       V6, #4A         ; Load 74 into V6
$CC0    $987B   UNKNOWN  $987B           ; Unknown 9xxx instruction
$CC2    $1104   JP       $104            ; Jump to 104
$CC4    $349A   SE       V4, #9A         ; Skip if V4 == 154
$CC6    $7FF2   ADD      VF, #F2         ; Add 242 to VF
$CC8    $7500   ADD      V5, #00         ; Add 0 to V5
$CCA    $533F   UNKNOWN  $533F           ; Unknown 5xxx instruction
$CCC    $272E   CALL     $72E            ; Call subroutine at 72E
$CCE    $ED7C   UNKNOWN  $ED7C           ; Unknown Exxx instruction
$CD0    $8258   UNKNOWN  8258            ; Unknown 8xxx instruction
$CD2    $5FEB   UNKNOWN  $5FEB           ; Unknown 5xxx instruction
$CD4    $372E   SE       V7, #2E         ; Skip if V7 == 46
$CD6    $6CC1   LD       VC, #C1         ; Load 193 into VC
$CD8    $8A45   SUB      VA, V4          ; VA -= V4, VF = !borrow
$CDA    $3DEA   SE       VD, #EA         ; Skip if VD == 234
$CDC    $FBB4   UNKNOWN  FBB4            ; Unknown Fxxx instruction
$CDE    $BBD8   JP       V0, $BD8        ; Jump to V0 + BD8
$CE0    $4FDD   SNE      VF, #DD         ; Skip if VF != 221
$CE2    $5B73   UNKNOWN  $5B73           ; Unknown 5xxx instruction
$CE4    $44C7   SNE      V4, #C7         ; Skip if V4 != 199
$CE6    $69D5   LD       V9, #D5         ; Load 213 into V9
$CE8    $CB02   RND      VB, #02         ; VB = random & 02
$CEA    $F65C   UNKNOWN  F65C            ; Unknown Fxxx instruction
$CEC    $A185   LD       I, $185         ; Load 185 into I
$CEE    $6BEF   LD       VB, #EF         ; Load 239 into VB
$CF0    $E977   UNKNOWN  $E977           ; Unknown Exxx instruction
$CF2    $BCBD   JP       V0, $CBD        ; Jump to V0 + CBD
$CF4    $A168   LD       I, $168         ; Load 168 into I
$CF6    $14AE   JP       $4AE            ; Jump to 4AE
$CF8    $B561   JP       V0, $561        ; Jump to V0 + 561
$CFA    $6C98   LD       VC, #98         ; Load 152 into VC
$CFC    $8C87   SUBN     VC, V8          ; VC = V8 - VC, VF = !borrow
$CFE    $C477   RND      V4, #77         ; V4 = random & 77
$D00    $0949   SYS      $949            ; System call to 949
$D02    $933D   UNKNOWN  $933D           ; Unknown 9xxx instruction
$D04    $B41F   JP       V0, $41F        ; Jump to V0 + 41F
$D06    $8EFC   UNKNOWN  8EFC            ; Unknown 8xxx instruction
$D08    $12D5   JP       $2D5            ; Jump to 2D5
$D0A    $9531   UNKNOWN  $9531           ; Unknown 9xxx instruction
$D0C    $2012   CALL     $012            ; Call subroutine at 012
$D0E    $9C8B   UNKNOWN  $9C8B           ; Unknown 9xxx instruction
$D10    $B999   JP       V0, $999        ; Jump to V0 + 999
$D12    $DBAA   DRW      VB, VA, #A      ; Draw 10-byte sprite at VB, VA
$D14    $7C08   ADD      VC, #08         ; Add 8 to VC
$D16    $74B4   ADD      V4, #B4         ; Add 180 to V4
$D18    $9C50   SNE      VC, V5          ; Skip if VC != V5
$D1A    $9DFF   UNKNOWN  $9DFF           ; Unknown 9xxx instruction
$D1C    $0206   SYS      $206            ; System call to 206
$D1E    $A21E   LD       I, $21E         ; Load 21E into I
$D20    $B32A   JP       V0, $32A        ; Jump to V0 + 32A
$D22    $F833   LD       B, V8           ; Store BCD of V8 at I, I+1, I+2
$D24    $3081   SE       V0, #81         ; Skip if V0 == 129
$D26    $D254   DRW      V2, V5, #4      ; Draw 4-byte sprite at V2, V5
$D28    $0428   SYS      $428            ; System call to 428
$D2A    $80B8   UNKNOWN  80B8            ; Unknown 8xxx instruction
$D2C    $188F   JP       $88F            ; Jump to 88F
$D2E    $1A19   JP       $A19            ; Jump to A19
$D30    $5395   UNKNOWN  $5395           ; Unknown 5xxx instruction
$D32    $922E   UNKNOWN  $922E           ; Unknown 9xxx instruction
$D34    $6574   LD       V5, #74         ; Load 116 into V5
$D36    $FBDF   UNKNOWN  FBDF            ; Unknown Fxxx instruction
$D38    $DEAC   DRW      VE, VA, #C      ; Draw 12-byte sprite at VE, VA
$D3A    $714A   ADD      V1, #4A         ; Add 74 to V1
$D3C    $BC58   JP       V0, $C58        ; Jump to V0 + C58
$D3E    $DA58   DRW      VA, V5, #8      ; Draw 8-byte sprite at VA, V5
$D40    $E423   UNKNOWN  $E423           ; Unknown Exxx instruction
$D42    $38D0   SE       V8, #D0         ; Skip if V8 == 208
$D44    $77BD   ADD      V7, #BD         ; Add 189 to V7
$D46    $7A6F   ADD      VA, #6F         ; Add 111 to VA
$D48    $3B3D   SE       VB, #3D         ; Skip if VB == 61
$D4A    $3E0A   SE       VE, #0A         ; Skip if VE == 10
$D4C    $F641   UNKNOWN  F641            ; Unknown Fxxx instruction
$D4E    $F2DF   UNKNOWN  F2DF            ; Unknown Fxxx instruction
$D50    $7EC1   ADD      VE, #C1         ; Add 193 to VE
$D52    $4C5B   SNE      VC, #5B         ; Skip if VC != 91
$D54    $01E1   SYS      $1E1            ; System call to 1E1
$D56    $ACB9   LD       I, $CB9         ; Load CB9 into I
$D58    $05B4   SYS      $5B4            ; System call to 5B4
$D5A    $10C1   JP       $0C1            ; Jump to 0C1
$D5C    $95BF   UNKNOWN  $95BF           ; Unknown 9xxx instruction
$D5E    $112C   JP       $12C            ; Jump to 12C
$D60    $DB53   DRW      VB, V5, #3      ; Draw 3-byte sprite at VB, V5
$D62    $1227   JP       $227            ; Jump to 227
$D64    $351B   SE       V5, #1B         ; Skip if V5 == 27
$D66    $6284   LD       V2, #84         ; Load 132 into V2
$D68    $1DBC   JP       $DBC            ; Jump to DBC
$D6A    $CB8E   RND      VB, #8E         ; VB = random & 8E
$D6C    $7367   ADD      V3, #67         ; Add 103 to V3
$D6E    $FB11   UNKNOWN  FB11            ; Unknown Fxxx instruction
$D70    $B21B   JP       V0, $21B        ; Jump to V0 + 21B
$D72    $08EE   SYS      $8EE            ; System call to 8EE
$D74    $02D3   SYS      $2D3            ; System call to 2D3
$D76    $289D   CALL     $89D            ; Call subroutine at 89D
$D78    $222E   CALL     $22E            ; Call subroutine at 22E
$D7A    $B4D7   JP       V0, $4D7        ; Jump to V0 + 4D7
$D7C    $BFB0   JP       V0, $FB0        ; Jump to V0 + FB0
$D7E    $80CF   UNKNOWN  80CF            ; Unknown 8xxx instruction
$D80    $6DF0   LD       VD, #F0         ; Load 240 into VD
$D82    $EF3F   UNKNOWN  $EF3F           ; Unknown Exxx instruction
$D84    $C8FD   RND      V8, #FD         ; V8 = random & FD
$D86    $61FD   LD       V1, #FD         ; Load 253 into V1
$D88    $D9D2   DRW      V9, VD, #2      ; Draw 2-byte sprite at V9, VD
$D8A    $679B   LD       V7, #9B         ; Load 155 into V7
$D8C    $F28B   UNKNOWN  F28B            ; Unknown Fxxx instruction
$D8E    $DD06   DRW      VD, V0, #6      ; Draw 6-byte sprite at VD, V0
$D90    $6B68   LD       VB, #68         ; Load 104 into VB
$D92    $7A54   ADD      VA, #54         ; Add 84 to VA
$D94    $4EAC   SNE      VE, #AC         ; Skip if VE != 172
$D96    $3568   SE       V5, #68         ; Skip if V5 == 104
$D98    $EE4C   UNKNOWN  $EE4C           ; Unknown Exxx instruction
$D9A    $B0D0   JP       V0, $0D0        ; Jump to V0 + 0D0
$D9C    $91B8   UNKNOWN  $91B8           ; Unknown 9xxx instruction
$D9E    $622D   LD       V2, #2D         ; Load 45 into V2
$DA0    $1FF6   JP       $FF6            ; Jump to FF6
$DA2    $C77F   RND      V7, #7F         ; V7 = random & 7F
$DA4    $A1AB   LD       I, $1AB         ; Load 1AB into I
$DA6    $998D   UNKNOWN  $998D           ; Unknown 9xxx instruction
$DA8    $2CE5   CALL     $CE5            ; Call subroutine at CE5
$DAA    $DBCD   DRW      VB, VC, #D      ; Draw 13-byte sprite at VB, VC
$DAC    $DE4D   DRW      VE, V4, #D      ; Draw 13-byte sprite at VE, V4
$DAE    $680E   LD       V8, #0E         ; Load 14 into V8
$DB0    $D3D5   DRW      V3, VD, #5      ; Draw 5-byte sprite at V3, VD
$DB2    $9334   UNKNOWN  $9334           ; Unknown 9xxx instruction
$DB4    $4D52   SNE      VD, #52         ; Skip if VD != 82
$DB6    $61E6   LD       V1, #E6         ; Load 230 into V1
$DB8    $379F   SE       V7, #9F         ; Skip if V7 == 159
$DBA    $16CA   JP       $6CA            ; Jump to 6CA
$DBC    $BC6C   JP       V0, $C6C        ; Jump to V0 + C6C
$DBE    $06AD   SYS      $6AD            ; System call to 6AD
$DC0    $54D8   UNKNOWN  $54D8           ; Unknown 5xxx instruction
$DC2    $09B4   SYS      $9B4            ; System call to 9B4
$DC4    $CA55   RND      VA, #55         ; VA = random & 55
$DC6    $7F1F   ADD      VF, #1F         ; Add 31 to VF
$DC8    $5BBA   UNKNOWN  $5BBA           ; Unknown 5xxx instruction
$DCA    $01E8   SYS      $1E8            ; System call to 1E8
$DCC    $DB89   DRW      VB, V8, #9      ; Draw 9-byte sprite at VB, V8
$DCE    $ECA1   SKNP     VC              ; Skip if key VC not pressed
$DD0    $E1FF   UNKNOWN  $E1FF           ; Unknown Exxx instruction
$DD2    $A9EA   LD       I, $9EA         ; Load 9EA into I
$DD4    $E9F8   UNKNOWN  $E9F8           ; Unknown Exxx instruction
$DD6    $E6FF   UNKNOWN  $E6FF           ; Unknown Exxx instruction
$DD8    $53CC   UNKNOWN  $53CC           ; Unknown 5xxx instruction
$DDA    $79A7   ADD      V9, #A7         ; Add 167 to V9
$DDC    $4ACC   SNE      VA, #CC         ; Skip if VA != 204
$DDE    $7D2F   ADD      VD, #2F         ; Add 47 to VD
$DE0    $2360   CALL     $360            ; Call subroutine at 360
$DE2    $1117   JP       $117            ; Jump to 117
$DE4    $8370   LD       V3, V7          ; V3 = V7
$DE6    $D28C   DRW      V2, V8, #C      ; Draw 12-byte sprite at V2, V8
$DE8    $4123   SNE      V1, #23         ; Skip if V1 != 35
$DEA    $4E73   SNE      VE, #73         ; Skip if VE != 115
$DEC    $87A0   LD       V7, VA          ; V7 = VA
$DEE    $5873   UNKNOWN  $5873           ; Unknown 5xxx instruction
$DF0    $D1EF   DRW      V1, VE, #F      ; Draw 15-byte sprite at V1, VE
$DF2    $A11D   LD       I, $11D         ; Load 11D into I
$DF4    $EA1D   UNKNOWN  $EA1D           ; Unknown Exxx instruction
$DF6    $965D   UNKNOWN  $965D           ; Unknown 9xxx instruction
$DF8    $67B5   LD       V7, #B5         ; Load 181 into V7
$DFA    $2D42   CALL     $D42            ; Call subroutine at D42
$DFC    $D55F   DRW      V5, V5, #F      ; Draw 15-byte sprite at V5, V5
$DFE    $80D7   SUBN     V0, VD          ; V0 = VD - V0, VF = !borrow
$E00    $910A   UNKNOWN  $910A           ; Unknown 9xxx instruction
$E02    $1C4F   JP       $C4F            ; Jump to C4F
$E04    $A758   LD       I, $758         ; Load 758 into I
$E06    $ED05   UNKNOWN  $ED05           ; Unknown Exxx instruction
$E08    $5CA2   UNKNOWN  $5CA2           ; Unknown 5xxx instruction
$E0A    $CFD1   RND      VF, #D1         ; VF = random & D1
$E0C    $BDE9   JP       V0, $DE9        ; Jump to V0 + DE9
$E0E    $8E4F   UNKNOWN  8E4F            ; Unknown 8xxx instruction
$E10    $84AA   UNKNOWN  84AA            ; Unknown 8xxx instruction
$E12    $6980   LD       V9, #80         ; Load 128 into V9
$E14    $C3E8   RND      V3, #E8         ; V3 = random & E8
$E16    $0D43   SYS      $D43            ; System call to D43
$E18    $C137   RND      V1, #37         ; V1 = random & 37
$E1A    $13FE   JP       $3FE            ; Jump to 3FE
$E1C    $BC13   JP       V0, $C13        ; Jump to V0 + C13
$E1E    $C6D2   RND      V6, #D2         ; V6 = random & D2
$E20    $598A   UNKNOWN  $598A           ; Unknown 5xxx instruction
$E22    $C86A   RND      V8, #6A         ; V8 = random & 6A
$E24    $848E   SHL      V4              ; V4 <<= 1, VF = MSB
$E26    $A1E8   LD       I, $1E8         ; Load 1E8 into I
$E28    $96E4   UNKNOWN  $96E4           ; Unknown 9xxx instruction
$E2A    $B424   JP       V0, $424        ; Jump to V0 + 424
$E2C    $F6D5   UNKNOWN  F6D5            ; Unknown Fxxx instruction
$E2E    $A69E   LD       I, $69E         ; Load 69E into I
$E30    $82AE   SHL      V2              ; V2 <<= 1, VF = MSB
$E32    $8635   SUB      V6, V3          ; V6 -= V3, VF = !borrow
$E34    $CC02   RND      VC, #02         ; VC = random & 02
$E36    $2BEF   CALL     $BEF            ; Call subroutine at BEF
$E38    $6227   LD       V2, #27         ; Load 39 into V2
$E3A    $A223   LD       I, $223         ; Load 223 into I
$E3C    $1592   JP       $592            ; Jump to 592
$E3E    $9AEA   UNKNOWN  $9AEA           ; Unknown 9xxx instruction
$E40    $E66F   UNKNOWN  $E66F           ; Unknown Exxx instruction
$E42    $5206   UNKNOWN  $5206           ; Unknown 5xxx instruction
$E44    $B9AB   JP       V0, $9AB        ; Jump to V0 + 9AB
$E46    $04B5   SYS      $4B5            ; System call to 4B5
$E48    $85C9   UNKNOWN  85C9            ; Unknown 8xxx instruction
$E4A    $E441   UNKNOWN  $E441           ; Unknown Exxx instruction
$E4C    $FA63   UNKNOWN  FA63            ; Unknown Fxxx instruction
$E4E    $982A   UNKNOWN  $982A           ; Unknown 9xxx instruction
$E50    $73B5   ADD      V3, #B5         ; Add 181 to V3
$E52    $4640   SNE      V6, #40         ; Skip if V6 != 64
$E54    $84E9   UNKNOWN  84E9            ; Unknown 8xxx instruction
$E56    $D155   DRW      V1, V5, #5      ; Draw 5-byte sprite at V1, V5
$E58    $FDD2   UNKNOWN  FDD2            ; Unknown Fxxx instruction
$E5A    $A7D2   LD       I, $7D2         ; Load 7D2 into I
$E5C    $28FD   CALL     $8FD            ; Call subroutine at 8FD
$E5E    $BA5C   JP       V0, $A5C        ; Jump to V0 + A5C
$E60    $678C   LD       V7, #8C         ; Load 140 into V7
$E62    $CA9D   RND      VA, #9D         ; VA = random & 9D
$E64    $45C6   SNE      V5, #C6         ; Skip if V5 != 198
$E66    $6B52   LD       VB, #52         ; Load 82 into VB
$E68    $5C11   UNKNOWN  $5C11           ; Unknown 5xxx instruction
$E6A    $659E   LD       V5, #9E         ; Load 158 into V5
$E6C    $6F2B   LD       VF, #2B         ; Load 43 into VF
$E6E    $0998   SYS      $998            ; System call to 998
$E70    $53C1   UNKNOWN  $53C1           ; Unknown 5xxx instruction
$E72    $8E2D   UNKNOWN  8E2D            ; Unknown 8xxx instruction
$E74    $DEFE   DRW      VE, VF, #E      ; Draw 14-byte sprite at VE, VF
$E76    $5507   UNKNOWN  $5507           ; Unknown 5xxx instruction
$E78    $07A1   SYS      $7A1            ; System call to 7A1
$E7A    $A4D0   LD       I, $4D0         ; Load 4D0 into I
$E7C    $8A35   SUB      VA, V3          ; VA -= V3, VF = !borrow
$E7E    $DEC8   DRW      VE, VC, #8      ; Draw 8-byte sprite at VE, VC
$E80    $2E94   CALL     $E94            ; Call subroutine at E94
$E82    $223B   CALL     $23B            ; Call subroutine at 23B
$E84    $B0A0   JP       V0, $0A0        ; Jump to V0 + 0A0
$E86    $F63F   UNKNOWN  F63F            ; Unknown Fxxx instruction
$E88    $DF0F   DRW      VF, V0, #F      ; Draw 15-byte sprite at VF, V0
$E8A    $F812   UNKNOWN  F812            ; Unknown Fxxx instruction
$E8C    $0144   SYS      $144            ; System call to 144
$E8E    $625D   LD       V2, #5D         ; Load 93 into V2
$E90    $5826   UNKNOWN  $5826           ; Unknown 5xxx instruction
$E92    $DA9E   DRW      VA, V9, #E      ; Draw 14-byte sprite at VA, V9
$E94    $32A7   SE       V2, #A7         ; Skip if V2 == 167
$E96    $839E   SHL      V3              ; V3 <<= 1, VF = MSB
$E98    $9B0F   UNKNOWN  $9B0F           ; Unknown 9xxx instruction
$E9A    $F78D   UNKNOWN  F78D            ; Unknown Fxxx instruction
$E9C    $EEC2   UNKNOWN  $EEC2           ; Unknown Exxx instruction
$E9E    $14D4   JP       $4D4            ; Jump to 4D4
$EA0    $CDE8   RND      VD, #E8         ; VD = random & E8
$EA2    $6C51   LD       VC, #51         ; Load 81 into VC
$EA4    $6041   LD       V0, #41         ; Load 65 into V0
$EA6    $11B4   JP       $1B4            ; Jump to 1B4
$EA8    $B1D5   JP       V0, $1D5        ; Jump to V0 + 1D5
$EAA    $BB7A   JP       V0, $B7A        ; Jump to V0 + B7A
$EAC    $A86E   LD       I, $86E         ; Load 86E into I
$EAE    $16D9   JP       $6D9            ; Jump to 6D9
$EB0    $27F4   CALL     $7F4            ; Call subroutine at 7F4
$EB2    $2AE4   CALL     $AE4            ; Call subroutine at AE4
$EB4    $45E5   SNE      V5, #E5         ; Skip if V5 != 229
$EB6    $E17A   UNKNOWN  $E17A           ; Unknown Exxx instruction
$EB8    $FCA3   UNKNOWN  FCA3            ; Unknown Fxxx instruction
$EBA    $749B   ADD      V4, #9B         ; Add 155 to V4
$EBC    $D069   DRW      V0, V6, #9      ; Draw 9-byte sprite at V0, V6
$EBE    $720E   ADD      V2, #0E         ; Add 14 to V2
$EC0    $E501   UNKNOWN  $E501           ; Unknown Exxx instruction
$EC2    $02B5   SYS      $2B5            ; System call to 2B5
$EC4    $CA49   RND      VA, #49         ; VA = random & 49
$EC6    $EE46   UNKNOWN  $EE46           ; Unknown Exxx instruction
$EC8    $8EEF   UNKNOWN  8EEF            ; Unknown 8xxx instruction
$ECA    $395D   SE       V9, #5D         ; Skip if V9 == 93
$ECC    $3133   SE       V1, #33         ; Skip if V1 == 51
$ECE    $88E4   ADD      V8, VE          ; V8 += VE, VF = carry
$ED0    $266D   CALL     $66D            ; Call subroutine at 66D
$ED2    $B935   JP       V0, $935        ; Jump to V0 + 935
$ED4    $9D4E   UNKNOWN  $9D4E           ; Unknown 9xxx instruction
$ED6    $7608   ADD      V6, #08         ; Add 8 to V6
$ED8    $8AE7   SUBN     VA, VE          ; VA = VE - VA, VF = !borrow
$EDA    $4C5C   SNE      VC, #5C         ; Skip if VC != 92
$EDC    $A252   LD       I, $252         ; Load 252 into I
$EDE    $88F2   AND      V8, VF          ; V8 &= VF
$EE0    $BBF4   JP       V0, $BF4        ; Jump to V0 + BF4
$EE2    $5D33   UNKNOWN  $5D33           ; Unknown 5xxx instruction
$EE4    $7DBC   ADD      VD, #BC         ; Add 188 to VD
$EE6    $35D4   SE       V5, #D4         ; Skip if V5 == 212
$EE8    $5F10   SE       VF, V1          ; Skip if VF == V1
$EEA    $D759   DRW      V7, V5, #9      ; Draw 9-byte sprite at V7, V5
$EEC    $D934   DRW      V9, V3, #4      ; Draw 4-byte sprite at V9, V3
$EEE    $2D08   CALL     $D08            ; Call subroutine at D08
$EF0    $9C19   UNKNOWN  $9C19           ; Unknown 9xxx instruction
$EF2    $66ED   LD       V6, #ED         ; Load 237 into V6
$EF4    $D519   DRW      V5, V1, #9      ; Draw 9-byte sprite at V5, V1
$EF6    $6F3C   LD       VF, #3C         ; Load 60 into VF
$EF8    $A927   LD       I, $927         ; Load 927 into I
$EFA    $D823   DRW      V8, V2, #3      ; Draw 3-byte sprite at V8, V2
$EFC    $6908   LD       V9, #08         ; Load 8 into V9
$EFE    $3F1B   SE       VF, #1B         ; Skip if VF == 27
$F00    $142F   JP       $42F            ; Jump to 42F
$F02    $DB64   DRW      VB, V6, #4      ; Draw 4-byte sprite at VB, V6
$F04    $057F   SYS      $57F            ; System call to 57F
$F06    $2468   CALL     $468            ; Call subroutine at 468
$F08    $0FD6   SYS      $FD6            ; System call to FD6
$F0A    $1DBA   JP       $DBA            ; Jump to DBA
$F0C    $7588   ADD      V5, #88         ; Add 136 to V5
$F0E    $9434   UNKNOWN  $9434           ; Unknown 9xxx instruction
$F10    $CB90   RND      VB, #90         ; VB = random & 90
$F12    $A17F   LD       I, $17F         ; Load 17F into I
$F14    $C9D9   RND      V9, #D9         ; V9 = random & D9
$F16    $2C0A   CALL     $C0A            ; Call subroutine at C0A
$F18    $A475   LD       I, $475         ; Load 475 into I
$F1A    $AC66   LD       I, $C66         ; Load C66 into I
$F1C    $E3D5   UNKNOWN  $E3D5           ; Unknown Exxx instruction
$F1E    $4EBE   SNE      VE, #BE         ; Skip if VE != 190
$F20    $8091   OR       V0, V9          ; V0 |= V9
$F22    $0A7F   SYS      $A7F            ; System call to A7F
$F24    $CDD4   RND      VD, #D4         ; VD = random & D4
$F26    $107E   JP       $07E            ; Jump to 07E
$F28    $0F64   SYS      $F64            ; System call to F64
$F2A    $27E5   CALL     $7E5            ; Call subroutine at 7E5
$F2C    $A2B9   LD       I, $2B9         ; Load 2B9 into I
$F2E    $5F49   UNKNOWN  $5F49           ; Unknown 5xxx instruction
$F30    $C7FF   RND      V7, #FF         ; V7 = random & FF
$F32    $7E3D   ADD      VE, #3D         ; Add 61 to VE
$F34    $20ED   CALL     $0ED            ; Call subroutine at 0ED
$F36    $2394   CALL     $394            ; Call subroutine at 394
$F38    $3909   SE       V9, #09         ; Skip if V9 == 9
$F3A    $B841   JP       V0, $841        ; Jump to V0 + 841
$F3C    $0270   SYS      $270            ; System call to 270
$F3E    $9C51   UNKNOWN  $9C51           ; Unknown 9xxx instruction
$F40    $3535   SE       V5, #35         ; Skip if V5 == 53
$F42    $5880   SE       V8, V8          ; Skip if V8 == V8
$F44    $4555   SNE      V5, #55         ; Skip if V5 != 85
$F46    $BE5A   JP       V0, $E5A        ; Jump to V0 + E5A
$F48    $3173   SE       V1, #73         ; Skip if V1 == 115
$F4A    $8537   SUBN     V5, V3          ; V5 = V3 - V5, VF = !borrow
$F4C    $46DC   SNE      V6, #DC         ; Skip if V6 != 220
$F4E    $DBF8   DRW      VB, VF, #8      ; Draw 8-byte sprite at VB, VF
$F50    $5F72   UNKNOWN  $5F72           ; Unknown 5xxx instruction
$F52    $0371   SYS      $371            ; System call to 371
$F54    $82E9   UNKNOWN  82E9            ; Unknown 8xxx instruction
$F56    $9C85   UNKNOWN  $9C85           ; Unknown 9xxx instruction
$F58    $A9EE   LD       I, $9EE         ; Load 9EE into I
$F5A    $AD41   LD       I, $D41         ; Load D41 into I
$F5C    $2BF2   CALL     $BF2            ; Call subroutine at BF2
$F5E    $E7C6   UNKNOWN  $E7C6           ; Unknown Exxx instruction
$F60    $BC84   JP       V0, $C84        ; Jump to V0 + C84
$F62    $0D74   SYS      $D74            ; System call to D74
$F64    $F852   UNKNOWN  F852            ; Unknown Fxxx instruction
$F66    $351E   SE       V5, #1E         ; Skip if V5 == 30
$F68    $99CB   UNKNOWN  $99CB           ; Unknown 9xxx instruction
$F6A    $909B   UNKNOWN  $909B           ; Unknown 9xxx instruction
$F6C    $81AE   SHL      V1              ; V1 <<= 1, VF = MSB
$F6E    $061C   SYS      $61C            ; System call to 61C
$F70    $E0DC   UNKNOWN  $E0DC           ; Unknown Exxx instruction
$F72    $480E   SNE      V8, #0E         ; Skip if V8 != 14
$F74    $1F88   JP       $F88            ; Jump to F88
$F76    $E03B   UNKNOWN  $E03B           ; Unknown Exxx instruction
$F78    $0C72   SYS      $C72            ; System call to C72
$F7A    $7B79   ADD      VB, #79         ; Add 121 to VB
$F7C    $2274   CALL     $274            ; Call subroutine at 274
$F7E    $FC95   UNKNOWN  FC95            ; Unknown Fxxx instruction
$F80    $FBF4   UNKNOWN  FBF4            ; Unknown Fxxx instruction
$F82    $5D71   UNKNOWN  $5D71           ; Unknown 5xxx instruction
$F84    $9214   UNKNOWN  $9214           ; Unknown 9xxx instruction
$F86    $907A   UNKNOWN  $907A           ; Unknown 9xxx instruction
$F88    $BA5A   JP       V0, $A5A        ; Jump to V0 + A5A
$F8A    $7722   ADD      V7, #22         ; Add 34 to V7
$F8C    $31AB   SE       V1, #AB         ; Skip if V1 == 171
$F8E    $5058   UNKNOWN  $5058           ; Unknown 5xxx instruction
$F90    $5EBB   UNKNOWN  $5EBB           ; Unknown 5xxx instruction
$F92    $B90D   JP       V0, $90D        ; Jump to V0 + 90D
$F94    $A1EF   LD       I, $1EF         ; Load 1EF into I
$F96    $E3C6   UNKNOWN  $E3C6           ; Unknown Exxx instruction
$F98    $FC39   UNKNOWN  FC39            ; Unknown Fxxx instruction
$F9A    $16D5   JP       $6D5            ; Jump to 6D5
$F9C    $ED3D   UNKNOWN  $ED3D           ; Unknown Exxx instruction
$F9E    $03A9   SYS      $3A9            ; System call to 3A9
$FA0    $A774   LD       I, $774         ; Load 774 into I
$FA2    $33CB   SE       V3, #CB         ; Skip if V3 == 203
$FA4    $3512   SE       V5, #12         ; Skip if V5 == 18
$FA6    $7244   ADD      V2, #44         ; Add 68 to V2
$FA8    $0D78   SYS      $D78            ; System call to D78
$FAA    $E1C1   UNKNOWN  $E1C1           ; Unknown Exxx instruction
$FAC    $AC45   LD       I, $C45         ; Load C45 into I
$FAE    $A339   LD       I, $339         ; Load 339 into I
$FB0    $D881   DRW      V8, V8, #1      ; Draw 1-byte sprite at V8, V8
$FB2    $1F20   JP       $F20            ; Jump to F20
$FB4    $E9EE   UNKNOWN  $E9EE           ; Unknown Exxx instruction
$FB6    $77DB   ADD      V7, #DB         ; Add 219 to V7
$FB8    $0598   SYS      $598            ; System call to 598
$FBA    $9F35   UNKNOWN  $9F35           ; Unknown 9xxx instruction
$FBC    $779B   ADD      V7, #9B         ; Add 155 to V7
$FBE    $FA9C   UNKNOWN  FA9C            ; Unknown Fxxx instruction
$FC0    $5707   UNKNOWN  $5707           ; Unknown 5xxx instruction
$FC2    $3F04   SE       VF, #04         ; Skip if VF == 4
$FC4    $4085   SNE      V0, #85         ; Skip if V0 != 133
$FC6    $63CD   LD       V3, #CD         ; Load 205 into V3
$FC8    $EAC7   UNKNOWN  $EAC7           ; Unknown Exxx instruction
$FCA    $4270   SNE      V2, #70         ; Skip if V2 != 112
$FCC    $0021   SYS      $021            ; System call to 021
$FCE    $E258   UNKNOWN  $E258           ; Unknown Exxx instruction
$FD0    $A50C   LD       I, $50C         ; Load 50C into I
$FD2    $80B2   AND      V0, VB          ; V0 &= VB
$FD4    $A150   LD       I, $150         ; Load 150 into I
$FD6    $6152   LD       V1, #52         ; Load 82 into V1
$FD8    $73E9   ADD      V3, #E9         ; Add 233 to V3
$FDA    $7287   ADD      V2, #87         ; Add 135 to V2
$FDC    $1062   JP       $062            ; Jump to 062
$FDE    $A68E   LD       I, $68E         ; Load 68E into I
$FE0    $D72D   DRW      V7, V2, #D      ; Draw 13-byte sprite at V7, V2
$FE2    $1BEB   JP       $BEB            ; Jump to BEB
$FE4    $6695   LD       V6, #95         ; Load 149 into V6
$FE6    $1BD5   JP       $BD5            ; Jump to BD5
$FE8    $F6EE   UNKNOWN  F6EE            ; Unknown Fxxx instruction
$FEA    $C5DD   RND      V5, #DD         ; V5 = random & DD
$FEC    $1B53   JP       $B53            ; Jump to B53
$FEE    $4BD6   SNE      VB, #D6         ; Skip if VB != 214
$FF0    $EE35   UNKNOWN  $EE35           ; Unknown Exxx instruction
$FF2    $C48C   RND      V4, #8C         ; V4 = random & 8C
$FF4    $005D   SYS      $05D            ; System call to 05D
$FF6    $87A3   XOR      V7, VA          ; V7 ^= VA
$FF8    $9776   UNKNOWN  $9776           ; Unknown 9xxx instruction
$FFA    $DA22   DRW      VA, V2, #2      ; Draw 2-byte sprite at VA, V2
$FFC    $2D1E   CALL     $D1E            ; Call subroutine at D1E
$FFE    $55CD   UNKNOWN  $55CD           ; Unknown 5xxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 441 (24.6%)
  JP      : 269 (15.0%)
  LD      : 259 (14.5%)
  ADD     : 127 ( 7.1%)
  DRW     : 122 ( 6.8%)
  SE      : 109 ( 6.1%)
  SNE     : 106 ( 5.9%)
  RND     : 102 ( 5.7%)
  CALL    : 101 ( 5.6%)
  SYS     :  96 ( 5.4%)
  SHL     :  14 ( 0.8%)
  SUBN    :  10 ( 0.6%)
  XOR     :   9 ( 0.5%)
  SUB     :   8 ( 0.4%)
  OR      :   8 ( 0.4%)
  AND     :   6 ( 0.3%)
  SHR     :   3 ( 0.2%)
  SKNP    :   2 ( 0.1%)

Memory Operations: 386 (21.5%)
Arithmetic Operations: 168 (9.4%)
