
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B3251D01_I33651_C1001_4e9186b28412.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 3251
Instance: 33651
Direction: ascending
Final Array: [0, 1, 6, 20, 35, 66, 82, 145]
Operations: R:0 W:1 C:47 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 109
Sort Array References:
  $22A: LD I, $A15 ; Load A15 into I
  $23A: LD I, $775 ; Load 775 into I
  $23C: LD I, $750 ; Load 750 into I
  $258: LD I, $0C3 ; Load 0C3 into I
  $25C: LD I, $E56 ; Load E56 into I
  $2A2: LD I, $52F ; Load 52F into I
  $2C0: LD I, $B3F ; Load B3F into I
  $314: LD I, $40A ; Load 40A into I
  $31C: LD I, $C37 ; Load C37 into I
  $334: LD I, $700 ; Load 700 into I
  $346: LD I, $300 ; Load 300 into I
  $354: LD I, $06B ; Load 06B into I
  $36A: LD I, $36F ; Load 36F into I
  $384: LD I, $8D8 ; Load 8D8 into I
  $400: LD I, $676 ; Load 676 into I
  $402: LD I, $98E ; Load 98E into I
  $43C: LD I, $AFD ; Load AFD into I
  $444: LD I, $5A9 ; Load 5A9 into I
  $448: LD I, $932 ; Load 932 into I
  $450: LD I, $998 ; Load 998 into I
  $4A8: LD I, $8E4 ; Load 8E4 into I
  $4BA: LD I, $231 ; Load 231 into I
  $50E: LD I, $F23 ; Load F23 into I
  $556: LD [I], V2 ; Store V0-V2 at I
  $5DA: LD I, $FDB ; Load FDB into I
  $5EA: LD I, $7E1 ; Load 7E1 into I
  $5FC: LD I, $9D8 ; Load 9D8 into I
  $604: LD I, $DEC ; Load DEC into I
  $622: LD I, $75F ; Load 75F into I
  $63A: LD I, $007 ; Load 007 into I
  $650: LD I, $9B2 ; Load 9B2 into I
  $66A: LD I, $5BF ; Load 5BF into I
  $670: LD I, $A35 ; Load A35 into I
  $688: LD I, $5AF ; Load 5AF into I
  $6B6: LD I, $4BE ; Load 4BE into I
  $6F4: LD I, $A33 ; Load A33 into I
  $72C: LD I, $DF0 ; Load DF0 into I
  $738: LD I, $730 ; Load 730 into I
  $766: LD I, $DA4 ; Load DA4 into I
  $77E: LD I, $B24 ; Load B24 into I
  $788: LD I, $3E2 ; Load 3E2 into I
  $79C: LD I, $A9F ; Load A9F into I
  $7F6: LD I, $2A3 ; Load 2A3 into I
  $860: LD I, $515 ; Load 515 into I
  $868: LD I, $C18 ; Load C18 into I
  $87A: LD I, $DAA ; Load DAA into I
  $87C: LD I, $140 ; Load 140 into I
  $89A: LD I, $A13 ; Load A13 into I
  $8AC: LD I, $A53 ; Load A53 into I
  $8B6: LD I, $824 ; Load 824 into I
  $8DC: LD I, $E25 ; Load E25 into I
  $8E0: LD I, $FA6 ; Load FA6 into I
  $93E: LD I, $A58 ; Load A58 into I
  $940: LD I, $2F8 ; Load 2F8 into I
  $944: LD I, $1F1 ; Load 1F1 into I
  $952: ADD I, VD ; I ADDRESS MANIPULATION
  $978: LD I, $8D4 ; Load 8D4 into I
  $97E: LD I, $70B ; Load 70B into I
  $9F2: LD I, $B8C ; Load B8C into I
  $A04: LD I, $16A ; Load 16A into I
  $A22: LD I, $BA2 ; Load BA2 into I
  $A30: LD I, $1F0 ; Load 1F0 into I
  $A96: LD I, $6D2 ; Load 6D2 into I
  $AB0: LD I, $418 ; Load 418 into I
  $B26: ADD I, VE ; I ADDRESS MANIPULATION
  $B56: LD I, $73F ; Load 73F into I
  $B7E: LD I, $5F3 ; Load 5F3 into I
  $B90: LD I, $A45 ; Load A45 into I
  $BB6: LD I, $356 ; Load 356 into I
  $BBE: LD I, $630 ; Load 630 into I
  $BC8: LD I, $376 ; Load 376 into I
  $BCA: LD I, $BC5 ; Load BC5 into I
  $BDA: LD I, $196 ; Load 196 into I
  $C26: LD V1, [I] ; Load V0-V1 from I
  $C2E: LD I, $86A ; Load 86A into I
  $C5C: LD I, $812 ; Load 812 into I
  $C60: LD I, $3EB ; Load 3EB into I
  $CEC: LD I, $742 ; Load 742 into I
  $D20: LD I, $BA0 ; Load BA0 into I
  $D26: LD I, $EDC ; Load EDC into I
  $D3E: LD I, $592 ; Load 592 into I
  $D4C: LD I, $D0F ; Load D0F into I
  $D54: LD I, $962 ; Load 962 into I
  $D6A: LD VA, [I] ; Load V0-VA from I
  $D70: LD I, $3E1 ; Load 3E1 into I
  $D78: LD I, $D29 ; Load D29 into I
  $D7A: LD I, $9B4 ; Load 9B4 into I
  $D82: LD I, $1F4 ; Load 1F4 into I
  $D94: LD I, $D44 ; Load D44 into I
  $D96: LD I, $EB0 ; Load EB0 into I
  $DCC: LD I, $37F ; Load 37F into I
  $DF6: LD I, $CF2 ; Load CF2 into I
  $E0C: LD I, $D29 ; Load D29 into I
  $E42: LD I, $419 ; Load 419 into I
  $E44: LD I, $25B ; Load 25B into I
  $E64: LD I, $414 ; Load 414 into I
  $E68: LD I, $6D5 ; Load 6D5 into I
  $E80: LD I, $A0B ; Load A0B into I
  $E8C: LD I, $41B ; Load 41B into I
  $EA8: LD I, $FCF ; Load FCF into I
  $EB6: LD I, $64A ; Load 64A into I
  $EB8: LD I, $A01 ; Load A01 into I
  $EDE: LD I, $21F ; Load 21F into I
  $EF2: LD I, $505 ; Load 505 into I
  $F0E: LD I, $866 ; Load 866 into I
  $F80: LD I, $5AB ; Load 5AB into I
  $F92: LD I, $C53 ; Load C53 into I
  $FCC: LD I, $79E ; Load 79E into I
  $FE8: LD I, $93D ; Load 93D into I

CONTROL FLOW ANALYSIS:
Jumps: 226
Calls: 118
Branches: 246
Loops: 132
Loop Structures:
  $290 -> $034 (backward jump)
  $2A8 -> $07C (backward jump)
  $396 -> $2B3 (backward jump)
  $39C -> $011 (backward jump)
  $434 -> $308 (backward jump)
  $458 -> $256 (backward jump)
  $4A0 -> $1CC (backward jump)
  $4CA -> $232 (backward jump)
  $4D0 -> $27D (backward jump)
  $4D2 -> $343 (backward jump)
  $4DE -> $3A2 (backward jump)
  $4F8 -> $0FB (backward jump)
  $514 -> $460 (backward jump)
  $534 -> $3FE (backward jump)
  $53A -> $21E (backward jump)
  $544 -> $164 (backward jump)
  $57A -> $52C (backward jump)
  $5B4 -> $080 (backward jump)
  $5BE -> $098 (backward jump)
  $5E4 -> $20C (backward jump)
  $612 -> $2AE (backward jump)
  $664 -> $2F2 (backward jump)
  $6B2 -> $329 (backward jump)
  $6C8 -> $3ED (backward jump)
  $708 -> $5AB (backward jump)
  $714 -> $47C (backward jump)
  $73A -> $72C (backward jump)
  $76C -> $1CB (backward jump)
  $778 -> $564 (backward jump)
  $7A4 -> $1F0 (backward jump)
  $7A6 -> $3B2 (backward jump)
  $7AE -> $6A9 (backward jump)
  $7E4 -> $588 (backward jump)
  $7F8 -> $549 (backward jump)
  $804 -> $1C9 (backward jump)
  $80C -> $70A (backward jump)
  $89C -> $0E7 (backward jump)
  $8D8 -> $32E (backward jump)
  $8F4 -> $6B6 (backward jump)
  $910 -> $5C5 (backward jump)
  $942 -> $7F4 (backward jump)
  $958 -> $262 (backward jump)
  $95C -> $31F (backward jump)
  $96A -> $1B5 (backward jump)
  $9D8 -> $354 (backward jump)
  $A42 -> $723 (backward jump)
  $A46 -> $886 (backward jump)
  $A58 -> $23F (backward jump)
  $A5A -> $763 (backward jump)
  $A5C -> $556 (backward jump)
  $A7C -> $245 (backward jump)
  $A84 -> $0F9 (backward jump)
  $A88 -> $2D1 (backward jump)
  $A98 -> $2B7 (backward jump)
  $AB8 -> $313 (backward jump)
  $ABE -> $642 (backward jump)
  $AD4 -> $93F (backward jump)
  $ADC -> $A69 (backward jump)
  $AE0 -> $827 (backward jump)
  $AFA -> $6B6 (backward jump)
  $B16 -> $895 (backward jump)
  $B3E -> $563 (backward jump)
  $B42 -> $674 (backward jump)
  $B5A -> $8F5 (backward jump)
  $B68 -> $8DA (backward jump)
  $B6C -> $838 (backward jump)
  $BA2 -> $53E (backward jump)
  $BB8 -> $A41 (backward jump)
  $BE4 -> $0C7 (backward jump)
  $C08 -> $7C8 (backward jump)
  $C12 -> $0A1 (backward jump)
  $C2A -> $5EB (backward jump)
  $C58 -> $C09 (backward jump)
  $C62 -> $ADA (backward jump)
  $C76 -> $29A (backward jump)
  $C7C -> $A29 (backward jump)
  $C86 -> $B8D (backward jump)
  $C8E -> $8D6 (backward jump)
  $C90 -> $15C (backward jump)
  $CA0 -> $A2F (backward jump)
  $CB6 -> $C48 (backward jump)
  $CBE -> $654 (backward jump)
  $CC4 -> $4FD (backward jump)
  $CEE -> $C77 (backward jump)
  $CFA -> $7CD (backward jump)
  $D1A -> $456 (backward jump)
  $D1C -> $868 (backward jump)
  $D22 -> $07A (backward jump)
  $D24 -> $692 (backward jump)
  $D2A -> $250 (backward jump)
  $D36 -> $320 (backward jump)
  $D46 -> $2EB (backward jump)
  $D4A -> $9FB (backward jump)
  $D56 -> $90B (backward jump)
  $D80 -> $9B9 (backward jump)
  $DA0 -> $7E6 (backward jump)
  $DAA -> $D9F (backward jump)
  $DBC -> $55C (backward jump)
  $DBE -> $85B (backward jump)
  $DC4 -> $1F1 (backward jump)
  $DD4 -> $96A (backward jump)
  $DE8 -> $767 (backward jump)
  $DEE -> $805 (backward jump)
  $E02 -> $A35 (backward jump)
  $E2A -> $99C (backward jump)
  $E36 -> $73A (backward jump)
  $E52 -> $64E (backward jump)
  $E66 -> $860 (backward jump)
  $E6E -> $3BA (backward jump)
  $E98 -> $400 (backward jump)
  $E9A -> $869 (backward jump)
  $EAA -> $2E5 (backward jump)
  $EB0 -> $6A1 (backward jump)
  $ECE -> $A0A (backward jump)
  $ED8 -> $374 (backward jump)
  $EF8 -> $91A (backward jump)
  $F02 -> $49D (backward jump)
  $F04 -> $3E5 (backward jump)
  $F08 -> $824 (backward jump)
  $F36 -> $75D (backward jump)
  $F40 -> $9C9 (backward jump)
  $F52 -> $832 (backward jump)
  $F58 -> $532 (backward jump)
  $F60 -> $663 (backward jump)
  $F64 -> $526 (backward jump)
  $F6C -> $CF8 (backward jump)
  $F82 -> $CE5 (backward jump)
  $F86 -> $79B (backward jump)
  $FA2 -> $F67 (backward jump)
  $FD0 -> $2D1 (backward jump)
  $FDE -> $339 (backward jump)
  $FF2 -> $7A1 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $E91B   UNKNOWN  $E91B           ; Unknown Exxx instruction
$202    $2277   CALL     $277            ; Call subroutine at 277
$204    $4899   SNE      V8, #99         ; Skip if V8 != 153
$206    $282C   CALL     $82C            ; Call subroutine at 82C
$208    $786C   ADD      V8, #6C         ; Add 108 to V8
$20A    $3441   SE       V4, #41         ; Skip if V4 == 65
$20C    $8347   SUBN     V3, V4          ; V3 = V4 - V3, VF = !borrow
$20E    $DEB2   DRW      VE, VB, #2      ; Draw 2-byte sprite at VE, VB
$210    $F0B9   UNKNOWN  F0B9            ; Unknown Fxxx instruction
$212    $93BF   UNKNOWN  $93BF           ; Unknown 9xxx instruction
$214    $1B69   JP       $B69            ; Jump to B69
$216    $62F2   LD       V2, #F2         ; Load 242 into V2
$218    $135F   JP       $35F            ; Jump to 35F
$21A    $900B   UNKNOWN  $900B           ; Unknown 9xxx instruction
$21C    $E4D0   UNKNOWN  $E4D0           ; Unknown Exxx instruction
$21E    $B4F2   JP       V0, $4F2        ; Jump to V0 + 4F2
$220    $4299   SNE      V2, #99         ; Skip if V2 != 153
$222    $73CC   ADD      V3, #CC         ; Add 204 to V3
$224    $C92E   RND      V9, #2E         ; V9 = random & 2E
$226    $DB52   DRW      VB, V5, #2      ; Draw 2-byte sprite at VB, V5
$228    $187A   JP       $87A            ; Jump to 87A
$22A    $AA15   LD       I, $A15         ; Load A15 into I
$22C    $0980   SYS      $980            ; System call to 980
$22E    $763C   ADD      V6, #3C         ; Add 60 to V6
$230    $E076   UNKNOWN  $E076           ; Unknown Exxx instruction
$232    $71FA   ADD      V1, #FA         ; Add 250 to V1
$234    $2ECE   CALL     $ECE            ; Call subroutine at ECE
$236    $1B4B   JP       $B4B            ; Jump to B4B
$238    $E025   UNKNOWN  $E025           ; Unknown Exxx instruction
$23A    $A775   LD       I, $775         ; Load 775 into I
$23C    $A750   LD       I, $750         ; Load 750 into I
$23E    $306A   SE       V0, #6A         ; Skip if V0 == 106
$240    $D376   DRW      V3, V7, #6      ; Draw 6-byte sprite at V3, V7
$242    $57EB   UNKNOWN  $57EB           ; Unknown 5xxx instruction
$244    $E706   UNKNOWN  $E706           ; Unknown Exxx instruction
$246    $7B5E   ADD      VB, #5E         ; Add 94 to VB
$248    $C870   RND      V8, #70         ; V8 = random & 70
$24A    $FC6E   UNKNOWN  FC6E            ; Unknown Fxxx instruction
$24C    $9357   UNKNOWN  $9357           ; Unknown 9xxx instruction
$24E    $E974   UNKNOWN  $E974           ; Unknown Exxx instruction
$250    $4DCB   SNE      VD, #CB         ; Skip if VD != 203
$252    $809E   SHL      V0              ; V0 <<= 1, VF = MSB
$254    $7E62   ADD      VE, #62         ; Add 98 to VE
$256    $1D71   JP       $D71            ; Jump to D71
$258    $A0C3   LD       I, $0C3         ; Load 0C3 into I
$25A    $4F77   SNE      VF, #77         ; Skip if VF != 119
$25C    $AE56   LD       I, $E56         ; Load E56 into I
$25E    $C58F   RND      V5, #8F         ; V5 = random & 8F
$260    $4F59   SNE      VF, #59         ; Skip if VF != 89
$262    $89E3   XOR      V9, VE          ; V9 ^= VE
$264    $F08E   UNKNOWN  F08E            ; Unknown Fxxx instruction
$266    $E507   UNKNOWN  $E507           ; Unknown Exxx instruction
$268    $F278   UNKNOWN  F278            ; Unknown Fxxx instruction
$26A    $B817   JP       V0, $817        ; Jump to V0 + 817
$26C    $D155   DRW      V1, V5, #5      ; Draw 5-byte sprite at V1, V5
$26E    $323A   SE       V2, #3A         ; Skip if V2 == 58
$270    $4EB2   SNE      VE, #B2         ; Skip if VE != 178
$272    $0BBD   SYS      $BBD            ; System call to BBD
$274    $3F71   SE       VF, #71         ; Skip if VF == 113
$276    $F07B   UNKNOWN  F07B            ; Unknown Fxxx instruction
$278    $0F0C   SYS      $F0C            ; System call to F0C
$27A    $6038   LD       V0, #38         ; Load 56 into V0
$27C    $0EC2   SYS      $EC2            ; System call to EC2
$27E    $2D34   CALL     $D34            ; Call subroutine at D34
$280    $E0A4   UNKNOWN  $E0A4           ; Unknown Exxx instruction
$282    $7EAC   ADD      VE, #AC         ; Add 172 to VE
$284    $5FFB   UNKNOWN  $5FFB           ; Unknown 5xxx instruction
$286    $C517   RND      V5, #17         ; V5 = random & 17
$288    $051D   SYS      $51D            ; System call to 51D
$28A    $40F6   SNE      V0, #F6         ; Skip if V0 != 246
$28C    $3782   SE       V7, #82         ; Skip if V7 == 130
$28E    $65CD   LD       V5, #CD         ; Load 205 into V5
$290    $1034   JP       $034            ; Jump to 034
$292    $EC56   UNKNOWN  $EC56           ; Unknown Exxx instruction
$294    $E5F6   UNKNOWN  $E5F6           ; Unknown Exxx instruction
$296    $234A   CALL     $34A            ; Call subroutine at 34A
$298    $1E36   JP       $E36            ; Jump to E36
$29A    $9C94   UNKNOWN  $9C94           ; Unknown 9xxx instruction
$29C    $8BDB   UNKNOWN  8BDB            ; Unknown 8xxx instruction
$29E    $2BEE   CALL     $BEE            ; Call subroutine at BEE
$2A0    $26D0   CALL     $6D0            ; Call subroutine at 6D0
$2A2    $A52F   LD       I, $52F         ; Load 52F into I
$2A4    $2150   CALL     $150            ; Call subroutine at 150
$2A6    $C703   RND      V7, #03         ; V7 = random & 03
$2A8    $107C   JP       $07C            ; Jump to 07C
$2AA    $8111   OR       V1, V1          ; V1 |= V1
$2AC    $3BDF   SE       VB, #DF         ; Skip if VB == 223
$2AE    $CAD3   RND      VA, #D3         ; VA = random & D3
$2B0    $CE1C   RND      VE, #1C         ; VE = random & 1C
$2B2    $25DC   CALL     $5DC            ; Call subroutine at 5DC
$2B4    $8477   SUBN     V4, V7          ; V4 = V7 - V4, VF = !borrow
$2B6    $5A23   UNKNOWN  $5A23           ; Unknown 5xxx instruction
$2B8    $D7E8   DRW      V7, VE, #8      ; Draw 8-byte sprite at V7, VE
$2BA    $8573   XOR      V5, V7          ; V5 ^= V7
$2BC    $BCFC   JP       V0, $CFC        ; Jump to V0 + CFC
$2BE    $4ED1   SNE      VE, #D1         ; Skip if VE != 209
$2C0    $AB3F   LD       I, $B3F         ; Load B3F into I
$2C2    $70A6   ADD      V0, #A6         ; Add 166 to V0
$2C4    $0C2F   SYS      $C2F            ; System call to C2F
$2C6    $3730   SE       V7, #30         ; Skip if V7 == 48
$2C8    $E9ED   UNKNOWN  $E9ED           ; Unknown Exxx instruction
$2CA    $EEAB   UNKNOWN  $EEAB           ; Unknown Exxx instruction
$2CC    $1529   JP       $529            ; Jump to 529
$2CE    $3035   SE       V0, #35         ; Skip if V0 == 53
$2D0    $82C8   UNKNOWN  82C8            ; Unknown 8xxx instruction
$2D2    $5744   UNKNOWN  $5744           ; Unknown 5xxx instruction
$2D4    $7761   ADD      V7, #61         ; Add 97 to V7
$2D6    $EA3B   UNKNOWN  $EA3B           ; Unknown Exxx instruction
$2D8    $66BE   LD       V6, #BE         ; Load 190 into V6
$2DA    $3268   SE       V2, #68         ; Skip if V2 == 104
$2DC    $C396   RND      V3, #96         ; V3 = random & 96
$2DE    $9CF2   UNKNOWN  $9CF2           ; Unknown 9xxx instruction
$2E0    $4CCF   SNE      VC, #CF         ; Skip if VC != 207
$2E2    $BF36   JP       V0, $F36        ; Jump to V0 + F36
$2E4    $63E0   LD       V3, #E0         ; Load 224 into V3
$2E6    $4D92   SNE      VD, #92         ; Skip if VD != 146
$2E8    $B79E   JP       V0, $79E        ; Jump to V0 + 79E
$2EA    $CD38   RND      VD, #38         ; VD = random & 38
$2EC    $7860   ADD      V8, #60         ; Add 96 to V8
$2EE    $5ACB   UNKNOWN  $5ACB           ; Unknown 5xxx instruction
$2F0    $D8C0   DRW      V8, VC, #0      ; Draw 0-byte sprite at V8, VC
$2F2    $742A   ADD      V4, #2A         ; Add 42 to V4
$2F4    $16AF   JP       $6AF            ; Jump to 6AF
$2F6    $DBD4   DRW      VB, VD, #4      ; Draw 4-byte sprite at VB, VD
$2F8    $0A57   SYS      $A57            ; System call to A57
$2FA    $28ED   CALL     $8ED            ; Call subroutine at 8ED
$2FC    $F1A2   UNKNOWN  F1A2            ; Unknown Fxxx instruction
$2FE    $2814   CALL     $814            ; Call subroutine at 814
$300    $0001   SYS      $001            ; System call to 001
$302    $0614   SYS      $614            ; System call to 614
$304    $2342   CALL     $342            ; Call subroutine at 342
$306    $5291   UNKNOWN  $5291           ; Unknown 5xxx instruction
$308    $624D   LD       V2, #4D         ; Load 77 into V2
$30A    $31C4   SE       V1, #C4         ; Skip if V1 == 196
$30C    $07E4   SYS      $7E4            ; System call to 7E4
$30E    $1C5F   JP       $C5F            ; Jump to C5F
$310    $69EB   LD       V9, #EB         ; Load 235 into V9
$312    $C5CA   RND      V5, #CA         ; V5 = random & CA
$314    $A40A   LD       I, $40A         ; Load 40A into I
$316    $6B20   LD       VB, #20         ; Load 32 into VB
$318    $86D1   OR       V6, VD          ; V6 |= VD
$31A    $B330   JP       V0, $330        ; Jump to V0 + 330
$31C    $AC37   LD       I, $C37         ; Load C37 into I
$31E    $3116   SE       V1, #16         ; Skip if V1 == 22
$320    $F8E5   UNKNOWN  F8E5            ; Unknown Fxxx instruction
$322    $1D72   JP       $D72            ; Jump to D72
$324    $C325   RND      V3, #25         ; V3 = random & 25
$326    $66A7   LD       V6, #A7         ; Load 167 into V6
$328    $2FED   CALL     $FED            ; Call subroutine at FED
$32A    $9EEB   UNKNOWN  $9EEB           ; Unknown 9xxx instruction
$32C    $C6E9   RND      V6, #E9         ; V6 = random & E9
$32E    $3404   SE       V4, #04         ; Skip if V4 == 4
$330    $CB5E   RND      VB, #5E         ; VB = random & 5E
$332    $71A9   ADD      V1, #A9         ; Add 169 to V1
$334    $A700   LD       I, $700         ; Load 700 into I
$336    $48B8   SNE      V8, #B8         ; Skip if V8 != 184
$338    $5273   UNKNOWN  $5273           ; Unknown 5xxx instruction
$33A    $FA18   LD       ST, VA          ; Sound timer = VA
$33C    $E4FC   UNKNOWN  $E4FC           ; Unknown Exxx instruction
$33E    $D179   DRW      V1, V7, #9      ; Draw 9-byte sprite at V1, V7
$340    $0F71   SYS      $F71            ; System call to F71
$342    $C1F1   RND      V1, #F1         ; V1 = random & F1
$344    $D94E   DRW      V9, V4, #E      ; Draw 14-byte sprite at V9, V4
$346    $A300   LD       I, $300         ; Load 300 into I
$348    $4B8A   SNE      VB, #8A         ; Skip if VB != 138
$34A    $E602   UNKNOWN  $E602           ; Unknown Exxx instruction
$34C    $1B49   JP       $B49            ; Jump to B49
$34E    $8B81   OR       VB, V8          ; VB |= V8
$350    $2DBC   CALL     $DBC            ; Call subroutine at DBC
$352    $55E1   UNKNOWN  $55E1           ; Unknown 5xxx instruction
$354    $A06B   LD       I, $06B         ; Load 06B into I
$356    $5286   UNKNOWN  $5286           ; Unknown 5xxx instruction
$358    $989D   UNKNOWN  $989D           ; Unknown 9xxx instruction
$35A    $BA5B   JP       V0, $A5B        ; Jump to V0 + A5B
$35C    $7460   ADD      V4, #60         ; Add 96 to V4
$35E    $17DA   JP       $7DA            ; Jump to 7DA
$360    $899B   UNKNOWN  899B            ; Unknown 8xxx instruction
$362    $6882   LD       V8, #82         ; Load 130 into V8
$364    $84DF   UNKNOWN  84DF            ; Unknown 8xxx instruction
$366    $9EAC   UNKNOWN  $9EAC           ; Unknown 9xxx instruction
$368    $7155   ADD      V1, #55         ; Add 85 to V1
$36A    $A36F   LD       I, $36F         ; Load 36F into I
$36C    $1639   JP       $639            ; Jump to 639
$36E    $D29D   DRW      V2, V9, #D      ; Draw 13-byte sprite at V2, V9
$370    $634C   LD       V3, #4C         ; Load 76 into V3
$372    $9FDD   UNKNOWN  $9FDD           ; Unknown 9xxx instruction
$374    $6DF5   LD       VD, #F5         ; Load 245 into VD
$376    $9148   UNKNOWN  $9148           ; Unknown 9xxx instruction
$378    $0EA8   SYS      $EA8            ; System call to EA8
$37A    $9E55   UNKNOWN  $9E55           ; Unknown 9xxx instruction
$37C    $1F81   JP       $F81            ; Jump to F81
$37E    $FEA7   UNKNOWN  FEA7            ; Unknown Fxxx instruction
$380    $E1B0   UNKNOWN  $E1B0           ; Unknown Exxx instruction
$382    $C8A4   RND      V8, #A4         ; V8 = random & A4
$384    $A8D8   LD       I, $8D8         ; Load 8D8 into I
$386    $D158   DRW      V1, V5, #8      ; Draw 8-byte sprite at V1, V5
$388    $DB65   DRW      VB, V6, #5      ; Draw 5-byte sprite at VB, V6
$38A    $C0F8   RND      V0, #F8         ; V0 = random & F8
$38C    $E25C   UNKNOWN  $E25C           ; Unknown Exxx instruction
$38E    $C076   RND      V0, #76         ; V0 = random & 76
$390    $BF2F   JP       V0, $F2F        ; Jump to V0 + F2F
$392    $549B   UNKNOWN  $549B           ; Unknown 5xxx instruction
$394    $6072   LD       V0, #72         ; Load 114 into V0
$396    $B2B3   JP       V0, $2B3        ; Jump to V0 + 2B3
$398    $532A   UNKNOWN  $532A           ; Unknown 5xxx instruction
$39A    $2865   CALL     $865            ; Call subroutine at 865
$39C    $B011   JP       V0, $011        ; Jump to V0 + 011
$39E    $323F   SE       V2, #3F         ; Skip if V2 == 63
$3A0    $C852   RND      V8, #52         ; V8 = random & 52
$3A2    $4AFB   SNE      VA, #FB         ; Skip if VA != 251
$3A4    $C294   RND      V2, #94         ; V2 = random & 94
$3A6    $7CC9   ADD      VC, #C9         ; Add 201 to VC
$3A8    $D555   DRW      V5, V5, #5      ; Draw 5-byte sprite at V5, V5
$3AA    $FE46   UNKNOWN  FE46            ; Unknown Fxxx instruction
$3AC    $4E01   SNE      VE, #01         ; Skip if VE != 1
$3AE    $8E10   LD       VE, V1          ; VE = V1
$3B0    $313C   SE       V1, #3C         ; Skip if V1 == 60
$3B2    $4339   SNE      V3, #39         ; Skip if V3 != 57
$3B4    $5BD0   SE       VB, VD          ; Skip if VB == VD
$3B6    $6F08   LD       VF, #08         ; Load 8 into VF
$3B8    $C632   RND      V6, #32         ; V6 = random & 32
$3BA    $6498   LD       V4, #98         ; Load 152 into V4
$3BC    $5494   UNKNOWN  $5494           ; Unknown 5xxx instruction
$3BE    $470E   SNE      V7, #0E         ; Skip if V7 != 14
$3C0    $29AD   CALL     $9AD            ; Call subroutine at 9AD
$3C2    $1D0E   JP       $D0E            ; Jump to D0E
$3C4    $9BE4   UNKNOWN  $9BE4           ; Unknown 9xxx instruction
$3C6    $FD36   UNKNOWN  FD36            ; Unknown Fxxx instruction
$3C8    $0935   SYS      $935            ; System call to 935
$3CA    $5A3D   UNKNOWN  $5A3D           ; Unknown 5xxx instruction
$3CC    $84D3   XOR      V4, VD          ; V4 ^= VD
$3CE    $9F8D   UNKNOWN  $9F8D           ; Unknown 9xxx instruction
$3D0    $9E32   UNKNOWN  $9E32           ; Unknown 9xxx instruction
$3D2    $CC42   RND      VC, #42         ; VC = random & 42
$3D4    $3250   SE       V2, #50         ; Skip if V2 == 80
$3D6    $E29A   UNKNOWN  $E29A           ; Unknown Exxx instruction
$3D8    $FD63   UNKNOWN  FD63            ; Unknown Fxxx instruction
$3DA    $34C6   SE       V4, #C6         ; Skip if V4 == 198
$3DC    $C948   RND      V9, #48         ; V9 = random & 48
$3DE    $B5C8   JP       V0, $5C8        ; Jump to V0 + 5C8
$3E0    $62DD   LD       V2, #DD         ; Load 221 into V2
$3E2    $1BA2   JP       $BA2            ; Jump to BA2
$3E4    $3625   SE       V6, #25         ; Skip if V6 == 37
$3E6    $6825   LD       V8, #25         ; Load 37 into V8
$3E8    $E1E7   UNKNOWN  $E1E7           ; Unknown Exxx instruction
$3EA    $CF87   RND      VF, #87         ; VF = random & 87
$3EC    $3738   SE       V7, #38         ; Skip if V7 == 56
$3EE    $9450   SNE      V4, V5          ; Skip if V4 != V5
$3F0    $5F59   UNKNOWN  $5F59           ; Unknown 5xxx instruction
$3F2    $7C13   ADD      VC, #13         ; Add 19 to VC
$3F4    $5A57   UNKNOWN  $5A57           ; Unknown 5xxx instruction
$3F6    $54AF   UNKNOWN  $54AF           ; Unknown 5xxx instruction
$3F8    $FEF8   UNKNOWN  FEF8            ; Unknown Fxxx instruction
$3FA    $C0FF   RND      V0, #FF         ; V0 = random & FF
$3FC    $C63C   RND      V6, #3C         ; V6 = random & 3C
$3FE    $4382   SNE      V3, #82         ; Skip if V3 != 130
$400    $A676   LD       I, $676         ; Load 676 into I
$402    $A98E   LD       I, $98E         ; Load 98E into I
$404    $3A4E   SE       VA, #4E         ; Skip if VA == 78
$406    $CA9D   RND      VA, #9D         ; VA = random & 9D
$408    $26E4   CALL     $6E4            ; Call subroutine at 6E4
$40A    $8DD1   OR       VD, VD          ; VD |= VD
$40C    $F1DD   UNKNOWN  F1DD            ; Unknown Fxxx instruction
$40E    $8BD1   OR       VB, VD          ; VB |= VD
$410    $374B   SE       V7, #4B         ; Skip if V7 == 75
$412    $B5F6   JP       V0, $5F6        ; Jump to V0 + 5F6
$414    $3499   SE       V4, #99         ; Skip if V4 == 153
$416    $CFEA   RND      VF, #EA         ; VF = random & EA
$418    $4F5B   SNE      VF, #5B         ; Skip if VF != 91
$41A    $811D   UNKNOWN  811D            ; Unknown 8xxx instruction
$41C    $9251   UNKNOWN  $9251           ; Unknown 9xxx instruction
$41E    $7FD5   ADD      VF, #D5         ; Add 213 to VF
$420    $4D41   SNE      VD, #41         ; Skip if VD != 65
$422    $4AF9   SNE      VA, #F9         ; Skip if VA != 249
$424    $30F5   SE       V0, #F5         ; Skip if V0 == 245
$426    $ED30   UNKNOWN  $ED30           ; Unknown Exxx instruction
$428    $DA3F   DRW      VA, V3, #F      ; Draw 15-byte sprite at VA, V3
$42A    $656C   LD       V5, #6C         ; Load 108 into V5
$42C    $1C31   JP       $C31            ; Jump to C31
$42E    $2339   CALL     $339            ; Call subroutine at 339
$430    $7FEE   ADD      VF, #EE         ; Add 238 to VF
$432    $CFB9   RND      VF, #B9         ; VF = random & B9
$434    $B308   JP       V0, $308        ; Jump to V0 + 308
$436    $2640   CALL     $640            ; Call subroutine at 640
$438    $9601   UNKNOWN  $9601           ; Unknown 9xxx instruction
$43A    $75B8   ADD      V5, #B8         ; Add 184 to V5
$43C    $AAFD   LD       I, $AFD         ; Load AFD into I
$43E    $D6E3   DRW      V6, VE, #3      ; Draw 3-byte sprite at V6, VE
$440    $1A8F   JP       $A8F            ; Jump to A8F
$442    $6353   LD       V3, #53         ; Load 83 into V3
$444    $A5A9   LD       I, $5A9         ; Load 5A9 into I
$446    $9C62   UNKNOWN  $9C62           ; Unknown 9xxx instruction
$448    $A932   LD       I, $932         ; Load 932 into I
$44A    $DB6C   DRW      VB, V6, #C      ; Draw 12-byte sprite at VB, V6
$44C    $663A   LD       V6, #3A         ; Load 58 into V6
$44E    $4815   SNE      V8, #15         ; Skip if V8 != 21
$450    $A998   LD       I, $998         ; Load 998 into I
$452    $ECAF   UNKNOWN  $ECAF           ; Unknown Exxx instruction
$454    $68C4   LD       V8, #C4         ; Load 196 into V8
$456    $727A   ADD      V2, #7A         ; Add 122 to V2
$458    $1256   JP       $256            ; Jump to 256
$45A    $710B   ADD      V1, #0B         ; Add 11 to V1
$45C    $2FA4   CALL     $FA4            ; Call subroutine at FA4
$45E    $FC83   UNKNOWN  FC83            ; Unknown Fxxx instruction
$460    $CC8E   RND      VC, #8E         ; VC = random & 8E
$462    $4F52   SNE      VF, #52         ; Skip if VF != 82
$464    $8002   AND      V0, V0          ; V0 &= V0
$466    $DB7D   DRW      VB, V7, #D      ; Draw 13-byte sprite at VB, V7
$468    $0B9F   SYS      $B9F            ; System call to B9F
$46A    $D525   DRW      V5, V2, #5      ; Draw 5-byte sprite at V5, V2
$46C    $BF04   JP       V0, $F04        ; Jump to V0 + F04
$46E    $7C66   ADD      VC, #66         ; Add 102 to VC
$470    $63BA   LD       V3, #BA         ; Load 186 into V3
$472    $DF28   DRW      VF, V2, #8      ; Draw 8-byte sprite at VF, V2
$474    $8183   XOR      V1, V8          ; V1 ^= V8
$476    $B89A   JP       V0, $89A        ; Jump to V0 + 89A
$478    $8BC0   LD       VB, VC          ; VB = VC
$47A    $722E   ADD      V2, #2E         ; Add 46 to V2
$47C    $C06B   RND      V0, #6B         ; V0 = random & 6B
$47E    $7F08   ADD      VF, #08         ; Add 8 to VF
$480    $EE5A   UNKNOWN  $EE5A           ; Unknown Exxx instruction
$482    $1EAA   JP       $EAA            ; Jump to EAA
$484    $80DD   UNKNOWN  80DD            ; Unknown 8xxx instruction
$486    $8227   SUBN     V2, V2          ; V2 = V2 - V2, VF = !borrow
$488    $C416   RND      V4, #16         ; V4 = random & 16
$48A    $E12F   UNKNOWN  $E12F           ; Unknown Exxx instruction
$48C    $4E20   SNE      VE, #20         ; Skip if VE != 32
$48E    $1E82   JP       $E82            ; Jump to E82
$490    $2C77   CALL     $C77            ; Call subroutine at C77
$492    $2DF2   CALL     $DF2            ; Call subroutine at DF2
$494    $0B47   SYS      $B47            ; System call to B47
$496    $FFA4   UNKNOWN  FFA4            ; Unknown Fxxx instruction
$498    $8536   SHR      V5              ; V5 >>= 1, VF = LSB
$49A    $65BA   LD       V5, #BA         ; Load 186 into V5
$49C    $3704   SE       V7, #04         ; Skip if V7 == 4
$49E    $D63D   DRW      V6, V3, #D      ; Draw 13-byte sprite at V6, V3
$4A0    $B1CC   JP       V0, $1CC        ; Jump to V0 + 1CC
$4A2    $3354   SE       V3, #54         ; Skip if V3 == 84
$4A4    $0257   SYS      $257            ; System call to 257
$4A6    $E471   UNKNOWN  $E471           ; Unknown Exxx instruction
$4A8    $A8E4   LD       I, $8E4         ; Load 8E4 into I
$4AA    $5604   UNKNOWN  $5604           ; Unknown 5xxx instruction
$4AC    $F89E   UNKNOWN  F89E            ; Unknown Fxxx instruction
$4AE    $8802   AND      V8, V0          ; V8 &= V0
$4B0    $D15C   DRW      V1, V5, #C      ; Draw 12-byte sprite at V1, V5
$4B2    $C8A8   RND      V8, #A8         ; V8 = random & A8
$4B4    $1750   JP       $750            ; Jump to 750
$4B6    $F2FE   UNKNOWN  F2FE            ; Unknown Fxxx instruction
$4B8    $01B6   SYS      $1B6            ; System call to 1B6
$4BA    $A231   LD       I, $231         ; Load 231 into I
$4BC    $CF10   RND      VF, #10         ; VF = random & 10
$4BE    $D56E   DRW      V5, V6, #E      ; Draw 14-byte sprite at V5, V6
$4C0    $B767   JP       V0, $767        ; Jump to V0 + 767
$4C2    $C30A   RND      V3, #0A         ; V3 = random & 0A
$4C4    $267F   CALL     $67F            ; Call subroutine at 67F
$4C6    $275D   CALL     $75D            ; Call subroutine at 75D
$4C8    $D164   DRW      V1, V6, #4      ; Draw 4-byte sprite at V1, V6
$4CA    $1232   JP       $232            ; Jump to 232
$4CC    $47F8   SNE      V7, #F8         ; Skip if V7 != 248
$4CE    $9656   UNKNOWN  $9656           ; Unknown 9xxx instruction
$4D0    $B27D   JP       V0, $27D        ; Jump to V0 + 27D
$4D2    $B343   JP       V0, $343        ; Jump to V0 + 343
$4D4    $20EE   CALL     $0EE            ; Call subroutine at 0EE
$4D6    $D218   DRW      V2, V1, #8      ; Draw 8-byte sprite at V2, V1
$4D8    $3D88   SE       VD, #88         ; Skip if VD == 136
$4DA    $FD3B   UNKNOWN  FD3B            ; Unknown Fxxx instruction
$4DC    $3048   SE       V0, #48         ; Skip if V0 == 72
$4DE    $13A2   JP       $3A2            ; Jump to 3A2
$4E0    $78F2   ADD      V8, #F2         ; Add 242 to V8
$4E2    $EBED   UNKNOWN  $EBED           ; Unknown Exxx instruction
$4E4    $2472   CALL     $472            ; Call subroutine at 472
$4E6    $5E33   UNKNOWN  $5E33           ; Unknown 5xxx instruction
$4E8    $EA57   UNKNOWN  $EA57           ; Unknown Exxx instruction
$4EA    $286A   CALL     $86A            ; Call subroutine at 86A
$4EC    $9BB5   UNKNOWN  $9BB5           ; Unknown 9xxx instruction
$4EE    $1F12   JP       $F12            ; Jump to F12
$4F0    $C40F   RND      V4, #0F         ; V4 = random & 0F
$4F2    $9A77   UNKNOWN  $9A77           ; Unknown 9xxx instruction
$4F4    $F553   UNKNOWN  F553            ; Unknown Fxxx instruction
$4F6    $3E10   SE       VE, #10         ; Skip if VE == 16
$4F8    $B0FB   JP       V0, $0FB        ; Jump to V0 + 0FB
$4FA    $766F   ADD      V6, #6F         ; Add 111 to V6
$4FC    $DB69   DRW      VB, V6, #9      ; Draw 9-byte sprite at VB, V6
$4FE    $BE7F   JP       V0, $E7F        ; Jump to V0 + E7F
$500    $7521   ADD      V5, #21         ; Add 33 to V5
$502    $9029   UNKNOWN  $9029           ; Unknown 9xxx instruction
$504    $525B   UNKNOWN  $525B           ; Unknown 5xxx instruction
$506    $D37F   DRW      V3, V7, #F      ; Draw 15-byte sprite at V3, V7
$508    $8A85   SUB      VA, V8          ; VA -= V8, VF = !borrow
$50A    $06B4   SYS      $6B4            ; System call to 6B4
$50C    $272F   CALL     $72F            ; Call subroutine at 72F
$50E    $AF23   LD       I, $F23         ; Load F23 into I
$510    $09DB   SYS      $9DB            ; System call to 9DB
$512    $F8EF   UNKNOWN  F8EF            ; Unknown Fxxx instruction
$514    $B460   JP       V0, $460        ; Jump to V0 + 460
$516    $0E86   SYS      $E86            ; System call to E86
$518    $8B8A   UNKNOWN  8B8A            ; Unknown 8xxx instruction
$51A    $F310   UNKNOWN  F310            ; Unknown Fxxx instruction
$51C    $FFBD   UNKNOWN  FFBD            ; Unknown Fxxx instruction
$51E    $3FEE   SE       VF, #EE         ; Skip if VF == 238
$520    $F575   UNKNOWN  F575            ; Unknown Fxxx instruction
$522    $77C1   ADD      V7, #C1         ; Add 193 to V7
$524    $7F6E   ADD      VF, #6E         ; Add 110 to VF
$526    $E0C4   UNKNOWN  $E0C4           ; Unknown Exxx instruction
$528    $E73C   UNKNOWN  $E73C           ; Unknown Exxx instruction
$52A    $84BA   UNKNOWN  84BA            ; Unknown 8xxx instruction
$52C    $EE2C   UNKNOWN  $EE2C           ; Unknown Exxx instruction
$52E    $094C   SYS      $94C            ; System call to 94C
$530    $2299   CALL     $299            ; Call subroutine at 299
$532    $B9C7   JP       V0, $9C7        ; Jump to V0 + 9C7
$534    $13FE   JP       $3FE            ; Jump to 3FE
$536    $7679   ADD      V6, #79         ; Add 121 to V6
$538    $C058   RND      V0, #58         ; V0 = random & 58
$53A    $121E   JP       $21E            ; Jump to 21E
$53C    $912F   UNKNOWN  $912F           ; Unknown 9xxx instruction
$53E    $82D9   UNKNOWN  82D9            ; Unknown 8xxx instruction
$540    $62FC   LD       V2, #FC         ; Load 252 into V2
$542    $77FC   ADD      V7, #FC         ; Add 252 to V7
$544    $B164   JP       V0, $164        ; Jump to V0 + 164
$546    $D54B   DRW      V5, V4, #B      ; Draw 11-byte sprite at V5, V4
$548    $99A0   SNE      V9, VA          ; Skip if V9 != VA
$54A    $CB04   RND      VB, #04         ; VB = random & 04
$54C    $90C9   UNKNOWN  $90C9           ; Unknown 9xxx instruction
$54E    $87E0   LD       V7, VE          ; V7 = VE
$550    $EECE   UNKNOWN  $EECE           ; Unknown Exxx instruction
$552    $4428   SNE      V4, #28         ; Skip if V4 != 40
$554    $98CD   UNKNOWN  $98CD           ; Unknown 9xxx instruction
$556    $F255   LD       [I], V2         ; Store V0-V2 at I
$558    $8E21   OR       VE, V2          ; VE |= V2
$55A    $099B   SYS      $99B            ; System call to 99B
$55C    $7BFD   ADD      VB, #FD         ; Add 253 to VB
$55E    $C5FF   RND      V5, #FF         ; V5 = random & FF
$560    $D468   DRW      V4, V6, #8      ; Draw 8-byte sprite at V4, V6
$562    $4C90   SNE      VC, #90         ; Skip if VC != 144
$564    $97C7   UNKNOWN  $97C7           ; Unknown 9xxx instruction
$566    $1C4A   JP       $C4A            ; Jump to C4A
$568    $D4DE   DRW      V4, VD, #E      ; Draw 14-byte sprite at V4, VD
$56A    $F72C   UNKNOWN  F72C            ; Unknown Fxxx instruction
$56C    $8CED   UNKNOWN  8CED            ; Unknown 8xxx instruction
$56E    $0B29   SYS      $B29            ; System call to B29
$570    $D803   DRW      V8, V0, #3      ; Draw 3-byte sprite at V8, V0
$572    $526A   UNKNOWN  $526A           ; Unknown 5xxx instruction
$574    $BD1D   JP       V0, $D1D        ; Jump to V0 + D1D
$576    $BD51   JP       V0, $D51        ; Jump to V0 + D51
$578    $E5FF   UNKNOWN  $E5FF           ; Unknown Exxx instruction
$57A    $B52C   JP       V0, $52C        ; Jump to V0 + 52C
$57C    $D914   DRW      V9, V1, #4      ; Draw 4-byte sprite at V9, V1
$57E    $7870   ADD      V8, #70         ; Add 112 to V8
$580    $C251   RND      V2, #51         ; V2 = random & 51
$582    $66C0   LD       V6, #C0         ; Load 192 into V6
$584    $6268   LD       V2, #68         ; Load 104 into V2
$586    $F4D0   UNKNOWN  F4D0            ; Unknown Fxxx instruction
$588    $E37C   UNKNOWN  $E37C           ; Unknown Exxx instruction
$58A    $4832   SNE      V8, #32         ; Skip if V8 != 50
$58C    $821E   SHL      V2              ; V2 <<= 1, VF = MSB
$58E    $1FB2   JP       $FB2            ; Jump to FB2
$590    $42EF   SNE      V2, #EF         ; Skip if V2 != 239
$592    $8EF7   SUBN     VE, VF          ; VE = VF - VE, VF = !borrow
$594    $0E99   SYS      $E99            ; System call to E99
$596    $57E1   UNKNOWN  $57E1           ; Unknown 5xxx instruction
$598    $7D8A   ADD      VD, #8A         ; Add 138 to VD
$59A    $1D6D   JP       $D6D            ; Jump to D6D
$59C    $5B92   UNKNOWN  $5B92           ; Unknown 5xxx instruction
$59E    $06A9   SYS      $6A9            ; System call to 6A9
$5A0    $6EF6   LD       VE, #F6         ; Load 246 into VE
$5A2    $5E52   UNKNOWN  $5E52           ; Unknown 5xxx instruction
$5A4    $584C   UNKNOWN  $584C           ; Unknown 5xxx instruction
$5A6    $845E   SHL      V4              ; V4 <<= 1, VF = MSB
$5A8    $8A80   LD       VA, V8          ; VA = V8
$5AA    $4BE3   SNE      VB, #E3         ; Skip if VB != 227
$5AC    $6B12   LD       VB, #12         ; Load 18 into VB
$5AE    $F39D   UNKNOWN  F39D            ; Unknown Fxxx instruction
$5B0    $B736   JP       V0, $736        ; Jump to V0 + 736
$5B2    $5783   UNKNOWN  $5783           ; Unknown 5xxx instruction
$5B4    $B080   JP       V0, $080        ; Jump to V0 + 080
$5B6    $8983   XOR      V9, V8          ; V9 ^= V8
$5B8    $7A92   ADD      VA, #92         ; Add 146 to VA
$5BA    $2314   CALL     $314            ; Call subroutine at 314
$5BC    $D736   DRW      V7, V3, #6      ; Draw 6-byte sprite at V7, V3
$5BE    $B098   JP       V0, $098        ; Jump to V0 + 098
$5C0    $2E3D   CALL     $E3D            ; Call subroutine at E3D
$5C2    $FFBE   UNKNOWN  FFBE            ; Unknown Fxxx instruction
$5C4    $C82D   RND      V8, #2D         ; V8 = random & 2D
$5C6    $EF47   UNKNOWN  $EF47           ; Unknown Exxx instruction
$5C8    $835E   SHL      V3              ; V3 <<= 1, VF = MSB
$5CA    $46FA   SNE      V6, #FA         ; Skip if V6 != 250
$5CC    $D800   DRW      V8, V0, #0      ; Draw 0-byte sprite at V8, V0
$5CE    $9EB2   UNKNOWN  $9EB2           ; Unknown 9xxx instruction
$5D0    $80C1   OR       V0, VC          ; V0 |= VC
$5D2    $C4C8   RND      V4, #C8         ; V4 = random & C8
$5D4    $6689   LD       V6, #89         ; Load 137 into V6
$5D6    $54B6   UNKNOWN  $54B6           ; Unknown 5xxx instruction
$5D8    $402A   SNE      V0, #2A         ; Skip if V0 != 42
$5DA    $AFDB   LD       I, $FDB         ; Load FDB into I
$5DC    $BB0B   JP       V0, $B0B        ; Jump to V0 + B0B
$5DE    $50D0   SE       V0, VD          ; Skip if V0 == VD
$5E0    $58D5   UNKNOWN  $58D5           ; Unknown 5xxx instruction
$5E2    $59B2   UNKNOWN  $59B2           ; Unknown 5xxx instruction
$5E4    $B20C   JP       V0, $20C        ; Jump to V0 + 20C
$5E6    $4BDB   SNE      VB, #DB         ; Skip if VB != 219
$5E8    $3BD6   SE       VB, #D6         ; Skip if VB == 214
$5EA    $A7E1   LD       I, $7E1         ; Load 7E1 into I
$5EC    $FED3   UNKNOWN  FED3            ; Unknown Fxxx instruction
$5EE    $6BA1   LD       VB, #A1         ; Load 161 into VB
$5F0    $DC40   DRW      VC, V4, #0      ; Draw 0-byte sprite at VC, V4
$5F2    $9251   UNKNOWN  $9251           ; Unknown 9xxx instruction
$5F4    $D720   DRW      V7, V2, #0      ; Draw 0-byte sprite at V7, V2
$5F6    $7DB7   ADD      VD, #B7         ; Add 183 to VD
$5F8    $50CB   UNKNOWN  $50CB           ; Unknown 5xxx instruction
$5FA    $C94E   RND      V9, #4E         ; V9 = random & 4E
$5FC    $A9D8   LD       I, $9D8         ; Load 9D8 into I
$5FE    $5D35   UNKNOWN  $5D35           ; Unknown 5xxx instruction
$600    $697B   LD       V9, #7B         ; Load 123 into V9
$602    $6B2C   LD       VB, #2C         ; Load 44 into VB
$604    $ADEC   LD       I, $DEC         ; Load DEC into I
$606    $88D9   UNKNOWN  88D9            ; Unknown 8xxx instruction
$608    $5721   UNKNOWN  $5721           ; Unknown 5xxx instruction
$60A    $576D   UNKNOWN  $576D           ; Unknown 5xxx instruction
$60C    $9966   UNKNOWN  $9966           ; Unknown 9xxx instruction
$60E    $F274   UNKNOWN  F274            ; Unknown Fxxx instruction
$610    $CE7C   RND      VE, #7C         ; VE = random & 7C
$612    $12AE   JP       $2AE            ; Jump to 2AE
$614    $6312   LD       V3, #12         ; Load 18 into V3
$616    $D8F2   DRW      V8, VF, #2      ; Draw 2-byte sprite at V8, VF
$618    $5565   UNKNOWN  $5565           ; Unknown 5xxx instruction
$61A    $944C   UNKNOWN  $944C           ; Unknown 9xxx instruction
$61C    $060A   SYS      $60A            ; System call to 60A
$61E    $9262   UNKNOWN  $9262           ; Unknown 9xxx instruction
$620    $FFE3   UNKNOWN  FFE3            ; Unknown Fxxx instruction
$622    $A75F   LD       I, $75F         ; Load 75F into I
$624    $75F3   ADD      V5, #F3         ; Add 243 to V5
$626    $49DD   SNE      V9, #DD         ; Skip if V9 != 221
$628    $C742   RND      V7, #42         ; V7 = random & 42
$62A    $1D82   JP       $D82            ; Jump to D82
$62C    $93E5   UNKNOWN  $93E5           ; Unknown 9xxx instruction
$62E    $9F0E   UNKNOWN  $9F0E           ; Unknown 9xxx instruction
$630    $596C   UNKNOWN  $596C           ; Unknown 5xxx instruction
$632    $69B5   LD       V9, #B5         ; Load 181 into V9
$634    $02BE   SYS      $2BE            ; System call to 2BE
$636    $49C1   SNE      V9, #C1         ; Skip if V9 != 193
$638    $16E1   JP       $6E1            ; Jump to 6E1
$63A    $A007   LD       I, $007         ; Load 007 into I
$63C    $912A   UNKNOWN  $912A           ; Unknown 9xxx instruction
$63E    $CA33   RND      VA, #33         ; VA = random & 33
$640    $E554   UNKNOWN  $E554           ; Unknown Exxx instruction
$642    $56C2   UNKNOWN  $56C2           ; Unknown 5xxx instruction
$644    $8D35   SUB      VD, V3          ; VD -= V3, VF = !borrow
$646    $CA27   RND      VA, #27         ; VA = random & 27
$648    $276C   CALL     $76C            ; Call subroutine at 76C
$64A    $956D   UNKNOWN  $956D           ; Unknown 9xxx instruction
$64C    $8049   UNKNOWN  8049            ; Unknown 8xxx instruction
$64E    $2B37   CALL     $B37            ; Call subroutine at B37
$650    $A9B2   LD       I, $9B2         ; Load 9B2 into I
$652    $C410   RND      V4, #10         ; V4 = random & 10
$654    $5961   UNKNOWN  $5961           ; Unknown 5xxx instruction
$656    $F468   UNKNOWN  F468            ; Unknown Fxxx instruction
$658    $5572   UNKNOWN  $5572           ; Unknown 5xxx instruction
$65A    $3410   SE       V4, #10         ; Skip if V4 == 16
$65C    $8B65   SUB      VB, V6          ; VB -= V6, VF = !borrow
$65E    $C63D   RND      V6, #3D         ; V6 = random & 3D
$660    $9DD5   UNKNOWN  $9DD5           ; Unknown 9xxx instruction
$662    $9512   UNKNOWN  $9512           ; Unknown 9xxx instruction
$664    $B2F2   JP       V0, $2F2        ; Jump to V0 + 2F2
$666    $42C3   SNE      V2, #C3         ; Skip if V2 != 195
$668    $8075   SUB      V0, V7          ; V0 -= V7, VF = !borrow
$66A    $A5BF   LD       I, $5BF         ; Load 5BF into I
$66C    $51C0   SE       V1, VC          ; Skip if V1 == VC
$66E    $F320   UNKNOWN  F320            ; Unknown Fxxx instruction
$670    $AA35   LD       I, $A35         ; Load A35 into I
$672    $542F   UNKNOWN  $542F           ; Unknown 5xxx instruction
$674    $EBCD   UNKNOWN  $EBCD           ; Unknown Exxx instruction
$676    $40D7   SNE      V0, #D7         ; Skip if V0 != 215
$678    $CB96   RND      VB, #96         ; VB = random & 96
$67A    $F293   UNKNOWN  F293            ; Unknown Fxxx instruction
$67C    $2AC2   CALL     $AC2            ; Call subroutine at AC2
$67E    $2F92   CALL     $F92            ; Call subroutine at F92
$680    $716A   ADD      V1, #6A         ; Add 106 to V1
$682    $EE00   UNKNOWN  $EE00           ; Unknown Exxx instruction
$684    $45C4   SNE      V5, #C4         ; Skip if V5 != 196
$686    $8EF8   UNKNOWN  8EF8            ; Unknown 8xxx instruction
$688    $A5AF   LD       I, $5AF         ; Load 5AF into I
$68A    $39F2   SE       V9, #F2         ; Skip if V9 == 242
$68C    $4AF8   SNE      VA, #F8         ; Skip if VA != 248
$68E    $DBE6   DRW      VB, VE, #6      ; Draw 6-byte sprite at VB, VE
$690    $2C67   CALL     $C67            ; Call subroutine at C67
$692    $5EDB   UNKNOWN  $5EDB           ; Unknown 5xxx instruction
$694    $4D8D   SNE      VD, #8D         ; Skip if VD != 141
$696    $D3F0   DRW      V3, VF, #0      ; Draw 0-byte sprite at V3, VF
$698    $5546   UNKNOWN  $5546           ; Unknown 5xxx instruction
$69A    $F971   UNKNOWN  F971            ; Unknown Fxxx instruction
$69C    $C0CC   RND      V0, #CC         ; V0 = random & CC
$69E    $6096   LD       V0, #96         ; Load 150 into V0
$6A0    $0CE3   SYS      $CE3            ; System call to CE3
$6A2    $DAA4   DRW      VA, VA, #4      ; Draw 4-byte sprite at VA, VA
$6A4    $F3F9   UNKNOWN  F3F9            ; Unknown Fxxx instruction
$6A6    $DC98   DRW      VC, V9, #8      ; Draw 8-byte sprite at VC, V9
$6A8    $E6F1   UNKNOWN  $E6F1           ; Unknown Exxx instruction
$6AA    $C2F0   RND      V2, #F0         ; V2 = random & F0
$6AC    $F0B2   UNKNOWN  F0B2            ; Unknown Fxxx instruction
$6AE    $9350   SNE      V3, V5          ; Skip if V3 != V5
$6B0    $76CF   ADD      V6, #CF         ; Add 207 to V6
$6B2    $1329   JP       $329            ; Jump to 329
$6B4    $791B   ADD      V9, #1B         ; Add 27 to V9
$6B6    $A4BE   LD       I, $4BE         ; Load 4BE into I
$6B8    $D270   DRW      V2, V7, #0      ; Draw 0-byte sprite at V2, V7
$6BA    $81ED   UNKNOWN  81ED            ; Unknown 8xxx instruction
$6BC    $86D8   UNKNOWN  86D8            ; Unknown 8xxx instruction
$6BE    $0651   SYS      $651            ; System call to 651
$6C0    $D8D7   DRW      V8, VD, #7      ; Draw 7-byte sprite at V8, VD
$6C2    $92BB   UNKNOWN  $92BB           ; Unknown 9xxx instruction
$6C4    $72AD   ADD      V2, #AD         ; Add 173 to V2
$6C6    $F63D   UNKNOWN  F63D            ; Unknown Fxxx instruction
$6C8    $13ED   JP       $3ED            ; Jump to 3ED
$6CA    $E49E   SKP      V4              ; Skip if key V4 pressed
$6CC    $9027   UNKNOWN  $9027           ; Unknown 9xxx instruction
$6CE    $0380   SYS      $380            ; System call to 380
$6D0    $43B0   SNE      V3, #B0         ; Skip if V3 != 176
$6D2    $FDD9   UNKNOWN  FDD9            ; Unknown Fxxx instruction
$6D4    $38A5   SE       V8, #A5         ; Skip if V8 == 165
$6D6    $C096   RND      V0, #96         ; V0 = random & 96
$6D8    $5EB1   UNKNOWN  $5EB1           ; Unknown 5xxx instruction
$6DA    $497E   SNE      V9, #7E         ; Skip if V9 != 126
$6DC    $83DA   UNKNOWN  83DA            ; Unknown 8xxx instruction
$6DE    $295B   CALL     $95B            ; Call subroutine at 95B
$6E0    $0666   SYS      $666            ; System call to 666
$6E2    $4599   SNE      V5, #99         ; Skip if V5 != 153
$6E4    $32FB   SE       V2, #FB         ; Skip if V2 == 251
$6E6    $0A1E   SYS      $A1E            ; System call to A1E
$6E8    $2782   CALL     $782            ; Call subroutine at 782
$6EA    $D642   DRW      V6, V4, #2      ; Draw 2-byte sprite at V6, V4
$6EC    $1914   JP       $914            ; Jump to 914
$6EE    $8B3F   UNKNOWN  8B3F            ; Unknown 8xxx instruction
$6F0    $BE57   JP       V0, $E57        ; Jump to V0 + E57
$6F2    $2DB6   CALL     $DB6            ; Call subroutine at DB6
$6F4    $AA33   LD       I, $A33         ; Load A33 into I
$6F6    $9A06   UNKNOWN  $9A06           ; Unknown 9xxx instruction
$6F8    $C208   RND      V2, #08         ; V2 = random & 08
$6FA    $5B00   SE       VB, V0          ; Skip if VB == V0
$6FC    $E127   UNKNOWN  $E127           ; Unknown Exxx instruction
$6FE    $F497   UNKNOWN  F497            ; Unknown Fxxx instruction
$700    $FCD0   UNKNOWN  FCD0            ; Unknown Fxxx instruction
$702    $577B   UNKNOWN  $577B           ; Unknown 5xxx instruction
$704    $EDD0   UNKNOWN  $EDD0           ; Unknown Exxx instruction
$706    $DD4E   DRW      VD, V4, #E      ; Draw 14-byte sprite at VD, V4
$708    $B5AB   JP       V0, $5AB        ; Jump to V0 + 5AB
$70A    $EBC1   UNKNOWN  $EBC1           ; Unknown Exxx instruction
$70C    $F4C7   UNKNOWN  F4C7            ; Unknown Fxxx instruction
$70E    $400A   SNE      V0, #0A         ; Skip if V0 != 10
$710    $CFBC   RND      VF, #BC         ; VF = random & BC
$712    $7533   ADD      V5, #33         ; Add 51 to V5
$714    $B47C   JP       V0, $47C        ; Jump to V0 + 47C
$716    $9A93   UNKNOWN  $9A93           ; Unknown 9xxx instruction
$718    $BF22   JP       V0, $F22        ; Jump to V0 + F22
$71A    $6607   LD       V6, #07         ; Load 7 into V6
$71C    $66C1   LD       V6, #C1         ; Load 193 into V6
$71E    $5F67   UNKNOWN  $5F67           ; Unknown 5xxx instruction
$720    $3B4F   SE       VB, #4F         ; Skip if VB == 79
$722    $950D   UNKNOWN  $950D           ; Unknown 9xxx instruction
$724    $DBC4   DRW      VB, VC, #4      ; Draw 4-byte sprite at VB, VC
$726    $F583   UNKNOWN  F583            ; Unknown Fxxx instruction
$728    $9096   UNKNOWN  $9096           ; Unknown 9xxx instruction
$72A    $2FA9   CALL     $FA9            ; Call subroutine at FA9
$72C    $ADF0   LD       I, $DF0         ; Load DF0 into I
$72E    $2ECE   CALL     $ECE            ; Call subroutine at ECE
$730    $82EF   UNKNOWN  82EF            ; Unknown 8xxx instruction
$732    $4BE5   SNE      VB, #E5         ; Skip if VB != 229
$734    $C8A0   RND      V8, #A0         ; V8 = random & A0
$736    $7249   ADD      V2, #49         ; Add 73 to V2
$738    $A730   LD       I, $730         ; Load 730 into I
$73A    $B72C   JP       V0, $72C        ; Jump to V0 + 72C
$73C    $BE41   JP       V0, $E41        ; Jump to V0 + E41
$73E    $2309   CALL     $309            ; Call subroutine at 309
$740    $D085   DRW      V0, V8, #5      ; Draw 5-byte sprite at V0, V8
$742    $67F9   LD       V7, #F9         ; Load 249 into V7
$744    $D476   DRW      V4, V7, #6      ; Draw 6-byte sprite at V4, V7
$746    $5AD4   UNKNOWN  $5AD4           ; Unknown 5xxx instruction
$748    $6DEB   LD       VD, #EB         ; Load 235 into VD
$74A    $19DD   JP       $9DD            ; Jump to 9DD
$74C    $7DC5   ADD      VD, #C5         ; Add 197 to VD
$74E    $28FC   CALL     $8FC            ; Call subroutine at 8FC
$750    $4C35   SNE      VC, #35         ; Skip if VC != 53
$752    $86CD   UNKNOWN  86CD            ; Unknown 8xxx instruction
$754    $BA46   JP       V0, $A46        ; Jump to V0 + A46
$756    $3D1E   SE       VD, #1E         ; Skip if VD == 30
$758    $833C   UNKNOWN  833C            ; Unknown 8xxx instruction
$75A    $559D   UNKNOWN  $559D           ; Unknown 5xxx instruction
$75C    $0373   SYS      $373            ; System call to 373
$75E    $97A0   SNE      V7, VA          ; Skip if V7 != VA
$760    $7E89   ADD      VE, #89         ; Add 137 to VE
$762    $7EBC   ADD      VE, #BC         ; Add 188 to VE
$764    $71A9   ADD      V1, #A9         ; Add 169 to V1
$766    $ADA4   LD       I, $DA4         ; Load DA4 into I
$768    $D94C   DRW      V9, V4, #C      ; Draw 12-byte sprite at V9, V4
$76A    $F221   UNKNOWN  F221            ; Unknown Fxxx instruction
$76C    $11CB   JP       $1CB            ; Jump to 1CB
$76E    $E681   UNKNOWN  $E681           ; Unknown Exxx instruction
$770    $88BC   UNKNOWN  88BC            ; Unknown 8xxx instruction
$772    $7116   ADD      V1, #16         ; Add 22 to V1
$774    $C18D   RND      V1, #8D         ; V1 = random & 8D
$776    $6A6C   LD       VA, #6C         ; Load 108 into VA
$778    $1564   JP       $564            ; Jump to 564
$77A    $BF87   JP       V0, $F87        ; Jump to V0 + F87
$77C    $8B77   SUBN     VB, V7          ; VB = V7 - VB, VF = !borrow
$77E    $AB24   LD       I, $B24         ; Load B24 into I
$780    $0C99   SYS      $C99            ; System call to C99
$782    $3F96   SE       VF, #96         ; Skip if VF == 150
$784    $8180   LD       V1, V8          ; V1 = V8
$786    $8F9D   UNKNOWN  8F9D            ; Unknown 8xxx instruction
$788    $A3E2   LD       I, $3E2         ; Load 3E2 into I
$78A    $4F86   SNE      VF, #86         ; Skip if VF != 134
$78C    $05DA   SYS      $5DA            ; System call to 5DA
$78E    $3147   SE       V1, #47         ; Skip if V1 == 71
$790    $0C2C   SYS      $C2C            ; System call to C2C
$792    $8C9A   UNKNOWN  8C9A            ; Unknown 8xxx instruction
$794    $182A   JP       $82A            ; Jump to 82A
$796    $C776   RND      V7, #76         ; V7 = random & 76
$798    $20CA   CALL     $0CA            ; Call subroutine at 0CA
$79A    $9CE2   UNKNOWN  $9CE2           ; Unknown 9xxx instruction
$79C    $AA9F   LD       I, $A9F         ; Load A9F into I
$79E    $1ACB   JP       $ACB            ; Jump to ACB
$7A0    $69CA   LD       V9, #CA         ; Load 202 into V9
$7A2    $EA48   UNKNOWN  $EA48           ; Unknown Exxx instruction
$7A4    $B1F0   JP       V0, $1F0        ; Jump to V0 + 1F0
$7A6    $13B2   JP       $3B2            ; Jump to 3B2
$7A8    $CF96   RND      VF, #96         ; VF = random & 96
$7AA    $33A8   SE       V3, #A8         ; Skip if V3 == 168
$7AC    $C0F7   RND      V0, #F7         ; V0 = random & F7
$7AE    $16A9   JP       $6A9            ; Jump to 6A9
$7B0    $EA0A   UNKNOWN  $EA0A           ; Unknown Exxx instruction
$7B2    $F3E3   UNKNOWN  F3E3            ; Unknown Fxxx instruction
$7B4    $1F5B   JP       $F5B            ; Jump to F5B
$7B6    $DC01   DRW      VC, V0, #1      ; Draw 1-byte sprite at VC, V0
$7B8    $6EE7   LD       VE, #E7         ; Load 231 into VE
$7BA    $3AE4   SE       VA, #E4         ; Skip if VA == 228
$7BC    $E9FC   UNKNOWN  $E9FC           ; Unknown Exxx instruction
$7BE    $33BB   SE       V3, #BB         ; Skip if V3 == 187
$7C0    $371E   SE       V7, #1E         ; Skip if V7 == 30
$7C2    $61BC   LD       V1, #BC         ; Load 188 into V1
$7C4    $22C1   CALL     $2C1            ; Call subroutine at 2C1
$7C6    $C710   RND      V7, #10         ; V7 = random & 10
$7C8    $BC9B   JP       V0, $C9B        ; Jump to V0 + C9B
$7CA    $5987   UNKNOWN  $5987           ; Unknown 5xxx instruction
$7CC    $E51A   UNKNOWN  $E51A           ; Unknown Exxx instruction
$7CE    $D09D   DRW      V0, V9, #D      ; Draw 13-byte sprite at V0, V9
$7D0    $58F8   UNKNOWN  $58F8           ; Unknown 5xxx instruction
$7D2    $99B7   UNKNOWN  $99B7           ; Unknown 9xxx instruction
$7D4    $73DD   ADD      V3, #DD         ; Add 221 to V3
$7D6    $611E   LD       V1, #1E         ; Load 30 into V1
$7D8    $1C9D   JP       $C9D            ; Jump to C9D
$7DA    $986C   UNKNOWN  $986C           ; Unknown 9xxx instruction
$7DC    $9B99   UNKNOWN  $9B99           ; Unknown 9xxx instruction
$7DE    $EC3B   UNKNOWN  $EC3B           ; Unknown Exxx instruction
$7E0    $7D3D   ADD      VD, #3D         ; Add 61 to VD
$7E2    $18DA   JP       $8DA            ; Jump to 8DA
$7E4    $B588   JP       V0, $588        ; Jump to V0 + 588
$7E6    $F4EC   UNKNOWN  F4EC            ; Unknown Fxxx instruction
$7E8    $37C0   SE       V7, #C0         ; Skip if V7 == 192
$7EA    $DA2C   DRW      VA, V2, #C      ; Draw 12-byte sprite at VA, V2
$7EC    $C6A6   RND      V6, #A6         ; V6 = random & A6
$7EE    $48F8   SNE      V8, #F8         ; Skip if V8 != 248
$7F0    $727E   ADD      V2, #7E         ; Add 126 to V2
$7F2    $89E2   AND      V9, VE          ; V9 &= VE
$7F4    $0A85   SYS      $A85            ; System call to A85
$7F6    $A2A3   LD       I, $2A3         ; Load 2A3 into I
$7F8    $1549   JP       $549            ; Jump to 549
$7FA    $DBAB   DRW      VB, VA, #B      ; Draw 11-byte sprite at VB, VA
$7FC    $EAF8   UNKNOWN  $EAF8           ; Unknown Exxx instruction
$7FE    $5902   UNKNOWN  $5902           ; Unknown 5xxx instruction
$800    $D7B6   DRW      V7, VB, #6      ; Draw 6-byte sprite at V7, VB
$802    $8285   SUB      V2, V8          ; V2 -= V8, VF = !borrow
$804    $11C9   JP       $1C9            ; Jump to 1C9
$806    $191A   JP       $91A            ; Jump to 91A
$808    $DB0C   DRW      VB, V0, #C      ; Draw 12-byte sprite at VB, V0
$80A    $D001   DRW      V0, V0, #1      ; Draw 1-byte sprite at V0, V0
$80C    $170A   JP       $70A            ; Jump to 70A
$80E    $0E53   SYS      $E53            ; System call to E53
$810    $4AAE   SNE      VA, #AE         ; Skip if VA != 174
$812    $F37D   UNKNOWN  F37D            ; Unknown Fxxx instruction
$814    $71E0   ADD      V1, #E0         ; Add 224 to V1
$816    $315A   SE       V1, #5A         ; Skip if V1 == 90
$818    $4EE8   SNE      VE, #E8         ; Skip if VE != 232
$81A    $52D5   UNKNOWN  $52D5           ; Unknown 5xxx instruction
$81C    $8296   SHR      V2              ; V2 >>= 1, VF = LSB
$81E    $1BCA   JP       $BCA            ; Jump to BCA
$820    $F235   UNKNOWN  F235            ; Unknown Fxxx instruction
$822    $455A   SNE      V5, #5A         ; Skip if V5 != 90
$824    $FC29   LD       F, VC           ; I = sprite address for digit VC
$826    $7FC7   ADD      VF, #C7         ; Add 199 to VF
$828    $4743   SNE      V7, #43         ; Skip if V7 != 67
$82A    $C2F2   RND      V2, #F2         ; V2 = random & F2
$82C    $2E75   CALL     $E75            ; Call subroutine at E75
$82E    $80D8   UNKNOWN  80D8            ; Unknown 8xxx instruction
$830    $D7A8   DRW      V7, VA, #8      ; Draw 8-byte sprite at V7, VA
$832    $5E50   SE       VE, V5          ; Skip if VE == V5
$834    $9569   UNKNOWN  $9569           ; Unknown 9xxx instruction
$836    $CBB1   RND      VB, #B1         ; VB = random & B1
$838    $7626   ADD      V6, #26         ; Add 38 to V6
$83A    $3EBA   SE       VE, #BA         ; Skip if VE == 186
$83C    $FE2E   UNKNOWN  FE2E            ; Unknown Fxxx instruction
$83E    $766A   ADD      V6, #6A         ; Add 106 to V6
$840    $4507   SNE      V5, #07         ; Skip if V5 != 7
$842    $60D7   LD       V0, #D7         ; Load 215 into V0
$844    $7356   ADD      V3, #56         ; Add 86 to V3
$846    $8DC3   XOR      VD, VC          ; VD ^= VC
$848    $75F1   ADD      V5, #F1         ; Add 241 to V5
$84A    $2270   CALL     $270            ; Call subroutine at 270
$84C    $0AA8   SYS      $AA8            ; System call to AA8
$84E    $221A   CALL     $21A            ; Call subroutine at 21A
$850    $1CAB   JP       $CAB            ; Jump to CAB
$852    $87E9   UNKNOWN  87E9            ; Unknown 8xxx instruction
$854    $06A2   SYS      $6A2            ; System call to 6A2
$856    $24BE   CALL     $4BE            ; Call subroutine at 4BE
$858    $7FCB   ADD      VF, #CB         ; Add 203 to VF
$85A    $855F   UNKNOWN  855F            ; Unknown 8xxx instruction
$85C    $9276   UNKNOWN  $9276           ; Unknown 9xxx instruction
$85E    $CF50   RND      VF, #50         ; VF = random & 50
$860    $A515   LD       I, $515         ; Load 515 into I
$862    $3CF8   SE       VC, #F8         ; Skip if VC == 248
$864    $E5FD   UNKNOWN  $E5FD           ; Unknown Exxx instruction
$866    $D381   DRW      V3, V8, #1      ; Draw 1-byte sprite at V3, V8
$868    $AC18   LD       I, $C18         ; Load C18 into I
$86A    $D659   DRW      V6, V5, #9      ; Draw 9-byte sprite at V6, V5
$86C    $3F19   SE       VF, #19         ; Skip if VF == 25
$86E    $F62E   UNKNOWN  F62E            ; Unknown Fxxx instruction
$870    $EC2B   UNKNOWN  $EC2B           ; Unknown Exxx instruction
$872    $F0B6   UNKNOWN  F0B6            ; Unknown Fxxx instruction
$874    $28DC   CALL     $8DC            ; Call subroutine at 8DC
$876    $8B8B   UNKNOWN  8B8B            ; Unknown 8xxx instruction
$878    $6068   LD       V0, #68         ; Load 104 into V0
$87A    $ADAA   LD       I, $DAA         ; Load DAA into I
$87C    $A140   LD       I, $140         ; Load 140 into I
$87E    $BDF9   JP       V0, $DF9        ; Jump to V0 + DF9
$880    $CDAE   RND      VD, #AE         ; VD = random & AE
$882    $4B56   SNE      VB, #56         ; Skip if VB != 86
$884    $21AC   CALL     $1AC            ; Call subroutine at 1AC
$886    $1BB5   JP       $BB5            ; Jump to BB5
$888    $9C6B   UNKNOWN  $9C6B           ; Unknown 9xxx instruction
$88A    $CEA1   RND      VE, #A1         ; VE = random & A1
$88C    $9447   UNKNOWN  $9447           ; Unknown 9xxx instruction
$88E    $C018   RND      V0, #18         ; V0 = random & 18
$890    $3AF0   SE       VA, #F0         ; Skip if VA == 240
$892    $0505   SYS      $505            ; System call to 505
$894    $3F10   SE       VF, #10         ; Skip if VF == 16
$896    $08CE   SYS      $8CE            ; System call to 8CE
$898    $0046   SYS      $046            ; System call to 046
$89A    $AA13   LD       I, $A13         ; Load A13 into I
$89C    $10E7   JP       $0E7            ; Jump to 0E7
$89E    $022A   SYS      $22A            ; System call to 22A
$8A0    $E515   UNKNOWN  $E515           ; Unknown Exxx instruction
$8A2    $2A17   CALL     $A17            ; Call subroutine at A17
$8A4    $F9DA   UNKNOWN  F9DA            ; Unknown Fxxx instruction
$8A6    $846C   UNKNOWN  846C            ; Unknown 8xxx instruction
$8A8    $5792   UNKNOWN  $5792           ; Unknown 5xxx instruction
$8AA    $45C6   SNE      V5, #C6         ; Skip if V5 != 198
$8AC    $AA53   LD       I, $A53         ; Load A53 into I
$8AE    $7AEF   ADD      VA, #EF         ; Add 239 to VA
$8B0    $D485   DRW      V4, V8, #5      ; Draw 5-byte sprite at V4, V8
$8B2    $D731   DRW      V7, V3, #1      ; Draw 1-byte sprite at V7, V3
$8B4    $DC3F   DRW      VC, V3, #F      ; Draw 15-byte sprite at VC, V3
$8B6    $A824   LD       I, $824         ; Load 824 into I
$8B8    $FE3B   UNKNOWN  FE3B            ; Unknown Fxxx instruction
$8BA    $F3BB   UNKNOWN  F3BB            ; Unknown Fxxx instruction
$8BC    $7105   ADD      V1, #05         ; Add 5 to V1
$8BE    $678C   LD       V7, #8C         ; Load 140 into V7
$8C0    $0894   SYS      $894            ; System call to 894
$8C2    $2368   CALL     $368            ; Call subroutine at 368
$8C4    $7BE9   ADD      VB, #E9         ; Add 233 to VB
$8C6    $E633   UNKNOWN  $E633           ; Unknown Exxx instruction
$8C8    $E5F4   UNKNOWN  $E5F4           ; Unknown Exxx instruction
$8CA    $F209   UNKNOWN  F209            ; Unknown Fxxx instruction
$8CC    $BC1A   JP       V0, $C1A        ; Jump to V0 + C1A
$8CE    $C98E   RND      V9, #8E         ; V9 = random & 8E
$8D0    $02C4   SYS      $2C4            ; System call to 2C4
$8D2    $96D6   UNKNOWN  $96D6           ; Unknown 9xxx instruction
$8D4    $2CBA   CALL     $CBA            ; Call subroutine at CBA
$8D6    $9C2C   UNKNOWN  $9C2C           ; Unknown 9xxx instruction
$8D8    $132E   JP       $32E            ; Jump to 32E
$8DA    $0F8E   SYS      $F8E            ; System call to F8E
$8DC    $AE25   LD       I, $E25         ; Load E25 into I
$8DE    $FE15   LD       DT, VE          ; Delay timer = VE
$8E0    $AFA6   LD       I, $FA6         ; Load FA6 into I
$8E2    $74FE   ADD      V4, #FE         ; Add 254 to V4
$8E4    $5C25   UNKNOWN  $5C25           ; Unknown 5xxx instruction
$8E6    $1974   JP       $974            ; Jump to 974
$8E8    $5356   UNKNOWN  $5356           ; Unknown 5xxx instruction
$8EA    $9F8D   UNKNOWN  $9F8D           ; Unknown 9xxx instruction
$8EC    $D3E9   DRW      V3, VE, #9      ; Draw 9-byte sprite at V3, VE
$8EE    $93A9   UNKNOWN  $93A9           ; Unknown 9xxx instruction
$8F0    $8E34   ADD      VE, V3          ; VE += V3, VF = carry
$8F2    $709B   ADD      V0, #9B         ; Add 155 to V0
$8F4    $B6B6   JP       V0, $6B6        ; Jump to V0 + 6B6
$8F6    $6DE3   LD       VD, #E3         ; Load 227 into VD
$8F8    $25A8   CALL     $5A8            ; Call subroutine at 5A8
$8FA    $D23B   DRW      V2, V3, #B      ; Draw 11-byte sprite at V2, V3
$8FC    $BC33   JP       V0, $C33        ; Jump to V0 + C33
$8FE    $3485   SE       V4, #85         ; Skip if V4 == 133
$900    $CA27   RND      VA, #27         ; VA = random & 27
$902    $5A24   UNKNOWN  $5A24           ; Unknown 5xxx instruction
$904    $7CBC   ADD      VC, #BC         ; Add 188 to VC
$906    $BED8   JP       V0, $ED8        ; Jump to V0 + ED8
$908    $5208   UNKNOWN  $5208           ; Unknown 5xxx instruction
$90A    $CB81   RND      VB, #81         ; VB = random & 81
$90C    $76AD   ADD      V6, #AD         ; Add 173 to V6
$90E    $8A2C   UNKNOWN  8A2C            ; Unknown 8xxx instruction
$910    $B5C5   JP       V0, $5C5        ; Jump to V0 + 5C5
$912    $F298   UNKNOWN  F298            ; Unknown Fxxx instruction
$914    $309C   SE       V0, #9C         ; Skip if V0 == 156
$916    $67F7   LD       V7, #F7         ; Load 247 into V7
$918    $431E   SNE      V3, #1E         ; Skip if V3 != 30
$91A    $D8E3   DRW      V8, VE, #3      ; Draw 3-byte sprite at V8, VE
$91C    $750B   ADD      V5, #0B         ; Add 11 to V5
$91E    $4E4D   SNE      VE, #4D         ; Skip if VE != 77
$920    $450E   SNE      V5, #0E         ; Skip if V5 != 14
$922    $7714   ADD      V7, #14         ; Add 20 to V7
$924    $2107   CALL     $107            ; Call subroutine at 107
$926    $2B75   CALL     $B75            ; Call subroutine at B75
$928    $6FB2   LD       VF, #B2         ; Load 178 into VF
$92A    $1B70   JP       $B70            ; Jump to B70
$92C    $C7D8   RND      V7, #D8         ; V7 = random & D8
$92E    $901F   UNKNOWN  $901F           ; Unknown 9xxx instruction
$930    $4B57   SNE      VB, #57         ; Skip if VB != 87
$932    $0C35   SYS      $C35            ; System call to C35
$934    $1F31   JP       $F31            ; Jump to F31
$936    $CBDC   RND      VB, #DC         ; VB = random & DC
$938    $6C10   LD       VC, #10         ; Load 16 into VC
$93A    $F52D   UNKNOWN  F52D            ; Unknown Fxxx instruction
$93C    $95CE   UNKNOWN  $95CE           ; Unknown 9xxx instruction
$93E    $AA58   LD       I, $A58         ; Load A58 into I
$940    $A2F8   LD       I, $2F8         ; Load 2F8 into I
$942    $B7F4   JP       V0, $7F4        ; Jump to V0 + 7F4
$944    $A1F1   LD       I, $1F1         ; Load 1F1 into I
$946    $47C4   SNE      V7, #C4         ; Skip if V7 != 196
$948    $59B0   SE       V9, VB          ; Skip if V9 == VB
$94A    $7C4D   ADD      VC, #4D         ; Add 77 to VC
$94C    $E308   UNKNOWN  $E308           ; Unknown Exxx instruction
$94E    $6E7D   LD       VE, #7D         ; Load 125 into VE
$950    $37EC   SE       V7, #EC         ; Skip if V7 == 236
$952    $FD1E   ADD      I, VD           ; I += VD
$954    $EEA3   UNKNOWN  $EEA3           ; Unknown Exxx instruction
$956    $73C8   ADD      V3, #C8         ; Add 200 to V3
$958    $1262   JP       $262            ; Jump to 262
$95A    $50EA   UNKNOWN  $50EA           ; Unknown 5xxx instruction
$95C    $131F   JP       $31F            ; Jump to 31F
$95E    $C2EF   RND      V2, #EF         ; V2 = random & EF
$960    $36E1   SE       V6, #E1         ; Skip if V6 == 225
$962    $59E4   UNKNOWN  $59E4           ; Unknown 5xxx instruction
$964    $9B62   UNKNOWN  $9B62           ; Unknown 9xxx instruction
$966    $DCF6   DRW      VC, VF, #6      ; Draw 6-byte sprite at VC, VF
$968    $E567   UNKNOWN  $E567           ; Unknown Exxx instruction
$96A    $11B5   JP       $1B5            ; Jump to 1B5
$96C    $DC9F   DRW      VC, V9, #F      ; Draw 15-byte sprite at VC, V9
$96E    $C33B   RND      V3, #3B         ; V3 = random & 3B
$970    $C7F1   RND      V7, #F1         ; V7 = random & F1
$972    $8FA6   SHR      VF              ; VF >>= 1, VF = LSB
$974    $29F5   CALL     $9F5            ; Call subroutine at 9F5
$976    $D241   DRW      V2, V4, #1      ; Draw 1-byte sprite at V2, V4
$978    $A8D4   LD       I, $8D4         ; Load 8D4 into I
$97A    $2D4C   CALL     $D4C            ; Call subroutine at D4C
$97C    $C46E   RND      V4, #6E         ; V4 = random & 6E
$97E    $A70B   LD       I, $70B         ; Load 70B into I
$980    $0A5C   SYS      $A5C            ; System call to A5C
$982    $3C66   SE       VC, #66         ; Skip if VC == 102
$984    $C82A   RND      V8, #2A         ; V8 = random & 2A
$986    $30BE   SE       V0, #BE         ; Skip if V0 == 190
$988    $1B2A   JP       $B2A            ; Jump to B2A
$98A    $02A6   SYS      $2A6            ; System call to 2A6
$98C    $7092   ADD      V0, #92         ; Add 146 to V0
$98E    $69E4   LD       V9, #E4         ; Load 228 into V9
$990    $9403   UNKNOWN  $9403           ; Unknown 9xxx instruction
$992    $09B5   SYS      $9B5            ; System call to 9B5
$994    $8151   OR       V1, V5          ; V1 |= V5
$996    $DFAB   DRW      VF, VA, #B      ; Draw 11-byte sprite at VF, VA
$998    $D5C2   DRW      V5, VC, #2      ; Draw 2-byte sprite at V5, VC
$99A    $DB5E   DRW      VB, V5, #E      ; Draw 14-byte sprite at VB, V5
$99C    $8E92   AND      VE, V9          ; VE &= V9
$99E    $54F7   UNKNOWN  $54F7           ; Unknown 5xxx instruction
$9A0    $3CD5   SE       VC, #D5         ; Skip if VC == 213
$9A2    $375F   SE       V7, #5F         ; Skip if V7 == 95
$9A4    $943C   UNKNOWN  $943C           ; Unknown 9xxx instruction
$9A6    $5472   UNKNOWN  $5472           ; Unknown 5xxx instruction
$9A8    $8499   UNKNOWN  8499            ; Unknown 8xxx instruction
$9AA    $EB0F   UNKNOWN  $EB0F           ; Unknown Exxx instruction
$9AC    $96DE   UNKNOWN  $96DE           ; Unknown 9xxx instruction
$9AE    $EF68   UNKNOWN  $EF68           ; Unknown Exxx instruction
$9B0    $239D   CALL     $39D            ; Call subroutine at 39D
$9B2    $C1C0   RND      V1, #C0         ; V1 = random & C0
$9B4    $0C6D   SYS      $C6D            ; System call to C6D
$9B6    $2350   CALL     $350            ; Call subroutine at 350
$9B8    $3630   SE       V6, #30         ; Skip if V6 == 48
$9BA    $7041   ADD      V0, #41         ; Add 65 to V0
$9BC    $6A50   LD       VA, #50         ; Load 80 into VA
$9BE    $C937   RND      V9, #37         ; V9 = random & 37
$9C0    $84C4   ADD      V4, VC          ; V4 += VC, VF = carry
$9C2    $39BE   SE       V9, #BE         ; Skip if V9 == 190
$9C4    $0E78   SYS      $E78            ; System call to E78
$9C6    $0C94   SYS      $C94            ; System call to C94
$9C8    $2B01   CALL     $B01            ; Call subroutine at B01
$9CA    $2D04   CALL     $D04            ; Call subroutine at D04
$9CC    $881E   SHL      V8              ; V8 <<= 1, VF = MSB
$9CE    $5C95   UNKNOWN  $5C95           ; Unknown 5xxx instruction
$9D0    $2212   CALL     $212            ; Call subroutine at 212
$9D2    $F069   UNKNOWN  F069            ; Unknown Fxxx instruction
$9D4    $46BE   SNE      V6, #BE         ; Skip if V6 != 190
$9D6    $9811   UNKNOWN  $9811           ; Unknown 9xxx instruction
$9D8    $B354   JP       V0, $354        ; Jump to V0 + 354
$9DA    $C25A   RND      V2, #5A         ; V2 = random & 5A
$9DC    $6BA8   LD       VB, #A8         ; Load 168 into VB
$9DE    $BC04   JP       V0, $C04        ; Jump to V0 + C04
$9E0    $5C03   UNKNOWN  $5C03           ; Unknown 5xxx instruction
$9E2    $6F2A   LD       VF, #2A         ; Load 42 into VF
$9E4    $996A   UNKNOWN  $996A           ; Unknown 9xxx instruction
$9E6    $2432   CALL     $432            ; Call subroutine at 432
$9E8    $29F9   CALL     $9F9            ; Call subroutine at 9F9
$9EA    $CEFB   RND      VE, #FB         ; VE = random & FB
$9EC    $6C27   LD       VC, #27         ; Load 39 into VC
$9EE    $8191   OR       V1, V9          ; V1 |= V9
$9F0    $493C   SNE      V9, #3C         ; Skip if V9 != 60
$9F2    $AB8C   LD       I, $B8C         ; Load B8C into I
$9F4    $D1C3   DRW      V1, VC, #3      ; Draw 3-byte sprite at V1, VC
$9F6    $6A86   LD       VA, #86         ; Load 134 into VA
$9F8    $77D0   ADD      V7, #D0         ; Add 208 to V7
$9FA    $3AB2   SE       VA, #B2         ; Skip if VA == 178
$9FC    $8CC6   SHR      VC              ; VC >>= 1, VF = LSB
$9FE    $0946   SYS      $946            ; System call to 946
$A00    $27A4   CALL     $7A4            ; Call subroutine at 7A4
$A02    $D0CA   DRW      V0, VC, #A      ; Draw 10-byte sprite at V0, VC
$A04    $A16A   LD       I, $16A         ; Load 16A into I
$A06    $85BC   UNKNOWN  85BC            ; Unknown 8xxx instruction
$A08    $C44E   RND      V4, #4E         ; V4 = random & 4E
$A0A    $C487   RND      V4, #87         ; V4 = random & 87
$A0C    $2837   CALL     $837            ; Call subroutine at 837
$A0E    $1FC4   JP       $FC4            ; Jump to FC4
$A10    $7DFB   ADD      VD, #FB         ; Add 251 to VD
$A12    $59A7   UNKNOWN  $59A7           ; Unknown 5xxx instruction
$A14    $2BB2   CALL     $BB2            ; Call subroutine at BB2
$A16    $73FC   ADD      V3, #FC         ; Add 252 to V3
$A18    $7987   ADD      V9, #87         ; Add 135 to V9
$A1A    $205B   CALL     $05B            ; Call subroutine at 05B
$A1C    $4E54   SNE      VE, #54         ; Skip if VE != 84
$A1E    $3752   SE       V7, #52         ; Skip if V7 == 82
$A20    $67D4   LD       V7, #D4         ; Load 212 into V7
$A22    $ABA2   LD       I, $BA2         ; Load BA2 into I
$A24    $3EA9   SE       VE, #A9         ; Skip if VE == 169
$A26    $DCEA   DRW      VC, VE, #A      ; Draw 10-byte sprite at VC, VE
$A28    $D75B   DRW      V7, V5, #B      ; Draw 11-byte sprite at V7, V5
$A2A    $9EC9   UNKNOWN  $9EC9           ; Unknown 9xxx instruction
$A2C    $4677   SNE      V6, #77         ; Skip if V6 != 119
$A2E    $0B7A   SYS      $B7A            ; System call to B7A
$A30    $A1F0   LD       I, $1F0         ; Load 1F0 into I
$A32    $5F1B   UNKNOWN  $5F1B           ; Unknown 5xxx instruction
$A34    $DC4C   DRW      VC, V4, #C      ; Draw 12-byte sprite at VC, V4
$A36    $4D87   SNE      VD, #87         ; Skip if VD != 135
$A38    $D30C   DRW      V3, V0, #C      ; Draw 12-byte sprite at V3, V0
$A3A    $C067   RND      V0, #67         ; V0 = random & 67
$A3C    $72CF   ADD      V2, #CF         ; Add 207 to V2
$A3E    $1D50   JP       $D50            ; Jump to D50
$A40    $1A6E   JP       $A6E            ; Jump to A6E
$A42    $B723   JP       V0, $723        ; Jump to V0 + 723
$A44    $F332   UNKNOWN  F332            ; Unknown Fxxx instruction
$A46    $1886   JP       $886            ; Jump to 886
$A48    $8941   OR       V9, V4          ; V9 |= V4
$A4A    $D207   DRW      V2, V0, #7      ; Draw 7-byte sprite at V2, V0
$A4C    $978F   UNKNOWN  $978F           ; Unknown 9xxx instruction
$A4E    $84E4   ADD      V4, VE          ; V4 += VE, VF = carry
$A50    $896A   UNKNOWN  896A            ; Unknown 8xxx instruction
$A52    $4F1A   SNE      VF, #1A         ; Skip if VF != 26
$A54    $41D9   SNE      V1, #D9         ; Skip if V1 != 217
$A56    $4E93   SNE      VE, #93         ; Skip if VE != 147
$A58    $B23F   JP       V0, $23F        ; Jump to V0 + 23F
$A5A    $1763   JP       $763            ; Jump to 763
$A5C    $1556   JP       $556            ; Jump to 556
$A5E    $F548   UNKNOWN  F548            ; Unknown Fxxx instruction
$A60    $5AA0   SE       VA, VA          ; Skip if VA == VA
$A62    $9121   UNKNOWN  $9121           ; Unknown 9xxx instruction
$A64    $9EFF   UNKNOWN  $9EFF           ; Unknown 9xxx instruction
$A66    $314E   SE       V1, #4E         ; Skip if V1 == 78
$A68    $FEDA   UNKNOWN  FEDA            ; Unknown Fxxx instruction
$A6A    $BECB   JP       V0, $ECB        ; Jump to V0 + ECB
$A6C    $8CD2   AND      VC, VD          ; VC &= VD
$A6E    $6CA4   LD       VC, #A4         ; Load 164 into VC
$A70    $DB1E   DRW      VB, V1, #E      ; Draw 14-byte sprite at VB, V1
$A72    $7482   ADD      V4, #82         ; Add 130 to V4
$A74    $688B   LD       V8, #8B         ; Load 139 into V8
$A76    $3D16   SE       VD, #16         ; Skip if VD == 22
$A78    $06D5   SYS      $6D5            ; System call to 6D5
$A7A    $0F1C   SYS      $F1C            ; System call to F1C
$A7C    $B245   JP       V0, $245        ; Jump to V0 + 245
$A7E    $F861   UNKNOWN  F861            ; Unknown Fxxx instruction
$A80    $1AEC   JP       $AEC            ; Jump to AEC
$A82    $0B42   SYS      $B42            ; System call to B42
$A84    $10F9   JP       $0F9            ; Jump to 0F9
$A86    $D112   DRW      V1, V1, #2      ; Draw 2-byte sprite at V1, V1
$A88    $B2D1   JP       V0, $2D1        ; Jump to V0 + 2D1
$A8A    $2D8B   CALL     $D8B            ; Call subroutine at D8B
$A8C    $943E   UNKNOWN  $943E           ; Unknown 9xxx instruction
$A8E    $1B3F   JP       $B3F            ; Jump to B3F
$A90    $5099   UNKNOWN  $5099           ; Unknown 5xxx instruction
$A92    $FC7A   UNKNOWN  FC7A            ; Unknown Fxxx instruction
$A94    $07C1   SYS      $7C1            ; System call to 7C1
$A96    $A6D2   LD       I, $6D2         ; Load 6D2 into I
$A98    $B2B7   JP       V0, $2B7        ; Jump to V0 + 2B7
$A9A    $0A9C   SYS      $A9C            ; System call to A9C
$A9C    $1C38   JP       $C38            ; Jump to C38
$A9E    $2F72   CALL     $F72            ; Call subroutine at F72
$AA0    $2C41   CALL     $C41            ; Call subroutine at C41
$AA2    $84F3   XOR      V4, VF          ; V4 ^= VF
$AA4    $94C7   UNKNOWN  $94C7           ; Unknown 9xxx instruction
$AA6    $D13F   DRW      V1, V3, #F      ; Draw 15-byte sprite at V1, V3
$AA8    $3200   SE       V2, #00         ; Skip if V2 == 0
$AAA    $9428   UNKNOWN  $9428           ; Unknown 9xxx instruction
$AAC    $8AEA   UNKNOWN  8AEA            ; Unknown 8xxx instruction
$AAE    $DF96   DRW      VF, V9, #6      ; Draw 6-byte sprite at VF, V9
$AB0    $A418   LD       I, $418         ; Load 418 into I
$AB2    $2EEE   CALL     $EEE            ; Call subroutine at EEE
$AB4    $49C3   SNE      V9, #C3         ; Skip if V9 != 195
$AB6    $0015   SYS      $015            ; System call to 015
$AB8    $1313   JP       $313            ; Jump to 313
$ABA    $E043   UNKNOWN  $E043           ; Unknown Exxx instruction
$ABC    $2257   CALL     $257            ; Call subroutine at 257
$ABE    $B642   JP       V0, $642        ; Jump to V0 + 642
$AC0    $7530   ADD      V5, #30         ; Add 48 to V5
$AC2    $BCC4   JP       V0, $CC4        ; Jump to V0 + CC4
$AC4    $61AE   LD       V1, #AE         ; Load 174 into V1
$AC6    $62CC   LD       V2, #CC         ; Load 204 into V2
$AC8    $91C9   UNKNOWN  $91C9           ; Unknown 9xxx instruction
$ACA    $2CEA   CALL     $CEA            ; Call subroutine at CEA
$ACC    $010D   SYS      $10D            ; System call to 10D
$ACE    $1DC2   JP       $DC2            ; Jump to DC2
$AD0    $CDEE   RND      VD, #EE         ; VD = random & EE
$AD2    $9A8D   UNKNOWN  $9A8D           ; Unknown 9xxx instruction
$AD4    $B93F   JP       V0, $93F        ; Jump to V0 + 93F
$AD6    $95C6   UNKNOWN  $95C6           ; Unknown 9xxx instruction
$AD8    $E579   UNKNOWN  $E579           ; Unknown Exxx instruction
$ADA    $37EC   SE       V7, #EC         ; Skip if V7 == 236
$ADC    $1A69   JP       $A69            ; Jump to A69
$ADE    $4542   SNE      V5, #42         ; Skip if V5 != 66
$AE0    $1827   JP       $827            ; Jump to 827
$AE2    $33C0   SE       V3, #C0         ; Skip if V3 == 192
$AE4    $E9B1   UNKNOWN  $E9B1           ; Unknown Exxx instruction
$AE6    $5C73   UNKNOWN  $5C73           ; Unknown 5xxx instruction
$AE8    $01BA   SYS      $1BA            ; System call to 1BA
$AEA    $DE5E   DRW      VE, V5, #E      ; Draw 14-byte sprite at VE, V5
$AEC    $5B34   UNKNOWN  $5B34           ; Unknown 5xxx instruction
$AEE    $751B   ADD      V5, #1B         ; Add 27 to V5
$AF0    $3ED6   SE       VE, #D6         ; Skip if VE == 214
$AF2    $7C83   ADD      VC, #83         ; Add 131 to VC
$AF4    $6539   LD       V5, #39         ; Load 57 into V5
$AF6    $1CB5   JP       $CB5            ; Jump to CB5
$AF8    $069E   SYS      $69E            ; System call to 69E
$AFA    $16B6   JP       $6B6            ; Jump to 6B6
$AFC    $9227   UNKNOWN  $9227           ; Unknown 9xxx instruction
$AFE    $7D9E   ADD      VD, #9E         ; Add 158 to VD
$B00    $D964   DRW      V9, V6, #4      ; Draw 4-byte sprite at V9, V6
$B02    $4698   SNE      V6, #98         ; Skip if V6 != 152
$B04    $7846   ADD      V8, #46         ; Add 70 to V8
$B06    $BFBD   JP       V0, $FBD        ; Jump to V0 + FBD
$B08    $3D30   SE       VD, #30         ; Skip if VD == 48
$B0A    $3951   SE       V9, #51         ; Skip if V9 == 81
$B0C    $BDA9   JP       V0, $DA9        ; Jump to V0 + DA9
$B0E    $441A   SNE      V4, #1A         ; Skip if V4 != 26
$B10    $0AC3   SYS      $AC3            ; System call to AC3
$B12    $1E98   JP       $E98            ; Jump to E98
$B14    $E9DE   UNKNOWN  $E9DE           ; Unknown Exxx instruction
$B16    $1895   JP       $895            ; Jump to 895
$B18    $CC59   RND      VC, #59         ; VC = random & 59
$B1A    $575F   UNKNOWN  $575F           ; Unknown 5xxx instruction
$B1C    $278F   CALL     $78F            ; Call subroutine at 78F
$B1E    $F702   UNKNOWN  F702            ; Unknown Fxxx instruction
$B20    $4DDD   SNE      VD, #DD         ; Skip if VD != 221
$B22    $C38F   RND      V3, #8F         ; V3 = random & 8F
$B24    $FAF9   UNKNOWN  FAF9            ; Unknown Fxxx instruction
$B26    $FE1E   ADD      I, VE           ; I += VE
$B28    $35B9   SE       V5, #B9         ; Skip if V5 == 185
$B2A    $0530   SYS      $530            ; System call to 530
$B2C    $4E44   SNE      VE, #44         ; Skip if VE != 68
$B2E    $3A89   SE       VA, #89         ; Skip if VA == 137
$B30    $9CFE   UNKNOWN  $9CFE           ; Unknown 9xxx instruction
$B32    $2CA1   CALL     $CA1            ; Call subroutine at CA1
$B34    $7C9B   ADD      VC, #9B         ; Add 155 to VC
$B36    $75C6   ADD      V5, #C6         ; Add 198 to V5
$B38    $8C5C   UNKNOWN  8C5C            ; Unknown 8xxx instruction
$B3A    $81A9   UNKNOWN  81A9            ; Unknown 8xxx instruction
$B3C    $83E9   UNKNOWN  83E9            ; Unknown 8xxx instruction
$B3E    $B563   JP       V0, $563        ; Jump to V0 + 563
$B40    $34C4   SE       V4, #C4         ; Skip if V4 == 196
$B42    $B674   JP       V0, $674        ; Jump to V0 + 674
$B44    $4B54   SNE      VB, #54         ; Skip if VB != 84
$B46    $22AD   CALL     $2AD            ; Call subroutine at 2AD
$B48    $40B7   SNE      V0, #B7         ; Skip if V0 != 183
$B4A    $0366   SYS      $366            ; System call to 366
$B4C    $CDA8   RND      VD, #A8         ; VD = random & A8
$B4E    $83AB   UNKNOWN  83AB            ; Unknown 8xxx instruction
$B50    $C23C   RND      V2, #3C         ; V2 = random & 3C
$B52    $1F9E   JP       $F9E            ; Jump to F9E
$B54    $C3B0   RND      V3, #B0         ; V3 = random & B0
$B56    $A73F   LD       I, $73F         ; Load 73F into I
$B58    $E1D2   UNKNOWN  $E1D2           ; Unknown Exxx instruction
$B5A    $B8F5   JP       V0, $8F5        ; Jump to V0 + 8F5
$B5C    $59E1   UNKNOWN  $59E1           ; Unknown 5xxx instruction
$B5E    $2802   CALL     $802            ; Call subroutine at 802
$B60    $D8D8   DRW      V8, VD, #8      ; Draw 8-byte sprite at V8, VD
$B62    $97C0   SNE      V7, VC          ; Skip if V7 != VC
$B64    $D38B   DRW      V3, V8, #B      ; Draw 11-byte sprite at V3, V8
$B66    $2725   CALL     $725            ; Call subroutine at 725
$B68    $18DA   JP       $8DA            ; Jump to 8DA
$B6A    $FEB1   UNKNOWN  FEB1            ; Unknown Fxxx instruction
$B6C    $B838   JP       V0, $838        ; Jump to V0 + 838
$B6E    $57FD   UNKNOWN  $57FD           ; Unknown 5xxx instruction
$B70    $3744   SE       V7, #44         ; Skip if V7 == 68
$B72    $04E1   SYS      $4E1            ; System call to 4E1
$B74    $995D   UNKNOWN  $995D           ; Unknown 9xxx instruction
$B76    $992A   UNKNOWN  $992A           ; Unknown 9xxx instruction
$B78    $3262   SE       V2, #62         ; Skip if V2 == 98
$B7A    $E00F   UNKNOWN  $E00F           ; Unknown Exxx instruction
$B7C    $7B38   ADD      VB, #38         ; Add 56 to VB
$B7E    $A5F3   LD       I, $5F3         ; Load 5F3 into I
$B80    $0A3B   SYS      $A3B            ; System call to A3B
$B82    $612E   LD       V1, #2E         ; Load 46 into V1
$B84    $44CD   SNE      V4, #CD         ; Skip if V4 != 205
$B86    $2989   CALL     $989            ; Call subroutine at 989
$B88    $DFC4   DRW      VF, VC, #4      ; Draw 4-byte sprite at VF, VC
$B8A    $432C   SNE      V3, #2C         ; Skip if V3 != 44
$B8C    $273C   CALL     $73C            ; Call subroutine at 73C
$B8E    $6070   LD       V0, #70         ; Load 112 into V0
$B90    $AA45   LD       I, $A45         ; Load A45 into I
$B92    $3B78   SE       VB, #78         ; Skip if VB == 120
$B94    $4492   SNE      V4, #92         ; Skip if V4 != 146
$B96    $09C2   SYS      $9C2            ; System call to 9C2
$B98    $CEA3   RND      VE, #A3         ; VE = random & A3
$B9A    $91F0   SNE      V1, VF          ; Skip if V1 != VF
$B9C    $044B   SYS      $44B            ; System call to 44B
$B9E    $0820   SYS      $820            ; System call to 820
$BA0    $4F44   SNE      VF, #44         ; Skip if VF != 68
$BA2    $153E   JP       $53E            ; Jump to 53E
$BA4    $D568   DRW      V5, V6, #8      ; Draw 8-byte sprite at V5, V6
$BA6    $67FD   LD       V7, #FD         ; Load 253 into V7
$BA8    $FF0B   UNKNOWN  FF0B            ; Unknown Fxxx instruction
$BAA    $94D8   UNKNOWN  $94D8           ; Unknown 9xxx instruction
$BAC    $9420   SNE      V4, V2          ; Skip if V4 != V2
$BAE    $666D   LD       V6, #6D         ; Load 109 into V6
$BB0    $4896   SNE      V8, #96         ; Skip if V8 != 150
$BB2    $9897   UNKNOWN  $9897           ; Unknown 9xxx instruction
$BB4    $858E   SHL      V5              ; V5 <<= 1, VF = MSB
$BB6    $A356   LD       I, $356         ; Load 356 into I
$BB8    $1A41   JP       $A41            ; Jump to A41
$BBA    $CFBD   RND      VF, #BD         ; VF = random & BD
$BBC    $9BB6   UNKNOWN  $9BB6           ; Unknown 9xxx instruction
$BBE    $A630   LD       I, $630         ; Load 630 into I
$BC0    $F6C8   UNKNOWN  F6C8            ; Unknown Fxxx instruction
$BC2    $3412   SE       V4, #12         ; Skip if V4 == 18
$BC4    $EE03   UNKNOWN  $EE03           ; Unknown Exxx instruction
$BC6    $DD98   DRW      VD, V9, #8      ; Draw 8-byte sprite at VD, V9
$BC8    $A376   LD       I, $376         ; Load 376 into I
$BCA    $ABC5   LD       I, $BC5         ; Load BC5 into I
$BCC    $3D1A   SE       VD, #1A         ; Skip if VD == 26
$BCE    $27EF   CALL     $7EF            ; Call subroutine at 7EF
$BD0    $DEF6   DRW      VE, VF, #6      ; Draw 6-byte sprite at VE, VF
$BD2    $2718   CALL     $718            ; Call subroutine at 718
$BD4    $7C5D   ADD      VC, #5D         ; Add 93 to VC
$BD6    $BF0F   JP       V0, $F0F        ; Jump to V0 + F0F
$BD8    $4B85   SNE      VB, #85         ; Skip if VB != 133
$BDA    $A196   LD       I, $196         ; Load 196 into I
$BDC    $EFF6   UNKNOWN  $EFF6           ; Unknown Exxx instruction
$BDE    $2E39   CALL     $E39            ; Call subroutine at E39
$BE0    $7FB2   ADD      VF, #B2         ; Add 178 to VF
$BE2    $4EF8   SNE      VE, #F8         ; Skip if VE != 248
$BE4    $10C7   JP       $0C7            ; Jump to 0C7
$BE6    $D99F   DRW      V9, V9, #F      ; Draw 15-byte sprite at V9, V9
$BE8    $7450   ADD      V4, #50         ; Add 80 to V4
$BEA    $E5A2   UNKNOWN  $E5A2           ; Unknown Exxx instruction
$BEC    $03AF   SYS      $3AF            ; System call to 3AF
$BEE    $948E   UNKNOWN  $948E           ; Unknown 9xxx instruction
$BF0    $5D13   UNKNOWN  $5D13           ; Unknown 5xxx instruction
$BF2    $C4B0   RND      V4, #B0         ; V4 = random & B0
$BF4    $0C4B   SYS      $C4B            ; System call to C4B
$BF6    $2573   CALL     $573            ; Call subroutine at 573
$BF8    $5A75   UNKNOWN  $5A75           ; Unknown 5xxx instruction
$BFA    $2D6B   CALL     $D6B            ; Call subroutine at D6B
$BFC    $D7ED   DRW      V7, VE, #D      ; Draw 13-byte sprite at V7, VE
$BFE    $66BB   LD       V6, #BB         ; Load 187 into V6
$C00    $0016   SYS      $016            ; System call to 016
$C02    $39C1   SE       V9, #C1         ; Skip if V9 == 193
$C04    $C359   RND      V3, #59         ; V3 = random & 59
$C06    $9AC9   UNKNOWN  $9AC9           ; Unknown 9xxx instruction
$C08    $B7C8   JP       V0, $7C8        ; Jump to V0 + 7C8
$C0A    $0429   SYS      $429            ; System call to 429
$C0C    $C8FE   RND      V8, #FE         ; V8 = random & FE
$C0E    $2B4F   CALL     $B4F            ; Call subroutine at B4F
$C10    $44C5   SNE      V4, #C5         ; Skip if V4 != 197
$C12    $10A1   JP       $0A1            ; Jump to 0A1
$C14    $4C80   SNE      VC, #80         ; Skip if VC != 128
$C16    $5042   UNKNOWN  $5042           ; Unknown 5xxx instruction
$C18    $D20C   DRW      V2, V0, #C      ; Draw 12-byte sprite at V2, V0
$C1A    $61F3   LD       V1, #F3         ; Load 243 into V1
$C1C    $CBEF   RND      VB, #EF         ; VB = random & EF
$C1E    $78C8   ADD      V8, #C8         ; Add 200 to V8
$C20    $D105   DRW      V1, V0, #5      ; Draw 5-byte sprite at V1, V0
$C22    $FD8A   UNKNOWN  FD8A            ; Unknown Fxxx instruction
$C24    $CF75   RND      VF, #75         ; VF = random & 75
$C26    $F165   LD       V1, [I]         ; Load V0-V1 from I
$C28    $C44E   RND      V4, #4E         ; V4 = random & 4E
$C2A    $B5EB   JP       V0, $5EB        ; Jump to V0 + 5EB
$C2C    $8955   SUB      V9, V5          ; V9 -= V5, VF = !borrow
$C2E    $A86A   LD       I, $86A         ; Load 86A into I
$C30    $4CB3   SNE      VC, #B3         ; Skip if VC != 179
$C32    $92F1   UNKNOWN  $92F1           ; Unknown 9xxx instruction
$C34    $C574   RND      V5, #74         ; V5 = random & 74
$C36    $6DEB   LD       VD, #EB         ; Load 235 into VD
$C38    $F88A   UNKNOWN  F88A            ; Unknown Fxxx instruction
$C3A    $1F9F   JP       $F9F            ; Jump to F9F
$C3C    $DD2C   DRW      VD, V2, #C      ; Draw 12-byte sprite at VD, V2
$C3E    $823A   UNKNOWN  823A            ; Unknown 8xxx instruction
$C40    $5787   UNKNOWN  $5787           ; Unknown 5xxx instruction
$C42    $37B6   SE       V7, #B6         ; Skip if V7 == 182
$C44    $7A23   ADD      VA, #23         ; Add 35 to VA
$C46    $80E2   AND      V0, VE          ; V0 &= VE
$C48    $45D7   SNE      V5, #D7         ; Skip if V5 != 215
$C4A    $C7AA   RND      V7, #AA         ; V7 = random & AA
$C4C    $8FDA   UNKNOWN  8FDA            ; Unknown 8xxx instruction
$C4E    $539A   UNKNOWN  $539A           ; Unknown 5xxx instruction
$C50    $E6E8   UNKNOWN  $E6E8           ; Unknown Exxx instruction
$C52    $7347   ADD      V3, #47         ; Add 71 to V3
$C54    $8935   SUB      V9, V3          ; V9 -= V3, VF = !borrow
$C56    $3E07   SE       VE, #07         ; Skip if VE == 7
$C58    $BC09   JP       V0, $C09        ; Jump to V0 + C09
$C5A    $EF10   UNKNOWN  $EF10           ; Unknown Exxx instruction
$C5C    $A812   LD       I, $812         ; Load 812 into I
$C5E    $46D2   SNE      V6, #D2         ; Skip if V6 != 210
$C60    $A3EB   LD       I, $3EB         ; Load 3EB into I
$C62    $BADA   JP       V0, $ADA        ; Jump to V0 + ADA
$C64    $7033   ADD      V0, #33         ; Add 51 to V0
$C66    $2F43   CALL     $F43            ; Call subroutine at F43
$C68    $D34F   DRW      V3, V4, #F      ; Draw 15-byte sprite at V3, V4
$C6A    $D3E8   DRW      V3, VE, #8      ; Draw 8-byte sprite at V3, VE
$C6C    $0AF6   SYS      $AF6            ; System call to AF6
$C6E    $7A66   ADD      VA, #66         ; Add 102 to VA
$C70    $615E   LD       V1, #5E         ; Load 94 into V1
$C72    $0B35   SYS      $B35            ; System call to B35
$C74    $96E5   UNKNOWN  $96E5           ; Unknown 9xxx instruction
$C76    $129A   JP       $29A            ; Jump to 29A
$C78    $FE0C   UNKNOWN  FE0C            ; Unknown Fxxx instruction
$C7A    $EF40   UNKNOWN  $EF40           ; Unknown Exxx instruction
$C7C    $1A29   JP       $A29            ; Jump to A29
$C7E    $40D9   SNE      V0, #D9         ; Skip if V0 != 217
$C80    $239E   CALL     $39E            ; Call subroutine at 39E
$C82    $F1F7   UNKNOWN  F1F7            ; Unknown Fxxx instruction
$C84    $C697   RND      V6, #97         ; V6 = random & 97
$C86    $1B8D   JP       $B8D            ; Jump to B8D
$C88    $1F7D   JP       $F7D            ; Jump to F7D
$C8A    $6876   LD       V8, #76         ; Load 118 into V8
$C8C    $D1D3   DRW      V1, VD, #3      ; Draw 3-byte sprite at V1, VD
$C8E    $B8D6   JP       V0, $8D6        ; Jump to V0 + 8D6
$C90    $115C   JP       $15C            ; Jump to 15C
$C92    $8986   SHR      V9              ; V9 >>= 1, VF = LSB
$C94    $BD13   JP       V0, $D13        ; Jump to V0 + D13
$C96    $F8AC   UNKNOWN  F8AC            ; Unknown Fxxx instruction
$C98    $800B   UNKNOWN  800B            ; Unknown 8xxx instruction
$C9A    $0D14   SYS      $D14            ; System call to D14
$C9C    $C780   RND      V7, #80         ; V7 = random & 80
$C9E    $0590   SYS      $590            ; System call to 590
$CA0    $BA2F   JP       V0, $A2F        ; Jump to V0 + A2F
$CA2    $95CC   UNKNOWN  $95CC           ; Unknown 9xxx instruction
$CA4    $89A3   XOR      V9, VA          ; V9 ^= VA
$CA6    $E618   UNKNOWN  $E618           ; Unknown Exxx instruction
$CA8    $7BB8   ADD      VB, #B8         ; Add 184 to VB
$CAA    $3281   SE       V2, #81         ; Skip if V2 == 129
$CAC    $820F   UNKNOWN  820F            ; Unknown 8xxx instruction
$CAE    $DCEA   DRW      VC, VE, #A      ; Draw 10-byte sprite at VC, VE
$CB0    $C145   RND      V1, #45         ; V1 = random & 45
$CB2    $63A7   LD       V3, #A7         ; Load 167 into V3
$CB4    $4F22   SNE      VF, #22         ; Skip if VF != 34
$CB6    $1C48   JP       $C48            ; Jump to C48
$CB8    $3E5C   SE       VE, #5C         ; Skip if VE == 92
$CBA    $C7D2   RND      V7, #D2         ; V7 = random & D2
$CBC    $2F55   CALL     $F55            ; Call subroutine at F55
$CBE    $1654   JP       $654            ; Jump to 654
$CC0    $7B63   ADD      VB, #63         ; Add 99 to VB
$CC2    $7AD5   ADD      VA, #D5         ; Add 213 to VA
$CC4    $B4FD   JP       V0, $4FD        ; Jump to V0 + 4FD
$CC6    $26F5   CALL     $6F5            ; Call subroutine at 6F5
$CC8    $95AF   UNKNOWN  $95AF           ; Unknown 9xxx instruction
$CCA    $036F   SYS      $36F            ; System call to 36F
$CCC    $69CD   LD       V9, #CD         ; Load 205 into V9
$CCE    $C777   RND      V7, #77         ; V7 = random & 77
$CD0    $59AE   UNKNOWN  $59AE           ; Unknown 5xxx instruction
$CD2    $439F   SNE      V3, #9F         ; Skip if V3 != 159
$CD4    $74AE   ADD      V4, #AE         ; Add 174 to V4
$CD6    $27B2   CALL     $7B2            ; Call subroutine at 7B2
$CD8    $09AE   SYS      $9AE            ; System call to 9AE
$CDA    $EC18   UNKNOWN  $EC18           ; Unknown Exxx instruction
$CDC    $E96B   UNKNOWN  $E96B           ; Unknown Exxx instruction
$CDE    $E2B0   UNKNOWN  $E2B0           ; Unknown Exxx instruction
$CE0    $8032   AND      V0, V3          ; V0 &= V3
$CE2    $3300   SE       V3, #00         ; Skip if V3 == 0
$CE4    $49CD   SNE      V9, #CD         ; Skip if V9 != 205
$CE6    $CB69   RND      VB, #69         ; VB = random & 69
$CE8    $6AC9   LD       VA, #C9         ; Load 201 into VA
$CEA    $C508   RND      V5, #08         ; V5 = random & 08
$CEC    $A742   LD       I, $742         ; Load 742 into I
$CEE    $BC77   JP       V0, $C77        ; Jump to V0 + C77
$CF0    $727B   ADD      V2, #7B         ; Add 123 to V2
$CF2    $9487   UNKNOWN  $9487           ; Unknown 9xxx instruction
$CF4    $0F2E   SYS      $F2E            ; System call to F2E
$CF6    $1DCD   JP       $DCD            ; Jump to DCD
$CF8    $345E   SE       V4, #5E         ; Skip if V4 == 94
$CFA    $17CD   JP       $7CD            ; Jump to 7CD
$CFC    $7858   ADD      V8, #58         ; Add 88 to V8
$CFE    $EFE4   UNKNOWN  $EFE4           ; Unknown Exxx instruction
$D00    $9527   UNKNOWN  $9527           ; Unknown 9xxx instruction
$D02    $5AF0   SE       VA, VF          ; Skip if VA == VF
$D04    $D065   DRW      V0, V6, #5      ; Draw 5-byte sprite at V0, V6
$D06    $DAAA   DRW      VA, VA, #A      ; Draw 10-byte sprite at VA, VA
$D08    $CDBE   RND      VD, #BE         ; VD = random & BE
$D0A    $72D5   ADD      V2, #D5         ; Add 213 to V2
$D0C    $5A92   UNKNOWN  $5A92           ; Unknown 5xxx instruction
$D0E    $E667   UNKNOWN  $E667           ; Unknown Exxx instruction
$D10    $CFB5   RND      VF, #B5         ; VF = random & B5
$D12    $CBDF   RND      VB, #DF         ; VB = random & DF
$D14    $37C0   SE       V7, #C0         ; Skip if V7 == 192
$D16    $5924   UNKNOWN  $5924           ; Unknown 5xxx instruction
$D18    $0AF2   SYS      $AF2            ; System call to AF2
$D1A    $1456   JP       $456            ; Jump to 456
$D1C    $1868   JP       $868            ; Jump to 868
$D1E    $9FD4   UNKNOWN  $9FD4           ; Unknown 9xxx instruction
$D20    $ABA0   LD       I, $BA0         ; Load BA0 into I
$D22    $107A   JP       $07A            ; Jump to 07A
$D24    $B692   JP       V0, $692        ; Jump to V0 + 692
$D26    $AEDC   LD       I, $EDC         ; Load EDC into I
$D28    $D342   DRW      V3, V4, #2      ; Draw 2-byte sprite at V3, V4
$D2A    $1250   JP       $250            ; Jump to 250
$D2C    $D95F   DRW      V9, V5, #F      ; Draw 15-byte sprite at V9, V5
$D2E    $3229   SE       V2, #29         ; Skip if V2 == 41
$D30    $FF09   UNKNOWN  FF09            ; Unknown Fxxx instruction
$D32    $FDED   UNKNOWN  FDED            ; Unknown Fxxx instruction
$D34    $8FC1   OR       VF, VC          ; VF |= VC
$D36    $1320   JP       $320            ; Jump to 320
$D38    $E93E   UNKNOWN  $E93E           ; Unknown Exxx instruction
$D3A    $3DC5   SE       VD, #C5         ; Skip if VD == 197
$D3C    $93D6   UNKNOWN  $93D6           ; Unknown 9xxx instruction
$D3E    $A592   LD       I, $592         ; Load 592 into I
$D40    $84A8   UNKNOWN  84A8            ; Unknown 8xxx instruction
$D42    $F061   UNKNOWN  F061            ; Unknown Fxxx instruction
$D44    $8BF7   SUBN     VB, VF          ; VB = VF - VB, VF = !borrow
$D46    $12EB   JP       $2EB            ; Jump to 2EB
$D48    $9E51   UNKNOWN  $9E51           ; Unknown 9xxx instruction
$D4A    $B9FB   JP       V0, $9FB        ; Jump to V0 + 9FB
$D4C    $AD0F   LD       I, $D0F         ; Load D0F into I
$D4E    $F256   UNKNOWN  F256            ; Unknown Fxxx instruction
$D50    $7084   ADD      V0, #84         ; Add 132 to V0
$D52    $1F0B   JP       $F0B            ; Jump to F0B
$D54    $A962   LD       I, $962         ; Load 962 into I
$D56    $190B   JP       $90B            ; Jump to 90B
$D58    $7122   ADD      V1, #22         ; Add 34 to V1
$D5A    $05AF   SYS      $5AF            ; System call to 5AF
$D5C    $EEBA   UNKNOWN  $EEBA           ; Unknown Exxx instruction
$D5E    $68D5   LD       V8, #D5         ; Load 213 into V8
$D60    $7015   ADD      V0, #15         ; Add 21 to V0
$D62    $CBAF   RND      VB, #AF         ; VB = random & AF
$D64    $7AEA   ADD      VA, #EA         ; Add 234 to VA
$D66    $C5FC   RND      V5, #FC         ; V5 = random & FC
$D68    $3255   SE       V2, #55         ; Skip if V2 == 85
$D6A    $FA65   LD       VA, [I]         ; Load V0-VA from I
$D6C    $D7C9   DRW      V7, VC, #9      ; Draw 9-byte sprite at V7, VC
$D6E    $D4BF   DRW      V4, VB, #F      ; Draw 15-byte sprite at V4, VB
$D70    $A3E1   LD       I, $3E1         ; Load 3E1 into I
$D72    $6D39   LD       VD, #39         ; Load 57 into VD
$D74    $855F   UNKNOWN  855F            ; Unknown 8xxx instruction
$D76    $3D49   SE       VD, #49         ; Skip if VD == 73
$D78    $AD29   LD       I, $D29         ; Load D29 into I
$D7A    $A9B4   LD       I, $9B4         ; Load 9B4 into I
$D7C    $C8B3   RND      V8, #B3         ; V8 = random & B3
$D7E    $EE36   UNKNOWN  $EE36           ; Unknown Exxx instruction
$D80    $19B9   JP       $9B9            ; Jump to 9B9
$D82    $A1F4   LD       I, $1F4         ; Load 1F4 into I
$D84    $DB40   DRW      VB, V4, #0      ; Draw 0-byte sprite at VB, V4
$D86    $F621   UNKNOWN  F621            ; Unknown Fxxx instruction
$D88    $5E64   UNKNOWN  $5E64           ; Unknown 5xxx instruction
$D8A    $99B7   UNKNOWN  $99B7           ; Unknown 9xxx instruction
$D8C    $5334   UNKNOWN  $5334           ; Unknown 5xxx instruction
$D8E    $F6D2   UNKNOWN  F6D2            ; Unknown Fxxx instruction
$D90    $BFA4   JP       V0, $FA4        ; Jump to V0 + FA4
$D92    $65A6   LD       V5, #A6         ; Load 166 into V5
$D94    $AD44   LD       I, $D44         ; Load D44 into I
$D96    $AEB0   LD       I, $EB0         ; Load EB0 into I
$D98    $909C   UNKNOWN  $909C           ; Unknown 9xxx instruction
$D9A    $ED75   UNKNOWN  $ED75           ; Unknown Exxx instruction
$D9C    $4C85   SNE      VC, #85         ; Skip if VC != 133
$D9E    $CCA0   RND      VC, #A0         ; VC = random & A0
$DA0    $B7E6   JP       V0, $7E6        ; Jump to V0 + 7E6
$DA2    $2306   CALL     $306            ; Call subroutine at 306
$DA4    $C885   RND      V8, #85         ; V8 = random & 85
$DA6    $D91E   DRW      V9, V1, #E      ; Draw 14-byte sprite at V9, V1
$DA8    $78C2   ADD      V8, #C2         ; Add 194 to V8
$DAA    $1D9F   JP       $D9F            ; Jump to D9F
$DAC    $3022   SE       V0, #22         ; Skip if V0 == 34
$DAE    $C80B   RND      V8, #0B         ; V8 = random & 0B
$DB0    $30CF   SE       V0, #CF         ; Skip if V0 == 207
$DB2    $656C   LD       V5, #6C         ; Load 108 into V5
$DB4    $EA1D   UNKNOWN  $EA1D           ; Unknown Exxx instruction
$DB6    $731F   ADD      V3, #1F         ; Add 31 to V3
$DB8    $2614   CALL     $614            ; Call subroutine at 614
$DBA    $2754   CALL     $754            ; Call subroutine at 754
$DBC    $B55C   JP       V0, $55C        ; Jump to V0 + 55C
$DBE    $185B   JP       $85B            ; Jump to 85B
$DC0    $3532   SE       V5, #32         ; Skip if V5 == 50
$DC2    $5B69   UNKNOWN  $5B69           ; Unknown 5xxx instruction
$DC4    $B1F1   JP       V0, $1F1        ; Jump to V0 + 1F1
$DC6    $5770   SE       V7, V7          ; Skip if V7 == V7
$DC8    $FB3B   UNKNOWN  FB3B            ; Unknown Fxxx instruction
$DCA    $9E68   UNKNOWN  $9E68           ; Unknown 9xxx instruction
$DCC    $A37F   LD       I, $37F         ; Load 37F into I
$DCE    $6391   LD       V3, #91         ; Load 145 into V3
$DD0    $2114   CALL     $114            ; Call subroutine at 114
$DD2    $CDA8   RND      VD, #A8         ; VD = random & A8
$DD4    $196A   JP       $96A            ; Jump to 96A
$DD6    $64B0   LD       V4, #B0         ; Load 176 into V4
$DD8    $5074   UNKNOWN  $5074           ; Unknown 5xxx instruction
$DDA    $DCB8   DRW      VC, VB, #8      ; Draw 8-byte sprite at VC, VB
$DDC    $4A17   SNE      VA, #17         ; Skip if VA != 23
$DDE    $C4B2   RND      V4, #B2         ; V4 = random & B2
$DE0    $51D2   UNKNOWN  $51D2           ; Unknown 5xxx instruction
$DE2    $F296   UNKNOWN  F296            ; Unknown Fxxx instruction
$DE4    $D4D6   DRW      V4, VD, #6      ; Draw 6-byte sprite at V4, VD
$DE6    $3A34   SE       VA, #34         ; Skip if VA == 52
$DE8    $1767   JP       $767            ; Jump to 767
$DEA    $6B21   LD       VB, #21         ; Load 33 into VB
$DEC    $2C9B   CALL     $C9B            ; Call subroutine at C9B
$DEE    $1805   JP       $805            ; Jump to 805
$DF0    $E596   UNKNOWN  $E596           ; Unknown Exxx instruction
$DF2    $0747   SYS      $747            ; System call to 747
$DF4    $F3D8   UNKNOWN  F3D8            ; Unknown Fxxx instruction
$DF6    $ACF2   LD       I, $CF2         ; Load CF2 into I
$DF8    $2F56   CALL     $F56            ; Call subroutine at F56
$DFA    $5379   UNKNOWN  $5379           ; Unknown 5xxx instruction
$DFC    $E583   UNKNOWN  $E583           ; Unknown Exxx instruction
$DFE    $4621   SNE      V6, #21         ; Skip if V6 != 33
$E00    $24ED   CALL     $4ED            ; Call subroutine at 4ED
$E02    $BA35   JP       V0, $A35        ; Jump to V0 + A35
$E04    $3BCC   SE       VB, #CC         ; Skip if VB == 204
$E06    $5905   UNKNOWN  $5905           ; Unknown 5xxx instruction
$E08    $6251   LD       V2, #51         ; Load 81 into V2
$E0A    $22DD   CALL     $2DD            ; Call subroutine at 2DD
$E0C    $AD29   LD       I, $D29         ; Load D29 into I
$E0E    $D324   DRW      V3, V2, #4      ; Draw 4-byte sprite at V3, V2
$E10    $83C7   SUBN     V3, VC          ; V3 = VC - V3, VF = !borrow
$E12    $85C1   OR       V5, VC          ; V5 |= VC
$E14    $47DA   SNE      V7, #DA         ; Skip if V7 != 218
$E16    $EA04   UNKNOWN  $EA04           ; Unknown Exxx instruction
$E18    $0875   SYS      $875            ; System call to 875
$E1A    $2111   CALL     $111            ; Call subroutine at 111
$E1C    $6368   LD       V3, #68         ; Load 104 into V3
$E1E    $7DC9   ADD      VD, #C9         ; Add 201 to VD
$E20    $5C6F   UNKNOWN  $5C6F           ; Unknown 5xxx instruction
$E22    $EDD3   UNKNOWN  $EDD3           ; Unknown Exxx instruction
$E24    $DC3B   DRW      VC, V3, #B      ; Draw 11-byte sprite at VC, V3
$E26    $4EA4   SNE      VE, #A4         ; Skip if VE != 164
$E28    $0B3E   SYS      $B3E            ; System call to B3E
$E2A    $199C   JP       $99C            ; Jump to 99C
$E2C    $82F3   XOR      V2, VF          ; V2 ^= VF
$E2E    $D1E7   DRW      V1, VE, #7      ; Draw 7-byte sprite at V1, VE
$E30    $FC98   UNKNOWN  FC98            ; Unknown Fxxx instruction
$E32    $3158   SE       V1, #58         ; Skip if V1 == 88
$E34    $73FA   ADD      V3, #FA         ; Add 250 to V3
$E36    $B73A   JP       V0, $73A        ; Jump to V0 + 73A
$E38    $755F   ADD      V5, #5F         ; Add 95 to V5
$E3A    $45F2   SNE      V5, #F2         ; Skip if V5 != 242
$E3C    $CDA7   RND      VD, #A7         ; VD = random & A7
$E3E    $E081   UNKNOWN  $E081           ; Unknown Exxx instruction
$E40    $69E7   LD       V9, #E7         ; Load 231 into V9
$E42    $A419   LD       I, $419         ; Load 419 into I
$E44    $A25B   LD       I, $25B         ; Load 25B into I
$E46    $4F99   SNE      VF, #99         ; Skip if VF != 153
$E48    $83B0   LD       V3, VB          ; V3 = VB
$E4A    $52FB   UNKNOWN  $52FB           ; Unknown 5xxx instruction
$E4C    $F5A7   UNKNOWN  F5A7            ; Unknown Fxxx instruction
$E4E    $DE3B   DRW      VE, V3, #B      ; Draw 11-byte sprite at VE, V3
$E50    $9B15   UNKNOWN  $9B15           ; Unknown 9xxx instruction
$E52    $164E   JP       $64E            ; Jump to 64E
$E54    $F4C8   UNKNOWN  F4C8            ; Unknown Fxxx instruction
$E56    $8E7E   SHL      VE              ; VE <<= 1, VF = MSB
$E58    $4757   SNE      V7, #57         ; Skip if V7 != 87
$E5A    $34E4   SE       V4, #E4         ; Skip if V4 == 228
$E5C    $CE66   RND      VE, #66         ; VE = random & 66
$E5E    $886E   SHL      V8              ; V8 <<= 1, VF = MSB
$E60    $95B8   UNKNOWN  $95B8           ; Unknown 9xxx instruction
$E62    $5294   UNKNOWN  $5294           ; Unknown 5xxx instruction
$E64    $A414   LD       I, $414         ; Load 414 into I
$E66    $1860   JP       $860            ; Jump to 860
$E68    $A6D5   LD       I, $6D5         ; Load 6D5 into I
$E6A    $889D   UNKNOWN  889D            ; Unknown 8xxx instruction
$E6C    $91E9   UNKNOWN  $91E9           ; Unknown 9xxx instruction
$E6E    $B3BA   JP       V0, $3BA        ; Jump to V0 + 3BA
$E70    $9F79   UNKNOWN  $9F79           ; Unknown 9xxx instruction
$E72    $EFEE   UNKNOWN  $EFEE           ; Unknown Exxx instruction
$E74    $0071   SYS      $071            ; System call to 071
$E76    $F5C2   UNKNOWN  F5C2            ; Unknown Fxxx instruction
$E78    $9DE3   UNKNOWN  $9DE3           ; Unknown 9xxx instruction
$E7A    $E38C   UNKNOWN  $E38C           ; Unknown Exxx instruction
$E7C    $EE74   UNKNOWN  $EE74           ; Unknown Exxx instruction
$E7E    $E3AF   UNKNOWN  $E3AF           ; Unknown Exxx instruction
$E80    $AA0B   LD       I, $A0B         ; Load A0B into I
$E82    $C7CA   RND      V7, #CA         ; V7 = random & CA
$E84    $D88F   DRW      V8, V8, #F      ; Draw 15-byte sprite at V8, V8
$E86    $DC21   DRW      VC, V2, #1      ; Draw 1-byte sprite at VC, V2
$E88    $1EBC   JP       $EBC            ; Jump to EBC
$E8A    $3B5E   SE       VB, #5E         ; Skip if VB == 94
$E8C    $A41B   LD       I, $41B         ; Load 41B into I
$E8E    $786E   ADD      V8, #6E         ; Add 110 to V8
$E90    $8845   SUB      V8, V4          ; V8 -= V4, VF = !borrow
$E92    $6EE7   LD       VE, #E7         ; Load 231 into VE
$E94    $C0E4   RND      V0, #E4         ; V0 = random & E4
$E96    $6DA4   LD       VD, #A4         ; Load 164 into VD
$E98    $1400   JP       $400            ; Jump to 400
$E9A    $B869   JP       V0, $869        ; Jump to V0 + 869
$E9C    $2D37   CALL     $D37            ; Call subroutine at D37
$E9E    $6A4A   LD       VA, #4A         ; Load 74 into VA
$EA0    $4DEB   SNE      VD, #EB         ; Skip if VD != 235
$EA2    $2AD0   CALL     $AD0            ; Call subroutine at AD0
$EA4    $401A   SNE      V0, #1A         ; Skip if V0 != 26
$EA6    $08DA   SYS      $8DA            ; System call to 8DA
$EA8    $AFCF   LD       I, $FCF         ; Load FCF into I
$EAA    $B2E5   JP       V0, $2E5        ; Jump to V0 + 2E5
$EAC    $246C   CALL     $46C            ; Call subroutine at 46C
$EAE    $001D   SYS      $01D            ; System call to 01D
$EB0    $B6A1   JP       V0, $6A1        ; Jump to V0 + 6A1
$EB2    $D9DD   DRW      V9, VD, #D      ; Draw 13-byte sprite at V9, VD
$EB4    $6DD7   LD       VD, #D7         ; Load 215 into VD
$EB6    $A64A   LD       I, $64A         ; Load 64A into I
$EB8    $AA01   LD       I, $A01         ; Load A01 into I
$EBA    $FF2D   UNKNOWN  FF2D            ; Unknown Fxxx instruction
$EBC    $7E9C   ADD      VE, #9C         ; Add 156 to VE
$EBE    $4E17   SNE      VE, #17         ; Skip if VE != 23
$EC0    $F889   UNKNOWN  F889            ; Unknown Fxxx instruction
$EC2    $6BAB   LD       VB, #AB         ; Load 171 into VB
$EC4    $23AC   CALL     $3AC            ; Call subroutine at 3AC
$EC6    $4A40   SNE      VA, #40         ; Skip if VA != 64
$EC8    $2427   CALL     $427            ; Call subroutine at 427
$ECA    $3463   SE       V4, #63         ; Skip if V4 == 99
$ECC    $46F7   SNE      V6, #F7         ; Skip if V6 != 247
$ECE    $BA0A   JP       V0, $A0A        ; Jump to V0 + A0A
$ED0    $54C3   UNKNOWN  $54C3           ; Unknown 5xxx instruction
$ED2    $CA8F   RND      VA, #8F         ; VA = random & 8F
$ED4    $4A1C   SNE      VA, #1C         ; Skip if VA != 28
$ED6    $9622   UNKNOWN  $9622           ; Unknown 9xxx instruction
$ED8    $1374   JP       $374            ; Jump to 374
$EDA    $6EAC   LD       VE, #AC         ; Load 172 into VE
$EDC    $EE34   UNKNOWN  $EE34           ; Unknown Exxx instruction
$EDE    $A21F   LD       I, $21F         ; Load 21F into I
$EE0    $50D0   SE       V0, VD          ; Skip if V0 == VD
$EE2    $438D   SNE      V3, #8D         ; Skip if V3 != 141
$EE4    $3608   SE       V6, #08         ; Skip if V6 == 8
$EE6    $3E20   SE       VE, #20         ; Skip if VE == 32
$EE8    $CAF9   RND      VA, #F9         ; VA = random & F9
$EEA    $D8F0   DRW      V8, VF, #0      ; Draw 0-byte sprite at V8, VF
$EEC    $0051   SYS      $051            ; System call to 051
$EEE    $2C34   CALL     $C34            ; Call subroutine at C34
$EF0    $0D3E   SYS      $D3E            ; System call to D3E
$EF2    $A505   LD       I, $505         ; Load 505 into I
$EF4    $61D9   LD       V1, #D9         ; Load 217 into V1
$EF6    $4B19   SNE      VB, #19         ; Skip if VB != 25
$EF8    $191A   JP       $91A            ; Jump to 91A
$EFA    $DB02   DRW      VB, V0, #2      ; Draw 2-byte sprite at VB, V0
$EFC    $8FD0   LD       VF, VD          ; VF = VD
$EFE    $8343   XOR      V3, V4          ; V3 ^= V4
$F00    $7AA0   ADD      VA, #A0         ; Add 160 to VA
$F02    $149D   JP       $49D            ; Jump to 49D
$F04    $13E5   JP       $3E5            ; Jump to 3E5
$F06    $7073   ADD      V0, #73         ; Add 115 to V0
$F08    $B824   JP       V0, $824        ; Jump to V0 + 824
$F0A    $0B6C   SYS      $B6C            ; System call to B6C
$F0C    $CA16   RND      VA, #16         ; VA = random & 16
$F0E    $A866   LD       I, $866         ; Load 866 into I
$F10    $96B2   UNKNOWN  $96B2           ; Unknown 9xxx instruction
$F12    $CB37   RND      VB, #37         ; VB = random & 37
$F14    $48E5   SNE      V8, #E5         ; Skip if V8 != 229
$F16    $9FDB   UNKNOWN  $9FDB           ; Unknown 9xxx instruction
$F18    $438A   SNE      V3, #8A         ; Skip if V3 != 138
$F1A    $568C   UNKNOWN  $568C           ; Unknown 5xxx instruction
$F1C    $8683   XOR      V6, V8          ; V6 ^= V8
$F1E    $4D52   SNE      VD, #52         ; Skip if VD != 82
$F20    $53E7   UNKNOWN  $53E7           ; Unknown 5xxx instruction
$F22    $4D41   SNE      VD, #41         ; Skip if VD != 65
$F24    $EA71   UNKNOWN  $EA71           ; Unknown Exxx instruction
$F26    $7A69   ADD      VA, #69         ; Add 105 to VA
$F28    $087E   SYS      $87E            ; System call to 87E
$F2A    $6A01   LD       VA, #01         ; Load 1 into VA
$F2C    $FB0F   UNKNOWN  FB0F            ; Unknown Fxxx instruction
$F2E    $51D2   UNKNOWN  $51D2           ; Unknown 5xxx instruction
$F30    $DE2A   DRW      VE, V2, #A      ; Draw 10-byte sprite at VE, V2
$F32    $DC88   DRW      VC, V8, #8      ; Draw 8-byte sprite at VC, V8
$F34    $675E   LD       V7, #5E         ; Load 94 into V7
$F36    $175D   JP       $75D            ; Jump to 75D
$F38    $34B9   SE       V4, #B9         ; Skip if V4 == 185
$F3A    $C0DB   RND      V0, #DB         ; V0 = random & DB
$F3C    $C559   RND      V5, #59         ; V5 = random & 59
$F3E    $95E3   UNKNOWN  $95E3           ; Unknown 9xxx instruction
$F40    $19C9   JP       $9C9            ; Jump to 9C9
$F42    $CAF7   RND      VA, #F7         ; VA = random & F7
$F44    $42A3   SNE      V2, #A3         ; Skip if V2 != 163
$F46    $32FA   SE       V2, #FA         ; Skip if V2 == 250
$F48    $2AB9   CALL     $AB9            ; Call subroutine at AB9
$F4A    $66CA   LD       V6, #CA         ; Load 202 into V6
$F4C    $DD62   DRW      VD, V6, #2      ; Draw 2-byte sprite at VD, V6
$F4E    $8C03   XOR      VC, V0          ; VC ^= V0
$F50    $261C   CALL     $61C            ; Call subroutine at 61C
$F52    $B832   JP       V0, $832        ; Jump to V0 + 832
$F54    $01BF   SYS      $1BF            ; System call to 1BF
$F56    $2F3B   CALL     $F3B            ; Call subroutine at F3B
$F58    $B532   JP       V0, $532        ; Jump to V0 + 532
$F5A    $3D20   SE       VD, #20         ; Skip if VD == 32
$F5C    $37F5   SE       V7, #F5         ; Skip if V7 == 245
$F5E    $D2C6   DRW      V2, VC, #6      ; Draw 6-byte sprite at V2, VC
$F60    $1663   JP       $663            ; Jump to 663
$F62    $9800   SNE      V8, V0          ; Skip if V8 != V0
$F64    $1526   JP       $526            ; Jump to 526
$F66    $6231   LD       V2, #31         ; Load 49 into V2
$F68    $F11C   UNKNOWN  F11C            ; Unknown Fxxx instruction
$F6A    $E656   UNKNOWN  $E656           ; Unknown Exxx instruction
$F6C    $BCF8   JP       V0, $CF8        ; Jump to V0 + CF8
$F6E    $5F47   UNKNOWN  $5F47           ; Unknown 5xxx instruction
$F70    $D80D   DRW      V8, V0, #D      ; Draw 13-byte sprite at V8, V0
$F72    $5C57   UNKNOWN  $5C57           ; Unknown 5xxx instruction
$F74    $C784   RND      V7, #84         ; V7 = random & 84
$F76    $9118   UNKNOWN  $9118           ; Unknown 9xxx instruction
$F78    $CAE1   RND      VA, #E1         ; VA = random & E1
$F7A    $C949   RND      V9, #49         ; V9 = random & 49
$F7C    $C9D6   RND      V9, #D6         ; V9 = random & D6
$F7E    $5276   UNKNOWN  $5276           ; Unknown 5xxx instruction
$F80    $A5AB   LD       I, $5AB         ; Load 5AB into I
$F82    $BCE5   JP       V0, $CE5        ; Jump to V0 + CE5
$F84    $5890   SE       V8, V9          ; Skip if V8 == V9
$F86    $179B   JP       $79B            ; Jump to 79B
$F88    $637B   LD       V3, #7B         ; Load 123 into V3
$F8A    $D81E   DRW      V8, V1, #E      ; Draw 14-byte sprite at V8, V1
$F8C    $241C   CALL     $41C            ; Call subroutine at 41C
$F8E    $80E1   OR       V0, VE          ; V0 |= VE
$F90    $81CC   UNKNOWN  81CC            ; Unknown 8xxx instruction
$F92    $AC53   LD       I, $C53         ; Load C53 into I
$F94    $3247   SE       V2, #47         ; Skip if V2 == 71
$F96    $25AF   CALL     $5AF            ; Call subroutine at 5AF
$F98    $42A1   SNE      V2, #A1         ; Skip if V2 != 161
$F9A    $72FF   ADD      V2, #FF         ; Add 255 to V2
$F9C    $4464   SNE      V4, #64         ; Skip if V4 != 100
$F9E    $C68C   RND      V6, #8C         ; V6 = random & 8C
$FA0    $495D   SNE      V9, #5D         ; Skip if V9 != 93
$FA2    $1F67   JP       $F67            ; Jump to F67
$FA4    $97B8   UNKNOWN  $97B8           ; Unknown 9xxx instruction
$FA6    $639F   LD       V3, #9F         ; Load 159 into V3
$FA8    $5CA7   UNKNOWN  $5CA7           ; Unknown 5xxx instruction
$FAA    $677F   LD       V7, #7F         ; Load 127 into V7
$FAC    $62D6   LD       V2, #D6         ; Load 214 into V2
$FAE    $2E5B   CALL     $E5B            ; Call subroutine at E5B
$FB0    $7D78   ADD      VD, #78         ; Add 120 to VD
$FB2    $8D1F   UNKNOWN  8D1F            ; Unknown 8xxx instruction
$FB4    $F10F   UNKNOWN  F10F            ; Unknown Fxxx instruction
$FB6    $5B7B   UNKNOWN  $5B7B           ; Unknown 5xxx instruction
$FB8    $4E92   SNE      VE, #92         ; Skip if VE != 146
$FBA    $2C49   CALL     $C49            ; Call subroutine at C49
$FBC    $5AD5   UNKNOWN  $5AD5           ; Unknown 5xxx instruction
$FBE    $972A   UNKNOWN  $972A           ; Unknown 9xxx instruction
$FC0    $3CD5   SE       VC, #D5         ; Skip if VC == 213
$FC2    $E274   UNKNOWN  $E274           ; Unknown Exxx instruction
$FC4    $010B   SYS      $10B            ; System call to 10B
$FC6    $9DDB   UNKNOWN  $9DDB           ; Unknown 9xxx instruction
$FC8    $2659   CALL     $659            ; Call subroutine at 659
$FCA    $7724   ADD      V7, #24         ; Add 36 to V7
$FCC    $A79E   LD       I, $79E         ; Load 79E into I
$FCE    $7F22   ADD      VF, #22         ; Add 34 to VF
$FD0    $12D1   JP       $2D1            ; Jump to 2D1
$FD2    $D295   DRW      V2, V9, #5      ; Draw 5-byte sprite at V2, V9
$FD4    $4039   SNE      V0, #39         ; Skip if V0 != 57
$FD6    $5384   UNKNOWN  $5384           ; Unknown 5xxx instruction
$FD8    $78D2   ADD      V8, #D2         ; Add 210 to V8
$FDA    $729C   ADD      V2, #9C         ; Add 156 to V2
$FDC    $4BD4   SNE      VB, #D4         ; Skip if VB != 212
$FDE    $1339   JP       $339            ; Jump to 339
$FE0    $767B   ADD      V6, #7B         ; Add 123 to V6
$FE2    $9C9B   UNKNOWN  $9C9B           ; Unknown 9xxx instruction
$FE4    $DEBE   DRW      VE, VB, #E      ; Draw 14-byte sprite at VE, VB
$FE6    $C010   RND      V0, #10         ; V0 = random & 10
$FE8    $A93D   LD       I, $93D         ; Load 93D into I
$FEA    $0ABD   SYS      $ABD            ; System call to ABD
$FEC    $965E   UNKNOWN  $965E           ; Unknown 9xxx instruction
$FEE    $4D64   SNE      VD, #64         ; Skip if VD != 100
$FF0    $C18C   RND      V1, #8C         ; V1 = random & 8C
$FF2    $B7A1   JP       V0, $7A1        ; Jump to V0 + 7A1
$FF4    $6C37   LD       VC, #37         ; Load 55 into VC
$FF6    $785B   ADD      V8, #5B         ; Add 91 to V8
$FF8    $2F98   CALL     $F98            ; Call subroutine at F98
$FFA    $6F2A   LD       VF, #2A         ; Load 42 into VF
$FFC    $3FED   SE       VF, #ED         ; Skip if VF == 237
$FFE    $8291   OR       V2, V9          ; V2 |= V9

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 434 (24.2%)
  JP      : 226 (12.6%)
  LD      : 220 (12.3%)
  RND     : 136 ( 7.6%)
  SNE     : 127 ( 7.1%)
  ADD     : 127 ( 7.1%)
  DRW     : 125 ( 7.0%)
  CALL    : 118 ( 6.6%)
  SE      : 118 ( 6.6%)
  SYS     :  99 ( 5.5%)
  OR      :  14 ( 0.8%)
  XOR     :  12 ( 0.7%)
  SHL     :   8 ( 0.4%)
  SUB     :   8 ( 0.4%)
  SUBN    :   7 ( 0.4%)
  AND     :   7 ( 0.4%)
  SHR     :   5 ( 0.3%)
  SKP     :   1 ( 0.1%)

Memory Operations: 347 (19.4%)
Arithmetic Operations: 175 (9.8%)
