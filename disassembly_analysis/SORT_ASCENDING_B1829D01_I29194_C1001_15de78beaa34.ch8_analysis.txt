
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B1829D01_I29194_C1001_15de78beaa34.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 1829
Instance: 29194
Direction: ascending
Final Array: [0, 1, 6, 31, 70, 95, 159, 228]
Operations: R:0 W:1 C:57 S:1

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 107
Sort Array References:
  $21E: LD I, $FBE ; Load FBE into I
  $24E: LD I, $CE6 ; Load CE6 into I
  $258: LD I, $206 ; Load 206 into I
  $2F0: LD I, $548 ; Load 548 into I
  $2F8: LD I, $E6F ; Load E6F into I
  $322: LD I, $ADE ; Load ADE into I
  $34A: LD I, $466 ; Load 466 into I
  $34C: LD I, $349 ; Load 349 into I
  $394: LD I, $7BD ; Load 7BD into I
  $39A: LD I, $2BA ; Load 2BA into I
  $3A8: LD I, $522 ; Load 522 into I
  $3C8: LD I, $6EE ; Load 6EE into I
  $3E6: LD I, $25F ; Load 25F into I
  $3FC: LD I, $DA7 ; Load DA7 into I
  $418: LD I, $F43 ; Load F43 into I
  $47A: LD I, $115 ; Load 115 into I
  $4A6: LD I, $ADB ; Load ADB into I
  $4B2: LD I, $ED7 ; Load ED7 into I
  $4BE: LD I, $1E9 ; Load 1E9 into I
  $4D4: LD I, $5D3 ; Load 5D3 into I
  $4F8: LD I, $733 ; Load 733 into I
  $530: LD I, $302 ; Load 302 into I
  $55E: LD I, $A2D ; Load A2D into I
  $56A: LD I, $426 ; Load 426 into I
  $57C: LD I, $32A ; Load 32A into I
  $5BE: LD I, $74F ; Load 74F into I
  $5CC: LD I, $4A8 ; Load 4A8 into I
  $5D0: LD I, $208 ; Load 208 into I
  $5F4: LD I, $2DE ; Load 2DE into I
  $5FC: LD I, $7D0 ; Load 7D0 into I
  $614: LD I, $F72 ; Load F72 into I
  $616: LD I, $E3B ; Load E3B into I
  $628: LD I, $FA7 ; Load FA7 into I
  $640: LD I, $3CC ; Load 3CC into I
  $682: LD I, $089 ; Load 089 into I
  $68E: LD I, $769 ; Load 769 into I
  $6A2: LD I, $814 ; Load 814 into I
  $6C0: LD I, $370 ; Load 370 into I
  $6CE: LD I, $91C ; Load 91C into I
  $6F4: LD I, $DF3 ; Load DF3 into I
  $702: LD I, $952 ; Load 952 into I
  $742: LD I, $774 ; Load 774 into I
  $74A: LD I, $E40 ; Load E40 into I
  $7FE: LD I, $D63 ; Load D63 into I
  $82E: LD I, $986 ; Load 986 into I
  $84A: LD I, $5F5 ; Load 5F5 into I
  $854: LD I, $CCF ; Load CCF into I
  $872: LD I, $152 ; Load 152 into I
  $8A8: LD I, $AA9 ; Load AA9 into I
  $8AC: LD I, $C6A ; Load C6A into I
  $8BA: LD I, $05C ; Load 05C into I
  $8BE: LD I, $C18 ; Load C18 into I
  $90C: LD I, $2D5 ; Load 2D5 into I
  $90E: LD I, $ABF ; Load ABF into I
  $93A: LD I, $FBB ; Load FBB into I
  $944: LD I, $EFB ; Load EFB into I
  $966: LD I, $A76 ; Load A76 into I
  $9B8: LD I, $373 ; Load 373 into I
  $A2E: LD I, $D69 ; Load D69 into I
  $A74: LD I, $7C2 ; Load 7C2 into I
  $A9E: LD I, $8C4 ; Load 8C4 into I
  $ACA: LD I, $E60 ; Load E60 into I
  $AD8: LD I, $C26 ; Load C26 into I
  $AE4: LD I, $020 ; Load 020 into I
  $AFA: LD I, $D76 ; Load D76 into I
  $B10: LD I, $95C ; Load 95C into I
  $B22: LD I, $AB5 ; Load AB5 into I
  $B34: LD I, $723 ; Load 723 into I
  $B46: LD I, $D28 ; Load D28 into I
  $B70: LD I, $C30 ; Load C30 into I
  $B74: LD I, $C75 ; Load C75 into I
  $B88: LD I, $6CC ; Load 6CC into I
  $B98: LD I, $2F0 ; Load 2F0 into I
  $C2E: LD I, $ECA ; Load ECA into I
  $C3E: LD I, $965 ; Load 965 into I
  $C6A: LD I, $2CF ; Load 2CF into I
  $C84: LD I, $31C ; Load 31C into I
  $CC6: LD I, $6DD ; Load 6DD into I
  $CE0: LD I, $1A6 ; Load 1A6 into I
  $CEE: LD I, $B6A ; Load B6A into I
  $D12: LD I, $9B8 ; Load 9B8 into I
  $D30: LD I, $C5A ; Load C5A into I
  $D3A: LD I, $A44 ; Load A44 into I
  $D54: LD I, $5B1 ; Load 5B1 into I
  $D58: LD I, $D90 ; Load D90 into I
  $D5A: LD I, $6B5 ; Load 6B5 into I
  $D7E: LD I, $560 ; Load 560 into I
  $D92: LD I, $591 ; Load 591 into I
  $DE2: LD I, $522 ; Load 522 into I
  $E22: LD I, $B1F ; Load B1F into I
  $E34: LD I, $C33 ; Load C33 into I
  $E94: LD I, $1C8 ; Load 1C8 into I
  $E9C: LD I, $BEC ; Load BEC into I
  $EB2: LD I, $835 ; Load 835 into I
  $F0E: LD I, $11F ; Load 11F into I
  $F14: LD I, $C76 ; Load C76 into I
  $F28: LD I, $81C ; Load 81C into I
  $F44: LD I, $35B ; Load 35B into I
  $F4A: LD I, $4B7 ; Load 4B7 into I
  $F4E: LD I, $506 ; Load 506 into I
  $F64: LD I, $0C1 ; Load 0C1 into I
  $F66: LD I, $4EB ; Load 4EB into I
  $F72: LD I, $DC0 ; Load DC0 into I
  $F78: LD I, $E5F ; Load E5F into I
  $F7A: LD I, $08C ; Load 08C into I
  $F80: LD I, $588 ; Load 588 into I
  $FD4: LD I, $58C ; Load 58C into I

CONTROL FLOW ANALYSIS:
Jumps: 200
Calls: 127
Branches: 251
Loops: 111
Loop Structures:
  $220 -> $215 (backward jump)
  $294 -> $1B1 (backward jump)
  $2FA -> $0E2 (backward jump)
  $40E -> $27D (backward jump)
  $444 -> $066 (backward jump)
  $470 -> $090 (backward jump)
  $4C2 -> $061 (backward jump)
  $4EC -> $049 (backward jump)
  $51A -> $2C9 (backward jump)
  $522 -> $067 (backward jump)
  $58E -> $498 (backward jump)
  $5D8 -> $2AA (backward jump)
  $5F8 -> $525 (backward jump)
  $5FE -> $4D0 (backward jump)
  $6A8 -> $4F2 (backward jump)
  $6B4 -> $671 (backward jump)
  $6C2 -> $64B (backward jump)
  $704 -> $635 (backward jump)
  $706 -> $465 (backward jump)
  $776 -> $10F (backward jump)
  $780 -> $419 (backward jump)
  $7D4 -> $493 (backward jump)
  $7E0 -> $4CB (backward jump)
  $848 -> $43C (backward jump)
  $85C -> $7DC (backward jump)
  $860 -> $3CE (backward jump)
  $87E -> $698 (backward jump)
  $8A4 -> $6A9 (backward jump)
  $8C6 -> $2E3 (backward jump)
  $922 -> $551 (backward jump)
  $926 -> $349 (backward jump)
  $954 -> $4BF (backward jump)
  $956 -> $4F1 (backward jump)
  $976 -> $7E6 (backward jump)
  $9CA -> $7A1 (backward jump)
  $9F2 -> $184 (backward jump)
  $A08 -> $925 (backward jump)
  $A2C -> $88D (backward jump)
  $A44 -> $86F (backward jump)
  $A76 -> $A41 (backward jump)
  $A78 -> $195 (backward jump)
  $A80 -> $943 (backward jump)
  $A90 -> $490 (backward jump)
  $AB4 -> $118 (backward jump)
  $ACE -> $692 (backward jump)
  $AD0 -> $AB8 (backward jump)
  $AE6 -> $921 (backward jump)
  $B0C -> $3AD (backward jump)
  $B2E -> $756 (backward jump)
  $B8E -> $7FB (backward jump)
  $BAC -> $9F5 (backward jump)
  $BB0 -> $955 (backward jump)
  $BD6 -> $500 (backward jump)
  $BEE -> $64E (backward jump)
  $C12 -> $7BC (backward jump)
  $C1A -> $275 (backward jump)
  $C22 -> $843 (backward jump)
  $C60 -> $50A (backward jump)
  $C62 -> $07B (backward jump)
  $C66 -> $06B (backward jump)
  $C76 -> $C2A (backward jump)
  $C80 -> $A88 (backward jump)
  $C8A -> $670 (backward jump)
  $C9A -> $7CD (backward jump)
  $CB2 -> $266 (backward jump)
  $CBA -> $B28 (backward jump)
  $CCE -> $913 (backward jump)
  $CD0 -> $790 (backward jump)
  $CF6 -> $346 (backward jump)
  $D02 -> $3A0 (backward jump)
  $D10 -> $507 (backward jump)
  $D16 -> $16A (backward jump)
  $D18 -> $93C (backward jump)
  $D20 -> $435 (backward jump)
  $D4E -> $BD2 (backward jump)
  $D5C -> $6AF (backward jump)
  $D7C -> $4F1 (backward jump)
  $D98 -> $2CD (backward jump)
  $DA4 -> $7C9 (backward jump)
  $DB0 -> $C69 (backward jump)
  $DCC -> $4F0 (backward jump)
  $DE8 -> $B2F (backward jump)
  $DF8 -> $1E5 (backward jump)
  $E0A -> $8B7 (backward jump)
  $E32 -> $AA2 (backward jump)
  $E4C -> $B62 (backward jump)
  $E84 -> $A97 (backward jump)
  $E90 -> $73D (backward jump)
  $E96 -> $8FF (backward jump)
  $EAC -> $5C1 (backward jump)
  $EDE -> $9A5 (backward jump)
  $EF8 -> $DC2 (backward jump)
  $F18 -> $0AE (backward jump)
  $F20 -> $254 (backward jump)
  $F2E -> $85E (backward jump)
  $F46 -> $6B6 (backward jump)
  $F4C -> $254 (backward jump)
  $F52 -> $59A (backward jump)
  $F54 -> $740 (backward jump)
  $F5A -> $431 (backward jump)
  $F5C -> $48D (backward jump)
  $F62 -> $BB0 (backward jump)
  $F82 -> $101 (backward jump)
  $F9C -> $51E (backward jump)
  $FAE -> $D95 (backward jump)
  $FC8 -> $585 (backward jump)
  $FCA -> $58C (backward jump)
  $FD8 -> $3C0 (backward jump)
  $FEA -> $83F (backward jump)
  $FF2 -> $E43 (backward jump)
  $FF4 -> $C77 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $4C52   SNE      VC, #52         ; Skip if VC != 82
$202    $8A34   ADD      VA, V3          ; VA += V3, VF = carry
$204    $B7F2   JP       V0, $7F2        ; Jump to V0 + 7F2
$206    $4F03   SNE      VF, #03         ; Skip if VF != 3
$208    $2868   CALL     $868            ; Call subroutine at 868
$20A    $FB3B   UNKNOWN  FB3B            ; Unknown Fxxx instruction
$20C    $C9CC   RND      V9, #CC         ; V9 = random & CC
$20E    $1C08   JP       $C08            ; Jump to C08
$210    $E969   UNKNOWN  $E969           ; Unknown Exxx instruction
$212    $9A04   UNKNOWN  $9A04           ; Unknown 9xxx instruction
$214    $EC6E   UNKNOWN  $EC6E           ; Unknown Exxx instruction
$216    $BEDA   JP       V0, $EDA        ; Jump to V0 + EDA
$218    $2344   CALL     $344            ; Call subroutine at 344
$21A    $8277   SUBN     V2, V7          ; V2 = V7 - V2, VF = !borrow
$21C    $4CFF   SNE      VC, #FF         ; Skip if VC != 255
$21E    $AFBE   LD       I, $FBE         ; Load FBE into I
$220    $1215   JP       $215            ; Jump to 215
$222    $C959   RND      V9, #59         ; V9 = random & 59
$224    $FB89   UNKNOWN  FB89            ; Unknown Fxxx instruction
$226    $0383   SYS      $383            ; System call to 383
$228    $025E   SYS      $25E            ; System call to 25E
$22A    $9BB6   UNKNOWN  $9BB6           ; Unknown 9xxx instruction
$22C    $19A4   JP       $9A4            ; Jump to 9A4
$22E    $4FD9   SNE      VF, #D9         ; Skip if VF != 217
$230    $81C7   SUBN     V1, VC          ; V1 = VC - V1, VF = !borrow
$232    $2DCF   CALL     $DCF            ; Call subroutine at DCF
$234    $D4B0   DRW      V4, VB, #0      ; Draw 0-byte sprite at V4, VB
$236    $4FC7   SNE      VF, #C7         ; Skip if VF != 199
$238    $E15B   UNKNOWN  $E15B           ; Unknown Exxx instruction
$23A    $73E6   ADD      V3, #E6         ; Add 230 to V3
$23C    $0DB0   SYS      $DB0            ; System call to DB0
$23E    $92E2   UNKNOWN  $92E2           ; Unknown 9xxx instruction
$240    $7D07   ADD      VD, #07         ; Add 7 to VD
$242    $C7E7   RND      V7, #E7         ; V7 = random & E7
$244    $43EE   SNE      V3, #EE         ; Skip if V3 != 238
$246    $4A0F   SNE      VA, #0F         ; Skip if VA != 15
$248    $BF14   JP       V0, $F14        ; Jump to V0 + F14
$24A    $400F   SNE      V0, #0F         ; Skip if V0 != 15
$24C    $1646   JP       $646            ; Jump to 646
$24E    $ACE6   LD       I, $CE6         ; Load CE6 into I
$250    $B83C   JP       V0, $83C        ; Jump to V0 + 83C
$252    $E11C   UNKNOWN  $E11C           ; Unknown Exxx instruction
$254    $2331   CALL     $331            ; Call subroutine at 331
$256    $B913   JP       V0, $913        ; Jump to V0 + 913
$258    $A206   LD       I, $206         ; Load 206 into I
$25A    $D0BF   DRW      V0, VB, #F      ; Draw 15-byte sprite at V0, VB
$25C    $26C1   CALL     $6C1            ; Call subroutine at 6C1
$25E    $49C6   SNE      V9, #C6         ; Skip if V9 != 198
$260    $6036   LD       V0, #36         ; Load 54 into V0
$262    $5EBE   UNKNOWN  $5EBE           ; Unknown 5xxx instruction
$264    $5B80   SE       VB, V8          ; Skip if VB == V8
$266    $0A2C   SYS      $A2C            ; System call to A2C
$268    $9046   UNKNOWN  $9046           ; Unknown 9xxx instruction
$26A    $632F   LD       V3, #2F         ; Load 47 into V3
$26C    $59A6   UNKNOWN  $59A6           ; Unknown 5xxx instruction
$26E    $37C4   SE       V7, #C4         ; Skip if V7 == 196
$270    $131E   JP       $31E            ; Jump to 31E
$272    $2E66   CALL     $E66            ; Call subroutine at E66
$274    $2761   CALL     $761            ; Call subroutine at 761
$276    $DDFA   DRW      VD, VF, #A      ; Draw 10-byte sprite at VD, VF
$278    $CF1F   RND      VF, #1F         ; VF = random & 1F
$27A    $066C   SYS      $66C            ; System call to 66C
$27C    $34A1   SE       V4, #A1         ; Skip if V4 == 161
$27E    $2032   CALL     $032            ; Call subroutine at 032
$280    $3EB1   SE       VE, #B1         ; Skip if VE == 177
$282    $EEB1   UNKNOWN  $EEB1           ; Unknown Exxx instruction
$284    $0D42   SYS      $D42            ; System call to D42
$286    $12C3   JP       $2C3            ; Jump to 2C3
$288    $92E5   UNKNOWN  $92E5           ; Unknown 9xxx instruction
$28A    $FA9C   UNKNOWN  FA9C            ; Unknown Fxxx instruction
$28C    $9A8B   UNKNOWN  $9A8B           ; Unknown 9xxx instruction
$28E    $715A   ADD      V1, #5A         ; Add 90 to V1
$290    $DE8A   DRW      VE, V8, #A      ; Draw 10-byte sprite at VE, V8
$292    $E254   UNKNOWN  $E254           ; Unknown Exxx instruction
$294    $11B1   JP       $1B1            ; Jump to 1B1
$296    $448A   SNE      V4, #8A         ; Skip if V4 != 138
$298    $E3E2   UNKNOWN  $E3E2           ; Unknown Exxx instruction
$29A    $5C36   UNKNOWN  $5C36           ; Unknown 5xxx instruction
$29C    $8E65   SUB      VE, V6          ; VE -= V6, VF = !borrow
$29E    $9109   UNKNOWN  $9109           ; Unknown 9xxx instruction
$2A0    $97C6   UNKNOWN  $97C6           ; Unknown 9xxx instruction
$2A2    $0FE9   SYS      $FE9            ; System call to FE9
$2A4    $59E6   UNKNOWN  $59E6           ; Unknown 5xxx instruction
$2A6    $1562   JP       $562            ; Jump to 562
$2A8    $9C38   UNKNOWN  $9C38           ; Unknown 9xxx instruction
$2AA    $7F68   ADD      VF, #68         ; Add 104 to VF
$2AC    $2F4B   CALL     $F4B            ; Call subroutine at F4B
$2AE    $E005   UNKNOWN  $E005           ; Unknown Exxx instruction
$2B0    $3FDB   SE       VF, #DB         ; Skip if VF == 219
$2B2    $BD4A   JP       V0, $D4A        ; Jump to V0 + D4A
$2B4    $9B21   UNKNOWN  $9B21           ; Unknown 9xxx instruction
$2B6    $4F40   SNE      VF, #40         ; Skip if VF != 64
$2B8    $6990   LD       V9, #90         ; Load 144 into V9
$2BA    $33CC   SE       V3, #CC         ; Skip if V3 == 204
$2BC    $017A   SYS      $17A            ; System call to 17A
$2BE    $CF6C   RND      VF, #6C         ; VF = random & 6C
$2C0    $466C   SNE      V6, #6C         ; Skip if V6 != 108
$2C2    $FD07   LD       VD, DT          ; VD = delay timer
$2C4    $7D39   ADD      VD, #39         ; Add 57 to VD
$2C6    $D185   DRW      V1, V8, #5      ; Draw 5-byte sprite at V1, V8
$2C8    $6F3D   LD       VF, #3D         ; Load 61 into VF
$2CA    $9CFC   UNKNOWN  $9CFC           ; Unknown 9xxx instruction
$2CC    $9DF4   UNKNOWN  $9DF4           ; Unknown 9xxx instruction
$2CE    $3AA5   SE       VA, #A5         ; Skip if VA == 165
$2D0    $D244   DRW      V2, V4, #4      ; Draw 4-byte sprite at V2, V4
$2D2    $BAF3   JP       V0, $AF3        ; Jump to V0 + AF3
$2D4    $646A   LD       V4, #6A         ; Load 106 into V4
$2D6    $8FB8   UNKNOWN  8FB8            ; Unknown 8xxx instruction
$2D8    $6875   LD       V8, #75         ; Load 117 into V8
$2DA    $F331   UNKNOWN  F331            ; Unknown Fxxx instruction
$2DC    $6929   LD       V9, #29         ; Load 41 into V9
$2DE    $14E4   JP       $4E4            ; Jump to 4E4
$2E0    $22F1   CALL     $2F1            ; Call subroutine at 2F1
$2E2    $D1F9   DRW      V1, VF, #9      ; Draw 9-byte sprite at V1, VF
$2E4    $2E38   CALL     $E38            ; Call subroutine at E38
$2E6    $F57B   UNKNOWN  F57B            ; Unknown Fxxx instruction
$2E8    $8301   OR       V3, V0          ; V3 |= V0
$2EA    $4C72   SNE      VC, #72         ; Skip if VC != 114
$2EC    $2FFB   CALL     $FFB            ; Call subroutine at FFB
$2EE    $F232   UNKNOWN  F232            ; Unknown Fxxx instruction
$2F0    $A548   LD       I, $548         ; Load 548 into I
$2F2    $526C   UNKNOWN  $526C           ; Unknown 5xxx instruction
$2F4    $6E0B   LD       VE, #0B         ; Load 11 into VE
$2F6    $1E7A   JP       $E7A            ; Jump to E7A
$2F8    $AE6F   LD       I, $E6F         ; Load E6F into I
$2FA    $10E2   JP       $0E2            ; Jump to 0E2
$2FC    $8052   AND      V0, V5          ; V0 &= V5
$2FE    $3E2D   SE       VE, #2D         ; Skip if VE == 45
$300    $0001   SYS      $001            ; System call to 001
$302    $061F   SYS      $61F            ; System call to 61F
$304    $465F   SNE      V6, #5F         ; Skip if V6 != 95
$306    $9FE4   UNKNOWN  $9FE4           ; Unknown 9xxx instruction
$308    $808D   UNKNOWN  808D            ; Unknown 8xxx instruction
$30A    $80C3   XOR      V0, VC          ; V0 ^= VC
$30C    $707F   ADD      V0, #7F         ; Add 127 to V0
$30E    $88C9   UNKNOWN  88C9            ; Unknown 8xxx instruction
$310    $CAB9   RND      VA, #B9         ; VA = random & B9
$312    $DFDA   DRW      VF, VD, #A      ; Draw 10-byte sprite at VF, VD
$314    $48DD   SNE      V8, #DD         ; Skip if V8 != 221
$316    $801D   UNKNOWN  801D            ; Unknown 8xxx instruction
$318    $D0F1   DRW      V0, VF, #1      ; Draw 1-byte sprite at V0, VF
$31A    $E256   UNKNOWN  $E256           ; Unknown Exxx instruction
$31C    $E67E   UNKNOWN  $E67E           ; Unknown Exxx instruction
$31E    $6463   LD       V4, #63         ; Load 99 into V4
$320    $E2B6   UNKNOWN  $E2B6           ; Unknown Exxx instruction
$322    $AADE   LD       I, $ADE         ; Load ADE into I
$324    $9380   SNE      V3, V8          ; Skip if V3 != V8
$326    $04BD   SYS      $4BD            ; System call to 4BD
$328    $1D08   JP       $D08            ; Jump to D08
$32A    $5391   UNKNOWN  $5391           ; Unknown 5xxx instruction
$32C    $66FA   LD       V6, #FA         ; Load 250 into V6
$32E    $2C3E   CALL     $C3E            ; Call subroutine at C3E
$330    $269E   CALL     $69E            ; Call subroutine at 69E
$332    $8FD7   SUBN     VF, VD          ; VF = VD - VF, VF = !borrow
$334    $FF7C   UNKNOWN  FF7C            ; Unknown Fxxx instruction
$336    $68A1   LD       V8, #A1         ; Load 161 into V8
$338    $5368   UNKNOWN  $5368           ; Unknown 5xxx instruction
$33A    $0E77   SYS      $E77            ; System call to E77
$33C    $7F4D   ADD      VF, #4D         ; Add 77 to VF
$33E    $9D52   UNKNOWN  $9D52           ; Unknown 9xxx instruction
$340    $2891   CALL     $891            ; Call subroutine at 891
$342    $075E   SYS      $75E            ; System call to 75E
$344    $DC7D   DRW      VC, V7, #D      ; Draw 13-byte sprite at VC, V7
$346    $5F51   UNKNOWN  $5F51           ; Unknown 5xxx instruction
$348    $7561   ADD      V5, #61         ; Add 97 to V5
$34A    $A466   LD       I, $466         ; Load 466 into I
$34C    $A349   LD       I, $349         ; Load 349 into I
$34E    $4529   SNE      V5, #29         ; Skip if V5 != 41
$350    $B574   JP       V0, $574        ; Jump to V0 + 574
$352    $D43F   DRW      V4, V3, #F      ; Draw 15-byte sprite at V4, V3
$354    $845C   UNKNOWN  845C            ; Unknown 8xxx instruction
$356    $6D6A   LD       VD, #6A         ; Load 106 into VD
$358    $0276   SYS      $276            ; System call to 276
$35A    $60E6   LD       V0, #E6         ; Load 230 into V0
$35C    $8FF6   SHR      VF              ; VF >>= 1, VF = LSB
$35E    $5E1A   UNKNOWN  $5E1A           ; Unknown 5xxx instruction
$360    $3DD6   SE       VD, #D6         ; Skip if VD == 214
$362    $9633   UNKNOWN  $9633           ; Unknown 9xxx instruction
$364    $909C   UNKNOWN  $909C           ; Unknown 9xxx instruction
$366    $4916   SNE      V9, #16         ; Skip if V9 != 22
$368    $6A94   LD       VA, #94         ; Load 148 into VA
$36A    $1F24   JP       $F24            ; Jump to F24
$36C    $D7BA   DRW      V7, VB, #A      ; Draw 10-byte sprite at V7, VB
$36E    $E9EE   UNKNOWN  $E9EE           ; Unknown Exxx instruction
$370    $9096   UNKNOWN  $9096           ; Unknown 9xxx instruction
$372    $E111   UNKNOWN  $E111           ; Unknown Exxx instruction
$374    $C07F   RND      V0, #7F         ; V0 = random & 7F
$376    $D4D0   DRW      V4, VD, #0      ; Draw 0-byte sprite at V4, VD
$378    $59C2   UNKNOWN  $59C2           ; Unknown 5xxx instruction
$37A    $8424   ADD      V4, V2          ; V4 += V2, VF = carry
$37C    $E090   UNKNOWN  $E090           ; Unknown Exxx instruction
$37E    $EF60   UNKNOWN  $EF60           ; Unknown Exxx instruction
$380    $CF45   RND      VF, #45         ; VF = random & 45
$382    $4D3E   SNE      VD, #3E         ; Skip if VD != 62
$384    $1A96   JP       $A96            ; Jump to A96
$386    $0BF9   SYS      $BF9            ; System call to BF9
$388    $908A   UNKNOWN  $908A           ; Unknown 9xxx instruction
$38A    $6507   LD       V5, #07         ; Load 7 into V5
$38C    $7669   ADD      V6, #69         ; Add 105 to V6
$38E    $4E21   SNE      VE, #21         ; Skip if VE != 33
$390    $1B5D   JP       $B5D            ; Jump to B5D
$392    $59A9   UNKNOWN  $59A9           ; Unknown 5xxx instruction
$394    $A7BD   LD       I, $7BD         ; Load 7BD into I
$396    $949A   UNKNOWN  $949A           ; Unknown 9xxx instruction
$398    $CA93   RND      VA, #93         ; VA = random & 93
$39A    $A2BA   LD       I, $2BA         ; Load 2BA into I
$39C    $94A9   UNKNOWN  $94A9           ; Unknown 9xxx instruction
$39E    $6585   LD       V5, #85         ; Load 133 into V5
$3A0    $C82E   RND      V8, #2E         ; V8 = random & 2E
$3A2    $DA7D   DRW      VA, V7, #D      ; Draw 13-byte sprite at VA, V7
$3A4    $5CA2   UNKNOWN  $5CA2           ; Unknown 5xxx instruction
$3A6    $3AA4   SE       VA, #A4         ; Skip if VA == 164
$3A8    $A522   LD       I, $522         ; Load 522 into I
$3AA    $63DD   LD       V3, #DD         ; Load 221 into V3
$3AC    $9D7B   UNKNOWN  $9D7B           ; Unknown 9xxx instruction
$3AE    $DAC7   DRW      VA, VC, #7      ; Draw 7-byte sprite at VA, VC
$3B0    $CE49   RND      VE, #49         ; VE = random & 49
$3B2    $2948   CALL     $948            ; Call subroutine at 948
$3B4    $E3FB   UNKNOWN  $E3FB           ; Unknown Exxx instruction
$3B6    $8FD5   SUB      VF, VD          ; VF -= VD, VF = !borrow
$3B8    $62E5   LD       V2, #E5         ; Load 229 into V2
$3BA    $DBD2   DRW      VB, VD, #2      ; Draw 2-byte sprite at VB, VD
$3BC    $545F   UNKNOWN  $545F           ; Unknown 5xxx instruction
$3BE    $34EC   SE       V4, #EC         ; Skip if V4 == 236
$3C0    $94C5   UNKNOWN  $94C5           ; Unknown 9xxx instruction
$3C2    $0A46   SYS      $A46            ; System call to A46
$3C4    $14AB   JP       $4AB            ; Jump to 4AB
$3C6    $9EF0   SNE      VE, VF          ; Skip if VE != VF
$3C8    $A6EE   LD       I, $6EE         ; Load 6EE into I
$3CA    $45EB   SNE      V5, #EB         ; Skip if V5 != 235
$3CC    $6914   LD       V9, #14         ; Load 20 into V9
$3CE    $380A   SE       V8, #0A         ; Skip if V8 == 10
$3D0    $13E8   JP       $3E8            ; Jump to 3E8
$3D2    $E298   UNKNOWN  $E298           ; Unknown Exxx instruction
$3D4    $D7F9   DRW      V7, VF, #9      ; Draw 9-byte sprite at V7, VF
$3D6    $EF11   UNKNOWN  $EF11           ; Unknown Exxx instruction
$3D8    $F950   UNKNOWN  F950            ; Unknown Fxxx instruction
$3DA    $ED44   UNKNOWN  $ED44           ; Unknown Exxx instruction
$3DC    $00E5   SYS      $0E5            ; System call to 0E5
$3DE    $20BB   CALL     $0BB            ; Call subroutine at 0BB
$3E0    $F0E5   UNKNOWN  F0E5            ; Unknown Fxxx instruction
$3E2    $948B   UNKNOWN  $948B           ; Unknown 9xxx instruction
$3E4    $DD4F   DRW      VD, V4, #F      ; Draw 15-byte sprite at VD, V4
$3E6    $A25F   LD       I, $25F         ; Load 25F into I
$3E8    $152D   JP       $52D            ; Jump to 52D
$3EA    $3C96   SE       VC, #96         ; Skip if VC == 150
$3EC    $E29E   SKP      V2              ; Skip if key V2 pressed
$3EE    $8046   SHR      V0              ; V0 >>= 1, VF = LSB
$3F0    $41B7   SNE      V1, #B7         ; Skip if V1 != 183
$3F2    $3825   SE       V8, #25         ; Skip if V8 == 37
$3F4    $4026   SNE      V0, #26         ; Skip if V0 != 38
$3F6    $0F32   SYS      $F32            ; System call to F32
$3F8    $FFB2   UNKNOWN  FFB2            ; Unknown Fxxx instruction
$3FA    $D86D   DRW      V8, V6, #D      ; Draw 13-byte sprite at V8, V6
$3FC    $ADA7   LD       I, $DA7         ; Load DA7 into I
$3FE    $D8F0   DRW      V8, VF, #0      ; Draw 0-byte sprite at V8, VF
$400    $D0AB   DRW      V0, VA, #B      ; Draw 11-byte sprite at V0, VA
$402    $9C1E   UNKNOWN  $9C1E           ; Unknown 9xxx instruction
$404    $80F2   AND      V0, VF          ; V0 &= VF
$406    $3CD7   SE       VC, #D7         ; Skip if VC == 215
$408    $1E8D   JP       $E8D            ; Jump to E8D
$40A    $289A   CALL     $89A            ; Call subroutine at 89A
$40C    $50BD   UNKNOWN  $50BD           ; Unknown 5xxx instruction
$40E    $B27D   JP       V0, $27D        ; Jump to V0 + 27D
$410    $D5D6   DRW      V5, VD, #6      ; Draw 6-byte sprite at V5, VD
$412    $773F   ADD      V7, #3F         ; Add 63 to V7
$414    $E470   UNKNOWN  $E470           ; Unknown Exxx instruction
$416    $313B   SE       V1, #3B         ; Skip if V1 == 59
$418    $AF43   LD       I, $F43         ; Load F43 into I
$41A    $18F6   JP       $8F6            ; Jump to 8F6
$41C    $6DA5   LD       VD, #A5         ; Load 165 into VD
$41E    $783C   ADD      V8, #3C         ; Add 60 to V8
$420    $3896   SE       V8, #96         ; Skip if V8 == 150
$422    $2E85   CALL     $E85            ; Call subroutine at E85
$424    $C169   RND      V1, #69         ; V1 = random & 69
$426    $5D67   UNKNOWN  $5D67           ; Unknown 5xxx instruction
$428    $F112   UNKNOWN  F112            ; Unknown Fxxx instruction
$42A    $8C7C   UNKNOWN  8C7C            ; Unknown 8xxx instruction
$42C    $D052   DRW      V0, V5, #2      ; Draw 2-byte sprite at V0, V5
$42E    $588A   UNKNOWN  $588A           ; Unknown 5xxx instruction
$430    $B7EF   JP       V0, $7EF        ; Jump to V0 + 7EF
$432    $1C49   JP       $C49            ; Jump to C49
$434    $9FA9   UNKNOWN  $9FA9           ; Unknown 9xxx instruction
$436    $14FE   JP       $4FE            ; Jump to 4FE
$438    $2A63   CALL     $A63            ; Call subroutine at A63
$43A    $5B8D   UNKNOWN  $5B8D           ; Unknown 5xxx instruction
$43C    $C171   RND      V1, #71         ; V1 = random & 71
$43E    $4CA7   SNE      VC, #A7         ; Skip if VC != 167
$440    $1CDD   JP       $CDD            ; Jump to CDD
$442    $DB3F   DRW      VB, V3, #F      ; Draw 15-byte sprite at VB, V3
$444    $B066   JP       V0, $066        ; Jump to V0 + 066
$446    $7C5D   ADD      VC, #5D         ; Add 93 to VC
$448    $879D   UNKNOWN  879D            ; Unknown 8xxx instruction
$44A    $907F   UNKNOWN  $907F           ; Unknown 9xxx instruction
$44C    $5132   UNKNOWN  $5132           ; Unknown 5xxx instruction
$44E    $2D05   CALL     $D05            ; Call subroutine at D05
$450    $00C6   SYS      $0C6            ; System call to 0C6
$452    $FEC6   UNKNOWN  FEC6            ; Unknown Fxxx instruction
$454    $C044   RND      V0, #44         ; V0 = random & 44
$456    $3331   SE       V3, #31         ; Skip if V3 == 49
$458    $521C   UNKNOWN  $521C           ; Unknown 5xxx instruction
$45A    $2C7A   CALL     $C7A            ; Call subroutine at C7A
$45C    $C5B8   RND      V5, #B8         ; V5 = random & B8
$45E    $DA18   DRW      VA, V1, #8      ; Draw 8-byte sprite at VA, V1
$460    $6461   LD       V4, #61         ; Load 97 into V4
$462    $5AF3   UNKNOWN  $5AF3           ; Unknown 5xxx instruction
$464    $4E5C   SNE      VE, #5C         ; Skip if VE != 92
$466    $6053   LD       V0, #53         ; Load 83 into V0
$468    $B756   JP       V0, $756        ; Jump to V0 + 756
$46A    $8F28   UNKNOWN  8F28            ; Unknown 8xxx instruction
$46C    $B918   JP       V0, $918        ; Jump to V0 + 918
$46E    $7BDC   ADD      VB, #DC         ; Add 220 to VB
$470    $1090   JP       $090            ; Jump to 090
$472    $F10E   UNKNOWN  F10E            ; Unknown Fxxx instruction
$474    $8B0D   UNKNOWN  8B0D            ; Unknown 8xxx instruction
$476    $14E1   JP       $4E1            ; Jump to 4E1
$478    $7385   ADD      V3, #85         ; Add 133 to V3
$47A    $A115   LD       I, $115         ; Load 115 into I
$47C    $0502   SYS      $502            ; System call to 502
$47E    $3CC1   SE       VC, #C1         ; Skip if VC == 193
$480    $4E25   SNE      VE, #25         ; Skip if VE != 37
$482    $0E17   SYS      $E17            ; System call to E17
$484    $2E93   CALL     $E93            ; Call subroutine at E93
$486    $C06C   RND      V0, #6C         ; V0 = random & 6C
$488    $E2AD   UNKNOWN  $E2AD           ; Unknown Exxx instruction
$48A    $0897   SYS      $897            ; System call to 897
$48C    $99A4   UNKNOWN  $99A4           ; Unknown 9xxx instruction
$48E    $0E83   SYS      $E83            ; System call to E83
$490    $1CA5   JP       $CA5            ; Jump to CA5
$492    $E8E5   UNKNOWN  $E8E5           ; Unknown Exxx instruction
$494    $B5EA   JP       V0, $5EA        ; Jump to V0 + 5EA
$496    $E2FA   UNKNOWN  $E2FA           ; Unknown Exxx instruction
$498    $C201   RND      V2, #01         ; V2 = random & 01
$49A    $D3B1   DRW      V3, VB, #1      ; Draw 1-byte sprite at V3, VB
$49C    $1C29   JP       $C29            ; Jump to C29
$49E    $62DE   LD       V2, #DE         ; Load 222 into V2
$4A0    $25CF   CALL     $5CF            ; Call subroutine at 5CF
$4A2    $35F7   SE       V5, #F7         ; Skip if V5 == 247
$4A4    $F150   UNKNOWN  F150            ; Unknown Fxxx instruction
$4A6    $AADB   LD       I, $ADB         ; Load ADB into I
$4A8    $0B87   SYS      $B87            ; System call to B87
$4AA    $3A66   SE       VA, #66         ; Skip if VA == 102
$4AC    $2690   CALL     $690            ; Call subroutine at 690
$4AE    $883C   UNKNOWN  883C            ; Unknown 8xxx instruction
$4B0    $520D   UNKNOWN  $520D           ; Unknown 5xxx instruction
$4B2    $AED7   LD       I, $ED7         ; Load ED7 into I
$4B4    $BB95   JP       V0, $B95        ; Jump to V0 + B95
$4B6    $CE48   RND      VE, #48         ; VE = random & 48
$4B8    $73D5   ADD      V3, #D5         ; Add 213 to V3
$4BA    $652B   LD       V5, #2B         ; Load 43 into V5
$4BC    $BA85   JP       V0, $A85        ; Jump to V0 + A85
$4BE    $A1E9   LD       I, $1E9         ; Load 1E9 into I
$4C0    $C294   RND      V2, #94         ; V2 = random & 94
$4C2    $1061   JP       $061            ; Jump to 061
$4C4    $251C   CALL     $51C            ; Call subroutine at 51C
$4C6    $09C0   SYS      $9C0            ; System call to 9C0
$4C8    $0DE6   SYS      $DE6            ; System call to DE6
$4CA    $414E   SNE      V1, #4E         ; Skip if V1 != 78
$4CC    $1CF7   JP       $CF7            ; Jump to CF7
$4CE    $93B2   UNKNOWN  $93B2           ; Unknown 9xxx instruction
$4D0    $59E6   UNKNOWN  $59E6           ; Unknown 5xxx instruction
$4D2    $2669   CALL     $669            ; Call subroutine at 669
$4D4    $A5D3   LD       I, $5D3         ; Load 5D3 into I
$4D6    $030D   SYS      $30D            ; System call to 30D
$4D8    $622C   LD       V2, #2C         ; Load 44 into V2
$4DA    $348B   SE       V4, #8B         ; Skip if V4 == 139
$4DC    $4239   SNE      V2, #39         ; Skip if V2 != 57
$4DE    $7970   ADD      V9, #70         ; Add 112 to V9
$4E0    $64A0   LD       V4, #A0         ; Load 160 into V4
$4E2    $B5B1   JP       V0, $5B1        ; Jump to V0 + 5B1
$4E4    $0F1B   SYS      $F1B            ; System call to F1B
$4E6    $68EA   LD       V8, #EA         ; Load 234 into V8
$4E8    $DDD8   DRW      VD, VD, #8      ; Draw 8-byte sprite at VD, VD
$4EA    $BDE8   JP       V0, $DE8        ; Jump to V0 + DE8
$4EC    $1049   JP       $049            ; Jump to 049
$4EE    $5119   UNKNOWN  $5119           ; Unknown 5xxx instruction
$4F0    $9D65   UNKNOWN  $9D65           ; Unknown 9xxx instruction
$4F2    $C8FE   RND      V8, #FE         ; V8 = random & FE
$4F4    $04DC   SYS      $4DC            ; System call to 4DC
$4F6    $CAEE   RND      VA, #EE         ; VA = random & EE
$4F8    $A733   LD       I, $733         ; Load 733 into I
$4FA    $F514   UNKNOWN  F514            ; Unknown Fxxx instruction
$4FC    $208F   CALL     $08F            ; Call subroutine at 08F
$4FE    $4991   SNE      V9, #91         ; Skip if V9 != 145
$500    $3CDB   SE       VC, #DB         ; Skip if VC == 219
$502    $48E8   SNE      V8, #E8         ; Skip if V8 != 232
$504    $4913   SNE      V9, #13         ; Skip if V9 != 19
$506    $CEAB   RND      VE, #AB         ; VE = random & AB
$508    $E7F9   UNKNOWN  $E7F9           ; Unknown Exxx instruction
$50A    $E51E   UNKNOWN  $E51E           ; Unknown Exxx instruction
$50C    $CB4F   RND      VB, #4F         ; VB = random & 4F
$50E    $9F34   UNKNOWN  $9F34           ; Unknown 9xxx instruction
$510    $2C9F   CALL     $C9F            ; Call subroutine at C9F
$512    $1F16   JP       $F16            ; Jump to F16
$514    $C4AA   RND      V4, #AA         ; V4 = random & AA
$516    $F741   UNKNOWN  F741            ; Unknown Fxxx instruction
$518    $41BF   SNE      V1, #BF         ; Skip if V1 != 191
$51A    $B2C9   JP       V0, $2C9        ; Jump to V0 + 2C9
$51C    $29D6   CALL     $9D6            ; Call subroutine at 9D6
$51E    $2944   CALL     $944            ; Call subroutine at 944
$520    $4B5F   SNE      VB, #5F         ; Skip if VB != 95
$522    $1067   JP       $067            ; Jump to 067
$524    $0650   SYS      $650            ; System call to 650
$526    $057B   SYS      $57B            ; System call to 57B
$528    $57CD   UNKNOWN  $57CD           ; Unknown 5xxx instruction
$52A    $443A   SNE      V4, #3A         ; Skip if V4 != 58
$52C    $B6BE   JP       V0, $6BE        ; Jump to V0 + 6BE
$52E    $0FF6   SYS      $FF6            ; System call to FF6
$530    $A302   LD       I, $302         ; Load 302 into I
$532    $3840   SE       V8, #40         ; Skip if V8 == 64
$534    $F2FC   UNKNOWN  F2FC            ; Unknown Fxxx instruction
$536    $DA88   DRW      VA, V8, #8      ; Draw 8-byte sprite at VA, V8
$538    $256A   CALL     $56A            ; Call subroutine at 56A
$53A    $FC10   UNKNOWN  FC10            ; Unknown Fxxx instruction
$53C    $98FD   UNKNOWN  $98FD           ; Unknown 9xxx instruction
$53E    $6E56   LD       VE, #56         ; Load 86 into VE
$540    $F835   UNKNOWN  F835            ; Unknown Fxxx instruction
$542    $C9FB   RND      V9, #FB         ; V9 = random & FB
$544    $E399   UNKNOWN  $E399           ; Unknown Exxx instruction
$546    $6E97   LD       VE, #97         ; Load 151 into VE
$548    $28D1   CALL     $8D1            ; Call subroutine at 8D1
$54A    $7E2B   ADD      VE, #2B         ; Add 43 to VE
$54C    $4EF4   SNE      VE, #F4         ; Skip if VE != 244
$54E    $E31C   UNKNOWN  $E31C           ; Unknown Exxx instruction
$550    $3399   SE       V3, #99         ; Skip if V3 == 153
$552    $4F0F   SNE      VF, #0F         ; Skip if VF != 15
$554    $2A5A   CALL     $A5A            ; Call subroutine at A5A
$556    $D623   DRW      V6, V2, #3      ; Draw 3-byte sprite at V6, V2
$558    $3E2D   SE       VE, #2D         ; Skip if VE == 45
$55A    $2232   CALL     $232            ; Call subroutine at 232
$55C    $37C1   SE       V7, #C1         ; Skip if V7 == 193
$55E    $AA2D   LD       I, $A2D         ; Load A2D into I
$560    $EE20   UNKNOWN  $EE20           ; Unknown Exxx instruction
$562    $6C06   LD       VC, #06         ; Load 6 into VC
$564    $09F4   SYS      $9F4            ; System call to 9F4
$566    $8DFE   SHL      VD              ; VD <<= 1, VF = MSB
$568    $8A88   UNKNOWN  8A88            ; Unknown 8xxx instruction
$56A    $A426   LD       I, $426         ; Load 426 into I
$56C    $9F04   UNKNOWN  $9F04           ; Unknown 9xxx instruction
$56E    $985C   UNKNOWN  $985C           ; Unknown 9xxx instruction
$570    $9D9E   UNKNOWN  $9D9E           ; Unknown 9xxx instruction
$572    $2C46   CALL     $C46            ; Call subroutine at C46
$574    $5029   UNKNOWN  $5029           ; Unknown 5xxx instruction
$576    $71D0   ADD      V1, #D0         ; Add 208 to V1
$578    $FF00   UNKNOWN  FF00            ; Unknown Fxxx instruction
$57A    $1B5C   JP       $B5C            ; Jump to B5C
$57C    $A32A   LD       I, $32A         ; Load 32A into I
$57E    $E630   UNKNOWN  $E630           ; Unknown Exxx instruction
$580    $2E20   CALL     $E20            ; Call subroutine at E20
$582    $819F   UNKNOWN  819F            ; Unknown 8xxx instruction
$584    $6BD5   LD       VB, #D5         ; Load 213 into VB
$586    $F263   UNKNOWN  F263            ; Unknown Fxxx instruction
$588    $E439   UNKNOWN  $E439           ; Unknown Exxx instruction
$58A    $F55A   UNKNOWN  F55A            ; Unknown Fxxx instruction
$58C    $DCF0   DRW      VC, VF, #0      ; Draw 0-byte sprite at VC, VF
$58E    $1498   JP       $498            ; Jump to 498
$590    $53AD   UNKNOWN  $53AD           ; Unknown 5xxx instruction
$592    $723D   ADD      V2, #3D         ; Add 61 to V2
$594    $71B8   ADD      V1, #B8         ; Add 184 to V1
$596    $D90A   DRW      V9, V0, #A      ; Draw 10-byte sprite at V9, V0
$598    $763C   ADD      V6, #3C         ; Add 60 to V6
$59A    $E597   UNKNOWN  $E597           ; Unknown Exxx instruction
$59C    $D81F   DRW      V8, V1, #F      ; Draw 15-byte sprite at V8, V1
$59E    $92CC   UNKNOWN  $92CC           ; Unknown 9xxx instruction
$5A0    $674F   LD       V7, #4F         ; Load 79 into V7
$5A2    $4093   SNE      V0, #93         ; Skip if V0 != 147
$5A4    $D584   DRW      V5, V8, #4      ; Draw 4-byte sprite at V5, V8
$5A6    $519E   UNKNOWN  $519E           ; Unknown 5xxx instruction
$5A8    $F680   UNKNOWN  F680            ; Unknown Fxxx instruction
$5AA    $DB58   DRW      VB, V5, #8      ; Draw 8-byte sprite at VB, V5
$5AC    $9F8F   UNKNOWN  $9F8F           ; Unknown 9xxx instruction
$5AE    $EBD8   UNKNOWN  $EBD8           ; Unknown Exxx instruction
$5B0    $406C   SNE      V0, #6C         ; Skip if V0 != 108
$5B2    $BDDF   JP       V0, $DDF        ; Jump to V0 + DDF
$5B4    $7055   ADD      V0, #55         ; Add 85 to V0
$5B6    $3106   SE       V1, #06         ; Skip if V1 == 6
$5B8    $3D47   SE       VD, #47         ; Skip if VD == 71
$5BA    $44C4   SNE      V4, #C4         ; Skip if V4 != 196
$5BC    $3339   SE       V3, #39         ; Skip if V3 == 57
$5BE    $A74F   LD       I, $74F         ; Load 74F into I
$5C0    $4D06   SNE      VD, #06         ; Skip if VD != 6
$5C2    $4E74   SNE      VE, #74         ; Skip if VE != 116
$5C4    $BE77   JP       V0, $E77        ; Jump to V0 + E77
$5C6    $BF1B   JP       V0, $F1B        ; Jump to V0 + F1B
$5C8    $5894   UNKNOWN  $5894           ; Unknown 5xxx instruction
$5CA    $8FA1   OR       VF, VA          ; VF |= VA
$5CC    $A4A8   LD       I, $4A8         ; Load 4A8 into I
$5CE    $8982   AND      V9, V8          ; V9 &= V8
$5D0    $A208   LD       I, $208         ; Load 208 into I
$5D2    $D877   DRW      V8, V7, #7      ; Draw 7-byte sprite at V8, V7
$5D4    $2C80   CALL     $C80            ; Call subroutine at C80
$5D6    $03FB   SYS      $3FB            ; System call to 3FB
$5D8    $12AA   JP       $2AA            ; Jump to 2AA
$5DA    $C8A4   RND      V8, #A4         ; V8 = random & A4
$5DC    $0977   SYS      $977            ; System call to 977
$5DE    $2D06   CALL     $D06            ; Call subroutine at D06
$5E0    $083F   SYS      $83F            ; System call to 83F
$5E2    $FF43   UNKNOWN  FF43            ; Unknown Fxxx instruction
$5E4    $4EB2   SNE      VE, #B2         ; Skip if VE != 178
$5E6    $6EB2   LD       VE, #B2         ; Load 178 into VE
$5E8    $1C0E   JP       $C0E            ; Jump to C0E
$5EA    $CAEA   RND      VA, #EA         ; VA = random & EA
$5EC    $4CE3   SNE      VC, #E3         ; Skip if VC != 227
$5EE    $D297   DRW      V2, V9, #7      ; Draw 7-byte sprite at V2, V9
$5F0    $252B   CALL     $52B            ; Call subroutine at 52B
$5F2    $EFC0   UNKNOWN  $EFC0           ; Unknown Exxx instruction
$5F4    $A2DE   LD       I, $2DE         ; Load 2DE into I
$5F6    $180F   JP       $80F            ; Jump to 80F
$5F8    $1525   JP       $525            ; Jump to 525
$5FA    $C910   RND      V9, #10         ; V9 = random & 10
$5FC    $A7D0   LD       I, $7D0         ; Load 7D0 into I
$5FE    $14D0   JP       $4D0            ; Jump to 4D0
$600    $3F7E   SE       VF, #7E         ; Skip if VF == 126
$602    $0566   SYS      $566            ; System call to 566
$604    $E912   UNKNOWN  $E912           ; Unknown Exxx instruction
$606    $9F23   UNKNOWN  $9F23           ; Unknown 9xxx instruction
$608    $2C65   CALL     $C65            ; Call subroutine at C65
$60A    $92BC   UNKNOWN  $92BC           ; Unknown 9xxx instruction
$60C    $3FB9   SE       VF, #B9         ; Skip if VF == 185
$60E    $86B8   UNKNOWN  86B8            ; Unknown 8xxx instruction
$610    $98D7   UNKNOWN  $98D7           ; Unknown 9xxx instruction
$612    $0C87   SYS      $C87            ; System call to C87
$614    $AF72   LD       I, $F72         ; Load F72 into I
$616    $AE3B   LD       I, $E3B         ; Load E3B into I
$618    $C706   RND      V7, #06         ; V7 = random & 06
$61A    $79EB   ADD      V9, #EB         ; Add 235 to V9
$61C    $7EA8   ADD      VE, #A8         ; Add 168 to VE
$61E    $4CAA   SNE      VC, #AA         ; Skip if VC != 170
$620    $865B   UNKNOWN  865B            ; Unknown 8xxx instruction
$622    $5C38   UNKNOWN  $5C38           ; Unknown 5xxx instruction
$624    $2AD4   CALL     $AD4            ; Call subroutine at AD4
$626    $DA0B   DRW      VA, V0, #B      ; Draw 11-byte sprite at VA, V0
$628    $AFA7   LD       I, $FA7         ; Load FA7 into I
$62A    $C8F4   RND      V8, #F4         ; V8 = random & F4
$62C    $BF90   JP       V0, $F90        ; Jump to V0 + F90
$62E    $0C84   SYS      $C84            ; System call to C84
$630    $D392   DRW      V3, V9, #2      ; Draw 2-byte sprite at V3, V9
$632    $667C   LD       V6, #7C         ; Load 124 into V6
$634    $32B4   SE       V2, #B4         ; Skip if V2 == 180
$636    $E0FA   UNKNOWN  $E0FA           ; Unknown Exxx instruction
$638    $6F4C   LD       VF, #4C         ; Load 76 into VF
$63A    $3070   SE       V0, #70         ; Skip if V0 == 112
$63C    $0AA1   SYS      $AA1            ; System call to AA1
$63E    $9D74   UNKNOWN  $9D74           ; Unknown 9xxx instruction
$640    $A3CC   LD       I, $3CC         ; Load 3CC into I
$642    $89A5   SUB      V9, VA          ; V9 -= VA, VF = !borrow
$644    $3EA4   SE       VE, #A4         ; Skip if VE == 164
$646    $C524   RND      V5, #24         ; V5 = random & 24
$648    $50E0   SE       V0, VE          ; Skip if V0 == VE
$64A    $9C19   UNKNOWN  $9C19           ; Unknown 9xxx instruction
$64C    $6D8D   LD       VD, #8D         ; Load 141 into VD
$64E    $2370   CALL     $370            ; Call subroutine at 370
$650    $1816   JP       $816            ; Jump to 816
$652    $8F7E   SHL      VF              ; VF <<= 1, VF = MSB
$654    $4FC5   SNE      VF, #C5         ; Skip if VF != 197
$656    $6AFC   LD       VA, #FC         ; Load 252 into VA
$658    $26D7   CALL     $6D7            ; Call subroutine at 6D7
$65A    $94F4   UNKNOWN  $94F4           ; Unknown 9xxx instruction
$65C    $6AFF   LD       VA, #FF         ; Load 255 into VA
$65E    $5639   UNKNOWN  $5639           ; Unknown 5xxx instruction
$660    $08D7   SYS      $8D7            ; System call to 8D7
$662    $654C   LD       V5, #4C         ; Load 76 into V5
$664    $978D   UNKNOWN  $978D           ; Unknown 9xxx instruction
$666    $E7F3   UNKNOWN  $E7F3           ; Unknown Exxx instruction
$668    $3B85   SE       VB, #85         ; Skip if VB == 133
$66A    $992D   UNKNOWN  $992D           ; Unknown 9xxx instruction
$66C    $D41A   DRW      V4, V1, #A      ; Draw 10-byte sprite at V4, V1
$66E    $CF9C   RND      VF, #9C         ; VF = random & 9C
$670    $EF34   UNKNOWN  $EF34           ; Unknown Exxx instruction
$672    $7599   ADD      V5, #99         ; Add 153 to V5
$674    $79E9   ADD      V9, #E9         ; Add 233 to V9
$676    $E3AA   UNKNOWN  $E3AA           ; Unknown Exxx instruction
$678    $CFD7   RND      VF, #D7         ; VF = random & D7
$67A    $1767   JP       $767            ; Jump to 767
$67C    $2E86   CALL     $E86            ; Call subroutine at E86
$67E    $C8ED   RND      V8, #ED         ; V8 = random & ED
$680    $74DA   ADD      V4, #DA         ; Add 218 to V4
$682    $A089   LD       I, $089         ; Load 089 into I
$684    $8EAB   UNKNOWN  8EAB            ; Unknown 8xxx instruction
$686    $FE35   UNKNOWN  FE35            ; Unknown Fxxx instruction
$688    $DBFC   DRW      VB, VF, #C      ; Draw 12-byte sprite at VB, VF
$68A    $9B17   UNKNOWN  $9B17           ; Unknown 9xxx instruction
$68C    $07D9   SYS      $7D9            ; System call to 7D9
$68E    $A769   LD       I, $769         ; Load 769 into I
$690    $006E   SYS      $06E            ; System call to 06E
$692    $F219   UNKNOWN  F219            ; Unknown Fxxx instruction
$694    $57E1   UNKNOWN  $57E1           ; Unknown 5xxx instruction
$696    $1EC2   JP       $EC2            ; Jump to EC2
$698    $F350   UNKNOWN  F350            ; Unknown Fxxx instruction
$69A    $FE76   UNKNOWN  FE76            ; Unknown Fxxx instruction
$69C    $9A3B   UNKNOWN  $9A3B           ; Unknown 9xxx instruction
$69E    $F76B   UNKNOWN  F76B            ; Unknown Fxxx instruction
$6A0    $72DF   ADD      V2, #DF         ; Add 223 to V2
$6A2    $A814   LD       I, $814         ; Load 814 into I
$6A4    $90BB   UNKNOWN  $90BB           ; Unknown 9xxx instruction
$6A6    $900D   UNKNOWN  $900D           ; Unknown 9xxx instruction
$6A8    $B4F2   JP       V0, $4F2        ; Jump to V0 + 4F2
$6AA    $D5F1   DRW      V5, VF, #1      ; Draw 1-byte sprite at V5, VF
$6AC    $089A   SYS      $89A            ; System call to 89A
$6AE    $E437   UNKNOWN  $E437           ; Unknown Exxx instruction
$6B0    $4C7C   SNE      VC, #7C         ; Skip if VC != 124
$6B2    $0957   SYS      $957            ; System call to 957
$6B4    $1671   JP       $671            ; Jump to 671
$6B6    $6D82   LD       VD, #82         ; Load 130 into VD
$6B8    $46AB   SNE      V6, #AB         ; Skip if V6 != 171
$6BA    $5A4B   UNKNOWN  $5A4B           ; Unknown 5xxx instruction
$6BC    $97F7   UNKNOWN  $97F7           ; Unknown 9xxx instruction
$6BE    $4449   SNE      V4, #49         ; Skip if V4 != 73
$6C0    $A370   LD       I, $370         ; Load 370 into I
$6C2    $B64B   JP       V0, $64B        ; Jump to V0 + 64B
$6C4    $3629   SE       V6, #29         ; Skip if V6 == 41
$6C6    $FC1D   UNKNOWN  FC1D            ; Unknown Fxxx instruction
$6C8    $7286   ADD      V2, #86         ; Add 134 to V2
$6CA    $C7C2   RND      V7, #C2         ; V7 = random & C2
$6CC    $F12D   UNKNOWN  F12D            ; Unknown Fxxx instruction
$6CE    $A91C   LD       I, $91C         ; Load 91C into I
$6D0    $2208   CALL     $208            ; Call subroutine at 208
$6D2    $91E7   UNKNOWN  $91E7           ; Unknown 9xxx instruction
$6D4    $0E16   SYS      $E16            ; System call to E16
$6D6    $6FBE   LD       VF, #BE         ; Load 190 into VF
$6D8    $4F87   SNE      VF, #87         ; Skip if VF != 135
$6DA    $5D48   UNKNOWN  $5D48           ; Unknown 5xxx instruction
$6DC    $1CEF   JP       $CEF            ; Jump to CEF
$6DE    $38D0   SE       V8, #D0         ; Skip if V8 == 208
$6E0    $500A   UNKNOWN  $500A           ; Unknown 5xxx instruction
$6E2    $5577   UNKNOWN  $5577           ; Unknown 5xxx instruction
$6E4    $205F   CALL     $05F            ; Call subroutine at 05F
$6E6    $5A25   UNKNOWN  $5A25           ; Unknown 5xxx instruction
$6E8    $E040   UNKNOWN  $E040           ; Unknown Exxx instruction
$6EA    $0477   SYS      $477            ; System call to 477
$6EC    $3AD1   SE       VA, #D1         ; Skip if VA == 209
$6EE    $5343   UNKNOWN  $5343           ; Unknown 5xxx instruction
$6F0    $33C8   SE       V3, #C8         ; Skip if V3 == 200
$6F2    $56F9   UNKNOWN  $56F9           ; Unknown 5xxx instruction
$6F4    $ADF3   LD       I, $DF3         ; Load DF3 into I
$6F6    $7B96   ADD      VB, #96         ; Add 150 to VB
$6F8    $8C1A   UNKNOWN  8C1A            ; Unknown 8xxx instruction
$6FA    $84D0   LD       V4, VD          ; V4 = VD
$6FC    $BFF5   JP       V0, $FF5        ; Jump to V0 + FF5
$6FE    $012C   SYS      $12C            ; System call to 12C
$700    $36E1   SE       V6, #E1         ; Skip if V6 == 225
$702    $A952   LD       I, $952         ; Load 952 into I
$704    $1635   JP       $635            ; Jump to 635
$706    $B465   JP       V0, $465        ; Jump to V0 + 465
$708    $6FCE   LD       VF, #CE         ; Load 206 into VF
$70A    $4858   SNE      V8, #58         ; Skip if V8 != 88
$70C    $EB04   UNKNOWN  $EB04           ; Unknown Exxx instruction
$70E    $F924   UNKNOWN  F924            ; Unknown Fxxx instruction
$710    $FE02   UNKNOWN  FE02            ; Unknown Fxxx instruction
$712    $441F   SNE      V4, #1F         ; Skip if V4 != 31
$714    $1725   JP       $725            ; Jump to 725
$716    $7290   ADD      V2, #90         ; Add 144 to V2
$718    $2647   CALL     $647            ; Call subroutine at 647
$71A    $8579   UNKNOWN  8579            ; Unknown 8xxx instruction
$71C    $FE8C   UNKNOWN  FE8C            ; Unknown Fxxx instruction
$71E    $9562   UNKNOWN  $9562           ; Unknown 9xxx instruction
$720    $EDB1   UNKNOWN  $EDB1           ; Unknown Exxx instruction
$722    $1A33   JP       $A33            ; Jump to A33
$724    $6692   LD       V6, #92         ; Load 146 into V6
$726    $28B0   CALL     $8B0            ; Call subroutine at 8B0
$728    $D3CF   DRW      V3, VC, #F      ; Draw 15-byte sprite at V3, VC
$72A    $614D   LD       V1, #4D         ; Load 77 into V1
$72C    $0C5F   SYS      $C5F            ; System call to C5F
$72E    $659E   LD       V5, #9E         ; Load 158 into V5
$730    $76C7   ADD      V6, #C7         ; Add 199 to V6
$732    $C35F   RND      V3, #5F         ; V3 = random & 5F
$734    $9398   UNKNOWN  $9398           ; Unknown 9xxx instruction
$736    $2E33   CALL     $E33            ; Call subroutine at E33
$738    $F91F   UNKNOWN  F91F            ; Unknown Fxxx instruction
$73A    $19B9   JP       $9B9            ; Jump to 9B9
$73C    $31FF   SE       V1, #FF         ; Skip if V1 == 255
$73E    $4148   SNE      V1, #48         ; Skip if V1 != 72
$740    $7082   ADD      V0, #82         ; Add 130 to V0
$742    $A774   LD       I, $774         ; Load 774 into I
$744    $9A65   UNKNOWN  $9A65           ; Unknown 9xxx instruction
$746    $21B7   CALL     $1B7            ; Call subroutine at 1B7
$748    $BFD8   JP       V0, $FD8        ; Jump to V0 + FD8
$74A    $AE40   LD       I, $E40         ; Load E40 into I
$74C    $D217   DRW      V2, V1, #7      ; Draw 7-byte sprite at V2, V1
$74E    $DE52   DRW      VE, V5, #2      ; Draw 2-byte sprite at VE, V5
$750    $2A0C   CALL     $A0C            ; Call subroutine at A0C
$752    $23EB   CALL     $3EB            ; Call subroutine at 3EB
$754    $4132   SNE      V1, #32         ; Skip if V1 != 50
$756    $256A   CALL     $56A            ; Call subroutine at 56A
$758    $D953   DRW      V9, V5, #3      ; Draw 3-byte sprite at V9, V5
$75A    $32B0   SE       V2, #B0         ; Skip if V2 == 176
$75C    $BF38   JP       V0, $F38        ; Jump to V0 + F38
$75E    $638B   LD       V3, #8B         ; Load 139 into V3
$760    $01C2   SYS      $1C2            ; System call to 1C2
$762    $1AA3   JP       $AA3            ; Jump to AA3
$764    $7D67   ADD      VD, #67         ; Add 103 to VD
$766    $80E9   UNKNOWN  80E9            ; Unknown 8xxx instruction
$768    $42B8   SNE      V2, #B8         ; Skip if V2 != 184
$76A    $FB9C   UNKNOWN  FB9C            ; Unknown Fxxx instruction
$76C    $D5F4   DRW      V5, VF, #4      ; Draw 4-byte sprite at V5, VF
$76E    $C69C   RND      V6, #9C         ; V6 = random & 9C
$770    $EA06   UNKNOWN  $EA06           ; Unknown Exxx instruction
$772    $2B7E   CALL     $B7E            ; Call subroutine at B7E
$774    $4298   SNE      V2, #98         ; Skip if V2 != 152
$776    $B10F   JP       V0, $10F        ; Jump to V0 + 10F
$778    $C091   RND      V0, #91         ; V0 = random & 91
$77A    $6E44   LD       VE, #44         ; Load 68 into VE
$77C    $68D3   LD       V8, #D3         ; Load 211 into V8
$77E    $EF08   UNKNOWN  $EF08           ; Unknown Exxx instruction
$780    $B419   JP       V0, $419        ; Jump to V0 + 419
$782    $C9AB   RND      V9, #AB         ; V9 = random & AB
$784    $56AD   UNKNOWN  $56AD           ; Unknown 5xxx instruction
$786    $0C7F   SYS      $C7F            ; System call to C7F
$788    $7F27   ADD      VF, #27         ; Add 39 to VF
$78A    $D05F   DRW      V0, V5, #F      ; Draw 15-byte sprite at V0, V5
$78C    $75C5   ADD      V5, #C5         ; Add 197 to V5
$78E    $BDA8   JP       V0, $DA8        ; Jump to V0 + DA8
$790    $BD89   JP       V0, $D89        ; Jump to V0 + D89
$792    $5B57   UNKNOWN  $5B57           ; Unknown 5xxx instruction
$794    $EB83   UNKNOWN  $EB83           ; Unknown Exxx instruction
$796    $0FAC   SYS      $FAC            ; System call to FAC
$798    $93A5   UNKNOWN  $93A5           ; Unknown 9xxx instruction
$79A    $32E5   SE       V2, #E5         ; Skip if V2 == 229
$79C    $478D   SNE      V7, #8D         ; Skip if V7 != 141
$79E    $641E   LD       V4, #1E         ; Load 30 into V4
$7A0    $D93C   DRW      V9, V3, #C      ; Draw 12-byte sprite at V9, V3
$7A2    $8E6A   UNKNOWN  8E6A            ; Unknown 8xxx instruction
$7A4    $E35E   UNKNOWN  $E35E           ; Unknown Exxx instruction
$7A6    $5454   UNKNOWN  $5454           ; Unknown 5xxx instruction
$7A8    $0921   SYS      $921            ; System call to 921
$7AA    $BBC3   JP       V0, $BC3        ; Jump to V0 + BC3
$7AC    $BEA4   JP       V0, $EA4        ; Jump to V0 + EA4
$7AE    $54E4   UNKNOWN  $54E4           ; Unknown 5xxx instruction
$7B0    $E55A   UNKNOWN  $E55A           ; Unknown Exxx instruction
$7B2    $4B44   SNE      VB, #44         ; Skip if VB != 68
$7B4    $26F2   CALL     $6F2            ; Call subroutine at 6F2
$7B6    $0BA6   SYS      $BA6            ; System call to BA6
$7B8    $0904   SYS      $904            ; System call to 904
$7BA    $FB04   UNKNOWN  FB04            ; Unknown Fxxx instruction
$7BC    $FA74   UNKNOWN  FA74            ; Unknown Fxxx instruction
$7BE    $3775   SE       V7, #75         ; Skip if V7 == 117
$7C0    $DA6D   DRW      VA, V6, #D      ; Draw 13-byte sprite at VA, V6
$7C2    $887A   UNKNOWN  887A            ; Unknown 8xxx instruction
$7C4    $0FF5   SYS      $FF5            ; System call to FF5
$7C6    $05AA   SYS      $5AA            ; System call to 5AA
$7C8    $5735   UNKNOWN  $5735           ; Unknown 5xxx instruction
$7CA    $290F   CALL     $90F            ; Call subroutine at 90F
$7CC    $D675   DRW      V6, V7, #5      ; Draw 5-byte sprite at V6, V7
$7CE    $087A   SYS      $87A            ; System call to 87A
$7D0    $94D7   UNKNOWN  $94D7           ; Unknown 9xxx instruction
$7D2    $0A09   SYS      $A09            ; System call to A09
$7D4    $B493   JP       V0, $493        ; Jump to V0 + 493
$7D6    $93A2   UNKNOWN  $93A2           ; Unknown 9xxx instruction
$7D8    $5733   UNKNOWN  $5733           ; Unknown 5xxx instruction
$7DA    $F705   UNKNOWN  F705            ; Unknown Fxxx instruction
$7DC    $7C0D   ADD      VC, #0D         ; Add 13 to VC
$7DE    $78E5   ADD      V8, #E5         ; Add 229 to V8
$7E0    $B4CB   JP       V0, $4CB        ; Jump to V0 + 4CB
$7E2    $BEA0   JP       V0, $EA0        ; Jump to V0 + EA0
$7E4    $186B   JP       $86B            ; Jump to 86B
$7E6    $8BBA   UNKNOWN  8BBA            ; Unknown 8xxx instruction
$7E8    $3F7B   SE       VF, #7B         ; Skip if VF == 123
$7EA    $EF4A   UNKNOWN  $EF4A           ; Unknown Exxx instruction
$7EC    $6AC3   LD       VA, #C3         ; Load 195 into VA
$7EE    $7E7D   ADD      VE, #7D         ; Add 125 to VE
$7F0    $1F9E   JP       $F9E            ; Jump to F9E
$7F2    $6B5A   LD       VB, #5A         ; Load 90 into VB
$7F4    $0891   SYS      $891            ; System call to 891
$7F6    $5530   SE       V5, V3          ; Skip if V5 == V3
$7F8    $7837   ADD      V8, #37         ; Add 55 to V8
$7FA    $71F3   ADD      V1, #F3         ; Add 243 to V1
$7FC    $863B   UNKNOWN  863B            ; Unknown 8xxx instruction
$7FE    $AD63   LD       I, $D63         ; Load D63 into I
$800    $E963   UNKNOWN  $E963           ; Unknown Exxx instruction
$802    $D614   DRW      V6, V1, #4      ; Draw 4-byte sprite at V6, V1
$804    $0340   SYS      $340            ; System call to 340
$806    $FE37   UNKNOWN  FE37            ; Unknown Fxxx instruction
$808    $D65C   DRW      V6, V5, #C      ; Draw 12-byte sprite at V6, V5
$80A    $D909   DRW      V9, V0, #9      ; Draw 9-byte sprite at V9, V0
$80C    $F361   UNKNOWN  F361            ; Unknown Fxxx instruction
$80E    $2C3B   CALL     $C3B            ; Call subroutine at C3B
$810    $CDF5   RND      VD, #F5         ; VD = random & F5
$812    $8EAE   SHL      VE              ; VE <<= 1, VF = MSB
$814    $7DAC   ADD      VD, #AC         ; Add 172 to VD
$816    $CBD9   RND      VB, #D9         ; VB = random & D9
$818    $6995   LD       V9, #95         ; Load 149 into V9
$81A    $4752   SNE      V7, #52         ; Skip if V7 != 82
$81C    $0555   SYS      $555            ; System call to 555
$81E    $C8EF   RND      V8, #EF         ; V8 = random & EF
$820    $03EB   SYS      $3EB            ; System call to 3EB
$822    $57A5   UNKNOWN  $57A5           ; Unknown 5xxx instruction
$824    $2C19   CALL     $C19            ; Call subroutine at C19
$826    $E876   UNKNOWN  $E876           ; Unknown Exxx instruction
$828    $529F   UNKNOWN  $529F           ; Unknown 5xxx instruction
$82A    $9085   UNKNOWN  $9085           ; Unknown 9xxx instruction
$82C    $EC28   UNKNOWN  $EC28           ; Unknown Exxx instruction
$82E    $A986   LD       I, $986         ; Load 986 into I
$830    $2300   CALL     $300            ; Call subroutine at 300
$832    $32A9   SE       V2, #A9         ; Skip if V2 == 169
$834    $2F7C   CALL     $F7C            ; Call subroutine at F7C
$836    $6A42   LD       VA, #42         ; Load 66 into VA
$838    $8648   UNKNOWN  8648            ; Unknown 8xxx instruction
$83A    $5456   UNKNOWN  $5456           ; Unknown 5xxx instruction
$83C    $2F58   CALL     $F58            ; Call subroutine at F58
$83E    $2DD0   CALL     $DD0            ; Call subroutine at DD0
$840    $D346   DRW      V3, V4, #6      ; Draw 6-byte sprite at V3, V4
$842    $85EB   UNKNOWN  85EB            ; Unknown 8xxx instruction
$844    $5749   UNKNOWN  $5749           ; Unknown 5xxx instruction
$846    $2FEE   CALL     $FEE            ; Call subroutine at FEE
$848    $143C   JP       $43C            ; Jump to 43C
$84A    $A5F5   LD       I, $5F5         ; Load 5F5 into I
$84C    $9C78   UNKNOWN  $9C78           ; Unknown 9xxx instruction
$84E    $6743   LD       V7, #43         ; Load 67 into V7
$850    $4813   SNE      V8, #13         ; Skip if V8 != 19
$852    $22DF   CALL     $2DF            ; Call subroutine at 2DF
$854    $ACCF   LD       I, $CCF         ; Load CCF into I
$856    $CB02   RND      VB, #02         ; VB = random & 02
$858    $FA83   UNKNOWN  FA83            ; Unknown Fxxx instruction
$85A    $CAB2   RND      VA, #B2         ; VA = random & B2
$85C    $17DC   JP       $7DC            ; Jump to 7DC
$85E    $044A   SYS      $44A            ; System call to 44A
$860    $B3CE   JP       V0, $3CE        ; Jump to V0 + 3CE
$862    $F599   UNKNOWN  F599            ; Unknown Fxxx instruction
$864    $52CA   UNKNOWN  $52CA           ; Unknown 5xxx instruction
$866    $4286   SNE      V2, #86         ; Skip if V2 != 134
$868    $915A   UNKNOWN  $915A           ; Unknown 9xxx instruction
$86A    $5FFB   UNKNOWN  $5FFB           ; Unknown 5xxx instruction
$86C    $D9A2   DRW      V9, VA, #2      ; Draw 2-byte sprite at V9, VA
$86E    $6DC3   LD       VD, #C3         ; Load 195 into VD
$870    $799E   ADD      V9, #9E         ; Add 158 to V9
$872    $A152   LD       I, $152         ; Load 152 into I
$874    $3B16   SE       VB, #16         ; Skip if VB == 22
$876    $3B51   SE       VB, #51         ; Skip if VB == 81
$878    $4802   SNE      V8, #02         ; Skip if V8 != 2
$87A    $BC1F   JP       V0, $C1F        ; Jump to V0 + C1F
$87C    $41B3   SNE      V1, #B3         ; Skip if V1 != 179
$87E    $B698   JP       V0, $698        ; Jump to V0 + 698
$880    $9D4A   UNKNOWN  $9D4A           ; Unknown 9xxx instruction
$882    $3035   SE       V0, #35         ; Skip if V0 == 53
$884    $EED3   UNKNOWN  $EED3           ; Unknown Exxx instruction
$886    $F3BB   UNKNOWN  F3BB            ; Unknown Fxxx instruction
$888    $85DF   UNKNOWN  85DF            ; Unknown 8xxx instruction
$88A    $3938   SE       V9, #38         ; Skip if V9 == 56
$88C    $9267   UNKNOWN  $9267           ; Unknown 9xxx instruction
$88E    $0E18   SYS      $E18            ; System call to E18
$890    $5F98   UNKNOWN  $5F98           ; Unknown 5xxx instruction
$892    $4C7C   SNE      VC, #7C         ; Skip if VC != 124
$894    $9C0F   UNKNOWN  $9C0F           ; Unknown 9xxx instruction
$896    $2A1B   CALL     $A1B            ; Call subroutine at A1B
$898    $DEF7   DRW      VE, VF, #7      ; Draw 7-byte sprite at VE, VF
$89A    $7965   ADD      V9, #65         ; Add 101 to V9
$89C    $013E   SYS      $13E            ; System call to 13E
$89E    $C427   RND      V4, #27         ; V4 = random & 27
$8A0    $E129   UNKNOWN  $E129           ; Unknown Exxx instruction
$8A2    $D1DB   DRW      V1, VD, #B      ; Draw 11-byte sprite at V1, VD
$8A4    $B6A9   JP       V0, $6A9        ; Jump to V0 + 6A9
$8A6    $8814   ADD      V8, V1          ; V8 += V1, VF = carry
$8A8    $AAA9   LD       I, $AA9         ; Load AA9 into I
$8AA    $C146   RND      V1, #46         ; V1 = random & 46
$8AC    $AC6A   LD       I, $C6A         ; Load C6A into I
$8AE    $1DF7   JP       $DF7            ; Jump to DF7
$8B0    $0872   SYS      $872            ; System call to 872
$8B2    $31FB   SE       V1, #FB         ; Skip if V1 == 251
$8B4    $D3EC   DRW      V3, VE, #C      ; Draw 12-byte sprite at V3, VE
$8B6    $7354   ADD      V3, #54         ; Add 84 to V3
$8B8    $1C56   JP       $C56            ; Jump to C56
$8BA    $A05C   LD       I, $05C         ; Load 05C into I
$8BC    $52D8   UNKNOWN  $52D8           ; Unknown 5xxx instruction
$8BE    $AC18   LD       I, $C18         ; Load C18 into I
$8C0    $3A06   SE       VA, #06         ; Skip if VA == 6
$8C2    $5542   UNKNOWN  $5542           ; Unknown 5xxx instruction
$8C4    $CE98   RND      VE, #98         ; VE = random & 98
$8C6    $B2E3   JP       V0, $2E3        ; Jump to V0 + 2E3
$8C8    $F2CA   UNKNOWN  F2CA            ; Unknown Fxxx instruction
$8CA    $4061   SNE      V0, #61         ; Skip if V0 != 97
$8CC    $F36A   UNKNOWN  F36A            ; Unknown Fxxx instruction
$8CE    $E79B   UNKNOWN  $E79B           ; Unknown Exxx instruction
$8D0    $5518   UNKNOWN  $5518           ; Unknown 5xxx instruction
$8D2    $2AE0   CALL     $AE0            ; Call subroutine at AE0
$8D4    $68E8   LD       V8, #E8         ; Load 232 into V8
$8D6    $EA0D   UNKNOWN  $EA0D           ; Unknown Exxx instruction
$8D8    $CC3B   RND      VC, #3B         ; VC = random & 3B
$8DA    $3362   SE       V3, #62         ; Skip if V3 == 98
$8DC    $D08D   DRW      V0, V8, #D      ; Draw 13-byte sprite at V0, V8
$8DE    $3B05   SE       VB, #05         ; Skip if VB == 5
$8E0    $46DC   SNE      V6, #DC         ; Skip if V6 != 220
$8E2    $8904   ADD      V9, V0          ; V9 += V0, VF = carry
$8E4    $5E5B   UNKNOWN  $5E5B           ; Unknown 5xxx instruction
$8E6    $3AA7   SE       VA, #A7         ; Skip if VA == 167
$8E8    $85E0   LD       V5, VE          ; V5 = VE
$8EA    $6301   LD       V3, #01         ; Load 1 into V3
$8EC    $7239   ADD      V2, #39         ; Add 57 to V2
$8EE    $3C2D   SE       VC, #2D         ; Skip if VC == 45
$8F0    $222E   CALL     $22E            ; Call subroutine at 22E
$8F2    $C3E4   RND      V3, #E4         ; V3 = random & E4
$8F4    $713E   ADD      V1, #3E         ; Add 62 to V1
$8F6    $FA20   UNKNOWN  FA20            ; Unknown Fxxx instruction
$8F8    $22A8   CALL     $2A8            ; Call subroutine at 2A8
$8FA    $3F2F   SE       VF, #2F         ; Skip if VF == 47
$8FC    $BA2C   JP       V0, $A2C        ; Jump to V0 + A2C
$8FE    $2E43   CALL     $E43            ; Call subroutine at E43
$900    $3988   SE       V9, #88         ; Skip if V9 == 136
$902    $066D   SYS      $66D            ; System call to 66D
$904    $6AC8   LD       VA, #C8         ; Load 200 into VA
$906    $F6A1   UNKNOWN  F6A1            ; Unknown Fxxx instruction
$908    $5DD9   UNKNOWN  $5DD9           ; Unknown 5xxx instruction
$90A    $29E2   CALL     $9E2            ; Call subroutine at 9E2
$90C    $A2D5   LD       I, $2D5         ; Load 2D5 into I
$90E    $AABF   LD       I, $ABF         ; Load ABF into I
$910    $05E9   SYS      $5E9            ; System call to 5E9
$912    $F5C9   UNKNOWN  F5C9            ; Unknown Fxxx instruction
$914    $7B9B   ADD      VB, #9B         ; Add 155 to VB
$916    $1D68   JP       $D68            ; Jump to D68
$918    $5ECF   UNKNOWN  $5ECF           ; Unknown 5xxx instruction
$91A    $235D   CALL     $35D            ; Call subroutine at 35D
$91C    $D0B4   DRW      V0, VB, #4      ; Draw 4-byte sprite at V0, VB
$91E    $4253   SNE      V2, #53         ; Skip if V2 != 83
$920    $5E3F   UNKNOWN  $5E3F           ; Unknown 5xxx instruction
$922    $B551   JP       V0, $551        ; Jump to V0 + 551
$924    $5011   UNKNOWN  $5011           ; Unknown 5xxx instruction
$926    $1349   JP       $349            ; Jump to 349
$928    $8ADC   UNKNOWN  8ADC            ; Unknown 8xxx instruction
$92A    $877F   UNKNOWN  877F            ; Unknown 8xxx instruction
$92C    $1F2F   JP       $F2F            ; Jump to F2F
$92E    $78D5   ADD      V8, #D5         ; Add 213 to V8
$930    $CD10   RND      VD, #10         ; VD = random & 10
$932    $CA67   RND      VA, #67         ; VA = random & 67
$934    $9E70   SNE      VE, V7          ; Skip if VE != V7
$936    $5DC4   UNKNOWN  $5DC4           ; Unknown 5xxx instruction
$938    $C0D4   RND      V0, #D4         ; V0 = random & D4
$93A    $AFBB   LD       I, $FBB         ; Load FBB into I
$93C    $8594   ADD      V5, V9          ; V5 += V9, VF = carry
$93E    $9E7C   UNKNOWN  $9E7C           ; Unknown 9xxx instruction
$940    $7935   ADD      V9, #35         ; Add 53 to V9
$942    $9420   SNE      V4, V2          ; Skip if V4 != V2
$944    $AEFB   LD       I, $EFB         ; Load EFB into I
$946    $8B24   ADD      VB, V2          ; VB += V2, VF = carry
$948    $E320   UNKNOWN  $E320           ; Unknown Exxx instruction
$94A    $0555   SYS      $555            ; System call to 555
$94C    $5D21   UNKNOWN  $5D21           ; Unknown 5xxx instruction
$94E    $1FA7   JP       $FA7            ; Jump to FA7
$950    $9C2A   UNKNOWN  $9C2A           ; Unknown 9xxx instruction
$952    $F74D   UNKNOWN  F74D            ; Unknown Fxxx instruction
$954    $14BF   JP       $4BF            ; Jump to 4BF
$956    $14F1   JP       $4F1            ; Jump to 4F1
$958    $0253   SYS      $253            ; System call to 253
$95A    $7999   ADD      V9, #99         ; Add 153 to V9
$95C    $2FAE   CALL     $FAE            ; Call subroutine at FAE
$95E    $D530   DRW      V5, V3, #0      ; Draw 0-byte sprite at V5, V3
$960    $09E7   SYS      $9E7            ; System call to 9E7
$962    $492E   SNE      V9, #2E         ; Skip if V9 != 46
$964    $BA9A   JP       V0, $A9A        ; Jump to V0 + A9A
$966    $AA76   LD       I, $A76         ; Load A76 into I
$968    $6579   LD       V5, #79         ; Load 121 into V5
$96A    $2CC0   CALL     $CC0            ; Call subroutine at CC0
$96C    $5BAE   UNKNOWN  $5BAE           ; Unknown 5xxx instruction
$96E    $E353   UNKNOWN  $E353           ; Unknown Exxx instruction
$970    $65F5   LD       V5, #F5         ; Load 245 into V5
$972    $4E9A   SNE      VE, #9A         ; Skip if VE != 154
$974    $ED0D   UNKNOWN  $ED0D           ; Unknown Exxx instruction
$976    $17E6   JP       $7E6            ; Jump to 7E6
$978    $BF64   JP       V0, $F64        ; Jump to V0 + F64
$97A    $086E   SYS      $86E            ; System call to 86E
$97C    $31CC   SE       V1, #CC         ; Skip if V1 == 204
$97E    $211E   CALL     $11E            ; Call subroutine at 11E
$980    $94BB   UNKNOWN  $94BB           ; Unknown 9xxx instruction
$982    $9DA4   UNKNOWN  $9DA4           ; Unknown 9xxx instruction
$984    $824C   UNKNOWN  824C            ; Unknown 8xxx instruction
$986    $58BC   UNKNOWN  $58BC           ; Unknown 5xxx instruction
$988    $8B08   UNKNOWN  8B08            ; Unknown 8xxx instruction
$98A    $BF17   JP       V0, $F17        ; Jump to V0 + F17
$98C    $67B0   LD       V7, #B0         ; Load 176 into V7
$98E    $5BB5   UNKNOWN  $5BB5           ; Unknown 5xxx instruction
$990    $9F05   UNKNOWN  $9F05           ; Unknown 9xxx instruction
$992    $6E69   LD       VE, #69         ; Load 105 into VE
$994    $C302   RND      V3, #02         ; V3 = random & 02
$996    $6C3D   LD       VC, #3D         ; Load 61 into VC
$998    $7B1D   ADD      VB, #1D         ; Add 29 to VB
$99A    $8352   AND      V3, V5          ; V3 &= V5
$99C    $0202   SYS      $202            ; System call to 202
$99E    $0E20   SYS      $E20            ; System call to E20
$9A0    $FD4D   UNKNOWN  FD4D            ; Unknown Fxxx instruction
$9A2    $0882   SYS      $882            ; System call to 882
$9A4    $7F94   ADD      VF, #94         ; Add 148 to VF
$9A6    $83F3   XOR      V3, VF          ; V3 ^= VF
$9A8    $7B46   ADD      VB, #46         ; Add 70 to VB
$9AA    $618B   LD       V1, #8B         ; Load 139 into V1
$9AC    $E5C7   UNKNOWN  $E5C7           ; Unknown Exxx instruction
$9AE    $F49E   UNKNOWN  F49E            ; Unknown Fxxx instruction
$9B0    $1D39   JP       $D39            ; Jump to D39
$9B2    $D9EF   DRW      V9, VE, #F      ; Draw 15-byte sprite at V9, VE
$9B4    $BF76   JP       V0, $F76        ; Jump to V0 + F76
$9B6    $6DAE   LD       VD, #AE         ; Load 174 into VD
$9B8    $A373   LD       I, $373         ; Load 373 into I
$9BA    $3C1F   SE       VC, #1F         ; Skip if VC == 31
$9BC    $87BE   SHL      V7              ; V7 <<= 1, VF = MSB
$9BE    $7CC4   ADD      VC, #C4         ; Add 196 to VC
$9C0    $7DBB   ADD      VD, #BB         ; Add 187 to VD
$9C2    $4A2A   SNE      VA, #2A         ; Skip if VA != 42
$9C4    $74B6   ADD      V4, #B6         ; Add 182 to V4
$9C6    $F9F2   UNKNOWN  F9F2            ; Unknown Fxxx instruction
$9C8    $4C68   SNE      VC, #68         ; Skip if VC != 104
$9CA    $17A1   JP       $7A1            ; Jump to 7A1
$9CC    $7145   ADD      V1, #45         ; Add 69 to V1
$9CE    $87E7   SUBN     V7, VE          ; V7 = VE - V7, VF = !borrow
$9D0    $0285   SYS      $285            ; System call to 285
$9D2    $053B   SYS      $53B            ; System call to 53B
$9D4    $D324   DRW      V3, V2, #4      ; Draw 4-byte sprite at V3, V2
$9D6    $FDA9   UNKNOWN  FDA9            ; Unknown Fxxx instruction
$9D8    $D5FF   DRW      V5, VF, #F      ; Draw 15-byte sprite at V5, VF
$9DA    $F522   UNKNOWN  F522            ; Unknown Fxxx instruction
$9DC    $DCAA   DRW      VC, VA, #A      ; Draw 10-byte sprite at VC, VA
$9DE    $3CEC   SE       VC, #EC         ; Skip if VC == 236
$9E0    $5165   UNKNOWN  $5165           ; Unknown 5xxx instruction
$9E2    $D5D6   DRW      V5, VD, #6      ; Draw 6-byte sprite at V5, VD
$9E4    $4196   SNE      V1, #96         ; Skip if V1 != 150
$9E6    $75D6   ADD      V5, #D6         ; Add 214 to V5
$9E8    $FA74   UNKNOWN  FA74            ; Unknown Fxxx instruction
$9EA    $22D1   CALL     $2D1            ; Call subroutine at 2D1
$9EC    $FEC4   UNKNOWN  FEC4            ; Unknown Fxxx instruction
$9EE    $EB12   UNKNOWN  $EB12           ; Unknown Exxx instruction
$9F0    $94E6   UNKNOWN  $94E6           ; Unknown 9xxx instruction
$9F2    $1184   JP       $184            ; Jump to 184
$9F4    $D12F   DRW      V1, V2, #F      ; Draw 15-byte sprite at V1, V2
$9F6    $9A90   SNE      VA, V9          ; Skip if VA != V9
$9F8    $556F   UNKNOWN  $556F           ; Unknown 5xxx instruction
$9FA    $3518   SE       V5, #18         ; Skip if V5 == 24
$9FC    $59B3   UNKNOWN  $59B3           ; Unknown 5xxx instruction
$9FE    $E51F   UNKNOWN  $E51F           ; Unknown Exxx instruction
$A00    $DFCC   DRW      VF, VC, #C      ; Draw 12-byte sprite at VF, VC
$A02    $0470   SYS      $470            ; System call to 470
$A04    $3077   SE       V0, #77         ; Skip if V0 == 119
$A06    $4682   SNE      V6, #82         ; Skip if V6 != 130
$A08    $B925   JP       V0, $925        ; Jump to V0 + 925
$A0A    $68DD   LD       V8, #DD         ; Load 221 into V8
$A0C    $097B   SYS      $97B            ; System call to 97B
$A0E    $6D5E   LD       VD, #5E         ; Load 94 into VD
$A10    $9A8F   UNKNOWN  $9A8F           ; Unknown 9xxx instruction
$A12    $C60D   RND      V6, #0D         ; V6 = random & 0D
$A14    $F2F7   UNKNOWN  F2F7            ; Unknown Fxxx instruction
$A16    $267C   CALL     $67C            ; Call subroutine at 67C
$A18    $DC1E   DRW      VC, V1, #E      ; Draw 14-byte sprite at VC, V1
$A1A    $E9A7   UNKNOWN  $E9A7           ; Unknown Exxx instruction
$A1C    $358B   SE       V5, #8B         ; Skip if V5 == 139
$A1E    $7F3F   ADD      VF, #3F         ; Add 63 to VF
$A20    $2AE8   CALL     $AE8            ; Call subroutine at AE8
$A22    $F2FF   UNKNOWN  F2FF            ; Unknown Fxxx instruction
$A24    $F320   UNKNOWN  F320            ; Unknown Fxxx instruction
$A26    $5B90   SE       VB, V9          ; Skip if VB == V9
$A28    $7E8D   ADD      VE, #8D         ; Add 141 to VE
$A2A    $2C21   CALL     $C21            ; Call subroutine at C21
$A2C    $B88D   JP       V0, $88D        ; Jump to V0 + 88D
$A2E    $AD69   LD       I, $D69         ; Load D69 into I
$A30    $7791   ADD      V7, #91         ; Add 145 to V7
$A32    $FEC8   UNKNOWN  FEC8            ; Unknown Fxxx instruction
$A34    $F623   UNKNOWN  F623            ; Unknown Fxxx instruction
$A36    $F890   UNKNOWN  F890            ; Unknown Fxxx instruction
$A38    $6565   LD       V5, #65         ; Load 101 into V5
$A3A    $3369   SE       V3, #69         ; Skip if V3 == 105
$A3C    $36B1   SE       V6, #B1         ; Skip if V6 == 177
$A3E    $E7F6   UNKNOWN  $E7F6           ; Unknown Exxx instruction
$A40    $BAB4   JP       V0, $AB4        ; Jump to V0 + AB4
$A42    $0A02   SYS      $A02            ; System call to A02
$A44    $B86F   JP       V0, $86F        ; Jump to V0 + 86F
$A46    $4660   SNE      V6, #60         ; Skip if V6 != 96
$A48    $41C6   SNE      V1, #C6         ; Skip if V1 != 198
$A4A    $E120   UNKNOWN  $E120           ; Unknown Exxx instruction
$A4C    $6E0D   LD       VE, #0D         ; Load 13 into VE
$A4E    $62AF   LD       V2, #AF         ; Load 175 into V2
$A50    $9AA0   SNE      VA, VA          ; Skip if VA != VA
$A52    $0CB2   SYS      $CB2            ; System call to CB2
$A54    $80E6   SHR      V0              ; V0 >>= 1, VF = LSB
$A56    $8448   UNKNOWN  8448            ; Unknown 8xxx instruction
$A58    $0D8C   SYS      $D8C            ; System call to D8C
$A5A    $2F71   CALL     $F71            ; Call subroutine at F71
$A5C    $1F50   JP       $F50            ; Jump to F50
$A5E    $3730   SE       V7, #30         ; Skip if V7 == 48
$A60    $0FE0   SYS      $FE0            ; System call to FE0
$A62    $33C0   SE       V3, #C0         ; Skip if V3 == 192
$A64    $705F   ADD      V0, #5F         ; Add 95 to V0
$A66    $CCF3   RND      VC, #F3         ; VC = random & F3
$A68    $63C9   LD       V3, #C9         ; Load 201 into V3
$A6A    $8D01   OR       VD, V0          ; VD |= V0
$A6C    $5069   UNKNOWN  $5069           ; Unknown 5xxx instruction
$A6E    $BB5E   JP       V0, $B5E        ; Jump to V0 + B5E
$A70    $0CDB   SYS      $CDB            ; System call to CDB
$A72    $ED24   UNKNOWN  $ED24           ; Unknown Exxx instruction
$A74    $A7C2   LD       I, $7C2         ; Load 7C2 into I
$A76    $1A41   JP       $A41            ; Jump to A41
$A78    $1195   JP       $195            ; Jump to 195
$A7A    $D14D   DRW      V1, V4, #D      ; Draw 13-byte sprite at V1, V4
$A7C    $C505   RND      V5, #05         ; V5 = random & 05
$A7E    $0F01   SYS      $F01            ; System call to F01
$A80    $B943   JP       V0, $943        ; Jump to V0 + 943
$A82    $46D8   SNE      V6, #D8         ; Skip if V6 != 216
$A84    $E950   UNKNOWN  $E950           ; Unknown Exxx instruction
$A86    $960E   UNKNOWN  $960E           ; Unknown 9xxx instruction
$A88    $7698   ADD      V6, #98         ; Add 152 to V6
$A8A    $C564   RND      V5, #64         ; V5 = random & 64
$A8C    $FD4E   UNKNOWN  FD4E            ; Unknown Fxxx instruction
$A8E    $F80E   UNKNOWN  F80E            ; Unknown Fxxx instruction
$A90    $B490   JP       V0, $490        ; Jump to V0 + 490
$A92    $D858   DRW      V8, V5, #8      ; Draw 8-byte sprite at V8, V5
$A94    $0D05   SYS      $D05            ; System call to D05
$A96    $4472   SNE      V4, #72         ; Skip if V4 != 114
$A98    $3E16   SE       VE, #16         ; Skip if VE == 22
$A9A    $6BE9   LD       VB, #E9         ; Load 233 into VB
$A9C    $97C9   UNKNOWN  $97C9           ; Unknown 9xxx instruction
$A9E    $A8C4   LD       I, $8C4         ; Load 8C4 into I
$AA0    $C33F   RND      V3, #3F         ; V3 = random & 3F
$AA2    $5EB5   UNKNOWN  $5EB5           ; Unknown 5xxx instruction
$AA4    $734B   ADD      V3, #4B         ; Add 75 to V3
$AA6    $D180   DRW      V1, V8, #0      ; Draw 0-byte sprite at V1, V8
$AA8    $604B   LD       V0, #4B         ; Load 75 into V0
$AAA    $2F65   CALL     $F65            ; Call subroutine at F65
$AAC    $2281   CALL     $281            ; Call subroutine at 281
$AAE    $209C   CALL     $09C            ; Call subroutine at 09C
$AB0    $6D48   LD       VD, #48         ; Load 72 into VD
$AB2    $9A65   UNKNOWN  $9A65           ; Unknown 9xxx instruction
$AB4    $1118   JP       $118            ; Jump to 118
$AB6    $1FF2   JP       $FF2            ; Jump to FF2
$AB8    $FD8C   UNKNOWN  FD8C            ; Unknown Fxxx instruction
$ABA    $89E5   SUB      V9, VE          ; V9 -= VE, VF = !borrow
$ABC    $8E33   XOR      VE, V3          ; VE ^= V3
$ABE    $2A1F   CALL     $A1F            ; Call subroutine at A1F
$AC0    $E16D   UNKNOWN  $E16D           ; Unknown Exxx instruction
$AC2    $F1E2   UNKNOWN  F1E2            ; Unknown Fxxx instruction
$AC4    $E543   UNKNOWN  $E543           ; Unknown Exxx instruction
$AC6    $D1DA   DRW      V1, VD, #A      ; Draw 10-byte sprite at V1, VD
$AC8    $6E67   LD       VE, #67         ; Load 103 into VE
$ACA    $AE60   LD       I, $E60         ; Load E60 into I
$ACC    $E22B   UNKNOWN  $E22B           ; Unknown Exxx instruction
$ACE    $B692   JP       V0, $692        ; Jump to V0 + 692
$AD0    $1AB8   JP       $AB8            ; Jump to AB8
$AD2    $5601   UNKNOWN  $5601           ; Unknown 5xxx instruction
$AD4    $503B   UNKNOWN  $503B           ; Unknown 5xxx instruction
$AD6    $5C13   UNKNOWN  $5C13           ; Unknown 5xxx instruction
$AD8    $AC26   LD       I, $C26         ; Load C26 into I
$ADA    $69AD   LD       V9, #AD         ; Load 173 into V9
$ADC    $7670   ADD      V6, #70         ; Add 112 to V6
$ADE    $D357   DRW      V3, V5, #7      ; Draw 7-byte sprite at V3, V5
$AE0    $0176   SYS      $176            ; System call to 176
$AE2    $C0BA   RND      V0, #BA         ; V0 = random & BA
$AE4    $A020   LD       I, $020         ; Load 020 into I
$AE6    $B921   JP       V0, $921        ; Jump to V0 + 921
$AE8    $3980   SE       V9, #80         ; Skip if V9 == 128
$AEA    $7AA9   ADD      VA, #A9         ; Add 169 to VA
$AEC    $D423   DRW      V4, V2, #3      ; Draw 3-byte sprite at V4, V2
$AEE    $F5CD   UNKNOWN  F5CD            ; Unknown Fxxx instruction
$AF0    $7A04   ADD      VA, #04         ; Add 4 to VA
$AF2    $4FF0   SNE      VF, #F0         ; Skip if VF != 240
$AF4    $8DBE   SHL      VD              ; VD <<= 1, VF = MSB
$AF6    $05DE   SYS      $5DE            ; System call to 5DE
$AF8    $7D9A   ADD      VD, #9A         ; Add 154 to VD
$AFA    $AD76   LD       I, $D76         ; Load D76 into I
$AFC    $5816   UNKNOWN  $5816           ; Unknown 5xxx instruction
$AFE    $8E7F   UNKNOWN  8E7F            ; Unknown 8xxx instruction
$B00    $2649   CALL     $649            ; Call subroutine at 649
$B02    $80A5   SUB      V0, VA          ; V0 -= VA, VF = !borrow
$B04    $6D59   LD       VD, #59         ; Load 89 into VD
$B06    $F3B9   UNKNOWN  F3B9            ; Unknown Fxxx instruction
$B08    $3CB2   SE       VC, #B2         ; Skip if VC == 178
$B0A    $55AC   UNKNOWN  $55AC           ; Unknown 5xxx instruction
$B0C    $13AD   JP       $3AD            ; Jump to 3AD
$B0E    $C030   RND      V0, #30         ; V0 = random & 30
$B10    $A95C   LD       I, $95C         ; Load 95C into I
$B12    $4865   SNE      V8, #65         ; Skip if V8 != 101
$B14    $4787   SNE      V7, #87         ; Skip if V7 != 135
$B16    $3827   SE       V8, #27         ; Skip if V8 == 39
$B18    $3D6F   SE       VD, #6F         ; Skip if VD == 111
$B1A    $23A2   CALL     $3A2            ; Call subroutine at 3A2
$B1C    $7F58   ADD      VF, #58         ; Add 88 to VF
$B1E    $D138   DRW      V1, V3, #8      ; Draw 8-byte sprite at V1, V3
$B20    $DE9D   DRW      VE, V9, #D      ; Draw 13-byte sprite at VE, V9
$B22    $AAB5   LD       I, $AB5         ; Load AB5 into I
$B24    $FE97   UNKNOWN  FE97            ; Unknown Fxxx instruction
$B26    $70EB   ADD      V0, #EB         ; Add 235 to V0
$B28    $6261   LD       V2, #61         ; Load 97 into V2
$B2A    $4590   SNE      V5, #90         ; Skip if V5 != 144
$B2C    $E864   UNKNOWN  $E864           ; Unknown Exxx instruction
$B2E    $B756   JP       V0, $756        ; Jump to V0 + 756
$B30    $C536   RND      V5, #36         ; V5 = random & 36
$B32    $3444   SE       V4, #44         ; Skip if V4 == 68
$B34    $A723   LD       I, $723         ; Load 723 into I
$B36    $628C   LD       V2, #8C         ; Load 140 into V2
$B38    $DE36   DRW      VE, V3, #6      ; Draw 6-byte sprite at VE, V3
$B3A    $D113   DRW      V1, V1, #3      ; Draw 3-byte sprite at V1, V1
$B3C    $E071   UNKNOWN  $E071           ; Unknown Exxx instruction
$B3E    $95DF   UNKNOWN  $95DF           ; Unknown 9xxx instruction
$B40    $901A   UNKNOWN  $901A           ; Unknown 9xxx instruction
$B42    $07EA   SYS      $7EA            ; System call to 7EA
$B44    $5FF4   UNKNOWN  $5FF4           ; Unknown 5xxx instruction
$B46    $AD28   LD       I, $D28         ; Load D28 into I
$B48    $C98F   RND      V9, #8F         ; V9 = random & 8F
$B4A    $7AF6   ADD      VA, #F6         ; Add 246 to VA
$B4C    $0125   SYS      $125            ; System call to 125
$B4E    $F333   LD       B, V3           ; Store BCD of V3 at I, I+1, I+2
$B50    $9334   UNKNOWN  $9334           ; Unknown 9xxx instruction
$B52    $35DC   SE       V5, #DC         ; Skip if V5 == 220
$B54    $43CF   SNE      V3, #CF         ; Skip if V3 != 207
$B56    $855B   UNKNOWN  855B            ; Unknown 8xxx instruction
$B58    $4DD4   SNE      VD, #D4         ; Skip if VD != 212
$B5A    $DF66   DRW      VF, V6, #6      ; Draw 6-byte sprite at VF, V6
$B5C    $9D02   UNKNOWN  $9D02           ; Unknown 9xxx instruction
$B5E    $5799   UNKNOWN  $5799           ; Unknown 5xxx instruction
$B60    $93F7   UNKNOWN  $93F7           ; Unknown 9xxx instruction
$B62    $DCEF   DRW      VC, VE, #F      ; Draw 15-byte sprite at VC, VE
$B64    $DF38   DRW      VF, V3, #8      ; Draw 8-byte sprite at VF, V3
$B66    $2C58   CALL     $C58            ; Call subroutine at C58
$B68    $EC5D   UNKNOWN  $EC5D           ; Unknown Exxx instruction
$B6A    $FE9C   UNKNOWN  FE9C            ; Unknown Fxxx instruction
$B6C    $7399   ADD      V3, #99         ; Add 153 to V3
$B6E    $D41D   DRW      V4, V1, #D      ; Draw 13-byte sprite at V4, V1
$B70    $AC30   LD       I, $C30         ; Load C30 into I
$B72    $8A2C   UNKNOWN  8A2C            ; Unknown 8xxx instruction
$B74    $AC75   LD       I, $C75         ; Load C75 into I
$B76    $E07C   UNKNOWN  $E07C           ; Unknown Exxx instruction
$B78    $9D10   SNE      VD, V1          ; Skip if VD != V1
$B7A    $34CC   SE       V4, #CC         ; Skip if V4 == 204
$B7C    $D715   DRW      V7, V1, #5      ; Draw 5-byte sprite at V7, V1
$B7E    $89F7   SUBN     V9, VF          ; V9 = VF - V9, VF = !borrow
$B80    $8AA3   XOR      VA, VA          ; VA ^= VA
$B82    $4AA7   SNE      VA, #A7         ; Skip if VA != 167
$B84    $2CF4   CALL     $CF4            ; Call subroutine at CF4
$B86    $F3FF   UNKNOWN  F3FF            ; Unknown Fxxx instruction
$B88    $A6CC   LD       I, $6CC         ; Load 6CC into I
$B8A    $2645   CALL     $645            ; Call subroutine at 645
$B8C    $DB17   DRW      VB, V1, #7      ; Draw 7-byte sprite at VB, V1
$B8E    $B7FB   JP       V0, $7FB        ; Jump to V0 + 7FB
$B90    $9FBE   UNKNOWN  $9FBE           ; Unknown 9xxx instruction
$B92    $57A3   UNKNOWN  $57A3           ; Unknown 5xxx instruction
$B94    $2861   CALL     $861            ; Call subroutine at 861
$B96    $EEDD   UNKNOWN  $EEDD           ; Unknown Exxx instruction
$B98    $A2F0   LD       I, $2F0         ; Load 2F0 into I
$B9A    $EC90   UNKNOWN  $EC90           ; Unknown Exxx instruction
$B9C    $4289   SNE      V2, #89         ; Skip if V2 != 137
$B9E    $9562   UNKNOWN  $9562           ; Unknown 9xxx instruction
$BA0    $2311   CALL     $311            ; Call subroutine at 311
$BA2    $2449   CALL     $449            ; Call subroutine at 449
$BA4    $C925   RND      V9, #25         ; V9 = random & 25
$BA6    $5A16   UNKNOWN  $5A16           ; Unknown 5xxx instruction
$BA8    $98F7   UNKNOWN  $98F7           ; Unknown 9xxx instruction
$BAA    $D982   DRW      V9, V8, #2      ; Draw 2-byte sprite at V9, V8
$BAC    $B9F5   JP       V0, $9F5        ; Jump to V0 + 9F5
$BAE    $C7FA   RND      V7, #FA         ; V7 = random & FA
$BB0    $1955   JP       $955            ; Jump to 955
$BB2    $7138   ADD      V1, #38         ; Add 56 to V1
$BB4    $3E67   SE       VE, #67         ; Skip if VE == 103
$BB6    $C2E8   RND      V2, #E8         ; V2 = random & E8
$BB8    $61EC   LD       V1, #EC         ; Load 236 into V1
$BBA    $5C7F   UNKNOWN  $5C7F           ; Unknown 5xxx instruction
$BBC    $C584   RND      V5, #84         ; V5 = random & 84
$BBE    $90FC   UNKNOWN  $90FC           ; Unknown 9xxx instruction
$BC0    $5018   UNKNOWN  $5018           ; Unknown 5xxx instruction
$BC2    $549C   UNKNOWN  $549C           ; Unknown 5xxx instruction
$BC4    $C361   RND      V3, #61         ; V3 = random & 61
$BC6    $8C72   AND      VC, V7          ; VC &= V7
$BC8    $58A8   UNKNOWN  $58A8           ; Unknown 5xxx instruction
$BCA    $4C1B   SNE      VC, #1B         ; Skip if VC != 27
$BCC    $F261   UNKNOWN  F261            ; Unknown Fxxx instruction
$BCE    $6888   LD       V8, #88         ; Load 136 into V8
$BD0    $3E77   SE       VE, #77         ; Skip if VE == 119
$BD2    $53C7   UNKNOWN  $53C7           ; Unknown 5xxx instruction
$BD4    $2450   CALL     $450            ; Call subroutine at 450
$BD6    $1500   JP       $500            ; Jump to 500
$BD8    $E67C   UNKNOWN  $E67C           ; Unknown Exxx instruction
$BDA    $CDC0   RND      VD, #C0         ; VD = random & C0
$BDC    $7744   ADD      V7, #44         ; Add 68 to V7
$BDE    $8E93   XOR      VE, V9          ; VE ^= V9
$BE0    $D068   DRW      V0, V6, #8      ; Draw 8-byte sprite at V0, V6
$BE2    $C4A5   RND      V4, #A5         ; V4 = random & A5
$BE4    $5479   UNKNOWN  $5479           ; Unknown 5xxx instruction
$BE6    $CB46   RND      VB, #46         ; VB = random & 46
$BE8    $0F75   SYS      $F75            ; System call to F75
$BEA    $7996   ADD      V9, #96         ; Add 150 to V9
$BEC    $0DFB   SYS      $DFB            ; System call to DFB
$BEE    $164E   JP       $64E            ; Jump to 64E
$BF0    $E228   UNKNOWN  $E228           ; Unknown Exxx instruction
$BF2    $EE70   UNKNOWN  $EE70           ; Unknown Exxx instruction
$BF4    $639C   LD       V3, #9C         ; Load 156 into V3
$BF6    $CC44   RND      VC, #44         ; VC = random & 44
$BF8    $DCCF   DRW      VC, VC, #F      ; Draw 15-byte sprite at VC, VC
$BFA    $00F6   SYS      $0F6            ; System call to 0F6
$BFC    $1EBB   JP       $EBB            ; Jump to EBB
$BFE    $4D25   SNE      VD, #25         ; Skip if VD != 37
$C00    $C40F   RND      V4, #0F         ; V4 = random & 0F
$C02    $E2BE   UNKNOWN  $E2BE           ; Unknown Exxx instruction
$C04    $EECB   UNKNOWN  $EECB           ; Unknown Exxx instruction
$C06    $599F   UNKNOWN  $599F           ; Unknown 5xxx instruction
$C08    $CDA9   RND      VD, #A9         ; VD = random & A9
$C0A    $0F07   SYS      $F07            ; System call to F07
$C0C    $48C9   SNE      V8, #C9         ; Skip if V8 != 201
$C0E    $8D85   SUB      VD, V8          ; VD -= V8, VF = !borrow
$C10    $45E5   SNE      V5, #E5         ; Skip if V5 != 229
$C12    $B7BC   JP       V0, $7BC        ; Jump to V0 + 7BC
$C14    $06E2   SYS      $6E2            ; System call to 6E2
$C16    $4013   SNE      V0, #13         ; Skip if V0 != 19
$C18    $9A23   UNKNOWN  $9A23           ; Unknown 9xxx instruction
$C1A    $B275   JP       V0, $275        ; Jump to V0 + 275
$C1C    $98D6   UNKNOWN  $98D6           ; Unknown 9xxx instruction
$C1E    $8745   SUB      V7, V4          ; V7 -= V4, VF = !borrow
$C20    $7981   ADD      V9, #81         ; Add 129 to V9
$C22    $B843   JP       V0, $843        ; Jump to V0 + 843
$C24    $65CC   LD       V5, #CC         ; Load 204 into V5
$C26    $D830   DRW      V8, V3, #0      ; Draw 0-byte sprite at V8, V3
$C28    $D014   DRW      V0, V1, #4      ; Draw 4-byte sprite at V0, V1
$C2A    $3646   SE       V6, #46         ; Skip if V6 == 70
$C2C    $0FE8   SYS      $FE8            ; System call to FE8
$C2E    $AECA   LD       I, $ECA         ; Load ECA into I
$C30    $94E6   UNKNOWN  $94E6           ; Unknown 9xxx instruction
$C32    $3792   SE       V7, #92         ; Skip if V7 == 146
$C34    $D169   DRW      V1, V6, #9      ; Draw 9-byte sprite at V1, V6
$C36    $97B9   UNKNOWN  $97B9           ; Unknown 9xxx instruction
$C38    $3F22   SE       VF, #22         ; Skip if VF == 34
$C3A    $78D3   ADD      V8, #D3         ; Add 211 to V8
$C3C    $0CB5   SYS      $CB5            ; System call to CB5
$C3E    $A965   LD       I, $965         ; Load 965 into I
$C40    $52F3   UNKNOWN  $52F3           ; Unknown 5xxx instruction
$C42    $D949   DRW      V9, V4, #9      ; Draw 9-byte sprite at V9, V4
$C44    $7B47   ADD      VB, #47         ; Add 71 to VB
$C46    $381E   SE       V8, #1E         ; Skip if V8 == 30
$C48    $2666   CALL     $666            ; Call subroutine at 666
$C4A    $47D1   SNE      V7, #D1         ; Skip if V7 != 209
$C4C    $4586   SNE      V5, #86         ; Skip if V5 != 134
$C4E    $6867   LD       V8, #67         ; Load 103 into V8
$C50    $DB6A   DRW      VB, V6, #A      ; Draw 10-byte sprite at VB, V6
$C52    $29D9   CALL     $9D9            ; Call subroutine at 9D9
$C54    $7DE0   ADD      VD, #E0         ; Add 224 to VD
$C56    $87FE   SHL      V7              ; V7 <<= 1, VF = MSB
$C58    $3331   SE       V3, #31         ; Skip if V3 == 49
$C5A    $7D5B   ADD      VD, #5B         ; Add 91 to VD
$C5C    $C20F   RND      V2, #0F         ; V2 = random & 0F
$C5E    $9C53   UNKNOWN  $9C53           ; Unknown 9xxx instruction
$C60    $150A   JP       $50A            ; Jump to 50A
$C62    $107B   JP       $07B            ; Jump to 07B
$C64    $C4B7   RND      V4, #B7         ; V4 = random & B7
$C66    $B06B   JP       V0, $06B        ; Jump to V0 + 06B
$C68    $C1F3   RND      V1, #F3         ; V1 = random & F3
$C6A    $A2CF   LD       I, $2CF         ; Load 2CF into I
$C6C    $0DB4   SYS      $DB4            ; System call to DB4
$C6E    $C784   RND      V7, #84         ; V7 = random & 84
$C70    $EEA0   UNKNOWN  $EEA0           ; Unknown Exxx instruction
$C72    $DD65   DRW      VD, V6, #5      ; Draw 5-byte sprite at VD, V6
$C74    $999B   UNKNOWN  $999B           ; Unknown 9xxx instruction
$C76    $BC2A   JP       V0, $C2A        ; Jump to V0 + C2A
$C78    $9FED   UNKNOWN  $9FED           ; Unknown 9xxx instruction
$C7A    $757E   ADD      V5, #7E         ; Add 126 to V5
$C7C    $53C2   UNKNOWN  $53C2           ; Unknown 5xxx instruction
$C7E    $C5E6   RND      V5, #E6         ; V5 = random & E6
$C80    $1A88   JP       $A88            ; Jump to A88
$C82    $5638   UNKNOWN  $5638           ; Unknown 5xxx instruction
$C84    $A31C   LD       I, $31C         ; Load 31C into I
$C86    $ECCB   UNKNOWN  $ECCB           ; Unknown Exxx instruction
$C88    $D8AB   DRW      V8, VA, #B      ; Draw 11-byte sprite at V8, VA
$C8A    $B670   JP       V0, $670        ; Jump to V0 + 670
$C8C    $48FD   SNE      V8, #FD         ; Skip if V8 != 253
$C8E    $BD34   JP       V0, $D34        ; Jump to V0 + D34
$C90    $BF02   JP       V0, $F02        ; Jump to V0 + F02
$C92    $DBAA   DRW      VB, VA, #A      ; Draw 10-byte sprite at VB, VA
$C94    $9109   UNKNOWN  $9109           ; Unknown 9xxx instruction
$C96    $EC9E   SKP      VC              ; Skip if key VC pressed
$C98    $0AEE   SYS      $AEE            ; System call to AEE
$C9A    $B7CD   JP       V0, $7CD        ; Jump to V0 + 7CD
$C9C    $87E5   SUB      V7, VE          ; V7 -= VE, VF = !borrow
$C9E    $6F9E   LD       VF, #9E         ; Load 158 into VF
$CA0    $35DA   SE       V5, #DA         ; Skip if V5 == 218
$CA2    $69C6   LD       V9, #C6         ; Load 198 into V9
$CA4    $6B08   LD       VB, #08         ; Load 8 into VB
$CA6    $9D1C   UNKNOWN  $9D1C           ; Unknown 9xxx instruction
$CA8    $D88F   DRW      V8, V8, #F      ; Draw 15-byte sprite at V8, V8
$CAA    $E434   UNKNOWN  $E434           ; Unknown Exxx instruction
$CAC    $CFE8   RND      VF, #E8         ; VF = random & E8
$CAE    $27E2   CALL     $7E2            ; Call subroutine at 7E2
$CB0    $FA17   UNKNOWN  FA17            ; Unknown Fxxx instruction
$CB2    $B266   JP       V0, $266        ; Jump to V0 + 266
$CB4    $2575   CALL     $575            ; Call subroutine at 575
$CB6    $5EFC   UNKNOWN  $5EFC           ; Unknown 5xxx instruction
$CB8    $C89F   RND      V8, #9F         ; V8 = random & 9F
$CBA    $BB28   JP       V0, $B28        ; Jump to V0 + B28
$CBC    $7057   ADD      V0, #57         ; Add 87 to V0
$CBE    $812D   UNKNOWN  812D            ; Unknown 8xxx instruction
$CC0    $E09E   SKP      V0              ; Skip if key V0 pressed
$CC2    $DA56   DRW      VA, V5, #6      ; Draw 6-byte sprite at VA, V5
$CC4    $253D   CALL     $53D            ; Call subroutine at 53D
$CC6    $A6DD   LD       I, $6DD         ; Load 6DD into I
$CC8    $FC83   UNKNOWN  FC83            ; Unknown Fxxx instruction
$CCA    $FEAD   UNKNOWN  FEAD            ; Unknown Fxxx instruction
$CCC    $C790   RND      V7, #90         ; V7 = random & 90
$CCE    $B913   JP       V0, $913        ; Jump to V0 + 913
$CD0    $1790   JP       $790            ; Jump to 790
$CD2    $6901   LD       V9, #01         ; Load 1 into V9
$CD4    $8036   SHR      V0              ; V0 >>= 1, VF = LSB
$CD6    $5A15   UNKNOWN  $5A15           ; Unknown 5xxx instruction
$CD8    $26CC   CALL     $6CC            ; Call subroutine at 6CC
$CDA    $85AB   UNKNOWN  85AB            ; Unknown 8xxx instruction
$CDC    $32BB   SE       V2, #BB         ; Skip if V2 == 187
$CDE    $1FAF   JP       $FAF            ; Jump to FAF
$CE0    $A1A6   LD       I, $1A6         ; Load 1A6 into I
$CE2    $E0C2   UNKNOWN  $E0C2           ; Unknown Exxx instruction
$CE4    $FDFA   UNKNOWN  FDFA            ; Unknown Fxxx instruction
$CE6    $01C3   SYS      $1C3            ; System call to 1C3
$CE8    $30D2   SE       V0, #D2         ; Skip if V0 == 210
$CEA    $3398   SE       V3, #98         ; Skip if V3 == 152
$CEC    $F538   UNKNOWN  F538            ; Unknown Fxxx instruction
$CEE    $AB6A   LD       I, $B6A         ; Load B6A into I
$CF0    $487B   SNE      V8, #7B         ; Skip if V8 != 123
$CF2    $80E6   SHR      V0              ; V0 >>= 1, VF = LSB
$CF4    $6FD5   LD       VF, #D5         ; Load 213 into VF
$CF6    $1346   JP       $346            ; Jump to 346
$CF8    $0B86   SYS      $B86            ; System call to B86
$CFA    $E71D   UNKNOWN  $E71D           ; Unknown Exxx instruction
$CFC    $ECB3   UNKNOWN  $ECB3           ; Unknown Exxx instruction
$CFE    $34A2   SE       V4, #A2         ; Skip if V4 == 162
$D00    $3294   SE       V2, #94         ; Skip if V2 == 148
$D02    $13A0   JP       $3A0            ; Jump to 3A0
$D04    $7A5B   ADD      VA, #5B         ; Add 91 to VA
$D06    $ED2C   UNKNOWN  $ED2C           ; Unknown Exxx instruction
$D08    $99CA   UNKNOWN  $99CA           ; Unknown 9xxx instruction
$D0A    $0350   SYS      $350            ; System call to 350
$D0C    $45DB   SNE      V5, #DB         ; Skip if V5 != 219
$D0E    $0880   SYS      $880            ; System call to 880
$D10    $B507   JP       V0, $507        ; Jump to V0 + 507
$D12    $A9B8   LD       I, $9B8         ; Load 9B8 into I
$D14    $6AC0   LD       VA, #C0         ; Load 192 into VA
$D16    $B16A   JP       V0, $16A        ; Jump to V0 + 16A
$D18    $193C   JP       $93C            ; Jump to 93C
$D1A    $5A6E   UNKNOWN  $5A6E           ; Unknown 5xxx instruction
$D1C    $7644   ADD      V6, #44         ; Add 68 to V6
$D1E    $E2C0   UNKNOWN  $E2C0           ; Unknown Exxx instruction
$D20    $B435   JP       V0, $435        ; Jump to V0 + 435
$D22    $2CC5   CALL     $CC5            ; Call subroutine at CC5
$D24    $34A0   SE       V4, #A0         ; Skip if V4 == 160
$D26    $6F45   LD       VF, #45         ; Load 69 into VF
$D28    $8581   OR       V5, V8          ; V5 |= V8
$D2A    $8CB9   UNKNOWN  8CB9            ; Unknown 8xxx instruction
$D2C    $5955   UNKNOWN  $5955           ; Unknown 5xxx instruction
$D2E    $71FC   ADD      V1, #FC         ; Add 252 to V1
$D30    $AC5A   LD       I, $C5A         ; Load C5A into I
$D32    $2EA2   CALL     $EA2            ; Call subroutine at EA2
$D34    $DA84   DRW      VA, V8, #4      ; Draw 4-byte sprite at VA, V8
$D36    $031E   SYS      $31E            ; System call to 31E
$D38    $FFB1   UNKNOWN  FFB1            ; Unknown Fxxx instruction
$D3A    $AA44   LD       I, $A44         ; Load A44 into I
$D3C    $37DC   SE       V7, #DC         ; Skip if V7 == 220
$D3E    $41B1   SNE      V1, #B1         ; Skip if V1 != 177
$D40    $8C34   ADD      VC, V3          ; VC += V3, VF = carry
$D42    $8F15   SUB      VF, V1          ; VF -= V1, VF = !borrow
$D44    $244B   CALL     $44B            ; Call subroutine at 44B
$D46    $32DC   SE       V2, #DC         ; Skip if V2 == 220
$D48    $20EB   CALL     $0EB            ; Call subroutine at 0EB
$D4A    $2E2B   CALL     $E2B            ; Call subroutine at E2B
$D4C    $77E3   ADD      V7, #E3         ; Add 227 to V7
$D4E    $1BD2   JP       $BD2            ; Jump to BD2
$D50    $C3A3   RND      V3, #A3         ; V3 = random & A3
$D52    $99FD   UNKNOWN  $99FD           ; Unknown 9xxx instruction
$D54    $A5B1   LD       I, $5B1         ; Load 5B1 into I
$D56    $444B   SNE      V4, #4B         ; Skip if V4 != 75
$D58    $AD90   LD       I, $D90         ; Load D90 into I
$D5A    $A6B5   LD       I, $6B5         ; Load 6B5 into I
$D5C    $B6AF   JP       V0, $6AF        ; Jump to V0 + 6AF
$D5E    $F232   UNKNOWN  F232            ; Unknown Fxxx instruction
$D60    $6535   LD       V5, #35         ; Load 53 into V5
$D62    $D5AD   DRW      V5, VA, #D      ; Draw 13-byte sprite at V5, VA
$D64    $EC45   UNKNOWN  $EC45           ; Unknown Exxx instruction
$D66    $447D   SNE      V4, #7D         ; Skip if V4 != 125
$D68    $826F   UNKNOWN  826F            ; Unknown 8xxx instruction
$D6A    $64E3   LD       V4, #E3         ; Load 227 into V4
$D6C    $E0C8   UNKNOWN  $E0C8           ; Unknown Exxx instruction
$D6E    $3F31   SE       VF, #31         ; Skip if VF == 49
$D70    $6FE0   LD       VF, #E0         ; Load 224 into VF
$D72    $7FC4   ADD      VF, #C4         ; Add 196 to VF
$D74    $587E   UNKNOWN  $587E           ; Unknown 5xxx instruction
$D76    $600C   LD       V0, #0C         ; Load 12 into V0
$D78    $CD58   RND      VD, #58         ; VD = random & 58
$D7A    $25F2   CALL     $5F2            ; Call subroutine at 5F2
$D7C    $B4F1   JP       V0, $4F1        ; Jump to V0 + 4F1
$D7E    $A560   LD       I, $560         ; Load 560 into I
$D80    $8B55   SUB      VB, V5          ; VB -= V5, VF = !borrow
$D82    $CBEC   RND      VB, #EC         ; VB = random & EC
$D84    $4211   SNE      V2, #11         ; Skip if V2 != 17
$D86    $3CED   SE       VC, #ED         ; Skip if VC == 237
$D88    $0DA6   SYS      $DA6            ; System call to DA6
$D8A    $C620   RND      V6, #20         ; V6 = random & 20
$D8C    $98E6   UNKNOWN  $98E6           ; Unknown 9xxx instruction
$D8E    $EDCE   UNKNOWN  $EDCE           ; Unknown Exxx instruction
$D90    $78A8   ADD      V8, #A8         ; Add 168 to V8
$D92    $A591   LD       I, $591         ; Load 591 into I
$D94    $7BCC   ADD      VB, #CC         ; Add 204 to VB
$D96    $80E6   SHR      V0              ; V0 >>= 1, VF = LSB
$D98    $12CD   JP       $2CD            ; Jump to 2CD
$D9A    $6FF8   LD       VF, #F8         ; Load 248 into VF
$D9C    $639C   LD       V3, #9C         ; Load 156 into V3
$D9E    $557C   UNKNOWN  $557C           ; Unknown 5xxx instruction
$DA0    $2B1E   CALL     $B1E            ; Call subroutine at B1E
$DA2    $0F2B   SYS      $F2B            ; System call to F2B
$DA4    $B7C9   JP       V0, $7C9        ; Jump to V0 + 7C9
$DA6    $CCC4   RND      VC, #C4         ; VC = random & C4
$DA8    $C5E0   RND      V5, #E0         ; V5 = random & E0
$DAA    $039E   SYS      $39E            ; System call to 39E
$DAC    $D7A0   DRW      V7, VA, #0      ; Draw 0-byte sprite at V7, VA
$DAE    $FF4E   UNKNOWN  FF4E            ; Unknown Fxxx instruction
$DB0    $1C69   JP       $C69            ; Jump to C69
$DB2    $6E06   LD       VE, #06         ; Load 6 into VE
$DB4    $42C7   SNE      V2, #C7         ; Skip if V2 != 199
$DB6    $F106   UNKNOWN  F106            ; Unknown Fxxx instruction
$DB8    $5E1F   UNKNOWN  $5E1F           ; Unknown 5xxx instruction
$DBA    $5F14   UNKNOWN  $5F14           ; Unknown 5xxx instruction
$DBC    $0EE4   SYS      $EE4            ; System call to EE4
$DBE    $D2DA   DRW      V2, VD, #A      ; Draw 10-byte sprite at V2, VD
$DC0    $60D1   LD       V0, #D1         ; Load 209 into V0
$DC2    $2E38   CALL     $E38            ; Call subroutine at E38
$DC4    $CAB2   RND      VA, #B2         ; VA = random & B2
$DC6    $411D   SNE      V1, #1D         ; Skip if V1 != 29
$DC8    $0E14   SYS      $E14            ; System call to E14
$DCA    $8834   ADD      V8, V3          ; V8 += V3, VF = carry
$DCC    $B4F0   JP       V0, $4F0        ; Jump to V0 + 4F0
$DCE    $F9A3   UNKNOWN  F9A3            ; Unknown Fxxx instruction
$DD0    $7716   ADD      V7, #16         ; Add 22 to V7
$DD2    $5B33   UNKNOWN  $5B33           ; Unknown 5xxx instruction
$DD4    $E240   UNKNOWN  $E240           ; Unknown Exxx instruction
$DD6    $D496   DRW      V4, V9, #6      ; Draw 6-byte sprite at V4, V9
$DD8    $850C   UNKNOWN  850C            ; Unknown 8xxx instruction
$DDA    $D85F   DRW      V8, V5, #F      ; Draw 15-byte sprite at V8, V5
$DDC    $E4F0   UNKNOWN  $E4F0           ; Unknown Exxx instruction
$DDE    $8B7F   UNKNOWN  8B7F            ; Unknown 8xxx instruction
$DE0    $5F74   UNKNOWN  $5F74           ; Unknown 5xxx instruction
$DE2    $A522   LD       I, $522         ; Load 522 into I
$DE4    $8885   SUB      V8, V8          ; V8 -= V8, VF = !borrow
$DE6    $5899   UNKNOWN  $5899           ; Unknown 5xxx instruction
$DE8    $BB2F   JP       V0, $B2F        ; Jump to V0 + B2F
$DEA    $6CDA   LD       VC, #DA         ; Load 218 into VC
$DEC    $8457   SUBN     V4, V5          ; V4 = V5 - V4, VF = !borrow
$DEE    $D985   DRW      V9, V8, #5      ; Draw 5-byte sprite at V9, V8
$DF0    $F097   UNKNOWN  F097            ; Unknown Fxxx instruction
$DF2    $FF50   UNKNOWN  FF50            ; Unknown Fxxx instruction
$DF4    $20D6   CALL     $0D6            ; Call subroutine at 0D6
$DF6    $5180   SE       V1, V8          ; Skip if V1 == V8
$DF8    $B1E5   JP       V0, $1E5        ; Jump to V0 + 1E5
$DFA    $566D   UNKNOWN  $566D           ; Unknown 5xxx instruction
$DFC    $4047   SNE      V0, #47         ; Skip if V0 != 71
$DFE    $0BFE   SYS      $BFE            ; System call to BFE
$E00    $E1B2   UNKNOWN  $E1B2           ; Unknown Exxx instruction
$E02    $65C5   LD       V5, #C5         ; Load 197 into V5
$E04    $290B   CALL     $90B            ; Call subroutine at 90B
$E06    $0EED   SYS      $EED            ; System call to EED
$E08    $3C53   SE       VC, #53         ; Skip if VC == 83
$E0A    $18B7   JP       $8B7            ; Jump to 8B7
$E0C    $9FFE   UNKNOWN  $9FFE           ; Unknown 9xxx instruction
$E0E    $240E   CALL     $40E            ; Call subroutine at 40E
$E10    $3648   SE       V6, #48         ; Skip if V6 == 72
$E12    $4DE8   SNE      VD, #E8         ; Skip if VD != 232
$E14    $62CB   LD       V2, #CB         ; Load 203 into V2
$E16    $DD67   DRW      VD, V6, #7      ; Draw 7-byte sprite at VD, V6
$E18    $4C7A   SNE      VC, #7A         ; Skip if VC != 122
$E1A    $2DC2   CALL     $DC2            ; Call subroutine at DC2
$E1C    $F4A5   UNKNOWN  F4A5            ; Unknown Fxxx instruction
$E1E    $8070   LD       V0, V7          ; V0 = V7
$E20    $0346   SYS      $346            ; System call to 346
$E22    $AB1F   LD       I, $B1F         ; Load B1F into I
$E24    $58E3   UNKNOWN  $58E3           ; Unknown 5xxx instruction
$E26    $F603   UNKNOWN  F603            ; Unknown Fxxx instruction
$E28    $7296   ADD      V2, #96         ; Add 150 to V2
$E2A    $9F3C   UNKNOWN  $9F3C           ; Unknown 9xxx instruction
$E2C    $DE5F   DRW      VE, V5, #F      ; Draw 15-byte sprite at VE, V5
$E2E    $D182   DRW      V1, V8, #2      ; Draw 2-byte sprite at V1, V8
$E30    $E07A   UNKNOWN  $E07A           ; Unknown Exxx instruction
$E32    $BAA2   JP       V0, $AA2        ; Jump to V0 + AA2
$E34    $AC33   LD       I, $C33         ; Load C33 into I
$E36    $8DF6   SHR      VD              ; VD >>= 1, VF = LSB
$E38    $E980   UNKNOWN  $E980           ; Unknown Exxx instruction
$E3A    $D075   DRW      V0, V7, #5      ; Draw 5-byte sprite at V0, V7
$E3C    $E471   UNKNOWN  $E471           ; Unknown Exxx instruction
$E3E    $0111   SYS      $111            ; System call to 111
$E40    $9B13   UNKNOWN  $9B13           ; Unknown 9xxx instruction
$E42    $DDFA   DRW      VD, VF, #A      ; Draw 10-byte sprite at VD, VF
$E44    $BF5D   JP       V0, $F5D        ; Jump to V0 + F5D
$E46    $5D71   UNKNOWN  $5D71           ; Unknown 5xxx instruction
$E48    $D28E   DRW      V2, V8, #E      ; Draw 14-byte sprite at V2, V8
$E4A    $DF22   DRW      VF, V2, #2      ; Draw 2-byte sprite at VF, V2
$E4C    $1B62   JP       $B62            ; Jump to B62
$E4E    $0F94   SYS      $F94            ; System call to F94
$E50    $C557   RND      V5, #57         ; V5 = random & 57
$E52    $2629   CALL     $629            ; Call subroutine at 629
$E54    $9C79   UNKNOWN  $9C79           ; Unknown 9xxx instruction
$E56    $CF16   RND      VF, #16         ; VF = random & 16
$E58    $8150   LD       V1, V5          ; V1 = V5
$E5A    $FEDA   UNKNOWN  FEDA            ; Unknown Fxxx instruction
$E5C    $6E2D   LD       VE, #2D         ; Load 45 into VE
$E5E    $E7AF   UNKNOWN  $E7AF           ; Unknown Exxx instruction
$E60    $D9CA   DRW      V9, VC, #A      ; Draw 10-byte sprite at V9, VC
$E62    $02AB   SYS      $2AB            ; System call to 2AB
$E64    $F5D0   UNKNOWN  F5D0            ; Unknown Fxxx instruction
$E66    $946E   UNKNOWN  $946E           ; Unknown 9xxx instruction
$E68    $4BBE   SNE      VB, #BE         ; Skip if VB != 190
$E6A    $4B0D   SNE      VB, #0D         ; Skip if VB != 13
$E6C    $2D50   CALL     $D50            ; Call subroutine at D50
$E6E    $49DF   SNE      V9, #DF         ; Skip if V9 != 223
$E70    $E11E   UNKNOWN  $E11E           ; Unknown Exxx instruction
$E72    $3DC5   SE       VD, #C5         ; Skip if VD == 197
$E74    $E65D   UNKNOWN  $E65D           ; Unknown Exxx instruction
$E76    $2C54   CALL     $C54            ; Call subroutine at C54
$E78    $EF16   UNKNOWN  $EF16           ; Unknown Exxx instruction
$E7A    $51EA   UNKNOWN  $51EA           ; Unknown 5xxx instruction
$E7C    $8F95   SUB      VF, V9          ; VF -= V9, VF = !borrow
$E7E    $29D5   CALL     $9D5            ; Call subroutine at 9D5
$E80    $6639   LD       V6, #39         ; Load 57 into V6
$E82    $8555   SUB      V5, V5          ; V5 -= V5, VF = !borrow
$E84    $1A97   JP       $A97            ; Jump to A97
$E86    $E000   UNKNOWN  $E000           ; Unknown Exxx instruction
$E88    $98BC   UNKNOWN  $98BC           ; Unknown 9xxx instruction
$E8A    $4A20   SNE      VA, #20         ; Skip if VA != 32
$E8C    $F830   UNKNOWN  F830            ; Unknown Fxxx instruction
$E8E    $DD05   DRW      VD, V0, #5      ; Draw 5-byte sprite at VD, V0
$E90    $173D   JP       $73D            ; Jump to 73D
$E92    $8FCA   UNKNOWN  8FCA            ; Unknown 8xxx instruction
$E94    $A1C8   LD       I, $1C8         ; Load 1C8 into I
$E96    $B8FF   JP       V0, $8FF        ; Jump to V0 + 8FF
$E98    $8355   SUB      V3, V5          ; V3 -= V5, VF = !borrow
$E9A    $0283   SYS      $283            ; System call to 283
$E9C    $ABEC   LD       I, $BEC         ; Load BEC into I
$E9E    $41DC   SNE      V1, #DC         ; Skip if V1 != 220
$EA0    $44E9   SNE      V4, #E9         ; Skip if V4 != 233
$EA2    $9A7B   UNKNOWN  $9A7B           ; Unknown 9xxx instruction
$EA4    $764E   ADD      V6, #4E         ; Add 78 to V6
$EA6    $6A94   LD       VA, #94         ; Load 148 into VA
$EA8    $4AB8   SNE      VA, #B8         ; Skip if VA != 184
$EAA    $6DB5   LD       VD, #B5         ; Load 181 into VD
$EAC    $B5C1   JP       V0, $5C1        ; Jump to V0 + 5C1
$EAE    $2E10   CALL     $E10            ; Call subroutine at E10
$EB0    $F1E8   UNKNOWN  F1E8            ; Unknown Fxxx instruction
$EB2    $A835   LD       I, $835         ; Load 835 into I
$EB4    $8184   ADD      V1, V8          ; V1 += V8, VF = carry
$EB6    $743E   ADD      V4, #3E         ; Add 62 to V4
$EB8    $C89C   RND      V8, #9C         ; V8 = random & 9C
$EBA    $E910   UNKNOWN  $E910           ; Unknown Exxx instruction
$EBC    $89AA   UNKNOWN  89AA            ; Unknown 8xxx instruction
$EBE    $1F74   JP       $F74            ; Jump to F74
$EC0    $E1B1   UNKNOWN  $E1B1           ; Unknown Exxx instruction
$EC2    $493E   SNE      V9, #3E         ; Skip if V9 != 62
$EC4    $9EF5   UNKNOWN  $9EF5           ; Unknown 9xxx instruction
$EC6    $D812   DRW      V8, V1, #2      ; Draw 2-byte sprite at V8, V1
$EC8    $D8AD   DRW      V8, VA, #D      ; Draw 13-byte sprite at V8, VA
$ECA    $464A   SNE      V6, #4A         ; Skip if V6 != 74
$ECC    $F944   UNKNOWN  F944            ; Unknown Fxxx instruction
$ECE    $7130   ADD      V1, #30         ; Add 48 to V1
$ED0    $6CBF   LD       VC, #BF         ; Load 191 into VC
$ED2    $850E   SHL      V5              ; V5 <<= 1, VF = MSB
$ED4    $F366   UNKNOWN  F366            ; Unknown Fxxx instruction
$ED6    $5F7D   UNKNOWN  $5F7D           ; Unknown 5xxx instruction
$ED8    $2ECE   CALL     $ECE            ; Call subroutine at ECE
$EDA    $0A7A   SYS      $A7A            ; System call to A7A
$EDC    $7172   ADD      V1, #72         ; Add 114 to V1
$EDE    $B9A5   JP       V0, $9A5        ; Jump to V0 + 9A5
$EE0    $9198   UNKNOWN  $9198           ; Unknown 9xxx instruction
$EE2    $64FB   LD       V4, #FB         ; Load 251 into V4
$EE4    $3F70   SE       VF, #70         ; Skip if VF == 112
$EE6    $3366   SE       V3, #66         ; Skip if V3 == 102
$EE8    $23F9   CALL     $3F9            ; Call subroutine at 3F9
$EEA    $87CC   UNKNOWN  87CC            ; Unknown 8xxx instruction
$EEC    $8047   SUBN     V0, V4          ; V0 = V4 - V0, VF = !borrow
$EEE    $070C   SYS      $70C            ; System call to 70C
$EF0    $7A02   ADD      VA, #02         ; Add 2 to VA
$EF2    $4ADE   SNE      VA, #DE         ; Skip if VA != 222
$EF4    $3C9B   SE       VC, #9B         ; Skip if VC == 155
$EF6    $F291   UNKNOWN  F291            ; Unknown Fxxx instruction
$EF8    $1DC2   JP       $DC2            ; Jump to DC2
$EFA    $F588   UNKNOWN  F588            ; Unknown Fxxx instruction
$EFC    $3624   SE       V6, #24         ; Skip if V6 == 36
$EFE    $2D13   CALL     $D13            ; Call subroutine at D13
$F00    $5E24   UNKNOWN  $5E24           ; Unknown 5xxx instruction
$F02    $23C5   CALL     $3C5            ; Call subroutine at 3C5
$F04    $6DA8   LD       VD, #A8         ; Load 168 into VD
$F06    $C3F6   RND      V3, #F6         ; V3 = random & F6
$F08    $55A1   UNKNOWN  $55A1           ; Unknown 5xxx instruction
$F0A    $EA2D   UNKNOWN  $EA2D           ; Unknown Exxx instruction
$F0C    $71A9   ADD      V1, #A9         ; Add 169 to V1
$F0E    $A11F   LD       I, $11F         ; Load 11F into I
$F10    $287B   CALL     $87B            ; Call subroutine at 87B
$F12    $6C68   LD       VC, #68         ; Load 104 into VC
$F14    $AC76   LD       I, $C76         ; Load C76 into I
$F16    $EED7   UNKNOWN  $EED7           ; Unknown Exxx instruction
$F18    $10AE   JP       $0AE            ; Jump to 0AE
$F1A    $4F0E   SNE      VF, #0E         ; Skip if VF != 14
$F1C    $099C   SYS      $99C            ; System call to 99C
$F1E    $33D6   SE       V3, #D6         ; Skip if V3 == 214
$F20    $B254   JP       V0, $254        ; Jump to V0 + 254
$F22    $ED04   UNKNOWN  $ED04           ; Unknown Exxx instruction
$F24    $5266   UNKNOWN  $5266           ; Unknown 5xxx instruction
$F26    $23C3   CALL     $3C3            ; Call subroutine at 3C3
$F28    $A81C   LD       I, $81C         ; Load 81C into I
$F2A    $3F13   SE       VF, #13         ; Skip if VF == 19
$F2C    $3B92   SE       VB, #92         ; Skip if VB == 146
$F2E    $B85E   JP       V0, $85E        ; Jump to V0 + 85E
$F30    $258E   CALL     $58E            ; Call subroutine at 58E
$F32    $9FF0   SNE      VF, VF          ; Skip if VF != VF
$F34    $61DE   LD       V1, #DE         ; Load 222 into V1
$F36    $24DB   CALL     $4DB            ; Call subroutine at 4DB
$F38    $CC60   RND      VC, #60         ; VC = random & 60
$F3A    $68AC   LD       V8, #AC         ; Load 172 into V8
$F3C    $883C   UNKNOWN  883C            ; Unknown 8xxx instruction
$F3E    $8C2C   UNKNOWN  8C2C            ; Unknown 8xxx instruction
$F40    $7E7F   ADD      VE, #7F         ; Add 127 to VE
$F42    $C9D1   RND      V9, #D1         ; V9 = random & D1
$F44    $A35B   LD       I, $35B         ; Load 35B into I
$F46    $B6B6   JP       V0, $6B6        ; Jump to V0 + 6B6
$F48    $0D91   SYS      $D91            ; System call to D91
$F4A    $A4B7   LD       I, $4B7         ; Load 4B7 into I
$F4C    $B254   JP       V0, $254        ; Jump to V0 + 254
$F4E    $A506   LD       I, $506         ; Load 506 into I
$F50    $3084   SE       V0, #84         ; Skip if V0 == 132
$F52    $159A   JP       $59A            ; Jump to 59A
$F54    $B740   JP       V0, $740        ; Jump to V0 + 740
$F56    $5D1A   UNKNOWN  $5D1A           ; Unknown 5xxx instruction
$F58    $30CC   SE       V0, #CC         ; Skip if V0 == 204
$F5A    $1431   JP       $431            ; Jump to 431
$F5C    $148D   JP       $48D            ; Jump to 48D
$F5E    $8FE5   SUB      VF, VE          ; VF -= VE, VF = !borrow
$F60    $7EDF   ADD      VE, #DF         ; Add 223 to VE
$F62    $BBB0   JP       V0, $BB0        ; Jump to V0 + BB0
$F64    $A0C1   LD       I, $0C1         ; Load 0C1 into I
$F66    $A4EB   LD       I, $4EB         ; Load 4EB into I
$F68    $24E7   CALL     $4E7            ; Call subroutine at 4E7
$F6A    $57A5   UNKNOWN  $57A5           ; Unknown 5xxx instruction
$F6C    $53B6   UNKNOWN  $53B6           ; Unknown 5xxx instruction
$F6E    $FDFF   UNKNOWN  FDFF            ; Unknown Fxxx instruction
$F70    $D365   DRW      V3, V6, #5      ; Draw 5-byte sprite at V3, V6
$F72    $ADC0   LD       I, $DC0         ; Load DC0 into I
$F74    $339A   SE       V3, #9A         ; Skip if V3 == 154
$F76    $C9E9   RND      V9, #E9         ; V9 = random & E9
$F78    $AE5F   LD       I, $E5F         ; Load E5F into I
$F7A    $A08C   LD       I, $08C         ; Load 08C into I
$F7C    $4F4E   SNE      VF, #4E         ; Skip if VF != 78
$F7E    $2FB1   CALL     $FB1            ; Call subroutine at FB1
$F80    $A588   LD       I, $588         ; Load 588 into I
$F82    $1101   JP       $101            ; Jump to 101
$F84    $0B6E   SYS      $B6E            ; System call to B6E
$F86    $672A   LD       V7, #2A         ; Load 42 into V7
$F88    $0E3A   SYS      $E3A            ; System call to E3A
$F8A    $E82A   UNKNOWN  $E82A           ; Unknown Exxx instruction
$F8C    $F594   UNKNOWN  F594            ; Unknown Fxxx instruction
$F8E    $6272   LD       V2, #72         ; Load 114 into V2
$F90    $5524   UNKNOWN  $5524           ; Unknown 5xxx instruction
$F92    $D294   DRW      V2, V9, #4      ; Draw 4-byte sprite at V2, V9
$F94    $021D   SYS      $21D            ; System call to 21D
$F96    $663D   LD       V6, #3D         ; Load 61 into V6
$F98    $8105   SUB      V1, V0          ; V1 -= V0, VF = !borrow
$F9A    $CE86   RND      VE, #86         ; VE = random & 86
$F9C    $B51E   JP       V0, $51E        ; Jump to V0 + 51E
$F9E    $02D8   SYS      $2D8            ; System call to 2D8
$FA0    $5375   UNKNOWN  $5375           ; Unknown 5xxx instruction
$FA2    $9F98   UNKNOWN  $9F98           ; Unknown 9xxx instruction
$FA4    $454D   SNE      V5, #4D         ; Skip if V5 != 77
$FA6    $33F6   SE       V3, #F6         ; Skip if V3 == 246
$FA8    $DB05   DRW      VB, V0, #5      ; Draw 5-byte sprite at VB, V0
$FAA    $0FEC   SYS      $FEC            ; System call to FEC
$FAC    $5663   UNKNOWN  $5663           ; Unknown 5xxx instruction
$FAE    $BD95   JP       V0, $D95        ; Jump to V0 + D95
$FB0    $F6DF   UNKNOWN  F6DF            ; Unknown Fxxx instruction
$FB2    $DFF7   DRW      VF, VF, #7      ; Draw 7-byte sprite at VF, VF
$FB4    $4726   SNE      V7, #26         ; Skip if V7 != 38
$FB6    $9C47   UNKNOWN  $9C47           ; Unknown 9xxx instruction
$FB8    $C32F   RND      V3, #2F         ; V3 = random & 2F
$FBA    $8646   SHR      V6              ; V6 >>= 1, VF = LSB
$FBC    $CE18   RND      VE, #18         ; VE = random & 18
$FBE    $3E28   SE       VE, #28         ; Skip if VE == 40
$FC0    $CE35   RND      VE, #35         ; VE = random & 35
$FC2    $0C39   SYS      $C39            ; System call to C39
$FC4    $48BC   SNE      V8, #BC         ; Skip if V8 != 188
$FC6    $92A0   SNE      V2, VA          ; Skip if V2 != VA
$FC8    $B585   JP       V0, $585        ; Jump to V0 + 585
$FCA    $158C   JP       $58C            ; Jump to 58C
$FCC    $7EEB   ADD      VE, #EB         ; Add 235 to VE
$FCE    $EABE   UNKNOWN  $EABE           ; Unknown Exxx instruction
$FD0    $04CD   SYS      $4CD            ; System call to 4CD
$FD2    $DCE4   DRW      VC, VE, #4      ; Draw 4-byte sprite at VC, VE
$FD4    $A58C   LD       I, $58C         ; Load 58C into I
$FD6    $2403   CALL     $403            ; Call subroutine at 403
$FD8    $B3C0   JP       V0, $3C0        ; Jump to V0 + 3C0
$FDA    $30E0   SE       V0, #E0         ; Skip if V0 == 224
$FDC    $07C2   SYS      $7C2            ; System call to 7C2
$FDE    $42E6   SNE      V2, #E6         ; Skip if V2 != 230
$FE0    $4EA6   SNE      VE, #A6         ; Skip if VE != 166
$FE2    $65BE   LD       V5, #BE         ; Load 190 into V5
$FE4    $5413   UNKNOWN  $5413           ; Unknown 5xxx instruction
$FE6    $4B28   SNE      VB, #28         ; Skip if VB != 40
$FE8    $EC7A   UNKNOWN  $EC7A           ; Unknown Exxx instruction
$FEA    $B83F   JP       V0, $83F        ; Jump to V0 + 83F
$FEC    $4710   SNE      V7, #10         ; Skip if V7 != 16
$FEE    $EA47   UNKNOWN  $EA47           ; Unknown Exxx instruction
$FF0    $CF38   RND      VF, #38         ; VF = random & 38
$FF2    $1E43   JP       $E43            ; Jump to E43
$FF4    $1C77   JP       $C77            ; Jump to C77
$FF6    $3112   SE       V1, #12         ; Skip if V1 == 18
$FF8    $94C0   SNE      V4, VC          ; Skip if V4 != VC
$FFA    $EB92   UNKNOWN  $EB92           ; Unknown Exxx instruction
$FFC    $8FC5   SUB      VF, VC          ; VF -= VC, VF = !borrow
$FFE    $403E   SNE      V0, #3E         ; Skip if V0 != 62

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 472 (26.3%)
  LD      : 229 (12.8%)
  JP      : 200 (11.2%)
  SNE     : 132 ( 7.4%)
  SYS     : 129 ( 7.2%)
  CALL    : 127 ( 7.1%)
  DRW     : 121 ( 6.8%)
  SE      : 116 ( 6.5%)
  ADD     : 110 ( 6.1%)
  RND     : 100 ( 5.6%)
  SUB     :  17 ( 0.9%)
  SHR     :   8 ( 0.4%)
  SUBN    :   7 ( 0.4%)
  SHL     :   7 ( 0.4%)
  AND     :   5 ( 0.3%)
  XOR     :   5 ( 0.3%)
  OR      :   4 ( 0.2%)
  SKP     :   3 ( 0.2%)

Memory Operations: 339 (18.9%)
Arithmetic Operations: 148 (8.3%)
