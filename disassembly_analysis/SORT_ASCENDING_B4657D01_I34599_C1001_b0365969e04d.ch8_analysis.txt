
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B4657D01_I34599_C1001_b0365969e04d.ch8
ROM Size: 3584 bytes
Instructions Found: 1791

DISCOVERY INFORMATION:
Batch: 4657
Instance: 34599
Direction: ascending
Final Array: [0, 0, 0, 10, 27, 77, 238, 242]
Operations: R:0 W:1 C:37 S:31

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 116
Sort Array References:
  $21E: LD I, $ECB ; Load ECB into I
  $294: LD I, $479 ; Load 479 into I
  $296: LD I, $240 ; Load 240 into I
  $2A0: LD I, $13D ; Load 13D into I
  $2A4: LD I, $FF7 ; Load FF7 into I
  $2EE: LD I, $30A ; Load 30A into I
  $318: LD I, $652 ; Load 652 into I
  $32C: LD I, $DD4 ; Load DD4 into I
  $35E: LD I, $913 ; Load 913 into I
  $36E: LD I, $5E6 ; Load 5E6 into I
  $390: LD I, $3EA ; Load 3EA into I
  $394: LD I, $082 ; Load 082 into I
  $39A: LD I, $87B ; Load 87B into I
  $3A0: LD I, $93E ; Load 93E into I
  $3DA: LD VD, [I] ; Load V0-VD from I
  $3E8: LD I, $C8B ; Load C8B into I
  $43A: LD I, $075 ; Load 075 into I
  $446: LD I, $EBE ; Load EBE into I
  $456: LD I, $D78 ; Load D78 into I
  $46C: LD I, $FD8 ; Load FD8 into I
  $47A: LD I, $81D ; Load 81D into I
  $47C: LD I, $67D ; Load 67D into I
  $480: LD I, $80E ; Load 80E into I
  $486: LD I, $D1A ; Load D1A into I
  $50A: LD I, $4D9 ; Load 4D9 into I
  $554: LD I, $108 ; Load 108 into I
  $568: LD I, $FF8 ; Load FF8 into I
  $56E: LD I, $437 ; Load 437 into I
  $5A2: LD I, $FB9 ; Load FB9 into I
  $5BA: LD I, $6ED ; Load 6ED into I
  $606: LD I, $6CB ; Load 6CB into I
  $618: LD I, $972 ; Load 972 into I
  $61E: LD I, $52B ; Load 52B into I
  $628: LD I, $E4C ; Load E4C into I
  $65C: LD I, $1BD ; Load 1BD into I
  $686: LD I, $FC1 ; Load FC1 into I
  $6B4: LD I, $FDB ; Load FDB into I
  $6C6: LD I, $4F4 ; Load 4F4 into I
  $6E6: LD I, $880 ; Load 880 into I
  $776: LD I, $B55 ; Load B55 into I
  $796: LD I, $1B5 ; Load 1B5 into I
  $79E: LD I, $DDB ; Load DDB into I
  $7A4: LD I, $7DF ; Load 7DF into I
  $7AA: LD I, $0A2 ; Load 0A2 into I
  $7E2: LD I, $BB5 ; Load BB5 into I
  $7E4: LD I, $C9A ; Load C9A into I
  $81A: LD I, $624 ; Load 624 into I
  $822: LD I, $0CA ; Load 0CA into I
  $828: LD I, $37D ; Load 37D into I
  $84E: LD I, $D01 ; Load D01 into I
  $856: LD I, $80B ; Load 80B into I
  $868: LD I, $C36 ; Load C36 into I
  $87C: LD I, $94B ; Load 94B into I
  $8A2: LD I, $CB2 ; Load CB2 into I
  $8D2: LD I, $33D ; Load 33D into I
  $8EC: LD I, $CE5 ; Load CE5 into I
  $910: LD I, $497 ; Load 497 into I
  $918: LD I, $8B5 ; Load 8B5 into I
  $91A: LD I, $DAB ; Load DAB into I
  $950: LD I, $A09 ; Load A09 into I
  $98C: LD I, $0E4 ; Load 0E4 into I
  $99E: LD I, $B2E ; Load B2E into I
  $9C2: LD I, $DFE ; Load DFE into I
  $9EA: LD I, $759 ; Load 759 into I
  $A30: LD I, $521 ; Load 521 into I
  $A44: LD I, $C6A ; Load C6A into I
  $A52: LD I, $5F4 ; Load 5F4 into I
  $A62: LD I, $916 ; Load 916 into I
  $A64: LD I, $301 ; Load 301 into I
  $A68: LD I, $F7C ; Load F7C into I
  $A72: LD I, $976 ; Load 976 into I
  $A8E: LD I, $A89 ; Load A89 into I
  $A98: LD I, $76C ; Load 76C into I
  $AB4: LD I, $A45 ; Load A45 into I
  $AE2: LD I, $DC9 ; Load DC9 into I
  $B00: LD I, $34E ; Load 34E into I
  $B46: LD I, $EA2 ; Load EA2 into I
  $B48: LD I, $BFF ; Load BFF into I
  $B56: LD I, $DE9 ; Load DE9 into I
  $B8A: LD I, $00A ; Load 00A into I
  $BC0: LD I, $2C6 ; Load 2C6 into I
  $BC4: LD I, $4D0 ; Load 4D0 into I
  $C02: LD I, $A9B ; Load A9B into I
  $C0E: LD I, $89F ; Load 89F into I
  $C14: LD I, $574 ; Load 574 into I
  $C6A: LD I, $807 ; Load 807 into I
  $CBA: LD I, $300 ; Load 300 into I
  $CEE: LD I, $C87 ; Load C87 into I
  $CF2: LD I, $DCF ; Load DCF into I
  $D48: LD I, $6FA ; Load 6FA into I
  $D52: LD I, $8D9 ; Load 8D9 into I
  $D54: LD I, $CD9 ; Load CD9 into I
  $D98: LD I, $7CE ; Load 7CE into I
  $DF4: LD I, $6C3 ; Load 6C3 into I
  $E08: LD I, $5BB ; Load 5BB into I
  $E0C: LD I, $38C ; Load 38C into I
  $E1A: LD I, $65D ; Load 65D into I
  $E20: LD I, $6EA ; Load 6EA into I
  $E48: LD I, $6D1 ; Load 6D1 into I
  $E4A: LD I, $946 ; Load 946 into I
  $E62: LD I, $AC0 ; Load AC0 into I
  $E70: LD I, $18E ; Load 18E into I
  $E80: LD I, $F9A ; Load F9A into I
  $E88: LD I, $5B6 ; Load 5B6 into I
  $EA6: LD I, $A9A ; Load A9A into I
  $EDC: LD I, $9DF ; Load 9DF into I
  $F28: LD I, $69F ; Load 69F into I
  $F44: LD I, $A7B ; Load A7B into I
  $F78: LD I, $8D2 ; Load 8D2 into I
  $F7A: LD I, $1D4 ; Load 1D4 into I
  $F9A: LD I, $A0F ; Load A0F into I
  $FAC: LD I, $D48 ; Load D48 into I
  $FB6: LD I, $75B ; Load 75B into I
  $FBE: LD I, $D14 ; Load D14 into I
  $FEC: LD I, $225 ; Load 225 into I
  $FF4: LD I, $2CB ; Load 2CB into I

CONTROL FLOW ANALYSIS:
Jumps: 251
Calls: 105
Branches: 245
Loops: 158
Loop Structures:
  $246 -> $01B (backward jump)
  $2DE -> $18D (backward jump)
  $35C -> $1DA (backward jump)
  $38C -> $031 (backward jump)
  $3A4 -> $1FD (backward jump)
  $3B8 -> $05B (backward jump)
  $3DC -> $119 (backward jump)
  $42A -> $2D8 (backward jump)
  $434 -> $1C2 (backward jump)
  $442 -> $16F (backward jump)
  $49E -> $300 (backward jump)
  $4BA -> $1FE (backward jump)
  $4F2 -> $25E (backward jump)
  $53A -> $2A2 (backward jump)
  $590 -> $04D (backward jump)
  $59C -> $19B (backward jump)
  $5AA -> $51F (backward jump)
  $5AC -> $47F (backward jump)
  $5DC -> $4B3 (backward jump)
  $604 -> $3EA (backward jump)
  $650 -> $47B (backward jump)
  $666 -> $0C0 (backward jump)
  $670 -> $4B1 (backward jump)
  $6A8 -> $24C (backward jump)
  $6B0 -> $541 (backward jump)
  $6DC -> $64D (backward jump)
  $714 -> $025 (backward jump)
  $74C -> $1BD (backward jump)
  $74E -> $326 (backward jump)
  $78C -> $761 (backward jump)
  $794 -> $118 (backward jump)
  $7A2 -> $404 (backward jump)
  $826 -> $1FA (backward jump)
  $82A -> $7C1 (backward jump)
  $83E -> $491 (backward jump)
  $846 -> $845 (backward jump)
  $85E -> $396 (backward jump)
  $866 -> $22F (backward jump)
  $880 -> $7BA (backward jump)
  $888 -> $6FD (backward jump)
  $890 -> $566 (backward jump)
  $896 -> $628 (backward jump)
  $8A4 -> $36C (backward jump)
  $8AA -> $653 (backward jump)
  $8CE -> $820 (backward jump)
  $8F2 -> $83B (backward jump)
  $924 -> $32A (backward jump)
  $928 -> $672 (backward jump)
  $92E -> $465 (backward jump)
  $940 -> $838 (backward jump)
  $946 -> $773 (backward jump)
  $986 -> $94E (backward jump)
  $9A0 -> $67B (backward jump)
  $9A2 -> $07E (backward jump)
  $9A6 -> $94D (backward jump)
  $9BA -> $03B (backward jump)
  $9CA -> $0ED (backward jump)
  $9CC -> $526 (backward jump)
  $9DE -> $408 (backward jump)
  $9EE -> $3D4 (backward jump)
  $9F4 -> $3E3 (backward jump)
  $A22 -> $74F (backward jump)
  $A38 -> $53C (backward jump)
  $A46 -> $38D (backward jump)
  $A7A -> $791 (backward jump)
  $A7E -> $4D8 (backward jump)
  $A88 -> $5C6 (backward jump)
  $A94 -> $764 (backward jump)
  $A9E -> $65F (backward jump)
  $AA8 -> $738 (backward jump)
  $AAA -> $50C (backward jump)
  $AC6 -> $961 (backward jump)
  $ACE -> $012 (backward jump)
  $AD6 -> $3E9 (backward jump)
  $AE6 -> $07A (backward jump)
  $AEA -> $928 (backward jump)
  $AEC -> $443 (backward jump)
  $B0C -> $275 (backward jump)
  $B18 -> $9E1 (backward jump)
  $B2E -> $7E8 (backward jump)
  $B3E -> $14A (backward jump)
  $B44 -> $13A (backward jump)
  $B60 -> $77A (backward jump)
  $B68 -> $916 (backward jump)
  $B74 -> $628 (backward jump)
  $B80 -> $290 (backward jump)
  $B9E -> $676 (backward jump)
  $BB6 -> $5E8 (backward jump)
  $BD6 -> $908 (backward jump)
  $BDE -> $34F (backward jump)
  $BEE -> $7E2 (backward jump)
  $C10 -> $7CA (backward jump)
  $C4C -> $BA8 (backward jump)
  $C50 -> $5A1 (backward jump)
  $C7C -> $195 (backward jump)
  $C7E -> $302 (backward jump)
  $CA2 -> $17D (backward jump)
  $CD2 -> $62B (backward jump)
  $CD4 -> $4A1 (backward jump)
  $D0E -> $B77 (backward jump)
  $D14 -> $A6C (backward jump)
  $D1E -> $37F (backward jump)
  $D24 -> $5A2 (backward jump)
  $D26 -> $646 (backward jump)
  $D28 -> $0C2 (backward jump)
  $D2A -> $252 (backward jump)
  $D42 -> $B13 (backward jump)
  $D44 -> $3C4 (backward jump)
  $D5A -> $A36 (backward jump)
  $D88 -> $709 (backward jump)
  $D94 -> $4CB (backward jump)
  $D9C -> $2E9 (backward jump)
  $DA4 -> $5E9 (backward jump)
  $DA8 -> $C0D (backward jump)
  $DAA -> $5D7 (backward jump)
  $DB0 -> $779 (backward jump)
  $DC8 -> $D98 (backward jump)
  $DD0 -> $9F9 (backward jump)
  $DD4 -> $053 (backward jump)
  $DE6 -> $BEE (backward jump)
  $E04 -> $9A9 (backward jump)
  $E14 -> $4E9 (backward jump)
  $E16 -> $461 (backward jump)
  $E18 -> $A64 (backward jump)
  $E30 -> $984 (backward jump)
  $E3A -> $196 (backward jump)
  $E42 -> $BB3 (backward jump)
  $E52 -> $458 (backward jump)
  $E68 -> $4CD (backward jump)
  $E6E -> $CEB (backward jump)
  $E74 -> $0C3 (backward jump)
  $E8A -> $254 (backward jump)
  $E94 -> $81F (backward jump)
  $EAE -> $486 (backward jump)
  $EC0 -> $0E9 (backward jump)
  $ECA -> $A54 (backward jump)
  $EEA -> $E62 (backward jump)
  $EF0 -> $820 (backward jump)
  $F1E -> $5F7 (backward jump)
  $F22 -> $750 (backward jump)
  $F2E -> $5A0 (backward jump)
  $F4A -> $9F2 (backward jump)
  $F5A -> $5D7 (backward jump)
  $F5E -> $403 (backward jump)
  $F66 -> $A74 (backward jump)
  $F6C -> $235 (backward jump)
  $F70 -> $0D1 (backward jump)
  $F74 -> $24E (backward jump)
  $F80 -> $72E (backward jump)
  $F86 -> $073 (backward jump)
  $F94 -> $315 (backward jump)
  $FA2 -> $DDC (backward jump)
  $FA8 -> $9B9 (backward jump)
  $FBC -> $1DD (backward jump)
  $FCA -> $4BB (backward jump)
  $FD0 -> $968 (backward jump)
  $FD4 -> $16D (backward jump)
  $FF2 -> $930 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $5FF9   UNKNOWN  $5FF9           ; Unknown 5xxx instruction
$202    $6625   LD       V6, #25         ; Load 37 into V6
$204    $2220   CALL     $220            ; Call subroutine at 220
$206    $EB61   UNKNOWN  $EB61           ; Unknown Exxx instruction
$208    $6120   LD       V1, #20         ; Load 32 into V1
$20A    $5540   SE       V5, V4          ; Skip if V5 == V4
$20C    $FF33   LD       B, VF           ; Store BCD of VF at I, I+1, I+2
$20E    $6707   LD       V7, #07         ; Load 7 into V7
$210    $F641   UNKNOWN  F641            ; Unknown Fxxx instruction
$212    $6AB8   LD       VA, #B8         ; Load 184 into VA
$214    $D8A6   DRW      V8, VA, #6      ; Draw 6-byte sprite at V8, VA
$216    $CAD0   RND      VA, #D0         ; VA = random & D0
$218    $CB18   RND      VB, #18         ; VB = random & 18
$21A    $8FCE   SHL      VF              ; VF <<= 1, VF = MSB
$21C    $CACB   RND      VA, #CB         ; VA = random & CB
$21E    $AECB   LD       I, $ECB         ; Load ECB into I
$220    $6F58   LD       VF, #58         ; Load 88 into VF
$222    $B88F   JP       V0, $88F        ; Jump to V0 + 88F
$224    $F0C8   UNKNOWN  F0C8            ; Unknown Fxxx instruction
$226    $F964   UNKNOWN  F964            ; Unknown Fxxx instruction
$228    $0F2E   SYS      $F2E            ; System call to F2E
$22A    $FBB5   UNKNOWN  FBB5            ; Unknown Fxxx instruction
$22C    $26AB   CALL     $6AB            ; Call subroutine at 6AB
$22E    $EAE7   UNKNOWN  $EAE7           ; Unknown Exxx instruction
$230    $F496   UNKNOWN  F496            ; Unknown Fxxx instruction
$232    $D3A5   DRW      V3, VA, #5      ; Draw 5-byte sprite at V3, VA
$234    $DBB9   DRW      VB, VB, #9      ; Draw 9-byte sprite at VB, VB
$236    $40BD   SNE      V0, #BD         ; Skip if V0 != 189
$238    $1A98   JP       $A98            ; Jump to A98
$23A    $4BE7   SNE      VB, #E7         ; Skip if VB != 231
$23C    $F698   UNKNOWN  F698            ; Unknown Fxxx instruction
$23E    $849A   UNKNOWN  849A            ; Unknown 8xxx instruction
$240    $7B82   ADD      VB, #82         ; Add 130 to VB
$242    $CDDD   RND      VD, #DD         ; VD = random & DD
$244    $73BA   ADD      V3, #BA         ; Add 186 to V3
$246    $101B   JP       $01B            ; Jump to 01B
$248    $6D4D   LD       VD, #4D         ; Load 77 into VD
$24A    $E5C8   UNKNOWN  $E5C8           ; Unknown Exxx instruction
$24C    $7BB4   ADD      VB, #B4         ; Add 180 to VB
$24E    $2EE5   CALL     $EE5            ; Call subroutine at EE5
$250    $72A7   ADD      V2, #A7         ; Add 167 to V2
$252    $93C7   UNKNOWN  $93C7           ; Unknown 9xxx instruction
$254    $6696   LD       V6, #96         ; Load 150 into V6
$256    $BCE3   JP       V0, $CE3        ; Jump to V0 + CE3
$258    $C400   RND      V4, #00         ; V4 = random & 00
$25A    $1B14   JP       $B14            ; Jump to B14
$25C    $9DBC   UNKNOWN  $9DBC           ; Unknown 9xxx instruction
$25E    $8BDF   UNKNOWN  8BDF            ; Unknown 8xxx instruction
$260    $50D0   SE       V0, VD          ; Skip if V0 == VD
$262    $9D9E   UNKNOWN  $9D9E           ; Unknown 9xxx instruction
$264    $6882   LD       V8, #82         ; Load 130 into V8
$266    $D5F7   DRW      V5, VF, #7      ; Draw 7-byte sprite at V5, VF
$268    $4FAD   SNE      VF, #AD         ; Skip if VF != 173
$26A    $C356   RND      V3, #56         ; V3 = random & 56
$26C    $4A23   SNE      VA, #23         ; Skip if VA != 35
$26E    $4706   SNE      V7, #06         ; Skip if V7 != 6
$270    $DA5A   DRW      VA, V5, #A      ; Draw 10-byte sprite at VA, V5
$272    $959E   UNKNOWN  $959E           ; Unknown 9xxx instruction
$274    $4C29   SNE      VC, #29         ; Skip if VC != 41
$276    $EAF9   UNKNOWN  $EAF9           ; Unknown Exxx instruction
$278    $1966   JP       $966            ; Jump to 966
$27A    $96C9   UNKNOWN  $96C9           ; Unknown 9xxx instruction
$27C    $0038   SYS      $038            ; System call to 038
$27E    $4E20   SNE      VE, #20         ; Skip if VE != 32
$280    $9906   UNKNOWN  $9906           ; Unknown 9xxx instruction
$282    $FE80   UNKNOWN  FE80            ; Unknown Fxxx instruction
$284    $5083   UNKNOWN  $5083           ; Unknown 5xxx instruction
$286    $2D6C   CALL     $D6C            ; Call subroutine at D6C
$288    $94F9   UNKNOWN  $94F9           ; Unknown 9xxx instruction
$28A    $6765   LD       V7, #65         ; Load 101 into V7
$28C    $6AD3   LD       VA, #D3         ; Load 211 into VA
$28E    $D42D   DRW      V4, V2, #D      ; Draw 13-byte sprite at V4, V2
$290    $BB85   JP       V0, $B85        ; Jump to V0 + B85
$292    $355A   SE       V5, #5A         ; Skip if V5 == 90
$294    $A479   LD       I, $479         ; Load 479 into I
$296    $A240   LD       I, $240         ; Load 240 into I
$298    $F648   UNKNOWN  F648            ; Unknown Fxxx instruction
$29A    $5924   UNKNOWN  $5924           ; Unknown 5xxx instruction
$29C    $69E0   LD       V9, #E0         ; Load 224 into V9
$29E    $3FDB   SE       VF, #DB         ; Skip if VF == 219
$2A0    $A13D   LD       I, $13D         ; Load 13D into I
$2A2    $1B76   JP       $B76            ; Jump to B76
$2A4    $AFF7   LD       I, $FF7         ; Load FF7 into I
$2A6    $8A93   XOR      VA, V9          ; VA ^= V9
$2A8    $5AB9   UNKNOWN  $5AB9           ; Unknown 5xxx instruction
$2AA    $4109   SNE      V1, #09         ; Skip if V1 != 9
$2AC    $7D13   ADD      VD, #13         ; Add 19 to VD
$2AE    $B9A8   JP       V0, $9A8        ; Jump to V0 + 9A8
$2B0    $5000   SE       V0, V0          ; Skip if V0 == V0
$2B2    $4C30   SNE      VC, #30         ; Skip if VC != 48
$2B4    $F378   UNKNOWN  F378            ; Unknown Fxxx instruction
$2B6    $9F57   UNKNOWN  $9F57           ; Unknown 9xxx instruction
$2B8    $68D0   LD       V8, #D0         ; Load 208 into V8
$2BA    $3F5C   SE       VF, #5C         ; Skip if VF == 92
$2BC    $F76B   UNKNOWN  F76B            ; Unknown Fxxx instruction
$2BE    $748F   ADD      V4, #8F         ; Add 143 to V4
$2C0    $4917   SNE      V9, #17         ; Skip if V9 != 23
$2C2    $CD92   RND      VD, #92         ; VD = random & 92
$2C4    $34E7   SE       V4, #E7         ; Skip if V4 == 231
$2C6    $1CFB   JP       $CFB            ; Jump to CFB
$2C8    $8A68   UNKNOWN  8A68            ; Unknown 8xxx instruction
$2CA    $E2FD   UNKNOWN  $E2FD           ; Unknown Exxx instruction
$2CC    $E194   UNKNOWN  $E194           ; Unknown Exxx instruction
$2CE    $5284   UNKNOWN  $5284           ; Unknown 5xxx instruction
$2D0    $8F48   UNKNOWN  8F48            ; Unknown 8xxx instruction
$2D2    $CF06   RND      VF, #06         ; VF = random & 06
$2D4    $C8EB   RND      V8, #EB         ; V8 = random & EB
$2D6    $4BDC   SNE      VB, #DC         ; Skip if VB != 220
$2D8    $20B0   CALL     $0B0            ; Call subroutine at 0B0
$2DA    $9C32   UNKNOWN  $9C32           ; Unknown 9xxx instruction
$2DC    $05D8   SYS      $5D8            ; System call to 5D8
$2DE    $B18D   JP       V0, $18D        ; Jump to V0 + 18D
$2E0    $2207   CALL     $207            ; Call subroutine at 207
$2E2    $5E11   UNKNOWN  $5E11           ; Unknown 5xxx instruction
$2E4    $EDB0   UNKNOWN  $EDB0           ; Unknown Exxx instruction
$2E6    $D82A   DRW      V8, V2, #A      ; Draw 10-byte sprite at V8, V2
$2E8    $1319   JP       $319            ; Jump to 319
$2EA    $E6E7   UNKNOWN  $E6E7           ; Unknown Exxx instruction
$2EC    $7612   ADD      V6, #12         ; Add 18 to V6
$2EE    $A30A   LD       I, $30A         ; Load 30A into I
$2F0    $064C   SYS      $64C            ; System call to 64C
$2F2    $0359   SYS      $359            ; System call to 359
$2F4    $E64A   UNKNOWN  $E64A           ; Unknown Exxx instruction
$2F6    $FAF3   UNKNOWN  FAF3            ; Unknown Fxxx instruction
$2F8    $F948   UNKNOWN  F948            ; Unknown Fxxx instruction
$2FA    $99ED   UNKNOWN  $99ED           ; Unknown 9xxx instruction
$2FC    $E6F3   UNKNOWN  $E6F3           ; Unknown Exxx instruction
$2FE    $6743   LD       V7, #43         ; Load 67 into V7
$302    $000A   SYS      $00A            ; System call to 00A
$304    $1B4D   JP       $B4D            ; Jump to B4D
$306    $EEF2   UNKNOWN  $EEF2           ; Unknown Exxx instruction
$308    $56E4   UNKNOWN  $56E4           ; Unknown 5xxx instruction
$30A    $0CDE   SYS      $CDE            ; System call to CDE
$30C    $82C9   UNKNOWN  82C9            ; Unknown 8xxx instruction
$30E    $4962   SNE      V9, #62         ; Skip if V9 != 98
$310    $E79D   UNKNOWN  $E79D           ; Unknown Exxx instruction
$312    $781D   ADD      V8, #1D         ; Add 29 to V8
$314    $C600   RND      V6, #00         ; V6 = random & 00
$316    $87E7   SUBN     V7, VE          ; V7 = VE - V7, VF = !borrow
$318    $A652   LD       I, $652         ; Load 652 into I
$31A    $2F18   CALL     $F18            ; Call subroutine at F18
$31C    $2683   CALL     $683            ; Call subroutine at 683
$31E    $5B09   UNKNOWN  $5B09           ; Unknown 5xxx instruction
$320    $F6AD   UNKNOWN  F6AD            ; Unknown Fxxx instruction
$322    $9E55   UNKNOWN  $9E55           ; Unknown 9xxx instruction
$324    $23A3   CALL     $3A3            ; Call subroutine at 3A3
$326    $5048   UNKNOWN  $5048           ; Unknown 5xxx instruction
$328    $1A8F   JP       $A8F            ; Jump to A8F
$32A    $8628   UNKNOWN  8628            ; Unknown 8xxx instruction
$32C    $ADD4   LD       I, $DD4         ; Load DD4 into I
$32E    $E4D6   UNKNOWN  $E4D6           ; Unknown Exxx instruction
$330    $8117   SUBN     V1, V1          ; V1 = V1 - V1, VF = !borrow
$332    $376F   SE       V7, #6F         ; Skip if V7 == 111
$334    $5038   UNKNOWN  $5038           ; Unknown 5xxx instruction
$336    $1558   JP       $558            ; Jump to 558
$338    $4288   SNE      V2, #88         ; Skip if V2 != 136
$33A    $5337   UNKNOWN  $5337           ; Unknown 5xxx instruction
$33C    $4A2D   SNE      VA, #2D         ; Skip if VA != 45
$33E    $0546   SYS      $546            ; System call to 546
$340    $D3E5   DRW      V3, VE, #5      ; Draw 5-byte sprite at V3, VE
$342    $D414   DRW      V4, V1, #4      ; Draw 4-byte sprite at V4, V1
$344    $63E9   LD       V3, #E9         ; Load 233 into V3
$346    $D88F   DRW      V8, V8, #F      ; Draw 15-byte sprite at V8, V8
$348    $6D35   LD       VD, #35         ; Load 53 into VD
$34A    $E1FB   UNKNOWN  $E1FB           ; Unknown Exxx instruction
$34C    $8983   XOR      V9, V8          ; V9 ^= V8
$34E    $9A10   SNE      VA, V1          ; Skip if VA != V1
$350    $232E   CALL     $32E            ; Call subroutine at 32E
$352    $8C79   UNKNOWN  8C79            ; Unknown 8xxx instruction
$354    $5B77   UNKNOWN  $5B77           ; Unknown 5xxx instruction
$356    $0405   SYS      $405            ; System call to 405
$358    $08AE   SYS      $8AE            ; System call to 8AE
$35A    $F0A3   UNKNOWN  F0A3            ; Unknown Fxxx instruction
$35C    $B1DA   JP       V0, $1DA        ; Jump to V0 + 1DA
$35E    $A913   LD       I, $913         ; Load 913 into I
$360    $4600   SNE      V6, #00         ; Skip if V6 != 0
$362    $0428   SYS      $428            ; System call to 428
$364    $62C7   LD       V2, #C7         ; Load 199 into V2
$366    $CF99   RND      VF, #99         ; VF = random & 99
$368    $149B   JP       $49B            ; Jump to 49B
$36A    $27A6   CALL     $7A6            ; Call subroutine at 7A6
$36C    $89BB   UNKNOWN  89BB            ; Unknown 8xxx instruction
$36E    $A5E6   LD       I, $5E6         ; Load 5E6 into I
$370    $9C31   UNKNOWN  $9C31           ; Unknown 9xxx instruction
$372    $D326   DRW      V3, V2, #6      ; Draw 6-byte sprite at V3, V2
$374    $4B18   SNE      VB, #18         ; Skip if VB != 24
$376    $8070   LD       V0, V7          ; V0 = V7
$378    $C83B   RND      V8, #3B         ; V8 = random & 3B
$37A    $DE7D   DRW      VE, V7, #D      ; Draw 13-byte sprite at VE, V7
$37C    $F624   UNKNOWN  F624            ; Unknown Fxxx instruction
$37E    $C266   RND      V2, #66         ; V2 = random & 66
$380    $E48B   UNKNOWN  $E48B           ; Unknown Exxx instruction
$382    $FC35   UNKNOWN  FC35            ; Unknown Fxxx instruction
$384    $2ADB   CALL     $ADB            ; Call subroutine at ADB
$386    $FA66   UNKNOWN  FA66            ; Unknown Fxxx instruction
$388    $69B9   LD       V9, #B9         ; Load 185 into V9
$38A    $EE23   UNKNOWN  $EE23           ; Unknown Exxx instruction
$38C    $B031   JP       V0, $031        ; Jump to V0 + 031
$38E    $C3A5   RND      V3, #A5         ; V3 = random & A5
$390    $A3EA   LD       I, $3EA         ; Load 3EA into I
$392    $F363   UNKNOWN  F363            ; Unknown Fxxx instruction
$394    $A082   LD       I, $082         ; Load 082 into I
$396    $DE8D   DRW      VE, V8, #D      ; Draw 13-byte sprite at VE, V8
$398    $5749   UNKNOWN  $5749           ; Unknown 5xxx instruction
$39A    $A87B   LD       I, $87B         ; Load 87B into I
$39C    $8F68   UNKNOWN  8F68            ; Unknown 8xxx instruction
$39E    $4799   SNE      V7, #99         ; Skip if V7 != 153
$3A0    $A93E   LD       I, $93E         ; Load 93E into I
$3A2    $56AD   UNKNOWN  $56AD           ; Unknown 5xxx instruction
$3A4    $B1FD   JP       V0, $1FD        ; Jump to V0 + 1FD
$3A6    $CA4B   RND      VA, #4B         ; VA = random & 4B
$3A8    $5A75   UNKNOWN  $5A75           ; Unknown 5xxx instruction
$3AA    $B776   JP       V0, $776        ; Jump to V0 + 776
$3AC    $E5C3   UNKNOWN  $E5C3           ; Unknown Exxx instruction
$3AE    $3E9C   SE       VE, #9C         ; Skip if VE == 156
$3B0    $78A8   ADD      V8, #A8         ; Add 168 to V8
$3B2    $5F9F   UNKNOWN  $5F9F           ; Unknown 5xxx instruction
$3B4    $5A97   UNKNOWN  $5A97           ; Unknown 5xxx instruction
$3B6    $3824   SE       V8, #24         ; Skip if V8 == 36
$3B8    $105B   JP       $05B            ; Jump to 05B
$3BA    $9EE7   UNKNOWN  $9EE7           ; Unknown 9xxx instruction
$3BC    $7F27   ADD      VF, #27         ; Add 39 to VF
$3BE    $DE80   DRW      VE, V8, #0      ; Draw 0-byte sprite at VE, V8
$3C0    $BBE1   JP       V0, $BE1        ; Jump to V0 + BE1
$3C2    $B85D   JP       V0, $85D        ; Jump to V0 + 85D
$3C4    $6C71   LD       VC, #71         ; Load 113 into VC
$3C6    $6D07   LD       VD, #07         ; Load 7 into VD
$3C8    $3584   SE       V5, #84         ; Skip if V5 == 132
$3CA    $EC47   UNKNOWN  $EC47           ; Unknown Exxx instruction
$3CC    $9DB6   UNKNOWN  $9DB6           ; Unknown 9xxx instruction
$3CE    $5C0B   UNKNOWN  $5C0B           ; Unknown 5xxx instruction
$3D0    $5337   UNKNOWN  $5337           ; Unknown 5xxx instruction
$3D2    $3BCE   SE       VB, #CE         ; Skip if VB == 206
$3D4    $E19E   SKP      V1              ; Skip if key V1 pressed
$3D6    $E8AC   UNKNOWN  $E8AC           ; Unknown Exxx instruction
$3D8    $46C9   SNE      V6, #C9         ; Skip if V6 != 201
$3DA    $FD65   LD       VD, [I]         ; Load V0-VD from I
$3DC    $B119   JP       V0, $119        ; Jump to V0 + 119
$3DE    $4FCC   SNE      VF, #CC         ; Skip if VF != 204
$3E0    $94A9   UNKNOWN  $94A9           ; Unknown 9xxx instruction
$3E2    $DEC6   DRW      VE, VC, #6      ; Draw 6-byte sprite at VE, VC
$3E4    $2570   CALL     $570            ; Call subroutine at 570
$3E6    $504B   UNKNOWN  $504B           ; Unknown 5xxx instruction
$3E8    $AC8B   LD       I, $C8B         ; Load C8B into I
$3EA    $9F24   UNKNOWN  $9F24           ; Unknown 9xxx instruction
$3EC    $43EC   SNE      V3, #EC         ; Skip if V3 != 236
$3EE    $28FD   CALL     $8FD            ; Call subroutine at 8FD
$3F0    $48BA   SNE      V8, #BA         ; Skip if V8 != 186
$3F2    $E55A   UNKNOWN  $E55A           ; Unknown Exxx instruction
$3F4    $51AB   UNKNOWN  $51AB           ; Unknown 5xxx instruction
$3F6    $5B75   UNKNOWN  $5B75           ; Unknown 5xxx instruction
$3F8    $192F   JP       $92F            ; Jump to 92F
$3FA    $E645   UNKNOWN  $E645           ; Unknown Exxx instruction
$3FC    $FEBD   UNKNOWN  FEBD            ; Unknown Fxxx instruction
$3FE    $FB3C   UNKNOWN  FB3C            ; Unknown Fxxx instruction
$400    $088B   SYS      $88B            ; System call to 88B
$402    $9451   UNKNOWN  $9451           ; Unknown 9xxx instruction
$404    $0893   SYS      $893            ; System call to 893
$406    $EB0F   UNKNOWN  $EB0F           ; Unknown Exxx instruction
$408    $B900   JP       V0, $900        ; Jump to V0 + 900
$40A    $1C10   JP       $C10            ; Jump to C10
$40C    $86CD   UNKNOWN  86CD            ; Unknown 8xxx instruction
$40E    $2D60   CALL     $D60            ; Call subroutine at D60
$410    $FFFC   UNKNOWN  FFFC            ; Unknown Fxxx instruction
$412    $6AD0   LD       VA, #D0         ; Load 208 into VA
$414    $6475   LD       V4, #75         ; Load 117 into V4
$416    $ECD2   UNKNOWN  $ECD2           ; Unknown Exxx instruction
$418    $ECDD   UNKNOWN  $ECDD           ; Unknown Exxx instruction
$41A    $E117   UNKNOWN  $E117           ; Unknown Exxx instruction
$41C    $F9FC   UNKNOWN  F9FC            ; Unknown Fxxx instruction
$41E    $53F9   UNKNOWN  $53F9           ; Unknown 5xxx instruction
$420    $490A   SNE      V9, #0A         ; Skip if V9 != 10
$422    $39B8   SE       V9, #B8         ; Skip if V9 == 184
$424    $EC54   UNKNOWN  $EC54           ; Unknown Exxx instruction
$426    $25F7   CALL     $5F7            ; Call subroutine at 5F7
$428    $FE08   UNKNOWN  FE08            ; Unknown Fxxx instruction
$42A    $B2D8   JP       V0, $2D8        ; Jump to V0 + 2D8
$42C    $3669   SE       V6, #69         ; Skip if V6 == 105
$42E    $167E   JP       $67E            ; Jump to 67E
$430    $27FB   CALL     $7FB            ; Call subroutine at 7FB
$432    $53B3   UNKNOWN  $53B3           ; Unknown 5xxx instruction
$434    $11C2   JP       $1C2            ; Jump to 1C2
$436    $04D6   SYS      $4D6            ; System call to 4D6
$438    $8DA2   AND      VD, VA          ; VD &= VA
$43A    $A075   LD       I, $075         ; Load 075 into I
$43C    $15BD   JP       $5BD            ; Jump to 5BD
$43E    $57D4   UNKNOWN  $57D4           ; Unknown 5xxx instruction
$440    $E95C   UNKNOWN  $E95C           ; Unknown Exxx instruction
$442    $B16F   JP       V0, $16F        ; Jump to V0 + 16F
$444    $03BD   SYS      $3BD            ; System call to 3BD
$446    $AEBE   LD       I, $EBE         ; Load EBE into I
$448    $5001   UNKNOWN  $5001           ; Unknown 5xxx instruction
$44A    $B4AE   JP       V0, $4AE        ; Jump to V0 + 4AE
$44C    $8A6C   UNKNOWN  8A6C            ; Unknown 8xxx instruction
$44E    $1BA0   JP       $BA0            ; Jump to BA0
$450    $BF74   JP       V0, $F74        ; Jump to V0 + F74
$452    $8F02   AND      VF, V0          ; VF &= V0
$454    $3AC5   SE       VA, #C5         ; Skip if VA == 197
$456    $AD78   LD       I, $D78         ; Load D78 into I
$458    $991B   UNKNOWN  $991B           ; Unknown 9xxx instruction
$45A    $DB4F   DRW      VB, V4, #F      ; Draw 15-byte sprite at VB, V4
$45C    $05AA   SYS      $5AA            ; System call to 5AA
$45E    $DB9E   DRW      VB, V9, #E      ; Draw 14-byte sprite at VB, V9
$460    $E391   UNKNOWN  $E391           ; Unknown Exxx instruction
$462    $44F8   SNE      V4, #F8         ; Skip if V4 != 248
$464    $86CD   UNKNOWN  86CD            ; Unknown 8xxx instruction
$466    $8CB6   SHR      VC              ; VC >>= 1, VF = LSB
$468    $C34D   RND      V3, #4D         ; V3 = random & 4D
$46A    $C6A5   RND      V6, #A5         ; V6 = random & A5
$46C    $AFD8   LD       I, $FD8         ; Load FD8 into I
$46E    $3D23   SE       VD, #23         ; Skip if VD == 35
$470    $9D7D   UNKNOWN  $9D7D           ; Unknown 9xxx instruction
$472    $5874   UNKNOWN  $5874           ; Unknown 5xxx instruction
$474    $550F   UNKNOWN  $550F           ; Unknown 5xxx instruction
$476    $C723   RND      V7, #23         ; V7 = random & 23
$478    $44E4   SNE      V4, #E4         ; Skip if V4 != 228
$47A    $A81D   LD       I, $81D         ; Load 81D into I
$47C    $A67D   LD       I, $67D         ; Load 67D into I
$47E    $E864   UNKNOWN  $E864           ; Unknown Exxx instruction
$480    $A80E   LD       I, $80E         ; Load 80E into I
$482    $473A   SNE      V7, #3A         ; Skip if V7 != 58
$484    $4FBB   SNE      VF, #BB         ; Skip if VF != 187
$486    $AD1A   LD       I, $D1A         ; Load D1A into I
$488    $EB2E   UNKNOWN  $EB2E           ; Unknown Exxx instruction
$48A    $CAA8   RND      VA, #A8         ; VA = random & A8
$48C    $271C   CALL     $71C            ; Call subroutine at 71C
$48E    $EBBF   UNKNOWN  $EBBF           ; Unknown Exxx instruction
$490    $166E   JP       $66E            ; Jump to 66E
$492    $027D   SYS      $27D            ; System call to 27D
$494    $1CB4   JP       $CB4            ; Jump to CB4
$496    $B687   JP       V0, $687        ; Jump to V0 + 687
$498    $EBAF   UNKNOWN  $EBAF           ; Unknown Exxx instruction
$49A    $C543   RND      V5, #43         ; V5 = random & 43
$49C    $3CD1   SE       VC, #D1         ; Skip if VC == 209
$49E    $B300   JP       V0, $300        ; Jump to V0 + 300
$4A0    $0001   SYS      $001            ; System call to 001
$4A2    $4409   SNE      V4, #09         ; Skip if V4 != 9
$4A4    $292A   CALL     $92A            ; Call subroutine at 92A
$4A6    $D0EC   DRW      V0, VE, #C      ; Draw 12-byte sprite at V0, VE
$4A8    $4B36   SNE      VB, #36         ; Skip if VB != 54
$4AA    $60D0   LD       V0, #D0         ; Load 208 into V0
$4AC    $7170   ADD      V1, #70         ; Add 112 to V1
$4AE    $6D6B   LD       VD, #6B         ; Load 107 into VD
$4B0    $5571   UNKNOWN  $5571           ; Unknown 5xxx instruction
$4B2    $FEAC   UNKNOWN  FEAC            ; Unknown Fxxx instruction
$4B4    $508C   UNKNOWN  $508C           ; Unknown 5xxx instruction
$4B6    $34F4   SE       V4, #F4         ; Skip if V4 == 244
$4B8    $1D9B   JP       $D9B            ; Jump to D9B
$4BA    $11FE   JP       $1FE            ; Jump to 1FE
$4BC    $BAA3   JP       V0, $AA3        ; Jump to V0 + AA3
$4BE    $0877   SYS      $877            ; System call to 877
$4C0    $05BE   SYS      $5BE            ; System call to 5BE
$4C2    $9A05   UNKNOWN  $9A05           ; Unknown 9xxx instruction
$4C4    $3882   SE       V8, #82         ; Skip if V8 == 130
$4C6    $5ABF   UNKNOWN  $5ABF           ; Unknown 5xxx instruction
$4C8    $DC84   DRW      VC, V8, #4      ; Draw 4-byte sprite at VC, V8
$4CA    $BC1F   JP       V0, $C1F        ; Jump to V0 + C1F
$4CC    $3F76   SE       VF, #76         ; Skip if VF == 118
$4CE    $C13E   RND      V1, #3E         ; V1 = random & 3E
$4D0    $F8C5   UNKNOWN  F8C5            ; Unknown Fxxx instruction
$4D2    $9728   UNKNOWN  $9728           ; Unknown 9xxx instruction
$4D4    $19F3   JP       $9F3            ; Jump to 9F3
$4D6    $9EB5   UNKNOWN  $9EB5           ; Unknown 9xxx instruction
$4D8    $7E71   ADD      VE, #71         ; Add 113 to VE
$4DA    $2990   CALL     $990            ; Call subroutine at 990
$4DC    $793B   ADD      V9, #3B         ; Add 59 to V9
$4DE    $62F8   LD       V2, #F8         ; Load 248 into V2
$4E0    $EF44   UNKNOWN  $EF44           ; Unknown Exxx instruction
$4E2    $81CA   UNKNOWN  81CA            ; Unknown 8xxx instruction
$4E4    $E476   UNKNOWN  $E476           ; Unknown Exxx instruction
$4E6    $FB16   UNKNOWN  FB16            ; Unknown Fxxx instruction
$4E8    $7BDD   ADD      VB, #DD         ; Add 221 to VB
$4EA    $D330   DRW      V3, V3, #0      ; Draw 0-byte sprite at V3, V3
$4EC    $DA8C   DRW      VA, V8, #C      ; Draw 12-byte sprite at VA, V8
$4EE    $5C40   SE       VC, V4          ; Skip if VC == V4
$4F0    $7547   ADD      V5, #47         ; Add 71 to V5
$4F2    $125E   JP       $25E            ; Jump to 25E
$4F4    $40F6   SNE      V0, #F6         ; Skip if V0 != 246
$4F6    $6023   LD       V0, #23         ; Load 35 into V0
$4F8    $7496   ADD      V4, #96         ; Add 150 to V4
$4FA    $934B   UNKNOWN  $934B           ; Unknown 9xxx instruction
$4FC    $D0EE   DRW      V0, VE, #E      ; Draw 14-byte sprite at V0, VE
$4FE    $18F3   JP       $8F3            ; Jump to 8F3
$500    $6F34   LD       VF, #34         ; Load 52 into VF
$502    $85E7   SUBN     V5, VE          ; V5 = VE - V5, VF = !borrow
$504    $F244   UNKNOWN  F244            ; Unknown Fxxx instruction
$506    $9D51   UNKNOWN  $9D51           ; Unknown 9xxx instruction
$508    $C6D9   RND      V6, #D9         ; V6 = random & D9
$50A    $A4D9   LD       I, $4D9         ; Load 4D9 into I
$50C    $37CE   SE       V7, #CE         ; Skip if V7 == 206
$50E    $998B   UNKNOWN  $998B           ; Unknown 9xxx instruction
$510    $48BE   SNE      V8, #BE         ; Skip if V8 != 190
$512    $E2F2   UNKNOWN  $E2F2           ; Unknown Exxx instruction
$514    $4177   SNE      V1, #77         ; Skip if V1 != 119
$516    $246D   CALL     $46D            ; Call subroutine at 46D
$518    $3EE9   SE       VE, #E9         ; Skip if VE == 233
$51A    $9E0A   UNKNOWN  $9E0A           ; Unknown 9xxx instruction
$51C    $17EA   JP       $7EA            ; Jump to 7EA
$51E    $3DB4   SE       VD, #B4         ; Skip if VD == 180
$520    $9DAA   UNKNOWN  $9DAA           ; Unknown 9xxx instruction
$522    $6C06   LD       VC, #06         ; Load 6 into VC
$524    $02DC   SYS      $2DC            ; System call to 2DC
$526    $496C   SNE      V9, #6C         ; Skip if V9 != 108
$528    $E33D   UNKNOWN  $E33D           ; Unknown Exxx instruction
$52A    $5392   UNKNOWN  $5392           ; Unknown 5xxx instruction
$52C    $CCB6   RND      VC, #B6         ; VC = random & B6
$52E    $91E1   UNKNOWN  $91E1           ; Unknown 9xxx instruction
$530    $9B5D   UNKNOWN  $9B5D           ; Unknown 9xxx instruction
$532    $B8EA   JP       V0, $8EA        ; Jump to V0 + 8EA
$534    $8C53   XOR      VC, V5          ; VC ^= V5
$536    $9EBF   UNKNOWN  $9EBF           ; Unknown 9xxx instruction
$538    $7C87   ADD      VC, #87         ; Add 135 to VC
$53A    $B2A2   JP       V0, $2A2        ; Jump to V0 + 2A2
$53C    $DCC8   DRW      VC, VC, #8      ; Draw 8-byte sprite at VC, VC
$53E    $5A62   UNKNOWN  $5A62           ; Unknown 5xxx instruction
$540    $15E9   JP       $5E9            ; Jump to 5E9
$542    $8423   XOR      V4, V2          ; V4 ^= V2
$544    $3154   SE       V1, #54         ; Skip if V1 == 84
$546    $7221   ADD      V2, #21         ; Add 33 to V2
$548    $F1CC   UNKNOWN  F1CC            ; Unknown Fxxx instruction
$54A    $C497   RND      V4, #97         ; V4 = random & 97
$54C    $8FCD   UNKNOWN  8FCD            ; Unknown 8xxx instruction
$54E    $7417   ADD      V4, #17         ; Add 23 to V4
$550    $38B2   SE       V8, #B2         ; Skip if V8 == 178
$552    $55F7   UNKNOWN  $55F7           ; Unknown 5xxx instruction
$554    $A108   LD       I, $108         ; Load 108 into I
$556    $9E25   UNKNOWN  $9E25           ; Unknown 9xxx instruction
$558    $CA25   RND      VA, #25         ; VA = random & 25
$55A    $4031   SNE      V0, #31         ; Skip if V0 != 49
$55C    $C314   RND      V3, #14         ; V3 = random & 14
$55E    $7FAD   ADD      VF, #AD         ; Add 173 to VF
$560    $D94C   DRW      V9, V4, #C      ; Draw 12-byte sprite at V9, V4
$562    $D943   DRW      V9, V4, #3      ; Draw 3-byte sprite at V9, V4
$564    $3B18   SE       VB, #18         ; Skip if VB == 24
$566    $CAB4   RND      VA, #B4         ; VA = random & B4
$568    $AFF8   LD       I, $FF8         ; Load FF8 into I
$56A    $429E   SNE      V2, #9E         ; Skip if V2 != 158
$56C    $DDA1   DRW      VD, VA, #1      ; Draw 1-byte sprite at VD, VA
$56E    $A437   LD       I, $437         ; Load 437 into I
$570    $BD23   JP       V0, $D23        ; Jump to V0 + D23
$572    $FFC8   UNKNOWN  FFC8            ; Unknown Fxxx instruction
$574    $C0BB   RND      V0, #BB         ; V0 = random & BB
$576    $1EBA   JP       $EBA            ; Jump to EBA
$578    $9422   UNKNOWN  $9422           ; Unknown 9xxx instruction
$57A    $DD1A   DRW      VD, V1, #A      ; Draw 10-byte sprite at VD, V1
$57C    $F151   UNKNOWN  F151            ; Unknown Fxxx instruction
$57E    $FB29   LD       F, VB           ; I = sprite address for digit VB
$580    $72E5   ADD      V2, #E5         ; Add 229 to V2
$582    $84CA   UNKNOWN  84CA            ; Unknown 8xxx instruction
$584    $B822   JP       V0, $822        ; Jump to V0 + 822
$586    $0CBA   SYS      $CBA            ; System call to CBA
$588    $C91E   RND      V9, #1E         ; V9 = random & 1E
$58A    $C245   RND      V2, #45         ; V2 = random & 45
$58C    $E3FD   UNKNOWN  $E3FD           ; Unknown Exxx instruction
$58E    $850E   SHL      V5              ; V5 <<= 1, VF = MSB
$590    $B04D   JP       V0, $04D        ; Jump to V0 + 04D
$592    $7A27   ADD      VA, #27         ; Add 39 to VA
$594    $0A70   SYS      $A70            ; System call to A70
$596    $D4BC   DRW      V4, VB, #C      ; Draw 12-byte sprite at V4, VB
$598    $95EA   UNKNOWN  $95EA           ; Unknown 9xxx instruction
$59A    $6528   LD       V5, #28         ; Load 40 into V5
$59C    $119B   JP       $19B            ; Jump to 19B
$59E    $C098   RND      V0, #98         ; V0 = random & 98
$5A0    $443A   SNE      V4, #3A         ; Skip if V4 != 58
$5A2    $AFB9   LD       I, $FB9         ; Load FB9 into I
$5A4    $CF03   RND      VF, #03         ; VF = random & 03
$5A6    $E367   UNKNOWN  $E367           ; Unknown Exxx instruction
$5A8    $5314   UNKNOWN  $5314           ; Unknown 5xxx instruction
$5AA    $B51F   JP       V0, $51F        ; Jump to V0 + 51F
$5AC    $147F   JP       $47F            ; Jump to 47F
$5AE    $B617   JP       V0, $617        ; Jump to V0 + 617
$5B0    $4B2B   SNE      VB, #2B         ; Skip if VB != 43
$5B2    $C55B   RND      V5, #5B         ; V5 = random & 5B
$5B4    $DC5C   DRW      VC, V5, #C      ; Draw 12-byte sprite at VC, V5
$5B6    $971D   UNKNOWN  $971D           ; Unknown 9xxx instruction
$5B8    $8BEF   UNKNOWN  8BEF            ; Unknown 8xxx instruction
$5BA    $A6ED   LD       I, $6ED         ; Load 6ED into I
$5BC    $C029   RND      V0, #29         ; V0 = random & 29
$5BE    $4A03   SNE      VA, #03         ; Skip if VA != 3
$5C0    $2336   CALL     $336            ; Call subroutine at 336
$5C2    $4E51   SNE      VE, #51         ; Skip if VE != 81
$5C4    $1AC0   JP       $AC0            ; Jump to AC0
$5C6    $9A33   UNKNOWN  $9A33           ; Unknown 9xxx instruction
$5C8    $E111   UNKNOWN  $E111           ; Unknown Exxx instruction
$5CA    $BB8C   JP       V0, $B8C        ; Jump to V0 + B8C
$5CC    $4BB6   SNE      VB, #B6         ; Skip if VB != 182
$5CE    $002C   SYS      $02C            ; System call to 02C
$5D0    $B757   JP       V0, $757        ; Jump to V0 + 757
$5D2    $83DD   UNKNOWN  83DD            ; Unknown 8xxx instruction
$5D4    $87B2   AND      V7, VB          ; V7 &= VB
$5D6    $BCB5   JP       V0, $CB5        ; Jump to V0 + CB5
$5D8    $49C3   SNE      V9, #C3         ; Skip if V9 != 195
$5DA    $2489   CALL     $489            ; Call subroutine at 489
$5DC    $14B3   JP       $4B3            ; Jump to 4B3
$5DE    $E037   UNKNOWN  $E037           ; Unknown Exxx instruction
$5E0    $EAC9   UNKNOWN  $EAC9           ; Unknown Exxx instruction
$5E2    $C436   RND      V4, #36         ; V4 = random & 36
$5E4    $D522   DRW      V5, V2, #2      ; Draw 2-byte sprite at V5, V2
$5E6    $1F7B   JP       $F7B            ; Jump to F7B
$5E8    $70A8   ADD      V0, #A8         ; Add 168 to V0
$5EA    $D77B   DRW      V7, V7, #B      ; Draw 11-byte sprite at V7, V7
$5EC    $4462   SNE      V4, #62         ; Skip if V4 != 98
$5EE    $EFFE   UNKNOWN  $EFFE           ; Unknown Exxx instruction
$5F0    $449E   SNE      V4, #9E         ; Skip if V4 != 158
$5F2    $D4F5   DRW      V4, VF, #5      ; Draw 5-byte sprite at V4, VF
$5F4    $2288   CALL     $288            ; Call subroutine at 288
$5F6    $39F3   SE       V9, #F3         ; Skip if V9 == 243
$5F8    $FBA6   UNKNOWN  FBA6            ; Unknown Fxxx instruction
$5FA    $C789   RND      V7, #89         ; V7 = random & 89
$5FC    $0A5E   SYS      $A5E            ; System call to A5E
$5FE    $9996   UNKNOWN  $9996           ; Unknown 9xxx instruction
$600    $D84A   DRW      V8, V4, #A      ; Draw 10-byte sprite at V8, V4
$602    $20E2   CALL     $0E2            ; Call subroutine at 0E2
$604    $13EA   JP       $3EA            ; Jump to 3EA
$606    $A6CB   LD       I, $6CB         ; Load 6CB into I
$608    $227B   CALL     $27B            ; Call subroutine at 27B
$60A    $3A94   SE       VA, #94         ; Skip if VA == 148
$60C    $8B15   SUB      VB, V1          ; VB -= V1, VF = !borrow
$60E    $DAD9   DRW      VA, VD, #9      ; Draw 9-byte sprite at VA, VD
$610    $2E14   CALL     $E14            ; Call subroutine at E14
$612    $FC3D   UNKNOWN  FC3D            ; Unknown Fxxx instruction
$614    $5615   UNKNOWN  $5615           ; Unknown 5xxx instruction
$616    $9E96   UNKNOWN  $9E96           ; Unknown 9xxx instruction
$618    $A972   LD       I, $972         ; Load 972 into I
$61A    $8EF7   SUBN     VE, VF          ; VE = VF - VE, VF = !borrow
$61C    $78B5   ADD      V8, #B5         ; Add 181 to V8
$61E    $A52B   LD       I, $52B         ; Load 52B into I
$620    $7041   ADD      V0, #41         ; Add 65 to V0
$622    $91F0   SNE      V1, VF          ; Skip if V1 != VF
$624    $CA7B   RND      VA, #7B         ; VA = random & 7B
$626    $9019   UNKNOWN  $9019           ; Unknown 9xxx instruction
$628    $AE4C   LD       I, $E4C         ; Load E4C into I
$62A    $D818   DRW      V8, V1, #8      ; Draw 8-byte sprite at V8, V1
$62C    $875C   UNKNOWN  875C            ; Unknown 8xxx instruction
$62E    $3ED7   SE       VE, #D7         ; Skip if VE == 215
$630    $19D9   JP       $9D9            ; Jump to 9D9
$632    $02D4   SYS      $2D4            ; System call to 2D4
$634    $95C2   UNKNOWN  $95C2           ; Unknown 9xxx instruction
$636    $DB5B   DRW      VB, V5, #B      ; Draw 11-byte sprite at VB, V5
$638    $C012   RND      V0, #12         ; V0 = random & 12
$63A    $337A   SE       V3, #7A         ; Skip if V3 == 122
$63C    $9891   UNKNOWN  $9891           ; Unknown 9xxx instruction
$63E    $826D   UNKNOWN  826D            ; Unknown 8xxx instruction
$640    $B9D1   JP       V0, $9D1        ; Jump to V0 + 9D1
$642    $7DF3   ADD      VD, #F3         ; Add 243 to VD
$644    $7BC6   ADD      VB, #C6         ; Add 198 to VB
$646    $D3E6   DRW      V3, VE, #6      ; Draw 6-byte sprite at V3, VE
$648    $0ED4   SYS      $ED4            ; System call to ED4
$64A    $8BE6   SHR      VB              ; VB >>= 1, VF = LSB
$64C    $B8C6   JP       V0, $8C6        ; Jump to V0 + 8C6
$64E    $B685   JP       V0, $685        ; Jump to V0 + 685
$650    $147B   JP       $47B            ; Jump to 47B
$652    $453B   SNE      V5, #3B         ; Skip if V5 != 59
$654    $C4D1   RND      V4, #D1         ; V4 = random & D1
$656    $4DD2   SNE      VD, #D2         ; Skip if VD != 210
$658    $B850   JP       V0, $850        ; Jump to V0 + 850
$65A    $C783   RND      V7, #83         ; V7 = random & 83
$65C    $A1BD   LD       I, $1BD         ; Load 1BD into I
$65E    $639C   LD       V3, #9C         ; Load 156 into V3
$660    $01D0   SYS      $1D0            ; System call to 1D0
$662    $43DA   SNE      V3, #DA         ; Skip if V3 != 218
$664    $75F2   ADD      V5, #F2         ; Add 242 to V5
$666    $B0C0   JP       V0, $0C0        ; Jump to V0 + 0C0
$668    $1F94   JP       $F94            ; Jump to F94
$66A    $689E   LD       V8, #9E         ; Load 158 into V8
$66C    $912F   UNKNOWN  $912F           ; Unknown 9xxx instruction
$66E    $9574   UNKNOWN  $9574           ; Unknown 9xxx instruction
$670    $B4B1   JP       V0, $4B1        ; Jump to V0 + 4B1
$672    $93B9   UNKNOWN  $93B9           ; Unknown 9xxx instruction
$674    $F393   UNKNOWN  F393            ; Unknown Fxxx instruction
$676    $B8C4   JP       V0, $8C4        ; Jump to V0 + 8C4
$678    $BF77   JP       V0, $F77        ; Jump to V0 + F77
$67A    $4F7E   SNE      VF, #7E         ; Skip if VF != 126
$67C    $8833   XOR      V8, V3          ; V8 ^= V3
$67E    $7FBC   ADD      VF, #BC         ; Add 188 to VF
$680    $D159   DRW      V1, V5, #9      ; Draw 9-byte sprite at V1, V5
$682    $98F9   UNKNOWN  $98F9           ; Unknown 9xxx instruction
$684    $5486   UNKNOWN  $5486           ; Unknown 5xxx instruction
$686    $AFC1   LD       I, $FC1         ; Load FC1 into I
$688    $8AF1   OR       VA, VF          ; VA |= VF
$68A    $F00D   UNKNOWN  F00D            ; Unknown Fxxx instruction
$68C    $5ADE   UNKNOWN  $5ADE           ; Unknown 5xxx instruction
$68E    $8425   SUB      V4, V2          ; V4 -= V2, VF = !borrow
$690    $C7D3   RND      V7, #D3         ; V7 = random & D3
$692    $08BD   SYS      $8BD            ; System call to 8BD
$694    $67CE   LD       V7, #CE         ; Load 206 into V7
$696    $DAA2   DRW      VA, VA, #2      ; Draw 2-byte sprite at VA, VA
$698    $FF98   UNKNOWN  FF98            ; Unknown Fxxx instruction
$69A    $29DD   CALL     $9DD            ; Call subroutine at 9DD
$69C    $88EF   UNKNOWN  88EF            ; Unknown 8xxx instruction
$69E    $4C82   SNE      VC, #82         ; Skip if VC != 130
$6A0    $2821   CALL     $821            ; Call subroutine at 821
$6A2    $785F   ADD      V8, #5F         ; Add 95 to V8
$6A4    $86BF   UNKNOWN  86BF            ; Unknown 8xxx instruction
$6A6    $7D46   ADD      VD, #46         ; Add 70 to VD
$6A8    $124C   JP       $24C            ; Jump to 24C
$6AA    $023B   SYS      $23B            ; System call to 23B
$6AC    $FA21   UNKNOWN  FA21            ; Unknown Fxxx instruction
$6AE    $345A   SE       V4, #5A         ; Skip if V4 == 90
$6B0    $1541   JP       $541            ; Jump to 541
$6B2    $52AF   UNKNOWN  $52AF           ; Unknown 5xxx instruction
$6B4    $AFDB   LD       I, $FDB         ; Load FDB into I
$6B6    $7B27   ADD      VB, #27         ; Add 39 to VB
$6B8    $D070   DRW      V0, V7, #0      ; Draw 0-byte sprite at V0, V7
$6BA    $C959   RND      V9, #59         ; V9 = random & 59
$6BC    $76F1   ADD      V6, #F1         ; Add 241 to V6
$6BE    $5EBD   UNKNOWN  $5EBD           ; Unknown 5xxx instruction
$6C0    $8383   XOR      V3, V8          ; V3 ^= V8
$6C2    $0C31   SYS      $C31            ; System call to C31
$6C4    $99C0   SNE      V9, VC          ; Skip if V9 != VC
$6C6    $A4F4   LD       I, $4F4         ; Load 4F4 into I
$6C8    $4FAC   SNE      VF, #AC         ; Skip if VF != 172
$6CA    $3B03   SE       VB, #03         ; Skip if VB == 3
$6CC    $EBDE   UNKNOWN  $EBDE           ; Unknown Exxx instruction
$6CE    $3624   SE       V6, #24         ; Skip if V6 == 36
$6D0    $1EA2   JP       $EA2            ; Jump to EA2
$6D2    $86A5   SUB      V6, VA          ; V6 -= VA, VF = !borrow
$6D4    $BAFB   JP       V0, $AFB        ; Jump to V0 + AFB
$6D6    $88E7   SUBN     V8, VE          ; V8 = VE - V8, VF = !borrow
$6D8    $8046   SHR      V0              ; V0 >>= 1, VF = LSB
$6DA    $478F   SNE      V7, #8F         ; Skip if V7 != 143
$6DC    $164D   JP       $64D            ; Jump to 64D
$6DE    $2EAC   CALL     $EAC            ; Call subroutine at EAC
$6E0    $EEB5   UNKNOWN  $EEB5           ; Unknown Exxx instruction
$6E2    $1A2B   JP       $A2B            ; Jump to A2B
$6E4    $C3D9   RND      V3, #D9         ; V3 = random & D9
$6E6    $A880   LD       I, $880         ; Load 880 into I
$6E8    $19CD   JP       $9CD            ; Jump to 9CD
$6EA    $46A9   SNE      V6, #A9         ; Skip if V6 != 169
$6EC    $4E00   SNE      VE, #00         ; Skip if VE != 0
$6EE    $5FBF   UNKNOWN  $5FBF           ; Unknown 5xxx instruction
$6F0    $BB28   JP       V0, $B28        ; Jump to V0 + B28
$6F2    $73BA   ADD      V3, #BA         ; Add 186 to V3
$6F4    $E5D9   UNKNOWN  $E5D9           ; Unknown Exxx instruction
$6F6    $ECB5   UNKNOWN  $ECB5           ; Unknown Exxx instruction
$6F8    $1972   JP       $972            ; Jump to 972
$6FA    $2F56   CALL     $F56            ; Call subroutine at F56
$6FC    $4952   SNE      V9, #52         ; Skip if V9 != 82
$6FE    $19B7   JP       $9B7            ; Jump to 9B7
$700    $27FF   CALL     $7FF            ; Call subroutine at 7FF
$702    $7964   ADD      V9, #64         ; Add 100 to V9
$704    $CB3B   RND      VB, #3B         ; VB = random & 3B
$706    $D359   DRW      V3, V5, #9      ; Draw 9-byte sprite at V3, V5
$708    $66C0   LD       V6, #C0         ; Load 192 into V6
$70A    $99DE   UNKNOWN  $99DE           ; Unknown 9xxx instruction
$70C    $685C   LD       V8, #5C         ; Load 92 into V8
$70E    $FA4C   UNKNOWN  FA4C            ; Unknown Fxxx instruction
$710    $FD60   UNKNOWN  FD60            ; Unknown Fxxx instruction
$712    $2C68   CALL     $C68            ; Call subroutine at C68
$714    $B025   JP       V0, $025        ; Jump to V0 + 025
$716    $8EC8   UNKNOWN  8EC8            ; Unknown 8xxx instruction
$718    $E770   UNKNOWN  $E770           ; Unknown Exxx instruction
$71A    $DE5B   DRW      VE, V5, #B      ; Draw 11-byte sprite at VE, V5
$71C    $4C97   SNE      VC, #97         ; Skip if VC != 151
$71E    $2430   CALL     $430            ; Call subroutine at 430
$720    $81C7   SUBN     V1, VC          ; V1 = VC - V1, VF = !borrow
$722    $F6D0   UNKNOWN  F6D0            ; Unknown Fxxx instruction
$724    $4375   SNE      V3, #75         ; Skip if V3 != 117
$726    $BB12   JP       V0, $B12        ; Jump to V0 + B12
$728    $9135   UNKNOWN  $9135           ; Unknown 9xxx instruction
$72A    $4AA5   SNE      VA, #A5         ; Skip if VA != 165
$72C    $EB26   UNKNOWN  $EB26           ; Unknown Exxx instruction
$72E    $F90A   LD       V9, K           ; Wait for key press, store in V9
$730    $0587   SYS      $587            ; System call to 587
$732    $41BC   SNE      V1, #BC         ; Skip if V1 != 188
$734    $4368   SNE      V3, #68         ; Skip if V3 != 104
$736    $02E7   SYS      $2E7            ; System call to 2E7
$738    $FDDA   UNKNOWN  FDDA            ; Unknown Fxxx instruction
$73A    $5E22   UNKNOWN  $5E22           ; Unknown 5xxx instruction
$73C    $61A3   LD       V1, #A3         ; Load 163 into V1
$73E    $2BFA   CALL     $BFA            ; Call subroutine at BFA
$740    $E8B2   UNKNOWN  $E8B2           ; Unknown Exxx instruction
$742    $832F   UNKNOWN  832F            ; Unknown 8xxx instruction
$744    $5F0E   UNKNOWN  $5F0E           ; Unknown 5xxx instruction
$746    $211C   CALL     $11C            ; Call subroutine at 11C
$748    $C205   RND      V2, #05         ; V2 = random & 05
$74A    $B7D7   JP       V0, $7D7        ; Jump to V0 + 7D7
$74C    $B1BD   JP       V0, $1BD        ; Jump to V0 + 1BD
$74E    $B326   JP       V0, $326        ; Jump to V0 + 326
$750    $764A   ADD      V6, #4A         ; Add 74 to V6
$752    $932D   UNKNOWN  $932D           ; Unknown 9xxx instruction
$754    $7537   ADD      V5, #37         ; Add 55 to V5
$756    $7899   ADD      V8, #99         ; Add 153 to V8
$758    $2B4D   CALL     $B4D            ; Call subroutine at B4D
$75A    $DFBB   DRW      VF, VB, #B      ; Draw 11-byte sprite at VF, VB
$75C    $E33E   UNKNOWN  $E33E           ; Unknown Exxx instruction
$75E    $7031   ADD      V0, #31         ; Add 49 to V0
$760    $E87D   UNKNOWN  $E87D           ; Unknown Exxx instruction
$762    $E71A   UNKNOWN  $E71A           ; Unknown Exxx instruction
$764    $34F0   SE       V4, #F0         ; Skip if V4 == 240
$766    $F5A6   UNKNOWN  F5A6            ; Unknown Fxxx instruction
$768    $295A   CALL     $95A            ; Call subroutine at 95A
$76A    $81B5   SUB      V1, VB          ; V1 -= VB, VF = !borrow
$76C    $F08D   UNKNOWN  F08D            ; Unknown Fxxx instruction
$76E    $5FB2   UNKNOWN  $5FB2           ; Unknown 5xxx instruction
$770    $348E   SE       V4, #8E         ; Skip if V4 == 142
$772    $DFD1   DRW      VF, VD, #1      ; Draw 1-byte sprite at VF, VD
$774    $260A   CALL     $60A            ; Call subroutine at 60A
$776    $AB55   LD       I, $B55         ; Load B55 into I
$778    $8FE3   XOR      VF, VE          ; VF ^= VE
$77A    $F9C4   UNKNOWN  F9C4            ; Unknown Fxxx instruction
$77C    $273C   CALL     $73C            ; Call subroutine at 73C
$77E    $4CB2   SNE      VC, #B2         ; Skip if VC != 178
$780    $0CB9   SYS      $CB9            ; System call to CB9
$782    $6669   LD       V6, #69         ; Load 105 into V6
$784    $EDC6   UNKNOWN  $EDC6           ; Unknown Exxx instruction
$786    $219E   CALL     $19E            ; Call subroutine at 19E
$788    $0A7E   SYS      $A7E            ; System call to A7E
$78A    $8EEE   SHL      VE              ; VE <<= 1, VF = MSB
$78C    $B761   JP       V0, $761        ; Jump to V0 + 761
$78E    $6D5D   LD       VD, #5D         ; Load 93 into VD
$790    $BAC5   JP       V0, $AC5        ; Jump to V0 + AC5
$792    $9399   UNKNOWN  $9399           ; Unknown 9xxx instruction
$794    $1118   JP       $118            ; Jump to 118
$796    $A1B5   LD       I, $1B5         ; Load 1B5 into I
$798    $51EB   UNKNOWN  $51EB           ; Unknown 5xxx instruction
$79A    $EBBD   UNKNOWN  $EBBD           ; Unknown Exxx instruction
$79C    $03D5   SYS      $3D5            ; System call to 3D5
$79E    $ADDB   LD       I, $DDB         ; Load DDB into I
$7A0    $40F1   SNE      V0, #F1         ; Skip if V0 != 241
$7A2    $1404   JP       $404            ; Jump to 404
$7A4    $A7DF   LD       I, $7DF         ; Load 7DF into I
$7A6    $9716   UNKNOWN  $9716           ; Unknown 9xxx instruction
$7A8    $4B78   SNE      VB, #78         ; Skip if VB != 120
$7AA    $A0A2   LD       I, $0A2         ; Load 0A2 into I
$7AC    $3C9D   SE       VC, #9D         ; Skip if VC == 157
$7AE    $FE9B   UNKNOWN  FE9B            ; Unknown Fxxx instruction
$7B0    $87BB   UNKNOWN  87BB            ; Unknown 8xxx instruction
$7B2    $FFA5   UNKNOWN  FFA5            ; Unknown Fxxx instruction
$7B4    $CB5C   RND      VB, #5C         ; VB = random & 5C
$7B6    $0A80   SYS      $A80            ; System call to A80
$7B8    $1D9E   JP       $D9E            ; Jump to D9E
$7BA    $3F6C   SE       VF, #6C         ; Skip if VF == 108
$7BC    $963C   UNKNOWN  $963C           ; Unknown 9xxx instruction
$7BE    $FB2F   UNKNOWN  FB2F            ; Unknown Fxxx instruction
$7C0    $754D   ADD      V5, #4D         ; Add 77 to V5
$7C2    $6AC0   LD       VA, #C0         ; Load 192 into VA
$7C4    $5F7C   UNKNOWN  $5F7C           ; Unknown 5xxx instruction
$7C6    $26BE   CALL     $6BE            ; Call subroutine at 6BE
$7C8    $3338   SE       V3, #38         ; Skip if V3 == 56
$7CA    $1D2D   JP       $D2D            ; Jump to D2D
$7CC    $5F21   UNKNOWN  $5F21           ; Unknown 5xxx instruction
$7CE    $9CF9   UNKNOWN  $9CF9           ; Unknown 9xxx instruction
$7D0    $86C7   SUBN     V6, VC          ; V6 = VC - V6, VF = !borrow
$7D2    $9553   UNKNOWN  $9553           ; Unknown 9xxx instruction
$7D4    $8D96   SHR      VD              ; VD >>= 1, VF = LSB
$7D6    $2BC0   CALL     $BC0            ; Call subroutine at BC0
$7D8    $C5CC   RND      V5, #CC         ; V5 = random & CC
$7DA    $1C3C   JP       $C3C            ; Jump to C3C
$7DC    $0D7E   SYS      $D7E            ; System call to D7E
$7DE    $FC11   UNKNOWN  FC11            ; Unknown Fxxx instruction
$7E0    $F4C9   UNKNOWN  F4C9            ; Unknown Fxxx instruction
$7E2    $ABB5   LD       I, $BB5         ; Load BB5 into I
$7E4    $AC9A   LD       I, $C9A         ; Load C9A into I
$7E6    $083F   SYS      $83F            ; System call to 83F
$7E8    $5EBF   UNKNOWN  $5EBF           ; Unknown 5xxx instruction
$7EA    $3286   SE       V2, #86         ; Skip if V2 == 134
$7EC    $9C12   UNKNOWN  $9C12           ; Unknown 9xxx instruction
$7EE    $3B6D   SE       VB, #6D         ; Skip if VB == 109
$7F0    $2117   CALL     $117            ; Call subroutine at 117
$7F2    $C703   RND      V7, #03         ; V7 = random & 03
$7F4    $BF05   JP       V0, $F05        ; Jump to V0 + F05
$7F6    $7775   ADD      V7, #75         ; Add 117 to V7
$7F8    $FBAE   UNKNOWN  FBAE            ; Unknown Fxxx instruction
$7FA    $4FBE   SNE      VF, #BE         ; Skip if VF != 190
$7FC    $3FD4   SE       VF, #D4         ; Skip if VF == 212
$7FE    $BE46   JP       V0, $E46        ; Jump to V0 + E46
$800    $3156   SE       V1, #56         ; Skip if V1 == 86
$802    $5F34   UNKNOWN  $5F34           ; Unknown 5xxx instruction
$804    $2404   CALL     $404            ; Call subroutine at 404
$806    $2AAA   CALL     $AAA            ; Call subroutine at AAA
$808    $BF7B   JP       V0, $F7B        ; Jump to V0 + F7B
$80A    $9EAB   UNKNOWN  $9EAB           ; Unknown 9xxx instruction
$80C    $07B9   SYS      $7B9            ; System call to 7B9
$80E    $CD99   RND      VD, #99         ; VD = random & 99
$810    $3D3E   SE       VD, #3E         ; Skip if VD == 62
$812    $CA29   RND      VA, #29         ; VA = random & 29
$814    $0CDB   SYS      $CDB            ; System call to CDB
$816    $7DEA   ADD      VD, #EA         ; Add 234 to VD
$818    $5A0B   UNKNOWN  $5A0B           ; Unknown 5xxx instruction
$81A    $A624   LD       I, $624         ; Load 624 into I
$81C    $F9B4   UNKNOWN  F9B4            ; Unknown Fxxx instruction
$81E    $3685   SE       V6, #85         ; Skip if V6 == 133
$820    $1BB1   JP       $BB1            ; Jump to BB1
$822    $A0CA   LD       I, $0CA         ; Load 0CA into I
$824    $FD29   LD       F, VD           ; I = sprite address for digit VD
$826    $11FA   JP       $1FA            ; Jump to 1FA
$828    $A37D   LD       I, $37D         ; Load 37D into I
$82A    $17C1   JP       $7C1            ; Jump to 7C1
$82C    $8E0A   UNKNOWN  8E0A            ; Unknown 8xxx instruction
$82E    $357E   SE       V5, #7E         ; Skip if V5 == 126
$830    $E9AF   UNKNOWN  $E9AF           ; Unknown Exxx instruction
$832    $7F97   ADD      VF, #97         ; Add 151 to VF
$834    $7558   ADD      V5, #58         ; Add 88 to V5
$836    $E0F9   UNKNOWN  $E0F9           ; Unknown Exxx instruction
$838    $092F   SYS      $92F            ; System call to 92F
$83A    $5DD4   UNKNOWN  $5DD4           ; Unknown 5xxx instruction
$83C    $6088   LD       V0, #88         ; Load 136 into V0
$83E    $B491   JP       V0, $491        ; Jump to V0 + 491
$840    $F2F6   UNKNOWN  F2F6            ; Unknown Fxxx instruction
$842    $71A5   ADD      V1, #A5         ; Add 165 to V1
$844    $C96D   RND      V9, #6D         ; V9 = random & 6D
$846    $B845   JP       V0, $845        ; Jump to V0 + 845
$848    $68E3   LD       V8, #E3         ; Load 227 into V8
$84A    $3FBE   SE       VF, #BE         ; Skip if VF == 190
$84C    $5298   UNKNOWN  $5298           ; Unknown 5xxx instruction
$84E    $AD01   LD       I, $D01         ; Load D01 into I
$850    $9D1F   UNKNOWN  $9D1F           ; Unknown 9xxx instruction
$852    $25C7   CALL     $5C7            ; Call subroutine at 5C7
$854    $96C8   UNKNOWN  $96C8           ; Unknown 9xxx instruction
$856    $A80B   LD       I, $80B         ; Load 80B into I
$858    $29D4   CALL     $9D4            ; Call subroutine at 9D4
$85A    $8B01   OR       VB, V0          ; VB |= V0
$85C    $2719   CALL     $719            ; Call subroutine at 719
$85E    $B396   JP       V0, $396        ; Jump to V0 + 396
$860    $34D2   SE       V4, #D2         ; Skip if V4 == 210
$862    $6A75   LD       VA, #75         ; Load 117 into VA
$864    $57B3   UNKNOWN  $57B3           ; Unknown 5xxx instruction
$866    $122F   JP       $22F            ; Jump to 22F
$868    $AC36   LD       I, $C36         ; Load C36 into I
$86A    $B967   JP       V0, $967        ; Jump to V0 + 967
$86C    $7520   ADD      V5, #20         ; Add 32 to V5
$86E    $F67D   UNKNOWN  F67D            ; Unknown Fxxx instruction
$870    $4A58   SNE      VA, #58         ; Skip if VA != 88
$872    $8798   UNKNOWN  8798            ; Unknown 8xxx instruction
$874    $54F5   UNKNOWN  $54F5           ; Unknown 5xxx instruction
$876    $4CE9   SNE      VC, #E9         ; Skip if VC != 233
$878    $8DFA   UNKNOWN  8DFA            ; Unknown 8xxx instruction
$87A    $4539   SNE      V5, #39         ; Skip if V5 != 57
$87C    $A94B   LD       I, $94B         ; Load 94B into I
$87E    $7272   ADD      V2, #72         ; Add 114 to V2
$880    $17BA   JP       $7BA            ; Jump to 7BA
$882    $7473   ADD      V4, #73         ; Add 115 to V4
$884    $8AF6   SHR      VA              ; VA >>= 1, VF = LSB
$886    $8398   UNKNOWN  8398            ; Unknown 8xxx instruction
$888    $B6FD   JP       V0, $6FD        ; Jump to V0 + 6FD
$88A    $5A2D   UNKNOWN  $5A2D           ; Unknown 5xxx instruction
$88C    $928B   UNKNOWN  $928B           ; Unknown 9xxx instruction
$88E    $2DBA   CALL     $DBA            ; Call subroutine at DBA
$890    $B566   JP       V0, $566        ; Jump to V0 + 566
$892    $0A93   SYS      $A93            ; System call to A93
$894    $7A50   ADD      VA, #50         ; Add 80 to VA
$896    $1628   JP       $628            ; Jump to 628
$898    $96AE   UNKNOWN  $96AE           ; Unknown 9xxx instruction
$89A    $6FB0   LD       VF, #B0         ; Load 176 into VF
$89C    $2EF9   CALL     $EF9            ; Call subroutine at EF9
$89E    $493D   SNE      V9, #3D         ; Skip if V9 != 61
$8A0    $4D6A   SNE      VD, #6A         ; Skip if VD != 106
$8A2    $ACB2   LD       I, $CB2         ; Load CB2 into I
$8A4    $136C   JP       $36C            ; Jump to 36C
$8A6    $0B36   SYS      $B36            ; System call to B36
$8A8    $7ABD   ADD      VA, #BD         ; Add 189 to VA
$8AA    $1653   JP       $653            ; Jump to 653
$8AC    $EDEF   UNKNOWN  $EDEF           ; Unknown Exxx instruction
$8AE    $CD05   RND      VD, #05         ; VD = random & 05
$8B0    $6C39   LD       VC, #39         ; Load 57 into VC
$8B2    $3512   SE       V5, #12         ; Skip if V5 == 18
$8B4    $368F   SE       V6, #8F         ; Skip if V6 == 143
$8B6    $D6B6   DRW      V6, VB, #6      ; Draw 6-byte sprite at V6, VB
$8B8    $5ECB   UNKNOWN  $5ECB           ; Unknown 5xxx instruction
$8BA    $48AD   SNE      V8, #AD         ; Skip if V8 != 173
$8BC    $D00D   DRW      V0, V0, #D      ; Draw 13-byte sprite at V0, V0
$8BE    $05EF   SYS      $5EF            ; System call to 5EF
$8C0    $5886   UNKNOWN  $5886           ; Unknown 5xxx instruction
$8C2    $2DE9   CALL     $DE9            ; Call subroutine at DE9
$8C4    $CA32   RND      VA, #32         ; VA = random & 32
$8C6    $23FE   CALL     $3FE            ; Call subroutine at 3FE
$8C8    $4DE2   SNE      VD, #E2         ; Skip if VD != 226
$8CA    $9705   UNKNOWN  $9705           ; Unknown 9xxx instruction
$8CC    $7B1F   ADD      VB, #1F         ; Add 31 to VB
$8CE    $1820   JP       $820            ; Jump to 820
$8D0    $6727   LD       V7, #27         ; Load 39 into V7
$8D2    $A33D   LD       I, $33D         ; Load 33D into I
$8D4    $5E8F   UNKNOWN  $5E8F           ; Unknown 5xxx instruction
$8D6    $08A9   SYS      $8A9            ; System call to 8A9
$8D8    $F4A6   UNKNOWN  F4A6            ; Unknown Fxxx instruction
$8DA    $D418   DRW      V4, V1, #8      ; Draw 8-byte sprite at V4, V1
$8DC    $662E   LD       V6, #2E         ; Load 46 into V6
$8DE    $BBDB   JP       V0, $BDB        ; Jump to V0 + BDB
$8E0    $9BB2   UNKNOWN  $9BB2           ; Unknown 9xxx instruction
$8E2    $FE44   UNKNOWN  FE44            ; Unknown Fxxx instruction
$8E4    $73E3   ADD      V3, #E3         ; Add 227 to V3
$8E6    $6F09   LD       VF, #09         ; Load 9 into VF
$8E8    $2C2D   CALL     $C2D            ; Call subroutine at C2D
$8EA    $5CB0   SE       VC, VB          ; Skip if VC == VB
$8EC    $ACE5   LD       I, $CE5         ; Load CE5 into I
$8EE    $B9DE   JP       V0, $9DE        ; Jump to V0 + 9DE
$8F0    $5B06   UNKNOWN  $5B06           ; Unknown 5xxx instruction
$8F2    $183B   JP       $83B            ; Jump to 83B
$8F4    $273F   CALL     $73F            ; Call subroutine at 73F
$8F6    $4C6D   SNE      VC, #6D         ; Skip if VC != 109
$8F8    $6A6B   LD       VA, #6B         ; Load 107 into VA
$8FA    $8BD7   SUBN     VB, VD          ; VB = VD - VB, VF = !borrow
$8FC    $6BA7   LD       VB, #A7         ; Load 167 into VB
$8FE    $50C1   UNKNOWN  $50C1           ; Unknown 5xxx instruction
$900    $0718   SYS      $718            ; System call to 718
$902    $602A   LD       V0, #2A         ; Load 42 into V0
$904    $3411   SE       V4, #11         ; Skip if V4 == 17
$906    $07C7   SYS      $7C7            ; System call to 7C7
$908    $2777   CALL     $777            ; Call subroutine at 777
$90A    $0EA6   SYS      $EA6            ; System call to EA6
$90C    $6DBA   LD       VD, #BA         ; Load 186 into VD
$90E    $58CD   UNKNOWN  $58CD           ; Unknown 5xxx instruction
$910    $A497   LD       I, $497         ; Load 497 into I
$912    $E678   UNKNOWN  $E678           ; Unknown Exxx instruction
$914    $2A99   CALL     $A99            ; Call subroutine at A99
$916    $F2C0   UNKNOWN  F2C0            ; Unknown Fxxx instruction
$918    $A8B5   LD       I, $8B5         ; Load 8B5 into I
$91A    $ADAB   LD       I, $DAB         ; Load DAB into I
$91C    $504D   UNKNOWN  $504D           ; Unknown 5xxx instruction
$91E    $E4F3   UNKNOWN  $E4F3           ; Unknown Exxx instruction
$920    $4323   SNE      V3, #23         ; Skip if V3 != 35
$922    $274C   CALL     $74C            ; Call subroutine at 74C
$924    $B32A   JP       V0, $32A        ; Jump to V0 + 32A
$926    $6437   LD       V4, #37         ; Load 55 into V4
$928    $1672   JP       $672            ; Jump to 672
$92A    $417D   SNE      V1, #7D         ; Skip if V1 != 125
$92C    $F4E5   UNKNOWN  F4E5            ; Unknown Fxxx instruction
$92E    $B465   JP       V0, $465        ; Jump to V0 + 465
$930    $EC88   UNKNOWN  $EC88           ; Unknown Exxx instruction
$932    $06ED   SYS      $6ED            ; System call to 6ED
$934    $7C6D   ADD      VC, #6D         ; Add 109 to VC
$936    $D323   DRW      V3, V2, #3      ; Draw 3-byte sprite at V3, V2
$938    $F905   UNKNOWN  F905            ; Unknown Fxxx instruction
$93A    $90D4   UNKNOWN  $90D4           ; Unknown 9xxx instruction
$93C    $0BC3   SYS      $BC3            ; System call to BC3
$93E    $2555   CALL     $555            ; Call subroutine at 555
$940    $B838   JP       V0, $838        ; Jump to V0 + 838
$942    $E032   UNKNOWN  $E032           ; Unknown Exxx instruction
$944    $30DB   SE       V0, #DB         ; Skip if V0 == 219
$946    $1773   JP       $773            ; Jump to 773
$948    $78E7   ADD      V8, #E7         ; Add 231 to V8
$94A    $8DEC   UNKNOWN  8DEC            ; Unknown 8xxx instruction
$94C    $CBEF   RND      VB, #EF         ; VB = random & EF
$94E    $FB89   UNKNOWN  FB89            ; Unknown Fxxx instruction
$950    $AA09   LD       I, $A09         ; Load A09 into I
$952    $0330   SYS      $330            ; System call to 330
$954    $25AC   CALL     $5AC            ; Call subroutine at 5AC
$956    $3934   SE       V9, #34         ; Skip if V9 == 52
$958    $E1E2   UNKNOWN  $E1E2           ; Unknown Exxx instruction
$95A    $618A   LD       V1, #8A         ; Load 138 into V1
$95C    $55D4   UNKNOWN  $55D4           ; Unknown 5xxx instruction
$95E    $8F7D   UNKNOWN  8F7D            ; Unknown 8xxx instruction
$960    $D8A7   DRW      V8, VA, #7      ; Draw 7-byte sprite at V8, VA
$962    $EA34   UNKNOWN  $EA34           ; Unknown Exxx instruction
$964    $447C   SNE      V4, #7C         ; Skip if V4 != 124
$966    $2A83   CALL     $A83            ; Call subroutine at A83
$968    $E562   UNKNOWN  $E562           ; Unknown Exxx instruction
$96A    $F901   UNKNOWN  F901            ; Unknown Fxxx instruction
$96C    $6342   LD       V3, #42         ; Load 66 into V3
$96E    $274B   CALL     $74B            ; Call subroutine at 74B
$970    $FC84   UNKNOWN  FC84            ; Unknown Fxxx instruction
$972    $91E1   UNKNOWN  $91E1           ; Unknown 9xxx instruction
$974    $6FF4   LD       VF, #F4         ; Load 244 into VF
$976    $63EB   LD       V3, #EB         ; Load 235 into V3
$978    $5D55   UNKNOWN  $5D55           ; Unknown 5xxx instruction
$97A    $C03C   RND      V0, #3C         ; V0 = random & 3C
$97C    $54F2   UNKNOWN  $54F2           ; Unknown 5xxx instruction
$97E    $8490   LD       V4, V9          ; V4 = V9
$980    $0D0B   SYS      $D0B            ; System call to D0B
$982    $313E   SE       V1, #3E         ; Skip if V1 == 62
$984    $8DA1   OR       VD, VA          ; VD |= VA
$986    $194E   JP       $94E            ; Jump to 94E
$988    $4BFF   SNE      VB, #FF         ; Skip if VB != 255
$98A    $3C52   SE       VC, #52         ; Skip if VC == 82
$98C    $A0E4   LD       I, $0E4         ; Load 0E4 into I
$98E    $2FB4   CALL     $FB4            ; Call subroutine at FB4
$990    $60E9   LD       V0, #E9         ; Load 233 into V0
$992    $D4C3   DRW      V4, VC, #3      ; Draw 3-byte sprite at V4, VC
$994    $7F57   ADD      VF, #57         ; Add 87 to VF
$996    $379B   SE       V7, #9B         ; Skip if V7 == 155
$998    $450F   SNE      V5, #0F         ; Skip if V5 != 15
$99A    $D863   DRW      V8, V6, #3      ; Draw 3-byte sprite at V8, V6
$99C    $25CF   CALL     $5CF            ; Call subroutine at 5CF
$99E    $AB2E   LD       I, $B2E         ; Load B2E into I
$9A0    $167B   JP       $67B            ; Jump to 67B
$9A2    $107E   JP       $07E            ; Jump to 07E
$9A4    $870B   UNKNOWN  870B            ; Unknown 8xxx instruction
$9A6    $B94D   JP       V0, $94D        ; Jump to V0 + 94D
$9A8    $FAE6   UNKNOWN  FAE6            ; Unknown Fxxx instruction
$9AA    $227E   CALL     $27E            ; Call subroutine at 27E
$9AC    $E248   UNKNOWN  $E248           ; Unknown Exxx instruction
$9AE    $664D   LD       V6, #4D         ; Load 77 into V6
$9B0    $75BD   ADD      V5, #BD         ; Add 189 to V5
$9B2    $F936   UNKNOWN  F936            ; Unknown Fxxx instruction
$9B4    $26D9   CALL     $6D9            ; Call subroutine at 6D9
$9B6    $5135   UNKNOWN  $5135           ; Unknown 5xxx instruction
$9B8    $0F46   SYS      $F46            ; System call to F46
$9BA    $B03B   JP       V0, $03B        ; Jump to V0 + 03B
$9BC    $959D   UNKNOWN  $959D           ; Unknown 9xxx instruction
$9BE    $73B9   ADD      V3, #B9         ; Add 185 to V3
$9C0    $7C16   ADD      VC, #16         ; Add 22 to VC
$9C2    $ADFE   LD       I, $DFE         ; Load DFE into I
$9C4    $7A4A   ADD      VA, #4A         ; Add 74 to VA
$9C6    $809E   SHL      V0              ; V0 <<= 1, VF = MSB
$9C8    $1D2E   JP       $D2E            ; Jump to D2E
$9CA    $10ED   JP       $0ED            ; Jump to 0ED
$9CC    $B526   JP       V0, $526        ; Jump to V0 + 526
$9CE    $6236   LD       V2, #36         ; Load 54 into V2
$9D0    $E311   UNKNOWN  $E311           ; Unknown Exxx instruction
$9D2    $2F0F   CALL     $F0F            ; Call subroutine at F0F
$9D4    $1C16   JP       $C16            ; Jump to C16
$9D6    $CBED   RND      VB, #ED         ; VB = random & ED
$9D8    $F386   UNKNOWN  F386            ; Unknown Fxxx instruction
$9DA    $4962   SNE      V9, #62         ; Skip if V9 != 98
$9DC    $63FF   LD       V3, #FF         ; Load 255 into V3
$9DE    $B408   JP       V0, $408        ; Jump to V0 + 408
$9E0    $7262   ADD      V2, #62         ; Add 98 to V2
$9E2    $D3A9   DRW      V3, VA, #9      ; Draw 9-byte sprite at V3, VA
$9E4    $E7FC   UNKNOWN  $E7FC           ; Unknown Exxx instruction
$9E6    $3F42   SE       VF, #42         ; Skip if VF == 66
$9E8    $935E   UNKNOWN  $935E           ; Unknown 9xxx instruction
$9EA    $A759   LD       I, $759         ; Load 759 into I
$9EC    $3B74   SE       VB, #74         ; Skip if VB == 116
$9EE    $13D4   JP       $3D4            ; Jump to 3D4
$9F0    $0E6B   SYS      $E6B            ; System call to E6B
$9F2    $880D   UNKNOWN  880D            ; Unknown 8xxx instruction
$9F4    $13E3   JP       $3E3            ; Jump to 3E3
$9F6    $94FB   UNKNOWN  $94FB           ; Unknown 9xxx instruction
$9F8    $C2D2   RND      V2, #D2         ; V2 = random & D2
$9FA    $C812   RND      V8, #12         ; V8 = random & 12
$9FC    $8818   UNKNOWN  8818            ; Unknown 8xxx instruction
$9FE    $DEFA   DRW      VE, VF, #A      ; Draw 10-byte sprite at VE, VF
$A00    $E584   UNKNOWN  $E584           ; Unknown Exxx instruction
$A02    $D7CD   DRW      V7, VC, #D      ; Draw 13-byte sprite at V7, VC
$A04    $E60A   UNKNOWN  $E60A           ; Unknown Exxx instruction
$A06    $9011   UNKNOWN  $9011           ; Unknown 9xxx instruction
$A08    $0A6F   SYS      $A6F            ; System call to A6F
$A0A    $25EB   CALL     $5EB            ; Call subroutine at 5EB
$A0C    $9F00   SNE      VF, V0          ; Skip if VF != V0
$A0E    $6167   LD       V1, #67         ; Load 103 into V1
$A10    $D31D   DRW      V3, V1, #D      ; Draw 13-byte sprite at V3, V1
$A12    $4F93   SNE      VF, #93         ; Skip if VF != 147
$A14    $FAC6   UNKNOWN  FAC6            ; Unknown Fxxx instruction
$A16    $5F29   UNKNOWN  $5F29           ; Unknown 5xxx instruction
$A18    $F27D   UNKNOWN  F27D            ; Unknown Fxxx instruction
$A1A    $F306   UNKNOWN  F306            ; Unknown Fxxx instruction
$A1C    $F36F   UNKNOWN  F36F            ; Unknown Fxxx instruction
$A1E    $557F   UNKNOWN  $557F           ; Unknown 5xxx instruction
$A20    $9319   UNKNOWN  $9319           ; Unknown 9xxx instruction
$A22    $174F   JP       $74F            ; Jump to 74F
$A24    $7B4B   ADD      VB, #4B         ; Add 75 to VB
$A26    $CFCA   RND      VF, #CA         ; VF = random & CA
$A28    $7BD5   ADD      VB, #D5         ; Add 213 to VB
$A2A    $FC04   UNKNOWN  FC04            ; Unknown Fxxx instruction
$A2C    $E2DF   UNKNOWN  $E2DF           ; Unknown Exxx instruction
$A2E    $2272   CALL     $272            ; Call subroutine at 272
$A30    $A521   LD       I, $521         ; Load 521 into I
$A32    $F0D0   UNKNOWN  F0D0            ; Unknown Fxxx instruction
$A34    $3891   SE       V8, #91         ; Skip if V8 == 145
$A36    $04F8   SYS      $4F8            ; System call to 4F8
$A38    $153C   JP       $53C            ; Jump to 53C
$A3A    $3AC6   SE       VA, #C6         ; Skip if VA == 198
$A3C    $1F91   JP       $F91            ; Jump to F91
$A3E    $D0D8   DRW      V0, VD, #8      ; Draw 8-byte sprite at V0, VD
$A40    $6521   LD       V5, #21         ; Load 33 into V5
$A42    $0756   SYS      $756            ; System call to 756
$A44    $AC6A   LD       I, $C6A         ; Load C6A into I
$A46    $B38D   JP       V0, $38D        ; Jump to V0 + 38D
$A48    $6645   LD       V6, #45         ; Load 69 into V6
$A4A    $BD0F   JP       V0, $D0F        ; Jump to V0 + D0F
$A4C    $74CC   ADD      V4, #CC         ; Add 204 to V4
$A4E    $7E39   ADD      VE, #39         ; Add 57 to VE
$A50    $D8F3   DRW      V8, VF, #3      ; Draw 3-byte sprite at V8, VF
$A52    $A5F4   LD       I, $5F4         ; Load 5F4 into I
$A54    $0195   SYS      $195            ; System call to 195
$A56    $54FA   UNKNOWN  $54FA           ; Unknown 5xxx instruction
$A58    $40F2   SNE      V0, #F2         ; Skip if V0 != 242
$A5A    $01E8   SYS      $1E8            ; System call to 1E8
$A5C    $2870   CALL     $870            ; Call subroutine at 870
$A5E    $0B0F   SYS      $B0F            ; System call to B0F
$A60    $0EB3   SYS      $EB3            ; System call to EB3
$A62    $A916   LD       I, $916         ; Load 916 into I
$A64    $A301   LD       I, $301         ; Load 301 into I
$A66    $1D97   JP       $D97            ; Jump to D97
$A68    $AF7C   LD       I, $F7C         ; Load F7C into I
$A6A    $756E   ADD      V5, #6E         ; Add 110 to V5
$A6C    $75A2   ADD      V5, #A2         ; Add 162 to V5
$A6E    $D387   DRW      V3, V8, #7      ; Draw 7-byte sprite at V3, V8
$A70    $F159   UNKNOWN  F159            ; Unknown Fxxx instruction
$A72    $A976   LD       I, $976         ; Load 976 into I
$A74    $0FE7   SYS      $FE7            ; System call to FE7
$A76    $D0A8   DRW      V0, VA, #8      ; Draw 8-byte sprite at V0, VA
$A78    $4466   SNE      V4, #66         ; Skip if V4 != 102
$A7A    $1791   JP       $791            ; Jump to 791
$A7C    $CB2D   RND      VB, #2D         ; VB = random & 2D
$A7E    $B4D8   JP       V0, $4D8        ; Jump to V0 + 4D8
$A80    $C011   RND      V0, #11         ; V0 = random & 11
$A82    $0047   SYS      $047            ; System call to 047
$A84    $90D1   UNKNOWN  $90D1           ; Unknown 9xxx instruction
$A86    $C036   RND      V0, #36         ; V0 = random & 36
$A88    $15C6   JP       $5C6            ; Jump to 5C6
$A8A    $9BFD   UNKNOWN  $9BFD           ; Unknown 9xxx instruction
$A8C    $6EEA   LD       VE, #EA         ; Load 234 into VE
$A8E    $AA89   LD       I, $A89         ; Load A89 into I
$A90    $98A2   UNKNOWN  $98A2           ; Unknown 9xxx instruction
$A92    $06ED   SYS      $6ED            ; System call to 6ED
$A94    $B764   JP       V0, $764        ; Jump to V0 + 764
$A96    $F126   UNKNOWN  F126            ; Unknown Fxxx instruction
$A98    $A76C   LD       I, $76C         ; Load 76C into I
$A9A    $DD70   DRW      VD, V7, #0      ; Draw 0-byte sprite at VD, V7
$A9C    $2B18   CALL     $B18            ; Call subroutine at B18
$A9E    $165F   JP       $65F            ; Jump to 65F
$AA0    $C5E1   RND      V5, #E1         ; V5 = random & E1
$AA2    $0A0D   SYS      $A0D            ; System call to A0D
$AA4    $FF7E   UNKNOWN  FF7E            ; Unknown Fxxx instruction
$AA6    $C5B7   RND      V5, #B7         ; V5 = random & B7
$AA8    $1738   JP       $738            ; Jump to 738
$AAA    $150C   JP       $50C            ; Jump to 50C
$AAC    $31DF   SE       V1, #DF         ; Skip if V1 == 223
$AAE    $DE00   DRW      VE, V0, #0      ; Draw 0-byte sprite at VE, V0
$AB0    $CE8E   RND      VE, #8E         ; VE = random & 8E
$AB2    $E294   UNKNOWN  $E294           ; Unknown Exxx instruction
$AB4    $AA45   LD       I, $A45         ; Load A45 into I
$AB6    $7491   ADD      V4, #91         ; Add 145 to V4
$AB8    $65D5   LD       V5, #D5         ; Load 213 into V5
$ABA    $0F32   SYS      $F32            ; System call to F32
$ABC    $FCBD   UNKNOWN  FCBD            ; Unknown Fxxx instruction
$ABE    $284A   CALL     $84A            ; Call subroutine at 84A
$AC0    $92CB   UNKNOWN  $92CB           ; Unknown 9xxx instruction
$AC2    $4678   SNE      V6, #78         ; Skip if V6 != 120
$AC4    $3FB4   SE       VF, #B4         ; Skip if VF == 180
$AC6    $B961   JP       V0, $961        ; Jump to V0 + 961
$AC8    $3839   SE       V8, #39         ; Skip if V8 == 57
$ACA    $211E   CALL     $11E            ; Call subroutine at 11E
$ACC    $4834   SNE      V8, #34         ; Skip if V8 != 52
$ACE    $1012   JP       $012            ; Jump to 012
$AD0    $4740   SNE      V7, #40         ; Skip if V7 != 64
$AD2    $09AD   SYS      $9AD            ; System call to 9AD
$AD4    $1D0A   JP       $D0A            ; Jump to D0A
$AD6    $13E9   JP       $3E9            ; Jump to 3E9
$AD8    $FD92   UNKNOWN  FD92            ; Unknown Fxxx instruction
$ADA    $597D   UNKNOWN  $597D           ; Unknown 5xxx instruction
$ADC    $F28C   UNKNOWN  F28C            ; Unknown Fxxx instruction
$ADE    $6A50   LD       VA, #50         ; Load 80 into VA
$AE0    $C751   RND      V7, #51         ; V7 = random & 51
$AE2    $ADC9   LD       I, $DC9         ; Load DC9 into I
$AE4    $BC01   JP       V0, $C01        ; Jump to V0 + C01
$AE6    $107A   JP       $07A            ; Jump to 07A
$AE8    $723D   ADD      V2, #3D         ; Add 61 to V2
$AEA    $1928   JP       $928            ; Jump to 928
$AEC    $1443   JP       $443            ; Jump to 443
$AEE    $3300   SE       V3, #00         ; Skip if V3 == 0
$AF0    $CBB4   RND      VB, #B4         ; VB = random & B4
$AF2    $DE06   DRW      VE, V0, #6      ; Draw 6-byte sprite at VE, V0
$AF4    $DED2   DRW      VE, VD, #2      ; Draw 2-byte sprite at VE, VD
$AF6    $4682   SNE      V6, #82         ; Skip if V6 != 130
$AF8    $BB11   JP       V0, $B11        ; Jump to V0 + B11
$AFA    $3E5D   SE       VE, #5D         ; Skip if VE == 93
$AFC    $2621   CALL     $621            ; Call subroutine at 621
$AFE    $E1BC   UNKNOWN  $E1BC           ; Unknown Exxx instruction
$B00    $A34E   LD       I, $34E         ; Load 34E into I
$B02    $09C0   SYS      $9C0            ; System call to 9C0
$B04    $ECF1   UNKNOWN  $ECF1           ; Unknown Exxx instruction
$B06    $4939   SNE      V9, #39         ; Skip if V9 != 57
$B08    $E3AF   UNKNOWN  $E3AF           ; Unknown Exxx instruction
$B0A    $D2A2   DRW      V2, VA, #2      ; Draw 2-byte sprite at V2, VA
$B0C    $1275   JP       $275            ; Jump to 275
$B0E    $571B   UNKNOWN  $571B           ; Unknown 5xxx instruction
$B10    $D6E8   DRW      V6, VE, #8      ; Draw 8-byte sprite at V6, VE
$B12    $7665   ADD      V6, #65         ; Add 101 to V6
$B14    $9CAD   UNKNOWN  $9CAD           ; Unknown 9xxx instruction
$B16    $7581   ADD      V5, #81         ; Add 129 to V5
$B18    $B9E1   JP       V0, $9E1        ; Jump to V0 + 9E1
$B1A    $32BA   SE       V2, #BA         ; Skip if V2 == 186
$B1C    $5777   UNKNOWN  $5777           ; Unknown 5xxx instruction
$B1E    $CAF2   RND      VA, #F2         ; VA = random & F2
$B20    $4812   SNE      V8, #12         ; Skip if V8 != 18
$B22    $38E4   SE       V8, #E4         ; Skip if V8 == 228
$B24    $C00B   RND      V0, #0B         ; V0 = random & 0B
$B26    $E0CF   UNKNOWN  $E0CF           ; Unknown Exxx instruction
$B28    $FCE6   UNKNOWN  FCE6            ; Unknown Fxxx instruction
$B2A    $1C55   JP       $C55            ; Jump to C55
$B2C    $5A43   UNKNOWN  $5A43           ; Unknown 5xxx instruction
$B2E    $B7E8   JP       V0, $7E8        ; Jump to V0 + 7E8
$B30    $BDDC   JP       V0, $DDC        ; Jump to V0 + DDC
$B32    $464D   SNE      V6, #4D         ; Skip if V6 != 77
$B34    $320F   SE       V2, #0F         ; Skip if V2 == 15
$B36    $E76D   UNKNOWN  $E76D           ; Unknown Exxx instruction
$B38    $F434   UNKNOWN  F434            ; Unknown Fxxx instruction
$B3A    $4D18   SNE      VD, #18         ; Skip if VD != 24
$B3C    $556F   UNKNOWN  $556F           ; Unknown 5xxx instruction
$B3E    $B14A   JP       V0, $14A        ; Jump to V0 + 14A
$B40    $7E6F   ADD      VE, #6F         ; Add 111 to VE
$B42    $6EEE   LD       VE, #EE         ; Load 238 into VE
$B44    $113A   JP       $13A            ; Jump to 13A
$B46    $AEA2   LD       I, $EA2         ; Load EA2 into I
$B48    $ABFF   LD       I, $BFF         ; Load BFF into I
$B4A    $8B63   XOR      VB, V6          ; VB ^= V6
$B4C    $E433   UNKNOWN  $E433           ; Unknown Exxx instruction
$B4E    $31BA   SE       V1, #BA         ; Skip if V1 == 186
$B50    $D31D   DRW      V3, V1, #D      ; Draw 13-byte sprite at V3, V1
$B52    $7C78   ADD      VC, #78         ; Add 120 to VC
$B54    $0B18   SYS      $B18            ; System call to B18
$B56    $ADE9   LD       I, $DE9         ; Load DE9 into I
$B58    $F1F7   UNKNOWN  F1F7            ; Unknown Fxxx instruction
$B5A    $97E1   UNKNOWN  $97E1           ; Unknown 9xxx instruction
$B5C    $0C97   SYS      $C97            ; System call to C97
$B5E    $E316   UNKNOWN  $E316           ; Unknown Exxx instruction
$B60    $B77A   JP       V0, $77A        ; Jump to V0 + 77A
$B62    $1D00   JP       $D00            ; Jump to D00
$B64    $E49E   SKP      V4              ; Skip if key V4 pressed
$B66    $F528   UNKNOWN  F528            ; Unknown Fxxx instruction
$B68    $1916   JP       $916            ; Jump to 916
$B6A    $4CDA   SNE      VC, #DA         ; Skip if VC != 218
$B6C    $9735   UNKNOWN  $9735           ; Unknown 9xxx instruction
$B6E    $563C   UNKNOWN  $563C           ; Unknown 5xxx instruction
$B70    $FB1F   UNKNOWN  FB1F            ; Unknown Fxxx instruction
$B72    $0711   SYS      $711            ; System call to 711
$B74    $B628   JP       V0, $628        ; Jump to V0 + 628
$B76    $C1B1   RND      V1, #B1         ; V1 = random & B1
$B78    $207A   CALL     $07A            ; Call subroutine at 07A
$B7A    $FD14   UNKNOWN  FD14            ; Unknown Fxxx instruction
$B7C    $DDB3   DRW      VD, VB, #3      ; Draw 3-byte sprite at VD, VB
$B7E    $CD84   RND      VD, #84         ; VD = random & 84
$B80    $B290   JP       V0, $290        ; Jump to V0 + 290
$B82    $E597   UNKNOWN  $E597           ; Unknown Exxx instruction
$B84    $D786   DRW      V7, V8, #6      ; Draw 6-byte sprite at V7, V8
$B86    $6369   LD       V3, #69         ; Load 105 into V3
$B88    $74A2   ADD      V4, #A2         ; Add 162 to V4
$B8A    $A00A   LD       I, $00A         ; Load 00A into I
$B8C    $01CC   SYS      $1CC            ; System call to 1CC
$B8E    $7A41   ADD      VA, #41         ; Add 65 to VA
$B90    $9968   UNKNOWN  $9968           ; Unknown 9xxx instruction
$B92    $9F90   SNE      VF, V9          ; Skip if VF != V9
$B94    $8BED   UNKNOWN  8BED            ; Unknown 8xxx instruction
$B96    $91C1   UNKNOWN  $91C1           ; Unknown 9xxx instruction
$B98    $0273   SYS      $273            ; System call to 273
$B9A    $0186   SYS      $186            ; System call to 186
$B9C    $4420   SNE      V4, #20         ; Skip if V4 != 32
$B9E    $B676   JP       V0, $676        ; Jump to V0 + 676
$BA0    $7179   ADD      V1, #79         ; Add 121 to V1
$BA2    $FF25   UNKNOWN  FF25            ; Unknown Fxxx instruction
$BA4    $C621   RND      V6, #21         ; V6 = random & 21
$BA6    $343B   SE       V4, #3B         ; Skip if V4 == 59
$BA8    $5A4D   UNKNOWN  $5A4D           ; Unknown 5xxx instruction
$BAA    $4325   SNE      V3, #25         ; Skip if V3 != 37
$BAC    $9F53   UNKNOWN  $9F53           ; Unknown 9xxx instruction
$BAE    $EF1E   UNKNOWN  $EF1E           ; Unknown Exxx instruction
$BB0    $84E7   SUBN     V4, VE          ; V4 = VE - V4, VF = !borrow
$BB2    $8615   SUB      V6, V1          ; V6 -= V1, VF = !borrow
$BB4    $4DCC   SNE      VD, #CC         ; Skip if VD != 204
$BB6    $15E8   JP       $5E8            ; Jump to 5E8
$BB8    $53B1   UNKNOWN  $53B1           ; Unknown 5xxx instruction
$BBA    $66D4   LD       V6, #D4         ; Load 212 into V6
$BBC    $DD80   DRW      VD, V8, #0      ; Draw 0-byte sprite at VD, V8
$BBE    $D728   DRW      V7, V2, #8      ; Draw 8-byte sprite at V7, V2
$BC0    $A2C6   LD       I, $2C6         ; Load 2C6 into I
$BC2    $6D93   LD       VD, #93         ; Load 147 into VD
$BC4    $A4D0   LD       I, $4D0         ; Load 4D0 into I
$BC6    $6D9C   LD       VD, #9C         ; Load 156 into VD
$BC8    $067D   SYS      $67D            ; System call to 67D
$BCA    $9F08   UNKNOWN  $9F08           ; Unknown 9xxx instruction
$BCC    $8566   SHR      V5              ; V5 >>= 1, VF = LSB
$BCE    $FCC5   UNKNOWN  FCC5            ; Unknown Fxxx instruction
$BD0    $569E   UNKNOWN  $569E           ; Unknown 5xxx instruction
$BD2    $74B5   ADD      V4, #B5         ; Add 181 to V4
$BD4    $D9AF   DRW      V9, VA, #F      ; Draw 15-byte sprite at V9, VA
$BD6    $B908   JP       V0, $908        ; Jump to V0 + 908
$BD8    $53D9   UNKNOWN  $53D9           ; Unknown 5xxx instruction
$BDA    $E97D   UNKNOWN  $E97D           ; Unknown Exxx instruction
$BDC    $66E2   LD       V6, #E2         ; Load 226 into V6
$BDE    $B34F   JP       V0, $34F        ; Jump to V0 + 34F
$BE0    $25F7   CALL     $5F7            ; Call subroutine at 5F7
$BE2    $3F81   SE       VF, #81         ; Skip if VF == 129
$BE4    $DF43   DRW      VF, V4, #3      ; Draw 3-byte sprite at VF, V4
$BE6    $873C   UNKNOWN  873C            ; Unknown 8xxx instruction
$BE8    $2FD0   CALL     $FD0            ; Call subroutine at FD0
$BEA    $87A3   XOR      V7, VA          ; V7 ^= VA
$BEC    $4D7E   SNE      VD, #7E         ; Skip if VD != 126
$BEE    $B7E2   JP       V0, $7E2        ; Jump to V0 + 7E2
$BF0    $918B   UNKNOWN  $918B           ; Unknown 9xxx instruction
$BF2    $48DF   SNE      V8, #DF         ; Skip if V8 != 223
$BF4    $70DA   ADD      V0, #DA         ; Add 218 to V0
$BF6    $FF4B   UNKNOWN  FF4B            ; Unknown Fxxx instruction
$BF8    $85AE   SHL      V5              ; V5 <<= 1, VF = MSB
$BFA    $1FA9   JP       $FA9            ; Jump to FA9
$BFC    $EBC6   UNKNOWN  $EBC6           ; Unknown Exxx instruction
$BFE    $7E24   ADD      VE, #24         ; Add 36 to VE
$C00    $8F82   AND      VF, V8          ; VF &= V8
$C02    $AA9B   LD       I, $A9B         ; Load A9B into I
$C04    $DBC7   DRW      VB, VC, #7      ; Draw 7-byte sprite at VB, VC
$C06    $F609   UNKNOWN  F609            ; Unknown Fxxx instruction
$C08    $9142   UNKNOWN  $9142           ; Unknown 9xxx instruction
$C0A    $9D04   UNKNOWN  $9D04           ; Unknown 9xxx instruction
$C0C    $8512   AND      V5, V1          ; V5 &= V1
$C0E    $A89F   LD       I, $89F         ; Load 89F into I
$C10    $B7CA   JP       V0, $7CA        ; Jump to V0 + 7CA
$C12    $3D6E   SE       VD, #6E         ; Skip if VD == 110
$C14    $A574   LD       I, $574         ; Load 574 into I
$C16    $9240   SNE      V2, V4          ; Skip if V2 != V4
$C18    $34EC   SE       V4, #EC         ; Skip if V4 == 236
$C1A    $3208   SE       V2, #08         ; Skip if V2 == 8
$C1C    $DE5E   DRW      VE, V5, #E      ; Draw 14-byte sprite at VE, V5
$C1E    $36DD   SE       V6, #DD         ; Skip if V6 == 221
$C20    $CE0B   RND      VE, #0B         ; VE = random & 0B
$C22    $6656   LD       V6, #56         ; Load 86 into V6
$C24    $7F42   ADD      VF, #42         ; Add 66 to VF
$C26    $9F2C   UNKNOWN  $9F2C           ; Unknown 9xxx instruction
$C28    $3FDB   SE       VF, #DB         ; Skip if VF == 219
$C2A    $0C49   SYS      $C49            ; System call to C49
$C2C    $8CF0   LD       VC, VF          ; VC = VF
$C2E    $FF13   UNKNOWN  FF13            ; Unknown Fxxx instruction
$C30    $6420   LD       V4, #20         ; Load 32 into V4
$C32    $7A2C   ADD      VA, #2C         ; Add 44 to VA
$C34    $7D46   ADD      VD, #46         ; Add 70 to VD
$C36    $514D   UNKNOWN  $514D           ; Unknown 5xxx instruction
$C38    $8EC3   XOR      VE, VC          ; VE ^= VC
$C3A    $773F   ADD      V7, #3F         ; Add 63 to V7
$C3C    $8C64   ADD      VC, V6          ; VC += V6, VF = carry
$C3E    $07BE   SYS      $7BE            ; System call to 7BE
$C40    $8464   ADD      V4, V6          ; V4 += V6, VF = carry
$C42    $E52E   UNKNOWN  $E52E           ; Unknown Exxx instruction
$C44    $3248   SE       V2, #48         ; Skip if V2 == 72
$C46    $7724   ADD      V7, #24         ; Add 36 to V7
$C48    $CCDC   RND      VC, #DC         ; VC = random & DC
$C4A    $5C80   SE       VC, V8          ; Skip if VC == V8
$C4C    $BBA8   JP       V0, $BA8        ; Jump to V0 + BA8
$C4E    $6670   LD       V6, #70         ; Load 112 into V6
$C50    $B5A1   JP       V0, $5A1        ; Jump to V0 + 5A1
$C52    $2A49   CALL     $A49            ; Call subroutine at A49
$C54    $CF72   RND      VF, #72         ; VF = random & 72
$C56    $BC95   JP       V0, $C95        ; Jump to V0 + C95
$C58    $97D9   UNKNOWN  $97D9           ; Unknown 9xxx instruction
$C5A    $3E35   SE       VE, #35         ; Skip if VE == 53
$C5C    $CE7B   RND      VE, #7B         ; VE = random & 7B
$C5E    $8FFB   UNKNOWN  8FFB            ; Unknown 8xxx instruction
$C60    $791B   ADD      V9, #1B         ; Add 27 to V9
$C62    $24B5   CALL     $4B5            ; Call subroutine at 4B5
$C64    $E8FB   UNKNOWN  $E8FB           ; Unknown Exxx instruction
$C66    $9854   UNKNOWN  $9854           ; Unknown 9xxx instruction
$C68    $0CC7   SYS      $CC7            ; System call to CC7
$C6A    $A807   LD       I, $807         ; Load 807 into I
$C6C    $DDAD   DRW      VD, VA, #D      ; Draw 13-byte sprite at VD, VA
$C6E    $9EF2   UNKNOWN  $9EF2           ; Unknown 9xxx instruction
$C70    $2FD6   CALL     $FD6            ; Call subroutine at FD6
$C72    $2811   CALL     $811            ; Call subroutine at 811
$C74    $FB67   UNKNOWN  FB67            ; Unknown Fxxx instruction
$C76    $DED9   DRW      VE, VD, #9      ; Draw 9-byte sprite at VE, VD
$C78    $37D4   SE       V7, #D4         ; Skip if V7 == 212
$C7A    $3D81   SE       VD, #81         ; Skip if VD == 129
$C7C    $B195   JP       V0, $195        ; Jump to V0 + 195
$C7E    $B302   JP       V0, $302        ; Jump to V0 + 302
$C80    $3E4E   SE       VE, #4E         ; Skip if VE == 78
$C82    $D101   DRW      V1, V0, #1      ; Draw 1-byte sprite at V1, V0
$C84    $7AE3   ADD      VA, #E3         ; Add 227 to VA
$C86    $35FB   SE       V5, #FB         ; Skip if V5 == 251
$C88    $D6B2   DRW      V6, VB, #2      ; Draw 2-byte sprite at V6, VB
$C8A    $28C1   CALL     $8C1            ; Call subroutine at 8C1
$C8C    $5673   UNKNOWN  $5673           ; Unknown 5xxx instruction
$C8E    $D599   DRW      V5, V9, #9      ; Draw 9-byte sprite at V5, V9
$C90    $FD22   UNKNOWN  FD22            ; Unknown Fxxx instruction
$C92    $56DC   UNKNOWN  $56DC           ; Unknown 5xxx instruction
$C94    $D20A   DRW      V2, V0, #A      ; Draw 10-byte sprite at V2, V0
$C96    $6037   LD       V0, #37         ; Load 55 into V0
$C98    $D9E0   DRW      V9, VE, #0      ; Draw 0-byte sprite at V9, VE
$C9A    $90E2   UNKNOWN  $90E2           ; Unknown 9xxx instruction
$C9C    $6B82   LD       VB, #82         ; Load 130 into VB
$C9E    $9962   UNKNOWN  $9962           ; Unknown 9xxx instruction
$CA0    $5F94   UNKNOWN  $5F94           ; Unknown 5xxx instruction
$CA2    $B17D   JP       V0, $17D        ; Jump to V0 + 17D
$CA4    $78AA   ADD      V8, #AA         ; Add 170 to V8
$CA6    $7857   ADD      V8, #57         ; Add 87 to V8
$CA8    $E425   UNKNOWN  $E425           ; Unknown Exxx instruction
$CAA    $230B   CALL     $30B            ; Call subroutine at 30B
$CAC    $5664   UNKNOWN  $5664           ; Unknown 5xxx instruction
$CAE    $7615   ADD      V6, #15         ; Add 21 to V6
$CB0    $8096   SHR      V0              ; V0 >>= 1, VF = LSB
$CB2    $080B   SYS      $80B            ; System call to 80B
$CB4    $7725   ADD      V7, #25         ; Add 37 to V7
$CB6    $D08A   DRW      V0, V8, #A      ; Draw 10-byte sprite at V0, V8
$CB8    $C14E   RND      V1, #4E         ; V1 = random & 4E
$CBA    $A300   LD       I, $300         ; Load 300 into I
$CBC    $75D4   ADD      V5, #D4         ; Add 212 to V5
$CBE    $90C3   UNKNOWN  $90C3           ; Unknown 9xxx instruction
$CC0    $F9FE   UNKNOWN  F9FE            ; Unknown Fxxx instruction
$CC2    $81F6   SHR      V1              ; V1 >>= 1, VF = LSB
$CC4    $EFB3   UNKNOWN  $EFB3           ; Unknown Exxx instruction
$CC6    $9291   UNKNOWN  $9291           ; Unknown 9xxx instruction
$CC8    $2BFC   CALL     $BFC            ; Call subroutine at BFC
$CCA    $6959   LD       V9, #59         ; Load 89 into V9
$CCC    $48D2   SNE      V8, #D2         ; Skip if V8 != 210
$CCE    $48FE   SNE      V8, #FE         ; Skip if V8 != 254
$CD0    $C796   RND      V7, #96         ; V7 = random & 96
$CD2    $B62B   JP       V0, $62B        ; Jump to V0 + 62B
$CD4    $B4A1   JP       V0, $4A1        ; Jump to V0 + 4A1
$CD6    $620B   LD       V2, #0B         ; Load 11 into V2
$CD8    $3858   SE       V8, #58         ; Skip if V8 == 88
$CDA    $C8EB   RND      V8, #EB         ; V8 = random & EB
$CDC    $6DB6   LD       VD, #B6         ; Load 182 into VD
$CDE    $01B2   SYS      $1B2            ; System call to 1B2
$CE0    $0A26   SYS      $A26            ; System call to A26
$CE2    $E72D   UNKNOWN  $E72D           ; Unknown Exxx instruction
$CE4    $C1C8   RND      V1, #C8         ; V1 = random & C8
$CE6    $BE84   JP       V0, $E84        ; Jump to V0 + E84
$CE8    $DCBA   DRW      VC, VB, #A      ; Draw 10-byte sprite at VC, VB
$CEA    $06E4   SYS      $6E4            ; System call to 6E4
$CEC    $4907   SNE      V9, #07         ; Skip if V9 != 7
$CEE    $AC87   LD       I, $C87         ; Load C87 into I
$CF0    $6AF9   LD       VA, #F9         ; Load 249 into VA
$CF2    $ADCF   LD       I, $DCF         ; Load DCF into I
$CF4    $7384   ADD      V3, #84         ; Add 132 to V3
$CF6    $41C6   SNE      V1, #C6         ; Skip if V1 != 198
$CF8    $829E   SHL      V2              ; V2 <<= 1, VF = MSB
$CFA    $7242   ADD      V2, #42         ; Add 66 to V2
$CFC    $ED9D   UNKNOWN  $ED9D           ; Unknown Exxx instruction
$CFE    $E830   UNKNOWN  $E830           ; Unknown Exxx instruction
$D00    $BD65   JP       V0, $D65        ; Jump to V0 + D65
$D02    $FDB5   UNKNOWN  FDB5            ; Unknown Fxxx instruction
$D04    $4B67   SNE      VB, #67         ; Skip if VB != 103
$D06    $422B   SNE      V2, #2B         ; Skip if V2 != 43
$D08    $0A82   SYS      $A82            ; System call to A82
$D0A    $DB30   DRW      VB, V3, #0      ; Draw 0-byte sprite at VB, V3
$D0C    $9B92   UNKNOWN  $9B92           ; Unknown 9xxx instruction
$D0E    $BB77   JP       V0, $B77        ; Jump to V0 + B77
$D10    $F78B   UNKNOWN  F78B            ; Unknown Fxxx instruction
$D12    $7FEC   ADD      VF, #EC         ; Add 236 to VF
$D14    $1A6C   JP       $A6C            ; Jump to A6C
$D16    $4389   SNE      V3, #89         ; Skip if V3 != 137
$D18    $09DE   SYS      $9DE            ; System call to 9DE
$D1A    $9111   UNKNOWN  $9111           ; Unknown 9xxx instruction
$D1C    $1ECD   JP       $ECD            ; Jump to ECD
$D1E    $B37F   JP       V0, $37F        ; Jump to V0 + 37F
$D20    $57E6   UNKNOWN  $57E6           ; Unknown 5xxx instruction
$D22    $5288   UNKNOWN  $5288           ; Unknown 5xxx instruction
$D24    $B5A2   JP       V0, $5A2        ; Jump to V0 + 5A2
$D26    $B646   JP       V0, $646        ; Jump to V0 + 646
$D28    $10C2   JP       $0C2            ; Jump to 0C2
$D2A    $1252   JP       $252            ; Jump to 252
$D2C    $EE5B   UNKNOWN  $EE5B           ; Unknown Exxx instruction
$D2E    $7DB2   ADD      VD, #B2         ; Add 178 to VD
$D30    $D0E0   DRW      V0, VE, #0      ; Draw 0-byte sprite at V0, VE
$D32    $76F8   ADD      V6, #F8         ; Add 248 to V6
$D34    $4B36   SNE      VB, #36         ; Skip if VB != 54
$D36    $9194   UNKNOWN  $9194           ; Unknown 9xxx instruction
$D38    $56C5   UNKNOWN  $56C5           ; Unknown 5xxx instruction
$D3A    $9107   UNKNOWN  $9107           ; Unknown 9xxx instruction
$D3C    $43A0   SNE      V3, #A0         ; Skip if V3 != 160
$D3E    $0642   SYS      $642            ; System call to 642
$D40    $0DED   SYS      $DED            ; System call to DED
$D42    $BB13   JP       V0, $B13        ; Jump to V0 + B13
$D44    $B3C4   JP       V0, $3C4        ; Jump to V0 + 3C4
$D46    $0CAB   SYS      $CAB            ; System call to CAB
$D48    $A6FA   LD       I, $6FA         ; Load 6FA into I
$D4A    $8DB2   AND      VD, VB          ; VD &= VB
$D4C    $6B9C   LD       VB, #9C         ; Load 156 into VB
$D4E    $C3A0   RND      V3, #A0         ; V3 = random & A0
$D50    $33AB   SE       V3, #AB         ; Skip if V3 == 171
$D52    $A8D9   LD       I, $8D9         ; Load 8D9 into I
$D54    $ACD9   LD       I, $CD9         ; Load CD9 into I
$D56    $5ACD   UNKNOWN  $5ACD           ; Unknown 5xxx instruction
$D58    $4AEE   SNE      VA, #EE         ; Skip if VA != 238
$D5A    $1A36   JP       $A36            ; Jump to A36
$D5C    $3DF5   SE       VD, #F5         ; Skip if VD == 245
$D5E    $D717   DRW      V7, V1, #7      ; Draw 7-byte sprite at V7, V1
$D60    $3332   SE       V3, #32         ; Skip if V3 == 50
$D62    $885A   UNKNOWN  885A            ; Unknown 8xxx instruction
$D64    $4EB0   SNE      VE, #B0         ; Skip if VE != 176
$D66    $7CB7   ADD      VC, #B7         ; Add 183 to VC
$D68    $57A2   UNKNOWN  $57A2           ; Unknown 5xxx instruction
$D6A    $C15C   RND      V1, #5C         ; V1 = random & 5C
$D6C    $58CB   UNKNOWN  $58CB           ; Unknown 5xxx instruction
$D6E    $4A8E   SNE      VA, #8E         ; Skip if VA != 142
$D70    $65A0   LD       V5, #A0         ; Load 160 into V5
$D72    $F4B7   UNKNOWN  F4B7            ; Unknown Fxxx instruction
$D74    $4137   SNE      V1, #37         ; Skip if V1 != 55
$D76    $34E1   SE       V4, #E1         ; Skip if V4 == 225
$D78    $2C37   CALL     $C37            ; Call subroutine at C37
$D7A    $420B   SNE      V2, #0B         ; Skip if V2 != 11
$D7C    $0770   SYS      $770            ; System call to 770
$D7E    $8197   SUBN     V1, V9          ; V1 = V9 - V1, VF = !borrow
$D80    $54D1   UNKNOWN  $54D1           ; Unknown 5xxx instruction
$D82    $86F6   SHR      V6              ; V6 >>= 1, VF = LSB
$D84    $4EEC   SNE      VE, #EC         ; Skip if VE != 236
$D86    $7D71   ADD      VD, #71         ; Add 113 to VD
$D88    $B709   JP       V0, $709        ; Jump to V0 + 709
$D8A    $F130   UNKNOWN  F130            ; Unknown Fxxx instruction
$D8C    $F8EA   UNKNOWN  F8EA            ; Unknown Fxxx instruction
$D8E    $512D   UNKNOWN  $512D           ; Unknown 5xxx instruction
$D90    $92DB   UNKNOWN  $92DB           ; Unknown 9xxx instruction
$D92    $227C   CALL     $27C            ; Call subroutine at 27C
$D94    $14CB   JP       $4CB            ; Jump to 4CB
$D96    $72C9   ADD      V2, #C9         ; Add 201 to V2
$D98    $A7CE   LD       I, $7CE         ; Load 7CE into I
$D9A    $6015   LD       V0, #15         ; Load 21 into V0
$D9C    $B2E9   JP       V0, $2E9        ; Jump to V0 + 2E9
$D9E    $45BA   SNE      V5, #BA         ; Skip if V5 != 186
$DA0    $E029   UNKNOWN  $E029           ; Unknown Exxx instruction
$DA2    $4AF6   SNE      VA, #F6         ; Skip if VA != 246
$DA4    $B5E9   JP       V0, $5E9        ; Jump to V0 + 5E9
$DA6    $3EB3   SE       VE, #B3         ; Skip if VE == 179
$DA8    $BC0D   JP       V0, $C0D        ; Jump to V0 + C0D
$DAA    $15D7   JP       $5D7            ; Jump to 5D7
$DAC    $C9A0   RND      V9, #A0         ; V9 = random & A0
$DAE    $E4B0   UNKNOWN  $E4B0           ; Unknown Exxx instruction
$DB0    $1779   JP       $779            ; Jump to 779
$DB2    $93B0   SNE      V3, VB          ; Skip if V3 != VB
$DB4    $6C44   LD       VC, #44         ; Load 68 into VC
$DB6    $9311   UNKNOWN  $9311           ; Unknown 9xxx instruction
$DB8    $3CC5   SE       VC, #C5         ; Skip if VC == 197
$DBA    $C85D   RND      V8, #5D         ; V8 = random & 5D
$DBC    $40C7   SNE      V0, #C7         ; Skip if V0 != 199
$DBE    $521A   UNKNOWN  $521A           ; Unknown 5xxx instruction
$DC0    $5AAF   UNKNOWN  $5AAF           ; Unknown 5xxx instruction
$DC2    $0F5A   SYS      $F5A            ; System call to F5A
$DC4    $1E46   JP       $E46            ; Jump to E46
$DC6    $6BC1   LD       VB, #C1         ; Load 193 into VB
$DC8    $BD98   JP       V0, $D98        ; Jump to V0 + D98
$DCA    $0307   SYS      $307            ; System call to 307
$DCC    $64FC   LD       V4, #FC         ; Load 252 into V4
$DCE    $E01D   UNKNOWN  $E01D           ; Unknown Exxx instruction
$DD0    $B9F9   JP       V0, $9F9        ; Jump to V0 + 9F9
$DD2    $E5F1   UNKNOWN  $E5F1           ; Unknown Exxx instruction
$DD4    $1053   JP       $053            ; Jump to 053
$DD6    $50A2   UNKNOWN  $50A2           ; Unknown 5xxx instruction
$DD8    $C464   RND      V4, #64         ; V4 = random & 64
$DDA    $094D   SYS      $94D            ; System call to 94D
$DDC    $0344   SYS      $344            ; System call to 344
$DDE    $64CC   LD       V4, #CC         ; Load 204 into V4
$DE0    $C1B2   RND      V1, #B2         ; V1 = random & B2
$DE2    $792B   ADD      V9, #2B         ; Add 43 to V9
$DE4    $46DE   SNE      V6, #DE         ; Skip if V6 != 222
$DE6    $1BEE   JP       $BEE            ; Jump to BEE
$DE8    $3869   SE       V8, #69         ; Skip if V8 == 105
$DEA    $6F14   LD       VF, #14         ; Load 20 into VF
$DEC    $F6A3   UNKNOWN  F6A3            ; Unknown Fxxx instruction
$DEE    $BE9A   JP       V0, $E9A        ; Jump to V0 + E9A
$DF0    $8573   XOR      V5, V7          ; V5 ^= V7
$DF2    $F171   UNKNOWN  F171            ; Unknown Fxxx instruction
$DF4    $A6C3   LD       I, $6C3         ; Load 6C3 into I
$DF6    $0334   SYS      $334            ; System call to 334
$DF8    $99F1   UNKNOWN  $99F1           ; Unknown 9xxx instruction
$DFA    $58EA   UNKNOWN  $58EA           ; Unknown 5xxx instruction
$DFC    $7EA6   ADD      VE, #A6         ; Add 166 to VE
$DFE    $9444   UNKNOWN  $9444           ; Unknown 9xxx instruction
$E00    $2264   CALL     $264            ; Call subroutine at 264
$E02    $5965   UNKNOWN  $5965           ; Unknown 5xxx instruction
$E04    $19A9   JP       $9A9            ; Jump to 9A9
$E06    $3665   SE       V6, #65         ; Skip if V6 == 101
$E08    $A5BB   LD       I, $5BB         ; Load 5BB into I
$E0A    $71F9   ADD      V1, #F9         ; Add 249 to V1
$E0C    $A38C   LD       I, $38C         ; Load 38C into I
$E0E    $875A   UNKNOWN  875A            ; Unknown 8xxx instruction
$E10    $D9DA   DRW      V9, VD, #A      ; Draw 10-byte sprite at V9, VD
$E12    $26B1   CALL     $6B1            ; Call subroutine at 6B1
$E14    $14E9   JP       $4E9            ; Jump to 4E9
$E16    $B461   JP       V0, $461        ; Jump to V0 + 461
$E18    $BA64   JP       V0, $A64        ; Jump to V0 + A64
$E1A    $A65D   LD       I, $65D         ; Load 65D into I
$E1C    $8134   ADD      V1, V3          ; V1 += V3, VF = carry
$E1E    $6CD9   LD       VC, #D9         ; Load 217 into VC
$E20    $A6EA   LD       I, $6EA         ; Load 6EA into I
$E22    $59F2   UNKNOWN  $59F2           ; Unknown 5xxx instruction
$E24    $54A0   SE       V4, VA          ; Skip if V4 == VA
$E26    $E0BE   UNKNOWN  $E0BE           ; Unknown Exxx instruction
$E28    $9AC9   UNKNOWN  $9AC9           ; Unknown 9xxx instruction
$E2A    $2C4E   CALL     $C4E            ; Call subroutine at C4E
$E2C    $424C   SNE      V2, #4C         ; Skip if V2 != 76
$E2E    $FB5D   UNKNOWN  FB5D            ; Unknown Fxxx instruction
$E30    $B984   JP       V0, $984        ; Jump to V0 + 984
$E32    $E705   UNKNOWN  $E705           ; Unknown Exxx instruction
$E34    $4E6C   SNE      VE, #6C         ; Skip if VE != 108
$E36    $91CB   UNKNOWN  $91CB           ; Unknown 9xxx instruction
$E38    $518A   UNKNOWN  $518A           ; Unknown 5xxx instruction
$E3A    $B196   JP       V0, $196        ; Jump to V0 + 196
$E3C    $51BA   UNKNOWN  $51BA           ; Unknown 5xxx instruction
$E3E    $D219   DRW      V2, V1, #9      ; Draw 9-byte sprite at V2, V1
$E40    $0DDD   SYS      $DDD            ; System call to DDD
$E42    $1BB3   JP       $BB3            ; Jump to BB3
$E44    $0A57   SYS      $A57            ; System call to A57
$E46    $C5B5   RND      V5, #B5         ; V5 = random & B5
$E48    $A6D1   LD       I, $6D1         ; Load 6D1 into I
$E4A    $A946   LD       I, $946         ; Load 946 into I
$E4C    $96DB   UNKNOWN  $96DB           ; Unknown 9xxx instruction
$E4E    $F807   LD       V8, DT          ; V8 = delay timer
$E50    $044C   SYS      $44C            ; System call to 44C
$E52    $B458   JP       V0, $458        ; Jump to V0 + 458
$E54    $4E41   SNE      VE, #41         ; Skip if VE != 65
$E56    $07B4   SYS      $7B4            ; System call to 7B4
$E58    $E724   UNKNOWN  $E724           ; Unknown Exxx instruction
$E5A    $9ABD   UNKNOWN  $9ABD           ; Unknown 9xxx instruction
$E5C    $E882   UNKNOWN  $E882           ; Unknown Exxx instruction
$E5E    $8A6E   SHL      VA              ; VA <<= 1, VF = MSB
$E60    $DF27   DRW      VF, V2, #7      ; Draw 7-byte sprite at VF, V2
$E62    $AAC0   LD       I, $AC0         ; Load AC0 into I
$E64    $E03C   UNKNOWN  $E03C           ; Unknown Exxx instruction
$E66    $CF9A   RND      VF, #9A         ; VF = random & 9A
$E68    $14CD   JP       $4CD            ; Jump to 4CD
$E6A    $F13D   UNKNOWN  F13D            ; Unknown Fxxx instruction
$E6C    $DD54   DRW      VD, V5, #4      ; Draw 4-byte sprite at VD, V5
$E6E    $1CEB   JP       $CEB            ; Jump to CEB
$E70    $A18E   LD       I, $18E         ; Load 18E into I
$E72    $50D2   UNKNOWN  $50D2           ; Unknown 5xxx instruction
$E74    $B0C3   JP       V0, $0C3        ; Jump to V0 + 0C3
$E76    $30E7   SE       V0, #E7         ; Skip if V0 == 231
$E78    $5ECE   UNKNOWN  $5ECE           ; Unknown 5xxx instruction
$E7A    $6D64   LD       VD, #64         ; Load 100 into VD
$E7C    $22AC   CALL     $2AC            ; Call subroutine at 2AC
$E7E    $EE67   UNKNOWN  $EE67           ; Unknown Exxx instruction
$E80    $AF9A   LD       I, $F9A         ; Load F9A into I
$E82    $2226   CALL     $226            ; Call subroutine at 226
$E84    $22F5   CALL     $2F5            ; Call subroutine at 2F5
$E86    $23F8   CALL     $3F8            ; Call subroutine at 3F8
$E88    $A5B6   LD       I, $5B6         ; Load 5B6 into I
$E8A    $1254   JP       $254            ; Jump to 254
$E8C    $D79C   DRW      V7, V9, #C      ; Draw 12-byte sprite at V7, V9
$E8E    $5E8C   UNKNOWN  $5E8C           ; Unknown 5xxx instruction
$E90    $9E51   UNKNOWN  $9E51           ; Unknown 9xxx instruction
$E92    $D5A8   DRW      V5, VA, #8      ; Draw 8-byte sprite at V5, VA
$E94    $181F   JP       $81F            ; Jump to 81F
$E96    $6EF5   LD       VE, #F5         ; Load 245 into VE
$E98    $743F   ADD      V4, #3F         ; Add 63 to V4
$E9A    $F7FE   UNKNOWN  F7FE            ; Unknown Fxxx instruction
$E9C    $F26F   UNKNOWN  F26F            ; Unknown Fxxx instruction
$E9E    $2A0C   CALL     $A0C            ; Call subroutine at A0C
$EA0    $D732   DRW      V7, V3, #2      ; Draw 2-byte sprite at V7, V3
$EA2    $39E3   SE       V9, #E3         ; Skip if V9 == 227
$EA4    $074B   SYS      $74B            ; System call to 74B
$EA6    $AA9A   LD       I, $A9A         ; Load A9A into I
$EA8    $3F36   SE       VF, #36         ; Skip if VF == 54
$EAA    $CA61   RND      VA, #61         ; VA = random & 61
$EAC    $F232   UNKNOWN  F232            ; Unknown Fxxx instruction
$EAE    $B486   JP       V0, $486        ; Jump to V0 + 486
$EB0    $6C61   LD       VC, #61         ; Load 97 into VC
$EB2    $32D2   SE       V2, #D2         ; Skip if V2 == 210
$EB4    $98B3   UNKNOWN  $98B3           ; Unknown 9xxx instruction
$EB6    $7062   ADD      V0, #62         ; Add 98 to V0
$EB8    $E2BF   UNKNOWN  $E2BF           ; Unknown Exxx instruction
$EBA    $C470   RND      V4, #70         ; V4 = random & 70
$EBC    $71D4   ADD      V1, #D4         ; Add 212 to V1
$EBE    $9D6A   UNKNOWN  $9D6A           ; Unknown 9xxx instruction
$EC0    $B0E9   JP       V0, $0E9        ; Jump to V0 + 0E9
$EC2    $8267   SUBN     V2, V6          ; V2 = V6 - V2, VF = !borrow
$EC4    $97AA   UNKNOWN  $97AA           ; Unknown 9xxx instruction
$EC6    $5A34   UNKNOWN  $5A34           ; Unknown 5xxx instruction
$EC8    $BFFF   JP       V0, $FFF        ; Jump to V0 + FFF
$ECA    $BA54   JP       V0, $A54        ; Jump to V0 + A54
$ECC    $C837   RND      V8, #37         ; V8 = random & 37
$ECE    $FBDE   UNKNOWN  FBDE            ; Unknown Fxxx instruction
$ED0    $0375   SYS      $375            ; System call to 375
$ED2    $6780   LD       V7, #80         ; Load 128 into V7
$ED4    $273E   CALL     $73E            ; Call subroutine at 73E
$ED6    $3073   SE       V0, #73         ; Skip if V0 == 115
$ED8    $2CD4   CALL     $CD4            ; Call subroutine at CD4
$EDA    $0B3E   SYS      $B3E            ; System call to B3E
$EDC    $A9DF   LD       I, $9DF         ; Load 9DF into I
$EDE    $4CC6   SNE      VC, #C6         ; Skip if VC != 198
$EE0    $E837   UNKNOWN  $E837           ; Unknown Exxx instruction
$EE2    $066B   SYS      $66B            ; System call to 66B
$EE4    $9F27   UNKNOWN  $9F27           ; Unknown 9xxx instruction
$EE6    $3A2E   SE       VA, #2E         ; Skip if VA == 46
$EE8    $E97E   UNKNOWN  $E97E           ; Unknown Exxx instruction
$EEA    $1E62   JP       $E62            ; Jump to E62
$EEC    $9353   UNKNOWN  $9353           ; Unknown 9xxx instruction
$EEE    $91C2   UNKNOWN  $91C2           ; Unknown 9xxx instruction
$EF0    $B820   JP       V0, $820        ; Jump to V0 + 820
$EF2    $0D22   SYS      $D22            ; System call to D22
$EF4    $6BA1   LD       VB, #A1         ; Load 161 into VB
$EF6    $920C   UNKNOWN  $920C           ; Unknown 9xxx instruction
$EF8    $4B30   SNE      VB, #30         ; Skip if VB != 48
$EFA    $8633   XOR      V6, V3          ; V6 ^= V3
$EFC    $CBB4   RND      VB, #B4         ; VB = random & B4
$EFE    $D7BD   DRW      V7, VB, #D      ; Draw 13-byte sprite at V7, VB
$F00    $CAE7   RND      VA, #E7         ; VA = random & E7
$F02    $0ACD   SYS      $ACD            ; System call to ACD
$F04    $DDA4   DRW      VD, VA, #4      ; Draw 4-byte sprite at VD, VA
$F06    $36D7   SE       V6, #D7         ; Skip if V6 == 215
$F08    $6B58   LD       VB, #58         ; Load 88 into VB
$F0A    $0C4B   SYS      $C4B            ; System call to C4B
$F0C    $8C08   UNKNOWN  8C08            ; Unknown 8xxx instruction
$F0E    $9670   SNE      V6, V7          ; Skip if V6 != V7
$F10    $EB46   UNKNOWN  $EB46           ; Unknown Exxx instruction
$F12    $0446   SYS      $446            ; System call to 446
$F14    $385D   SE       V8, #5D         ; Skip if V8 == 93
$F16    $2E3D   CALL     $E3D            ; Call subroutine at E3D
$F18    $2211   CALL     $211            ; Call subroutine at 211
$F1A    $E172   UNKNOWN  $E172           ; Unknown Exxx instruction
$F1C    $EB11   UNKNOWN  $EB11           ; Unknown Exxx instruction
$F1E    $B5F7   JP       V0, $5F7        ; Jump to V0 + 5F7
$F20    $DB0A   DRW      VB, V0, #A      ; Draw 10-byte sprite at VB, V0
$F22    $B750   JP       V0, $750        ; Jump to V0 + 750
$F24    $1FFF   JP       $FFF            ; Jump to FFF
$F26    $7071   ADD      V0, #71         ; Add 113 to V0
$F28    $A69F   LD       I, $69F         ; Load 69F into I
$F2A    $08C5   SYS      $8C5            ; System call to 8C5
$F2C    $6B93   LD       VB, #93         ; Load 147 into VB
$F2E    $15A0   JP       $5A0            ; Jump to 5A0
$F30    $0E9E   SYS      $E9E            ; System call to E9E
$F32    $2BCD   CALL     $BCD            ; Call subroutine at BCD
$F34    $CEEE   RND      VE, #EE         ; VE = random & EE
$F36    $4E22   SNE      VE, #22         ; Skip if VE != 34
$F38    $3A6C   SE       VA, #6C         ; Skip if VA == 108
$F3A    $01DF   SYS      $1DF            ; System call to 1DF
$F3C    $2DB3   CALL     $DB3            ; Call subroutine at DB3
$F3E    $E944   UNKNOWN  $E944           ; Unknown Exxx instruction
$F40    $9F97   UNKNOWN  $9F97           ; Unknown 9xxx instruction
$F42    $01FB   SYS      $1FB            ; System call to 1FB
$F44    $AA7B   LD       I, $A7B         ; Load A7B into I
$F46    $3EC7   SE       VE, #C7         ; Skip if VE == 199
$F48    $00AF   SYS      $0AF            ; System call to 0AF
$F4A    $B9F2   JP       V0, $9F2        ; Jump to V0 + 9F2
$F4C    $253D   CALL     $53D            ; Call subroutine at 53D
$F4E    $03CD   SYS      $3CD            ; System call to 3CD
$F50    $D90F   DRW      V9, V0, #F      ; Draw 15-byte sprite at V9, V0
$F52    $CD34   RND      VD, #34         ; VD = random & 34
$F54    $336C   SE       V3, #6C         ; Skip if V3 == 108
$F56    $F7AD   UNKNOWN  F7AD            ; Unknown Fxxx instruction
$F58    $3592   SE       V5, #92         ; Skip if V5 == 146
$F5A    $15D7   JP       $5D7            ; Jump to 5D7
$F5C    $054D   SYS      $54D            ; System call to 54D
$F5E    $B403   JP       V0, $403        ; Jump to V0 + 403
$F60    $9CA9   UNKNOWN  $9CA9           ; Unknown 9xxx instruction
$F62    $DE08   DRW      VE, V0, #8      ; Draw 8-byte sprite at VE, V0
$F64    $438C   SNE      V3, #8C         ; Skip if V3 != 140
$F66    $1A74   JP       $A74            ; Jump to A74
$F68    $0568   SYS      $568            ; System call to 568
$F6A    $7706   ADD      V7, #06         ; Add 6 to V7
$F6C    $1235   JP       $235            ; Jump to 235
$F6E    $402A   SNE      V0, #2A         ; Skip if V0 != 42
$F70    $10D1   JP       $0D1            ; Jump to 0D1
$F72    $EA4B   UNKNOWN  $EA4B           ; Unknown Exxx instruction
$F74    $124E   JP       $24E            ; Jump to 24E
$F76    $575F   UNKNOWN  $575F           ; Unknown 5xxx instruction
$F78    $A8D2   LD       I, $8D2         ; Load 8D2 into I
$F7A    $A1D4   LD       I, $1D4         ; Load 1D4 into I
$F7C    $42F7   SNE      V2, #F7         ; Skip if V2 != 247
$F7E    $2F4F   CALL     $F4F            ; Call subroutine at F4F
$F80    $B72E   JP       V0, $72E        ; Jump to V0 + 72E
$F82    $6F91   LD       VF, #91         ; Load 145 into VF
$F84    $59D6   UNKNOWN  $59D6           ; Unknown 5xxx instruction
$F86    $B073   JP       V0, $073        ; Jump to V0 + 073
$F88    $D672   DRW      V6, V7, #2      ; Draw 2-byte sprite at V6, V7
$F8A    $D3E2   DRW      V3, VE, #2      ; Draw 2-byte sprite at V3, VE
$F8C    $4DC2   SNE      VD, #C2         ; Skip if VD != 194
$F8E    $0BD5   SYS      $BD5            ; System call to BD5
$F90    $E549   UNKNOWN  $E549           ; Unknown Exxx instruction
$F92    $9677   UNKNOWN  $9677           ; Unknown 9xxx instruction
$F94    $B315   JP       V0, $315        ; Jump to V0 + 315
$F96    $78F5   ADD      V8, #F5         ; Add 245 to V8
$F98    $DFAB   DRW      VF, VA, #B      ; Draw 11-byte sprite at VF, VA
$F9A    $AA0F   LD       I, $A0F         ; Load A0F into I
$F9C    $FB26   UNKNOWN  FB26            ; Unknown Fxxx instruction
$F9E    $9423   UNKNOWN  $9423           ; Unknown 9xxx instruction
$FA0    $C2D0   RND      V2, #D0         ; V2 = random & D0
$FA2    $1DDC   JP       $DDC            ; Jump to DDC
$FA4    $413A   SNE      V1, #3A         ; Skip if V1 != 58
$FA6    $2B32   CALL     $B32            ; Call subroutine at B32
$FA8    $19B9   JP       $9B9            ; Jump to 9B9
$FAA    $6C64   LD       VC, #64         ; Load 100 into VC
$FAC    $AD48   LD       I, $D48         ; Load D48 into I
$FAE    $9829   UNKNOWN  $9829           ; Unknown 9xxx instruction
$FB0    $958C   UNKNOWN  $958C           ; Unknown 9xxx instruction
$FB2    $E871   UNKNOWN  $E871           ; Unknown Exxx instruction
$FB4    $52A8   UNKNOWN  $52A8           ; Unknown 5xxx instruction
$FB6    $A75B   LD       I, $75B         ; Load 75B into I
$FB8    $96EF   UNKNOWN  $96EF           ; Unknown 9xxx instruction
$FBA    $2CF7   CALL     $CF7            ; Call subroutine at CF7
$FBC    $B1DD   JP       V0, $1DD        ; Jump to V0 + 1DD
$FBE    $AD14   LD       I, $D14         ; Load D14 into I
$FC0    $43B8   SNE      V3, #B8         ; Skip if V3 != 184
$FC2    $D52F   DRW      V5, V2, #F      ; Draw 15-byte sprite at V5, V2
$FC4    $CDB1   RND      VD, #B1         ; VD = random & B1
$FC6    $F42E   UNKNOWN  F42E            ; Unknown Fxxx instruction
$FC8    $E8BD   UNKNOWN  $E8BD           ; Unknown Exxx instruction
$FCA    $B4BB   JP       V0, $4BB        ; Jump to V0 + 4BB
$FCC    $9A30   SNE      VA, V3          ; Skip if VA != V3
$FCE    $E2F3   UNKNOWN  $E2F3           ; Unknown Exxx instruction
$FD0    $B968   JP       V0, $968        ; Jump to V0 + 968
$FD2    $6844   LD       V8, #44         ; Load 68 into V8
$FD4    $116D   JP       $16D            ; Jump to 16D
$FD6    $DCF2   DRW      VC, VF, #2      ; Draw 2-byte sprite at VC, VF
$FD8    $F2BB   UNKNOWN  F2BB            ; Unknown Fxxx instruction
$FDA    $9967   UNKNOWN  $9967           ; Unknown 9xxx instruction
$FDC    $F554   UNKNOWN  F554            ; Unknown Fxxx instruction
$FDE    $844E   SHL      V4              ; V4 <<= 1, VF = MSB
$FE0    $8294   ADD      V2, V9          ; V2 += V9, VF = carry
$FE2    $4C2D   SNE      VC, #2D         ; Skip if VC != 45
$FE4    $3012   SE       V0, #12         ; Skip if V0 == 18
$FE6    $4741   SNE      V7, #41         ; Skip if V7 != 65
$FE8    $97F8   UNKNOWN  $97F8           ; Unknown 9xxx instruction
$FEA    $97A9   UNKNOWN  $97A9           ; Unknown 9xxx instruction
$FEC    $A225   LD       I, $225         ; Load 225 into I
$FEE    $3777   SE       V7, #77         ; Skip if V7 == 119
$FF0    $7F15   ADD      VF, #15         ; Add 21 to VF
$FF2    $1930   JP       $930            ; Jump to 930
$FF4    $A2CB   LD       I, $2CB         ; Load 2CB into I
$FF6    $8C86   SHR      VC              ; VC >>= 1, VF = LSB
$FF8    $F56A   UNKNOWN  F56A            ; Unknown Fxxx instruction
$FFA    $98E5   UNKNOWN  $98E5           ; Unknown 9xxx instruction
$FFC    $2080   CALL     $080            ; Call subroutine at 080
$FFE    $4AA7   SNE      VA, #A7         ; Skip if VA != 167

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 486 (27.1%)
  JP      : 251 (14.0%)
  LD      : 222 (12.4%)
  SNE     : 135 ( 7.5%)
  SYS     : 115 ( 6.4%)
  ADD     : 112 ( 6.3%)
  SE      : 108 ( 6.0%)
  CALL    : 105 ( 5.9%)
  DRW     : 103 ( 5.8%)
  RND     :  97 ( 5.4%)
  XOR     :  12 ( 0.7%)
  SUBN    :  11 ( 0.6%)
  SHR     :  10 ( 0.6%)
  SHL     :   8 ( 0.4%)
  AND     :   6 ( 0.3%)
  SUB     :   5 ( 0.3%)
  OR      :   3 ( 0.2%)
  SKP     :   2 ( 0.1%)

Memory Operations: 334 (18.6%)
Arithmetic Operations: 149 (8.3%)
