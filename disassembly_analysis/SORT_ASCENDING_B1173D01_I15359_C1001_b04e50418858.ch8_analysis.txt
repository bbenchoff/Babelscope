
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B1173D01_I15359_C1001_b04e50418858.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 1173
Instance: 15359
Direction: ascending
Final Array: [0, 9, 9, 16, 65, 94, 215, 245]
Operations: R:0 W:1 C:37 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 117
Sort Array References:
  $20A: LD I, $C75 ; Load C75 into I
  $21C: LD I, $A2D ; Load A2D into I
  $228: LD I, $A35 ; Load A35 into I
  $252: LD I, $A5F ; Load A5F into I
  $284: LD I, $6CA ; Load 6CA into I
  $290: LD I, $92C ; Load 92C into I
  $2CC: LD I, $E1A ; Load E1A into I
  $2F4: LD I, $323 ; Load 323 into I
  $370: LD I, $F48 ; Load F48 into I
  $37C: LD I, $2D8 ; Load 2D8 into I
  $3C2: LD I, $8E8 ; Load 8E8 into I
  $3DC: LD I, $73A ; Load 73A into I
  $3F6: LD I, $A6A ; Load A6A into I
  $418: LD I, $281 ; Load 281 into I
  $43A: LD I, $507 ; Load 507 into I
  $456: LD I, $628 ; Load 628 into I
  $506: LD I, $238 ; Load 238 into I
  $55E: LD I, $9D1 ; Load 9D1 into I
  $56C: LD I, $4F9 ; Load 4F9 into I
  $57A: LD I, $C45 ; Load C45 into I
  $59C: LD I, $5FE ; Load 5FE into I
  $5C4: LD I, $79E ; Load 79E into I
  $5F0: LD I, $A06 ; Load A06 into I
  $5FC: LD I, $382 ; Load 382 into I
  $610: LD I, $12F ; Load 12F into I
  $63C: LD I, $56D ; Load 56D into I
  $640: LD I, $269 ; Load 269 into I
  $67E: LD I, $F31 ; Load F31 into I
  $6A4: LD I, $464 ; Load 464 into I
  $6AC: LD I, $C78 ; Load C78 into I
  $6B6: LD I, $F7C ; Load F7C into I
  $6C0: LD I, $6D4 ; Load 6D4 into I
  $6E2: LD I, $D11 ; Load D11 into I
  $6EA: LD I, $115 ; Load 115 into I
  $6F6: LD I, $DF9 ; Load DF9 into I
  $71C: LD I, $940 ; Load 940 into I
  $746: LD I, $4CE ; Load 4CE into I
  $748: LD I, $F91 ; Load F91 into I
  $758: LD I, $355 ; Load 355 into I
  $768: LD I, $659 ; Load 659 into I
  $774: LD I, $CC5 ; Load CC5 into I
  $77A: LD I, $B5B ; Load B5B into I
  $780: LD I, $30F ; Load 30F into I
  $7A4: LD I, $723 ; Load 723 into I
  $7B6: LD I, $B4A ; Load B4A into I
  $7BC: LD I, $E6A ; Load E6A into I
  $7F4: LD I, $B66 ; Load B66 into I
  $80A: LD I, $DE1 ; Load DE1 into I
  $832: LD I, $4AF ; Load 4AF into I
  $84E: LD I, $7E7 ; Load 7E7 into I
  $850: LD I, $940 ; Load 940 into I
  $854: LD I, $0B5 ; Load 0B5 into I
  $85A: LD I, $351 ; Load 351 into I
  $864: LD I, $778 ; Load 778 into I
  $86C: LD I, $EAE ; Load EAE into I
  $884: LD I, $3E7 ; Load 3E7 into I
  $8F8: LD I, $21E ; Load 21E into I
  $964: LD I, $208 ; Load 208 into I
  $97C: LD I, $44A ; Load 44A into I
  $990: LD I, $CAA ; Load CAA into I
  $992: LD I, $23E ; Load 23E into I
  $99A: LD I, $F25 ; Load F25 into I
  $A06: LD I, $ADD ; Load ADD into I
  $A18: LD I, $E06 ; Load E06 into I
  $A30: LD I, $5F5 ; Load 5F5 into I
  $A32: LD I, $EB8 ; Load EB8 into I
  $A34: LD I, $11E ; Load 11E into I
  $A74: LD I, $02F ; Load 02F into I
  $A86: LD I, $C8E ; Load C8E into I
  $AA4: LD I, $904 ; Load 904 into I
  $AAC: LD I, $EF1 ; Load EF1 into I
  $ACC: LD I, $894 ; Load 894 into I
  $AEA: LD I, $9DF ; Load 9DF into I
  $AF0: LD I, $4FF ; Load 4FF into I
  $AFE: LD I, $69A ; Load 69A into I
  $B24: LD I, $A3B ; Load A3B into I
  $B58: LD I, $18A ; Load 18A into I
  $B66: LD I, $528 ; Load 528 into I
  $B94: LD I, $CCC ; Load CCC into I
  $BA2: LD I, $E1C ; Load E1C into I
  $BCC: LD I, $B15 ; Load B15 into I
  $C2E: LD I, $09B ; Load 09B into I
  $C30: LD I, $FB0 ; Load FB0 into I
  $C42: LD I, $958 ; Load 958 into I
  $C7E: LD I, $952 ; Load 952 into I
  $C9E: LD I, $B37 ; Load B37 into I
  $CA2: LD I, $200 ; Load 200 into I
  $CAA: LD I, $191 ; Load 191 into I
  $CAC: ADD I, V5 ; I ADDRESS MANIPULATION
  $CD2: LD I, $6FF ; Load 6FF into I
  $CDA: LD I, $919 ; Load 919 into I
  $CDE: LD I, $8FA ; Load 8FA into I
  $CEA: LD I, $6CA ; Load 6CA into I
  $D2A: LD I, $E67 ; Load E67 into I
  $D2E: LD I, $612 ; Load 612 into I
  $D3E: LD I, $C26 ; Load C26 into I
  $D92: LD I, $7A8 ; Load 7A8 into I
  $D98: LD I, $B99 ; Load B99 into I
  $E08: LD I, $762 ; Load 762 into I
  $E16: LD I, $CB7 ; Load CB7 into I
  $E24: LD I, $32B ; Load 32B into I
  $E2C: LD I, $83D ; Load 83D into I
  $E30: LD I, $D09 ; Load D09 into I
  $E38: LD I, $E88 ; Load E88 into I
  $E48: LD I, $73D ; Load 73D into I
  $E5A: LD I, $5D8 ; Load 5D8 into I
  $EAE: LD I, $E8A ; Load E8A into I
  $EE6: LD I, $767 ; Load 767 into I
  $EF4: LD I, $D3F ; Load D3F into I
  $EFE: LD I, $A4A ; Load A4A into I
  $F2C: LD I, $258 ; Load 258 into I
  $F3A: LD I, $7A0 ; Load 7A0 into I
  $F4A: LD I, $529 ; Load 529 into I
  $F64: LD I, $6CA ; Load 6CA into I
  $F7C: LD I, $BC0 ; Load BC0 into I
  $F88: LD I, $C4F ; Load C4F into I
  $FD6: LD I, $677 ; Load 677 into I

CONTROL FLOW ANALYSIS:
Jumps: 239
Calls: 116
Branches: 240
Loops: 135
Loop Structures:
  $204 -> $17C (backward jump)
  $23E -> $111 (backward jump)
  $278 -> $243 (backward jump)
  $2D8 -> $133 (backward jump)
  $2DC -> $0F2 (backward jump)
  $2E4 -> $228 (backward jump)
  $3B6 -> $33B (backward jump)
  $3E6 -> $19D (backward jump)
  $3FC -> $389 (backward jump)
  $43E -> $1C2 (backward jump)
  $476 -> $27B (backward jump)
  $4A0 -> $41F (backward jump)
  $4B0 -> $3B1 (backward jump)
  $4B6 -> $294 (backward jump)
  $4C6 -> $0A6 (backward jump)
  $4EC -> $230 (backward jump)
  $4F8 -> $107 (backward jump)
  $53C -> $307 (backward jump)
  $546 -> $14D (backward jump)
  $566 -> $222 (backward jump)
  $584 -> $29B (backward jump)
  $588 -> $038 (backward jump)
  $5AE -> $363 (backward jump)
  $5B4 -> $41B (backward jump)
  $5F2 -> $537 (backward jump)
  $60A -> $5A6 (backward jump)
  $650 -> $31D (backward jump)
  $69C -> $556 (backward jump)
  $69E -> $50C (backward jump)
  $6A6 -> $365 (backward jump)
  $6AA -> $2AE (backward jump)
  $6CA -> $297 (backward jump)
  $6E4 -> $1D0 (backward jump)
  $72A -> $654 (backward jump)
  $75C -> $3DF (backward jump)
  $76C -> $72B (backward jump)
  $79C -> $2C9 (backward jump)
  $7AE -> $71D (backward jump)
  $7E6 -> $1BC (backward jump)
  $802 -> $5F5 (backward jump)
  $82E -> $2E8 (backward jump)
  $84A -> $7D8 (backward jump)
  $924 -> $2B4 (backward jump)
  $980 -> $0CD (backward jump)
  $98E -> $479 (backward jump)
  $9A4 -> $0CC (backward jump)
  $9BE -> $4C9 (backward jump)
  $9DC -> $3D2 (backward jump)
  $9E2 -> $3EE (backward jump)
  $9E4 -> $10C (backward jump)
  $9FA -> $93D (backward jump)
  $A3C -> $40E (backward jump)
  $A44 -> $07D (backward jump)
  $A56 -> $723 (backward jump)
  $A60 -> $29B (backward jump)
  $A7C -> $644 (backward jump)
  $A7E -> $2AC (backward jump)
  $AB2 -> $690 (backward jump)
  $AB8 -> $808 (backward jump)
  $AC0 -> $95C (backward jump)
  $AF8 -> $56F (backward jump)
  $B0A -> $30C (backward jump)
  $B16 -> $7B0 (backward jump)
  $B30 -> $24D (backward jump)
  $B98 -> $6D7 (backward jump)
  $BB2 -> $912 (backward jump)
  $BBC -> $7B4 (backward jump)
  $BD6 -> $22B (backward jump)
  $BE2 -> $1FD (backward jump)
  $BF8 -> $365 (backward jump)
  $C1A -> $A2C (backward jump)
  $C4E -> $402 (backward jump)
  $C70 -> $2A4 (backward jump)
  $C74 -> $363 (backward jump)
  $C8E -> $747 (backward jump)
  $C90 -> $1E8 (backward jump)
  $CA4 -> $522 (backward jump)
  $CAE -> $0CA (backward jump)
  $CB4 -> $65A (backward jump)
  $CC6 -> $653 (backward jump)
  $CD6 -> $605 (backward jump)
  $CEE -> $BCC (backward jump)
  $CF2 -> $90B (backward jump)
  $CF8 -> $AD7 (backward jump)
  $D0C -> $9A6 (backward jump)
  $D10 -> $96E (backward jump)
  $D12 -> $409 (backward jump)
  $D16 -> $C36 (backward jump)
  $D20 -> $031 (backward jump)
  $D32 -> $AA1 (backward jump)
  $D34 -> $062 (backward jump)
  $D38 -> $616 (backward jump)
  $D5C -> $B3F (backward jump)
  $D6C -> $1D2 (backward jump)
  $D6E -> $511 (backward jump)
  $D7C -> $5D0 (backward jump)
  $D8C -> $340 (backward jump)
  $DA0 -> $50D (backward jump)
  $DA6 -> $6DE (backward jump)
  $DBE -> $D13 (backward jump)
  $DC8 -> $582 (backward jump)
  $DF6 -> $9CA (backward jump)
  $DF8 -> $A2E (backward jump)
  $E28 -> $9B5 (backward jump)
  $E3C -> $3B8 (backward jump)
  $E70 -> $0D2 (backward jump)
  $E7C -> $B03 (backward jump)
  $E88 -> $451 (backward jump)
  $E96 -> $3E4 (backward jump)
  $E9C -> $A43 (backward jump)
  $EAC -> $D17 (backward jump)
  $EB6 -> $DC6 (backward jump)
  $ECC -> $873 (backward jump)
  $ED2 -> $038 (backward jump)
  $EDA -> $025 (backward jump)
  $F0E -> $B0D (backward jump)
  $F12 -> $1DC (backward jump)
  $F14 -> $990 (backward jump)
  $F24 -> $AEF (backward jump)
  $F3C -> $A60 (backward jump)
  $F40 -> $2B0 (backward jump)
  $F5A -> $78F (backward jump)
  $F60 -> $380 (backward jump)
  $F6E -> $C05 (backward jump)
  $F74 -> $E56 (backward jump)
  $F82 -> $ED0 (backward jump)
  $F90 -> $DE6 (backward jump)
  $F94 -> $54D (backward jump)
  $F96 -> $C65 (backward jump)
  $F98 -> $74E (backward jump)
  $FA0 -> $4FF (backward jump)
  $FB8 -> $B92 (backward jump)
  $FBA -> $ED5 (backward jump)
  $FCA -> $BEB (backward jump)
  $FE6 -> $66E (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $C3BC   RND      V3, #BC         ; V3 = random & BC
$202    $514C   UNKNOWN  $514C           ; Unknown 5xxx instruction
$204    $117C   JP       $17C            ; Jump to 17C
$206    $60FF   LD       V0, #FF         ; Load 255 into V0
$208    $64E9   LD       V4, #E9         ; Load 233 into V4
$20A    $AC75   LD       I, $C75         ; Load C75 into I
$20C    $4EC9   SNE      VE, #C9         ; Skip if VE != 201
$20E    $609F   LD       V0, #9F         ; Load 159 into V0
$210    $34E7   SE       V4, #E7         ; Skip if V4 == 231
$212    $1E25   JP       $E25            ; Jump to E25
$214    $53D5   UNKNOWN  $53D5           ; Unknown 5xxx instruction
$216    $07AF   SYS      $7AF            ; System call to 7AF
$218    $0F0B   SYS      $F0B            ; System call to F0B
$21A    $E175   UNKNOWN  $E175           ; Unknown Exxx instruction
$21C    $AA2D   LD       I, $A2D         ; Load A2D into I
$21E    $4188   SNE      V1, #88         ; Skip if V1 != 136
$220    $28C8   CALL     $8C8            ; Call subroutine at 8C8
$222    $0C59   SYS      $C59            ; System call to C59
$224    $BAF3   JP       V0, $AF3        ; Jump to V0 + AF3
$226    $2574   CALL     $574            ; Call subroutine at 574
$228    $AA35   LD       I, $A35         ; Load A35 into I
$22A    $041D   SYS      $41D            ; System call to 41D
$22C    $147E   JP       $47E            ; Jump to 47E
$22E    $8AD5   SUB      VA, VD          ; VA -= VD, VF = !borrow
$230    $6973   LD       V9, #73         ; Load 115 into V9
$232    $0133   SYS      $133            ; System call to 133
$234    $716F   ADD      V1, #6F         ; Add 111 to V1
$236    $C5F3   RND      V5, #F3         ; V5 = random & F3
$238    $4866   SNE      V8, #66         ; Skip if V8 != 102
$23A    $034E   SYS      $34E            ; System call to 34E
$23C    $880C   UNKNOWN  880C            ; Unknown 8xxx instruction
$23E    $1111   JP       $111            ; Jump to 111
$240    $7645   ADD      V6, #45         ; Add 69 to V6
$242    $C5B5   RND      V5, #B5         ; V5 = random & B5
$244    $BB62   JP       V0, $B62        ; Jump to V0 + B62
$246    $D9C6   DRW      V9, VC, #6      ; Draw 6-byte sprite at V9, VC
$248    $2B01   CALL     $B01            ; Call subroutine at B01
$24A    $9183   UNKNOWN  $9183           ; Unknown 9xxx instruction
$24C    $9037   UNKNOWN  $9037           ; Unknown 9xxx instruction
$24E    $227F   CALL     $27F            ; Call subroutine at 27F
$250    $7005   ADD      V0, #05         ; Add 5 to V0
$252    $AA5F   LD       I, $A5F         ; Load A5F into I
$254    $C6F3   RND      V6, #F3         ; V6 = random & F3
$256    $492A   SNE      V9, #2A         ; Skip if V9 != 42
$258    $3A5B   SE       VA, #5B         ; Skip if VA == 91
$25A    $2D84   CALL     $D84            ; Call subroutine at D84
$25C    $2A05   CALL     $A05            ; Call subroutine at A05
$25E    $3EF8   SE       VE, #F8         ; Skip if VE == 248
$260    $57C5   UNKNOWN  $57C5           ; Unknown 5xxx instruction
$262    $EF87   UNKNOWN  $EF87           ; Unknown Exxx instruction
$264    $F435   UNKNOWN  F435            ; Unknown Fxxx instruction
$266    $7C6C   ADD      VC, #6C         ; Add 108 to VC
$268    $9E4A   UNKNOWN  $9E4A           ; Unknown 9xxx instruction
$26A    $365E   SE       V6, #5E         ; Skip if V6 == 94
$26C    $5083   UNKNOWN  $5083           ; Unknown 5xxx instruction
$26E    $8C1B   UNKNOWN  8C1B            ; Unknown 8xxx instruction
$270    $0538   SYS      $538            ; System call to 538
$272    $2EFD   CALL     $EFD            ; Call subroutine at EFD
$274    $4EA9   SNE      VE, #A9         ; Skip if VE != 169
$276    $23C7   CALL     $3C7            ; Call subroutine at 3C7
$278    $1243   JP       $243            ; Jump to 243
$27A    $36D2   SE       V6, #D2         ; Skip if V6 == 210
$27C    $4466   SNE      V4, #66         ; Skip if V4 != 102
$27E    $99F1   UNKNOWN  $99F1           ; Unknown 9xxx instruction
$280    $FB45   UNKNOWN  FB45            ; Unknown Fxxx instruction
$282    $9A41   UNKNOWN  $9A41           ; Unknown 9xxx instruction
$284    $A6CA   LD       I, $6CA         ; Load 6CA into I
$286    $2955   CALL     $955            ; Call subroutine at 955
$288    $34A7   SE       V4, #A7         ; Skip if V4 == 167
$28A    $2602   CALL     $602            ; Call subroutine at 602
$28C    $1EC8   JP       $EC8            ; Jump to EC8
$28E    $C328   RND      V3, #28         ; V3 = random & 28
$290    $A92C   LD       I, $92C         ; Load 92C into I
$292    $C236   RND      V2, #36         ; V2 = random & 36
$294    $15EC   JP       $5EC            ; Jump to 5EC
$296    $92DA   UNKNOWN  $92DA           ; Unknown 9xxx instruction
$298    $9ACE   UNKNOWN  $9ACE           ; Unknown 9xxx instruction
$29A    $6DCA   LD       VD, #CA         ; Load 202 into VD
$29C    $9D80   SNE      VD, V8          ; Skip if VD != V8
$29E    $B5A0   JP       V0, $5A0        ; Jump to V0 + 5A0
$2A0    $B95E   JP       V0, $95E        ; Jump to V0 + 95E
$2A2    $1809   JP       $809            ; Jump to 809
$2A4    $0DFF   SYS      $DFF            ; System call to DFF
$2A6    $287B   CALL     $87B            ; Call subroutine at 87B
$2A8    $3E1E   SE       VE, #1E         ; Skip if VE == 30
$2AA    $1A10   JP       $A10            ; Jump to A10
$2AC    $8174   ADD      V1, V7          ; V1 += V7, VF = carry
$2AE    $5F5E   UNKNOWN  $5F5E           ; Unknown 5xxx instruction
$2B0    $F4B5   UNKNOWN  F4B5            ; Unknown Fxxx instruction
$2B2    $700D   ADD      V0, #0D         ; Add 13 to V0
$2B4    $3FA7   SE       VF, #A7         ; Skip if VF == 167
$2B6    $F8F6   UNKNOWN  F8F6            ; Unknown Fxxx instruction
$2B8    $DDA0   DRW      VD, VA, #0      ; Draw 0-byte sprite at VD, VA
$2BA    $0EC9   SYS      $EC9            ; System call to EC9
$2BC    $C7DA   RND      V7, #DA         ; V7 = random & DA
$2BE    $89E0   LD       V9, VE          ; V9 = VE
$2C0    $8FBA   UNKNOWN  8FBA            ; Unknown 8xxx instruction
$2C2    $4907   SNE      V9, #07         ; Skip if V9 != 7
$2C4    $67F3   LD       V7, #F3         ; Load 243 into V7
$2C6    $6EDF   LD       VE, #DF         ; Load 223 into VE
$2C8    $026D   SYS      $26D            ; System call to 26D
$2CA    $0464   SYS      $464            ; System call to 464
$2CC    $AE1A   LD       I, $E1A         ; Load E1A into I
$2CE    $72D1   ADD      V2, #D1         ; Add 209 to V2
$2D0    $F27F   UNKNOWN  F27F            ; Unknown Fxxx instruction
$2D2    $9A56   UNKNOWN  $9A56           ; Unknown 9xxx instruction
$2D4    $B40C   JP       V0, $40C        ; Jump to V0 + 40C
$2D6    $76A0   ADD      V6, #A0         ; Add 160 to V6
$2D8    $1133   JP       $133            ; Jump to 133
$2DA    $EA87   UNKNOWN  $EA87           ; Unknown Exxx instruction
$2DC    $10F2   JP       $0F2            ; Jump to 0F2
$2DE    $38CE   SE       V8, #CE         ; Skip if V8 == 206
$2E0    $404C   SNE      V0, #4C         ; Skip if V0 != 76
$2E2    $6A13   LD       VA, #13         ; Load 19 into VA
$2E4    $B228   JP       V0, $228        ; Jump to V0 + 228
$2E6    $9F38   UNKNOWN  $9F38           ; Unknown 9xxx instruction
$2E8    $D29D   DRW      V2, V9, #D      ; Draw 13-byte sprite at V2, V9
$2EA    $3FCC   SE       VF, #CC         ; Skip if VF == 204
$2EC    $892D   UNKNOWN  892D            ; Unknown 8xxx instruction
$2EE    $7F2D   ADD      VF, #2D         ; Add 45 to VF
$2F0    $7098   ADD      V0, #98         ; Add 152 to V0
$2F2    $415E   SNE      V1, #5E         ; Skip if V1 != 94
$2F4    $A323   LD       I, $323         ; Load 323 into I
$2F6    $C196   RND      V1, #96         ; V1 = random & 96
$2F8    $F53E   UNKNOWN  F53E            ; Unknown Fxxx instruction
$2FA    $8403   XOR      V4, V0          ; V4 ^= V0
$2FC    $26AB   CALL     $6AB            ; Call subroutine at 6AB
$2FE    $3276   SE       V2, #76         ; Skip if V2 == 118
$300    $0009   SYS      $009            ; System call to 009
$302    $0910   SYS      $910            ; System call to 910
$304    $415E   SNE      V1, #5E         ; Skip if V1 != 94
$306    $D7F5   DRW      V7, VF, #5      ; Draw 5-byte sprite at V7, VF
$308    $7367   ADD      V3, #67         ; Add 103 to V3
$30A    $EC11   UNKNOWN  $EC11           ; Unknown Exxx instruction
$30C    $C0C8   RND      V0, #C8         ; V0 = random & C8
$30E    $EE66   UNKNOWN  $EE66           ; Unknown Exxx instruction
$310    $D210   DRW      V2, V1, #0      ; Draw 0-byte sprite at V2, V1
$312    $5443   UNKNOWN  $5443           ; Unknown 5xxx instruction
$314    $2AA9   CALL     $AA9            ; Call subroutine at AA9
$316    $437A   SNE      V3, #7A         ; Skip if V3 != 122
$318    $D1C8   DRW      V1, VC, #8      ; Draw 8-byte sprite at V1, VC
$31A    $3646   SE       V6, #46         ; Skip if V6 == 70
$31C    $DA03   DRW      VA, V0, #3      ; Draw 3-byte sprite at VA, V0
$31E    $456B   SNE      V5, #6B         ; Skip if V5 != 107
$320    $57A3   UNKNOWN  $57A3           ; Unknown 5xxx instruction
$322    $FEBD   UNKNOWN  FEBD            ; Unknown Fxxx instruction
$324    $3308   SE       V3, #08         ; Skip if V3 == 8
$326    $4FFC   SNE      VF, #FC         ; Skip if VF != 252
$328    $5D5A   UNKNOWN  $5D5A           ; Unknown 5xxx instruction
$32A    $F487   UNKNOWN  F487            ; Unknown Fxxx instruction
$32C    $58D7   UNKNOWN  $58D7           ; Unknown 5xxx instruction
$32E    $7A58   ADD      VA, #58         ; Add 88 to VA
$330    $D9BC   DRW      V9, VB, #C      ; Draw 12-byte sprite at V9, VB
$332    $EF35   UNKNOWN  $EF35           ; Unknown Exxx instruction
$334    $C2BF   RND      V2, #BF         ; V2 = random & BF
$336    $D882   DRW      V8, V8, #2      ; Draw 2-byte sprite at V8, V8
$338    $54FB   UNKNOWN  $54FB           ; Unknown 5xxx instruction
$33A    $9AB3   UNKNOWN  $9AB3           ; Unknown 9xxx instruction
$33C    $5856   UNKNOWN  $5856           ; Unknown 5xxx instruction
$33E    $2AAF   CALL     $AAF            ; Call subroutine at AAF
$340    $6DEC   LD       VD, #EC         ; Load 236 into VD
$342    $62E9   LD       V2, #E9         ; Load 233 into V2
$344    $0C83   SYS      $C83            ; System call to C83
$346    $E6E6   UNKNOWN  $E6E6           ; Unknown Exxx instruction
$348    $085E   SYS      $85E            ; System call to 85E
$34A    $0210   SYS      $210            ; System call to 210
$34C    $6120   LD       V1, #20         ; Load 32 into V1
$34E    $E3D0   UNKNOWN  $E3D0           ; Unknown Exxx instruction
$350    $5354   UNKNOWN  $5354           ; Unknown 5xxx instruction
$352    $48F0   SNE      V8, #F0         ; Skip if V8 != 240
$354    $3173   SE       V1, #73         ; Skip if V1 == 115
$356    $C62C   RND      V6, #2C         ; V6 = random & 2C
$358    $55A1   UNKNOWN  $55A1           ; Unknown 5xxx instruction
$35A    $FA80   UNKNOWN  FA80            ; Unknown Fxxx instruction
$35C    $BA82   JP       V0, $A82        ; Jump to V0 + A82
$35E    $FFB4   UNKNOWN  FFB4            ; Unknown Fxxx instruction
$360    $4631   SNE      V6, #31         ; Skip if V6 != 49
$362    $82FF   UNKNOWN  82FF            ; Unknown 8xxx instruction
$364    $26A3   CALL     $6A3            ; Call subroutine at 6A3
$366    $1EF5   JP       $EF5            ; Jump to EF5
$368    $5A72   UNKNOWN  $5A72           ; Unknown 5xxx instruction
$36A    $1B97   JP       $B97            ; Jump to B97
$36C    $53CD   UNKNOWN  $53CD           ; Unknown 5xxx instruction
$36E    $1DD3   JP       $DD3            ; Jump to DD3
$370    $AF48   LD       I, $F48         ; Load F48 into I
$372    $9E6C   UNKNOWN  $9E6C           ; Unknown 9xxx instruction
$374    $98CB   UNKNOWN  $98CB           ; Unknown 9xxx instruction
$376    $1C44   JP       $C44            ; Jump to C44
$378    $5069   UNKNOWN  $5069           ; Unknown 5xxx instruction
$37A    $DB05   DRW      VB, V0, #5      ; Draw 5-byte sprite at VB, V0
$37C    $A2D8   LD       I, $2D8         ; Load 2D8 into I
$37E    $2C25   CALL     $C25            ; Call subroutine at C25
$380    $4B4A   SNE      VB, #4A         ; Skip if VB != 74
$382    $49AE   SNE      V9, #AE         ; Skip if V9 != 174
$384    $DECB   DRW      VE, VC, #B      ; Draw 11-byte sprite at VE, VC
$386    $80D8   UNKNOWN  80D8            ; Unknown 8xxx instruction
$388    $21B7   CALL     $1B7            ; Call subroutine at 1B7
$38A    $6FF7   LD       VF, #F7         ; Load 247 into VF
$38C    $3943   SE       V9, #43         ; Skip if V9 == 67
$38E    $4B9C   SNE      VB, #9C         ; Skip if VB != 156
$390    $00C1   SYS      $0C1            ; System call to 0C1
$392    $F2DB   UNKNOWN  F2DB            ; Unknown Fxxx instruction
$394    $205D   CALL     $05D            ; Call subroutine at 05D
$396    $E3BC   UNKNOWN  $E3BC           ; Unknown Exxx instruction
$398    $8DD5   SUB      VD, VD          ; VD -= VD, VF = !borrow
$39A    $D0C7   DRW      V0, VC, #7      ; Draw 7-byte sprite at V0, VC
$39C    $E2B3   UNKNOWN  $E2B3           ; Unknown Exxx instruction
$39E    $39B1   SE       V9, #B1         ; Skip if V9 == 177
$3A0    $2290   CALL     $290            ; Call subroutine at 290
$3A2    $30F5   SE       V0, #F5         ; Skip if V0 == 245
$3A4    $9DB3   UNKNOWN  $9DB3           ; Unknown 9xxx instruction
$3A6    $17FD   JP       $7FD            ; Jump to 7FD
$3A8    $FC07   LD       VC, DT          ; VC = delay timer
$3AA    $1D6E   JP       $D6E            ; Jump to D6E
$3AC    $376B   SE       V7, #6B         ; Skip if V7 == 107
$3AE    $D2C3   DRW      V2, VC, #3      ; Draw 3-byte sprite at V2, VC
$3B0    $5119   UNKNOWN  $5119           ; Unknown 5xxx instruction
$3B2    $F0E4   UNKNOWN  F0E4            ; Unknown Fxxx instruction
$3B4    $87EE   SHL      V7              ; V7 <<= 1, VF = MSB
$3B6    $133B   JP       $33B            ; Jump to 33B
$3B8    $1963   JP       $963            ; Jump to 963
$3BA    $918F   UNKNOWN  $918F           ; Unknown 9xxx instruction
$3BC    $5AD3   UNKNOWN  $5AD3           ; Unknown 5xxx instruction
$3BE    $EA0C   UNKNOWN  $EA0C           ; Unknown Exxx instruction
$3C0    $E695   UNKNOWN  $E695           ; Unknown Exxx instruction
$3C2    $A8E8   LD       I, $8E8         ; Load 8E8 into I
$3C4    $C03F   RND      V0, #3F         ; V0 = random & 3F
$3C6    $8FF1   OR       VF, VF          ; VF |= VF
$3C8    $80BE   SHL      V0              ; V0 <<= 1, VF = MSB
$3CA    $984E   UNKNOWN  $984E           ; Unknown 9xxx instruction
$3CC    $791A   ADD      V9, #1A         ; Add 26 to V9
$3CE    $C1FD   RND      V1, #FD         ; V1 = random & FD
$3D0    $05B4   SYS      $5B4            ; System call to 5B4
$3D2    $0604   SYS      $604            ; System call to 604
$3D4    $1DBD   JP       $DBD            ; Jump to DBD
$3D6    $6606   LD       V6, #06         ; Load 6 into V6
$3D8    $811A   UNKNOWN  811A            ; Unknown 8xxx instruction
$3DA    $7078   ADD      V0, #78         ; Add 120 to V0
$3DC    $A73A   LD       I, $73A         ; Load 73A into I
$3DE    $4C18   SNE      VC, #18         ; Skip if VC != 24
$3E0    $DE83   DRW      VE, V8, #3      ; Draw 3-byte sprite at VE, V8
$3E2    $4E5E   SNE      VE, #5E         ; Skip if VE != 94
$3E4    $C568   RND      V5, #68         ; V5 = random & 68
$3E6    $119D   JP       $19D            ; Jump to 19D
$3E8    $C908   RND      V9, #08         ; V9 = random & 08
$3EA    $FA0A   LD       VA, K           ; Wait for key press, store in VA
$3EC    $E48B   UNKNOWN  $E48B           ; Unknown Exxx instruction
$3EE    $3A1B   SE       VA, #1B         ; Skip if VA == 27
$3F0    $EBC3   UNKNOWN  $EBC3           ; Unknown Exxx instruction
$3F2    $716B   ADD      V1, #6B         ; Add 107 to V1
$3F4    $07B9   SYS      $7B9            ; System call to 7B9
$3F6    $AA6A   LD       I, $A6A         ; Load A6A into I
$3F8    $9F04   UNKNOWN  $9F04           ; Unknown 9xxx instruction
$3FA    $7A07   ADD      VA, #07         ; Add 7 to VA
$3FC    $1389   JP       $389            ; Jump to 389
$3FE    $6470   LD       V4, #70         ; Load 112 into V4
$400    $2F3F   CALL     $F3F            ; Call subroutine at F3F
$402    $5756   UNKNOWN  $5756           ; Unknown 5xxx instruction
$404    $BD11   JP       V0, $D11        ; Jump to V0 + D11
$406    $498A   SNE      V9, #8A         ; Skip if V9 != 138
$408    $6535   LD       V5, #35         ; Load 53 into V5
$40A    $B5D2   JP       V0, $5D2        ; Jump to V0 + 5D2
$40C    $71EE   ADD      V1, #EE         ; Add 238 to V1
$40E    $4CC9   SNE      VC, #C9         ; Skip if VC != 201
$410    $CF4B   RND      VF, #4B         ; VF = random & 4B
$412    $CC30   RND      VC, #30         ; VC = random & 30
$414    $EE88   UNKNOWN  $EE88           ; Unknown Exxx instruction
$416    $C6E0   RND      V6, #E0         ; V6 = random & E0
$418    $A281   LD       I, $281         ; Load 281 into I
$41A    $E8E2   UNKNOWN  $E8E2           ; Unknown Exxx instruction
$41C    $5290   SE       V2, V9          ; Skip if V2 == V9
$41E    $D2B1   DRW      V2, VB, #1      ; Draw 1-byte sprite at V2, VB
$420    $B4E3   JP       V0, $4E3        ; Jump to V0 + 4E3
$422    $7612   ADD      V6, #12         ; Add 18 to V6
$424    $7491   ADD      V4, #91         ; Add 145 to V4
$426    $DD24   DRW      VD, V2, #4      ; Draw 4-byte sprite at VD, V2
$428    $D619   DRW      V6, V1, #9      ; Draw 9-byte sprite at V6, V1
$42A    $1811   JP       $811            ; Jump to 811
$42C    $51B6   UNKNOWN  $51B6           ; Unknown 5xxx instruction
$42E    $EA57   UNKNOWN  $EA57           ; Unknown Exxx instruction
$430    $91F9   UNKNOWN  $91F9           ; Unknown 9xxx instruction
$432    $F3E3   UNKNOWN  F3E3            ; Unknown Fxxx instruction
$434    $49D7   SNE      V9, #D7         ; Skip if V9 != 215
$436    $173E   JP       $73E            ; Jump to 73E
$438    $7F4F   ADD      VF, #4F         ; Add 79 to VF
$43A    $A507   LD       I, $507         ; Load 507 into I
$43C    $62D2   LD       V2, #D2         ; Load 210 into V2
$43E    $B1C2   JP       V0, $1C2        ; Jump to V0 + 1C2
$440    $4CAA   SNE      VC, #AA         ; Skip if VC != 170
$442    $1652   JP       $652            ; Jump to 652
$444    $2C4A   CALL     $C4A            ; Call subroutine at C4A
$446    $D873   DRW      V8, V7, #3      ; Draw 3-byte sprite at V8, V7
$448    $4085   SNE      V0, #85         ; Skip if V0 != 133
$44A    $831A   UNKNOWN  831A            ; Unknown 8xxx instruction
$44C    $2294   CALL     $294            ; Call subroutine at 294
$44E    $2C21   CALL     $C21            ; Call subroutine at C21
$450    $725F   ADD      V2, #5F         ; Add 95 to V2
$452    $3C48   SE       VC, #48         ; Skip if VC == 72
$454    $8BF2   AND      VB, VF          ; VB &= VF
$456    $A628   LD       I, $628         ; Load 628 into I
$458    $4EFD   SNE      VE, #FD         ; Skip if VE != 253
$45A    $8B12   AND      VB, V1          ; VB &= V1
$45C    $4902   SNE      V9, #02         ; Skip if V9 != 2
$45E    $08CF   SYS      $8CF            ; System call to 8CF
$460    $2B95   CALL     $B95            ; Call subroutine at B95
$462    $44FE   SNE      V4, #FE         ; Skip if V4 != 254
$464    $3F6A   SE       VF, #6A         ; Skip if VF == 106
$466    $E9E4   UNKNOWN  $E9E4           ; Unknown Exxx instruction
$468    $0681   SYS      $681            ; System call to 681
$46A    $C8CB   RND      V8, #CB         ; V8 = random & CB
$46C    $DA5B   DRW      VA, V5, #B      ; Draw 11-byte sprite at VA, V5
$46E    $2AA3   CALL     $AA3            ; Call subroutine at AA3
$470    $6E1C   LD       VE, #1C         ; Load 28 into VE
$472    $0483   SYS      $483            ; System call to 483
$474    $B494   JP       V0, $494        ; Jump to V0 + 494
$476    $B27B   JP       V0, $27B        ; Jump to V0 + 27B
$478    $CAF8   RND      VA, #F8         ; VA = random & F8
$47A    $805D   UNKNOWN  805D            ; Unknown 8xxx instruction
$47C    $2114   CALL     $114            ; Call subroutine at 114
$47E    $1C55   JP       $C55            ; Jump to C55
$480    $2A90   CALL     $A90            ; Call subroutine at A90
$482    $5B5E   UNKNOWN  $5B5E           ; Unknown 5xxx instruction
$484    $F47B   UNKNOWN  F47B            ; Unknown Fxxx instruction
$486    $BEE8   JP       V0, $EE8        ; Jump to V0 + EE8
$488    $5400   SE       V4, V0          ; Skip if V4 == V0
$48A    $0417   SYS      $417            ; System call to 417
$48C    $D462   DRW      V4, V6, #2      ; Draw 2-byte sprite at V4, V6
$48E    $23DA   CALL     $3DA            ; Call subroutine at 3DA
$490    $35A3   SE       V5, #A3         ; Skip if V5 == 163
$492    $8C66   SHR      VC              ; VC >>= 1, VF = LSB
$494    $C15E   RND      V1, #5E         ; V1 = random & 5E
$496    $6116   LD       V1, #16         ; Load 22 into V1
$498    $BCB8   JP       V0, $CB8        ; Jump to V0 + CB8
$49A    $0FAD   SYS      $FAD            ; System call to FAD
$49C    $0DF2   SYS      $DF2            ; System call to DF2
$49E    $8726   SHR      V7              ; V7 >>= 1, VF = LSB
$4A0    $141F   JP       $41F            ; Jump to 41F
$4A2    $1923   JP       $923            ; Jump to 923
$4A4    $0FD3   SYS      $FD3            ; System call to FD3
$4A6    $2FDB   CALL     $FDB            ; Call subroutine at FDB
$4A8    $463D   SNE      V6, #3D         ; Skip if V6 != 61
$4AA    $DBEC   DRW      VB, VE, #C      ; Draw 12-byte sprite at VB, VE
$4AC    $72AD   ADD      V2, #AD         ; Add 173 to V2
$4AE    $B8DE   JP       V0, $8DE        ; Jump to V0 + 8DE
$4B0    $B3B1   JP       V0, $3B1        ; Jump to V0 + 3B1
$4B2    $246D   CALL     $46D            ; Call subroutine at 46D
$4B4    $F0AB   UNKNOWN  F0AB            ; Unknown Fxxx instruction
$4B6    $B294   JP       V0, $294        ; Jump to V0 + 294
$4B8    $EC7E   UNKNOWN  $EC7E           ; Unknown Exxx instruction
$4BA    $847C   UNKNOWN  847C            ; Unknown 8xxx instruction
$4BC    $6797   LD       V7, #97         ; Load 151 into V7
$4BE    $636D   LD       V3, #6D         ; Load 109 into V3
$4C0    $2A16   CALL     $A16            ; Call subroutine at A16
$4C2    $86AE   SHL      V6              ; V6 <<= 1, VF = MSB
$4C4    $B61B   JP       V0, $61B        ; Jump to V0 + 61B
$4C6    $B0A6   JP       V0, $0A6        ; Jump to V0 + 0A6
$4C8    $9A4C   UNKNOWN  $9A4C           ; Unknown 9xxx instruction
$4CA    $7B26   ADD      VB, #26         ; Add 38 to VB
$4CC    $D22A   DRW      V2, V2, #A      ; Draw 10-byte sprite at V2, V2
$4CE    $D532   DRW      V5, V3, #2      ; Draw 2-byte sprite at V5, V3
$4D0    $3848   SE       V8, #48         ; Skip if V8 == 72
$4D2    $F461   UNKNOWN  F461            ; Unknown Fxxx instruction
$4D4    $4A83   SNE      VA, #83         ; Skip if VA != 131
$4D6    $3D87   SE       VD, #87         ; Skip if VD == 135
$4D8    $9E8B   UNKNOWN  $9E8B           ; Unknown 9xxx instruction
$4DA    $41EA   SNE      V1, #EA         ; Skip if V1 != 234
$4DC    $3D0F   SE       VD, #0F         ; Skip if VD == 15
$4DE    $004E   SYS      $04E            ; System call to 04E
$4E0    $CDF8   RND      VD, #F8         ; VD = random & F8
$4E2    $E4B0   UNKNOWN  $E4B0           ; Unknown Exxx instruction
$4E4    $3F68   SE       VF, #68         ; Skip if VF == 104
$4E6    $BA84   JP       V0, $A84        ; Jump to V0 + A84
$4E8    $5586   UNKNOWN  $5586           ; Unknown 5xxx instruction
$4EA    $1988   JP       $988            ; Jump to 988
$4EC    $1230   JP       $230            ; Jump to 230
$4EE    $9FA5   UNKNOWN  $9FA5           ; Unknown 9xxx instruction
$4F0    $578F   UNKNOWN  $578F           ; Unknown 5xxx instruction
$4F2    $DD22   DRW      VD, V2, #2      ; Draw 2-byte sprite at VD, V2
$4F4    $4BC9   SNE      VB, #C9         ; Skip if VB != 201
$4F6    $E7D9   UNKNOWN  $E7D9           ; Unknown Exxx instruction
$4F8    $1107   JP       $107            ; Jump to 107
$4FA    $98DA   UNKNOWN  $98DA           ; Unknown 9xxx instruction
$4FC    $6884   LD       V8, #84         ; Load 132 into V8
$4FE    $6531   LD       V5, #31         ; Load 49 into V5
$500    $3109   SE       V1, #09         ; Skip if V1 == 9
$502    $E5D6   UNKNOWN  $E5D6           ; Unknown Exxx instruction
$504    $2E9D   CALL     $E9D            ; Call subroutine at E9D
$506    $A238   LD       I, $238         ; Load 238 into I
$508    $3485   SE       V4, #85         ; Skip if V4 == 133
$50A    $0D25   SYS      $D25            ; System call to D25
$50C    $38D6   SE       V8, #D6         ; Skip if V8 == 214
$50E    $0AEE   SYS      $AEE            ; System call to AEE
$510    $6391   LD       V3, #91         ; Load 145 into V3
$512    $7F51   ADD      VF, #51         ; Add 81 to VF
$514    $30CF   SE       V0, #CF         ; Skip if V0 == 207
$516    $BE6B   JP       V0, $E6B        ; Jump to V0 + E6B
$518    $4B9B   SNE      VB, #9B         ; Skip if VB != 155
$51A    $950B   UNKNOWN  $950B           ; Unknown 9xxx instruction
$51C    $959E   UNKNOWN  $959E           ; Unknown 9xxx instruction
$51E    $3113   SE       V1, #13         ; Skip if V1 == 19
$520    $787A   ADD      V8, #7A         ; Add 122 to V8
$522    $9B69   UNKNOWN  $9B69           ; Unknown 9xxx instruction
$524    $7CC3   ADD      VC, #C3         ; Add 195 to VC
$526    $5829   UNKNOWN  $5829           ; Unknown 5xxx instruction
$528    $CFA1   RND      VF, #A1         ; VF = random & A1
$52A    $6A00   LD       VA, #00         ; Load 0 into VA
$52C    $4031   SNE      V0, #31         ; Skip if V0 != 49
$52E    $5FFE   UNKNOWN  $5FFE           ; Unknown 5xxx instruction
$530    $8FA1   OR       VF, VA          ; VF |= VA
$532    $277F   CALL     $77F            ; Call subroutine at 77F
$534    $3C2F   SE       VC, #2F         ; Skip if VC == 47
$536    $505F   UNKNOWN  $505F           ; Unknown 5xxx instruction
$538    $E9E1   UNKNOWN  $E9E1           ; Unknown Exxx instruction
$53A    $7C4B   ADD      VC, #4B         ; Add 75 to VC
$53C    $B307   JP       V0, $307        ; Jump to V0 + 307
$53E    $714A   ADD      V1, #4A         ; Add 74 to V1
$540    $2825   CALL     $825            ; Call subroutine at 825
$542    $B848   JP       V0, $848        ; Jump to V0 + 848
$544    $71AD   ADD      V1, #AD         ; Add 173 to V1
$546    $114D   JP       $14D            ; Jump to 14D
$548    $98FB   UNKNOWN  $98FB           ; Unknown 9xxx instruction
$54A    $06F3   SYS      $6F3            ; System call to 6F3
$54C    $DFD1   DRW      VF, VD, #1      ; Draw 1-byte sprite at VF, VD
$54E    $5A0D   UNKNOWN  $5A0D           ; Unknown 5xxx instruction
$550    $68B1   LD       V8, #B1         ; Load 177 into V8
$552    $8888   UNKNOWN  8888            ; Unknown 8xxx instruction
$554    $5147   UNKNOWN  $5147           ; Unknown 5xxx instruction
$556    $DF9E   DRW      VF, V9, #E      ; Draw 14-byte sprite at VF, V9
$558    $FD10   UNKNOWN  FD10            ; Unknown Fxxx instruction
$55A    $B9FC   JP       V0, $9FC        ; Jump to V0 + 9FC
$55C    $2591   CALL     $591            ; Call subroutine at 591
$55E    $A9D1   LD       I, $9D1         ; Load 9D1 into I
$560    $F74D   UNKNOWN  F74D            ; Unknown Fxxx instruction
$562    $8D0B   UNKNOWN  8D0B            ; Unknown 8xxx instruction
$564    $199A   JP       $99A            ; Jump to 99A
$566    $1222   JP       $222            ; Jump to 222
$568    $CFCA   RND      VF, #CA         ; VF = random & CA
$56A    $1F6B   JP       $F6B            ; Jump to F6B
$56C    $A4F9   LD       I, $4F9         ; Load 4F9 into I
$56E    $B89E   JP       V0, $89E        ; Jump to V0 + 89E
$570    $3324   SE       V3, #24         ; Skip if V3 == 36
$572    $CBBB   RND      VB, #BB         ; VB = random & BB
$574    $2FE5   CALL     $FE5            ; Call subroutine at FE5
$576    $2A77   CALL     $A77            ; Call subroutine at A77
$578    $15CF   JP       $5CF            ; Jump to 5CF
$57A    $AC45   LD       I, $C45         ; Load C45 into I
$57C    $093C   SYS      $93C            ; System call to 93C
$57E    $8CD7   SUBN     VC, VD          ; VC = VD - VC, VF = !borrow
$580    $B8E6   JP       V0, $8E6        ; Jump to V0 + 8E6
$582    $27C7   CALL     $7C7            ; Call subroutine at 7C7
$584    $B29B   JP       V0, $29B        ; Jump to V0 + 29B
$586    $F0FD   UNKNOWN  F0FD            ; Unknown Fxxx instruction
$588    $B038   JP       V0, $038        ; Jump to V0 + 038
$58A    $CB6E   RND      VB, #6E         ; VB = random & 6E
$58C    $9D17   UNKNOWN  $9D17           ; Unknown 9xxx instruction
$58E    $5625   UNKNOWN  $5625           ; Unknown 5xxx instruction
$590    $7F00   ADD      VF, #00         ; Add 0 to VF
$592    $DAB5   DRW      VA, VB, #5      ; Draw 5-byte sprite at VA, VB
$594    $77DE   ADD      V7, #DE         ; Add 222 to V7
$596    $926C   UNKNOWN  $926C           ; Unknown 9xxx instruction
$598    $6AC6   LD       VA, #C6         ; Load 198 into VA
$59A    $B611   JP       V0, $611        ; Jump to V0 + 611
$59C    $A5FE   LD       I, $5FE         ; Load 5FE into I
$59E    $932A   UNKNOWN  $932A           ; Unknown 9xxx instruction
$5A0    $6B1A   LD       VB, #1A         ; Load 26 into VB
$5A2    $4C3C   SNE      VC, #3C         ; Skip if VC != 60
$5A4    $789B   ADD      V8, #9B         ; Add 155 to V8
$5A6    $B643   JP       V0, $643        ; Jump to V0 + 643
$5A8    $DF3A   DRW      VF, V3, #A      ; Draw 10-byte sprite at VF, V3
$5AA    $7B30   ADD      VB, #30         ; Add 48 to VB
$5AC    $22E2   CALL     $2E2            ; Call subroutine at 2E2
$5AE    $B363   JP       V0, $363        ; Jump to V0 + 363
$5B0    $491F   SNE      V9, #1F         ; Skip if V9 != 31
$5B2    $41C8   SNE      V1, #C8         ; Skip if V1 != 200
$5B4    $B41B   JP       V0, $41B        ; Jump to V0 + 41B
$5B6    $4EEF   SNE      VE, #EF         ; Skip if VE != 239
$5B8    $DE1E   DRW      VE, V1, #E      ; Draw 14-byte sprite at VE, V1
$5BA    $C45B   RND      V4, #5B         ; V4 = random & 5B
$5BC    $BB8C   JP       V0, $B8C        ; Jump to V0 + B8C
$5BE    $66A3   LD       V6, #A3         ; Load 163 into V6
$5C0    $D313   DRW      V3, V1, #3      ; Draw 3-byte sprite at V3, V1
$5C2    $0D5F   SYS      $D5F            ; System call to D5F
$5C4    $A79E   LD       I, $79E         ; Load 79E into I
$5C6    $88CE   SHL      V8              ; V8 <<= 1, VF = MSB
$5C8    $CDC8   RND      VD, #C8         ; VD = random & C8
$5CA    $DD64   DRW      VD, V6, #4      ; Draw 4-byte sprite at VD, V6
$5CC    $402E   SNE      V0, #2E         ; Skip if V0 != 46
$5CE    $5A4C   UNKNOWN  $5A4C           ; Unknown 5xxx instruction
$5D0    $B8DF   JP       V0, $8DF        ; Jump to V0 + 8DF
$5D2    $73DE   ADD      V3, #DE         ; Add 222 to V3
$5D4    $9417   UNKNOWN  $9417           ; Unknown 9xxx instruction
$5D6    $639F   LD       V3, #9F         ; Load 159 into V3
$5D8    $4A20   SNE      VA, #20         ; Skip if VA != 32
$5DA    $4898   SNE      V8, #98         ; Skip if V8 != 152
$5DC    $ED63   UNKNOWN  $ED63           ; Unknown Exxx instruction
$5DE    $7613   ADD      V6, #13         ; Add 19 to V6
$5E0    $5B18   UNKNOWN  $5B18           ; Unknown 5xxx instruction
$5E2    $0A8B   SYS      $A8B            ; System call to A8B
$5E4    $3253   SE       V2, #53         ; Skip if V2 == 83
$5E6    $C1D5   RND      V1, #D5         ; V1 = random & D5
$5E8    $E31C   UNKNOWN  $E31C           ; Unknown Exxx instruction
$5EA    $CFAC   RND      VF, #AC         ; VF = random & AC
$5EC    $7033   ADD      V0, #33         ; Add 51 to V0
$5EE    $855B   UNKNOWN  855B            ; Unknown 8xxx instruction
$5F0    $AA06   LD       I, $A06         ; Load A06 into I
$5F2    $1537   JP       $537            ; Jump to 537
$5F4    $8B6F   UNKNOWN  8B6F            ; Unknown 8xxx instruction
$5F6    $6792   LD       V7, #92         ; Load 146 into V7
$5F8    $605B   LD       V0, #5B         ; Load 91 into V0
$5FA    $9F70   SNE      VF, V7          ; Skip if VF != V7
$5FC    $A382   LD       I, $382         ; Load 382 into I
$5FE    $BBD5   JP       V0, $BD5        ; Jump to V0 + BD5
$600    $F8BA   UNKNOWN  F8BA            ; Unknown Fxxx instruction
$602    $FC6C   UNKNOWN  FC6C            ; Unknown Fxxx instruction
$604    $9ADF   UNKNOWN  $9ADF           ; Unknown 9xxx instruction
$606    $9B77   UNKNOWN  $9B77           ; Unknown 9xxx instruction
$608    $9573   UNKNOWN  $9573           ; Unknown 9xxx instruction
$60A    $15A6   JP       $5A6            ; Jump to 5A6
$60C    $9A80   SNE      VA, V8          ; Skip if VA != V8
$60E    $42BD   SNE      V2, #BD         ; Skip if V2 != 189
$610    $A12F   LD       I, $12F         ; Load 12F into I
$612    $9634   UNKNOWN  $9634           ; Unknown 9xxx instruction
$614    $FEDC   UNKNOWN  FEDC            ; Unknown Fxxx instruction
$616    $2062   CALL     $062            ; Call subroutine at 062
$618    $EBF1   UNKNOWN  $EBF1           ; Unknown Exxx instruction
$61A    $4D4C   SNE      VD, #4C         ; Skip if VD != 76
$61C    $09EC   SYS      $9EC            ; System call to 9EC
$61E    $C126   RND      V1, #26         ; V1 = random & 26
$620    $FFA1   UNKNOWN  FFA1            ; Unknown Fxxx instruction
$622    $E9A9   UNKNOWN  $E9A9           ; Unknown Exxx instruction
$624    $4707   SNE      V7, #07         ; Skip if V7 != 7
$626    $D2CB   DRW      V2, VC, #B      ; Draw 11-byte sprite at V2, VC
$628    $467C   SNE      V6, #7C         ; Skip if V6 != 124
$62A    $EC4A   UNKNOWN  $EC4A           ; Unknown Exxx instruction
$62C    $1EC7   JP       $EC7            ; Jump to EC7
$62E    $2790   CALL     $790            ; Call subroutine at 790
$630    $50D1   UNKNOWN  $50D1           ; Unknown 5xxx instruction
$632    $DE9F   DRW      VE, V9, #F      ; Draw 15-byte sprite at VE, V9
$634    $EDEC   UNKNOWN  $EDEC           ; Unknown Exxx instruction
$636    $3943   SE       V9, #43         ; Skip if V9 == 67
$638    $C28E   RND      V2, #8E         ; V2 = random & 8E
$63A    $9FB7   UNKNOWN  $9FB7           ; Unknown 9xxx instruction
$63C    $A56D   LD       I, $56D         ; Load 56D into I
$63E    $1830   JP       $830            ; Jump to 830
$640    $A269   LD       I, $269         ; Load 269 into I
$642    $9234   UNKNOWN  $9234           ; Unknown 9xxx instruction
$644    $3C42   SE       VC, #42         ; Skip if VC == 66
$646    $239D   CALL     $39D            ; Call subroutine at 39D
$648    $02C3   SYS      $2C3            ; System call to 2C3
$64A    $813B   UNKNOWN  813B            ; Unknown 8xxx instruction
$64C    $E9AA   UNKNOWN  $E9AA           ; Unknown Exxx instruction
$64E    $80DD   UNKNOWN  80DD            ; Unknown 8xxx instruction
$650    $B31D   JP       V0, $31D        ; Jump to V0 + 31D
$652    $45CB   SNE      V5, #CB         ; Skip if V5 != 203
$654    $C6D3   RND      V6, #D3         ; V6 = random & D3
$656    $7EE5   ADD      VE, #E5         ; Add 229 to VE
$658    $9D80   SNE      VD, V8          ; Skip if VD != V8
$65A    $35B8   SE       V5, #B8         ; Skip if V5 == 184
$65C    $2781   CALL     $781            ; Call subroutine at 781
$65E    $DDFF   DRW      VD, VF, #F      ; Draw 15-byte sprite at VD, VF
$660    $472B   SNE      V7, #2B         ; Skip if V7 != 43
$662    $062A   SYS      $62A            ; System call to 62A
$664    $CB3A   RND      VB, #3A         ; VB = random & 3A
$666    $0E7A   SYS      $E7A            ; System call to E7A
$668    $0E5C   SYS      $E5C            ; System call to E5C
$66A    $D2C1   DRW      V2, VC, #1      ; Draw 1-byte sprite at V2, VC
$66C    $0865   SYS      $865            ; System call to 865
$66E    $EACD   UNKNOWN  $EACD           ; Unknown Exxx instruction
$670    $3F9B   SE       VF, #9B         ; Skip if VF == 155
$672    $9B2B   UNKNOWN  $9B2B           ; Unknown 9xxx instruction
$674    $2594   CALL     $594            ; Call subroutine at 594
$676    $089A   SYS      $89A            ; System call to 89A
$678    $3B2C   SE       VB, #2C         ; Skip if VB == 44
$67A    $7837   ADD      V8, #37         ; Add 55 to V8
$67C    $30D5   SE       V0, #D5         ; Skip if V0 == 213
$67E    $AF31   LD       I, $F31         ; Load F31 into I
$680    $6FAB   LD       VF, #AB         ; Load 171 into VF
$682    $4316   SNE      V3, #16         ; Skip if V3 != 22
$684    $17BF   JP       $7BF            ; Jump to 7BF
$686    $7D57   ADD      VD, #57         ; Add 87 to VD
$688    $580D   UNKNOWN  $580D           ; Unknown 5xxx instruction
$68A    $F493   UNKNOWN  F493            ; Unknown Fxxx instruction
$68C    $0F5D   SYS      $F5D            ; System call to F5D
$68E    $D4AE   DRW      V4, VA, #E      ; Draw 14-byte sprite at V4, VA
$690    $8C65   SUB      VC, V6          ; VC -= V6, VF = !borrow
$692    $9575   UNKNOWN  $9575           ; Unknown 9xxx instruction
$694    $EE8B   UNKNOWN  $EE8B           ; Unknown Exxx instruction
$696    $0336   SYS      $336            ; System call to 336
$698    $3FB1   SE       VF, #B1         ; Skip if VF == 177
$69A    $DCA8   DRW      VC, VA, #8      ; Draw 8-byte sprite at VC, VA
$69C    $1556   JP       $556            ; Jump to 556
$69E    $B50C   JP       V0, $50C        ; Jump to V0 + 50C
$6A0    $8081   OR       V0, V8          ; V0 |= V8
$6A2    $0E01   SYS      $E01            ; System call to E01
$6A4    $A464   LD       I, $464         ; Load 464 into I
$6A6    $1365   JP       $365            ; Jump to 365
$6A8    $8946   SHR      V9              ; V9 >>= 1, VF = LSB
$6AA    $12AE   JP       $2AE            ; Jump to 2AE
$6AC    $AC78   LD       I, $C78         ; Load C78 into I
$6AE    $C57A   RND      V5, #7A         ; V5 = random & 7A
$6B0    $2A2C   CALL     $A2C            ; Call subroutine at A2C
$6B2    $6408   LD       V4, #08         ; Load 8 into V4
$6B4    $7566   ADD      V5, #66         ; Add 102 to V5
$6B6    $AF7C   LD       I, $F7C         ; Load F7C into I
$6B8    $18C3   JP       $8C3            ; Jump to 8C3
$6BA    $2B24   CALL     $B24            ; Call subroutine at B24
$6BC    $351A   SE       V5, #1A         ; Skip if V5 == 26
$6BE    $5575   UNKNOWN  $5575           ; Unknown 5xxx instruction
$6C0    $A6D4   LD       I, $6D4         ; Load 6D4 into I
$6C2    $2A44   CALL     $A44            ; Call subroutine at A44
$6C4    $CE3C   RND      VE, #3C         ; VE = random & 3C
$6C6    $798B   ADD      V9, #8B         ; Add 139 to V9
$6C8    $520D   UNKNOWN  $520D           ; Unknown 5xxx instruction
$6CA    $1297   JP       $297            ; Jump to 297
$6CC    $9835   UNKNOWN  $9835           ; Unknown 9xxx instruction
$6CE    $067E   SYS      $67E            ; System call to 67E
$6D0    $5BEA   UNKNOWN  $5BEA           ; Unknown 5xxx instruction
$6D2    $6EBC   LD       VE, #BC         ; Load 188 into VE
$6D4    $9C0D   UNKNOWN  $9C0D           ; Unknown 9xxx instruction
$6D6    $5707   UNKNOWN  $5707           ; Unknown 5xxx instruction
$6D8    $6FAC   LD       VF, #AC         ; Load 172 into VF
$6DA    $6725   LD       V7, #25         ; Load 37 into V7
$6DC    $CD70   RND      VD, #70         ; VD = random & 70
$6DE    $232D   CALL     $32D            ; Call subroutine at 32D
$6E0    $C949   RND      V9, #49         ; V9 = random & 49
$6E2    $AD11   LD       I, $D11         ; Load D11 into I
$6E4    $11D0   JP       $1D0            ; Jump to 1D0
$6E6    $9194   UNKNOWN  $9194           ; Unknown 9xxx instruction
$6E8    $6C37   LD       VC, #37         ; Load 55 into VC
$6EA    $A115   LD       I, $115         ; Load 115 into I
$6EC    $17F2   JP       $7F2            ; Jump to 7F2
$6EE    $BD43   JP       V0, $D43        ; Jump to V0 + D43
$6F0    $5CD7   UNKNOWN  $5CD7           ; Unknown 5xxx instruction
$6F2    $6FAF   LD       VF, #AF         ; Load 175 into VF
$6F4    $40BA   SNE      V0, #BA         ; Skip if V0 != 186
$6F6    $ADF9   LD       I, $DF9         ; Load DF9 into I
$6F8    $D0A7   DRW      V0, VA, #7      ; Draw 7-byte sprite at V0, VA
$6FA    $9D06   UNKNOWN  $9D06           ; Unknown 9xxx instruction
$6FC    $40A7   SNE      V0, #A7         ; Skip if V0 != 167
$6FE    $0D2B   SYS      $D2B            ; System call to D2B
$700    $8672   AND      V6, V7          ; V6 &= V7
$702    $1936   JP       $936            ; Jump to 936
$704    $6E8C   LD       VE, #8C         ; Load 140 into VE
$706    $56BE   UNKNOWN  $56BE           ; Unknown 5xxx instruction
$708    $883D   UNKNOWN  883D            ; Unknown 8xxx instruction
$70A    $FAC8   UNKNOWN  FAC8            ; Unknown Fxxx instruction
$70C    $CC56   RND      VC, #56         ; VC = random & 56
$70E    $8F67   SUBN     VF, V6          ; VF = V6 - VF, VF = !borrow
$710    $40A5   SNE      V0, #A5         ; Skip if V0 != 165
$712    $F9E9   UNKNOWN  F9E9            ; Unknown Fxxx instruction
$714    $5DDC   UNKNOWN  $5DDC           ; Unknown 5xxx instruction
$716    $77C8   ADD      V7, #C8         ; Add 200 to V7
$718    $1C5C   JP       $C5C            ; Jump to C5C
$71A    $8E68   UNKNOWN  8E68            ; Unknown 8xxx instruction
$71C    $A940   LD       I, $940         ; Load 940 into I
$71E    $9104   UNKNOWN  $9104           ; Unknown 9xxx instruction
$720    $5EA3   UNKNOWN  $5EA3           ; Unknown 5xxx instruction
$722    $C8AE   RND      V8, #AE         ; V8 = random & AE
$724    $721A   ADD      V2, #1A         ; Add 26 to V2
$726    $5129   UNKNOWN  $5129           ; Unknown 5xxx instruction
$728    $43E7   SNE      V3, #E7         ; Skip if V3 != 231
$72A    $1654   JP       $654            ; Jump to 654
$72C    $DC17   DRW      VC, V1, #7      ; Draw 7-byte sprite at VC, V1
$72E    $3E42   SE       VE, #42         ; Skip if VE == 66
$730    $57AD   UNKNOWN  $57AD           ; Unknown 5xxx instruction
$732    $DE9F   DRW      VE, V9, #F      ; Draw 15-byte sprite at VE, V9
$734    $3C1D   SE       VC, #1D         ; Skip if VC == 29
$736    $CEFC   RND      VE, #FC         ; VE = random & FC
$738    $5140   SE       V1, V4          ; Skip if V1 == V4
$73A    $DC6E   DRW      VC, V6, #E      ; Draw 14-byte sprite at VC, V6
$73C    $9DE2   UNKNOWN  $9DE2           ; Unknown 9xxx instruction
$73E    $0DDB   SYS      $DDB            ; System call to DDB
$740    $1E4C   JP       $E4C            ; Jump to E4C
$742    $9464   UNKNOWN  $9464           ; Unknown 9xxx instruction
$744    $6477   LD       V4, #77         ; Load 119 into V4
$746    $A4CE   LD       I, $4CE         ; Load 4CE into I
$748    $AF91   LD       I, $F91         ; Load F91 into I
$74A    $F737   UNKNOWN  F737            ; Unknown Fxxx instruction
$74C    $F2DE   UNKNOWN  F2DE            ; Unknown Fxxx instruction
$74E    $591A   UNKNOWN  $591A           ; Unknown 5xxx instruction
$750    $EB79   UNKNOWN  $EB79           ; Unknown Exxx instruction
$752    $8E64   ADD      VE, V6          ; VE += V6, VF = carry
$754    $B998   JP       V0, $998        ; Jump to V0 + 998
$756    $BC78   JP       V0, $C78        ; Jump to V0 + C78
$758    $A355   LD       I, $355         ; Load 355 into I
$75A    $9A1B   UNKNOWN  $9A1B           ; Unknown 9xxx instruction
$75C    $13DF   JP       $3DF            ; Jump to 3DF
$75E    $81B7   SUBN     V1, VB          ; V1 = VB - V1, VF = !borrow
$760    $DF72   DRW      VF, V7, #2      ; Draw 2-byte sprite at VF, V7
$762    $E9C0   UNKNOWN  $E9C0           ; Unknown Exxx instruction
$764    $4EBF   SNE      VE, #BF         ; Skip if VE != 191
$766    $78C8   ADD      V8, #C8         ; Add 200 to V8
$768    $A659   LD       I, $659         ; Load 659 into I
$76A    $EF30   UNKNOWN  $EF30           ; Unknown Exxx instruction
$76C    $172B   JP       $72B            ; Jump to 72B
$76E    $2B41   CALL     $B41            ; Call subroutine at B41
$770    $4D45   SNE      VD, #45         ; Skip if VD != 69
$772    $47C9   SNE      V7, #C9         ; Skip if V7 != 201
$774    $ACC5   LD       I, $CC5         ; Load CC5 into I
$776    $70D7   ADD      V0, #D7         ; Add 215 to V0
$778    $8707   SUBN     V7, V0          ; V7 = V0 - V7, VF = !borrow
$77A    $AB5B   LD       I, $B5B         ; Load B5B into I
$77C    $2081   CALL     $081            ; Call subroutine at 081
$77E    $E114   UNKNOWN  $E114           ; Unknown Exxx instruction
$780    $A30F   LD       I, $30F         ; Load 30F into I
$782    $9F11   UNKNOWN  $9F11           ; Unknown 9xxx instruction
$784    $C631   RND      V6, #31         ; V6 = random & 31
$786    $92AA   UNKNOWN  $92AA           ; Unknown 9xxx instruction
$788    $867D   UNKNOWN  867D            ; Unknown 8xxx instruction
$78A    $1D65   JP       $D65            ; Jump to D65
$78C    $9B86   UNKNOWN  $9B86           ; Unknown 9xxx instruction
$78E    $6D1A   LD       VD, #1A         ; Load 26 into VD
$790    $17C0   JP       $7C0            ; Jump to 7C0
$792    $5695   UNKNOWN  $5695           ; Unknown 5xxx instruction
$794    $0740   SYS      $740            ; System call to 740
$796    $8D89   UNKNOWN  8D89            ; Unknown 8xxx instruction
$798    $D4CF   DRW      V4, VC, #F      ; Draw 15-byte sprite at V4, VC
$79A    $D1C3   DRW      V1, VC, #3      ; Draw 3-byte sprite at V1, VC
$79C    $B2C9   JP       V0, $2C9        ; Jump to V0 + 2C9
$79E    $59D5   UNKNOWN  $59D5           ; Unknown 5xxx instruction
$7A0    $6BBB   LD       VB, #BB         ; Load 187 into VB
$7A2    $63F9   LD       V3, #F9         ; Load 249 into V3
$7A4    $A723   LD       I, $723         ; Load 723 into I
$7A6    $43C5   SNE      V3, #C5         ; Skip if V3 != 197
$7A8    $9F20   SNE      VF, V2          ; Skip if VF != V2
$7AA    $EF46   UNKNOWN  $EF46           ; Unknown Exxx instruction
$7AC    $2BE7   CALL     $BE7            ; Call subroutine at BE7
$7AE    $171D   JP       $71D            ; Jump to 71D
$7B0    $0932   SYS      $932            ; System call to 932
$7B2    $523E   UNKNOWN  $523E           ; Unknown 5xxx instruction
$7B4    $1DAC   JP       $DAC            ; Jump to DAC
$7B6    $AB4A   LD       I, $B4A         ; Load B4A into I
$7B8    $196E   JP       $96E            ; Jump to 96E
$7BA    $BDCF   JP       V0, $DCF        ; Jump to V0 + DCF
$7BC    $AE6A   LD       I, $E6A         ; Load E6A into I
$7BE    $753A   ADD      V5, #3A         ; Add 58 to V5
$7C0    $C215   RND      V2, #15         ; V2 = random & 15
$7C2    $9C26   UNKNOWN  $9C26           ; Unknown 9xxx instruction
$7C4    $9406   UNKNOWN  $9406           ; Unknown 9xxx instruction
$7C6    $0CE8   SYS      $CE8            ; System call to CE8
$7C8    $0A93   SYS      $A93            ; System call to A93
$7CA    $87F9   UNKNOWN  87F9            ; Unknown 8xxx instruction
$7CC    $E4EE   UNKNOWN  $E4EE           ; Unknown Exxx instruction
$7CE    $3DF6   SE       VD, #F6         ; Skip if VD == 246
$7D0    $0388   SYS      $388            ; System call to 388
$7D2    $0B77   SYS      $B77            ; System call to B77
$7D4    $F982   UNKNOWN  F982            ; Unknown Fxxx instruction
$7D6    $5423   UNKNOWN  $5423           ; Unknown 5xxx instruction
$7D8    $9B91   UNKNOWN  $9B91           ; Unknown 9xxx instruction
$7DA    $0C83   SYS      $C83            ; System call to C83
$7DC    $2D32   CALL     $D32            ; Call subroutine at D32
$7DE    $7178   ADD      V1, #78         ; Add 120 to V1
$7E0    $0598   SYS      $598            ; System call to 598
$7E2    $550D   UNKNOWN  $550D           ; Unknown 5xxx instruction
$7E4    $5DF3   UNKNOWN  $5DF3           ; Unknown 5xxx instruction
$7E6    $B1BC   JP       V0, $1BC        ; Jump to V0 + 1BC
$7E8    $08F1   SYS      $8F1            ; System call to 8F1
$7EA    $06F1   SYS      $6F1            ; System call to 6F1
$7EC    $7B75   ADD      VB, #75         ; Add 117 to VB
$7EE    $6060   LD       V0, #60         ; Load 96 into V0
$7F0    $0C42   SYS      $C42            ; System call to C42
$7F2    $D93C   DRW      V9, V3, #C      ; Draw 12-byte sprite at V9, V3
$7F4    $AB66   LD       I, $B66         ; Load B66 into I
$7F6    $6E79   LD       VE, #79         ; Load 121 into VE
$7F8    $70B4   ADD      V0, #B4         ; Add 180 to V0
$7FA    $71FC   ADD      V1, #FC         ; Add 252 to V1
$7FC    $CBFD   RND      VB, #FD         ; VB = random & FD
$7FE    $4AEB   SNE      VA, #EB         ; Skip if VA != 235
$800    $357E   SE       V5, #7E         ; Skip if V5 == 126
$802    $B5F5   JP       V0, $5F5        ; Jump to V0 + 5F5
$804    $999A   UNKNOWN  $999A           ; Unknown 9xxx instruction
$806    $447D   SNE      V4, #7D         ; Skip if V4 != 125
$808    $BDB5   JP       V0, $DB5        ; Jump to V0 + DB5
$80A    $ADE1   LD       I, $DE1         ; Load DE1 into I
$80C    $1E19   JP       $E19            ; Jump to E19
$80E    $6509   LD       V5, #09         ; Load 9 into V5
$810    $5BE4   UNKNOWN  $5BE4           ; Unknown 5xxx instruction
$812    $349B   SE       V4, #9B         ; Skip if V4 == 155
$814    $8E8D   UNKNOWN  8E8D            ; Unknown 8xxx instruction
$816    $269D   CALL     $69D            ; Call subroutine at 69D
$818    $4011   SNE      V0, #11         ; Skip if V0 != 17
$81A    $893F   UNKNOWN  893F            ; Unknown 8xxx instruction
$81C    $402D   SNE      V0, #2D         ; Skip if V0 != 45
$81E    $24D5   CALL     $4D5            ; Call subroutine at 4D5
$820    $D048   DRW      V0, V4, #8      ; Draw 8-byte sprite at V0, V4
$822    $FC9C   UNKNOWN  FC9C            ; Unknown Fxxx instruction
$824    $520C   UNKNOWN  $520C           ; Unknown 5xxx instruction
$826    $C3BE   RND      V3, #BE         ; V3 = random & BE
$828    $33AC   SE       V3, #AC         ; Skip if V3 == 172
$82A    $FFD6   UNKNOWN  FFD6            ; Unknown Fxxx instruction
$82C    $F640   UNKNOWN  F640            ; Unknown Fxxx instruction
$82E    $12E8   JP       $2E8            ; Jump to 2E8
$830    $4FD7   SNE      VF, #D7         ; Skip if VF != 215
$832    $A4AF   LD       I, $4AF         ; Load 4AF into I
$834    $662F   LD       V6, #2F         ; Load 47 into V6
$836    $043C   SYS      $43C            ; System call to 43C
$838    $CCBD   RND      VC, #BD         ; VC = random & BD
$83A    $0ADD   SYS      $ADD            ; System call to ADD
$83C    $EDBD   UNKNOWN  $EDBD           ; Unknown Exxx instruction
$83E    $218C   CALL     $18C            ; Call subroutine at 18C
$840    $27B9   CALL     $7B9            ; Call subroutine at 7B9
$842    $281D   CALL     $81D            ; Call subroutine at 81D
$844    $B8FB   JP       V0, $8FB        ; Jump to V0 + 8FB
$846    $7FD5   ADD      VF, #D5         ; Add 213 to VF
$848    $F54B   UNKNOWN  F54B            ; Unknown Fxxx instruction
$84A    $B7D8   JP       V0, $7D8        ; Jump to V0 + 7D8
$84C    $9948   UNKNOWN  $9948           ; Unknown 9xxx instruction
$84E    $A7E7   LD       I, $7E7         ; Load 7E7 into I
$850    $A940   LD       I, $940         ; Load 940 into I
$852    $DFDA   DRW      VF, VD, #A      ; Draw 10-byte sprite at VF, VD
$854    $A0B5   LD       I, $0B5         ; Load 0B5 into I
$856    $8E4D   UNKNOWN  8E4D            ; Unknown 8xxx instruction
$858    $262E   CALL     $62E            ; Call subroutine at 62E
$85A    $A351   LD       I, $351         ; Load 351 into I
$85C    $949C   UNKNOWN  $949C           ; Unknown 9xxx instruction
$85E    $9501   UNKNOWN  $9501           ; Unknown 9xxx instruction
$860    $C9E8   RND      V9, #E8         ; V9 = random & E8
$862    $802C   UNKNOWN  802C            ; Unknown 8xxx instruction
$864    $A778   LD       I, $778         ; Load 778 into I
$866    $625E   LD       V2, #5E         ; Load 94 into V2
$868    $2934   CALL     $934            ; Call subroutine at 934
$86A    $6953   LD       V9, #53         ; Load 83 into V9
$86C    $AEAE   LD       I, $EAE         ; Load EAE into I
$86E    $1EA3   JP       $EA3            ; Jump to EA3
$870    $420A   SNE      V2, #0A         ; Skip if V2 != 10
$872    $3D89   SE       VD, #89         ; Skip if VD == 137
$874    $3DF4   SE       VD, #F4         ; Skip if VD == 244
$876    $9716   UNKNOWN  $9716           ; Unknown 9xxx instruction
$878    $F1E5   UNKNOWN  F1E5            ; Unknown Fxxx instruction
$87A    $1CE4   JP       $CE4            ; Jump to CE4
$87C    $DC00   DRW      VC, V0, #0      ; Draw 0-byte sprite at VC, V0
$87E    $D520   DRW      V5, V2, #0      ; Draw 0-byte sprite at V5, V2
$880    $4DBE   SNE      VD, #BE         ; Skip if VD != 190
$882    $1A6D   JP       $A6D            ; Jump to A6D
$884    $A3E7   LD       I, $3E7         ; Load 3E7 into I
$886    $F767   UNKNOWN  F767            ; Unknown Fxxx instruction
$888    $2342   CALL     $342            ; Call subroutine at 342
$88A    $C3A2   RND      V3, #A2         ; V3 = random & A2
$88C    $933E   UNKNOWN  $933E           ; Unknown 9xxx instruction
$88E    $7F62   ADD      VF, #62         ; Add 98 to VF
$890    $6626   LD       V6, #26         ; Load 38 into V6
$892    $3B10   SE       VB, #10         ; Skip if VB == 16
$894    $F607   LD       V6, DT          ; V6 = delay timer
$896    $CB3E   RND      VB, #3E         ; VB = random & 3E
$898    $361C   SE       V6, #1C         ; Skip if V6 == 28
$89A    $749D   ADD      V4, #9D         ; Add 157 to V4
$89C    $84EE   SHL      V4              ; V4 <<= 1, VF = MSB
$89E    $2EAD   CALL     $EAD            ; Call subroutine at EAD
$8A0    $8CD1   OR       VC, VD          ; VC |= VD
$8A2    $87B7   SUBN     V7, VB          ; V7 = VB - V7, VF = !borrow
$8A4    $C490   RND      V4, #90         ; V4 = random & 90
$8A6    $72B1   ADD      V2, #B1         ; Add 177 to V2
$8A8    $6CF6   LD       VC, #F6         ; Load 246 into VC
$8AA    $FECE   UNKNOWN  FECE            ; Unknown Fxxx instruction
$8AC    $7365   ADD      V3, #65         ; Add 101 to V3
$8AE    $C858   RND      V8, #58         ; V8 = random & 58
$8B0    $5E20   SE       VE, V2          ; Skip if VE == V2
$8B2    $2421   CALL     $421            ; Call subroutine at 421
$8B4    $79FB   ADD      V9, #FB         ; Add 251 to V9
$8B6    $941E   UNKNOWN  $941E           ; Unknown 9xxx instruction
$8B8    $0525   SYS      $525            ; System call to 525
$8BA    $034D   SYS      $34D            ; System call to 34D
$8BC    $577A   UNKNOWN  $577A           ; Unknown 5xxx instruction
$8BE    $901D   UNKNOWN  $901D           ; Unknown 9xxx instruction
$8C0    $1D93   JP       $D93            ; Jump to D93
$8C2    $0A14   SYS      $A14            ; System call to A14
$8C4    $6F9F   LD       VF, #9F         ; Load 159 into VF
$8C6    $45EB   SNE      V5, #EB         ; Skip if V5 != 235
$8C8    $F692   UNKNOWN  F692            ; Unknown Fxxx instruction
$8CA    $D4C8   DRW      V4, VC, #8      ; Draw 8-byte sprite at V4, VC
$8CC    $5610   SE       V6, V1          ; Skip if V6 == V1
$8CE    $5BCF   UNKNOWN  $5BCF           ; Unknown 5xxx instruction
$8D0    $57A9   UNKNOWN  $57A9           ; Unknown 5xxx instruction
$8D2    $FD3D   UNKNOWN  FD3D            ; Unknown Fxxx instruction
$8D4    $4E7E   SNE      VE, #7E         ; Skip if VE != 126
$8D6    $1F9C   JP       $F9C            ; Jump to F9C
$8D8    $4A4F   SNE      VA, #4F         ; Skip if VA != 79
$8DA    $298E   CALL     $98E            ; Call subroutine at 98E
$8DC    $5057   UNKNOWN  $5057           ; Unknown 5xxx instruction
$8DE    $81D8   UNKNOWN  81D8            ; Unknown 8xxx instruction
$8E0    $7D8E   ADD      VD, #8E         ; Add 142 to VD
$8E2    $652C   LD       V5, #2C         ; Load 44 into V5
$8E4    $D1BB   DRW      V1, VB, #B      ; Draw 11-byte sprite at V1, VB
$8E6    $ED27   UNKNOWN  $ED27           ; Unknown Exxx instruction
$8E8    $C4CF   RND      V4, #CF         ; V4 = random & CF
$8EA    $07EE   SYS      $7EE            ; System call to 7EE
$8EC    $41C7   SNE      V1, #C7         ; Skip if V1 != 199
$8EE    $4A62   SNE      VA, #62         ; Skip if VA != 98
$8F0    $EBB2   UNKNOWN  $EBB2           ; Unknown Exxx instruction
$8F2    $CA60   RND      VA, #60         ; VA = random & 60
$8F4    $C3AE   RND      V3, #AE         ; V3 = random & AE
$8F6    $5BD1   UNKNOWN  $5BD1           ; Unknown 5xxx instruction
$8F8    $A21E   LD       I, $21E         ; Load 21E into I
$8FA    $8E84   ADD      VE, V8          ; VE += V8, VF = carry
$8FC    $6D3B   LD       VD, #3B         ; Load 59 into VD
$8FE    $7A14   ADD      VA, #14         ; Add 20 to VA
$900    $EAC5   UNKNOWN  $EAC5           ; Unknown Exxx instruction
$902    $E626   UNKNOWN  $E626           ; Unknown Exxx instruction
$904    $6F5A   LD       VF, #5A         ; Load 90 into VF
$906    $8529   UNKNOWN  8529            ; Unknown 8xxx instruction
$908    $43B8   SNE      V3, #B8         ; Skip if V3 != 184
$90A    $7514   ADD      V5, #14         ; Add 20 to V5
$90C    $2293   CALL     $293            ; Call subroutine at 293
$90E    $F709   UNKNOWN  F709            ; Unknown Fxxx instruction
$910    $1FD8   JP       $FD8            ; Jump to FD8
$912    $EEFE   UNKNOWN  $EEFE           ; Unknown Exxx instruction
$914    $9836   UNKNOWN  $9836           ; Unknown 9xxx instruction
$916    $FED0   UNKNOWN  FED0            ; Unknown Fxxx instruction
$918    $6C09   LD       VC, #09         ; Load 9 into VC
$91A    $241A   CALL     $41A            ; Call subroutine at 41A
$91C    $8D85   SUB      VD, V8          ; VD -= V8, VF = !borrow
$91E    $1FB8   JP       $FB8            ; Jump to FB8
$920    $72B4   ADD      V2, #B4         ; Add 180 to V2
$922    $231B   CALL     $31B            ; Call subroutine at 31B
$924    $12B4   JP       $2B4            ; Jump to 2B4
$926    $DD9B   DRW      VD, V9, #B      ; Draw 11-byte sprite at VD, V9
$928    $29D2   CALL     $9D2            ; Call subroutine at 9D2
$92A    $F438   UNKNOWN  F438            ; Unknown Fxxx instruction
$92C    $09FE   SYS      $9FE            ; System call to 9FE
$92E    $3858   SE       V8, #58         ; Skip if V8 == 88
$930    $548D   UNKNOWN  $548D           ; Unknown 5xxx instruction
$932    $6A33   LD       VA, #33         ; Load 51 into VA
$934    $BE7F   JP       V0, $E7F        ; Jump to V0 + E7F
$936    $3747   SE       V7, #47         ; Skip if V7 == 71
$938    $CA40   RND      VA, #40         ; VA = random & 40
$93A    $1C0B   JP       $C0B            ; Jump to C0B
$93C    $D10B   DRW      V1, V0, #B      ; Draw 11-byte sprite at V1, V0
$93E    $5776   UNKNOWN  $5776           ; Unknown 5xxx instruction
$940    $64D3   LD       V4, #D3         ; Load 211 into V4
$942    $5AAC   UNKNOWN  $5AAC           ; Unknown 5xxx instruction
$944    $01F7   SYS      $1F7            ; System call to 1F7
$946    $DAE0   DRW      VA, VE, #0      ; Draw 0-byte sprite at VA, VE
$948    $3500   SE       V5, #00         ; Skip if V5 == 0
$94A    $095F   SYS      $95F            ; System call to 95F
$94C    $5EA0   SE       VE, VA          ; Skip if VE == VA
$94E    $3EC3   SE       VE, #C3         ; Skip if VE == 195
$950    $9469   UNKNOWN  $9469           ; Unknown 9xxx instruction
$952    $BF8D   JP       V0, $F8D        ; Jump to V0 + F8D
$954    $84D4   ADD      V4, VD          ; V4 += VD, VF = carry
$956    $80AA   UNKNOWN  80AA            ; Unknown 8xxx instruction
$958    $22CE   CALL     $2CE            ; Call subroutine at 2CE
$95A    $2939   CALL     $939            ; Call subroutine at 939
$95C    $8879   UNKNOWN  8879            ; Unknown 8xxx instruction
$95E    $1A41   JP       $A41            ; Jump to A41
$960    $9DAB   UNKNOWN  $9DAB           ; Unknown 9xxx instruction
$962    $2BBA   CALL     $BBA            ; Call subroutine at BBA
$964    $A208   LD       I, $208         ; Load 208 into I
$966    $C941   RND      V9, #41         ; V9 = random & 41
$968    $5637   UNKNOWN  $5637           ; Unknown 5xxx instruction
$96A    $869E   SHL      V6              ; V6 <<= 1, VF = MSB
$96C    $24C0   CALL     $4C0            ; Call subroutine at 4C0
$96E    $0572   SYS      $572            ; System call to 572
$970    $6AAE   LD       VA, #AE         ; Load 174 into VA
$972    $BC90   JP       V0, $C90        ; Jump to V0 + C90
$974    $C302   RND      V3, #02         ; V3 = random & 02
$976    $4BF7   SNE      VB, #F7         ; Skip if VB != 247
$978    $C873   RND      V8, #73         ; V8 = random & 73
$97A    $9824   UNKNOWN  $9824           ; Unknown 9xxx instruction
$97C    $A44A   LD       I, $44A         ; Load 44A into I
$97E    $71A7   ADD      V1, #A7         ; Add 167 to V1
$980    $B0CD   JP       V0, $0CD        ; Jump to V0 + 0CD
$982    $3CFA   SE       VC, #FA         ; Skip if VC == 250
$984    $E1D9   UNKNOWN  $E1D9           ; Unknown Exxx instruction
$986    $EC50   UNKNOWN  $EC50           ; Unknown Exxx instruction
$988    $F522   UNKNOWN  F522            ; Unknown Fxxx instruction
$98A    $7393   ADD      V3, #93         ; Add 147 to V3
$98C    $DEB7   DRW      VE, VB, #7      ; Draw 7-byte sprite at VE, VB
$98E    $1479   JP       $479            ; Jump to 479
$990    $ACAA   LD       I, $CAA         ; Load CAA into I
$992    $A23E   LD       I, $23E         ; Load 23E into I
$994    $FE57   UNKNOWN  FE57            ; Unknown Fxxx instruction
$996    $D5C8   DRW      V5, VC, #8      ; Draw 8-byte sprite at V5, VC
$998    $9C6F   UNKNOWN  $9C6F           ; Unknown 9xxx instruction
$99A    $AF25   LD       I, $F25         ; Load F25 into I
$99C    $0FF9   SYS      $FF9            ; System call to FF9
$99E    $2E97   CALL     $E97            ; Call subroutine at E97
$9A0    $71A9   ADD      V1, #A9         ; Add 169 to V1
$9A2    $48DA   SNE      V8, #DA         ; Skip if V8 != 218
$9A4    $10CC   JP       $0CC            ; Jump to 0CC
$9A6    $D4B9   DRW      V4, VB, #9      ; Draw 9-byte sprite at V4, VB
$9A8    $DA7A   DRW      VA, V7, #A      ; Draw 10-byte sprite at VA, V7
$9AA    $0F8E   SYS      $F8E            ; System call to F8E
$9AC    $2D45   CALL     $D45            ; Call subroutine at D45
$9AE    $34FF   SE       V4, #FF         ; Skip if V4 == 255
$9B0    $9B08   UNKNOWN  $9B08           ; Unknown 9xxx instruction
$9B2    $EE17   UNKNOWN  $EE17           ; Unknown Exxx instruction
$9B4    $CF04   RND      VF, #04         ; VF = random & 04
$9B6    $F888   UNKNOWN  F888            ; Unknown Fxxx instruction
$9B8    $E59C   UNKNOWN  $E59C           ; Unknown Exxx instruction
$9BA    $E600   UNKNOWN  $E600           ; Unknown Exxx instruction
$9BC    $C50D   RND      V5, #0D         ; V5 = random & 0D
$9BE    $B4C9   JP       V0, $4C9        ; Jump to V0 + 4C9
$9C0    $5F1F   UNKNOWN  $5F1F           ; Unknown 5xxx instruction
$9C2    $2FBC   CALL     $FBC            ; Call subroutine at FBC
$9C4    $2C33   CALL     $C33            ; Call subroutine at C33
$9C6    $CFD6   RND      VF, #D6         ; VF = random & D6
$9C8    $2317   CALL     $317            ; Call subroutine at 317
$9CA    $0235   SYS      $235            ; System call to 235
$9CC    $473A   SNE      V7, #3A         ; Skip if V7 != 58
$9CE    $E89E   SKP      V8              ; Skip if key V8 pressed
$9D0    $3C64   SE       VC, #64         ; Skip if VC == 100
$9D2    $833A   UNKNOWN  833A            ; Unknown 8xxx instruction
$9D4    $CB90   RND      VB, #90         ; VB = random & 90
$9D6    $06B6   SYS      $6B6            ; System call to 6B6
$9D8    $D211   DRW      V2, V1, #1      ; Draw 1-byte sprite at V2, V1
$9DA    $2E17   CALL     $E17            ; Call subroutine at E17
$9DC    $B3D2   JP       V0, $3D2        ; Jump to V0 + 3D2
$9DE    $D972   DRW      V9, V7, #2      ; Draw 2-byte sprite at V9, V7
$9E0    $5D7B   UNKNOWN  $5D7B           ; Unknown 5xxx instruction
$9E2    $13EE   JP       $3EE            ; Jump to 3EE
$9E4    $B10C   JP       V0, $10C        ; Jump to V0 + 10C
$9E6    $6AD5   LD       VA, #D5         ; Load 213 into VA
$9E8    $C113   RND      V1, #13         ; V1 = random & 13
$9EA    $6F50   LD       VF, #50         ; Load 80 into VF
$9EC    $8611   OR       V6, V1          ; V6 |= V1
$9EE    $9973   UNKNOWN  $9973           ; Unknown 9xxx instruction
$9F0    $7CD5   ADD      VC, #D5         ; Add 213 to VC
$9F2    $4FD0   SNE      VF, #D0         ; Skip if VF != 208
$9F4    $8C18   UNKNOWN  8C18            ; Unknown 8xxx instruction
$9F6    $E7CF   UNKNOWN  $E7CF           ; Unknown Exxx instruction
$9F8    $35C1   SE       V5, #C1         ; Skip if V5 == 193
$9FA    $193D   JP       $93D            ; Jump to 93D
$9FC    $FA40   UNKNOWN  FA40            ; Unknown Fxxx instruction
$9FE    $78C1   ADD      V8, #C1         ; Add 193 to V8
$A00    $42C3   SNE      V2, #C3         ; Skip if V2 != 195
$A02    $7683   ADD      V6, #83         ; Add 131 to V6
$A04    $D071   DRW      V0, V7, #1      ; Draw 1-byte sprite at V0, V7
$A06    $AADD   LD       I, $ADD         ; Load ADD into I
$A08    $CCC7   RND      VC, #C7         ; VC = random & C7
$A0A    $0688   SYS      $688            ; System call to 688
$A0C    $9830   SNE      V8, V3          ; Skip if V8 != V3
$A0E    $26D0   CALL     $6D0            ; Call subroutine at 6D0
$A10    $0771   SYS      $771            ; System call to 771
$A12    $FB28   UNKNOWN  FB28            ; Unknown Fxxx instruction
$A14    $099F   SYS      $99F            ; System call to 99F
$A16    $3050   SE       V0, #50         ; Skip if V0 == 80
$A18    $AE06   LD       I, $E06         ; Load E06 into I
$A1A    $72B9   ADD      V2, #B9         ; Add 185 to V2
$A1C    $1D55   JP       $D55            ; Jump to D55
$A1E    $4746   SNE      V7, #46         ; Skip if V7 != 70
$A20    $DC47   DRW      VC, V4, #7      ; Draw 7-byte sprite at VC, V4
$A22    $1EE0   JP       $EE0            ; Jump to EE0
$A24    $89A4   ADD      V9, VA          ; V9 += VA, VF = carry
$A26    $BB4F   JP       V0, $B4F        ; Jump to V0 + B4F
$A28    $F649   UNKNOWN  F649            ; Unknown Fxxx instruction
$A2A    $9B85   UNKNOWN  $9B85           ; Unknown 9xxx instruction
$A2C    $0513   SYS      $513            ; System call to 513
$A2E    $1E96   JP       $E96            ; Jump to E96
$A30    $A5F5   LD       I, $5F5         ; Load 5F5 into I
$A32    $AEB8   LD       I, $EB8         ; Load EB8 into I
$A34    $A11E   LD       I, $11E         ; Load 11E into I
$A36    $C4A3   RND      V4, #A3         ; V4 = random & A3
$A38    $1CA2   JP       $CA2            ; Jump to CA2
$A3A    $500C   UNKNOWN  $500C           ; Unknown 5xxx instruction
$A3C    $140E   JP       $40E            ; Jump to 40E
$A3E    $598E   UNKNOWN  $598E           ; Unknown 5xxx instruction
$A40    $8309   UNKNOWN  8309            ; Unknown 8xxx instruction
$A42    $650A   LD       V5, #0A         ; Load 10 into V5
$A44    $107D   JP       $07D            ; Jump to 07D
$A46    $712D   ADD      V1, #2D         ; Add 45 to V1
$A48    $5561   UNKNOWN  $5561           ; Unknown 5xxx instruction
$A4A    $04C8   SYS      $4C8            ; System call to 4C8
$A4C    $C2C6   RND      V2, #C6         ; V2 = random & C6
$A4E    $C3B3   RND      V3, #B3         ; V3 = random & B3
$A50    $88D8   UNKNOWN  88D8            ; Unknown 8xxx instruction
$A52    $C7EA   RND      V7, #EA         ; V7 = random & EA
$A54    $97D4   UNKNOWN  $97D4           ; Unknown 9xxx instruction
$A56    $1723   JP       $723            ; Jump to 723
$A58    $D8E1   DRW      V8, VE, #1      ; Draw 1-byte sprite at V8, VE
$A5A    $07EC   SYS      $7EC            ; System call to 7EC
$A5C    $8D3E   SHL      VD              ; VD <<= 1, VF = MSB
$A5E    $7171   ADD      V1, #71         ; Add 113 to V1
$A60    $129B   JP       $29B            ; Jump to 29B
$A62    $746B   ADD      V4, #6B         ; Add 107 to V4
$A64    $DE3A   DRW      VE, V3, #A      ; Draw 10-byte sprite at VE, V3
$A66    $C61B   RND      V6, #1B         ; V6 = random & 1B
$A68    $F38F   UNKNOWN  F38F            ; Unknown Fxxx instruction
$A6A    $8312   AND      V3, V1          ; V3 &= V1
$A6C    $9328   UNKNOWN  $9328           ; Unknown 9xxx instruction
$A6E    $4158   SNE      V1, #58         ; Skip if V1 != 88
$A70    $2421   CALL     $421            ; Call subroutine at 421
$A72    $6B13   LD       VB, #13         ; Load 19 into VB
$A74    $A02F   LD       I, $02F         ; Load 02F into I
$A76    $8BBE   SHL      VB              ; VB <<= 1, VF = MSB
$A78    $C66B   RND      V6, #6B         ; V6 = random & 6B
$A7A    $C9D2   RND      V9, #D2         ; V9 = random & D2
$A7C    $B644   JP       V0, $644        ; Jump to V0 + 644
$A7E    $B2AC   JP       V0, $2AC        ; Jump to V0 + 2AC
$A80    $3912   SE       V9, #12         ; Skip if V9 == 18
$A82    $E818   UNKNOWN  $E818           ; Unknown Exxx instruction
$A84    $E481   UNKNOWN  $E481           ; Unknown Exxx instruction
$A86    $AC8E   LD       I, $C8E         ; Load C8E into I
$A88    $DF58   DRW      VF, V5, #8      ; Draw 8-byte sprite at VF, V5
$A8A    $E4D9   UNKNOWN  $E4D9           ; Unknown Exxx instruction
$A8C    $3336   SE       V3, #36         ; Skip if V3 == 54
$A8E    $3FB3   SE       VF, #B3         ; Skip if VF == 179
$A90    $E7C1   UNKNOWN  $E7C1           ; Unknown Exxx instruction
$A92    $0589   SYS      $589            ; System call to 589
$A94    $72BB   ADD      V2, #BB         ; Add 187 to V2
$A96    $FD37   UNKNOWN  FD37            ; Unknown Fxxx instruction
$A98    $6054   LD       V0, #54         ; Load 84 into V0
$A9A    $BE36   JP       V0, $E36        ; Jump to V0 + E36
$A9C    $3B93   SE       VB, #93         ; Skip if VB == 147
$A9E    $D822   DRW      V8, V2, #2      ; Draw 2-byte sprite at V8, V2
$AA0    $E9A7   UNKNOWN  $E9A7           ; Unknown Exxx instruction
$AA2    $693C   LD       V9, #3C         ; Load 60 into V9
$AA4    $A904   LD       I, $904         ; Load 904 into I
$AA6    $9E4A   UNKNOWN  $9E4A           ; Unknown 9xxx instruction
$AA8    $F675   UNKNOWN  F675            ; Unknown Fxxx instruction
$AAA    $DFC8   DRW      VF, VC, #8      ; Draw 8-byte sprite at VF, VC
$AAC    $AEF1   LD       I, $EF1         ; Load EF1 into I
$AAE    $576F   UNKNOWN  $576F           ; Unknown 5xxx instruction
$AB0    $9B14   UNKNOWN  $9B14           ; Unknown 9xxx instruction
$AB2    $B690   JP       V0, $690        ; Jump to V0 + 690
$AB4    $359B   SE       V5, #9B         ; Skip if V5 == 155
$AB6    $88E2   AND      V8, VE          ; V8 &= VE
$AB8    $1808   JP       $808            ; Jump to 808
$ABA    $2322   CALL     $322            ; Call subroutine at 322
$ABC    $9A08   UNKNOWN  $9A08           ; Unknown 9xxx instruction
$ABE    $0426   SYS      $426            ; System call to 426
$AC0    $195C   JP       $95C            ; Jump to 95C
$AC2    $7CB6   ADD      VC, #B6         ; Add 182 to VC
$AC4    $CA9C   RND      VA, #9C         ; VA = random & 9C
$AC6    $D560   DRW      V5, V6, #0      ; Draw 0-byte sprite at V5, V6
$AC8    $FE95   UNKNOWN  FE95            ; Unknown Fxxx instruction
$ACA    $7F1A   ADD      VF, #1A         ; Add 26 to VF
$ACC    $A894   LD       I, $894         ; Load 894 into I
$ACE    $077E   SYS      $77E            ; System call to 77E
$AD0    $572C   UNKNOWN  $572C           ; Unknown 5xxx instruction
$AD2    $37D4   SE       V7, #D4         ; Skip if V7 == 212
$AD4    $F00E   UNKNOWN  F00E            ; Unknown Fxxx instruction
$AD6    $EE0C   UNKNOWN  $EE0C           ; Unknown Exxx instruction
$AD8    $E242   UNKNOWN  $E242           ; Unknown Exxx instruction
$ADA    $D101   DRW      V1, V0, #1      ; Draw 1-byte sprite at V1, V0
$ADC    $5750   SE       V7, V5          ; Skip if V7 == V5
$ADE    $4BFB   SNE      VB, #FB         ; Skip if VB != 251
$AE0    $F5A5   UNKNOWN  F5A5            ; Unknown Fxxx instruction
$AE2    $9CC8   UNKNOWN  $9CC8           ; Unknown 9xxx instruction
$AE4    $3DA5   SE       VD, #A5         ; Skip if VD == 165
$AE6    $3414   SE       V4, #14         ; Skip if V4 == 20
$AE8    $1BC6   JP       $BC6            ; Jump to BC6
$AEA    $A9DF   LD       I, $9DF         ; Load 9DF into I
$AEC    $E8D9   UNKNOWN  $E8D9           ; Unknown Exxx instruction
$AEE    $72E6   ADD      V2, #E6         ; Add 230 to V2
$AF0    $A4FF   LD       I, $4FF         ; Load 4FF into I
$AF2    $5311   UNKNOWN  $5311           ; Unknown 5xxx instruction
$AF4    $5EAC   UNKNOWN  $5EAC           ; Unknown 5xxx instruction
$AF6    $C771   RND      V7, #71         ; V7 = random & 71
$AF8    $156F   JP       $56F            ; Jump to 56F
$AFA    $3DD7   SE       VD, #D7         ; Skip if VD == 215
$AFC    $7AA1   ADD      VA, #A1         ; Add 161 to VA
$AFE    $A69A   LD       I, $69A         ; Load 69A into I
$B00    $D8FE   DRW      V8, VF, #E      ; Draw 14-byte sprite at V8, VF
$B02    $F386   UNKNOWN  F386            ; Unknown Fxxx instruction
$B04    $35C5   SE       V5, #C5         ; Skip if V5 == 197
$B06    $29C5   CALL     $9C5            ; Call subroutine at 9C5
$B08    $6EA3   LD       VE, #A3         ; Load 163 into VE
$B0A    $B30C   JP       V0, $30C        ; Jump to V0 + 30C
$B0C    $ECF6   UNKNOWN  $ECF6           ; Unknown Exxx instruction
$B0E    $4FD5   SNE      VF, #D5         ; Skip if VF != 213
$B10    $86D1   OR       V6, VD          ; V6 |= VD
$B12    $5263   UNKNOWN  $5263           ; Unknown 5xxx instruction
$B14    $5A86   UNKNOWN  $5A86           ; Unknown 5xxx instruction
$B16    $B7B0   JP       V0, $7B0        ; Jump to V0 + 7B0
$B18    $0FFA   SYS      $FFA            ; System call to FFA
$B1A    $3E12   SE       VE, #12         ; Skip if VE == 18
$B1C    $45F1   SNE      V5, #F1         ; Skip if V5 != 241
$B1E    $91E4   UNKNOWN  $91E4           ; Unknown 9xxx instruction
$B20    $C881   RND      V8, #81         ; V8 = random & 81
$B22    $EB7B   UNKNOWN  $EB7B           ; Unknown Exxx instruction
$B24    $AA3B   LD       I, $A3B         ; Load A3B into I
$B26    $7243   ADD      V2, #43         ; Add 67 to V2
$B28    $857F   UNKNOWN  857F            ; Unknown 8xxx instruction
$B2A    $CF66   RND      VF, #66         ; VF = random & 66
$B2C    $EED1   UNKNOWN  $EED1           ; Unknown Exxx instruction
$B2E    $7D81   ADD      VD, #81         ; Add 129 to VD
$B30    $B24D   JP       V0, $24D        ; Jump to V0 + 24D
$B32    $8B6B   UNKNOWN  8B6B            ; Unknown 8xxx instruction
$B34    $1BC5   JP       $BC5            ; Jump to BC5
$B36    $E8EF   UNKNOWN  $E8EF           ; Unknown Exxx instruction
$B38    $756D   ADD      V5, #6D         ; Add 109 to V5
$B3A    $0822   SYS      $822            ; System call to 822
$B3C    $93AE   UNKNOWN  $93AE           ; Unknown 9xxx instruction
$B3E    $629D   LD       V2, #9D         ; Load 157 into V2
$B40    $D6A5   DRW      V6, VA, #5      ; Draw 5-byte sprite at V6, VA
$B42    $5B41   UNKNOWN  $5B41           ; Unknown 5xxx instruction
$B44    $8BE5   SUB      VB, VE          ; VB -= VE, VF = !borrow
$B46    $C154   RND      V1, #54         ; V1 = random & 54
$B48    $C9DB   RND      V9, #DB         ; V9 = random & DB
$B4A    $5876   UNKNOWN  $5876           ; Unknown 5xxx instruction
$B4C    $80BE   SHL      V0              ; V0 <<= 1, VF = MSB
$B4E    $9F3C   UNKNOWN  $9F3C           ; Unknown 9xxx instruction
$B50    $2455   CALL     $455            ; Call subroutine at 455
$B52    $5968   UNKNOWN  $5968           ; Unknown 5xxx instruction
$B54    $0F35   SYS      $F35            ; System call to F35
$B56    $D05B   DRW      V0, V5, #B      ; Draw 11-byte sprite at V0, V5
$B58    $A18A   LD       I, $18A         ; Load 18A into I
$B5A    $41CC   SNE      V1, #CC         ; Skip if V1 != 204
$B5C    $2CF3   CALL     $CF3            ; Call subroutine at CF3
$B5E    $0BAD   SYS      $BAD            ; System call to BAD
$B60    $2FBF   CALL     $FBF            ; Call subroutine at FBF
$B62    $887E   SHL      V8              ; V8 <<= 1, VF = MSB
$B64    $DF21   DRW      VF, V2, #1      ; Draw 1-byte sprite at VF, V2
$B66    $A528   LD       I, $528         ; Load 528 into I
$B68    $7C09   ADD      VC, #09         ; Add 9 to VC
$B6A    $CA65   RND      VA, #65         ; VA = random & 65
$B6C    $FE3F   UNKNOWN  FE3F            ; Unknown Fxxx instruction
$B6E    $9AFA   UNKNOWN  $9AFA           ; Unknown 9xxx instruction
$B70    $4343   SNE      V3, #43         ; Skip if V3 != 67
$B72    $69C5   LD       V9, #C5         ; Load 197 into V9
$B74    $8EED   UNKNOWN  8EED            ; Unknown 8xxx instruction
$B76    $53C3   UNKNOWN  $53C3           ; Unknown 5xxx instruction
$B78    $5857   UNKNOWN  $5857           ; Unknown 5xxx instruction
$B7A    $F17E   UNKNOWN  F17E            ; Unknown Fxxx instruction
$B7C    $F94A   UNKNOWN  F94A            ; Unknown Fxxx instruction
$B7E    $D021   DRW      V0, V2, #1      ; Draw 1-byte sprite at V0, V2
$B80    $C6F7   RND      V6, #F7         ; V6 = random & F7
$B82    $4347   SNE      V3, #47         ; Skip if V3 != 71
$B84    $80DA   UNKNOWN  80DA            ; Unknown 8xxx instruction
$B86    $53D3   UNKNOWN  $53D3           ; Unknown 5xxx instruction
$B88    $BE49   JP       V0, $E49        ; Jump to V0 + E49
$B8A    $5B1E   UNKNOWN  $5B1E           ; Unknown 5xxx instruction
$B8C    $7449   ADD      V4, #49         ; Add 73 to V4
$B8E    $56E3   UNKNOWN  $56E3           ; Unknown 5xxx instruction
$B90    $8C95   SUB      VC, V9          ; VC -= V9, VF = !borrow
$B92    $3C34   SE       VC, #34         ; Skip if VC == 52
$B94    $ACCC   LD       I, $CCC         ; Load CCC into I
$B96    $9F25   UNKNOWN  $9F25           ; Unknown 9xxx instruction
$B98    $16D7   JP       $6D7            ; Jump to 6D7
$B9A    $ED7D   UNKNOWN  $ED7D           ; Unknown Exxx instruction
$B9C    $597C   UNKNOWN  $597C           ; Unknown 5xxx instruction
$B9E    $09FC   SYS      $9FC            ; System call to 9FC
$BA0    $C6DD   RND      V6, #DD         ; V6 = random & DD
$BA2    $AE1C   LD       I, $E1C         ; Load E1C into I
$BA4    $2328   CALL     $328            ; Call subroutine at 328
$BA6    $4121   SNE      V1, #21         ; Skip if V1 != 33
$BA8    $6D6F   LD       VD, #6F         ; Load 111 into VD
$BAA    $E579   UNKNOWN  $E579           ; Unknown Exxx instruction
$BAC    $5442   UNKNOWN  $5442           ; Unknown 5xxx instruction
$BAE    $619F   LD       V1, #9F         ; Load 159 into V1
$BB0    $35E4   SE       V5, #E4         ; Skip if V5 == 228
$BB2    $1912   JP       $912            ; Jump to 912
$BB4    $E085   UNKNOWN  $E085           ; Unknown Exxx instruction
$BB6    $8A66   SHR      VA              ; VA >>= 1, VF = LSB
$BB8    $FED8   UNKNOWN  FED8            ; Unknown Fxxx instruction
$BBA    $8D25   SUB      VD, V2          ; VD -= V2, VF = !borrow
$BBC    $17B4   JP       $7B4            ; Jump to 7B4
$BBE    $759E   ADD      V5, #9E         ; Add 158 to V5
$BC0    $0B16   SYS      $B16            ; System call to B16
$BC2    $EA2C   UNKNOWN  $EA2C           ; Unknown Exxx instruction
$BC4    $582A   UNKNOWN  $582A           ; Unknown 5xxx instruction
$BC6    $4805   SNE      V8, #05         ; Skip if V8 != 5
$BC8    $016F   SYS      $16F            ; System call to 16F
$BCA    $56FF   UNKNOWN  $56FF           ; Unknown 5xxx instruction
$BCC    $AB15   LD       I, $B15         ; Load B15 into I
$BCE    $02CC   SYS      $2CC            ; System call to 2CC
$BD0    $48F4   SNE      V8, #F4         ; Skip if V8 != 244
$BD2    $BD1B   JP       V0, $D1B        ; Jump to V0 + D1B
$BD4    $CBFF   RND      VB, #FF         ; VB = random & FF
$BD6    $122B   JP       $22B            ; Jump to 22B
$BD8    $620D   LD       V2, #0D         ; Load 13 into V2
$BDA    $1F9D   JP       $F9D            ; Jump to F9D
$BDC    $5EFF   UNKNOWN  $5EFF           ; Unknown 5xxx instruction
$BDE    $BCE2   JP       V0, $CE2        ; Jump to V0 + CE2
$BE0    $370E   SE       V7, #0E         ; Skip if V7 == 14
$BE2    $B1FD   JP       V0, $1FD        ; Jump to V0 + 1FD
$BE4    $7224   ADD      V2, #24         ; Add 36 to V2
$BE6    $5C10   SE       VC, V1          ; Skip if VC == V1
$BE8    $EFB3   UNKNOWN  $EFB3           ; Unknown Exxx instruction
$BEA    $27CD   CALL     $7CD            ; Call subroutine at 7CD
$BEC    $24C8   CALL     $4C8            ; Call subroutine at 4C8
$BEE    $2AF7   CALL     $AF7            ; Call subroutine at AF7
$BF0    $3328   SE       V3, #28         ; Skip if V3 == 40
$BF2    $2FBB   CALL     $FBB            ; Call subroutine at FBB
$BF4    $FB95   UNKNOWN  FB95            ; Unknown Fxxx instruction
$BF6    $70B2   ADD      V0, #B2         ; Add 178 to V0
$BF8    $1365   JP       $365            ; Jump to 365
$BFA    $63F0   LD       V3, #F0         ; Load 240 into V3
$BFC    $46FE   SNE      V6, #FE         ; Skip if V6 != 254
$BFE    $D19C   DRW      V1, V9, #C      ; Draw 12-byte sprite at V1, V9
$C00    $9F1C   UNKNOWN  $9F1C           ; Unknown 9xxx instruction
$C02    $ED2D   UNKNOWN  $ED2D           ; Unknown Exxx instruction
$C04    $770B   ADD      V7, #0B         ; Add 11 to V7
$C06    $2874   CALL     $874            ; Call subroutine at 874
$C08    $F518   LD       ST, V5          ; Sound timer = V5
$C0A    $F357   UNKNOWN  F357            ; Unknown Fxxx instruction
$C0C    $C86D   RND      V8, #6D         ; V8 = random & 6D
$C0E    $22AC   CALL     $2AC            ; Call subroutine at 2AC
$C10    $6DC1   LD       VD, #C1         ; Load 193 into VD
$C12    $D703   DRW      V7, V0, #3      ; Draw 3-byte sprite at V7, V0
$C14    $5875   UNKNOWN  $5875           ; Unknown 5xxx instruction
$C16    $22E5   CALL     $2E5            ; Call subroutine at 2E5
$C18    $BF9B   JP       V0, $F9B        ; Jump to V0 + F9B
$C1A    $BA2C   JP       V0, $A2C        ; Jump to V0 + A2C
$C1C    $07B4   SYS      $7B4            ; System call to 7B4
$C1E    $C8A5   RND      V8, #A5         ; V8 = random & A5
$C20    $53EF   UNKNOWN  $53EF           ; Unknown 5xxx instruction
$C22    $851D   UNKNOWN  851D            ; Unknown 8xxx instruction
$C24    $D653   DRW      V6, V5, #3      ; Draw 3-byte sprite at V6, V5
$C26    $7A31   ADD      VA, #31         ; Add 49 to VA
$C28    $CE09   RND      VE, #09         ; VE = random & 09
$C2A    $6E57   LD       VE, #57         ; Load 87 into VE
$C2C    $40CC   SNE      V0, #CC         ; Skip if V0 != 204
$C2E    $A09B   LD       I, $09B         ; Load 09B into I
$C30    $AFB0   LD       I, $FB0         ; Load FB0 into I
$C32    $92D9   UNKNOWN  $92D9           ; Unknown 9xxx instruction
$C34    $7589   ADD      V5, #89         ; Add 137 to V5
$C36    $BFCC   JP       V0, $FCC        ; Jump to V0 + FCC
$C38    $3E00   SE       VE, #00         ; Skip if VE == 0
$C3A    $4583   SNE      V5, #83         ; Skip if V5 != 131
$C3C    $5898   UNKNOWN  $5898           ; Unknown 5xxx instruction
$C3E    $0852   SYS      $852            ; System call to 852
$C40    $F884   UNKNOWN  F884            ; Unknown Fxxx instruction
$C42    $A958   LD       I, $958         ; Load 958 into I
$C44    $CF87   RND      VF, #87         ; VF = random & 87
$C46    $50AA   UNKNOWN  $50AA           ; Unknown 5xxx instruction
$C48    $BD04   JP       V0, $D04        ; Jump to V0 + D04
$C4A    $4803   SNE      V8, #03         ; Skip if V8 != 3
$C4C    $2A63   CALL     $A63            ; Call subroutine at A63
$C4E    $B402   JP       V0, $402        ; Jump to V0 + 402
$C50    $0006   SYS      $006            ; System call to 006
$C52    $1CEE   JP       $CEE            ; Jump to CEE
$C54    $302E   SE       V0, #2E         ; Skip if V0 == 46
$C56    $F7B3   UNKNOWN  F7B3            ; Unknown Fxxx instruction
$C58    $C8F7   RND      V8, #F7         ; V8 = random & F7
$C5A    $D400   DRW      V4, V0, #0      ; Draw 0-byte sprite at V4, V0
$C5C    $64CA   LD       V4, #CA         ; Load 202 into V4
$C5E    $8994   ADD      V9, V9          ; V9 += V9, VF = carry
$C60    $2D14   CALL     $D14            ; Call subroutine at D14
$C62    $7E92   ADD      VE, #92         ; Add 146 to VE
$C64    $6AD8   LD       VA, #D8         ; Load 216 into VA
$C66    $BEB4   JP       V0, $EB4        ; Jump to V0 + EB4
$C68    $4BE5   SNE      VB, #E5         ; Skip if VB != 229
$C6A    $E37D   UNKNOWN  $E37D           ; Unknown Exxx instruction
$C6C    $2F88   CALL     $F88            ; Call subroutine at F88
$C6E    $D7D0   DRW      V7, VD, #0      ; Draw 0-byte sprite at V7, VD
$C70    $B2A4   JP       V0, $2A4        ; Jump to V0 + 2A4
$C72    $C754   RND      V7, #54         ; V7 = random & 54
$C74    $1363   JP       $363            ; Jump to 363
$C76    $4290   SNE      V2, #90         ; Skip if V2 != 144
$C78    $882E   SHL      V8              ; V8 <<= 1, VF = MSB
$C7A    $91A8   UNKNOWN  $91A8           ; Unknown 9xxx instruction
$C7C    $EDA5   UNKNOWN  $EDA5           ; Unknown Exxx instruction
$C7E    $A952   LD       I, $952         ; Load 952 into I
$C80    $D210   DRW      V2, V1, #0      ; Draw 0-byte sprite at V2, V1
$C82    $DAB8   DRW      VA, VB, #8      ; Draw 8-byte sprite at VA, VB
$C84    $DD3C   DRW      VD, V3, #C      ; Draw 12-byte sprite at VD, V3
$C86    $8D6A   UNKNOWN  8D6A            ; Unknown 8xxx instruction
$C88    $F059   UNKNOWN  F059            ; Unknown Fxxx instruction
$C8A    $BD18   JP       V0, $D18        ; Jump to V0 + D18
$C8C    $F783   UNKNOWN  F783            ; Unknown Fxxx instruction
$C8E    $1747   JP       $747            ; Jump to 747
$C90    $B1E8   JP       V0, $1E8        ; Jump to V0 + 1E8
$C92    $0051   SYS      $051            ; System call to 051
$C94    $40C8   SNE      V0, #C8         ; Skip if V0 != 200
$C96    $726D   ADD      V2, #6D         ; Add 109 to V2
$C98    $CA0D   RND      VA, #0D         ; VA = random & 0D
$C9A    $FCA0   UNKNOWN  FCA0            ; Unknown Fxxx instruction
$C9C    $5AF8   UNKNOWN  $5AF8           ; Unknown 5xxx instruction
$C9E    $AB37   LD       I, $B37         ; Load B37 into I
$CA0    $6ABA   LD       VA, #BA         ; Load 186 into VA
$CA2    $A200   LD       I, $200         ; Load 200 into I
$CA4    $1522   JP       $522            ; Jump to 522
$CA6    $881B   UNKNOWN  881B            ; Unknown 8xxx instruction
$CA8    $45E4   SNE      V5, #E4         ; Skip if V5 != 228
$CAA    $A191   LD       I, $191         ; Load 191 into I
$CAC    $F51E   ADD      I, V5           ; I += V5
$CAE    $B0CA   JP       V0, $0CA        ; Jump to V0 + 0CA
$CB0    $2398   CALL     $398            ; Call subroutine at 398
$CB2    $5502   UNKNOWN  $5502           ; Unknown 5xxx instruction
$CB4    $B65A   JP       V0, $65A        ; Jump to V0 + 65A
$CB6    $E39F   UNKNOWN  $E39F           ; Unknown Exxx instruction
$CB8    $08FC   SYS      $8FC            ; System call to 8FC
$CBA    $37C9   SE       V7, #C9         ; Skip if V7 == 201
$CBC    $98F9   UNKNOWN  $98F9           ; Unknown 9xxx instruction
$CBE    $F04A   UNKNOWN  F04A            ; Unknown Fxxx instruction
$CC0    $1D0D   JP       $D0D            ; Jump to D0D
$CC2    $7B61   ADD      VB, #61         ; Add 97 to VB
$CC4    $6AA0   LD       VA, #A0         ; Load 160 into VA
$CC6    $B653   JP       V0, $653        ; Jump to V0 + 653
$CC8    $CD5E   RND      VD, #5E         ; VD = random & 5E
$CCA    $5A02   UNKNOWN  $5A02           ; Unknown 5xxx instruction
$CCC    $6B79   LD       VB, #79         ; Load 121 into VB
$CCE    $7564   ADD      V5, #64         ; Add 100 to V5
$CD0    $8A9A   UNKNOWN  8A9A            ; Unknown 8xxx instruction
$CD2    $A6FF   LD       I, $6FF         ; Load 6FF into I
$CD4    $5D1A   UNKNOWN  $5D1A           ; Unknown 5xxx instruction
$CD6    $1605   JP       $605            ; Jump to 605
$CD8    $C67E   RND      V6, #7E         ; V6 = random & 7E
$CDA    $A919   LD       I, $919         ; Load 919 into I
$CDC    $C516   RND      V5, #16         ; V5 = random & 16
$CDE    $A8FA   LD       I, $8FA         ; Load 8FA into I
$CE0    $083D   SYS      $83D            ; System call to 83D
$CE2    $504E   UNKNOWN  $504E           ; Unknown 5xxx instruction
$CE4    $F802   UNKNOWN  F802            ; Unknown Fxxx instruction
$CE6    $CCD5   RND      VC, #D5         ; VC = random & D5
$CE8    $5DB2   UNKNOWN  $5DB2           ; Unknown 5xxx instruction
$CEA    $A6CA   LD       I, $6CA         ; Load 6CA into I
$CEC    $224B   CALL     $24B            ; Call subroutine at 24B
$CEE    $1BCC   JP       $BCC            ; Jump to BCC
$CF0    $723D   ADD      V2, #3D         ; Add 61 to V2
$CF2    $190B   JP       $90B            ; Jump to 90B
$CF4    $7B7F   ADD      VB, #7F         ; Add 127 to VB
$CF6    $5F2F   UNKNOWN  $5F2F           ; Unknown 5xxx instruction
$CF8    $1AD7   JP       $AD7            ; Jump to AD7
$CFA    $809E   SHL      V0              ; V0 <<= 1, VF = MSB
$CFC    $D89E   DRW      V8, V9, #E      ; Draw 14-byte sprite at V8, V9
$CFE    $2BCA   CALL     $BCA            ; Call subroutine at BCA
$D00    $D609   DRW      V6, V0, #9      ; Draw 9-byte sprite at V6, V0
$D02    $435C   SNE      V3, #5C         ; Skip if V3 != 92
$D04    $8FB7   SUBN     VF, VB          ; VF = VB - VF, VF = !borrow
$D06    $059B   SYS      $59B            ; System call to 59B
$D08    $F8B8   UNKNOWN  F8B8            ; Unknown Fxxx instruction
$D0A    $331F   SE       V3, #1F         ; Skip if V3 == 31
$D0C    $B9A6   JP       V0, $9A6        ; Jump to V0 + 9A6
$D0E    $E0F8   UNKNOWN  $E0F8           ; Unknown Exxx instruction
$D10    $B96E   JP       V0, $96E        ; Jump to V0 + 96E
$D12    $B409   JP       V0, $409        ; Jump to V0 + 409
$D14    $63E9   LD       V3, #E9         ; Load 233 into V3
$D16    $1C36   JP       $C36            ; Jump to C36
$D18    $4C83   SNE      VC, #83         ; Skip if VC != 131
$D1A    $DB73   DRW      VB, V7, #3      ; Draw 3-byte sprite at VB, V7
$D1C    $C81B   RND      V8, #1B         ; V8 = random & 1B
$D1E    $95AA   UNKNOWN  $95AA           ; Unknown 9xxx instruction
$D20    $1031   JP       $031            ; Jump to 031
$D22    $DB4A   DRW      VB, V4, #A      ; Draw 10-byte sprite at VB, V4
$D24    $E9EE   UNKNOWN  $E9EE           ; Unknown Exxx instruction
$D26    $32C3   SE       V2, #C3         ; Skip if V2 == 195
$D28    $7339   ADD      V3, #39         ; Add 57 to V3
$D2A    $AE67   LD       I, $E67         ; Load E67 into I
$D2C    $4056   SNE      V0, #56         ; Skip if V0 != 86
$D2E    $A612   LD       I, $612         ; Load 612 into I
$D30    $BFC5   JP       V0, $FC5        ; Jump to V0 + FC5
$D32    $BAA1   JP       V0, $AA1        ; Jump to V0 + AA1
$D34    $1062   JP       $062            ; Jump to 062
$D36    $67A5   LD       V7, #A5         ; Load 165 into V7
$D38    $1616   JP       $616            ; Jump to 616
$D3A    $63A0   LD       V3, #A0         ; Load 160 into V3
$D3C    $4B38   SNE      VB, #38         ; Skip if VB != 56
$D3E    $AC26   LD       I, $C26         ; Load C26 into I
$D40    $8A08   UNKNOWN  8A08            ; Unknown 8xxx instruction
$D42    $4A8C   SNE      VA, #8C         ; Skip if VA != 140
$D44    $32D6   SE       V2, #D6         ; Skip if V2 == 214
$D46    $222B   CALL     $22B            ; Call subroutine at 22B
$D48    $CE03   RND      VE, #03         ; VE = random & 03
$D4A    $9C60   SNE      VC, V6          ; Skip if VC != V6
$D4C    $65FA   LD       V5, #FA         ; Load 250 into V5
$D4E    $34B3   SE       V4, #B3         ; Skip if V4 == 179
$D50    $C4D7   RND      V4, #D7         ; V4 = random & D7
$D52    $F825   UNKNOWN  F825            ; Unknown Fxxx instruction
$D54    $4157   SNE      V1, #57         ; Skip if V1 != 87
$D56    $6710   LD       V7, #10         ; Load 16 into V7
$D58    $0245   SYS      $245            ; System call to 245
$D5A    $97A8   UNKNOWN  $97A8           ; Unknown 9xxx instruction
$D5C    $1B3F   JP       $B3F            ; Jump to B3F
$D5E    $D1F0   DRW      V1, VF, #0      ; Draw 0-byte sprite at V1, VF
$D60    $7533   ADD      V5, #33         ; Add 51 to V5
$D62    $65E5   LD       V5, #E5         ; Load 229 into V5
$D64    $C138   RND      V1, #38         ; V1 = random & 38
$D66    $37CD   SE       V7, #CD         ; Skip if V7 == 205
$D68    $CE14   RND      VE, #14         ; VE = random & 14
$D6A    $734C   ADD      V3, #4C         ; Add 76 to V3
$D6C    $11D2   JP       $1D2            ; Jump to 1D2
$D6E    $B511   JP       V0, $511        ; Jump to V0 + 511
$D70    $35A5   SE       V5, #A5         ; Skip if V5 == 165
$D72    $26AD   CALL     $6AD            ; Call subroutine at 6AD
$D74    $0F3C   SYS      $F3C            ; System call to F3C
$D76    $D49C   DRW      V4, V9, #C      ; Draw 12-byte sprite at V4, V9
$D78    $0CA2   SYS      $CA2            ; System call to CA2
$D7A    $9795   UNKNOWN  $9795           ; Unknown 9xxx instruction
$D7C    $B5D0   JP       V0, $5D0        ; Jump to V0 + 5D0
$D7E    $91FF   UNKNOWN  $91FF           ; Unknown 9xxx instruction
$D80    $60FE   LD       V0, #FE         ; Load 254 into V0
$D82    $CBF3   RND      VB, #F3         ; VB = random & F3
$D84    $62A6   LD       V2, #A6         ; Load 166 into V2
$D86    $5066   UNKNOWN  $5066           ; Unknown 5xxx instruction
$D88    $6EEA   LD       VE, #EA         ; Load 234 into VE
$D8A    $0CAE   SYS      $CAE            ; System call to CAE
$D8C    $1340   JP       $340            ; Jump to 340
$D8E    $5BCF   UNKNOWN  $5BCF           ; Unknown 5xxx instruction
$D90    $F26D   UNKNOWN  F26D            ; Unknown Fxxx instruction
$D92    $A7A8   LD       I, $7A8         ; Load 7A8 into I
$D94    $6C85   LD       VC, #85         ; Load 133 into VC
$D96    $095A   SYS      $95A            ; System call to 95A
$D98    $AB99   LD       I, $B99         ; Load B99 into I
$D9A    $9918   UNKNOWN  $9918           ; Unknown 9xxx instruction
$D9C    $E0C0   UNKNOWN  $E0C0           ; Unknown Exxx instruction
$D9E    $833A   UNKNOWN  833A            ; Unknown 8xxx instruction
$DA0    $150D   JP       $50D            ; Jump to 50D
$DA2    $79A8   ADD      V9, #A8         ; Add 168 to V9
$DA4    $68AF   LD       V8, #AF         ; Load 175 into V8
$DA6    $B6DE   JP       V0, $6DE        ; Jump to V0 + 6DE
$DA8    $F4CD   UNKNOWN  F4CD            ; Unknown Fxxx instruction
$DAA    $8DB3   XOR      VD, VB          ; VD ^= VB
$DAC    $C1DC   RND      V1, #DC         ; V1 = random & DC
$DAE    $6BBA   LD       VB, #BA         ; Load 186 into VB
$DB0    $3AEB   SE       VA, #EB         ; Skip if VA == 235
$DB2    $5FF7   UNKNOWN  $5FF7           ; Unknown 5xxx instruction
$DB4    $73C4   ADD      V3, #C4         ; Add 196 to V3
$DB6    $E717   UNKNOWN  $E717           ; Unknown Exxx instruction
$DB8    $0AA9   SYS      $AA9            ; System call to AA9
$DBA    $DD50   DRW      VD, V5, #0      ; Draw 0-byte sprite at VD, V5
$DBC    $5984   UNKNOWN  $5984           ; Unknown 5xxx instruction
$DBE    $1D13   JP       $D13            ; Jump to D13
$DC0    $E24D   UNKNOWN  $E24D           ; Unknown Exxx instruction
$DC2    $58C6   UNKNOWN  $58C6           ; Unknown 5xxx instruction
$DC4    $58B7   UNKNOWN  $58B7           ; Unknown 5xxx instruction
$DC6    $C6D7   RND      V6, #D7         ; V6 = random & D7
$DC8    $1582   JP       $582            ; Jump to 582
$DCA    $5396   UNKNOWN  $5396           ; Unknown 5xxx instruction
$DCC    $4A3D   SNE      VA, #3D         ; Skip if VA != 61
$DCE    $888E   SHL      V8              ; V8 <<= 1, VF = MSB
$DD0    $E3A3   UNKNOWN  $E3A3           ; Unknown Exxx instruction
$DD2    $5601   UNKNOWN  $5601           ; Unknown 5xxx instruction
$DD4    $1FF3   JP       $FF3            ; Jump to FF3
$DD6    $D652   DRW      V6, V5, #2      ; Draw 2-byte sprite at V6, V5
$DD8    $2642   CALL     $642            ; Call subroutine at 642
$DDA    $5527   UNKNOWN  $5527           ; Unknown 5xxx instruction
$DDC    $DB34   DRW      VB, V3, #4      ; Draw 4-byte sprite at VB, V3
$DDE    $866F   UNKNOWN  866F            ; Unknown 8xxx instruction
$DE0    $2B49   CALL     $B49            ; Call subroutine at B49
$DE2    $DBFE   DRW      VB, VF, #E      ; Draw 14-byte sprite at VB, VF
$DE4    $81AC   UNKNOWN  81AC            ; Unknown 8xxx instruction
$DE6    $6AA5   LD       VA, #A5         ; Load 165 into VA
$DE8    $9329   UNKNOWN  $9329           ; Unknown 9xxx instruction
$DEA    $C8AE   RND      V8, #AE         ; V8 = random & AE
$DEC    $74E3   ADD      V4, #E3         ; Add 227 to V4
$DEE    $4BB7   SNE      VB, #B7         ; Skip if VB != 183
$DF0    $8CAB   UNKNOWN  8CAB            ; Unknown 8xxx instruction
$DF2    $1F3F   JP       $F3F            ; Jump to F3F
$DF4    $CDC5   RND      VD, #C5         ; VD = random & C5
$DF6    $B9CA   JP       V0, $9CA        ; Jump to V0 + 9CA
$DF8    $BA2E   JP       V0, $A2E        ; Jump to V0 + A2E
$DFA    $D010   DRW      V0, V1, #0      ; Draw 0-byte sprite at V0, V1
$DFC    $728F   ADD      V2, #8F         ; Add 143 to V2
$DFE    $251A   CALL     $51A            ; Call subroutine at 51A
$E00    $5C3E   UNKNOWN  $5C3E           ; Unknown 5xxx instruction
$E02    $DB7A   DRW      VB, V7, #A      ; Draw 10-byte sprite at VB, V7
$E04    $26B3   CALL     $6B3            ; Call subroutine at 6B3
$E06    $6CD7   LD       VC, #D7         ; Load 215 into VC
$E08    $A762   LD       I, $762         ; Load 762 into I
$E0A    $E64E   UNKNOWN  $E64E           ; Unknown Exxx instruction
$E0C    $3DCD   SE       VD, #CD         ; Skip if VD == 205
$E0E    $3E22   SE       VE, #22         ; Skip if VE == 34
$E10    $77D9   ADD      V7, #D9         ; Add 217 to V7
$E12    $F181   UNKNOWN  F181            ; Unknown Fxxx instruction
$E14    $BF1C   JP       V0, $F1C        ; Jump to V0 + F1C
$E16    $ACB7   LD       I, $CB7         ; Load CB7 into I
$E18    $9D70   SNE      VD, V7          ; Skip if VD != V7
$E1A    $5C45   UNKNOWN  $5C45           ; Unknown 5xxx instruction
$E1C    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$E1E    $9DBC   UNKNOWN  $9DBC           ; Unknown 9xxx instruction
$E20    $C151   RND      V1, #51         ; V1 = random & 51
$E22    $D734   DRW      V7, V3, #4      ; Draw 4-byte sprite at V7, V3
$E24    $A32B   LD       I, $32B         ; Load 32B into I
$E26    $D1A5   DRW      V1, VA, #5      ; Draw 5-byte sprite at V1, VA
$E28    $B9B5   JP       V0, $9B5        ; Jump to V0 + 9B5
$E2A    $2EBD   CALL     $EBD            ; Call subroutine at EBD
$E2C    $A83D   LD       I, $83D         ; Load 83D into I
$E2E    $BF32   JP       V0, $F32        ; Jump to V0 + F32
$E30    $AD09   LD       I, $D09         ; Load D09 into I
$E32    $9B59   UNKNOWN  $9B59           ; Unknown 9xxx instruction
$E34    $2A35   CALL     $A35            ; Call subroutine at A35
$E36    $C969   RND      V9, #69         ; V9 = random & 69
$E38    $AE88   LD       I, $E88         ; Load E88 into I
$E3A    $94BD   UNKNOWN  $94BD           ; Unknown 9xxx instruction
$E3C    $13B8   JP       $3B8            ; Jump to 3B8
$E3E    $44EC   SNE      V4, #EC         ; Skip if V4 != 236
$E40    $2275   CALL     $275            ; Call subroutine at 275
$E42    $9AAA   UNKNOWN  $9AAA           ; Unknown 9xxx instruction
$E44    $29BF   CALL     $9BF            ; Call subroutine at 9BF
$E46    $7D25   ADD      VD, #25         ; Add 37 to VD
$E48    $A73D   LD       I, $73D         ; Load 73D into I
$E4A    $39E6   SE       V9, #E6         ; Skip if V9 == 230
$E4C    $DBEC   DRW      VB, VE, #C      ; Draw 12-byte sprite at VB, VE
$E4E    $5A08   UNKNOWN  $5A08           ; Unknown 5xxx instruction
$E50    $6A35   LD       VA, #35         ; Load 53 into VA
$E52    $5DB3   UNKNOWN  $5DB3           ; Unknown 5xxx instruction
$E54    $2FB9   CALL     $FB9            ; Call subroutine at FB9
$E56    $D254   DRW      V2, V5, #4      ; Draw 4-byte sprite at V2, V5
$E58    $7F39   ADD      VF, #39         ; Add 57 to VF
$E5A    $A5D8   LD       I, $5D8         ; Load 5D8 into I
$E5C    $2CC4   CALL     $CC4            ; Call subroutine at CC4
$E5E    $FA7E   UNKNOWN  FA7E            ; Unknown Fxxx instruction
$E60    $D554   DRW      V5, V5, #4      ; Draw 4-byte sprite at V5, V5
$E62    $9079   UNKNOWN  $9079           ; Unknown 9xxx instruction
$E64    $8138   UNKNOWN  8138            ; Unknown 8xxx instruction
$E66    $E1DE   UNKNOWN  $E1DE           ; Unknown Exxx instruction
$E68    $D0AD   DRW      V0, VA, #D      ; Draw 13-byte sprite at V0, VA
$E6A    $5819   UNKNOWN  $5819           ; Unknown 5xxx instruction
$E6C    $FB56   UNKNOWN  FB56            ; Unknown Fxxx instruction
$E6E    $00DC   SYS      $0DC            ; System call to 0DC
$E70    $10D2   JP       $0D2            ; Jump to 0D2
$E72    $6435   LD       V4, #35         ; Load 53 into V4
$E74    $86F5   SUB      V6, VF          ; V6 -= VF, VF = !borrow
$E76    $7DDE   ADD      VD, #DE         ; Add 222 to VD
$E78    $C9FC   RND      V9, #FC         ; V9 = random & FC
$E7A    $FCC3   UNKNOWN  FCC3            ; Unknown Fxxx instruction
$E7C    $1B03   JP       $B03            ; Jump to B03
$E7E    $CA42   RND      VA, #42         ; VA = random & 42
$E80    $BECF   JP       V0, $ECF        ; Jump to V0 + ECF
$E82    $28A2   CALL     $8A2            ; Call subroutine at 8A2
$E84    $5673   UNKNOWN  $5673           ; Unknown 5xxx instruction
$E86    $67FA   LD       V7, #FA         ; Load 250 into V7
$E88    $B451   JP       V0, $451        ; Jump to V0 + 451
$E8A    $409A   SNE      V0, #9A         ; Skip if V0 != 154
$E8C    $6DD0   LD       VD, #D0         ; Load 208 into VD
$E8E    $E425   UNKNOWN  $E425           ; Unknown Exxx instruction
$E90    $4FE9   SNE      VF, #E9         ; Skip if VF != 233
$E92    $4E7A   SNE      VE, #7A         ; Skip if VE != 122
$E94    $6B6D   LD       VB, #6D         ; Load 109 into VB
$E96    $13E4   JP       $3E4            ; Jump to 3E4
$E98    $F8E5   UNKNOWN  F8E5            ; Unknown Fxxx instruction
$E9A    $D002   DRW      V0, V0, #2      ; Draw 2-byte sprite at V0, V0
$E9C    $1A43   JP       $A43            ; Jump to A43
$E9E    $4E7E   SNE      VE, #7E         ; Skip if VE != 126
$EA0    $96C4   UNKNOWN  $96C4           ; Unknown 9xxx instruction
$EA2    $D8A7   DRW      V8, VA, #7      ; Draw 7-byte sprite at V8, VA
$EA4    $F6C4   UNKNOWN  F6C4            ; Unknown Fxxx instruction
$EA6    $431C   SNE      V3, #1C         ; Skip if V3 != 28
$EA8    $6CAA   LD       VC, #AA         ; Load 170 into VC
$EAA    $CCA8   RND      VC, #A8         ; VC = random & A8
$EAC    $BD17   JP       V0, $D17        ; Jump to V0 + D17
$EAE    $AE8A   LD       I, $E8A         ; Load E8A into I
$EB0    $C7A8   RND      V7, #A8         ; V7 = random & A8
$EB2    $476C   SNE      V7, #6C         ; Skip if V7 != 108
$EB4    $468F   SNE      V6, #8F         ; Skip if V6 != 143
$EB6    $1DC6   JP       $DC6            ; Jump to DC6
$EB8    $58A8   UNKNOWN  $58A8           ; Unknown 5xxx instruction
$EBA    $054E   SYS      $54E            ; System call to 54E
$EBC    $7679   ADD      V6, #79         ; Add 121 to V6
$EBE    $3F24   SE       VF, #24         ; Skip if VF == 36
$EC0    $5870   SE       V8, V7          ; Skip if V8 == V7
$EC2    $639E   LD       V3, #9E         ; Load 158 into V3
$EC4    $8102   AND      V1, V0          ; V1 &= V0
$EC6    $F2FB   UNKNOWN  F2FB            ; Unknown Fxxx instruction
$EC8    $C2C6   RND      V2, #C6         ; V2 = random & C6
$ECA    $5C00   SE       VC, V0          ; Skip if VC == V0
$ECC    $1873   JP       $873            ; Jump to 873
$ECE    $5C13   UNKNOWN  $5C13           ; Unknown 5xxx instruction
$ED0    $EFAF   UNKNOWN  $EFAF           ; Unknown Exxx instruction
$ED2    $B038   JP       V0, $038        ; Jump to V0 + 038
$ED4    $3836   SE       V8, #36         ; Skip if V8 == 54
$ED6    $FC60   UNKNOWN  FC60            ; Unknown Fxxx instruction
$ED8    $343E   SE       V4, #3E         ; Skip if V4 == 62
$EDA    $1025   JP       $025            ; Jump to 025
$EDC    $91DA   UNKNOWN  $91DA           ; Unknown 9xxx instruction
$EDE    $882E   SHL      V8              ; V8 <<= 1, VF = MSB
$EE0    $7840   ADD      V8, #40         ; Add 64 to V8
$EE2    $DC0C   DRW      VC, V0, #C      ; Draw 12-byte sprite at VC, V0
$EE4    $8B23   XOR      VB, V2          ; VB ^= V2
$EE6    $A767   LD       I, $767         ; Load 767 into I
$EE8    $E01D   UNKNOWN  $E01D           ; Unknown Exxx instruction
$EEA    $016D   SYS      $16D            ; System call to 16D
$EEC    $9374   UNKNOWN  $9374           ; Unknown 9xxx instruction
$EEE    $79A4   ADD      V9, #A4         ; Add 164 to V9
$EF0    $411A   SNE      V1, #1A         ; Skip if V1 != 26
$EF2    $6C53   LD       VC, #53         ; Load 83 into VC
$EF4    $AD3F   LD       I, $D3F         ; Load D3F into I
$EF6    $31C9   SE       V1, #C9         ; Skip if V1 == 201
$EF8    $4F2B   SNE      VF, #2B         ; Skip if VF != 43
$EFA    $4D77   SNE      VD, #77         ; Skip if VD != 119
$EFC    $C0EC   RND      V0, #EC         ; V0 = random & EC
$EFE    $AA4A   LD       I, $A4A         ; Load A4A into I
$F00    $6564   LD       V5, #64         ; Load 100 into V5
$F02    $C95F   RND      V9, #5F         ; V9 = random & 5F
$F04    $DC1B   DRW      VC, V1, #B      ; Draw 11-byte sprite at VC, V1
$F06    $FBB8   UNKNOWN  FBB8            ; Unknown Fxxx instruction
$F08    $2102   CALL     $102            ; Call subroutine at 102
$F0A    $4554   SNE      V5, #54         ; Skip if V5 != 84
$F0C    $948C   UNKNOWN  $948C           ; Unknown 9xxx instruction
$F0E    $1B0D   JP       $B0D            ; Jump to B0D
$F10    $07E6   SYS      $7E6            ; System call to 7E6
$F12    $B1DC   JP       V0, $1DC        ; Jump to V0 + 1DC
$F14    $1990   JP       $990            ; Jump to 990
$F16    $4CBD   SNE      VC, #BD         ; Skip if VC != 189
$F18    $096A   SYS      $96A            ; System call to 96A
$F1A    $509F   UNKNOWN  $509F           ; Unknown 5xxx instruction
$F1C    $6CB8   LD       VC, #B8         ; Load 184 into VC
$F1E    $71D4   ADD      V1, #D4         ; Add 212 to V1
$F20    $CDDB   RND      VD, #DB         ; VD = random & DB
$F22    $DD96   DRW      VD, V9, #6      ; Draw 6-byte sprite at VD, V9
$F24    $1AEF   JP       $AEF            ; Jump to AEF
$F26    $66D0   LD       V6, #D0         ; Load 208 into V6
$F28    $FB17   UNKNOWN  FB17            ; Unknown Fxxx instruction
$F2A    $6810   LD       V8, #10         ; Load 16 into V8
$F2C    $A258   LD       I, $258         ; Load 258 into I
$F2E    $8A4C   UNKNOWN  8A4C            ; Unknown 8xxx instruction
$F30    $9438   UNKNOWN  $9438           ; Unknown 9xxx instruction
$F32    $5024   UNKNOWN  $5024           ; Unknown 5xxx instruction
$F34    $97AB   UNKNOWN  $97AB           ; Unknown 9xxx instruction
$F36    $DD06   DRW      VD, V0, #6      ; Draw 6-byte sprite at VD, V0
$F38    $0033   SYS      $033            ; System call to 033
$F3A    $A7A0   LD       I, $7A0         ; Load 7A0 into I
$F3C    $1A60   JP       $A60            ; Jump to A60
$F3E    $CEB1   RND      VE, #B1         ; VE = random & B1
$F40    $12B0   JP       $2B0            ; Jump to 2B0
$F42    $5FD5   UNKNOWN  $5FD5           ; Unknown 5xxx instruction
$F44    $45F7   SNE      V5, #F7         ; Skip if V5 != 247
$F46    $DBFC   DRW      VB, VF, #C      ; Draw 12-byte sprite at VB, VF
$F48    $3766   SE       V7, #66         ; Skip if V7 == 102
$F4A    $A529   LD       I, $529         ; Load 529 into I
$F4C    $4104   SNE      V1, #04         ; Skip if V1 != 4
$F4E    $73F4   ADD      V3, #F4         ; Add 244 to V3
$F50    $981D   UNKNOWN  $981D           ; Unknown 9xxx instruction
$F52    $395B   SE       V9, #5B         ; Skip if V9 == 91
$F54    $EE33   UNKNOWN  $EE33           ; Unknown Exxx instruction
$F56    $E271   UNKNOWN  $E271           ; Unknown Exxx instruction
$F58    $38D7   SE       V8, #D7         ; Skip if V8 == 215
$F5A    $B78F   JP       V0, $78F        ; Jump to V0 + 78F
$F5C    $0AB5   SYS      $AB5            ; System call to AB5
$F5E    $03C2   SYS      $3C2            ; System call to 3C2
$F60    $1380   JP       $380            ; Jump to 380
$F62    $7288   ADD      V2, #88         ; Add 136 to V2
$F64    $A6CA   LD       I, $6CA         ; Load 6CA into I
$F66    $79ED   ADD      V9, #ED         ; Add 237 to V9
$F68    $5A01   UNKNOWN  $5A01           ; Unknown 5xxx instruction
$F6A    $C774   RND      V7, #74         ; V7 = random & 74
$F6C    $934E   UNKNOWN  $934E           ; Unknown 9xxx instruction
$F6E    $BC05   JP       V0, $C05        ; Jump to V0 + C05
$F70    $53B2   UNKNOWN  $53B2           ; Unknown 5xxx instruction
$F72    $E0A8   UNKNOWN  $E0A8           ; Unknown Exxx instruction
$F74    $1E56   JP       $E56            ; Jump to E56
$F76    $8C41   OR       VC, V4          ; VC |= V4
$F78    $690C   LD       V9, #0C         ; Load 12 into V9
$F7A    $5D12   UNKNOWN  $5D12           ; Unknown 5xxx instruction
$F7C    $ABC0   LD       I, $BC0         ; Load BC0 into I
$F7E    $3B65   SE       VB, #65         ; Skip if VB == 101
$F80    $67BB   LD       V7, #BB         ; Load 187 into V7
$F82    $BED0   JP       V0, $ED0        ; Jump to V0 + ED0
$F84    $F9B8   UNKNOWN  F9B8            ; Unknown Fxxx instruction
$F86    $5FF7   UNKNOWN  $5FF7           ; Unknown 5xxx instruction
$F88    $AC4F   LD       I, $C4F         ; Load C4F into I
$F8A    $CA86   RND      VA, #86         ; VA = random & 86
$F8C    $57DD   UNKNOWN  $57DD           ; Unknown 5xxx instruction
$F8E    $5C1B   UNKNOWN  $5C1B           ; Unknown 5xxx instruction
$F90    $BDE6   JP       V0, $DE6        ; Jump to V0 + DE6
$F92    $805C   UNKNOWN  805C            ; Unknown 8xxx instruction
$F94    $B54D   JP       V0, $54D        ; Jump to V0 + 54D
$F96    $BC65   JP       V0, $C65        ; Jump to V0 + C65
$F98    $174E   JP       $74E            ; Jump to 74E
$F9A    $4E09   SNE      VE, #09         ; Skip if VE != 9
$F9C    $7D32   ADD      VD, #32         ; Add 50 to VD
$F9E    $338F   SE       V3, #8F         ; Skip if V3 == 143
$FA0    $14FF   JP       $4FF            ; Jump to 4FF
$FA2    $FB17   UNKNOWN  FB17            ; Unknown Fxxx instruction
$FA4    $FA73   UNKNOWN  FA73            ; Unknown Fxxx instruction
$FA6    $0571   SYS      $571            ; System call to 571
$FA8    $7ECF   ADD      VE, #CF         ; Add 207 to VE
$FAA    $661F   LD       V6, #1F         ; Load 31 into V6
$FAC    $5B49   UNKNOWN  $5B49           ; Unknown 5xxx instruction
$FAE    $32F0   SE       V2, #F0         ; Skip if V2 == 240
$FB0    $27C5   CALL     $7C5            ; Call subroutine at 7C5
$FB2    $2B7E   CALL     $B7E            ; Call subroutine at B7E
$FB4    $91FB   UNKNOWN  $91FB           ; Unknown 9xxx instruction
$FB6    $6B61   LD       VB, #61         ; Load 97 into VB
$FB8    $1B92   JP       $B92            ; Jump to B92
$FBA    $1ED5   JP       $ED5            ; Jump to ED5
$FBC    $E398   UNKNOWN  $E398           ; Unknown Exxx instruction
$FBE    $687F   LD       V8, #7F         ; Load 127 into V8
$FC0    $5916   UNKNOWN  $5916           ; Unknown 5xxx instruction
$FC2    $5ACB   UNKNOWN  $5ACB           ; Unknown 5xxx instruction
$FC4    $42D3   SNE      V2, #D3         ; Skip if V2 != 211
$FC6    $5A6D   UNKNOWN  $5A6D           ; Unknown 5xxx instruction
$FC8    $F09A   UNKNOWN  F09A            ; Unknown Fxxx instruction
$FCA    $1BEB   JP       $BEB            ; Jump to BEB
$FCC    $3B6A   SE       VB, #6A         ; Skip if VB == 106
$FCE    $DFED   DRW      VF, VE, #D      ; Draw 13-byte sprite at VF, VE
$FD0    $2FEE   CALL     $FEE            ; Call subroutine at FEE
$FD2    $0011   SYS      $011            ; System call to 011
$FD4    $D230   DRW      V2, V3, #0      ; Draw 0-byte sprite at V2, V3
$FD6    $A677   LD       I, $677         ; Load 677 into I
$FD8    $FCBB   UNKNOWN  FCBB            ; Unknown Fxxx instruction
$FDA    $F9F8   UNKNOWN  F9F8            ; Unknown Fxxx instruction
$FDC    $DBE7   DRW      VB, VE, #7      ; Draw 7-byte sprite at VB, VE
$FDE    $F640   UNKNOWN  F640            ; Unknown Fxxx instruction
$FE0    $D9C9   DRW      V9, VC, #9      ; Draw 9-byte sprite at V9, VC
$FE2    $4799   SNE      V7, #99         ; Skip if V7 != 153
$FE4    $EBD7   UNKNOWN  $EBD7           ; Unknown Exxx instruction
$FE6    $166E   JP       $66E            ; Jump to 66E
$FE8    $9901   UNKNOWN  $9901           ; Unknown 9xxx instruction
$FEA    $5A54   UNKNOWN  $5A54           ; Unknown 5xxx instruction
$FEC    $2C08   CALL     $C08            ; Call subroutine at C08
$FEE    $5E47   UNKNOWN  $5E47           ; Unknown 5xxx instruction
$FF0    $FE84   UNKNOWN  FE84            ; Unknown Fxxx instruction
$FF2    $D4F9   DRW      V4, VF, #9      ; Draw 9-byte sprite at V4, VF
$FF4    $D007   DRW      V0, V0, #7      ; Draw 7-byte sprite at V0, V0
$FF6    $4E6D   SNE      VE, #6D         ; Skip if VE != 109
$FF8    $CA1B   RND      VA, #1B         ; VA = random & 1B
$FFA    $4271   SNE      V2, #71         ; Skip if V2 != 113
$FFC    $8B84   ADD      VB, V8          ; VB += V8, VF = carry
$FFE    $8943   XOR      V9, V4          ; V9 ^= V4

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 457 (25.5%)
  JP      : 239 (13.3%)
  LD      : 231 (12.9%)
  SNE     : 129 ( 7.2%)
  ADD     : 119 ( 6.6%)
  RND     : 116 ( 6.5%)
  CALL    : 116 ( 6.5%)
  DRW     : 113 ( 6.3%)
  SYS     : 112 ( 6.2%)
  SE      : 110 ( 6.1%)
  SHL     :  14 ( 0.8%)
  SUB     :   8 ( 0.4%)
  OR      :   7 ( 0.4%)
  AND     :   6 ( 0.3%)
  SUBN    :   6 ( 0.3%)
  XOR     :   4 ( 0.2%)
  SHR     :   4 ( 0.2%)
  SKP     :   1 ( 0.1%)

Memory Operations: 350 (19.5%)
Arithmetic Operations: 150 (8.4%)
