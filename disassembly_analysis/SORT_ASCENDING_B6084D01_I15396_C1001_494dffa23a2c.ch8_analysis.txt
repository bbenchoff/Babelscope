
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B6084D01_I15396_C1001_494dffa23a2c.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 6084
Instance: 15396
Direction: ascending
Final Array: [0, 1, 2, 53, 61, 78, 190, 190]
Operations: R:0 W:1 C:13 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 122
Sort Array References:
  $208: LD I, $73F ; Load 73F into I
  $22A: LD I, $918 ; Load 918 into I
  $246: LD I, $E1F ; Load E1F into I
  $24C: LD I, $F08 ; Load F08 into I
  $24E: LD I, $981 ; Load 981 into I
  $256: LD I, $5C1 ; Load 5C1 into I
  $266: LD I, $220 ; Load 220 into I
  $26A: LD I, $201 ; Load 201 into I
  $2C2: LD I, $EFC ; Load EFC into I
  $2C8: LD I, $B06 ; Load B06 into I
  $2D2: LD I, $FAA ; Load FAA into I
  $308: LD I, $6D1 ; Load 6D1 into I
  $32C: LD I, $871 ; Load 871 into I
  $334: LD I, $D82 ; Load D82 into I
  $356: LD I, $3C9 ; Load 3C9 into I
  $388: LD I, $D25 ; Load D25 into I
  $414: LD I, $EFB ; Load EFB into I
  $458: LD I, $B4B ; Load B4B into I
  $46A: LD I, $52B ; Load 52B into I
  $474: LD I, $9C3 ; Load 9C3 into I
  $4B8: LD I, $6F7 ; Load 6F7 into I
  $4CC: LD I, $7A4 ; Load 7A4 into I
  $4D0: LD I, $6D2 ; Load 6D2 into I
  $4E0: LD I, $F0A ; Load F0A into I
  $4E2: LD I, $036 ; Load 036 into I
  $534: LD I, $2D3 ; Load 2D3 into I
  $556: LD I, $601 ; Load 601 into I
  $590: LD I, $2FE ; Load 2FE into I
  $5A6: LD I, $D4D ; Load D4D into I
  $5DC: LD I, $45F ; Load 45F into I
  $5E6: LD I, $D0E ; Load D0E into I
  $62E: LD I, $741 ; Load 741 into I
  $67E: LD I, $635 ; Load 635 into I
  $68A: LD I, $520 ; Load 520 into I
  $6DE: LD I, $76F ; Load 76F into I
  $6E2: LD I, $600 ; Load 600 into I
  $6EC: LD I, $E2D ; Load E2D into I
  $6F2: LD I, $390 ; Load 390 into I
  $70E: LD I, $808 ; Load 808 into I
  $738: LD I, $5B6 ; Load 5B6 into I
  $75C: LD I, $450 ; Load 450 into I
  $768: LD I, $0ED ; Load 0ED into I
  $77A: LD I, $079 ; Load 079 into I
  $792: LD I, $306 ; Load 306 into I
  $7AA: LD I, $F12 ; Load F12 into I
  $7C2: LD I, $54F ; Load 54F into I
  $7C4: LD I, $999 ; Load 999 into I
  $7C6: LD I, $C44 ; Load C44 into I
  $7D0: LD I, $DC5 ; Load DC5 into I
  $89E: LD I, $FB5 ; Load FB5 into I
  $8B6: LD I, $F6D ; Load F6D into I
  $8CC: LD I, $559 ; Load 559 into I
  $8DC: LD I, $B01 ; Load B01 into I
  $8F0: LD I, $D8F ; Load D8F into I
  $8F4: LD I, $183 ; Load 183 into I
  $908: LD I, $3E0 ; Load 3E0 into I
  $926: LD I, $EA0 ; Load EA0 into I
  $936: LD I, $24C ; Load 24C into I
  $93C: LD I, $8FC ; Load 8FC into I
  $940: LD I, $528 ; Load 528 into I
  $942: LD I, $4FB ; Load 4FB into I
  $972: LD I, $5E5 ; Load 5E5 into I
  $97C: LD I, $A1D ; Load A1D into I
  $994: LD I, $D7C ; Load D7C into I
  $9CC: LD I, $870 ; Load 870 into I
  $A08: LD I, $C4D ; Load C4D into I
  $A32: LD I, $B09 ; Load B09 into I
  $A36: LD I, $EBE ; Load EBE into I
  $A3A: LD I, $A56 ; Load A56 into I
  $A60: LD I, $D17 ; Load D17 into I
  $A74: LD I, $96F ; Load 96F into I
  $A88: LD I, $663 ; Load 663 into I
  $AC0: LD I, $77A ; Load 77A into I
  $AE4: LD I, $49D ; Load 49D into I
  $AE6: LD I, $098 ; Load 098 into I
  $B2E: LD I, $FE8 ; Load FE8 into I
  $B54: LD I, $08C ; Load 08C into I
  $B7A: LD I, $0FE ; Load 0FE into I
  $B9C: LD I, $CFD ; Load CFD into I
  $BD0: LD I, $4ED ; Load 4ED into I
  $BE2: LD I, $464 ; Load 464 into I
  $BFA: LD I, $BB1 ; Load BB1 into I
  $C1A: LD I, $19B ; Load 19B into I
  $C44: LD I, $B11 ; Load B11 into I
  $C74: LD I, $030 ; Load 030 into I
  $C82: LD I, $721 ; Load 721 into I
  $CC6: LD I, $8B8 ; Load 8B8 into I
  $CD0: LD I, $4FB ; Load 4FB into I
  $CE4: LD I, $050 ; Load 050 into I
  $CE6: LD I, $D3C ; Load D3C into I
  $D02: LD I, $DEA ; Load DEA into I
  $D08: LD I, $FD7 ; Load FD7 into I
  $D30: LD I, $313 ; Load 313 into I
  $D96: LD I, $381 ; Load 381 into I
  $DB0: LD I, $03D ; Load 03D into I
  $DB2: LD I, $0E7 ; Load 0E7 into I
  $DBC: LD I, $7DC ; Load 7DC into I
  $DC4: LD I, $617 ; Load 617 into I
  $DC8: LD I, $760 ; Load 760 into I
  $DEA: LD I, $618 ; Load 618 into I
  $E26: LD I, $E5A ; Load E5A into I
  $E2C: LD I, $E6E ; Load E6E into I
  $E38: LD I, $935 ; Load 935 into I
  $E3C: LD I, $093 ; Load 093 into I
  $E46: LD I, $539 ; Load 539 into I
  $E68: LD I, $F0C ; Load F0C into I
  $E72: LD I, $78E ; Load 78E into I
  $E7A: LD I, $2C4 ; Load 2C4 into I
  $EA2: LD I, $43B ; Load 43B into I
  $EBC: LD I, $514 ; Load 514 into I
  $ED4: LD I, $166 ; Load 166 into I
  $F12: LD I, $4DC ; Load 4DC into I
  $F28: LD I, $EB8 ; Load EB8 into I
  $F3A: LD I, $1B0 ; Load 1B0 into I
  $F58: LD I, $4C7 ; Load 4C7 into I
  $F5C: LD I, $890 ; Load 890 into I
  $F66: LD I, $BF4 ; Load BF4 into I
  $F86: LD I, $331 ; Load 331 into I
  $FBC: LD I, $D37 ; Load D37 into I
  $FC4: LD I, $0F2 ; Load 0F2 into I
  $FE6: LD I, $BB7 ; Load BB7 into I
  $FFC: LD I, $D73 ; Load D73 into I

CONTROL FLOW ANALYSIS:
Jumps: 201
Calls: 92
Branches: 226
Loops: 109
Loop Structures:
  $254 -> $0C4 (backward jump)
  $2A6 -> $046 (backward jump)
  $2EA -> $2A4 (backward jump)
  $3A0 -> $350 (backward jump)
  $3F8 -> $176 (backward jump)
  $432 -> $03C (backward jump)
  $442 -> $06F (backward jump)
  $468 -> $021 (backward jump)
  $4A2 -> $08C (backward jump)
  $4D4 -> $136 (backward jump)
  $4E6 -> $484 (backward jump)
  $524 -> $00D (backward jump)
  $526 -> $0BC (backward jump)
  $54E -> $446 (backward jump)
  $5C6 -> $308 (backward jump)
  $5F4 -> $162 (backward jump)
  $600 -> $31C (backward jump)
  $602 -> $334 (backward jump)
  $620 -> $340 (backward jump)
  $66C -> $220 (backward jump)
  $69A -> $19A (backward jump)
  $6A8 -> $2CB (backward jump)
  $6C2 -> $304 (backward jump)
  $6FE -> $35E (backward jump)
  $722 -> $5AB (backward jump)
  $784 -> $5BE (backward jump)
  $7A0 -> $6F5 (backward jump)
  $7B0 -> $4F6 (backward jump)
  $7B4 -> $0B5 (backward jump)
  $7BC -> $5D4 (backward jump)
  $7EE -> $690 (backward jump)
  $80A -> $2A1 (backward jump)
  $838 -> $1A0 (backward jump)
  $83A -> $10B (backward jump)
  $83C -> $048 (backward jump)
  $856 -> $1A5 (backward jump)
  $858 -> $10F (backward jump)
  $888 -> $500 (backward jump)
  $89A -> $17F (backward jump)
  $8BC -> $56E (backward jump)
  $8C4 -> $63E (backward jump)
  $8CE -> $3EA (backward jump)
  $8E4 -> $2DA (backward jump)
  $8E6 -> $35B (backward jump)
  $8E8 -> $3BF (backward jump)
  $8FE -> $775 (backward jump)
  $902 -> $325 (backward jump)
  $912 -> $271 (backward jump)
  $922 -> $575 (backward jump)
  $98A -> $758 (backward jump)
  $998 -> $55A (backward jump)
  $9DE -> $611 (backward jump)
  $9FA -> $0AC (backward jump)
  $A16 -> $787 (backward jump)
  $A5C -> $510 (backward jump)
  $A92 -> $63A (backward jump)
  $AA2 -> $098 (backward jump)
  $AAE -> $29E (backward jump)
  $AB0 -> $135 (backward jump)
  $ABC -> $A93 (backward jump)
  $AE2 -> $A13 (backward jump)
  $B0A -> $5A0 (backward jump)
  $B0E -> $52C (backward jump)
  $B3A -> $9D6 (backward jump)
  $B44 -> $787 (backward jump)
  $BA2 -> $480 (backward jump)
  $BB6 -> $23D (backward jump)
  $BC2 -> $673 (backward jump)
  $BD8 -> $A80 (backward jump)
  $C06 -> $4CD (backward jump)
  $C10 -> $53A (backward jump)
  $C54 -> $096 (backward jump)
  $C68 -> $6D3 (backward jump)
  $C8A -> $742 (backward jump)
  $C98 -> $47B (backward jump)
  $C9A -> $6BC (backward jump)
  $C9E -> $2C3 (backward jump)
  $CA4 -> $532 (backward jump)
  $CC0 -> $932 (backward jump)
  $CDC -> $30A (backward jump)
  $CF6 -> $5EC (backward jump)
  $D00 -> $015 (backward jump)
  $D14 -> $175 (backward jump)
  $D4C -> $054 (backward jump)
  $D84 -> $277 (backward jump)
  $D9C -> $ADC (backward jump)
  $DE2 -> $38B (backward jump)
  $DF6 -> $7AC (backward jump)
  $DFE -> $A3C (backward jump)
  $E24 -> $5BD (backward jump)
  $E30 -> $D1B (backward jump)
  $E36 -> $53F (backward jump)
  $E56 -> $570 (backward jump)
  $E62 -> $9EB (backward jump)
  $E80 -> $386 (backward jump)
  $EA6 -> $7FB (backward jump)
  $EB4 -> $86A (backward jump)
  $ED8 -> $EBC (backward jump)
  $EE8 -> $981 (backward jump)
  $EF6 -> $70B (backward jump)
  $EF8 -> $C34 (backward jump)
  $F16 -> $884 (backward jump)
  $F92 -> $BA8 (backward jump)
  $F98 -> $D9A (backward jump)
  $FB0 -> $812 (backward jump)
  $FB2 -> $2A6 (backward jump)
  $FC2 -> $149 (backward jump)
  $FCC -> $F14 (backward jump)
  $FFE -> $E53 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $3DF5   SE       VD, #F5         ; Skip if VD == 245
$202    $3350   SE       V3, #50         ; Skip if V3 == 80
$204    $E42E   UNKNOWN  $E42E           ; Unknown Exxx instruction
$206    $99BF   UNKNOWN  $99BF           ; Unknown 9xxx instruction
$208    $A73F   LD       I, $73F         ; Load 73F into I
$20A    $D4D2   DRW      V4, VD, #2      ; Draw 2-byte sprite at V4, VD
$20C    $5B7D   UNKNOWN  $5B7D           ; Unknown 5xxx instruction
$20E    $2815   CALL     $815            ; Call subroutine at 815
$210    $8344   ADD      V3, V4          ; V3 += V4, VF = carry
$212    $8DAF   UNKNOWN  8DAF            ; Unknown 8xxx instruction
$214    $F4D1   UNKNOWN  F4D1            ; Unknown Fxxx instruction
$216    $7C1E   ADD      VC, #1E         ; Add 30 to VC
$218    $E5B6   UNKNOWN  $E5B6           ; Unknown Exxx instruction
$21A    $B270   JP       V0, $270        ; Jump to V0 + 270
$21C    $CB2E   RND      VB, #2E         ; VB = random & 2E
$21E    $8041   OR       V0, V4          ; V0 |= V4
$220    $CB72   RND      VB, #72         ; VB = random & 72
$222    $0D89   SYS      $D89            ; System call to D89
$224    $6605   LD       V6, #05         ; Load 5 into V6
$226    $B8A1   JP       V0, $8A1        ; Jump to V0 + 8A1
$228    $DDDF   DRW      VD, VD, #F      ; Draw 15-byte sprite at VD, VD
$22A    $A918   LD       I, $918         ; Load 918 into I
$22C    $12A5   JP       $2A5            ; Jump to 2A5
$22E    $C853   RND      V8, #53         ; V8 = random & 53
$230    $96BA   UNKNOWN  $96BA           ; Unknown 9xxx instruction
$232    $B81C   JP       V0, $81C        ; Jump to V0 + 81C
$234    $D5F0   DRW      V5, VF, #0      ; Draw 0-byte sprite at V5, VF
$236    $1656   JP       $656            ; Jump to 656
$238    $82BF   UNKNOWN  82BF            ; Unknown 8xxx instruction
$23A    $9DDE   UNKNOWN  $9DDE           ; Unknown 9xxx instruction
$23C    $CCF1   RND      VC, #F1         ; VC = random & F1
$23E    $B463   JP       V0, $463        ; Jump to V0 + 463
$240    $C583   RND      V5, #83         ; V5 = random & 83
$242    $5B54   UNKNOWN  $5B54           ; Unknown 5xxx instruction
$244    $526F   UNKNOWN  $526F           ; Unknown 5xxx instruction
$246    $AE1F   LD       I, $E1F         ; Load E1F into I
$248    $3688   SE       V6, #88         ; Skip if V6 == 136
$24A    $5B26   UNKNOWN  $5B26           ; Unknown 5xxx instruction
$24C    $AF08   LD       I, $F08         ; Load F08 into I
$24E    $A981   LD       I, $981         ; Load 981 into I
$250    $055C   SYS      $55C            ; System call to 55C
$252    $99EB   UNKNOWN  $99EB           ; Unknown 9xxx instruction
$254    $B0C4   JP       V0, $0C4        ; Jump to V0 + 0C4
$256    $A5C1   LD       I, $5C1         ; Load 5C1 into I
$258    $2974   CALL     $974            ; Call subroutine at 974
$25A    $E412   UNKNOWN  $E412           ; Unknown Exxx instruction
$25C    $3EFC   SE       VE, #FC         ; Skip if VE == 252
$25E    $E475   UNKNOWN  $E475           ; Unknown Exxx instruction
$260    $DFE8   DRW      VF, VE, #8      ; Draw 8-byte sprite at VF, VE
$262    $1EDE   JP       $EDE            ; Jump to EDE
$264    $D906   DRW      V9, V0, #6      ; Draw 6-byte sprite at V9, V0
$266    $A220   LD       I, $220         ; Load 220 into I
$268    $EEBB   UNKNOWN  $EEBB           ; Unknown Exxx instruction
$26A    $A201   LD       I, $201         ; Load 201 into I
$26C    $03DC   SYS      $3DC            ; System call to 3DC
$26E    $85B1   OR       V5, VB          ; V5 |= VB
$270    $EAD3   UNKNOWN  $EAD3           ; Unknown Exxx instruction
$272    $233E   CALL     $33E            ; Call subroutine at 33E
$274    $9559   UNKNOWN  $9559           ; Unknown 9xxx instruction
$276    $8DED   UNKNOWN  8DED            ; Unknown 8xxx instruction
$278    $CDF5   RND      VD, #F5         ; VD = random & F5
$27A    $6CAE   LD       VC, #AE         ; Load 174 into VC
$27C    $5761   UNKNOWN  $5761           ; Unknown 5xxx instruction
$27E    $3521   SE       V5, #21         ; Skip if V5 == 33
$280    $2606   CALL     $606            ; Call subroutine at 606
$282    $8F22   AND      VF, V2          ; VF &= V2
$284    $26F1   CALL     $6F1            ; Call subroutine at 6F1
$286    $718B   ADD      V1, #8B         ; Add 139 to V1
$288    $03A4   SYS      $3A4            ; System call to 3A4
$28A    $1E5A   JP       $E5A            ; Jump to E5A
$28C    $4B7B   SNE      VB, #7B         ; Skip if VB != 123
$28E    $603C   LD       V0, #3C         ; Load 60 into V0
$290    $2CEE   CALL     $CEE            ; Call subroutine at CEE
$292    $5D0D   UNKNOWN  $5D0D           ; Unknown 5xxx instruction
$294    $430E   SNE      V3, #0E         ; Skip if V3 != 14
$296    $0B8E   SYS      $B8E            ; System call to B8E
$298    $73E7   ADD      V3, #E7         ; Add 231 to V3
$29A    $2F99   CALL     $F99            ; Call subroutine at F99
$29C    $80E1   OR       V0, VE          ; V0 |= VE
$29E    $E2DA   UNKNOWN  $E2DA           ; Unknown Exxx instruction
$2A0    $EC1A   UNKNOWN  $EC1A           ; Unknown Exxx instruction
$2A2    $ECC3   UNKNOWN  $ECC3           ; Unknown Exxx instruction
$2A4    $8D47   SUBN     VD, V4          ; VD = V4 - VD, VF = !borrow
$2A6    $1046   JP       $046            ; Jump to 046
$2A8    $8558   UNKNOWN  8558            ; Unknown 8xxx instruction
$2AA    $9D80   SNE      VD, V8          ; Skip if VD != V8
$2AC    $E5C0   UNKNOWN  $E5C0           ; Unknown Exxx instruction
$2AE    $8F00   LD       VF, V0          ; VF = V0
$2B0    $54DF   UNKNOWN  $54DF           ; Unknown 5xxx instruction
$2B2    $D737   DRW      V7, V3, #7      ; Draw 7-byte sprite at V7, V3
$2B4    $E0DB   UNKNOWN  $E0DB           ; Unknown Exxx instruction
$2B6    $FD9A   UNKNOWN  FD9A            ; Unknown Fxxx instruction
$2B8    $CF14   RND      VF, #14         ; VF = random & 14
$2BA    $67F6   LD       V7, #F6         ; Load 246 into V7
$2BC    $7ADF   ADD      VA, #DF         ; Add 223 to VA
$2BE    $ED4E   UNKNOWN  $ED4E           ; Unknown Exxx instruction
$2C0    $7C91   ADD      VC, #91         ; Add 145 to VC
$2C2    $AEFC   LD       I, $EFC         ; Load EFC into I
$2C4    $FB35   UNKNOWN  FB35            ; Unknown Fxxx instruction
$2C6    $64BD   LD       V4, #BD         ; Load 189 into V4
$2C8    $AB06   LD       I, $B06         ; Load B06 into I
$2CA    $F57F   UNKNOWN  F57F            ; Unknown Fxxx instruction
$2CC    $EB9A   UNKNOWN  $EB9A           ; Unknown Exxx instruction
$2CE    $F3CD   UNKNOWN  F3CD            ; Unknown Fxxx instruction
$2D0    $4B77   SNE      VB, #77         ; Skip if VB != 119
$2D2    $AFAA   LD       I, $FAA         ; Load FAA into I
$2D4    $F77B   UNKNOWN  F77B            ; Unknown Fxxx instruction
$2D6    $42B6   SNE      V2, #B6         ; Skip if V2 != 182
$2D8    $56ED   UNKNOWN  $56ED           ; Unknown 5xxx instruction
$2DA    $9DFC   UNKNOWN  $9DFC           ; Unknown 9xxx instruction
$2DC    $72B5   ADD      V2, #B5         ; Add 181 to V2
$2DE    $7F5D   ADD      VF, #5D         ; Add 93 to VF
$2E0    $C949   RND      V9, #49         ; V9 = random & 49
$2E2    $E7A7   UNKNOWN  $E7A7           ; Unknown Exxx instruction
$2E4    $E98D   UNKNOWN  $E98D           ; Unknown Exxx instruction
$2E6    $83DD   UNKNOWN  83DD            ; Unknown 8xxx instruction
$2E8    $52A3   UNKNOWN  $52A3           ; Unknown 5xxx instruction
$2EA    $B2A4   JP       V0, $2A4        ; Jump to V0 + 2A4
$2EC    $08A2   SYS      $8A2            ; System call to 8A2
$2EE    $3DBD   SE       VD, #BD         ; Skip if VD == 189
$2F0    $B72A   JP       V0, $72A        ; Jump to V0 + 72A
$2F2    $773C   ADD      V7, #3C         ; Add 60 to V7
$2F4    $EF01   UNKNOWN  $EF01           ; Unknown Exxx instruction
$2F6    $5B91   UNKNOWN  $5B91           ; Unknown 5xxx instruction
$2F8    $C158   RND      V1, #58         ; V1 = random & 58
$2FA    $EA86   UNKNOWN  $EA86           ; Unknown Exxx instruction
$2FC    $CDA3   RND      VD, #A3         ; VD = random & A3
$2FE    $1808   JP       $808            ; Jump to 808
$300    $0001   SYS      $001            ; System call to 001
$302    $0235   SYS      $235            ; System call to 235
$304    $3D4E   SE       VD, #4E         ; Skip if VD == 78
$306    $BEBE   JP       V0, $EBE        ; Jump to V0 + EBE
$308    $A6D1   LD       I, $6D1         ; Load 6D1 into I
$30A    $BEA7   JP       V0, $EA7        ; Jump to V0 + EA7
$30C    $FA64   UNKNOWN  FA64            ; Unknown Fxxx instruction
$30E    $6FDB   LD       VF, #DB         ; Load 219 into VF
$310    $DB1E   DRW      VB, V1, #E      ; Draw 14-byte sprite at VB, V1
$312    $891E   SHL      V9              ; V9 <<= 1, VF = MSB
$314    $48A8   SNE      V8, #A8         ; Skip if V8 != 168
$316    $8D86   SHR      VD              ; VD >>= 1, VF = LSB
$318    $F90E   UNKNOWN  F90E            ; Unknown Fxxx instruction
$31A    $16DC   JP       $6DC            ; Jump to 6DC
$31C    $9B58   UNKNOWN  $9B58           ; Unknown 9xxx instruction
$31E    $E320   UNKNOWN  $E320           ; Unknown Exxx instruction
$320    $374A   SE       V7, #4A         ; Skip if V7 == 74
$322    $6601   LD       V6, #01         ; Load 1 into V6
$324    $03B6   SYS      $3B6            ; System call to 3B6
$326    $0844   SYS      $844            ; System call to 844
$328    $625C   LD       V2, #5C         ; Load 92 into V2
$32A    $D8B1   DRW      V8, VB, #1      ; Draw 1-byte sprite at V8, VB
$32C    $A871   LD       I, $871         ; Load 871 into I
$32E    $E1F2   UNKNOWN  $E1F2           ; Unknown Exxx instruction
$330    $3300   SE       V3, #00         ; Skip if V3 == 0
$332    $E9F1   UNKNOWN  $E9F1           ; Unknown Exxx instruction
$334    $AD82   LD       I, $D82         ; Load D82 into I
$336    $04A1   SYS      $4A1            ; System call to 4A1
$338    $02CD   SYS      $2CD            ; System call to 2CD
$33A    $75C3   ADD      V5, #C3         ; Add 195 to V5
$33C    $33BC   SE       V3, #BC         ; Skip if V3 == 188
$33E    $35CD   SE       V5, #CD         ; Skip if V5 == 205
$340    $5503   UNKNOWN  $5503           ; Unknown 5xxx instruction
$342    $43F9   SNE      V3, #F9         ; Skip if V3 != 249
$344    $14E1   JP       $4E1            ; Jump to 4E1
$346    $8596   SHR      V5              ; V5 >>= 1, VF = LSB
$348    $9E0F   UNKNOWN  $9E0F           ; Unknown 9xxx instruction
$34A    $B52C   JP       V0, $52C        ; Jump to V0 + 52C
$34C    $6AF9   LD       VA, #F9         ; Load 249 into VA
$34E    $01AC   SYS      $1AC            ; System call to 1AC
$350    $6D3F   LD       VD, #3F         ; Load 63 into VD
$352    $3A49   SE       VA, #49         ; Skip if VA == 73
$354    $3B44   SE       VB, #44         ; Skip if VB == 68
$356    $A3C9   LD       I, $3C9         ; Load 3C9 into I
$358    $2B47   CALL     $B47            ; Call subroutine at B47
$35A    $9400   SNE      V4, V0          ; Skip if V4 != V0
$35C    $FE5A   UNKNOWN  FE5A            ; Unknown Fxxx instruction
$35E    $D93C   DRW      V9, V3, #C      ; Draw 12-byte sprite at V9, V3
$360    $F914   UNKNOWN  F914            ; Unknown Fxxx instruction
$362    $594D   UNKNOWN  $594D           ; Unknown 5xxx instruction
$364    $D15D   DRW      V1, V5, #D      ; Draw 13-byte sprite at V1, V5
$366    $E42D   UNKNOWN  $E42D           ; Unknown Exxx instruction
$368    $F985   UNKNOWN  F985            ; Unknown Fxxx instruction
$36A    $BC13   JP       V0, $C13        ; Jump to V0 + C13
$36C    $D8B3   DRW      V8, VB, #3      ; Draw 3-byte sprite at V8, VB
$36E    $46D7   SNE      V6, #D7         ; Skip if V6 != 215
$370    $4ACE   SNE      VA, #CE         ; Skip if VA != 206
$372    $0276   SYS      $276            ; System call to 276
$374    $97BC   UNKNOWN  $97BC           ; Unknown 9xxx instruction
$376    $6A1E   LD       VA, #1E         ; Load 30 into VA
$378    $E6AB   UNKNOWN  $E6AB           ; Unknown Exxx instruction
$37A    $EB3C   UNKNOWN  $EB3C           ; Unknown Exxx instruction
$37C    $5B72   UNKNOWN  $5B72           ; Unknown 5xxx instruction
$37E    $25E9   CALL     $5E9            ; Call subroutine at 5E9
$380    $491E   SNE      V9, #1E         ; Skip if V9 != 30
$382    $9D50   SNE      VD, V5          ; Skip if VD != V5
$384    $E945   UNKNOWN  $E945           ; Unknown Exxx instruction
$386    $BF04   JP       V0, $F04        ; Jump to V0 + F04
$388    $AD25   LD       I, $D25         ; Load D25 into I
$38A    $D12D   DRW      V1, V2, #D      ; Draw 13-byte sprite at V1, V2
$38C    $640A   LD       V4, #0A         ; Load 10 into V4
$38E    $3251   SE       V2, #51         ; Skip if V2 == 81
$390    $2419   CALL     $419            ; Call subroutine at 419
$392    $39A8   SE       V9, #A8         ; Skip if V9 == 168
$394    $773B   ADD      V7, #3B         ; Add 59 to V7
$396    $7E6C   ADD      VE, #6C         ; Add 108 to VE
$398    $761B   ADD      V6, #1B         ; Add 27 to V6
$39A    $23C9   CALL     $3C9            ; Call subroutine at 3C9
$39C    $FC69   UNKNOWN  FC69            ; Unknown Fxxx instruction
$39E    $3EB7   SE       VE, #B7         ; Skip if VE == 183
$3A0    $B350   JP       V0, $350        ; Jump to V0 + 350
$3A2    $0B5E   SYS      $B5E            ; System call to B5E
$3A4    $D3F4   DRW      V3, VF, #4      ; Draw 4-byte sprite at V3, VF
$3A6    $8CE6   SHR      VC              ; VC >>= 1, VF = LSB
$3A8    $7A37   ADD      VA, #37         ; Add 55 to VA
$3AA    $C4F0   RND      V4, #F0         ; V4 = random & F0
$3AC    $1DAD   JP       $DAD            ; Jump to DAD
$3AE    $1E12   JP       $E12            ; Jump to E12
$3B0    $7825   ADD      V8, #25         ; Add 37 to V8
$3B2    $B5B7   JP       V0, $5B7        ; Jump to V0 + 5B7
$3B4    $E2BF   UNKNOWN  $E2BF           ; Unknown Exxx instruction
$3B6    $E1BF   UNKNOWN  $E1BF           ; Unknown Exxx instruction
$3B8    $2979   CALL     $979            ; Call subroutine at 979
$3BA    $17BC   JP       $7BC            ; Jump to 7BC
$3BC    $5DC4   UNKNOWN  $5DC4           ; Unknown 5xxx instruction
$3BE    $E26C   UNKNOWN  $E26C           ; Unknown Exxx instruction
$3C0    $0C34   SYS      $C34            ; System call to C34
$3C2    $87B5   SUB      V7, VB          ; V7 -= VB, VF = !borrow
$3C4    $6A84   LD       VA, #84         ; Load 132 into VA
$3C6    $2849   CALL     $849            ; Call subroutine at 849
$3C8    $16A4   JP       $6A4            ; Jump to 6A4
$3CA    $4302   SNE      V3, #02         ; Skip if V3 != 2
$3CC    $CF48   RND      VF, #48         ; VF = random & 48
$3CE    $6E23   LD       VE, #23         ; Load 35 into VE
$3D0    $4D5A   SNE      VD, #5A         ; Skip if VD != 90
$3D2    $E339   UNKNOWN  $E339           ; Unknown Exxx instruction
$3D4    $6DD8   LD       VD, #D8         ; Load 216 into VD
$3D6    $854C   UNKNOWN  854C            ; Unknown 8xxx instruction
$3D8    $64F6   LD       V4, #F6         ; Load 246 into V4
$3DA    $BCF5   JP       V0, $CF5        ; Jump to V0 + CF5
$3DC    $92F2   UNKNOWN  $92F2           ; Unknown 9xxx instruction
$3DE    $41D0   SNE      V1, #D0         ; Skip if V1 != 208
$3E0    $F856   UNKNOWN  F856            ; Unknown Fxxx instruction
$3E2    $7511   ADD      V5, #11         ; Add 17 to V5
$3E4    $3CA0   SE       VC, #A0         ; Skip if VC == 160
$3E6    $DAFF   DRW      VA, VF, #F      ; Draw 15-byte sprite at VA, VF
$3E8    $18DB   JP       $8DB            ; Jump to 8DB
$3EA    $6120   LD       V1, #20         ; Load 32 into V1
$3EC    $E41F   UNKNOWN  $E41F           ; Unknown Exxx instruction
$3EE    $BFB8   JP       V0, $FB8        ; Jump to V0 + FB8
$3F0    $C3A5   RND      V3, #A5         ; V3 = random & A5
$3F2    $E8D7   UNKNOWN  $E8D7           ; Unknown Exxx instruction
$3F4    $447D   SNE      V4, #7D         ; Skip if V4 != 125
$3F6    $82DE   SHL      V2              ; V2 <<= 1, VF = MSB
$3F8    $B176   JP       V0, $176        ; Jump to V0 + 176
$3FA    $E565   UNKNOWN  $E565           ; Unknown Exxx instruction
$3FC    $1DFF   JP       $DFF            ; Jump to DFF
$3FE    $2ACE   CALL     $ACE            ; Call subroutine at ACE
$400    $51F0   SE       V1, VF          ; Skip if V1 == VF
$402    $F4B1   UNKNOWN  F4B1            ; Unknown Fxxx instruction
$404    $CFC5   RND      VF, #C5         ; VF = random & C5
$406    $8BD7   SUBN     VB, VD          ; VB = VD - VB, VF = !borrow
$408    $F5ED   UNKNOWN  F5ED            ; Unknown Fxxx instruction
$40A    $9E57   UNKNOWN  $9E57           ; Unknown 9xxx instruction
$40C    $02BE   SYS      $2BE            ; System call to 2BE
$40E    $9E6C   UNKNOWN  $9E6C           ; Unknown 9xxx instruction
$410    $FEB6   UNKNOWN  FEB6            ; Unknown Fxxx instruction
$412    $E846   UNKNOWN  $E846           ; Unknown Exxx instruction
$414    $AEFB   LD       I, $EFB         ; Load EFB into I
$416    $BA87   JP       V0, $A87        ; Jump to V0 + A87
$418    $C79F   RND      V7, #9F         ; V7 = random & 9F
$41A    $4677   SNE      V6, #77         ; Skip if V6 != 119
$41C    $3EC6   SE       VE, #C6         ; Skip if VE == 198
$41E    $D91E   DRW      V9, V1, #E      ; Draw 14-byte sprite at V9, V1
$420    $C6BA   RND      V6, #BA         ; V6 = random & BA
$422    $01FE   SYS      $1FE            ; System call to 1FE
$424    $45AC   SNE      V5, #AC         ; Skip if V5 != 172
$426    $713C   ADD      V1, #3C         ; Add 60 to V1
$428    $391D   SE       V9, #1D         ; Skip if V9 == 29
$42A    $61C4   LD       V1, #C4         ; Load 196 into V1
$42C    $F344   UNKNOWN  F344            ; Unknown Fxxx instruction
$42E    $D981   DRW      V9, V8, #1      ; Draw 1-byte sprite at V9, V8
$430    $2026   CALL     $026            ; Call subroutine at 026
$432    $B03C   JP       V0, $03C        ; Jump to V0 + 03C
$434    $436E   SNE      V3, #6E         ; Skip if V3 != 110
$436    $9442   UNKNOWN  $9442           ; Unknown 9xxx instruction
$438    $143C   JP       $43C            ; Jump to 43C
$43A    $E206   UNKNOWN  $E206           ; Unknown Exxx instruction
$43C    $DEC1   DRW      VE, VC, #1      ; Draw 1-byte sprite at VE, VC
$43E    $14F8   JP       $4F8            ; Jump to 4F8
$440    $FA66   UNKNOWN  FA66            ; Unknown Fxxx instruction
$442    $106F   JP       $06F            ; Jump to 06F
$444    $9000   SNE      V0, V0          ; Skip if V0 != V0
$446    $6039   LD       V0, #39         ; Load 57 into V0
$448    $9904   UNKNOWN  $9904           ; Unknown 9xxx instruction
$44A    $3381   SE       V3, #81         ; Skip if V3 == 129
$44C    $C181   RND      V1, #81         ; V1 = random & 81
$44E    $E715   UNKNOWN  $E715           ; Unknown Exxx instruction
$450    $C3DB   RND      V3, #DB         ; V3 = random & DB
$452    $4BDA   SNE      VB, #DA         ; Skip if VB != 218
$454    $8F19   UNKNOWN  8F19            ; Unknown 8xxx instruction
$456    $4AFA   SNE      VA, #FA         ; Skip if VA != 250
$458    $AB4B   LD       I, $B4B         ; Load B4B into I
$45A    $8FD6   SHR      VF              ; VF >>= 1, VF = LSB
$45C    $722A   ADD      V2, #2A         ; Add 42 to V2
$45E    $DAEE   DRW      VA, VE, #E      ; Draw 14-byte sprite at VA, VE
$460    $5D55   UNKNOWN  $5D55           ; Unknown 5xxx instruction
$462    $E2F4   UNKNOWN  $E2F4           ; Unknown Exxx instruction
$464    $39BD   SE       V9, #BD         ; Skip if V9 == 189
$466    $F925   UNKNOWN  F925            ; Unknown Fxxx instruction
$468    $1021   JP       $021            ; Jump to 021
$46A    $A52B   LD       I, $52B         ; Load 52B into I
$46C    $F372   UNKNOWN  F372            ; Unknown Fxxx instruction
$46E    $63F2   LD       V3, #F2         ; Load 242 into V3
$470    $BFF5   JP       V0, $FF5        ; Jump to V0 + FF5
$472    $C4AF   RND      V4, #AF         ; V4 = random & AF
$474    $A9C3   LD       I, $9C3         ; Load 9C3 into I
$476    $2397   CALL     $397            ; Call subroutine at 397
$478    $6BB3   LD       VB, #B3         ; Load 179 into VB
$47A    $992C   UNKNOWN  $992C           ; Unknown 9xxx instruction
$47C    $7C5A   ADD      VC, #5A         ; Add 90 to VC
$47E    $CF2E   RND      VF, #2E         ; VF = random & 2E
$480    $4B54   SNE      VB, #54         ; Skip if VB != 84
$482    $6AC3   LD       VA, #C3         ; Load 195 into VA
$484    $3099   SE       V0, #99         ; Skip if V0 == 153
$486    $EB62   UNKNOWN  $EB62           ; Unknown Exxx instruction
$488    $3AEE   SE       VA, #EE         ; Skip if VA == 238
$48A    $D7CC   DRW      V7, VC, #C      ; Draw 12-byte sprite at V7, VC
$48C    $956F   UNKNOWN  $956F           ; Unknown 9xxx instruction
$48E    $93BC   UNKNOWN  $93BC           ; Unknown 9xxx instruction
$490    $79EA   ADD      V9, #EA         ; Add 234 to V9
$492    $989D   UNKNOWN  $989D           ; Unknown 9xxx instruction
$494    $645D   LD       V4, #5D         ; Load 93 into V4
$496    $C817   RND      V8, #17         ; V8 = random & 17
$498    $0DD4   SYS      $DD4            ; System call to DD4
$49A    $21E9   CALL     $1E9            ; Call subroutine at 1E9
$49C    $F720   UNKNOWN  F720            ; Unknown Fxxx instruction
$49E    $0881   SYS      $881            ; System call to 881
$4A0    $9074   UNKNOWN  $9074           ; Unknown 9xxx instruction
$4A2    $108C   JP       $08C            ; Jump to 08C
$4A4    $D0AC   DRW      V0, VA, #C      ; Draw 12-byte sprite at V0, VA
$4A6    $6EC7   LD       VE, #C7         ; Load 199 into VE
$4A8    $BC75   JP       V0, $C75        ; Jump to V0 + C75
$4AA    $5F06   UNKNOWN  $5F06           ; Unknown 5xxx instruction
$4AC    $8F30   LD       VF, V3          ; VF = V3
$4AE    $F7B6   UNKNOWN  F7B6            ; Unknown Fxxx instruction
$4B0    $762F   ADD      V6, #2F         ; Add 47 to V6
$4B2    $833F   UNKNOWN  833F            ; Unknown 8xxx instruction
$4B4    $6133   LD       V1, #33         ; Load 51 into V1
$4B6    $63F8   LD       V3, #F8         ; Load 248 into V3
$4B8    $A6F7   LD       I, $6F7         ; Load 6F7 into I
$4BA    $5931   UNKNOWN  $5931           ; Unknown 5xxx instruction
$4BC    $8D71   OR       VD, V7          ; VD |= V7
$4BE    $C6C1   RND      V6, #C1         ; V6 = random & C1
$4C0    $E99A   UNKNOWN  $E99A           ; Unknown Exxx instruction
$4C2    $5433   UNKNOWN  $5433           ; Unknown 5xxx instruction
$4C4    $B8E1   JP       V0, $8E1        ; Jump to V0 + 8E1
$4C6    $1529   JP       $529            ; Jump to 529
$4C8    $5C81   UNKNOWN  $5C81           ; Unknown 5xxx instruction
$4CA    $EBBA   UNKNOWN  $EBBA           ; Unknown Exxx instruction
$4CC    $A7A4   LD       I, $7A4         ; Load 7A4 into I
$4CE    $CDC1   RND      VD, #C1         ; VD = random & C1
$4D0    $A6D2   LD       I, $6D2         ; Load 6D2 into I
$4D2    $8DB3   XOR      VD, VB          ; VD ^= VB
$4D4    $1136   JP       $136            ; Jump to 136
$4D6    $E313   UNKNOWN  $E313           ; Unknown Exxx instruction
$4D8    $C91F   RND      V9, #1F         ; V9 = random & 1F
$4DA    $06FE   SYS      $6FE            ; System call to 6FE
$4DC    $47FE   SNE      V7, #FE         ; Skip if V7 != 254
$4DE    $1950   JP       $950            ; Jump to 950
$4E0    $AF0A   LD       I, $F0A         ; Load F0A into I
$4E2    $A036   LD       I, $036         ; Load 036 into I
$4E4    $3272   SE       V2, #72         ; Skip if V2 == 114
$4E6    $1484   JP       $484            ; Jump to 484
$4E8    $C625   RND      V6, #25         ; V6 = random & 25
$4EA    $38B4   SE       V8, #B4         ; Skip if V8 == 180
$4EC    $76F2   ADD      V6, #F2         ; Add 242 to V6
$4EE    $9DA5   UNKNOWN  $9DA5           ; Unknown 9xxx instruction
$4F0    $C48D   RND      V4, #8D         ; V4 = random & 8D
$4F2    $6E4B   LD       VE, #4B         ; Load 75 into VE
$4F4    $358D   SE       V5, #8D         ; Skip if V5 == 141
$4F6    $E5C3   UNKNOWN  $E5C3           ; Unknown Exxx instruction
$4F8    $933A   UNKNOWN  $933A           ; Unknown 9xxx instruction
$4FA    $8E05   SUB      VE, V0          ; VE -= V0, VF = !borrow
$4FC    $0482   SYS      $482            ; System call to 482
$4FE    $0302   SYS      $302            ; System call to 302
$500    $59FE   UNKNOWN  $59FE           ; Unknown 5xxx instruction
$502    $B662   JP       V0, $662        ; Jump to V0 + 662
$504    $B522   JP       V0, $522        ; Jump to V0 + 522
$506    $FB02   UNKNOWN  FB02            ; Unknown Fxxx instruction
$508    $F4FB   UNKNOWN  F4FB            ; Unknown Fxxx instruction
$50A    $8AEB   UNKNOWN  8AEB            ; Unknown 8xxx instruction
$50C    $FFED   UNKNOWN  FFED            ; Unknown Fxxx instruction
$50E    $5B7D   UNKNOWN  $5B7D           ; Unknown 5xxx instruction
$510    $3AE8   SE       VA, #E8         ; Skip if VA == 232
$512    $6404   LD       V4, #04         ; Load 4 into V4
$514    $2D1C   CALL     $D1C            ; Call subroutine at D1C
$516    $70F2   ADD      V0, #F2         ; Add 242 to V0
$518    $3195   SE       V1, #95         ; Skip if V1 == 149
$51A    $0D7A   SYS      $D7A            ; System call to D7A
$51C    $D4BC   DRW      V4, VB, #C      ; Draw 12-byte sprite at V4, VB
$51E    $8CEF   UNKNOWN  8CEF            ; Unknown 8xxx instruction
$520    $CC97   RND      VC, #97         ; VC = random & 97
$522    $4D58   SNE      VD, #58         ; Skip if VD != 88
$524    $100D   JP       $00D            ; Jump to 00D
$526    $10BC   JP       $0BC            ; Jump to 0BC
$528    $1EC7   JP       $EC7            ; Jump to EC7
$52A    $3E45   SE       VE, #45         ; Skip if VE == 69
$52C    $058E   SYS      $58E            ; System call to 58E
$52E    $CF86   RND      VF, #86         ; VF = random & 86
$530    $0815   SYS      $815            ; System call to 815
$532    $5176   UNKNOWN  $5176           ; Unknown 5xxx instruction
$534    $A2D3   LD       I, $2D3         ; Load 2D3 into I
$536    $915F   UNKNOWN  $915F           ; Unknown 9xxx instruction
$538    $FD37   UNKNOWN  FD37            ; Unknown Fxxx instruction
$53A    $30DA   SE       V0, #DA         ; Skip if V0 == 218
$53C    $C165   RND      V1, #65         ; V1 = random & 65
$53E    $87B3   XOR      V7, VB          ; V7 ^= VB
$540    $6DF5   LD       VD, #F5         ; Load 245 into VD
$542    $F2B1   UNKNOWN  F2B1            ; Unknown Fxxx instruction
$544    $D381   DRW      V3, V8, #1      ; Draw 1-byte sprite at V3, V8
$546    $2E70   CALL     $E70            ; Call subroutine at E70
$548    $72FE   ADD      V2, #FE         ; Add 254 to V2
$54A    $C450   RND      V4, #50         ; V4 = random & 50
$54C    $FA26   UNKNOWN  FA26            ; Unknown Fxxx instruction
$54E    $B446   JP       V0, $446        ; Jump to V0 + 446
$550    $980C   UNKNOWN  $980C           ; Unknown 9xxx instruction
$552    $D892   DRW      V8, V9, #2      ; Draw 2-byte sprite at V8, V9
$554    $1752   JP       $752            ; Jump to 752
$556    $A601   LD       I, $601         ; Load 601 into I
$558    $D965   DRW      V9, V6, #5      ; Draw 5-byte sprite at V9, V6
$55A    $1D52   JP       $D52            ; Jump to D52
$55C    $09AB   SYS      $9AB            ; System call to 9AB
$55E    $C74C   RND      V7, #4C         ; V7 = random & 4C
$560    $8009   UNKNOWN  8009            ; Unknown 8xxx instruction
$562    $26E2   CALL     $6E2            ; Call subroutine at 6E2
$564    $E998   UNKNOWN  $E998           ; Unknown Exxx instruction
$566    $73CE   ADD      V3, #CE         ; Add 206 to V3
$568    $F50A   LD       V5, K           ; Wait for key press, store in V5
$56A    $FFDF   UNKNOWN  FFDF            ; Unknown Fxxx instruction
$56C    $904C   UNKNOWN  $904C           ; Unknown 9xxx instruction
$56E    $6B7F   LD       VB, #7F         ; Load 127 into VB
$570    $976F   UNKNOWN  $976F           ; Unknown 9xxx instruction
$572    $08E0   SYS      $8E0            ; System call to 8E0
$574    $D537   DRW      V5, V3, #7      ; Draw 7-byte sprite at V5, V3
$576    $23EF   CALL     $3EF            ; Call subroutine at 3EF
$578    $E46E   UNKNOWN  $E46E           ; Unknown Exxx instruction
$57A    $E7EB   UNKNOWN  $E7EB           ; Unknown Exxx instruction
$57C    $B8A0   JP       V0, $8A0        ; Jump to V0 + 8A0
$57E    $5621   UNKNOWN  $5621           ; Unknown 5xxx instruction
$580    $E047   UNKNOWN  $E047           ; Unknown Exxx instruction
$582    $5310   SE       V3, V1          ; Skip if V3 == V1
$584    $C1F5   RND      V1, #F5         ; V1 = random & F5
$586    $2BFB   CALL     $BFB            ; Call subroutine at BFB
$588    $D01C   DRW      V0, V1, #C      ; Draw 12-byte sprite at V0, V1
$58A    $39B1   SE       V9, #B1         ; Skip if V9 == 177
$58C    $8F72   AND      VF, V7          ; VF &= V7
$58E    $083B   SYS      $83B            ; System call to 83B
$590    $A2FE   LD       I, $2FE         ; Load 2FE into I
$592    $566E   UNKNOWN  $566E           ; Unknown 5xxx instruction
$594    $C320   RND      V3, #20         ; V3 = random & 20
$596    $89C5   SUB      V9, VC          ; V9 -= VC, VF = !borrow
$598    $5465   UNKNOWN  $5465           ; Unknown 5xxx instruction
$59A    $C136   RND      V1, #36         ; V1 = random & 36
$59C    $03A1   SYS      $3A1            ; System call to 3A1
$59E    $393C   SE       V9, #3C         ; Skip if V9 == 60
$5A0    $D2ED   DRW      V2, VE, #D      ; Draw 13-byte sprite at V2, VE
$5A2    $90FD   UNKNOWN  $90FD           ; Unknown 9xxx instruction
$5A4    $2B89   CALL     $B89            ; Call subroutine at B89
$5A6    $AD4D   LD       I, $D4D         ; Load D4D into I
$5A8    $C4D7   RND      V4, #D7         ; V4 = random & D7
$5AA    $17DB   JP       $7DB            ; Jump to 7DB
$5AC    $D0C8   DRW      V0, VC, #8      ; Draw 8-byte sprite at V0, VC
$5AE    $D55B   DRW      V5, V5, #B      ; Draw 11-byte sprite at V5, V5
$5B0    $CBE2   RND      VB, #E2         ; VB = random & E2
$5B2    $3312   SE       V3, #12         ; Skip if V3 == 18
$5B4    $710C   ADD      V1, #0C         ; Add 12 to V1
$5B6    $4889   SNE      V8, #89         ; Skip if V8 != 137
$5B8    $87E2   AND      V7, VE          ; V7 &= VE
$5BA    $50AD   UNKNOWN  $50AD           ; Unknown 5xxx instruction
$5BC    $5B0C   UNKNOWN  $5B0C           ; Unknown 5xxx instruction
$5BE    $0A07   SYS      $A07            ; System call to A07
$5C0    $1F8F   JP       $F8F            ; Jump to F8F
$5C2    $F064   UNKNOWN  F064            ; Unknown Fxxx instruction
$5C4    $00BF   SYS      $0BF            ; System call to 0BF
$5C6    $B308   JP       V0, $308        ; Jump to V0 + 308
$5C8    $07C8   SYS      $7C8            ; System call to 7C8
$5CA    $4851   SNE      V8, #51         ; Skip if V8 != 81
$5CC    $4CBB   SNE      VC, #BB         ; Skip if VC != 187
$5CE    $5E13   UNKNOWN  $5E13           ; Unknown 5xxx instruction
$5D0    $7B74   ADD      VB, #74         ; Add 116 to VB
$5D2    $87EA   UNKNOWN  87EA            ; Unknown 8xxx instruction
$5D4    $21FD   CALL     $1FD            ; Call subroutine at 1FD
$5D6    $8C21   OR       VC, V2          ; VC |= V2
$5D8    $0D31   SYS      $D31            ; System call to D31
$5DA    $6972   LD       V9, #72         ; Load 114 into V9
$5DC    $A45F   LD       I, $45F         ; Load 45F into I
$5DE    $2767   CALL     $767            ; Call subroutine at 767
$5E0    $5942   UNKNOWN  $5942           ; Unknown 5xxx instruction
$5E2    $55F9   UNKNOWN  $55F9           ; Unknown 5xxx instruction
$5E4    $E0F6   UNKNOWN  $E0F6           ; Unknown Exxx instruction
$5E6    $AD0E   LD       I, $D0E         ; Load D0E into I
$5E8    $780D   ADD      V8, #0D         ; Add 13 to V8
$5EA    $255C   CALL     $55C            ; Call subroutine at 55C
$5EC    $69EC   LD       V9, #EC         ; Load 236 into V9
$5EE    $6843   LD       V8, #43         ; Load 67 into V8
$5F0    $7B98   ADD      VB, #98         ; Add 152 to VB
$5F2    $257A   CALL     $57A            ; Call subroutine at 57A
$5F4    $B162   JP       V0, $162        ; Jump to V0 + 162
$5F6    $3800   SE       V8, #00         ; Skip if V8 == 0
$5F8    $DF29   DRW      VF, V2, #9      ; Draw 9-byte sprite at VF, V2
$5FA    $5C87   UNKNOWN  $5C87           ; Unknown 5xxx instruction
$5FC    $3E91   SE       VE, #91         ; Skip if VE == 145
$5FE    $C39B   RND      V3, #9B         ; V3 = random & 9B
$600    $B31C   JP       V0, $31C        ; Jump to V0 + 31C
$602    $B334   JP       V0, $334        ; Jump to V0 + 334
$604    $D8A1   DRW      V8, VA, #1      ; Draw 1-byte sprite at V8, VA
$606    $33AA   SE       V3, #AA         ; Skip if V3 == 170
$608    $5A7D   UNKNOWN  $5A7D           ; Unknown 5xxx instruction
$60A    $6956   LD       V9, #56         ; Load 86 into V9
$60C    $EB36   UNKNOWN  $EB36           ; Unknown Exxx instruction
$60E    $C11D   RND      V1, #1D         ; V1 = random & 1D
$610    $4483   SNE      V4, #83         ; Skip if V4 != 131
$612    $FA4D   UNKNOWN  FA4D            ; Unknown Fxxx instruction
$614    $884A   UNKNOWN  884A            ; Unknown 8xxx instruction
$616    $C20B   RND      V2, #0B         ; V2 = random & 0B
$618    $70A0   ADD      V0, #A0         ; Add 160 to V0
$61A    $446E   SNE      V4, #6E         ; Skip if V4 != 110
$61C    $BA66   JP       V0, $A66        ; Jump to V0 + A66
$61E    $99FC   UNKNOWN  $99FC           ; Unknown 9xxx instruction
$620    $B340   JP       V0, $340        ; Jump to V0 + 340
$622    $0CE7   SYS      $CE7            ; System call to CE7
$624    $EF42   UNKNOWN  $EF42           ; Unknown Exxx instruction
$626    $7AE4   ADD      VA, #E4         ; Add 228 to VA
$628    $F263   UNKNOWN  F263            ; Unknown Fxxx instruction
$62A    $5442   UNKNOWN  $5442           ; Unknown 5xxx instruction
$62C    $56AB   UNKNOWN  $56AB           ; Unknown 5xxx instruction
$62E    $A741   LD       I, $741         ; Load 741 into I
$630    $52C1   UNKNOWN  $52C1           ; Unknown 5xxx instruction
$632    $E690   UNKNOWN  $E690           ; Unknown Exxx instruction
$634    $E04B   UNKNOWN  $E04B           ; Unknown Exxx instruction
$636    $6283   LD       V2, #83         ; Load 131 into V2
$638    $DB98   DRW      VB, V9, #8      ; Draw 8-byte sprite at VB, V9
$63A    $63B0   LD       V3, #B0         ; Load 176 into V3
$63C    $F00A   LD       V0, K           ; Wait for key press, store in V0
$63E    $232B   CALL     $32B            ; Call subroutine at 32B
$640    $9DEF   UNKNOWN  $9DEF           ; Unknown 9xxx instruction
$642    $4704   SNE      V7, #04         ; Skip if V7 != 4
$644    $1D30   JP       $D30            ; Jump to D30
$646    $0C21   SYS      $C21            ; System call to C21
$648    $242F   CALL     $42F            ; Call subroutine at 42F
$64A    $8B40   LD       VB, V4          ; VB = V4
$64C    $EC2C   UNKNOWN  $EC2C           ; Unknown Exxx instruction
$64E    $B6DB   JP       V0, $6DB        ; Jump to V0 + 6DB
$650    $8030   LD       V0, V3          ; V0 = V3
$652    $801D   UNKNOWN  801D            ; Unknown 8xxx instruction
$654    $4EC2   SNE      VE, #C2         ; Skip if VE != 194
$656    $06E0   SYS      $6E0            ; System call to 6E0
$658    $4CD0   SNE      VC, #D0         ; Skip if VC != 208
$65A    $826B   UNKNOWN  826B            ; Unknown 8xxx instruction
$65C    $26A1   CALL     $6A1            ; Call subroutine at 6A1
$65E    $1C5E   JP       $C5E            ; Jump to C5E
$660    $8A22   AND      VA, V2          ; VA &= V2
$662    $5D79   UNKNOWN  $5D79           ; Unknown 5xxx instruction
$664    $087A   SYS      $87A            ; System call to 87A
$666    $D826   DRW      V8, V2, #6      ; Draw 6-byte sprite at V8, V2
$668    $9552   UNKNOWN  $9552           ; Unknown 9xxx instruction
$66A    $32A1   SE       V2, #A1         ; Skip if V2 == 161
$66C    $1220   JP       $220            ; Jump to 220
$66E    $3DEB   SE       VD, #EB         ; Skip if VD == 235
$670    $B794   JP       V0, $794        ; Jump to V0 + 794
$672    $3B38   SE       VB, #38         ; Skip if VB == 56
$674    $4ED1   SNE      VE, #D1         ; Skip if VE != 209
$676    $0BBC   SYS      $BBC            ; System call to BBC
$678    $61A9   LD       V1, #A9         ; Load 169 into V1
$67A    $55D9   UNKNOWN  $55D9           ; Unknown 5xxx instruction
$67C    $BF09   JP       V0, $F09        ; Jump to V0 + F09
$67E    $A635   LD       I, $635         ; Load 635 into I
$680    $D395   DRW      V3, V9, #5      ; Draw 5-byte sprite at V3, V9
$682    $765F   ADD      V6, #5F         ; Add 95 to V6
$684    $90F1   UNKNOWN  $90F1           ; Unknown 9xxx instruction
$686    $7664   ADD      V6, #64         ; Add 100 to V6
$688    $5516   UNKNOWN  $5516           ; Unknown 5xxx instruction
$68A    $A520   LD       I, $520         ; Load 520 into I
$68C    $C0AE   RND      V0, #AE         ; V0 = random & AE
$68E    $6D0A   LD       VD, #0A         ; Load 10 into VD
$690    $4880   SNE      V8, #80         ; Skip if V8 != 128
$692    $6751   LD       V7, #51         ; Load 81 into V7
$694    $31A6   SE       V1, #A6         ; Skip if V1 == 166
$696    $646D   LD       V4, #6D         ; Load 109 into V4
$698    $C153   RND      V1, #53         ; V1 = random & 53
$69A    $119A   JP       $19A            ; Jump to 19A
$69C    $0BA4   SYS      $BA4            ; System call to BA4
$69E    $7B53   ADD      VB, #53         ; Add 83 to VB
$6A0    $E473   UNKNOWN  $E473           ; Unknown Exxx instruction
$6A2    $1F64   JP       $F64            ; Jump to F64
$6A4    $2653   CALL     $653            ; Call subroutine at 653
$6A6    $1DFD   JP       $DFD            ; Jump to DFD
$6A8    $12CB   JP       $2CB            ; Jump to 2CB
$6AA    $75B6   ADD      V5, #B6         ; Add 182 to V5
$6AC    $2E5B   CALL     $E5B            ; Call subroutine at E5B
$6AE    $53D4   UNKNOWN  $53D4           ; Unknown 5xxx instruction
$6B0    $4252   SNE      V2, #52         ; Skip if V2 != 82
$6B2    $0A1D   SYS      $A1D            ; System call to A1D
$6B4    $2EC6   CALL     $EC6            ; Call subroutine at EC6
$6B6    $39B3   SE       V9, #B3         ; Skip if V9 == 179
$6B8    $DA81   DRW      VA, V8, #1      ; Draw 1-byte sprite at VA, V8
$6BA    $2EA3   CALL     $EA3            ; Call subroutine at EA3
$6BC    $6E54   LD       VE, #54         ; Load 84 into VE
$6BE    $9A6F   UNKNOWN  $9A6F           ; Unknown 9xxx instruction
$6C0    $7859   ADD      V8, #59         ; Add 89 to V8
$6C2    $B304   JP       V0, $304        ; Jump to V0 + 304
$6C4    $BBEC   JP       V0, $BEC        ; Jump to V0 + BEC
$6C6    $182A   JP       $82A            ; Jump to 82A
$6C8    $E545   UNKNOWN  $E545           ; Unknown Exxx instruction
$6CA    $90B9   UNKNOWN  $90B9           ; Unknown 9xxx instruction
$6CC    $4DC7   SNE      VD, #C7         ; Skip if VD != 199
$6CE    $6B05   LD       VB, #05         ; Load 5 into VB
$6D0    $FF99   UNKNOWN  FF99            ; Unknown Fxxx instruction
$6D2    $E3DA   UNKNOWN  $E3DA           ; Unknown Exxx instruction
$6D4    $6C7E   LD       VC, #7E         ; Load 126 into VC
$6D6    $4E3A   SNE      VE, #3A         ; Skip if VE != 58
$6D8    $FF44   UNKNOWN  FF44            ; Unknown Fxxx instruction
$6DA    $7C09   ADD      VC, #09         ; Add 9 to VC
$6DC    $E059   UNKNOWN  $E059           ; Unknown Exxx instruction
$6DE    $A76F   LD       I, $76F         ; Load 76F into I
$6E0    $CF12   RND      VF, #12         ; VF = random & 12
$6E2    $A600   LD       I, $600         ; Load 600 into I
$6E4    $99D8   UNKNOWN  $99D8           ; Unknown 9xxx instruction
$6E6    $C33C   RND      V3, #3C         ; V3 = random & 3C
$6E8    $4094   SNE      V0, #94         ; Skip if V0 != 148
$6EA    $BF99   JP       V0, $F99        ; Jump to V0 + F99
$6EC    $AE2D   LD       I, $E2D         ; Load E2D into I
$6EE    $EF16   UNKNOWN  $EF16           ; Unknown Exxx instruction
$6F0    $56EA   UNKNOWN  $56EA           ; Unknown 5xxx instruction
$6F2    $A390   LD       I, $390         ; Load 390 into I
$6F4    $4AB1   SNE      VA, #B1         ; Skip if VA != 177
$6F6    $6069   LD       V0, #69         ; Load 105 into V0
$6F8    $6BC3   LD       VB, #C3         ; Load 195 into VB
$6FA    $3C78   SE       VC, #78         ; Skip if VC == 120
$6FC    $2421   CALL     $421            ; Call subroutine at 421
$6FE    $135E   JP       $35E            ; Jump to 35E
$700    $6F9A   LD       VF, #9A         ; Load 154 into VF
$702    $C855   RND      V8, #55         ; V8 = random & 55
$704    $359D   SE       V5, #9D         ; Skip if V5 == 157
$706    $EAF7   UNKNOWN  $EAF7           ; Unknown Exxx instruction
$708    $783D   ADD      V8, #3D         ; Add 61 to V8
$70A    $8E31   OR       VE, V3          ; VE |= V3
$70C    $BD58   JP       V0, $D58        ; Jump to V0 + D58
$70E    $A808   LD       I, $808         ; Load 808 into I
$710    $BB10   JP       V0, $B10        ; Jump to V0 + B10
$712    $6164   LD       V1, #64         ; Load 100 into V1
$714    $99FC   UNKNOWN  $99FC           ; Unknown 9xxx instruction
$716    $E5A2   UNKNOWN  $E5A2           ; Unknown Exxx instruction
$718    $680F   LD       V8, #0F         ; Load 15 into V8
$71A    $D805   DRW      V8, V0, #5      ; Draw 5-byte sprite at V8, V0
$71C    $BD81   JP       V0, $D81        ; Jump to V0 + D81
$71E    $22D1   CALL     $2D1            ; Call subroutine at 2D1
$720    $28E1   CALL     $8E1            ; Call subroutine at 8E1
$722    $15AB   JP       $5AB            ; Jump to 5AB
$724    $E7DC   UNKNOWN  $E7DC           ; Unknown Exxx instruction
$726    $9B45   UNKNOWN  $9B45           ; Unknown 9xxx instruction
$728    $5291   UNKNOWN  $5291           ; Unknown 5xxx instruction
$72A    $F802   UNKNOWN  F802            ; Unknown Fxxx instruction
$72C    $DB3D   DRW      VB, V3, #D      ; Draw 13-byte sprite at VB, V3
$72E    $F02D   UNKNOWN  F02D            ; Unknown Fxxx instruction
$730    $8E7A   UNKNOWN  8E7A            ; Unknown 8xxx instruction
$732    $2A46   CALL     $A46            ; Call subroutine at A46
$734    $D7CE   DRW      V7, VC, #E      ; Draw 14-byte sprite at V7, VC
$736    $9491   UNKNOWN  $9491           ; Unknown 9xxx instruction
$738    $A5B6   LD       I, $5B6         ; Load 5B6 into I
$73A    $F85C   UNKNOWN  F85C            ; Unknown Fxxx instruction
$73C    $8434   ADD      V4, V3          ; V4 += V3, VF = carry
$73E    $D67A   DRW      V6, V7, #A      ; Draw 10-byte sprite at V6, V7
$740    $674C   LD       V7, #4C         ; Load 76 into V7
$742    $E5A0   UNKNOWN  $E5A0           ; Unknown Exxx instruction
$744    $6C26   LD       VC, #26         ; Load 38 into VC
$746    $6F37   LD       VF, #37         ; Load 55 into VF
$748    $2FBF   CALL     $FBF            ; Call subroutine at FBF
$74A    $6F6C   LD       VF, #6C         ; Load 108 into VF
$74C    $9ED6   UNKNOWN  $9ED6           ; Unknown 9xxx instruction
$74E    $48BB   SNE      V8, #BB         ; Skip if V8 != 187
$750    $88C0   LD       V8, VC          ; V8 = VC
$752    $19F3   JP       $9F3            ; Jump to 9F3
$754    $D5C9   DRW      V5, VC, #9      ; Draw 9-byte sprite at V5, VC
$756    $8B06   SHR      VB              ; VB >>= 1, VF = LSB
$758    $51DD   UNKNOWN  $51DD           ; Unknown 5xxx instruction
$75A    $24FA   CALL     $4FA            ; Call subroutine at 4FA
$75C    $A450   LD       I, $450         ; Load 450 into I
$75E    $FF68   UNKNOWN  FF68            ; Unknown Fxxx instruction
$760    $532D   UNKNOWN  $532D           ; Unknown 5xxx instruction
$762    $91B4   UNKNOWN  $91B4           ; Unknown 9xxx instruction
$764    $32F1   SE       V2, #F1         ; Skip if V2 == 241
$766    $EDF6   UNKNOWN  $EDF6           ; Unknown Exxx instruction
$768    $A0ED   LD       I, $0ED         ; Load 0ED into I
$76A    $485D   SNE      V8, #5D         ; Skip if V8 != 93
$76C    $BA0D   JP       V0, $A0D        ; Jump to V0 + A0D
$76E    $4F7B   SNE      VF, #7B         ; Skip if VF != 123
$770    $28B9   CALL     $8B9            ; Call subroutine at 8B9
$772    $4476   SNE      V4, #76         ; Skip if V4 != 118
$774    $5A67   UNKNOWN  $5A67           ; Unknown 5xxx instruction
$776    $9241   UNKNOWN  $9241           ; Unknown 9xxx instruction
$778    $07F0   SYS      $7F0            ; System call to 7F0
$77A    $A079   LD       I, $079         ; Load 079 into I
$77C    $F00E   UNKNOWN  F00E            ; Unknown Fxxx instruction
$77E    $C6A7   RND      V6, #A7         ; V6 = random & A7
$780    $E442   UNKNOWN  $E442           ; Unknown Exxx instruction
$782    $1AA2   JP       $AA2            ; Jump to AA2
$784    $15BE   JP       $5BE            ; Jump to 5BE
$786    $9DF7   UNKNOWN  $9DF7           ; Unknown 9xxx instruction
$788    $5B5A   UNKNOWN  $5B5A           ; Unknown 5xxx instruction
$78A    $58AB   UNKNOWN  $58AB           ; Unknown 5xxx instruction
$78C    $4BE5   SNE      VB, #E5         ; Skip if VB != 229
$78E    $FC35   UNKNOWN  FC35            ; Unknown Fxxx instruction
$790    $58A3   UNKNOWN  $58A3           ; Unknown 5xxx instruction
$792    $A306   LD       I, $306         ; Load 306 into I
$794    $CF9D   RND      VF, #9D         ; VF = random & 9D
$796    $4E41   SNE      VE, #41         ; Skip if VE != 65
$798    $70C4   ADD      V0, #C4         ; Add 196 to V0
$79A    $4985   SNE      V9, #85         ; Skip if V9 != 133
$79C    $40A3   SNE      V0, #A3         ; Skip if V0 != 163
$79E    $9906   UNKNOWN  $9906           ; Unknown 9xxx instruction
$7A0    $B6F5   JP       V0, $6F5        ; Jump to V0 + 6F5
$7A2    $BE27   JP       V0, $E27        ; Jump to V0 + E27
$7A4    $5B3D   UNKNOWN  $5B3D           ; Unknown 5xxx instruction
$7A6    $E256   UNKNOWN  $E256           ; Unknown Exxx instruction
$7A8    $FCCE   UNKNOWN  FCCE            ; Unknown Fxxx instruction
$7AA    $AF12   LD       I, $F12         ; Load F12 into I
$7AC    $E09E   SKP      V0              ; Skip if key V0 pressed
$7AE    $5E0C   UNKNOWN  $5E0C           ; Unknown 5xxx instruction
$7B0    $B4F6   JP       V0, $4F6        ; Jump to V0 + 4F6
$7B2    $FE1B   UNKNOWN  FE1B            ; Unknown Fxxx instruction
$7B4    $B0B5   JP       V0, $0B5        ; Jump to V0 + 0B5
$7B6    $F841   UNKNOWN  F841            ; Unknown Fxxx instruction
$7B8    $F781   UNKNOWN  F781            ; Unknown Fxxx instruction
$7BA    $2E42   CALL     $E42            ; Call subroutine at E42
$7BC    $B5D4   JP       V0, $5D4        ; Jump to V0 + 5D4
$7BE    $1916   JP       $916            ; Jump to 916
$7C0    $DB97   DRW      VB, V9, #7      ; Draw 7-byte sprite at VB, V9
$7C2    $A54F   LD       I, $54F         ; Load 54F into I
$7C4    $A999   LD       I, $999         ; Load 999 into I
$7C6    $AC44   LD       I, $C44         ; Load C44 into I
$7C8    $E207   UNKNOWN  $E207           ; Unknown Exxx instruction
$7CA    $5D4C   UNKNOWN  $5D4C           ; Unknown 5xxx instruction
$7CC    $7E13   ADD      VE, #13         ; Add 19 to VE
$7CE    $64B1   LD       V4, #B1         ; Load 177 into V4
$7D0    $ADC5   LD       I, $DC5         ; Load DC5 into I
$7D2    $D74A   DRW      V7, V4, #A      ; Draw 10-byte sprite at V7, V4
$7D4    $D23C   DRW      V2, V3, #C      ; Draw 12-byte sprite at V2, V3
$7D6    $6986   LD       V9, #86         ; Load 134 into V9
$7D8    $93EE   UNKNOWN  $93EE           ; Unknown 9xxx instruction
$7DA    $0AA2   SYS      $AA2            ; System call to AA2
$7DC    $69D8   LD       V9, #D8         ; Load 216 into V9
$7DE    $47FD   SNE      V7, #FD         ; Skip if V7 != 253
$7E0    $8ADE   SHL      VA              ; VA <<= 1, VF = MSB
$7E2    $441F   SNE      V4, #1F         ; Skip if V4 != 31
$7E4    $7B73   ADD      VB, #73         ; Add 115 to VB
$7E6    $45EA   SNE      V5, #EA         ; Skip if V5 != 234
$7E8    $8505   SUB      V5, V0          ; V5 -= V0, VF = !borrow
$7EA    $4B9E   SNE      VB, #9E         ; Skip if VB != 158
$7EC    $8CB0   LD       VC, VB          ; VC = VB
$7EE    $B690   JP       V0, $690        ; Jump to V0 + 690
$7F0    $EE6B   UNKNOWN  $EE6B           ; Unknown Exxx instruction
$7F2    $EA35   UNKNOWN  $EA35           ; Unknown Exxx instruction
$7F4    $84B0   LD       V4, VB          ; V4 = VB
$7F6    $900F   UNKNOWN  $900F           ; Unknown 9xxx instruction
$7F8    $3D8F   SE       VD, #8F         ; Skip if VD == 143
$7FA    $C2DD   RND      V2, #DD         ; V2 = random & DD
$7FC    $09B4   SYS      $9B4            ; System call to 9B4
$7FE    $8076   SHR      V0              ; V0 >>= 1, VF = LSB
$800    $786B   ADD      V8, #6B         ; Add 107 to V8
$802    $DE81   DRW      VE, V8, #1      ; Draw 1-byte sprite at VE, V8
$804    $7172   ADD      V1, #72         ; Add 114 to V1
$806    $C2F4   RND      V2, #F4         ; V2 = random & F4
$808    $63B2   LD       V3, #B2         ; Load 178 into V3
$80A    $12A1   JP       $2A1            ; Jump to 2A1
$80C    $3AAA   SE       VA, #AA         ; Skip if VA == 170
$80E    $DE26   DRW      VE, V2, #6      ; Draw 6-byte sprite at VE, V2
$810    $70F3   ADD      V0, #F3         ; Add 243 to V0
$812    $3AA2   SE       VA, #A2         ; Skip if VA == 162
$814    $686B   LD       V8, #6B         ; Load 107 into V8
$816    $5844   UNKNOWN  $5844           ; Unknown 5xxx instruction
$818    $8F31   OR       VF, V3          ; VF |= V3
$81A    $7035   ADD      V0, #35         ; Add 53 to V0
$81C    $7FD1   ADD      VF, #D1         ; Add 209 to VF
$81E    $C5AA   RND      V5, #AA         ; V5 = random & AA
$820    $346F   SE       V4, #6F         ; Skip if V4 == 111
$822    $C4D9   RND      V4, #D9         ; V4 = random & D9
$824    $636A   LD       V3, #6A         ; Load 106 into V3
$826    $F3F1   UNKNOWN  F3F1            ; Unknown Fxxx instruction
$828    $85C6   SHR      V5              ; V5 >>= 1, VF = LSB
$82A    $6D0C   LD       VD, #0C         ; Load 12 into VD
$82C    $0821   SYS      $821            ; System call to 821
$82E    $3A3F   SE       VA, #3F         ; Skip if VA == 63
$830    $20A4   CALL     $0A4            ; Call subroutine at 0A4
$832    $FB01   UNKNOWN  FB01            ; Unknown Fxxx instruction
$834    $CC92   RND      VC, #92         ; VC = random & 92
$836    $48E2   SNE      V8, #E2         ; Skip if V8 != 226
$838    $11A0   JP       $1A0            ; Jump to 1A0
$83A    $B10B   JP       V0, $10B        ; Jump to V0 + 10B
$83C    $1048   JP       $048            ; Jump to 048
$83E    $28F4   CALL     $8F4            ; Call subroutine at 8F4
$840    $2E3A   CALL     $E3A            ; Call subroutine at E3A
$842    $DC77   DRW      VC, V7, #7      ; Draw 7-byte sprite at VC, V7
$844    $D6CA   DRW      V6, VC, #A      ; Draw 10-byte sprite at V6, VC
$846    $7FEE   ADD      VF, #EE         ; Add 238 to VF
$848    $041C   SYS      $41C            ; System call to 41C
$84A    $9F2B   UNKNOWN  $9F2B           ; Unknown 9xxx instruction
$84C    $DEA8   DRW      VE, VA, #8      ; Draw 8-byte sprite at VE, VA
$84E    $5391   UNKNOWN  $5391           ; Unknown 5xxx instruction
$850    $E837   UNKNOWN  $E837           ; Unknown Exxx instruction
$852    $FFAE   UNKNOWN  FFAE            ; Unknown Fxxx instruction
$854    $6161   LD       V1, #61         ; Load 97 into V1
$856    $11A5   JP       $1A5            ; Jump to 1A5
$858    $B10F   JP       V0, $10F        ; Jump to V0 + 10F
$85A    $7833   ADD      V8, #33         ; Add 51 to V8
$85C    $4EB5   SNE      VE, #B5         ; Skip if VE != 181
$85E    $F8F2   UNKNOWN  F8F2            ; Unknown Fxxx instruction
$860    $6157   LD       V1, #57         ; Load 87 into V1
$862    $8A9B   UNKNOWN  8A9B            ; Unknown 8xxx instruction
$864    $CB7E   RND      VB, #7E         ; VB = random & 7E
$866    $82D0   LD       V2, VD          ; V2 = VD
$868    $9179   UNKNOWN  $9179           ; Unknown 9xxx instruction
$86A    $7349   ADD      V3, #49         ; Add 73 to V3
$86C    $9F7A   UNKNOWN  $9F7A           ; Unknown 9xxx instruction
$86E    $796C   ADD      V9, #6C         ; Add 108 to V9
$870    $2B46   CALL     $B46            ; Call subroutine at B46
$872    $3FF1   SE       VF, #F1         ; Skip if VF == 241
$874    $6728   LD       V7, #28         ; Load 40 into V7
$876    $0121   SYS      $121            ; System call to 121
$878    $BBA4   JP       V0, $BA4        ; Jump to V0 + BA4
$87A    $8CB7   SUBN     VC, VB          ; VC = VB - VC, VF = !borrow
$87C    $3202   SE       V2, #02         ; Skip if V2 == 2
$87E    $BAF7   JP       V0, $AF7        ; Jump to V0 + AF7
$880    $1FB2   JP       $FB2            ; Jump to FB2
$882    $6590   LD       V5, #90         ; Load 144 into V5
$884    $FE86   UNKNOWN  FE86            ; Unknown Fxxx instruction
$886    $1A22   JP       $A22            ; Jump to A22
$888    $B500   JP       V0, $500        ; Jump to V0 + 500
$88A    $6A95   LD       VA, #95         ; Load 149 into VA
$88C    $BD7E   JP       V0, $D7E        ; Jump to V0 + D7E
$88E    $60EF   LD       V0, #EF         ; Load 239 into V0
$890    $3372   SE       V3, #72         ; Skip if V3 == 114
$892    $1FB6   JP       $FB6            ; Jump to FB6
$894    $955F   UNKNOWN  $955F           ; Unknown 9xxx instruction
$896    $F2F4   UNKNOWN  F2F4            ; Unknown Fxxx instruction
$898    $F19F   UNKNOWN  F19F            ; Unknown Fxxx instruction
$89A    $B17F   JP       V0, $17F        ; Jump to V0 + 17F
$89C    $D2C2   DRW      V2, VC, #2      ; Draw 2-byte sprite at V2, VC
$89E    $AFB5   LD       I, $FB5         ; Load FB5 into I
$8A0    $E5FE   UNKNOWN  $E5FE           ; Unknown Exxx instruction
$8A2    $4CC2   SNE      VC, #C2         ; Skip if VC != 194
$8A4    $B8CE   JP       V0, $8CE        ; Jump to V0 + 8CE
$8A6    $F22F   UNKNOWN  F22F            ; Unknown Fxxx instruction
$8A8    $5E6D   UNKNOWN  $5E6D           ; Unknown 5xxx instruction
$8AA    $DB2E   DRW      VB, V2, #E      ; Draw 14-byte sprite at VB, V2
$8AC    $744C   ADD      V4, #4C         ; Add 76 to V4
$8AE    $F6DD   UNKNOWN  F6DD            ; Unknown Fxxx instruction
$8B0    $0032   SYS      $032            ; System call to 032
$8B2    $F098   UNKNOWN  F098            ; Unknown Fxxx instruction
$8B4    $F61C   UNKNOWN  F61C            ; Unknown Fxxx instruction
$8B6    $AF6D   LD       I, $F6D         ; Load F6D into I
$8B8    $2922   CALL     $922            ; Call subroutine at 922
$8BA    $E0E4   UNKNOWN  $E0E4           ; Unknown Exxx instruction
$8BC    $156E   JP       $56E            ; Jump to 56E
$8BE    $BF31   JP       V0, $F31        ; Jump to V0 + F31
$8C0    $0CCD   SYS      $CCD            ; System call to CCD
$8C2    $0F05   SYS      $F05            ; System call to F05
$8C4    $B63E   JP       V0, $63E        ; Jump to V0 + 63E
$8C6    $60A4   LD       V0, #A4         ; Load 164 into V0
$8C8    $2A89   CALL     $A89            ; Call subroutine at A89
$8CA    $19E7   JP       $9E7            ; Jump to 9E7
$8CC    $A559   LD       I, $559         ; Load 559 into I
$8CE    $13EA   JP       $3EA            ; Jump to 3EA
$8D0    $00FD   SYS      $0FD            ; System call to 0FD
$8D2    $9967   UNKNOWN  $9967           ; Unknown 9xxx instruction
$8D4    $E020   UNKNOWN  $E020           ; Unknown Exxx instruction
$8D6    $71B9   ADD      V1, #B9         ; Add 185 to V1
$8D8    $F888   UNKNOWN  F888            ; Unknown Fxxx instruction
$8DA    $8951   OR       V9, V5          ; V9 |= V5
$8DC    $AB01   LD       I, $B01         ; Load B01 into I
$8DE    $D042   DRW      V0, V4, #2      ; Draw 2-byte sprite at V0, V4
$8E0    $6BB8   LD       VB, #B8         ; Load 184 into VB
$8E2    $FCFB   UNKNOWN  FCFB            ; Unknown Fxxx instruction
$8E4    $12DA   JP       $2DA            ; Jump to 2DA
$8E6    $135B   JP       $35B            ; Jump to 35B
$8E8    $13BF   JP       $3BF            ; Jump to 3BF
$8EA    $3213   SE       V2, #13         ; Skip if V2 == 19
$8EC    $E8DB   UNKNOWN  $E8DB           ; Unknown Exxx instruction
$8EE    $263B   CALL     $63B            ; Call subroutine at 63B
$8F0    $AD8F   LD       I, $D8F         ; Load D8F into I
$8F2    $F3EF   UNKNOWN  F3EF            ; Unknown Fxxx instruction
$8F4    $A183   LD       I, $183         ; Load 183 into I
$8F6    $0312   SYS      $312            ; System call to 312
$8F8    $CDB6   RND      VD, #B6         ; VD = random & B6
$8FA    $C10F   RND      V1, #0F         ; V1 = random & 0F
$8FC    $E180   UNKNOWN  $E180           ; Unknown Exxx instruction
$8FE    $1775   JP       $775            ; Jump to 775
$900    $C79E   RND      V7, #9E         ; V7 = random & 9E
$902    $B325   JP       V0, $325        ; Jump to V0 + 325
$904    $C2D3   RND      V2, #D3         ; V2 = random & D3
$906    $0F13   SYS      $F13            ; System call to F13
$908    $A3E0   LD       I, $3E0         ; Load 3E0 into I
$90A    $D272   DRW      V2, V7, #2      ; Draw 2-byte sprite at V2, V7
$90C    $6748   LD       V7, #48         ; Load 72 into V7
$90E    $7C0B   ADD      VC, #0B         ; Add 11 to VC
$910    $3F98   SE       VF, #98         ; Skip if VF == 152
$912    $B271   JP       V0, $271        ; Jump to V0 + 271
$914    $CC99   RND      VC, #99         ; VC = random & 99
$916    $CEF2   RND      VE, #F2         ; VE = random & F2
$918    $CA83   RND      VA, #83         ; VA = random & 83
$91A    $CF77   RND      VF, #77         ; VF = random & 77
$91C    $608C   LD       V0, #8C         ; Load 140 into V0
$91E    $D403   DRW      V4, V0, #3      ; Draw 3-byte sprite at V4, V0
$920    $E3F7   UNKNOWN  $E3F7           ; Unknown Exxx instruction
$922    $1575   JP       $575            ; Jump to 575
$924    $62C1   LD       V2, #C1         ; Load 193 into V2
$926    $AEA0   LD       I, $EA0         ; Load EA0 into I
$928    $C0A0   RND      V0, #A0         ; V0 = random & A0
$92A    $EC3C   UNKNOWN  $EC3C           ; Unknown Exxx instruction
$92C    $FEC9   UNKNOWN  FEC9            ; Unknown Fxxx instruction
$92E    $4C30   SNE      VC, #30         ; Skip if VC != 48
$930    $4392   SNE      V3, #92         ; Skip if V3 != 146
$932    $FE74   UNKNOWN  FE74            ; Unknown Fxxx instruction
$934    $36DC   SE       V6, #DC         ; Skip if V6 == 220
$936    $A24C   LD       I, $24C         ; Load 24C into I
$938    $D51E   DRW      V5, V1, #E      ; Draw 14-byte sprite at V5, V1
$93A    $078D   SYS      $78D            ; System call to 78D
$93C    $A8FC   LD       I, $8FC         ; Load 8FC into I
$93E    $6DA6   LD       VD, #A6         ; Load 166 into VD
$940    $A528   LD       I, $528         ; Load 528 into I
$942    $A4FB   LD       I, $4FB         ; Load 4FB into I
$944    $C73A   RND      V7, #3A         ; V7 = random & 3A
$946    $74C5   ADD      V4, #C5         ; Add 197 to V4
$948    $FC9E   UNKNOWN  FC9E            ; Unknown Fxxx instruction
$94A    $2430   CALL     $430            ; Call subroutine at 430
$94C    $2A95   CALL     $A95            ; Call subroutine at A95
$94E    $D0C1   DRW      V0, VC, #1      ; Draw 1-byte sprite at V0, VC
$950    $1DD8   JP       $DD8            ; Jump to DD8
$952    $8CBD   UNKNOWN  8CBD            ; Unknown 8xxx instruction
$954    $79CC   ADD      V9, #CC         ; Add 204 to V9
$956    $1AB6   JP       $AB6            ; Jump to AB6
$958    $4833   SNE      V8, #33         ; Skip if V8 != 51
$95A    $64C2   LD       V4, #C2         ; Load 194 into V4
$95C    $93DA   UNKNOWN  $93DA           ; Unknown 9xxx instruction
$95E    $CCFC   RND      VC, #FC         ; VC = random & FC
$960    $6844   LD       V8, #44         ; Load 68 into V8
$962    $74DB   ADD      V4, #DB         ; Add 219 to V4
$964    $8307   SUBN     V3, V0          ; V3 = V0 - V3, VF = !borrow
$966    $D338   DRW      V3, V3, #8      ; Draw 8-byte sprite at V3, V3
$968    $BDE1   JP       V0, $DE1        ; Jump to V0 + DE1
$96A    $FA81   UNKNOWN  FA81            ; Unknown Fxxx instruction
$96C    $070A   SYS      $70A            ; System call to 70A
$96E    $4711   SNE      V7, #11         ; Skip if V7 != 17
$970    $48C8   SNE      V8, #C8         ; Skip if V8 != 200
$972    $A5E5   LD       I, $5E5         ; Load 5E5 into I
$974    $2755   CALL     $755            ; Call subroutine at 755
$976    $8188   UNKNOWN  8188            ; Unknown 8xxx instruction
$978    $BF49   JP       V0, $F49        ; Jump to V0 + F49
$97A    $508F   UNKNOWN  $508F           ; Unknown 5xxx instruction
$97C    $AA1D   LD       I, $A1D         ; Load A1D into I
$97E    $839F   UNKNOWN  839F            ; Unknown 8xxx instruction
$980    $D5E1   DRW      V5, VE, #1      ; Draw 1-byte sprite at V5, VE
$982    $4424   SNE      V4, #24         ; Skip if V4 != 36
$984    $7821   ADD      V8, #21         ; Add 33 to V8
$986    $3456   SE       V4, #56         ; Skip if V4 == 86
$988    $20B0   CALL     $0B0            ; Call subroutine at 0B0
$98A    $1758   JP       $758            ; Jump to 758
$98C    $665A   LD       V6, #5A         ; Load 90 into V6
$98E    $44D6   SNE      V4, #D6         ; Skip if V4 != 214
$990    $DC66   DRW      VC, V6, #6      ; Draw 6-byte sprite at VC, V6
$992    $8ED4   ADD      VE, VD          ; VE += VD, VF = carry
$994    $AD7C   LD       I, $D7C         ; Load D7C into I
$996    $6C16   LD       VC, #16         ; Load 22 into VC
$998    $B55A   JP       V0, $55A        ; Jump to V0 + 55A
$99A    $C796   RND      V7, #96         ; V7 = random & 96
$99C    $BDE5   JP       V0, $DE5        ; Jump to V0 + DE5
$99E    $1A29   JP       $A29            ; Jump to A29
$9A0    $538F   UNKNOWN  $538F           ; Unknown 5xxx instruction
$9A2    $F8AB   UNKNOWN  F8AB            ; Unknown Fxxx instruction
$9A4    $2E81   CALL     $E81            ; Call subroutine at E81
$9A6    $BF73   JP       V0, $F73        ; Jump to V0 + F73
$9A8    $7B50   ADD      VB, #50         ; Add 80 to VB
$9AA    $0514   SYS      $514            ; System call to 514
$9AC    $BB30   JP       V0, $B30        ; Jump to V0 + B30
$9AE    $4A78   SNE      VA, #78         ; Skip if VA != 120
$9B0    $C6B5   RND      V6, #B5         ; V6 = random & B5
$9B2    $9C2E   UNKNOWN  $9C2E           ; Unknown 9xxx instruction
$9B4    $0E31   SYS      $E31            ; System call to E31
$9B6    $623F   LD       V2, #3F         ; Load 63 into V2
$9B8    $556A   UNKNOWN  $556A           ; Unknown 5xxx instruction
$9BA    $93FB   UNKNOWN  $93FB           ; Unknown 9xxx instruction
$9BC    $995F   UNKNOWN  $995F           ; Unknown 9xxx instruction
$9BE    $C838   RND      V8, #38         ; V8 = random & 38
$9C0    $572F   UNKNOWN  $572F           ; Unknown 5xxx instruction
$9C2    $9B1A   UNKNOWN  $9B1A           ; Unknown 9xxx instruction
$9C4    $314E   SE       V1, #4E         ; Skip if V1 == 78
$9C6    $9A45   UNKNOWN  $9A45           ; Unknown 9xxx instruction
$9C8    $BFE6   JP       V0, $FE6        ; Jump to V0 + FE6
$9CA    $887B   UNKNOWN  887B            ; Unknown 8xxx instruction
$9CC    $A870   LD       I, $870         ; Load 870 into I
$9CE    $D4C3   DRW      V4, VC, #3      ; Draw 3-byte sprite at V4, VC
$9D0    $C2AE   RND      V2, #AE         ; V2 = random & AE
$9D2    $7674   ADD      V6, #74         ; Add 116 to V6
$9D4    $0A6C   SYS      $A6C            ; System call to A6C
$9D6    $06D5   SYS      $6D5            ; System call to 6D5
$9D8    $52F7   UNKNOWN  $52F7           ; Unknown 5xxx instruction
$9DA    $2C09   CALL     $C09            ; Call subroutine at C09
$9DC    $73A3   ADD      V3, #A3         ; Add 163 to V3
$9DE    $B611   JP       V0, $611        ; Jump to V0 + 611
$9E0    $68A8   LD       V8, #A8         ; Load 168 into V8
$9E2    $8404   ADD      V4, V0          ; V4 += V0, VF = carry
$9E4    $1E89   JP       $E89            ; Jump to E89
$9E6    $9CF1   UNKNOWN  $9CF1           ; Unknown 9xxx instruction
$9E8    $BFFC   JP       V0, $FFC        ; Jump to V0 + FFC
$9EA    $7B15   ADD      VB, #15         ; Add 21 to VB
$9EC    $0FE7   SYS      $FE7            ; System call to FE7
$9EE    $51B0   SE       V1, VB          ; Skip if V1 == VB
$9F0    $C716   RND      V7, #16         ; V7 = random & 16
$9F2    $8FA4   ADD      VF, VA          ; VF += VA, VF = carry
$9F4    $41D7   SNE      V1, #D7         ; Skip if V1 != 215
$9F6    $5CC1   UNKNOWN  $5CC1           ; Unknown 5xxx instruction
$9F8    $5CD5   UNKNOWN  $5CD5           ; Unknown 5xxx instruction
$9FA    $10AC   JP       $0AC            ; Jump to 0AC
$9FC    $4FB6   SNE      VF, #B6         ; Skip if VF != 182
$9FE    $FDBD   UNKNOWN  FDBD            ; Unknown Fxxx instruction
$A00    $0E75   SYS      $E75            ; System call to E75
$A02    $D852   DRW      V8, V5, #2      ; Draw 2-byte sprite at V8, V5
$A04    $894E   SHL      V9              ; V9 <<= 1, VF = MSB
$A06    $573F   UNKNOWN  $573F           ; Unknown 5xxx instruction
$A08    $AC4D   LD       I, $C4D         ; Load C4D into I
$A0A    $E82A   UNKNOWN  $E82A           ; Unknown Exxx instruction
$A0C    $45DA   SNE      V5, #DA         ; Skip if V5 != 218
$A0E    $CF1F   RND      VF, #1F         ; VF = random & 1F
$A10    $0E18   SYS      $E18            ; System call to E18
$A12    $1E95   JP       $E95            ; Jump to E95
$A14    $47B4   SNE      V7, #B4         ; Skip if V7 != 180
$A16    $B787   JP       V0, $787        ; Jump to V0 + 787
$A18    $620D   LD       V2, #0D         ; Load 13 into V2
$A1A    $6FF5   LD       VF, #F5         ; Load 245 into VF
$A1C    $C5D2   RND      V5, #D2         ; V5 = random & D2
$A1E    $C5CC   RND      V5, #CC         ; V5 = random & CC
$A20    $67CB   LD       V7, #CB         ; Load 203 into V7
$A22    $7083   ADD      V0, #83         ; Add 131 to V0
$A24    $6876   LD       V8, #76         ; Load 118 into V8
$A26    $8EEE   SHL      VE              ; VE <<= 1, VF = MSB
$A28    $5C77   UNKNOWN  $5C77           ; Unknown 5xxx instruction
$A2A    $2864   CALL     $864            ; Call subroutine at 864
$A2C    $0CA0   SYS      $CA0            ; System call to CA0
$A2E    $F69C   UNKNOWN  F69C            ; Unknown Fxxx instruction
$A30    $0B42   SYS      $B42            ; System call to B42
$A32    $AB09   LD       I, $B09         ; Load B09 into I
$A34    $8171   OR       V1, V7          ; V1 |= V7
$A36    $AEBE   LD       I, $EBE         ; Load EBE into I
$A38    $5195   UNKNOWN  $5195           ; Unknown 5xxx instruction
$A3A    $AA56   LD       I, $A56         ; Load A56 into I
$A3C    $5EBE   UNKNOWN  $5EBE           ; Unknown 5xxx instruction
$A3E    $960B   UNKNOWN  $960B           ; Unknown 9xxx instruction
$A40    $656E   LD       V5, #6E         ; Load 110 into V5
$A42    $6EE4   LD       VE, #E4         ; Load 228 into VE
$A44    $3094   SE       V0, #94         ; Skip if V0 == 148
$A46    $DE80   DRW      VE, V8, #0      ; Draw 0-byte sprite at VE, V8
$A48    $777F   ADD      V7, #7F         ; Add 127 to V7
$A4A    $44EC   SNE      V4, #EC         ; Skip if V4 != 236
$A4C    $DF19   DRW      VF, V1, #9      ; Draw 9-byte sprite at VF, V1
$A4E    $2C77   CALL     $C77            ; Call subroutine at C77
$A50    $C008   RND      V0, #08         ; V0 = random & 08
$A52    $81E9   UNKNOWN  81E9            ; Unknown 8xxx instruction
$A54    $0D24   SYS      $D24            ; System call to D24
$A56    $3CF8   SE       VC, #F8         ; Skip if VC == 248
$A58    $32D4   SE       V2, #D4         ; Skip if V2 == 212
$A5A    $44A1   SNE      V4, #A1         ; Skip if V4 != 161
$A5C    $B510   JP       V0, $510        ; Jump to V0 + 510
$A5E    $F19E   UNKNOWN  F19E            ; Unknown Fxxx instruction
$A60    $AD17   LD       I, $D17         ; Load D17 into I
$A62    $664A   LD       V6, #4A         ; Load 74 into V6
$A64    $32FD   SE       V2, #FD         ; Skip if V2 == 253
$A66    $6A57   LD       VA, #57         ; Load 87 into VA
$A68    $C79F   RND      V7, #9F         ; V7 = random & 9F
$A6A    $8C1F   UNKNOWN  8C1F            ; Unknown 8xxx instruction
$A6C    $8B9D   UNKNOWN  8B9D            ; Unknown 8xxx instruction
$A6E    $8155   SUB      V1, V5          ; V1 -= V5, VF = !borrow
$A70    $BB00   JP       V0, $B00        ; Jump to V0 + B00
$A72    $FDAF   UNKNOWN  FDAF            ; Unknown Fxxx instruction
$A74    $A96F   LD       I, $96F         ; Load 96F into I
$A76    $4B59   SNE      VB, #59         ; Skip if VB != 89
$A78    $0E72   SYS      $E72            ; System call to E72
$A7A    $56A1   UNKNOWN  $56A1           ; Unknown 5xxx instruction
$A7C    $7774   ADD      V7, #74         ; Add 116 to V7
$A7E    $E81C   UNKNOWN  $E81C           ; Unknown Exxx instruction
$A80    $9D2A   UNKNOWN  $9D2A           ; Unknown 9xxx instruction
$A82    $5D01   UNKNOWN  $5D01           ; Unknown 5xxx instruction
$A84    $4578   SNE      V5, #78         ; Skip if V5 != 120
$A86    $287B   CALL     $87B            ; Call subroutine at 87B
$A88    $A663   LD       I, $663         ; Load 663 into I
$A8A    $0585   SYS      $585            ; System call to 585
$A8C    $6BB5   LD       VB, #B5         ; Load 181 into VB
$A8E    $6C03   LD       VC, #03         ; Load 3 into VC
$A90    $845F   UNKNOWN  845F            ; Unknown 8xxx instruction
$A92    $163A   JP       $63A            ; Jump to 63A
$A94    $D2BF   DRW      V2, VB, #F      ; Draw 15-byte sprite at V2, VB
$A96    $4770   SNE      V7, #70         ; Skip if V7 != 112
$A98    $3B79   SE       VB, #79         ; Skip if VB == 121
$A9A    $3DDA   SE       VD, #DA         ; Skip if VD == 218
$A9C    $6E5C   LD       VE, #5C         ; Load 92 into VE
$A9E    $9B30   SNE      VB, V3          ; Skip if VB != V3
$AA0    $2818   CALL     $818            ; Call subroutine at 818
$AA2    $1098   JP       $098            ; Jump to 098
$AA4    $55FB   UNKNOWN  $55FB           ; Unknown 5xxx instruction
$AA6    $6DFF   LD       VD, #FF         ; Load 255 into VD
$AA8    $8996   SHR      V9              ; V9 >>= 1, VF = LSB
$AAA    $0906   SYS      $906            ; System call to 906
$AAC    $F452   UNKNOWN  F452            ; Unknown Fxxx instruction
$AAE    $B29E   JP       V0, $29E        ; Jump to V0 + 29E
$AB0    $1135   JP       $135            ; Jump to 135
$AB2    $6842   LD       V8, #42         ; Load 66 into V8
$AB4    $E95A   UNKNOWN  $E95A           ; Unknown Exxx instruction
$AB6    $7A94   ADD      VA, #94         ; Add 148 to VA
$AB8    $F184   UNKNOWN  F184            ; Unknown Fxxx instruction
$ABA    $9B32   UNKNOWN  $9B32           ; Unknown 9xxx instruction
$ABC    $BA93   JP       V0, $A93        ; Jump to V0 + A93
$ABE    $8827   SUBN     V8, V2          ; V8 = V2 - V8, VF = !borrow
$AC0    $A77A   LD       I, $77A         ; Load 77A into I
$AC2    $0AEA   SYS      $AEA            ; System call to AEA
$AC4    $D301   DRW      V3, V0, #1      ; Draw 1-byte sprite at V3, V0
$AC6    $6016   LD       V0, #16         ; Load 22 into V0
$AC8    $330B   SE       V3, #0B         ; Skip if V3 == 11
$ACA    $4F9A   SNE      VF, #9A         ; Skip if VF != 154
$ACC    $59E7   UNKNOWN  $59E7           ; Unknown 5xxx instruction
$ACE    $695F   LD       V9, #5F         ; Load 95 into V9
$AD0    $F631   UNKNOWN  F631            ; Unknown Fxxx instruction
$AD2    $37D8   SE       V7, #D8         ; Skip if V7 == 216
$AD4    $3772   SE       V7, #72         ; Skip if V7 == 114
$AD6    $D6B2   DRW      V6, VB, #2      ; Draw 2-byte sprite at V6, VB
$AD8    $0BA6   SYS      $BA6            ; System call to BA6
$ADA    $69D8   LD       V9, #D8         ; Load 216 into V9
$ADC    $D633   DRW      V6, V3, #3      ; Draw 3-byte sprite at V6, V3
$ADE    $5B71   UNKNOWN  $5B71           ; Unknown 5xxx instruction
$AE0    $EC49   UNKNOWN  $EC49           ; Unknown Exxx instruction
$AE2    $BA13   JP       V0, $A13        ; Jump to V0 + A13
$AE4    $A49D   LD       I, $49D         ; Load 49D into I
$AE6    $A098   LD       I, $098         ; Load 098 into I
$AE8    $3188   SE       V1, #88         ; Skip if V1 == 136
$AEA    $9EFD   UNKNOWN  $9EFD           ; Unknown 9xxx instruction
$AEC    $701D   ADD      V0, #1D         ; Add 29 to V0
$AEE    $901C   UNKNOWN  $901C           ; Unknown 9xxx instruction
$AF0    $0E8B   SYS      $E8B            ; System call to E8B
$AF2    $0B87   SYS      $B87            ; System call to B87
$AF4    $6632   LD       V6, #32         ; Load 50 into V6
$AF6    $8EB1   OR       VE, VB          ; VE |= VB
$AF8    $7D05   ADD      VD, #05         ; Add 5 to VD
$AFA    $2AC1   CALL     $AC1            ; Call subroutine at AC1
$AFC    $44DD   SNE      V4, #DD         ; Skip if V4 != 221
$AFE    $5811   UNKNOWN  $5811           ; Unknown 5xxx instruction
$B00    $DF67   DRW      VF, V6, #7      ; Draw 7-byte sprite at VF, V6
$B02    $9D59   UNKNOWN  $9D59           ; Unknown 9xxx instruction
$B04    $3C63   SE       VC, #63         ; Skip if VC == 99
$B06    $0768   SYS      $768            ; System call to 768
$B08    $9CA9   UNKNOWN  $9CA9           ; Unknown 9xxx instruction
$B0A    $B5A0   JP       V0, $5A0        ; Jump to V0 + 5A0
$B0C    $638D   LD       V3, #8D         ; Load 141 into V3
$B0E    $152C   JP       $52C            ; Jump to 52C
$B10    $6087   LD       V0, #87         ; Load 135 into V0
$B12    $03C7   SYS      $3C7            ; System call to 3C7
$B14    $201F   CALL     $01F            ; Call subroutine at 01F
$B16    $812C   UNKNOWN  812C            ; Unknown 8xxx instruction
$B18    $5108   UNKNOWN  $5108           ; Unknown 5xxx instruction
$B1A    $89AB   UNKNOWN  89AB            ; Unknown 8xxx instruction
$B1C    $F16C   UNKNOWN  F16C            ; Unknown Fxxx instruction
$B1E    $6ABA   LD       VA, #BA         ; Load 186 into VA
$B20    $383B   SE       V8, #3B         ; Skip if V8 == 59
$B22    $4203   SNE      V2, #03         ; Skip if V2 != 3
$B24    $8C20   LD       VC, V2          ; VC = V2
$B26    $F7D7   UNKNOWN  F7D7            ; Unknown Fxxx instruction
$B28    $C290   RND      V2, #90         ; V2 = random & 90
$B2A    $CA85   RND      VA, #85         ; VA = random & 85
$B2C    $3597   SE       V5, #97         ; Skip if V5 == 151
$B2E    $AFE8   LD       I, $FE8         ; Load FE8 into I
$B30    $2CC2   CALL     $CC2            ; Call subroutine at CC2
$B32    $3386   SE       V3, #86         ; Skip if V3 == 134
$B34    $4200   SNE      V2, #00         ; Skip if V2 != 0
$B36    $5737   UNKNOWN  $5737           ; Unknown 5xxx instruction
$B38    $E3BE   UNKNOWN  $E3BE           ; Unknown Exxx instruction
$B3A    $B9D6   JP       V0, $9D6        ; Jump to V0 + 9D6
$B3C    $3A78   SE       VA, #78         ; Skip if VA == 120
$B3E    $CEE6   RND      VE, #E6         ; VE = random & E6
$B40    $80E8   UNKNOWN  80E8            ; Unknown 8xxx instruction
$B42    $F275   UNKNOWN  F275            ; Unknown Fxxx instruction
$B44    $1787   JP       $787            ; Jump to 787
$B46    $7A5B   ADD      VA, #5B         ; Add 91 to VA
$B48    $63F1   LD       V3, #F1         ; Load 241 into V3
$B4A    $763A   ADD      V6, #3A         ; Add 58 to V6
$B4C    $6E21   LD       VE, #21         ; Load 33 into VE
$B4E    $EF34   UNKNOWN  $EF34           ; Unknown Exxx instruction
$B50    $2DCE   CALL     $DCE            ; Call subroutine at DCE
$B52    $6BF2   LD       VB, #F2         ; Load 242 into VB
$B54    $A08C   LD       I, $08C         ; Load 08C into I
$B56    $E442   UNKNOWN  $E442           ; Unknown Exxx instruction
$B58    $64CC   LD       V4, #CC         ; Load 204 into V4
$B5A    $0AE1   SYS      $AE1            ; System call to AE1
$B5C    $CECB   RND      VE, #CB         ; VE = random & CB
$B5E    $8C4B   UNKNOWN  8C4B            ; Unknown 8xxx instruction
$B60    $F2C6   UNKNOWN  F2C6            ; Unknown Fxxx instruction
$B62    $C1FE   RND      V1, #FE         ; V1 = random & FE
$B64    $4711   SNE      V7, #11         ; Skip if V7 != 17
$B66    $851F   UNKNOWN  851F            ; Unknown 8xxx instruction
$B68    $9277   UNKNOWN  $9277           ; Unknown 9xxx instruction
$B6A    $9981   UNKNOWN  $9981           ; Unknown 9xxx instruction
$B6C    $3FCD   SE       VF, #CD         ; Skip if VF == 205
$B6E    $8779   UNKNOWN  8779            ; Unknown 8xxx instruction
$B70    $9B47   UNKNOWN  $9B47           ; Unknown 9xxx instruction
$B72    $E18A   UNKNOWN  $E18A           ; Unknown Exxx instruction
$B74    $6E45   LD       VE, #45         ; Load 69 into VE
$B76    $3F06   SE       VF, #06         ; Skip if VF == 6
$B78    $9763   UNKNOWN  $9763           ; Unknown 9xxx instruction
$B7A    $A0FE   LD       I, $0FE         ; Load 0FE into I
$B7C    $420E   SNE      V2, #0E         ; Skip if V2 != 14
$B7E    $7F1E   ADD      VF, #1E         ; Add 30 to VF
$B80    $7075   ADD      V0, #75         ; Add 117 to V0
$B82    $653C   LD       V5, #3C         ; Load 60 into V5
$B84    $446A   SNE      V4, #6A         ; Skip if V4 != 106
$B86    $C9B6   RND      V9, #B6         ; V9 = random & B6
$B88    $5F3E   UNKNOWN  $5F3E           ; Unknown 5xxx instruction
$B8A    $D201   DRW      V2, V0, #1      ; Draw 1-byte sprite at V2, V0
$B8C    $8609   UNKNOWN  8609            ; Unknown 8xxx instruction
$B8E    $54E0   SE       V4, VE          ; Skip if V4 == VE
$B90    $8E74   ADD      VE, V7          ; VE += V7, VF = carry
$B92    $782E   ADD      V8, #2E         ; Add 46 to V8
$B94    $E28D   UNKNOWN  $E28D           ; Unknown Exxx instruction
$B96    $8703   XOR      V7, V0          ; V7 ^= V0
$B98    $FEC7   UNKNOWN  FEC7            ; Unknown Fxxx instruction
$B9A    $CD01   RND      VD, #01         ; VD = random & 01
$B9C    $ACFD   LD       I, $CFD         ; Load CFD into I
$B9E    $9E6E   UNKNOWN  $9E6E           ; Unknown 9xxx instruction
$BA0    $9918   UNKNOWN  $9918           ; Unknown 9xxx instruction
$BA2    $B480   JP       V0, $480        ; Jump to V0 + 480
$BA4    $7EA2   ADD      VE, #A2         ; Add 162 to VE
$BA6    $9F6B   UNKNOWN  $9F6B           ; Unknown 9xxx instruction
$BA8    $06EB   SYS      $6EB            ; System call to 6EB
$BAA    $83DC   UNKNOWN  83DC            ; Unknown 8xxx instruction
$BAC    $CEDA   RND      VE, #DA         ; VE = random & DA
$BAE    $D617   DRW      V6, V1, #7      ; Draw 7-byte sprite at V6, V1
$BB0    $045D   SYS      $45D            ; System call to 45D
$BB2    $932E   UNKNOWN  $932E           ; Unknown 9xxx instruction
$BB4    $74C2   ADD      V4, #C2         ; Add 194 to V4
$BB6    $B23D   JP       V0, $23D        ; Jump to V0 + 23D
$BB8    $43A6   SNE      V3, #A6         ; Skip if V3 != 166
$BBA    $480A   SNE      V8, #0A         ; Skip if V8 != 10
$BBC    $907F   UNKNOWN  $907F           ; Unknown 9xxx instruction
$BBE    $8FD2   AND      VF, VD          ; VF &= VD
$BC0    $24A4   CALL     $4A4            ; Call subroutine at 4A4
$BC2    $1673   JP       $673            ; Jump to 673
$BC4    $D7EB   DRW      V7, VE, #B      ; Draw 11-byte sprite at V7, VE
$BC6    $4F11   SNE      VF, #11         ; Skip if VF != 17
$BC8    $4D1A   SNE      VD, #1A         ; Skip if VD != 26
$BCA    $CC4E   RND      VC, #4E         ; VC = random & 4E
$BCC    $3393   SE       V3, #93         ; Skip if V3 == 147
$BCE    $86F7   SUBN     V6, VF          ; V6 = VF - V6, VF = !borrow
$BD0    $A4ED   LD       I, $4ED         ; Load 4ED into I
$BD2    $5D4D   UNKNOWN  $5D4D           ; Unknown 5xxx instruction
$BD4    $8352   AND      V3, V5          ; V3 &= V5
$BD6    $9314   UNKNOWN  $9314           ; Unknown 9xxx instruction
$BD8    $BA80   JP       V0, $A80        ; Jump to V0 + A80
$BDA    $FFE4   UNKNOWN  FFE4            ; Unknown Fxxx instruction
$BDC    $2F5D   CALL     $F5D            ; Call subroutine at F5D
$BDE    $993C   UNKNOWN  $993C           ; Unknown 9xxx instruction
$BE0    $BFF1   JP       V0, $FF1        ; Jump to V0 + FF1
$BE2    $A464   LD       I, $464         ; Load 464 into I
$BE4    $0999   SYS      $999            ; System call to 999
$BE6    $8DC9   UNKNOWN  8DC9            ; Unknown 8xxx instruction
$BE8    $F8B1   UNKNOWN  F8B1            ; Unknown Fxxx instruction
$BEA    $CD21   RND      VD, #21         ; VD = random & 21
$BEC    $D536   DRW      V5, V3, #6      ; Draw 6-byte sprite at V5, V3
$BEE    $0521   SYS      $521            ; System call to 521
$BF0    $CCC4   RND      VC, #C4         ; VC = random & C4
$BF2    $D73D   DRW      V7, V3, #D      ; Draw 13-byte sprite at V7, V3
$BF4    $7F42   ADD      VF, #42         ; Add 66 to VF
$BF6    $7110   ADD      V1, #10         ; Add 16 to V1
$BF8    $6A00   LD       VA, #00         ; Load 0 into VA
$BFA    $ABB1   LD       I, $BB1         ; Load BB1 into I
$BFC    $DAAB   DRW      VA, VA, #B      ; Draw 11-byte sprite at VA, VA
$BFE    $E101   UNKNOWN  $E101           ; Unknown Exxx instruction
$C00    $8E96   SHR      VE              ; VE >>= 1, VF = LSB
$C02    $92D9   UNKNOWN  $92D9           ; Unknown 9xxx instruction
$C04    $01C1   SYS      $1C1            ; System call to 1C1
$C06    $B4CD   JP       V0, $4CD        ; Jump to V0 + 4CD
$C08    $9411   UNKNOWN  $9411           ; Unknown 9xxx instruction
$C0A    $0753   SYS      $753            ; System call to 753
$C0C    $F105   UNKNOWN  F105            ; Unknown Fxxx instruction
$C0E    $9BA2   UNKNOWN  $9BA2           ; Unknown 9xxx instruction
$C10    $B53A   JP       V0, $53A        ; Jump to V0 + 53A
$C12    $DDF9   DRW      VD, VF, #9      ; Draw 9-byte sprite at VD, VF
$C14    $4FB2   SNE      VF, #B2         ; Skip if VF != 178
$C16    $2120   CALL     $120            ; Call subroutine at 120
$C18    $CA9D   RND      VA, #9D         ; VA = random & 9D
$C1A    $A19B   LD       I, $19B         ; Load 19B into I
$C1C    $6FC6   LD       VF, #C6         ; Load 198 into VF
$C1E    $C15A   RND      V1, #5A         ; V1 = random & 5A
$C20    $1D5F   JP       $D5F            ; Jump to D5F
$C22    $F089   UNKNOWN  F089            ; Unknown Fxxx instruction
$C24    $7902   ADD      V9, #02         ; Add 2 to V9
$C26    $D6F2   DRW      V6, VF, #2      ; Draw 2-byte sprite at V6, VF
$C28    $043B   SYS      $43B            ; System call to 43B
$C2A    $C08B   RND      V0, #8B         ; V0 = random & 8B
$C2C    $DD6A   DRW      VD, V6, #A      ; Draw 10-byte sprite at VD, V6
$C2E    $5DFA   UNKNOWN  $5DFA           ; Unknown 5xxx instruction
$C30    $83BC   UNKNOWN  83BC            ; Unknown 8xxx instruction
$C32    $9A32   UNKNOWN  $9A32           ; Unknown 9xxx instruction
$C34    $835C   UNKNOWN  835C            ; Unknown 8xxx instruction
$C36    $7E9C   ADD      VE, #9C         ; Add 156 to VE
$C38    $E48F   UNKNOWN  $E48F           ; Unknown Exxx instruction
$C3A    $FADC   UNKNOWN  FADC            ; Unknown Fxxx instruction
$C3C    $6BAF   LD       VB, #AF         ; Load 175 into VB
$C3E    $2CDE   CALL     $CDE            ; Call subroutine at CDE
$C40    $E1AE   UNKNOWN  $E1AE           ; Unknown Exxx instruction
$C42    $644D   LD       V4, #4D         ; Load 77 into V4
$C44    $AB11   LD       I, $B11         ; Load B11 into I
$C46    $EB55   UNKNOWN  $EB55           ; Unknown Exxx instruction
$C48    $0B38   SYS      $B38            ; System call to B38
$C4A    $8BB2   AND      VB, VB          ; VB &= VB
$C4C    $F13C   UNKNOWN  F13C            ; Unknown Fxxx instruction
$C4E    $3E8A   SE       VE, #8A         ; Skip if VE == 138
$C50    $6E1C   LD       VE, #1C         ; Load 28 into VE
$C52    $5BD9   UNKNOWN  $5BD9           ; Unknown 5xxx instruction
$C54    $1096   JP       $096            ; Jump to 096
$C56    $EC9E   SKP      VC              ; Skip if key VC pressed
$C58    $DDC1   DRW      VD, VC, #1      ; Draw 1-byte sprite at VD, VC
$C5A    $3E56   SE       VE, #56         ; Skip if VE == 86
$C5C    $F558   UNKNOWN  F558            ; Unknown Fxxx instruction
$C5E    $86E9   UNKNOWN  86E9            ; Unknown 8xxx instruction
$C60    $98D8   UNKNOWN  $98D8           ; Unknown 9xxx instruction
$C62    $0D92   SYS      $D92            ; System call to D92
$C64    $C92A   RND      V9, #2A         ; V9 = random & 2A
$C66    $C553   RND      V5, #53         ; V5 = random & 53
$C68    $16D3   JP       $6D3            ; Jump to 6D3
$C6A    $44EA   SNE      V4, #EA         ; Skip if V4 != 234
$C6C    $FA47   UNKNOWN  FA47            ; Unknown Fxxx instruction
$C6E    $E174   UNKNOWN  $E174           ; Unknown Exxx instruction
$C70    $4F22   SNE      VF, #22         ; Skip if VF != 34
$C72    $4AF8   SNE      VA, #F8         ; Skip if VA != 248
$C74    $A030   LD       I, $030         ; Load 030 into I
$C76    $5F92   UNKNOWN  $5F92           ; Unknown 5xxx instruction
$C78    $26A1   CALL     $6A1            ; Call subroutine at 6A1
$C7A    $8D8D   UNKNOWN  8D8D            ; Unknown 8xxx instruction
$C7C    $2D4B   CALL     $D4B            ; Call subroutine at D4B
$C7E    $4918   SNE      V9, #18         ; Skip if V9 != 24
$C80    $3F68   SE       VF, #68         ; Skip if VF == 104
$C82    $A721   LD       I, $721         ; Load 721 into I
$C84    $0E80   SYS      $E80            ; System call to E80
$C86    $C5CB   RND      V5, #CB         ; V5 = random & CB
$C88    $7835   ADD      V8, #35         ; Add 53 to V8
$C8A    $B742   JP       V0, $742        ; Jump to V0 + 742
$C8C    $260A   CALL     $60A            ; Call subroutine at 60A
$C8E    $81E9   UNKNOWN  81E9            ; Unknown 8xxx instruction
$C90    $20FA   CALL     $0FA            ; Call subroutine at 0FA
$C92    $85FA   UNKNOWN  85FA            ; Unknown 8xxx instruction
$C94    $354A   SE       V5, #4A         ; Skip if V5 == 74
$C96    $E82F   UNKNOWN  $E82F           ; Unknown Exxx instruction
$C98    $B47B   JP       V0, $47B        ; Jump to V0 + 47B
$C9A    $16BC   JP       $6BC            ; Jump to 6BC
$C9C    $7350   ADD      V3, #50         ; Add 80 to V3
$C9E    $12C3   JP       $2C3            ; Jump to 2C3
$CA0    $D0F0   DRW      V0, VF, #0      ; Draw 0-byte sprite at V0, VF
$CA2    $8141   OR       V1, V4          ; V1 |= V4
$CA4    $B532   JP       V0, $532        ; Jump to V0 + 532
$CA6    $5DB8   UNKNOWN  $5DB8           ; Unknown 5xxx instruction
$CA8    $D268   DRW      V2, V6, #8      ; Draw 8-byte sprite at V2, V6
$CAA    $E73D   UNKNOWN  $E73D           ; Unknown Exxx instruction
$CAC    $7743   ADD      V7, #43         ; Add 67 to V7
$CAE    $8D6B   UNKNOWN  8D6B            ; Unknown 8xxx instruction
$CB0    $737B   ADD      V3, #7B         ; Add 123 to V3
$CB2    $9046   UNKNOWN  $9046           ; Unknown 9xxx instruction
$CB4    $5B4B   UNKNOWN  $5B4B           ; Unknown 5xxx instruction
$CB6    $8E6F   UNKNOWN  8E6F            ; Unknown 8xxx instruction
$CB8    $6F7A   LD       VF, #7A         ; Load 122 into VF
$CBA    $7296   ADD      V2, #96         ; Add 150 to V2
$CBC    $1EC3   JP       $EC3            ; Jump to EC3
$CBE    $F472   UNKNOWN  F472            ; Unknown Fxxx instruction
$CC0    $B932   JP       V0, $932        ; Jump to V0 + 932
$CC2    $5DA8   UNKNOWN  $5DA8           ; Unknown 5xxx instruction
$CC4    $7846   ADD      V8, #46         ; Add 70 to V8
$CC6    $A8B8   LD       I, $8B8         ; Load 8B8 into I
$CC8    $5B1A   UNKNOWN  $5B1A           ; Unknown 5xxx instruction
$CCA    $472D   SNE      V7, #2D         ; Skip if V7 != 45
$CCC    $D40E   DRW      V4, V0, #E      ; Draw 14-byte sprite at V4, V0
$CCE    $9618   UNKNOWN  $9618           ; Unknown 9xxx instruction
$CD0    $A4FB   LD       I, $4FB         ; Load 4FB into I
$CD2    $E5EE   UNKNOWN  $E5EE           ; Unknown Exxx instruction
$CD4    $920A   UNKNOWN  $920A           ; Unknown 9xxx instruction
$CD6    $2B98   CALL     $B98            ; Call subroutine at B98
$CD8    $E11E   UNKNOWN  $E11E           ; Unknown Exxx instruction
$CDA    $1E9B   JP       $E9B            ; Jump to E9B
$CDC    $B30A   JP       V0, $30A        ; Jump to V0 + 30A
$CDE    $F32C   UNKNOWN  F32C            ; Unknown Fxxx instruction
$CE0    $DD72   DRW      VD, V7, #2      ; Draw 2-byte sprite at VD, V7
$CE2    $0612   SYS      $612            ; System call to 612
$CE4    $A050   LD       I, $050         ; Load 050 into I
$CE6    $AD3C   LD       I, $D3C         ; Load D3C into I
$CE8    $8919   UNKNOWN  8919            ; Unknown 8xxx instruction
$CEA    $4C03   SNE      VC, #03         ; Skip if VC != 3
$CEC    $6326   LD       V3, #26         ; Load 38 into V3
$CEE    $CC0E   RND      VC, #0E         ; VC = random & 0E
$CF0    $6776   LD       V7, #76         ; Load 118 into V7
$CF2    $6C37   LD       VC, #37         ; Load 55 into VC
$CF4    $377F   SE       V7, #7F         ; Skip if V7 == 127
$CF6    $15EC   JP       $5EC            ; Jump to 5EC
$CF8    $72B9   ADD      V2, #B9         ; Add 185 to V2
$CFA    $CC4F   RND      VC, #4F         ; VC = random & 4F
$CFC    $E79D   UNKNOWN  $E79D           ; Unknown Exxx instruction
$CFE    $2D7A   CALL     $D7A            ; Call subroutine at D7A
$D00    $1015   JP       $015            ; Jump to 015
$D02    $ADEA   LD       I, $DEA         ; Load DEA into I
$D04    $8371   OR       V3, V7          ; V3 |= V7
$D06    $96F4   UNKNOWN  $96F4           ; Unknown 9xxx instruction
$D08    $AFD7   LD       I, $FD7         ; Load FD7 into I
$D0A    $783F   ADD      V8, #3F         ; Add 63 to V8
$D0C    $09F1   SYS      $9F1            ; System call to 9F1
$D0E    $63B8   LD       V3, #B8         ; Load 184 into V3
$D10    $9BBF   UNKNOWN  $9BBF           ; Unknown 9xxx instruction
$D12    $DEBB   DRW      VE, VB, #B      ; Draw 11-byte sprite at VE, VB
$D14    $B175   JP       V0, $175        ; Jump to V0 + 175
$D16    $4131   SNE      V1, #31         ; Skip if V1 != 49
$D18    $3766   SE       V7, #66         ; Skip if V7 == 102
$D1A    $C47D   RND      V4, #7D         ; V4 = random & 7D
$D1C    $2635   CALL     $635            ; Call subroutine at 635
$D1E    $EA8D   UNKNOWN  $EA8D           ; Unknown Exxx instruction
$D20    $C424   RND      V4, #24         ; V4 = random & 24
$D22    $4AB0   SNE      VA, #B0         ; Skip if VA != 176
$D24    $F341   UNKNOWN  F341            ; Unknown Fxxx instruction
$D26    $3C32   SE       VC, #32         ; Skip if VC == 50
$D28    $FA2A   UNKNOWN  FA2A            ; Unknown Fxxx instruction
$D2A    $42BC   SNE      V2, #BC         ; Skip if V2 != 188
$D2C    $C711   RND      V7, #11         ; V7 = random & 11
$D2E    $FC68   UNKNOWN  FC68            ; Unknown Fxxx instruction
$D30    $A313   LD       I, $313         ; Load 313 into I
$D32    $7F2E   ADD      VF, #2E         ; Add 46 to VF
$D34    $310E   SE       V1, #0E         ; Skip if V1 == 14
$D36    $592B   UNKNOWN  $592B           ; Unknown 5xxx instruction
$D38    $85E4   ADD      V5, VE          ; V5 += VE, VF = carry
$D3A    $5960   SE       V9, V6          ; Skip if V9 == V6
$D3C    $1E5C   JP       $E5C            ; Jump to E5C
$D3E    $D696   DRW      V6, V9, #6      ; Draw 6-byte sprite at V6, V9
$D40    $EF6D   UNKNOWN  $EF6D           ; Unknown Exxx instruction
$D42    $7873   ADD      V8, #73         ; Add 115 to V8
$D44    $661B   LD       V6, #1B         ; Load 27 into V6
$D46    $000A   SYS      $00A            ; System call to 00A
$D48    $80DB   UNKNOWN  80DB            ; Unknown 8xxx instruction
$D4A    $FC6B   UNKNOWN  FC6B            ; Unknown Fxxx instruction
$D4C    $B054   JP       V0, $054        ; Jump to V0 + 054
$D4E    $D6F5   DRW      V6, VF, #5      ; Draw 5-byte sprite at V6, VF
$D50    $67B3   LD       V7, #B3         ; Load 179 into V7
$D52    $D294   DRW      V2, V9, #4      ; Draw 4-byte sprite at V2, V9
$D54    $231C   CALL     $31C            ; Call subroutine at 31C
$D56    $0247   SYS      $247            ; System call to 247
$D58    $8949   UNKNOWN  8949            ; Unknown 8xxx instruction
$D5A    $C0FF   RND      V0, #FF         ; V0 = random & FF
$D5C    $7CD8   ADD      VC, #D8         ; Add 216 to VC
$D5E    $BD82   JP       V0, $D82        ; Jump to V0 + D82
$D60    $E1E7   UNKNOWN  $E1E7           ; Unknown Exxx instruction
$D62    $32E3   SE       V2, #E3         ; Skip if V2 == 227
$D64    $4561   SNE      V5, #61         ; Skip if V5 != 97
$D66    $0FEB   SYS      $FEB            ; System call to FEB
$D68    $FC77   UNKNOWN  FC77            ; Unknown Fxxx instruction
$D6A    $BFD8   JP       V0, $FD8        ; Jump to V0 + FD8
$D6C    $5819   UNKNOWN  $5819           ; Unknown 5xxx instruction
$D6E    $229B   CALL     $29B            ; Call subroutine at 29B
$D70    $3356   SE       V3, #56         ; Skip if V3 == 86
$D72    $C609   RND      V6, #09         ; V6 = random & 09
$D74    $979E   UNKNOWN  $979E           ; Unknown 9xxx instruction
$D76    $7609   ADD      V6, #09         ; Add 9 to V6
$D78    $D3ED   DRW      V3, VE, #D      ; Draw 13-byte sprite at V3, VE
$D7A    $602C   LD       V0, #2C         ; Load 44 into V0
$D7C    $59AA   UNKNOWN  $59AA           ; Unknown 5xxx instruction
$D7E    $9739   UNKNOWN  $9739           ; Unknown 9xxx instruction
$D80    $9118   UNKNOWN  $9118           ; Unknown 9xxx instruction
$D82    $4A45   SNE      VA, #45         ; Skip if VA != 69
$D84    $1277   JP       $277            ; Jump to 277
$D86    $D124   DRW      V1, V2, #4      ; Draw 4-byte sprite at V1, V2
$D88    $DB43   DRW      VB, V4, #3      ; Draw 3-byte sprite at VB, V4
$D8A    $67D9   LD       V7, #D9         ; Load 217 into V7
$D8C    $C1D1   RND      V1, #D1         ; V1 = random & D1
$D8E    $88C9   UNKNOWN  88C9            ; Unknown 8xxx instruction
$D90    $CD60   RND      VD, #60         ; VD = random & 60
$D92    $5F87   UNKNOWN  $5F87           ; Unknown 5xxx instruction
$D94    $5F3F   UNKNOWN  $5F3F           ; Unknown 5xxx instruction
$D96    $A381   LD       I, $381         ; Load 381 into I
$D98    $E162   UNKNOWN  $E162           ; Unknown Exxx instruction
$D9A    $3645   SE       V6, #45         ; Skip if V6 == 69
$D9C    $BADC   JP       V0, $ADC        ; Jump to V0 + ADC
$D9E    $7E9D   ADD      VE, #9D         ; Add 157 to VE
$DA0    $5ECB   UNKNOWN  $5ECB           ; Unknown 5xxx instruction
$DA2    $5EA7   UNKNOWN  $5EA7           ; Unknown 5xxx instruction
$DA4    $F914   UNKNOWN  F914            ; Unknown Fxxx instruction
$DA6    $4093   SNE      V0, #93         ; Skip if V0 != 147
$DA8    $9811   UNKNOWN  $9811           ; Unknown 9xxx instruction
$DAA    $C96B   RND      V9, #6B         ; V9 = random & 6B
$DAC    $4373   SNE      V3, #73         ; Skip if V3 != 115
$DAE    $2502   CALL     $502            ; Call subroutine at 502
$DB0    $A03D   LD       I, $03D         ; Load 03D into I
$DB2    $A0E7   LD       I, $0E7         ; Load 0E7 into I
$DB4    $0FF3   SYS      $FF3            ; System call to FF3
$DB6    $0143   SYS      $143            ; System call to 143
$DB8    $CE20   RND      VE, #20         ; VE = random & 20
$DBA    $5578   UNKNOWN  $5578           ; Unknown 5xxx instruction
$DBC    $A7DC   LD       I, $7DC         ; Load 7DC into I
$DBE    $863C   UNKNOWN  863C            ; Unknown 8xxx instruction
$DC0    $5B30   SE       VB, V3          ; Skip if VB == V3
$DC2    $784C   ADD      V8, #4C         ; Add 76 to V8
$DC4    $A617   LD       I, $617         ; Load 617 into I
$DC6    $7DF7   ADD      VD, #F7         ; Add 247 to VD
$DC8    $A760   LD       I, $760         ; Load 760 into I
$DCA    $7FB2   ADD      VF, #B2         ; Add 178 to VF
$DCC    $3E0E   SE       VE, #0E         ; Skip if VE == 14
$DCE    $4C27   SNE      VC, #27         ; Skip if VC != 39
$DD0    $1E21   JP       $E21            ; Jump to E21
$DD2    $8BAE   SHL      VB              ; VB <<= 1, VF = MSB
$DD4    $5935   UNKNOWN  $5935           ; Unknown 5xxx instruction
$DD6    $0C31   SYS      $C31            ; System call to C31
$DD8    $7AF6   ADD      VA, #F6         ; Add 246 to VA
$DDA    $945C   UNKNOWN  $945C           ; Unknown 9xxx instruction
$DDC    $D88B   DRW      V8, V8, #B      ; Draw 11-byte sprite at V8, V8
$DDE    $7D5E   ADD      VD, #5E         ; Add 94 to VD
$DE0    $9F64   UNKNOWN  $9F64           ; Unknown 9xxx instruction
$DE2    $B38B   JP       V0, $38B        ; Jump to V0 + 38B
$DE4    $D5EF   DRW      V5, VE, #F      ; Draw 15-byte sprite at V5, VE
$DE6    $8BDC   UNKNOWN  8BDC            ; Unknown 8xxx instruction
$DE8    $3A8A   SE       VA, #8A         ; Skip if VA == 138
$DEA    $A618   LD       I, $618         ; Load 618 into I
$DEC    $C615   RND      V6, #15         ; V6 = random & 15
$DEE    $C0AB   RND      V0, #AB         ; V0 = random & AB
$DF0    $2693   CALL     $693            ; Call subroutine at 693
$DF2    $347A   SE       V4, #7A         ; Skip if V4 == 122
$DF4    $205A   CALL     $05A            ; Call subroutine at 05A
$DF6    $B7AC   JP       V0, $7AC        ; Jump to V0 + 7AC
$DF8    $C8B1   RND      V8, #B1         ; V8 = random & B1
$DFA    $F935   UNKNOWN  F935            ; Unknown Fxxx instruction
$DFC    $566E   UNKNOWN  $566E           ; Unknown 5xxx instruction
$DFE    $BA3C   JP       V0, $A3C        ; Jump to V0 + A3C
$E00    $D315   DRW      V3, V1, #5      ; Draw 5-byte sprite at V3, V1
$E02    $741C   ADD      V4, #1C         ; Add 28 to V4
$E04    $88B2   AND      V8, VB          ; V8 &= VB
$E06    $0332   SYS      $332            ; System call to 332
$E08    $FDBB   UNKNOWN  FDBB            ; Unknown Fxxx instruction
$E0A    $98A8   UNKNOWN  $98A8           ; Unknown 9xxx instruction
$E0C    $4A4B   SNE      VA, #4B         ; Skip if VA != 75
$E0E    $52EC   UNKNOWN  $52EC           ; Unknown 5xxx instruction
$E10    $9609   UNKNOWN  $9609           ; Unknown 9xxx instruction
$E12    $2CBD   CALL     $CBD            ; Call subroutine at CBD
$E14    $78D7   ADD      V8, #D7         ; Add 215 to V8
$E16    $FDEB   UNKNOWN  FDEB            ; Unknown Fxxx instruction
$E18    $03F9   SYS      $3F9            ; System call to 3F9
$E1A    $C76C   RND      V7, #6C         ; V7 = random & 6C
$E1C    $7BB3   ADD      VB, #B3         ; Add 179 to VB
$E1E    $776C   ADD      V7, #6C         ; Add 108 to V7
$E20    $6814   LD       V8, #14         ; Load 20 into V8
$E22    $81E6   SHR      V1              ; V1 >>= 1, VF = LSB
$E24    $B5BD   JP       V0, $5BD        ; Jump to V0 + 5BD
$E26    $AE5A   LD       I, $E5A         ; Load E5A into I
$E28    $35EE   SE       V5, #EE         ; Skip if V5 == 238
$E2A    $4E00   SNE      VE, #00         ; Skip if VE != 0
$E2C    $AE6E   LD       I, $E6E         ; Load E6E into I
$E2E    $CF3E   RND      VF, #3E         ; VF = random & 3E
$E30    $BD1B   JP       V0, $D1B        ; Jump to V0 + D1B
$E32    $F557   UNKNOWN  F557            ; Unknown Fxxx instruction
$E34    $CA85   RND      VA, #85         ; VA = random & 85
$E36    $153F   JP       $53F            ; Jump to 53F
$E38    $A935   LD       I, $935         ; Load 935 into I
$E3A    $9D67   UNKNOWN  $9D67           ; Unknown 9xxx instruction
$E3C    $A093   LD       I, $093         ; Load 093 into I
$E3E    $0B4A   SYS      $B4A            ; System call to B4A
$E40    $F7A9   UNKNOWN  F7A9            ; Unknown Fxxx instruction
$E42    $C212   RND      V2, #12         ; V2 = random & 12
$E44    $26E4   CALL     $6E4            ; Call subroutine at 6E4
$E46    $A539   LD       I, $539         ; Load 539 into I
$E48    $FB9A   UNKNOWN  FB9A            ; Unknown Fxxx instruction
$E4A    $E690   UNKNOWN  $E690           ; Unknown Exxx instruction
$E4C    $3931   SE       V9, #31         ; Skip if V9 == 49
$E4E    $74D5   ADD      V4, #D5         ; Add 213 to V4
$E50    $EE2F   UNKNOWN  $EE2F           ; Unknown Exxx instruction
$E52    $55FE   UNKNOWN  $55FE           ; Unknown 5xxx instruction
$E54    $5E0F   UNKNOWN  $5E0F           ; Unknown 5xxx instruction
$E56    $B570   JP       V0, $570        ; Jump to V0 + 570
$E58    $2EDD   CALL     $EDD            ; Call subroutine at EDD
$E5A    $CDBE   RND      VD, #BE         ; VD = random & BE
$E5C    $DE33   DRW      VE, V3, #3      ; Draw 3-byte sprite at VE, V3
$E5E    $72C8   ADD      V2, #C8         ; Add 200 to V2
$E60    $41F3   SNE      V1, #F3         ; Skip if V1 != 243
$E62    $B9EB   JP       V0, $9EB        ; Jump to V0 + 9EB
$E64    $56FF   UNKNOWN  $56FF           ; Unknown 5xxx instruction
$E66    $3B54   SE       VB, #54         ; Skip if VB == 84
$E68    $AF0C   LD       I, $F0C         ; Load F0C into I
$E6A    $6945   LD       V9, #45         ; Load 69 into V9
$E6C    $56E7   UNKNOWN  $56E7           ; Unknown 5xxx instruction
$E6E    $97E9   UNKNOWN  $97E9           ; Unknown 9xxx instruction
$E70    $F18C   UNKNOWN  F18C            ; Unknown Fxxx instruction
$E72    $A78E   LD       I, $78E         ; Load 78E into I
$E74    $CEAB   RND      VE, #AB         ; VE = random & AB
$E76    $D1A9   DRW      V1, VA, #9      ; Draw 9-byte sprite at V1, VA
$E78    $CD6F   RND      VD, #6F         ; VD = random & 6F
$E7A    $A2C4   LD       I, $2C4         ; Load 2C4 into I
$E7C    $6E01   LD       VE, #01         ; Load 1 into VE
$E7E    $3EEC   SE       VE, #EC         ; Skip if VE == 236
$E80    $B386   JP       V0, $386        ; Jump to V0 + 386
$E82    $CE55   RND      VE, #55         ; VE = random & 55
$E84    $4C5C   SNE      VC, #5C         ; Skip if VC != 92
$E86    $F70B   UNKNOWN  F70B            ; Unknown Fxxx instruction
$E88    $C477   RND      V4, #77         ; V4 = random & 77
$E8A    $9029   UNKNOWN  $9029           ; Unknown 9xxx instruction
$E8C    $9FD4   UNKNOWN  $9FD4           ; Unknown 9xxx instruction
$E8E    $DAFD   DRW      VA, VF, #D      ; Draw 13-byte sprite at VA, VF
$E90    $5FB9   UNKNOWN  $5FB9           ; Unknown 5xxx instruction
$E92    $D2FE   DRW      V2, VF, #E      ; Draw 14-byte sprite at V2, VF
$E94    $4838   SNE      V8, #38         ; Skip if V8 != 56
$E96    $2B85   CALL     $B85            ; Call subroutine at B85
$E98    $EF8D   UNKNOWN  $EF8D           ; Unknown Exxx instruction
$E9A    $0505   SYS      $505            ; System call to 505
$E9C    $0921   SYS      $921            ; System call to 921
$E9E    $9414   UNKNOWN  $9414           ; Unknown 9xxx instruction
$EA0    $0B52   SYS      $B52            ; System call to B52
$EA2    $A43B   LD       I, $43B         ; Load 43B into I
$EA4    $6E66   LD       VE, #66         ; Load 102 into VE
$EA6    $B7FB   JP       V0, $7FB        ; Jump to V0 + 7FB
$EA8    $9DB0   SNE      VD, VB          ; Skip if VD != VB
$EAA    $47B2   SNE      V7, #B2         ; Skip if V7 != 178
$EAC    $9E7F   UNKNOWN  $9E7F           ; Unknown 9xxx instruction
$EAE    $EAAC   UNKNOWN  $EAAC           ; Unknown Exxx instruction
$EB0    $D3B4   DRW      V3, VB, #4      ; Draw 4-byte sprite at V3, VB
$EB2    $423F   SNE      V2, #3F         ; Skip if V2 != 63
$EB4    $B86A   JP       V0, $86A        ; Jump to V0 + 86A
$EB6    $1F80   JP       $F80            ; Jump to F80
$EB8    $F700   UNKNOWN  F700            ; Unknown Fxxx instruction
$EBA    $7FDE   ADD      VF, #DE         ; Add 222 to VF
$EBC    $A514   LD       I, $514         ; Load 514 into I
$EBE    $CC5C   RND      VC, #5C         ; VC = random & 5C
$EC0    $FFE8   UNKNOWN  FFE8            ; Unknown Fxxx instruction
$EC2    $D00B   DRW      V0, V0, #B      ; Draw 11-byte sprite at V0, V0
$EC4    $DB61   DRW      VB, V6, #1      ; Draw 1-byte sprite at VB, V6
$EC6    $9FB2   UNKNOWN  $9FB2           ; Unknown 9xxx instruction
$EC8    $7A8A   ADD      VA, #8A         ; Add 138 to VA
$ECA    $9EED   UNKNOWN  $9EED           ; Unknown 9xxx instruction
$ECC    $93D9   UNKNOWN  $93D9           ; Unknown 9xxx instruction
$ECE    $C6C2   RND      V6, #C2         ; V6 = random & C2
$ED0    $66B4   LD       V6, #B4         ; Load 180 into V6
$ED2    $5BC6   UNKNOWN  $5BC6           ; Unknown 5xxx instruction
$ED4    $A166   LD       I, $166         ; Load 166 into I
$ED6    $5E3F   UNKNOWN  $5E3F           ; Unknown 5xxx instruction
$ED8    $1EBC   JP       $EBC            ; Jump to EBC
$EDA    $7120   ADD      V1, #20         ; Add 32 to V1
$EDC    $D7FC   DRW      V7, VF, #C      ; Draw 12-byte sprite at V7, VF
$EDE    $8389   UNKNOWN  8389            ; Unknown 8xxx instruction
$EE0    $DBDA   DRW      VB, VD, #A      ; Draw 10-byte sprite at VB, VD
$EE2    $8889   UNKNOWN  8889            ; Unknown 8xxx instruction
$EE4    $6B99   LD       VB, #99         ; Load 153 into VB
$EE6    $F26D   UNKNOWN  F26D            ; Unknown Fxxx instruction
$EE8    $1981   JP       $981            ; Jump to 981
$EEA    $6702   LD       V7, #02         ; Load 2 into V7
$EEC    $8C5C   UNKNOWN  8C5C            ; Unknown 8xxx instruction
$EEE    $5527   UNKNOWN  $5527           ; Unknown 5xxx instruction
$EF0    $CED8   RND      VE, #D8         ; VE = random & D8
$EF2    $8C9E   SHL      VC              ; VC <<= 1, VF = MSB
$EF4    $0EC9   SYS      $EC9            ; System call to EC9
$EF6    $170B   JP       $70B            ; Jump to 70B
$EF8    $BC34   JP       V0, $C34        ; Jump to V0 + C34
$EFA    $F8C3   UNKNOWN  F8C3            ; Unknown Fxxx instruction
$EFC    $E516   UNKNOWN  $E516           ; Unknown Exxx instruction
$EFE    $F425   UNKNOWN  F425            ; Unknown Fxxx instruction
$F00    $4ABD   SNE      VA, #BD         ; Skip if VA != 189
$F02    $894A   UNKNOWN  894A            ; Unknown 8xxx instruction
$F04    $92CA   UNKNOWN  $92CA           ; Unknown 9xxx instruction
$F06    $D9C3   DRW      V9, VC, #3      ; Draw 3-byte sprite at V9, VC
$F08    $62C0   LD       V2, #C0         ; Load 192 into V2
$F0A    $4CD6   SNE      VC, #D6         ; Skip if VC != 214
$F0C    $F7F1   UNKNOWN  F7F1            ; Unknown Fxxx instruction
$F0E    $7FD7   ADD      VF, #D7         ; Add 215 to VF
$F10    $24DF   CALL     $4DF            ; Call subroutine at 4DF
$F12    $A4DC   LD       I, $4DC         ; Load 4DC into I
$F14    $0CFA   SYS      $CFA            ; System call to CFA
$F16    $B884   JP       V0, $884        ; Jump to V0 + 884
$F18    $38AD   SE       V8, #AD         ; Skip if V8 == 173
$F1A    $2B36   CALL     $B36            ; Call subroutine at B36
$F1C    $EFB2   UNKNOWN  $EFB2           ; Unknown Exxx instruction
$F1E    $F625   UNKNOWN  F625            ; Unknown Fxxx instruction
$F20    $9999   UNKNOWN  $9999           ; Unknown 9xxx instruction
$F22    $CF6F   RND      VF, #6F         ; VF = random & 6F
$F24    $CCAE   RND      VC, #AE         ; VC = random & AE
$F26    $CC0B   RND      VC, #0B         ; VC = random & 0B
$F28    $AEB8   LD       I, $EB8         ; Load EB8 into I
$F2A    $F448   UNKNOWN  F448            ; Unknown Fxxx instruction
$F2C    $3D16   SE       VD, #16         ; Skip if VD == 22
$F2E    $F048   UNKNOWN  F048            ; Unknown Fxxx instruction
$F30    $C456   RND      V4, #56         ; V4 = random & 56
$F32    $CFC1   RND      VF, #C1         ; VF = random & C1
$F34    $D533   DRW      V5, V3, #3      ; Draw 3-byte sprite at V5, V3
$F36    $6238   LD       V2, #38         ; Load 56 into V2
$F38    $2669   CALL     $669            ; Call subroutine at 669
$F3A    $A1B0   LD       I, $1B0         ; Load 1B0 into I
$F3C    $CF03   RND      VF, #03         ; VF = random & 03
$F3E    $97B7   UNKNOWN  $97B7           ; Unknown 9xxx instruction
$F40    $C6A3   RND      V6, #A3         ; V6 = random & A3
$F42    $0E98   SYS      $E98            ; System call to E98
$F44    $D0ED   DRW      V0, VE, #D      ; Draw 13-byte sprite at V0, VE
$F46    $FB64   UNKNOWN  FB64            ; Unknown Fxxx instruction
$F48    $2CD5   CALL     $CD5            ; Call subroutine at CD5
$F4A    $7DF8   ADD      VD, #F8         ; Add 248 to VD
$F4C    $DD3D   DRW      VD, V3, #D      ; Draw 13-byte sprite at VD, V3
$F4E    $0B95   SYS      $B95            ; System call to B95
$F50    $CD65   RND      VD, #65         ; VD = random & 65
$F52    $FF58   UNKNOWN  FF58            ; Unknown Fxxx instruction
$F54    $2BCC   CALL     $BCC            ; Call subroutine at BCC
$F56    $DC09   DRW      VC, V0, #9      ; Draw 9-byte sprite at VC, V0
$F58    $A4C7   LD       I, $4C7         ; Load 4C7 into I
$F5A    $83B2   AND      V3, VB          ; V3 &= VB
$F5C    $A890   LD       I, $890         ; Load 890 into I
$F5E    $F2A9   UNKNOWN  F2A9            ; Unknown Fxxx instruction
$F60    $F8AB   UNKNOWN  F8AB            ; Unknown Fxxx instruction
$F62    $5BF9   UNKNOWN  $5BF9           ; Unknown 5xxx instruction
$F64    $65F4   LD       V5, #F4         ; Load 244 into V5
$F66    $ABF4   LD       I, $BF4         ; Load BF4 into I
$F68    $32AB   SE       V2, #AB         ; Skip if V2 == 171
$F6A    $E0D2   UNKNOWN  $E0D2           ; Unknown Exxx instruction
$F6C    $26F6   CALL     $6F6            ; Call subroutine at 6F6
$F6E    $6DB1   LD       VD, #B1         ; Load 177 into VD
$F70    $EEAA   UNKNOWN  $EEAA           ; Unknown Exxx instruction
$F72    $7A65   ADD      VA, #65         ; Add 101 to VA
$F74    $5E27   UNKNOWN  $5E27           ; Unknown 5xxx instruction
$F76    $FB06   UNKNOWN  FB06            ; Unknown Fxxx instruction
$F78    $9EE5   UNKNOWN  $9EE5           ; Unknown 9xxx instruction
$F7A    $871B   UNKNOWN  871B            ; Unknown 8xxx instruction
$F7C    $DB6A   DRW      VB, V6, #A      ; Draw 10-byte sprite at VB, V6
$F7E    $DA5B   DRW      VA, V5, #B      ; Draw 11-byte sprite at VA, V5
$F80    $DED6   DRW      VE, VD, #6      ; Draw 6-byte sprite at VE, VD
$F82    $DEE4   DRW      VE, VE, #4      ; Draw 4-byte sprite at VE, VE
$F84    $9CA6   UNKNOWN  $9CA6           ; Unknown 9xxx instruction
$F86    $A331   LD       I, $331         ; Load 331 into I
$F88    $6651   LD       V6, #51         ; Load 81 into V6
$F8A    $CCA2   RND      VC, #A2         ; VC = random & A2
$F8C    $505F   UNKNOWN  $505F           ; Unknown 5xxx instruction
$F8E    $DA08   DRW      VA, V0, #8      ; Draw 8-byte sprite at VA, V0
$F90    $C5CE   RND      V5, #CE         ; V5 = random & CE
$F92    $1BA8   JP       $BA8            ; Jump to BA8
$F94    $88A7   SUBN     V8, VA          ; V8 = VA - V8, VF = !borrow
$F96    $4591   SNE      V5, #91         ; Skip if V5 != 145
$F98    $BD9A   JP       V0, $D9A        ; Jump to V0 + D9A
$F9A    $220F   CALL     $20F            ; Call subroutine at 20F
$F9C    $5420   SE       V4, V2          ; Skip if V4 == V2
$F9E    $371D   SE       V7, #1D         ; Skip if V7 == 29
$FA0    $7AEE   ADD      VA, #EE         ; Add 238 to VA
$FA2    $0035   SYS      $035            ; System call to 035
$FA4    $4B43   SNE      VB, #43         ; Skip if VB != 67
$FA6    $8A68   UNKNOWN  8A68            ; Unknown 8xxx instruction
$FA8    $3117   SE       V1, #17         ; Skip if V1 == 23
$FAA    $3D5E   SE       VD, #5E         ; Skip if VD == 94
$FAC    $736F   ADD      V3, #6F         ; Add 111 to V3
$FAE    $0A2C   SYS      $A2C            ; System call to A2C
$FB0    $1812   JP       $812            ; Jump to 812
$FB2    $B2A6   JP       V0, $2A6        ; Jump to V0 + 2A6
$FB4    $7D81   ADD      VD, #81         ; Add 129 to VD
$FB6    $E778   UNKNOWN  $E778           ; Unknown Exxx instruction
$FB8    $8435   SUB      V4, V3          ; V4 -= V3, VF = !borrow
$FBA    $4E29   SNE      VE, #29         ; Skip if VE != 41
$FBC    $AD37   LD       I, $D37         ; Load D37 into I
$FBE    $FC6D   UNKNOWN  FC6D            ; Unknown Fxxx instruction
$FC0    $2205   CALL     $205            ; Call subroutine at 205
$FC2    $B149   JP       V0, $149        ; Jump to V0 + 149
$FC4    $A0F2   LD       I, $0F2         ; Load 0F2 into I
$FC6    $9CF0   SNE      VC, VF          ; Skip if VC != VF
$FC8    $33F6   SE       V3, #F6         ; Skip if V3 == 246
$FCA    $6B56   LD       VB, #56         ; Load 86 into VB
$FCC    $1F14   JP       $F14            ; Jump to F14
$FCE    $95EC   UNKNOWN  $95EC           ; Unknown 9xxx instruction
$FD0    $DDDE   DRW      VD, VD, #E      ; Draw 14-byte sprite at VD, VD
$FD2    $C6C5   RND      V6, #C5         ; V6 = random & C5
$FD4    $E77F   UNKNOWN  $E77F           ; Unknown Exxx instruction
$FD6    $865D   UNKNOWN  865D            ; Unknown 8xxx instruction
$FD8    $6E1F   LD       VE, #1F         ; Load 31 into VE
$FDA    $73BB   ADD      V3, #BB         ; Add 187 to V3
$FDC    $D55F   DRW      V5, V5, #F      ; Draw 15-byte sprite at V5, V5
$FDE    $45E2   SNE      V5, #E2         ; Skip if V5 != 226
$FE0    $8324   ADD      V3, V2          ; V3 += V2, VF = carry
$FE2    $4141   SNE      V1, #41         ; Skip if V1 != 65
$FE4    $9393   UNKNOWN  $9393           ; Unknown 9xxx instruction
$FE6    $ABB7   LD       I, $BB7         ; Load BB7 into I
$FE8    $4A16   SNE      VA, #16         ; Skip if VA != 22
$FEA    $0F48   SYS      $F48            ; System call to F48
$FEC    $F59A   UNKNOWN  F59A            ; Unknown Fxxx instruction
$FEE    $EE7F   UNKNOWN  $EE7F           ; Unknown Exxx instruction
$FF0    $7669   ADD      V6, #69         ; Add 105 to V6
$FF2    $C6B6   RND      V6, #B6         ; V6 = random & B6
$FF4    $3C1B   SE       VC, #1B         ; Skip if VC == 27
$FF6    $8828   UNKNOWN  8828            ; Unknown 8xxx instruction
$FF8    $2769   CALL     $769            ; Call subroutine at 769
$FFA    $5A33   UNKNOWN  $5A33           ; Unknown 5xxx instruction
$FFC    $AD73   LD       I, $D73         ; Load D73 into I
$FFE    $BE53   JP       V0, $E53        ; Jump to V0 + E53

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 489 (27.3%)
  LD      : 264 (14.7%)
  JP      : 201 (11.2%)
  RND     : 128 ( 7.1%)
  ADD     : 120 ( 6.7%)
  SNE     : 116 ( 6.5%)
  DRW     : 112 ( 6.2%)
  SE      : 108 ( 6.0%)
  SYS     : 106 ( 5.9%)
  CALL    :  92 ( 5.1%)
  OR      :  12 ( 0.7%)
  SHR     :  10 ( 0.6%)
  AND     :   9 ( 0.5%)
  SUBN    :   7 ( 0.4%)
  SHL     :   7 ( 0.4%)
  SUB     :   6 ( 0.3%)
  XOR     :   3 ( 0.2%)
  SKP     :   2 ( 0.1%)

Memory Operations: 384 (21.4%)
Arithmetic Operations: 157 (8.8%)
