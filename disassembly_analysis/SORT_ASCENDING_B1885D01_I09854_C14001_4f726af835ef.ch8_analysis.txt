
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B1885D01_I09854_C14001_4f726af835ef.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 1885
Instance: 9854
Direction: ascending
Final Array: [0, 67, 84, 92, 96, 111, 141, 192]
Operations: R:0 W:3600 C:916 S:3

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 112
Sort Array References:
  $202: LD I, $BDF ; Load BDF into I
  $216: LD I, $621 ; Load 621 into I
  $21E: LD I, $97B ; Load 97B into I
  $224: LD I, $B96 ; Load B96 into I
  $26A: LD I, $BAE ; Load BAE into I
  $26C: LD I, $6BF ; Load 6BF into I
  $296: LD I, $693 ; Load 693 into I
  $2C2: LD I, $4C6 ; Load 4C6 into I
  $2C4: LD I, $CCA ; Load CCA into I
  $2F8: LD I, $F8E ; Load F8E into I
  $316: LD I, $260 ; Load 260 into I
  $346: LD I, $03E ; Load 03E into I
  $36A: LD I, $A59 ; Load A59 into I
  $3A0: LD I, $261 ; Load 261 into I
  $3CA: LD I, $887 ; Load 887 into I
  $3F2: LD I, $5C0 ; Load 5C0 into I
  $41A: LD I, $0ED ; Load 0ED into I
  $48A: LD I, $F75 ; Load F75 into I
  $4CC: LD I, $05B ; Load 05B into I
  $4CE: LD I, $F08 ; Load F08 into I
  $4D8: LD I, $7BC ; Load 7BC into I
  $4E4: LD I, $68B ; Load 68B into I
  $510: LD I, $814 ; Load 814 into I
  $514: LD I, $863 ; Load 863 into I
  $54C: LD I, $C4D ; Load C4D into I
  $576: LD I, $4ED ; Load 4ED into I
  $5A0: LD I, $4CA ; Load 4CA into I
  $5AA: LD I, $CFA ; Load CFA into I
  $5BC: LD I, $F39 ; Load F39 into I
  $5C0: LD I, $2F4 ; Load 2F4 into I
  $5DA: LD I, $746 ; Load 746 into I
  $602: LD I, $945 ; Load 945 into I
  $652: LD I, $726 ; Load 726 into I
  $67E: LD I, $648 ; Load 648 into I
  $686: LD I, $F28 ; Load F28 into I
  $6B4: LD I, $F80 ; Load F80 into I
  $6B8: LD I, $22E ; Load 22E into I
  $6DE: LD I, $078 ; Load 078 into I
  $700: LD I, $CF5 ; Load CF5 into I
  $710: LD I, $B08 ; Load B08 into I
  $71A: LD I, $678 ; Load 678 into I
  $73E: LD [I], VF ; Store V0-VF at I
  $744: LD I, $E4A ; Load E4A into I
  $750: LD I, $6E6 ; Load 6E6 into I
  $76C: LD I, $A45 ; Load A45 into I
  $790: LD I, $66B ; Load 66B into I
  $7A4: LD I, $16B ; Load 16B into I
  $824: LD I, $CDC ; Load CDC into I
  $82E: ADD I, V9 ; I ADDRESS MANIPULATION
  $838: LD I, $B28 ; Load B28 into I
  $850: LD I, $4E8 ; Load 4E8 into I
  $8EA: LD I, $BA3 ; Load BA3 into I
  $90A: LD I, $81C ; Load 81C into I
  $914: LD I, $1D8 ; Load 1D8 into I
  $942: LD I, $6AC ; Load 6AC into I
  $966: LD I, $ABE ; Load ABE into I
  $98C: LD I, $017 ; Load 017 into I
  $9A4: LD I, $89A ; Load 89A into I
  $9CE: LD I, $E59 ; Load E59 into I
  $9D0: LD I, $39C ; Load 39C into I
  $9DC: LD I, $57E ; Load 57E into I
  $9F6: LD I, $0A3 ; Load 0A3 into I
  $A02: LD I, $41D ; Load 41D into I
  $A12: LD I, $4EF ; Load 4EF into I
  $A20: LD I, $4AE ; Load 4AE into I
  $A88: LD I, $546 ; Load 546 into I
  $AD4: LD I, $507 ; Load 507 into I
  $AE8: LD I, $132 ; Load 132 into I
  $AEE: ADD I, VA ; I ADDRESS MANIPULATION
  $B0A: LD I, $BFA ; Load BFA into I
  $B12: LD I, $108 ; Load 108 into I
  $B2A: LD I, $694 ; Load 694 into I
  $B2C: LD I, $709 ; Load 709 into I
  $B88: LD I, $442 ; Load 442 into I
  $BA8: LD I, $4B0 ; Load 4B0 into I
  $BC2: LD I, $42E ; Load 42E into I
  $BCC: LD I, $843 ; Load 843 into I
  $C12: LD I, $7BE ; Load 7BE into I
  $C18: LD I, $031 ; Load 031 into I
  $C20: LD I, $155 ; Load 155 into I
  $C48: LD I, $6EB ; Load 6EB into I
  $C5A: LD I, $AB6 ; Load AB6 into I
  $C88: LD I, $5D7 ; Load 5D7 into I
  $C9C: LD I, $C09 ; Load C09 into I
  $CAC: LD I, $593 ; Load 593 into I
  $CB2: LD I, $BF8 ; Load BF8 into I
  $CCE: LD I, $8F1 ; Load 8F1 into I
  $CDE: LD I, $735 ; Load 735 into I
  $CE4: LD I, $2CB ; Load 2CB into I
  $D1C: LD I, $B60 ; Load B60 into I
  $D46: LD I, $9C4 ; Load 9C4 into I
  $D4E: LD I, $400 ; Load 400 into I
  $D60: LD I, $01A ; Load 01A into I
  $D64: LD I, $C4C ; Load C4C into I
  $D6C: LD I, $466 ; Load 466 into I
  $D78: LD I, $47D ; Load 47D into I
  $DB4: LD I, $B06 ; Load B06 into I
  $DB8: LD I, $86C ; Load 86C into I
  $DE8: LD I, $143 ; Load 143 into I
  $DF8: LD I, $AFD ; Load AFD into I
  $E28: LD I, $A08 ; Load A08 into I
  $E4C: LD I, $7D7 ; Load 7D7 into I
  $EAC: LD I, $180 ; Load 180 into I
  $EF2: LD I, $405 ; Load 405 into I
  $EFE: LD I, $A50 ; Load A50 into I
  $F82: LD I, $8E2 ; Load 8E2 into I
  $FA4: LD I, $B6D ; Load B6D into I
  $FB8: LD I, $518 ; Load 518 into I
  $FCE: LD I, $779 ; Load 779 into I
  $FDE: LD I, $0FB ; Load 0FB into I
  $FE0: LD I, $6AE ; Load 6AE into I
  $FE4: LD I, $CB5 ; Load CB5 into I

CONTROL FLOW ANALYSIS:
Jumps: 237
Calls: 108
Branches: 217
Loops: 136
Loop Structures:
  $274 -> $07E (backward jump)
  $2AE -> $0E7 (backward jump)
  $2BC -> $111 (backward jump)
  $2DA -> $137 (backward jump)
  $2EE -> $0D3 (backward jump)
  $350 -> $159 (backward jump)
  $370 -> $014 (backward jump)
  $3C2 -> $250 (backward jump)
  $464 -> $2B6 (backward jump)
  $486 -> $05F (backward jump)
  $4A4 -> $1EE (backward jump)
  $4AE -> $47E (backward jump)
  $4F0 -> $241 (backward jump)
  $50C -> $3A1 (backward jump)
  $51E -> $209 (backward jump)
  $526 -> $221 (backward jump)
  $57E -> $1C0 (backward jump)
  $592 -> $0B3 (backward jump)
  $600 -> $164 (backward jump)
  $616 -> $3DB (backward jump)
  $61C -> $0B7 (backward jump)
  $64A -> $35A (backward jump)
  $65C -> $0FB (backward jump)
  $67A -> $429 (backward jump)
  $68A -> $2BC (backward jump)
  $6AA -> $040 (backward jump)
  $6EA -> $613 (backward jump)
  $728 -> $1B6 (backward jump)
  $79C -> $01D (backward jump)
  $7A2 -> $3AE (backward jump)
  $7B4 -> $201 (backward jump)
  $7B6 -> $4EA (backward jump)
  $7C6 -> $116 (backward jump)
  $7DA -> $102 (backward jump)
  $81C -> $15A (backward jump)
  $836 -> $401 (backward jump)
  $87C -> $569 (backward jump)
  $894 -> $0F1 (backward jump)
  $922 -> $1C7 (backward jump)
  $924 -> $18A (backward jump)
  $92A -> $732 (backward jump)
  $930 -> $833 (backward jump)
  $952 -> $923 (backward jump)
  $978 -> $50B (backward jump)
  $982 -> $757 (backward jump)
  $984 -> $094 (backward jump)
  $998 -> $59D (backward jump)
  $99A -> $5DE (backward jump)
  $9BE -> $7BE (backward jump)
  $A1C -> $359 (backward jump)
  $A26 -> $519 (backward jump)
  $A2A -> $27A (backward jump)
  $A36 -> $551 (backward jump)
  $A66 -> $57E (backward jump)
  $ABC -> $4AF (backward jump)
  $ADA -> $7FC (backward jump)
  $B16 -> $8B6 (backward jump)
  $B1E -> $017 (backward jump)
  $B40 -> $55B (backward jump)
  $B44 -> $7D5 (backward jump)
  $B78 -> $7B6 (backward jump)
  $BAC -> $81B (backward jump)
  $BBC -> $9EE (backward jump)
  $BC4 -> $215 (backward jump)
  $BDA -> $039 (backward jump)
  $BDE -> $662 (backward jump)
  $C06 -> $916 (backward jump)
  $C14 -> $0A2 (backward jump)
  $C36 -> $AE5 (backward jump)
  $C46 -> $015 (backward jump)
  $C54 -> $816 (backward jump)
  $C76 -> $969 (backward jump)
  $C7C -> $507 (backward jump)
  $C82 -> $3F7 (backward jump)
  $CA2 -> $1E5 (backward jump)
  $CA4 -> $562 (backward jump)
  $CAE -> $616 (backward jump)
  $CB4 -> $11E (backward jump)
  $CC0 -> $412 (backward jump)
  $CCC -> $05E (backward jump)
  $CEA -> $408 (backward jump)
  $CEE -> $82E (backward jump)
  $CF6 -> $555 (backward jump)
  $CFA -> $538 (backward jump)
  $D0A -> $04F (backward jump)
  $D0E -> $49B (backward jump)
  $D1E -> $94E (backward jump)
  $D2E -> $CC7 (backward jump)
  $D36 -> $665 (backward jump)
  $D40 -> $C42 (backward jump)
  $D42 -> $3FE (backward jump)
  $D6A -> $707 (backward jump)
  $D70 -> $32D (backward jump)
  $D8C -> $1E5 (backward jump)
  $DA8 -> $5B0 (backward jump)
  $DAC -> $8CC (backward jump)
  $DBA -> $9A2 (backward jump)
  $DC4 -> $002 (backward jump)
  $DD0 -> $A52 (backward jump)
  $DD6 -> $C6C (backward jump)
  $DE2 -> $9CF (backward jump)
  $E00 -> $4F1 (backward jump)
  $E06 -> $93E (backward jump)
  $E22 -> $1FC (backward jump)
  $E36 -> $6C8 (backward jump)
  $E5E -> $14C (backward jump)
  $E78 -> $DAF (backward jump)
  $E80 -> $5EC (backward jump)
  $E86 -> $768 (backward jump)
  $E88 -> $A9E (backward jump)
  $E8E -> $32E (backward jump)
  $E92 -> $E8E (backward jump)
  $E94 -> $D84 (backward jump)
  $E98 -> $3A1 (backward jump)
  $EC4 -> $730 (backward jump)
  $EC8 -> $619 (backward jump)
  $ED0 -> $CD9 (backward jump)
  $EE8 -> $18E (backward jump)
  $EF6 -> $A73 (backward jump)
  $EFC -> $4EF (backward jump)
  $F0C -> $050 (backward jump)
  $F16 -> $A82 (backward jump)
  $F1A -> $331 (backward jump)
  $F1E -> $211 (backward jump)
  $F24 -> $1D1 (backward jump)
  $F50 -> $133 (backward jump)
  $F62 -> $626 (backward jump)
  $F8A -> $67A (backward jump)
  $F96 -> $F61 (backward jump)
  $FAE -> $E31 (backward jump)
  $FBE -> $80E (backward jump)
  $FCA -> $5FF (backward jump)
  $FDC -> $D2D (backward jump)
  $FE2 -> $054 (backward jump)
  $FEA -> $4AF (backward jump)
  $FF6 -> $1D4 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $633B   LD       V3, #3B         ; Load 59 into V3
$202    $ABDF   LD       I, $BDF         ; Load BDF into I
$204    $E205   UNKNOWN  $E205           ; Unknown Exxx instruction
$206    $3501   SE       V5, #01         ; Skip if V5 == 1
$208    $8560   LD       V5, V6          ; V5 = V6
$20A    $5292   UNKNOWN  $5292           ; Unknown 5xxx instruction
$20C    $9BFD   UNKNOWN  $9BFD           ; Unknown 9xxx instruction
$20E    $CEA8   RND      VE, #A8         ; VE = random & A8
$210    $6AC0   LD       VA, #C0         ; Load 192 into VA
$212    $E517   UNKNOWN  $E517           ; Unknown Exxx instruction
$214    $B6E2   JP       V0, $6E2        ; Jump to V0 + 6E2
$216    $A621   LD       I, $621         ; Load 621 into I
$218    $6E9F   LD       VE, #9F         ; Load 159 into VE
$21A    $71EA   ADD      V1, #EA         ; Add 234 to V1
$21C    $3200   SE       V2, #00         ; Skip if V2 == 0
$21E    $A97B   LD       I, $97B         ; Load 97B into I
$220    $2653   CALL     $653            ; Call subroutine at 653
$222    $1D97   JP       $D97            ; Jump to D97
$224    $AB96   LD       I, $B96         ; Load B96 into I
$226    $86EE   SHL      V6              ; V6 <<= 1, VF = MSB
$228    $319E   SE       V1, #9E         ; Skip if V1 == 158
$22A    $09F0   SYS      $9F0            ; System call to 9F0
$22C    $1462   JP       $462            ; Jump to 462
$22E    $3F9D   SE       VF, #9D         ; Skip if VF == 157
$230    $E169   UNKNOWN  $E169           ; Unknown Exxx instruction
$232    $8D11   OR       VD, V1          ; VD |= V1
$234    $9B64   UNKNOWN  $9B64           ; Unknown 9xxx instruction
$236    $CD37   RND      VD, #37         ; VD = random & 37
$238    $55FD   UNKNOWN  $55FD           ; Unknown 5xxx instruction
$23A    $EF26   UNKNOWN  $EF26           ; Unknown Exxx instruction
$23C    $27B9   CALL     $7B9            ; Call subroutine at 7B9
$23E    $D4D3   DRW      V4, VD, #3      ; Draw 3-byte sprite at V4, VD
$240    $E9CA   UNKNOWN  $E9CA           ; Unknown Exxx instruction
$242    $EFA5   UNKNOWN  $EFA5           ; Unknown Exxx instruction
$244    $584C   UNKNOWN  $584C           ; Unknown 5xxx instruction
$246    $9AFF   UNKNOWN  $9AFF           ; Unknown 9xxx instruction
$248    $279B   CALL     $79B            ; Call subroutine at 79B
$24A    $83F9   UNKNOWN  83F9            ; Unknown 8xxx instruction
$24C    $3667   SE       V6, #67         ; Skip if V6 == 103
$24E    $1A36   JP       $A36            ; Jump to A36
$250    $5751   UNKNOWN  $5751           ; Unknown 5xxx instruction
$252    $E1BA   UNKNOWN  $E1BA           ; Unknown Exxx instruction
$254    $3671   SE       V6, #71         ; Skip if V6 == 113
$256    $8E27   SUBN     VE, V2          ; VE = V2 - VE, VF = !borrow
$258    $1BC3   JP       $BC3            ; Jump to BC3
$25A    $9E81   UNKNOWN  $9E81           ; Unknown 9xxx instruction
$25C    $79F8   ADD      V9, #F8         ; Add 248 to V9
$25E    $0DAE   SYS      $DAE            ; System call to DAE
$260    $6790   LD       V7, #90         ; Load 144 into V7
$262    $D1FF   DRW      V1, VF, #F      ; Draw 15-byte sprite at V1, VF
$264    $35D4   SE       V5, #D4         ; Skip if V5 == 212
$266    $D421   DRW      V4, V2, #1      ; Draw 1-byte sprite at V4, V2
$268    $E1C2   UNKNOWN  $E1C2           ; Unknown Exxx instruction
$26A    $ABAE   LD       I, $BAE         ; Load BAE into I
$26C    $A6BF   LD       I, $6BF         ; Load 6BF into I
$26E    $BE10   JP       V0, $E10        ; Jump to V0 + E10
$270    $2297   CALL     $297            ; Call subroutine at 297
$272    $5473   UNKNOWN  $5473           ; Unknown 5xxx instruction
$274    $107E   JP       $07E            ; Jump to 07E
$276    $51C7   UNKNOWN  $51C7           ; Unknown 5xxx instruction
$278    $0308   SYS      $308            ; System call to 308
$27A    $91D4   UNKNOWN  $91D4           ; Unknown 9xxx instruction
$27C    $0207   SYS      $207            ; System call to 207
$27E    $4522   SNE      V5, #22         ; Skip if V5 != 34
$280    $1B4C   JP       $B4C            ; Jump to B4C
$282    $5EF8   UNKNOWN  $5EF8           ; Unknown 5xxx instruction
$284    $2755   CALL     $755            ; Call subroutine at 755
$286    $DF4C   DRW      VF, V4, #C      ; Draw 12-byte sprite at VF, V4
$288    $F6AA   UNKNOWN  F6AA            ; Unknown Fxxx instruction
$28A    $E17C   UNKNOWN  $E17C           ; Unknown Exxx instruction
$28C    $789F   ADD      V8, #9F         ; Add 159 to V8
$28E    $9BAE   UNKNOWN  $9BAE           ; Unknown 9xxx instruction
$290    $6BC9   LD       VB, #C9         ; Load 201 into VB
$292    $01E1   SYS      $1E1            ; System call to 1E1
$294    $ECFB   UNKNOWN  $ECFB           ; Unknown Exxx instruction
$296    $A693   LD       I, $693         ; Load 693 into I
$298    $6349   LD       V3, #49         ; Load 73 into V3
$29A    $CAC4   RND      VA, #C4         ; VA = random & C4
$29C    $317F   SE       V1, #7F         ; Skip if V1 == 127
$29E    $D0ED   DRW      V0, VE, #D      ; Draw 13-byte sprite at V0, VE
$2A0    $1E0C   JP       $E0C            ; Jump to E0C
$2A2    $1D26   JP       $D26            ; Jump to D26
$2A4    $70E2   ADD      V0, #E2         ; Add 226 to V0
$2A6    $E229   UNKNOWN  $E229           ; Unknown Exxx instruction
$2A8    $6528   LD       V5, #28         ; Load 40 into V5
$2AA    $1A45   JP       $A45            ; Jump to A45
$2AC    $610C   LD       V1, #0C         ; Load 12 into V1
$2AE    $10E7   JP       $0E7            ; Jump to 0E7
$2B0    $E0D3   UNKNOWN  $E0D3           ; Unknown Exxx instruction
$2B2    $E5AA   UNKNOWN  $E5AA           ; Unknown Exxx instruction
$2B4    $DB89   DRW      VB, V8, #9      ; Draw 9-byte sprite at VB, V8
$2B6    $073A   SYS      $73A            ; System call to 73A
$2B8    $3E7F   SE       VE, #7F         ; Skip if VE == 127
$2BA    $76C4   ADD      V6, #C4         ; Add 196 to V6
$2BC    $1111   JP       $111            ; Jump to 111
$2BE    $F177   UNKNOWN  F177            ; Unknown Fxxx instruction
$2C0    $5183   UNKNOWN  $5183           ; Unknown 5xxx instruction
$2C2    $A4C6   LD       I, $4C6         ; Load 4C6 into I
$2C4    $ACCA   LD       I, $CCA         ; Load CCA into I
$2C6    $791F   ADD      V9, #1F         ; Add 31 to V9
$2C8    $1777   JP       $777            ; Jump to 777
$2CA    $4BA3   SNE      VB, #A3         ; Skip if VB != 163
$2CC    $F322   UNKNOWN  F322            ; Unknown Fxxx instruction
$2CE    $50A1   UNKNOWN  $50A1           ; Unknown 5xxx instruction
$2D0    $0002   SYS      $002            ; System call to 002
$2D2    $3039   SE       V0, #39         ; Skip if V0 == 57
$2D4    $16B0   JP       $6B0            ; Jump to 6B0
$2D6    $94CC   UNKNOWN  $94CC           ; Unknown 9xxx instruction
$2D8    $FFBB   UNKNOWN  FFBB            ; Unknown Fxxx instruction
$2DA    $1137   JP       $137            ; Jump to 137
$2DC    $66A2   LD       V6, #A2         ; Load 162 into V6
$2DE    $BE89   JP       V0, $E89        ; Jump to V0 + E89
$2E0    $C53E   RND      V5, #3E         ; V5 = random & 3E
$2E2    $EE46   UNKNOWN  $EE46           ; Unknown Exxx instruction
$2E4    $BA8E   JP       V0, $A8E        ; Jump to V0 + A8E
$2E6    $130E   JP       $30E            ; Jump to 30E
$2E8    $8DD7   SUBN     VD, VD          ; VD = VD - VD, VF = !borrow
$2EA    $967B   UNKNOWN  $967B           ; Unknown 9xxx instruction
$2EC    $D7EA   DRW      V7, VE, #A      ; Draw 10-byte sprite at V7, VE
$2EE    $10D3   JP       $0D3            ; Jump to 0D3
$2F0    $DBD5   DRW      VB, VD, #5      ; Draw 5-byte sprite at VB, VD
$2F2    $23FE   CALL     $3FE            ; Call subroutine at 3FE
$2F4    $8A21   OR       VA, V2          ; VA |= V2
$2F6    $C415   RND      V4, #15         ; V4 = random & 15
$2F8    $AF8E   LD       I, $F8E         ; Load F8E into I
$2FA    $45A8   SNE      V5, #A8         ; Skip if V5 != 168
$2FC    $4F8E   SNE      VF, #8E         ; Skip if VF != 142
$2FE    $743F   ADD      V4, #3F         ; Add 63 to V4
$300    $0043   SYS      $043            ; System call to 043
$302    $545C   UNKNOWN  $545C           ; Unknown 5xxx instruction
$304    $606F   LD       V0, #6F         ; Load 111 into V0
$306    $8DC0   LD       VD, VC          ; VD = VC
$308    $249C   CALL     $49C            ; Call subroutine at 49C
$30A    $0108   SYS      $108            ; System call to 108
$30C    $0098   SYS      $098            ; System call to 098
$30E    $5B95   UNKNOWN  $5B95           ; Unknown 5xxx instruction
$310    $ED43   UNKNOWN  $ED43           ; Unknown Exxx instruction
$312    $D306   DRW      V3, V0, #6      ; Draw 6-byte sprite at V3, V0
$314    $2862   CALL     $862            ; Call subroutine at 862
$316    $A260   LD       I, $260         ; Load 260 into I
$318    $6A5E   LD       VA, #5E         ; Load 94 into VA
$31A    $7296   ADD      V2, #96         ; Add 150 to V2
$31C    $7580   ADD      V5, #80         ; Add 128 to V5
$31E    $C240   RND      V2, #40         ; V2 = random & 40
$320    $6594   LD       V5, #94         ; Load 148 into V5
$322    $4D44   SNE      VD, #44         ; Skip if VD != 68
$324    $F43D   UNKNOWN  F43D            ; Unknown Fxxx instruction
$326    $0B28   SYS      $B28            ; System call to B28
$328    $67CC   LD       V7, #CC         ; Load 204 into V7
$32A    $9BA7   UNKNOWN  $9BA7           ; Unknown 9xxx instruction
$32C    $E4F1   UNKNOWN  $E4F1           ; Unknown Exxx instruction
$32E    $3095   SE       V0, #95         ; Skip if V0 == 149
$330    $EC8A   UNKNOWN  $EC8A           ; Unknown Exxx instruction
$332    $DC4A   DRW      VC, V4, #A      ; Draw 10-byte sprite at VC, V4
$334    $138A   JP       $38A            ; Jump to 38A
$336    $34B5   SE       V4, #B5         ; Skip if V4 == 181
$338    $CDD5   RND      VD, #D5         ; VD = random & D5
$33A    $4442   SNE      V4, #42         ; Skip if V4 != 66
$33C    $8E46   SHR      VE              ; VE >>= 1, VF = LSB
$33E    $E807   UNKNOWN  $E807           ; Unknown Exxx instruction
$340    $5F9B   UNKNOWN  $5F9B           ; Unknown 5xxx instruction
$342    $46F5   SNE      V6, #F5         ; Skip if V6 != 245
$344    $391A   SE       V9, #1A         ; Skip if V9 == 26
$346    $A03E   LD       I, $03E         ; Load 03E into I
$348    $7A3C   ADD      VA, #3C         ; Add 60 to VA
$34A    $5899   UNKNOWN  $5899           ; Unknown 5xxx instruction
$34C    $17B4   JP       $7B4            ; Jump to 7B4
$34E    $5CD5   UNKNOWN  $5CD5           ; Unknown 5xxx instruction
$350    $B159   JP       V0, $159        ; Jump to V0 + 159
$352    $5C97   UNKNOWN  $5C97           ; Unknown 5xxx instruction
$354    $9F2F   UNKNOWN  $9F2F           ; Unknown 9xxx instruction
$356    $0813   SYS      $813            ; System call to 813
$358    $D853   DRW      V8, V5, #3      ; Draw 3-byte sprite at V8, V5
$35A    $3EBF   SE       VE, #BF         ; Skip if VE == 191
$35C    $28E8   CALL     $8E8            ; Call subroutine at 8E8
$35E    $FC28   UNKNOWN  FC28            ; Unknown Fxxx instruction
$360    $63AA   LD       V3, #AA         ; Load 170 into V3
$362    $F6A1   UNKNOWN  F6A1            ; Unknown Fxxx instruction
$364    $F6A1   UNKNOWN  F6A1            ; Unknown Fxxx instruction
$366    $77A2   ADD      V7, #A2         ; Add 162 to V7
$368    $0981   SYS      $981            ; System call to 981
$36A    $AA59   LD       I, $A59         ; Load A59 into I
$36C    $5D9B   UNKNOWN  $5D9B           ; Unknown 5xxx instruction
$36E    $42AA   SNE      V2, #AA         ; Skip if V2 != 170
$370    $B014   JP       V0, $014        ; Jump to V0 + 014
$372    $DF25   DRW      VF, V2, #5      ; Draw 5-byte sprite at VF, V2
$374    $20EF   CALL     $0EF            ; Call subroutine at 0EF
$376    $E660   UNKNOWN  $E660           ; Unknown Exxx instruction
$378    $4115   SNE      V1, #15         ; Skip if V1 != 21
$37A    $26C3   CALL     $6C3            ; Call subroutine at 6C3
$37C    $B4A9   JP       V0, $4A9        ; Jump to V0 + 4A9
$37E    $E049   UNKNOWN  $E049           ; Unknown Exxx instruction
$380    $9BDE   UNKNOWN  $9BDE           ; Unknown 9xxx instruction
$382    $50AF   UNKNOWN  $50AF           ; Unknown 5xxx instruction
$384    $D48D   DRW      V4, V8, #D      ; Draw 13-byte sprite at V4, V8
$386    $BDEE   JP       V0, $DEE        ; Jump to V0 + DEE
$388    $1729   JP       $729            ; Jump to 729
$38A    $0FEB   SYS      $FEB            ; System call to FEB
$38C    $80F7   SUBN     V0, VF          ; V0 = VF - V0, VF = !borrow
$38E    $2799   CALL     $799            ; Call subroutine at 799
$390    $228E   CALL     $28E            ; Call subroutine at 28E
$392    $C438   RND      V4, #38         ; V4 = random & 38
$394    $C457   RND      V4, #57         ; V4 = random & 57
$396    $1D35   JP       $D35            ; Jump to D35
$398    $7EFB   ADD      VE, #FB         ; Add 251 to VE
$39A    $EE82   UNKNOWN  $EE82           ; Unknown Exxx instruction
$39C    $F518   LD       ST, V5          ; Sound timer = V5
$39E    $84D2   AND      V4, VD          ; V4 &= VD
$3A0    $A261   LD       I, $261         ; Load 261 into I
$3A2    $2829   CALL     $829            ; Call subroutine at 829
$3A4    $91D5   UNKNOWN  $91D5           ; Unknown 9xxx instruction
$3A6    $38FD   SE       V8, #FD         ; Skip if V8 == 253
$3A8    $B9EC   JP       V0, $9EC        ; Jump to V0 + 9EC
$3AA    $49E5   SNE      V9, #E5         ; Skip if V9 != 229
$3AC    $F639   UNKNOWN  F639            ; Unknown Fxxx instruction
$3AE    $B53F   JP       V0, $53F        ; Jump to V0 + 53F
$3B0    $2DAE   CALL     $DAE            ; Call subroutine at DAE
$3B2    $25E5   CALL     $5E5            ; Call subroutine at 5E5
$3B4    $65AF   LD       V5, #AF         ; Load 175 into V5
$3B6    $0BF2   SYS      $BF2            ; System call to BF2
$3B8    $8018   UNKNOWN  8018            ; Unknown 8xxx instruction
$3BA    $BD10   JP       V0, $D10        ; Jump to V0 + D10
$3BC    $47D4   SNE      V7, #D4         ; Skip if V7 != 212
$3BE    $E717   UNKNOWN  $E717           ; Unknown Exxx instruction
$3C0    $7EFC   ADD      VE, #FC         ; Add 252 to VE
$3C2    $1250   JP       $250            ; Jump to 250
$3C4    $BCC0   JP       V0, $CC0        ; Jump to V0 + CC0
$3C6    $0D4D   SYS      $D4D            ; System call to D4D
$3C8    $4C97   SNE      VC, #97         ; Skip if VC != 151
$3CA    $A887   LD       I, $887         ; Load 887 into I
$3CC    $6BCD   LD       VB, #CD         ; Load 205 into VB
$3CE    $CEA8   RND      VE, #A8         ; VE = random & A8
$3D0    $67F1   LD       V7, #F1         ; Load 241 into V7
$3D2    $DC4A   DRW      VC, V4, #A      ; Draw 10-byte sprite at VC, V4
$3D4    $C752   RND      V7, #52         ; V7 = random & 52
$3D6    $6F19   LD       VF, #19         ; Load 25 into VF
$3D8    $21EF   CALL     $1EF            ; Call subroutine at 1EF
$3DA    $8DE2   AND      VD, VE          ; VD &= VE
$3DC    $8F25   SUB      VF, V2          ; VF -= V2, VF = !borrow
$3DE    $95A8   UNKNOWN  $95A8           ; Unknown 9xxx instruction
$3E0    $DD16   DRW      VD, V1, #6      ; Draw 6-byte sprite at VD, V1
$3E2    $D5F0   DRW      V5, VF, #0      ; Draw 0-byte sprite at V5, VF
$3E4    $CE53   RND      VE, #53         ; VE = random & 53
$3E6    $504D   UNKNOWN  $504D           ; Unknown 5xxx instruction
$3E8    $FA8F   UNKNOWN  FA8F            ; Unknown Fxxx instruction
$3EA    $254A   CALL     $54A            ; Call subroutine at 54A
$3EC    $D1D1   DRW      V1, VD, #1      ; Draw 1-byte sprite at V1, VD
$3EE    $470C   SNE      V7, #0C         ; Skip if V7 != 12
$3F0    $E37D   UNKNOWN  $E37D           ; Unknown Exxx instruction
$3F2    $A5C0   LD       I, $5C0         ; Load 5C0 into I
$3F4    $971F   UNKNOWN  $971F           ; Unknown 9xxx instruction
$3F6    $36BF   SE       V6, #BF         ; Skip if V6 == 191
$3F8    $4D28   SNE      VD, #28         ; Skip if VD != 40
$3FA    $D60C   DRW      V6, V0, #C      ; Draw 12-byte sprite at V6, V0
$3FC    $2E02   CALL     $E02            ; Call subroutine at E02
$3FE    $7E6B   ADD      VE, #6B         ; Add 107 to VE
$400    $DDC6   DRW      VD, VC, #6      ; Draw 6-byte sprite at VD, VC
$402    $BFBC   JP       V0, $FBC        ; Jump to V0 + FBC
$404    $564B   UNKNOWN  $564B           ; Unknown 5xxx instruction
$406    $1F09   JP       $F09            ; Jump to F09
$408    $82E6   SHR      V2              ; V2 >>= 1, VF = LSB
$40A    $C631   RND      V6, #31         ; V6 = random & 31
$40C    $607A   LD       V0, #7A         ; Load 122 into V0
$40E    $04F3   SYS      $4F3            ; System call to 4F3
$410    $CD7E   RND      VD, #7E         ; VD = random & 7E
$412    $4531   SNE      V5, #31         ; Skip if V5 != 49
$414    $6A6B   LD       VA, #6B         ; Load 107 into VA
$416    $246F   CALL     $46F            ; Call subroutine at 46F
$418    $4222   SNE      V2, #22         ; Skip if V2 != 34
$41A    $A0ED   LD       I, $0ED         ; Load 0ED into I
$41C    $E39B   UNKNOWN  $E39B           ; Unknown Exxx instruction
$41E    $0027   SYS      $027            ; System call to 027
$420    $DA8B   DRW      VA, V8, #B      ; Draw 11-byte sprite at VA, V8
$422    $08BA   SYS      $8BA            ; System call to 8BA
$424    $7FF4   ADD      VF, #F4         ; Add 244 to VF
$426    $DC24   DRW      VC, V2, #4      ; Draw 4-byte sprite at VC, V2
$428    $BE29   JP       V0, $E29        ; Jump to V0 + E29
$42A    $8DC9   UNKNOWN  8DC9            ; Unknown 8xxx instruction
$42C    $021B   SYS      $21B            ; System call to 21B
$42E    $9E15   UNKNOWN  $9E15           ; Unknown 9xxx instruction
$430    $0AD9   SYS      $AD9            ; System call to AD9
$432    $8CFA   UNKNOWN  8CFA            ; Unknown 8xxx instruction
$434    $618A   LD       V1, #8A         ; Load 138 into V1
$436    $09AF   SYS      $9AF            ; System call to 9AF
$438    $35AB   SE       V5, #AB         ; Skip if V5 == 171
$43A    $BAB3   JP       V0, $AB3        ; Jump to V0 + AB3
$43C    $D946   DRW      V9, V4, #6      ; Draw 6-byte sprite at V9, V4
$43E    $E4EF   UNKNOWN  $E4EF           ; Unknown Exxx instruction
$440    $58F6   UNKNOWN  $58F6           ; Unknown 5xxx instruction
$442    $2EEF   CALL     $EEF            ; Call subroutine at EEF
$444    $5582   UNKNOWN  $5582           ; Unknown 5xxx instruction
$446    $DD24   DRW      VD, V2, #4      ; Draw 4-byte sprite at VD, V2
$448    $E758   UNKNOWN  $E758           ; Unknown Exxx instruction
$44A    $2D80   CALL     $D80            ; Call subroutine at D80
$44C    $BB01   JP       V0, $B01        ; Jump to V0 + B01
$44E    $830A   UNKNOWN  830A            ; Unknown 8xxx instruction
$450    $06B2   SYS      $6B2            ; System call to 6B2
$452    $D1DE   DRW      V1, VD, #E      ; Draw 14-byte sprite at V1, VD
$454    $53E5   UNKNOWN  $53E5           ; Unknown 5xxx instruction
$456    $FD08   UNKNOWN  FD08            ; Unknown Fxxx instruction
$458    $167B   JP       $67B            ; Jump to 67B
$45A    $032A   SYS      $32A            ; System call to 32A
$45C    $62D9   LD       V2, #D9         ; Load 217 into V2
$45E    $C475   RND      V4, #75         ; V4 = random & 75
$460    $96F5   UNKNOWN  $96F5           ; Unknown 9xxx instruction
$462    $D90D   DRW      V9, V0, #D      ; Draw 13-byte sprite at V9, V0
$464    $B2B6   JP       V0, $2B6        ; Jump to V0 + 2B6
$466    $49F2   SNE      V9, #F2         ; Skip if V9 != 242
$468    $634E   LD       V3, #4E         ; Load 78 into V3
$46A    $04E5   SYS      $4E5            ; System call to 4E5
$46C    $5CD4   UNKNOWN  $5CD4           ; Unknown 5xxx instruction
$46E    $7975   ADD      V9, #75         ; Add 117 to V9
$470    $4185   SNE      V1, #85         ; Skip if V1 != 133
$472    $605E   LD       V0, #5E         ; Load 94 into V0
$474    $E814   UNKNOWN  $E814           ; Unknown Exxx instruction
$476    $0B40   SYS      $B40            ; System call to B40
$478    $DDC6   DRW      VD, VC, #6      ; Draw 6-byte sprite at VD, VC
$47A    $22F3   CALL     $2F3            ; Call subroutine at 2F3
$47C    $CA2E   RND      VA, #2E         ; VA = random & 2E
$47E    $D314   DRW      V3, V1, #4      ; Draw 4-byte sprite at V3, V1
$480    $552C   UNKNOWN  $552C           ; Unknown 5xxx instruction
$482    $4287   SNE      V2, #87         ; Skip if V2 != 135
$484    $173D   JP       $73D            ; Jump to 73D
$486    $B05F   JP       V0, $05F        ; Jump to V0 + 05F
$488    $0038   SYS      $038            ; System call to 038
$48A    $AF75   LD       I, $F75         ; Load F75 into I
$48C    $5EF7   UNKNOWN  $5EF7           ; Unknown 5xxx instruction
$48E    $876C   UNKNOWN  876C            ; Unknown 8xxx instruction
$490    $FEA7   UNKNOWN  FEA7            ; Unknown Fxxx instruction
$492    $3AE9   SE       VA, #E9         ; Skip if VA == 233
$494    $4768   SNE      V7, #68         ; Skip if V7 != 104
$496    $6E65   LD       VE, #65         ; Load 101 into VE
$498    $E3D9   UNKNOWN  $E3D9           ; Unknown Exxx instruction
$49A    $FBCE   UNKNOWN  FBCE            ; Unknown Fxxx instruction
$49C    $EA1E   UNKNOWN  $EA1E           ; Unknown Exxx instruction
$49E    $8DD3   XOR      VD, VD          ; VD ^= VD
$4A0    $C997   RND      V9, #97         ; V9 = random & 97
$4A2    $55EF   UNKNOWN  $55EF           ; Unknown 5xxx instruction
$4A4    $11EE   JP       $1EE            ; Jump to 1EE
$4A6    $D6CD   DRW      V6, VC, #D      ; Draw 13-byte sprite at V6, VC
$4A8    $679C   LD       V7, #9C         ; Load 156 into V7
$4AA    $8BE4   ADD      VB, VE          ; VB += VE, VF = carry
$4AC    $02AE   SYS      $2AE            ; System call to 2AE
$4AE    $147E   JP       $47E            ; Jump to 47E
$4B0    $F471   UNKNOWN  F471            ; Unknown Fxxx instruction
$4B2    $BDF6   JP       V0, $DF6        ; Jump to V0 + DF6
$4B4    $B740   JP       V0, $740        ; Jump to V0 + 740
$4B6    $2975   CALL     $975            ; Call subroutine at 975
$4B8    $CCAE   RND      VC, #AE         ; VC = random & AE
$4BA    $DF08   DRW      VF, V0, #8      ; Draw 8-byte sprite at VF, V0
$4BC    $C5FD   RND      V5, #FD         ; V5 = random & FD
$4BE    $D298   DRW      V2, V9, #8      ; Draw 8-byte sprite at V2, V9
$4C0    $1C81   JP       $C81            ; Jump to C81
$4C2    $45CD   SNE      V5, #CD         ; Skip if V5 != 205
$4C4    $B5A1   JP       V0, $5A1        ; Jump to V0 + 5A1
$4C6    $24D6   CALL     $4D6            ; Call subroutine at 4D6
$4C8    $B6A9   JP       V0, $6A9        ; Jump to V0 + 6A9
$4CA    $2C6B   CALL     $C6B            ; Call subroutine at C6B
$4CC    $A05B   LD       I, $05B         ; Load 05B into I
$4CE    $AF08   LD       I, $F08         ; Load F08 into I
$4D0    $D436   DRW      V4, V3, #6      ; Draw 6-byte sprite at V4, V3
$4D2    $1BA1   JP       $BA1            ; Jump to BA1
$4D4    $E170   UNKNOWN  $E170           ; Unknown Exxx instruction
$4D6    $D7D4   DRW      V7, VD, #4      ; Draw 4-byte sprite at V7, VD
$4D8    $A7BC   LD       I, $7BC         ; Load 7BC into I
$4DA    $484C   SNE      V8, #4C         ; Skip if V8 != 76
$4DC    $2DE6   CALL     $DE6            ; Call subroutine at DE6
$4DE    $8D9F   UNKNOWN  8D9F            ; Unknown 8xxx instruction
$4E0    $6E38   LD       VE, #38         ; Load 56 into VE
$4E2    $8C16   SHR      VC              ; VC >>= 1, VF = LSB
$4E4    $A68B   LD       I, $68B         ; Load 68B into I
$4E6    $80BE   SHL      V0              ; V0 <<= 1, VF = MSB
$4E8    $46EE   SNE      V6, #EE         ; Skip if V6 != 238
$4EA    $54F0   SE       V4, VF          ; Skip if V4 == VF
$4EC    $FC35   UNKNOWN  FC35            ; Unknown Fxxx instruction
$4EE    $29A0   CALL     $9A0            ; Call subroutine at 9A0
$4F0    $1241   JP       $241            ; Jump to 241
$4F2    $6081   LD       V0, #81         ; Load 129 into V0
$4F4    $06EE   SYS      $6EE            ; System call to 6EE
$4F6    $1CB0   JP       $CB0            ; Jump to CB0
$4F8    $D606   DRW      V6, V0, #6      ; Draw 6-byte sprite at V6, V0
$4FA    $086C   SYS      $86C            ; System call to 86C
$4FC    $4992   SNE      V9, #92         ; Skip if V9 != 146
$4FE    $F343   UNKNOWN  F343            ; Unknown Fxxx instruction
$500    $EFDE   UNKNOWN  $EFDE           ; Unknown Exxx instruction
$502    $5EC1   UNKNOWN  $5EC1           ; Unknown 5xxx instruction
$504    $031C   SYS      $31C            ; System call to 31C
$506    $FD14   UNKNOWN  FD14            ; Unknown Fxxx instruction
$508    $02D9   SYS      $2D9            ; System call to 2D9
$50A    $052A   SYS      $52A            ; System call to 52A
$50C    $B3A1   JP       V0, $3A1        ; Jump to V0 + 3A1
$50E    $C2EF   RND      V2, #EF         ; V2 = random & EF
$510    $A814   LD       I, $814         ; Load 814 into I
$512    $918C   UNKNOWN  $918C           ; Unknown 9xxx instruction
$514    $A863   LD       I, $863         ; Load 863 into I
$516    $BC0F   JP       V0, $C0F        ; Jump to V0 + C0F
$518    $C27F   RND      V2, #7F         ; V2 = random & 7F
$51A    $015A   SYS      $15A            ; System call to 15A
$51C    $2687   CALL     $687            ; Call subroutine at 687
$51E    $1209   JP       $209            ; Jump to 209
$520    $1929   JP       $929            ; Jump to 929
$522    $58F5   UNKNOWN  $58F5           ; Unknown 5xxx instruction
$524    $4BB0   SNE      VB, #B0         ; Skip if VB != 176
$526    $B221   JP       V0, $221        ; Jump to V0 + 221
$528    $2D65   CALL     $D65            ; Call subroutine at D65
$52A    $C41F   RND      V4, #1F         ; V4 = random & 1F
$52C    $4B6D   SNE      VB, #6D         ; Skip if VB != 109
$52E    $DBA0   DRW      VB, VA, #0      ; Draw 0-byte sprite at VB, VA
$530    $8003   XOR      V0, V0          ; V0 ^= V0
$532    $9718   UNKNOWN  $9718           ; Unknown 9xxx instruction
$534    $76AF   ADD      V6, #AF         ; Add 175 to V6
$536    $15A9   JP       $5A9            ; Jump to 5A9
$538    $601C   LD       V0, #1C         ; Load 28 into V0
$53A    $D6D8   DRW      V6, VD, #8      ; Draw 8-byte sprite at V6, VD
$53C    $2A2E   CALL     $A2E            ; Call subroutine at A2E
$53E    $DE06   DRW      VE, V0, #6      ; Draw 6-byte sprite at VE, V0
$540    $7546   ADD      V5, #46         ; Add 70 to V5
$542    $85B3   XOR      V5, VB          ; V5 ^= VB
$544    $1874   JP       $874            ; Jump to 874
$546    $E141   UNKNOWN  $E141           ; Unknown Exxx instruction
$548    $FFD4   UNKNOWN  FFD4            ; Unknown Fxxx instruction
$54A    $8791   OR       V7, V9          ; V7 |= V9
$54C    $AC4D   LD       I, $C4D         ; Load C4D into I
$54E    $EE24   UNKNOWN  $EE24           ; Unknown Exxx instruction
$550    $54E9   UNKNOWN  $54E9           ; Unknown 5xxx instruction
$552    $77A0   ADD      V7, #A0         ; Add 160 to V7
$554    $4A17   SNE      VA, #17         ; Skip if VA != 23
$556    $F5B8   UNKNOWN  F5B8            ; Unknown Fxxx instruction
$558    $0F8B   SYS      $F8B            ; System call to F8B
$55A    $5E2D   UNKNOWN  $5E2D           ; Unknown 5xxx instruction
$55C    $2623   CALL     $623            ; Call subroutine at 623
$55E    $CBAC   RND      VB, #AC         ; VB = random & AC
$560    $FF76   UNKNOWN  FF76            ; Unknown Fxxx instruction
$562    $71DA   ADD      V1, #DA         ; Add 218 to V1
$564    $70B2   ADD      V0, #B2         ; Add 178 to V0
$566    $E936   UNKNOWN  $E936           ; Unknown Exxx instruction
$568    $F6F5   UNKNOWN  F6F5            ; Unknown Fxxx instruction
$56A    $81B6   SHR      V1              ; V1 >>= 1, VF = LSB
$56C    $8E6E   SHL      VE              ; VE <<= 1, VF = MSB
$56E    $6447   LD       V4, #47         ; Load 71 into V4
$570    $B671   JP       V0, $671        ; Jump to V0 + 671
$572    $4631   SNE      V6, #31         ; Skip if V6 != 49
$574    $CE5F   RND      VE, #5F         ; VE = random & 5F
$576    $A4ED   LD       I, $4ED         ; Load 4ED into I
$578    $CA57   RND      VA, #57         ; VA = random & 57
$57A    $41BE   SNE      V1, #BE         ; Skip if V1 != 190
$57C    $064B   SYS      $64B            ; System call to 64B
$57E    $11C0   JP       $1C0            ; Jump to 1C0
$580    $516F   UNKNOWN  $516F           ; Unknown 5xxx instruction
$582    $BB2E   JP       V0, $B2E        ; Jump to V0 + B2E
$584    $16CC   JP       $6CC            ; Jump to 6CC
$586    $D2EA   DRW      V2, VE, #A      ; Draw 10-byte sprite at V2, VE
$588    $53E8   UNKNOWN  $53E8           ; Unknown 5xxx instruction
$58A    $7EB8   ADD      VE, #B8         ; Add 184 to VE
$58C    $4168   SNE      V1, #68         ; Skip if V1 != 104
$58E    $921E   UNKNOWN  $921E           ; Unknown 9xxx instruction
$590    $3172   SE       V1, #72         ; Skip if V1 == 114
$592    $B0B3   JP       V0, $0B3        ; Jump to V0 + 0B3
$594    $3050   SE       V0, #50         ; Skip if V0 == 80
$596    $593F   UNKNOWN  $593F           ; Unknown 5xxx instruction
$598    $757B   ADD      V5, #7B         ; Add 123 to V5
$59A    $E78E   UNKNOWN  $E78E           ; Unknown Exxx instruction
$59C    $7E6E   ADD      VE, #6E         ; Add 110 to VE
$59E    $66EE   LD       V6, #EE         ; Load 238 into V6
$5A0    $A4CA   LD       I, $4CA         ; Load 4CA into I
$5A2    $EA8C   UNKNOWN  $EA8C           ; Unknown Exxx instruction
$5A4    $E7DB   UNKNOWN  $E7DB           ; Unknown Exxx instruction
$5A6    $F1C3   UNKNOWN  F1C3            ; Unknown Fxxx instruction
$5A8    $DC79   DRW      VC, V7, #9      ; Draw 9-byte sprite at VC, V7
$5AA    $ACFA   LD       I, $CFA         ; Load CFA into I
$5AC    $6AFE   LD       VA, #FE         ; Load 254 into VA
$5AE    $F857   UNKNOWN  F857            ; Unknown Fxxx instruction
$5B0    $055E   SYS      $55E            ; System call to 55E
$5B2    $411E   SNE      V1, #1E         ; Skip if V1 != 30
$5B4    $7186   ADD      V1, #86         ; Add 134 to V1
$5B6    $3B65   SE       VB, #65         ; Skip if VB == 101
$5B8    $9C08   UNKNOWN  $9C08           ; Unknown 9xxx instruction
$5BA    $59F5   UNKNOWN  $59F5           ; Unknown 5xxx instruction
$5BC    $AF39   LD       I, $F39         ; Load F39 into I
$5BE    $7F3E   ADD      VF, #3E         ; Add 62 to VF
$5C0    $A2F4   LD       I, $2F4         ; Load 2F4 into I
$5C2    $DE12   DRW      VE, V1, #2      ; Draw 2-byte sprite at VE, V1
$5C4    $7051   ADD      V0, #51         ; Add 81 to V0
$5C6    $E5D0   UNKNOWN  $E5D0           ; Unknown Exxx instruction
$5C8    $4BE3   SNE      VB, #E3         ; Skip if VB != 227
$5CA    $709F   ADD      V0, #9F         ; Add 159 to V0
$5CC    $E492   UNKNOWN  $E492           ; Unknown Exxx instruction
$5CE    $C15F   RND      V1, #5F         ; V1 = random & 5F
$5D0    $704A   ADD      V0, #4A         ; Add 74 to V0
$5D2    $8037   SUBN     V0, V3          ; V0 = V3 - V0, VF = !borrow
$5D4    $471F   SNE      V7, #1F         ; Skip if V7 != 31
$5D6    $0565   SYS      $565            ; System call to 565
$5D8    $72CE   ADD      V2, #CE         ; Add 206 to V2
$5DA    $A746   LD       I, $746         ; Load 746 into I
$5DC    $37C2   SE       V7, #C2         ; Skip if V7 == 194
$5DE    $7582   ADD      V5, #82         ; Add 130 to V5
$5E0    $7AB8   ADD      VA, #B8         ; Add 184 to VA
$5E2    $4BAA   SNE      VB, #AA         ; Skip if VB != 170
$5E4    $3260   SE       V2, #60         ; Skip if V2 == 96
$5E6    $D26E   DRW      V2, V6, #E      ; Draw 14-byte sprite at V2, V6
$5E8    $DEA8   DRW      VE, VA, #8      ; Draw 8-byte sprite at VE, VA
$5EA    $38BA   SE       V8, #BA         ; Skip if V8 == 186
$5EC    $68F6   LD       V8, #F6         ; Load 246 into V8
$5EE    $EE0C   UNKNOWN  $EE0C           ; Unknown Exxx instruction
$5F0    $7B6D   ADD      VB, #6D         ; Add 109 to VB
$5F2    $DE1A   DRW      VE, V1, #A      ; Draw 10-byte sprite at VE, V1
$5F4    $543A   UNKNOWN  $543A           ; Unknown 5xxx instruction
$5F6    $F416   UNKNOWN  F416            ; Unknown Fxxx instruction
$5F8    $6BFB   LD       VB, #FB         ; Load 251 into VB
$5FA    $53E9   UNKNOWN  $53E9           ; Unknown 5xxx instruction
$5FC    $3259   SE       V2, #59         ; Skip if V2 == 89
$5FE    $0559   SYS      $559            ; System call to 559
$600    $1164   JP       $164            ; Jump to 164
$602    $A945   LD       I, $945         ; Load 945 into I
$604    $4719   SNE      V7, #19         ; Skip if V7 != 25
$606    $E70C   UNKNOWN  $E70C           ; Unknown Exxx instruction
$608    $1F74   JP       $F74            ; Jump to F74
$60A    $1EF8   JP       $EF8            ; Jump to EF8
$60C    $4041   SNE      V0, #41         ; Skip if V0 != 65
$60E    $8060   LD       V0, V6          ; V0 = V6
$610    $8F2C   UNKNOWN  8F2C            ; Unknown 8xxx instruction
$612    $5F0F   UNKNOWN  $5F0F           ; Unknown 5xxx instruction
$614    $C3E6   RND      V3, #E6         ; V3 = random & E6
$616    $13DB   JP       $3DB            ; Jump to 3DB
$618    $22A1   CALL     $2A1            ; Call subroutine at 2A1
$61A    $8677   SUBN     V6, V7          ; V6 = V7 - V6, VF = !borrow
$61C    $10B7   JP       $0B7            ; Jump to 0B7
$61E    $4853   SNE      V8, #53         ; Skip if V8 != 83
$620    $71A6   ADD      V1, #A6         ; Add 166 to V1
$622    $9721   UNKNOWN  $9721           ; Unknown 9xxx instruction
$624    $BE7C   JP       V0, $E7C        ; Jump to V0 + E7C
$626    $E8A3   UNKNOWN  $E8A3           ; Unknown Exxx instruction
$628    $5048   UNKNOWN  $5048           ; Unknown 5xxx instruction
$62A    $7059   ADD      V0, #59         ; Add 89 to V0
$62C    $062B   SYS      $62B            ; System call to 62B
$62E    $910A   UNKNOWN  $910A           ; Unknown 9xxx instruction
$630    $E4EC   UNKNOWN  $E4EC           ; Unknown Exxx instruction
$632    $9DA4   UNKNOWN  $9DA4           ; Unknown 9xxx instruction
$634    $9009   UNKNOWN  $9009           ; Unknown 9xxx instruction
$636    $ECFD   UNKNOWN  $ECFD           ; Unknown Exxx instruction
$638    $5C18   UNKNOWN  $5C18           ; Unknown 5xxx instruction
$63A    $4472   SNE      V4, #72         ; Skip if V4 != 114
$63C    $D87A   DRW      V8, V7, #A      ; Draw 10-byte sprite at V8, V7
$63E    $8D5F   UNKNOWN  8D5F            ; Unknown 8xxx instruction
$640    $8258   UNKNOWN  8258            ; Unknown 8xxx instruction
$642    $4E94   SNE      VE, #94         ; Skip if VE != 148
$644    $EB42   UNKNOWN  $EB42           ; Unknown Exxx instruction
$646    $0780   SYS      $780            ; System call to 780
$648    $0B58   SYS      $B58            ; System call to B58
$64A    $135A   JP       $35A            ; Jump to 35A
$64C    $951D   UNKNOWN  $951D           ; Unknown 9xxx instruction
$64E    $5C58   UNKNOWN  $5C58           ; Unknown 5xxx instruction
$650    $D5CF   DRW      V5, VC, #F      ; Draw 15-byte sprite at V5, VC
$652    $A726   LD       I, $726         ; Load 726 into I
$654    $5FB2   UNKNOWN  $5FB2           ; Unknown 5xxx instruction
$656    $ECAC   UNKNOWN  $ECAC           ; Unknown Exxx instruction
$658    $379E   SE       V7, #9E         ; Skip if V7 == 158
$65A    $B6DF   JP       V0, $6DF        ; Jump to V0 + 6DF
$65C    $10FB   JP       $0FB            ; Jump to 0FB
$65E    $7117   ADD      V1, #17         ; Add 23 to V1
$660    $BC8F   JP       V0, $C8F        ; Jump to V0 + C8F
$662    $20B7   CALL     $0B7            ; Call subroutine at 0B7
$664    $F440   UNKNOWN  F440            ; Unknown Fxxx instruction
$666    $3D3B   SE       VD, #3B         ; Skip if VD == 59
$668    $9027   UNKNOWN  $9027           ; Unknown 9xxx instruction
$66A    $41B5   SNE      V1, #B5         ; Skip if V1 != 181
$66C    $83E9   UNKNOWN  83E9            ; Unknown 8xxx instruction
$66E    $3989   SE       V9, #89         ; Skip if V9 == 137
$670    $79C1   ADD      V9, #C1         ; Add 193 to V9
$672    $3436   SE       V4, #36         ; Skip if V4 == 54
$674    $D237   DRW      V2, V3, #7      ; Draw 7-byte sprite at V2, V3
$676    $7594   ADD      V5, #94         ; Add 148 to V5
$678    $D6E7   DRW      V6, VE, #7      ; Draw 7-byte sprite at V6, VE
$67A    $1429   JP       $429            ; Jump to 429
$67C    $064B   SYS      $64B            ; System call to 64B
$67E    $A648   LD       I, $648         ; Load 648 into I
$680    $72DB   ADD      V2, #DB         ; Add 219 to V2
$682    $CC21   RND      VC, #21         ; VC = random & 21
$684    $BF05   JP       V0, $F05        ; Jump to V0 + F05
$686    $AF28   LD       I, $F28         ; Load F28 into I
$688    $9F29   UNKNOWN  $9F29           ; Unknown 9xxx instruction
$68A    $B2BC   JP       V0, $2BC        ; Jump to V0 + 2BC
$68C    $D89A   DRW      V8, V9, #A      ; Draw 10-byte sprite at V8, V9
$68E    $86AA   UNKNOWN  86AA            ; Unknown 8xxx instruction
$690    $DB40   DRW      VB, V4, #0      ; Draw 0-byte sprite at VB, V4
$692    $49F0   SNE      V9, #F0         ; Skip if V9 != 240
$694    $B933   JP       V0, $933        ; Jump to V0 + 933
$696    $FF22   UNKNOWN  FF22            ; Unknown Fxxx instruction
$698    $C8F9   RND      V8, #F9         ; V8 = random & F9
$69A    $727F   ADD      V2, #7F         ; Add 127 to V2
$69C    $B7D5   JP       V0, $7D5        ; Jump to V0 + 7D5
$69E    $9192   UNKNOWN  $9192           ; Unknown 9xxx instruction
$6A0    $2100   CALL     $100            ; Call subroutine at 100
$6A2    $70C9   ADD      V0, #C9         ; Add 201 to V0
$6A4    $32DC   SE       V2, #DC         ; Skip if V2 == 220
$6A6    $9318   UNKNOWN  $9318           ; Unknown 9xxx instruction
$6A8    $C4E6   RND      V4, #E6         ; V4 = random & E6
$6AA    $B040   JP       V0, $040        ; Jump to V0 + 040
$6AC    $C06D   RND      V0, #6D         ; V0 = random & 6D
$6AE    $F459   UNKNOWN  F459            ; Unknown Fxxx instruction
$6B0    $35CE   SE       V5, #CE         ; Skip if V5 == 206
$6B2    $22DF   CALL     $2DF            ; Call subroutine at 2DF
$6B4    $AF80   LD       I, $F80         ; Load F80 into I
$6B6    $E24C   UNKNOWN  $E24C           ; Unknown Exxx instruction
$6B8    $A22E   LD       I, $22E         ; Load 22E into I
$6BA    $31BB   SE       V1, #BB         ; Skip if V1 == 187
$6BC    $DE79   DRW      VE, V7, #9      ; Draw 9-byte sprite at VE, V7
$6BE    $41EA   SNE      V1, #EA         ; Skip if V1 != 234
$6C0    $6061   LD       V0, #61         ; Load 97 into V0
$6C2    $EF23   UNKNOWN  $EF23           ; Unknown Exxx instruction
$6C4    $F6DF   UNKNOWN  F6DF            ; Unknown Fxxx instruction
$6C6    $8CFB   UNKNOWN  8CFB            ; Unknown 8xxx instruction
$6C8    $0333   SYS      $333            ; System call to 333
$6CA    $425C   SNE      V2, #5C         ; Skip if V2 != 92
$6CC    $2F01   CALL     $F01            ; Call subroutine at F01
$6CE    $5D04   UNKNOWN  $5D04           ; Unknown 5xxx instruction
$6D0    $4E75   SNE      VE, #75         ; Skip if VE != 117
$6D2    $EF28   UNKNOWN  $EF28           ; Unknown Exxx instruction
$6D4    $08F6   SYS      $8F6            ; System call to 8F6
$6D6    $9D56   UNKNOWN  $9D56           ; Unknown 9xxx instruction
$6D8    $78A4   ADD      V8, #A4         ; Add 164 to V8
$6DA    $93A5   UNKNOWN  $93A5           ; Unknown 9xxx instruction
$6DC    $0AFE   SYS      $AFE            ; System call to AFE
$6DE    $A078   LD       I, $078         ; Load 078 into I
$6E0    $7A1F   ADD      VA, #1F         ; Add 31 to VA
$6E2    $5F1B   UNKNOWN  $5F1B           ; Unknown 5xxx instruction
$6E4    $FA7F   UNKNOWN  FA7F            ; Unknown Fxxx instruction
$6E6    $C9FF   RND      V9, #FF         ; V9 = random & FF
$6E8    $D0B9   DRW      V0, VB, #9      ; Draw 9-byte sprite at V0, VB
$6EA    $B613   JP       V0, $613        ; Jump to V0 + 613
$6EC    $2572   CALL     $572            ; Call subroutine at 572
$6EE    $5621   UNKNOWN  $5621           ; Unknown 5xxx instruction
$6F0    $C0B5   RND      V0, #B5         ; V0 = random & B5
$6F2    $840F   UNKNOWN  840F            ; Unknown 8xxx instruction
$6F4    $34CA   SE       V4, #CA         ; Skip if V4 == 202
$6F6    $5D85   UNKNOWN  $5D85           ; Unknown 5xxx instruction
$6F8    $D750   DRW      V7, V5, #0      ; Draw 0-byte sprite at V7, V5
$6FA    $55F6   UNKNOWN  $55F6           ; Unknown 5xxx instruction
$6FC    $ED11   UNKNOWN  $ED11           ; Unknown Exxx instruction
$6FE    $F822   UNKNOWN  F822            ; Unknown Fxxx instruction
$700    $ACF5   LD       I, $CF5         ; Load CF5 into I
$702    $4CE5   SNE      VC, #E5         ; Skip if VC != 229
$704    $F9E6   UNKNOWN  F9E6            ; Unknown Fxxx instruction
$706    $9BDF   UNKNOWN  $9BDF           ; Unknown 9xxx instruction
$708    $D4EA   DRW      V4, VE, #A      ; Draw 10-byte sprite at V4, VE
$70A    $40AF   SNE      V0, #AF         ; Skip if V0 != 175
$70C    $647C   LD       V4, #7C         ; Load 124 into V4
$70E    $76B7   ADD      V6, #B7         ; Add 183 to V6
$710    $AB08   LD       I, $B08         ; Load B08 into I
$712    $4CB9   SNE      VC, #B9         ; Skip if VC != 185
$714    $5AD5   UNKNOWN  $5AD5           ; Unknown 5xxx instruction
$716    $7CC3   ADD      VC, #C3         ; Add 195 to VC
$718    $BD08   JP       V0, $D08        ; Jump to V0 + D08
$71A    $A678   LD       I, $678         ; Load 678 into I
$71C    $8B79   UNKNOWN  8B79            ; Unknown 8xxx instruction
$71E    $0756   SYS      $756            ; System call to 756
$720    $BBD7   JP       V0, $BD7        ; Jump to V0 + BD7
$722    $03C1   SYS      $3C1            ; System call to 3C1
$724    $EEF0   UNKNOWN  $EEF0           ; Unknown Exxx instruction
$726    $6DCF   LD       VD, #CF         ; Load 207 into VD
$728    $11B6   JP       $1B6            ; Jump to 1B6
$72A    $2B99   CALL     $B99            ; Call subroutine at B99
$72C    $3A7B   SE       VA, #7B         ; Skip if VA == 123
$72E    $9412   UNKNOWN  $9412           ; Unknown 9xxx instruction
$730    $BB4C   JP       V0, $B4C        ; Jump to V0 + B4C
$732    $5EBB   UNKNOWN  $5EBB           ; Unknown 5xxx instruction
$734    $239B   CALL     $39B            ; Call subroutine at 39B
$736    $4F04   SNE      VF, #04         ; Skip if VF != 4
$738    $44A6   SNE      V4, #A6         ; Skip if V4 != 166
$73A    $2092   CALL     $092            ; Call subroutine at 092
$73C    $51AA   UNKNOWN  $51AA           ; Unknown 5xxx instruction
$73E    $FF55   LD       [I], VF         ; Store V0-VF at I
$740    $4179   SNE      V1, #79         ; Skip if V1 != 121
$742    $C838   RND      V8, #38         ; V8 = random & 38
$744    $AE4A   LD       I, $E4A         ; Load E4A into I
$746    $49AE   SNE      V9, #AE         ; Skip if V9 != 174
$748    $0854   SYS      $854            ; System call to 854
$74A    $C57D   RND      V5, #7D         ; V5 = random & 7D
$74C    $6C9C   LD       VC, #9C         ; Load 156 into VC
$74E    $BFD9   JP       V0, $FD9        ; Jump to V0 + FD9
$750    $A6E6   LD       I, $6E6         ; Load 6E6 into I
$752    $8154   ADD      V1, V5          ; V1 += V5, VF = carry
$754    $7C62   ADD      VC, #62         ; Add 98 to VC
$756    $95DD   UNKNOWN  $95DD           ; Unknown 9xxx instruction
$758    $33A0   SE       V3, #A0         ; Skip if V3 == 160
$75A    $BE9D   JP       V0, $E9D        ; Jump to V0 + E9D
$75C    $53DF   UNKNOWN  $53DF           ; Unknown 5xxx instruction
$75E    $092D   SYS      $92D            ; System call to 92D
$760    $9FA2   UNKNOWN  $9FA2           ; Unknown 9xxx instruction
$762    $D113   DRW      V1, V1, #3      ; Draw 3-byte sprite at V1, V1
$764    $9F78   UNKNOWN  $9F78           ; Unknown 9xxx instruction
$766    $9401   UNKNOWN  $9401           ; Unknown 9xxx instruction
$768    $3ADB   SE       VA, #DB         ; Skip if VA == 219
$76A    $8DB1   OR       VD, VB          ; VD |= VB
$76C    $AA45   LD       I, $A45         ; Load A45 into I
$76E    $7A08   ADD      VA, #08         ; Add 8 to VA
$770    $BFF4   JP       V0, $FF4        ; Jump to V0 + FF4
$772    $64BE   LD       V4, #BE         ; Load 190 into V4
$774    $5EB8   UNKNOWN  $5EB8           ; Unknown 5xxx instruction
$776    $2C90   CALL     $C90            ; Call subroutine at C90
$778    $914C   UNKNOWN  $914C           ; Unknown 9xxx instruction
$77A    $DA59   DRW      VA, V5, #9      ; Draw 9-byte sprite at VA, V5
$77C    $5159   UNKNOWN  $5159           ; Unknown 5xxx instruction
$77E    $BFB8   JP       V0, $FB8        ; Jump to V0 + FB8
$780    $D390   DRW      V3, V9, #0      ; Draw 0-byte sprite at V3, V9
$782    $206C   CALL     $06C            ; Call subroutine at 06C
$784    $CED7   RND      VE, #D7         ; VE = random & D7
$786    $377B   SE       V7, #7B         ; Skip if V7 == 123
$788    $694A   LD       V9, #4A         ; Load 74 into V9
$78A    $0E9A   SYS      $E9A            ; System call to E9A
$78C    $9D73   UNKNOWN  $9D73           ; Unknown 9xxx instruction
$78E    $61E0   LD       V1, #E0         ; Load 224 into V1
$790    $A66B   LD       I, $66B         ; Load 66B into I
$792    $8A1E   SHL      VA              ; VA <<= 1, VF = MSB
$794    $CA46   RND      VA, #46         ; VA = random & 46
$796    $9332   UNKNOWN  $9332           ; Unknown 9xxx instruction
$798    $2841   CALL     $841            ; Call subroutine at 841
$79A    $F58D   UNKNOWN  F58D            ; Unknown Fxxx instruction
$79C    $101D   JP       $01D            ; Jump to 01D
$79E    $79C1   ADD      V9, #C1         ; Add 193 to V9
$7A0    $2ED6   CALL     $ED6            ; Call subroutine at ED6
$7A2    $B3AE   JP       V0, $3AE        ; Jump to V0 + 3AE
$7A4    $A16B   LD       I, $16B         ; Load 16B into I
$7A6    $6669   LD       V6, #69         ; Load 105 into V6
$7A8    $563E   UNKNOWN  $563E           ; Unknown 5xxx instruction
$7AA    $9768   UNKNOWN  $9768           ; Unknown 9xxx instruction
$7AC    $2FCD   CALL     $FCD            ; Call subroutine at FCD
$7AE    $D5F5   DRW      V5, VF, #5      ; Draw 5-byte sprite at V5, VF
$7B0    $EF3D   UNKNOWN  $EF3D           ; Unknown Exxx instruction
$7B2    $92E5   UNKNOWN  $92E5           ; Unknown 9xxx instruction
$7B4    $B201   JP       V0, $201        ; Jump to V0 + 201
$7B6    $14EA   JP       $4EA            ; Jump to 4EA
$7B8    $08BE   SYS      $8BE            ; System call to 8BE
$7BA    $EE6C   UNKNOWN  $EE6C           ; Unknown Exxx instruction
$7BC    $CD75   RND      VD, #75         ; VD = random & 75
$7BE    $4F81   SNE      VF, #81         ; Skip if VF != 129
$7C0    $43AE   SNE      V3, #AE         ; Skip if V3 != 174
$7C2    $9BDD   UNKNOWN  $9BDD           ; Unknown 9xxx instruction
$7C4    $CB4B   RND      VB, #4B         ; VB = random & 4B
$7C6    $B116   JP       V0, $116        ; Jump to V0 + 116
$7C8    $67EA   LD       V7, #EA         ; Load 234 into V7
$7CA    $CC2E   RND      VC, #2E         ; VC = random & 2E
$7CC    $F556   UNKNOWN  F556            ; Unknown Fxxx instruction
$7CE    $2EB1   CALL     $EB1            ; Call subroutine at EB1
$7D0    $5EC0   SE       VE, VC          ; Skip if VE == VC
$7D2    $1BD7   JP       $BD7            ; Jump to BD7
$7D4    $40DD   SNE      V0, #DD         ; Skip if V0 != 221
$7D6    $9DD7   UNKNOWN  $9DD7           ; Unknown 9xxx instruction
$7D8    $D0C1   DRW      V0, VC, #1      ; Draw 1-byte sprite at V0, VC
$7DA    $B102   JP       V0, $102        ; Jump to V0 + 102
$7DC    $5D24   UNKNOWN  $5D24           ; Unknown 5xxx instruction
$7DE    $3CC6   SE       VC, #C6         ; Skip if VC == 198
$7E0    $25BE   CALL     $5BE            ; Call subroutine at 5BE
$7E2    $0B35   SYS      $B35            ; System call to B35
$7E4    $6FCA   LD       VF, #CA         ; Load 202 into VF
$7E6    $8C45   SUB      VC, V4          ; VC -= V4, VF = !borrow
$7E8    $4D8A   SNE      VD, #8A         ; Skip if VD != 138
$7EA    $3DB0   SE       VD, #B0         ; Skip if VD == 176
$7EC    $5DAA   UNKNOWN  $5DAA           ; Unknown 5xxx instruction
$7EE    $974B   UNKNOWN  $974B           ; Unknown 9xxx instruction
$7F0    $C67A   RND      V6, #7A         ; V6 = random & 7A
$7F2    $5687   UNKNOWN  $5687           ; Unknown 5xxx instruction
$7F4    $18D5   JP       $8D5            ; Jump to 8D5
$7F6    $FAF6   UNKNOWN  FAF6            ; Unknown Fxxx instruction
$7F8    $7243   ADD      V2, #43         ; Add 67 to V2
$7FA    $6497   LD       V4, #97         ; Load 151 into V4
$7FC    $6E82   LD       VE, #82         ; Load 130 into VE
$7FE    $CCE5   RND      VC, #E5         ; VC = random & E5
$800    $C52D   RND      V5, #2D         ; V5 = random & 2D
$802    $3672   SE       V6, #72         ; Skip if V6 == 114
$804    $5D43   UNKNOWN  $5D43           ; Unknown 5xxx instruction
$806    $49B4   SNE      V9, #B4         ; Skip if V9 != 180
$808    $DD78   DRW      VD, V7, #8      ; Draw 8-byte sprite at VD, V7
$80A    $46EB   SNE      V6, #EB         ; Skip if V6 != 235
$80C    $6B2B   LD       VB, #2B         ; Load 43 into VB
$80E    $D328   DRW      V3, V2, #8      ; Draw 8-byte sprite at V3, V2
$810    $0B16   SYS      $B16            ; System call to B16
$812    $5CB6   UNKNOWN  $5CB6           ; Unknown 5xxx instruction
$814    $67BD   LD       V7, #BD         ; Load 189 into V7
$816    $5E52   UNKNOWN  $5E52           ; Unknown 5xxx instruction
$818    $665C   LD       V6, #5C         ; Load 92 into V6
$81A    $9941   UNKNOWN  $9941           ; Unknown 9xxx instruction
$81C    $B15A   JP       V0, $15A        ; Jump to V0 + 15A
$81E    $696F   LD       V9, #6F         ; Load 111 into V9
$820    $814D   UNKNOWN  814D            ; Unknown 8xxx instruction
$822    $6E61   LD       VE, #61         ; Load 97 into VE
$824    $ACDC   LD       I, $CDC         ; Load CDC into I
$826    $51EF   UNKNOWN  $51EF           ; Unknown 5xxx instruction
$828    $4543   SNE      V5, #43         ; Skip if V5 != 67
$82A    $DB97   DRW      VB, V9, #7      ; Draw 7-byte sprite at VB, V9
$82C    $7618   ADD      V6, #18         ; Add 24 to V6
$82E    $F91E   ADD      I, V9           ; I += V9
$830    $6DC1   LD       VD, #C1         ; Load 193 into VD
$832    $7C12   ADD      VC, #12         ; Add 18 to VC
$834    $601E   LD       V0, #1E         ; Load 30 into V0
$836    $1401   JP       $401            ; Jump to 401
$838    $AB28   LD       I, $B28         ; Load B28 into I
$83A    $7607   ADD      V6, #07         ; Add 7 to V6
$83C    $E671   UNKNOWN  $E671           ; Unknown Exxx instruction
$83E    $57B5   UNKNOWN  $57B5           ; Unknown 5xxx instruction
$840    $4FC3   SNE      VF, #C3         ; Skip if VF != 195
$842    $C179   RND      V1, #79         ; V1 = random & 79
$844    $9A32   UNKNOWN  $9A32           ; Unknown 9xxx instruction
$846    $5831   UNKNOWN  $5831           ; Unknown 5xxx instruction
$848    $343C   SE       V4, #3C         ; Skip if V4 == 60
$84A    $CEB9   RND      VE, #B9         ; VE = random & B9
$84C    $2453   CALL     $453            ; Call subroutine at 453
$84E    $4ED8   SNE      VE, #D8         ; Skip if VE != 216
$850    $A4E8   LD       I, $4E8         ; Load 4E8 into I
$852    $4966   SNE      V9, #66         ; Skip if V9 != 102
$854    $C916   RND      V9, #16         ; V9 = random & 16
$856    $2B60   CALL     $B60            ; Call subroutine at B60
$858    $38A6   SE       V8, #A6         ; Skip if V8 == 166
$85A    $6F54   LD       VF, #54         ; Load 84 into VF
$85C    $2CE3   CALL     $CE3            ; Call subroutine at CE3
$85E    $48B2   SNE      V8, #B2         ; Skip if V8 != 178
$860    $0D4F   SYS      $D4F            ; System call to D4F
$862    $8196   SHR      V1              ; V1 >>= 1, VF = LSB
$864    $C2DD   RND      V2, #DD         ; V2 = random & DD
$866    $8C3C   UNKNOWN  8C3C            ; Unknown 8xxx instruction
$868    $646B   LD       V4, #6B         ; Load 107 into V4
$86A    $8878   UNKNOWN  8878            ; Unknown 8xxx instruction
$86C    $45D0   SNE      V5, #D0         ; Skip if V5 != 208
$86E    $8C02   AND      VC, V0          ; VC &= V0
$870    $BC45   JP       V0, $C45        ; Jump to V0 + C45
$872    $FCB1   UNKNOWN  FCB1            ; Unknown Fxxx instruction
$874    $18B1   JP       $8B1            ; Jump to 8B1
$876    $54E0   SE       V4, VE          ; Skip if V4 == VE
$878    $51D4   UNKNOWN  $51D4           ; Unknown 5xxx instruction
$87A    $9643   UNKNOWN  $9643           ; Unknown 9xxx instruction
$87C    $B569   JP       V0, $569        ; Jump to V0 + 569
$87E    $32C3   SE       V2, #C3         ; Skip if V2 == 195
$880    $96B7   UNKNOWN  $96B7           ; Unknown 9xxx instruction
$882    $8E87   SUBN     VE, V8          ; VE = V8 - VE, VF = !borrow
$884    $434D   SNE      V3, #4D         ; Skip if V3 != 77
$886    $CAEE   RND      VA, #EE         ; VA = random & EE
$888    $2C60   CALL     $C60            ; Call subroutine at C60
$88A    $D4E8   DRW      V4, VE, #8      ; Draw 8-byte sprite at V4, VE
$88C    $8176   SHR      V1              ; V1 >>= 1, VF = LSB
$88E    $24A2   CALL     $4A2            ; Call subroutine at 4A2
$890    $EF8E   UNKNOWN  $EF8E           ; Unknown Exxx instruction
$892    $8113   XOR      V1, V1          ; V1 ^= V1
$894    $B0F1   JP       V0, $0F1        ; Jump to V0 + 0F1
$896    $66FB   LD       V6, #FB         ; Load 251 into V6
$898    $7156   ADD      V1, #56         ; Add 86 to V1
$89A    $7D3A   ADD      VD, #3A         ; Add 58 to VD
$89C    $8DC6   SHR      VD              ; VD >>= 1, VF = LSB
$89E    $DCBF   DRW      VC, VB, #F      ; Draw 15-byte sprite at VC, VB
$8A0    $BC2C   JP       V0, $C2C        ; Jump to V0 + C2C
$8A2    $6723   LD       V7, #23         ; Load 35 into V7
$8A4    $68FF   LD       V8, #FF         ; Load 255 into V8
$8A6    $0ABF   SYS      $ABF            ; System call to ABF
$8A8    $04D8   SYS      $4D8            ; System call to 4D8
$8AA    $68DD   LD       V8, #DD         ; Load 221 into V8
$8AC    $9297   UNKNOWN  $9297           ; Unknown 9xxx instruction
$8AE    $0E0B   SYS      $E0B            ; System call to E0B
$8B0    $CAF7   RND      VA, #F7         ; VA = random & F7
$8B2    $056F   SYS      $56F            ; System call to 56F
$8B4    $65D1   LD       V5, #D1         ; Load 209 into V5
$8B6    $44B3   SNE      V4, #B3         ; Skip if V4 != 179
$8B8    $6548   LD       V5, #48         ; Load 72 into V5
$8BA    $E801   UNKNOWN  $E801           ; Unknown Exxx instruction
$8BC    $C45E   RND      V4, #5E         ; V4 = random & 5E
$8BE    $9AB0   SNE      VA, VB          ; Skip if VA != VB
$8C0    $650A   LD       V5, #0A         ; Load 10 into V5
$8C2    $7DB3   ADD      VD, #B3         ; Add 179 to VD
$8C4    $38C1   SE       V8, #C1         ; Skip if V8 == 193
$8C6    $8BC8   UNKNOWN  8BC8            ; Unknown 8xxx instruction
$8C8    $2E43   CALL     $E43            ; Call subroutine at E43
$8CA    $9EBB   UNKNOWN  $9EBB           ; Unknown 9xxx instruction
$8CC    $DC3D   DRW      VC, V3, #D      ; Draw 13-byte sprite at VC, V3
$8CE    $65D1   LD       V5, #D1         ; Load 209 into V5
$8D0    $0D6C   SYS      $D6C            ; System call to D6C
$8D2    $8FBC   UNKNOWN  8FBC            ; Unknown 8xxx instruction
$8D4    $816F   UNKNOWN  816F            ; Unknown 8xxx instruction
$8D6    $3D49   SE       VD, #49         ; Skip if VD == 73
$8D8    $8162   AND      V1, V6          ; V1 &= V6
$8DA    $6A2F   LD       VA, #2F         ; Load 47 into VA
$8DC    $FFF9   UNKNOWN  FFF9            ; Unknown Fxxx instruction
$8DE    $1E24   JP       $E24            ; Jump to E24
$8E0    $FE57   UNKNOWN  FE57            ; Unknown Fxxx instruction
$8E2    $2224   CALL     $224            ; Call subroutine at 224
$8E4    $E884   UNKNOWN  $E884           ; Unknown Exxx instruction
$8E6    $5D2C   UNKNOWN  $5D2C           ; Unknown 5xxx instruction
$8E8    $5CF5   UNKNOWN  $5CF5           ; Unknown 5xxx instruction
$8EA    $ABA3   LD       I, $BA3         ; Load BA3 into I
$8EC    $E35E   UNKNOWN  $E35E           ; Unknown Exxx instruction
$8EE    $35A0   SE       V5, #A0         ; Skip if V5 == 160
$8F0    $6C77   LD       VC, #77         ; Load 119 into VC
$8F2    $ED0A   UNKNOWN  $ED0A           ; Unknown Exxx instruction
$8F4    $CF12   RND      VF, #12         ; VF = random & 12
$8F6    $BA94   JP       V0, $A94        ; Jump to V0 + A94
$8F8    $6A48   LD       VA, #48         ; Load 72 into VA
$8FA    $02F2   SYS      $2F2            ; System call to 2F2
$8FC    $5DF2   UNKNOWN  $5DF2           ; Unknown 5xxx instruction
$8FE    $3719   SE       V7, #19         ; Skip if V7 == 25
$900    $FD78   UNKNOWN  FD78            ; Unknown Fxxx instruction
$902    $1FFF   JP       $FFF            ; Jump to FFF
$904    $F6FB   UNKNOWN  F6FB            ; Unknown Fxxx instruction
$906    $6BD7   LD       VB, #D7         ; Load 215 into VB
$908    $4CE6   SNE      VC, #E6         ; Skip if VC != 230
$90A    $A81C   LD       I, $81C         ; Load 81C into I
$90C    $9DFE   UNKNOWN  $9DFE           ; Unknown 9xxx instruction
$90E    $07BE   SYS      $7BE            ; System call to 7BE
$910    $BB76   JP       V0, $B76        ; Jump to V0 + B76
$912    $8482   AND      V4, V8          ; V4 &= V8
$914    $A1D8   LD       I, $1D8         ; Load 1D8 into I
$916    $534F   UNKNOWN  $534F           ; Unknown 5xxx instruction
$918    $1E68   JP       $E68            ; Jump to E68
$91A    $06B5   SYS      $6B5            ; System call to 6B5
$91C    $64F9   LD       V4, #F9         ; Load 249 into V4
$91E    $6305   LD       V3, #05         ; Load 5 into V3
$920    $933A   UNKNOWN  $933A           ; Unknown 9xxx instruction
$922    $B1C7   JP       V0, $1C7        ; Jump to V0 + 1C7
$924    $B18A   JP       V0, $18A        ; Jump to V0 + 18A
$926    $6F3A   LD       VF, #3A         ; Load 58 into VF
$928    $C172   RND      V1, #72         ; V1 = random & 72
$92A    $1732   JP       $732            ; Jump to 732
$92C    $D599   DRW      V5, V9, #9      ; Draw 9-byte sprite at V5, V9
$92E    $971E   UNKNOWN  $971E           ; Unknown 9xxx instruction
$930    $B833   JP       V0, $833        ; Jump to V0 + 833
$932    $2DD4   CALL     $DD4            ; Call subroutine at DD4
$934    $3310   SE       V3, #10         ; Skip if V3 == 16
$936    $1DF4   JP       $DF4            ; Jump to DF4
$938    $5796   UNKNOWN  $5796           ; Unknown 5xxx instruction
$93A    $D595   DRW      V5, V9, #5      ; Draw 5-byte sprite at V5, V9
$93C    $9169   UNKNOWN  $9169           ; Unknown 9xxx instruction
$93E    $5505   UNKNOWN  $5505           ; Unknown 5xxx instruction
$940    $E7CA   UNKNOWN  $E7CA           ; Unknown Exxx instruction
$942    $A6AC   LD       I, $6AC         ; Load 6AC into I
$944    $ED97   UNKNOWN  $ED97           ; Unknown Exxx instruction
$946    $2769   CALL     $769            ; Call subroutine at 769
$948    $2FD5   CALL     $FD5            ; Call subroutine at FD5
$94A    $0F58   SYS      $F58            ; System call to F58
$94C    $3E17   SE       VE, #17         ; Skip if VE == 23
$94E    $3F22   SE       VF, #22         ; Skip if VF == 34
$950    $C15E   RND      V1, #5E         ; V1 = random & 5E
$952    $B923   JP       V0, $923        ; Jump to V0 + 923
$954    $7BD1   ADD      VB, #D1         ; Add 209 to VB
$956    $F1E9   UNKNOWN  F1E9            ; Unknown Fxxx instruction
$958    $7D23   ADD      VD, #23         ; Add 35 to VD
$95A    $FD72   UNKNOWN  FD72            ; Unknown Fxxx instruction
$95C    $2232   CALL     $232            ; Call subroutine at 232
$95E    $4324   SNE      V3, #24         ; Skip if V3 != 36
$960    $F0A3   UNKNOWN  F0A3            ; Unknown Fxxx instruction
$962    $FB39   UNKNOWN  FB39            ; Unknown Fxxx instruction
$964    $62CD   LD       V2, #CD         ; Load 205 into V2
$966    $AABE   LD       I, $ABE         ; Load ABE into I
$968    $BB42   JP       V0, $B42        ; Jump to V0 + B42
$96A    $61FA   LD       V1, #FA         ; Load 250 into V1
$96C    $04C1   SYS      $4C1            ; System call to 4C1
$96E    $82C2   AND      V2, VC          ; V2 &= VC
$970    $F85A   UNKNOWN  F85A            ; Unknown Fxxx instruction
$972    $4705   SNE      V7, #05         ; Skip if V7 != 5
$974    $961E   UNKNOWN  $961E           ; Unknown 9xxx instruction
$976    $6FF7   LD       VF, #F7         ; Load 247 into VF
$978    $B50B   JP       V0, $50B        ; Jump to V0 + 50B
$97A    $441F   SNE      V4, #1F         ; Skip if V4 != 31
$97C    $E099   UNKNOWN  $E099           ; Unknown Exxx instruction
$97E    $258B   CALL     $58B            ; Call subroutine at 58B
$980    $277B   CALL     $77B            ; Call subroutine at 77B
$982    $B757   JP       V0, $757        ; Jump to V0 + 757
$984    $1094   JP       $094            ; Jump to 094
$986    $60D9   LD       V0, #D9         ; Load 217 into V0
$988    $F21B   UNKNOWN  F21B            ; Unknown Fxxx instruction
$98A    $F542   UNKNOWN  F542            ; Unknown Fxxx instruction
$98C    $A017   LD       I, $017         ; Load 017 into I
$98E    $96DE   UNKNOWN  $96DE           ; Unknown 9xxx instruction
$990    $BDF0   JP       V0, $DF0        ; Jump to V0 + DF0
$992    $8E5E   SHL      VE              ; VE <<= 1, VF = MSB
$994    $3546   SE       V5, #46         ; Skip if V5 == 70
$996    $6B78   LD       VB, #78         ; Load 120 into VB
$998    $B59D   JP       V0, $59D        ; Jump to V0 + 59D
$99A    $B5DE   JP       V0, $5DE        ; Jump to V0 + 5DE
$99C    $C2C8   RND      V2, #C8         ; V2 = random & C8
$99E    $9646   UNKNOWN  $9646           ; Unknown 9xxx instruction
$9A0    $BC4B   JP       V0, $C4B        ; Jump to V0 + C4B
$9A2    $01EE   SYS      $1EE            ; System call to 1EE
$9A4    $A89A   LD       I, $89A         ; Load 89A into I
$9A6    $C606   RND      V6, #06         ; V6 = random & 06
$9A8    $82CA   UNKNOWN  82CA            ; Unknown 8xxx instruction
$9AA    $ECFF   UNKNOWN  $ECFF           ; Unknown Exxx instruction
$9AC    $ECEE   UNKNOWN  $ECEE           ; Unknown Exxx instruction
$9AE    $E777   UNKNOWN  $E777           ; Unknown Exxx instruction
$9B0    $30BF   SE       V0, #BF         ; Skip if V0 == 191
$9B2    $57EA   UNKNOWN  $57EA           ; Unknown 5xxx instruction
$9B4    $0C00   SYS      $C00            ; System call to C00
$9B6    $FB17   UNKNOWN  FB17            ; Unknown Fxxx instruction
$9B8    $502A   UNKNOWN  $502A           ; Unknown 5xxx instruction
$9BA    $F8B5   UNKNOWN  F8B5            ; Unknown Fxxx instruction
$9BC    $EA0B   UNKNOWN  $EA0B           ; Unknown Exxx instruction
$9BE    $B7BE   JP       V0, $7BE        ; Jump to V0 + 7BE
$9C0    $7835   ADD      V8, #35         ; Add 53 to V8
$9C2    $C96D   RND      V9, #6D         ; V9 = random & 6D
$9C4    $010E   SYS      $10E            ; System call to 10E
$9C6    $7109   ADD      V1, #09         ; Add 9 to V1
$9C8    $0AB4   SYS      $AB4            ; System call to AB4
$9CA    $F590   UNKNOWN  F590            ; Unknown Fxxx instruction
$9CC    $6C75   LD       VC, #75         ; Load 117 into VC
$9CE    $AE59   LD       I, $E59         ; Load E59 into I
$9D0    $A39C   LD       I, $39C         ; Load 39C into I
$9D2    $DBDA   DRW      VB, VD, #A      ; Draw 10-byte sprite at VB, VD
$9D4    $79B2   ADD      V9, #B2         ; Add 178 to V9
$9D6    $66B1   LD       V6, #B1         ; Load 177 into V6
$9D8    $E3E9   UNKNOWN  $E3E9           ; Unknown Exxx instruction
$9DA    $2C0A   CALL     $C0A            ; Call subroutine at C0A
$9DC    $A57E   LD       I, $57E         ; Load 57E into I
$9DE    $7C1F   ADD      VC, #1F         ; Add 31 to VC
$9E0    $FF8B   UNKNOWN  FF8B            ; Unknown Fxxx instruction
$9E2    $C2FF   RND      V2, #FF         ; V2 = random & FF
$9E4    $BD76   JP       V0, $D76        ; Jump to V0 + D76
$9E6    $EA95   UNKNOWN  $EA95           ; Unknown Exxx instruction
$9E8    $C32E   RND      V3, #2E         ; V3 = random & 2E
$9EA    $67D5   LD       V7, #D5         ; Load 213 into V7
$9EC    $DEF4   DRW      VE, VF, #4      ; Draw 4-byte sprite at VE, VF
$9EE    $FC80   UNKNOWN  FC80            ; Unknown Fxxx instruction
$9F0    $6F5B   LD       VF, #5B         ; Load 91 into VF
$9F2    $BB1E   JP       V0, $B1E        ; Jump to V0 + B1E
$9F4    $C623   RND      V6, #23         ; V6 = random & 23
$9F6    $A0A3   LD       I, $0A3         ; Load 0A3 into I
$9F8    $83C2   AND      V3, VC          ; V3 &= VC
$9FA    $CB75   RND      VB, #75         ; VB = random & 75
$9FC    $798E   ADD      V9, #8E         ; Add 142 to V9
$9FE    $D72E   DRW      V7, V2, #E      ; Draw 14-byte sprite at V7, V2
$A00    $7DC0   ADD      VD, #C0         ; Add 192 to VD
$A02    $A41D   LD       I, $41D         ; Load 41D into I
$A04    $D6DC   DRW      V6, VD, #C      ; Draw 12-byte sprite at V6, VD
$A06    $C0FC   RND      V0, #FC         ; V0 = random & FC
$A08    $0E0D   SYS      $E0D            ; System call to E0D
$A0A    $616C   LD       V1, #6C         ; Load 108 into V1
$A0C    $1F25   JP       $F25            ; Jump to F25
$A0E    $C137   RND      V1, #37         ; V1 = random & 37
$A10    $61A8   LD       V1, #A8         ; Load 168 into V1
$A12    $A4EF   LD       I, $4EF         ; Load 4EF into I
$A14    $7F91   ADD      VF, #91         ; Add 145 to VF
$A16    $056F   SYS      $56F            ; System call to 56F
$A18    $1C93   JP       $C93            ; Jump to C93
$A1A    $1F64   JP       $F64            ; Jump to F64
$A1C    $B359   JP       V0, $359        ; Jump to V0 + 359
$A1E    $E77F   UNKNOWN  $E77F           ; Unknown Exxx instruction
$A20    $A4AE   LD       I, $4AE         ; Load 4AE into I
$A22    $266D   CALL     $66D            ; Call subroutine at 66D
$A24    $4FD6   SNE      VF, #D6         ; Skip if VF != 214
$A26    $1519   JP       $519            ; Jump to 519
$A28    $9E2B   UNKNOWN  $9E2B           ; Unknown 9xxx instruction
$A2A    $127A   JP       $27A            ; Jump to 27A
$A2C    $525D   UNKNOWN  $525D           ; Unknown 5xxx instruction
$A2E    $1DA6   JP       $DA6            ; Jump to DA6
$A30    $9713   UNKNOWN  $9713           ; Unknown 9xxx instruction
$A32    $669E   LD       V6, #9E         ; Load 158 into V6
$A34    $6C26   LD       VC, #26         ; Load 38 into VC
$A36    $B551   JP       V0, $551        ; Jump to V0 + 551
$A38    $CE88   RND      VE, #88         ; VE = random & 88
$A3A    $4297   SNE      V2, #97         ; Skip if V2 != 151
$A3C    $6C26   LD       VC, #26         ; Load 38 into VC
$A3E    $D33F   DRW      V3, V3, #F      ; Draw 15-byte sprite at V3, V3
$A40    $87BB   UNKNOWN  87BB            ; Unknown 8xxx instruction
$A42    $09CA   SYS      $9CA            ; System call to 9CA
$A44    $C24D   RND      V2, #4D         ; V2 = random & 4D
$A46    $58B8   UNKNOWN  $58B8           ; Unknown 5xxx instruction
$A48    $D672   DRW      V6, V7, #2      ; Draw 2-byte sprite at V6, V7
$A4A    $5B0D   UNKNOWN  $5B0D           ; Unknown 5xxx instruction
$A4C    $DB1A   DRW      VB, V1, #A      ; Draw 10-byte sprite at VB, V1
$A4E    $BA6A   JP       V0, $A6A        ; Jump to V0 + A6A
$A50    $E54D   UNKNOWN  $E54D           ; Unknown Exxx instruction
$A52    $F353   UNKNOWN  F353            ; Unknown Fxxx instruction
$A54    $8DF7   SUBN     VD, VF          ; VD = VF - VD, VF = !borrow
$A56    $BF1A   JP       V0, $F1A        ; Jump to V0 + F1A
$A58    $DAC5   DRW      VA, VC, #5      ; Draw 5-byte sprite at VA, VC
$A5A    $0C2B   SYS      $C2B            ; System call to C2B
$A5C    $09B5   SYS      $9B5            ; System call to 9B5
$A5E    $0259   SYS      $259            ; System call to 259
$A60    $2ED5   CALL     $ED5            ; Call subroutine at ED5
$A62    $595A   UNKNOWN  $595A           ; Unknown 5xxx instruction
$A64    $33A0   SE       V3, #A0         ; Skip if V3 == 160
$A66    $B57E   JP       V0, $57E        ; Jump to V0 + 57E
$A68    $FF6C   UNKNOWN  FF6C            ; Unknown Fxxx instruction
$A6A    $96BE   UNKNOWN  $96BE           ; Unknown 9xxx instruction
$A6C    $0E5F   SYS      $E5F            ; System call to E5F
$A6E    $9E8B   UNKNOWN  $9E8B           ; Unknown 9xxx instruction
$A70    $D614   DRW      V6, V1, #4      ; Draw 4-byte sprite at V6, V1
$A72    $BD7B   JP       V0, $D7B        ; Jump to V0 + D7B
$A74    $2DA2   CALL     $DA2            ; Call subroutine at DA2
$A76    $4922   SNE      V9, #22         ; Skip if V9 != 34
$A78    $585F   UNKNOWN  $585F           ; Unknown 5xxx instruction
$A7A    $80F0   LD       V0, VF          ; V0 = VF
$A7C    $CA1A   RND      VA, #1A         ; VA = random & 1A
$A7E    $5AA8   UNKNOWN  $5AA8           ; Unknown 5xxx instruction
$A80    $8B70   LD       VB, V7          ; VB = V7
$A82    $0BED   SYS      $BED            ; System call to BED
$A84    $0688   SYS      $688            ; System call to 688
$A86    $FB7B   UNKNOWN  FB7B            ; Unknown Fxxx instruction
$A88    $A546   LD       I, $546         ; Load 546 into I
$A8A    $0BD7   SYS      $BD7            ; System call to BD7
$A8C    $DAB4   DRW      VA, VB, #4      ; Draw 4-byte sprite at VA, VB
$A8E    $281E   CALL     $81E            ; Call subroutine at 81E
$A90    $2047   CALL     $047            ; Call subroutine at 047
$A92    $9731   UNKNOWN  $9731           ; Unknown 9xxx instruction
$A94    $50BB   UNKNOWN  $50BB           ; Unknown 5xxx instruction
$A96    $395E   SE       V9, #5E         ; Skip if V9 == 94
$A98    $D627   DRW      V6, V2, #7      ; Draw 7-byte sprite at V6, V2
$A9A    $7981   ADD      V9, #81         ; Add 129 to V9
$A9C    $46EA   SNE      V6, #EA         ; Skip if V6 != 234
$A9E    $4830   SNE      V8, #30         ; Skip if V8 != 48
$AA0    $35D7   SE       V5, #D7         ; Skip if V5 == 215
$AA2    $30E4   SE       V0, #E4         ; Skip if V0 == 228
$AA4    $4271   SNE      V2, #71         ; Skip if V2 != 113
$AA6    $7A4A   ADD      VA, #4A         ; Add 74 to VA
$AA8    $3496   SE       V4, #96         ; Skip if V4 == 150
$AAA    $2E26   CALL     $E26            ; Call subroutine at E26
$AAC    $384B   SE       V8, #4B         ; Skip if V8 == 75
$AAE    $3BA2   SE       VB, #A2         ; Skip if VB == 162
$AB0    $D3B0   DRW      V3, VB, #0      ; Draw 0-byte sprite at V3, VB
$AB2    $5A6F   UNKNOWN  $5A6F           ; Unknown 5xxx instruction
$AB4    $CFA0   RND      VF, #A0         ; VF = random & A0
$AB6    $62AF   LD       V2, #AF         ; Load 175 into V2
$AB8    $6ACF   LD       VA, #CF         ; Load 207 into VA
$ABA    $E890   UNKNOWN  $E890           ; Unknown Exxx instruction
$ABC    $B4AF   JP       V0, $4AF        ; Jump to V0 + 4AF
$ABE    $FF22   UNKNOWN  FF22            ; Unknown Fxxx instruction
$AC0    $CD03   RND      VD, #03         ; VD = random & 03
$AC2    $76F3   ADD      V6, #F3         ; Add 243 to V6
$AC4    $65F1   LD       V5, #F1         ; Load 241 into V5
$AC6    $46A2   SNE      V6, #A2         ; Skip if V6 != 162
$AC8    $72D2   ADD      V2, #D2         ; Add 210 to V2
$ACA    $D869   DRW      V8, V6, #9      ; Draw 9-byte sprite at V8, V6
$ACC    $F959   UNKNOWN  F959            ; Unknown Fxxx instruction
$ACE    $BBBC   JP       V0, $BBC        ; Jump to V0 + BBC
$AD0    $8369   UNKNOWN  8369            ; Unknown 8xxx instruction
$AD2    $2245   CALL     $245            ; Call subroutine at 245
$AD4    $A507   LD       I, $507         ; Load 507 into I
$AD6    $2AE5   CALL     $AE5            ; Call subroutine at AE5
$AD8    $813D   UNKNOWN  813D            ; Unknown 8xxx instruction
$ADA    $17FC   JP       $7FC            ; Jump to 7FC
$ADC    $1BA8   JP       $BA8            ; Jump to BA8
$ADE    $2714   CALL     $714            ; Call subroutine at 714
$AE0    $D692   DRW      V6, V9, #2      ; Draw 2-byte sprite at V6, V9
$AE2    $5932   UNKNOWN  $5932           ; Unknown 5xxx instruction
$AE4    $2BC0   CALL     $BC0            ; Call subroutine at BC0
$AE6    $3CE6   SE       VC, #E6         ; Skip if VC == 230
$AE8    $A132   LD       I, $132         ; Load 132 into I
$AEA    $BD89   JP       V0, $D89        ; Jump to V0 + D89
$AEC    $4152   SNE      V1, #52         ; Skip if V1 != 82
$AEE    $FA1E   ADD      I, VA           ; I += VA
$AF0    $6F82   LD       VF, #82         ; Load 130 into VF
$AF2    $694A   LD       V9, #4A         ; Load 74 into V9
$AF4    $E532   UNKNOWN  $E532           ; Unknown Exxx instruction
$AF6    $86A4   ADD      V6, VA          ; V6 += VA, VF = carry
$AF8    $89F6   SHR      V9              ; V9 >>= 1, VF = LSB
$AFA    $C467   RND      V4, #67         ; V4 = random & 67
$AFC    $D4A5   DRW      V4, VA, #5      ; Draw 5-byte sprite at V4, VA
$AFE    $5F4D   UNKNOWN  $5F4D           ; Unknown 5xxx instruction
$B00    $713A   ADD      V1, #3A         ; Add 58 to V1
$B02    $3990   SE       V9, #90         ; Skip if V9 == 144
$B04    $1BF6   JP       $BF6            ; Jump to BF6
$B06    $6FC1   LD       VF, #C1         ; Load 193 into VF
$B08    $C1F1   RND      V1, #F1         ; V1 = random & F1
$B0A    $ABFA   LD       I, $BFA         ; Load BFA into I
$B0C    $BEE4   JP       V0, $EE4        ; Jump to V0 + EE4
$B0E    $E86D   UNKNOWN  $E86D           ; Unknown Exxx instruction
$B10    $C101   RND      V1, #01         ; V1 = random & 01
$B12    $A108   LD       I, $108         ; Load 108 into I
$B14    $4862   SNE      V8, #62         ; Skip if V8 != 98
$B16    $B8B6   JP       V0, $8B6        ; Jump to V0 + 8B6
$B18    $4BE5   SNE      VB, #E5         ; Skip if VB != 229
$B1A    $6BF9   LD       VB, #F9         ; Load 249 into VB
$B1C    $02F3   SYS      $2F3            ; System call to 2F3
$B1E    $1017   JP       $017            ; Jump to 017
$B20    $0E18   SYS      $E18            ; System call to E18
$B22    $8E06   SHR      VE              ; VE >>= 1, VF = LSB
$B24    $9E79   UNKNOWN  $9E79           ; Unknown 9xxx instruction
$B26    $46D4   SNE      V6, #D4         ; Skip if V6 != 212
$B28    $6FFC   LD       VF, #FC         ; Load 252 into VF
$B2A    $A694   LD       I, $694         ; Load 694 into I
$B2C    $A709   LD       I, $709         ; Load 709 into I
$B2E    $CF37   RND      VF, #37         ; VF = random & 37
$B30    $00E4   SYS      $0E4            ; System call to 0E4
$B32    $3C0D   SE       VC, #0D         ; Skip if VC == 13
$B34    $32E8   SE       V2, #E8         ; Skip if V2 == 232
$B36    $D046   DRW      V0, V4, #6      ; Draw 6-byte sprite at V0, V4
$B38    $9697   UNKNOWN  $9697           ; Unknown 9xxx instruction
$B3A    $5ECD   UNKNOWN  $5ECD           ; Unknown 5xxx instruction
$B3C    $E6B9   UNKNOWN  $E6B9           ; Unknown Exxx instruction
$B3E    $20FE   CALL     $0FE            ; Call subroutine at 0FE
$B40    $155B   JP       $55B            ; Jump to 55B
$B42    $CA5B   RND      VA, #5B         ; VA = random & 5B
$B44    $17D5   JP       $7D5            ; Jump to 7D5
$B46    $51BE   UNKNOWN  $51BE           ; Unknown 5xxx instruction
$B48    $746C   ADD      V4, #6C         ; Add 108 to V4
$B4A    $2816   CALL     $816            ; Call subroutine at 816
$B4C    $98FB   UNKNOWN  $98FB           ; Unknown 9xxx instruction
$B4E    $24C5   CALL     $4C5            ; Call subroutine at 4C5
$B50    $23AC   CALL     $3AC            ; Call subroutine at 3AC
$B52    $C8C3   RND      V8, #C3         ; V8 = random & C3
$B54    $85D4   ADD      V5, VD          ; V5 += VD, VF = carry
$B56    $9FD4   UNKNOWN  $9FD4           ; Unknown 9xxx instruction
$B58    $9B73   UNKNOWN  $9B73           ; Unknown 9xxx instruction
$B5A    $CBCE   RND      VB, #CE         ; VB = random & CE
$B5C    $83BE   SHL      V3              ; V3 <<= 1, VF = MSB
$B5E    $CC13   RND      VC, #13         ; VC = random & 13
$B60    $20A4   CALL     $0A4            ; Call subroutine at 0A4
$B62    $4411   SNE      V4, #11         ; Skip if V4 != 17
$B64    $4E0C   SNE      VE, #0C         ; Skip if VE != 12
$B66    $3DB2   SE       VD, #B2         ; Skip if VD == 178
$B68    $5B6C   UNKNOWN  $5B6C           ; Unknown 5xxx instruction
$B6A    $8EB2   AND      VE, VB          ; VE &= VB
$B6C    $D852   DRW      V8, V5, #2      ; Draw 2-byte sprite at V8, V5
$B6E    $5595   UNKNOWN  $5595           ; Unknown 5xxx instruction
$B70    $68BD   LD       V8, #BD         ; Load 189 into V8
$B72    $2C66   CALL     $C66            ; Call subroutine at C66
$B74    $4453   SNE      V4, #53         ; Skip if V4 != 83
$B76    $8B66   SHR      VB              ; VB >>= 1, VF = LSB
$B78    $B7B6   JP       V0, $7B6        ; Jump to V0 + 7B6
$B7A    $9A20   SNE      VA, V2          ; Skip if VA != V2
$B7C    $CB15   RND      VB, #15         ; VB = random & 15
$B7E    $582A   UNKNOWN  $582A           ; Unknown 5xxx instruction
$B80    $EADF   UNKNOWN  $EADF           ; Unknown Exxx instruction
$B82    $BBB8   JP       V0, $BB8        ; Jump to V0 + BB8
$B84    $E898   UNKNOWN  $E898           ; Unknown Exxx instruction
$B86    $9FB1   UNKNOWN  $9FB1           ; Unknown 9xxx instruction
$B88    $A442   LD       I, $442         ; Load 442 into I
$B8A    $C429   RND      V4, #29         ; V4 = random & 29
$B8C    $CC14   RND      VC, #14         ; VC = random & 14
$B8E    $937E   UNKNOWN  $937E           ; Unknown 9xxx instruction
$B90    $D28C   DRW      V2, V8, #C      ; Draw 12-byte sprite at V2, V8
$B92    $472F   SNE      V7, #2F         ; Skip if V7 != 47
$B94    $EE60   UNKNOWN  $EE60           ; Unknown Exxx instruction
$B96    $770C   ADD      V7, #0C         ; Add 12 to V7
$B98    $2EFC   CALL     $EFC            ; Call subroutine at EFC
$B9A    $381B   SE       V8, #1B         ; Skip if V8 == 27
$B9C    $8A98   UNKNOWN  8A98            ; Unknown 8xxx instruction
$B9E    $9620   SNE      V6, V2          ; Skip if V6 != V2
$BA0    $5221   UNKNOWN  $5221           ; Unknown 5xxx instruction
$BA2    $FEED   UNKNOWN  FEED            ; Unknown Fxxx instruction
$BA4    $9189   UNKNOWN  $9189           ; Unknown 9xxx instruction
$BA6    $C8EA   RND      V8, #EA         ; V8 = random & EA
$BA8    $A4B0   LD       I, $4B0         ; Load 4B0 into I
$BAA    $5F69   UNKNOWN  $5F69           ; Unknown 5xxx instruction
$BAC    $181B   JP       $81B            ; Jump to 81B
$BAE    $0CE4   SYS      $CE4            ; System call to CE4
$BB0    $4FFD   SNE      VF, #FD         ; Skip if VF != 253
$BB2    $DC17   DRW      VC, V1, #7      ; Draw 7-byte sprite at VC, V1
$BB4    $C16A   RND      V1, #6A         ; V1 = random & 6A
$BB6    $E217   UNKNOWN  $E217           ; Unknown Exxx instruction
$BB8    $F3A8   UNKNOWN  F3A8            ; Unknown Fxxx instruction
$BBA    $6F58   LD       VF, #58         ; Load 88 into VF
$BBC    $19EE   JP       $9EE            ; Jump to 9EE
$BBE    $C2CA   RND      V2, #CA         ; V2 = random & CA
$BC0    $75B5   ADD      V5, #B5         ; Add 181 to V5
$BC2    $A42E   LD       I, $42E         ; Load 42E into I
$BC4    $B215   JP       V0, $215        ; Jump to V0 + 215
$BC6    $940A   UNKNOWN  $940A           ; Unknown 9xxx instruction
$BC8    $6C93   LD       VC, #93         ; Load 147 into VC
$BCA    $1F4F   JP       $F4F            ; Jump to F4F
$BCC    $A843   LD       I, $843         ; Load 843 into I
$BCE    $6284   LD       V2, #84         ; Load 132 into V2
$BD0    $5BE8   UNKNOWN  $5BE8           ; Unknown 5xxx instruction
$BD2    $86F1   OR       V6, VF          ; V6 |= VF
$BD4    $21E3   CALL     $1E3            ; Call subroutine at 1E3
$BD6    $5C3C   UNKNOWN  $5C3C           ; Unknown 5xxx instruction
$BD8    $53E6   UNKNOWN  $53E6           ; Unknown 5xxx instruction
$BDA    $1039   JP       $039            ; Jump to 039
$BDC    $666A   LD       V6, #6A         ; Load 106 into V6
$BDE    $B662   JP       V0, $662        ; Jump to V0 + 662
$BE0    $743F   ADD      V4, #3F         ; Add 63 to V4
$BE2    $3B43   SE       VB, #43         ; Skip if VB == 67
$BE4    $5C5C   UNKNOWN  $5C5C           ; Unknown 5xxx instruction
$BE6    $BDBD   JP       V0, $DBD        ; Jump to V0 + DBD
$BE8    $8DC0   LD       VD, VC          ; VD = VC
$BEA    $2409   CALL     $409            ; Call subroutine at 409
$BEC    $7D28   ADD      VD, #28         ; Add 40 to VD
$BEE    $00F1   SYS      $0F1            ; System call to 0F1
$BF0    $1F28   JP       $F28            ; Jump to F28
$BF2    $FA2D   UNKNOWN  FA2D            ; Unknown Fxxx instruction
$BF4    $BC86   JP       V0, $C86        ; Jump to V0 + C86
$BF6    $CFC5   RND      VF, #C5         ; VF = random & C5
$BF8    $2403   CALL     $403            ; Call subroutine at 403
$BFA    $4D19   SNE      VD, #19         ; Skip if VD != 25
$BFC    $2BC8   CALL     $BC8            ; Call subroutine at BC8
$BFE    $9F2E   UNKNOWN  $9F2E           ; Unknown 9xxx instruction
$C00    $D6D4   DRW      V6, VD, #4      ; Draw 4-byte sprite at V6, VD
$C02    $C6C0   RND      V6, #C0         ; V6 = random & C0
$C04    $8A5A   UNKNOWN  8A5A            ; Unknown 8xxx instruction
$C06    $B916   JP       V0, $916        ; Jump to V0 + 916
$C08    $880B   UNKNOWN  880B            ; Unknown 8xxx instruction
$C0A    $F89C   UNKNOWN  F89C            ; Unknown Fxxx instruction
$C0C    $FD14   UNKNOWN  FD14            ; Unknown Fxxx instruction
$C0E    $F7A0   UNKNOWN  F7A0            ; Unknown Fxxx instruction
$C10    $8434   ADD      V4, V3          ; V4 += V3, VF = carry
$C12    $A7BE   LD       I, $7BE         ; Load 7BE into I
$C14    $10A2   JP       $0A2            ; Jump to 0A2
$C16    $7E9D   ADD      VE, #9D         ; Add 157 to VE
$C18    $A031   LD       I, $031         ; Load 031 into I
$C1A    $037C   SYS      $37C            ; System call to 37C
$C1C    $DAF4   DRW      VA, VF, #4      ; Draw 4-byte sprite at VA, VF
$C1E    $94B5   UNKNOWN  $94B5           ; Unknown 9xxx instruction
$C20    $A155   LD       I, $155         ; Load 155 into I
$C22    $D0C0   DRW      V0, VC, #0      ; Draw 0-byte sprite at V0, VC
$C24    $9907   UNKNOWN  $9907           ; Unknown 9xxx instruction
$C26    $7BA2   ADD      VB, #A2         ; Add 162 to VB
$C28    $221E   CALL     $21E            ; Call subroutine at 21E
$C2A    $77FA   ADD      V7, #FA         ; Add 250 to V7
$C2C    $8068   UNKNOWN  8068            ; Unknown 8xxx instruction
$C2E    $5585   UNKNOWN  $5585           ; Unknown 5xxx instruction
$C30    $CA9F   RND      VA, #9F         ; VA = random & 9F
$C32    $FB97   UNKNOWN  FB97            ; Unknown Fxxx instruction
$C34    $9654   UNKNOWN  $9654           ; Unknown 9xxx instruction
$C36    $BAE5   JP       V0, $AE5        ; Jump to V0 + AE5
$C38    $77E0   ADD      V7, #E0         ; Add 224 to V7
$C3A    $D162   DRW      V1, V6, #2      ; Draw 2-byte sprite at V1, V6
$C3C    $9BF1   UNKNOWN  $9BF1           ; Unknown 9xxx instruction
$C3E    $7EC4   ADD      VE, #C4         ; Add 196 to VE
$C40    $CD79   RND      VD, #79         ; VD = random & 79
$C42    $472F   SNE      V7, #2F         ; Skip if V7 != 47
$C44    $5E64   UNKNOWN  $5E64           ; Unknown 5xxx instruction
$C46    $B015   JP       V0, $015        ; Jump to V0 + 015
$C48    $A6EB   LD       I, $6EB         ; Load 6EB into I
$C4A    $8886   SHR      V8              ; V8 >>= 1, VF = LSB
$C4C    $7835   ADD      V8, #35         ; Add 53 to V8
$C4E    $EDBC   UNKNOWN  $EDBC           ; Unknown Exxx instruction
$C50    $C8DB   RND      V8, #DB         ; V8 = random & DB
$C52    $EBCF   UNKNOWN  $EBCF           ; Unknown Exxx instruction
$C54    $B816   JP       V0, $816        ; Jump to V0 + 816
$C56    $D824   DRW      V8, V2, #4      ; Draw 4-byte sprite at V8, V2
$C58    $54EE   UNKNOWN  $54EE           ; Unknown 5xxx instruction
$C5A    $AAB6   LD       I, $AB6         ; Load AB6 into I
$C5C    $4681   SNE      V6, #81         ; Skip if V6 != 129
$C5E    $4964   SNE      V9, #64         ; Skip if V9 != 100
$C60    $00E3   SYS      $0E3            ; System call to 0E3
$C62    $EBFE   UNKNOWN  $EBFE           ; Unknown Exxx instruction
$C64    $8BF4   ADD      VB, VF          ; VB += VF, VF = carry
$C66    $78A8   ADD      V8, #A8         ; Add 168 to V8
$C68    $7373   ADD      V3, #73         ; Add 115 to V3
$C6A    $42A1   SNE      V2, #A1         ; Skip if V2 != 161
$C6C    $7E04   ADD      VE, #04         ; Add 4 to VE
$C6E    $418E   SNE      V1, #8E         ; Skip if V1 != 142
$C70    $9337   UNKNOWN  $9337           ; Unknown 9xxx instruction
$C72    $59CF   UNKNOWN  $59CF           ; Unknown 5xxx instruction
$C74    $C7BB   RND      V7, #BB         ; V7 = random & BB
$C76    $1969   JP       $969            ; Jump to 969
$C78    $9FBB   UNKNOWN  $9FBB           ; Unknown 9xxx instruction
$C7A    $8920   LD       V9, V2          ; V9 = V2
$C7C    $1507   JP       $507            ; Jump to 507
$C7E    $F4F6   UNKNOWN  F4F6            ; Unknown Fxxx instruction
$C80    $99DA   UNKNOWN  $99DA           ; Unknown 9xxx instruction
$C82    $B3F7   JP       V0, $3F7        ; Jump to V0 + 3F7
$C84    $27A3   CALL     $7A3            ; Call subroutine at 7A3
$C86    $5104   UNKNOWN  $5104           ; Unknown 5xxx instruction
$C88    $A5D7   LD       I, $5D7         ; Load 5D7 into I
$C8A    $2374   CALL     $374            ; Call subroutine at 374
$C8C    $DD16   DRW      VD, V1, #6      ; Draw 6-byte sprite at VD, V1
$C8E    $043B   SYS      $43B            ; System call to 43B
$C90    $F37F   UNKNOWN  F37F            ; Unknown Fxxx instruction
$C92    $91E6   UNKNOWN  $91E6           ; Unknown 9xxx instruction
$C94    $C62B   RND      V6, #2B         ; V6 = random & 2B
$C96    $274D   CALL     $74D            ; Call subroutine at 74D
$C98    $CF32   RND      VF, #32         ; VF = random & 32
$C9A    $C54E   RND      V5, #4E         ; V5 = random & 4E
$C9C    $AC09   LD       I, $C09         ; Load C09 into I
$C9E    $6D7D   LD       VD, #7D         ; Load 125 into VD
$CA0    $5A6A   UNKNOWN  $5A6A           ; Unknown 5xxx instruction
$CA2    $B1E5   JP       V0, $1E5        ; Jump to V0 + 1E5
$CA4    $1562   JP       $562            ; Jump to 562
$CA6    $E325   UNKNOWN  $E325           ; Unknown Exxx instruction
$CA8    $8DBD   UNKNOWN  8DBD            ; Unknown 8xxx instruction
$CAA    $7A3D   ADD      VA, #3D         ; Add 61 to VA
$CAC    $A593   LD       I, $593         ; Load 593 into I
$CAE    $B616   JP       V0, $616        ; Jump to V0 + 616
$CB0    $3B63   SE       VB, #63         ; Skip if VB == 99
$CB2    $ABF8   LD       I, $BF8         ; Load BF8 into I
$CB4    $B11E   JP       V0, $11E        ; Jump to V0 + 11E
$CB6    $9E4B   UNKNOWN  $9E4B           ; Unknown 9xxx instruction
$CB8    $3986   SE       V9, #86         ; Skip if V9 == 134
$CBA    $F2E3   UNKNOWN  F2E3            ; Unknown Fxxx instruction
$CBC    $5C5A   UNKNOWN  $5C5A           ; Unknown 5xxx instruction
$CBE    $0B60   SYS      $B60            ; System call to B60
$CC0    $1412   JP       $412            ; Jump to 412
$CC2    $2FA7   CALL     $FA7            ; Call subroutine at FA7
$CC4    $F039   UNKNOWN  F039            ; Unknown Fxxx instruction
$CC6    $E039   UNKNOWN  $E039           ; Unknown Exxx instruction
$CC8    $DE86   DRW      VE, V8, #6      ; Draw 6-byte sprite at VE, V8
$CCA    $05D9   SYS      $5D9            ; System call to 5D9
$CCC    $105E   JP       $05E            ; Jump to 05E
$CCE    $A8F1   LD       I, $8F1         ; Load 8F1 into I
$CD0    $5E82   UNKNOWN  $5E82           ; Unknown 5xxx instruction
$CD2    $2976   CALL     $976            ; Call subroutine at 976
$CD4    $32C0   SE       V2, #C0         ; Skip if V2 == 192
$CD6    $225A   CALL     $25A            ; Call subroutine at 25A
$CD8    $F5AC   UNKNOWN  F5AC            ; Unknown Fxxx instruction
$CDA    $69F8   LD       V9, #F8         ; Load 248 into V9
$CDC    $0716   SYS      $716            ; System call to 716
$CDE    $A735   LD       I, $735         ; Load 735 into I
$CE0    $51D7   UNKNOWN  $51D7           ; Unknown 5xxx instruction
$CE2    $792D   ADD      V9, #2D         ; Add 45 to V9
$CE4    $A2CB   LD       I, $2CB         ; Load 2CB into I
$CE6    $CBC7   RND      VB, #C7         ; VB = random & C7
$CE8    $5F6F   UNKNOWN  $5F6F           ; Unknown 5xxx instruction
$CEA    $B408   JP       V0, $408        ; Jump to V0 + 408
$CEC    $C8AC   RND      V8, #AC         ; V8 = random & AC
$CEE    $182E   JP       $82E            ; Jump to 82E
$CF0    $D89C   DRW      V8, V9, #C      ; Draw 12-byte sprite at V8, V9
$CF2    $3E97   SE       VE, #97         ; Skip if VE == 151
$CF4    $676E   LD       V7, #6E         ; Load 110 into V7
$CF6    $B555   JP       V0, $555        ; Jump to V0 + 555
$CF8    $7D4F   ADD      VD, #4F         ; Add 79 to VD
$CFA    $B538   JP       V0, $538        ; Jump to V0 + 538
$CFC    $FB9D   UNKNOWN  FB9D            ; Unknown Fxxx instruction
$CFE    $82CA   UNKNOWN  82CA            ; Unknown 8xxx instruction
$D00    $F8F7   UNKNOWN  F8F7            ; Unknown Fxxx instruction
$D02    $9805   UNKNOWN  $9805           ; Unknown 9xxx instruction
$D04    $E717   UNKNOWN  $E717           ; Unknown Exxx instruction
$D06    $5EE7   UNKNOWN  $5EE7           ; Unknown 5xxx instruction
$D08    $2381   CALL     $381            ; Call subroutine at 381
$D0A    $B04F   JP       V0, $04F        ; Jump to V0 + 04F
$D0C    $D0B1   DRW      V0, VB, #1      ; Draw 1-byte sprite at V0, VB
$D0E    $B49B   JP       V0, $49B        ; Jump to V0 + 49B
$D10    $09CE   SYS      $9CE            ; System call to 9CE
$D12    $8AED   UNKNOWN  8AED            ; Unknown 8xxx instruction
$D14    $52A8   UNKNOWN  $52A8           ; Unknown 5xxx instruction
$D16    $D067   DRW      V0, V6, #7      ; Draw 7-byte sprite at V0, V6
$D18    $F2C2   UNKNOWN  F2C2            ; Unknown Fxxx instruction
$D1A    $6C36   LD       VC, #36         ; Load 54 into VC
$D1C    $AB60   LD       I, $B60         ; Load B60 into I
$D1E    $194E   JP       $94E            ; Jump to 94E
$D20    $6E10   LD       VE, #10         ; Load 16 into VE
$D22    $83B2   AND      V3, VB          ; V3 &= VB
$D24    $E84A   UNKNOWN  $E84A           ; Unknown Exxx instruction
$D26    $EB31   UNKNOWN  $EB31           ; Unknown Exxx instruction
$D28    $7D4C   ADD      VD, #4C         ; Add 76 to VD
$D2A    $7553   ADD      V5, #53         ; Add 83 to V5
$D2C    $04A0   SYS      $4A0            ; System call to 4A0
$D2E    $BCC7   JP       V0, $CC7        ; Jump to V0 + CC7
$D30    $4139   SNE      V1, #39         ; Skip if V1 != 57
$D32    $1F8A   JP       $F8A            ; Jump to F8A
$D34    $6F52   LD       VF, #52         ; Load 82 into VF
$D36    $1665   JP       $665            ; Jump to 665
$D38    $E412   UNKNOWN  $E412           ; Unknown Exxx instruction
$D3A    $E423   UNKNOWN  $E423           ; Unknown Exxx instruction
$D3C    $26C8   CALL     $6C8            ; Call subroutine at 6C8
$D3E    $616A   LD       V1, #6A         ; Load 106 into V1
$D40    $BC42   JP       V0, $C42        ; Jump to V0 + C42
$D42    $13FE   JP       $3FE            ; Jump to 3FE
$D44    $6F41   LD       VF, #41         ; Load 65 into VF
$D46    $A9C4   LD       I, $9C4         ; Load 9C4 into I
$D48    $6D47   LD       VD, #47         ; Load 71 into VD
$D4A    $9231   UNKNOWN  $9231           ; Unknown 9xxx instruction
$D4C    $86BA   UNKNOWN  86BA            ; Unknown 8xxx instruction
$D4E    $A400   LD       I, $400         ; Load 400 into I
$D50    $04FD   SYS      $4FD            ; System call to 4FD
$D52    $3F80   SE       VF, #80         ; Skip if VF == 128
$D54    $BF82   JP       V0, $F82        ; Jump to V0 + F82
$D56    $3C65   SE       VC, #65         ; Skip if VC == 101
$D58    $57AC   UNKNOWN  $57AC           ; Unknown 5xxx instruction
$D5A    $27D1   CALL     $7D1            ; Call subroutine at 7D1
$D5C    $ED4F   UNKNOWN  $ED4F           ; Unknown Exxx instruction
$D5E    $C6E6   RND      V6, #E6         ; V6 = random & E6
$D60    $A01A   LD       I, $01A         ; Load 01A into I
$D62    $8D4E   SHL      VD              ; VD <<= 1, VF = MSB
$D64    $AC4C   LD       I, $C4C         ; Load C4C into I
$D66    $696D   LD       V9, #6D         ; Load 109 into V9
$D68    $E1FF   UNKNOWN  $E1FF           ; Unknown Exxx instruction
$D6A    $B707   JP       V0, $707        ; Jump to V0 + 707
$D6C    $A466   LD       I, $466         ; Load 466 into I
$D6E    $FC2B   UNKNOWN  FC2B            ; Unknown Fxxx instruction
$D70    $132D   JP       $32D            ; Jump to 32D
$D72    $74D7   ADD      V4, #D7         ; Add 215 to V4
$D74    $82A7   SUBN     V2, VA          ; V2 = VA - V2, VF = !borrow
$D76    $D498   DRW      V4, V9, #8      ; Draw 8-byte sprite at V4, V9
$D78    $A47D   LD       I, $47D         ; Load 47D into I
$D7A    $2DC7   CALL     $DC7            ; Call subroutine at DC7
$D7C    $2C1D   CALL     $C1D            ; Call subroutine at C1D
$D7E    $2FF0   CALL     $FF0            ; Call subroutine at FF0
$D80    $4AB0   SNE      VA, #B0         ; Skip if VA != 176
$D82    $2BC9   CALL     $BC9            ; Call subroutine at BC9
$D84    $8276   SHR      V2              ; V2 >>= 1, VF = LSB
$D86    $DD0E   DRW      VD, V0, #E      ; Draw 14-byte sprite at VD, V0
$D88    $D9BD   DRW      V9, VB, #D      ; Draw 13-byte sprite at V9, VB
$D8A    $7432   ADD      V4, #32         ; Add 50 to V4
$D8C    $B1E5   JP       V0, $1E5        ; Jump to V0 + 1E5
$D8E    $3B2E   SE       VB, #2E         ; Skip if VB == 46
$D90    $6584   LD       V5, #84         ; Load 132 into V5
$D92    $1E10   JP       $E10            ; Jump to E10
$D94    $E313   UNKNOWN  $E313           ; Unknown Exxx instruction
$D96    $FFDF   UNKNOWN  FFDF            ; Unknown Fxxx instruction
$D98    $2EED   CALL     $EED            ; Call subroutine at EED
$D9A    $6880   LD       V8, #80         ; Load 128 into V8
$D9C    $5B7D   UNKNOWN  $5B7D           ; Unknown 5xxx instruction
$D9E    $479D   SNE      V7, #9D         ; Skip if V7 != 157
$DA0    $8F81   OR       VF, V8          ; VF |= V8
$DA2    $857A   UNKNOWN  857A            ; Unknown 8xxx instruction
$DA4    $EB7C   UNKNOWN  $EB7C           ; Unknown Exxx instruction
$DA6    $DC5B   DRW      VC, V5, #B      ; Draw 11-byte sprite at VC, V5
$DA8    $15B0   JP       $5B0            ; Jump to 5B0
$DAA    $8DE8   UNKNOWN  8DE8            ; Unknown 8xxx instruction
$DAC    $B8CC   JP       V0, $8CC        ; Jump to V0 + 8CC
$DAE    $1E24   JP       $E24            ; Jump to E24
$DB0    $564F   UNKNOWN  $564F           ; Unknown 5xxx instruction
$DB2    $DBE3   DRW      VB, VE, #3      ; Draw 3-byte sprite at VB, VE
$DB4    $AB06   LD       I, $B06         ; Load B06 into I
$DB6    $65FC   LD       V5, #FC         ; Load 252 into V5
$DB8    $A86C   LD       I, $86C         ; Load 86C into I
$DBA    $B9A2   JP       V0, $9A2        ; Jump to V0 + 9A2
$DBC    $95FB   UNKNOWN  $95FB           ; Unknown 9xxx instruction
$DBE    $83CF   UNKNOWN  83CF            ; Unknown 8xxx instruction
$DC0    $CEBE   RND      VE, #BE         ; VE = random & BE
$DC2    $0238   SYS      $238            ; System call to 238
$DC4    $1002   JP       $002            ; Jump to 002
$DC6    $8ABD   UNKNOWN  8ABD            ; Unknown 8xxx instruction
$DC8    $4A09   SNE      VA, #09         ; Skip if VA != 9
$DCA    $F9A9   UNKNOWN  F9A9            ; Unknown Fxxx instruction
$DCC    $4E32   SNE      VE, #32         ; Skip if VE != 50
$DCE    $9DCE   UNKNOWN  $9DCE           ; Unknown 9xxx instruction
$DD0    $BA52   JP       V0, $A52        ; Jump to V0 + A52
$DD2    $48C9   SNE      V8, #C9         ; Skip if V8 != 201
$DD4    $7758   ADD      V7, #58         ; Add 88 to V7
$DD6    $1C6C   JP       $C6C            ; Jump to C6C
$DD8    $6630   LD       V6, #30         ; Load 48 into V6
$DDA    $D4F1   DRW      V4, VF, #1      ; Draw 1-byte sprite at V4, VF
$DDC    $9676   UNKNOWN  $9676           ; Unknown 9xxx instruction
$DDE    $D252   DRW      V2, V5, #2      ; Draw 2-byte sprite at V2, V5
$DE0    $2081   CALL     $081            ; Call subroutine at 081
$DE2    $B9CF   JP       V0, $9CF        ; Jump to V0 + 9CF
$DE4    $F25C   UNKNOWN  F25C            ; Unknown Fxxx instruction
$DE6    $7529   ADD      V5, #29         ; Add 41 to V5
$DE8    $A143   LD       I, $143         ; Load 143 into I
$DEA    $8886   SHR      V8              ; V8 >>= 1, VF = LSB
$DEC    $CFA8   RND      VF, #A8         ; VF = random & A8
$DEE    $5ED8   UNKNOWN  $5ED8           ; Unknown 5xxx instruction
$DF0    $E162   UNKNOWN  $E162           ; Unknown Exxx instruction
$DF2    $08EC   SYS      $8EC            ; System call to 8EC
$DF4    $85C2   AND      V5, VC          ; V5 &= VC
$DF6    $075B   SYS      $75B            ; System call to 75B
$DF8    $AAFD   LD       I, $AFD         ; Load AFD into I
$DFA    $4200   SNE      V2, #00         ; Skip if V2 != 0
$DFC    $4A62   SNE      VA, #62         ; Skip if VA != 98
$DFE    $C1A7   RND      V1, #A7         ; V1 = random & A7
$E00    $14F1   JP       $4F1            ; Jump to 4F1
$E02    $EF7E   UNKNOWN  $EF7E           ; Unknown Exxx instruction
$E04    $E789   UNKNOWN  $E789           ; Unknown Exxx instruction
$E06    $B93E   JP       V0, $93E        ; Jump to V0 + 93E
$E08    $8E9D   UNKNOWN  8E9D            ; Unknown 8xxx instruction
$E0A    $66C2   LD       V6, #C2         ; Load 194 into V6
$E0C    $C050   RND      V0, #50         ; V0 = random & 50
$E0E    $3C54   SE       VC, #54         ; Skip if VC == 84
$E10    $4C79   SNE      VC, #79         ; Skip if VC != 121
$E12    $5A0C   UNKNOWN  $5A0C           ; Unknown 5xxx instruction
$E14    $88B3   XOR      V8, VB          ; V8 ^= VB
$E16    $C48A   RND      V4, #8A         ; V4 = random & 8A
$E18    $0173   SYS      $173            ; System call to 173
$E1A    $725F   ADD      V2, #5F         ; Add 95 to V2
$E1C    $7146   ADD      V1, #46         ; Add 70 to V1
$E1E    $6538   LD       V5, #38         ; Load 56 into V5
$E20    $6E0B   LD       VE, #0B         ; Load 11 into VE
$E22    $B1FC   JP       V0, $1FC        ; Jump to V0 + 1FC
$E24    $834A   UNKNOWN  834A            ; Unknown 8xxx instruction
$E26    $3A3A   SE       VA, #3A         ; Skip if VA == 58
$E28    $AA08   LD       I, $A08         ; Load A08 into I
$E2A    $72ED   ADD      V2, #ED         ; Add 237 to V2
$E2C    $42CF   SNE      V2, #CF         ; Skip if V2 != 207
$E2E    $D09A   DRW      V0, V9, #A      ; Draw 10-byte sprite at V0, V9
$E30    $8199   UNKNOWN  8199            ; Unknown 8xxx instruction
$E32    $6130   LD       V1, #30         ; Load 48 into V1
$E34    $E8CB   UNKNOWN  $E8CB           ; Unknown Exxx instruction
$E36    $16C8   JP       $6C8            ; Jump to 6C8
$E38    $09A5   SYS      $9A5            ; System call to 9A5
$E3A    $87F5   SUB      V7, VF          ; V7 -= VF, VF = !borrow
$E3C    $5342   UNKNOWN  $5342           ; Unknown 5xxx instruction
$E3E    $416E   SNE      V1, #6E         ; Skip if V1 != 110
$E40    $03A6   SYS      $3A6            ; System call to 3A6
$E42    $6678   LD       V6, #78         ; Load 120 into V6
$E44    $9B63   UNKNOWN  $9B63           ; Unknown 9xxx instruction
$E46    $0ADE   SYS      $ADE            ; System call to ADE
$E48    $1E74   JP       $E74            ; Jump to E74
$E4A    $7E68   ADD      VE, #68         ; Add 104 to VE
$E4C    $A7D7   LD       I, $7D7         ; Load 7D7 into I
$E4E    $2605   CALL     $605            ; Call subroutine at 605
$E50    $73C0   ADD      V3, #C0         ; Add 192 to V3
$E52    $E4B6   UNKNOWN  $E4B6           ; Unknown Exxx instruction
$E54    $99A5   UNKNOWN  $99A5           ; Unknown 9xxx instruction
$E56    $C6D5   RND      V6, #D5         ; V6 = random & D5
$E58    $5883   UNKNOWN  $5883           ; Unknown 5xxx instruction
$E5A    $7C20   ADD      VC, #20         ; Add 32 to VC
$E5C    $597C   UNKNOWN  $597C           ; Unknown 5xxx instruction
$E5E    $B14C   JP       V0, $14C        ; Jump to V0 + 14C
$E60    $0E9D   SYS      $E9D            ; System call to E9D
$E62    $40F5   SNE      V0, #F5         ; Skip if V0 != 245
$E64    $027A   SYS      $27A            ; System call to 27A
$E66    $DB3A   DRW      VB, V3, #A      ; Draw 10-byte sprite at VB, V3
$E68    $7E17   ADD      VE, #17         ; Add 23 to VE
$E6A    $5E11   UNKNOWN  $5E11           ; Unknown 5xxx instruction
$E6C    $4332   SNE      V3, #32         ; Skip if V3 != 50
$E6E    $3682   SE       V6, #82         ; Skip if V6 == 130
$E70    $EB51   UNKNOWN  $EB51           ; Unknown Exxx instruction
$E72    $CBF7   RND      VB, #F7         ; VB = random & F7
$E74    $878A   UNKNOWN  878A            ; Unknown 8xxx instruction
$E76    $0188   SYS      $188            ; System call to 188
$E78    $BDAF   JP       V0, $DAF        ; Jump to V0 + DAF
$E7A    $78F1   ADD      V8, #F1         ; Add 241 to V8
$E7C    $5C34   UNKNOWN  $5C34           ; Unknown 5xxx instruction
$E7E    $08B4   SYS      $8B4            ; System call to 8B4
$E80    $B5EC   JP       V0, $5EC        ; Jump to V0 + 5EC
$E82    $2958   CALL     $958            ; Call subroutine at 958
$E84    $43ED   SNE      V3, #ED         ; Skip if V3 != 237
$E86    $B768   JP       V0, $768        ; Jump to V0 + 768
$E88    $BA9E   JP       V0, $A9E        ; Jump to V0 + A9E
$E8A    $5380   SE       V3, V8          ; Skip if V3 == V8
$E8C    $740A   ADD      V4, #0A         ; Add 10 to V4
$E8E    $B32E   JP       V0, $32E        ; Jump to V0 + 32E
$E90    $6E9F   LD       VE, #9F         ; Load 159 into VE
$E92    $BE8E   JP       V0, $E8E        ; Jump to V0 + E8E
$E94    $1D84   JP       $D84            ; Jump to D84
$E96    $D7E3   DRW      V7, VE, #3      ; Draw 3-byte sprite at V7, VE
$E98    $B3A1   JP       V0, $3A1        ; Jump to V0 + 3A1
$E9A    $25B2   CALL     $5B2            ; Call subroutine at 5B2
$E9C    $FCDA   UNKNOWN  FCDA            ; Unknown Fxxx instruction
$E9E    $63CB   LD       V3, #CB         ; Load 203 into V3
$EA0    $E282   UNKNOWN  $E282           ; Unknown Exxx instruction
$EA2    $BEFF   JP       V0, $EFF        ; Jump to V0 + EFF
$EA4    $5DE6   UNKNOWN  $5DE6           ; Unknown 5xxx instruction
$EA6    $9E33   UNKNOWN  $9E33           ; Unknown 9xxx instruction
$EA8    $C280   RND      V2, #80         ; V2 = random & 80
$EAA    $8B61   OR       VB, V6          ; VB |= V6
$EAC    $A180   LD       I, $180         ; Load 180 into I
$EAE    $7415   ADD      V4, #15         ; Add 21 to V4
$EB0    $D1A1   DRW      V1, VA, #1      ; Draw 1-byte sprite at V1, VA
$EB2    $5DBA   UNKNOWN  $5DBA           ; Unknown 5xxx instruction
$EB4    $2BE1   CALL     $BE1            ; Call subroutine at BE1
$EB6    $8C81   OR       VC, V8          ; VC |= V8
$EB8    $4A4C   SNE      VA, #4C         ; Skip if VA != 76
$EBA    $E572   UNKNOWN  $E572           ; Unknown Exxx instruction
$EBC    $4E4F   SNE      VE, #4F         ; Skip if VE != 79
$EBE    $F4C4   UNKNOWN  F4C4            ; Unknown Fxxx instruction
$EC0    $4FBF   SNE      VF, #BF         ; Skip if VF != 191
$EC2    $9ED3   UNKNOWN  $9ED3           ; Unknown 9xxx instruction
$EC4    $1730   JP       $730            ; Jump to 730
$EC6    $94FD   UNKNOWN  $94FD           ; Unknown 9xxx instruction
$EC8    $B619   JP       V0, $619        ; Jump to V0 + 619
$ECA    $D4C5   DRW      V4, VC, #5      ; Draw 5-byte sprite at V4, VC
$ECC    $4A6D   SNE      VA, #6D         ; Skip if VA != 109
$ECE    $959D   UNKNOWN  $959D           ; Unknown 9xxx instruction
$ED0    $BCD9   JP       V0, $CD9        ; Jump to V0 + CD9
$ED2    $8157   SUBN     V1, V5          ; V1 = V5 - V1, VF = !borrow
$ED4    $ED8E   UNKNOWN  $ED8E           ; Unknown Exxx instruction
$ED6    $C35C   RND      V3, #5C         ; V3 = random & 5C
$ED8    $F384   UNKNOWN  F384            ; Unknown Fxxx instruction
$EDA    $92B3   UNKNOWN  $92B3           ; Unknown 9xxx instruction
$EDC    $D28C   DRW      V2, V8, #C      ; Draw 12-byte sprite at V2, V8
$EDE    $5CDD   UNKNOWN  $5CDD           ; Unknown 5xxx instruction
$EE0    $FEBD   UNKNOWN  FEBD            ; Unknown Fxxx instruction
$EE2    $8E93   XOR      VE, V9          ; VE ^= V9
$EE4    $6B7D   LD       VB, #7D         ; Load 125 into VB
$EE6    $3C0B   SE       VC, #0B         ; Skip if VC == 11
$EE8    $118E   JP       $18E            ; Jump to 18E
$EEA    $3040   SE       V0, #40         ; Skip if V0 == 64
$EEC    $73B6   ADD      V3, #B6         ; Add 182 to V3
$EEE    $63AE   LD       V3, #AE         ; Load 174 into V3
$EF0    $7EFC   ADD      VE, #FC         ; Add 252 to VE
$EF2    $A405   LD       I, $405         ; Load 405 into I
$EF4    $803C   UNKNOWN  803C            ; Unknown 8xxx instruction
$EF6    $BA73   JP       V0, $A73        ; Jump to V0 + A73
$EF8    $E454   UNKNOWN  $E454           ; Unknown Exxx instruction
$EFA    $5FAF   UNKNOWN  $5FAF           ; Unknown 5xxx instruction
$EFC    $B4EF   JP       V0, $4EF        ; Jump to V0 + 4EF
$EFE    $AA50   LD       I, $A50         ; Load A50 into I
$F00    $43D6   SNE      V3, #D6         ; Skip if V3 != 214
$F02    $4CFB   SNE      VC, #FB         ; Skip if VC != 251
$F04    $70D5   ADD      V0, #D5         ; Add 213 to V0
$F06    $CE70   RND      VE, #70         ; VE = random & 70
$F08    $5683   UNKNOWN  $5683           ; Unknown 5xxx instruction
$F0A    $86F4   ADD      V6, VF          ; V6 += VF, VF = carry
$F0C    $B050   JP       V0, $050        ; Jump to V0 + 050
$F0E    $CF8F   RND      VF, #8F         ; VF = random & 8F
$F10    $61CD   LD       V1, #CD         ; Load 205 into V1
$F12    $01C7   SYS      $1C7            ; System call to 1C7
$F14    $6D10   LD       VD, #10         ; Load 16 into VD
$F16    $BA82   JP       V0, $A82        ; Jump to V0 + A82
$F18    $0CCA   SYS      $CCA            ; System call to CCA
$F1A    $B331   JP       V0, $331        ; Jump to V0 + 331
$F1C    $599C   UNKNOWN  $599C           ; Unknown 5xxx instruction
$F1E    $B211   JP       V0, $211        ; Jump to V0 + 211
$F20    $D613   DRW      V6, V1, #3      ; Draw 3-byte sprite at V6, V1
$F22    $90D2   UNKNOWN  $90D2           ; Unknown 9xxx instruction
$F24    $11D1   JP       $1D1            ; Jump to 1D1
$F26    $8B54   ADD      VB, V5          ; VB += V5, VF = carry
$F28    $4AAF   SNE      VA, #AF         ; Skip if VA != 175
$F2A    $3BBE   SE       VB, #BE         ; Skip if VB == 190
$F2C    $E81C   UNKNOWN  $E81C           ; Unknown Exxx instruction
$F2E    $239C   CALL     $39C            ; Call subroutine at 39C
$F30    $32AA   SE       V2, #AA         ; Skip if V2 == 170
$F32    $9C07   UNKNOWN  $9C07           ; Unknown 9xxx instruction
$F34    $4A79   SNE      VA, #79         ; Skip if VA != 121
$F36    $5781   UNKNOWN  $5781           ; Unknown 5xxx instruction
$F38    $33DB   SE       V3, #DB         ; Skip if V3 == 219
$F3A    $F553   UNKNOWN  F553            ; Unknown Fxxx instruction
$F3C    $7DC4   ADD      VD, #C4         ; Add 196 to VD
$F3E    $002A   SYS      $02A            ; System call to 02A
$F40    $C560   RND      V5, #60         ; V5 = random & 60
$F42    $87D4   ADD      V7, VD          ; V7 += VD, VF = carry
$F44    $0DB5   SYS      $DB5            ; System call to DB5
$F46    $CE2A   RND      VE, #2A         ; VE = random & 2A
$F48    $8DDC   UNKNOWN  8DDC            ; Unknown 8xxx instruction
$F4A    $7F21   ADD      VF, #21         ; Add 33 to VF
$F4C    $4997   SNE      V9, #97         ; Skip if V9 != 151
$F4E    $9A1C   UNKNOWN  $9A1C           ; Unknown 9xxx instruction
$F50    $B133   JP       V0, $133        ; Jump to V0 + 133
$F52    $58D1   UNKNOWN  $58D1           ; Unknown 5xxx instruction
$F54    $3CD3   SE       VC, #D3         ; Skip if VC == 211
$F56    $F4EE   UNKNOWN  F4EE            ; Unknown Fxxx instruction
$F58    $2D4E   CALL     $D4E            ; Call subroutine at D4E
$F5A    $FDA2   UNKNOWN  FDA2            ; Unknown Fxxx instruction
$F5C    $7B88   ADD      VB, #88         ; Add 136 to VB
$F5E    $7846   ADD      V8, #46         ; Add 70 to V8
$F60    $3898   SE       V8, #98         ; Skip if V8 == 152
$F62    $B626   JP       V0, $626        ; Jump to V0 + 626
$F64    $F7DD   UNKNOWN  F7DD            ; Unknown Fxxx instruction
$F66    $54AA   UNKNOWN  $54AA           ; Unknown 5xxx instruction
$F68    $3A87   SE       VA, #87         ; Skip if VA == 135
$F6A    $50E9   UNKNOWN  $50E9           ; Unknown 5xxx instruction
$F6C    $60CC   LD       V0, #CC         ; Load 204 into V0
$F6E    $89E9   UNKNOWN  89E9            ; Unknown 8xxx instruction
$F70    $C4FC   RND      V4, #FC         ; V4 = random & FC
$F72    $40B2   SNE      V0, #B2         ; Skip if V0 != 178
$F74    $9B09   UNKNOWN  $9B09           ; Unknown 9xxx instruction
$F76    $070E   SYS      $70E            ; System call to 70E
$F78    $C000   RND      V0, #00         ; V0 = random & 00
$F7A    $028B   SYS      $28B            ; System call to 28B
$F7C    $42A2   SNE      V2, #A2         ; Skip if V2 != 162
$F7E    $C0AB   RND      V0, #AB         ; V0 = random & AB
$F80    $7454   ADD      V4, #54         ; Add 84 to V4
$F82    $A8E2   LD       I, $8E2         ; Load 8E2 into I
$F84    $0051   SYS      $051            ; System call to 051
$F86    $E5AC   UNKNOWN  $E5AC           ; Unknown Exxx instruction
$F88    $535A   UNKNOWN  $535A           ; Unknown 5xxx instruction
$F8A    $167A   JP       $67A            ; Jump to 67A
$F8C    $8901   OR       V9, V0          ; V9 |= V0
$F8E    $6894   LD       V8, #94         ; Load 148 into V8
$F90    $490F   SNE      V9, #0F         ; Skip if V9 != 15
$F92    $CE64   RND      VE, #64         ; VE = random & 64
$F94    $CA65   RND      VA, #65         ; VA = random & 65
$F96    $1F61   JP       $F61            ; Jump to F61
$F98    $9B07   UNKNOWN  $9B07           ; Unknown 9xxx instruction
$F9A    $DC83   DRW      VC, V8, #3      ; Draw 3-byte sprite at VC, V8
$F9C    $FF2C   UNKNOWN  FF2C            ; Unknown Fxxx instruction
$F9E    $4BF8   SNE      VB, #F8         ; Skip if VB != 248
$FA0    $3192   SE       V1, #92         ; Skip if V1 == 146
$FA2    $04E1   SYS      $4E1            ; System call to 4E1
$FA4    $AB6D   LD       I, $B6D         ; Load B6D into I
$FA6    $87EE   SHL      V7              ; V7 <<= 1, VF = MSB
$FA8    $32DE   SE       V2, #DE         ; Skip if V2 == 222
$FAA    $9BC1   UNKNOWN  $9BC1           ; Unknown 9xxx instruction
$FAC    $DEFA   DRW      VE, VF, #A      ; Draw 10-byte sprite at VE, VF
$FAE    $BE31   JP       V0, $E31        ; Jump to V0 + E31
$FB0    $CF6D   RND      VF, #6D         ; VF = random & 6D
$FB2    $C057   RND      V0, #57         ; V0 = random & 57
$FB4    $40EA   SNE      V0, #EA         ; Skip if V0 != 234
$FB6    $DD91   DRW      VD, V9, #1      ; Draw 1-byte sprite at VD, V9
$FB8    $A518   LD       I, $518         ; Load 518 into I
$FBA    $3F4F   SE       VF, #4F         ; Skip if VF == 79
$FBC    $5ECF   UNKNOWN  $5ECF           ; Unknown 5xxx instruction
$FBE    $B80E   JP       V0, $80E        ; Jump to V0 + 80E
$FC0    $BFD2   JP       V0, $FD2        ; Jump to V0 + FD2
$FC2    $3534   SE       V5, #34         ; Skip if V5 == 52
$FC4    $6259   LD       V2, #59         ; Load 89 into V2
$FC6    $F230   UNKNOWN  F230            ; Unknown Fxxx instruction
$FC8    $7821   ADD      V8, #21         ; Add 33 to V8
$FCA    $B5FF   JP       V0, $5FF        ; Jump to V0 + 5FF
$FCC    $C9D3   RND      V9, #D3         ; V9 = random & D3
$FCE    $A779   LD       I, $779         ; Load 779 into I
$FD0    $7575   ADD      V5, #75         ; Add 117 to V5
$FD2    $81A3   XOR      V1, VA          ; V1 ^= VA
$FD4    $EAAB   UNKNOWN  $EAAB           ; Unknown Exxx instruction
$FD6    $9EA0   SNE      VE, VA          ; Skip if VE != VA
$FD8    $28BF   CALL     $8BF            ; Call subroutine at 8BF
$FDA    $05E5   SYS      $5E5            ; System call to 5E5
$FDC    $1D2D   JP       $D2D            ; Jump to D2D
$FDE    $A0FB   LD       I, $0FB         ; Load 0FB into I
$FE0    $A6AE   LD       I, $6AE         ; Load 6AE into I
$FE2    $B054   JP       V0, $054        ; Jump to V0 + 054
$FE4    $ACB5   LD       I, $CB5         ; Load CB5 into I
$FE6    $27FC   CALL     $7FC            ; Call subroutine at 7FC
$FE8    $384C   SE       V8, #4C         ; Skip if V8 == 76
$FEA    $B4AF   JP       V0, $4AF        ; Jump to V0 + 4AF
$FEC    $3B48   SE       VB, #48         ; Skip if VB == 72
$FEE    $9821   UNKNOWN  $9821           ; Unknown 9xxx instruction
$FF0    $E8B6   UNKNOWN  $E8B6           ; Unknown Exxx instruction
$FF2    $7621   ADD      V6, #21         ; Add 33 to V6
$FF4    $686B   LD       V8, #6B         ; Load 107 into V8
$FF6    $B1D4   JP       V0, $1D4        ; Jump to V0 + 1D4
$FF8    $8E20   LD       VE, V2          ; VE = V2
$FFA    $26AE   CALL     $6AE            ; Call subroutine at 6AE
$FFC    $DB6B   DRW      VB, V6, #B      ; Draw 11-byte sprite at VB, V6
$FFE    $CB95   RND      VB, #95         ; VB = random & 95

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 462 (25.8%)
  LD      : 245 (13.7%)
  JP      : 237 (13.2%)
  ADD     : 124 ( 6.9%)
  SNE     : 123 ( 6.9%)
  RND     : 115 ( 6.4%)
  SYS     : 113 ( 6.3%)
  DRW     : 112 ( 6.2%)
  CALL    : 108 ( 6.0%)
  SE      :  94 ( 5.2%)
  SHR     :  13 ( 0.7%)
  AND     :  10 ( 0.6%)
  OR      :   9 ( 0.5%)
  SUBN    :   9 ( 0.5%)
  SHL     :   8 ( 0.4%)
  XOR     :   7 ( 0.4%)
  SUB     :   3 ( 0.2%)

Memory Operations: 369 (20.6%)
Arithmetic Operations: 162 (9.0%)
