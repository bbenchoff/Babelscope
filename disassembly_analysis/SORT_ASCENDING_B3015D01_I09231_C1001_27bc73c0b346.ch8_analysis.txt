
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B3015D01_I09231_C1001_27bc73c0b346.ch8
ROM Size: 3584 bytes
Instructions Found: 1791

DISCOVERY INFORMATION:
Batch: 3015
Instance: 9231
Direction: ascending
Final Array: [0, 0, 8, 17, 44, 51, 222, 224]
Operations: R:0 W:1 C:24 S:1

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 125
Sort Array References:
  $216: LD I, $9C2 ; Load 9C2 into I
  $23A: LD I, $EC0 ; Load EC0 into I
  $260: LD I, $132 ; Load 132 into I
  $266: ADD I, VF ; I ADDRESS MANIPULATION
  $296: LD I, $2D4 ; Load 2D4 into I
  $298: LD I, $77D ; Load 77D into I
  $2C4: LD I, $10C ; Load 10C into I
  $2CC: LD V0, [I] ; Load V0-V0 from I
  $2D4: LD I, $470 ; Load 470 into I
  $2F2: LD I, $3D8 ; Load 3D8 into I
  $310: LD I, $468 ; Load 468 into I
  $33A: LD I, $574 ; Load 574 into I
  $372: LD I, $7F8 ; Load 7F8 into I
  $394: LD I, $881 ; Load 881 into I
  $3DE: LD I, $F90 ; Load F90 into I
  $3E2: LD I, $55F ; Load 55F into I
  $3F2: LD I, $F30 ; Load F30 into I
  $40C: LD I, $3F8 ; Load 3F8 into I
  $482: LD I, $A45 ; Load A45 into I
  $484: LD I, $36E ; Load 36E into I
  $488: LD I, $74D ; Load 74D into I
  $4B6: LD I, $FF8 ; Load FF8 into I
  $4C2: LD I, $3EA ; Load 3EA into I
  $4C8: LD I, $63E ; Load 63E into I
  $4CE: LD I, $4A7 ; Load 4A7 into I
  $4D6: LD I, $323 ; Load 323 into I
  $4F0: LD I, $666 ; Load 666 into I
  $4F8: LD I, $BF8 ; Load BF8 into I
  $516: LD I, $1F4 ; Load 1F4 into I
  $52A: LD I, $1E7 ; Load 1E7 into I
  $53C: LD I, $A85 ; Load A85 into I
  $58A: LD I, $F12 ; Load F12 into I
  $5C8: LD I, $033 ; Load 033 into I
  $5F2: LD I, $926 ; Load 926 into I
  $5FE: LD I, $020 ; Load 020 into I
  $610: LD I, $98E ; Load 98E into I
  $63E: ADD I, V1 ; I ADDRESS MANIPULATION
  $644: LD I, $D14 ; Load D14 into I
  $658: LD I, $5D2 ; Load 5D2 into I
  $668: LD I, $BDA ; Load BDA into I
  $67A: LD I, $1C4 ; Load 1C4 into I
  $688: LD I, $88B ; Load 88B into I
  $6A8: LD I, $772 ; Load 772 into I
  $6E6: LD I, $420 ; Load 420 into I
  $6EA: LD I, $BB5 ; Load BB5 into I
  $6F6: LD I, $13A ; Load 13A into I
  $722: LD I, $4EE ; Load 4EE into I
  $738: LD I, $AE2 ; Load AE2 into I
  $742: LD I, $5DD ; Load 5DD into I
  $754: LD I, $A7F ; Load A7F into I
  $76A: LD I, $9CB ; Load 9CB into I
  $78A: LD I, $A86 ; Load A86 into I
  $78E: LD I, $2AD ; Load 2AD into I
  $7AC: LD I, $B0F ; Load B0F into I
  $7BA: LD I, $1C4 ; Load 1C4 into I
  $7BE: LD I, $E50 ; Load E50 into I
  $7C4: LD I, $DFD ; Load DFD into I
  $7D2: LD I, $8DB ; Load 8DB into I
  $7F8: LD I, $349 ; Load 349 into I
  $804: LD I, $183 ; Load 183 into I
  $816: LD I, $640 ; Load 640 into I
  $842: LD I, $9CF ; Load 9CF into I
  $85C: LD I, $A3E ; Load A3E into I
  $8B4: LD I, $3BB ; Load 3BB into I
  $8BA: LD I, $0D6 ; Load 0D6 into I
  $8D2: LD I, $D78 ; Load D78 into I
  $8E8: LD I, $CDF ; Load CDF into I
  $91C: LD I, $4F9 ; Load 4F9 into I
  $938: LD I, $1AB ; Load 1AB into I
  $964: LD I, $D93 ; Load D93 into I
  $A20: LD I, $F1A ; Load F1A into I
  $A26: LD I, $E15 ; Load E15 into I
  $A28: LD I, $8ED ; Load 8ED into I
  $A40: LD I, $C84 ; Load C84 into I
  $A62: LD I, $03B ; Load 03B into I
  $A88: LD I, $96B ; Load 96B into I
  $AA2: LD I, $374 ; Load 374 into I
  $ACA: LD I, $934 ; Load 934 into I
  $B00: LD I, $170 ; Load 170 into I
  $B18: LD I, $EE0 ; Load EE0 into I
  $B1E: LD I, $379 ; Load 379 into I
  $B34: LD I, $B26 ; Load B26 into I
  $B68: LD I, $2A5 ; Load 2A5 into I
  $B7A: LD I, $9F0 ; Load 9F0 into I
  $B9A: LD I, $772 ; Load 772 into I
  $BA4: LD I, $1CB ; Load 1CB into I
  $BB4: LD I, $C0E ; Load C0E into I
  $BBE: LD I, $BC6 ; Load BC6 into I
  $BC2: LD I, $7FD ; Load 7FD into I
  $C14: LD I, $F59 ; Load F59 into I
  $C2A: LD I, $667 ; Load 667 into I
  $C2E: LD I, $248 ; Load 248 into I
  $C40: LD I, $873 ; Load 873 into I
  $C4E: LD I, $933 ; Load 933 into I
  $C7A: LD I, $FE0 ; Load FE0 into I
  $CCC: LD I, $E81 ; Load E81 into I
  $CDE: LD I, $B88 ; Load B88 into I
  $D08: LD I, $B2F ; Load B2F into I
  $D22: LD I, $42B ; Load 42B into I
  $D24: LD I, $C53 ; Load C53 into I
  $D2E: LD I, $873 ; Load 873 into I
  $D6A: LD I, $710 ; Load 710 into I
  $D70: LD I, $1E5 ; Load 1E5 into I
  $D80: LD I, $773 ; Load 773 into I
  $D8C: LD I, $996 ; Load 996 into I
  $D9A: LD I, $380 ; Load 380 into I
  $DA6: LD I, $30D ; Load 30D into I
  $DB8: LD I, $22F ; Load 22F into I
  $DC4: LD I, $6D0 ; Load 6D0 into I
  $DDE: LD I, $856 ; Load 856 into I
  $DE6: LD I, $AD3 ; Load AD3 into I
  $E14: LD I, $3A4 ; Load 3A4 into I
  $E46: LD I, $262 ; Load 262 into I
  $E4E: LD I, $42B ; Load 42B into I
  $E56: LD I, $D6D ; Load D6D into I
  $E78: LD I, $F2F ; Load F2F into I
  $E8C: LD I, $89B ; Load 89B into I
  $EAE: LD I, $02C ; Load 02C into I
  $EF2: LD I, $4DA ; Load 4DA into I
  $EFC: LD I, $1A3 ; Load 1A3 into I
  $EFE: LD I, $174 ; Load 174 into I
  $F54: LD I, $78A ; Load 78A into I
  $F9A: LD I, $2BC ; Load 2BC into I
  $FE8: LD I, $68D ; Load 68D into I
  $FFC: LD I, $CC8 ; Load CC8 into I

CONTROL FLOW ANALYSIS:
Jumps: 216
Calls: 106
Branches: 255
Loops: 114
Loop Structures:
  $228 -> $01B (backward jump)
  $26C -> $078 (backward jump)
  $29A -> $1C9 (backward jump)
  $318 -> $030 (backward jump)
  $370 -> $02B (backward jump)
  $406 -> $3FD (backward jump)
  $4BC -> $18E (backward jump)
  $4FC -> $3D9 (backward jump)
  $51C -> $4DB (backward jump)
  $55A -> $4C1 (backward jump)
  $582 -> $571 (backward jump)
  $58C -> $3FB (backward jump)
  $5D0 -> $005 (backward jump)
  $5F0 -> $5CE (backward jump)
  $61A -> $06F (backward jump)
  $646 -> $200 (backward jump)
  $6A2 -> $36D (backward jump)
  $6DE -> $4E4 (backward jump)
  $6EE -> $262 (backward jump)
  $700 -> $239 (backward jump)
  $716 -> $59F (backward jump)
  $75C -> $648 (backward jump)
  $7CE -> $69A (backward jump)
  $7D0 -> $6EF (backward jump)
  $808 -> $1F6 (backward jump)
  $854 -> $5D8 (backward jump)
  $85E -> $636 (backward jump)
  $86A -> $658 (backward jump)
  $874 -> $25B (backward jump)
  $882 -> $487 (backward jump)
  $8A4 -> $28B (backward jump)
  $8B6 -> $3BF (backward jump)
  $8C8 -> $6DE (backward jump)
  $8DE -> $8BC (backward jump)
  $912 -> $5AD (backward jump)
  $91A -> $506 (backward jump)
  $926 -> $710 (backward jump)
  $968 -> $12D (backward jump)
  $982 -> $874 (backward jump)
  $986 -> $302 (backward jump)
  $9C0 -> $539 (backward jump)
  $9D4 -> $971 (backward jump)
  $9DC -> $596 (backward jump)
  $9FA -> $523 (backward jump)
  $9FE -> $884 (backward jump)
  $A12 -> $993 (backward jump)
  $A2C -> $305 (backward jump)
  $A3E -> $6AF (backward jump)
  $A84 -> $1D1 (backward jump)
  $A94 -> $447 (backward jump)
  $AA4 -> $2E9 (backward jump)
  $AA8 -> $3B4 (backward jump)
  $AB2 -> $3DE (backward jump)
  $AF0 -> $1A7 (backward jump)
  $B1C -> $636 (backward jump)
  $B2C -> $97E (backward jump)
  $B40 -> $865 (backward jump)
  $B54 -> $58C (backward jump)
  $B62 -> $0E2 (backward jump)
  $B6E -> $5BD (backward jump)
  $BC0 -> $158 (backward jump)
  $BDA -> $1EB (backward jump)
  $BE2 -> $3AD (backward jump)
  $BEC -> $742 (backward jump)
  $C54 -> $14B (backward jump)
  $C82 -> $71F (backward jump)
  $C86 -> $9DC (backward jump)
  $C8C -> $01E (backward jump)
  $C9A -> $865 (backward jump)
  $CAA -> $089 (backward jump)
  $CB2 -> $B4C (backward jump)
  $CD4 -> $59D (backward jump)
  $CF0 -> $6B2 (backward jump)
  $CF2 -> $0CD (backward jump)
  $CFA -> $36D (backward jump)
  $D04 -> $AB5 (backward jump)
  $D12 -> $75C (backward jump)
  $D14 -> $53C (backward jump)
  $D40 -> $3A9 (backward jump)
  $D42 -> $355 (backward jump)
  $D72 -> $8D5 (backward jump)
  $D92 -> $C7D (backward jump)
  $DC8 -> $8F5 (backward jump)
  $DD0 -> $47D (backward jump)
  $DF2 -> $171 (backward jump)
  $E04 -> $019 (backward jump)
  $E20 -> $2CD (backward jump)
  $E30 -> $49B (backward jump)
  $E6A -> $048 (backward jump)
  $E9C -> $C35 (backward jump)
  $EBA -> $CB6 (backward jump)
  $ECA -> $0F7 (backward jump)
  $ED8 -> $C1F (backward jump)
  $EE2 -> $0AA (backward jump)
  $EE8 -> $420 (backward jump)
  $F04 -> $17C (backward jump)
  $F14 -> $D8B (backward jump)
  $F36 -> $B1D (backward jump)
  $F3A -> $3B6 (backward jump)
  $F40 -> $328 (backward jump)
  $F42 -> $D98 (backward jump)
  $F56 -> $1F0 (backward jump)
  $F5C -> $871 (backward jump)
  $F62 -> $A88 (backward jump)
  $F6C -> $D46 (backward jump)
  $F86 -> $F2C (backward jump)
  $F8C -> $0D4 (backward jump)
  $F9E -> $2E3 (backward jump)
  $FC4 -> $5D5 (backward jump)
  $FDC -> $3B8 (backward jump)
  $FF0 -> $453 (backward jump)
  $FF6 -> $7D1 (backward jump)
  $FF8 -> $BEB (backward jump)
  $FFE -> $A7F (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $6655   LD       V6, #55         ; Load 85 into V6
$202    $F901   UNKNOWN  F901            ; Unknown Fxxx instruction
$204    $F382   UNKNOWN  F382            ; Unknown Fxxx instruction
$206    $7EA7   ADD      VE, #A7         ; Add 167 to VE
$208    $3809   SE       V8, #09         ; Skip if V8 == 9
$20A    $920A   UNKNOWN  $920A           ; Unknown 9xxx instruction
$20C    $423D   SNE      V2, #3D         ; Skip if V2 != 61
$20E    $6EFC   LD       VE, #FC         ; Load 252 into VE
$210    $90F9   UNKNOWN  $90F9           ; Unknown 9xxx instruction
$212    $8B2D   UNKNOWN  8B2D            ; Unknown 8xxx instruction
$214    $0560   SYS      $560            ; System call to 560
$216    $A9C2   LD       I, $9C2         ; Load 9C2 into I
$218    $DAAE   DRW      VA, VA, #E      ; Draw 14-byte sprite at VA, VA
$21A    $CE1E   RND      VE, #1E         ; VE = random & 1E
$21C    $1CC9   JP       $CC9            ; Jump to CC9
$21E    $7E1A   ADD      VE, #1A         ; Add 26 to VE
$220    $FA3D   UNKNOWN  FA3D            ; Unknown Fxxx instruction
$222    $45CC   SNE      V5, #CC         ; Skip if V5 != 204
$224    $E3DD   UNKNOWN  $E3DD           ; Unknown Exxx instruction
$226    $58AF   UNKNOWN  $58AF           ; Unknown 5xxx instruction
$228    $101B   JP       $01B            ; Jump to 01B
$22A    $C53A   RND      V5, #3A         ; V5 = random & 3A
$22C    $D84F   DRW      V8, V4, #F      ; Draw 15-byte sprite at V8, V4
$22E    $63D1   LD       V3, #D1         ; Load 209 into V3
$230    $1895   JP       $895            ; Jump to 895
$232    $D774   DRW      V7, V7, #4      ; Draw 4-byte sprite at V7, V7
$234    $BC3A   JP       V0, $C3A        ; Jump to V0 + C3A
$236    $1B32   JP       $B32            ; Jump to B32
$238    $6DB0   LD       VD, #B0         ; Load 176 into VD
$23A    $AEC0   LD       I, $EC0         ; Load EC0 into I
$23C    $DCFD   DRW      VC, VF, #D      ; Draw 13-byte sprite at VC, VF
$23E    $BD73   JP       V0, $D73        ; Jump to V0 + D73
$240    $1C9B   JP       $C9B            ; Jump to C9B
$242    $9521   UNKNOWN  $9521           ; Unknown 9xxx instruction
$244    $B4F1   JP       V0, $4F1        ; Jump to V0 + 4F1
$246    $962C   UNKNOWN  $962C           ; Unknown 9xxx instruction
$248    $26D2   CALL     $6D2            ; Call subroutine at 6D2
$24A    $4E1A   SNE      VE, #1A         ; Skip if VE != 26
$24C    $7A5D   ADD      VA, #5D         ; Add 93 to VA
$24E    $5E0C   UNKNOWN  $5E0C           ; Unknown 5xxx instruction
$250    $EE7D   UNKNOWN  $EE7D           ; Unknown Exxx instruction
$252    $5BA7   UNKNOWN  $5BA7           ; Unknown 5xxx instruction
$254    $3CF9   SE       VC, #F9         ; Skip if VC == 249
$256    $E053   UNKNOWN  $E053           ; Unknown Exxx instruction
$258    $4B9C   SNE      VB, #9C         ; Skip if VB != 156
$25A    $50D5   UNKNOWN  $50D5           ; Unknown 5xxx instruction
$25C    $EB8D   UNKNOWN  $EB8D           ; Unknown Exxx instruction
$25E    $39E0   SE       V9, #E0         ; Skip if V9 == 224
$260    $A132   LD       I, $132         ; Load 132 into I
$262    $55E0   SE       V5, VE          ; Skip if V5 == VE
$264    $80AB   UNKNOWN  80AB            ; Unknown 8xxx instruction
$266    $FF1E   ADD      I, VF           ; I += VF
$268    $DD2F   DRW      VD, V2, #F      ; Draw 15-byte sprite at VD, V2
$26A    $BC85   JP       V0, $C85        ; Jump to V0 + C85
$26C    $1078   JP       $078            ; Jump to 078
$26E    $4DD7   SNE      VD, #D7         ; Skip if VD != 215
$270    $DA56   DRW      VA, V5, #6      ; Draw 6-byte sprite at VA, V5
$272    $321C   SE       V2, #1C         ; Skip if V2 == 28
$274    $42EA   SNE      V2, #EA         ; Skip if V2 != 234
$276    $FCCF   UNKNOWN  FCCF            ; Unknown Fxxx instruction
$278    $2BE4   CALL     $BE4            ; Call subroutine at BE4
$27A    $2DDF   CALL     $DDF            ; Call subroutine at DDF
$27C    $6DC2   LD       VD, #C2         ; Load 194 into VD
$27E    $EE7C   UNKNOWN  $EE7C           ; Unknown Exxx instruction
$280    $05C6   SYS      $5C6            ; System call to 5C6
$282    $FF64   UNKNOWN  FF64            ; Unknown Fxxx instruction
$284    $D02B   DRW      V0, V2, #B      ; Draw 11-byte sprite at V0, V2
$286    $7C85   ADD      VC, #85         ; Add 133 to VC
$288    $DECD   DRW      VE, VC, #D      ; Draw 13-byte sprite at VE, VC
$28A    $9EE5   UNKNOWN  $9EE5           ; Unknown 9xxx instruction
$28C    $287D   CALL     $87D            ; Call subroutine at 87D
$28E    $E9B0   UNKNOWN  $E9B0           ; Unknown Exxx instruction
$290    $B37E   JP       V0, $37E        ; Jump to V0 + 37E
$292    $3131   SE       V1, #31         ; Skip if V1 == 49
$294    $D793   DRW      V7, V9, #3      ; Draw 3-byte sprite at V7, V9
$296    $A2D4   LD       I, $2D4         ; Load 2D4 into I
$298    $A77D   LD       I, $77D         ; Load 77D into I
$29A    $B1C9   JP       V0, $1C9        ; Jump to V0 + 1C9
$29C    $4A37   SNE      VA, #37         ; Skip if VA != 55
$29E    $D7F6   DRW      V7, VF, #6      ; Draw 6-byte sprite at V7, VF
$2A0    $9F8E   UNKNOWN  $9F8E           ; Unknown 9xxx instruction
$2A2    $B5F2   JP       V0, $5F2        ; Jump to V0 + 5F2
$2A4    $C762   RND      V7, #62         ; V7 = random & 62
$2A6    $60F1   LD       V0, #F1         ; Load 241 into V0
$2A8    $BD60   JP       V0, $D60        ; Jump to V0 + D60
$2AA    $D8DD   DRW      V8, VD, #D      ; Draw 13-byte sprite at V8, VD
$2AC    $B8BC   JP       V0, $8BC        ; Jump to V0 + 8BC
$2AE    $3D34   SE       VD, #34         ; Skip if VD == 52
$2B0    $0C0B   SYS      $C0B            ; System call to C0B
$2B2    $D967   DRW      V9, V6, #7      ; Draw 7-byte sprite at V9, V6
$2B4    $5BF8   UNKNOWN  $5BF8           ; Unknown 5xxx instruction
$2B6    $664C   LD       V6, #4C         ; Load 76 into V6
$2B8    $D00E   DRW      V0, V0, #E      ; Draw 14-byte sprite at V0, V0
$2BA    $980A   UNKNOWN  $980A           ; Unknown 9xxx instruction
$2BC    $CAB6   RND      VA, #B6         ; VA = random & B6
$2BE    $5F74   UNKNOWN  $5F74           ; Unknown 5xxx instruction
$2C0    $5B50   SE       VB, V5          ; Skip if VB == V5
$2C2    $0D7E   SYS      $D7E            ; System call to D7E
$2C4    $A10C   LD       I, $10C         ; Load 10C into I
$2C6    $B84C   JP       V0, $84C        ; Jump to V0 + 84C
$2C8    $DD96   DRW      VD, V9, #6      ; Draw 6-byte sprite at VD, V9
$2CA    $6DBC   LD       VD, #BC         ; Load 188 into VD
$2CC    $F065   LD       V0, [I]         ; Load V0-V0 from I
$2CE    $7391   ADD      V3, #91         ; Add 145 to V3
$2D0    $4F6E   SNE      VF, #6E         ; Skip if VF != 110
$2D2    $BD4E   JP       V0, $D4E        ; Jump to V0 + D4E
$2D4    $A470   LD       I, $470         ; Load 470 into I
$2D6    $5611   UNKNOWN  $5611           ; Unknown 5xxx instruction
$2D8    $79CD   ADD      V9, #CD         ; Add 205 to V9
$2DA    $DDCF   DRW      VD, VC, #F      ; Draw 15-byte sprite at VD, VC
$2DC    $BF8E   JP       V0, $F8E        ; Jump to V0 + F8E
$2DE    $0622   SYS      $622            ; System call to 622
$2E0    $FE4F   UNKNOWN  FE4F            ; Unknown Fxxx instruction
$2E2    $472F   SNE      V7, #2F         ; Skip if V7 != 47
$2E4    $8174   ADD      V1, V7          ; V1 += V7, VF = carry
$2E6    $6413   LD       V4, #13         ; Load 19 into V4
$2E8    $F15E   UNKNOWN  F15E            ; Unknown Fxxx instruction
$2EA    $0A5B   SYS      $A5B            ; System call to A5B
$2EC    $4957   SNE      V9, #57         ; Skip if V9 != 87
$2EE    $6682   LD       V6, #82         ; Load 130 into V6
$2F0    $396C   SE       V9, #6C         ; Skip if V9 == 108
$2F2    $A3D8   LD       I, $3D8         ; Load 3D8 into I
$2F4    $7C74   ADD      VC, #74         ; Add 116 to VC
$2F6    $5490   SE       V4, V9          ; Skip if V4 == V9
$2F8    $E41F   UNKNOWN  $E41F           ; Unknown Exxx instruction
$2FA    $CCF0   RND      VC, #F0         ; VC = random & F0
$2FC    $3320   SE       V3, #20         ; Skip if V3 == 32
$2FE    $FD15   LD       DT, VD          ; Delay timer = VD
$302    $0811   SYS      $811            ; System call to 811
$304    $2C33   CALL     $C33            ; Call subroutine at C33
$306    $DEE0   DRW      VE, VE, #0      ; Draw 0-byte sprite at VE, VE
$308    $58FC   UNKNOWN  $58FC           ; Unknown 5xxx instruction
$30A    $388F   SE       V8, #8F         ; Skip if V8 == 143
$30C    $01FF   SYS      $1FF            ; System call to 1FF
$30E    $8CE2   AND      VC, VE          ; VC &= VE
$310    $A468   LD       I, $468         ; Load 468 into I
$312    $E6A9   UNKNOWN  $E6A9           ; Unknown Exxx instruction
$314    $F57A   UNKNOWN  F57A            ; Unknown Fxxx instruction
$316    $1CC8   JP       $CC8            ; Jump to CC8
$318    $B030   JP       V0, $030        ; Jump to V0 + 030
$31A    $94B5   UNKNOWN  $94B5           ; Unknown 9xxx instruction
$31C    $FAF3   UNKNOWN  FAF3            ; Unknown Fxxx instruction
$31E    $336D   SE       V3, #6D         ; Skip if V3 == 109
$320    $0203   SYS      $203            ; System call to 203
$322    $4414   SNE      V4, #14         ; Skip if V4 != 20
$324    $6062   LD       V0, #62         ; Load 98 into V0
$326    $262B   CALL     $62B            ; Call subroutine at 62B
$328    $0B69   SYS      $B69            ; System call to B69
$32A    $E67E   UNKNOWN  $E67E           ; Unknown Exxx instruction
$32C    $60BA   LD       V0, #BA         ; Load 186 into V0
$32E    $D461   DRW      V4, V6, #1      ; Draw 1-byte sprite at V4, V6
$330    $9FAB   UNKNOWN  $9FAB           ; Unknown 9xxx instruction
$332    $6820   LD       V8, #20         ; Load 32 into V8
$334    $4F6F   SNE      VF, #6F         ; Skip if VF != 111
$336    $3B80   SE       VB, #80         ; Skip if VB == 128
$338    $4BBC   SNE      VB, #BC         ; Skip if VB != 188
$33A    $A574   LD       I, $574         ; Load 574 into I
$33C    $8DFA   UNKNOWN  8DFA            ; Unknown 8xxx instruction
$33E    $9B60   SNE      VB, V6          ; Skip if VB != V6
$340    $64B8   LD       V4, #B8         ; Load 184 into V4
$342    $E08A   UNKNOWN  $E08A           ; Unknown Exxx instruction
$344    $1D37   JP       $D37            ; Jump to D37
$346    $4E4C   SNE      VE, #4C         ; Skip if VE != 76
$348    $B761   JP       V0, $761        ; Jump to V0 + 761
$34A    $7C9D   ADD      VC, #9D         ; Add 157 to VC
$34C    $93D0   SNE      V3, VD          ; Skip if V3 != VD
$34E    $D09D   DRW      V0, V9, #D      ; Draw 13-byte sprite at V0, V9
$350    $6F3A   LD       VF, #3A         ; Load 58 into VF
$352    $C6CE   RND      V6, #CE         ; V6 = random & CE
$354    $4327   SNE      V3, #27         ; Skip if V3 != 39
$356    $6B05   LD       VB, #05         ; Load 5 into VB
$358    $CAC4   RND      VA, #C4         ; VA = random & C4
$35A    $EA7B   UNKNOWN  $EA7B           ; Unknown Exxx instruction
$35C    $37FA   SE       V7, #FA         ; Skip if V7 == 250
$35E    $275A   CALL     $75A            ; Call subroutine at 75A
$360    $76D9   ADD      V6, #D9         ; Add 217 to V6
$362    $5BEC   UNKNOWN  $5BEC           ; Unknown 5xxx instruction
$364    $35D0   SE       V5, #D0         ; Skip if V5 == 208
$366    $80F3   XOR      V0, VF          ; V0 ^= VF
$368    $B415   JP       V0, $415        ; Jump to V0 + 415
$36A    $7659   ADD      V6, #59         ; Add 89 to V6
$36C    $821E   SHL      V2              ; V2 <<= 1, VF = MSB
$36E    $F0EC   UNKNOWN  F0EC            ; Unknown Fxxx instruction
$370    $102B   JP       $02B            ; Jump to 02B
$372    $A7F8   LD       I, $7F8         ; Load 7F8 into I
$374    $C295   RND      V2, #95         ; V2 = random & 95
$376    $0D71   SYS      $D71            ; System call to D71
$378    $2AB6   CALL     $AB6            ; Call subroutine at AB6
$37A    $4FA3   SNE      VF, #A3         ; Skip if VF != 163
$37C    $9A89   UNKNOWN  $9A89           ; Unknown 9xxx instruction
$37E    $81DC   UNKNOWN  81DC            ; Unknown 8xxx instruction
$380    $C6AA   RND      V6, #AA         ; V6 = random & AA
$382    $2648   CALL     $648            ; Call subroutine at 648
$384    $18DA   JP       $8DA            ; Jump to 8DA
$386    $C1B4   RND      V1, #B4         ; V1 = random & B4
$388    $C7DB   RND      V7, #DB         ; V7 = random & DB
$38A    $6425   LD       V4, #25         ; Load 37 into V4
$38C    $21E0   CALL     $1E0            ; Call subroutine at 1E0
$38E    $DFDF   DRW      VF, VD, #F      ; Draw 15-byte sprite at VF, VD
$390    $648B   LD       V4, #8B         ; Load 139 into V4
$392    $BA7F   JP       V0, $A7F        ; Jump to V0 + A7F
$394    $A881   LD       I, $881         ; Load 881 into I
$396    $E119   UNKNOWN  $E119           ; Unknown Exxx instruction
$398    $FC31   UNKNOWN  FC31            ; Unknown Fxxx instruction
$39A    $8D13   XOR      VD, V1          ; VD ^= V1
$39C    $96DF   UNKNOWN  $96DF           ; Unknown 9xxx instruction
$39E    $EAD7   UNKNOWN  $EAD7           ; Unknown Exxx instruction
$3A0    $9A06   UNKNOWN  $9A06           ; Unknown 9xxx instruction
$3A2    $F534   UNKNOWN  F534            ; Unknown Fxxx instruction
$3A4    $E49D   UNKNOWN  $E49D           ; Unknown Exxx instruction
$3A6    $6BF0   LD       VB, #F0         ; Load 240 into VB
$3A8    $8DC8   UNKNOWN  8DC8            ; Unknown 8xxx instruction
$3AA    $01EF   SYS      $1EF            ; System call to 1EF
$3AC    $D08B   DRW      V0, V8, #B      ; Draw 11-byte sprite at V0, V8
$3AE    $3CB5   SE       VC, #B5         ; Skip if VC == 181
$3B0    $908E   UNKNOWN  $908E           ; Unknown 9xxx instruction
$3B2    $1EC8   JP       $EC8            ; Jump to EC8
$3B4    $6904   LD       V9, #04         ; Load 4 into V9
$3B6    $22E6   CALL     $2E6            ; Call subroutine at 2E6
$3B8    $F331   UNKNOWN  F331            ; Unknown Fxxx instruction
$3BA    $C912   RND      V9, #12         ; V9 = random & 12
$3BC    $EAFC   UNKNOWN  $EAFC           ; Unknown Exxx instruction
$3BE    $0A9D   SYS      $A9D            ; System call to A9D
$3C0    $7BFB   ADD      VB, #FB         ; Add 251 to VB
$3C2    $6A89   LD       VA, #89         ; Load 137 into VA
$3C4    $0156   SYS      $156            ; System call to 156
$3C6    $522A   UNKNOWN  $522A           ; Unknown 5xxx instruction
$3C8    $FFD7   UNKNOWN  FFD7            ; Unknown Fxxx instruction
$3CA    $8682   AND      V6, V8          ; V6 &= V8
$3CC    $BF4E   JP       V0, $F4E        ; Jump to V0 + F4E
$3CE    $DE9C   DRW      VE, V9, #C      ; Draw 12-byte sprite at VE, V9
$3D0    $3654   SE       V6, #54         ; Skip if V6 == 84
$3D2    $7A55   ADD      VA, #55         ; Add 85 to VA
$3D4    $3524   SE       V5, #24         ; Skip if V5 == 36
$3D6    $7C2A   ADD      VC, #2A         ; Add 42 to VC
$3D8    $CC79   RND      VC, #79         ; VC = random & 79
$3DA    $1E5A   JP       $E5A            ; Jump to E5A
$3DC    $82A2   AND      V2, VA          ; V2 &= VA
$3DE    $AF90   LD       I, $F90         ; Load F90 into I
$3E0    $498B   SNE      V9, #8B         ; Skip if V9 != 139
$3E2    $A55F   LD       I, $55F         ; Load 55F into I
$3E4    $EB78   UNKNOWN  $EB78           ; Unknown Exxx instruction
$3E6    $9409   UNKNOWN  $9409           ; Unknown 9xxx instruction
$3E8    $FB52   UNKNOWN  FB52            ; Unknown Fxxx instruction
$3EA    $3BC2   SE       VB, #C2         ; Skip if VB == 194
$3EC    $E525   UNKNOWN  $E525           ; Unknown Exxx instruction
$3EE    $47A9   SNE      V7, #A9         ; Skip if V7 != 169
$3F0    $BF13   JP       V0, $F13        ; Jump to V0 + F13
$3F2    $AF30   LD       I, $F30         ; Load F30 into I
$3F4    $D25C   DRW      V2, V5, #C      ; Draw 12-byte sprite at V2, V5
$3F6    $1E3D   JP       $E3D            ; Jump to E3D
$3F8    $D88B   DRW      V8, V8, #B      ; Draw 11-byte sprite at V8, V8
$3FA    $D1D1   DRW      V1, VD, #1      ; Draw 1-byte sprite at V1, VD
$3FC    $863F   UNKNOWN  863F            ; Unknown 8xxx instruction
$3FE    $9833   UNKNOWN  $9833           ; Unknown 9xxx instruction
$400    $BF34   JP       V0, $F34        ; Jump to V0 + F34
$402    $742D   ADD      V4, #2D         ; Add 45 to V4
$404    $C318   RND      V3, #18         ; V3 = random & 18
$406    $13FD   JP       $3FD            ; Jump to 3FD
$408    $4A6C   SNE      VA, #6C         ; Skip if VA != 108
$40A    $15B3   JP       $5B3            ; Jump to 5B3
$40C    $A3F8   LD       I, $3F8         ; Load 3F8 into I
$40E    $F820   UNKNOWN  F820            ; Unknown Fxxx instruction
$410    $32AE   SE       V2, #AE         ; Skip if V2 == 174
$412    $2C1E   CALL     $C1E            ; Call subroutine at C1E
$414    $EB77   UNKNOWN  $EB77           ; Unknown Exxx instruction
$416    $C9E9   RND      V9, #E9         ; V9 = random & E9
$418    $4D54   SNE      VD, #54         ; Skip if VD != 84
$41A    $C026   RND      V0, #26         ; V0 = random & 26
$41C    $7054   ADD      V0, #54         ; Add 84 to V0
$41E    $C0CF   RND      V0, #CF         ; V0 = random & CF
$420    $6D61   LD       VD, #61         ; Load 97 into VD
$422    $5AA8   UNKNOWN  $5AA8           ; Unknown 5xxx instruction
$424    $085A   SYS      $85A            ; System call to 85A
$426    $B9CE   JP       V0, $9CE        ; Jump to V0 + 9CE
$428    $DAC3   DRW      VA, VC, #3      ; Draw 3-byte sprite at VA, VC
$42A    $D06A   DRW      V0, V6, #A      ; Draw 10-byte sprite at V0, V6
$42C    $7791   ADD      V7, #91         ; Add 145 to V7
$42E    $8C9C   UNKNOWN  8C9C            ; Unknown 8xxx instruction
$430    $FF73   UNKNOWN  FF73            ; Unknown Fxxx instruction
$432    $BA96   JP       V0, $A96        ; Jump to V0 + A96
$434    $24E3   CALL     $4E3            ; Call subroutine at 4E3
$436    $D852   DRW      V8, V5, #2      ; Draw 2-byte sprite at V8, V5
$438    $5563   UNKNOWN  $5563           ; Unknown 5xxx instruction
$43A    $56C0   SE       V6, VC          ; Skip if V6 == VC
$43C    $36FA   SE       V6, #FA         ; Skip if V6 == 250
$43E    $2ED3   CALL     $ED3            ; Call subroutine at ED3
$440    $82EB   UNKNOWN  82EB            ; Unknown 8xxx instruction
$442    $0668   SYS      $668            ; System call to 668
$444    $47A3   SNE      V7, #A3         ; Skip if V7 != 163
$446    $F018   LD       ST, V0          ; Sound timer = V0
$448    $45CF   SNE      V5, #CF         ; Skip if V5 != 207
$44A    $B8CD   JP       V0, $8CD        ; Jump to V0 + 8CD
$44C    $01CF   SYS      $1CF            ; System call to 1CF
$44E    $F9D4   UNKNOWN  F9D4            ; Unknown Fxxx instruction
$450    $14C4   JP       $4C4            ; Jump to 4C4
$452    $F4D7   UNKNOWN  F4D7            ; Unknown Fxxx instruction
$454    $CD65   RND      VD, #65         ; VD = random & 65
$456    $BA2B   JP       V0, $A2B        ; Jump to V0 + A2B
$458    $881E   SHL      V8              ; V8 <<= 1, VF = MSB
$45A    $B490   JP       V0, $490        ; Jump to V0 + 490
$45C    $7EBE   ADD      VE, #BE         ; Add 190 to VE
$45E    $0D2C   SYS      $D2C            ; System call to D2C
$460    $78A8   ADD      V8, #A8         ; Add 168 to V8
$462    $C7A8   RND      V7, #A8         ; V7 = random & A8
$464    $EB31   UNKNOWN  $EB31           ; Unknown Exxx instruction
$466    $9584   UNKNOWN  $9584           ; Unknown 9xxx instruction
$468    $2430   CALL     $430            ; Call subroutine at 430
$46A    $CA31   RND      VA, #31         ; VA = random & 31
$46C    $7A17   ADD      VA, #17         ; Add 23 to VA
$46E    $2592   CALL     $592            ; Call subroutine at 592
$470    $69FA   LD       V9, #FA         ; Load 250 into V9
$472    $D97A   DRW      V9, V7, #A      ; Draw 10-byte sprite at V9, V7
$474    $9E56   UNKNOWN  $9E56           ; Unknown 9xxx instruction
$476    $4449   SNE      V4, #49         ; Skip if V4 != 73
$478    $D6C6   DRW      V6, VC, #6      ; Draw 6-byte sprite at V6, VC
$47A    $0984   SYS      $984            ; System call to 984
$47C    $B83F   JP       V0, $83F        ; Jump to V0 + 83F
$47E    $EB50   UNKNOWN  $EB50           ; Unknown Exxx instruction
$480    $E58F   UNKNOWN  $E58F           ; Unknown Exxx instruction
$482    $AA45   LD       I, $A45         ; Load A45 into I
$484    $A36E   LD       I, $36E         ; Load 36E into I
$486    $7D35   ADD      VD, #35         ; Add 53 to VD
$488    $A74D   LD       I, $74D         ; Load 74D into I
$48A    $2401   CALL     $401            ; Call subroutine at 401
$48C    $0A71   SYS      $A71            ; System call to A71
$48E    $5CE4   UNKNOWN  $5CE4           ; Unknown 5xxx instruction
$490    $BEF4   JP       V0, $EF4        ; Jump to V0 + EF4
$492    $18DA   JP       $8DA            ; Jump to 8DA
$494    $7688   ADD      V6, #88         ; Add 136 to V6
$496    $733B   ADD      V3, #3B         ; Add 59 to V3
$498    $90C1   UNKNOWN  $90C1           ; Unknown 9xxx instruction
$49A    $F3A6   UNKNOWN  F3A6            ; Unknown Fxxx instruction
$49C    $FF04   UNKNOWN  FF04            ; Unknown Fxxx instruction
$49E    $2819   CALL     $819            ; Call subroutine at 819
$4A0    $1916   JP       $916            ; Jump to 916
$4A2    $5494   UNKNOWN  $5494           ; Unknown 5xxx instruction
$4A4    $B74A   JP       V0, $74A        ; Jump to V0 + 74A
$4A6    $16B6   JP       $6B6            ; Jump to 6B6
$4A8    $3990   SE       V9, #90         ; Skip if V9 == 144
$4AA    $4C93   SNE      VC, #93         ; Skip if VC != 147
$4AC    $7B14   ADD      VB, #14         ; Add 20 to VB
$4AE    $3EF3   SE       VE, #F3         ; Skip if VE == 243
$4B0    $740C   ADD      V4, #0C         ; Add 12 to V4
$4B2    $2C70   CALL     $C70            ; Call subroutine at C70
$4B4    $FF5F   UNKNOWN  FF5F            ; Unknown Fxxx instruction
$4B6    $AFF8   LD       I, $FF8         ; Load FF8 into I
$4B8    $C7C2   RND      V7, #C2         ; V7 = random & C2
$4BA    $F9A0   UNKNOWN  F9A0            ; Unknown Fxxx instruction
$4BC    $118E   JP       $18E            ; Jump to 18E
$4BE    $F8DF   UNKNOWN  F8DF            ; Unknown Fxxx instruction
$4C0    $ED25   UNKNOWN  $ED25           ; Unknown Exxx instruction
$4C2    $A3EA   LD       I, $3EA         ; Load 3EA into I
$4C4    $3DB8   SE       VD, #B8         ; Skip if VD == 184
$4C6    $89DF   UNKNOWN  89DF            ; Unknown 8xxx instruction
$4C8    $A63E   LD       I, $63E         ; Load 63E into I
$4CA    $1E36   JP       $E36            ; Jump to E36
$4CC    $16AC   JP       $6AC            ; Jump to 6AC
$4CE    $A4A7   LD       I, $4A7         ; Load 4A7 into I
$4D0    $2E5B   CALL     $E5B            ; Call subroutine at E5B
$4D2    $9B71   UNKNOWN  $9B71           ; Unknown 9xxx instruction
$4D4    $748A   ADD      V4, #8A         ; Add 138 to V4
$4D6    $A323   LD       I, $323         ; Load 323 into I
$4D8    $0264   SYS      $264            ; System call to 264
$4DA    $1C7C   JP       $C7C            ; Jump to C7C
$4DC    $7DAD   ADD      VD, #AD         ; Add 173 to VD
$4DE    $6101   LD       V1, #01         ; Load 1 into V1
$4E0    $63E0   LD       V3, #E0         ; Load 224 into V3
$4E2    $912A   UNKNOWN  $912A           ; Unknown 9xxx instruction
$4E4    $6E25   LD       VE, #25         ; Load 37 into VE
$4E6    $E977   UNKNOWN  $E977           ; Unknown Exxx instruction
$4E8    $D609   DRW      V6, V0, #9      ; Draw 9-byte sprite at V6, V0
$4EA    $BA42   JP       V0, $A42        ; Jump to V0 + A42
$4EC    $19A2   JP       $9A2            ; Jump to 9A2
$4EE    $C56E   RND      V5, #6E         ; V5 = random & 6E
$4F0    $A666   LD       I, $666         ; Load 666 into I
$4F2    $42B0   SNE      V2, #B0         ; Skip if V2 != 176
$4F4    $F090   UNKNOWN  F090            ; Unknown Fxxx instruction
$4F6    $8B14   ADD      VB, V1          ; VB += V1, VF = carry
$4F8    $ABF8   LD       I, $BF8         ; Load BF8 into I
$4FA    $D11C   DRW      V1, V1, #C      ; Draw 12-byte sprite at V1, V1
$4FC    $13D9   JP       $3D9            ; Jump to 3D9
$4FE    $6D0F   LD       VD, #0F         ; Load 15 into VD
$500    $9B9E   UNKNOWN  $9B9E           ; Unknown 9xxx instruction
$502    $07FE   SYS      $7FE            ; System call to 7FE
$504    $8606   SHR      V6              ; V6 >>= 1, VF = LSB
$506    $CBF4   RND      VB, #F4         ; VB = random & F4
$508    $DD53   DRW      VD, V5, #3      ; Draw 3-byte sprite at VD, V5
$50A    $9025   UNKNOWN  $9025           ; Unknown 9xxx instruction
$50C    $4185   SNE      V1, #85         ; Skip if V1 != 133
$50E    $F882   UNKNOWN  F882            ; Unknown Fxxx instruction
$510    $2F19   CALL     $F19            ; Call subroutine at F19
$512    $86B6   SHR      V6              ; V6 >>= 1, VF = LSB
$514    $8ACD   UNKNOWN  8ACD            ; Unknown 8xxx instruction
$516    $A1F4   LD       I, $1F4         ; Load 1F4 into I
$518    $4C59   SNE      VC, #59         ; Skip if VC != 89
$51A    $44D4   SNE      V4, #D4         ; Skip if V4 != 212
$51C    $14DB   JP       $4DB            ; Jump to 4DB
$51E    $7FE3   ADD      VF, #E3         ; Add 227 to VF
$520    $B7B1   JP       V0, $7B1        ; Jump to V0 + 7B1
$522    $6059   LD       V0, #59         ; Load 89 into V0
$524    $07EC   SYS      $7EC            ; System call to 7EC
$526    $F4B3   UNKNOWN  F4B3            ; Unknown Fxxx instruction
$528    $0E80   SYS      $E80            ; System call to E80
$52A    $A1E7   LD       I, $1E7         ; Load 1E7 into I
$52C    $8B65   SUB      VB, V6          ; VB -= V6, VF = !borrow
$52E    $FC69   UNKNOWN  FC69            ; Unknown Fxxx instruction
$530    $2BE6   CALL     $BE6            ; Call subroutine at BE6
$532    $172C   JP       $72C            ; Jump to 72C
$534    $BDC2   JP       V0, $DC2        ; Jump to V0 + DC2
$536    $8E3C   UNKNOWN  8E3C            ; Unknown 8xxx instruction
$538    $6299   LD       V2, #99         ; Load 153 into V2
$53A    $40C9   SNE      V0, #C9         ; Skip if V0 != 201
$53C    $AA85   LD       I, $A85         ; Load A85 into I
$53E    $BBC2   JP       V0, $BC2        ; Jump to V0 + BC2
$540    $926C   UNKNOWN  $926C           ; Unknown 9xxx instruction
$542    $BCE9   JP       V0, $CE9        ; Jump to V0 + CE9
$544    $EC97   UNKNOWN  $EC97           ; Unknown Exxx instruction
$546    $9628   UNKNOWN  $9628           ; Unknown 9xxx instruction
$548    $873F   UNKNOWN  873F            ; Unknown 8xxx instruction
$54A    $7ED7   ADD      VE, #D7         ; Add 215 to VE
$54C    $C9ED   RND      V9, #ED         ; V9 = random & ED
$54E    $35BE   SE       V5, #BE         ; Skip if V5 == 190
$550    $666F   LD       V6, #6F         ; Load 111 into V6
$552    $F06A   UNKNOWN  F06A            ; Unknown Fxxx instruction
$554    $4032   SNE      V0, #32         ; Skip if V0 != 50
$556    $3F6E   SE       VF, #6E         ; Skip if VF == 110
$558    $651A   LD       V5, #1A         ; Load 26 into V5
$55A    $14C1   JP       $4C1            ; Jump to 4C1
$55C    $CE19   RND      VE, #19         ; VE = random & 19
$55E    $0629   SYS      $629            ; System call to 629
$560    $C607   RND      V6, #07         ; V6 = random & 07
$562    $EC8C   UNKNOWN  $EC8C           ; Unknown Exxx instruction
$564    $5902   UNKNOWN  $5902           ; Unknown 5xxx instruction
$566    $D4CA   DRW      V4, VC, #A      ; Draw 10-byte sprite at V4, VC
$568    $2FBC   CALL     $FBC            ; Call subroutine at FBC
$56A    $D202   DRW      V2, V0, #2      ; Draw 2-byte sprite at V2, V0
$56C    $2796   CALL     $796            ; Call subroutine at 796
$56E    $FCD9   UNKNOWN  FCD9            ; Unknown Fxxx instruction
$570    $F65B   UNKNOWN  F65B            ; Unknown Fxxx instruction
$572    $7FA7   ADD      VF, #A7         ; Add 167 to VF
$574    $05A4   SYS      $5A4            ; System call to 5A4
$576    $433B   SNE      V3, #3B         ; Skip if V3 != 59
$578    $4CDF   SNE      VC, #DF         ; Skip if VC != 223
$57A    $298F   CALL     $98F            ; Call subroutine at 98F
$57C    $168C   JP       $68C            ; Jump to 68C
$57E    $2FD5   CALL     $FD5            ; Call subroutine at FD5
$580    $E358   UNKNOWN  $E358           ; Unknown Exxx instruction
$582    $1571   JP       $571            ; Jump to 571
$584    $7854   ADD      V8, #54         ; Add 84 to V8
$586    $BED3   JP       V0, $ED3        ; Jump to V0 + ED3
$588    $E328   UNKNOWN  $E328           ; Unknown Exxx instruction
$58A    $AF12   LD       I, $F12         ; Load F12 into I
$58C    $B3FB   JP       V0, $3FB        ; Jump to V0 + 3FB
$58E    $3C86   SE       VC, #86         ; Skip if VC == 134
$590    $85C6   SHR      V5              ; V5 >>= 1, VF = LSB
$592    $857F   UNKNOWN  857F            ; Unknown 8xxx instruction
$594    $1C42   JP       $C42            ; Jump to C42
$596    $FA43   UNKNOWN  FA43            ; Unknown Fxxx instruction
$598    $9A04   UNKNOWN  $9A04           ; Unknown 9xxx instruction
$59A    $1CF1   JP       $CF1            ; Jump to CF1
$59C    $2987   CALL     $987            ; Call subroutine at 987
$59E    $2947   CALL     $947            ; Call subroutine at 947
$5A0    $FBD6   UNKNOWN  FBD6            ; Unknown Fxxx instruction
$5A2    $7525   ADD      V5, #25         ; Add 37 to V5
$5A4    $C14F   RND      V1, #4F         ; V1 = random & 4F
$5A6    $BEF8   JP       V0, $EF8        ; Jump to V0 + EF8
$5A8    $8D7C   UNKNOWN  8D7C            ; Unknown 8xxx instruction
$5AA    $C4AF   RND      V4, #AF         ; V4 = random & AF
$5AC    $9C8E   UNKNOWN  $9C8E           ; Unknown 9xxx instruction
$5AE    $C04C   RND      V0, #4C         ; V0 = random & 4C
$5B0    $C6B2   RND      V6, #B2         ; V6 = random & B2
$5B2    $8F0B   UNKNOWN  8F0B            ; Unknown 8xxx instruction
$5B4    $5840   SE       V8, V4          ; Skip if V8 == V4
$5B6    $0A61   SYS      $A61            ; System call to A61
$5B8    $5BA5   UNKNOWN  $5BA5           ; Unknown 5xxx instruction
$5BA    $5003   UNKNOWN  $5003           ; Unknown 5xxx instruction
$5BC    $0915   SYS      $915            ; System call to 915
$5BE    $2466   CALL     $466            ; Call subroutine at 466
$5C0    $F65B   UNKNOWN  F65B            ; Unknown Fxxx instruction
$5C2    $55F2   UNKNOWN  $55F2           ; Unknown 5xxx instruction
$5C4    $3A7A   SE       VA, #7A         ; Skip if VA == 122
$5C6    $BA8F   JP       V0, $A8F        ; Jump to V0 + A8F
$5C8    $A033   LD       I, $033         ; Load 033 into I
$5CA    $2A4A   CALL     $A4A            ; Call subroutine at A4A
$5CC    $C1E5   RND      V1, #E5         ; V1 = random & E5
$5CE    $698B   LD       V9, #8B         ; Load 139 into V9
$5D0    $1005   JP       $005            ; Jump to 005
$5D2    $6989   LD       V9, #89         ; Load 137 into V9
$5D4    $D6F7   DRW      V6, VF, #7      ; Draw 7-byte sprite at V6, VF
$5D6    $B6EA   JP       V0, $6EA        ; Jump to V0 + 6EA
$5D8    $0E0D   SYS      $E0D            ; System call to E0D
$5DA    $43D2   SNE      V3, #D2         ; Skip if V3 != 210
$5DC    $F3A5   UNKNOWN  F3A5            ; Unknown Fxxx instruction
$5DE    $64DA   LD       V4, #DA         ; Load 218 into V4
$5E0    $F7A3   UNKNOWN  F7A3            ; Unknown Fxxx instruction
$5E2    $813E   SHL      V1              ; V1 <<= 1, VF = MSB
$5E4    $2887   CALL     $887            ; Call subroutine at 887
$5E6    $9DA3   UNKNOWN  $9DA3           ; Unknown 9xxx instruction
$5E8    $00B7   SYS      $0B7            ; System call to 0B7
$5EA    $3785   SE       V7, #85         ; Skip if V7 == 133
$5EC    $29FF   CALL     $9FF            ; Call subroutine at 9FF
$5EE    $6EDC   LD       VE, #DC         ; Load 220 into VE
$5F0    $15CE   JP       $5CE            ; Jump to 5CE
$5F2    $A926   LD       I, $926         ; Load 926 into I
$5F4    $907A   UNKNOWN  $907A           ; Unknown 9xxx instruction
$5F6    $C73E   RND      V7, #3E         ; V7 = random & 3E
$5F8    $2F9D   CALL     $F9D            ; Call subroutine at F9D
$5FA    $75DD   ADD      V5, #DD         ; Add 221 to V5
$5FC    $61F1   LD       V1, #F1         ; Load 241 into V1
$5FE    $A020   LD       I, $020         ; Load 020 into I
$600    $F8C1   UNKNOWN  F8C1            ; Unknown Fxxx instruction
$602    $9204   UNKNOWN  $9204           ; Unknown 9xxx instruction
$604    $7BD5   ADD      VB, #D5         ; Add 213 to VB
$606    $6C4A   LD       VC, #4A         ; Load 74 into VC
$608    $DE9F   DRW      VE, V9, #F      ; Draw 15-byte sprite at VE, V9
$60A    $8416   SHR      V4              ; V4 >>= 1, VF = LSB
$60C    $E6A8   UNKNOWN  $E6A8           ; Unknown Exxx instruction
$60E    $5DC5   UNKNOWN  $5DC5           ; Unknown 5xxx instruction
$610    $A98E   LD       I, $98E         ; Load 98E into I
$612    $1EF4   JP       $EF4            ; Jump to EF4
$614    $E798   UNKNOWN  $E798           ; Unknown Exxx instruction
$616    $50CF   UNKNOWN  $50CF           ; Unknown 5xxx instruction
$618    $1A3A   JP       $A3A            ; Jump to A3A
$61A    $B06F   JP       V0, $06F        ; Jump to V0 + 06F
$61C    $9291   UNKNOWN  $9291           ; Unknown 9xxx instruction
$61E    $435F   SNE      V3, #5F         ; Skip if V3 != 95
$620    $D737   DRW      V7, V3, #7      ; Draw 7-byte sprite at V7, V3
$622    $4B7B   SNE      VB, #7B         ; Skip if VB != 123
$624    $4BC8   SNE      VB, #C8         ; Skip if VB != 200
$626    $4E8D   SNE      VE, #8D         ; Skip if VE != 141
$628    $DED2   DRW      VE, VD, #2      ; Draw 2-byte sprite at VE, VD
$62A    $CA38   RND      VA, #38         ; VA = random & 38
$62C    $73CB   ADD      V3, #CB         ; Add 203 to V3
$62E    $22B0   CALL     $2B0            ; Call subroutine at 2B0
$630    $C351   RND      V3, #51         ; V3 = random & 51
$632    $CF22   RND      VF, #22         ; VF = random & 22
$634    $4709   SNE      V7, #09         ; Skip if V7 != 9
$636    $8707   SUBN     V7, V0          ; V7 = V0 - V7, VF = !borrow
$638    $23A3   CALL     $3A3            ; Call subroutine at 3A3
$63A    $0576   SYS      $576            ; System call to 576
$63C    $C8AC   RND      V8, #AC         ; V8 = random & AC
$63E    $F11E   ADD      I, V1           ; I += V1
$640    $6F0D   LD       VF, #0D         ; Load 13 into VF
$642    $3C3D   SE       VC, #3D         ; Skip if VC == 61
$644    $AD14   LD       I, $D14         ; Load D14 into I
$646    $1200   JP       $200            ; Jump to 200
$648    $4F18   SNE      VF, #18         ; Skip if VF != 24
$64A    $D54C   DRW      V5, V4, #C      ; Draw 12-byte sprite at V5, V4
$64C    $CB01   RND      VB, #01         ; VB = random & 01
$64E    $216F   CALL     $16F            ; Call subroutine at 16F
$650    $8826   SHR      V8              ; V8 >>= 1, VF = LSB
$652    $9DFF   UNKNOWN  $9DFF           ; Unknown 9xxx instruction
$654    $3E03   SE       VE, #03         ; Skip if VE == 3
$656    $3590   SE       V5, #90         ; Skip if V5 == 144
$658    $A5D2   LD       I, $5D2         ; Load 5D2 into I
$65A    $0C93   SYS      $C93            ; System call to C93
$65C    $CA5D   RND      VA, #5D         ; VA = random & 5D
$65E    $80EA   UNKNOWN  80EA            ; Unknown 8xxx instruction
$660    $2B04   CALL     $B04            ; Call subroutine at B04
$662    $9316   UNKNOWN  $9316           ; Unknown 9xxx instruction
$664    $4D60   SNE      VD, #60         ; Skip if VD != 96
$666    $2A85   CALL     $A85            ; Call subroutine at A85
$668    $ABDA   LD       I, $BDA         ; Load BDA into I
$66A    $7014   ADD      V0, #14         ; Add 20 to V0
$66C    $37E3   SE       V7, #E3         ; Skip if V7 == 227
$66E    $C97A   RND      V9, #7A         ; V9 = random & 7A
$670    $FC5A   UNKNOWN  FC5A            ; Unknown Fxxx instruction
$672    $5936   UNKNOWN  $5936           ; Unknown 5xxx instruction
$674    $46A6   SNE      V6, #A6         ; Skip if V6 != 166
$676    $0546   SYS      $546            ; System call to 546
$678    $D221   DRW      V2, V2, #1      ; Draw 1-byte sprite at V2, V2
$67A    $A1C4   LD       I, $1C4         ; Load 1C4 into I
$67C    $D442   DRW      V4, V4, #2      ; Draw 2-byte sprite at V4, V4
$67E    $4913   SNE      V9, #13         ; Skip if V9 != 19
$680    $CC58   RND      VC, #58         ; VC = random & 58
$682    $EBBD   UNKNOWN  $EBBD           ; Unknown Exxx instruction
$684    $5DDC   UNKNOWN  $5DDC           ; Unknown 5xxx instruction
$686    $9778   UNKNOWN  $9778           ; Unknown 9xxx instruction
$688    $A88B   LD       I, $88B         ; Load 88B into I
$68A    $C4A2   RND      V4, #A2         ; V4 = random & A2
$68C    $0675   SYS      $675            ; System call to 675
$68E    $B740   JP       V0, $740        ; Jump to V0 + 740
$690    $93C9   UNKNOWN  $93C9           ; Unknown 9xxx instruction
$692    $C9F2   RND      V9, #F2         ; V9 = random & F2
$694    $0C44   SYS      $C44            ; System call to C44
$696    $83D3   XOR      V3, VD          ; V3 ^= VD
$698    $6743   LD       V7, #43         ; Load 67 into V7
$69A    $75B6   ADD      V5, #B6         ; Add 182 to V5
$69C    $3235   SE       V2, #35         ; Skip if V2 == 53
$69E    $18D1   JP       $8D1            ; Jump to 8D1
$6A0    $041E   SYS      $41E            ; System call to 41E
$6A2    $136D   JP       $36D            ; Jump to 36D
$6A4    $BE1B   JP       V0, $E1B        ; Jump to V0 + E1B
$6A6    $D802   DRW      V8, V0, #2      ; Draw 2-byte sprite at V8, V0
$6A8    $A772   LD       I, $772         ; Load 772 into I
$6AA    $952F   UNKNOWN  $952F           ; Unknown 9xxx instruction
$6AC    $346A   SE       V4, #6A         ; Skip if V4 == 106
$6AE    $9F2E   UNKNOWN  $9F2E           ; Unknown 9xxx instruction
$6B0    $390F   SE       V9, #0F         ; Skip if V9 == 15
$6B2    $7CDD   ADD      VC, #DD         ; Add 221 to VC
$6B4    $4962   SNE      V9, #62         ; Skip if V9 != 98
$6B6    $1ED1   JP       $ED1            ; Jump to ED1
$6B8    $1779   JP       $779            ; Jump to 779
$6BA    $018B   SYS      $18B            ; System call to 18B
$6BC    $0019   SYS      $019            ; System call to 019
$6BE    $E601   UNKNOWN  $E601           ; Unknown Exxx instruction
$6C0    $75EF   ADD      V5, #EF         ; Add 239 to V5
$6C2    $599A   UNKNOWN  $599A           ; Unknown 5xxx instruction
$6C4    $9D5C   UNKNOWN  $9D5C           ; Unknown 9xxx instruction
$6C6    $D64F   DRW      V6, V4, #F      ; Draw 15-byte sprite at V6, V4
$6C8    $7F7D   ADD      VF, #7D         ; Add 125 to VF
$6CA    $38A7   SE       V8, #A7         ; Skip if V8 == 167
$6CC    $8CE7   SUBN     VC, VE          ; VC = VE - VC, VF = !borrow
$6CE    $C9F0   RND      V9, #F0         ; V9 = random & F0
$6D0    $BE45   JP       V0, $E45        ; Jump to V0 + E45
$6D2    $CF6B   RND      VF, #6B         ; VF = random & 6B
$6D4    $565F   UNKNOWN  $565F           ; Unknown 5xxx instruction
$6D6    $35FA   SE       V5, #FA         ; Skip if V5 == 250
$6D8    $E842   UNKNOWN  $E842           ; Unknown Exxx instruction
$6DA    $7FDB   ADD      VF, #DB         ; Add 219 to VF
$6DC    $75AF   ADD      V5, #AF         ; Add 175 to V5
$6DE    $14E4   JP       $4E4            ; Jump to 4E4
$6E0    $DF56   DRW      VF, V5, #6      ; Draw 6-byte sprite at VF, V5
$6E2    $3214   SE       V2, #14         ; Skip if V2 == 20
$6E4    $D398   DRW      V3, V9, #8      ; Draw 8-byte sprite at V3, V9
$6E6    $A420   LD       I, $420         ; Load 420 into I
$6E8    $DFAA   DRW      VF, VA, #A      ; Draw 10-byte sprite at VF, VA
$6EA    $ABB5   LD       I, $BB5         ; Load BB5 into I
$6EC    $6B69   LD       VB, #69         ; Load 105 into VB
$6EE    $1262   JP       $262            ; Jump to 262
$6F0    $61D3   LD       V1, #D3         ; Load 211 into V1
$6F2    $4513   SNE      V5, #13         ; Skip if V5 != 19
$6F4    $CA08   RND      VA, #08         ; VA = random & 08
$6F6    $A13A   LD       I, $13A         ; Load 13A into I
$6F8    $87E6   SHR      V7              ; V7 >>= 1, VF = LSB
$6FA    $4C94   SNE      VC, #94         ; Skip if VC != 148
$6FC    $211A   CALL     $11A            ; Call subroutine at 11A
$6FE    $58E7   UNKNOWN  $58E7           ; Unknown 5xxx instruction
$700    $1239   JP       $239            ; Jump to 239
$702    $7967   ADD      V9, #67         ; Add 103 to V9
$704    $5443   UNKNOWN  $5443           ; Unknown 5xxx instruction
$706    $7191   ADD      V1, #91         ; Add 145 to V1
$708    $1D6E   JP       $D6E            ; Jump to D6E
$70A    $75C4   ADD      V5, #C4         ; Add 196 to V5
$70C    $7EC6   ADD      VE, #C6         ; Add 198 to VE
$70E    $0519   SYS      $519            ; System call to 519
$710    $E738   UNKNOWN  $E738           ; Unknown Exxx instruction
$712    $351C   SE       V5, #1C         ; Skip if V5 == 28
$714    $3F75   SE       VF, #75         ; Skip if VF == 117
$716    $B59F   JP       V0, $59F        ; Jump to V0 + 59F
$718    $EC3E   UNKNOWN  $EC3E           ; Unknown Exxx instruction
$71A    $8E95   SUB      VE, V9          ; VE -= V9, VF = !borrow
$71C    $470D   SNE      V7, #0D         ; Skip if V7 != 13
$71E    $3C73   SE       VC, #73         ; Skip if VC == 115
$720    $D7EE   DRW      V7, VE, #E      ; Draw 14-byte sprite at V7, VE
$722    $A4EE   LD       I, $4EE         ; Load 4EE into I
$724    $EEB9   UNKNOWN  $EEB9           ; Unknown Exxx instruction
$726    $1EE3   JP       $EE3            ; Jump to EE3
$728    $5A7E   UNKNOWN  $5A7E           ; Unknown 5xxx instruction
$72A    $9423   UNKNOWN  $9423           ; Unknown 9xxx instruction
$72C    $4900   SNE      V9, #00         ; Skip if V9 != 0
$72E    $0008   SYS      $008            ; System call to 008
$730    $7321   ADD      V3, #21         ; Add 33 to V3
$732    $FAE0   UNKNOWN  FAE0            ; Unknown Fxxx instruction
$734    $5452   UNKNOWN  $5452           ; Unknown 5xxx instruction
$736    $54F3   UNKNOWN  $54F3           ; Unknown 5xxx instruction
$738    $AAE2   LD       I, $AE2         ; Load AE2 into I
$73A    $25E9   CALL     $5E9            ; Call subroutine at 5E9
$73C    $BC91   JP       V0, $C91        ; Jump to V0 + C91
$73E    $8CEB   UNKNOWN  8CEB            ; Unknown 8xxx instruction
$740    $923E   UNKNOWN  $923E           ; Unknown 9xxx instruction
$742    $A5DD   LD       I, $5DD         ; Load 5DD into I
$744    $87F4   ADD      V7, VF          ; V7 += VF, VF = carry
$746    $7D69   ADD      VD, #69         ; Add 105 to VD
$748    $6CED   LD       VC, #ED         ; Load 237 into VC
$74A    $9564   UNKNOWN  $9564           ; Unknown 9xxx instruction
$74C    $3CEF   SE       VC, #EF         ; Skip if VC == 239
$74E    $7C99   ADD      VC, #99         ; Add 153 to VC
$750    $D877   DRW      V8, V7, #7      ; Draw 7-byte sprite at V8, V7
$752    $C8FC   RND      V8, #FC         ; V8 = random & FC
$754    $AA7F   LD       I, $A7F         ; Load A7F into I
$756    $35FA   SE       V5, #FA         ; Skip if V5 == 250
$758    $8068   UNKNOWN  8068            ; Unknown 8xxx instruction
$75A    $2184   CALL     $184            ; Call subroutine at 184
$75C    $B648   JP       V0, $648        ; Jump to V0 + 648
$75E    $8ED3   XOR      VE, VD          ; VE ^= VD
$760    $74D9   ADD      V4, #D9         ; Add 217 to V4
$762    $47FC   SNE      V7, #FC         ; Skip if V7 != 252
$764    $337A   SE       V3, #7A         ; Skip if V3 == 122
$766    $9720   SNE      V7, V2          ; Skip if V7 != V2
$768    $E256   UNKNOWN  $E256           ; Unknown Exxx instruction
$76A    $A9CB   LD       I, $9CB         ; Load 9CB into I
$76C    $3125   SE       V1, #25         ; Skip if V1 == 37
$76E    $549C   UNKNOWN  $549C           ; Unknown 5xxx instruction
$770    $6AE4   LD       VA, #E4         ; Load 228 into VA
$772    $6850   LD       V8, #50         ; Load 80 into V8
$774    $8FC9   UNKNOWN  8FC9            ; Unknown 8xxx instruction
$776    $29FC   CALL     $9FC            ; Call subroutine at 9FC
$778    $18C5   JP       $8C5            ; Jump to 8C5
$77A    $C0F0   RND      V0, #F0         ; V0 = random & F0
$77C    $1B1E   JP       $B1E            ; Jump to B1E
$77E    $353E   SE       V5, #3E         ; Skip if V5 == 62
$780    $67D6   LD       V7, #D6         ; Load 214 into V7
$782    $F4AE   UNKNOWN  F4AE            ; Unknown Fxxx instruction
$784    $0C3C   SYS      $C3C            ; System call to C3C
$786    $472E   SNE      V7, #2E         ; Skip if V7 != 46
$788    $FF57   UNKNOWN  FF57            ; Unknown Fxxx instruction
$78A    $AA86   LD       I, $A86         ; Load A86 into I
$78C    $D129   DRW      V1, V2, #9      ; Draw 9-byte sprite at V1, V2
$78E    $A2AD   LD       I, $2AD         ; Load 2AD into I
$790    $38DA   SE       V8, #DA         ; Skip if V8 == 218
$792    $D6F4   DRW      V6, VF, #4      ; Draw 4-byte sprite at V6, VF
$794    $36AA   SE       V6, #AA         ; Skip if V6 == 170
$796    $4464   SNE      V4, #64         ; Skip if V4 != 100
$798    $8C52   AND      VC, V5          ; VC &= V5
$79A    $FA3F   UNKNOWN  FA3F            ; Unknown Fxxx instruction
$79C    $EC85   UNKNOWN  $EC85           ; Unknown Exxx instruction
$79E    $3BA4   SE       VB, #A4         ; Skip if VB == 164
$7A0    $36DF   SE       V6, #DF         ; Skip if V6 == 223
$7A2    $D57A   DRW      V5, V7, #A      ; Draw 10-byte sprite at V5, V7
$7A4    $3ED1   SE       VE, #D1         ; Skip if VE == 209
$7A6    $7BDF   ADD      VB, #DF         ; Add 223 to VB
$7A8    $F5FE   UNKNOWN  F5FE            ; Unknown Fxxx instruction
$7AA    $9411   UNKNOWN  $9411           ; Unknown 9xxx instruction
$7AC    $AB0F   LD       I, $B0F         ; Load B0F into I
$7AE    $0ABD   SYS      $ABD            ; System call to ABD
$7B0    $B990   JP       V0, $990        ; Jump to V0 + 990
$7B2    $8C08   UNKNOWN  8C08            ; Unknown 8xxx instruction
$7B4    $669F   LD       V6, #9F         ; Load 159 into V6
$7B6    $CE64   RND      VE, #64         ; VE = random & 64
$7B8    $2822   CALL     $822            ; Call subroutine at 822
$7BA    $A1C4   LD       I, $1C4         ; Load 1C4 into I
$7BC    $8A76   SHR      VA              ; VA >>= 1, VF = LSB
$7BE    $AE50   LD       I, $E50         ; Load E50 into I
$7C0    $759B   ADD      V5, #9B         ; Add 155 to V5
$7C2    $835C   UNKNOWN  835C            ; Unknown 8xxx instruction
$7C4    $ADFD   LD       I, $DFD         ; Load DFD into I
$7C6    $4AA4   SNE      VA, #A4         ; Skip if VA != 164
$7C8    $BD24   JP       V0, $D24        ; Jump to V0 + D24
$7CA    $2149   CALL     $149            ; Call subroutine at 149
$7CC    $1D39   JP       $D39            ; Jump to D39
$7CE    $B69A   JP       V0, $69A        ; Jump to V0 + 69A
$7D0    $16EF   JP       $6EF            ; Jump to 6EF
$7D2    $A8DB   LD       I, $8DB         ; Load 8DB into I
$7D4    $F76E   UNKNOWN  F76E            ; Unknown Fxxx instruction
$7D6    $4047   SNE      V0, #47         ; Skip if V0 != 71
$7D8    $07B0   SYS      $7B0            ; System call to 7B0
$7DA    $447C   SNE      V4, #7C         ; Skip if V4 != 124
$7DC    $3222   SE       V2, #22         ; Skip if V2 == 34
$7DE    $2C10   CALL     $C10            ; Call subroutine at C10
$7E0    $0174   SYS      $174            ; System call to 174
$7E2    $9547   UNKNOWN  $9547           ; Unknown 9xxx instruction
$7E4    $4944   SNE      V9, #44         ; Skip if V9 != 68
$7E6    $C791   RND      V7, #91         ; V7 = random & 91
$7E8    $4EF3   SNE      VE, #F3         ; Skip if VE != 243
$7EA    $E3A9   UNKNOWN  $E3A9           ; Unknown Exxx instruction
$7EC    $4E89   SNE      VE, #89         ; Skip if VE != 137
$7EE    $63DF   LD       V3, #DF         ; Load 223 into V3
$7F0    $9F5B   UNKNOWN  $9F5B           ; Unknown 9xxx instruction
$7F2    $838D   UNKNOWN  838D            ; Unknown 8xxx instruction
$7F4    $66B4   LD       V6, #B4         ; Load 180 into V6
$7F6    $76A0   ADD      V6, #A0         ; Add 160 to V6
$7F8    $A349   LD       I, $349         ; Load 349 into I
$7FA    $96A5   UNKNOWN  $96A5           ; Unknown 9xxx instruction
$7FC    $3C24   SE       VC, #24         ; Skip if VC == 36
$7FE    $DA8C   DRW      VA, V8, #C      ; Draw 12-byte sprite at VA, V8
$800    $1BA1   JP       $BA1            ; Jump to BA1
$802    $FF2C   UNKNOWN  FF2C            ; Unknown Fxxx instruction
$804    $A183   LD       I, $183         ; Load 183 into I
$806    $9396   UNKNOWN  $9396           ; Unknown 9xxx instruction
$808    $11F6   JP       $1F6            ; Jump to 1F6
$80A    $8B58   UNKNOWN  8B58            ; Unknown 8xxx instruction
$80C    $8285   SUB      V2, V8          ; V2 -= V8, VF = !borrow
$80E    $BA98   JP       V0, $A98        ; Jump to V0 + A98
$810    $1B02   JP       $B02            ; Jump to B02
$812    $4970   SNE      V9, #70         ; Skip if V9 != 112
$814    $68E1   LD       V8, #E1         ; Load 225 into V8
$816    $A640   LD       I, $640         ; Load 640 into I
$818    $8DD4   ADD      VD, VD          ; VD += VD, VF = carry
$81A    $FD36   UNKNOWN  FD36            ; Unknown Fxxx instruction
$81C    $7EF0   ADD      VE, #F0         ; Add 240 to VE
$81E    $F46B   UNKNOWN  F46B            ; Unknown Fxxx instruction
$820    $1CE9   JP       $CE9            ; Jump to CE9
$822    $F22C   UNKNOWN  F22C            ; Unknown Fxxx instruction
$824    $9A8A   UNKNOWN  $9A8A           ; Unknown 9xxx instruction
$826    $8A29   UNKNOWN  8A29            ; Unknown 8xxx instruction
$828    $DF3C   DRW      VF, V3, #C      ; Draw 12-byte sprite at VF, V3
$82A    $415B   SNE      V1, #5B         ; Skip if V1 != 91
$82C    $FC87   UNKNOWN  FC87            ; Unknown Fxxx instruction
$82E    $F15D   UNKNOWN  F15D            ; Unknown Fxxx instruction
$830    $63EA   LD       V3, #EA         ; Load 234 into V3
$832    $DB2E   DRW      VB, V2, #E      ; Draw 14-byte sprite at VB, V2
$834    $5421   UNKNOWN  $5421           ; Unknown 5xxx instruction
$836    $4D42   SNE      VD, #42         ; Skip if VD != 66
$838    $DF8C   DRW      VF, V8, #C      ; Draw 12-byte sprite at VF, V8
$83A    $F881   UNKNOWN  F881            ; Unknown Fxxx instruction
$83C    $95D3   UNKNOWN  $95D3           ; Unknown 9xxx instruction
$83E    $81AF   UNKNOWN  81AF            ; Unknown 8xxx instruction
$840    $9F63   UNKNOWN  $9F63           ; Unknown 9xxx instruction
$842    $A9CF   LD       I, $9CF         ; Load 9CF into I
$844    $D0E8   DRW      V0, VE, #8      ; Draw 8-byte sprite at V0, VE
$846    $0574   SYS      $574            ; System call to 574
$848    $3F33   SE       VF, #33         ; Skip if VF == 51
$84A    $2411   CALL     $411            ; Call subroutine at 411
$84C    $043D   SYS      $43D            ; System call to 43D
$84E    $F118   LD       ST, V1          ; Sound timer = V1
$850    $9929   UNKNOWN  $9929           ; Unknown 9xxx instruction
$852    $E1FB   UNKNOWN  $E1FB           ; Unknown Exxx instruction
$854    $B5D8   JP       V0, $5D8        ; Jump to V0 + 5D8
$856    $6C01   LD       VC, #01         ; Load 1 into VC
$858    $477F   SNE      V7, #7F         ; Skip if V7 != 127
$85A    $8805   SUB      V8, V0          ; V8 -= V0, VF = !borrow
$85C    $AA3E   LD       I, $A3E         ; Load A3E into I
$85E    $1636   JP       $636            ; Jump to 636
$860    $4983   SNE      V9, #83         ; Skip if V9 != 131
$862    $5762   UNKNOWN  $5762           ; Unknown 5xxx instruction
$864    $D0A3   DRW      V0, VA, #3      ; Draw 3-byte sprite at V0, VA
$866    $1DC6   JP       $DC6            ; Jump to DC6
$868    $E567   UNKNOWN  $E567           ; Unknown Exxx instruction
$86A    $B658   JP       V0, $658        ; Jump to V0 + 658
$86C    $75F4   ADD      V5, #F4         ; Add 244 to V5
$86E    $F5F3   UNKNOWN  F5F3            ; Unknown Fxxx instruction
$870    $6B11   LD       VB, #11         ; Load 17 into VB
$872    $9789   UNKNOWN  $9789           ; Unknown 9xxx instruction
$874    $B25B   JP       V0, $25B        ; Jump to V0 + 25B
$876    $D848   DRW      V8, V4, #8      ; Draw 8-byte sprite at V8, V4
$878    $3089   SE       V0, #89         ; Skip if V0 == 137
$87A    $FC83   UNKNOWN  FC83            ; Unknown Fxxx instruction
$87C    $6ACC   LD       VA, #CC         ; Load 204 into VA
$87E    $6DBE   LD       VD, #BE         ; Load 190 into VD
$880    $4198   SNE      V1, #98         ; Skip if V1 != 152
$882    $1487   JP       $487            ; Jump to 487
$884    $F012   UNKNOWN  F012            ; Unknown Fxxx instruction
$886    $7260   ADD      V2, #60         ; Add 96 to V2
$888    $412D   SNE      V1, #2D         ; Skip if V1 != 45
$88A    $69FF   LD       V9, #FF         ; Load 255 into V9
$88C    $CC22   RND      VC, #22         ; VC = random & 22
$88E    $45DF   SNE      V5, #DF         ; Skip if V5 != 223
$890    $D4AA   DRW      V4, VA, #A      ; Draw 10-byte sprite at V4, VA
$892    $28E7   CALL     $8E7            ; Call subroutine at 8E7
$894    $7EB7   ADD      VE, #B7         ; Add 183 to VE
$896    $C43E   RND      V4, #3E         ; V4 = random & 3E
$898    $EA08   UNKNOWN  $EA08           ; Unknown Exxx instruction
$89A    $0515   SYS      $515            ; System call to 515
$89C    $218C   CALL     $18C            ; Call subroutine at 18C
$89E    $F05A   UNKNOWN  F05A            ; Unknown Fxxx instruction
$8A0    $FF94   UNKNOWN  FF94            ; Unknown Fxxx instruction
$8A2    $260E   CALL     $60E            ; Call subroutine at 60E
$8A4    $128B   JP       $28B            ; Jump to 28B
$8A6    $69EA   LD       V9, #EA         ; Load 234 into V9
$8A8    $DBDE   DRW      VB, VD, #E      ; Draw 14-byte sprite at VB, VD
$8AA    $572D   UNKNOWN  $572D           ; Unknown 5xxx instruction
$8AC    $71C2   ADD      V1, #C2         ; Add 194 to V1
$8AE    $0139   SYS      $139            ; System call to 139
$8B0    $CE79   RND      VE, #79         ; VE = random & 79
$8B2    $00A3   SYS      $0A3            ; System call to 0A3
$8B4    $A3BB   LD       I, $3BB         ; Load 3BB into I
$8B6    $13BF   JP       $3BF            ; Jump to 3BF
$8B8    $3940   SE       V9, #40         ; Skip if V9 == 64
$8BA    $A0D6   LD       I, $0D6         ; Load 0D6 into I
$8BC    $BAFB   JP       V0, $AFB        ; Jump to V0 + AFB
$8BE    $CDF4   RND      VD, #F4         ; VD = random & F4
$8C0    $65E3   LD       V5, #E3         ; Load 227 into V5
$8C2    $3027   SE       V0, #27         ; Skip if V0 == 39
$8C4    $1D3B   JP       $D3B            ; Jump to D3B
$8C6    $001B   SYS      $01B            ; System call to 01B
$8C8    $16DE   JP       $6DE            ; Jump to 6DE
$8CA    $7AB0   ADD      VA, #B0         ; Add 176 to VA
$8CC    $03D2   SYS      $3D2            ; System call to 3D2
$8CE    $410C   SNE      V1, #0C         ; Skip if V1 != 12
$8D0    $042B   SYS      $42B            ; System call to 42B
$8D2    $AD78   LD       I, $D78         ; Load D78 into I
$8D4    $D5C3   DRW      V5, VC, #3      ; Draw 3-byte sprite at V5, VC
$8D6    $E86E   UNKNOWN  $E86E           ; Unknown Exxx instruction
$8D8    $7F1D   ADD      VF, #1D         ; Add 29 to VF
$8DA    $4CA3   SNE      VC, #A3         ; Skip if VC != 163
$8DC    $4312   SNE      V3, #12         ; Skip if V3 != 18
$8DE    $18BC   JP       $8BC            ; Jump to 8BC
$8E0    $7EC5   ADD      VE, #C5         ; Add 197 to VE
$8E2    $C76B   RND      V7, #6B         ; V7 = random & 6B
$8E4    $951C   UNKNOWN  $951C           ; Unknown 9xxx instruction
$8E6    $5F27   UNKNOWN  $5F27           ; Unknown 5xxx instruction
$8E8    $ACDF   LD       I, $CDF         ; Load CDF into I
$8EA    $5C43   UNKNOWN  $5C43           ; Unknown 5xxx instruction
$8EC    $87B7   SUBN     V7, VB          ; V7 = VB - V7, VF = !borrow
$8EE    $3162   SE       V1, #62         ; Skip if V1 == 98
$8F0    $8A57   SUBN     VA, V5          ; VA = V5 - VA, VF = !borrow
$8F2    $6571   LD       V5, #71         ; Load 113 into V5
$8F4    $E7B7   UNKNOWN  $E7B7           ; Unknown Exxx instruction
$8F6    $7F8F   ADD      VF, #8F         ; Add 143 to VF
$8F8    $3BAC   SE       VB, #AC         ; Skip if VB == 172
$8FA    $56CE   UNKNOWN  $56CE           ; Unknown 5xxx instruction
$8FC    $59BA   UNKNOWN  $59BA           ; Unknown 5xxx instruction
$8FE    $88CF   UNKNOWN  88CF            ; Unknown 8xxx instruction
$900    $661A   LD       V6, #1A         ; Load 26 into V6
$902    $882D   UNKNOWN  882D            ; Unknown 8xxx instruction
$904    $7CFE   ADD      VC, #FE         ; Add 254 to VC
$906    $3AAE   SE       VA, #AE         ; Skip if VA == 174
$908    $0E46   SYS      $E46            ; System call to E46
$90A    $D5A3   DRW      V5, VA, #3      ; Draw 3-byte sprite at V5, VA
$90C    $1C26   JP       $C26            ; Jump to C26
$90E    $6C17   LD       VC, #17         ; Load 23 into VC
$910    $71BA   ADD      V1, #BA         ; Add 186 to V1
$912    $15AD   JP       $5AD            ; Jump to 5AD
$914    $6EBF   LD       VE, #BF         ; Load 191 into VE
$916    $2FC4   CALL     $FC4            ; Call subroutine at FC4
$918    $8273   XOR      V2, V7          ; V2 ^= V7
$91A    $B506   JP       V0, $506        ; Jump to V0 + 506
$91C    $A4F9   LD       I, $4F9         ; Load 4F9 into I
$91E    $E7C0   UNKNOWN  $E7C0           ; Unknown Exxx instruction
$920    $2D85   CALL     $D85            ; Call subroutine at D85
$922    $E0DE   UNKNOWN  $E0DE           ; Unknown Exxx instruction
$924    $5DB3   UNKNOWN  $5DB3           ; Unknown 5xxx instruction
$926    $1710   JP       $710            ; Jump to 710
$928    $0582   SYS      $582            ; System call to 582
$92A    $DC45   DRW      VC, V4, #5      ; Draw 5-byte sprite at VC, V4
$92C    $1BE6   JP       $BE6            ; Jump to BE6
$92E    $67F7   LD       V7, #F7         ; Load 247 into V7
$930    $9307   UNKNOWN  $9307           ; Unknown 9xxx instruction
$932    $3509   SE       V5, #09         ; Skip if V5 == 9
$934    $4841   SNE      V8, #41         ; Skip if V8 != 65
$936    $C1BB   RND      V1, #BB         ; V1 = random & BB
$938    $A1AB   LD       I, $1AB         ; Load 1AB into I
$93A    $FF64   UNKNOWN  FF64            ; Unknown Fxxx instruction
$93C    $9C47   UNKNOWN  $9C47           ; Unknown 9xxx instruction
$93E    $693F   LD       V9, #3F         ; Load 63 into V9
$940    $E434   UNKNOWN  $E434           ; Unknown Exxx instruction
$942    $EE5D   UNKNOWN  $EE5D           ; Unknown Exxx instruction
$944    $EAA5   UNKNOWN  $EAA5           ; Unknown Exxx instruction
$946    $CD5D   RND      VD, #5D         ; VD = random & 5D
$948    $5770   SE       V7, V7          ; Skip if V7 == V7
$94A    $5F7E   UNKNOWN  $5F7E           ; Unknown 5xxx instruction
$94C    $3E58   SE       VE, #58         ; Skip if VE == 88
$94E    $0575   SYS      $575            ; System call to 575
$950    $0393   SYS      $393            ; System call to 393
$952    $79D0   ADD      V9, #D0         ; Add 208 to V9
$954    $F0CF   UNKNOWN  F0CF            ; Unknown Fxxx instruction
$956    $975E   UNKNOWN  $975E           ; Unknown 9xxx instruction
$958    $4979   SNE      V9, #79         ; Skip if V9 != 121
$95A    $EC9B   UNKNOWN  $EC9B           ; Unknown Exxx instruction
$95C    $64E7   LD       V4, #E7         ; Load 231 into V4
$95E    $45A6   SNE      V5, #A6         ; Skip if V5 != 166
$960    $7624   ADD      V6, #24         ; Add 36 to V6
$962    $ECE2   UNKNOWN  $ECE2           ; Unknown Exxx instruction
$964    $AD93   LD       I, $D93         ; Load D93 into I
$966    $214F   CALL     $14F            ; Call subroutine at 14F
$968    $B12D   JP       V0, $12D        ; Jump to V0 + 12D
$96A    $00E6   SYS      $0E6            ; System call to 0E6
$96C    $CEEE   RND      VE, #EE         ; VE = random & EE
$96E    $48AB   SNE      V8, #AB         ; Skip if V8 != 171
$970    $3EEA   SE       VE, #EA         ; Skip if VE == 234
$972    $DBC7   DRW      VB, VC, #7      ; Draw 7-byte sprite at VB, VC
$974    $20EB   CALL     $0EB            ; Call subroutine at 0EB
$976    $2EEB   CALL     $EEB            ; Call subroutine at EEB
$978    $D1FF   DRW      V1, VF, #F      ; Draw 15-byte sprite at V1, VF
$97A    $FC49   UNKNOWN  FC49            ; Unknown Fxxx instruction
$97C    $EB14   UNKNOWN  $EB14           ; Unknown Exxx instruction
$97E    $C765   RND      V7, #65         ; V7 = random & 65
$980    $FB43   UNKNOWN  FB43            ; Unknown Fxxx instruction
$982    $1874   JP       $874            ; Jump to 874
$984    $D466   DRW      V4, V6, #6      ; Draw 6-byte sprite at V4, V6
$986    $B302   JP       V0, $302        ; Jump to V0 + 302
$988    $5B42   UNKNOWN  $5B42           ; Unknown 5xxx instruction
$98A    $33D6   SE       V3, #D6         ; Skip if V3 == 214
$98C    $8686   SHR      V6              ; V6 >>= 1, VF = LSB
$98E    $7E6A   ADD      VE, #6A         ; Add 106 to VE
$990    $445B   SNE      V4, #5B         ; Skip if V4 != 91
$992    $FCBB   UNKNOWN  FCBB            ; Unknown Fxxx instruction
$994    $2D33   CALL     $D33            ; Call subroutine at D33
$996    $5357   UNKNOWN  $5357           ; Unknown 5xxx instruction
$998    $0BB0   SYS      $BB0            ; System call to BB0
$99A    $76F8   ADD      V6, #F8         ; Add 248 to V6
$99C    $40E2   SNE      V0, #E2         ; Skip if V0 != 226
$99E    $DE97   DRW      VE, V9, #7      ; Draw 7-byte sprite at VE, V9
$9A0    $563D   UNKNOWN  $563D           ; Unknown 5xxx instruction
$9A2    $E0C2   UNKNOWN  $E0C2           ; Unknown Exxx instruction
$9A4    $F30B   UNKNOWN  F30B            ; Unknown Fxxx instruction
$9A6    $3B65   SE       VB, #65         ; Skip if VB == 101
$9A8    $2069   CALL     $069            ; Call subroutine at 069
$9AA    $F018   LD       ST, V0          ; Sound timer = V0
$9AC    $F9FD   UNKNOWN  F9FD            ; Unknown Fxxx instruction
$9AE    $032D   SYS      $32D            ; System call to 32D
$9B0    $5175   UNKNOWN  $5175           ; Unknown 5xxx instruction
$9B2    $4246   SNE      V2, #46         ; Skip if V2 != 70
$9B4    $2A9F   CALL     $A9F            ; Call subroutine at A9F
$9B6    $C096   RND      V0, #96         ; V0 = random & 96
$9B8    $C228   RND      V2, #28         ; V2 = random & 28
$9BA    $0F84   SYS      $F84            ; System call to F84
$9BC    $C074   RND      V0, #74         ; V0 = random & 74
$9BE    $50A4   UNKNOWN  $50A4           ; Unknown 5xxx instruction
$9C0    $B539   JP       V0, $539        ; Jump to V0 + 539
$9C2    $F7E2   UNKNOWN  F7E2            ; Unknown Fxxx instruction
$9C4    $D024   DRW      V0, V2, #4      ; Draw 4-byte sprite at V0, V2
$9C6    $2F3E   CALL     $F3E            ; Call subroutine at F3E
$9C8    $EED8   UNKNOWN  $EED8           ; Unknown Exxx instruction
$9CA    $EEDA   UNKNOWN  $EEDA           ; Unknown Exxx instruction
$9CC    $5C8D   UNKNOWN  $5C8D           ; Unknown 5xxx instruction
$9CE    $97DF   UNKNOWN  $97DF           ; Unknown 9xxx instruction
$9D0    $FB85   UNKNOWN  FB85            ; Unknown Fxxx instruction
$9D2    $285F   CALL     $85F            ; Call subroutine at 85F
$9D4    $B971   JP       V0, $971        ; Jump to V0 + 971
$9D6    $BE64   JP       V0, $E64        ; Jump to V0 + E64
$9D8    $0C85   SYS      $C85            ; System call to C85
$9DA    $89C5   SUB      V9, VC          ; V9 -= VC, VF = !borrow
$9DC    $1596   JP       $596            ; Jump to 596
$9DE    $D1E1   DRW      V1, VE, #1      ; Draw 1-byte sprite at V1, VE
$9E0    $D09D   DRW      V0, V9, #D      ; Draw 13-byte sprite at V0, V9
$9E2    $0BBC   SYS      $BBC            ; System call to BBC
$9E4    $811B   UNKNOWN  811B            ; Unknown 8xxx instruction
$9E6    $FC1A   UNKNOWN  FC1A            ; Unknown Fxxx instruction
$9E8    $E4C9   UNKNOWN  $E4C9           ; Unknown Exxx instruction
$9EA    $22A3   CALL     $2A3            ; Call subroutine at 2A3
$9EC    $9CA5   UNKNOWN  $9CA5           ; Unknown 9xxx instruction
$9EE    $5E3A   UNKNOWN  $5E3A           ; Unknown 5xxx instruction
$9F0    $C63A   RND      V6, #3A         ; V6 = random & 3A
$9F2    $D413   DRW      V4, V1, #3      ; Draw 3-byte sprite at V4, V1
$9F4    $3525   SE       V5, #25         ; Skip if V5 == 37
$9F6    $BC75   JP       V0, $C75        ; Jump to V0 + C75
$9F8    $26CE   CALL     $6CE            ; Call subroutine at 6CE
$9FA    $B523   JP       V0, $523        ; Jump to V0 + 523
$9FC    $75A9   ADD      V5, #A9         ; Add 169 to V5
$9FE    $1884   JP       $884            ; Jump to 884
$A00    $873D   UNKNOWN  873D            ; Unknown 8xxx instruction
$A02    $2F20   CALL     $F20            ; Call subroutine at F20
$A04    $F0EE   UNKNOWN  F0EE            ; Unknown Fxxx instruction
$A06    $3FA2   SE       VF, #A2         ; Skip if VF == 162
$A08    $6801   LD       V8, #01         ; Load 1 into V8
$A0A    $C90A   RND      V9, #0A         ; V9 = random & 0A
$A0C    $EF1D   UNKNOWN  $EF1D           ; Unknown Exxx instruction
$A0E    $47CF   SNE      V7, #CF         ; Skip if V7 != 207
$A10    $6D91   LD       VD, #91         ; Load 145 into VD
$A12    $B993   JP       V0, $993        ; Jump to V0 + 993
$A14    $88F4   ADD      V8, VF          ; V8 += VF, VF = carry
$A16    $2B3D   CALL     $B3D            ; Call subroutine at B3D
$A18    $4FBB   SNE      VF, #BB         ; Skip if VF != 187
$A1A    $01FF   SYS      $1FF            ; System call to 1FF
$A1C    $6666   LD       V6, #66         ; Load 102 into V6
$A1E    $BCF8   JP       V0, $CF8        ; Jump to V0 + CF8
$A20    $AF1A   LD       I, $F1A         ; Load F1A into I
$A22    $C0B1   RND      V0, #B1         ; V0 = random & B1
$A24    $7BA4   ADD      VB, #A4         ; Add 164 to VB
$A26    $AE15   LD       I, $E15         ; Load E15 into I
$A28    $A8ED   LD       I, $8ED         ; Load 8ED into I
$A2A    $3B15   SE       VB, #15         ; Skip if VB == 21
$A2C    $B305   JP       V0, $305        ; Jump to V0 + 305
$A2E    $6E6C   LD       VE, #6C         ; Load 108 into VE
$A30    $29B5   CALL     $9B5            ; Call subroutine at 9B5
$A32    $733D   ADD      V3, #3D         ; Add 61 to V3
$A34    $816E   SHL      V1              ; V1 <<= 1, VF = MSB
$A36    $33F4   SE       V3, #F4         ; Skip if V3 == 244
$A38    $8CEC   UNKNOWN  8CEC            ; Unknown 8xxx instruction
$A3A    $5C2F   UNKNOWN  $5C2F           ; Unknown 5xxx instruction
$A3C    $08B0   SYS      $8B0            ; System call to 8B0
$A3E    $16AF   JP       $6AF            ; Jump to 6AF
$A40    $AC84   LD       I, $C84         ; Load C84 into I
$A42    $2DA2   CALL     $DA2            ; Call subroutine at DA2
$A44    $D8D7   DRW      V8, VD, #7      ; Draw 7-byte sprite at V8, VD
$A46    $FDFD   UNKNOWN  FDFD            ; Unknown Fxxx instruction
$A48    $0C28   SYS      $C28            ; System call to C28
$A4A    $093A   SYS      $93A            ; System call to 93A
$A4C    $CC5E   RND      VC, #5E         ; VC = random & 5E
$A4E    $2CB0   CALL     $CB0            ; Call subroutine at CB0
$A50    $D655   DRW      V6, V5, #5      ; Draw 5-byte sprite at V6, V5
$A52    $D47D   DRW      V4, V7, #D      ; Draw 13-byte sprite at V4, V7
$A54    $7691   ADD      V6, #91         ; Add 145 to V6
$A56    $087F   SYS      $87F            ; System call to 87F
$A58    $775D   ADD      V7, #5D         ; Add 93 to V7
$A5A    $E011   UNKNOWN  $E011           ; Unknown Exxx instruction
$A5C    $C2CA   RND      V2, #CA         ; V2 = random & CA
$A5E    $BFC2   JP       V0, $FC2        ; Jump to V0 + FC2
$A60    $7E63   ADD      VE, #63         ; Add 99 to VE
$A62    $A03B   LD       I, $03B         ; Load 03B into I
$A64    $5C24   UNKNOWN  $5C24           ; Unknown 5xxx instruction
$A66    $5BC0   SE       VB, VC          ; Skip if VB == VC
$A68    $F960   UNKNOWN  F960            ; Unknown Fxxx instruction
$A6A    $C579   RND      V5, #79         ; V5 = random & 79
$A6C    $7321   ADD      V3, #21         ; Add 33 to V3
$A6E    $90CD   UNKNOWN  $90CD           ; Unknown 9xxx instruction
$A70    $9784   UNKNOWN  $9784           ; Unknown 9xxx instruction
$A72    $640F   LD       V4, #0F         ; Load 15 into V4
$A74    $E07F   UNKNOWN  $E07F           ; Unknown Exxx instruction
$A76    $8E76   SHR      VE              ; VE >>= 1, VF = LSB
$A78    $9F27   UNKNOWN  $9F27           ; Unknown 9xxx instruction
$A7A    $D7F8   DRW      V7, VF, #8      ; Draw 8-byte sprite at V7, VF
$A7C    $991C   UNKNOWN  $991C           ; Unknown 9xxx instruction
$A7E    $5132   UNKNOWN  $5132           ; Unknown 5xxx instruction
$A80    $6B0D   LD       VB, #0D         ; Load 13 into VB
$A82    $8412   AND      V4, V1          ; V4 &= V1
$A84    $B1D1   JP       V0, $1D1        ; Jump to V0 + 1D1
$A86    $8CE3   XOR      VC, VE          ; VC ^= VE
$A88    $A96B   LD       I, $96B         ; Load 96B into I
$A8A    $E7A5   UNKNOWN  $E7A5           ; Unknown Exxx instruction
$A8C    $C0E1   RND      V0, #E1         ; V0 = random & E1
$A8E    $CFB0   RND      VF, #B0         ; VF = random & B0
$A90    $2F89   CALL     $F89            ; Call subroutine at F89
$A92    $C84A   RND      V8, #4A         ; V8 = random & 4A
$A94    $B447   JP       V0, $447        ; Jump to V0 + 447
$A96    $E447   UNKNOWN  $E447           ; Unknown Exxx instruction
$A98    $4956   SNE      V9, #56         ; Skip if V9 != 86
$A9A    $F0BD   UNKNOWN  F0BD            ; Unknown Fxxx instruction
$A9C    $8AFB   UNKNOWN  8AFB            ; Unknown 8xxx instruction
$A9E    $855A   UNKNOWN  855A            ; Unknown 8xxx instruction
$AA0    $6373   LD       V3, #73         ; Load 115 into V3
$AA2    $A374   LD       I, $374         ; Load 374 into I
$AA4    $12E9   JP       $2E9            ; Jump to 2E9
$AA6    $5FBA   UNKNOWN  $5FBA           ; Unknown 5xxx instruction
$AA8    $13B4   JP       $3B4            ; Jump to 3B4
$AAA    $73A6   ADD      V3, #A6         ; Add 166 to V3
$AAC    $D812   DRW      V8, V1, #2      ; Draw 2-byte sprite at V8, V1
$AAE    $935B   UNKNOWN  $935B           ; Unknown 9xxx instruction
$AB0    $30ED   SE       V0, #ED         ; Skip if V0 == 237
$AB2    $B3DE   JP       V0, $3DE        ; Jump to V0 + 3DE
$AB4    $9708   UNKNOWN  $9708           ; Unknown 9xxx instruction
$AB6    $21D1   CALL     $1D1            ; Call subroutine at 1D1
$AB8    $E0FE   UNKNOWN  $E0FE           ; Unknown Exxx instruction
$ABA    $4437   SNE      V4, #37         ; Skip if V4 != 55
$ABC    $D822   DRW      V8, V2, #2      ; Draw 2-byte sprite at V8, V2
$ABE    $FA47   UNKNOWN  FA47            ; Unknown Fxxx instruction
$AC0    $DE01   DRW      VE, V0, #1      ; Draw 1-byte sprite at VE, V0
$AC2    $65A4   LD       V5, #A4         ; Load 164 into V5
$AC4    $F41B   UNKNOWN  F41B            ; Unknown Fxxx instruction
$AC6    $C588   RND      V5, #88         ; V5 = random & 88
$AC8    $38DE   SE       V8, #DE         ; Skip if V8 == 222
$ACA    $A934   LD       I, $934         ; Load 934 into I
$ACC    $D18B   DRW      V1, V8, #B      ; Draw 11-byte sprite at V1, V8
$ACE    $9598   UNKNOWN  $9598           ; Unknown 9xxx instruction
$AD0    $FC42   UNKNOWN  FC42            ; Unknown Fxxx instruction
$AD2    $F25F   UNKNOWN  F25F            ; Unknown Fxxx instruction
$AD4    $551E   UNKNOWN  $551E           ; Unknown 5xxx instruction
$AD6    $E530   UNKNOWN  $E530           ; Unknown Exxx instruction
$AD8    $9D06   UNKNOWN  $9D06           ; Unknown 9xxx instruction
$ADA    $50E1   UNKNOWN  $50E1           ; Unknown 5xxx instruction
$ADC    $4474   SNE      V4, #74         ; Skip if V4 != 116
$ADE    $34F8   SE       V4, #F8         ; Skip if V4 == 248
$AE0    $39B5   SE       V9, #B5         ; Skip if V9 == 181
$AE2    $DA64   DRW      VA, V6, #4      ; Draw 4-byte sprite at VA, V6
$AE4    $FEF5   UNKNOWN  FEF5            ; Unknown Fxxx instruction
$AE6    $3C5F   SE       VC, #5F         ; Skip if VC == 95
$AE8    $CE19   RND      VE, #19         ; VE = random & 19
$AEA    $1BCA   JP       $BCA            ; Jump to BCA
$AEC    $3C6C   SE       VC, #6C         ; Skip if VC == 108
$AEE    $72DB   ADD      V2, #DB         ; Add 219 to V2
$AF0    $11A7   JP       $1A7            ; Jump to 1A7
$AF2    $1DAA   JP       $DAA            ; Jump to DAA
$AF4    $0C15   SYS      $C15            ; System call to C15
$AF6    $7012   ADD      V0, #12         ; Add 18 to V0
$AF8    $E4A8   UNKNOWN  $E4A8           ; Unknown Exxx instruction
$AFA    $8168   UNKNOWN  8168            ; Unknown 8xxx instruction
$AFC    $6B26   LD       VB, #26         ; Load 38 into VB
$AFE    $39F2   SE       V9, #F2         ; Skip if V9 == 242
$B00    $A170   LD       I, $170         ; Load 170 into I
$B02    $3EED   SE       VE, #ED         ; Skip if VE == 237
$B04    $F9DB   UNKNOWN  F9DB            ; Unknown Fxxx instruction
$B06    $4EEC   SNE      VE, #EC         ; Skip if VE != 236
$B08    $1FE1   JP       $FE1            ; Jump to FE1
$B0A    $30CD   SE       V0, #CD         ; Skip if V0 == 205
$B0C    $0ED4   SYS      $ED4            ; System call to ED4
$B0E    $81C9   UNKNOWN  81C9            ; Unknown 8xxx instruction
$B10    $CDD8   RND      VD, #D8         ; VD = random & D8
$B12    $9F66   UNKNOWN  $9F66           ; Unknown 9xxx instruction
$B14    $C3DF   RND      V3, #DF         ; V3 = random & DF
$B16    $6F95   LD       VF, #95         ; Load 149 into VF
$B18    $AEE0   LD       I, $EE0         ; Load EE0 into I
$B1A    $D3A5   DRW      V3, VA, #5      ; Draw 5-byte sprite at V3, VA
$B1C    $1636   JP       $636            ; Jump to 636
$B1E    $A379   LD       I, $379         ; Load 379 into I
$B20    $BC41   JP       V0, $C41        ; Jump to V0 + C41
$B22    $5F86   UNKNOWN  $5F86           ; Unknown 5xxx instruction
$B24    $7DD7   ADD      VD, #D7         ; Add 215 to VD
$B26    $C3E7   RND      V3, #E7         ; V3 = random & E7
$B28    $C3A9   RND      V3, #A9         ; V3 = random & A9
$B2A    $3561   SE       V5, #61         ; Skip if V5 == 97
$B2C    $B97E   JP       V0, $97E        ; Jump to V0 + 97E
$B2E    $D463   DRW      V4, V6, #3      ; Draw 3-byte sprite at V4, V6
$B30    $58CE   UNKNOWN  $58CE           ; Unknown 5xxx instruction
$B32    $86E4   ADD      V6, VE          ; V6 += VE, VF = carry
$B34    $AB26   LD       I, $B26         ; Load B26 into I
$B36    $40CA   SNE      V0, #CA         ; Skip if V0 != 202
$B38    $1D97   JP       $D97            ; Jump to D97
$B3A    $3DD0   SE       VD, #D0         ; Skip if VD == 208
$B3C    $319F   SE       V1, #9F         ; Skip if V1 == 159
$B3E    $5DFF   UNKNOWN  $5DFF           ; Unknown 5xxx instruction
$B40    $1865   JP       $865            ; Jump to 865
$B42    $5B26   UNKNOWN  $5B26           ; Unknown 5xxx instruction
$B44    $0D43   SYS      $D43            ; System call to D43
$B46    $D74C   DRW      V7, V4, #C      ; Draw 12-byte sprite at V7, V4
$B48    $652E   LD       V5, #2E         ; Load 46 into V5
$B4A    $31F7   SE       V1, #F7         ; Skip if V1 == 247
$B4C    $C9AC   RND      V9, #AC         ; V9 = random & AC
$B4E    $0763   SYS      $763            ; System call to 763
$B50    $0339   SYS      $339            ; System call to 339
$B52    $66D8   LD       V6, #D8         ; Load 216 into V6
$B54    $B58C   JP       V0, $58C        ; Jump to V0 + 58C
$B56    $D3AD   DRW      V3, VA, #D      ; Draw 13-byte sprite at V3, VA
$B58    $62DF   LD       V2, #DF         ; Load 223 into V2
$B5A    $280D   CALL     $80D            ; Call subroutine at 80D
$B5C    $D82E   DRW      V8, V2, #E      ; Draw 14-byte sprite at V8, V2
$B5E    $59FB   UNKNOWN  $59FB           ; Unknown 5xxx instruction
$B60    $D5A2   DRW      V5, VA, #2      ; Draw 2-byte sprite at V5, VA
$B62    $B0E2   JP       V0, $0E2        ; Jump to V0 + 0E2
$B64    $C66C   RND      V6, #6C         ; V6 = random & 6C
$B66    $CE3D   RND      VE, #3D         ; VE = random & 3D
$B68    $A2A5   LD       I, $2A5         ; Load 2A5 into I
$B6A    $6B69   LD       VB, #69         ; Load 105 into VB
$B6C    $9632   UNKNOWN  $9632           ; Unknown 9xxx instruction
$B6E    $B5BD   JP       V0, $5BD        ; Jump to V0 + 5BD
$B70    $5B25   UNKNOWN  $5B25           ; Unknown 5xxx instruction
$B72    $7D68   ADD      VD, #68         ; Add 104 to VD
$B74    $21BE   CALL     $1BE            ; Call subroutine at 1BE
$B76    $73FD   ADD      V3, #FD         ; Add 253 to V3
$B78    $0940   SYS      $940            ; System call to 940
$B7A    $A9F0   LD       I, $9F0         ; Load 9F0 into I
$B7C    $9D41   UNKNOWN  $9D41           ; Unknown 9xxx instruction
$B7E    $C493   RND      V4, #93         ; V4 = random & 93
$B80    $6E4A   LD       VE, #4A         ; Load 74 into VE
$B82    $24F8   CALL     $4F8            ; Call subroutine at 4F8
$B84    $82EC   UNKNOWN  82EC            ; Unknown 8xxx instruction
$B86    $7CC8   ADD      VC, #C8         ; Add 200 to VC
$B88    $9409   UNKNOWN  $9409           ; Unknown 9xxx instruction
$B8A    $9B89   UNKNOWN  $9B89           ; Unknown 9xxx instruction
$B8C    $F550   UNKNOWN  F550            ; Unknown Fxxx instruction
$B8E    $8F07   SUBN     VF, V0          ; VF = V0 - VF, VF = !borrow
$B90    $37C6   SE       V7, #C6         ; Skip if V7 == 198
$B92    $BD58   JP       V0, $D58        ; Jump to V0 + D58
$B94    $8704   ADD      V7, V0          ; V7 += V0, VF = carry
$B96    $1C66   JP       $C66            ; Jump to C66
$B98    $5051   UNKNOWN  $5051           ; Unknown 5xxx instruction
$B9A    $A772   LD       I, $772         ; Load 772 into I
$B9C    $E770   UNKNOWN  $E770           ; Unknown Exxx instruction
$B9E    $59DB   UNKNOWN  $59DB           ; Unknown 5xxx instruction
$BA0    $2DE1   CALL     $DE1            ; Call subroutine at DE1
$BA2    $9F67   UNKNOWN  $9F67           ; Unknown 9xxx instruction
$BA4    $A1CB   LD       I, $1CB         ; Load 1CB into I
$BA6    $8218   UNKNOWN  8218            ; Unknown 8xxx instruction
$BA8    $CAA1   RND      VA, #A1         ; VA = random & A1
$BAA    $7168   ADD      V1, #68         ; Add 104 to V1
$BAC    $D09A   DRW      V0, V9, #A      ; Draw 10-byte sprite at V0, V9
$BAE    $F036   UNKNOWN  F036            ; Unknown Fxxx instruction
$BB0    $793D   ADD      V9, #3D         ; Add 61 to V9
$BB2    $9CC9   UNKNOWN  $9CC9           ; Unknown 9xxx instruction
$BB4    $AC0E   LD       I, $C0E         ; Load C0E into I
$BB6    $CE13   RND      VE, #13         ; VE = random & 13
$BB8    $D8CF   DRW      V8, VC, #F      ; Draw 15-byte sprite at V8, VC
$BBA    $3404   SE       V4, #04         ; Skip if V4 == 4
$BBC    $8D45   SUB      VD, V4          ; VD -= V4, VF = !borrow
$BBE    $ABC6   LD       I, $BC6         ; Load BC6 into I
$BC0    $B158   JP       V0, $158        ; Jump to V0 + 158
$BC2    $A7FD   LD       I, $7FD         ; Load 7FD into I
$BC4    $92D2   UNKNOWN  $92D2           ; Unknown 9xxx instruction
$BC6    $CF62   RND      VF, #62         ; VF = random & 62
$BC8    $E4EB   UNKNOWN  $E4EB           ; Unknown Exxx instruction
$BCA    $4334   SNE      V3, #34         ; Skip if V3 != 52
$BCC    $5907   UNKNOWN  $5907           ; Unknown 5xxx instruction
$BCE    $5043   UNKNOWN  $5043           ; Unknown 5xxx instruction
$BD0    $4279   SNE      V2, #79         ; Skip if V2 != 121
$BD2    $88D2   AND      V8, VD          ; V8 &= VD
$BD4    $F620   UNKNOWN  F620            ; Unknown Fxxx instruction
$BD6    $1C5D   JP       $C5D            ; Jump to C5D
$BD8    $C945   RND      V9, #45         ; V9 = random & 45
$BDA    $11EB   JP       $1EB            ; Jump to 1EB
$BDC    $F144   UNKNOWN  F144            ; Unknown Fxxx instruction
$BDE    $5661   UNKNOWN  $5661           ; Unknown 5xxx instruction
$BE0    $32B1   SE       V2, #B1         ; Skip if V2 == 177
$BE2    $13AD   JP       $3AD            ; Jump to 3AD
$BE4    $E5C9   UNKNOWN  $E5C9           ; Unknown Exxx instruction
$BE6    $2BEE   CALL     $BEE            ; Call subroutine at BEE
$BE8    $3271   SE       V2, #71         ; Skip if V2 == 113
$BEA    $8690   LD       V6, V9          ; V6 = V9
$BEC    $B742   JP       V0, $742        ; Jump to V0 + 742
$BEE    $323B   SE       V2, #3B         ; Skip if V2 == 59
$BF0    $8AB8   UNKNOWN  8AB8            ; Unknown 8xxx instruction
$BF2    $4128   SNE      V1, #28         ; Skip if V1 != 40
$BF4    $0770   SYS      $770            ; System call to 770
$BF6    $FC3D   UNKNOWN  FC3D            ; Unknown Fxxx instruction
$BF8    $C591   RND      V5, #91         ; V5 = random & 91
$BFA    $CBA7   RND      VB, #A7         ; VB = random & A7
$BFC    $930F   UNKNOWN  $930F           ; Unknown 9xxx instruction
$BFE    $7783   ADD      V7, #83         ; Add 131 to V7
$C00    $D1A8   DRW      V1, VA, #8      ; Draw 8-byte sprite at V1, VA
$C02    $D7A0   DRW      V7, VA, #0      ; Draw 0-byte sprite at V7, VA
$C04    $024C   SYS      $24C            ; System call to 24C
$C06    $7EFB   ADD      VE, #FB         ; Add 251 to VE
$C08    $7DD8   ADD      VD, #D8         ; Add 216 to VD
$C0A    $6102   LD       V1, #02         ; Load 2 into V1
$C0C    $BF2E   JP       V0, $F2E        ; Jump to V0 + F2E
$C0E    $666B   LD       V6, #6B         ; Load 107 into V6
$C10    $63CC   LD       V3, #CC         ; Load 204 into V3
$C12    $FC66   UNKNOWN  FC66            ; Unknown Fxxx instruction
$C14    $AF59   LD       I, $F59         ; Load F59 into I
$C16    $3C90   SE       VC, #90         ; Skip if VC == 144
$C18    $3345   SE       V3, #45         ; Skip if V3 == 69
$C1A    $4488   SNE      V4, #88         ; Skip if V4 != 136
$C1C    $D814   DRW      V8, V1, #4      ; Draw 4-byte sprite at V8, V1
$C1E    $5A93   UNKNOWN  $5A93           ; Unknown 5xxx instruction
$C20    $D7C1   DRW      V7, VC, #1      ; Draw 1-byte sprite at V7, VC
$C22    $3D3E   SE       VD, #3E         ; Skip if VD == 62
$C24    $F608   UNKNOWN  F608            ; Unknown Fxxx instruction
$C26    $E14E   UNKNOWN  $E14E           ; Unknown Exxx instruction
$C28    $3989   SE       V9, #89         ; Skip if V9 == 137
$C2A    $A667   LD       I, $667         ; Load 667 into I
$C2C    $4F46   SNE      VF, #46         ; Skip if VF != 70
$C2E    $A248   LD       I, $248         ; Load 248 into I
$C30    $1F60   JP       $F60            ; Jump to F60
$C32    $3D5E   SE       VD, #5E         ; Skip if VD == 94
$C34    $5CEA   UNKNOWN  $5CEA           ; Unknown 5xxx instruction
$C36    $7303   ADD      V3, #03         ; Add 3 to V3
$C38    $6743   LD       V7, #43         ; Load 67 into V7
$C3A    $C160   RND      V1, #60         ; V1 = random & 60
$C3C    $72A7   ADD      V2, #A7         ; Add 167 to V2
$C3E    $96E4   UNKNOWN  $96E4           ; Unknown 9xxx instruction
$C40    $A873   LD       I, $873         ; Load 873 into I
$C42    $5CEE   UNKNOWN  $5CEE           ; Unknown 5xxx instruction
$C44    $7EDE   ADD      VE, #DE         ; Add 222 to VE
$C46    $208D   CALL     $08D            ; Call subroutine at 08D
$C48    $0335   SYS      $335            ; System call to 335
$C4A    $8B08   UNKNOWN  8B08            ; Unknown 8xxx instruction
$C4C    $0D27   SYS      $D27            ; System call to D27
$C4E    $A933   LD       I, $933         ; Load 933 into I
$C50    $3A85   SE       VA, #85         ; Skip if VA == 133
$C52    $ED72   UNKNOWN  $ED72           ; Unknown Exxx instruction
$C54    $B14B   JP       V0, $14B        ; Jump to V0 + 14B
$C56    $43E6   SNE      V3, #E6         ; Skip if V3 != 230
$C58    $9BFC   UNKNOWN  $9BFC           ; Unknown 9xxx instruction
$C5A    $92BE   UNKNOWN  $92BE           ; Unknown 9xxx instruction
$C5C    $F2B2   UNKNOWN  F2B2            ; Unknown Fxxx instruction
$C5E    $8F1A   UNKNOWN  8F1A            ; Unknown 8xxx instruction
$C60    $9524   UNKNOWN  $9524           ; Unknown 9xxx instruction
$C62    $F08C   UNKNOWN  F08C            ; Unknown Fxxx instruction
$C64    $1E7F   JP       $E7F            ; Jump to E7F
$C66    $EF4F   UNKNOWN  $EF4F           ; Unknown Exxx instruction
$C68    $2B39   CALL     $B39            ; Call subroutine at B39
$C6A    $0CFB   SYS      $CFB            ; System call to CFB
$C6C    $6BA1   LD       VB, #A1         ; Load 161 into VB
$C6E    $6B5B   LD       VB, #5B         ; Load 91 into VB
$C70    $5365   UNKNOWN  $5365           ; Unknown 5xxx instruction
$C72    $423C   SNE      V2, #3C         ; Skip if V2 != 60
$C74    $3726   SE       V7, #26         ; Skip if V7 == 38
$C76    $0289   SYS      $289            ; System call to 289
$C78    $0FAB   SYS      $FAB            ; System call to FAB
$C7A    $AFE0   LD       I, $FE0         ; Load FE0 into I
$C7C    $084A   SYS      $84A            ; System call to 84A
$C7E    $962A   UNKNOWN  $962A           ; Unknown 9xxx instruction
$C80    $7F59   ADD      VF, #59         ; Add 89 to VF
$C82    $171F   JP       $71F            ; Jump to 71F
$C84    $94BD   UNKNOWN  $94BD           ; Unknown 9xxx instruction
$C86    $19DC   JP       $9DC            ; Jump to 9DC
$C88    $E144   UNKNOWN  $E144           ; Unknown Exxx instruction
$C8A    $0129   SYS      $129            ; System call to 129
$C8C    $101E   JP       $01E            ; Jump to 01E
$C8E    $C574   RND      V5, #74         ; V5 = random & 74
$C90    $E31C   UNKNOWN  $E31C           ; Unknown Exxx instruction
$C92    $030B   SYS      $30B            ; System call to 30B
$C94    $5AFC   UNKNOWN  $5AFC           ; Unknown 5xxx instruction
$C96    $64BD   LD       V4, #BD         ; Load 189 into V4
$C98    $9B0B   UNKNOWN  $9B0B           ; Unknown 9xxx instruction
$C9A    $1865   JP       $865            ; Jump to 865
$C9C    $7C15   ADD      VC, #15         ; Add 21 to VC
$C9E    $8573   XOR      V5, V7          ; V5 ^= V7
$CA0    $C1BC   RND      V1, #BC         ; V1 = random & BC
$CA2    $4255   SNE      V2, #55         ; Skip if V2 != 85
$CA4    $6DDE   LD       VD, #DE         ; Load 222 into VD
$CA6    $C3D1   RND      V3, #D1         ; V3 = random & D1
$CA8    $F530   UNKNOWN  F530            ; Unknown Fxxx instruction
$CAA    $B089   JP       V0, $089        ; Jump to V0 + 089
$CAC    $6897   LD       V8, #97         ; Load 151 into V8
$CAE    $3718   SE       V7, #18         ; Skip if V7 == 24
$CB0    $0884   SYS      $884            ; System call to 884
$CB2    $1B4C   JP       $B4C            ; Jump to B4C
$CB4    $8051   OR       V0, V5          ; V0 |= V5
$CB6    $592E   UNKNOWN  $592E           ; Unknown 5xxx instruction
$CB8    $69DE   LD       V9, #DE         ; Load 222 into V9
$CBA    $2CF2   CALL     $CF2            ; Call subroutine at CF2
$CBC    $4A2B   SNE      VA, #2B         ; Skip if VA != 43
$CBE    $36BF   SE       V6, #BF         ; Skip if V6 == 191
$CC0    $E2D5   UNKNOWN  $E2D5           ; Unknown Exxx instruction
$CC2    $08B5   SYS      $8B5            ; System call to 8B5
$CC4    $DDA5   DRW      VD, VA, #5      ; Draw 5-byte sprite at VD, VA
$CC6    $97EE   UNKNOWN  $97EE           ; Unknown 9xxx instruction
$CC8    $542E   UNKNOWN  $542E           ; Unknown 5xxx instruction
$CCA    $3DD7   SE       VD, #D7         ; Skip if VD == 215
$CCC    $AE81   LD       I, $E81         ; Load E81 into I
$CCE    $84EB   UNKNOWN  84EB            ; Unknown 8xxx instruction
$CD0    $E057   UNKNOWN  $E057           ; Unknown Exxx instruction
$CD2    $33B9   SE       V3, #B9         ; Skip if V3 == 185
$CD4    $B59D   JP       V0, $59D        ; Jump to V0 + 59D
$CD6    $81F0   LD       V1, VF          ; V1 = VF
$CD8    $6DED   LD       VD, #ED         ; Load 237 into VD
$CDA    $38E0   SE       V8, #E0         ; Skip if V8 == 224
$CDC    $56DC   UNKNOWN  $56DC           ; Unknown 5xxx instruction
$CDE    $AB88   LD       I, $B88         ; Load B88 into I
$CE0    $E585   UNKNOWN  $E585           ; Unknown Exxx instruction
$CE2    $44EC   SNE      V4, #EC         ; Skip if V4 != 236
$CE4    $78E7   ADD      V8, #E7         ; Add 231 to V8
$CE6    $3360   SE       V3, #60         ; Skip if V3 == 96
$CE8    $6037   LD       V0, #37         ; Load 55 into V0
$CEA    $FC1D   UNKNOWN  FC1D            ; Unknown Fxxx instruction
$CEC    $3C79   SE       VC, #79         ; Skip if VC == 121
$CEE    $BEEF   JP       V0, $EEF        ; Jump to V0 + EEF
$CF0    $16B2   JP       $6B2            ; Jump to 6B2
$CF2    $10CD   JP       $0CD            ; Jump to 0CD
$CF4    $4AE2   SNE      VA, #E2         ; Skip if VA != 226
$CF6    $02B0   SYS      $2B0            ; System call to 2B0
$CF8    $7B88   ADD      VB, #88         ; Add 136 to VB
$CFA    $136D   JP       $36D            ; Jump to 36D
$CFC    $EE74   UNKNOWN  $EE74           ; Unknown Exxx instruction
$CFE    $7DA5   ADD      VD, #A5         ; Add 165 to VD
$D00    $221D   CALL     $21D            ; Call subroutine at 21D
$D02    $57E0   SE       V7, VE          ; Skip if V7 == VE
$D04    $BAB5   JP       V0, $AB5        ; Jump to V0 + AB5
$D06    $9822   UNKNOWN  $9822           ; Unknown 9xxx instruction
$D08    $AB2F   LD       I, $B2F         ; Load B2F into I
$D0A    $BDFD   JP       V0, $DFD        ; Jump to V0 + DFD
$D0C    $DAE1   DRW      VA, VE, #1      ; Draw 1-byte sprite at VA, VE
$D0E    $6083   LD       V0, #83         ; Load 131 into V0
$D10    $2672   CALL     $672            ; Call subroutine at 672
$D12    $175C   JP       $75C            ; Jump to 75C
$D14    $153C   JP       $53C            ; Jump to 53C
$D16    $5BED   UNKNOWN  $5BED           ; Unknown 5xxx instruction
$D18    $2EEB   CALL     $EEB            ; Call subroutine at EEB
$D1A    $8038   UNKNOWN  8038            ; Unknown 8xxx instruction
$D1C    $8315   SUB      V3, V1          ; V3 -= V1, VF = !borrow
$D1E    $E7EC   UNKNOWN  $E7EC           ; Unknown Exxx instruction
$D20    $E193   UNKNOWN  $E193           ; Unknown Exxx instruction
$D22    $A42B   LD       I, $42B         ; Load 42B into I
$D24    $AC53   LD       I, $C53         ; Load C53 into I
$D26    $E598   UNKNOWN  $E598           ; Unknown Exxx instruction
$D28    $D248   DRW      V2, V4, #8      ; Draw 8-byte sprite at V2, V4
$D2A    $C12C   RND      V1, #2C         ; V1 = random & 2C
$D2C    $7C4B   ADD      VC, #4B         ; Add 75 to VC
$D2E    $A873   LD       I, $873         ; Load 873 into I
$D30    $CE94   RND      VE, #94         ; VE = random & 94
$D32    $EBD1   UNKNOWN  $EBD1           ; Unknown Exxx instruction
$D34    $FED2   UNKNOWN  FED2            ; Unknown Fxxx instruction
$D36    $3AB4   SE       VA, #B4         ; Skip if VA == 180
$D38    $E471   UNKNOWN  $E471           ; Unknown Exxx instruction
$D3A    $C1A0   RND      V1, #A0         ; V1 = random & A0
$D3C    $EC8C   UNKNOWN  $EC8C           ; Unknown Exxx instruction
$D3E    $C6C1   RND      V6, #C1         ; V6 = random & C1
$D40    $B3A9   JP       V0, $3A9        ; Jump to V0 + 3A9
$D42    $B355   JP       V0, $355        ; Jump to V0 + 355
$D44    $2AAF   CALL     $AAF            ; Call subroutine at AAF
$D46    $D824   DRW      V8, V2, #4      ; Draw 4-byte sprite at V8, V2
$D48    $CD5F   RND      VD, #5F         ; VD = random & 5F
$D4A    $2F36   CALL     $F36            ; Call subroutine at F36
$D4C    $89AC   UNKNOWN  89AC            ; Unknown 8xxx instruction
$D4E    $6008   LD       V0, #08         ; Load 8 into V0
$D50    $03DA   SYS      $3DA            ; System call to 3DA
$D52    $9D70   SNE      VD, V7          ; Skip if VD != V7
$D54    $2F4E   CALL     $F4E            ; Call subroutine at F4E
$D56    $99EE   UNKNOWN  $99EE           ; Unknown 9xxx instruction
$D58    $C053   RND      V0, #53         ; V0 = random & 53
$D5A    $CA6D   RND      VA, #6D         ; VA = random & 6D
$D5C    $8F22   AND      VF, V2          ; VF &= V2
$D5E    $4095   SNE      V0, #95         ; Skip if V0 != 149
$D60    $D88C   DRW      V8, V8, #C      ; Draw 12-byte sprite at V8, V8
$D62    $0E3B   SYS      $E3B            ; System call to E3B
$D64    $FFC3   UNKNOWN  FFC3            ; Unknown Fxxx instruction
$D66    $4722   SNE      V7, #22         ; Skip if V7 != 34
$D68    $88F7   SUBN     V8, VF          ; V8 = VF - V8, VF = !borrow
$D6A    $A710   LD       I, $710         ; Load 710 into I
$D6C    $D194   DRW      V1, V9, #4      ; Draw 4-byte sprite at V1, V9
$D6E    $3B58   SE       VB, #58         ; Skip if VB == 88
$D70    $A1E5   LD       I, $1E5         ; Load 1E5 into I
$D72    $18D5   JP       $8D5            ; Jump to 8D5
$D74    $7478   ADD      V4, #78         ; Add 120 to V4
$D76    $9824   UNKNOWN  $9824           ; Unknown 9xxx instruction
$D78    $9C2B   UNKNOWN  $9C2B           ; Unknown 9xxx instruction
$D7A    $D1B5   DRW      V1, VB, #5      ; Draw 5-byte sprite at V1, VB
$D7C    $4444   SNE      V4, #44         ; Skip if V4 != 68
$D7E    $F1DC   UNKNOWN  F1DC            ; Unknown Fxxx instruction
$D80    $A773   LD       I, $773         ; Load 773 into I
$D82    $2375   CALL     $375            ; Call subroutine at 375
$D84    $3070   SE       V0, #70         ; Skip if V0 == 112
$D86    $563D   UNKNOWN  $563D           ; Unknown 5xxx instruction
$D88    $D99C   DRW      V9, V9, #C      ; Draw 12-byte sprite at V9, V9
$D8A    $F625   UNKNOWN  F625            ; Unknown Fxxx instruction
$D8C    $A996   LD       I, $996         ; Load 996 into I
$D8E    $5F1D   UNKNOWN  $5F1D           ; Unknown 5xxx instruction
$D90    $536F   UNKNOWN  $536F           ; Unknown 5xxx instruction
$D92    $1C7D   JP       $C7D            ; Jump to C7D
$D94    $4F0E   SNE      VF, #0E         ; Skip if VF != 14
$D96    $BF2B   JP       V0, $F2B        ; Jump to V0 + F2B
$D98    $DC95   DRW      VC, V9, #5      ; Draw 5-byte sprite at VC, V9
$D9A    $A380   LD       I, $380         ; Load 380 into I
$D9C    $DED5   DRW      VE, VD, #5      ; Draw 5-byte sprite at VE, VD
$D9E    $586B   UNKNOWN  $586B           ; Unknown 5xxx instruction
$DA0    $61B2   LD       V1, #B2         ; Load 178 into V1
$DA2    $CC1E   RND      VC, #1E         ; VC = random & 1E
$DA4    $E8A2   UNKNOWN  $E8A2           ; Unknown Exxx instruction
$DA6    $A30D   LD       I, $30D         ; Load 30D into I
$DA8    $E98F   UNKNOWN  $E98F           ; Unknown Exxx instruction
$DAA    $ED81   UNKNOWN  $ED81           ; Unknown Exxx instruction
$DAC    $967B   UNKNOWN  $967B           ; Unknown 9xxx instruction
$DAE    $61B7   LD       V1, #B7         ; Load 183 into V1
$DB0    $2DE9   CALL     $DE9            ; Call subroutine at DE9
$DB2    $95E4   UNKNOWN  $95E4           ; Unknown 9xxx instruction
$DB4    $333F   SE       V3, #3F         ; Skip if V3 == 63
$DB6    $0C7E   SYS      $C7E            ; System call to C7E
$DB8    $A22F   LD       I, $22F         ; Load 22F into I
$DBA    $EF84   UNKNOWN  $EF84           ; Unknown Exxx instruction
$DBC    $D8DC   DRW      V8, VD, #C      ; Draw 12-byte sprite at V8, VD
$DBE    $CB92   RND      VB, #92         ; VB = random & 92
$DC0    $5A84   UNKNOWN  $5A84           ; Unknown 5xxx instruction
$DC2    $0215   SYS      $215            ; System call to 215
$DC4    $A6D0   LD       I, $6D0         ; Load 6D0 into I
$DC6    $CBDD   RND      VB, #DD         ; VB = random & DD
$DC8    $B8F5   JP       V0, $8F5        ; Jump to V0 + 8F5
$DCA    $F922   UNKNOWN  F922            ; Unknown Fxxx instruction
$DCC    $6DFF   LD       VD, #FF         ; Load 255 into VD
$DCE    $92D5   UNKNOWN  $92D5           ; Unknown 9xxx instruction
$DD0    $147D   JP       $47D            ; Jump to 47D
$DD2    $E497   UNKNOWN  $E497           ; Unknown Exxx instruction
$DD4    $97C3   UNKNOWN  $97C3           ; Unknown 9xxx instruction
$DD6    $58A3   UNKNOWN  $58A3           ; Unknown 5xxx instruction
$DD8    $8510   LD       V5, V1          ; V5 = V1
$DDA    $9DC7   UNKNOWN  $9DC7           ; Unknown 9xxx instruction
$DDC    $549A   UNKNOWN  $549A           ; Unknown 5xxx instruction
$DDE    $A856   LD       I, $856         ; Load 856 into I
$DE0    $5823   UNKNOWN  $5823           ; Unknown 5xxx instruction
$DE2    $5D53   UNKNOWN  $5D53           ; Unknown 5xxx instruction
$DE4    $F1E1   UNKNOWN  F1E1            ; Unknown Fxxx instruction
$DE6    $AAD3   LD       I, $AD3         ; Load AD3 into I
$DE8    $540A   UNKNOWN  $540A           ; Unknown 5xxx instruction
$DEA    $4E5B   SNE      VE, #5B         ; Skip if VE != 91
$DEC    $2AE3   CALL     $AE3            ; Call subroutine at AE3
$DEE    $EC0E   UNKNOWN  $EC0E           ; Unknown Exxx instruction
$DF0    $3720   SE       V7, #20         ; Skip if V7 == 32
$DF2    $1171   JP       $171            ; Jump to 171
$DF4    $3E23   SE       VE, #23         ; Skip if VE == 35
$DF6    $37B6   SE       V7, #B6         ; Skip if V7 == 182
$DF8    $6E2B   LD       VE, #2B         ; Load 43 into VE
$DFA    $5B88   UNKNOWN  $5B88           ; Unknown 5xxx instruction
$DFC    $933B   UNKNOWN  $933B           ; Unknown 9xxx instruction
$DFE    $E7B3   UNKNOWN  $E7B3           ; Unknown Exxx instruction
$E00    $5C57   UNKNOWN  $5C57           ; Unknown 5xxx instruction
$E02    $DE2E   DRW      VE, V2, #E      ; Draw 14-byte sprite at VE, V2
$E04    $B019   JP       V0, $019        ; Jump to V0 + 019
$E06    $3890   SE       V8, #90         ; Skip if V8 == 144
$E08    $F674   UNKNOWN  F674            ; Unknown Fxxx instruction
$E0A    $9619   UNKNOWN  $9619           ; Unknown 9xxx instruction
$E0C    $F043   UNKNOWN  F043            ; Unknown Fxxx instruction
$E0E    $99B9   UNKNOWN  $99B9           ; Unknown 9xxx instruction
$E10    $62F0   LD       V2, #F0         ; Load 240 into V2
$E12    $E306   UNKNOWN  $E306           ; Unknown Exxx instruction
$E14    $A3A4   LD       I, $3A4         ; Load 3A4 into I
$E16    $F24E   UNKNOWN  F24E            ; Unknown Fxxx instruction
$E18    $CAEB   RND      VA, #EB         ; VA = random & EB
$E1A    $5DA8   UNKNOWN  $5DA8           ; Unknown 5xxx instruction
$E1C    $CE07   RND      VE, #07         ; VE = random & 07
$E1E    $C321   RND      V3, #21         ; V3 = random & 21
$E20    $12CD   JP       $2CD            ; Jump to 2CD
$E22    $2EE7   CALL     $EE7            ; Call subroutine at EE7
$E24    $270D   CALL     $70D            ; Call subroutine at 70D
$E26    $8F23   XOR      VF, V2          ; VF ^= V2
$E28    $C61C   RND      V6, #1C         ; V6 = random & 1C
$E2A    $7C65   ADD      VC, #65         ; Add 101 to VC
$E2C    $3F32   SE       VF, #32         ; Skip if VF == 50
$E2E    $BFC5   JP       V0, $FC5        ; Jump to V0 + FC5
$E30    $B49B   JP       V0, $49B        ; Jump to V0 + 49B
$E32    $6E8B   LD       VE, #8B         ; Load 139 into VE
$E34    $9F50   SNE      VF, V5          ; Skip if VF != V5
$E36    $2383   CALL     $383            ; Call subroutine at 383
$E38    $92D3   UNKNOWN  $92D3           ; Unknown 9xxx instruction
$E3A    $CBA7   RND      VB, #A7         ; VB = random & A7
$E3C    $2D04   CALL     $D04            ; Call subroutine at D04
$E3E    $D35D   DRW      V3, V5, #D      ; Draw 13-byte sprite at V3, V5
$E40    $60E4   LD       V0, #E4         ; Load 228 into V0
$E42    $D23E   DRW      V2, V3, #E      ; Draw 14-byte sprite at V2, V3
$E44    $33C7   SE       V3, #C7         ; Skip if V3 == 199
$E46    $A262   LD       I, $262         ; Load 262 into I
$E48    $7CE3   ADD      VC, #E3         ; Add 227 to VC
$E4A    $02EE   SYS      $2EE            ; System call to 2EE
$E4C    $3381   SE       V3, #81         ; Skip if V3 == 129
$E4E    $A42B   LD       I, $42B         ; Load 42B into I
$E50    $2C00   CALL     $C00            ; Call subroutine at C00
$E52    $CCF6   RND      VC, #F6         ; VC = random & F6
$E54    $9639   UNKNOWN  $9639           ; Unknown 9xxx instruction
$E56    $AD6D   LD       I, $D6D         ; Load D6D into I
$E58    $31D1   SE       V1, #D1         ; Skip if V1 == 209
$E5A    $51B7   UNKNOWN  $51B7           ; Unknown 5xxx instruction
$E5C    $4932   SNE      V9, #32         ; Skip if V9 != 50
$E5E    $E4E3   UNKNOWN  $E4E3           ; Unknown Exxx instruction
$E60    $8731   OR       V7, V3          ; V7 |= V3
$E62    $8071   OR       V0, V7          ; V0 |= V7
$E64    $CC25   RND      VC, #25         ; VC = random & 25
$E66    $461E   SNE      V6, #1E         ; Skip if V6 != 30
$E68    $582A   UNKNOWN  $582A           ; Unknown 5xxx instruction
$E6A    $B048   JP       V0, $048        ; Jump to V0 + 048
$E6C    $8089   UNKNOWN  8089            ; Unknown 8xxx instruction
$E6E    $77C4   ADD      V7, #C4         ; Add 196 to V7
$E70    $EF90   UNKNOWN  $EF90           ; Unknown Exxx instruction
$E72    $2CA3   CALL     $CA3            ; Call subroutine at CA3
$E74    $8771   OR       V7, V7          ; V7 |= V7
$E76    $91A5   UNKNOWN  $91A5           ; Unknown 9xxx instruction
$E78    $AF2F   LD       I, $F2F         ; Load F2F into I
$E7A    $28F9   CALL     $8F9            ; Call subroutine at 8F9
$E7C    $7428   ADD      V4, #28         ; Add 40 to V4
$E7E    $91C9   UNKNOWN  $91C9           ; Unknown 9xxx instruction
$E80    $63F0   LD       V3, #F0         ; Load 240 into V3
$E82    $1EBB   JP       $EBB            ; Jump to EBB
$E84    $EC0D   UNKNOWN  $EC0D           ; Unknown Exxx instruction
$E86    $D075   DRW      V0, V7, #5      ; Draw 5-byte sprite at V0, V7
$E88    $FCB8   UNKNOWN  FCB8            ; Unknown Fxxx instruction
$E8A    $C421   RND      V4, #21         ; V4 = random & 21
$E8C    $A89B   LD       I, $89B         ; Load 89B into I
$E8E    $9AC4   UNKNOWN  $9AC4           ; Unknown 9xxx instruction
$E90    $FD9E   UNKNOWN  FD9E            ; Unknown Fxxx instruction
$E92    $F0B1   UNKNOWN  F0B1            ; Unknown Fxxx instruction
$E94    $E83B   UNKNOWN  $E83B           ; Unknown Exxx instruction
$E96    $E918   UNKNOWN  $E918           ; Unknown Exxx instruction
$E98    $89CF   UNKNOWN  89CF            ; Unknown 8xxx instruction
$E9A    $257F   CALL     $57F            ; Call subroutine at 57F
$E9C    $1C35   JP       $C35            ; Jump to C35
$E9E    $E02F   UNKNOWN  $E02F           ; Unknown Exxx instruction
$EA0    $5712   UNKNOWN  $5712           ; Unknown 5xxx instruction
$EA2    $4479   SNE      V4, #79         ; Skip if V4 != 121
$EA4    $4AA1   SNE      VA, #A1         ; Skip if VA != 161
$EA6    $E464   UNKNOWN  $E464           ; Unknown Exxx instruction
$EA8    $9DD3   UNKNOWN  $9DD3           ; Unknown 9xxx instruction
$EAA    $F871   UNKNOWN  F871            ; Unknown Fxxx instruction
$EAC    $D695   DRW      V6, V9, #5      ; Draw 5-byte sprite at V6, V9
$EAE    $A02C   LD       I, $02C         ; Load 02C into I
$EB0    $573E   UNKNOWN  $573E           ; Unknown 5xxx instruction
$EB2    $E210   UNKNOWN  $E210           ; Unknown Exxx instruction
$EB4    $95C0   SNE      V5, VC          ; Skip if V5 != VC
$EB6    $E4CD   UNKNOWN  $E4CD           ; Unknown Exxx instruction
$EB8    $3380   SE       V3, #80         ; Skip if V3 == 128
$EBA    $1CB6   JP       $CB6            ; Jump to CB6
$EBC    $8B84   ADD      VB, V8          ; VB += V8, VF = carry
$EBE    $3317   SE       V3, #17         ; Skip if V3 == 23
$EC0    $87D8   UNKNOWN  87D8            ; Unknown 8xxx instruction
$EC2    $969D   UNKNOWN  $969D           ; Unknown 9xxx instruction
$EC4    $69B7   LD       V9, #B7         ; Load 183 into V9
$EC6    $6680   LD       V6, #80         ; Load 128 into V6
$EC8    $D5E9   DRW      V5, VE, #9      ; Draw 9-byte sprite at V5, VE
$ECA    $B0F7   JP       V0, $0F7        ; Jump to V0 + 0F7
$ECC    $80E3   XOR      V0, VE          ; V0 ^= VE
$ECE    $DC49   DRW      VC, V4, #9      ; Draw 9-byte sprite at VC, V4
$ED0    $2207   CALL     $207            ; Call subroutine at 207
$ED2    $6D78   LD       VD, #78         ; Load 120 into VD
$ED4    $4B36   SNE      VB, #36         ; Skip if VB != 54
$ED6    $75A9   ADD      V5, #A9         ; Add 169 to V5
$ED8    $1C1F   JP       $C1F            ; Jump to C1F
$EDA    $44EB   SNE      V4, #EB         ; Skip if V4 != 235
$EDC    $F842   UNKNOWN  F842            ; Unknown Fxxx instruction
$EDE    $2483   CALL     $483            ; Call subroutine at 483
$EE0    $F4CA   UNKNOWN  F4CA            ; Unknown Fxxx instruction
$EE2    $B0AA   JP       V0, $0AA        ; Jump to V0 + 0AA
$EE4    $9487   UNKNOWN  $9487           ; Unknown 9xxx instruction
$EE6    $51EE   UNKNOWN  $51EE           ; Unknown 5xxx instruction
$EE8    $B420   JP       V0, $420        ; Jump to V0 + 420
$EEA    $3D35   SE       VD, #35         ; Skip if VD == 53
$EEC    $C4F9   RND      V4, #F9         ; V4 = random & F9
$EEE    $52D9   UNKNOWN  $52D9           ; Unknown 5xxx instruction
$EF0    $76F8   ADD      V6, #F8         ; Add 248 to V6
$EF2    $A4DA   LD       I, $4DA         ; Load 4DA into I
$EF4    $E242   UNKNOWN  $E242           ; Unknown Exxx instruction
$EF6    $8858   UNKNOWN  8858            ; Unknown 8xxx instruction
$EF8    $E473   UNKNOWN  $E473           ; Unknown Exxx instruction
$EFA    $2966   CALL     $966            ; Call subroutine at 966
$EFC    $A1A3   LD       I, $1A3         ; Load 1A3 into I
$EFE    $A174   LD       I, $174         ; Load 174 into I
$F00    $59E7   UNKNOWN  $59E7           ; Unknown 5xxx instruction
$F02    $0394   SYS      $394            ; System call to 394
$F04    $B17C   JP       V0, $17C        ; Jump to V0 + 17C
$F06    $DABD   DRW      VA, VB, #D      ; Draw 13-byte sprite at VA, VB
$F08    $33DD   SE       V3, #DD         ; Skip if V3 == 221
$F0A    $60B4   LD       V0, #B4         ; Load 180 into V0
$F0C    $66C1   LD       V6, #C1         ; Load 193 into V6
$F0E    $E49E   SKP      V4              ; Skip if key V4 pressed
$F10    $C8AE   RND      V8, #AE         ; V8 = random & AE
$F12    $9836   UNKNOWN  $9836           ; Unknown 9xxx instruction
$F14    $BD8B   JP       V0, $D8B        ; Jump to V0 + D8B
$F16    $2380   CALL     $380            ; Call subroutine at 380
$F18    $5032   UNKNOWN  $5032           ; Unknown 5xxx instruction
$F1A    $D43A   DRW      V4, V3, #A      ; Draw 10-byte sprite at V4, V3
$F1C    $4688   SNE      V6, #88         ; Skip if V6 != 136
$F1E    $7402   ADD      V4, #02         ; Add 2 to V4
$F20    $E210   UNKNOWN  $E210           ; Unknown Exxx instruction
$F22    $C9FB   RND      V9, #FB         ; V9 = random & FB
$F24    $3B9B   SE       VB, #9B         ; Skip if VB == 155
$F26    $36F2   SE       V6, #F2         ; Skip if V6 == 242
$F28    $DAE9   DRW      VA, VE, #9      ; Draw 9-byte sprite at VA, VE
$F2A    $342E   SE       V4, #2E         ; Skip if V4 == 46
$F2C    $4D00   SNE      VD, #00         ; Skip if VD != 0
$F2E    $0645   SYS      $645            ; System call to 645
$F30    $6761   LD       V7, #61         ; Load 97 into V7
$F32    $CEB9   RND      VE, #B9         ; VE = random & B9
$F34    $88A3   XOR      V8, VA          ; V8 ^= VA
$F36    $1B1D   JP       $B1D            ; Jump to B1D
$F38    $5974   UNKNOWN  $5974           ; Unknown 5xxx instruction
$F3A    $13B6   JP       $3B6            ; Jump to 3B6
$F3C    $3B2A   SE       VB, #2A         ; Skip if VB == 42
$F3E    $8264   ADD      V2, V6          ; V2 += V6, VF = carry
$F40    $1328   JP       $328            ; Jump to 328
$F42    $BD98   JP       V0, $D98        ; Jump to V0 + D98
$F44    $9061   UNKNOWN  $9061           ; Unknown 9xxx instruction
$F46    $CE50   RND      VE, #50         ; VE = random & 50
$F48    $2985   CALL     $985            ; Call subroutine at 985
$F4A    $8CA0   LD       VC, VA          ; VC = VA
$F4C    $CBD7   RND      VB, #D7         ; VB = random & D7
$F4E    $9F13   UNKNOWN  $9F13           ; Unknown 9xxx instruction
$F50    $01FA   SYS      $1FA            ; System call to 1FA
$F52    $4075   SNE      V0, #75         ; Skip if V0 != 117
$F54    $A78A   LD       I, $78A         ; Load 78A into I
$F56    $B1F0   JP       V0, $1F0        ; Jump to V0 + 1F0
$F58    $8751   OR       V7, V5          ; V7 |= V5
$F5A    $D673   DRW      V6, V7, #3      ; Draw 3-byte sprite at V6, V7
$F5C    $1871   JP       $871            ; Jump to 871
$F5E    $DB1B   DRW      VB, V1, #B      ; Draw 11-byte sprite at VB, V1
$F60    $394C   SE       V9, #4C         ; Skip if V9 == 76
$F62    $BA88   JP       V0, $A88        ; Jump to V0 + A88
$F64    $E57F   UNKNOWN  $E57F           ; Unknown Exxx instruction
$F66    $F917   UNKNOWN  F917            ; Unknown Fxxx instruction
$F68    $7EB0   ADD      VE, #B0         ; Add 176 to VE
$F6A    $2154   CALL     $154            ; Call subroutine at 154
$F6C    $BD46   JP       V0, $D46        ; Jump to V0 + D46
$F6E    $2C2C   CALL     $C2C            ; Call subroutine at C2C
$F70    $C5B5   RND      V5, #B5         ; V5 = random & B5
$F72    $2CC7   CALL     $CC7            ; Call subroutine at CC7
$F74    $24BA   CALL     $4BA            ; Call subroutine at 4BA
$F76    $8D20   LD       VD, V2          ; VD = V2
$F78    $C734   RND      V7, #34         ; V7 = random & 34
$F7A    $2941   CALL     $941            ; Call subroutine at 941
$F7C    $3550   SE       V5, #50         ; Skip if V5 == 80
$F7E    $5991   UNKNOWN  $5991           ; Unknown 5xxx instruction
$F80    $446C   SNE      V4, #6C         ; Skip if V4 != 108
$F82    $9DA4   UNKNOWN  $9DA4           ; Unknown 9xxx instruction
$F84    $0777   SYS      $777            ; System call to 777
$F86    $BF2C   JP       V0, $F2C        ; Jump to V0 + F2C
$F88    $8DB6   SHR      VD              ; VD >>= 1, VF = LSB
$F8A    $56BC   UNKNOWN  $56BC           ; Unknown 5xxx instruction
$F8C    $B0D4   JP       V0, $0D4        ; Jump to V0 + 0D4
$F8E    $416A   SNE      V1, #6A         ; Skip if V1 != 106
$F90    $4360   SNE      V3, #60         ; Skip if V3 != 96
$F92    $89D1   OR       V9, VD          ; V9 |= VD
$F94    $4A92   SNE      VA, #92         ; Skip if VA != 146
$F96    $5707   UNKNOWN  $5707           ; Unknown 5xxx instruction
$F98    $342D   SE       V4, #2D         ; Skip if V4 == 45
$F9A    $A2BC   LD       I, $2BC         ; Load 2BC into I
$F9C    $4F87   SNE      VF, #87         ; Skip if VF != 135
$F9E    $B2E3   JP       V0, $2E3        ; Jump to V0 + 2E3
$FA0    $4582   SNE      V5, #82         ; Skip if V5 != 130
$FA2    $FFBA   UNKNOWN  FFBA            ; Unknown Fxxx instruction
$FA4    $5AF7   UNKNOWN  $5AF7           ; Unknown 5xxx instruction
$FA6    $0584   SYS      $584            ; System call to 584
$FA8    $6294   LD       V2, #94         ; Load 148 into V2
$FAA    $F098   UNKNOWN  F098            ; Unknown Fxxx instruction
$FAC    $44DB   SNE      V4, #DB         ; Skip if V4 != 219
$FAE    $3BC4   SE       VB, #C4         ; Skip if VB == 196
$FB0    $C360   RND      V3, #60         ; V3 = random & 60
$FB2    $6496   LD       V4, #96         ; Load 150 into V4
$FB4    $8B76   SHR      VB              ; VB >>= 1, VF = LSB
$FB6    $F488   UNKNOWN  F488            ; Unknown Fxxx instruction
$FB8    $5099   UNKNOWN  $5099           ; Unknown 5xxx instruction
$FBA    $FD6D   UNKNOWN  FD6D            ; Unknown Fxxx instruction
$FBC    $8956   SHR      V9              ; V9 >>= 1, VF = LSB
$FBE    $CBFC   RND      VB, #FC         ; VB = random & FC
$FC0    $E312   UNKNOWN  $E312           ; Unknown Exxx instruction
$FC2    $22D0   CALL     $2D0            ; Call subroutine at 2D0
$FC4    $15D5   JP       $5D5            ; Jump to 5D5
$FC6    $9834   UNKNOWN  $9834           ; Unknown 9xxx instruction
$FC8    $4613   SNE      V6, #13         ; Skip if V6 != 19
$FCA    $F90B   UNKNOWN  F90B            ; Unknown Fxxx instruction
$FCC    $9D28   UNKNOWN  $9D28           ; Unknown 9xxx instruction
$FCE    $DBCA   DRW      VB, VC, #A      ; Draw 10-byte sprite at VB, VC
$FD0    $E465   UNKNOWN  $E465           ; Unknown Exxx instruction
$FD2    $E70E   UNKNOWN  $E70E           ; Unknown Exxx instruction
$FD4    $97AF   UNKNOWN  $97AF           ; Unknown 9xxx instruction
$FD6    $0425   SYS      $425            ; System call to 425
$FD8    $9201   UNKNOWN  $9201           ; Unknown 9xxx instruction
$FDA    $2276   CALL     $276            ; Call subroutine at 276
$FDC    $13B8   JP       $3B8            ; Jump to 3B8
$FDE    $8A09   UNKNOWN  8A09            ; Unknown 8xxx instruction
$FE0    $23EA   CALL     $3EA            ; Call subroutine at 3EA
$FE2    $7FF4   ADD      VF, #F4         ; Add 244 to VF
$FE4    $EE93   UNKNOWN  $EE93           ; Unknown Exxx instruction
$FE6    $36AF   SE       V6, #AF         ; Skip if V6 == 175
$FE8    $A68D   LD       I, $68D         ; Load 68D into I
$FEA    $0530   SYS      $530            ; System call to 530
$FEC    $5B82   UNKNOWN  $5B82           ; Unknown 5xxx instruction
$FEE    $58ED   UNKNOWN  $58ED           ; Unknown 5xxx instruction
$FF0    $1453   JP       $453            ; Jump to 453
$FF2    $3060   SE       V0, #60         ; Skip if V0 == 96
$FF4    $F46C   UNKNOWN  F46C            ; Unknown Fxxx instruction
$FF6    $17D1   JP       $7D1            ; Jump to 7D1
$FF8    $BBEB   JP       V0, $BEB        ; Jump to V0 + BEB
$FFA    $7700   ADD      V7, #00         ; Add 0 to V7
$FFC    $ACC8   LD       I, $CC8         ; Load CC8 into I
$FFE    $BA7F   JP       V0, $A7F        ; Jump to V0 + A7F

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 472 (26.4%)
  LD      : 241 (13.5%)
  JP      : 216 (12.1%)
  SE      : 134 ( 7.5%)
  SNE     : 120 ( 6.7%)
  RND     : 118 ( 6.6%)
  ADD     : 117 ( 6.5%)
  DRW     : 116 ( 6.5%)
  CALL    : 106 ( 5.9%)
  SYS     :  98 ( 5.5%)
  SHR     :  12 ( 0.7%)
  XOR     :  10 ( 0.6%)
  AND     :   7 ( 0.4%)
  SUB     :   7 ( 0.4%)
  SUBN    :   6 ( 0.3%)
  OR      :   6 ( 0.3%)
  SHL     :   4 ( 0.2%)
  SKP     :   1 ( 0.1%)

Memory Operations: 358 (20.0%)
Arithmetic Operations: 153 (8.5%)
