
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B8058D01_I24243_C1001_3ae16030f663.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 8058
Instance: 24243
Direction: ascending
Final Array: [1, 7, 7, 41, 42, 42, 112, 222]
Operations: R:0 W:1 C:5 S:72

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 116
Sort Array References:
  $234: LD I, $842 ; Load 842 into I
  $24C: LD I, $B9C ; Load B9C into I
  $26E: LD I, $5B7 ; Load 5B7 into I
  $27A: LD I, $93A ; Load 93A into I
  $284: LD I, $727 ; Load 727 into I
  $286: LD I, $AE0 ; Load AE0 into I
  $2A4: LD I, $598 ; Load 598 into I
  $2DE: LD I, $CDC ; Load CDC into I
  $316: LD I, $741 ; Load 741 into I
  $31A: LD I, $BB8 ; Load BB8 into I
  $37E: LD I, $66D ; Load 66D into I
  $386: LD I, $BF6 ; Load BF6 into I
  $398: LD I, $131 ; Load 131 into I
  $414: LD I, $A5D ; Load A5D into I
  $442: LD I, $B5A ; Load B5A into I
  $480: LD I, $C31 ; Load C31 into I
  $490: LD I, $09D ; Load 09D into I
  $496: LD I, $300 ; Load 300 into I
  $4B4: LD I, $368 ; Load 368 into I
  $4E6: LD I, $49D ; Load 49D into I
  $4EC: LD I, $703 ; Load 703 into I
  $4F4: LD I, $AA7 ; Load AA7 into I
  $532: LD I, $FF7 ; Load FF7 into I
  $546: LD I, $AC6 ; Load AC6 into I
  $568: LD I, $890 ; Load 890 into I
  $5A6: LD I, $F6B ; Load F6B into I
  $5C4: LD I, $921 ; Load 921 into I
  $5D8: LD I, $08C ; Load 08C into I
  $5E0: LD I, $41E ; Load 41E into I
  $5E4: LD I, $89B ; Load 89B into I
  $5EA: LD I, $5DE ; Load 5DE into I
  $5FE: LD I, $705 ; Load 705 into I
  $646: LD I, $BAA ; Load BAA into I
  $648: LD I, $FE6 ; Load FE6 into I
  $64A: LD I, $865 ; Load 865 into I
  $678: LD I, $D2F ; Load D2F into I
  $694: LD I, $F22 ; Load F22 into I
  $698: LD I, $AA9 ; Load AA9 into I
  $6A8: LD I, $5B9 ; Load 5B9 into I
  $6BA: LD I, $2D0 ; Load 2D0 into I
  $6FA: LD I, $53D ; Load 53D into I
  $70E: LD I, $CC9 ; Load CC9 into I
  $730: LD I, $D45 ; Load D45 into I
  $744: LD I, $542 ; Load 542 into I
  $74A: LD I, $490 ; Load 490 into I
  $75E: LD I, $EB0 ; Load EB0 into I
  $762: LD I, $364 ; Load 364 into I
  $7AA: LD I, $367 ; Load 367 into I
  $7B0: LD I, $00A ; Load 00A into I
  $7B2: LD I, $8F8 ; Load 8F8 into I
  $7CA: LD I, $E0C ; Load E0C into I
  $7E0: LD I, $56C ; Load 56C into I
  $822: LD I, $BB0 ; Load BB0 into I
  $842: LD I, $E35 ; Load E35 into I
  $84E: LD I, $B35 ; Load B35 into I
  $888: LD I, $C7C ; Load C7C into I
  $8FA: LD I, $A68 ; Load A68 into I
  $914: LD I, $6A2 ; Load 6A2 into I
  $940: LD I, $595 ; Load 595 into I
  $944: LD I, $22B ; Load 22B into I
  $960: LD I, $E62 ; Load E62 into I
  $9A8: LD I, $06F ; Load 06F into I
  $9AC: LD I, $37C ; Load 37C into I
  $9BA: LD I, $6FF ; Load 6FF into I
  $9C2: LD I, $A21 ; Load A21 into I
  $9C8: LD I, $D46 ; Load D46 into I
  $9CE: LD I, $16D ; Load 16D into I
  $A0E: LD I, $4F2 ; Load 4F2 into I
  $A24: LD I, $209 ; Load 209 into I
  $A38: LD I, $8F8 ; Load 8F8 into I
  $A70: LD I, $752 ; Load 752 into I
  $A82: LD I, $64D ; Load 64D into I
  $AA4: LD I, $50D ; Load 50D into I
  $AD4: LD I, $EAF ; Load EAF into I
  $AD6: LD I, $BC8 ; Load BC8 into I
  $B32: LD I, $9E2 ; Load 9E2 into I
  $B3C: LD I, $D96 ; Load D96 into I
  $B3E: LD I, $C4C ; Load C4C into I
  $B4A: LD I, $1D9 ; Load 1D9 into I
  $B66: LD I, $63A ; Load 63A into I
  $B96: LD I, $D31 ; Load D31 into I
  $BA4: LD I, $5EB ; Load 5EB into I
  $BC0: LD I, $74B ; Load 74B into I
  $BD4: LD I, $136 ; Load 136 into I
  $BD8: LD I, $C06 ; Load C06 into I
  $BDA: LD I, $C36 ; Load C36 into I
  $C38: LD I, $A21 ; Load A21 into I
  $C4C: LD I, $C22 ; Load C22 into I
  $C70: LD I, $0D0 ; Load 0D0 into I
  $C82: LD I, $72D ; Load 72D into I
  $CAE: LD I, $CD3 ; Load CD3 into I
  $CEE: ADD I, VD ; I ADDRESS MANIPULATION
  $D04: LD I, $26F ; Load 26F into I
  $D12: LD I, $4D2 ; Load 4D2 into I
  $D5C: LD I, $72B ; Load 72B into I
  $DA0: LD I, $413 ; Load 413 into I
  $DBA: LD I, $B9D ; Load B9D into I
  $DC8: LD I, $B9E ; Load B9E into I
  $DE8: LD I, $A40 ; Load A40 into I
  $E00: LD I, $944 ; Load 944 into I
  $E10: LD I, $CBD ; Load CBD into I
  $E24: LD I, $D57 ; Load D57 into I
  $E26: LD I, $C32 ; Load C32 into I
  $E78: LD I, $0F1 ; Load 0F1 into I
  $E9A: LD I, $6DF ; Load 6DF into I
  $EE6: LD I, $D32 ; Load D32 into I
  $EF6: LD I, $C8A ; Load C8A into I
  $F4C: LD I, $9F1 ; Load 9F1 into I
  $F8A: LD I, $1EB ; Load 1EB into I
  $F90: LD I, $D28 ; Load D28 into I
  $F9A: LD I, $769 ; Load 769 into I
  $FAC: LD I, $42D ; Load 42D into I
  $FB4: LD I, $6A8 ; Load 6A8 into I
  $FC0: LD I, $FA3 ; Load FA3 into I
  $FCC: LD I, $B08 ; Load B08 into I
  $FE4: LD I, $BB7 ; Load BB7 into I

CONTROL FLOW ANALYSIS:
Jumps: 203
Calls: 104
Branches: 264
Loops: 117
Loop Structures:
  $256 -> $18B (backward jump)
  $25A -> $21D (backward jump)
  $2FC -> $16A (backward jump)
  $360 -> $2D4 (backward jump)
  $404 -> $327 (backward jump)
  $40A -> $315 (backward jump)
  $47A -> $118 (backward jump)
  $49E -> $3AD (backward jump)
  $516 -> $2DF (backward jump)
  $518 -> $211 (backward jump)
  $556 -> $3F0 (backward jump)
  $55E -> $048 (backward jump)
  $59C -> $317 (backward jump)
  $5CC -> $335 (backward jump)
  $5F2 -> $567 (backward jump)
  $624 -> $127 (backward jump)
  $65E -> $5FD (backward jump)
  $684 -> $1E2 (backward jump)
  $686 -> $4EA (backward jump)
  $6A2 -> $396 (backward jump)
  $6B4 -> $676 (backward jump)
  $6D4 -> $109 (backward jump)
  $71E -> $0D2 (backward jump)
  $72E -> $1FF (backward jump)
  $742 -> $452 (backward jump)
  $758 -> $647 (backward jump)
  $764 -> $09A (backward jump)
  $768 -> $2F9 (backward jump)
  $78A -> $634 (backward jump)
  $792 -> $132 (backward jump)
  $81A -> $682 (backward jump)
  $864 -> $3C9 (backward jump)
  $86E -> $410 (backward jump)
  $89C -> $1E0 (backward jump)
  $8C6 -> $716 (backward jump)
  $8F0 -> $5DE (backward jump)
  $974 -> $885 (backward jump)
  $980 -> $800 (backward jump)
  $9A4 -> $504 (backward jump)
  $9B2 -> $164 (backward jump)
  $9BC -> $236 (backward jump)
  $9CC -> $561 (backward jump)
  $9F4 -> $177 (backward jump)
  $A6C -> $798 (backward jump)
  $A94 -> $58C (backward jump)
  $A9C -> $0CE (backward jump)
  $AAA -> $243 (backward jump)
  $ACC -> $128 (backward jump)
  $AFC -> $78C (backward jump)
  $B04 -> $1C8 (backward jump)
  $B08 -> $05E (backward jump)
  $B16 -> $950 (backward jump)
  $B24 -> $6C1 (backward jump)
  $B7C -> $147 (backward jump)
  $B8A -> $663 (backward jump)
  $B9A -> $665 (backward jump)
  $BA6 -> $172 (backward jump)
  $BC8 -> $264 (backward jump)
  $BE2 -> $5DC (backward jump)
  $BFA -> $074 (backward jump)
  $C28 -> $890 (backward jump)
  $C32 -> $38F (backward jump)
  $C34 -> $3AB (backward jump)
  $C48 -> $01E (backward jump)
  $C5E -> $74F (backward jump)
  $C6C -> $1CD (backward jump)
  $C78 -> $6AE (backward jump)
  $C7C -> $7F5 (backward jump)
  $C80 -> $65D (backward jump)
  $C8A -> $A65 (backward jump)
  $CB8 -> $222 (backward jump)
  $CC0 -> $0F7 (backward jump)
  $CC2 -> $115 (backward jump)
  $CDA -> $099 (backward jump)
  $D08 -> $ACF (backward jump)
  $D0C -> $127 (backward jump)
  $D1C -> $751 (backward jump)
  $D40 -> $284 (backward jump)
  $D72 -> $C51 (backward jump)
  $D7E -> $5EB (backward jump)
  $D86 -> $953 (backward jump)
  $DA2 -> $2AA (backward jump)
  $DB8 -> $B70 (backward jump)
  $DBE -> $AB9 (backward jump)
  $DC2 -> $5C7 (backward jump)
  $DCC -> $942 (backward jump)
  $DD4 -> $02F (backward jump)
  $DD6 -> $BEA (backward jump)
  $DDA -> $C9E (backward jump)
  $DDC -> $10C (backward jump)
  $DF6 -> $C92 (backward jump)
  $E0A -> $D7A (backward jump)
  $E12 -> $2D5 (backward jump)
  $E14 -> $055 (backward jump)
  $E18 -> $B5B (backward jump)
  $E2C -> $386 (backward jump)
  $E6C -> $3D0 (backward jump)
  $E70 -> $9F1 (backward jump)
  $E84 -> $9AD (backward jump)
  $E88 -> $C6E (backward jump)
  $EBE -> $746 (backward jump)
  $F0C -> $007 (backward jump)
  $F24 -> $ADB (backward jump)
  $F30 -> $A44 (backward jump)
  $F36 -> $A14 (backward jump)
  $F38 -> $911 (backward jump)
  $F40 -> $08E (backward jump)
  $F50 -> $A89 (backward jump)
  $F52 -> $798 (backward jump)
  $F6C -> $5F5 (backward jump)
  $F70 -> $DDE (backward jump)
  $F78 -> $2AD (backward jump)
  $F7A -> $966 (backward jump)
  $F9E -> $919 (backward jump)
  $FBA -> $46C (backward jump)
  $FC4 -> $F7D (backward jump)
  $FEA -> $11E (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $B44A   JP       V0, $44A        ; Jump to V0 + 44A
$202    $6573   LD       V5, #73         ; Load 115 into V5
$204    $FF8A   UNKNOWN  FF8A            ; Unknown Fxxx instruction
$206    $0B2E   SYS      $B2E            ; System call to B2E
$208    $EBB6   UNKNOWN  $EBB6           ; Unknown Exxx instruction
$20A    $22C2   CALL     $2C2            ; Call subroutine at 2C2
$20C    $28BF   CALL     $8BF            ; Call subroutine at 8BF
$20E    $71D5   ADD      V1, #D5         ; Add 213 to V1
$210    $688C   LD       V8, #8C         ; Load 140 into V8
$212    $0BE8   SYS      $BE8            ; System call to BE8
$214    $5247   UNKNOWN  $5247           ; Unknown 5xxx instruction
$216    $43A9   SNE      V3, #A9         ; Skip if V3 != 169
$218    $C0F6   RND      V0, #F6         ; V0 = random & F6
$21A    $3C99   SE       VC, #99         ; Skip if VC == 153
$21C    $28C5   CALL     $8C5            ; Call subroutine at 8C5
$21E    $3F1F   SE       VF, #1F         ; Skip if VF == 31
$220    $2CE7   CALL     $CE7            ; Call subroutine at CE7
$222    $3374   SE       V3, #74         ; Skip if V3 == 116
$224    $6E65   LD       VE, #65         ; Load 101 into VE
$226    $7B8E   ADD      VB, #8E         ; Add 142 to VB
$228    $07CD   SYS      $7CD            ; System call to 7CD
$22A    $F194   UNKNOWN  F194            ; Unknown Fxxx instruction
$22C    $EB22   UNKNOWN  $EB22           ; Unknown Exxx instruction
$22E    $CDC6   RND      VD, #C6         ; VD = random & C6
$230    $0FAD   SYS      $FAD            ; System call to FAD
$232    $47DA   SNE      V7, #DA         ; Skip if V7 != 218
$234    $A842   LD       I, $842         ; Load 842 into I
$236    $E2DD   UNKNOWN  $E2DD           ; Unknown Exxx instruction
$238    $0B9F   SYS      $B9F            ; System call to B9F
$23A    $866F   UNKNOWN  866F            ; Unknown 8xxx instruction
$23C    $C007   RND      V0, #07         ; V0 = random & 07
$23E    $F267   UNKNOWN  F267            ; Unknown Fxxx instruction
$240    $08B3   SYS      $8B3            ; System call to 8B3
$242    $FE6D   UNKNOWN  FE6D            ; Unknown Fxxx instruction
$244    $8558   UNKNOWN  8558            ; Unknown 8xxx instruction
$246    $938D   UNKNOWN  $938D           ; Unknown 9xxx instruction
$248    $3B1D   SE       VB, #1D         ; Skip if VB == 29
$24A    $FFFC   UNKNOWN  FFFC            ; Unknown Fxxx instruction
$24C    $AB9C   LD       I, $B9C         ; Load B9C into I
$24E    $E15B   UNKNOWN  $E15B           ; Unknown Exxx instruction
$250    $D74D   DRW      V7, V4, #D      ; Draw 13-byte sprite at V7, V4
$252    $36DB   SE       V6, #DB         ; Skip if V6 == 219
$254    $5EA6   UNKNOWN  $5EA6           ; Unknown 5xxx instruction
$256    $118B   JP       $18B            ; Jump to 18B
$258    $F971   UNKNOWN  F971            ; Unknown Fxxx instruction
$25A    $121D   JP       $21D            ; Jump to 21D
$25C    $646E   LD       V4, #6E         ; Load 110 into V4
$25E    $CEC0   RND      VE, #C0         ; VE = random & C0
$260    $FF7D   UNKNOWN  FF7D            ; Unknown Fxxx instruction
$262    $31D2   SE       V1, #D2         ; Skip if V1 == 210
$264    $9B2F   UNKNOWN  $9B2F           ; Unknown 9xxx instruction
$266    $4B73   SNE      VB, #73         ; Skip if VB != 115
$268    $8D49   UNKNOWN  8D49            ; Unknown 8xxx instruction
$26A    $D034   DRW      V0, V3, #4      ; Draw 4-byte sprite at V0, V3
$26C    $9C0E   UNKNOWN  $9C0E           ; Unknown 9xxx instruction
$26E    $A5B7   LD       I, $5B7         ; Load 5B7 into I
$270    $C3C3   RND      V3, #C3         ; V3 = random & C3
$272    $2E8D   CALL     $E8D            ; Call subroutine at E8D
$274    $665B   LD       V6, #5B         ; Load 91 into V6
$276    $3E69   SE       VE, #69         ; Skip if VE == 105
$278    $8BAB   UNKNOWN  8BAB            ; Unknown 8xxx instruction
$27A    $A93A   LD       I, $93A         ; Load 93A into I
$27C    $8232   AND      V2, V3          ; V2 &= V3
$27E    $35B5   SE       V5, #B5         ; Skip if V5 == 181
$280    $5BAA   UNKNOWN  $5BAA           ; Unknown 5xxx instruction
$282    $6DF5   LD       VD, #F5         ; Load 245 into VD
$284    $A727   LD       I, $727         ; Load 727 into I
$286    $AAE0   LD       I, $AE0         ; Load AE0 into I
$288    $95E4   UNKNOWN  $95E4           ; Unknown 9xxx instruction
$28A    $683F   LD       V8, #3F         ; Load 63 into V8
$28C    $9CB9   UNKNOWN  $9CB9           ; Unknown 9xxx instruction
$28E    $6C25   LD       VC, #25         ; Load 37 into VC
$290    $F6BA   UNKNOWN  F6BA            ; Unknown Fxxx instruction
$292    $0646   SYS      $646            ; System call to 646
$294    $FCB9   UNKNOWN  FCB9            ; Unknown Fxxx instruction
$296    $37DB   SE       V7, #DB         ; Skip if V7 == 219
$298    $72B3   ADD      V2, #B3         ; Add 179 to V2
$29A    $512E   UNKNOWN  $512E           ; Unknown 5xxx instruction
$29C    $7FE5   ADD      VF, #E5         ; Add 229 to VF
$29E    $894B   UNKNOWN  894B            ; Unknown 8xxx instruction
$2A0    $724E   ADD      V2, #4E         ; Add 78 to V2
$2A2    $3F20   SE       VF, #20         ; Skip if VF == 32
$2A4    $A598   LD       I, $598         ; Load 598 into I
$2A6    $87FA   UNKNOWN  87FA            ; Unknown 8xxx instruction
$2A8    $0D8C   SYS      $D8C            ; System call to D8C
$2AA    $F94E   UNKNOWN  F94E            ; Unknown Fxxx instruction
$2AC    $43BE   SNE      V3, #BE         ; Skip if V3 != 190
$2AE    $4B0E   SNE      VB, #0E         ; Skip if VB != 14
$2B0    $D0FC   DRW      V0, VF, #C      ; Draw 12-byte sprite at V0, VF
$2B2    $DC03   DRW      VC, V0, #3      ; Draw 3-byte sprite at VC, V0
$2B4    $C1A1   RND      V1, #A1         ; V1 = random & A1
$2B6    $2857   CALL     $857            ; Call subroutine at 857
$2B8    $3ECD   SE       VE, #CD         ; Skip if VE == 205
$2BA    $8EAF   UNKNOWN  8EAF            ; Unknown 8xxx instruction
$2BC    $EB98   UNKNOWN  $EB98           ; Unknown Exxx instruction
$2BE    $92C4   UNKNOWN  $92C4           ; Unknown 9xxx instruction
$2C0    $2FF1   CALL     $FF1            ; Call subroutine at FF1
$2C2    $91AA   UNKNOWN  $91AA           ; Unknown 9xxx instruction
$2C4    $34F5   SE       V4, #F5         ; Skip if V4 == 245
$2C6    $69D4   LD       V9, #D4         ; Load 212 into V9
$2C8    $30A3   SE       V0, #A3         ; Skip if V0 == 163
$2CA    $7C68   ADD      VC, #68         ; Add 104 to VC
$2CC    $853E   SHL      V5              ; V5 <<= 1, VF = MSB
$2CE    $259B   CALL     $59B            ; Call subroutine at 59B
$2D0    $1EFF   JP       $EFF            ; Jump to EFF
$2D2    $7D4C   ADD      VD, #4C         ; Add 76 to VD
$2D4    $D24C   DRW      V2, V4, #C      ; Draw 12-byte sprite at V2, V4
$2D6    $EEBD   UNKNOWN  $EEBD           ; Unknown Exxx instruction
$2D8    $7112   ADD      V1, #12         ; Add 18 to V1
$2DA    $4691   SNE      V6, #91         ; Skip if V6 != 145
$2DC    $3E23   SE       VE, #23         ; Skip if VE == 35
$2DE    $ACDC   LD       I, $CDC         ; Load CDC into I
$2E0    $5E9D   UNKNOWN  $5E9D           ; Unknown 5xxx instruction
$2E2    $FC35   UNKNOWN  FC35            ; Unknown Fxxx instruction
$2E4    $66D6   LD       V6, #D6         ; Load 214 into V6
$2E6    $294F   CALL     $94F            ; Call subroutine at 94F
$2E8    $0650   SYS      $650            ; System call to 650
$2EA    $0CB2   SYS      $CB2            ; System call to CB2
$2EC    $1B31   JP       $B31            ; Jump to B31
$2EE    $C862   RND      V8, #62         ; V8 = random & 62
$2F0    $6CD0   LD       VC, #D0         ; Load 208 into VC
$2F2    $8B38   UNKNOWN  8B38            ; Unknown 8xxx instruction
$2F4    $2FF3   CALL     $FF3            ; Call subroutine at FF3
$2F6    $E32F   UNKNOWN  $E32F           ; Unknown Exxx instruction
$2F8    $D4EB   DRW      V4, VE, #B      ; Draw 11-byte sprite at V4, VE
$2FA    $4337   SNE      V3, #37         ; Skip if V3 != 55
$2FC    $116A   JP       $16A            ; Jump to 16A
$2FE    $85F0   LD       V5, VF          ; V5 = VF
$300    $0107   SYS      $107            ; System call to 107
$302    $0729   SYS      $729            ; System call to 729
$304    $2A2A   CALL     $A2A            ; Call subroutine at A2A
$306    $70DE   ADD      V0, #DE         ; Add 222 to V0
$308    $BE1B   JP       V0, $E1B        ; Jump to V0 + E1B
$30A    $BCD8   JP       V0, $CD8        ; Jump to V0 + CD8
$30C    $605C   LD       V0, #5C         ; Load 92 into V0
$30E    $8B22   AND      VB, V2          ; VB &= V2
$310    $F0BA   UNKNOWN  F0BA            ; Unknown Fxxx instruction
$312    $8917   SUBN     V9, V1          ; V9 = V1 - V9, VF = !borrow
$314    $014E   SYS      $14E            ; System call to 14E
$316    $A741   LD       I, $741         ; Load 741 into I
$318    $6577   LD       V5, #77         ; Load 119 into V5
$31A    $ABB8   LD       I, $BB8         ; Load BB8 into I
$31C    $DF35   DRW      VF, V3, #5      ; Draw 5-byte sprite at VF, V3
$31E    $BBE3   JP       V0, $BE3        ; Jump to V0 + BE3
$320    $0F9E   SYS      $F9E            ; System call to F9E
$322    $35C1   SE       V5, #C1         ; Skip if V5 == 193
$324    $4952   SNE      V9, #52         ; Skip if V9 != 82
$326    $763A   ADD      V6, #3A         ; Add 58 to V6
$328    $02C3   SYS      $2C3            ; System call to 2C3
$32A    $D6AC   DRW      V6, VA, #C      ; Draw 12-byte sprite at V6, VA
$32C    $4EC3   SNE      VE, #C3         ; Skip if VE != 195
$32E    $00B2   SYS      $0B2            ; System call to 0B2
$330    $7657   ADD      V6, #57         ; Add 87 to V6
$332    $0DCD   SYS      $DCD            ; System call to DCD
$334    $99C0   SNE      V9, VC          ; Skip if V9 != VC
$336    $9F5C   UNKNOWN  $9F5C           ; Unknown 9xxx instruction
$338    $315E   SE       V1, #5E         ; Skip if V1 == 94
$33A    $08FE   SYS      $8FE            ; System call to 8FE
$33C    $FF5C   UNKNOWN  FF5C            ; Unknown Fxxx instruction
$33E    $2D78   CALL     $D78            ; Call subroutine at D78
$340    $95C6   UNKNOWN  $95C6           ; Unknown 9xxx instruction
$342    $2B69   CALL     $B69            ; Call subroutine at B69
$344    $7E5E   ADD      VE, #5E         ; Add 94 to VE
$346    $B372   JP       V0, $372        ; Jump to V0 + 372
$348    $59AC   UNKNOWN  $59AC           ; Unknown 5xxx instruction
$34A    $48E9   SNE      V8, #E9         ; Skip if V8 != 233
$34C    $95B0   SNE      V5, VB          ; Skip if V5 != VB
$34E    $3573   SE       V5, #73         ; Skip if V5 == 115
$350    $843F   UNKNOWN  843F            ; Unknown 8xxx instruction
$352    $01DF   SYS      $1DF            ; System call to 1DF
$354    $3610   SE       V6, #10         ; Skip if V6 == 16
$356    $F067   UNKNOWN  F067            ; Unknown Fxxx instruction
$358    $3977   SE       V9, #77         ; Skip if V9 == 119
$35A    $4314   SNE      V3, #14         ; Skip if V3 != 20
$35C    $9BC0   SNE      VB, VC          ; Skip if VB != VC
$35E    $1E03   JP       $E03            ; Jump to E03
$360    $B2D4   JP       V0, $2D4        ; Jump to V0 + 2D4
$362    $76AA   ADD      V6, #AA         ; Add 170 to V6
$364    $15DE   JP       $5DE            ; Jump to 5DE
$366    $76EC   ADD      V6, #EC         ; Add 236 to V6
$368    $F7FA   UNKNOWN  F7FA            ; Unknown Fxxx instruction
$36A    $E577   UNKNOWN  $E577           ; Unknown Exxx instruction
$36C    $992A   UNKNOWN  $992A           ; Unknown 9xxx instruction
$36E    $E714   UNKNOWN  $E714           ; Unknown Exxx instruction
$370    $6C93   LD       VC, #93         ; Load 147 into VC
$372    $24B0   CALL     $4B0            ; Call subroutine at 4B0
$374    $E1F9   UNKNOWN  $E1F9           ; Unknown Exxx instruction
$376    $C0E3   RND      V0, #E3         ; V0 = random & E3
$378    $9CD1   UNKNOWN  $9CD1           ; Unknown 9xxx instruction
$37A    $EF40   UNKNOWN  $EF40           ; Unknown Exxx instruction
$37C    $195A   JP       $95A            ; Jump to 95A
$37E    $A66D   LD       I, $66D         ; Load 66D into I
$380    $8920   LD       V9, V2          ; V9 = V2
$382    $DD8E   DRW      VD, V8, #E      ; Draw 14-byte sprite at VD, V8
$384    $3366   SE       V3, #66         ; Skip if V3 == 102
$386    $ABF6   LD       I, $BF6         ; Load BF6 into I
$388    $E998   UNKNOWN  $E998           ; Unknown Exxx instruction
$38A    $4176   SNE      V1, #76         ; Skip if V1 != 118
$38C    $616E   LD       V1, #6E         ; Load 110 into V1
$38E    $1D72   JP       $D72            ; Jump to D72
$390    $C4B2   RND      V4, #B2         ; V4 = random & B2
$392    $3990   SE       V9, #90         ; Skip if V9 == 144
$394    $CB62   RND      VB, #62         ; VB = random & 62
$396    $6490   LD       V4, #90         ; Load 144 into V4
$398    $A131   LD       I, $131         ; Load 131 into I
$39A    $CD37   RND      VD, #37         ; VD = random & 37
$39C    $F544   UNKNOWN  F544            ; Unknown Fxxx instruction
$39E    $688F   LD       V8, #8F         ; Load 143 into V8
$3A0    $166D   JP       $66D            ; Jump to 66D
$3A2    $D4FE   DRW      V4, VF, #E      ; Draw 14-byte sprite at V4, VF
$3A4    $3619   SE       V6, #19         ; Skip if V6 == 25
$3A6    $0661   SYS      $661            ; System call to 661
$3A8    $3589   SE       V5, #89         ; Skip if V5 == 137
$3AA    $B59F   JP       V0, $59F        ; Jump to V0 + 59F
$3AC    $8871   OR       V8, V7          ; V8 |= V7
$3AE    $E267   UNKNOWN  $E267           ; Unknown Exxx instruction
$3B0    $E89C   UNKNOWN  $E89C           ; Unknown Exxx instruction
$3B2    $7EF9   ADD      VE, #F9         ; Add 249 to VE
$3B4    $C806   RND      V8, #06         ; V8 = random & 06
$3B6    $C7B4   RND      V7, #B4         ; V7 = random & B4
$3B8    $E2F3   UNKNOWN  $E2F3           ; Unknown Exxx instruction
$3BA    $78A7   ADD      V8, #A7         ; Add 167 to V8
$3BC    $4EE8   SNE      VE, #E8         ; Skip if VE != 232
$3BE    $5A1C   UNKNOWN  $5A1C           ; Unknown 5xxx instruction
$3C0    $3039   SE       V0, #39         ; Skip if V0 == 57
$3C2    $FBD0   UNKNOWN  FBD0            ; Unknown Fxxx instruction
$3C4    $7A9C   ADD      VA, #9C         ; Add 156 to VA
$3C6    $76A0   ADD      V6, #A0         ; Add 160 to V6
$3C8    $2EC4   CALL     $EC4            ; Call subroutine at EC4
$3CA    $3C52   SE       VC, #52         ; Skip if VC == 82
$3CC    $4967   SNE      V9, #67         ; Skip if V9 != 103
$3CE    $859F   UNKNOWN  859F            ; Unknown 8xxx instruction
$3D0    $0D61   SYS      $D61            ; System call to D61
$3D2    $3060   SE       V0, #60         ; Skip if V0 == 96
$3D4    $1CBD   JP       $CBD            ; Jump to CBD
$3D6    $D427   DRW      V4, V2, #7      ; Draw 7-byte sprite at V4, V2
$3D8    $425B   SNE      V2, #5B         ; Skip if V2 != 91
$3DA    $2C9C   CALL     $C9C            ; Call subroutine at C9C
$3DC    $3DB6   SE       VD, #B6         ; Skip if VD == 182
$3DE    $1F81   JP       $F81            ; Jump to F81
$3E0    $BF57   JP       V0, $F57        ; Jump to V0 + F57
$3E2    $3048   SE       V0, #48         ; Skip if V0 == 72
$3E4    $3A33   SE       VA, #33         ; Skip if VA == 51
$3E6    $1A1A   JP       $A1A            ; Jump to A1A
$3E8    $401B   SNE      V0, #1B         ; Skip if V0 != 27
$3EA    $3C0E   SE       VC, #0E         ; Skip if VC == 14
$3EC    $909D   UNKNOWN  $909D           ; Unknown 9xxx instruction
$3EE    $4BFD   SNE      VB, #FD         ; Skip if VB != 253
$3F0    $CA43   RND      VA, #43         ; VA = random & 43
$3F2    $BC3A   JP       V0, $C3A        ; Jump to V0 + C3A
$3F4    $EA05   UNKNOWN  $EA05           ; Unknown Exxx instruction
$3F6    $F21C   UNKNOWN  F21C            ; Unknown Fxxx instruction
$3F8    $E726   UNKNOWN  $E726           ; Unknown Exxx instruction
$3FA    $9DBC   UNKNOWN  $9DBC           ; Unknown 9xxx instruction
$3FC    $E0C7   UNKNOWN  $E0C7           ; Unknown Exxx instruction
$3FE    $8A93   XOR      VA, V9          ; VA ^= V9
$400    $0263   SYS      $263            ; System call to 263
$402    $2D2B   CALL     $D2B            ; Call subroutine at D2B
$404    $B327   JP       V0, $327        ; Jump to V0 + 327
$406    $6386   LD       V3, #86         ; Load 134 into V3
$408    $7434   ADD      V4, #34         ; Add 52 to V4
$40A    $B315   JP       V0, $315        ; Jump to V0 + 315
$40C    $33F0   SE       V3, #F0         ; Skip if V3 == 240
$40E    $3559   SE       V5, #59         ; Skip if V5 == 89
$410    $0CD5   SYS      $CD5            ; System call to CD5
$412    $FF08   UNKNOWN  FF08            ; Unknown Fxxx instruction
$414    $AA5D   LD       I, $A5D         ; Load A5D into I
$416    $E09A   UNKNOWN  $E09A           ; Unknown Exxx instruction
$418    $8DD5   SUB      VD, VD          ; VD -= VD, VF = !borrow
$41A    $0A3B   SYS      $A3B            ; System call to A3B
$41C    $1AD1   JP       $AD1            ; Jump to AD1
$41E    $04EA   SYS      $4EA            ; System call to 4EA
$420    $C6F6   RND      V6, #F6         ; V6 = random & F6
$422    $D3AC   DRW      V3, VA, #C      ; Draw 12-byte sprite at V3, VA
$424    $BF35   JP       V0, $F35        ; Jump to V0 + F35
$426    $D1D5   DRW      V1, VD, #5      ; Draw 5-byte sprite at V1, VD
$428    $6F16   LD       VF, #16         ; Load 22 into VF
$42A    $0AA6   SYS      $AA6            ; System call to AA6
$42C    $D833   DRW      V8, V3, #3      ; Draw 3-byte sprite at V8, V3
$42E    $D2AD   DRW      V2, VA, #D      ; Draw 13-byte sprite at V2, VA
$430    $F74B   UNKNOWN  F74B            ; Unknown Fxxx instruction
$432    $6859   LD       V8, #59         ; Load 89 into V8
$434    $E8B6   UNKNOWN  $E8B6           ; Unknown Exxx instruction
$436    $8C77   SUBN     VC, V7          ; VC = V7 - VC, VF = !borrow
$438    $8824   ADD      V8, V2          ; V8 += V2, VF = carry
$43A    $F1EE   UNKNOWN  F1EE            ; Unknown Fxxx instruction
$43C    $C6F9   RND      V6, #F9         ; V6 = random & F9
$43E    $0A7B   SYS      $A7B            ; System call to A7B
$440    $334E   SE       V3, #4E         ; Skip if V3 == 78
$442    $AB5A   LD       I, $B5A         ; Load B5A into I
$444    $650E   LD       V5, #0E         ; Load 14 into V5
$446    $6643   LD       V6, #43         ; Load 67 into V6
$448    $191E   JP       $91E            ; Jump to 91E
$44A    $F976   UNKNOWN  F976            ; Unknown Fxxx instruction
$44C    $4380   SNE      V3, #80         ; Skip if V3 != 128
$44E    $E591   UNKNOWN  $E591           ; Unknown Exxx instruction
$450    $DAE6   DRW      VA, VE, #6      ; Draw 6-byte sprite at VA, VE
$452    $4A8E   SNE      VA, #8E         ; Skip if VA != 142
$454    $C52B   RND      V5, #2B         ; V5 = random & 2B
$456    $E32C   UNKNOWN  $E32C           ; Unknown Exxx instruction
$458    $FB89   UNKNOWN  FB89            ; Unknown Fxxx instruction
$45A    $9749   UNKNOWN  $9749           ; Unknown 9xxx instruction
$45C    $05F4   SYS      $5F4            ; System call to 5F4
$45E    $7198   ADD      V1, #98         ; Add 152 to V1
$460    $4BC8   SNE      VB, #C8         ; Skip if VB != 200
$462    $9DB6   UNKNOWN  $9DB6           ; Unknown 9xxx instruction
$464    $9D6D   UNKNOWN  $9D6D           ; Unknown 9xxx instruction
$466    $04A2   SYS      $4A2            ; System call to 4A2
$468    $7525   ADD      V5, #25         ; Add 37 to V5
$46A    $D1BC   DRW      V1, VB, #C      ; Draw 12-byte sprite at V1, VB
$46C    $49AF   SNE      V9, #AF         ; Skip if V9 != 175
$46E    $CABE   RND      VA, #BE         ; VA = random & BE
$470    $D2BF   DRW      V2, VB, #F      ; Draw 15-byte sprite at V2, VB
$472    $BE61   JP       V0, $E61        ; Jump to V0 + E61
$474    $7606   ADD      V6, #06         ; Add 6 to V6
$476    $808E   SHL      V0              ; V0 <<= 1, VF = MSB
$478    $60BE   LD       V0, #BE         ; Load 190 into V0
$47A    $B118   JP       V0, $118        ; Jump to V0 + 118
$47C    $7F74   ADD      VF, #74         ; Add 116 to VF
$47E    $D048   DRW      V0, V4, #8      ; Draw 8-byte sprite at V0, V4
$480    $AC31   LD       I, $C31         ; Load C31 into I
$482    $5934   UNKNOWN  $5934           ; Unknown 5xxx instruction
$484    $0309   SYS      $309            ; System call to 309
$486    $536A   UNKNOWN  $536A           ; Unknown 5xxx instruction
$488    $478E   SNE      V7, #8E         ; Skip if V7 != 142
$48A    $0260   SYS      $260            ; System call to 260
$48C    $9054   UNKNOWN  $9054           ; Unknown 9xxx instruction
$48E    $6297   LD       V2, #97         ; Load 151 into V2
$490    $A09D   LD       I, $09D         ; Load 09D into I
$492    $917B   UNKNOWN  $917B           ; Unknown 9xxx instruction
$494    $9281   UNKNOWN  $9281           ; Unknown 9xxx instruction
$496    $A300   LD       I, $300         ; Load 300 into I
$498    $F95A   UNKNOWN  F95A            ; Unknown Fxxx instruction
$49A    $1BB9   JP       $BB9            ; Jump to BB9
$49C    $D113   DRW      V1, V1, #3      ; Draw 3-byte sprite at V1, V1
$49E    $13AD   JP       $3AD            ; Jump to 3AD
$4A0    $1934   JP       $934            ; Jump to 934
$4A2    $7991   ADD      V9, #91         ; Add 145 to V9
$4A4    $F9D5   UNKNOWN  F9D5            ; Unknown Fxxx instruction
$4A6    $4AFA   SNE      VA, #FA         ; Skip if VA != 250
$4A8    $45DE   SNE      V5, #DE         ; Skip if V5 != 222
$4AA    $28C3   CALL     $8C3            ; Call subroutine at 8C3
$4AC    $BAB3   JP       V0, $AB3        ; Jump to V0 + AB3
$4AE    $D55A   DRW      V5, V5, #A      ; Draw 10-byte sprite at V5, V5
$4B0    $8647   SUBN     V6, V4          ; V6 = V4 - V6, VF = !borrow
$4B2    $BAB3   JP       V0, $AB3        ; Jump to V0 + AB3
$4B4    $A368   LD       I, $368         ; Load 368 into I
$4B6    $7105   ADD      V1, #05         ; Add 5 to V1
$4B8    $421A   SNE      V2, #1A         ; Skip if V2 != 26
$4BA    $3D2F   SE       VD, #2F         ; Skip if VD == 47
$4BC    $97FF   UNKNOWN  $97FF           ; Unknown 9xxx instruction
$4BE    $6335   LD       V3, #35         ; Load 53 into V3
$4C0    $0A5D   SYS      $A5D            ; System call to A5D
$4C2    $14DF   JP       $4DF            ; Jump to 4DF
$4C4    $EE95   UNKNOWN  $EE95           ; Unknown Exxx instruction
$4C6    $FDF2   UNKNOWN  FDF2            ; Unknown Fxxx instruction
$4C8    $903C   UNKNOWN  $903C           ; Unknown 9xxx instruction
$4CA    $095C   SYS      $95C            ; System call to 95C
$4CC    $454A   SNE      V5, #4A         ; Skip if V5 != 74
$4CE    $8EDB   UNKNOWN  8EDB            ; Unknown 8xxx instruction
$4D0    $99C9   UNKNOWN  $99C9           ; Unknown 9xxx instruction
$4D2    $2AFD   CALL     $AFD            ; Call subroutine at AFD
$4D4    $0D23   SYS      $D23            ; System call to D23
$4D6    $E82B   UNKNOWN  $E82B           ; Unknown Exxx instruction
$4D8    $99A6   UNKNOWN  $99A6           ; Unknown 9xxx instruction
$4DA    $4A6A   SNE      VA, #6A         ; Skip if VA != 106
$4DC    $85AC   UNKNOWN  85AC            ; Unknown 8xxx instruction
$4DE    $872A   UNKNOWN  872A            ; Unknown 8xxx instruction
$4E0    $7F51   ADD      VF, #51         ; Add 81 to VF
$4E2    $BB53   JP       V0, $B53        ; Jump to V0 + B53
$4E4    $2DF5   CALL     $DF5            ; Call subroutine at DF5
$4E6    $A49D   LD       I, $49D         ; Load 49D into I
$4E8    $B70D   JP       V0, $70D        ; Jump to V0 + 70D
$4EA    $791C   ADD      V9, #1C         ; Add 28 to V9
$4EC    $A703   LD       I, $703         ; Load 703 into I
$4EE    $CCF7   RND      VC, #F7         ; VC = random & F7
$4F0    $218C   CALL     $18C            ; Call subroutine at 18C
$4F2    $78A5   ADD      V8, #A5         ; Add 165 to V8
$4F4    $AAA7   LD       I, $AA7         ; Load AA7 into I
$4F6    $773F   ADD      V7, #3F         ; Add 63 to V7
$4F8    $D51A   DRW      V5, V1, #A      ; Draw 10-byte sprite at V5, V1
$4FA    $6B76   LD       VB, #76         ; Load 118 into VB
$4FC    $EBD0   UNKNOWN  $EBD0           ; Unknown Exxx instruction
$4FE    $E916   UNKNOWN  $E916           ; Unknown Exxx instruction
$500    $3013   SE       V0, #13         ; Skip if V0 == 19
$502    $8312   AND      V3, V1          ; V3 &= V1
$504    $D249   DRW      V2, V4, #9      ; Draw 9-byte sprite at V2, V4
$506    $9B3D   UNKNOWN  $9B3D           ; Unknown 9xxx instruction
$508    $81D0   LD       V1, VD          ; V1 = VD
$50A    $3021   SE       V0, #21         ; Skip if V0 == 33
$50C    $C3D0   RND      V3, #D0         ; V3 = random & D0
$50E    $BF14   JP       V0, $F14        ; Jump to V0 + F14
$510    $4A23   SNE      VA, #23         ; Skip if VA != 35
$512    $92F2   UNKNOWN  $92F2           ; Unknown 9xxx instruction
$514    $191F   JP       $91F            ; Jump to 91F
$516    $12DF   JP       $2DF            ; Jump to 2DF
$518    $B211   JP       V0, $211        ; Jump to V0 + 211
$51A    $2356   CALL     $356            ; Call subroutine at 356
$51C    $661E   LD       V6, #1E         ; Load 30 into V6
$51E    $EF75   UNKNOWN  $EF75           ; Unknown Exxx instruction
$520    $D76D   DRW      V7, V6, #D      ; Draw 13-byte sprite at V7, V6
$522    $385E   SE       V8, #5E         ; Skip if V8 == 94
$524    $9C80   SNE      VC, V8          ; Skip if VC != V8
$526    $5AD9   UNKNOWN  $5AD9           ; Unknown 5xxx instruction
$528    $E17C   UNKNOWN  $E17C           ; Unknown Exxx instruction
$52A    $6014   LD       V0, #14         ; Load 20 into V0
$52C    $B76B   JP       V0, $76B        ; Jump to V0 + 76B
$52E    $9E6E   UNKNOWN  $9E6E           ; Unknown 9xxx instruction
$530    $C710   RND      V7, #10         ; V7 = random & 10
$532    $AFF7   LD       I, $FF7         ; Load FF7 into I
$534    $DB75   DRW      VB, V7, #5      ; Draw 5-byte sprite at VB, V7
$536    $DBFC   DRW      VB, VF, #C      ; Draw 12-byte sprite at VB, VF
$538    $3E77   SE       VE, #77         ; Skip if VE == 119
$53A    $5547   UNKNOWN  $5547           ; Unknown 5xxx instruction
$53C    $2CEE   CALL     $CEE            ; Call subroutine at CEE
$53E    $2D4D   CALL     $D4D            ; Call subroutine at D4D
$540    $365C   SE       V6, #5C         ; Skip if V6 == 92
$542    $037E   SYS      $37E            ; System call to 37E
$544    $3E54   SE       VE, #54         ; Skip if VE == 84
$546    $AAC6   LD       I, $AC6         ; Load AC6 into I
$548    $1A98   JP       $A98            ; Jump to A98
$54A    $88AE   SHL      V8              ; V8 <<= 1, VF = MSB
$54C    $338B   SE       V3, #8B         ; Skip if V3 == 139
$54E    $8612   AND      V6, V1          ; V6 &= V1
$550    $FBE1   UNKNOWN  FBE1            ; Unknown Fxxx instruction
$552    $55F6   UNKNOWN  $55F6           ; Unknown 5xxx instruction
$554    $87E9   UNKNOWN  87E9            ; Unknown 8xxx instruction
$556    $13F0   JP       $3F0            ; Jump to 3F0
$558    $CE69   RND      VE, #69         ; VE = random & 69
$55A    $7A59   ADD      VA, #59         ; Add 89 to VA
$55C    $F02B   UNKNOWN  F02B            ; Unknown Fxxx instruction
$55E    $B048   JP       V0, $048        ; Jump to V0 + 048
$560    $4DD2   SNE      VD, #D2         ; Skip if VD != 210
$562    $BBC5   JP       V0, $BC5        ; Jump to V0 + BC5
$564    $436C   SNE      V3, #6C         ; Skip if V3 != 108
$566    $242C   CALL     $42C            ; Call subroutine at 42C
$568    $A890   LD       I, $890         ; Load 890 into I
$56A    $E08E   UNKNOWN  $E08E           ; Unknown Exxx instruction
$56C    $9501   UNKNOWN  $9501           ; Unknown 9xxx instruction
$56E    $6D1F   LD       VD, #1F         ; Load 31 into VD
$570    $9F4B   UNKNOWN  $9F4B           ; Unknown 9xxx instruction
$572    $445E   SNE      V4, #5E         ; Skip if V4 != 94
$574    $C7C5   RND      V7, #C5         ; V7 = random & C5
$576    $9045   UNKNOWN  $9045           ; Unknown 9xxx instruction
$578    $6D12   LD       VD, #12         ; Load 18 into VD
$57A    $411D   SNE      V1, #1D         ; Skip if V1 != 29
$57C    $DF56   DRW      VF, V5, #6      ; Draw 6-byte sprite at VF, V5
$57E    $420E   SNE      V2, #0E         ; Skip if V2 != 14
$580    $667D   LD       V6, #7D         ; Load 125 into V6
$582    $E557   UNKNOWN  $E557           ; Unknown Exxx instruction
$584    $5997   UNKNOWN  $5997           ; Unknown 5xxx instruction
$586    $4B0E   SNE      VB, #0E         ; Skip if VB != 14
$588    $54A5   UNKNOWN  $54A5           ; Unknown 5xxx instruction
$58A    $2A27   CALL     $A27            ; Call subroutine at A27
$58C    $3314   SE       V3, #14         ; Skip if V3 == 20
$58E    $E6D2   UNKNOWN  $E6D2           ; Unknown Exxx instruction
$590    $1F98   JP       $F98            ; Jump to F98
$592    $39A3   SE       V9, #A3         ; Skip if V9 == 163
$594    $9AF2   UNKNOWN  $9AF2           ; Unknown 9xxx instruction
$596    $3A52   SE       VA, #52         ; Skip if VA == 82
$598    $7979   ADD      V9, #79         ; Add 121 to V9
$59A    $B661   JP       V0, $661        ; Jump to V0 + 661
$59C    $B317   JP       V0, $317        ; Jump to V0 + 317
$59E    $EDAF   UNKNOWN  $EDAF           ; Unknown Exxx instruction
$5A0    $EC76   UNKNOWN  $EC76           ; Unknown Exxx instruction
$5A2    $FE9C   UNKNOWN  FE9C            ; Unknown Fxxx instruction
$5A4    $C8B8   RND      V8, #B8         ; V8 = random & B8
$5A6    $AF6B   LD       I, $F6B         ; Load F6B into I
$5A8    $008B   SYS      $08B            ; System call to 08B
$5AA    $95A5   UNKNOWN  $95A5           ; Unknown 9xxx instruction
$5AC    $6ABF   LD       VA, #BF         ; Load 191 into VA
$5AE    $02FE   SYS      $2FE            ; System call to 2FE
$5B0    $6C2C   LD       VC, #2C         ; Load 44 into VC
$5B2    $3CE1   SE       VC, #E1         ; Skip if VC == 225
$5B4    $18EC   JP       $8EC            ; Jump to 8EC
$5B6    $4033   SNE      V0, #33         ; Skip if V0 != 51
$5B8    $486C   SNE      V8, #6C         ; Skip if V8 != 108
$5BA    $BBF9   JP       V0, $BF9        ; Jump to V0 + BF9
$5BC    $BAC9   JP       V0, $AC9        ; Jump to V0 + AC9
$5BE    $063B   SYS      $63B            ; System call to 63B
$5C0    $1F14   JP       $F14            ; Jump to F14
$5C2    $4F92   SNE      VF, #92         ; Skip if VF != 146
$5C4    $A921   LD       I, $921         ; Load 921 into I
$5C6    $0347   SYS      $347            ; System call to 347
$5C8    $0221   SYS      $221            ; System call to 221
$5CA    $F94D   UNKNOWN  F94D            ; Unknown Fxxx instruction
$5CC    $B335   JP       V0, $335        ; Jump to V0 + 335
$5CE    $B6F0   JP       V0, $6F0        ; Jump to V0 + 6F0
$5D0    $6980   LD       V9, #80         ; Load 128 into V9
$5D2    $7D80   ADD      VD, #80         ; Add 128 to VD
$5D4    $5B79   UNKNOWN  $5B79           ; Unknown 5xxx instruction
$5D6    $8590   LD       V5, V9          ; V5 = V9
$5D8    $A08C   LD       I, $08C         ; Load 08C into I
$5DA    $F841   UNKNOWN  F841            ; Unknown Fxxx instruction
$5DC    $D7E2   DRW      V7, VE, #2      ; Draw 2-byte sprite at V7, VE
$5DE    $CB60   RND      VB, #60         ; VB = random & 60
$5E0    $A41E   LD       I, $41E         ; Load 41E into I
$5E2    $7383   ADD      V3, #83         ; Add 131 to V3
$5E4    $A89B   LD       I, $89B         ; Load 89B into I
$5E6    $3695   SE       V6, #95         ; Skip if V6 == 149
$5E8    $E655   UNKNOWN  $E655           ; Unknown Exxx instruction
$5EA    $A5DE   LD       I, $5DE         ; Load 5DE into I
$5EC    $900C   UNKNOWN  $900C           ; Unknown 9xxx instruction
$5EE    $4A1E   SNE      VA, #1E         ; Skip if VA != 30
$5F0    $DD7A   DRW      VD, V7, #A      ; Draw 10-byte sprite at VD, V7
$5F2    $B567   JP       V0, $567        ; Jump to V0 + 567
$5F4    $0D68   SYS      $D68            ; System call to D68
$5F6    $CB8D   RND      VB, #8D         ; VB = random & 8D
$5F8    $4E9D   SNE      VE, #9D         ; Skip if VE != 157
$5FA    $4A9F   SNE      VA, #9F         ; Skip if VA != 159
$5FC    $F763   UNKNOWN  F763            ; Unknown Fxxx instruction
$5FE    $A705   LD       I, $705         ; Load 705 into I
$600    $685C   LD       V8, #5C         ; Load 92 into V8
$602    $4A97   SNE      VA, #97         ; Skip if VA != 151
$604    $CB64   RND      VB, #64         ; VB = random & 64
$606    $48E0   SNE      V8, #E0         ; Skip if V8 != 224
$608    $FEE7   UNKNOWN  FEE7            ; Unknown Fxxx instruction
$60A    $79E1   ADD      V9, #E1         ; Add 225 to V9
$60C    $B85F   JP       V0, $85F        ; Jump to V0 + 85F
$60E    $42AA   SNE      V2, #AA         ; Skip if V2 != 170
$610    $9DF3   UNKNOWN  $9DF3           ; Unknown 9xxx instruction
$612    $8A41   OR       VA, V4          ; VA |= V4
$614    $007D   SYS      $07D            ; System call to 07D
$616    $07E3   SYS      $7E3            ; System call to 7E3
$618    $1A3F   JP       $A3F            ; Jump to A3F
$61A    $0109   SYS      $109            ; System call to 109
$61C    $9A36   UNKNOWN  $9A36           ; Unknown 9xxx instruction
$61E    $63A8   LD       V3, #A8         ; Load 168 into V3
$620    $CA9A   RND      VA, #9A         ; VA = random & 9A
$622    $3C34   SE       VC, #34         ; Skip if VC == 52
$624    $B127   JP       V0, $127        ; Jump to V0 + 127
$626    $52C4   UNKNOWN  $52C4           ; Unknown 5xxx instruction
$628    $E0C2   UNKNOWN  $E0C2           ; Unknown Exxx instruction
$62A    $005E   SYS      $05E            ; System call to 05E
$62C    $2975   CALL     $975            ; Call subroutine at 975
$62E    $BFF7   JP       V0, $FF7        ; Jump to V0 + FF7
$630    $F2B9   UNKNOWN  F2B9            ; Unknown Fxxx instruction
$632    $5CFA   UNKNOWN  $5CFA           ; Unknown 5xxx instruction
$634    $2BA2   CALL     $BA2            ; Call subroutine at BA2
$636    $1E96   JP       $E96            ; Jump to E96
$638    $E048   UNKNOWN  $E048           ; Unknown Exxx instruction
$63A    $F9AF   UNKNOWN  F9AF            ; Unknown Fxxx instruction
$63C    $F6F3   UNKNOWN  F6F3            ; Unknown Fxxx instruction
$63E    $5769   UNKNOWN  $5769           ; Unknown 5xxx instruction
$640    $DB32   DRW      VB, V3, #2      ; Draw 2-byte sprite at VB, V3
$642    $7E8D   ADD      VE, #8D         ; Add 141 to VE
$644    $F820   UNKNOWN  F820            ; Unknown Fxxx instruction
$646    $ABAA   LD       I, $BAA         ; Load BAA into I
$648    $AFE6   LD       I, $FE6         ; Load FE6 into I
$64A    $A865   LD       I, $865         ; Load 865 into I
$64C    $23EA   CALL     $3EA            ; Call subroutine at 3EA
$64E    $C30D   RND      V3, #0D         ; V3 = random & 0D
$650    $CCFF   RND      VC, #FF         ; VC = random & FF
$652    $0C2C   SYS      $C2C            ; System call to C2C
$654    $8D98   UNKNOWN  8D98            ; Unknown 8xxx instruction
$656    $4EDB   SNE      VE, #DB         ; Skip if VE != 219
$658    $00B5   SYS      $0B5            ; System call to 0B5
$65A    $074E   SYS      $74E            ; System call to 74E
$65C    $D16E   DRW      V1, V6, #E      ; Draw 14-byte sprite at V1, V6
$65E    $B5FD   JP       V0, $5FD        ; Jump to V0 + 5FD
$660    $F199   UNKNOWN  F199            ; Unknown Fxxx instruction
$662    $4B21   SNE      VB, #21         ; Skip if VB != 33
$664    $2D16   CALL     $D16            ; Call subroutine at D16
$666    $0A34   SYS      $A34            ; System call to A34
$668    $D840   DRW      V8, V4, #0      ; Draw 0-byte sprite at V8, V4
$66A    $3CDD   SE       VC, #DD         ; Skip if VC == 221
$66C    $97DE   UNKNOWN  $97DE           ; Unknown 9xxx instruction
$66E    $353E   SE       V5, #3E         ; Skip if V5 == 62
$670    $C88B   RND      V8, #8B         ; V8 = random & 8B
$672    $3217   SE       V2, #17         ; Skip if V2 == 23
$674    $91DD   UNKNOWN  $91DD           ; Unknown 9xxx instruction
$676    $DEA0   DRW      VE, VA, #0      ; Draw 0-byte sprite at VE, VA
$678    $AD2F   LD       I, $D2F         ; Load D2F into I
$67A    $DBF1   DRW      VB, VF, #1      ; Draw 1-byte sprite at VB, VF
$67C    $4D06   SNE      VD, #06         ; Skip if VD != 6
$67E    $75B5   ADD      V5, #B5         ; Add 181 to V5
$680    $F04C   UNKNOWN  F04C            ; Unknown Fxxx instruction
$682    $0C72   SYS      $C72            ; System call to C72
$684    $11E2   JP       $1E2            ; Jump to 1E2
$686    $B4EA   JP       V0, $4EA        ; Jump to V0 + 4EA
$688    $ED90   UNKNOWN  $ED90           ; Unknown Exxx instruction
$68A    $6A68   LD       VA, #68         ; Load 104 into VA
$68C    $21DB   CALL     $1DB            ; Call subroutine at 1DB
$68E    $0540   SYS      $540            ; System call to 540
$690    $56BD   UNKNOWN  $56BD           ; Unknown 5xxx instruction
$692    $554C   UNKNOWN  $554C           ; Unknown 5xxx instruction
$694    $AF22   LD       I, $F22         ; Load F22 into I
$696    $D2C2   DRW      V2, VC, #2      ; Draw 2-byte sprite at V2, VC
$698    $AAA9   LD       I, $AA9         ; Load AA9 into I
$69A    $CE74   RND      VE, #74         ; VE = random & 74
$69C    $DBB9   DRW      VB, VB, #9      ; Draw 9-byte sprite at VB, VB
$69E    $283C   CALL     $83C            ; Call subroutine at 83C
$6A0    $6B55   LD       VB, #55         ; Load 85 into VB
$6A2    $1396   JP       $396            ; Jump to 396
$6A4    $32FD   SE       V2, #FD         ; Skip if V2 == 253
$6A6    $CF78   RND      VF, #78         ; VF = random & 78
$6A8    $A5B9   LD       I, $5B9         ; Load 5B9 into I
$6AA    $91E4   UNKNOWN  $91E4           ; Unknown 9xxx instruction
$6AC    $D3A8   DRW      V3, VA, #8      ; Draw 8-byte sprite at V3, VA
$6AE    $3DA5   SE       VD, #A5         ; Skip if VD == 165
$6B0    $6B16   LD       VB, #16         ; Load 22 into VB
$6B2    $BB3F   JP       V0, $B3F        ; Jump to V0 + B3F
$6B4    $B676   JP       V0, $676        ; Jump to V0 + 676
$6B6    $0122   SYS      $122            ; System call to 122
$6B8    $087D   SYS      $87D            ; System call to 87D
$6BA    $A2D0   LD       I, $2D0         ; Load 2D0 into I
$6BC    $4F34   SNE      VF, #34         ; Skip if VF != 52
$6BE    $F17E   UNKNOWN  F17E            ; Unknown Fxxx instruction
$6C0    $45DD   SNE      V5, #DD         ; Skip if V5 != 221
$6C2    $4612   SNE      V6, #12         ; Skip if V6 != 18
$6C4    $E54E   UNKNOWN  $E54E           ; Unknown Exxx instruction
$6C6    $FD66   UNKNOWN  FD66            ; Unknown Fxxx instruction
$6C8    $8BD6   SHR      VB              ; VB >>= 1, VF = LSB
$6CA    $7E4A   ADD      VE, #4A         ; Add 74 to VE
$6CC    $B7F8   JP       V0, $7F8        ; Jump to V0 + 7F8
$6CE    $C578   RND      V5, #78         ; V5 = random & 78
$6D0    $E47E   UNKNOWN  $E47E           ; Unknown Exxx instruction
$6D2    $B9C0   JP       V0, $9C0        ; Jump to V0 + 9C0
$6D4    $1109   JP       $109            ; Jump to 109
$6D6    $BD35   JP       V0, $D35        ; Jump to V0 + D35
$6D8    $85BA   UNKNOWN  85BA            ; Unknown 8xxx instruction
$6DA    $C6EE   RND      V6, #EE         ; V6 = random & EE
$6DC    $C28E   RND      V2, #8E         ; V2 = random & 8E
$6DE    $3D59   SE       VD, #59         ; Skip if VD == 89
$6E0    $005C   SYS      $05C            ; System call to 05C
$6E2    $DC2A   DRW      VC, V2, #A      ; Draw 10-byte sprite at VC, V2
$6E4    $425E   SNE      V2, #5E         ; Skip if V2 != 94
$6E6    $3856   SE       V8, #56         ; Skip if V8 == 86
$6E8    $73F0   ADD      V3, #F0         ; Add 240 to V3
$6EA    $92D5   UNKNOWN  $92D5           ; Unknown 9xxx instruction
$6EC    $1FFA   JP       $FFA            ; Jump to FFA
$6EE    $644A   LD       V4, #4A         ; Load 74 into V4
$6F0    $4EE4   SNE      VE, #E4         ; Skip if VE != 228
$6F2    $9730   SNE      V7, V3          ; Skip if V7 != V3
$6F4    $FC48   UNKNOWN  FC48            ; Unknown Fxxx instruction
$6F6    $274A   CALL     $74A            ; Call subroutine at 74A
$6F8    $FD82   UNKNOWN  FD82            ; Unknown Fxxx instruction
$6FA    $A53D   LD       I, $53D         ; Load 53D into I
$6FC    $4DAB   SNE      VD, #AB         ; Skip if VD != 171
$6FE    $EC42   UNKNOWN  $EC42           ; Unknown Exxx instruction
$700    $4E7A   SNE      VE, #7A         ; Skip if VE != 122
$702    $3C46   SE       VC, #46         ; Skip if VC == 70
$704    $C669   RND      V6, #69         ; V6 = random & 69
$706    $83A6   SHR      V3              ; V3 >>= 1, VF = LSB
$708    $6BBA   LD       VB, #BA         ; Load 186 into VB
$70A    $73D7   ADD      V3, #D7         ; Add 215 to V3
$70C    $339F   SE       V3, #9F         ; Skip if V3 == 159
$70E    $ACC9   LD       I, $CC9         ; Load CC9 into I
$710    $04CE   SYS      $4CE            ; System call to 4CE
$712    $0EB9   SYS      $EB9            ; System call to EB9
$714    $5C4D   UNKNOWN  $5C4D           ; Unknown 5xxx instruction
$716    $C4A0   RND      V4, #A0         ; V4 = random & A0
$718    $6059   LD       V0, #59         ; Load 89 into V0
$71A    $61F6   LD       V1, #F6         ; Load 246 into V1
$71C    $6D74   LD       VD, #74         ; Load 116 into VD
$71E    $B0D2   JP       V0, $0D2        ; Jump to V0 + 0D2
$720    $4C0F   SNE      VC, #0F         ; Skip if VC != 15
$722    $C192   RND      V1, #92         ; V1 = random & 92
$724    $7BA2   ADD      VB, #A2         ; Add 162 to VB
$726    $24A1   CALL     $4A1            ; Call subroutine at 4A1
$728    $5EE9   UNKNOWN  $5EE9           ; Unknown 5xxx instruction
$72A    $6E11   LD       VE, #11         ; Load 17 into VE
$72C    $592C   UNKNOWN  $592C           ; Unknown 5xxx instruction
$72E    $B1FF   JP       V0, $1FF        ; Jump to V0 + 1FF
$730    $AD45   LD       I, $D45         ; Load D45 into I
$732    $9930   SNE      V9, V3          ; Skip if V9 != V3
$734    $E89B   UNKNOWN  $E89B           ; Unknown Exxx instruction
$736    $6357   LD       V3, #57         ; Load 87 into V3
$738    $5419   UNKNOWN  $5419           ; Unknown 5xxx instruction
$73A    $8F64   ADD      VF, V6          ; VF += V6, VF = carry
$73C    $B973   JP       V0, $973        ; Jump to V0 + 973
$73E    $5092   UNKNOWN  $5092           ; Unknown 5xxx instruction
$740    $1F7A   JP       $F7A            ; Jump to F7A
$742    $B452   JP       V0, $452        ; Jump to V0 + 452
$744    $A542   LD       I, $542         ; Load 542 into I
$746    $3428   SE       V4, #28         ; Skip if V4 == 40
$748    $694C   LD       V9, #4C         ; Load 76 into V9
$74A    $A490   LD       I, $490         ; Load 490 into I
$74C    $EE6F   UNKNOWN  $EE6F           ; Unknown Exxx instruction
$74E    $7EF6   ADD      VE, #F6         ; Add 246 to VE
$750    $3329   SE       V3, #29         ; Skip if V3 == 41
$752    $9AF7   UNKNOWN  $9AF7           ; Unknown 9xxx instruction
$754    $6D18   LD       VD, #18         ; Load 24 into VD
$756    $4AF2   SNE      VA, #F2         ; Skip if VA != 242
$758    $B647   JP       V0, $647        ; Jump to V0 + 647
$75A    $75A9   ADD      V5, #A9         ; Add 169 to V5
$75C    $7CDF   ADD      VC, #DF         ; Add 223 to VC
$75E    $AEB0   LD       I, $EB0         ; Load EB0 into I
$760    $FDAA   UNKNOWN  FDAA            ; Unknown Fxxx instruction
$762    $A364   LD       I, $364         ; Load 364 into I
$764    $B09A   JP       V0, $09A        ; Jump to V0 + 09A
$766    $E4D4   UNKNOWN  $E4D4           ; Unknown Exxx instruction
$768    $B2F9   JP       V0, $2F9        ; Jump to V0 + 2F9
$76A    $D389   DRW      V3, V8, #9      ; Draw 9-byte sprite at V3, V8
$76C    $4801   SNE      V8, #01         ; Skip if V8 != 1
$76E    $C34C   RND      V3, #4C         ; V3 = random & 4C
$770    $637F   LD       V3, #7F         ; Load 127 into V3
$772    $95D0   SNE      V5, VD          ; Skip if V5 != VD
$774    $9111   UNKNOWN  $9111           ; Unknown 9xxx instruction
$776    $820F   UNKNOWN  820F            ; Unknown 8xxx instruction
$778    $9490   SNE      V4, V9          ; Skip if V4 != V9
$77A    $2DE5   CALL     $DE5            ; Call subroutine at DE5
$77C    $FBAC   UNKNOWN  FBAC            ; Unknown Fxxx instruction
$77E    $70E6   ADD      V0, #E6         ; Add 230 to V0
$780    $DFEC   DRW      VF, VE, #C      ; Draw 12-byte sprite at VF, VE
$782    $3573   SE       V5, #73         ; Skip if V5 == 115
$784    $417B   SNE      V1, #7B         ; Skip if V1 != 123
$786    $F482   UNKNOWN  F482            ; Unknown Fxxx instruction
$788    $585E   UNKNOWN  $585E           ; Unknown 5xxx instruction
$78A    $B634   JP       V0, $634        ; Jump to V0 + 634
$78C    $5951   UNKNOWN  $5951           ; Unknown 5xxx instruction
$78E    $C760   RND      V7, #60         ; V7 = random & 60
$790    $923A   UNKNOWN  $923A           ; Unknown 9xxx instruction
$792    $1132   JP       $132            ; Jump to 132
$794    $D716   DRW      V7, V1, #6      ; Draw 6-byte sprite at V7, V1
$796    $61CF   LD       V1, #CF         ; Load 207 into V1
$798    $F6BC   UNKNOWN  F6BC            ; Unknown Fxxx instruction
$79A    $6CFB   LD       VC, #FB         ; Load 251 into VC
$79C    $0C36   SYS      $C36            ; System call to C36
$79E    $D1FB   DRW      V1, VF, #B      ; Draw 11-byte sprite at V1, VF
$7A0    $88DC   UNKNOWN  88DC            ; Unknown 8xxx instruction
$7A2    $4A4A   SNE      VA, #4A         ; Skip if VA != 74
$7A4    $3882   SE       V8, #82         ; Skip if V8 == 130
$7A6    $7EE9   ADD      VE, #E9         ; Add 233 to VE
$7A8    $9C84   UNKNOWN  $9C84           ; Unknown 9xxx instruction
$7AA    $A367   LD       I, $367         ; Load 367 into I
$7AC    $8E87   SUBN     VE, V8          ; VE = V8 - VE, VF = !borrow
$7AE    $0217   SYS      $217            ; System call to 217
$7B0    $A00A   LD       I, $00A         ; Load 00A into I
$7B2    $A8F8   LD       I, $8F8         ; Load 8F8 into I
$7B4    $0BDA   SYS      $BDA            ; System call to BDA
$7B6    $9F17   UNKNOWN  $9F17           ; Unknown 9xxx instruction
$7B8    $2FCF   CALL     $FCF            ; Call subroutine at FCF
$7BA    $362F   SE       V6, #2F         ; Skip if V6 == 47
$7BC    $73D0   ADD      V3, #D0         ; Add 208 to V3
$7BE    $90E9   UNKNOWN  $90E9           ; Unknown 9xxx instruction
$7C0    $4BDE   SNE      VB, #DE         ; Skip if VB != 222
$7C2    $5519   UNKNOWN  $5519           ; Unknown 5xxx instruction
$7C4    $0333   SYS      $333            ; System call to 333
$7C6    $71C1   ADD      V1, #C1         ; Add 193 to V1
$7C8    $BE43   JP       V0, $E43        ; Jump to V0 + E43
$7CA    $AE0C   LD       I, $E0C         ; Load E0C into I
$7CC    $6032   LD       V0, #32         ; Load 50 into V0
$7CE    $7E18   ADD      VE, #18         ; Add 24 to VE
$7D0    $E5A0   UNKNOWN  $E5A0           ; Unknown Exxx instruction
$7D2    $1B00   JP       $B00            ; Jump to B00
$7D4    $E6F8   UNKNOWN  $E6F8           ; Unknown Exxx instruction
$7D6    $7BA3   ADD      VB, #A3         ; Add 163 to VB
$7D8    $7AF2   ADD      VA, #F2         ; Add 242 to VA
$7DA    $8176   SHR      V1              ; V1 >>= 1, VF = LSB
$7DC    $BBF0   JP       V0, $BF0        ; Jump to V0 + BF0
$7DE    $4AC3   SNE      VA, #C3         ; Skip if VA != 195
$7E0    $A56C   LD       I, $56C         ; Load 56C into I
$7E2    $3ED9   SE       VE, #D9         ; Skip if VE == 217
$7E4    $43E8   SNE      V3, #E8         ; Skip if V3 != 232
$7E6    $3B6F   SE       VB, #6F         ; Skip if VB == 111
$7E8    $D7C1   DRW      V7, VC, #1      ; Draw 1-byte sprite at V7, VC
$7EA    $D667   DRW      V6, V6, #7      ; Draw 7-byte sprite at V6, V6
$7EC    $7D13   ADD      VD, #13         ; Add 19 to VD
$7EE    $6C86   LD       VC, #86         ; Load 134 into VC
$7F0    $4B88   SNE      VB, #88         ; Skip if VB != 136
$7F2    $D215   DRW      V2, V1, #5      ; Draw 5-byte sprite at V2, V1
$7F4    $7B0F   ADD      VB, #0F         ; Add 15 to VB
$7F6    $F8F7   UNKNOWN  F8F7            ; Unknown Fxxx instruction
$7F8    $3030   SE       V0, #30         ; Skip if V0 == 48
$7FA    $6014   LD       V0, #14         ; Load 20 into V0
$7FC    $7D49   ADD      VD, #49         ; Add 73 to VD
$7FE    $F486   UNKNOWN  F486            ; Unknown Fxxx instruction
$800    $211E   CALL     $11E            ; Call subroutine at 11E
$802    $5EDF   UNKNOWN  $5EDF           ; Unknown 5xxx instruction
$804    $88BD   UNKNOWN  88BD            ; Unknown 8xxx instruction
$806    $27AF   CALL     $7AF            ; Call subroutine at 7AF
$808    $2532   CALL     $532            ; Call subroutine at 532
$80A    $0DA6   SYS      $DA6            ; System call to DA6
$80C    $783E   ADD      V8, #3E         ; Add 62 to V8
$80E    $2537   CALL     $537            ; Call subroutine at 537
$810    $E35A   UNKNOWN  $E35A           ; Unknown Exxx instruction
$812    $BA5A   JP       V0, $A5A        ; Jump to V0 + A5A
$814    $0FA9   SYS      $FA9            ; System call to FA9
$816    $2779   CALL     $779            ; Call subroutine at 779
$818    $F541   UNKNOWN  F541            ; Unknown Fxxx instruction
$81A    $B682   JP       V0, $682        ; Jump to V0 + 682
$81C    $8A5B   UNKNOWN  8A5B            ; Unknown 8xxx instruction
$81E    $21B1   CALL     $1B1            ; Call subroutine at 1B1
$820    $CE38   RND      VE, #38         ; VE = random & 38
$822    $ABB0   LD       I, $BB0         ; Load BB0 into I
$824    $5174   UNKNOWN  $5174           ; Unknown 5xxx instruction
$826    $F4B6   UNKNOWN  F4B6            ; Unknown Fxxx instruction
$828    $95BD   UNKNOWN  $95BD           ; Unknown 9xxx instruction
$82A    $68A9   LD       V8, #A9         ; Load 169 into V8
$82C    $60D4   LD       V0, #D4         ; Load 212 into V0
$82E    $C060   RND      V0, #60         ; V0 = random & 60
$830    $FB2A   UNKNOWN  FB2A            ; Unknown Fxxx instruction
$832    $3556   SE       V5, #56         ; Skip if V5 == 86
$834    $FEAE   UNKNOWN  FEAE            ; Unknown Fxxx instruction
$836    $BB75   JP       V0, $B75        ; Jump to V0 + B75
$838    $9905   UNKNOWN  $9905           ; Unknown 9xxx instruction
$83A    $9367   UNKNOWN  $9367           ; Unknown 9xxx instruction
$83C    $6E68   LD       VE, #68         ; Load 104 into VE
$83E    $8D02   AND      VD, V0          ; VD &= V0
$840    $6AC8   LD       VA, #C8         ; Load 200 into VA
$842    $AE35   LD       I, $E35         ; Load E35 into I
$844    $D6B3   DRW      V6, VB, #3      ; Draw 3-byte sprite at V6, VB
$846    $01F5   SYS      $1F5            ; System call to 1F5
$848    $4B2C   SNE      VB, #2C         ; Skip if VB != 44
$84A    $3D7C   SE       VD, #7C         ; Skip if VD == 124
$84C    $0480   SYS      $480            ; System call to 480
$84E    $AB35   LD       I, $B35         ; Load B35 into I
$850    $4DB1   SNE      VD, #B1         ; Skip if VD != 177
$852    $EB50   UNKNOWN  $EB50           ; Unknown Exxx instruction
$854    $EF62   UNKNOWN  $EF62           ; Unknown Exxx instruction
$856    $24AB   CALL     $4AB            ; Call subroutine at 4AB
$858    $865C   UNKNOWN  865C            ; Unknown 8xxx instruction
$85A    $6F35   LD       VF, #35         ; Load 53 into VF
$85C    $0D29   SYS      $D29            ; System call to D29
$85E    $3433   SE       V4, #33         ; Skip if V4 == 51
$860    $E361   UNKNOWN  $E361           ; Unknown Exxx instruction
$862    $D90B   DRW      V9, V0, #B      ; Draw 11-byte sprite at V9, V0
$864    $13C9   JP       $3C9            ; Jump to 3C9
$866    $548F   UNKNOWN  $548F           ; Unknown 5xxx instruction
$868    $06EB   SYS      $6EB            ; System call to 6EB
$86A    $BED4   JP       V0, $ED4        ; Jump to V0 + ED4
$86C    $7163   ADD      V1, #63         ; Add 99 to V1
$86E    $1410   JP       $410            ; Jump to 410
$870    $6063   LD       V0, #63         ; Load 99 into V0
$872    $4A5D   SNE      VA, #5D         ; Skip if VA != 93
$874    $2EEC   CALL     $EEC            ; Call subroutine at EEC
$876    $283A   CALL     $83A            ; Call subroutine at 83A
$878    $2DBF   CALL     $DBF            ; Call subroutine at DBF
$87A    $9C67   UNKNOWN  $9C67           ; Unknown 9xxx instruction
$87C    $23F5   CALL     $3F5            ; Call subroutine at 3F5
$87E    $0003   SYS      $003            ; System call to 003
$880    $D7F0   DRW      V7, VF, #0      ; Draw 0-byte sprite at V7, VF
$882    $4CB8   SNE      VC, #B8         ; Skip if VC != 184
$884    $7EE7   ADD      VE, #E7         ; Add 231 to VE
$886    $0D8B   SYS      $D8B            ; System call to D8B
$888    $AC7C   LD       I, $C7C         ; Load C7C into I
$88A    $771C   ADD      V7, #1C         ; Add 28 to V7
$88C    $C7E2   RND      V7, #E2         ; V7 = random & E2
$88E    $C59C   RND      V5, #9C         ; V5 = random & 9C
$890    $5CFE   UNKNOWN  $5CFE           ; Unknown 5xxx instruction
$892    $34DC   SE       V4, #DC         ; Skip if V4 == 220
$894    $9933   UNKNOWN  $9933           ; Unknown 9xxx instruction
$896    $06FE   SYS      $6FE            ; System call to 6FE
$898    $4B91   SNE      VB, #91         ; Skip if VB != 145
$89A    $02BA   SYS      $2BA            ; System call to 2BA
$89C    $11E0   JP       $1E0            ; Jump to 1E0
$89E    $C956   RND      V9, #56         ; V9 = random & 56
$8A0    $E781   UNKNOWN  $E781           ; Unknown Exxx instruction
$8A2    $8A23   XOR      VA, V2          ; VA ^= V2
$8A4    $1E06   JP       $E06            ; Jump to E06
$8A6    $7BFC   ADD      VB, #FC         ; Add 252 to VB
$8A8    $645B   LD       V4, #5B         ; Load 91 into V4
$8AA    $F804   UNKNOWN  F804            ; Unknown Fxxx instruction
$8AC    $54EF   UNKNOWN  $54EF           ; Unknown 5xxx instruction
$8AE    $C206   RND      V2, #06         ; V2 = random & 06
$8B0    $E391   UNKNOWN  $E391           ; Unknown Exxx instruction
$8B2    $2488   CALL     $488            ; Call subroutine at 488
$8B4    $6104   LD       V1, #04         ; Load 4 into V1
$8B6    $F9C5   UNKNOWN  F9C5            ; Unknown Fxxx instruction
$8B8    $EE3B   UNKNOWN  $EE3B           ; Unknown Exxx instruction
$8BA    $F113   UNKNOWN  F113            ; Unknown Fxxx instruction
$8BC    $025F   SYS      $25F            ; System call to 25F
$8BE    $606B   LD       V0, #6B         ; Load 107 into V0
$8C0    $6454   LD       V4, #54         ; Load 84 into V4
$8C2    $C1BE   RND      V1, #BE         ; V1 = random & BE
$8C4    $2EF3   CALL     $EF3            ; Call subroutine at EF3
$8C6    $1716   JP       $716            ; Jump to 716
$8C8    $2DE3   CALL     $DE3            ; Call subroutine at DE3
$8CA    $1E64   JP       $E64            ; Jump to E64
$8CC    $24E9   CALL     $4E9            ; Call subroutine at 4E9
$8CE    $20BA   CALL     $0BA            ; Call subroutine at 0BA
$8D0    $89FF   UNKNOWN  89FF            ; Unknown 8xxx instruction
$8D2    $5DF8   UNKNOWN  $5DF8           ; Unknown 5xxx instruction
$8D4    $750F   ADD      V5, #0F         ; Add 15 to V5
$8D6    $9755   UNKNOWN  $9755           ; Unknown 9xxx instruction
$8D8    $E152   UNKNOWN  $E152           ; Unknown Exxx instruction
$8DA    $DED6   DRW      VE, VD, #6      ; Draw 6-byte sprite at VE, VD
$8DC    $BFCD   JP       V0, $FCD        ; Jump to V0 + FCD
$8DE    $4382   SNE      V3, #82         ; Skip if V3 != 130
$8E0    $7C8D   ADD      VC, #8D         ; Add 141 to VC
$8E2    $9F5F   UNKNOWN  $9F5F           ; Unknown 9xxx instruction
$8E4    $54F0   SE       V4, VF          ; Skip if V4 == VF
$8E6    $CD83   RND      VD, #83         ; VD = random & 83
$8E8    $6013   LD       V0, #13         ; Load 19 into V0
$8EA    $E394   UNKNOWN  $E394           ; Unknown Exxx instruction
$8EC    $CB40   RND      VB, #40         ; VB = random & 40
$8EE    $C32E   RND      V3, #2E         ; V3 = random & 2E
$8F0    $B5DE   JP       V0, $5DE        ; Jump to V0 + 5DE
$8F2    $6C74   LD       VC, #74         ; Load 116 into VC
$8F4    $327F   SE       V2, #7F         ; Skip if V2 == 127
$8F6    $5A4F   UNKNOWN  $5A4F           ; Unknown 5xxx instruction
$8F8    $274B   CALL     $74B            ; Call subroutine at 74B
$8FA    $AA68   LD       I, $A68         ; Load A68 into I
$8FC    $3B86   SE       VB, #86         ; Skip if VB == 134
$8FE    $0FFC   SYS      $FFC            ; System call to FFC
$900    $976C   UNKNOWN  $976C           ; Unknown 9xxx instruction
$902    $D265   DRW      V2, V6, #5      ; Draw 5-byte sprite at V2, V6
$904    $6A3E   LD       VA, #3E         ; Load 62 into VA
$906    $7A71   ADD      VA, #71         ; Add 113 to VA
$908    $F4D9   UNKNOWN  F4D9            ; Unknown Fxxx instruction
$90A    $BC0F   JP       V0, $C0F        ; Jump to V0 + C0F
$90C    $2C95   CALL     $C95            ; Call subroutine at C95
$90E    $5929   UNKNOWN  $5929           ; Unknown 5xxx instruction
$910    $4C43   SNE      VC, #43         ; Skip if VC != 67
$912    $D132   DRW      V1, V3, #2      ; Draw 2-byte sprite at V1, V3
$914    $A6A2   LD       I, $6A2         ; Load 6A2 into I
$916    $D4FC   DRW      V4, VF, #C      ; Draw 12-byte sprite at V4, VF
$918    $E796   UNKNOWN  $E796           ; Unknown Exxx instruction
$91A    $DC83   DRW      VC, V8, #3      ; Draw 3-byte sprite at VC, V8
$91C    $0062   SYS      $062            ; System call to 062
$91E    $F252   UNKNOWN  F252            ; Unknown Fxxx instruction
$920    $595F   UNKNOWN  $595F           ; Unknown 5xxx instruction
$922    $F834   UNKNOWN  F834            ; Unknown Fxxx instruction
$924    $6A06   LD       VA, #06         ; Load 6 into VA
$926    $9D99   UNKNOWN  $9D99           ; Unknown 9xxx instruction
$928    $E5DF   UNKNOWN  $E5DF           ; Unknown Exxx instruction
$92A    $C85B   RND      V8, #5B         ; V8 = random & 5B
$92C    $C78D   RND      V7, #8D         ; V7 = random & 8D
$92E    $FA26   UNKNOWN  FA26            ; Unknown Fxxx instruction
$930    $849D   UNKNOWN  849D            ; Unknown 8xxx instruction
$932    $F9FB   UNKNOWN  F9FB            ; Unknown Fxxx instruction
$934    $3AD2   SE       VA, #D2         ; Skip if VA == 210
$936    $664F   LD       V6, #4F         ; Load 79 into V6
$938    $4984   SNE      V9, #84         ; Skip if V9 != 132
$93A    $F0D7   UNKNOWN  F0D7            ; Unknown Fxxx instruction
$93C    $2AF5   CALL     $AF5            ; Call subroutine at AF5
$93E    $5B4F   UNKNOWN  $5B4F           ; Unknown 5xxx instruction
$940    $A595   LD       I, $595         ; Load 595 into I
$942    $837D   UNKNOWN  837D            ; Unknown 8xxx instruction
$944    $A22B   LD       I, $22B         ; Load 22B into I
$946    $E1A6   UNKNOWN  $E1A6           ; Unknown Exxx instruction
$948    $E0A5   UNKNOWN  $E0A5           ; Unknown Exxx instruction
$94A    $7A22   ADD      VA, #22         ; Add 34 to VA
$94C    $C373   RND      V3, #73         ; V3 = random & 73
$94E    $C1F2   RND      V1, #F2         ; V1 = random & F2
$950    $E870   UNKNOWN  $E870           ; Unknown Exxx instruction
$952    $2CD9   CALL     $CD9            ; Call subroutine at CD9
$954    $E462   UNKNOWN  $E462           ; Unknown Exxx instruction
$956    $98F5   UNKNOWN  $98F5           ; Unknown 9xxx instruction
$958    $F0E0   UNKNOWN  F0E0            ; Unknown Fxxx instruction
$95A    $6F10   LD       VF, #10         ; Load 16 into VF
$95C    $7269   ADD      V2, #69         ; Add 105 to V2
$95E    $E340   UNKNOWN  $E340           ; Unknown Exxx instruction
$960    $AE62   LD       I, $E62         ; Load E62 into I
$962    $68A7   LD       V8, #A7         ; Load 167 into V8
$964    $3CF1   SE       VC, #F1         ; Skip if VC == 241
$966    $E4F6   UNKNOWN  $E4F6           ; Unknown Exxx instruction
$968    $7490   ADD      V4, #90         ; Add 144 to V4
$96A    $6D72   LD       VD, #72         ; Load 114 into VD
$96C    $3EF3   SE       VE, #F3         ; Skip if VE == 243
$96E    $DE21   DRW      VE, V2, #1      ; Draw 1-byte sprite at VE, V2
$970    $2E2E   CALL     $E2E            ; Call subroutine at E2E
$972    $BE31   JP       V0, $E31        ; Jump to V0 + E31
$974    $1885   JP       $885            ; Jump to 885
$976    $6822   LD       V8, #22         ; Load 34 into V8
$978    $716C   ADD      V1, #6C         ; Add 108 to V1
$97A    $0883   SYS      $883            ; System call to 883
$97C    $05BD   SYS      $5BD            ; System call to 5BD
$97E    $0D60   SYS      $D60            ; System call to D60
$980    $1800   JP       $800            ; Jump to 800
$982    $40B2   SNE      V0, #B2         ; Skip if V0 != 178
$984    $CE2A   RND      VE, #2A         ; VE = random & 2A
$986    $7AAD   ADD      VA, #AD         ; Add 173 to VA
$988    $856D   UNKNOWN  856D            ; Unknown 8xxx instruction
$98A    $600D   LD       V0, #0D         ; Load 13 into V0
$98C    $7D0C   ADD      VD, #0C         ; Add 12 to VD
$98E    $E8C7   UNKNOWN  $E8C7           ; Unknown Exxx instruction
$990    $DB41   DRW      VB, V4, #1      ; Draw 1-byte sprite at VB, V4
$992    $F240   UNKNOWN  F240            ; Unknown Fxxx instruction
$994    $646B   LD       V4, #6B         ; Load 107 into V4
$996    $9D1B   UNKNOWN  $9D1B           ; Unknown 9xxx instruction
$998    $59DB   UNKNOWN  $59DB           ; Unknown 5xxx instruction
$99A    $70D4   ADD      V0, #D4         ; Add 212 to V0
$99C    $9805   UNKNOWN  $9805           ; Unknown 9xxx instruction
$99E    $5E68   UNKNOWN  $5E68           ; Unknown 5xxx instruction
$9A0    $8E5D   UNKNOWN  8E5D            ; Unknown 8xxx instruction
$9A2    $45AE   SNE      V5, #AE         ; Skip if V5 != 174
$9A4    $1504   JP       $504            ; Jump to 504
$9A6    $6BAE   LD       VB, #AE         ; Load 174 into VB
$9A8    $A06F   LD       I, $06F         ; Load 06F into I
$9AA    $0611   SYS      $611            ; System call to 611
$9AC    $A37C   LD       I, $37C         ; Load 37C into I
$9AE    $F574   UNKNOWN  F574            ; Unknown Fxxx instruction
$9B0    $0901   SYS      $901            ; System call to 901
$9B2    $B164   JP       V0, $164        ; Jump to V0 + 164
$9B4    $29CE   CALL     $9CE            ; Call subroutine at 9CE
$9B6    $2A29   CALL     $A29            ; Call subroutine at A29
$9B8    $2879   CALL     $879            ; Call subroutine at 879
$9BA    $A6FF   LD       I, $6FF         ; Load 6FF into I
$9BC    $B236   JP       V0, $236        ; Jump to V0 + 236
$9BE    $5C41   UNKNOWN  $5C41           ; Unknown 5xxx instruction
$9C0    $6AA0   LD       VA, #A0         ; Load 160 into VA
$9C2    $AA21   LD       I, $A21         ; Load A21 into I
$9C4    $90FE   UNKNOWN  $90FE           ; Unknown 9xxx instruction
$9C6    $25DB   CALL     $5DB            ; Call subroutine at 5DB
$9C8    $AD46   LD       I, $D46         ; Load D46 into I
$9CA    $9228   UNKNOWN  $9228           ; Unknown 9xxx instruction
$9CC    $B561   JP       V0, $561        ; Jump to V0 + 561
$9CE    $A16D   LD       I, $16D         ; Load 16D into I
$9D0    $3BDD   SE       VB, #DD         ; Skip if VB == 221
$9D2    $9509   UNKNOWN  $9509           ; Unknown 9xxx instruction
$9D4    $E3F2   UNKNOWN  $E3F2           ; Unknown Exxx instruction
$9D6    $2EC9   CALL     $EC9            ; Call subroutine at EC9
$9D8    $874C   UNKNOWN  874C            ; Unknown 8xxx instruction
$9DA    $0D33   SYS      $D33            ; System call to D33
$9DC    $D8F7   DRW      V8, VF, #7      ; Draw 7-byte sprite at V8, VF
$9DE    $5E4A   UNKNOWN  $5E4A           ; Unknown 5xxx instruction
$9E0    $EB35   UNKNOWN  $EB35           ; Unknown Exxx instruction
$9E2    $BE8F   JP       V0, $E8F        ; Jump to V0 + E8F
$9E4    $BA6B   JP       V0, $A6B        ; Jump to V0 + A6B
$9E6    $905B   UNKNOWN  $905B           ; Unknown 9xxx instruction
$9E8    $39B6   SE       V9, #B6         ; Skip if V9 == 182
$9EA    $FBD0   UNKNOWN  FBD0            ; Unknown Fxxx instruction
$9EC    $D249   DRW      V2, V4, #9      ; Draw 9-byte sprite at V2, V4
$9EE    $F418   LD       ST, V4          ; Sound timer = V4
$9F0    $304C   SE       V0, #4C         ; Skip if V0 == 76
$9F2    $4EB8   SNE      VE, #B8         ; Skip if VE != 184
$9F4    $1177   JP       $177            ; Jump to 177
$9F6    $386F   SE       V8, #6F         ; Skip if V8 == 111
$9F8    $75DF   ADD      V5, #DF         ; Add 223 to V5
$9FA    $E9B4   UNKNOWN  $E9B4           ; Unknown Exxx instruction
$9FC    $74F8   ADD      V4, #F8         ; Add 248 to V4
$9FE    $804B   UNKNOWN  804B            ; Unknown 8xxx instruction
$A00    $C614   RND      V6, #14         ; V6 = random & 14
$A02    $BF35   JP       V0, $F35        ; Jump to V0 + F35
$A04    $0907   SYS      $907            ; System call to 907
$A06    $60BE   LD       V0, #BE         ; Load 190 into V0
$A08    $5626   UNKNOWN  $5626           ; Unknown 5xxx instruction
$A0A    $334B   SE       V3, #4B         ; Skip if V3 == 75
$A0C    $0DCC   SYS      $DCC            ; System call to DCC
$A0E    $A4F2   LD       I, $4F2         ; Load 4F2 into I
$A10    $FDF1   UNKNOWN  FDF1            ; Unknown Fxxx instruction
$A12    $081C   SYS      $81C            ; System call to 81C
$A14    $4083   SNE      V0, #83         ; Skip if V0 != 131
$A16    $34F8   SE       V4, #F8         ; Skip if V4 == 248
$A18    $5AEA   UNKNOWN  $5AEA           ; Unknown 5xxx instruction
$A1A    $2F56   CALL     $F56            ; Call subroutine at F56
$A1C    $8B4D   UNKNOWN  8B4D            ; Unknown 8xxx instruction
$A1E    $E051   UNKNOWN  $E051           ; Unknown Exxx instruction
$A20    $441F   SNE      V4, #1F         ; Skip if V4 != 31
$A22    $57AE   UNKNOWN  $57AE           ; Unknown 5xxx instruction
$A24    $A209   LD       I, $209         ; Load 209 into I
$A26    $9A22   UNKNOWN  $9A22           ; Unknown 9xxx instruction
$A28    $7D0F   ADD      VD, #0F         ; Add 15 to VD
$A2A    $38FF   SE       V8, #FF         ; Skip if V8 == 255
$A2C    $BCA0   JP       V0, $CA0        ; Jump to V0 + CA0
$A2E    $7370   ADD      V3, #70         ; Add 112 to V3
$A30    $8697   SUBN     V6, V9          ; V6 = V9 - V6, VF = !borrow
$A32    $DDE6   DRW      VD, VE, #6      ; Draw 6-byte sprite at VD, VE
$A34    $81E4   ADD      V1, VE          ; V1 += VE, VF = carry
$A36    $E42B   UNKNOWN  $E42B           ; Unknown Exxx instruction
$A38    $A8F8   LD       I, $8F8         ; Load 8F8 into I
$A3A    $C090   RND      V0, #90         ; V0 = random & 90
$A3C    $6A0E   LD       VA, #0E         ; Load 14 into VA
$A3E    $1F15   JP       $F15            ; Jump to F15
$A40    $C543   RND      V5, #43         ; V5 = random & 43
$A42    $42B0   SNE      V2, #B0         ; Skip if V2 != 176
$A44    $1AB2   JP       $AB2            ; Jump to AB2
$A46    $5044   UNKNOWN  $5044           ; Unknown 5xxx instruction
$A48    $D589   DRW      V5, V8, #9      ; Draw 9-byte sprite at V5, V8
$A4A    $F3CD   UNKNOWN  F3CD            ; Unknown Fxxx instruction
$A4C    $D35D   DRW      V3, V5, #D      ; Draw 13-byte sprite at V3, V5
$A4E    $94C5   UNKNOWN  $94C5           ; Unknown 9xxx instruction
$A50    $93B7   UNKNOWN  $93B7           ; Unknown 9xxx instruction
$A52    $CB3B   RND      VB, #3B         ; VB = random & 3B
$A54    $4A66   SNE      VA, #66         ; Skip if VA != 102
$A56    $872D   UNKNOWN  872D            ; Unknown 8xxx instruction
$A58    $617E   LD       V1, #7E         ; Load 126 into V1
$A5A    $7DF8   ADD      VD, #F8         ; Add 248 to VD
$A5C    $D590   DRW      V5, V9, #0      ; Draw 0-byte sprite at V5, V9
$A5E    $DA3E   DRW      VA, V3, #E      ; Draw 14-byte sprite at VA, V3
$A60    $E624   UNKNOWN  $E624           ; Unknown Exxx instruction
$A62    $7D88   ADD      VD, #88         ; Add 136 to VD
$A64    $24BD   CALL     $4BD            ; Call subroutine at 4BD
$A66    $3DAA   SE       VD, #AA         ; Skip if VD == 170
$A68    $E52C   UNKNOWN  $E52C           ; Unknown Exxx instruction
$A6A    $73D4   ADD      V3, #D4         ; Add 212 to V3
$A6C    $1798   JP       $798            ; Jump to 798
$A6E    $BCA3   JP       V0, $CA3        ; Jump to V0 + CA3
$A70    $A752   LD       I, $752         ; Load 752 into I
$A72    $0B20   SYS      $B20            ; System call to B20
$A74    $93C8   UNKNOWN  $93C8           ; Unknown 9xxx instruction
$A76    $4BFE   SNE      VB, #FE         ; Skip if VB != 254
$A78    $58E0   SE       V8, VE          ; Skip if V8 == VE
$A7A    $F0C8   UNKNOWN  F0C8            ; Unknown Fxxx instruction
$A7C    $CE53   RND      VE, #53         ; VE = random & 53
$A7E    $E190   UNKNOWN  $E190           ; Unknown Exxx instruction
$A80    $C267   RND      V2, #67         ; V2 = random & 67
$A82    $A64D   LD       I, $64D         ; Load 64D into I
$A84    $9A92   UNKNOWN  $9A92           ; Unknown 9xxx instruction
$A86    $94AF   UNKNOWN  $94AF           ; Unknown 9xxx instruction
$A88    $4735   SNE      V7, #35         ; Skip if V7 != 53
$A8A    $64D5   LD       V4, #D5         ; Load 213 into V4
$A8C    $976B   UNKNOWN  $976B           ; Unknown 9xxx instruction
$A8E    $23E1   CALL     $3E1            ; Call subroutine at 3E1
$A90    $EF7E   UNKNOWN  $EF7E           ; Unknown Exxx instruction
$A92    $3D04   SE       VD, #04         ; Skip if VD == 4
$A94    $158C   JP       $58C            ; Jump to 58C
$A96    $5D5A   UNKNOWN  $5D5A           ; Unknown 5xxx instruction
$A98    $8185   SUB      V1, V8          ; V1 -= V8, VF = !borrow
$A9A    $2EC0   CALL     $EC0            ; Call subroutine at EC0
$A9C    $B0CE   JP       V0, $0CE        ; Jump to V0 + 0CE
$A9E    $79C3   ADD      V9, #C3         ; Add 195 to V9
$AA0    $353E   SE       V5, #3E         ; Skip if V5 == 62
$AA2    $4267   SNE      V2, #67         ; Skip if V2 != 103
$AA4    $A50D   LD       I, $50D         ; Load 50D into I
$AA6    $4E41   SNE      VE, #41         ; Skip if VE != 65
$AA8    $9B53   UNKNOWN  $9B53           ; Unknown 9xxx instruction
$AAA    $1243   JP       $243            ; Jump to 243
$AAC    $9F12   UNKNOWN  $9F12           ; Unknown 9xxx instruction
$AAE    $1BF5   JP       $BF5            ; Jump to BF5
$AB0    $E8E4   UNKNOWN  $E8E4           ; Unknown Exxx instruction
$AB2    $7F15   ADD      VF, #15         ; Add 21 to VF
$AB4    $868E   SHL      V6              ; V6 <<= 1, VF = MSB
$AB6    $BD75   JP       V0, $D75        ; Jump to V0 + D75
$AB8    $3BA3   SE       VB, #A3         ; Skip if VB == 163
$ABA    $F994   UNKNOWN  F994            ; Unknown Fxxx instruction
$ABC    $0C59   SYS      $C59            ; System call to C59
$ABE    $9175   UNKNOWN  $9175           ; Unknown 9xxx instruction
$AC0    $666F   LD       V6, #6F         ; Load 111 into V6
$AC2    $D001   DRW      V0, V0, #1      ; Draw 1-byte sprite at V0, V0
$AC4    $8449   UNKNOWN  8449            ; Unknown 8xxx instruction
$AC6    $C178   RND      V1, #78         ; V1 = random & 78
$AC8    $6A53   LD       VA, #53         ; Load 83 into VA
$ACA    $352F   SE       V5, #2F         ; Skip if V5 == 47
$ACC    $1128   JP       $128            ; Jump to 128
$ACE    $D487   DRW      V4, V8, #7      ; Draw 7-byte sprite at V4, V8
$AD0    $51E7   UNKNOWN  $51E7           ; Unknown 5xxx instruction
$AD2    $3D26   SE       VD, #26         ; Skip if VD == 38
$AD4    $AEAF   LD       I, $EAF         ; Load EAF into I
$AD6    $ABC8   LD       I, $BC8         ; Load BC8 into I
$AD8    $ECFE   UNKNOWN  $ECFE           ; Unknown Exxx instruction
$ADA    $8B7C   UNKNOWN  8B7C            ; Unknown 8xxx instruction
$ADC    $C3EB   RND      V3, #EB         ; V3 = random & EB
$ADE    $D201   DRW      V2, V0, #1      ; Draw 1-byte sprite at V2, V0
$AE0    $53C2   UNKNOWN  $53C2           ; Unknown 5xxx instruction
$AE2    $9521   UNKNOWN  $9521           ; Unknown 9xxx instruction
$AE4    $FB7C   UNKNOWN  FB7C            ; Unknown Fxxx instruction
$AE6    $2564   CALL     $564            ; Call subroutine at 564
$AE8    $0B9B   SYS      $B9B            ; System call to B9B
$AEA    $F88A   UNKNOWN  F88A            ; Unknown Fxxx instruction
$AEC    $BB90   JP       V0, $B90        ; Jump to V0 + B90
$AEE    $9806   UNKNOWN  $9806           ; Unknown 9xxx instruction
$AF0    $8071   OR       V0, V7          ; V0 |= V7
$AF2    $C41C   RND      V4, #1C         ; V4 = random & 1C
$AF4    $D232   DRW      V2, V3, #2      ; Draw 2-byte sprite at V2, V3
$AF6    $FD57   UNKNOWN  FD57            ; Unknown Fxxx instruction
$AF8    $4E07   SNE      VE, #07         ; Skip if VE != 7
$AFA    $045C   SYS      $45C            ; System call to 45C
$AFC    $B78C   JP       V0, $78C        ; Jump to V0 + 78C
$AFE    $268B   CALL     $68B            ; Call subroutine at 68B
$B00    $52AE   UNKNOWN  $52AE           ; Unknown 5xxx instruction
$B02    $004F   SYS      $04F            ; System call to 04F
$B04    $B1C8   JP       V0, $1C8        ; Jump to V0 + 1C8
$B06    $F09B   UNKNOWN  F09B            ; Unknown Fxxx instruction
$B08    $105E   JP       $05E            ; Jump to 05E
$B0A    $6C60   LD       VC, #60         ; Load 96 into VC
$B0C    $F9CF   UNKNOWN  F9CF            ; Unknown Fxxx instruction
$B0E    $3C56   SE       VC, #56         ; Skip if VC == 86
$B10    $C43D   RND      V4, #3D         ; V4 = random & 3D
$B12    $C084   RND      V0, #84         ; V0 = random & 84
$B14    $01D1   SYS      $1D1            ; System call to 1D1
$B16    $1950   JP       $950            ; Jump to 950
$B18    $5D1A   UNKNOWN  $5D1A           ; Unknown 5xxx instruction
$B1A    $350C   SE       V5, #0C         ; Skip if V5 == 12
$B1C    $7425   ADD      V4, #25         ; Add 37 to V4
$B1E    $4D0E   SNE      VD, #0E         ; Skip if VD != 14
$B20    $FD27   UNKNOWN  FD27            ; Unknown Fxxx instruction
$B22    $278D   CALL     $78D            ; Call subroutine at 78D
$B24    $16C1   JP       $6C1            ; Jump to 6C1
$B26    $621A   LD       V2, #1A         ; Load 26 into V2
$B28    $7FFF   ADD      VF, #FF         ; Add 255 to VF
$B2A    $C748   RND      V7, #48         ; V7 = random & 48
$B2C    $9F2E   UNKNOWN  $9F2E           ; Unknown 9xxx instruction
$B2E    $C64A   RND      V6, #4A         ; V6 = random & 4A
$B30    $E491   UNKNOWN  $E491           ; Unknown Exxx instruction
$B32    $A9E2   LD       I, $9E2         ; Load 9E2 into I
$B34    $E5C5   UNKNOWN  $E5C5           ; Unknown Exxx instruction
$B36    $5552   UNKNOWN  $5552           ; Unknown 5xxx instruction
$B38    $C6FB   RND      V6, #FB         ; V6 = random & FB
$B3A    $97A9   UNKNOWN  $97A9           ; Unknown 9xxx instruction
$B3C    $AD96   LD       I, $D96         ; Load D96 into I
$B3E    $AC4C   LD       I, $C4C         ; Load C4C into I
$B40    $1B4B   JP       $B4B            ; Jump to B4B
$B42    $33C6   SE       V3, #C6         ; Skip if V3 == 198
$B44    $922A   UNKNOWN  $922A           ; Unknown 9xxx instruction
$B46    $D8E2   DRW      V8, VE, #2      ; Draw 2-byte sprite at V8, VE
$B48    $5F70   SE       VF, V7          ; Skip if VF == V7
$B4A    $A1D9   LD       I, $1D9         ; Load 1D9 into I
$B4C    $4A2E   SNE      VA, #2E         ; Skip if VA != 46
$B4E    $6FB0   LD       VF, #B0         ; Load 176 into VF
$B50    $87E5   SUB      V7, VE          ; V7 -= VE, VF = !borrow
$B52    $827E   SHL      V2              ; V2 <<= 1, VF = MSB
$B54    $5415   UNKNOWN  $5415           ; Unknown 5xxx instruction
$B56    $73CC   ADD      V3, #CC         ; Add 204 to V3
$B58    $2029   CALL     $029            ; Call subroutine at 029
$B5A    $0619   SYS      $619            ; System call to 619
$B5C    $67D5   LD       V7, #D5         ; Load 213 into V7
$B5E    $0BA0   SYS      $BA0            ; System call to BA0
$B60    $8C11   OR       VC, V1          ; VC |= V1
$B62    $1D87   JP       $D87            ; Jump to D87
$B64    $EB9F   UNKNOWN  $EB9F           ; Unknown Exxx instruction
$B66    $A63A   LD       I, $63A         ; Load 63A into I
$B68    $66A1   LD       V6, #A1         ; Load 161 into V6
$B6A    $E7AC   UNKNOWN  $E7AC           ; Unknown Exxx instruction
$B6C    $BF50   JP       V0, $F50        ; Jump to V0 + F50
$B6E    $FC5F   UNKNOWN  FC5F            ; Unknown Fxxx instruction
$B70    $1E87   JP       $E87            ; Jump to E87
$B72    $2AF0   CALL     $AF0            ; Call subroutine at AF0
$B74    $C653   RND      V6, #53         ; V6 = random & 53
$B76    $EC69   UNKNOWN  $EC69           ; Unknown Exxx instruction
$B78    $2A91   CALL     $A91            ; Call subroutine at A91
$B7A    $ED45   UNKNOWN  $ED45           ; Unknown Exxx instruction
$B7C    $1147   JP       $147            ; Jump to 147
$B7E    $F3ED   UNKNOWN  F3ED            ; Unknown Fxxx instruction
$B80    $831F   UNKNOWN  831F            ; Unknown 8xxx instruction
$B82    $7185   ADD      V1, #85         ; Add 133 to V1
$B84    $6843   LD       V8, #43         ; Load 67 into V8
$B86    $7BF0   ADD      VB, #F0         ; Add 240 to VB
$B88    $01C9   SYS      $1C9            ; System call to 1C9
$B8A    $B663   JP       V0, $663        ; Jump to V0 + 663
$B8C    $5831   UNKNOWN  $5831           ; Unknown 5xxx instruction
$B8E    $4FB1   SNE      VF, #B1         ; Skip if VF != 177
$B90    $599B   UNKNOWN  $599B           ; Unknown 5xxx instruction
$B92    $FE4F   UNKNOWN  FE4F            ; Unknown Fxxx instruction
$B94    $3EA5   SE       VE, #A5         ; Skip if VE == 165
$B96    $AD31   LD       I, $D31         ; Load D31 into I
$B98    $3204   SE       V2, #04         ; Skip if V2 == 4
$B9A    $B665   JP       V0, $665        ; Jump to V0 + 665
$B9C    $7366   ADD      V3, #66         ; Add 102 to V3
$B9E    $F39B   UNKNOWN  F39B            ; Unknown Fxxx instruction
$BA0    $08AE   SYS      $8AE            ; System call to 8AE
$BA2    $68B0   LD       V8, #B0         ; Load 176 into V8
$BA4    $A5EB   LD       I, $5EB         ; Load 5EB into I
$BA6    $1172   JP       $172            ; Jump to 172
$BA8    $EF12   UNKNOWN  $EF12           ; Unknown Exxx instruction
$BAA    $CAA3   RND      VA, #A3         ; VA = random & A3
$BAC    $C758   RND      V7, #58         ; V7 = random & 58
$BAE    $EEA3   UNKNOWN  $EEA3           ; Unknown Exxx instruction
$BB0    $7E3E   ADD      VE, #3E         ; Add 62 to VE
$BB2    $21D1   CALL     $1D1            ; Call subroutine at 1D1
$BB4    $8187   SUBN     V1, V8          ; V1 = V8 - V1, VF = !borrow
$BB6    $D649   DRW      V6, V4, #9      ; Draw 9-byte sprite at V6, V4
$BB8    $9FB6   UNKNOWN  $9FB6           ; Unknown 9xxx instruction
$BBA    $942D   UNKNOWN  $942D           ; Unknown 9xxx instruction
$BBC    $E5F3   UNKNOWN  $E5F3           ; Unknown Exxx instruction
$BBE    $3D70   SE       VD, #70         ; Skip if VD == 112
$BC0    $A74B   LD       I, $74B         ; Load 74B into I
$BC2    $257E   CALL     $57E            ; Call subroutine at 57E
$BC4    $4774   SNE      V7, #74         ; Skip if V7 != 116
$BC6    $6F00   LD       VF, #00         ; Load 0 into VF
$BC8    $1264   JP       $264            ; Jump to 264
$BCA    $096D   SYS      $96D            ; System call to 96D
$BCC    $59AF   UNKNOWN  $59AF           ; Unknown 5xxx instruction
$BCE    $3CC0   SE       VC, #C0         ; Skip if VC == 192
$BD0    $747F   ADD      V4, #7F         ; Add 127 to V4
$BD2    $7411   ADD      V4, #11         ; Add 17 to V4
$BD4    $A136   LD       I, $136         ; Load 136 into I
$BD6    $F116   UNKNOWN  F116            ; Unknown Fxxx instruction
$BD8    $AC06   LD       I, $C06         ; Load C06 into I
$BDA    $AC36   LD       I, $C36         ; Load C36 into I
$BDC    $7D43   ADD      VD, #43         ; Add 67 to VD
$BDE    $EA79   UNKNOWN  $EA79           ; Unknown Exxx instruction
$BE0    $BD12   JP       V0, $D12        ; Jump to V0 + D12
$BE2    $15DC   JP       $5DC            ; Jump to 5DC
$BE4    $6D8D   LD       VD, #8D         ; Load 141 into VD
$BE6    $7A36   ADD      VA, #36         ; Add 54 to VA
$BE8    $5069   UNKNOWN  $5069           ; Unknown 5xxx instruction
$BEA    $3624   SE       V6, #24         ; Skip if V6 == 36
$BEC    $3F39   SE       VF, #39         ; Skip if VF == 57
$BEE    $832C   UNKNOWN  832C            ; Unknown 8xxx instruction
$BF0    $F763   UNKNOWN  F763            ; Unknown Fxxx instruction
$BF2    $30B9   SE       V0, #B9         ; Skip if V0 == 185
$BF4    $6A30   LD       VA, #30         ; Load 48 into VA
$BF6    $F14B   UNKNOWN  F14B            ; Unknown Fxxx instruction
$BF8    $D208   DRW      V2, V0, #8      ; Draw 8-byte sprite at V2, V0
$BFA    $1074   JP       $074            ; Jump to 074
$BFC    $46E6   SNE      V6, #E6         ; Skip if V6 != 230
$BFE    $5717   UNKNOWN  $5717           ; Unknown 5xxx instruction
$C00    $E842   UNKNOWN  $E842           ; Unknown Exxx instruction
$C02    $4757   SNE      V7, #57         ; Skip if V7 != 87
$C04    $5443   UNKNOWN  $5443           ; Unknown 5xxx instruction
$C06    $09BB   SYS      $9BB            ; System call to 9BB
$C08    $3F0E   SE       VF, #0E         ; Skip if VF == 14
$C0A    $4549   SNE      V5, #49         ; Skip if V5 != 73
$C0C    $909D   UNKNOWN  $909D           ; Unknown 9xxx instruction
$C0E    $EC84   UNKNOWN  $EC84           ; Unknown Exxx instruction
$C10    $FE4D   UNKNOWN  FE4D            ; Unknown Fxxx instruction
$C12    $40F7   SNE      V0, #F7         ; Skip if V0 != 247
$C14    $068E   SYS      $68E            ; System call to 68E
$C16    $F5EF   UNKNOWN  F5EF            ; Unknown Fxxx instruction
$C18    $058E   SYS      $58E            ; System call to 58E
$C1A    $86B0   LD       V6, VB          ; V6 = VB
$C1C    $70E2   ADD      V0, #E2         ; Add 226 to V0
$C1E    $85F1   OR       V5, VF          ; V5 |= VF
$C20    $3B08   SE       VB, #08         ; Skip if VB == 8
$C22    $C428   RND      V4, #28         ; V4 = random & 28
$C24    $289C   CALL     $89C            ; Call subroutine at 89C
$C26    $D20B   DRW      V2, V0, #B      ; Draw 11-byte sprite at V2, V0
$C28    $B890   JP       V0, $890        ; Jump to V0 + 890
$C2A    $FE73   UNKNOWN  FE73            ; Unknown Fxxx instruction
$C2C    $987D   UNKNOWN  $987D           ; Unknown 9xxx instruction
$C2E    $FED2   UNKNOWN  FED2            ; Unknown Fxxx instruction
$C30    $0CA3   SYS      $CA3            ; System call to CA3
$C32    $B38F   JP       V0, $38F        ; Jump to V0 + 38F
$C34    $B3AB   JP       V0, $3AB        ; Jump to V0 + 3AB
$C36    $6619   LD       V6, #19         ; Load 25 into V6
$C38    $AA21   LD       I, $A21         ; Load A21 into I
$C3A    $D110   DRW      V1, V1, #0      ; Draw 0-byte sprite at V1, V1
$C3C    $D3FF   DRW      V3, VF, #F      ; Draw 15-byte sprite at V3, VF
$C3E    $CBB4   RND      VB, #B4         ; VB = random & B4
$C40    $26C9   CALL     $6C9            ; Call subroutine at 6C9
$C42    $C526   RND      V5, #26         ; V5 = random & 26
$C44    $6096   LD       V0, #96         ; Load 150 into V0
$C46    $8033   XOR      V0, V3          ; V0 ^= V3
$C48    $B01E   JP       V0, $01E        ; Jump to V0 + 01E
$C4A    $0FBB   SYS      $FBB            ; System call to FBB
$C4C    $AC22   LD       I, $C22         ; Load C22 into I
$C4E    $3A81   SE       VA, #81         ; Skip if VA == 129
$C50    $7F56   ADD      VF, #56         ; Add 86 to VF
$C52    $1FDF   JP       $FDF            ; Jump to FDF
$C54    $3BC5   SE       VB, #C5         ; Skip if VB == 197
$C56    $C93B   RND      V9, #3B         ; V9 = random & 3B
$C58    $FB8C   UNKNOWN  FB8C            ; Unknown Fxxx instruction
$C5A    $ECE2   UNKNOWN  $ECE2           ; Unknown Exxx instruction
$C5C    $30B8   SE       V0, #B8         ; Skip if V0 == 184
$C5E    $B74F   JP       V0, $74F        ; Jump to V0 + 74F
$C60    $599F   UNKNOWN  $599F           ; Unknown 5xxx instruction
$C62    $593D   UNKNOWN  $593D           ; Unknown 5xxx instruction
$C64    $038E   SYS      $38E            ; System call to 38E
$C66    $0B0A   SYS      $B0A            ; System call to B0A
$C68    $FF2A   UNKNOWN  FF2A            ; Unknown Fxxx instruction
$C6A    $3674   SE       V6, #74         ; Skip if V6 == 116
$C6C    $B1CD   JP       V0, $1CD        ; Jump to V0 + 1CD
$C6E    $4342   SNE      V3, #42         ; Skip if V3 != 66
$C70    $A0D0   LD       I, $0D0         ; Load 0D0 into I
$C72    $E87E   UNKNOWN  $E87E           ; Unknown Exxx instruction
$C74    $3ED4   SE       VE, #D4         ; Skip if VE == 212
$C76    $CC22   RND      VC, #22         ; VC = random & 22
$C78    $B6AE   JP       V0, $6AE        ; Jump to V0 + 6AE
$C7A    $9697   UNKNOWN  $9697           ; Unknown 9xxx instruction
$C7C    $17F5   JP       $7F5            ; Jump to 7F5
$C7E    $D1DF   DRW      V1, VD, #F      ; Draw 15-byte sprite at V1, VD
$C80    $165D   JP       $65D            ; Jump to 65D
$C82    $A72D   LD       I, $72D         ; Load 72D into I
$C84    $53BD   UNKNOWN  $53BD           ; Unknown 5xxx instruction
$C86    $C29A   RND      V2, #9A         ; V2 = random & 9A
$C88    $2089   CALL     $089            ; Call subroutine at 089
$C8A    $1A65   JP       $A65            ; Jump to A65
$C8C    $64E0   LD       V4, #E0         ; Load 224 into V4
$C8E    $C238   RND      V2, #38         ; V2 = random & 38
$C90    $2324   CALL     $324            ; Call subroutine at 324
$C92    $EF92   UNKNOWN  $EF92           ; Unknown Exxx instruction
$C94    $CDE4   RND      VD, #E4         ; VD = random & E4
$C96    $32CA   SE       V2, #CA         ; Skip if V2 == 202
$C98    $5CA5   UNKNOWN  $5CA5           ; Unknown 5xxx instruction
$C9A    $5003   UNKNOWN  $5003           ; Unknown 5xxx instruction
$C9C    $DE9D   DRW      VE, V9, #D      ; Draw 13-byte sprite at VE, V9
$C9E    $F36C   UNKNOWN  F36C            ; Unknown Fxxx instruction
$CA0    $0C63   SYS      $C63            ; System call to C63
$CA2    $D600   DRW      V6, V0, #0      ; Draw 0-byte sprite at V6, V0
$CA4    $62FB   LD       V2, #FB         ; Load 251 into V2
$CA6    $8652   AND      V6, V5          ; V6 &= V5
$CA8    $C7F1   RND      V7, #F1         ; V7 = random & F1
$CAA    $F924   UNKNOWN  F924            ; Unknown Fxxx instruction
$CAC    $8A6F   UNKNOWN  8A6F            ; Unknown 8xxx instruction
$CAE    $ACD3   LD       I, $CD3         ; Load CD3 into I
$CB0    $DB21   DRW      VB, V2, #1      ; Draw 1-byte sprite at VB, V2
$CB2    $E27E   UNKNOWN  $E27E           ; Unknown Exxx instruction
$CB4    $65D1   LD       V5, #D1         ; Load 209 into V5
$CB6    $7FF8   ADD      VF, #F8         ; Add 248 to VF
$CB8    $B222   JP       V0, $222        ; Jump to V0 + 222
$CBA    $E793   UNKNOWN  $E793           ; Unknown Exxx instruction
$CBC    $2246   CALL     $246            ; Call subroutine at 246
$CBE    $3CE5   SE       VC, #E5         ; Skip if VC == 229
$CC0    $10F7   JP       $0F7            ; Jump to 0F7
$CC2    $B115   JP       V0, $115        ; Jump to V0 + 115
$CC4    $69C4   LD       V9, #C4         ; Load 196 into V9
$CC6    $07A7   SYS      $7A7            ; System call to 7A7
$CC8    $3241   SE       V2, #41         ; Skip if V2 == 65
$CCA    $6425   LD       V4, #25         ; Load 37 into V4
$CCC    $5DC9   UNKNOWN  $5DC9           ; Unknown 5xxx instruction
$CCE    $77C7   ADD      V7, #C7         ; Add 199 to V7
$CD0    $C530   RND      V5, #30         ; V5 = random & 30
$CD2    $684E   LD       V8, #4E         ; Load 78 into V8
$CD4    $C96D   RND      V9, #6D         ; V9 = random & 6D
$CD6    $DB6E   DRW      VB, V6, #E      ; Draw 14-byte sprite at VB, V6
$CD8    $0DDF   SYS      $DDF            ; System call to DDF
$CDA    $1099   JP       $099            ; Jump to 099
$CDC    $FCEA   UNKNOWN  FCEA            ; Unknown Fxxx instruction
$CDE    $23CA   CALL     $3CA            ; Call subroutine at 3CA
$CE0    $3DBD   SE       VD, #BD         ; Skip if VD == 189
$CE2    $7143   ADD      V1, #43         ; Add 67 to V1
$CE4    $3AC2   SE       VA, #C2         ; Skip if VA == 194
$CE6    $93AD   UNKNOWN  $93AD           ; Unknown 9xxx instruction
$CE8    $0429   SYS      $429            ; System call to 429
$CEA    $C963   RND      V9, #63         ; V9 = random & 63
$CEC    $CBDD   RND      VB, #DD         ; VB = random & DD
$CEE    $FD1E   ADD      I, VD           ; I += VD
$CF0    $3955   SE       V9, #55         ; Skip if V9 == 85
$CF2    $5A10   SE       VA, V1          ; Skip if VA == V1
$CF4    $8266   SHR      V2              ; V2 >>= 1, VF = LSB
$CF6    $80F0   LD       V0, VF          ; V0 = VF
$CF8    $E6FE   UNKNOWN  $E6FE           ; Unknown Exxx instruction
$CFA    $BDDC   JP       V0, $DDC        ; Jump to V0 + DDC
$CFC    $C3CC   RND      V3, #CC         ; V3 = random & CC
$CFE    $1D8F   JP       $D8F            ; Jump to D8F
$D00    $F6F4   UNKNOWN  F6F4            ; Unknown Fxxx instruction
$D02    $5F31   UNKNOWN  $5F31           ; Unknown 5xxx instruction
$D04    $A26F   LD       I, $26F         ; Load 26F into I
$D06    $61A7   LD       V1, #A7         ; Load 167 into V1
$D08    $1ACF   JP       $ACF            ; Jump to ACF
$D0A    $CF91   RND      VF, #91         ; VF = random & 91
$D0C    $1127   JP       $127            ; Jump to 127
$D0E    $F568   UNKNOWN  F568            ; Unknown Fxxx instruction
$D10    $3A7F   SE       VA, #7F         ; Skip if VA == 127
$D12    $A4D2   LD       I, $4D2         ; Load 4D2 into I
$D14    $E3A7   UNKNOWN  $E3A7           ; Unknown Exxx instruction
$D16    $C573   RND      V5, #73         ; V5 = random & 73
$D18    $D5D5   DRW      V5, VD, #5      ; Draw 5-byte sprite at V5, VD
$D1A    $4474   SNE      V4, #74         ; Skip if V4 != 116
$D1C    $B751   JP       V0, $751        ; Jump to V0 + 751
$D1E    $8A59   UNKNOWN  8A59            ; Unknown 8xxx instruction
$D20    $3974   SE       V9, #74         ; Skip if V9 == 116
$D22    $4D56   SNE      VD, #56         ; Skip if VD != 86
$D24    $F064   UNKNOWN  F064            ; Unknown Fxxx instruction
$D26    $3899   SE       V8, #99         ; Skip if V8 == 153
$D28    $DC98   DRW      VC, V9, #8      ; Draw 8-byte sprite at VC, V9
$D2A    $32B2   SE       V2, #B2         ; Skip if V2 == 178
$D2C    $7E21   ADD      VE, #21         ; Add 33 to VE
$D2E    $9758   UNKNOWN  $9758           ; Unknown 9xxx instruction
$D30    $5F64   UNKNOWN  $5F64           ; Unknown 5xxx instruction
$D32    $C729   RND      V7, #29         ; V7 = random & 29
$D34    $4D1B   SNE      VD, #1B         ; Skip if VD != 27
$D36    $20F2   CALL     $0F2            ; Call subroutine at 0F2
$D38    $F097   UNKNOWN  F097            ; Unknown Fxxx instruction
$D3A    $4C37   SNE      VC, #37         ; Skip if VC != 55
$D3C    $DCAD   DRW      VC, VA, #D      ; Draw 13-byte sprite at VC, VA
$D3E    $D81F   DRW      V8, V1, #F      ; Draw 15-byte sprite at V8, V1
$D40    $B284   JP       V0, $284        ; Jump to V0 + 284
$D42    $3178   SE       V1, #78         ; Skip if V1 == 120
$D44    $BE5A   JP       V0, $E5A        ; Jump to V0 + E5A
$D46    $79A6   ADD      V9, #A6         ; Add 166 to V9
$D48    $5CCB   UNKNOWN  $5CCB           ; Unknown 5xxx instruction
$D4A    $758F   ADD      V5, #8F         ; Add 143 to V5
$D4C    $FDF7   UNKNOWN  FDF7            ; Unknown Fxxx instruction
$D4E    $D688   DRW      V6, V8, #8      ; Draw 8-byte sprite at V6, V8
$D50    $615D   LD       V1, #5D         ; Load 93 into V1
$D52    $8D14   ADD      VD, V1          ; VD += V1, VF = carry
$D54    $C76E   RND      V7, #6E         ; V7 = random & 6E
$D56    $FA4E   UNKNOWN  FA4E            ; Unknown Fxxx instruction
$D58    $3EF7   SE       VE, #F7         ; Skip if VE == 247
$D5A    $7111   ADD      V1, #11         ; Add 17 to V1
$D5C    $A72B   LD       I, $72B         ; Load 72B into I
$D5E    $FCC8   UNKNOWN  FCC8            ; Unknown Fxxx instruction
$D60    $1E43   JP       $E43            ; Jump to E43
$D62    $EEF9   UNKNOWN  $EEF9           ; Unknown Exxx instruction
$D64    $452E   SNE      V5, #2E         ; Skip if V5 != 46
$D66    $5048   UNKNOWN  $5048           ; Unknown 5xxx instruction
$D68    $E2FD   UNKNOWN  $E2FD           ; Unknown Exxx instruction
$D6A    $71B5   ADD      V1, #B5         ; Add 181 to V1
$D6C    $66E2   LD       V6, #E2         ; Load 226 into V6
$D6E    $9B04   UNKNOWN  $9B04           ; Unknown 9xxx instruction
$D70    $411E   SNE      V1, #1E         ; Skip if V1 != 30
$D72    $BC51   JP       V0, $C51        ; Jump to V0 + C51
$D74    $9166   UNKNOWN  $9166           ; Unknown 9xxx instruction
$D76    $618E   LD       V1, #8E         ; Load 142 into V1
$D78    $C8C3   RND      V8, #C3         ; V8 = random & C3
$D7A    $612B   LD       V1, #2B         ; Load 43 into V1
$D7C    $0591   SYS      $591            ; System call to 591
$D7E    $15EB   JP       $5EB            ; Jump to 5EB
$D80    $8751   OR       V7, V5          ; V7 |= V5
$D82    $4151   SNE      V1, #51         ; Skip if V1 != 81
$D84    $0563   SYS      $563            ; System call to 563
$D86    $1953   JP       $953            ; Jump to 953
$D88    $2387   CALL     $387            ; Call subroutine at 387
$D8A    $7046   ADD      V0, #46         ; Add 70 to V0
$D8C    $DBA5   DRW      VB, VA, #5      ; Draw 5-byte sprite at VB, VA
$D8E    $4057   SNE      V0, #57         ; Skip if V0 != 87
$D90    $EBB6   UNKNOWN  $EBB6           ; Unknown Exxx instruction
$D92    $35B0   SE       V5, #B0         ; Skip if V5 == 176
$D94    $E233   UNKNOWN  $E233           ; Unknown Exxx instruction
$D96    $9468   UNKNOWN  $9468           ; Unknown 9xxx instruction
$D98    $80ED   UNKNOWN  80ED            ; Unknown 8xxx instruction
$D9A    $32FE   SE       V2, #FE         ; Skip if V2 == 254
$D9C    $0C27   SYS      $C27            ; System call to C27
$D9E    $D9F7   DRW      V9, VF, #7      ; Draw 7-byte sprite at V9, VF
$DA0    $A413   LD       I, $413         ; Load 413 into I
$DA2    $12AA   JP       $2AA            ; Jump to 2AA
$DA4    $EEA0   UNKNOWN  $EEA0           ; Unknown Exxx instruction
$DA6    $E07F   UNKNOWN  $E07F           ; Unknown Exxx instruction
$DA8    $F3B8   UNKNOWN  F3B8            ; Unknown Fxxx instruction
$DAA    $46F1   SNE      V6, #F1         ; Skip if V6 != 241
$DAC    $2E61   CALL     $E61            ; Call subroutine at E61
$DAE    $E31C   UNKNOWN  $E31C           ; Unknown Exxx instruction
$DB0    $6692   LD       V6, #92         ; Load 146 into V6
$DB2    $4CEF   SNE      VC, #EF         ; Skip if VC != 239
$DB4    $9A25   UNKNOWN  $9A25           ; Unknown 9xxx instruction
$DB6    $6043   LD       V0, #43         ; Load 67 into V0
$DB8    $1B70   JP       $B70            ; Jump to B70
$DBA    $AB9D   LD       I, $B9D         ; Load B9D into I
$DBC    $FEDC   UNKNOWN  FEDC            ; Unknown Fxxx instruction
$DBE    $BAB9   JP       V0, $AB9        ; Jump to V0 + AB9
$DC0    $34A4   SE       V4, #A4         ; Skip if V4 == 164
$DC2    $15C7   JP       $5C7            ; Jump to 5C7
$DC4    $0F51   SYS      $F51            ; System call to F51
$DC6    $9B59   UNKNOWN  $9B59           ; Unknown 9xxx instruction
$DC8    $AB9E   LD       I, $B9E         ; Load B9E into I
$DCA    $D4B3   DRW      V4, VB, #3      ; Draw 3-byte sprite at V4, VB
$DCC    $1942   JP       $942            ; Jump to 942
$DCE    $5946   UNKNOWN  $5946           ; Unknown 5xxx instruction
$DD0    $67BE   LD       V7, #BE         ; Load 190 into V7
$DD2    $2F4D   CALL     $F4D            ; Call subroutine at F4D
$DD4    $102F   JP       $02F            ; Jump to 02F
$DD6    $BBEA   JP       V0, $BEA        ; Jump to V0 + BEA
$DD8    $C6BD   RND      V6, #BD         ; V6 = random & BD
$DDA    $1C9E   JP       $C9E            ; Jump to C9E
$DDC    $110C   JP       $10C            ; Jump to 10C
$DDE    $DB7D   DRW      VB, V7, #D      ; Draw 13-byte sprite at VB, V7
$DE0    $46D7   SNE      V6, #D7         ; Skip if V6 != 215
$DE2    $569E   UNKNOWN  $569E           ; Unknown 5xxx instruction
$DE4    $60F2   LD       V0, #F2         ; Load 242 into V0
$DE6    $026C   SYS      $26C            ; System call to 26C
$DE8    $AA40   LD       I, $A40         ; Load A40 into I
$DEA    $8BB2   AND      VB, VB          ; VB &= VB
$DEC    $FC05   UNKNOWN  FC05            ; Unknown Fxxx instruction
$DEE    $EA59   UNKNOWN  $EA59           ; Unknown Exxx instruction
$DF0    $C69B   RND      V6, #9B         ; V6 = random & 9B
$DF2    $2809   CALL     $809            ; Call subroutine at 809
$DF4    $E6EB   UNKNOWN  $E6EB           ; Unknown Exxx instruction
$DF6    $BC92   JP       V0, $C92        ; Jump to V0 + C92
$DF8    $28F9   CALL     $8F9            ; Call subroutine at 8F9
$DFA    $64BB   LD       V4, #BB         ; Load 187 into V4
$DFC    $1FAC   JP       $FAC            ; Jump to FAC
$DFE    $7DDB   ADD      VD, #DB         ; Add 219 to VD
$E00    $A944   LD       I, $944         ; Load 944 into I
$E02    $EFA8   UNKNOWN  $EFA8           ; Unknown Exxx instruction
$E04    $F32C   UNKNOWN  F32C            ; Unknown Fxxx instruction
$E06    $D7D1   DRW      V7, VD, #1      ; Draw 1-byte sprite at V7, VD
$E08    $71B6   ADD      V1, #B6         ; Add 182 to V1
$E0A    $1D7A   JP       $D7A            ; Jump to D7A
$E0C    $948C   UNKNOWN  $948C           ; Unknown 9xxx instruction
$E0E    $FFC7   UNKNOWN  FFC7            ; Unknown Fxxx instruction
$E10    $ACBD   LD       I, $CBD         ; Load CBD into I
$E12    $B2D5   JP       V0, $2D5        ; Jump to V0 + 2D5
$E14    $1055   JP       $055            ; Jump to 055
$E16    $6649   LD       V6, #49         ; Load 73 into V6
$E18    $1B5B   JP       $B5B            ; Jump to B5B
$E1A    $FCCC   UNKNOWN  FCCC            ; Unknown Fxxx instruction
$E1C    $47BE   SNE      V7, #BE         ; Skip if V7 != 190
$E1E    $3CD5   SE       VC, #D5         ; Skip if VC == 213
$E20    $342E   SE       V4, #2E         ; Skip if V4 == 46
$E22    $9E2C   UNKNOWN  $9E2C           ; Unknown 9xxx instruction
$E24    $AD57   LD       I, $D57         ; Load D57 into I
$E26    $AC32   LD       I, $C32         ; Load C32 into I
$E28    $E6D2   UNKNOWN  $E6D2           ; Unknown Exxx instruction
$E2A    $DD6F   DRW      VD, V6, #F      ; Draw 15-byte sprite at VD, V6
$E2C    $1386   JP       $386            ; Jump to 386
$E2E    $9FF4   UNKNOWN  $9FF4           ; Unknown 9xxx instruction
$E30    $549A   UNKNOWN  $549A           ; Unknown 5xxx instruction
$E32    $8C0E   SHL      VC              ; VC <<= 1, VF = MSB
$E34    $FFD7   UNKNOWN  FFD7            ; Unknown Fxxx instruction
$E36    $29AC   CALL     $9AC            ; Call subroutine at 9AC
$E38    $77F3   ADD      V7, #F3         ; Add 243 to V7
$E3A    $75A2   ADD      V5, #A2         ; Add 162 to V5
$E3C    $24CA   CALL     $4CA            ; Call subroutine at 4CA
$E3E    $CBCC   RND      VB, #CC         ; VB = random & CC
$E40    $0E4D   SYS      $E4D            ; System call to E4D
$E42    $EBDE   UNKNOWN  $EBDE           ; Unknown Exxx instruction
$E44    $F7EF   UNKNOWN  F7EF            ; Unknown Fxxx instruction
$E46    $926C   UNKNOWN  $926C           ; Unknown 9xxx instruction
$E48    $4453   SNE      V4, #53         ; Skip if V4 != 83
$E4A    $2C36   CALL     $C36            ; Call subroutine at C36
$E4C    $8FC7   SUBN     VF, VC          ; VF = VC - VF, VF = !borrow
$E4E    $3C06   SE       VC, #06         ; Skip if VC == 6
$E50    $7694   ADD      V6, #94         ; Add 148 to V6
$E52    $5927   UNKNOWN  $5927           ; Unknown 5xxx instruction
$E54    $4127   SNE      V1, #27         ; Skip if V1 != 39
$E56    $0969   SYS      $969            ; System call to 969
$E58    $53B8   UNKNOWN  $53B8           ; Unknown 5xxx instruction
$E5A    $868F   UNKNOWN  868F            ; Unknown 8xxx instruction
$E5C    $4816   SNE      V8, #16         ; Skip if V8 != 22
$E5E    $53B3   UNKNOWN  $53B3           ; Unknown 5xxx instruction
$E60    $0825   SYS      $825            ; System call to 825
$E62    $8AFA   UNKNOWN  8AFA            ; Unknown 8xxx instruction
$E64    $461D   SNE      V6, #1D         ; Skip if V6 != 29
$E66    $3D98   SE       VD, #98         ; Skip if VD == 152
$E68    $EB21   UNKNOWN  $EB21           ; Unknown Exxx instruction
$E6A    $3985   SE       V9, #85         ; Skip if V9 == 133
$E6C    $13D0   JP       $3D0            ; Jump to 3D0
$E6E    $4D64   SNE      VD, #64         ; Skip if VD != 100
$E70    $19F1   JP       $9F1            ; Jump to 9F1
$E72    $DDC7   DRW      VD, VC, #7      ; Draw 7-byte sprite at VD, VC
$E74    $815E   SHL      V1              ; V1 <<= 1, VF = MSB
$E76    $E5D0   UNKNOWN  $E5D0           ; Unknown Exxx instruction
$E78    $A0F1   LD       I, $0F1         ; Load 0F1 into I
$E7A    $2E91   CALL     $E91            ; Call subroutine at E91
$E7C    $7281   ADD      V2, #81         ; Add 129 to V2
$E7E    $21D7   CALL     $1D7            ; Call subroutine at 1D7
$E80    $E684   UNKNOWN  $E684           ; Unknown Exxx instruction
$E82    $EE2F   UNKNOWN  $EE2F           ; Unknown Exxx instruction
$E84    $B9AD   JP       V0, $9AD        ; Jump to V0 + 9AD
$E86    $2314   CALL     $314            ; Call subroutine at 314
$E88    $BC6E   JP       V0, $C6E        ; Jump to V0 + C6E
$E8A    $8BCA   UNKNOWN  8BCA            ; Unknown 8xxx instruction
$E8C    $0AD7   SYS      $AD7            ; System call to AD7
$E8E    $685B   LD       V8, #5B         ; Load 91 into V8
$E90    $6784   LD       V7, #84         ; Load 132 into V7
$E92    $5B73   UNKNOWN  $5B73           ; Unknown 5xxx instruction
$E94    $3D57   SE       VD, #57         ; Skip if VD == 87
$E96    $1FD2   JP       $FD2            ; Jump to FD2
$E98    $FD03   UNKNOWN  FD03            ; Unknown Fxxx instruction
$E9A    $A6DF   LD       I, $6DF         ; Load 6DF into I
$E9C    $76AF   ADD      V6, #AF         ; Add 175 to V6
$E9E    $EBF8   UNKNOWN  $EBF8           ; Unknown Exxx instruction
$EA0    $5948   UNKNOWN  $5948           ; Unknown 5xxx instruction
$EA2    $D4B6   DRW      V4, VB, #6      ; Draw 6-byte sprite at V4, VB
$EA4    $2AB2   CALL     $AB2            ; Call subroutine at AB2
$EA6    $388F   SE       V8, #8F         ; Skip if V8 == 143
$EA8    $D3AD   DRW      V3, VA, #D      ; Draw 13-byte sprite at V3, VA
$EAA    $208E   CALL     $08E            ; Call subroutine at 08E
$EAC    $759F   ADD      V5, #9F         ; Add 159 to V5
$EAE    $CE81   RND      VE, #81         ; VE = random & 81
$EB0    $CAF4   RND      VA, #F4         ; VA = random & F4
$EB2    $FA2F   UNKNOWN  FA2F            ; Unknown Fxxx instruction
$EB4    $FDE2   UNKNOWN  FDE2            ; Unknown Fxxx instruction
$EB6    $1F7F   JP       $F7F            ; Jump to F7F
$EB8    $CF30   RND      VF, #30         ; VF = random & 30
$EBA    $6945   LD       V9, #45         ; Load 69 into V9
$EBC    $82E2   AND      V2, VE          ; V2 &= VE
$EBE    $1746   JP       $746            ; Jump to 746
$EC0    $CA74   RND      VA, #74         ; VA = random & 74
$EC2    $2645   CALL     $645            ; Call subroutine at 645
$EC4    $298C   CALL     $98C            ; Call subroutine at 98C
$EC6    $89DB   UNKNOWN  89DB            ; Unknown 8xxx instruction
$EC8    $D048   DRW      V0, V4, #8      ; Draw 8-byte sprite at V0, V4
$ECA    $4851   SNE      V8, #51         ; Skip if V8 != 81
$ECC    $3034   SE       V0, #34         ; Skip if V0 == 52
$ECE    $01D6   SYS      $1D6            ; System call to 1D6
$ED0    $7500   ADD      V5, #00         ; Add 0 to V5
$ED2    $642E   LD       V4, #2E         ; Load 46 into V4
$ED4    $3E14   SE       VE, #14         ; Skip if VE == 20
$ED6    $C3A9   RND      V3, #A9         ; V3 = random & A9
$ED8    $0213   SYS      $213            ; System call to 213
$EDA    $DC4C   DRW      VC, V4, #C      ; Draw 12-byte sprite at VC, V4
$EDC    $3BEF   SE       VB, #EF         ; Skip if VB == 239
$EDE    $5270   SE       V2, V7          ; Skip if V2 == V7
$EE0    $D884   DRW      V8, V8, #4      ; Draw 4-byte sprite at V8, V8
$EE2    $59E1   UNKNOWN  $59E1           ; Unknown 5xxx instruction
$EE4    $9A85   UNKNOWN  $9A85           ; Unknown 9xxx instruction
$EE6    $AD32   LD       I, $D32         ; Load D32 into I
$EE8    $8098   UNKNOWN  8098            ; Unknown 8xxx instruction
$EEA    $E691   UNKNOWN  $E691           ; Unknown Exxx instruction
$EEC    $2AC1   CALL     $AC1            ; Call subroutine at AC1
$EEE    $962F   UNKNOWN  $962F           ; Unknown 9xxx instruction
$EF0    $F7EB   UNKNOWN  F7EB            ; Unknown Fxxx instruction
$EF2    $911B   UNKNOWN  $911B           ; Unknown 9xxx instruction
$EF4    $9FC9   UNKNOWN  $9FC9           ; Unknown 9xxx instruction
$EF6    $AC8A   LD       I, $C8A         ; Load C8A into I
$EF8    $D941   DRW      V9, V4, #1      ; Draw 1-byte sprite at V9, V4
$EFA    $8083   XOR      V0, V8          ; V0 ^= V8
$EFC    $EA3A   UNKNOWN  $EA3A           ; Unknown Exxx instruction
$EFE    $C59D   RND      V5, #9D         ; V5 = random & 9D
$F00    $7C82   ADD      VC, #82         ; Add 130 to VC
$F02    $F571   UNKNOWN  F571            ; Unknown Fxxx instruction
$F04    $E7F5   UNKNOWN  $E7F5           ; Unknown Exxx instruction
$F06    $7B32   ADD      VB, #32         ; Add 50 to VB
$F08    $08F2   SYS      $8F2            ; System call to 8F2
$F0A    $09DA   SYS      $9DA            ; System call to 9DA
$F0C    $B007   JP       V0, $007        ; Jump to V0 + 007
$F0E    $272A   CALL     $72A            ; Call subroutine at 72A
$F10    $0441   SYS      $441            ; System call to 441
$F12    $6B7D   LD       VB, #7D         ; Load 125 into VB
$F14    $E911   UNKNOWN  $E911           ; Unknown Exxx instruction
$F16    $918C   UNKNOWN  $918C           ; Unknown 9xxx instruction
$F18    $2406   CALL     $406            ; Call subroutine at 406
$F1A    $FFDA   UNKNOWN  FFDA            ; Unknown Fxxx instruction
$F1C    $CD3C   RND      VD, #3C         ; VD = random & 3C
$F1E    $4609   SNE      V6, #09         ; Skip if V6 != 9
$F20    $DD1E   DRW      VD, V1, #E      ; Draw 14-byte sprite at VD, V1
$F22    $7A0E   ADD      VA, #0E         ; Add 14 to VA
$F24    $BADB   JP       V0, $ADB        ; Jump to V0 + ADB
$F26    $3B4C   SE       VB, #4C         ; Skip if VB == 76
$F28    $C656   RND      V6, #56         ; V6 = random & 56
$F2A    $C602   RND      V6, #02         ; V6 = random & 02
$F2C    $5F10   SE       VF, V1          ; Skip if VF == V1
$F2E    $2344   CALL     $344            ; Call subroutine at 344
$F30    $1A44   JP       $A44            ; Jump to A44
$F32    $54DD   UNKNOWN  $54DD           ; Unknown 5xxx instruction
$F34    $7314   ADD      V3, #14         ; Add 20 to V3
$F36    $1A14   JP       $A14            ; Jump to A14
$F38    $1911   JP       $911            ; Jump to 911
$F3A    $E107   UNKNOWN  $E107           ; Unknown Exxx instruction
$F3C    $C180   RND      V1, #80         ; V1 = random & 80
$F3E    $D45F   DRW      V4, V5, #F      ; Draw 15-byte sprite at V4, V5
$F40    $108E   JP       $08E            ; Jump to 08E
$F42    $DA6F   DRW      VA, V6, #F      ; Draw 15-byte sprite at VA, V6
$F44    $4D4A   SNE      VD, #4A         ; Skip if VD != 74
$F46    $935F   UNKNOWN  $935F           ; Unknown 9xxx instruction
$F48    $4863   SNE      V8, #63         ; Skip if V8 != 99
$F4A    $C847   RND      V8, #47         ; V8 = random & 47
$F4C    $A9F1   LD       I, $9F1         ; Load 9F1 into I
$F4E    $9D5C   UNKNOWN  $9D5C           ; Unknown 9xxx instruction
$F50    $1A89   JP       $A89            ; Jump to A89
$F52    $1798   JP       $798            ; Jump to 798
$F54    $495C   SNE      V9, #5C         ; Skip if V9 != 92
$F56    $7202   ADD      V2, #02         ; Add 2 to V2
$F58    $5215   UNKNOWN  $5215           ; Unknown 5xxx instruction
$F5A    $D47E   DRW      V4, V7, #E      ; Draw 14-byte sprite at V4, V7
$F5C    $FA03   UNKNOWN  FA03            ; Unknown Fxxx instruction
$F5E    $72C2   ADD      V2, #C2         ; Add 194 to V2
$F60    $E306   UNKNOWN  $E306           ; Unknown Exxx instruction
$F62    $61C2   LD       V1, #C2         ; Load 194 into V1
$F64    $05DA   SYS      $5DA            ; System call to 5DA
$F66    $0382   SYS      $382            ; System call to 382
$F68    $0D7D   SYS      $D7D            ; System call to D7D
$F6A    $F425   UNKNOWN  F425            ; Unknown Fxxx instruction
$F6C    $B5F5   JP       V0, $5F5        ; Jump to V0 + 5F5
$F6E    $0D76   SYS      $D76            ; System call to D76
$F70    $BDDE   JP       V0, $DDE        ; Jump to V0 + DDE
$F72    $6905   LD       V9, #05         ; Load 5 into V9
$F74    $D015   DRW      V0, V1, #5      ; Draw 5-byte sprite at V0, V1
$F76    $4661   SNE      V6, #61         ; Skip if V6 != 97
$F78    $B2AD   JP       V0, $2AD        ; Jump to V0 + 2AD
$F7A    $B966   JP       V0, $966        ; Jump to V0 + 966
$F7C    $87CE   SHL      V7              ; V7 <<= 1, VF = MSB
$F7E    $EEC8   UNKNOWN  $EEC8           ; Unknown Exxx instruction
$F80    $560B   UNKNOWN  $560B           ; Unknown 5xxx instruction
$F82    $0EE8   SYS      $EE8            ; System call to EE8
$F84    $F050   UNKNOWN  F050            ; Unknown Fxxx instruction
$F86    $77BC   ADD      V7, #BC         ; Add 188 to V7
$F88    $86A8   UNKNOWN  86A8            ; Unknown 8xxx instruction
$F8A    $A1EB   LD       I, $1EB         ; Load 1EB into I
$F8C    $DEFC   DRW      VE, VF, #C      ; Draw 12-byte sprite at VE, VF
$F8E    $556E   UNKNOWN  $556E           ; Unknown 5xxx instruction
$F90    $AD28   LD       I, $D28         ; Load D28 into I
$F92    $4F3E   SNE      VF, #3E         ; Skip if VF != 62
$F94    $94E0   SNE      V4, VE          ; Skip if V4 != VE
$F96    $D0B9   DRW      V0, VB, #9      ; Draw 9-byte sprite at V0, VB
$F98    $65CE   LD       V5, #CE         ; Load 206 into V5
$F9A    $A769   LD       I, $769         ; Load 769 into I
$F9C    $5D1B   UNKNOWN  $5D1B           ; Unknown 5xxx instruction
$F9E    $1919   JP       $919            ; Jump to 919
$FA0    $4A11   SNE      VA, #11         ; Skip if VA != 17
$FA2    $585E   UNKNOWN  $585E           ; Unknown 5xxx instruction
$FA4    $7E5F   ADD      VE, #5F         ; Add 95 to VE
$FA6    $22EA   CALL     $2EA            ; Call subroutine at 2EA
$FA8    $66EF   LD       V6, #EF         ; Load 239 into V6
$FAA    $3900   SE       V9, #00         ; Skip if V9 == 0
$FAC    $A42D   LD       I, $42D         ; Load 42D into I
$FAE    $2225   CALL     $225            ; Call subroutine at 225
$FB0    $D8A2   DRW      V8, VA, #2      ; Draw 2-byte sprite at V8, VA
$FB2    $E0B6   UNKNOWN  $E0B6           ; Unknown Exxx instruction
$FB4    $A6A8   LD       I, $6A8         ; Load 6A8 into I
$FB6    $0CC0   SYS      $CC0            ; System call to CC0
$FB8    $7DE8   ADD      VD, #E8         ; Add 232 to VD
$FBA    $B46C   JP       V0, $46C        ; Jump to V0 + 46C
$FBC    $E2FA   UNKNOWN  $E2FA           ; Unknown Exxx instruction
$FBE    $8CAF   UNKNOWN  8CAF            ; Unknown 8xxx instruction
$FC0    $AFA3   LD       I, $FA3         ; Load FA3 into I
$FC2    $E9E7   UNKNOWN  $E9E7           ; Unknown Exxx instruction
$FC4    $BF7D   JP       V0, $F7D        ; Jump to V0 + F7D
$FC6    $21D9   CALL     $1D9            ; Call subroutine at 1D9
$FC8    $C737   RND      V7, #37         ; V7 = random & 37
$FCA    $CF8A   RND      VF, #8A         ; VF = random & 8A
$FCC    $AB08   LD       I, $B08         ; Load B08 into I
$FCE    $88CD   UNKNOWN  88CD            ; Unknown 8xxx instruction
$FD0    $3B75   SE       VB, #75         ; Skip if VB == 117
$FD2    $59BE   UNKNOWN  $59BE           ; Unknown 5xxx instruction
$FD4    $D011   DRW      V0, V1, #1      ; Draw 1-byte sprite at V0, V1
$FD6    $7CCB   ADD      VC, #CB         ; Add 203 to VC
$FD8    $542E   UNKNOWN  $542E           ; Unknown 5xxx instruction
$FDA    $993B   UNKNOWN  $993B           ; Unknown 9xxx instruction
$FDC    $338A   SE       V3, #8A         ; Skip if V3 == 138
$FDE    $5878   UNKNOWN  $5878           ; Unknown 5xxx instruction
$FE0    $CAFC   RND      VA, #FC         ; VA = random & FC
$FE2    $883D   UNKNOWN  883D            ; Unknown 8xxx instruction
$FE4    $ABB7   LD       I, $BB7         ; Load BB7 into I
$FE6    $66F7   LD       V6, #F7         ; Load 247 into V6
$FE8    $FCF1   UNKNOWN  FCF1            ; Unknown Fxxx instruction
$FEA    $B11E   JP       V0, $11E        ; Jump to V0 + 11E
$FEC    $77FC   ADD      V7, #FC         ; Add 252 to V7
$FEE    $F1AA   UNKNOWN  F1AA            ; Unknown Fxxx instruction
$FF0    $234D   CALL     $34D            ; Call subroutine at 34D
$FF2    $43B7   SNE      V3, #B7         ; Skip if V3 != 183
$FF4    $DB33   DRW      VB, V3, #3      ; Draw 3-byte sprite at VB, V3
$FF6    $F476   UNKNOWN  F476            ; Unknown Fxxx instruction
$FF8    $61D2   LD       V1, #D2         ; Load 210 into V1
$FFA    $00FF   SYS      $0FF            ; System call to 0FF
$FFC    $5B16   UNKNOWN  $5B16           ; Unknown 5xxx instruction
$FFE    $633A   LD       V3, #3A         ; Load 58 into V3

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 472 (26.3%)
  LD      : 246 (13.7%)
  JP      : 203 (11.3%)
  SE      : 138 ( 7.7%)
  SNE     : 126 ( 7.0%)
  SYS     : 125 ( 7.0%)
  ADD     : 124 ( 6.9%)
  RND     : 109 ( 6.1%)
  DRW     : 105 ( 5.9%)
  CALL    : 104 ( 5.8%)
  AND     :   8 ( 0.4%)
  SHL     :   8 ( 0.4%)
  SUBN    :   7 ( 0.4%)
  OR      :   6 ( 0.3%)
  XOR     :   4 ( 0.2%)
  SHR     :   4 ( 0.2%)
  SUB     :   3 ( 0.2%)

Memory Operations: 370 (20.6%)
Arithmetic Operations: 152 (8.5%)
