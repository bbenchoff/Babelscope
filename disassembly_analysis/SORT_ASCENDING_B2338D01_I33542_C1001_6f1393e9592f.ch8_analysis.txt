
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B2338D01_I33542_C1001_6f1393e9592f.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 2338
Instance: 33542
Direction: ascending
Final Array: [0, 3, 3, 13, 76, 86, 127, 171]
Operations: R:0 W:1 C:41 S:14

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 124
Sort Array References:
  $24E: LD I, $50D ; Load 50D into I
  $27C: LD I, $B7E ; Load B7E into I
  $29A: LD I, $EF1 ; Load EF1 into I
  $2B2: LD I, $8C0 ; Load 8C0 into I
  $2C4: LD I, $EAD ; Load EAD into I
  $2D4: LD I, $B09 ; Load B09 into I
  $36A: LD I, $948 ; Load 948 into I
  $39E: LD I, $032 ; Load 032 into I
  $3B4: LD I, $A84 ; Load A84 into I
  $3BA: LD I, $559 ; Load 559 into I
  $3C8: LD I, $F80 ; Load F80 into I
  $3EE: LD I, $CD5 ; Load CD5 into I
  $3F0: LD I, $F24 ; Load F24 into I
  $3F8: LD I, $CD8 ; Load CD8 into I
  $3FE: LD I, $56D ; Load 56D into I
  $41C: LD I, $D63 ; Load D63 into I
  $42C: LD I, $D72 ; Load D72 into I
  $454: LD I, $7A9 ; Load 7A9 into I
  $46C: LD I, $C21 ; Load C21 into I
  $488: LD I, $CC3 ; Load CC3 into I
  $496: LD I, $0AC ; Load 0AC into I
  $498: LD I, $DF6 ; Load DF6 into I
  $4B8: LD I, $118 ; Load 118 into I
  $4F8: LD I, $64B ; Load 64B into I
  $4FC: LD I, $89C ; Load 89C into I
  $50E: LD I, $797 ; Load 797 into I
  $512: LD I, $681 ; Load 681 into I
  $516: LD I, $C4A ; Load C4A into I
  $522: LD I, $56E ; Load 56E into I
  $528: LD I, $442 ; Load 442 into I
  $546: LD I, $4BC ; Load 4BC into I
  $55C: LD I, $134 ; Load 134 into I
  $564: LD I, $760 ; Load 760 into I
  $566: LD I, $EC4 ; Load EC4 into I
  $578: LD I, $F8A ; Load F8A into I
  $57E: LD I, $390 ; Load 390 into I
  $588: LD I, $BC9 ; Load BC9 into I
  $598: LD I, $3DD ; Load 3DD into I
  $59A: LD I, $735 ; Load 735 into I
  $5B6: LD I, $A2A ; Load A2A into I
  $5B8: LD I, $475 ; Load 475 into I
  $5C4: LD I, $C96 ; Load C96 into I
  $5F4: LD I, $1DE ; Load 1DE into I
  $628: LD I, $F74 ; Load F74 into I
  $646: LD I, $DE7 ; Load DE7 into I
  $650: LD I, $503 ; Load 503 into I
  $68A: LD I, $7B9 ; Load 7B9 into I
  $69E: LD I, $5AE ; Load 5AE into I
  $6C2: LD I, $0E4 ; Load 0E4 into I
  $6C8: LD I, $048 ; Load 048 into I
  $6F0: LD I, $A93 ; Load A93 into I
  $6FC: LD I, $15E ; Load 15E into I
  $728: LD I, $FBB ; Load FBB into I
  $756: LD I, $7D7 ; Load 7D7 into I
  $78E: LD I, $E84 ; Load E84 into I
  $79C: LD I, $01B ; Load 01B into I
  $7B2: LD I, $EF4 ; Load EF4 into I
  $7C2: LD I, $2A3 ; Load 2A3 into I
  $80C: LD I, $2D3 ; Load 2D3 into I
  $810: LD I, $7D2 ; Load 7D2 into I
  $82A: LD I, $B3C ; Load B3C into I
  $834: LD I, $CF9 ; Load CF9 into I
  $85A: LD I, $443 ; Load 443 into I
  $892: LD I, $F73 ; Load F73 into I
  $8B2: LD I, $1A8 ; Load 1A8 into I
  $8C4: LD I, $26D ; Load 26D into I
  $8CA: LD I, $E6E ; Load E6E into I
  $900: LD I, $054 ; Load 054 into I
  $93E: LD I, $09D ; Load 09D into I
  $944: LD I, $7A8 ; Load 7A8 into I
  $946: LD I, $EE8 ; Load EE8 into I
  $966: LD I, $803 ; Load 803 into I
  $9A8: LD I, $963 ; Load 963 into I
  $9AC: LD I, $6AD ; Load 6AD into I
  $9B8: LD I, $B5B ; Load B5B into I
  $A16: LD I, $CE2 ; Load CE2 into I
  $A2E: LD I, $4FB ; Load 4FB into I
  $A3E: LD I, $F60 ; Load F60 into I
  $A44: LD I, $4A6 ; Load 4A6 into I
  $A4E: LD I, $4D2 ; Load 4D2 into I
  $A76: LD I, $840 ; Load 840 into I
  $A7C: LD I, $3F7 ; Load 3F7 into I
  $A96: LD I, $ABE ; Load ABE into I
  $B1C: LD I, $553 ; Load 553 into I
  $B20: LD I, $BB3 ; Load BB3 into I
  $B3C: LD I, $D97 ; Load D97 into I
  $B46: LD I, $462 ; Load 462 into I
  $B7E: LD I, $A23 ; Load A23 into I
  $B80: LD I, $3B1 ; Load 3B1 into I
  $BAA: LD I, $B36 ; Load B36 into I
  $BE6: LD I, $7FD ; Load 7FD into I
  $BFE: LD I, $489 ; Load 489 into I
  $C04: LD I, $CD3 ; Load CD3 into I
  $C32: LD I, $72A ; Load 72A into I
  $C98: LD I, $F35 ; Load F35 into I
  $CEA: LD I, $6BB ; Load 6BB into I
  $D0E: LD I, $A6B ; Load A6B into I
  $D32: LD I, $9E6 ; Load 9E6 into I
  $D36: LD I, $484 ; Load 484 into I
  $D3C: LD I, $922 ; Load 922 into I
  $D64: LD I, $F12 ; Load F12 into I
  $D66: LD I, $62B ; Load 62B into I
  $D8E: LD I, $275 ; Load 275 into I
  $DB2: LD I, $43B ; Load 43B into I
  $DB8: LD I, $047 ; Load 047 into I
  $E04: LD I, $675 ; Load 675 into I
  $E08: LD VF, [I] ; Load V0-VF from I
  $E0A: LD I, $1C0 ; Load 1C0 into I
  $E14: LD I, $5EE ; Load 5EE into I
  $E2C: LD I, $E0F ; Load E0F into I
  $EA6: LD I, $423 ; Load 423 into I
  $EC4: LD I, $5DE ; Load 5DE into I
  $ED6: LD V9, [I] ; Load V0-V9 from I
  $EDE: LD I, $63E ; Load 63E into I
  $EE0: LD I, $961 ; Load 961 into I
  $EE6: LD I, $833 ; Load 833 into I
  $EE8: LD I, $9A8 ; Load 9A8 into I
  $EEC: LD I, $55B ; Load 55B into I
  $EF6: LD I, $988 ; Load 988 into I
  $F84: LD I, $2B5 ; Load 2B5 into I
  $F88: LD I, $82A ; Load 82A into I
  $FA0: LD I, $39D ; Load 39D into I
  $FA2: LD I, $C4A ; Load C4A into I
  $FE0: LD I, $1A7 ; Load 1A7 into I

CONTROL FLOW ANALYSIS:
Jumps: 210
Calls: 115
Branches: 212
Loops: 131
Loop Structures:
  $20C -> $141 (backward jump)
  $290 -> $170 (backward jump)
  $2BE -> $01D (backward jump)
  $2DE -> $258 (backward jump)
  $340 -> $333 (backward jump)
  $354 -> $047 (backward jump)
  $384 -> $031 (backward jump)
  $390 -> $10A (backward jump)
  $3E0 -> $2AA (backward jump)
  $3FC -> $001 (backward jump)
  $416 -> $399 (backward jump)
  $422 -> $0A9 (backward jump)
  $456 -> $036 (backward jump)
  $490 -> $316 (backward jump)
  $4CA -> $42A (backward jump)
  $506 -> $3D2 (backward jump)
  $540 -> $2AF (backward jump)
  $5D4 -> $44B (backward jump)
  $5E0 -> $4A2 (backward jump)
  $5E6 -> $0C6 (backward jump)
  $5EA -> $54F (backward jump)
  $5FE -> $13A (backward jump)
  $612 -> $354 (backward jump)
  $626 -> $519 (backward jump)
  $67A -> $47D (backward jump)
  $6D6 -> $3E8 (backward jump)
  $6E2 -> $37E (backward jump)
  $6E6 -> $641 (backward jump)
  $70C -> $31B (backward jump)
  $726 -> $251 (backward jump)
  $736 -> $12A (backward jump)
  $73E -> $535 (backward jump)
  $780 -> $291 (backward jump)
  $798 -> $5F6 (backward jump)
  $7A2 -> $2E7 (backward jump)
  $7AE -> $45F (backward jump)
  $7B8 -> $242 (backward jump)
  $826 -> $482 (backward jump)
  $830 -> $537 (backward jump)
  $86A -> $39A (backward jump)
  $88E -> $325 (backward jump)
  $898 -> $0BF (backward jump)
  $89C -> $744 (backward jump)
  $8C2 -> $7EC (backward jump)
  $8CC -> $2BD (backward jump)
  $906 -> $5C6 (backward jump)
  $90C -> $3C8 (backward jump)
  $912 -> $1C0 (backward jump)
  $914 -> $857 (backward jump)
  $91E -> $589 (backward jump)
  $922 -> $770 (backward jump)
  $952 -> $124 (backward jump)
  $954 -> $09F (backward jump)
  $972 -> $2F2 (backward jump)
  $97A -> $097 (backward jump)
  $986 -> $6A7 (backward jump)
  $9AE -> $56B (backward jump)
  $9E6 -> $090 (backward jump)
  $9E8 -> $39D (backward jump)
  $9FC -> $785 (backward jump)
  $A20 -> $7CD (backward jump)
  $A48 -> $89E (backward jump)
  $A60 -> $62B (backward jump)
  $A8E -> $6F5 (backward jump)
  $A9A -> $341 (backward jump)
  $ABC -> $3A3 (backward jump)
  $AEA -> $527 (backward jump)
  $AEC -> $6F9 (backward jump)
  $AEE -> $7B4 (backward jump)
  $AF2 -> $A2F (backward jump)
  $B38 -> $0F2 (backward jump)
  $B52 -> $03E (backward jump)
  $B64 -> $7AA (backward jump)
  $B72 -> $B40 (backward jump)
  $B76 -> $161 (backward jump)
  $B7A -> $321 (backward jump)
  $BB4 -> $1C2 (backward jump)
  $BD4 -> $5B5 (backward jump)
  $C14 -> $96D (backward jump)
  $C28 -> $74A (backward jump)
  $C2A -> $B91 (backward jump)
  $C40 -> $661 (backward jump)
  $C5E -> $62F (backward jump)
  $C78 -> $146 (backward jump)
  $C92 -> $9EA (backward jump)
  $CA0 -> $6F3 (backward jump)
  $CD4 -> $408 (backward jump)
  $D0C -> $11D (backward jump)
  $D10 -> $C9A (backward jump)
  $D12 -> $413 (backward jump)
  $D54 -> $9AA (backward jump)
  $D80 -> $CFE (backward jump)
  $DBC -> $58D (backward jump)
  $E00 -> $77A (backward jump)
  $E0E -> $8D3 (backward jump)
  $E16 -> $890 (backward jump)
  $E2A -> $D68 (backward jump)
  $E2E -> $850 (backward jump)
  $E3C -> $DD9 (backward jump)
  $E40 -> $5FA (backward jump)
  $E44 -> $7F8 (backward jump)
  $E5A -> $390 (backward jump)
  $E66 -> $63D (backward jump)
  $E72 -> $356 (backward jump)
  $E7C -> $9BA (backward jump)
  $E80 -> $DBF (backward jump)
  $E86 -> $3F0 (backward jump)
  $E94 -> $564 (backward jump)
  $EA0 -> $73C (backward jump)
  $EBE -> $5B9 (backward jump)
  $ED4 -> $924 (backward jump)
  $EDC -> $8B3 (backward jump)
  $EF4 -> $E73 (backward jump)
  $EFE -> $57F (backward jump)
  $F00 -> $174 (backward jump)
  $F02 -> $E00 (backward jump)
  $F0C -> $1BD (backward jump)
  $F18 -> $C23 (backward jump)
  $F1A -> $763 (backward jump)
  $F22 -> $024 (backward jump)
  $F28 -> $068 (backward jump)
  $F3C -> $03A (backward jump)
  $F48 -> $C40 (backward jump)
  $F76 -> $15F (backward jump)
  $F8C -> $1F7 (backward jump)
  $FB4 -> $C60 (backward jump)
  $FC0 -> $361 (backward jump)
  $FCA -> $151 (backward jump)
  $FE4 -> $27E (backward jump)
  $FF2 -> $D3D (backward jump)
  $FFC -> $93D (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $5CD6   UNKNOWN  $5CD6           ; Unknown 5xxx instruction
$202    $500F   UNKNOWN  $500F           ; Unknown 5xxx instruction
$204    $5003   UNKNOWN  $5003           ; Unknown 5xxx instruction
$206    $09D1   SYS      $9D1            ; System call to 9D1
$208    $EEAD   UNKNOWN  $EEAD           ; Unknown Exxx instruction
$20A    $75B8   ADD      V5, #B8         ; Add 184 to V5
$20C    $B141   JP       V0, $141        ; Jump to V0 + 141
$20E    $CE4B   RND      VE, #4B         ; VE = random & 4B
$210    $1DF8   JP       $DF8            ; Jump to DF8
$212    $7B43   ADD      VB, #43         ; Add 67 to VB
$214    $9BE2   UNKNOWN  $9BE2           ; Unknown 9xxx instruction
$216    $8D46   SHR      VD              ; VD >>= 1, VF = LSB
$218    $9F16   UNKNOWN  $9F16           ; Unknown 9xxx instruction
$21A    $2C10   CALL     $C10            ; Call subroutine at C10
$21C    $61E6   LD       V1, #E6         ; Load 230 into V1
$21E    $0D13   SYS      $D13            ; System call to D13
$220    $64B4   LD       V4, #B4         ; Load 180 into V4
$222    $C954   RND      V9, #54         ; V9 = random & 54
$224    $B6B3   JP       V0, $6B3        ; Jump to V0 + 6B3
$226    $9375   UNKNOWN  $9375           ; Unknown 9xxx instruction
$228    $3E9A   SE       VE, #9A         ; Skip if VE == 154
$22A    $9D8C   UNKNOWN  $9D8C           ; Unknown 9xxx instruction
$22C    $D297   DRW      V2, V9, #7      ; Draw 7-byte sprite at V2, V9
$22E    $D3AB   DRW      V3, VA, #B      ; Draw 11-byte sprite at V3, VA
$230    $6470   LD       V4, #70         ; Load 112 into V4
$232    $D3E5   DRW      V3, VE, #5      ; Draw 5-byte sprite at V3, VE
$234    $6D59   LD       VD, #59         ; Load 89 into VD
$236    $7E43   ADD      VE, #43         ; Add 67 to VE
$238    $7190   ADD      V1, #90         ; Add 144 to V1
$23A    $8ACD   UNKNOWN  8ACD            ; Unknown 8xxx instruction
$23C    $D14F   DRW      V1, V4, #F      ; Draw 15-byte sprite at V1, V4
$23E    $17CC   JP       $7CC            ; Jump to 7CC
$240    $FE00   UNKNOWN  FE00            ; Unknown Fxxx instruction
$242    $6F36   LD       VF, #36         ; Load 54 into VF
$244    $E712   UNKNOWN  $E712           ; Unknown Exxx instruction
$246    $3477   SE       V4, #77         ; Skip if V4 == 119
$248    $F231   UNKNOWN  F231            ; Unknown Fxxx instruction
$24A    $5BC5   UNKNOWN  $5BC5           ; Unknown 5xxx instruction
$24C    $7EE7   ADD      VE, #E7         ; Add 231 to VE
$24E    $A50D   LD       I, $50D         ; Load 50D into I
$250    $83A3   XOR      V3, VA          ; V3 ^= VA
$252    $EED0   UNKNOWN  $EED0           ; Unknown Exxx instruction
$254    $0F6E   SYS      $F6E            ; System call to F6E
$256    $75B3   ADD      V5, #B3         ; Add 179 to V5
$258    $1F91   JP       $F91            ; Jump to F91
$25A    $D4DC   DRW      V4, VD, #C      ; Draw 12-byte sprite at V4, VD
$25C    $C451   RND      V4, #51         ; V4 = random & 51
$25E    $FBF6   UNKNOWN  FBF6            ; Unknown Fxxx instruction
$260    $989D   UNKNOWN  $989D           ; Unknown 9xxx instruction
$262    $1DF4   JP       $DF4            ; Jump to DF4
$264    $7FD0   ADD      VF, #D0         ; Add 208 to VF
$266    $87D9   UNKNOWN  87D9            ; Unknown 8xxx instruction
$268    $E3D3   UNKNOWN  $E3D3           ; Unknown Exxx instruction
$26A    $022E   SYS      $22E            ; System call to 22E
$26C    $15A6   JP       $5A6            ; Jump to 5A6
$26E    $1BC2   JP       $BC2            ; Jump to BC2
$270    $C2BC   RND      V2, #BC         ; V2 = random & BC
$272    $027B   SYS      $27B            ; System call to 27B
$274    $2209   CALL     $209            ; Call subroutine at 209
$276    $D03D   DRW      V0, V3, #D      ; Draw 13-byte sprite at V0, V3
$278    $BEEF   JP       V0, $EEF        ; Jump to V0 + EEF
$27A    $DFA7   DRW      VF, VA, #7      ; Draw 7-byte sprite at VF, VA
$27C    $AB7E   LD       I, $B7E         ; Load B7E into I
$27E    $96C0   SNE      V6, VC          ; Skip if V6 != VC
$280    $4A95   SNE      VA, #95         ; Skip if VA != 149
$282    $7942   ADD      V9, #42         ; Add 66 to V9
$284    $F9B4   UNKNOWN  F9B4            ; Unknown Fxxx instruction
$286    $0792   SYS      $792            ; System call to 792
$288    $D3DC   DRW      V3, VD, #C      ; Draw 12-byte sprite at V3, VD
$28A    $2558   CALL     $558            ; Call subroutine at 558
$28C    $79AF   ADD      V9, #AF         ; Add 175 to V9
$28E    $022E   SYS      $22E            ; System call to 22E
$290    $1170   JP       $170            ; Jump to 170
$292    $046F   SYS      $46F            ; System call to 46F
$294    $063A   SYS      $63A            ; System call to 63A
$296    $4A1A   SNE      VA, #1A         ; Skip if VA != 26
$298    $FDEF   UNKNOWN  FDEF            ; Unknown Fxxx instruction
$29A    $AEF1   LD       I, $EF1         ; Load EF1 into I
$29C    $5C48   UNKNOWN  $5C48           ; Unknown 5xxx instruction
$29E    $2F71   CALL     $F71            ; Call subroutine at F71
$2A0    $8E07   SUBN     VE, V0          ; VE = V0 - VE, VF = !borrow
$2A2    $7160   ADD      V1, #60         ; Add 96 to V1
$2A4    $1333   JP       $333            ; Jump to 333
$2A6    $4C9C   SNE      VC, #9C         ; Skip if VC != 156
$2A8    $E09A   UNKNOWN  $E09A           ; Unknown Exxx instruction
$2AA    $DCAB   DRW      VC, VA, #B      ; Draw 11-byte sprite at VC, VA
$2AC    $DFB9   DRW      VF, VB, #9      ; Draw 9-byte sprite at VF, VB
$2AE    $B6F9   JP       V0, $6F9        ; Jump to V0 + 6F9
$2B0    $B45A   JP       V0, $45A        ; Jump to V0 + 45A
$2B2    $A8C0   LD       I, $8C0         ; Load 8C0 into I
$2B4    $FA75   UNKNOWN  FA75            ; Unknown Fxxx instruction
$2B6    $60CB   LD       V0, #CB         ; Load 203 into V0
$2B8    $8725   SUB      V7, V2          ; V7 -= V2, VF = !borrow
$2BA    $37B7   SE       V7, #B7         ; Skip if V7 == 183
$2BC    $C1C6   RND      V1, #C6         ; V1 = random & C6
$2BE    $B01D   JP       V0, $01D        ; Jump to V0 + 01D
$2C0    $01C8   SYS      $1C8            ; System call to 1C8
$2C2    $50E6   UNKNOWN  $50E6           ; Unknown 5xxx instruction
$2C4    $AEAD   LD       I, $EAD         ; Load EAD into I
$2C6    $46A9   SNE      V6, #A9         ; Skip if V6 != 169
$2C8    $01C9   SYS      $1C9            ; System call to 1C9
$2CA    $C60E   RND      V6, #0E         ; V6 = random & 0E
$2CC    $3318   SE       V3, #18         ; Skip if V3 == 24
$2CE    $021F   SYS      $21F            ; System call to 21F
$2D0    $36FE   SE       V6, #FE         ; Skip if V6 == 254
$2D2    $D24C   DRW      V2, V4, #C      ; Draw 12-byte sprite at V2, V4
$2D4    $AB09   LD       I, $B09         ; Load B09 into I
$2D6    $43CB   SNE      V3, #CB         ; Skip if V3 != 203
$2D8    $E552   UNKNOWN  $E552           ; Unknown Exxx instruction
$2DA    $CA4C   RND      VA, #4C         ; VA = random & 4C
$2DC    $F5BD   UNKNOWN  F5BD            ; Unknown Fxxx instruction
$2DE    $1258   JP       $258            ; Jump to 258
$2E0    $8942   AND      V9, V4          ; V9 &= V4
$2E2    $00DA   SYS      $0DA            ; System call to 0DA
$2E4    $8F5B   UNKNOWN  8F5B            ; Unknown 8xxx instruction
$2E6    $4E2C   SNE      VE, #2C         ; Skip if VE != 44
$2E8    $D0EA   DRW      V0, VE, #A      ; Draw 10-byte sprite at V0, VE
$2EA    $32D5   SE       V2, #D5         ; Skip if V2 == 213
$2EC    $C392   RND      V3, #92         ; V3 = random & 92
$2EE    $2BC7   CALL     $BC7            ; Call subroutine at BC7
$2F0    $E998   UNKNOWN  $E998           ; Unknown Exxx instruction
$2F2    $C423   RND      V4, #23         ; V4 = random & 23
$2F4    $338D   SE       V3, #8D         ; Skip if V3 == 141
$2F6    $EDCB   UNKNOWN  $EDCB           ; Unknown Exxx instruction
$2F8    $6010   LD       V0, #10         ; Load 16 into V0
$2FA    $8BC9   UNKNOWN  8BC9            ; Unknown 8xxx instruction
$2FC    $FD8B   UNKNOWN  FD8B            ; Unknown Fxxx instruction
$2FE    $5F0C   UNKNOWN  $5F0C           ; Unknown 5xxx instruction
$300    $0003   SYS      $003            ; System call to 003
$302    $030D   SYS      $30D            ; System call to 30D
$304    $4C56   SNE      VC, #56         ; Skip if VC != 86
$306    $7FAB   ADD      VF, #AB         ; Add 171 to VF
$308    $EEA9   UNKNOWN  $EEA9           ; Unknown Exxx instruction
$30A    $D237   DRW      V2, V3, #7      ; Draw 7-byte sprite at V2, V3
$30C    $91BB   UNKNOWN  $91BB           ; Unknown 9xxx instruction
$30E    $7D2E   ADD      VD, #2E         ; Add 46 to VD
$310    $5F5C   UNKNOWN  $5F5C           ; Unknown 5xxx instruction
$312    $4B32   SNE      VB, #32         ; Skip if VB != 50
$314    $393A   SE       V9, #3A         ; Skip if V9 == 58
$316    $4B07   SNE      VB, #07         ; Skip if VB != 7
$318    $6C2F   LD       VC, #2F         ; Load 47 into VC
$31A    $CD77   RND      VD, #77         ; VD = random & 77
$31C    $61B4   LD       V1, #B4         ; Load 180 into V1
$31E    $C3F2   RND      V3, #F2         ; V3 = random & F2
$320    $3A53   SE       VA, #53         ; Skip if VA == 83
$322    $B42C   JP       V0, $42C        ; Jump to V0 + 42C
$324    $BE3F   JP       V0, $E3F        ; Jump to V0 + E3F
$326    $729D   ADD      V2, #9D         ; Add 157 to V2
$328    $9753   UNKNOWN  $9753           ; Unknown 9xxx instruction
$32A    $E280   UNKNOWN  $E280           ; Unknown Exxx instruction
$32C    $F686   UNKNOWN  F686            ; Unknown Fxxx instruction
$32E    $26C6   CALL     $6C6            ; Call subroutine at 6C6
$330    $FD41   UNKNOWN  FD41            ; Unknown Fxxx instruction
$332    $CB5C   RND      VB, #5C         ; VB = random & 5C
$334    $4E6A   SNE      VE, #6A         ; Skip if VE != 106
$336    $769F   ADD      V6, #9F         ; Add 159 to V6
$338    $4EA2   SNE      VE, #A2         ; Skip if VE != 162
$33A    $5391   UNKNOWN  $5391           ; Unknown 5xxx instruction
$33C    $DD37   DRW      VD, V3, #7      ; Draw 7-byte sprite at VD, V3
$33E    $D2AF   DRW      V2, VA, #F      ; Draw 15-byte sprite at V2, VA
$340    $1333   JP       $333            ; Jump to 333
$342    $7363   ADD      V3, #63         ; Add 99 to V3
$344    $6350   LD       V3, #50         ; Load 80 into V3
$346    $0BD9   SYS      $BD9            ; System call to BD9
$348    $FD26   UNKNOWN  FD26            ; Unknown Fxxx instruction
$34A    $8C6B   UNKNOWN  8C6B            ; Unknown 8xxx instruction
$34C    $239D   CALL     $39D            ; Call subroutine at 39D
$34E    $648D   LD       V4, #8D         ; Load 141 into V4
$350    $D4AE   DRW      V4, VA, #E      ; Draw 14-byte sprite at V4, VA
$352    $489D   SNE      V8, #9D         ; Skip if V8 != 157
$354    $1047   JP       $047            ; Jump to 047
$356    $08FA   SYS      $8FA            ; System call to 8FA
$358    $0FAE   SYS      $FAE            ; System call to FAE
$35A    $79EC   ADD      V9, #EC         ; Add 236 to V9
$35C    $55C8   UNKNOWN  $55C8           ; Unknown 5xxx instruction
$35E    $F7FB   UNKNOWN  F7FB            ; Unknown Fxxx instruction
$360    $EE44   UNKNOWN  $EE44           ; Unknown Exxx instruction
$362    $74B5   ADD      V4, #B5         ; Add 181 to V4
$364    $CB79   RND      VB, #79         ; VB = random & 79
$366    $35CA   SE       V5, #CA         ; Skip if V5 == 202
$368    $990A   UNKNOWN  $990A           ; Unknown 9xxx instruction
$36A    $A948   LD       I, $948         ; Load 948 into I
$36C    $E749   UNKNOWN  $E749           ; Unknown Exxx instruction
$36E    $C8E1   RND      V8, #E1         ; V8 = random & E1
$370    $FE46   UNKNOWN  FE46            ; Unknown Fxxx instruction
$372    $08FF   SYS      $8FF            ; System call to 8FF
$374    $F323   UNKNOWN  F323            ; Unknown Fxxx instruction
$376    $1A5A   JP       $A5A            ; Jump to A5A
$378    $E3D8   UNKNOWN  $E3D8           ; Unknown Exxx instruction
$37A    $791B   ADD      V9, #1B         ; Add 27 to V9
$37C    $68FA   LD       V8, #FA         ; Load 250 into V8
$37E    $E9E1   UNKNOWN  $E9E1           ; Unknown Exxx instruction
$380    $3461   SE       V4, #61         ; Skip if V4 == 97
$382    $DE9D   DRW      VE, V9, #D      ; Draw 13-byte sprite at VE, V9
$384    $1031   JP       $031            ; Jump to 031
$386    $07D7   SYS      $7D7            ; System call to 7D7
$388    $E6ED   UNKNOWN  $E6ED           ; Unknown Exxx instruction
$38A    $7140   ADD      V1, #40         ; Add 64 to V1
$38C    $4C68   SNE      VC, #68         ; Skip if VC != 104
$38E    $F645   UNKNOWN  F645            ; Unknown Fxxx instruction
$390    $110A   JP       $10A            ; Jump to 10A
$392    $7309   ADD      V3, #09         ; Add 9 to V3
$394    $BC67   JP       V0, $C67        ; Jump to V0 + C67
$396    $F6EA   UNKNOWN  F6EA            ; Unknown Fxxx instruction
$398    $4516   SNE      V5, #16         ; Skip if V5 != 22
$39A    $EDF6   UNKNOWN  $EDF6           ; Unknown Exxx instruction
$39C    $4627   SNE      V6, #27         ; Skip if V6 != 39
$39E    $A032   LD       I, $032         ; Load 032 into I
$3A0    $BEC1   JP       V0, $EC1        ; Jump to V0 + EC1
$3A2    $BF22   JP       V0, $F22        ; Jump to V0 + F22
$3A4    $C733   RND      V7, #33         ; V7 = random & 33
$3A6    $9DCC   UNKNOWN  $9DCC           ; Unknown 9xxx instruction
$3A8    $3AB1   SE       VA, #B1         ; Skip if VA == 177
$3AA    $04ED   SYS      $4ED            ; System call to 4ED
$3AC    $C251   RND      V2, #51         ; V2 = random & 51
$3AE    $C4E2   RND      V4, #E2         ; V4 = random & E2
$3B0    $0E21   SYS      $E21            ; System call to E21
$3B2    $00AD   SYS      $0AD            ; System call to 0AD
$3B4    $AA84   LD       I, $A84         ; Load A84 into I
$3B6    $B9E7   JP       V0, $9E7        ; Jump to V0 + 9E7
$3B8    $BDC1   JP       V0, $DC1        ; Jump to V0 + DC1
$3BA    $A559   LD       I, $559         ; Load 559 into I
$3BC    $D37E   DRW      V3, V7, #E      ; Draw 14-byte sprite at V3, V7
$3BE    $FB1D   UNKNOWN  FB1D            ; Unknown Fxxx instruction
$3C0    $42E4   SNE      V2, #E4         ; Skip if V2 != 228
$3C2    $C345   RND      V3, #45         ; V3 = random & 45
$3C4    $9CB1   UNKNOWN  $9CB1           ; Unknown 9xxx instruction
$3C6    $CE04   RND      VE, #04         ; VE = random & 04
$3C8    $AF80   LD       I, $F80         ; Load F80 into I
$3CA    $31E2   SE       V1, #E2         ; Skip if V1 == 226
$3CC    $6ADC   LD       VA, #DC         ; Load 220 into VA
$3CE    $428E   SNE      V2, #8E         ; Skip if V2 != 142
$3D0    $8E7D   UNKNOWN  8E7D            ; Unknown 8xxx instruction
$3D2    $19AA   JP       $9AA            ; Jump to 9AA
$3D4    $CD0D   RND      VD, #0D         ; VD = random & 0D
$3D6    $F00C   UNKNOWN  F00C            ; Unknown Fxxx instruction
$3D8    $5971   UNKNOWN  $5971           ; Unknown 5xxx instruction
$3DA    $F01D   UNKNOWN  F01D            ; Unknown Fxxx instruction
$3DC    $F35E   UNKNOWN  F35E            ; Unknown Fxxx instruction
$3DE    $CB14   RND      VB, #14         ; VB = random & 14
$3E0    $12AA   JP       $2AA            ; Jump to 2AA
$3E2    $E86E   UNKNOWN  $E86E           ; Unknown Exxx instruction
$3E4    $6469   LD       V4, #69         ; Load 105 into V4
$3E6    $0955   SYS      $955            ; System call to 955
$3E8    $BACF   JP       V0, $ACF        ; Jump to V0 + ACF
$3EA    $0021   SYS      $021            ; System call to 021
$3EC    $7AD4   ADD      VA, #D4         ; Add 212 to VA
$3EE    $ACD5   LD       I, $CD5         ; Load CD5 into I
$3F0    $AF24   LD       I, $F24         ; Load F24 into I
$3F2    $1D3B   JP       $D3B            ; Jump to D3B
$3F4    $7901   ADD      V9, #01         ; Add 1 to V9
$3F6    $FB16   UNKNOWN  FB16            ; Unknown Fxxx instruction
$3F8    $ACD8   LD       I, $CD8         ; Load CD8 into I
$3FA    $9E1E   UNKNOWN  $9E1E           ; Unknown 9xxx instruction
$3FC    $1001   JP       $001            ; Jump to 001
$3FE    $A56D   LD       I, $56D         ; Load 56D into I
$400    $593B   UNKNOWN  $593B           ; Unknown 5xxx instruction
$402    $EFF7   UNKNOWN  $EFF7           ; Unknown Exxx instruction
$404    $B61B   JP       V0, $61B        ; Jump to V0 + 61B
$406    $F0E9   UNKNOWN  F0E9            ; Unknown Fxxx instruction
$408    $C3DC   RND      V3, #DC         ; V3 = random & DC
$40A    $3842   SE       V8, #42         ; Skip if V8 == 66
$40C    $ECB6   UNKNOWN  $ECB6           ; Unknown Exxx instruction
$40E    $3D14   SE       VD, #14         ; Skip if VD == 20
$410    $584E   UNKNOWN  $584E           ; Unknown 5xxx instruction
$412    $0C6E   SYS      $C6E            ; System call to C6E
$414    $D8C2   DRW      V8, VC, #2      ; Draw 2-byte sprite at V8, VC
$416    $B399   JP       V0, $399        ; Jump to V0 + 399
$418    $026F   SYS      $26F            ; System call to 26F
$41A    $9C99   UNKNOWN  $9C99           ; Unknown 9xxx instruction
$41C    $AD63   LD       I, $D63         ; Load D63 into I
$41E    $E915   UNKNOWN  $E915           ; Unknown Exxx instruction
$420    $8F31   OR       VF, V3          ; VF |= V3
$422    $B0A9   JP       V0, $0A9        ; Jump to V0 + 0A9
$424    $2D7A   CALL     $D7A            ; Call subroutine at D7A
$426    $511C   UNKNOWN  $511C           ; Unknown 5xxx instruction
$428    $D826   DRW      V8, V2, #6      ; Draw 6-byte sprite at V8, V2
$42A    $8CF8   UNKNOWN  8CF8            ; Unknown 8xxx instruction
$42C    $AD72   LD       I, $D72         ; Load D72 into I
$42E    $65F5   LD       V5, #F5         ; Load 245 into V5
$430    $71B0   ADD      V1, #B0         ; Add 176 to V1
$432    $460A   SNE      V6, #0A         ; Skip if V6 != 10
$434    $0AA6   SYS      $AA6            ; System call to AA6
$436    $24EF   CALL     $4EF            ; Call subroutine at 4EF
$438    $30C6   SE       V0, #C6         ; Skip if V0 == 198
$43A    $95B6   UNKNOWN  $95B6           ; Unknown 9xxx instruction
$43C    $E3A5   UNKNOWN  $E3A5           ; Unknown Exxx instruction
$43E    $356A   SE       V5, #6A         ; Skip if V5 == 106
$440    $C6D8   RND      V6, #D8         ; V6 = random & D8
$442    $1729   JP       $729            ; Jump to 729
$444    $1D9C   JP       $D9C            ; Jump to D9C
$446    $46DE   SNE      V6, #DE         ; Skip if V6 != 222
$448    $2183   CALL     $183            ; Call subroutine at 183
$44A    $30E4   SE       V0, #E4         ; Skip if V0 == 228
$44C    $0A58   SYS      $A58            ; System call to A58
$44E    $D99D   DRW      V9, V9, #D      ; Draw 13-byte sprite at V9, V9
$450    $D5A6   DRW      V5, VA, #6      ; Draw 6-byte sprite at V5, VA
$452    $1487   JP       $487            ; Jump to 487
$454    $A7A9   LD       I, $7A9         ; Load 7A9 into I
$456    $1036   JP       $036            ; Jump to 036
$458    $7320   ADD      V3, #20         ; Add 32 to V3
$45A    $880A   UNKNOWN  880A            ; Unknown 8xxx instruction
$45C    $DEF1   DRW      VE, VF, #1      ; Draw 1-byte sprite at VE, VF
$45E    $B5CB   JP       V0, $5CB        ; Jump to V0 + 5CB
$460    $6B98   LD       VB, #98         ; Load 152 into VB
$462    $05DC   SYS      $5DC            ; System call to 5DC
$464    $901E   UNKNOWN  $901E           ; Unknown 9xxx instruction
$466    $6F0E   LD       VF, #0E         ; Load 14 into VF
$468    $69C6   LD       V9, #C6         ; Load 198 into V9
$46A    $950C   UNKNOWN  $950C           ; Unknown 9xxx instruction
$46C    $AC21   LD       I, $C21         ; Load C21 into I
$46E    $E319   UNKNOWN  $E319           ; Unknown Exxx instruction
$470    $2F69   CALL     $F69            ; Call subroutine at F69
$472    $924D   UNKNOWN  $924D           ; Unknown 9xxx instruction
$474    $72E3   ADD      V2, #E3         ; Add 227 to V2
$476    $80F8   UNKNOWN  80F8            ; Unknown 8xxx instruction
$478    $451C   SNE      V5, #1C         ; Skip if V5 != 28
$47A    $6A0B   LD       VA, #0B         ; Load 11 into VA
$47C    $C266   RND      V2, #66         ; V2 = random & 66
$47E    $7994   ADD      V9, #94         ; Add 148 to V9
$480    $37AA   SE       V7, #AA         ; Skip if V7 == 170
$482    $F838   UNKNOWN  F838            ; Unknown Fxxx instruction
$484    $65FE   LD       V5, #FE         ; Load 254 into V5
$486    $67B2   LD       V7, #B2         ; Load 178 into V7
$488    $ACC3   LD       I, $CC3         ; Load CC3 into I
$48A    $963B   UNKNOWN  $963B           ; Unknown 9xxx instruction
$48C    $0E4C   SYS      $E4C            ; System call to E4C
$48E    $56B8   UNKNOWN  $56B8           ; Unknown 5xxx instruction
$490    $B316   JP       V0, $316        ; Jump to V0 + 316
$492    $BAE3   JP       V0, $AE3        ; Jump to V0 + AE3
$494    $7CC4   ADD      VC, #C4         ; Add 196 to VC
$496    $A0AC   LD       I, $0AC         ; Load 0AC into I
$498    $ADF6   LD       I, $DF6         ; Load DF6 into I
$49A    $48F4   SNE      V8, #F4         ; Skip if V8 != 244
$49C    $529B   UNKNOWN  $529B           ; Unknown 5xxx instruction
$49E    $6EEA   LD       VE, #EA         ; Load 234 into VE
$4A0    $B97D   JP       V0, $97D        ; Jump to V0 + 97D
$4A2    $939A   UNKNOWN  $939A           ; Unknown 9xxx instruction
$4A4    $D5FD   DRW      V5, VF, #D      ; Draw 13-byte sprite at V5, VF
$4A6    $0D79   SYS      $D79            ; System call to D79
$4A8    $F77A   UNKNOWN  F77A            ; Unknown Fxxx instruction
$4AA    $540B   UNKNOWN  $540B           ; Unknown 5xxx instruction
$4AC    $78EB   ADD      V8, #EB         ; Add 235 to V8
$4AE    $8454   ADD      V4, V5          ; V4 += V5, VF = carry
$4B0    $F0AC   UNKNOWN  F0AC            ; Unknown Fxxx instruction
$4B2    $2E38   CALL     $E38            ; Call subroutine at E38
$4B4    $5D62   UNKNOWN  $5D62           ; Unknown 5xxx instruction
$4B6    $27AD   CALL     $7AD            ; Call subroutine at 7AD
$4B8    $A118   LD       I, $118         ; Load 118 into I
$4BA    $E037   UNKNOWN  $E037           ; Unknown Exxx instruction
$4BC    $3133   SE       V1, #33         ; Skip if V1 == 51
$4BE    $0F7B   SYS      $F7B            ; System call to F7B
$4C0    $E7B6   UNKNOWN  $E7B6           ; Unknown Exxx instruction
$4C2    $90A4   UNKNOWN  $90A4           ; Unknown 9xxx instruction
$4C4    $FB85   UNKNOWN  FB85            ; Unknown Fxxx instruction
$4C6    $7425   ADD      V4, #25         ; Add 37 to V4
$4C8    $2C4C   CALL     $C4C            ; Call subroutine at C4C
$4CA    $B42A   JP       V0, $42A        ; Jump to V0 + 42A
$4CC    $EB00   UNKNOWN  $EB00           ; Unknown Exxx instruction
$4CE    $4BFE   SNE      VB, #FE         ; Skip if VB != 254
$4D0    $722B   ADD      V2, #2B         ; Add 43 to V2
$4D2    $E534   UNKNOWN  $E534           ; Unknown Exxx instruction
$4D4    $EE71   UNKNOWN  $EE71           ; Unknown Exxx instruction
$4D6    $CAFF   RND      VA, #FF         ; VA = random & FF
$4D8    $E255   UNKNOWN  $E255           ; Unknown Exxx instruction
$4DA    $848B   UNKNOWN  848B            ; Unknown 8xxx instruction
$4DC    $6863   LD       V8, #63         ; Load 99 into V8
$4DE    $BD4F   JP       V0, $D4F        ; Jump to V0 + D4F
$4E0    $02D0   SYS      $2D0            ; System call to 2D0
$4E2    $B6B4   JP       V0, $6B4        ; Jump to V0 + 6B4
$4E4    $98C9   UNKNOWN  $98C9           ; Unknown 9xxx instruction
$4E6    $514F   UNKNOWN  $514F           ; Unknown 5xxx instruction
$4E8    $22F7   CALL     $2F7            ; Call subroutine at 2F7
$4EA    $D3DB   DRW      V3, VD, #B      ; Draw 11-byte sprite at V3, VD
$4EC    $6F3C   LD       VF, #3C         ; Load 60 into VF
$4EE    $0BB0   SYS      $BB0            ; System call to BB0
$4F0    $6BBE   LD       VB, #BE         ; Load 190 into VB
$4F2    $8AA5   SUB      VA, VA          ; VA -= VA, VF = !borrow
$4F4    $E48C   UNKNOWN  $E48C           ; Unknown Exxx instruction
$4F6    $4C05   SNE      VC, #05         ; Skip if VC != 5
$4F8    $A64B   LD       I, $64B         ; Load 64B into I
$4FA    $26AA   CALL     $6AA            ; Call subroutine at 6AA
$4FC    $A89C   LD       I, $89C         ; Load 89C into I
$4FE    $8932   AND      V9, V3          ; V9 &= V3
$500    $F1B3   UNKNOWN  F1B3            ; Unknown Fxxx instruction
$502    $996B   UNKNOWN  $996B           ; Unknown 9xxx instruction
$504    $922C   UNKNOWN  $922C           ; Unknown 9xxx instruction
$506    $B3D2   JP       V0, $3D2        ; Jump to V0 + 3D2
$508    $5033   UNKNOWN  $5033           ; Unknown 5xxx instruction
$50A    $6D99   LD       VD, #99         ; Load 153 into VD
$50C    $2D44   CALL     $D44            ; Call subroutine at D44
$50E    $A797   LD       I, $797         ; Load 797 into I
$510    $78C7   ADD      V8, #C7         ; Add 199 to V8
$512    $A681   LD       I, $681         ; Load 681 into I
$514    $2992   CALL     $992            ; Call subroutine at 992
$516    $AC4A   LD       I, $C4A         ; Load C4A into I
$518    $2942   CALL     $942            ; Call subroutine at 942
$51A    $FAC5   UNKNOWN  FAC5            ; Unknown Fxxx instruction
$51C    $5BAB   UNKNOWN  $5BAB           ; Unknown 5xxx instruction
$51E    $09CA   SYS      $9CA            ; System call to 9CA
$520    $3747   SE       V7, #47         ; Skip if V7 == 71
$522    $A56E   LD       I, $56E         ; Load 56E into I
$524    $2617   CALL     $617            ; Call subroutine at 617
$526    $6CB5   LD       VC, #B5         ; Load 181 into VC
$528    $A442   LD       I, $442         ; Load 442 into I
$52A    $9106   UNKNOWN  $9106           ; Unknown 9xxx instruction
$52C    $C9F9   RND      V9, #F9         ; V9 = random & F9
$52E    $57D0   SE       V7, VD          ; Skip if V7 == VD
$530    $23B1   CALL     $3B1            ; Call subroutine at 3B1
$532    $981A   UNKNOWN  $981A           ; Unknown 9xxx instruction
$534    $7190   ADD      V1, #90         ; Add 144 to V1
$536    $654C   LD       V5, #4C         ; Load 76 into V5
$538    $F068   UNKNOWN  F068            ; Unknown Fxxx instruction
$53A    $0C6C   SYS      $C6C            ; System call to C6C
$53C    $80FC   UNKNOWN  80FC            ; Unknown 8xxx instruction
$53E    $CBB8   RND      VB, #B8         ; VB = random & B8
$540    $12AF   JP       $2AF            ; Jump to 2AF
$542    $3077   SE       V0, #77         ; Skip if V0 == 119
$544    $4081   SNE      V0, #81         ; Skip if V0 != 129
$546    $A4BC   LD       I, $4BC         ; Load 4BC into I
$548    $2E77   CALL     $E77            ; Call subroutine at E77
$54A    $E256   UNKNOWN  $E256           ; Unknown Exxx instruction
$54C    $6CFC   LD       VC, #FC         ; Load 252 into VC
$54E    $1888   JP       $888            ; Jump to 888
$550    $6953   LD       V9, #53         ; Load 83 into V9
$552    $331C   SE       V3, #1C         ; Skip if V3 == 28
$554    $0FEA   SYS      $FEA            ; System call to FEA
$556    $8360   LD       V3, V6          ; V3 = V6
$558    $F65F   UNKNOWN  F65F            ; Unknown Fxxx instruction
$55A    $97CC   UNKNOWN  $97CC           ; Unknown 9xxx instruction
$55C    $A134   LD       I, $134         ; Load 134 into I
$55E    $642E   LD       V4, #2E         ; Load 46 into V4
$560    $C7CC   RND      V7, #CC         ; V7 = random & CC
$562    $5F18   UNKNOWN  $5F18           ; Unknown 5xxx instruction
$564    $A760   LD       I, $760         ; Load 760 into I
$566    $AEC4   LD       I, $EC4         ; Load EC4 into I
$568    $1AB7   JP       $AB7            ; Jump to AB7
$56A    $18A6   JP       $8A6            ; Jump to 8A6
$56C    $596E   UNKNOWN  $596E           ; Unknown 5xxx instruction
$56E    $261E   CALL     $61E            ; Call subroutine at 61E
$570    $1DC0   JP       $DC0            ; Jump to DC0
$572    $4AA9   SNE      VA, #A9         ; Skip if VA != 169
$574    $EC28   UNKNOWN  $EC28           ; Unknown Exxx instruction
$576    $392B   SE       V9, #2B         ; Skip if V9 == 43
$578    $AF8A   LD       I, $F8A         ; Load F8A into I
$57A    $3767   SE       V7, #67         ; Skip if V7 == 103
$57C    $9B40   SNE      VB, V4          ; Skip if VB != V4
$57E    $A390   LD       I, $390         ; Load 390 into I
$580    $FBC3   UNKNOWN  FBC3            ; Unknown Fxxx instruction
$582    $3330   SE       V3, #30         ; Skip if V3 == 48
$584    $EB71   UNKNOWN  $EB71           ; Unknown Exxx instruction
$586    $E6BD   UNKNOWN  $E6BD           ; Unknown Exxx instruction
$588    $ABC9   LD       I, $BC9         ; Load BC9 into I
$58A    $90F7   UNKNOWN  $90F7           ; Unknown 9xxx instruction
$58C    $7A5D   ADD      VA, #5D         ; Add 93 to VA
$58E    $30A4   SE       V0, #A4         ; Skip if V0 == 164
$590    $317F   SE       V1, #7F         ; Skip if V1 == 127
$592    $D5EC   DRW      V5, VE, #C      ; Draw 12-byte sprite at V5, VE
$594    $7600   ADD      V6, #00         ; Add 0 to V6
$596    $9259   UNKNOWN  $9259           ; Unknown 9xxx instruction
$598    $A3DD   LD       I, $3DD         ; Load 3DD into I
$59A    $A735   LD       I, $735         ; Load 735 into I
$59C    $0791   SYS      $791            ; System call to 791
$59E    $956E   UNKNOWN  $956E           ; Unknown 9xxx instruction
$5A0    $C500   RND      V5, #00         ; V5 = random & 00
$5A2    $1B4C   JP       $B4C            ; Jump to B4C
$5A4    $0721   SYS      $721            ; System call to 721
$5A6    $2FDC   CALL     $FDC            ; Call subroutine at FDC
$5A8    $7EFE   ADD      VE, #FE         ; Add 254 to VE
$5AA    $87D8   UNKNOWN  87D8            ; Unknown 8xxx instruction
$5AC    $FED5   UNKNOWN  FED5            ; Unknown Fxxx instruction
$5AE    $F74D   UNKNOWN  F74D            ; Unknown Fxxx instruction
$5B0    $DA2A   DRW      VA, V2, #A      ; Draw 10-byte sprite at VA, V2
$5B2    $9481   UNKNOWN  $9481           ; Unknown 9xxx instruction
$5B4    $F382   UNKNOWN  F382            ; Unknown Fxxx instruction
$5B6    $AA2A   LD       I, $A2A         ; Load A2A into I
$5B8    $A475   LD       I, $475         ; Load 475 into I
$5BA    $8453   XOR      V4, V5          ; V4 ^= V5
$5BC    $2AC7   CALL     $AC7            ; Call subroutine at AC7
$5BE    $4C12   SNE      VC, #12         ; Skip if VC != 18
$5C0    $C8D1   RND      V8, #D1         ; V8 = random & D1
$5C2    $F8C2   UNKNOWN  F8C2            ; Unknown Fxxx instruction
$5C4    $AC96   LD       I, $C96         ; Load C96 into I
$5C6    $C0E3   RND      V0, #E3         ; V0 = random & E3
$5C8    $23EF   CALL     $3EF            ; Call subroutine at 3EF
$5CA    $EA9C   UNKNOWN  $EA9C           ; Unknown Exxx instruction
$5CC    $1861   JP       $861            ; Jump to 861
$5CE    $F247   UNKNOWN  F247            ; Unknown Fxxx instruction
$5D0    $B6F5   JP       V0, $6F5        ; Jump to V0 + 6F5
$5D2    $8E76   SHR      VE              ; VE >>= 1, VF = LSB
$5D4    $B44B   JP       V0, $44B        ; Jump to V0 + 44B
$5D6    $9B39   UNKNOWN  $9B39           ; Unknown 9xxx instruction
$5D8    $D60D   DRW      V6, V0, #D      ; Draw 13-byte sprite at V6, V0
$5DA    $6411   LD       V4, #11         ; Load 17 into V4
$5DC    $9307   UNKNOWN  $9307           ; Unknown 9xxx instruction
$5DE    $733F   ADD      V3, #3F         ; Add 63 to V3
$5E0    $14A2   JP       $4A2            ; Jump to 4A2
$5E2    $338D   SE       V3, #8D         ; Skip if V3 == 141
$5E4    $905B   UNKNOWN  $905B           ; Unknown 9xxx instruction
$5E6    $10C6   JP       $0C6            ; Jump to 0C6
$5E8    $3A59   SE       VA, #59         ; Skip if VA == 89
$5EA    $B54F   JP       V0, $54F        ; Jump to V0 + 54F
$5EC    $D444   DRW      V4, V4, #4      ; Draw 4-byte sprite at V4, V4
$5EE    $F52E   UNKNOWN  F52E            ; Unknown Fxxx instruction
$5F0    $28CB   CALL     $8CB            ; Call subroutine at 8CB
$5F2    $0A75   SYS      $A75            ; System call to A75
$5F4    $A1DE   LD       I, $1DE         ; Load 1DE into I
$5F6    $4B32   SNE      VB, #32         ; Skip if VB != 50
$5F8    $D91F   DRW      V9, V1, #F      ; Draw 15-byte sprite at V9, V1
$5FA    $263E   CALL     $63E            ; Call subroutine at 63E
$5FC    $910C   UNKNOWN  $910C           ; Unknown 9xxx instruction
$5FE    $113A   JP       $13A            ; Jump to 13A
$600    $793A   ADD      V9, #3A         ; Add 58 to V9
$602    $BC87   JP       V0, $C87        ; Jump to V0 + C87
$604    $6B9A   LD       VB, #9A         ; Load 154 into VB
$606    $D57A   DRW      V5, V7, #A      ; Draw 10-byte sprite at V5, V7
$608    $0C27   SYS      $C27            ; System call to C27
$60A    $72E7   ADD      V2, #E7         ; Add 231 to V2
$60C    $01B8   SYS      $1B8            ; System call to 1B8
$60E    $91CC   UNKNOWN  $91CC           ; Unknown 9xxx instruction
$610    $50E2   UNKNOWN  $50E2           ; Unknown 5xxx instruction
$612    $B354   JP       V0, $354        ; Jump to V0 + 354
$614    $9D86   UNKNOWN  $9D86           ; Unknown 9xxx instruction
$616    $2306   CALL     $306            ; Call subroutine at 306
$618    $BD4F   JP       V0, $D4F        ; Jump to V0 + D4F
$61A    $C445   RND      V4, #45         ; V4 = random & 45
$61C    $448D   SNE      V4, #8D         ; Skip if V4 != 141
$61E    $FA4F   UNKNOWN  FA4F            ; Unknown Fxxx instruction
$620    $1F97   JP       $F97            ; Jump to F97
$622    $BC12   JP       V0, $C12        ; Jump to V0 + C12
$624    $6F47   LD       VF, #47         ; Load 71 into VF
$626    $B519   JP       V0, $519        ; Jump to V0 + 519
$628    $AF74   LD       I, $F74         ; Load F74 into I
$62A    $7B91   ADD      VB, #91         ; Add 145 to VB
$62C    $52C1   UNKNOWN  $52C1           ; Unknown 5xxx instruction
$62E    $F6B8   UNKNOWN  F6B8            ; Unknown Fxxx instruction
$630    $DC1C   DRW      VC, V1, #C      ; Draw 12-byte sprite at VC, V1
$632    $362D   SE       V6, #2D         ; Skip if V6 == 45
$634    $0CFA   SYS      $CFA            ; System call to CFA
$636    $C328   RND      V3, #28         ; V3 = random & 28
$638    $E31E   UNKNOWN  $E31E           ; Unknown Exxx instruction
$63A    $771D   ADD      V7, #1D         ; Add 29 to V7
$63C    $364A   SE       V6, #4A         ; Skip if V6 == 74
$63E    $8048   UNKNOWN  8048            ; Unknown 8xxx instruction
$640    $0628   SYS      $628            ; System call to 628
$642    $7899   ADD      V8, #99         ; Add 153 to V8
$644    $99CA   UNKNOWN  $99CA           ; Unknown 9xxx instruction
$646    $ADE7   LD       I, $DE7         ; Load DE7 into I
$648    $7BB6   ADD      VB, #B6         ; Add 182 to VB
$64A    $5F2C   UNKNOWN  $5F2C           ; Unknown 5xxx instruction
$64C    $905B   UNKNOWN  $905B           ; Unknown 9xxx instruction
$64E    $3203   SE       V2, #03         ; Skip if V2 == 3
$650    $A503   LD       I, $503         ; Load 503 into I
$652    $E72F   UNKNOWN  $E72F           ; Unknown Exxx instruction
$654    $D688   DRW      V6, V8, #8      ; Draw 8-byte sprite at V6, V8
$656    $4A20   SNE      VA, #20         ; Skip if VA != 32
$658    $6A3D   LD       VA, #3D         ; Load 61 into VA
$65A    $78AC   ADD      V8, #AC         ; Add 172 to V8
$65C    $D35F   DRW      V3, V5, #F      ; Draw 15-byte sprite at V3, V5
$65E    $597F   UNKNOWN  $597F           ; Unknown 5xxx instruction
$660    $98FC   UNKNOWN  $98FC           ; Unknown 9xxx instruction
$662    $E168   UNKNOWN  $E168           ; Unknown Exxx instruction
$664    $091B   SYS      $91B            ; System call to 91B
$666    $CC2D   RND      VC, #2D         ; VC = random & 2D
$668    $96E0   SNE      V6, VE          ; Skip if V6 != VE
$66A    $DD9F   DRW      VD, V9, #F      ; Draw 15-byte sprite at VD, V9
$66C    $26FE   CALL     $6FE            ; Call subroutine at 6FE
$66E    $0136   SYS      $136            ; System call to 136
$670    $EB81   UNKNOWN  $EB81           ; Unknown Exxx instruction
$672    $CD8C   RND      VD, #8C         ; VD = random & 8C
$674    $44CF   SNE      V4, #CF         ; Skip if V4 != 207
$676    $FFEC   UNKNOWN  FFEC            ; Unknown Fxxx instruction
$678    $8061   OR       V0, V6          ; V0 |= V6
$67A    $B47D   JP       V0, $47D        ; Jump to V0 + 47D
$67C    $561E   UNKNOWN  $561E           ; Unknown 5xxx instruction
$67E    $6EA6   LD       VE, #A6         ; Load 166 into VE
$680    $2E8E   CALL     $E8E            ; Call subroutine at E8E
$682    $5E87   UNKNOWN  $5E87           ; Unknown 5xxx instruction
$684    $6BFF   LD       VB, #FF         ; Load 255 into VB
$686    $963B   UNKNOWN  $963B           ; Unknown 9xxx instruction
$688    $776F   ADD      V7, #6F         ; Add 111 to V7
$68A    $A7B9   LD       I, $7B9         ; Load 7B9 into I
$68C    $7431   ADD      V4, #31         ; Add 49 to V4
$68E    $4D8A   SNE      VD, #8A         ; Skip if VD != 138
$690    $F684   UNKNOWN  F684            ; Unknown Fxxx instruction
$692    $72AD   ADD      V2, #AD         ; Add 173 to V2
$694    $9B67   UNKNOWN  $9B67           ; Unknown 9xxx instruction
$696    $DE2F   DRW      VE, V2, #F      ; Draw 15-byte sprite at VE, V2
$698    $1DCA   JP       $DCA            ; Jump to DCA
$69A    $5F95   UNKNOWN  $5F95           ; Unknown 5xxx instruction
$69C    $4B7D   SNE      VB, #7D         ; Skip if VB != 125
$69E    $A5AE   LD       I, $5AE         ; Load 5AE into I
$6A0    $DF4E   DRW      VF, V4, #E      ; Draw 14-byte sprite at VF, V4
$6A2    $3F04   SE       VF, #04         ; Skip if VF == 4
$6A4    $9C00   SNE      VC, V0          ; Skip if VC != V0
$6A6    $0503   SYS      $503            ; System call to 503
$6A8    $2445   CALL     $445            ; Call subroutine at 445
$6AA    $8BC5   SUB      VB, VC          ; VB -= VC, VF = !borrow
$6AC    $0DAD   SYS      $DAD            ; System call to DAD
$6AE    $5224   UNKNOWN  $5224           ; Unknown 5xxx instruction
$6B0    $025E   SYS      $25E            ; System call to 25E
$6B2    $E93A   UNKNOWN  $E93A           ; Unknown Exxx instruction
$6B4    $5FD4   UNKNOWN  $5FD4           ; Unknown 5xxx instruction
$6B6    $EDF8   UNKNOWN  $EDF8           ; Unknown Exxx instruction
$6B8    $6FA6   LD       VF, #A6         ; Load 166 into VF
$6BA    $6A7B   LD       VA, #7B         ; Load 123 into VA
$6BC    $6A54   LD       VA, #54         ; Load 84 into VA
$6BE    $C04F   RND      V0, #4F         ; V0 = random & 4F
$6C0    $7DC7   ADD      VD, #C7         ; Add 199 to VD
$6C2    $A0E4   LD       I, $0E4         ; Load 0E4 into I
$6C4    $E592   UNKNOWN  $E592           ; Unknown Exxx instruction
$6C6    $4403   SNE      V4, #03         ; Skip if V4 != 3
$6C8    $A048   LD       I, $048         ; Load 048 into I
$6CA    $E65A   UNKNOWN  $E65A           ; Unknown Exxx instruction
$6CC    $6BA2   LD       VB, #A2         ; Load 162 into VB
$6CE    $2623   CALL     $623            ; Call subroutine at 623
$6D0    $44E1   SNE      V4, #E1         ; Skip if V4 != 225
$6D2    $F370   UNKNOWN  F370            ; Unknown Fxxx instruction
$6D4    $2982   CALL     $982            ; Call subroutine at 982
$6D6    $B3E8   JP       V0, $3E8        ; Jump to V0 + 3E8
$6D8    $57CD   UNKNOWN  $57CD           ; Unknown 5xxx instruction
$6DA    $882B   UNKNOWN  882B            ; Unknown 8xxx instruction
$6DC    $4687   SNE      V6, #87         ; Skip if V6 != 135
$6DE    $CED7   RND      VE, #D7         ; VE = random & D7
$6E0    $6DB9   LD       VD, #B9         ; Load 185 into VD
$6E2    $137E   JP       $37E            ; Jump to 37E
$6E4    $86E3   XOR      V6, VE          ; V6 ^= VE
$6E6    $1641   JP       $641            ; Jump to 641
$6E8    $B85A   JP       V0, $85A        ; Jump to V0 + 85A
$6EA    $0078   SYS      $078            ; System call to 078
$6EC    $5EA7   UNKNOWN  $5EA7           ; Unknown 5xxx instruction
$6EE    $FD31   UNKNOWN  FD31            ; Unknown Fxxx instruction
$6F0    $AA93   LD       I, $A93         ; Load A93 into I
$6F2    $2A89   CALL     $A89            ; Call subroutine at A89
$6F4    $E646   UNKNOWN  $E646           ; Unknown Exxx instruction
$6F6    $8C42   AND      VC, V4          ; VC &= V4
$6F8    $5EDB   UNKNOWN  $5EDB           ; Unknown 5xxx instruction
$6FA    $3380   SE       V3, #80         ; Skip if V3 == 128
$6FC    $A15E   LD       I, $15E         ; Load 15E into I
$6FE    $6276   LD       V2, #76         ; Load 118 into V2
$700    $2B86   CALL     $B86            ; Call subroutine at B86
$702    $77AF   ADD      V7, #AF         ; Add 175 to V7
$704    $7075   ADD      V0, #75         ; Add 117 to V0
$706    $8C93   XOR      VC, V9          ; VC ^= V9
$708    $6B7A   LD       VB, #7A         ; Load 122 into VB
$70A    $0317   SYS      $317            ; System call to 317
$70C    $B31B   JP       V0, $31B        ; Jump to V0 + 31B
$70E    $8B92   AND      VB, V9          ; VB &= V9
$710    $CDBC   RND      VD, #BC         ; VD = random & BC
$712    $1D96   JP       $D96            ; Jump to D96
$714    $DA43   DRW      VA, V4, #3      ; Draw 3-byte sprite at VA, V4
$716    $C0BE   RND      V0, #BE         ; V0 = random & BE
$718    $F298   UNKNOWN  F298            ; Unknown Fxxx instruction
$71A    $CC2C   RND      VC, #2C         ; VC = random & 2C
$71C    $E113   UNKNOWN  $E113           ; Unknown Exxx instruction
$71E    $70DE   ADD      V0, #DE         ; Add 222 to V0
$720    $2F13   CALL     $F13            ; Call subroutine at F13
$722    $F5FA   UNKNOWN  F5FA            ; Unknown Fxxx instruction
$724    $6367   LD       V3, #67         ; Load 103 into V3
$726    $1251   JP       $251            ; Jump to 251
$728    $AFBB   LD       I, $FBB         ; Load FBB into I
$72A    $CC18   RND      VC, #18         ; VC = random & 18
$72C    $1E35   JP       $E35            ; Jump to E35
$72E    $9595   UNKNOWN  $9595           ; Unknown 9xxx instruction
$730    $C38D   RND      V3, #8D         ; V3 = random & 8D
$732    $20C0   CALL     $0C0            ; Call subroutine at 0C0
$734    $4B7E   SNE      VB, #7E         ; Skip if VB != 126
$736    $112A   JP       $12A            ; Jump to 12A
$738    $CD33   RND      VD, #33         ; VD = random & 33
$73A    $7B18   ADD      VB, #18         ; Add 24 to VB
$73C    $EAF4   UNKNOWN  $EAF4           ; Unknown Exxx instruction
$73E    $1535   JP       $535            ; Jump to 535
$740    $2B80   CALL     $B80            ; Call subroutine at B80
$742    $2914   CALL     $914            ; Call subroutine at 914
$744    $5895   UNKNOWN  $5895           ; Unknown 5xxx instruction
$746    $F6B2   UNKNOWN  F6B2            ; Unknown Fxxx instruction
$748    $3516   SE       V5, #16         ; Skip if V5 == 22
$74A    $951B   UNKNOWN  $951B           ; Unknown 9xxx instruction
$74C    $51FA   UNKNOWN  $51FA           ; Unknown 5xxx instruction
$74E    $1EFE   JP       $EFE            ; Jump to EFE
$750    $6AFF   LD       VA, #FF         ; Load 255 into VA
$752    $E2AA   UNKNOWN  $E2AA           ; Unknown Exxx instruction
$754    $7D30   ADD      VD, #30         ; Add 48 to VD
$756    $A7D7   LD       I, $7D7         ; Load 7D7 into I
$758    $F4C0   UNKNOWN  F4C0            ; Unknown Fxxx instruction
$75A    $624D   LD       V2, #4D         ; Load 77 into V2
$75C    $9547   UNKNOWN  $9547           ; Unknown 9xxx instruction
$75E    $DB3B   DRW      VB, V3, #B      ; Draw 11-byte sprite at VB, V3
$760    $280C   CALL     $80C            ; Call subroutine at 80C
$762    $F2E9   UNKNOWN  F2E9            ; Unknown Fxxx instruction
$764    $27E0   CALL     $7E0            ; Call subroutine at 7E0
$766    $E26A   UNKNOWN  $E26A           ; Unknown Exxx instruction
$768    $D6EC   DRW      V6, VE, #C      ; Draw 12-byte sprite at V6, VE
$76A    $D5C4   DRW      V5, VC, #4      ; Draw 4-byte sprite at V5, VC
$76C    $29C7   CALL     $9C7            ; Call subroutine at 9C7
$76E    $FBD0   UNKNOWN  FBD0            ; Unknown Fxxx instruction
$770    $2E63   CALL     $E63            ; Call subroutine at E63
$772    $60B5   LD       V0, #B5         ; Load 181 into V0
$774    $06C3   SYS      $6C3            ; System call to 6C3
$776    $8AB0   LD       VA, VB          ; VA = VB
$778    $1EA2   JP       $EA2            ; Jump to EA2
$77A    $3664   SE       V6, #64         ; Skip if V6 == 100
$77C    $287D   CALL     $87D            ; Call subroutine at 87D
$77E    $E4F0   UNKNOWN  $E4F0           ; Unknown Exxx instruction
$780    $B291   JP       V0, $291        ; Jump to V0 + 291
$782    $8438   UNKNOWN  8438            ; Unknown 8xxx instruction
$784    $E44C   UNKNOWN  $E44C           ; Unknown Exxx instruction
$786    $EBAA   UNKNOWN  $EBAA           ; Unknown Exxx instruction
$788    $5BD3   UNKNOWN  $5BD3           ; Unknown 5xxx instruction
$78A    $F4E4   UNKNOWN  F4E4            ; Unknown Fxxx instruction
$78C    $6E8A   LD       VE, #8A         ; Load 138 into VE
$78E    $AE84   LD       I, $E84         ; Load E84 into I
$790    $48A3   SNE      V8, #A3         ; Skip if V8 != 163
$792    $4E7F   SNE      VE, #7F         ; Skip if VE != 127
$794    $3B47   SE       VB, #47         ; Skip if VB == 71
$796    $1BC6   JP       $BC6            ; Jump to BC6
$798    $B5F6   JP       V0, $5F6        ; Jump to V0 + 5F6
$79A    $DA67   DRW      VA, V6, #7      ; Draw 7-byte sprite at VA, V6
$79C    $A01B   LD       I, $01B         ; Load 01B into I
$79E    $D02F   DRW      V0, V2, #F      ; Draw 15-byte sprite at V0, V2
$7A0    $9F15   UNKNOWN  $9F15           ; Unknown 9xxx instruction
$7A2    $B2E7   JP       V0, $2E7        ; Jump to V0 + 2E7
$7A4    $86BD   UNKNOWN  86BD            ; Unknown 8xxx instruction
$7A6    $0554   SYS      $554            ; System call to 554
$7A8    $986A   UNKNOWN  $986A           ; Unknown 9xxx instruction
$7AA    $F443   UNKNOWN  F443            ; Unknown Fxxx instruction
$7AC    $5FE9   UNKNOWN  $5FE9           ; Unknown 5xxx instruction
$7AE    $B45F   JP       V0, $45F        ; Jump to V0 + 45F
$7B0    $3682   SE       V6, #82         ; Skip if V6 == 130
$7B2    $AEF4   LD       I, $EF4         ; Load EF4 into I
$7B4    $DC0B   DRW      VC, V0, #B      ; Draw 11-byte sprite at VC, V0
$7B6    $423C   SNE      V2, #3C         ; Skip if V2 != 60
$7B8    $B242   JP       V0, $242        ; Jump to V0 + 242
$7BA    $BF22   JP       V0, $F22        ; Jump to V0 + F22
$7BC    $652E   LD       V5, #2E         ; Load 46 into V5
$7BE    $53CD   UNKNOWN  $53CD           ; Unknown 5xxx instruction
$7C0    $DEA1   DRW      VE, VA, #1      ; Draw 1-byte sprite at VE, VA
$7C2    $A2A3   LD       I, $2A3         ; Load 2A3 into I
$7C4    $801B   UNKNOWN  801B            ; Unknown 8xxx instruction
$7C6    $77F8   ADD      V7, #F8         ; Add 248 to V7
$7C8    $570D   UNKNOWN  $570D           ; Unknown 5xxx instruction
$7CA    $9F45   UNKNOWN  $9F45           ; Unknown 9xxx instruction
$7CC    $BCC1   JP       V0, $CC1        ; Jump to V0 + CC1
$7CE    $3548   SE       V5, #48         ; Skip if V5 == 72
$7D0    $9195   UNKNOWN  $9195           ; Unknown 9xxx instruction
$7D2    $FE19   UNKNOWN  FE19            ; Unknown Fxxx instruction
$7D4    $024C   SYS      $24C            ; System call to 24C
$7D6    $5D5D   UNKNOWN  $5D5D           ; Unknown 5xxx instruction
$7D8    $DCF0   DRW      VC, VF, #0      ; Draw 0-byte sprite at VC, VF
$7DA    $FA37   UNKNOWN  FA37            ; Unknown Fxxx instruction
$7DC    $4108   SNE      V1, #08         ; Skip if V1 != 8
$7DE    $F9ED   UNKNOWN  F9ED            ; Unknown Fxxx instruction
$7E0    $5D19   UNKNOWN  $5D19           ; Unknown 5xxx instruction
$7E2    $DD02   DRW      VD, V0, #2      ; Draw 2-byte sprite at VD, V0
$7E4    $BCE2   JP       V0, $CE2        ; Jump to V0 + CE2
$7E6    $5C86   UNKNOWN  $5C86           ; Unknown 5xxx instruction
$7E8    $3574   SE       V5, #74         ; Skip if V5 == 116
$7EA    $C8D9   RND      V8, #D9         ; V8 = random & D9
$7EC    $833F   UNKNOWN  833F            ; Unknown 8xxx instruction
$7EE    $9604   UNKNOWN  $9604           ; Unknown 9xxx instruction
$7F0    $6709   LD       V7, #09         ; Load 9 into V7
$7F2    $42C8   SNE      V2, #C8         ; Skip if V2 != 200
$7F4    $F541   UNKNOWN  F541            ; Unknown Fxxx instruction
$7F6    $66A9   LD       V6, #A9         ; Load 169 into V6
$7F8    $590A   UNKNOWN  $590A           ; Unknown 5xxx instruction
$7FA    $3E77   SE       VE, #77         ; Skip if VE == 119
$7FC    $FEED   UNKNOWN  FEED            ; Unknown Fxxx instruction
$7FE    $9B87   UNKNOWN  $9B87           ; Unknown 9xxx instruction
$800    $D9F2   DRW      V9, VF, #2      ; Draw 2-byte sprite at V9, VF
$802    $0ACE   SYS      $ACE            ; System call to ACE
$804    $239D   CALL     $39D            ; Call subroutine at 39D
$806    $E611   UNKNOWN  $E611           ; Unknown Exxx instruction
$808    $5EC0   SE       VE, VC          ; Skip if VE == VC
$80A    $0096   SYS      $096            ; System call to 096
$80C    $A2D3   LD       I, $2D3         ; Load 2D3 into I
$80E    $5646   UNKNOWN  $5646           ; Unknown 5xxx instruction
$810    $A7D2   LD       I, $7D2         ; Load 7D2 into I
$812    $75EA   ADD      V5, #EA         ; Add 234 to V5
$814    $CBB6   RND      VB, #B6         ; VB = random & B6
$816    $602C   LD       V0, #2C         ; Load 44 into V0
$818    $891F   UNKNOWN  891F            ; Unknown 8xxx instruction
$81A    $765A   ADD      V6, #5A         ; Add 90 to V6
$81C    $6C2C   LD       VC, #2C         ; Load 44 into VC
$81E    $25A1   CALL     $5A1            ; Call subroutine at 5A1
$820    $BA5A   JP       V0, $A5A        ; Jump to V0 + A5A
$822    $7354   ADD      V3, #54         ; Add 84 to V3
$824    $E99A   UNKNOWN  $E99A           ; Unknown Exxx instruction
$826    $B482   JP       V0, $482        ; Jump to V0 + 482
$828    $2FA1   CALL     $FA1            ; Call subroutine at FA1
$82A    $AB3C   LD       I, $B3C         ; Load B3C into I
$82C    $6949   LD       V9, #49         ; Load 73 into V9
$82E    $D0F0   DRW      V0, VF, #0      ; Draw 0-byte sprite at V0, VF
$830    $B537   JP       V0, $537        ; Jump to V0 + 537
$832    $058A   SYS      $58A            ; System call to 58A
$834    $ACF9   LD       I, $CF9         ; Load CF9 into I
$836    $496D   SNE      V9, #6D         ; Skip if V9 != 109
$838    $23AC   CALL     $3AC            ; Call subroutine at 3AC
$83A    $662D   LD       V6, #2D         ; Load 45 into V6
$83C    $EDA1   SKNP     VD              ; Skip if key VD not pressed
$83E    $EF1B   UNKNOWN  $EF1B           ; Unknown Exxx instruction
$840    $1F6B   JP       $F6B            ; Jump to F6B
$842    $0826   SYS      $826            ; System call to 826
$844    $2F95   CALL     $F95            ; Call subroutine at F95
$846    $51BA   UNKNOWN  $51BA           ; Unknown 5xxx instruction
$848    $6B2E   LD       VB, #2E         ; Load 46 into VB
$84A    $FBD6   UNKNOWN  FBD6            ; Unknown Fxxx instruction
$84C    $5117   UNKNOWN  $5117           ; Unknown 5xxx instruction
$84E    $6DBB   LD       VD, #BB         ; Load 187 into VD
$850    $BED8   JP       V0, $ED8        ; Jump to V0 + ED8
$852    $7089   ADD      V0, #89         ; Add 137 to V0
$854    $1B67   JP       $B67            ; Jump to B67
$856    $DB61   DRW      VB, V6, #1      ; Draw 1-byte sprite at VB, V6
$858    $9E7A   UNKNOWN  $9E7A           ; Unknown 9xxx instruction
$85A    $A443   LD       I, $443         ; Load 443 into I
$85C    $9329   UNKNOWN  $9329           ; Unknown 9xxx instruction
$85E    $CC7A   RND      VC, #7A         ; VC = random & 7A
$860    $4071   SNE      V0, #71         ; Skip if V0 != 113
$862    $2200   CALL     $200            ; Call subroutine at 200
$864    $E69D   UNKNOWN  $E69D           ; Unknown Exxx instruction
$866    $2F41   CALL     $F41            ; Call subroutine at F41
$868    $E7D1   UNKNOWN  $E7D1           ; Unknown Exxx instruction
$86A    $139A   JP       $39A            ; Jump to 39A
$86C    $2B3E   CALL     $B3E            ; Call subroutine at B3E
$86E    $1EBE   JP       $EBE            ; Jump to EBE
$870    $D8E8   DRW      V8, VE, #8      ; Draw 8-byte sprite at V8, VE
$872    $56BD   UNKNOWN  $56BD           ; Unknown 5xxx instruction
$874    $80E6   SHR      V0              ; V0 >>= 1, VF = LSB
$876    $913E   UNKNOWN  $913E           ; Unknown 9xxx instruction
$878    $2D11   CALL     $D11            ; Call subroutine at D11
$87A    $F521   UNKNOWN  F521            ; Unknown Fxxx instruction
$87C    $707B   ADD      V0, #7B         ; Add 123 to V0
$87E    $FDBC   UNKNOWN  FDBC            ; Unknown Fxxx instruction
$880    $93A3   UNKNOWN  $93A3           ; Unknown 9xxx instruction
$882    $9C19   UNKNOWN  $9C19           ; Unknown 9xxx instruction
$884    $20D4   CALL     $0D4            ; Call subroutine at 0D4
$886    $49FC   SNE      V9, #FC         ; Skip if V9 != 252
$888    $3442   SE       V4, #42         ; Skip if V4 == 66
$88A    $0D04   SYS      $D04            ; System call to D04
$88C    $3395   SE       V3, #95         ; Skip if V3 == 149
$88E    $1325   JP       $325            ; Jump to 325
$890    $E766   UNKNOWN  $E766           ; Unknown Exxx instruction
$892    $AF73   LD       I, $F73         ; Load F73 into I
$894    $342C   SE       V4, #2C         ; Skip if V4 == 44
$896    $D649   DRW      V6, V4, #9      ; Draw 9-byte sprite at V6, V4
$898    $10BF   JP       $0BF            ; Jump to 0BF
$89A    $ECB6   UNKNOWN  $ECB6           ; Unknown Exxx instruction
$89C    $1744   JP       $744            ; Jump to 744
$89E    $2A04   CALL     $A04            ; Call subroutine at A04
$8A0    $9593   UNKNOWN  $9593           ; Unknown 9xxx instruction
$8A2    $4A76   SNE      VA, #76         ; Skip if VA != 118
$8A4    $62BF   LD       V2, #BF         ; Load 191 into V2
$8A6    $082F   SYS      $82F            ; System call to 82F
$8A8    $BD88   JP       V0, $D88        ; Jump to V0 + D88
$8AA    $5EDA   UNKNOWN  $5EDA           ; Unknown 5xxx instruction
$8AC    $D6C5   DRW      V6, VC, #5      ; Draw 5-byte sprite at V6, VC
$8AE    $885C   UNKNOWN  885C            ; Unknown 8xxx instruction
$8B0    $E5D4   UNKNOWN  $E5D4           ; Unknown Exxx instruction
$8B2    $A1A8   LD       I, $1A8         ; Load 1A8 into I
$8B4    $5D22   UNKNOWN  $5D22           ; Unknown 5xxx instruction
$8B6    $2B3B   CALL     $B3B            ; Call subroutine at B3B
$8B8    $DEDE   DRW      VE, VD, #E      ; Draw 14-byte sprite at VE, VD
$8BA    $3505   SE       V5, #05         ; Skip if V5 == 5
$8BC    $5E6F   UNKNOWN  $5E6F           ; Unknown 5xxx instruction
$8BE    $55DE   UNKNOWN  $55DE           ; Unknown 5xxx instruction
$8C0    $7221   ADD      V2, #21         ; Add 33 to V2
$8C2    $B7EC   JP       V0, $7EC        ; Jump to V0 + 7EC
$8C4    $A26D   LD       I, $26D         ; Load 26D into I
$8C6    $3960   SE       V9, #60         ; Skip if V9 == 96
$8C8    $688F   LD       V8, #8F         ; Load 143 into V8
$8CA    $AE6E   LD       I, $E6E         ; Load E6E into I
$8CC    $12BD   JP       $2BD            ; Jump to 2BD
$8CE    $B8EC   JP       V0, $8EC        ; Jump to V0 + 8EC
$8D0    $DB4C   DRW      VB, V4, #C      ; Draw 12-byte sprite at VB, V4
$8D2    $E475   UNKNOWN  $E475           ; Unknown Exxx instruction
$8D4    $5EB8   UNKNOWN  $5EB8           ; Unknown 5xxx instruction
$8D6    $7913   ADD      V9, #13         ; Add 19 to V9
$8D8    $7DA1   ADD      VD, #A1         ; Add 161 to VD
$8DA    $19A9   JP       $9A9            ; Jump to 9A9
$8DC    $DE0F   DRW      VE, V0, #F      ; Draw 15-byte sprite at VE, V0
$8DE    $DA3F   DRW      VA, V3, #F      ; Draw 15-byte sprite at VA, V3
$8E0    $03DD   SYS      $3DD            ; System call to 3DD
$8E2    $C7C0   RND      V7, #C0         ; V7 = random & C0
$8E4    $F1D2   UNKNOWN  F1D2            ; Unknown Fxxx instruction
$8E6    $EE67   UNKNOWN  $EE67           ; Unknown Exxx instruction
$8E8    $1CFE   JP       $CFE            ; Jump to CFE
$8EA    $D591   DRW      V5, V9, #1      ; Draw 1-byte sprite at V5, V9
$8EC    $E0E8   UNKNOWN  $E0E8           ; Unknown Exxx instruction
$8EE    $7B15   ADD      VB, #15         ; Add 21 to VB
$8F0    $391C   SE       V9, #1C         ; Skip if V9 == 28
$8F2    $DEA8   DRW      VE, VA, #8      ; Draw 8-byte sprite at VE, VA
$8F4    $654E   LD       V5, #4E         ; Load 78 into V5
$8F6    $214A   CALL     $14A            ; Call subroutine at 14A
$8F8    $D236   DRW      V2, V3, #6      ; Draw 6-byte sprite at V2, V3
$8FA    $993E   UNKNOWN  $993E           ; Unknown 9xxx instruction
$8FC    $E33D   UNKNOWN  $E33D           ; Unknown Exxx instruction
$8FE    $0A26   SYS      $A26            ; System call to A26
$900    $A054   LD       I, $054         ; Load 054 into I
$902    $C743   RND      V7, #43         ; V7 = random & 43
$904    $7521   ADD      V5, #21         ; Add 33 to V5
$906    $15C6   JP       $5C6            ; Jump to 5C6
$908    $0672   SYS      $672            ; System call to 672
$90A    $060D   SYS      $60D            ; System call to 60D
$90C    $B3C8   JP       V0, $3C8        ; Jump to V0 + 3C8
$90E    $C5E2   RND      V5, #E2         ; V5 = random & E2
$910    $2EF7   CALL     $EF7            ; Call subroutine at EF7
$912    $B1C0   JP       V0, $1C0        ; Jump to V0 + 1C0
$914    $B857   JP       V0, $857        ; Jump to V0 + 857
$916    $9868   UNKNOWN  $9868           ; Unknown 9xxx instruction
$918    $4E5A   SNE      VE, #5A         ; Skip if VE != 90
$91A    $C340   RND      V3, #40         ; V3 = random & 40
$91C    $7721   ADD      V7, #21         ; Add 33 to V7
$91E    $B589   JP       V0, $589        ; Jump to V0 + 589
$920    $6129   LD       V1, #29         ; Load 41 into V1
$922    $B770   JP       V0, $770        ; Jump to V0 + 770
$924    $1C52   JP       $C52            ; Jump to C52
$926    $43D2   SNE      V3, #D2         ; Skip if V3 != 210
$928    $9442   UNKNOWN  $9442           ; Unknown 9xxx instruction
$92A    $4CA1   SNE      VC, #A1         ; Skip if VC != 161
$92C    $66E6   LD       V6, #E6         ; Load 230 into V6
$92E    $D955   DRW      V9, V5, #5      ; Draw 5-byte sprite at V9, V5
$930    $735B   ADD      V3, #5B         ; Add 91 to V3
$932    $63EB   LD       V3, #EB         ; Load 235 into V3
$934    $4575   SNE      V5, #75         ; Skip if V5 != 117
$936    $368A   SE       V6, #8A         ; Skip if V6 == 138
$938    $C373   RND      V3, #73         ; V3 = random & 73
$93A    $19A5   JP       $9A5            ; Jump to 9A5
$93C    $D6DC   DRW      V6, VD, #C      ; Draw 12-byte sprite at V6, VD
$93E    $A09D   LD       I, $09D         ; Load 09D into I
$940    $43CD   SNE      V3, #CD         ; Skip if V3 != 205
$942    $5D27   UNKNOWN  $5D27           ; Unknown 5xxx instruction
$944    $A7A8   LD       I, $7A8         ; Load 7A8 into I
$946    $AEE8   LD       I, $EE8         ; Load EE8 into I
$948    $F4CE   UNKNOWN  F4CE            ; Unknown Fxxx instruction
$94A    $44B6   SNE      V4, #B6         ; Skip if V4 != 182
$94C    $6D68   LD       VD, #68         ; Load 104 into VD
$94E    $9E78   UNKNOWN  $9E78           ; Unknown 9xxx instruction
$950    $56B4   UNKNOWN  $56B4           ; Unknown 5xxx instruction
$952    $1124   JP       $124            ; Jump to 124
$954    $109F   JP       $09F            ; Jump to 09F
$956    $DE46   DRW      VE, V4, #6      ; Draw 6-byte sprite at VE, V4
$958    $05B5   SYS      $5B5            ; System call to 5B5
$95A    $5A91   UNKNOWN  $5A91           ; Unknown 5xxx instruction
$95C    $E1DE   UNKNOWN  $E1DE           ; Unknown Exxx instruction
$95E    $4F87   SNE      VF, #87         ; Skip if VF != 135
$960    $1CD4   JP       $CD4            ; Jump to CD4
$962    $4F24   SNE      VF, #24         ; Skip if VF != 36
$964    $6575   LD       V5, #75         ; Load 117 into V5
$966    $A803   LD       I, $803         ; Load 803 into I
$968    $7E1E   ADD      VE, #1E         ; Add 30 to VE
$96A    $01A7   SYS      $1A7            ; System call to 1A7
$96C    $E146   UNKNOWN  $E146           ; Unknown Exxx instruction
$96E    $FA2C   UNKNOWN  FA2C            ; Unknown Fxxx instruction
$970    $8BFA   UNKNOWN  8BFA            ; Unknown 8xxx instruction
$972    $B2F2   JP       V0, $2F2        ; Jump to V0 + 2F2
$974    $37C6   SE       V7, #C6         ; Skip if V7 == 198
$976    $FA01   UNKNOWN  FA01            ; Unknown Fxxx instruction
$978    $F7F6   UNKNOWN  F7F6            ; Unknown Fxxx instruction
$97A    $B097   JP       V0, $097        ; Jump to V0 + 097
$97C    $2AC6   CALL     $AC6            ; Call subroutine at AC6
$97E    $C530   RND      V5, #30         ; V5 = random & 30
$980    $6F78   LD       VF, #78         ; Load 120 into VF
$982    $D4C1   DRW      V4, VC, #1      ; Draw 1-byte sprite at V4, VC
$984    $C29A   RND      V2, #9A         ; V2 = random & 9A
$986    $16A7   JP       $6A7            ; Jump to 6A7
$988    $7C44   ADD      VC, #44         ; Add 68 to VC
$98A    $9459   UNKNOWN  $9459           ; Unknown 9xxx instruction
$98C    $3DA5   SE       VD, #A5         ; Skip if VD == 165
$98E    $F5CC   UNKNOWN  F5CC            ; Unknown Fxxx instruction
$990    $43D2   SNE      V3, #D2         ; Skip if V3 != 210
$992    $5694   UNKNOWN  $5694           ; Unknown 5xxx instruction
$994    $7207   ADD      V2, #07         ; Add 7 to V2
$996    $8D54   ADD      VD, V5          ; VD += V5, VF = carry
$998    $C6EB   RND      V6, #EB         ; V6 = random & EB
$99A    $80E1   OR       V0, VE          ; V0 |= VE
$99C    $2C0F   CALL     $C0F            ; Call subroutine at C0F
$99E    $CAB2   RND      VA, #B2         ; VA = random & B2
$9A0    $84F4   ADD      V4, VF          ; V4 += VF, VF = carry
$9A2    $E20C   UNKNOWN  $E20C           ; Unknown Exxx instruction
$9A4    $288C   CALL     $88C            ; Call subroutine at 88C
$9A6    $73E6   ADD      V3, #E6         ; Add 230 to V3
$9A8    $A963   LD       I, $963         ; Load 963 into I
$9AA    $223D   CALL     $23D            ; Call subroutine at 23D
$9AC    $A6AD   LD       I, $6AD         ; Load 6AD into I
$9AE    $B56B   JP       V0, $56B        ; Jump to V0 + 56B
$9B0    $69E8   LD       V9, #E8         ; Load 232 into V9
$9B2    $65AA   LD       V5, #AA         ; Load 170 into V5
$9B4    $4B61   SNE      VB, #61         ; Skip if VB != 97
$9B6    $7B93   ADD      VB, #93         ; Add 147 to VB
$9B8    $AB5B   LD       I, $B5B         ; Load B5B into I
$9BA    $01D4   SYS      $1D4            ; System call to 1D4
$9BC    $9B18   UNKNOWN  $9B18           ; Unknown 9xxx instruction
$9BE    $E71A   UNKNOWN  $E71A           ; Unknown Exxx instruction
$9C0    $0546   SYS      $546            ; System call to 546
$9C2    $799B   ADD      V9, #9B         ; Add 155 to V9
$9C4    $4125   SNE      V1, #25         ; Skip if V1 != 37
$9C6    $3C9A   SE       VC, #9A         ; Skip if VC == 154
$9C8    $998E   UNKNOWN  $998E           ; Unknown 9xxx instruction
$9CA    $9B2C   UNKNOWN  $9B2C           ; Unknown 9xxx instruction
$9CC    $E669   UNKNOWN  $E669           ; Unknown Exxx instruction
$9CE    $CCDB   RND      VC, #DB         ; VC = random & DB
$9D0    $0CA3   SYS      $CA3            ; System call to CA3
$9D2    $D260   DRW      V2, V6, #0      ; Draw 0-byte sprite at V2, V6
$9D4    $0A41   SYS      $A41            ; System call to A41
$9D6    $E5DA   UNKNOWN  $E5DA           ; Unknown Exxx instruction
$9D8    $7163   ADD      V1, #63         ; Add 99 to V1
$9DA    $272B   CALL     $72B            ; Call subroutine at 72B
$9DC    $FB4A   UNKNOWN  FB4A            ; Unknown Fxxx instruction
$9DE    $5971   UNKNOWN  $5971           ; Unknown 5xxx instruction
$9E0    $D319   DRW      V3, V1, #9      ; Draw 9-byte sprite at V3, V1
$9E2    $DA5C   DRW      VA, V5, #C      ; Draw 12-byte sprite at VA, V5
$9E4    $CB42   RND      VB, #42         ; VB = random & 42
$9E6    $B090   JP       V0, $090        ; Jump to V0 + 090
$9E8    $B39D   JP       V0, $39D        ; Jump to V0 + 39D
$9EA    $9354   UNKNOWN  $9354           ; Unknown 9xxx instruction
$9EC    $84C9   UNKNOWN  84C9            ; Unknown 8xxx instruction
$9EE    $5123   UNKNOWN  $5123           ; Unknown 5xxx instruction
$9F0    $DDAC   DRW      VD, VA, #C      ; Draw 12-byte sprite at VD, VA
$9F2    $8441   OR       V4, V4          ; V4 |= V4
$9F4    $75DD   ADD      V5, #DD         ; Add 221 to V5
$9F6    $E19F   UNKNOWN  $E19F           ; Unknown Exxx instruction
$9F8    $6AF2   LD       VA, #F2         ; Load 242 into VA
$9FA    $FCA2   UNKNOWN  FCA2            ; Unknown Fxxx instruction
$9FC    $1785   JP       $785            ; Jump to 785
$9FE    $C567   RND      V5, #67         ; V5 = random & 67
$A00    $6F37   LD       VF, #37         ; Load 55 into VF
$A02    $1FBD   JP       $FBD            ; Jump to FBD
$A04    $4D4C   SNE      VD, #4C         ; Skip if VD != 76
$A06    $8224   ADD      V2, V2          ; V2 += V2, VF = carry
$A08    $40BE   SNE      V0, #BE         ; Skip if V0 != 190
$A0A    $7491   ADD      V4, #91         ; Add 145 to V4
$A0C    $E24C   UNKNOWN  $E24C           ; Unknown Exxx instruction
$A0E    $9E98   UNKNOWN  $9E98           ; Unknown 9xxx instruction
$A10    $77C7   ADD      V7, #C7         ; Add 199 to V7
$A12    $29FF   CALL     $9FF            ; Call subroutine at 9FF
$A14    $701A   ADD      V0, #1A         ; Add 26 to V0
$A16    $ACE2   LD       I, $CE2         ; Load CE2 into I
$A18    $9D34   UNKNOWN  $9D34           ; Unknown 9xxx instruction
$A1A    $8999   UNKNOWN  8999            ; Unknown 8xxx instruction
$A1C    $93BB   UNKNOWN  $93BB           ; Unknown 9xxx instruction
$A1E    $FE0F   UNKNOWN  FE0F            ; Unknown Fxxx instruction
$A20    $B7CD   JP       V0, $7CD        ; Jump to V0 + 7CD
$A22    $BC43   JP       V0, $C43        ; Jump to V0 + C43
$A24    $0D42   SYS      $D42            ; System call to D42
$A26    $CDD5   RND      VD, #D5         ; VD = random & D5
$A28    $4737   SNE      V7, #37         ; Skip if V7 != 55
$A2A    $4E00   SNE      VE, #00         ; Skip if VE != 0
$A2C    $702D   ADD      V0, #2D         ; Add 45 to V0
$A2E    $A4FB   LD       I, $4FB         ; Load 4FB into I
$A30    $EC9A   UNKNOWN  $EC9A           ; Unknown Exxx instruction
$A32    $5D24   UNKNOWN  $5D24           ; Unknown 5xxx instruction
$A34    $79AA   ADD      V9, #AA         ; Add 170 to V9
$A36    $DD15   DRW      VD, V1, #5      ; Draw 5-byte sprite at VD, V1
$A38    $D303   DRW      V3, V0, #3      ; Draw 3-byte sprite at V3, V0
$A3A    $580A   UNKNOWN  $580A           ; Unknown 5xxx instruction
$A3C    $88AD   UNKNOWN  88AD            ; Unknown 8xxx instruction
$A3E    $AF60   LD       I, $F60         ; Load F60 into I
$A40    $F2CF   UNKNOWN  F2CF            ; Unknown Fxxx instruction
$A42    $E833   UNKNOWN  $E833           ; Unknown Exxx instruction
$A44    $A4A6   LD       I, $4A6         ; Load 4A6 into I
$A46    $D785   DRW      V7, V8, #5      ; Draw 5-byte sprite at V7, V8
$A48    $B89E   JP       V0, $89E        ; Jump to V0 + 89E
$A4A    $D6FE   DRW      V6, VF, #E      ; Draw 14-byte sprite at V6, VF
$A4C    $2733   CALL     $733            ; Call subroutine at 733
$A4E    $A4D2   LD       I, $4D2         ; Load 4D2 into I
$A50    $6FE7   LD       VF, #E7         ; Load 231 into VF
$A52    $F8FE   UNKNOWN  F8FE            ; Unknown Fxxx instruction
$A54    $7B2A   ADD      VB, #2A         ; Add 42 to VB
$A56    $95FA   UNKNOWN  $95FA           ; Unknown 9xxx instruction
$A58    $6BAC   LD       VB, #AC         ; Load 172 into VB
$A5A    $46C6   SNE      V6, #C6         ; Skip if V6 != 198
$A5C    $0A30   SYS      $A30            ; System call to A30
$A5E    $4AD5   SNE      VA, #D5         ; Skip if VA != 213
$A60    $162B   JP       $62B            ; Jump to 62B
$A62    $3C84   SE       VC, #84         ; Skip if VC == 132
$A64    $C44B   RND      V4, #4B         ; V4 = random & 4B
$A66    $08D6   SYS      $8D6            ; System call to 8D6
$A68    $FDF8   UNKNOWN  FDF8            ; Unknown Fxxx instruction
$A6A    $BC16   JP       V0, $C16        ; Jump to V0 + C16
$A6C    $5F61   UNKNOWN  $5F61           ; Unknown 5xxx instruction
$A6E    $EE51   UNKNOWN  $EE51           ; Unknown Exxx instruction
$A70    $7D4A   ADD      VD, #4A         ; Add 74 to VD
$A72    $BD6D   JP       V0, $D6D        ; Jump to V0 + D6D
$A74    $2FD0   CALL     $FD0            ; Call subroutine at FD0
$A76    $A840   LD       I, $840         ; Load 840 into I
$A78    $EC0D   UNKNOWN  $EC0D           ; Unknown Exxx instruction
$A7A    $D531   DRW      V5, V3, #1      ; Draw 1-byte sprite at V5, V3
$A7C    $A3F7   LD       I, $3F7         ; Load 3F7 into I
$A7E    $DFBA   DRW      VF, VB, #A      ; Draw 10-byte sprite at VF, VB
$A80    $D9D1   DRW      V9, VD, #1      ; Draw 1-byte sprite at V9, VD
$A82    $0A45   SYS      $A45            ; System call to A45
$A84    $0005   SYS      $005            ; System call to 005
$A86    $039B   SYS      $39B            ; System call to 39B
$A88    $3482   SE       V4, #82         ; Skip if V4 == 130
$A8A    $D136   DRW      V1, V3, #6      ; Draw 6-byte sprite at V1, V3
$A8C    $E33C   UNKNOWN  $E33C           ; Unknown Exxx instruction
$A8E    $B6F5   JP       V0, $6F5        ; Jump to V0 + 6F5
$A90    $5A23   UNKNOWN  $5A23           ; Unknown 5xxx instruction
$A92    $CEAC   RND      VE, #AC         ; VE = random & AC
$A94    $E4DD   UNKNOWN  $E4DD           ; Unknown Exxx instruction
$A96    $AABE   LD       I, $ABE         ; Load ABE into I
$A98    $41A1   SNE      V1, #A1         ; Skip if V1 != 161
$A9A    $1341   JP       $341            ; Jump to 341
$A9C    $43B0   SNE      V3, #B0         ; Skip if V3 != 176
$A9E    $3771   SE       V7, #71         ; Skip if V7 == 113
$AA0    $24DD   CALL     $4DD            ; Call subroutine at 4DD
$AA2    $5F93   UNKNOWN  $5F93           ; Unknown 5xxx instruction
$AA4    $9AF8   UNKNOWN  $9AF8           ; Unknown 9xxx instruction
$AA6    $9272   UNKNOWN  $9272           ; Unknown 9xxx instruction
$AA8    $DB83   DRW      VB, V8, #3      ; Draw 3-byte sprite at VB, V8
$AAA    $8684   ADD      V6, V8          ; V6 += V8, VF = carry
$AAC    $1F45   JP       $F45            ; Jump to F45
$AAE    $DFBE   DRW      VF, VB, #E      ; Draw 14-byte sprite at VF, VB
$AB0    $EE00   UNKNOWN  $EE00           ; Unknown Exxx instruction
$AB2    $461E   SNE      V6, #1E         ; Skip if V6 != 30
$AB4    $5697   UNKNOWN  $5697           ; Unknown 5xxx instruction
$AB6    $4AAD   SNE      VA, #AD         ; Skip if VA != 173
$AB8    $5D7B   UNKNOWN  $5D7B           ; Unknown 5xxx instruction
$ABA    $680D   LD       V8, #0D         ; Load 13 into V8
$ABC    $13A3   JP       $3A3            ; Jump to 3A3
$ABE    $32D0   SE       V2, #D0         ; Skip if V2 == 208
$AC0    $3685   SE       V6, #85         ; Skip if V6 == 133
$AC2    $25B3   CALL     $5B3            ; Call subroutine at 5B3
$AC4    $3769   SE       V7, #69         ; Skip if V7 == 105
$AC6    $261E   CALL     $61E            ; Call subroutine at 61E
$AC8    $CAE9   RND      VA, #E9         ; VA = random & E9
$ACA    $245E   CALL     $45E            ; Call subroutine at 45E
$ACC    $223D   CALL     $23D            ; Call subroutine at 23D
$ACE    $6EE1   LD       VE, #E1         ; Load 225 into VE
$AD0    $614E   LD       V1, #4E         ; Load 78 into V1
$AD2    $7A48   ADD      VA, #48         ; Add 72 to VA
$AD4    $ED02   UNKNOWN  $ED02           ; Unknown Exxx instruction
$AD6    $F2DC   UNKNOWN  F2DC            ; Unknown Fxxx instruction
$AD8    $8D0A   UNKNOWN  8D0A            ; Unknown 8xxx instruction
$ADA    $876B   UNKNOWN  876B            ; Unknown 8xxx instruction
$ADC    $3B4F   SE       VB, #4F         ; Skip if VB == 79
$ADE    $C19F   RND      V1, #9F         ; V1 = random & 9F
$AE0    $7D35   ADD      VD, #35         ; Add 53 to VD
$AE2    $F98E   UNKNOWN  F98E            ; Unknown Fxxx instruction
$AE4    $F867   UNKNOWN  F867            ; Unknown Fxxx instruction
$AE6    $F57D   UNKNOWN  F57D            ; Unknown Fxxx instruction
$AE8    $C6A1   RND      V6, #A1         ; V6 = random & A1
$AEA    $1527   JP       $527            ; Jump to 527
$AEC    $16F9   JP       $6F9            ; Jump to 6F9
$AEE    $B7B4   JP       V0, $7B4        ; Jump to V0 + 7B4
$AF0    $33B7   SE       V3, #B7         ; Skip if V3 == 183
$AF2    $BA2F   JP       V0, $A2F        ; Jump to V0 + A2F
$AF4    $F90E   UNKNOWN  F90E            ; Unknown Fxxx instruction
$AF6    $35C1   SE       V5, #C1         ; Skip if V5 == 193
$AF8    $3E6B   SE       VE, #6B         ; Skip if VE == 107
$AFA    $F559   UNKNOWN  F559            ; Unknown Fxxx instruction
$AFC    $DA18   DRW      VA, V1, #8      ; Draw 8-byte sprite at VA, V1
$AFE    $C10A   RND      V1, #0A         ; V1 = random & 0A
$B00    $74F3   ADD      V4, #F3         ; Add 243 to V4
$B02    $331B   SE       V3, #1B         ; Skip if V3 == 27
$B04    $436F   SNE      V3, #6F         ; Skip if V3 != 111
$B06    $3414   SE       V4, #14         ; Skip if V4 == 20
$B08    $BC88   JP       V0, $C88        ; Jump to V0 + C88
$B0A    $582B   UNKNOWN  $582B           ; Unknown 5xxx instruction
$B0C    $6E20   LD       VE, #20         ; Load 32 into VE
$B0E    $09D2   SYS      $9D2            ; System call to 9D2
$B10    $23BC   CALL     $3BC            ; Call subroutine at 3BC
$B12    $6530   LD       V5, #30         ; Load 48 into V5
$B14    $3671   SE       V6, #71         ; Skip if V6 == 113
$B16    $D43C   DRW      V4, V3, #C      ; Draw 12-byte sprite at V4, V3
$B18    $6A0B   LD       VA, #0B         ; Load 11 into VA
$B1A    $28EF   CALL     $8EF            ; Call subroutine at 8EF
$B1C    $A553   LD       I, $553         ; Load 553 into I
$B1E    $5CB0   SE       VC, VB          ; Skip if VC == VB
$B20    $ABB3   LD       I, $BB3         ; Load BB3 into I
$B22    $65E1   LD       V5, #E1         ; Load 225 into V5
$B24    $54B7   UNKNOWN  $54B7           ; Unknown 5xxx instruction
$B26    $36CA   SE       V6, #CA         ; Skip if V6 == 202
$B28    $DDBC   DRW      VD, VB, #C      ; Draw 12-byte sprite at VD, VB
$B2A    $EB09   UNKNOWN  $EB09           ; Unknown Exxx instruction
$B2C    $604A   LD       V0, #4A         ; Load 74 into V0
$B2E    $4C94   SNE      VC, #94         ; Skip if VC != 148
$B30    $3669   SE       V6, #69         ; Skip if V6 == 105
$B32    $6B90   LD       VB, #90         ; Load 144 into VB
$B34    $882B   UNKNOWN  882B            ; Unknown 8xxx instruction
$B36    $8D0F   UNKNOWN  8D0F            ; Unknown 8xxx instruction
$B38    $10F2   JP       $0F2            ; Jump to 0F2
$B3A    $73FA   ADD      V3, #FA         ; Add 250 to V3
$B3C    $AD97   LD       I, $D97         ; Load D97 into I
$B3E    $DA1F   DRW      VA, V1, #F      ; Draw 15-byte sprite at VA, V1
$B40    $F20A   LD       V2, K           ; Wait for key press, store in V2
$B42    $E724   UNKNOWN  $E724           ; Unknown Exxx instruction
$B44    $924C   UNKNOWN  $924C           ; Unknown 9xxx instruction
$B46    $A462   LD       I, $462         ; Load 462 into I
$B48    $04EE   SYS      $4EE            ; System call to 4EE
$B4A    $2C24   CALL     $C24            ; Call subroutine at C24
$B4C    $DECA   DRW      VE, VC, #A      ; Draw 10-byte sprite at VE, VC
$B4E    $2D7E   CALL     $D7E            ; Call subroutine at D7E
$B50    $7D34   ADD      VD, #34         ; Add 52 to VD
$B52    $103E   JP       $03E            ; Jump to 03E
$B54    $3357   SE       V3, #57         ; Skip if V3 == 87
$B56    $7DD1   ADD      VD, #D1         ; Add 209 to VD
$B58    $35D0   SE       V5, #D0         ; Skip if V5 == 208
$B5A    $DE52   DRW      VE, V5, #2      ; Draw 2-byte sprite at VE, V5
$B5C    $EB97   UNKNOWN  $EB97           ; Unknown Exxx instruction
$B5E    $8C35   SUB      VC, V3          ; VC -= V3, VF = !borrow
$B60    $4826   SNE      V8, #26         ; Skip if V8 != 38
$B62    $082A   SYS      $82A            ; System call to 82A
$B64    $17AA   JP       $7AA            ; Jump to 7AA
$B66    $768C   ADD      V6, #8C         ; Add 140 to V6
$B68    $5BEC   UNKNOWN  $5BEC           ; Unknown 5xxx instruction
$B6A    $865D   UNKNOWN  865D            ; Unknown 8xxx instruction
$B6C    $9A0F   UNKNOWN  $9A0F           ; Unknown 9xxx instruction
$B6E    $D2FE   DRW      V2, VF, #E      ; Draw 14-byte sprite at V2, VF
$B70    $7A08   ADD      VA, #08         ; Add 8 to VA
$B72    $BB40   JP       V0, $B40        ; Jump to V0 + B40
$B74    $2CF5   CALL     $CF5            ; Call subroutine at CF5
$B76    $B161   JP       V0, $161        ; Jump to V0 + 161
$B78    $8542   AND      V5, V4          ; V5 &= V4
$B7A    $B321   JP       V0, $321        ; Jump to V0 + 321
$B7C    $8EE4   ADD      VE, VE          ; VE += VE, VF = carry
$B7E    $AA23   LD       I, $A23         ; Load A23 into I
$B80    $A3B1   LD       I, $3B1         ; Load 3B1 into I
$B82    $2EC0   CALL     $EC0            ; Call subroutine at EC0
$B84    $FF12   UNKNOWN  FF12            ; Unknown Fxxx instruction
$B86    $C4D9   RND      V4, #D9         ; V4 = random & D9
$B88    $70AF   ADD      V0, #AF         ; Add 175 to V0
$B8A    $E30A   UNKNOWN  $E30A           ; Unknown Exxx instruction
$B8C    $D040   DRW      V0, V4, #0      ; Draw 0-byte sprite at V0, V4
$B8E    $64B9   LD       V4, #B9         ; Load 185 into V4
$B90    $2B31   CALL     $B31            ; Call subroutine at B31
$B92    $CAF4   RND      VA, #F4         ; VA = random & F4
$B94    $7F77   ADD      VF, #77         ; Add 119 to VF
$B96    $F546   UNKNOWN  F546            ; Unknown Fxxx instruction
$B98    $79CD   ADD      V9, #CD         ; Add 205 to V9
$B9A    $2F76   CALL     $F76            ; Call subroutine at F76
$B9C    $2877   CALL     $877            ; Call subroutine at 877
$B9E    $D447   DRW      V4, V4, #7      ; Draw 7-byte sprite at V4, V4
$BA0    $8351   OR       V3, V5          ; V3 |= V5
$BA2    $EB72   UNKNOWN  $EB72           ; Unknown Exxx instruction
$BA4    $913C   UNKNOWN  $913C           ; Unknown 9xxx instruction
$BA6    $62AA   LD       V2, #AA         ; Load 170 into V2
$BA8    $25BF   CALL     $5BF            ; Call subroutine at 5BF
$BAA    $AB36   LD       I, $B36         ; Load B36 into I
$BAC    $62E6   LD       V2, #E6         ; Load 230 into V2
$BAE    $56D9   UNKNOWN  $56D9           ; Unknown 5xxx instruction
$BB0    $CE71   RND      VE, #71         ; VE = random & 71
$BB2    $9396   UNKNOWN  $9396           ; Unknown 9xxx instruction
$BB4    $11C2   JP       $1C2            ; Jump to 1C2
$BB6    $E58F   UNKNOWN  $E58F           ; Unknown Exxx instruction
$BB8    $E8E4   UNKNOWN  $E8E4           ; Unknown Exxx instruction
$BBA    $3AF1   SE       VA, #F1         ; Skip if VA == 241
$BBC    $5892   UNKNOWN  $5892           ; Unknown 5xxx instruction
$BBE    $DBC6   DRW      VB, VC, #6      ; Draw 6-byte sprite at VB, VC
$BC0    $5046   UNKNOWN  $5046           ; Unknown 5xxx instruction
$BC2    $D483   DRW      V4, V8, #3      ; Draw 3-byte sprite at V4, V8
$BC4    $2368   CALL     $368            ; Call subroutine at 368
$BC6    $638F   LD       V3, #8F         ; Load 143 into V3
$BC8    $805E   SHL      V0              ; V0 <<= 1, VF = MSB
$BCA    $DF79   DRW      VF, V7, #9      ; Draw 9-byte sprite at VF, V7
$BCC    $243F   CALL     $43F            ; Call subroutine at 43F
$BCE    $3E88   SE       VE, #88         ; Skip if VE == 136
$BD0    $3A2B   SE       VA, #2B         ; Skip if VA == 43
$BD2    $D1E0   DRW      V1, VE, #0      ; Draw 0-byte sprite at V1, VE
$BD4    $B5B5   JP       V0, $5B5        ; Jump to V0 + 5B5
$BD6    $2070   CALL     $070            ; Call subroutine at 070
$BD8    $5C5B   UNKNOWN  $5C5B           ; Unknown 5xxx instruction
$BDA    $3F47   SE       VF, #47         ; Skip if VF == 71
$BDC    $EE3F   UNKNOWN  $EE3F           ; Unknown Exxx instruction
$BDE    $9251   UNKNOWN  $9251           ; Unknown 9xxx instruction
$BE0    $4F15   SNE      VF, #15         ; Skip if VF != 21
$BE2    $DD2A   DRW      VD, V2, #A      ; Draw 10-byte sprite at VD, V2
$BE4    $7F95   ADD      VF, #95         ; Add 149 to VF
$BE6    $A7FD   LD       I, $7FD         ; Load 7FD into I
$BE8    $9978   UNKNOWN  $9978           ; Unknown 9xxx instruction
$BEA    $9381   UNKNOWN  $9381           ; Unknown 9xxx instruction
$BEC    $C628   RND      V6, #28         ; V6 = random & 28
$BEE    $C927   RND      V9, #27         ; V9 = random & 27
$BF0    $BECE   JP       V0, $ECE        ; Jump to V0 + ECE
$BF2    $EAFB   UNKNOWN  $EAFB           ; Unknown Exxx instruction
$BF4    $7F86   ADD      VF, #86         ; Add 134 to VF
$BF6    $739C   ADD      V3, #9C         ; Add 156 to V3
$BF8    $08D3   SYS      $8D3            ; System call to 8D3
$BFA    $4B99   SNE      VB, #99         ; Skip if VB != 153
$BFC    $D0E2   DRW      V0, VE, #2      ; Draw 2-byte sprite at V0, VE
$BFE    $A489   LD       I, $489         ; Load 489 into I
$C00    $E912   UNKNOWN  $E912           ; Unknown Exxx instruction
$C02    $6E64   LD       VE, #64         ; Load 100 into VE
$C04    $ACD3   LD       I, $CD3         ; Load CD3 into I
$C06    $C246   RND      V2, #46         ; V2 = random & 46
$C08    $2D46   CALL     $D46            ; Call subroutine at D46
$C0A    $21E3   CALL     $1E3            ; Call subroutine at 1E3
$C0C    $F5BD   UNKNOWN  F5BD            ; Unknown Fxxx instruction
$C0E    $FE01   UNKNOWN  FE01            ; Unknown Fxxx instruction
$C10    $7C66   ADD      VC, #66         ; Add 102 to VC
$C12    $7559   ADD      V5, #59         ; Add 89 to V5
$C14    $B96D   JP       V0, $96D        ; Jump to V0 + 96D
$C16    $9437   UNKNOWN  $9437           ; Unknown 9xxx instruction
$C18    $2E7D   CALL     $E7D            ; Call subroutine at E7D
$C1A    $D78A   DRW      V7, V8, #A      ; Draw 10-byte sprite at V7, V8
$C1C    $231E   CALL     $31E            ; Call subroutine at 31E
$C1E    $6499   LD       V4, #99         ; Load 153 into V4
$C20    $6901   LD       V9, #01         ; Load 1 into V9
$C22    $6DC2   LD       VD, #C2         ; Load 194 into VD
$C24    $6A81   LD       VA, #81         ; Load 129 into VA
$C26    $CB29   RND      VB, #29         ; VB = random & 29
$C28    $B74A   JP       V0, $74A        ; Jump to V0 + 74A
$C2A    $BB91   JP       V0, $B91        ; Jump to V0 + B91
$C2C    $7D56   ADD      VD, #56         ; Add 86 to VD
$C2E    $CBAD   RND      VB, #AD         ; VB = random & AD
$C30    $DC16   DRW      VC, V1, #6      ; Draw 6-byte sprite at VC, V1
$C32    $A72A   LD       I, $72A         ; Load 72A into I
$C34    $6D8C   LD       VD, #8C         ; Load 140 into VD
$C36    $079C   SYS      $79C            ; System call to 79C
$C38    $F2F1   UNKNOWN  F2F1            ; Unknown Fxxx instruction
$C3A    $91B2   UNKNOWN  $91B2           ; Unknown 9xxx instruction
$C3C    $0607   SYS      $607            ; System call to 607
$C3E    $D00F   DRW      V0, V0, #F      ; Draw 15-byte sprite at V0, V0
$C40    $1661   JP       $661            ; Jump to 661
$C42    $975C   UNKNOWN  $975C           ; Unknown 9xxx instruction
$C44    $95C0   SNE      V5, VC          ; Skip if V5 != VC
$C46    $9D9C   UNKNOWN  $9D9C           ; Unknown 9xxx instruction
$C48    $D2C0   DRW      V2, VC, #0      ; Draw 0-byte sprite at V2, VC
$C4A    $EE41   UNKNOWN  $EE41           ; Unknown Exxx instruction
$C4C    $D8E6   DRW      V8, VE, #6      ; Draw 6-byte sprite at V8, VE
$C4E    $832E   SHL      V3              ; V3 <<= 1, VF = MSB
$C50    $67FB   LD       V7, #FB         ; Load 251 into V7
$C52    $0CCE   SYS      $CCE            ; System call to CCE
$C54    $387E   SE       V8, #7E         ; Skip if V8 == 126
$C56    $2A7C   CALL     $A7C            ; Call subroutine at A7C
$C58    $CCCF   RND      VC, #CF         ; VC = random & CF
$C5A    $5D7A   UNKNOWN  $5D7A           ; Unknown 5xxx instruction
$C5C    $BFD4   JP       V0, $FD4        ; Jump to V0 + FD4
$C5E    $B62F   JP       V0, $62F        ; Jump to V0 + 62F
$C60    $4374   SNE      V3, #74         ; Skip if V3 != 116
$C62    $5612   UNKNOWN  $5612           ; Unknown 5xxx instruction
$C64    $2DCD   CALL     $DCD            ; Call subroutine at DCD
$C66    $67AD   LD       V7, #AD         ; Load 173 into V7
$C68    $4F62   SNE      VF, #62         ; Skip if VF != 98
$C6A    $9CAB   UNKNOWN  $9CAB           ; Unknown 9xxx instruction
$C6C    $E906   UNKNOWN  $E906           ; Unknown Exxx instruction
$C6E    $DC68   DRW      VC, V6, #8      ; Draw 8-byte sprite at VC, V6
$C70    $C5BB   RND      V5, #BB         ; V5 = random & BB
$C72    $0B60   SYS      $B60            ; System call to B60
$C74    $8545   SUB      V5, V4          ; V5 -= V4, VF = !borrow
$C76    $9505   UNKNOWN  $9505           ; Unknown 9xxx instruction
$C78    $1146   JP       $146            ; Jump to 146
$C7A    $94DF   UNKNOWN  $94DF           ; Unknown 9xxx instruction
$C7C    $5137   UNKNOWN  $5137           ; Unknown 5xxx instruction
$C7E    $8A03   XOR      VA, V0          ; VA ^= V0
$C80    $E1E9   UNKNOWN  $E1E9           ; Unknown Exxx instruction
$C82    $43DD   SNE      V3, #DD         ; Skip if V3 != 221
$C84    $2664   CALL     $664            ; Call subroutine at 664
$C86    $04BC   SYS      $4BC            ; System call to 4BC
$C88    $5F49   UNKNOWN  $5F49           ; Unknown 5xxx instruction
$C8A    $84EC   UNKNOWN  84EC            ; Unknown 8xxx instruction
$C8C    $41B3   SNE      V1, #B3         ; Skip if V1 != 179
$C8E    $3155   SE       V1, #55         ; Skip if V1 == 85
$C90    $048E   SYS      $48E            ; System call to 48E
$C92    $B9EA   JP       V0, $9EA        ; Jump to V0 + 9EA
$C94    $268A   CALL     $68A            ; Call subroutine at 68A
$C96    $0DE9   SYS      $DE9            ; System call to DE9
$C98    $AF35   LD       I, $F35         ; Load F35 into I
$C9A    $78F2   ADD      V8, #F2         ; Add 242 to V8
$C9C    $600C   LD       V0, #0C         ; Load 12 into V0
$C9E    $78BA   ADD      V8, #BA         ; Add 186 to V8
$CA0    $B6F3   JP       V0, $6F3        ; Jump to V0 + 6F3
$CA2    $4A76   SNE      VA, #76         ; Skip if VA != 118
$CA4    $0105   SYS      $105            ; System call to 105
$CA6    $58C3   UNKNOWN  $58C3           ; Unknown 5xxx instruction
$CA8    $C937   RND      V9, #37         ; V9 = random & 37
$CAA    $6C88   LD       VC, #88         ; Load 136 into VC
$CAC    $3CC7   SE       VC, #C7         ; Skip if VC == 199
$CAE    $4CF5   SNE      VC, #F5         ; Skip if VC != 245
$CB0    $9570   SNE      V5, V7          ; Skip if V5 != V7
$CB2    $363C   SE       V6, #3C         ; Skip if V6 == 60
$CB4    $704C   ADD      V0, #4C         ; Add 76 to V0
$CB6    $472C   SNE      V7, #2C         ; Skip if V7 != 44
$CB8    $95A0   SNE      V5, VA          ; Skip if V5 != VA
$CBA    $49A4   SNE      V9, #A4         ; Skip if V9 != 164
$CBC    $3C27   SE       VC, #27         ; Skip if VC == 39
$CBE    $55C4   UNKNOWN  $55C4           ; Unknown 5xxx instruction
$CC0    $95DB   UNKNOWN  $95DB           ; Unknown 9xxx instruction
$CC2    $7BC7   ADD      VB, #C7         ; Add 199 to VB
$CC4    $EF91   UNKNOWN  $EF91           ; Unknown Exxx instruction
$CC6    $6C66   LD       VC, #66         ; Load 102 into VC
$CC8    $886D   UNKNOWN  886D            ; Unknown 8xxx instruction
$CCA    $743A   ADD      V4, #3A         ; Add 58 to V4
$CCC    $6D45   LD       VD, #45         ; Load 69 into VD
$CCE    $C7F9   RND      V7, #F9         ; V7 = random & F9
$CD0    $FF03   UNKNOWN  FF03            ; Unknown Fxxx instruction
$CD2    $7912   ADD      V9, #12         ; Add 18 to V9
$CD4    $B408   JP       V0, $408        ; Jump to V0 + 408
$CD6    $FA63   UNKNOWN  FA63            ; Unknown Fxxx instruction
$CD8    $84A5   SUB      V4, VA          ; V4 -= VA, VF = !borrow
$CDA    $CF17   RND      VF, #17         ; VF = random & 17
$CDC    $D594   DRW      V5, V9, #4      ; Draw 4-byte sprite at V5, V9
$CDE    $0678   SYS      $678            ; System call to 678
$CE0    $335A   SE       V3, #5A         ; Skip if V3 == 90
$CE2    $C3D9   RND      V3, #D9         ; V3 = random & D9
$CE4    $DD5D   DRW      VD, V5, #D      ; Draw 13-byte sprite at VD, V5
$CE6    $8278   UNKNOWN  8278            ; Unknown 8xxx instruction
$CE8    $C360   RND      V3, #60         ; V3 = random & 60
$CEA    $A6BB   LD       I, $6BB         ; Load 6BB into I
$CEC    $57AD   UNKNOWN  $57AD           ; Unknown 5xxx instruction
$CEE    $4BB4   SNE      VB, #B4         ; Skip if VB != 180
$CF0    $072A   SYS      $72A            ; System call to 72A
$CF2    $01A0   SYS      $1A0            ; System call to 1A0
$CF4    $EF73   UNKNOWN  $EF73           ; Unknown Exxx instruction
$CF6    $90D2   UNKNOWN  $90D2           ; Unknown 9xxx instruction
$CF8    $8C9F   UNKNOWN  8C9F            ; Unknown 8xxx instruction
$CFA    $F30E   UNKNOWN  F30E            ; Unknown Fxxx instruction
$CFC    $40DC   SNE      V0, #DC         ; Skip if V0 != 220
$CFE    $2467   CALL     $467            ; Call subroutine at 467
$D00    $6703   LD       V7, #03         ; Load 3 into V7
$D02    $24FE   CALL     $4FE            ; Call subroutine at 4FE
$D04    $74FF   ADD      V4, #FF         ; Add 255 to V4
$D06    $4F10   SNE      VF, #10         ; Skip if VF != 16
$D08    $2FD6   CALL     $FD6            ; Call subroutine at FD6
$D0A    $7E46   ADD      VE, #46         ; Add 70 to VE
$D0C    $111D   JP       $11D            ; Jump to 11D
$D0E    $AA6B   LD       I, $A6B         ; Load A6B into I
$D10    $BC9A   JP       V0, $C9A        ; Jump to V0 + C9A
$D12    $B413   JP       V0, $413        ; Jump to V0 + 413
$D14    $8BC4   ADD      VB, VC          ; VB += VC, VF = carry
$D16    $CF1C   RND      VF, #1C         ; VF = random & 1C
$D18    $601A   LD       V0, #1A         ; Load 26 into V0
$D1A    $CFE2   RND      VF, #E2         ; VF = random & E2
$D1C    $0652   SYS      $652            ; System call to 652
$D1E    $6E19   LD       VE, #19         ; Load 25 into VE
$D20    $CC59   RND      VC, #59         ; VC = random & 59
$D22    $3C5D   SE       VC, #5D         ; Skip if VC == 93
$D24    $EFEA   UNKNOWN  $EFEA           ; Unknown Exxx instruction
$D26    $61EA   LD       V1, #EA         ; Load 234 into V1
$D28    $5A98   UNKNOWN  $5A98           ; Unknown 5xxx instruction
$D2A    $3DDA   SE       VD, #DA         ; Skip if VD == 218
$D2C    $C98D   RND      V9, #8D         ; V9 = random & 8D
$D2E    $99DC   UNKNOWN  $99DC           ; Unknown 9xxx instruction
$D30    $D108   DRW      V1, V0, #8      ; Draw 8-byte sprite at V1, V0
$D32    $A9E6   LD       I, $9E6         ; Load 9E6 into I
$D34    $2F7E   CALL     $F7E            ; Call subroutine at F7E
$D36    $A484   LD       I, $484         ; Load 484 into I
$D38    $467D   SNE      V6, #7D         ; Skip if V6 != 125
$D3A    $2C4E   CALL     $C4E            ; Call subroutine at C4E
$D3C    $A922   LD       I, $922         ; Load 922 into I
$D3E    $EDEB   UNKNOWN  $EDEB           ; Unknown Exxx instruction
$D40    $C992   RND      V9, #92         ; V9 = random & 92
$D42    $DD75   DRW      VD, V7, #5      ; Draw 5-byte sprite at VD, V7
$D44    $6E72   LD       VE, #72         ; Load 114 into VE
$D46    $C478   RND      V4, #78         ; V4 = random & 78
$D48    $5460   SE       V4, V6          ; Skip if V4 == V6
$D4A    $E9CB   UNKNOWN  $E9CB           ; Unknown Exxx instruction
$D4C    $07CD   SYS      $7CD            ; System call to 7CD
$D4E    $9F7A   UNKNOWN  $9F7A           ; Unknown 9xxx instruction
$D50    $79A5   ADD      V9, #A5         ; Add 165 to V9
$D52    $3C3C   SE       VC, #3C         ; Skip if VC == 60
$D54    $19AA   JP       $9AA            ; Jump to 9AA
$D56    $DBCE   DRW      VB, VC, #E      ; Draw 14-byte sprite at VB, VC
$D58    $960B   UNKNOWN  $960B           ; Unknown 9xxx instruction
$D5A    $BDCD   JP       V0, $DCD        ; Jump to V0 + DCD
$D5C    $27EB   CALL     $7EB            ; Call subroutine at 7EB
$D5E    $4CB5   SNE      VC, #B5         ; Skip if VC != 181
$D60    $0355   SYS      $355            ; System call to 355
$D62    $00FE   SYS      $0FE            ; System call to 0FE
$D64    $AF12   LD       I, $F12         ; Load F12 into I
$D66    $A62B   LD       I, $62B         ; Load 62B into I
$D68    $6650   LD       V6, #50         ; Load 80 into V6
$D6A    $7A27   ADD      VA, #27         ; Add 39 to VA
$D6C    $4582   SNE      V5, #82         ; Skip if V5 != 130
$D6E    $9ADC   UNKNOWN  $9ADC           ; Unknown 9xxx instruction
$D70    $2BB2   CALL     $BB2            ; Call subroutine at BB2
$D72    $345E   SE       V4, #5E         ; Skip if V4 == 94
$D74    $3BDA   SE       VB, #DA         ; Skip if VB == 218
$D76    $BFE6   JP       V0, $FE6        ; Jump to V0 + FE6
$D78    $FEF6   UNKNOWN  FEF6            ; Unknown Fxxx instruction
$D7A    $5FED   UNKNOWN  $5FED           ; Unknown 5xxx instruction
$D7C    $F610   UNKNOWN  F610            ; Unknown Fxxx instruction
$D7E    $8EB5   SUB      VE, VB          ; VE -= VB, VF = !borrow
$D80    $1CFE   JP       $CFE            ; Jump to CFE
$D82    $D7C2   DRW      V7, VC, #2      ; Draw 2-byte sprite at V7, VC
$D84    $1DD5   JP       $DD5            ; Jump to DD5
$D86    $0E19   SYS      $E19            ; System call to E19
$D88    $8AF0   LD       VA, VF          ; VA = VF
$D8A    $5896   UNKNOWN  $5896           ; Unknown 5xxx instruction
$D8C    $4791   SNE      V7, #91         ; Skip if V7 != 145
$D8E    $A275   LD       I, $275         ; Load 275 into I
$D90    $665E   LD       V6, #5E         ; Load 94 into V6
$D92    $0510   SYS      $510            ; System call to 510
$D94    $4BA2   SNE      VB, #A2         ; Skip if VB != 162
$D96    $64B9   LD       V4, #B9         ; Load 185 into V4
$D98    $DF0B   DRW      VF, V0, #B      ; Draw 11-byte sprite at VF, V0
$D9A    $4063   SNE      V0, #63         ; Skip if V0 != 99
$D9C    $3BC9   SE       VB, #C9         ; Skip if VB == 201
$D9E    $3EC5   SE       VE, #C5         ; Skip if VE == 197
$DA0    $EE47   UNKNOWN  $EE47           ; Unknown Exxx instruction
$DA2    $7D20   ADD      VD, #20         ; Add 32 to VD
$DA4    $E9D7   UNKNOWN  $E9D7           ; Unknown Exxx instruction
$DA6    $9F87   UNKNOWN  $9F87           ; Unknown 9xxx instruction
$DA8    $69C2   LD       V9, #C2         ; Load 194 into V9
$DAA    $51EE   UNKNOWN  $51EE           ; Unknown 5xxx instruction
$DAC    $83C7   SUBN     V3, VC          ; V3 = VC - V3, VF = !borrow
$DAE    $FCDF   UNKNOWN  FCDF            ; Unknown Fxxx instruction
$DB0    $304A   SE       V0, #4A         ; Skip if V0 == 74
$DB2    $A43B   LD       I, $43B         ; Load 43B into I
$DB4    $E8EA   UNKNOWN  $E8EA           ; Unknown Exxx instruction
$DB6    $E271   UNKNOWN  $E271           ; Unknown Exxx instruction
$DB8    $A047   LD       I, $047         ; Load 047 into I
$DBA    $EAE1   UNKNOWN  $EAE1           ; Unknown Exxx instruction
$DBC    $158D   JP       $58D            ; Jump to 58D
$DBE    $3EFE   SE       VE, #FE         ; Skip if VE == 254
$DC0    $FD6B   UNKNOWN  FD6B            ; Unknown Fxxx instruction
$DC2    $BF18   JP       V0, $F18        ; Jump to V0 + F18
$DC4    $DB91   DRW      VB, V9, #1      ; Draw 1-byte sprite at VB, V9
$DC6    $6EA3   LD       VE, #A3         ; Load 163 into VE
$DC8    $D764   DRW      V7, V6, #4      ; Draw 4-byte sprite at V7, V6
$DCA    $4073   SNE      V0, #73         ; Skip if V0 != 115
$DCC    $5727   UNKNOWN  $5727           ; Unknown 5xxx instruction
$DCE    $F2F5   UNKNOWN  F2F5            ; Unknown Fxxx instruction
$DD0    $93B9   UNKNOWN  $93B9           ; Unknown 9xxx instruction
$DD2    $5746   UNKNOWN  $5746           ; Unknown 5xxx instruction
$DD4    $C133   RND      V1, #33         ; V1 = random & 33
$DD6    $9AF3   UNKNOWN  $9AF3           ; Unknown 9xxx instruction
$DD8    $EEA2   UNKNOWN  $EEA2           ; Unknown Exxx instruction
$DDA    $89B4   ADD      V9, VB          ; V9 += VB, VF = carry
$DDC    $2C0D   CALL     $C0D            ; Call subroutine at C0D
$DDE    $88D5   SUB      V8, VD          ; V8 -= VD, VF = !borrow
$DE0    $CB81   RND      VB, #81         ; VB = random & 81
$DE2    $02EC   SYS      $2EC            ; System call to 2EC
$DE4    $7A27   ADD      VA, #27         ; Add 39 to VA
$DE6    $E565   UNKNOWN  $E565           ; Unknown Exxx instruction
$DE8    $9D55   UNKNOWN  $9D55           ; Unknown 9xxx instruction
$DEA    $0746   SYS      $746            ; System call to 746
$DEC    $0206   SYS      $206            ; System call to 206
$DEE    $D66F   DRW      V6, V6, #F      ; Draw 15-byte sprite at V6, V6
$DF0    $DA38   DRW      VA, V3, #8      ; Draw 8-byte sprite at VA, V3
$DF2    $4E4C   SNE      VE, #4C         ; Skip if VE != 76
$DF4    $2F88   CALL     $F88            ; Call subroutine at F88
$DF6    $7222   ADD      V2, #22         ; Add 34 to V2
$DF8    $F253   UNKNOWN  F253            ; Unknown Fxxx instruction
$DFA    $7EEA   ADD      VE, #EA         ; Add 234 to VE
$DFC    $FE85   UNKNOWN  FE85            ; Unknown Fxxx instruction
$DFE    $DD7A   DRW      VD, V7, #A      ; Draw 10-byte sprite at VD, V7
$E00    $177A   JP       $77A            ; Jump to 77A
$E02    $0927   SYS      $927            ; System call to 927
$E04    $A675   LD       I, $675         ; Load 675 into I
$E06    $7ABD   ADD      VA, #BD         ; Add 189 to VA
$E08    $FF65   LD       VF, [I]         ; Load V0-VF from I
$E0A    $A1C0   LD       I, $1C0         ; Load 1C0 into I
$E0C    $0112   SYS      $112            ; System call to 112
$E0E    $B8D3   JP       V0, $8D3        ; Jump to V0 + 8D3
$E10    $EFF7   UNKNOWN  $EFF7           ; Unknown Exxx instruction
$E12    $2FD9   CALL     $FD9            ; Call subroutine at FD9
$E14    $A5EE   LD       I, $5EE         ; Load 5EE into I
$E16    $1890   JP       $890            ; Jump to 890
$E18    $C3CF   RND      V3, #CF         ; V3 = random & CF
$E1A    $8D9A   UNKNOWN  8D9A            ; Unknown 8xxx instruction
$E1C    $4C92   SNE      VC, #92         ; Skip if VC != 146
$E1E    $DFBC   DRW      VF, VB, #C      ; Draw 12-byte sprite at VF, VB
$E20    $95A3   UNKNOWN  $95A3           ; Unknown 9xxx instruction
$E22    $68F1   LD       V8, #F1         ; Load 241 into V8
$E24    $BF95   JP       V0, $F95        ; Jump to V0 + F95
$E26    $D05A   DRW      V0, V5, #A      ; Draw 10-byte sprite at V0, V5
$E28    $7129   ADD      V1, #29         ; Add 41 to V1
$E2A    $1D68   JP       $D68            ; Jump to D68
$E2C    $AE0F   LD       I, $E0F         ; Load E0F into I
$E2E    $B850   JP       V0, $850        ; Jump to V0 + 850
$E30    $2C03   CALL     $C03            ; Call subroutine at C03
$E32    $CD6A   RND      VD, #6A         ; VD = random & 6A
$E34    $0CA7   SYS      $CA7            ; System call to CA7
$E36    $E991   UNKNOWN  $E991           ; Unknown Exxx instruction
$E38    $ED76   UNKNOWN  $ED76           ; Unknown Exxx instruction
$E3A    $4E85   SNE      VE, #85         ; Skip if VE != 133
$E3C    $BDD9   JP       V0, $DD9        ; Jump to V0 + DD9
$E3E    $6981   LD       V9, #81         ; Load 129 into V9
$E40    $B5FA   JP       V0, $5FA        ; Jump to V0 + 5FA
$E42    $F9D7   UNKNOWN  F9D7            ; Unknown Fxxx instruction
$E44    $17F8   JP       $7F8            ; Jump to 7F8
$E46    $E4A6   UNKNOWN  $E4A6           ; Unknown Exxx instruction
$E48    $342A   SE       V4, #2A         ; Skip if V4 == 42
$E4A    $CE2E   RND      VE, #2E         ; VE = random & 2E
$E4C    $D2E1   DRW      V2, VE, #1      ; Draw 1-byte sprite at V2, VE
$E4E    $76A8   ADD      V6, #A8         ; Add 168 to V6
$E50    $D24B   DRW      V2, V4, #B      ; Draw 11-byte sprite at V2, V4
$E52    $EFE3   UNKNOWN  $EFE3           ; Unknown Exxx instruction
$E54    $FE58   UNKNOWN  FE58            ; Unknown Fxxx instruction
$E56    $05E8   SYS      $5E8            ; System call to 5E8
$E58    $69C5   LD       V9, #C5         ; Load 197 into V9
$E5A    $B390   JP       V0, $390        ; Jump to V0 + 390
$E5C    $D006   DRW      V0, V0, #6      ; Draw 6-byte sprite at V0, V0
$E5E    $6A8D   LD       VA, #8D         ; Load 141 into VA
$E60    $0E87   SYS      $E87            ; System call to E87
$E62    $BF97   JP       V0, $F97        ; Jump to V0 + F97
$E64    $D2AC   DRW      V2, VA, #C      ; Draw 12-byte sprite at V2, VA
$E66    $B63D   JP       V0, $63D        ; Jump to V0 + 63D
$E68    $0B64   SYS      $B64            ; System call to B64
$E6A    $E15B   UNKNOWN  $E15B           ; Unknown Exxx instruction
$E6C    $DA21   DRW      VA, V2, #1      ; Draw 1-byte sprite at VA, V2
$E6E    $1F45   JP       $F45            ; Jump to F45
$E70    $55EC   UNKNOWN  $55EC           ; Unknown 5xxx instruction
$E72    $1356   JP       $356            ; Jump to 356
$E74    $8464   ADD      V4, V6          ; V4 += V6, VF = carry
$E76    $8D38   UNKNOWN  8D38            ; Unknown 8xxx instruction
$E78    $C4B5   RND      V4, #B5         ; V4 = random & B5
$E7A    $2CE9   CALL     $CE9            ; Call subroutine at CE9
$E7C    $19BA   JP       $9BA            ; Jump to 9BA
$E7E    $78F7   ADD      V8, #F7         ; Add 247 to V8
$E80    $1DBF   JP       $DBF            ; Jump to DBF
$E82    $47DA   SNE      V7, #DA         ; Skip if V7 != 218
$E84    $837D   UNKNOWN  837D            ; Unknown 8xxx instruction
$E86    $13F0   JP       $3F0            ; Jump to 3F0
$E88    $22FB   CALL     $2FB            ; Call subroutine at 2FB
$E8A    $5CAC   UNKNOWN  $5CAC           ; Unknown 5xxx instruction
$E8C    $FCAC   UNKNOWN  FCAC            ; Unknown Fxxx instruction
$E8E    $F689   UNKNOWN  F689            ; Unknown Fxxx instruction
$E90    $6FB6   LD       VF, #B6         ; Load 182 into VF
$E92    $4C2F   SNE      VC, #2F         ; Skip if VC != 47
$E94    $B564   JP       V0, $564        ; Jump to V0 + 564
$E96    $83F9   UNKNOWN  83F9            ; Unknown 8xxx instruction
$E98    $6BE9   LD       VB, #E9         ; Load 233 into VB
$E9A    $93BE   UNKNOWN  $93BE           ; Unknown 9xxx instruction
$E9C    $7F63   ADD      VF, #63         ; Add 99 to VF
$E9E    $C979   RND      V9, #79         ; V9 = random & 79
$EA0    $B73C   JP       V0, $73C        ; Jump to V0 + 73C
$EA2    $2E37   CALL     $E37            ; Call subroutine at E37
$EA4    $0A7D   SYS      $A7D            ; System call to A7D
$EA6    $A423   LD       I, $423         ; Load 423 into I
$EA8    $CA0F   RND      VA, #0F         ; VA = random & 0F
$EAA    $605E   LD       V0, #5E         ; Load 94 into V0
$EAC    $9DC2   UNKNOWN  $9DC2           ; Unknown 9xxx instruction
$EAE    $98AA   UNKNOWN  $98AA           ; Unknown 9xxx instruction
$EB0    $7FA1   ADD      VF, #A1         ; Add 161 to VF
$EB2    $63F7   LD       V3, #F7         ; Load 247 into V3
$EB4    $651A   LD       V5, #1A         ; Load 26 into V5
$EB6    $8A15   SUB      VA, V1          ; VA -= V1, VF = !borrow
$EB8    $0061   SYS      $061            ; System call to 061
$EBA    $0521   SYS      $521            ; System call to 521
$EBC    $9474   UNKNOWN  $9474           ; Unknown 9xxx instruction
$EBE    $B5B9   JP       V0, $5B9        ; Jump to V0 + 5B9
$EC0    $471F   SNE      V7, #1F         ; Skip if V7 != 31
$EC2    $3022   SE       V0, #22         ; Skip if V0 == 34
$EC4    $A5DE   LD       I, $5DE         ; Load 5DE into I
$EC6    $6589   LD       V5, #89         ; Load 137 into V5
$EC8    $701C   ADD      V0, #1C         ; Add 28 to V0
$ECA    $63F9   LD       V3, #F9         ; Load 249 into V3
$ECC    $F364   UNKNOWN  F364            ; Unknown Fxxx instruction
$ECE    $30AE   SE       V0, #AE         ; Skip if V0 == 174
$ED0    $3AFD   SE       VA, #FD         ; Skip if VA == 253
$ED2    $5396   UNKNOWN  $5396           ; Unknown 5xxx instruction
$ED4    $1924   JP       $924            ; Jump to 924
$ED6    $F965   LD       V9, [I]         ; Load V0-V9 from I
$ED8    $39D1   SE       V9, #D1         ; Skip if V9 == 209
$EDA    $928D   UNKNOWN  $928D           ; Unknown 9xxx instruction
$EDC    $B8B3   JP       V0, $8B3        ; Jump to V0 + 8B3
$EDE    $A63E   LD       I, $63E         ; Load 63E into I
$EE0    $A961   LD       I, $961         ; Load 961 into I
$EE2    $8D9C   UNKNOWN  8D9C            ; Unknown 8xxx instruction
$EE4    $84A8   UNKNOWN  84A8            ; Unknown 8xxx instruction
$EE6    $A833   LD       I, $833         ; Load 833 into I
$EE8    $A9A8   LD       I, $9A8         ; Load 9A8 into I
$EEA    $3ED8   SE       VE, #D8         ; Skip if VE == 216
$EEC    $A55B   LD       I, $55B         ; Load 55B into I
$EEE    $9807   UNKNOWN  $9807           ; Unknown 9xxx instruction
$EF0    $3BDF   SE       VB, #DF         ; Skip if VB == 223
$EF2    $D402   DRW      V4, V0, #2      ; Draw 2-byte sprite at V4, V0
$EF4    $1E73   JP       $E73            ; Jump to E73
$EF6    $A988   LD       I, $988         ; Load 988 into I
$EF8    $642B   LD       V4, #2B         ; Load 43 into V4
$EFA    $7CFC   ADD      VC, #FC         ; Add 252 to VC
$EFC    $0E7C   SYS      $E7C            ; System call to E7C
$EFE    $157F   JP       $57F            ; Jump to 57F
$F00    $B174   JP       V0, $174        ; Jump to V0 + 174
$F02    $1E00   JP       $E00            ; Jump to E00
$F04    $98D7   UNKNOWN  $98D7           ; Unknown 9xxx instruction
$F06    $9911   UNKNOWN  $9911           ; Unknown 9xxx instruction
$F08    $745D   ADD      V4, #5D         ; Add 93 to V4
$F0A    $F636   UNKNOWN  F636            ; Unknown Fxxx instruction
$F0C    $11BD   JP       $1BD            ; Jump to 1BD
$F0E    $5A46   UNKNOWN  $5A46           ; Unknown 5xxx instruction
$F10    $26B9   CALL     $6B9            ; Call subroutine at 6B9
$F12    $20D3   CALL     $0D3            ; Call subroutine at 0D3
$F14    $D629   DRW      V6, V2, #9      ; Draw 9-byte sprite at V6, V2
$F16    $96E8   UNKNOWN  $96E8           ; Unknown 9xxx instruction
$F18    $BC23   JP       V0, $C23        ; Jump to V0 + C23
$F1A    $B763   JP       V0, $763        ; Jump to V0 + 763
$F1C    $889A   UNKNOWN  889A            ; Unknown 8xxx instruction
$F1E    $E6C0   UNKNOWN  $E6C0           ; Unknown Exxx instruction
$F20    $3E34   SE       VE, #34         ; Skip if VE == 52
$F22    $1024   JP       $024            ; Jump to 024
$F24    $7B41   ADD      VB, #41         ; Add 65 to VB
$F26    $795C   ADD      V9, #5C         ; Add 92 to V9
$F28    $B068   JP       V0, $068        ; Jump to V0 + 068
$F2A    $33C0   SE       V3, #C0         ; Skip if V3 == 192
$F2C    $8434   ADD      V4, V3          ; V4 += V3, VF = carry
$F2E    $CC38   RND      VC, #38         ; VC = random & 38
$F30    $58A6   UNKNOWN  $58A6           ; Unknown 5xxx instruction
$F32    $77A0   ADD      V7, #A0         ; Add 160 to V7
$F34    $3ED3   SE       VE, #D3         ; Skip if VE == 211
$F36    $98C8   UNKNOWN  $98C8           ; Unknown 9xxx instruction
$F38    $94FC   UNKNOWN  $94FC           ; Unknown 9xxx instruction
$F3A    $27CB   CALL     $7CB            ; Call subroutine at 7CB
$F3C    $103A   JP       $03A            ; Jump to 03A
$F3E    $DAE7   DRW      VA, VE, #7      ; Draw 7-byte sprite at VA, VE
$F40    $3CF6   SE       VC, #F6         ; Skip if VC == 246
$F42    $0F7F   SYS      $F7F            ; System call to F7F
$F44    $CFA9   RND      VF, #A9         ; VF = random & A9
$F46    $7893   ADD      V8, #93         ; Add 147 to V8
$F48    $BC40   JP       V0, $C40        ; Jump to V0 + C40
$F4A    $762B   ADD      V6, #2B         ; Add 43 to V6
$F4C    $3CAA   SE       VC, #AA         ; Skip if VC == 170
$F4E    $8ADF   UNKNOWN  8ADF            ; Unknown 8xxx instruction
$F50    $F39F   UNKNOWN  F39F            ; Unknown Fxxx instruction
$F52    $F0E5   UNKNOWN  F0E5            ; Unknown Fxxx instruction
$F54    $DCAC   DRW      VC, VA, #C      ; Draw 12-byte sprite at VC, VA
$F56    $F792   UNKNOWN  F792            ; Unknown Fxxx instruction
$F58    $EC02   UNKNOWN  $EC02           ; Unknown Exxx instruction
$F5A    $F1C6   UNKNOWN  F1C6            ; Unknown Fxxx instruction
$F5C    $435B   SNE      V3, #5B         ; Skip if V3 != 91
$F5E    $FEDB   UNKNOWN  FEDB            ; Unknown Fxxx instruction
$F60    $6F6C   LD       VF, #6C         ; Load 108 into VF
$F62    $2196   CALL     $196            ; Call subroutine at 196
$F64    $5539   UNKNOWN  $5539           ; Unknown 5xxx instruction
$F66    $8110   LD       V1, V1          ; V1 = V1
$F68    $957C   UNKNOWN  $957C           ; Unknown 9xxx instruction
$F6A    $09EF   SYS      $9EF            ; System call to 9EF
$F6C    $FC9A   UNKNOWN  FC9A            ; Unknown Fxxx instruction
$F6E    $297B   CALL     $97B            ; Call subroutine at 97B
$F70    $D5CB   DRW      V5, VC, #B      ; Draw 11-byte sprite at V5, VC
$F72    $E580   UNKNOWN  $E580           ; Unknown Exxx instruction
$F74    $D029   DRW      V0, V2, #9      ; Draw 9-byte sprite at V0, V2
$F76    $B15F   JP       V0, $15F        ; Jump to V0 + 15F
$F78    $99D2   UNKNOWN  $99D2           ; Unknown 9xxx instruction
$F7A    $401E   SNE      V0, #1E         ; Skip if V0 != 30
$F7C    $9A51   UNKNOWN  $9A51           ; Unknown 9xxx instruction
$F7E    $5B05   UNKNOWN  $5B05           ; Unknown 5xxx instruction
$F80    $EC8C   UNKNOWN  $EC8C           ; Unknown Exxx instruction
$F82    $99F2   UNKNOWN  $99F2           ; Unknown 9xxx instruction
$F84    $A2B5   LD       I, $2B5         ; Load 2B5 into I
$F86    $EB10   UNKNOWN  $EB10           ; Unknown Exxx instruction
$F88    $A82A   LD       I, $82A         ; Load 82A into I
$F8A    $E7A0   UNKNOWN  $E7A0           ; Unknown Exxx instruction
$F8C    $B1F7   JP       V0, $1F7        ; Jump to V0 + 1F7
$F8E    $9C4E   UNKNOWN  $9C4E           ; Unknown 9xxx instruction
$F90    $0430   SYS      $430            ; System call to 430
$F92    $D12C   DRW      V1, V2, #C      ; Draw 12-byte sprite at V1, V2
$F94    $25C7   CALL     $5C7            ; Call subroutine at 5C7
$F96    $53A5   UNKNOWN  $53A5           ; Unknown 5xxx instruction
$F98    $CD52   RND      VD, #52         ; VD = random & 52
$F9A    $7CA4   ADD      VC, #A4         ; Add 164 to VC
$F9C    $ED27   UNKNOWN  $ED27           ; Unknown Exxx instruction
$F9E    $4D88   SNE      VD, #88         ; Skip if VD != 136
$FA0    $A39D   LD       I, $39D         ; Load 39D into I
$FA2    $AC4A   LD       I, $C4A         ; Load C4A into I
$FA4    $7104   ADD      V1, #04         ; Add 4 to V1
$FA6    $0802   SYS      $802            ; System call to 802
$FA8    $5D33   UNKNOWN  $5D33           ; Unknown 5xxx instruction
$FAA    $F9C9   UNKNOWN  F9C9            ; Unknown Fxxx instruction
$FAC    $554D   UNKNOWN  $554D           ; Unknown 5xxx instruction
$FAE    $C76B   RND      V7, #6B         ; V7 = random & 6B
$FB0    $9A36   UNKNOWN  $9A36           ; Unknown 9xxx instruction
$FB2    $688D   LD       V8, #8D         ; Load 141 into V8
$FB4    $BC60   JP       V0, $C60        ; Jump to V0 + C60
$FB6    $8273   XOR      V2, V7          ; V2 ^= V7
$FB8    $9449   UNKNOWN  $9449           ; Unknown 9xxx instruction
$FBA    $2E62   CALL     $E62            ; Call subroutine at E62
$FBC    $ECD3   UNKNOWN  $ECD3           ; Unknown Exxx instruction
$FBE    $5D20   SE       VD, V2          ; Skip if VD == V2
$FC0    $1361   JP       $361            ; Jump to 361
$FC2    $DE64   DRW      VE, V6, #4      ; Draw 4-byte sprite at VE, V6
$FC4    $E5CD   UNKNOWN  $E5CD           ; Unknown Exxx instruction
$FC6    $6F56   LD       VF, #56         ; Load 86 into VF
$FC8    $7629   ADD      V6, #29         ; Add 41 to V6
$FCA    $1151   JP       $151            ; Jump to 151
$FCC    $D449   DRW      V4, V4, #9      ; Draw 9-byte sprite at V4, V4
$FCE    $E2AB   UNKNOWN  $E2AB           ; Unknown Exxx instruction
$FD0    $6C21   LD       VC, #21         ; Load 33 into VC
$FD2    $E826   UNKNOWN  $E826           ; Unknown Exxx instruction
$FD4    $660D   LD       V6, #0D         ; Load 13 into V6
$FD6    $9276   UNKNOWN  $9276           ; Unknown 9xxx instruction
$FD8    $5B94   UNKNOWN  $5B94           ; Unknown 5xxx instruction
$FDA    $5C0A   UNKNOWN  $5C0A           ; Unknown 5xxx instruction
$FDC    $DBC8   DRW      VB, VC, #8      ; Draw 8-byte sprite at VB, VC
$FDE    $3781   SE       V7, #81         ; Skip if V7 == 129
$FE0    $A1A7   LD       I, $1A7         ; Load 1A7 into I
$FE2    $88B7   SUBN     V8, VB          ; V8 = VB - V8, VF = !borrow
$FE4    $127E   JP       $27E            ; Jump to 27E
$FE6    $2052   CALL     $052            ; Call subroutine at 052
$FE8    $6B78   LD       VB, #78         ; Load 120 into VB
$FEA    $8CD0   LD       VC, VD          ; VC = VD
$FEC    $87B6   SHR      V7              ; V7 >>= 1, VF = LSB
$FEE    $D112   DRW      V1, V1, #2      ; Draw 2-byte sprite at V1, V1
$FF0    $C496   RND      V4, #96         ; V4 = random & 96
$FF2    $BD3D   JP       V0, $D3D        ; Jump to V0 + D3D
$FF4    $64EF   LD       V4, #EF         ; Load 239 into V4
$FF6    $0DE0   SYS      $DE0            ; System call to DE0
$FF8    $E690   UNKNOWN  $E690           ; Unknown Exxx instruction
$FFA    $5854   UNKNOWN  $5854           ; Unknown 5xxx instruction
$FFC    $193D   JP       $93D            ; Jump to 93D
$FFE    $9D64   UNKNOWN  $9D64           ; Unknown 9xxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 482 (26.9%)
  LD      : 257 (14.3%)
  JP      : 210 (11.7%)
  ADD     : 138 ( 7.7%)
  DRW     : 129 ( 7.2%)
  SYS     : 116 ( 6.5%)
  CALL    : 115 ( 6.4%)
  SE      : 106 ( 5.9%)
  SNE     : 105 ( 5.9%)
  RND     :  99 ( 5.5%)
  SUB     :   9 ( 0.5%)
  XOR     :   6 ( 0.3%)
  AND     :   5 ( 0.3%)
  OR      :   5 ( 0.3%)
  SHR     :   4 ( 0.2%)
  SUBN    :   3 ( 0.2%)
  SHL     :   2 ( 0.1%)
  SKNP    :   1 ( 0.1%)

Memory Operations: 395 (22.0%)
Arithmetic Operations: 166 (9.3%)
