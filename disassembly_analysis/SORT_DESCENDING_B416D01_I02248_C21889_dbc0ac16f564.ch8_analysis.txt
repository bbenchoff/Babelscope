
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B416D01_I02248_C21889_dbc0ac16f564.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 416
Instance: 2248
Direction: descending
Final Array: [192, 176, 160, 144, 128, 112, 96, 80]
Operations: R:0 W:8 C:607 S:4

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 116
Sort Array References:
  $202: LD I, $090 ; Load 090 into I
  $212: LD I, $090 ; Load 090 into I
  $222: LD I, $090 ; Load 090 into I
  $232: LD I, $090 ; Load 090 into I
  $242: LD I, $090 ; Load 090 into I
  $252: LD I, $090 ; Load 090 into I
  $262: LD I, $090 ; Load 090 into I
  $272: LD I, $090 ; Load 090 into I
  $282: LD I, $090 ; Load 090 into I
  $292: LD I, $090 ; Load 090 into I
  $2A2: LD I, $090 ; Load 090 into I
  $2B2: LD I, $090 ; Load 090 into I
  $2C2: LD I, $090 ; Load 090 into I
  $2D2: LD I, $090 ; Load 090 into I
  $2E2: LD I, $090 ; Load 090 into I
  $2F2: LD I, $090 ; Load 090 into I
  $302: LD I, $090 ; Load 090 into I
  $310: LD I, $A4D ; Load A4D into I
  $330: LD I, $34B ; Load 34B into I
  $34A: LD I, $F19 ; Load F19 into I
  $35C: LD I, $633 ; Load 633 into I
  $37C: LD I, $189 ; Load 189 into I
  $38A: LD I, $143 ; Load 143 into I
  $3BC: LD I, $843 ; Load 843 into I
  $416: LD I, $337 ; Load 337 into I
  $42E: LD I, $FBE ; Load FBE into I
  $432: LD I, $9E6 ; Load 9E6 into I
  $444: LD I, $FF1 ; Load FF1 into I
  $452: LD I, $ABF ; Load ABF into I
  $45E: LD I, $DD6 ; Load DD6 into I
  $4B2: LD I, $C56 ; Load C56 into I
  $4E8: LD I, $27B ; Load 27B into I
  $4F8: LD I, $8B6 ; Load 8B6 into I
  $54A: LD I, $576 ; Load 576 into I
  $550: LD I, $69A ; Load 69A into I
  $57C: LD I, $484 ; Load 484 into I
  $59E: LD I, $EA8 ; Load EA8 into I
  $5AE: LD I, $738 ; Load 738 into I
  $602: LD I, $275 ; Load 275 into I
  $612: LD I, $5D7 ; Load 5D7 into I
  $63A: LD I, $898 ; Load 898 into I
  $6B2: LD I, $A9D ; Load A9D into I
  $6BE: LD I, $3A8 ; Load 3A8 into I
  $6E8: LD I, $E86 ; Load E86 into I
  $6F6: LD I, $7FB ; Load 7FB into I
  $708: LD I, $80D ; Load 80D into I
  $71A: LD I, $BED ; Load BED into I
  $728: LD I, $A45 ; Load A45 into I
  $73E: LD I, $BBD ; Load BBD into I
  $760: LD I, $62C ; Load 62C into I
  $7F8: LD I, $F33 ; Load F33 into I
  $828: LD I, $979 ; Load 979 into I
  $848: LD I, $33E ; Load 33E into I
  $85A: LD I, $E16 ; Load E16 into I
  $88A: LD I, $56C ; Load 56C into I
  $88E: LD I, $56C ; Load 56C into I
  $89C: LD I, $8C8 ; Load 8C8 into I
  $8B4: LD I, $1BC ; Load 1BC into I
  $8D0: LD I, $3C6 ; Load 3C6 into I
  $8E4: LD I, $692 ; Load 692 into I
  $90C: LD I, $468 ; Load 468 into I
  $916: LD I, $DEF ; Load DEF into I
  $91E: LD I, $225 ; Load 225 into I
  $924: LD I, $9D3 ; Load 9D3 into I
  $92C: LD I, $B32 ; Load B32 into I
  $934: LD I, $C63 ; Load C63 into I
  $99E: LD I, $03E ; Load 03E into I
  $9CC: LD I, $00B ; Load 00B into I
  $9E6: LD I, $799 ; Load 799 into I
  $A0E: LD I, $707 ; Load 707 into I
  $A12: LD I, $7C0 ; Load 7C0 into I
  $A56: LD I, $873 ; Load 873 into I
  $A70: LD I, $704 ; Load 704 into I
  $A7C: LD I, $9F5 ; Load 9F5 into I
  $A96: LD I, $BE5 ; Load BE5 into I
  $A9E: LD I, $86E ; Load 86E into I
  $ABC: LD I, $003 ; Load 003 into I
  $AD6: LD I, $DE1 ; Load DE1 into I
  $AE0: LD I, $54C ; Load 54C into I
  $B1C: LD I, $BF5 ; Load BF5 into I
  $B1E: LD I, $CFB ; Load CFB into I
  $B34: LD I, $0CA ; Load 0CA into I
  $B3C: LD I, $18E ; Load 18E into I
  $B50: LD I, $6D6 ; Load 6D6 into I
  $B52: LD I, $F6C ; Load F6C into I
  $B54: LD I, $F08 ; Load F08 into I
  $B68: LD I, $74D ; Load 74D into I
  $B7C: LD I, $7D6 ; Load 7D6 into I
  $B8E: LD I, $018 ; Load 018 into I
  $B94: LD I, $E2B ; Load E2B into I
  $BD6: LD I, $848 ; Load 848 into I
  $BE6: LD I, $5DA ; Load 5DA into I
  $C1C: LD I, $B4A ; Load B4A into I
  $C2A: LD I, $1F6 ; Load 1F6 into I
  $C56: LD I, $D03 ; Load D03 into I
  $CE6: LD I, $619 ; Load 619 into I
  $CE8: LD I, $5D0 ; Load 5D0 into I
  $CFC: LD I, $197 ; Load 197 into I
  $D16: LD I, $8C9 ; Load 8C9 into I
  $D2E: LD I, $E9D ; Load E9D into I
  $D30: LD I, $6AC ; Load 6AC into I
  $D6E: LD I, $AAA ; Load AAA into I
  $D90: LD I, $AC8 ; Load AC8 into I
  $E12: LD I, $BF8 ; Load BF8 into I
  $E28: LD I, $6ED ; Load 6ED into I
  $E46: LD I, $652 ; Load 652 into I
  $E64: LD I, $1EB ; Load 1EB into I
  $F1C: LD I, $306 ; Load 306 into I
  $F2A: LD I, $281 ; Load 281 into I
  $F42: LD I, $53E ; Load 53E into I
  $F50: LD I, $5FB ; Load 5FB into I
  $F5A: LD I, $22B ; Load 22B into I
  $F84: LD I, $DB6 ; Load DB6 into I
  $F86: LD I, $266 ; Load 266 into I
  $FB4: LD I, $8B5 ; Load 8B5 into I
  $FEC: LD I, $69A ; Load 69A into I

CONTROL FLOW ANALYSIS:
Jumps: 221
Calls: 133
Branches: 248
Loops: 139
Loop Structures:
  $364 -> $146 (backward jump)
  $3D6 -> $02B (backward jump)
  $3E6 -> $338 (backward jump)
  $4B6 -> $0CD (backward jump)
  $510 -> $291 (backward jump)
  $512 -> $15C (backward jump)
  $556 -> $436 (backward jump)
  $55A -> $0E4 (backward jump)
  $5FE -> $51D (backward jump)
  $622 -> $059 (backward jump)
  $638 -> $415 (backward jump)
  $67C -> $4BA (backward jump)
  $69C -> $66A (backward jump)
  $6AA -> $374 (backward jump)
  $6B8 -> $0B1 (backward jump)
  $6DA -> $6C4 (backward jump)
  $6F0 -> $327 (backward jump)
  $6FC -> $558 (backward jump)
  $716 -> $548 (backward jump)
  $734 -> $12C (backward jump)
  $74C -> $39C (backward jump)
  $752 -> $47D (backward jump)
  $75C -> $713 (backward jump)
  $766 -> $6DA (backward jump)
  $778 -> $02B (backward jump)
  $788 -> $685 (backward jump)
  $796 -> $07E (backward jump)
  $79C -> $501 (backward jump)
  $7C8 -> $102 (backward jump)
  $7E4 -> $587 (backward jump)
  $80C -> $524 (backward jump)
  $818 -> $1EC (backward jump)
  $826 -> $23B (backward jump)
  $850 -> $60C (backward jump)
  $864 -> $6D8 (backward jump)
  $86A -> $47D (backward jump)
  $87C -> $26D (backward jump)
  $8B0 -> $218 (backward jump)
  $8BA -> $137 (backward jump)
  $8E0 -> $2B9 (backward jump)
  $8E2 -> $2C0 (backward jump)
  $8F8 -> $21C (backward jump)
  $8FA -> $42D (backward jump)
  $90E -> $653 (backward jump)
  $920 -> $218 (backward jump)
  $93E -> $3D2 (backward jump)
  $946 -> $34E (backward jump)
  $950 -> $75A (backward jump)
  $980 -> $835 (backward jump)
  $9CE -> $1A5 (backward jump)
  $9E4 -> $117 (backward jump)
  $9F0 -> $4A5 (backward jump)
  $9F8 -> $872 (backward jump)
  $A08 -> $26B (backward jump)
  $A1C -> $737 (backward jump)
  $A4E -> $4F1 (backward jump)
  $A68 -> $955 (backward jump)
  $A6E -> $206 (backward jump)
  $A8A -> $740 (backward jump)
  $AD8 -> $3AB (backward jump)
  $ADA -> $666 (backward jump)
  $AE4 -> $1F2 (backward jump)
  $AF8 -> $77C (backward jump)
  $AFA -> $979 (backward jump)
  $B02 -> $482 (backward jump)
  $B12 -> $A77 (backward jump)
  $B2E -> $373 (backward jump)
  $B44 -> $097 (backward jump)
  $B4C -> $0A7 (backward jump)
  $B56 -> $151 (backward jump)
  $B80 -> $A54 (backward jump)
  $B8C -> $123 (backward jump)
  $BA6 -> $1F2 (backward jump)
  $BAA -> $7AE (backward jump)
  $BC4 -> $9EE (backward jump)
  $BC6 -> $7EC (backward jump)
  $BCC -> $867 (backward jump)
  $BD0 -> $A6A (backward jump)
  $BDC -> $47C (backward jump)
  $C12 -> $3C1 (backward jump)
  $C18 -> $80E (backward jump)
  $C20 -> $B9F (backward jump)
  $C84 -> $978 (backward jump)
  $C90 -> $93F (backward jump)
  $C98 -> $083 (backward jump)
  $CB2 -> $1B4 (backward jump)
  $CBC -> $517 (backward jump)
  $CDE -> $726 (backward jump)
  $CFE -> $A4A (backward jump)
  $D00 -> $BAF (backward jump)
  $D26 -> $1EE (backward jump)
  $D4A -> $9A9 (backward jump)
  $D50 -> $9A4 (backward jump)
  $D52 -> $13E (backward jump)
  $D96 -> $135 (backward jump)
  $DB8 -> $40A (backward jump)
  $DBC -> $13E (backward jump)
  $DC0 -> $AFC (backward jump)
  $DC6 -> $97C (backward jump)
  $DCA -> $D4F (backward jump)
  $DE4 -> $B38 (backward jump)
  $DEA -> $371 (backward jump)
  $DF2 -> $668 (backward jump)
  $DFC -> $C91 (backward jump)
  $E06 -> $DE8 (backward jump)
  $E18 -> $AB2 (backward jump)
  $E24 -> $B44 (backward jump)
  $E50 -> $211 (backward jump)
  $E56 -> $98C (backward jump)
  $E66 -> $D38 (backward jump)
  $E6E -> $1BF (backward jump)
  $E72 -> $222 (backward jump)
  $E7A -> $A5F (backward jump)
  $E82 -> $6C8 (backward jump)
  $E9A -> $AAE (backward jump)
  $EAE -> $71F (backward jump)
  $EB0 -> $D00 (backward jump)
  $EB4 -> $086 (backward jump)
  $EB8 -> $91E (backward jump)
  $ED6 -> $881 (backward jump)
  $EE2 -> $087 (backward jump)
  $EEC -> $222 (backward jump)
  $EF8 -> $0A7 (backward jump)
  $EFC -> $C9D (backward jump)
  $F16 -> $766 (backward jump)
  $F1A -> $B27 (backward jump)
  $F26 -> $36F (backward jump)
  $F40 -> $CB5 (backward jump)
  $F5C -> $435 (backward jump)
  $F60 -> $0A1 (backward jump)
  $F6E -> $491 (backward jump)
  $F98 -> $D38 (backward jump)
  $FA0 -> $E5C (backward jump)
  $FB8 -> $21D (backward jump)
  $FC6 -> $E81 (backward jump)
  $FCC -> $411 (backward jump)
  $FDC -> $BFF (backward jump)
  $FF6 -> $BDF (backward jump)
  $FF8 -> $E11 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $C0B0   RND      V0, #B0         ; V0 = random & B0
$202    $A090   LD       I, $090         ; Load 090 into I
$204    $8070   LD       V0, V7          ; V0 = V7
$206    $6050   LD       V0, #50         ; Load 80 into V0
$208    $4030   SNE      V0, #30         ; Skip if V0 != 48
$20A    $2010   CALL     $010            ; Call subroutine at 010
$20C    $00F0   SYS      $0F0            ; System call to 0F0
$20E    $E0D0   UNKNOWN  $E0D0           ; Unknown Exxx instruction
$210    $C0B0   RND      V0, #B0         ; V0 = random & B0
$212    $A090   LD       I, $090         ; Load 090 into I
$214    $8070   LD       V0, V7          ; V0 = V7
$216    $6050   LD       V0, #50         ; Load 80 into V0
$218    $4030   SNE      V0, #30         ; Skip if V0 != 48
$21A    $2010   CALL     $010            ; Call subroutine at 010
$21C    $00F0   SYS      $0F0            ; System call to 0F0
$21E    $E0D0   UNKNOWN  $E0D0           ; Unknown Exxx instruction
$220    $C0B0   RND      V0, #B0         ; V0 = random & B0
$222    $A090   LD       I, $090         ; Load 090 into I
$224    $8070   LD       V0, V7          ; V0 = V7
$226    $6050   LD       V0, #50         ; Load 80 into V0
$228    $4030   SNE      V0, #30         ; Skip if V0 != 48
$22A    $2010   CALL     $010            ; Call subroutine at 010
$22C    $00F0   SYS      $0F0            ; System call to 0F0
$22E    $E0D0   UNKNOWN  $E0D0           ; Unknown Exxx instruction
$230    $C0B0   RND      V0, #B0         ; V0 = random & B0
$232    $A090   LD       I, $090         ; Load 090 into I
$234    $8070   LD       V0, V7          ; V0 = V7
$236    $6050   LD       V0, #50         ; Load 80 into V0
$238    $4030   SNE      V0, #30         ; Skip if V0 != 48
$23A    $2010   CALL     $010            ; Call subroutine at 010
$23C    $00F0   SYS      $0F0            ; System call to 0F0
$23E    $E0D0   UNKNOWN  $E0D0           ; Unknown Exxx instruction
$240    $C0B0   RND      V0, #B0         ; V0 = random & B0
$242    $A090   LD       I, $090         ; Load 090 into I
$244    $8070   LD       V0, V7          ; V0 = V7
$246    $6050   LD       V0, #50         ; Load 80 into V0
$248    $4030   SNE      V0, #30         ; Skip if V0 != 48
$24A    $2010   CALL     $010            ; Call subroutine at 010
$24C    $00F0   SYS      $0F0            ; System call to 0F0
$24E    $E0D0   UNKNOWN  $E0D0           ; Unknown Exxx instruction
$250    $C0B0   RND      V0, #B0         ; V0 = random & B0
$252    $A090   LD       I, $090         ; Load 090 into I
$254    $8070   LD       V0, V7          ; V0 = V7
$256    $6050   LD       V0, #50         ; Load 80 into V0
$258    $4030   SNE      V0, #30         ; Skip if V0 != 48
$25A    $2010   CALL     $010            ; Call subroutine at 010
$25C    $00F0   SYS      $0F0            ; System call to 0F0
$25E    $E0D0   UNKNOWN  $E0D0           ; Unknown Exxx instruction
$260    $C0B0   RND      V0, #B0         ; V0 = random & B0
$262    $A090   LD       I, $090         ; Load 090 into I
$264    $8070   LD       V0, V7          ; V0 = V7
$266    $6050   LD       V0, #50         ; Load 80 into V0
$268    $4030   SNE      V0, #30         ; Skip if V0 != 48
$26A    $2010   CALL     $010            ; Call subroutine at 010
$26C    $00F0   SYS      $0F0            ; System call to 0F0
$26E    $E0D0   UNKNOWN  $E0D0           ; Unknown Exxx instruction
$270    $C0B0   RND      V0, #B0         ; V0 = random & B0
$272    $A090   LD       I, $090         ; Load 090 into I
$274    $8070   LD       V0, V7          ; V0 = V7
$276    $6050   LD       V0, #50         ; Load 80 into V0
$278    $4030   SNE      V0, #30         ; Skip if V0 != 48
$27A    $2010   CALL     $010            ; Call subroutine at 010
$27C    $00F0   SYS      $0F0            ; System call to 0F0
$27E    $E0D0   UNKNOWN  $E0D0           ; Unknown Exxx instruction
$280    $C0B0   RND      V0, #B0         ; V0 = random & B0
$282    $A090   LD       I, $090         ; Load 090 into I
$284    $8070   LD       V0, V7          ; V0 = V7
$286    $6050   LD       V0, #50         ; Load 80 into V0
$288    $4030   SNE      V0, #30         ; Skip if V0 != 48
$28A    $2010   CALL     $010            ; Call subroutine at 010
$28C    $00F0   SYS      $0F0            ; System call to 0F0
$28E    $E0D0   UNKNOWN  $E0D0           ; Unknown Exxx instruction
$290    $C0B0   RND      V0, #B0         ; V0 = random & B0
$292    $A090   LD       I, $090         ; Load 090 into I
$294    $8070   LD       V0, V7          ; V0 = V7
$296    $6050   LD       V0, #50         ; Load 80 into V0
$298    $4030   SNE      V0, #30         ; Skip if V0 != 48
$29A    $2010   CALL     $010            ; Call subroutine at 010
$29C    $00F0   SYS      $0F0            ; System call to 0F0
$29E    $E0D0   UNKNOWN  $E0D0           ; Unknown Exxx instruction
$2A0    $C0B0   RND      V0, #B0         ; V0 = random & B0
$2A2    $A090   LD       I, $090         ; Load 090 into I
$2A4    $8070   LD       V0, V7          ; V0 = V7
$2A6    $6050   LD       V0, #50         ; Load 80 into V0
$2A8    $4030   SNE      V0, #30         ; Skip if V0 != 48
$2AA    $2010   CALL     $010            ; Call subroutine at 010
$2AC    $00F0   SYS      $0F0            ; System call to 0F0
$2AE    $E0D0   UNKNOWN  $E0D0           ; Unknown Exxx instruction
$2B0    $C0B0   RND      V0, #B0         ; V0 = random & B0
$2B2    $A090   LD       I, $090         ; Load 090 into I
$2B4    $8070   LD       V0, V7          ; V0 = V7
$2B6    $6050   LD       V0, #50         ; Load 80 into V0
$2B8    $4030   SNE      V0, #30         ; Skip if V0 != 48
$2BA    $2010   CALL     $010            ; Call subroutine at 010
$2BC    $00F0   SYS      $0F0            ; System call to 0F0
$2BE    $E0D0   UNKNOWN  $E0D0           ; Unknown Exxx instruction
$2C0    $C0B0   RND      V0, #B0         ; V0 = random & B0
$2C2    $A090   LD       I, $090         ; Load 090 into I
$2C4    $8070   LD       V0, V7          ; V0 = V7
$2C6    $6050   LD       V0, #50         ; Load 80 into V0
$2C8    $4030   SNE      V0, #30         ; Skip if V0 != 48
$2CA    $2010   CALL     $010            ; Call subroutine at 010
$2CC    $00F0   SYS      $0F0            ; System call to 0F0
$2CE    $E0D0   UNKNOWN  $E0D0           ; Unknown Exxx instruction
$2D0    $C0B0   RND      V0, #B0         ; V0 = random & B0
$2D2    $A090   LD       I, $090         ; Load 090 into I
$2D4    $8070   LD       V0, V7          ; V0 = V7
$2D6    $6050   LD       V0, #50         ; Load 80 into V0
$2D8    $4030   SNE      V0, #30         ; Skip if V0 != 48
$2DA    $2010   CALL     $010            ; Call subroutine at 010
$2DC    $00F0   SYS      $0F0            ; System call to 0F0
$2DE    $E0D0   UNKNOWN  $E0D0           ; Unknown Exxx instruction
$2E0    $C0B0   RND      V0, #B0         ; V0 = random & B0
$2E2    $A090   LD       I, $090         ; Load 090 into I
$2E4    $8070   LD       V0, V7          ; V0 = V7
$2E6    $6050   LD       V0, #50         ; Load 80 into V0
$2E8    $4030   SNE      V0, #30         ; Skip if V0 != 48
$2EA    $2010   CALL     $010            ; Call subroutine at 010
$2EC    $00F0   SYS      $0F0            ; System call to 0F0
$2EE    $E0D0   UNKNOWN  $E0D0           ; Unknown Exxx instruction
$2F0    $C0B0   RND      V0, #B0         ; V0 = random & B0
$2F2    $A090   LD       I, $090         ; Load 090 into I
$2F4    $8070   LD       V0, V7          ; V0 = V7
$2F6    $6050   LD       V0, #50         ; Load 80 into V0
$2F8    $4030   SNE      V0, #30         ; Skip if V0 != 48
$2FA    $2010   CALL     $010            ; Call subroutine at 010
$2FC    $00F0   SYS      $0F0            ; System call to 0F0
$2FE    $E0D0   UNKNOWN  $E0D0           ; Unknown Exxx instruction
$300    $C0B0   RND      V0, #B0         ; V0 = random & B0
$302    $A090   LD       I, $090         ; Load 090 into I
$304    $8070   LD       V0, V7          ; V0 = V7
$306    $6050   LD       V0, #50         ; Load 80 into V0
$308    $BC6F   JP       V0, $C6F        ; Jump to V0 + C6F
$30A    $F6E7   UNKNOWN  F6E7            ; Unknown Fxxx instruction
$30C    $21DC   CALL     $1DC            ; Call subroutine at 1DC
$30E    $E57E   UNKNOWN  $E57E           ; Unknown Exxx instruction
$310    $AA4D   LD       I, $A4D         ; Load A4D into I
$312    $E6AA   UNKNOWN  $E6AA           ; Unknown Exxx instruction
$314    $2F06   CALL     $F06            ; Call subroutine at F06
$316    $D32B   DRW      V3, V2, #B      ; Draw 11-byte sprite at V3, V2
$318    $C36F   RND      V3, #6F         ; V3 = random & 6F
$31A    $9242   UNKNOWN  $9242           ; Unknown 9xxx instruction
$31C    $7162   ADD      V1, #62         ; Add 98 to V1
$31E    $D1DE   DRW      V1, VD, #E      ; Draw 14-byte sprite at V1, VD
$320    $7822   ADD      V8, #22         ; Add 34 to V8
$322    $0EA9   SYS      $EA9            ; System call to EA9
$324    $03D1   SYS      $3D1            ; System call to 3D1
$326    $4CC4   SNE      VC, #C4         ; Skip if VC != 196
$328    $E4AB   UNKNOWN  $E4AB           ; Unknown Exxx instruction
$32A    $82A5   SUB      V2, VA          ; V2 -= VA, VF = !borrow
$32C    $9CBD   UNKNOWN  $9CBD           ; Unknown 9xxx instruction
$32E    $B923   JP       V0, $923        ; Jump to V0 + 923
$330    $A34B   LD       I, $34B         ; Load 34B into I
$332    $F003   UNKNOWN  F003            ; Unknown Fxxx instruction
$334    $D13F   DRW      V1, V3, #F      ; Draw 15-byte sprite at V1, V3
$336    $7405   ADD      V4, #05         ; Add 5 to V4
$338    $2DA9   CALL     $DA9            ; Call subroutine at DA9
$33A    $22B0   CALL     $2B0            ; Call subroutine at 2B0
$33C    $34F0   SE       V4, #F0         ; Skip if V4 == 240
$33E    $2B21   CALL     $B21            ; Call subroutine at B21
$340    $350A   SE       V5, #0A         ; Skip if V5 == 10
$342    $DE07   DRW      VE, V0, #7      ; Draw 7-byte sprite at VE, V0
$344    $DF57   DRW      VF, V5, #7      ; Draw 7-byte sprite at VF, V5
$346    $57DB   UNKNOWN  $57DB           ; Unknown 5xxx instruction
$348    $2E49   CALL     $E49            ; Call subroutine at E49
$34A    $AF19   LD       I, $F19         ; Load F19 into I
$34C    $BC61   JP       V0, $C61        ; Jump to V0 + C61
$34E    $F461   UNKNOWN  F461            ; Unknown Fxxx instruction
$350    $E151   UNKNOWN  $E151           ; Unknown Exxx instruction
$352    $773F   ADD      V7, #3F         ; Add 63 to V7
$354    $7BE0   ADD      VB, #E0         ; Add 224 to VB
$356    $34AB   SE       V4, #AB         ; Skip if V4 == 171
$358    $9D06   UNKNOWN  $9D06           ; Unknown 9xxx instruction
$35A    $63B4   LD       V3, #B4         ; Load 180 into V3
$35C    $A633   LD       I, $633         ; Load 633 into I
$35E    $767D   ADD      V6, #7D         ; Add 125 to V6
$360    $C76A   RND      V7, #6A         ; V7 = random & 6A
$362    $1643   JP       $643            ; Jump to 643
$364    $B146   JP       V0, $146        ; Jump to V0 + 146
$366    $785D   ADD      V8, #5D         ; Add 93 to V8
$368    $6501   LD       V5, #01         ; Load 1 into V5
$36A    $BF42   JP       V0, $F42        ; Jump to V0 + F42
$36C    $2AAF   CALL     $AAF            ; Call subroutine at AAF
$36E    $285E   CALL     $85E            ; Call subroutine at 85E
$370    $8FFB   UNKNOWN  8FFB            ; Unknown 8xxx instruction
$372    $D969   DRW      V9, V6, #9      ; Draw 9-byte sprite at V9, V6
$374    $980D   UNKNOWN  $980D           ; Unknown 9xxx instruction
$376    $2E30   CALL     $E30            ; Call subroutine at E30
$378    $D6F4   DRW      V6, VF, #4      ; Draw 4-byte sprite at V6, VF
$37A    $6A68   LD       VA, #68         ; Load 104 into VA
$37C    $A189   LD       I, $189         ; Load 189 into I
$37E    $2CDD   CALL     $CDD            ; Call subroutine at CDD
$380    $DF48   DRW      VF, V4, #8      ; Draw 8-byte sprite at VF, V4
$382    $D157   DRW      V1, V5, #7      ; Draw 7-byte sprite at V1, V5
$384    $0BB0   SYS      $BB0            ; System call to BB0
$386    $38C5   SE       V8, #C5         ; Skip if V8 == 197
$388    $0743   SYS      $743            ; System call to 743
$38A    $A143   LD       I, $143         ; Load 143 into I
$38C    $164C   JP       $64C            ; Jump to 64C
$38E    $22D2   CALL     $2D2            ; Call subroutine at 2D2
$390    $F6C9   UNKNOWN  F6C9            ; Unknown Fxxx instruction
$392    $093E   SYS      $93E            ; System call to 93E
$394    $E81E   UNKNOWN  $E81E           ; Unknown Exxx instruction
$396    $BC7F   JP       V0, $C7F        ; Jump to V0 + C7F
$398    $7701   ADD      V7, #01         ; Add 1 to V7
$39A    $CB28   RND      VB, #28         ; VB = random & 28
$39C    $454A   SNE      V5, #4A         ; Skip if V5 != 74
$39E    $F2F7   UNKNOWN  F2F7            ; Unknown Fxxx instruction
$3A0    $4AAA   SNE      VA, #AA         ; Skip if VA != 170
$3A2    $C91C   RND      V9, #1C         ; V9 = random & 1C
$3A4    $83C8   UNKNOWN  83C8            ; Unknown 8xxx instruction
$3A6    $8DB8   UNKNOWN  8DB8            ; Unknown 8xxx instruction
$3A8    $2842   CALL     $842            ; Call subroutine at 842
$3AA    $4120   SNE      V1, #20         ; Skip if V1 != 32
$3AC    $2910   CALL     $910            ; Call subroutine at 910
$3AE    $9EE4   UNKNOWN  $9EE4           ; Unknown 9xxx instruction
$3B0    $D43A   DRW      V4, V3, #A      ; Draw 10-byte sprite at V4, V3
$3B2    $2D81   CALL     $D81            ; Call subroutine at D81
$3B4    $3C52   SE       VC, #52         ; Skip if VC == 82
$3B6    $97A3   UNKNOWN  $97A3           ; Unknown 9xxx instruction
$3B8    $B94D   JP       V0, $94D        ; Jump to V0 + 94D
$3BA    $7B5C   ADD      VB, #5C         ; Add 92 to VB
$3BC    $A843   LD       I, $843         ; Load 843 into I
$3BE    $6C84   LD       VC, #84         ; Load 132 into VC
$3C0    $9520   SNE      V5, V2          ; Skip if V5 != V2
$3C2    $6EFD   LD       VE, #FD         ; Load 253 into VE
$3C4    $D3F9   DRW      V3, VF, #9      ; Draw 9-byte sprite at V3, VF
$3C6    $4E5F   SNE      VE, #5F         ; Skip if VE != 95
$3C8    $BFE1   JP       V0, $FE1        ; Jump to V0 + FE1
$3CA    $192E   JP       $92E            ; Jump to 92E
$3CC    $6C07   LD       VC, #07         ; Load 7 into VC
$3CE    $594B   UNKNOWN  $594B           ; Unknown 5xxx instruction
$3D0    $0C78   SYS      $C78            ; System call to C78
$3D2    $848A   UNKNOWN  848A            ; Unknown 8xxx instruction
$3D4    $C63E   RND      V6, #3E         ; V6 = random & 3E
$3D6    $B02B   JP       V0, $02B        ; Jump to V0 + 02B
$3D8    $1A19   JP       $A19            ; Jump to A19
$3DA    $38B4   SE       V8, #B4         ; Skip if V8 == 180
$3DC    $26ED   CALL     $6ED            ; Call subroutine at 6ED
$3DE    $C80D   RND      V8, #0D         ; V8 = random & 0D
$3E0    $4CEC   SNE      VC, #EC         ; Skip if VC != 236
$3E2    $617E   LD       V1, #7E         ; Load 126 into V1
$3E4    $8520   LD       V5, V2          ; V5 = V2
$3E6    $B338   JP       V0, $338        ; Jump to V0 + 338
$3E8    $E21F   UNKNOWN  $E21F           ; Unknown Exxx instruction
$3EA    $3734   SE       V7, #34         ; Skip if V7 == 52
$3EC    $3F2B   SE       VF, #2B         ; Skip if VF == 43
$3EE    $7F74   ADD      VF, #74         ; Add 116 to VF
$3F0    $6B0F   LD       VB, #0F         ; Load 15 into VB
$3F2    $F418   LD       ST, V4          ; Sound timer = V4
$3F4    $9B9A   UNKNOWN  $9B9A           ; Unknown 9xxx instruction
$3F6    $9E35   UNKNOWN  $9E35           ; Unknown 9xxx instruction
$3F8    $94D9   UNKNOWN  $94D9           ; Unknown 9xxx instruction
$3FA    $6415   LD       V4, #15         ; Load 21 into V4
$3FC    $FACE   UNKNOWN  FACE            ; Unknown Fxxx instruction
$3FE    $F226   UNKNOWN  F226            ; Unknown Fxxx instruction
$400    $C9FC   RND      V9, #FC         ; V9 = random & FC
$402    $F3D6   UNKNOWN  F3D6            ; Unknown Fxxx instruction
$404    $667D   LD       V6, #7D         ; Load 125 into V6
$406    $49BE   SNE      V9, #BE         ; Skip if V9 != 190
$408    $7F30   ADD      VF, #30         ; Add 48 to VF
$40A    $372A   SE       V7, #2A         ; Skip if V7 == 42
$40C    $801E   SHL      V0              ; V0 <<= 1, VF = MSB
$40E    $4782   SNE      V7, #82         ; Skip if V7 != 130
$410    $FE8A   UNKNOWN  FE8A            ; Unknown Fxxx instruction
$412    $7A20   ADD      VA, #20         ; Add 32 to VA
$414    $0795   SYS      $795            ; System call to 795
$416    $A337   LD       I, $337         ; Load 337 into I
$418    $E2E7   UNKNOWN  $E2E7           ; Unknown Exxx instruction
$41A    $0DFE   SYS      $DFE            ; System call to DFE
$41C    $95B2   UNKNOWN  $95B2           ; Unknown 9xxx instruction
$41E    $3DBC   SE       VD, #BC         ; Skip if VD == 188
$420    $5DD8   UNKNOWN  $5DD8           ; Unknown 5xxx instruction
$422    $E125   UNKNOWN  $E125           ; Unknown Exxx instruction
$424    $DFA4   DRW      VF, VA, #4      ; Draw 4-byte sprite at VF, VA
$426    $D12D   DRW      V1, V2, #D      ; Draw 13-byte sprite at V1, V2
$428    $351B   SE       V5, #1B         ; Skip if V5 == 27
$42A    $751B   ADD      V5, #1B         ; Add 27 to V5
$42C    $1566   JP       $566            ; Jump to 566
$42E    $AFBE   LD       I, $FBE         ; Load FBE into I
$430    $1D62   JP       $D62            ; Jump to D62
$432    $A9E6   LD       I, $9E6         ; Load 9E6 into I
$434    $3521   SE       V5, #21         ; Skip if V5 == 33
$436    $77DD   ADD      V7, #DD         ; Add 221 to V7
$438    $1560   JP       $560            ; Jump to 560
$43A    $6479   LD       V4, #79         ; Load 121 into V4
$43C    $C1FA   RND      V1, #FA         ; V1 = random & FA
$43E    $1FD9   JP       $FD9            ; Jump to FD9
$440    $CA4C   RND      VA, #4C         ; VA = random & 4C
$442    $C1F7   RND      V1, #F7         ; V1 = random & F7
$444    $AFF1   LD       I, $FF1         ; Load FF1 into I
$446    $15FA   JP       $5FA            ; Jump to 5FA
$448    $79F3   ADD      V9, #F3         ; Add 243 to V9
$44A    $FDCA   UNKNOWN  FDCA            ; Unknown Fxxx instruction
$44C    $880C   UNKNOWN  880C            ; Unknown 8xxx instruction
$44E    $6E21   LD       VE, #21         ; Load 33 into VE
$450    $2F53   CALL     $F53            ; Call subroutine at F53
$452    $AABF   LD       I, $ABF         ; Load ABF into I
$454    $3015   SE       V0, #15         ; Skip if V0 == 21
$456    $683D   LD       V8, #3D         ; Load 61 into V8
$458    $0B3D   SYS      $B3D            ; System call to B3D
$45A    $EFCF   UNKNOWN  $EFCF           ; Unknown Exxx instruction
$45C    $C0C1   RND      V0, #C1         ; V0 = random & C1
$45E    $ADD6   LD       I, $DD6         ; Load DD6 into I
$460    $5E21   UNKNOWN  $5E21           ; Unknown 5xxx instruction
$462    $FBE0   UNKNOWN  FBE0            ; Unknown Fxxx instruction
$464    $4BC3   SNE      VB, #C3         ; Skip if VB != 195
$466    $CFB7   RND      VF, #B7         ; VF = random & B7
$468    $5A39   UNKNOWN  $5A39           ; Unknown 5xxx instruction
$46A    $49F8   SNE      V9, #F8         ; Skip if V9 != 248
$46C    $429F   SNE      V2, #9F         ; Skip if V2 != 159
$46E    $BDCB   JP       V0, $DCB        ; Jump to V0 + DCB
$470    $DEDB   DRW      VE, VD, #B      ; Draw 11-byte sprite at VE, VD
$472    $4F1A   SNE      VF, #1A         ; Skip if VF != 26
$474    $8EBC   UNKNOWN  8EBC            ; Unknown 8xxx instruction
$476    $0FBF   SYS      $FBF            ; System call to FBF
$478    $9014   UNKNOWN  $9014           ; Unknown 9xxx instruction
$47A    $4969   SNE      V9, #69         ; Skip if V9 != 105
$47C    $DF94   DRW      VF, V9, #4      ; Draw 4-byte sprite at VF, V9
$47E    $51C8   UNKNOWN  $51C8           ; Unknown 5xxx instruction
$480    $16C9   JP       $6C9            ; Jump to 6C9
$482    $2690   CALL     $690            ; Call subroutine at 690
$484    $8DE5   SUB      VD, VE          ; VD -= VE, VF = !borrow
$486    $5CE1   UNKNOWN  $5CE1           ; Unknown 5xxx instruction
$488    $519E   UNKNOWN  $519E           ; Unknown 5xxx instruction
$48A    $95CA   UNKNOWN  $95CA           ; Unknown 9xxx instruction
$48C    $F215   LD       DT, V2          ; Delay timer = V2
$48E    $4D8A   SNE      VD, #8A         ; Skip if VD != 138
$490    $56CB   UNKNOWN  $56CB           ; Unknown 5xxx instruction
$492    $D0A1   DRW      V0, VA, #1      ; Draw 1-byte sprite at V0, VA
$494    $9FA4   UNKNOWN  $9FA4           ; Unknown 9xxx instruction
$496    $DD90   DRW      VD, V9, #0      ; Draw 0-byte sprite at VD, V9
$498    $DE28   DRW      VE, V2, #8      ; Draw 8-byte sprite at VE, V2
$49A    $76BE   ADD      V6, #BE         ; Add 190 to V6
$49C    $E366   UNKNOWN  $E366           ; Unknown Exxx instruction
$49E    $088C   SYS      $88C            ; System call to 88C
$4A0    $F87C   UNKNOWN  F87C            ; Unknown Fxxx instruction
$4A2    $9C9D   UNKNOWN  $9C9D           ; Unknown 9xxx instruction
$4A4    $43F5   SNE      V3, #F5         ; Skip if V3 != 245
$4A6    $BDC2   JP       V0, $DC2        ; Jump to V0 + DC2
$4A8    $6389   LD       V3, #89         ; Load 137 into V3
$4AA    $171A   JP       $71A            ; Jump to 71A
$4AC    $B7A6   JP       V0, $7A6        ; Jump to V0 + 7A6
$4AE    $6C93   LD       VC, #93         ; Load 147 into VC
$4B0    $D2ED   DRW      V2, VE, #D      ; Draw 13-byte sprite at V2, VE
$4B2    $AC56   LD       I, $C56         ; Load C56 into I
$4B4    $DEBA   DRW      VE, VB, #A      ; Draw 10-byte sprite at VE, VB
$4B6    $B0CD   JP       V0, $0CD        ; Jump to V0 + 0CD
$4B8    $89B9   UNKNOWN  89B9            ; Unknown 8xxx instruction
$4BA    $4B8B   SNE      VB, #8B         ; Skip if VB != 139
$4BC    $4F0A   SNE      VF, #0A         ; Skip if VF != 10
$4BE    $1E25   JP       $E25            ; Jump to E25
$4C0    $5119   UNKNOWN  $5119           ; Unknown 5xxx instruction
$4C2    $9683   UNKNOWN  $9683           ; Unknown 9xxx instruction
$4C4    $996D   UNKNOWN  $996D           ; Unknown 9xxx instruction
$4C6    $6592   LD       V5, #92         ; Load 146 into V5
$4C8    $1C1D   JP       $C1D            ; Jump to C1D
$4CA    $2FD0   CALL     $FD0            ; Call subroutine at FD0
$4CC    $42E9   SNE      V2, #E9         ; Skip if V2 != 233
$4CE    $6C67   LD       VC, #67         ; Load 103 into VC
$4D0    $BA8F   JP       V0, $A8F        ; Jump to V0 + A8F
$4D2    $77D2   ADD      V7, #D2         ; Add 210 to V7
$4D4    $5216   UNKNOWN  $5216           ; Unknown 5xxx instruction
$4D6    $79F7   ADD      V9, #F7         ; Add 247 to V9
$4D8    $6A6F   LD       VA, #6F         ; Load 111 into VA
$4DA    $9B44   UNKNOWN  $9B44           ; Unknown 9xxx instruction
$4DC    $2A96   CALL     $A96            ; Call subroutine at A96
$4DE    $6068   LD       V0, #68         ; Load 104 into V0
$4E0    $53D9   UNKNOWN  $53D9           ; Unknown 5xxx instruction
$4E2    $3D51   SE       VD, #51         ; Skip if VD == 81
$4E4    $F25C   UNKNOWN  F25C            ; Unknown Fxxx instruction
$4E6    $1522   JP       $522            ; Jump to 522
$4E8    $A27B   LD       I, $27B         ; Load 27B into I
$4EA    $E8C3   UNKNOWN  $E8C3           ; Unknown Exxx instruction
$4EC    $6A4F   LD       VA, #4F         ; Load 79 into VA
$4EE    $DACF   DRW      VA, VC, #F      ; Draw 15-byte sprite at VA, VC
$4F0    $EB3A   UNKNOWN  $EB3A           ; Unknown Exxx instruction
$4F2    $BD67   JP       V0, $D67        ; Jump to V0 + D67
$4F4    $CECD   RND      VE, #CD         ; VE = random & CD
$4F6    $7A22   ADD      VA, #22         ; Add 34 to VA
$4F8    $A8B6   LD       I, $8B6         ; Load 8B6 into I
$4FA    $5ACD   UNKNOWN  $5ACD           ; Unknown 5xxx instruction
$4FC    $2FBE   CALL     $FBE            ; Call subroutine at FBE
$4FE    $5511   UNKNOWN  $5511           ; Unknown 5xxx instruction
$500    $BB33   JP       V0, $B33        ; Jump to V0 + B33
$502    $CEEC   RND      VE, #EC         ; VE = random & EC
$504    $771A   ADD      V7, #1A         ; Add 26 to V7
$506    $756E   ADD      V5, #6E         ; Add 110 to V5
$508    $F230   UNKNOWN  F230            ; Unknown Fxxx instruction
$50A    $EFC6   UNKNOWN  $EFC6           ; Unknown Exxx instruction
$50C    $F57C   UNKNOWN  F57C            ; Unknown Fxxx instruction
$50E    $05B0   SYS      $5B0            ; System call to 5B0
$510    $1291   JP       $291            ; Jump to 291
$512    $B15C   JP       V0, $15C        ; Jump to V0 + 15C
$514    $707F   ADD      V0, #7F         ; Add 127 to V0
$516    $DE27   DRW      VE, V2, #7      ; Draw 7-byte sprite at VE, V2
$518    $89B6   SHR      V9              ; V9 >>= 1, VF = LSB
$51A    $C481   RND      V4, #81         ; V4 = random & 81
$51C    $FA2D   UNKNOWN  FA2D            ; Unknown Fxxx instruction
$51E    $6017   LD       V0, #17         ; Load 23 into V0
$520    $BDF9   JP       V0, $DF9        ; Jump to V0 + DF9
$522    $8346   SHR      V3              ; V3 >>= 1, VF = LSB
$524    $F7C9   UNKNOWN  F7C9            ; Unknown Fxxx instruction
$526    $9164   UNKNOWN  $9164           ; Unknown 9xxx instruction
$528    $4753   SNE      V7, #53         ; Skip if V7 != 83
$52A    $956C   UNKNOWN  $956C           ; Unknown 9xxx instruction
$52C    $DD05   DRW      VD, V0, #5      ; Draw 5-byte sprite at VD, V0
$52E    $09BB   SYS      $9BB            ; System call to 9BB
$530    $3681   SE       V6, #81         ; Skip if V6 == 129
$532    $801C   UNKNOWN  801C            ; Unknown 8xxx instruction
$534    $3B32   SE       VB, #32         ; Skip if VB == 50
$536    $FD43   UNKNOWN  FD43            ; Unknown Fxxx instruction
$538    $9F61   UNKNOWN  $9F61           ; Unknown 9xxx instruction
$53A    $C591   RND      V5, #91         ; V5 = random & 91
$53C    $B6E2   JP       V0, $6E2        ; Jump to V0 + 6E2
$53E    $E457   UNKNOWN  $E457           ; Unknown Exxx instruction
$540    $16BD   JP       $6BD            ; Jump to 6BD
$542    $5FB7   UNKNOWN  $5FB7           ; Unknown 5xxx instruction
$544    $369B   SE       V6, #9B         ; Skip if V6 == 155
$546    $BDDE   JP       V0, $DDE        ; Jump to V0 + DDE
$548    $D049   DRW      V0, V4, #9      ; Draw 9-byte sprite at V0, V4
$54A    $A576   LD       I, $576         ; Load 576 into I
$54C    $74CA   ADD      V4, #CA         ; Add 202 to V4
$54E    $45BB   SNE      V5, #BB         ; Skip if V5 != 187
$550    $A69A   LD       I, $69A         ; Load 69A into I
$552    $6CD1   LD       VC, #D1         ; Load 209 into VC
$554    $094F   SYS      $94F            ; System call to 94F
$556    $B436   JP       V0, $436        ; Jump to V0 + 436
$558    $87CA   UNKNOWN  87CA            ; Unknown 8xxx instruction
$55A    $10E4   JP       $0E4            ; Jump to 0E4
$55C    $60DC   LD       V0, #DC         ; Load 220 into V0
$55E    $917A   UNKNOWN  $917A           ; Unknown 9xxx instruction
$560    $9FBC   UNKNOWN  $9FBC           ; Unknown 9xxx instruction
$562    $5C63   UNKNOWN  $5C63           ; Unknown 5xxx instruction
$564    $250B   CALL     $50B            ; Call subroutine at 50B
$566    $3218   SE       V2, #18         ; Skip if V2 == 24
$568    $0F0B   SYS      $F0B            ; System call to F0B
$56A    $597C   UNKNOWN  $597C           ; Unknown 5xxx instruction
$56C    $45A9   SNE      V5, #A9         ; Skip if V5 != 169
$56E    $BB1F   JP       V0, $B1F        ; Jump to V0 + B1F
$570    $0C12   SYS      $C12            ; System call to C12
$572    $0178   SYS      $178            ; System call to 178
$574    $96E2   UNKNOWN  $96E2           ; Unknown 9xxx instruction
$576    $D8DD   DRW      V8, VD, #D      ; Draw 13-byte sprite at V8, VD
$578    $FF1C   UNKNOWN  FF1C            ; Unknown Fxxx instruction
$57A    $055A   SYS      $55A            ; System call to 55A
$57C    $A484   LD       I, $484         ; Load 484 into I
$57E    $9275   UNKNOWN  $9275           ; Unknown 9xxx instruction
$580    $4656   SNE      V6, #56         ; Skip if V6 != 86
$582    $471F   SNE      V7, #1F         ; Skip if V7 != 31
$584    $78B3   ADD      V8, #B3         ; Add 179 to V8
$586    $B92E   JP       V0, $92E        ; Jump to V0 + 92E
$588    $479D   SNE      V7, #9D         ; Skip if V7 != 157
$58A    $30B2   SE       V0, #B2         ; Skip if V0 == 178
$58C    $25A7   CALL     $5A7            ; Call subroutine at 5A7
$58E    $42C9   SNE      V2, #C9         ; Skip if V2 != 201
$590    $762B   ADD      V6, #2B         ; Add 43 to V6
$592    $CDFE   RND      VD, #FE         ; VD = random & FE
$594    $EB6D   UNKNOWN  $EB6D           ; Unknown Exxx instruction
$596    $58B3   UNKNOWN  $58B3           ; Unknown 5xxx instruction
$598    $7B40   ADD      VB, #40         ; Add 64 to VB
$59A    $1C6F   JP       $C6F            ; Jump to C6F
$59C    $5630   SE       V6, V3          ; Skip if V6 == V3
$59E    $AEA8   LD       I, $EA8         ; Load EA8 into I
$5A0    $503F   UNKNOWN  $503F           ; Unknown 5xxx instruction
$5A2    $7986   ADD      V9, #86         ; Add 134 to V9
$5A4    $514C   UNKNOWN  $514C           ; Unknown 5xxx instruction
$5A6    $2CB7   CALL     $CB7            ; Call subroutine at CB7
$5A8    $5522   UNKNOWN  $5522           ; Unknown 5xxx instruction
$5AA    $76B1   ADD      V6, #B1         ; Add 177 to V6
$5AC    $F928   UNKNOWN  F928            ; Unknown Fxxx instruction
$5AE    $A738   LD       I, $738         ; Load 738 into I
$5B0    $591F   UNKNOWN  $591F           ; Unknown 5xxx instruction
$5B2    $06E0   SYS      $6E0            ; System call to 6E0
$5B4    $5095   UNKNOWN  $5095           ; Unknown 5xxx instruction
$5B6    $907E   UNKNOWN  $907E           ; Unknown 9xxx instruction
$5B8    $49FC   SNE      V9, #FC         ; Skip if V9 != 252
$5BA    $C13B   RND      V1, #3B         ; V1 = random & 3B
$5BC    $3A7D   SE       VA, #7D         ; Skip if VA == 125
$5BE    $5AFD   UNKNOWN  $5AFD           ; Unknown 5xxx instruction
$5C0    $6816   LD       V8, #16         ; Load 22 into V8
$5C2    $794B   ADD      V9, #4B         ; Add 75 to V9
$5C4    $6784   LD       V7, #84         ; Load 132 into V7
$5C6    $7741   ADD      V7, #41         ; Add 65 to V7
$5C8    $CE8C   RND      VE, #8C         ; VE = random & 8C
$5CA    $8F61   OR       VF, V6          ; VF |= V6
$5CC    $6BDA   LD       VB, #DA         ; Load 218 into VB
$5CE    $43C1   SNE      V3, #C1         ; Skip if V3 != 193
$5D0    $C372   RND      V3, #72         ; V3 = random & 72
$5D2    $41F7   SNE      V1, #F7         ; Skip if V1 != 247
$5D4    $350B   SE       V5, #0B         ; Skip if V5 == 11
$5D6    $950B   UNKNOWN  $950B           ; Unknown 9xxx instruction
$5D8    $9A6F   UNKNOWN  $9A6F           ; Unknown 9xxx instruction
$5DA    $B88E   JP       V0, $88E        ; Jump to V0 + 88E
$5DC    $9769   UNKNOWN  $9769           ; Unknown 9xxx instruction
$5DE    $4DDE   SNE      VD, #DE         ; Skip if VD != 222
$5E0    $7F13   ADD      VF, #13         ; Add 19 to VF
$5E2    $93F8   UNKNOWN  $93F8           ; Unknown 9xxx instruction
$5E4    $2B20   CALL     $B20            ; Call subroutine at B20
$5E6    $D0C3   DRW      V0, VC, #3      ; Draw 3-byte sprite at V0, VC
$5E8    $07F8   SYS      $7F8            ; System call to 7F8
$5EA    $E1F0   UNKNOWN  $E1F0           ; Unknown Exxx instruction
$5EC    $5573   UNKNOWN  $5573           ; Unknown 5xxx instruction
$5EE    $17D8   JP       $7D8            ; Jump to 7D8
$5F0    $4C56   SNE      VC, #56         ; Skip if VC != 86
$5F2    $5E10   SE       VE, V1          ; Skip if VE == V1
$5F4    $09F6   SYS      $9F6            ; System call to 9F6
$5F6    $771F   ADD      V7, #1F         ; Add 31 to V7
$5F8    $7538   ADD      V5, #38         ; Add 56 to V5
$5FA    $EF23   UNKNOWN  $EF23           ; Unknown Exxx instruction
$5FC    $9E6D   UNKNOWN  $9E6D           ; Unknown 9xxx instruction
$5FE    $151D   JP       $51D            ; Jump to 51D
$600    $2A97   CALL     $A97            ; Call subroutine at A97
$602    $A275   LD       I, $275         ; Load 275 into I
$604    $CAD0   RND      VA, #D0         ; VA = random & D0
$606    $05EF   SYS      $5EF            ; System call to 5EF
$608    $1F17   JP       $F17            ; Jump to F17
$60A    $59D9   UNKNOWN  $59D9           ; Unknown 5xxx instruction
$60C    $2744   CALL     $744            ; Call subroutine at 744
$60E    $8DA3   XOR      VD, VA          ; VD ^= VA
$610    $08F6   SYS      $8F6            ; System call to 8F6
$612    $A5D7   LD       I, $5D7         ; Load 5D7 into I
$614    $C203   RND      V2, #03         ; V2 = random & 03
$616    $5FE1   UNKNOWN  $5FE1           ; Unknown 5xxx instruction
$618    $3A0F   SE       VA, #0F         ; Skip if VA == 15
$61A    $BF44   JP       V0, $F44        ; Jump to V0 + F44
$61C    $E17A   UNKNOWN  $E17A           ; Unknown Exxx instruction
$61E    $88CF   UNKNOWN  88CF            ; Unknown 8xxx instruction
$620    $F08C   UNKNOWN  F08C            ; Unknown Fxxx instruction
$622    $B059   JP       V0, $059        ; Jump to V0 + 059
$624    $758C   ADD      V5, #8C         ; Add 140 to V5
$626    $F97F   UNKNOWN  F97F            ; Unknown Fxxx instruction
$628    $4CAF   SNE      VC, #AF         ; Skip if VC != 175
$62A    $3915   SE       V9, #15         ; Skip if V9 == 21
$62C    $9881   UNKNOWN  $9881           ; Unknown 9xxx instruction
$62E    $0DC6   SYS      $DC6            ; System call to DC6
$630    $48FA   SNE      V8, #FA         ; Skip if V8 != 250
$632    $C388   RND      V3, #88         ; V3 = random & 88
$634    $3EA5   SE       VE, #A5         ; Skip if VE == 165
$636    $62EF   LD       V2, #EF         ; Load 239 into V2
$638    $B415   JP       V0, $415        ; Jump to V0 + 415
$63A    $A898   LD       I, $898         ; Load 898 into I
$63C    $F2CF   UNKNOWN  F2CF            ; Unknown Fxxx instruction
$63E    $FD03   UNKNOWN  FD03            ; Unknown Fxxx instruction
$640    $89D9   UNKNOWN  89D9            ; Unknown 8xxx instruction
$642    $68A5   LD       V8, #A5         ; Load 165 into V8
$644    $FDE6   UNKNOWN  FDE6            ; Unknown Fxxx instruction
$646    $C367   RND      V3, #67         ; V3 = random & 67
$648    $62A9   LD       V2, #A9         ; Load 169 into V2
$64A    $CF95   RND      VF, #95         ; VF = random & 95
$64C    $33B5   SE       V3, #B5         ; Skip if V3 == 181
$64E    $1FF1   JP       $FF1            ; Jump to FF1
$650    $9DBE   UNKNOWN  $9DBE           ; Unknown 9xxx instruction
$652    $9F83   UNKNOWN  $9F83           ; Unknown 9xxx instruction
$654    $4BCF   SNE      VB, #CF         ; Skip if VB != 207
$656    $68E3   LD       V8, #E3         ; Load 227 into V8
$658    $5F55   UNKNOWN  $5F55           ; Unknown 5xxx instruction
$65A    $CCEF   RND      VC, #EF         ; VC = random & EF
$65C    $DA9C   DRW      VA, V9, #C      ; Draw 12-byte sprite at VA, V9
$65E    $748D   ADD      V4, #8D         ; Add 141 to V4
$660    $5F12   UNKNOWN  $5F12           ; Unknown 5xxx instruction
$662    $DF8B   DRW      VF, V8, #B      ; Draw 11-byte sprite at VF, V8
$664    $3100   SE       V1, #00         ; Skip if V1 == 0
$666    $3E95   SE       VE, #95         ; Skip if VE == 149
$668    $89E5   SUB      V9, VE          ; V9 -= VE, VF = !borrow
$66A    $9828   UNKNOWN  $9828           ; Unknown 9xxx instruction
$66C    $83B5   SUB      V3, VB          ; V3 -= VB, VF = !borrow
$66E    $4E88   SNE      VE, #88         ; Skip if VE != 136
$670    $2FF0   CALL     $FF0            ; Call subroutine at FF0
$672    $8B83   XOR      VB, V8          ; VB ^= V8
$674    $3D75   SE       VD, #75         ; Skip if VD == 117
$676    $00A3   SYS      $0A3            ; System call to 0A3
$678    $38B9   SE       V8, #B9         ; Skip if V8 == 185
$67A    $E8F3   UNKNOWN  $E8F3           ; Unknown Exxx instruction
$67C    $B4BA   JP       V0, $4BA        ; Jump to V0 + 4BA
$67E    $0C22   SYS      $C22            ; System call to C22
$680    $E2B2   UNKNOWN  $E2B2           ; Unknown Exxx instruction
$682    $1B87   JP       $B87            ; Jump to B87
$684    $F6CC   UNKNOWN  F6CC            ; Unknown Fxxx instruction
$686    $DE79   DRW      VE, V7, #9      ; Draw 9-byte sprite at VE, V7
$688    $6C16   LD       VC, #16         ; Load 22 into VC
$68A    $FF0A   LD       VF, K           ; Wait for key press, store in VF
$68C    $3D27   SE       VD, #27         ; Skip if VD == 39
$68E    $DFEB   DRW      VF, VE, #B      ; Draw 11-byte sprite at VF, VE
$690    $5CC7   UNKNOWN  $5CC7           ; Unknown 5xxx instruction
$692    $B93D   JP       V0, $93D        ; Jump to V0 + 93D
$694    $1F51   JP       $F51            ; Jump to F51
$696    $9E58   UNKNOWN  $9E58           ; Unknown 9xxx instruction
$698    $5676   UNKNOWN  $5676           ; Unknown 5xxx instruction
$69A    $54B3   UNKNOWN  $54B3           ; Unknown 5xxx instruction
$69C    $B66A   JP       V0, $66A        ; Jump to V0 + 66A
$69E    $E8D0   UNKNOWN  $E8D0           ; Unknown Exxx instruction
$6A0    $7AFD   ADD      VA, #FD         ; Add 253 to VA
$6A2    $205D   CALL     $05D            ; Call subroutine at 05D
$6A4    $E1BA   UNKNOWN  $E1BA           ; Unknown Exxx instruction
$6A6    $5C27   UNKNOWN  $5C27           ; Unknown 5xxx instruction
$6A8    $2540   CALL     $540            ; Call subroutine at 540
$6AA    $1374   JP       $374            ; Jump to 374
$6AC    $2C1D   CALL     $C1D            ; Call subroutine at C1D
$6AE    $DC32   DRW      VC, V3, #2      ; Draw 2-byte sprite at VC, V3
$6B0    $0584   SYS      $584            ; System call to 584
$6B2    $AA9D   LD       I, $A9D         ; Load A9D into I
$6B4    $F638   UNKNOWN  F638            ; Unknown Fxxx instruction
$6B6    $4160   SNE      V1, #60         ; Skip if V1 != 96
$6B8    $B0B1   JP       V0, $0B1        ; Jump to V0 + 0B1
$6BA    $99A6   UNKNOWN  $99A6           ; Unknown 9xxx instruction
$6BC    $F06A   UNKNOWN  F06A            ; Unknown Fxxx instruction
$6BE    $A3A8   LD       I, $3A8         ; Load 3A8 into I
$6C0    $55D6   UNKNOWN  $55D6           ; Unknown 5xxx instruction
$6C2    $1E8F   JP       $E8F            ; Jump to E8F
$6C4    $BCDF   JP       V0, $CDF        ; Jump to V0 + CDF
$6C6    $5389   UNKNOWN  $5389           ; Unknown 5xxx instruction
$6C8    $7BE2   ADD      VB, #E2         ; Add 226 to VB
$6CA    $9223   UNKNOWN  $9223           ; Unknown 9xxx instruction
$6CC    $D67F   DRW      V6, V7, #F      ; Draw 15-byte sprite at V6, V7
$6CE    $2853   CALL     $853            ; Call subroutine at 853
$6D0    $31EE   SE       V1, #EE         ; Skip if V1 == 238
$6D2    $2337   CALL     $337            ; Call subroutine at 337
$6D4    $D39B   DRW      V3, V9, #B      ; Draw 11-byte sprite at V3, V9
$6D6    $B922   JP       V0, $922        ; Jump to V0 + 922
$6D8    $54DC   UNKNOWN  $54DC           ; Unknown 5xxx instruction
$6DA    $16C4   JP       $6C4            ; Jump to 6C4
$6DC    $D7D6   DRW      V7, VD, #6      ; Draw 6-byte sprite at V7, VD
$6DE    $6BCC   LD       VB, #CC         ; Load 204 into VB
$6E0    $F4D9   UNKNOWN  F4D9            ; Unknown Fxxx instruction
$6E2    $8F5F   UNKNOWN  8F5F            ; Unknown 8xxx instruction
$6E4    $F54F   UNKNOWN  F54F            ; Unknown Fxxx instruction
$6E6    $300E   SE       V0, #0E         ; Skip if V0 == 14
$6E8    $AE86   LD       I, $E86         ; Load E86 into I
$6EA    $4284   SNE      V2, #84         ; Skip if V2 != 132
$6EC    $0884   SYS      $884            ; System call to 884
$6EE    $D552   DRW      V5, V5, #2      ; Draw 2-byte sprite at V5, V5
$6F0    $1327   JP       $327            ; Jump to 327
$6F2    $F0FA   UNKNOWN  F0FA            ; Unknown Fxxx instruction
$6F4    $0387   SYS      $387            ; System call to 387
$6F6    $A7FB   LD       I, $7FB         ; Load 7FB into I
$6F8    $6F54   LD       VF, #54         ; Load 84 into VF
$6FA    $F61D   UNKNOWN  F61D            ; Unknown Fxxx instruction
$6FC    $1558   JP       $558            ; Jump to 558
$6FE    $0041   SYS      $041            ; System call to 041
$700    $171C   JP       $71C            ; Jump to 71C
$702    $97DD   UNKNOWN  $97DD           ; Unknown 9xxx instruction
$704    $24E8   CALL     $4E8            ; Call subroutine at 4E8
$706    $ED9A   UNKNOWN  $ED9A           ; Unknown Exxx instruction
$708    $A80D   LD       I, $80D         ; Load 80D into I
$70A    $69FF   LD       V9, #FF         ; Load 255 into V9
$70C    $1E4C   JP       $E4C            ; Jump to E4C
$70E    $8C98   UNKNOWN  8C98            ; Unknown 8xxx instruction
$710    $0AA4   SYS      $AA4            ; System call to AA4
$712    $9863   UNKNOWN  $9863           ; Unknown 9xxx instruction
$714    $440B   SNE      V4, #0B         ; Skip if V4 != 11
$716    $B548   JP       V0, $548        ; Jump to V0 + 548
$718    $5394   UNKNOWN  $5394           ; Unknown 5xxx instruction
$71A    $ABED   LD       I, $BED         ; Load BED into I
$71C    $18B2   JP       $8B2            ; Jump to 8B2
$71E    $4EA7   SNE      VE, #A7         ; Skip if VE != 167
$720    $9259   UNKNOWN  $9259           ; Unknown 9xxx instruction
$722    $C1D0   RND      V1, #D0         ; V1 = random & D0
$724    $1F4F   JP       $F4F            ; Jump to F4F
$726    $0E8D   SYS      $E8D            ; System call to E8D
$728    $AA45   LD       I, $A45         ; Load A45 into I
$72A    $2C25   CALL     $C25            ; Call subroutine at C25
$72C    $D941   DRW      V9, V4, #1      ; Draw 1-byte sprite at V9, V4
$72E    $0F82   SYS      $F82            ; System call to F82
$730    $191E   JP       $91E            ; Jump to 91E
$732    $E8AB   UNKNOWN  $E8AB           ; Unknown Exxx instruction
$734    $B12C   JP       V0, $12C        ; Jump to V0 + 12C
$736    $E3E7   UNKNOWN  $E3E7           ; Unknown Exxx instruction
$738    $02D6   SYS      $2D6            ; System call to 2D6
$73A    $F3D3   UNKNOWN  F3D3            ; Unknown Fxxx instruction
$73C    $49F2   SNE      V9, #F2         ; Skip if V9 != 242
$73E    $ABBD   LD       I, $BBD         ; Load BBD into I
$740    $3F3E   SE       VF, #3E         ; Skip if VF == 62
$742    $D7FE   DRW      V7, VF, #E      ; Draw 14-byte sprite at V7, VF
$744    $627A   LD       V2, #7A         ; Load 122 into V2
$746    $FF42   UNKNOWN  FF42            ; Unknown Fxxx instruction
$748    $7DD8   ADD      VD, #D8         ; Add 216 to VD
$74A    $58E8   UNKNOWN  $58E8           ; Unknown 5xxx instruction
$74C    $139C   JP       $39C            ; Jump to 39C
$74E    $31E6   SE       V1, #E6         ; Skip if V1 == 230
$750    $4F67   SNE      VF, #67         ; Skip if VF != 103
$752    $147D   JP       $47D            ; Jump to 47D
$754    $2E2F   CALL     $E2F            ; Call subroutine at E2F
$756    $6905   LD       V9, #05         ; Load 5 into V9
$758    $F705   UNKNOWN  F705            ; Unknown Fxxx instruction
$75A    $E2B0   UNKNOWN  $E2B0           ; Unknown Exxx instruction
$75C    $B713   JP       V0, $713        ; Jump to V0 + 713
$75E    $C7D8   RND      V7, #D8         ; V7 = random & D8
$760    $A62C   LD       I, $62C         ; Load 62C into I
$762    $4B97   SNE      VB, #97         ; Skip if VB != 151
$764    $9191   UNKNOWN  $9191           ; Unknown 9xxx instruction
$766    $16DA   JP       $6DA            ; Jump to 6DA
$768    $7713   ADD      V7, #13         ; Add 19 to V7
$76A    $8FE7   SUBN     VF, VE          ; VF = VE - VF, VF = !borrow
$76C    $76BE   ADD      V6, #BE         ; Add 190 to V6
$76E    $4FE7   SNE      VF, #E7         ; Skip if VF != 231
$770    $7E38   ADD      VE, #38         ; Add 56 to VE
$772    $9419   UNKNOWN  $9419           ; Unknown 9xxx instruction
$774    $3FA9   SE       VF, #A9         ; Skip if VF == 169
$776    $3450   SE       V4, #50         ; Skip if V4 == 80
$778    $B02B   JP       V0, $02B        ; Jump to V0 + 02B
$77A    $CDA9   RND      VD, #A9         ; VD = random & A9
$77C    $057E   SYS      $57E            ; System call to 57E
$77E    $77CA   ADD      V7, #CA         ; Add 202 to V7
$780    $F457   UNKNOWN  F457            ; Unknown Fxxx instruction
$782    $E2DC   UNKNOWN  $E2DC           ; Unknown Exxx instruction
$784    $482C   SNE      V8, #2C         ; Skip if V8 != 44
$786    $E82C   UNKNOWN  $E82C           ; Unknown Exxx instruction
$788    $B685   JP       V0, $685        ; Jump to V0 + 685
$78A    $6589   LD       V5, #89         ; Load 137 into V5
$78C    $83DF   UNKNOWN  83DF            ; Unknown 8xxx instruction
$78E    $BBB9   JP       V0, $BB9        ; Jump to V0 + BB9
$790    $BBF7   JP       V0, $BF7        ; Jump to V0 + BF7
$792    $2233   CALL     $233            ; Call subroutine at 233
$794    $E026   UNKNOWN  $E026           ; Unknown Exxx instruction
$796    $B07E   JP       V0, $07E        ; Jump to V0 + 07E
$798    $3DE6   SE       VD, #E6         ; Skip if VD == 230
$79A    $CA8F   RND      VA, #8F         ; VA = random & 8F
$79C    $1501   JP       $501            ; Jump to 501
$79E    $4A71   SNE      VA, #71         ; Skip if VA != 113
$7A0    $382B   SE       V8, #2B         ; Skip if V8 == 43
$7A2    $F1F3   UNKNOWN  F1F3            ; Unknown Fxxx instruction
$7A4    $66DD   LD       V6, #DD         ; Load 221 into V6
$7A6    $2E47   CALL     $E47            ; Call subroutine at E47
$7A8    $2C7C   CALL     $C7C            ; Call subroutine at C7C
$7AA    $DB31   DRW      VB, V3, #1      ; Draw 1-byte sprite at VB, V3
$7AC    $C6AD   RND      V6, #AD         ; V6 = random & AD
$7AE    $2679   CALL     $679            ; Call subroutine at 679
$7B0    $2125   CALL     $125            ; Call subroutine at 125
$7B2    $0F11   SYS      $F11            ; System call to F11
$7B4    $BA55   JP       V0, $A55        ; Jump to V0 + A55
$7B6    $FF15   LD       DT, VF          ; Delay timer = VF
$7B8    $FC57   UNKNOWN  FC57            ; Unknown Fxxx instruction
$7BA    $5D5C   UNKNOWN  $5D5C           ; Unknown 5xxx instruction
$7BC    $3BD4   SE       VB, #D4         ; Skip if VB == 212
$7BE    $EB1A   UNKNOWN  $EB1A           ; Unknown Exxx instruction
$7C0    $61B6   LD       V1, #B6         ; Load 182 into V1
$7C2    $C42C   RND      V4, #2C         ; V4 = random & 2C
$7C4    $DAD5   DRW      VA, VD, #5      ; Draw 5-byte sprite at VA, VD
$7C6    $08A6   SYS      $8A6            ; System call to 8A6
$7C8    $B102   JP       V0, $102        ; Jump to V0 + 102
$7CA    $BBE2   JP       V0, $BE2        ; Jump to V0 + BE2
$7CC    $EE44   UNKNOWN  $EE44           ; Unknown Exxx instruction
$7CE    $5839   UNKNOWN  $5839           ; Unknown 5xxx instruction
$7D0    $30F2   SE       V0, #F2         ; Skip if V0 == 242
$7D2    $3699   SE       V6, #99         ; Skip if V6 == 153
$7D4    $F71A   UNKNOWN  F71A            ; Unknown Fxxx instruction
$7D6    $3276   SE       V2, #76         ; Skip if V2 == 118
$7D8    $D02E   DRW      V0, V2, #E      ; Draw 14-byte sprite at V0, V2
$7DA    $E0C0   UNKNOWN  $E0C0           ; Unknown Exxx instruction
$7DC    $3FB1   SE       VF, #B1         ; Skip if VF == 177
$7DE    $3120   SE       V1, #20         ; Skip if V1 == 32
$7E0    $594F   UNKNOWN  $594F           ; Unknown 5xxx instruction
$7E2    $585E   UNKNOWN  $585E           ; Unknown 5xxx instruction
$7E4    $1587   JP       $587            ; Jump to 587
$7E6    $D456   DRW      V4, V5, #6      ; Draw 6-byte sprite at V4, V5
$7E8    $2AF8   CALL     $AF8            ; Call subroutine at AF8
$7EA    $65DE   LD       V5, #DE         ; Load 222 into V5
$7EC    $35C7   SE       V5, #C7         ; Skip if V5 == 199
$7EE    $3677   SE       V6, #77         ; Skip if V6 == 119
$7F0    $5538   UNKNOWN  $5538           ; Unknown 5xxx instruction
$7F2    $3A62   SE       VA, #62         ; Skip if VA == 98
$7F4    $7F91   ADD      VF, #91         ; Add 145 to VF
$7F6    $7A40   ADD      VA, #40         ; Add 64 to VA
$7F8    $AF33   LD       I, $F33         ; Load F33 into I
$7FA    $DF19   DRW      VF, V1, #9      ; Draw 9-byte sprite at VF, V1
$7FC    $41EA   SNE      V1, #EA         ; Skip if V1 != 234
$7FE    $25EC   CALL     $5EC            ; Call subroutine at 5EC
$800    $92C3   UNKNOWN  $92C3           ; Unknown 9xxx instruction
$802    $BA64   JP       V0, $A64        ; Jump to V0 + A64
$804    $BDC6   JP       V0, $DC6        ; Jump to V0 + DC6
$806    $45C7   SNE      V5, #C7         ; Skip if V5 != 199
$808    $9931   UNKNOWN  $9931           ; Unknown 9xxx instruction
$80A    $9B7C   UNKNOWN  $9B7C           ; Unknown 9xxx instruction
$80C    $B524   JP       V0, $524        ; Jump to V0 + 524
$80E    $C1EE   RND      V1, #EE         ; V1 = random & EE
$810    $330A   SE       V3, #0A         ; Skip if V3 == 10
$812    $7949   ADD      V9, #49         ; Add 73 to V9
$814    $5A5B   UNKNOWN  $5A5B           ; Unknown 5xxx instruction
$816    $7144   ADD      V1, #44         ; Add 68 to V1
$818    $11EC   JP       $1EC            ; Jump to 1EC
$81A    $49A3   SNE      V9, #A3         ; Skip if V9 != 163
$81C    $3E3C   SE       VE, #3C         ; Skip if VE == 60
$81E    $C553   RND      V5, #53         ; V5 = random & 53
$820    $C30C   RND      V3, #0C         ; V3 = random & 0C
$822    $3588   SE       V5, #88         ; Skip if V5 == 136
$824    $FB3B   UNKNOWN  FB3B            ; Unknown Fxxx instruction
$826    $123B   JP       $23B            ; Jump to 23B
$828    $A979   LD       I, $979         ; Load 979 into I
$82A    $02AC   SYS      $2AC            ; System call to 2AC
$82C    $48DF   SNE      V8, #DF         ; Skip if V8 != 223
$82E    $360E   SE       V6, #0E         ; Skip if V6 == 14
$830    $2414   CALL     $414            ; Call subroutine at 414
$832    $0F7B   SYS      $F7B            ; System call to F7B
$834    $09E2   SYS      $9E2            ; System call to 9E2
$836    $79A8   ADD      V9, #A8         ; Add 168 to V9
$838    $9DE9   UNKNOWN  $9DE9           ; Unknown 9xxx instruction
$83A    $23C5   CALL     $3C5            ; Call subroutine at 3C5
$83C    $4B03   SNE      VB, #03         ; Skip if VB != 3
$83E    $6EF7   LD       VE, #F7         ; Load 247 into VE
$840    $5896   UNKNOWN  $5896           ; Unknown 5xxx instruction
$842    $42D2   SNE      V2, #D2         ; Skip if V2 != 210
$844    $6A67   LD       VA, #67         ; Load 103 into VA
$846    $7D04   ADD      VD, #04         ; Add 4 to VD
$848    $A33E   LD       I, $33E         ; Load 33E into I
$84A    $F9D0   UNKNOWN  F9D0            ; Unknown Fxxx instruction
$84C    $5D68   UNKNOWN  $5D68           ; Unknown 5xxx instruction
$84E    $C525   RND      V5, #25         ; V5 = random & 25
$850    $160C   JP       $60C            ; Jump to 60C
$852    $20B9   CALL     $0B9            ; Call subroutine at 0B9
$854    $8FF0   LD       VF, VF          ; VF = VF
$856    $0A86   SYS      $A86            ; System call to A86
$858    $81FA   UNKNOWN  81FA            ; Unknown 8xxx instruction
$85A    $AE16   LD       I, $E16         ; Load E16 into I
$85C    $2B03   CALL     $B03            ; Call subroutine at B03
$85E    $6807   LD       V8, #07         ; Load 7 into V8
$860    $E589   UNKNOWN  $E589           ; Unknown Exxx instruction
$862    $BADF   JP       V0, $ADF        ; Jump to V0 + ADF
$864    $16D8   JP       $6D8            ; Jump to 6D8
$866    $FD75   UNKNOWN  FD75            ; Unknown Fxxx instruction
$868    $E70E   UNKNOWN  $E70E           ; Unknown Exxx instruction
$86A    $B47D   JP       V0, $47D        ; Jump to V0 + 47D
$86C    $0412   SYS      $412            ; System call to 412
$86E    $0CCC   SYS      $CCC            ; System call to CCC
$870    $F129   LD       F, V1           ; I = sprite address for digit V1
$872    $1C0D   JP       $C0D            ; Jump to C0D
$874    $64E0   LD       V4, #E0         ; Load 224 into V4
$876    $EF51   UNKNOWN  $EF51           ; Unknown Exxx instruction
$878    $798B   ADD      V9, #8B         ; Add 139 to V9
$87A    $661F   LD       V6, #1F         ; Load 31 into V6
$87C    $B26D   JP       V0, $26D        ; Jump to V0 + 26D
$87E    $E4B1   UNKNOWN  $E4B1           ; Unknown Exxx instruction
$880    $EFA5   UNKNOWN  $EFA5           ; Unknown Exxx instruction
$882    $85F6   SHR      V5              ; V5 >>= 1, VF = LSB
$884    $7D21   ADD      VD, #21         ; Add 33 to VD
$886    $272C   CALL     $72C            ; Call subroutine at 72C
$888    $838E   SHL      V3              ; V3 <<= 1, VF = MSB
$88A    $A56C   LD       I, $56C         ; Load 56C into I
$88C    $6FEA   LD       VF, #EA         ; Load 234 into VF
$88E    $A56C   LD       I, $56C         ; Load 56C into I
$890    $9888   UNKNOWN  $9888           ; Unknown 9xxx instruction
$892    $EEAB   UNKNOWN  $EEAB           ; Unknown Exxx instruction
$894    $CBC9   RND      VB, #C9         ; VB = random & C9
$896    $3273   SE       V2, #73         ; Skip if V2 == 115
$898    $96CA   UNKNOWN  $96CA           ; Unknown 9xxx instruction
$89A    $1D36   JP       $D36            ; Jump to D36
$89C    $A8C8   LD       I, $8C8         ; Load 8C8 into I
$89E    $7405   ADD      V4, #05         ; Add 5 to V4
$8A0    $38C0   SE       V8, #C0         ; Skip if V8 == 192
$8A2    $7DF1   ADD      VD, #F1         ; Add 241 to VD
$8A4    $48AE   SNE      V8, #AE         ; Skip if V8 != 174
$8A6    $88D4   ADD      V8, VD          ; V8 += VD, VF = carry
$8A8    $1E49   JP       $E49            ; Jump to E49
$8AA    $8721   OR       V7, V2          ; V7 |= V2
$8AC    $4E85   SNE      VE, #85         ; Skip if VE != 133
$8AE    $8B5A   UNKNOWN  8B5A            ; Unknown 8xxx instruction
$8B0    $1218   JP       $218            ; Jump to 218
$8B2    $815F   UNKNOWN  815F            ; Unknown 8xxx instruction
$8B4    $A1BC   LD       I, $1BC         ; Load 1BC into I
$8B6    $9264   UNKNOWN  $9264           ; Unknown 9xxx instruction
$8B8    $C2C7   RND      V2, #C7         ; V2 = random & C7
$8BA    $B137   JP       V0, $137        ; Jump to V0 + 137
$8BC    $9146   UNKNOWN  $9146           ; Unknown 9xxx instruction
$8BE    $BC93   JP       V0, $C93        ; Jump to V0 + C93
$8C0    $3F52   SE       VF, #52         ; Skip if VF == 82
$8C2    $432B   SNE      V3, #2B         ; Skip if V3 != 43
$8C4    $C693   RND      V6, #93         ; V6 = random & 93
$8C6    $ECA2   UNKNOWN  $ECA2           ; Unknown Exxx instruction
$8C8    $D3FE   DRW      V3, VF, #E      ; Draw 14-byte sprite at V3, VF
$8CA    $37B5   SE       V7, #B5         ; Skip if V7 == 181
$8CC    $59D7   UNKNOWN  $59D7           ; Unknown 5xxx instruction
$8CE    $9A7B   UNKNOWN  $9A7B           ; Unknown 9xxx instruction
$8D0    $A3C6   LD       I, $3C6         ; Load 3C6 into I
$8D2    $7E74   ADD      VE, #74         ; Add 116 to VE
$8D4    $BE59   JP       V0, $E59        ; Jump to V0 + E59
$8D6    $760D   ADD      V6, #0D         ; Add 13 to V6
$8D8    $47AE   SNE      V7, #AE         ; Skip if V7 != 174
$8DA    $23E2   CALL     $3E2            ; Call subroutine at 3E2
$8DC    $393E   SE       V9, #3E         ; Skip if V9 == 62
$8DE    $974E   UNKNOWN  $974E           ; Unknown 9xxx instruction
$8E0    $12B9   JP       $2B9            ; Jump to 2B9
$8E2    $12C0   JP       $2C0            ; Jump to 2C0
$8E4    $A692   LD       I, $692         ; Load 692 into I
$8E6    $981E   UNKNOWN  $981E           ; Unknown 9xxx instruction
$8E8    $5B18   UNKNOWN  $5B18           ; Unknown 5xxx instruction
$8EA    $4AE1   SNE      VA, #E1         ; Skip if VA != 225
$8EC    $38BA   SE       V8, #BA         ; Skip if V8 == 186
$8EE    $F3E6   UNKNOWN  F3E6            ; Unknown Fxxx instruction
$8F0    $607D   LD       V0, #7D         ; Load 125 into V0
$8F2    $01EB   SYS      $1EB            ; System call to 1EB
$8F4    $6D04   LD       VD, #04         ; Load 4 into VD
$8F6    $8327   SUBN     V3, V2          ; V3 = V2 - V3, VF = !borrow
$8F8    $B21C   JP       V0, $21C        ; Jump to V0 + 21C
$8FA    $B42D   JP       V0, $42D        ; Jump to V0 + 42D
$8FC    $2904   CALL     $904            ; Call subroutine at 904
$8FE    $C57B   RND      V5, #7B         ; V5 = random & 7B
$900    $ECAF   UNKNOWN  $ECAF           ; Unknown Exxx instruction
$902    $FB22   UNKNOWN  FB22            ; Unknown Fxxx instruction
$904    $1A32   JP       $A32            ; Jump to A32
$906    $0F92   SYS      $F92            ; System call to F92
$908    $D87B   DRW      V8, V7, #B      ; Draw 11-byte sprite at V8, V7
$90A    $D96C   DRW      V9, V6, #C      ; Draw 12-byte sprite at V9, V6
$90C    $A468   LD       I, $468         ; Load 468 into I
$90E    $B653   JP       V0, $653        ; Jump to V0 + 653
$910    $DDAD   DRW      VD, VA, #D      ; Draw 13-byte sprite at VD, VA
$912    $5688   UNKNOWN  $5688           ; Unknown 5xxx instruction
$914    $1E0F   JP       $E0F            ; Jump to E0F
$916    $ADEF   LD       I, $DEF         ; Load DEF into I
$918    $C8A5   RND      V8, #A5         ; V8 = random & A5
$91A    $68ED   LD       V8, #ED         ; Load 237 into V8
$91C    $3990   SE       V9, #90         ; Skip if V9 == 144
$91E    $A225   LD       I, $225         ; Load 225 into I
$920    $1218   JP       $218            ; Jump to 218
$922    $C176   RND      V1, #76         ; V1 = random & 76
$924    $A9D3   LD       I, $9D3         ; Load 9D3 into I
$926    $DFD9   DRW      VF, VD, #9      ; Draw 9-byte sprite at VF, VD
$928    $3433   SE       V4, #33         ; Skip if V4 == 51
$92A    $4C26   SNE      VC, #26         ; Skip if VC != 38
$92C    $AB32   LD       I, $B32         ; Load B32 into I
$92E    $D8D2   DRW      V8, VD, #2      ; Draw 2-byte sprite at V8, VD
$930    $8FAD   UNKNOWN  8FAD            ; Unknown 8xxx instruction
$932    $4317   SNE      V3, #17         ; Skip if V3 != 23
$934    $AC63   LD       I, $C63         ; Load C63 into I
$936    $0C52   SYS      $C52            ; System call to C52
$938    $D913   DRW      V9, V1, #3      ; Draw 3-byte sprite at V9, V1
$93A    $016A   SYS      $16A            ; System call to 16A
$93C    $C47A   RND      V4, #7A         ; V4 = random & 7A
$93E    $13D2   JP       $3D2            ; Jump to 3D2
$940    $73AA   ADD      V3, #AA         ; Add 170 to V3
$942    $BB31   JP       V0, $B31        ; Jump to V0 + B31
$944    $0D6A   SYS      $D6A            ; System call to D6A
$946    $B34E   JP       V0, $34E        ; Jump to V0 + 34E
$948    $C064   RND      V0, #64         ; V0 = random & 64
$94A    $E2F5   UNKNOWN  $E2F5           ; Unknown Exxx instruction
$94C    $8418   UNKNOWN  8418            ; Unknown 8xxx instruction
$94E    $1E29   JP       $E29            ; Jump to E29
$950    $B75A   JP       V0, $75A        ; Jump to V0 + 75A
$952    $85AC   UNKNOWN  85AC            ; Unknown 8xxx instruction
$954    $EFAD   UNKNOWN  $EFAD           ; Unknown Exxx instruction
$956    $26A1   CALL     $6A1            ; Call subroutine at 6A1
$958    $06F4   SYS      $6F4            ; System call to 6F4
$95A    $D302   DRW      V3, V0, #2      ; Draw 2-byte sprite at V3, V0
$95C    $32BF   SE       V2, #BF         ; Skip if V2 == 191
$95E    $7CD6   ADD      VC, #D6         ; Add 214 to VC
$960    $6AA5   LD       VA, #A5         ; Load 165 into VA
$962    $53CD   UNKNOWN  $53CD           ; Unknown 5xxx instruction
$964    $76EB   ADD      V6, #EB         ; Add 235 to V6
$966    $5137   UNKNOWN  $5137           ; Unknown 5xxx instruction
$968    $FC7A   UNKNOWN  FC7A            ; Unknown Fxxx instruction
$96A    $7C6D   ADD      VC, #6D         ; Add 109 to VC
$96C    $C5CA   RND      V5, #CA         ; V5 = random & CA
$96E    $4D72   SNE      VD, #72         ; Skip if VD != 114
$970    $94B5   UNKNOWN  $94B5           ; Unknown 9xxx instruction
$972    $C221   RND      V2, #21         ; V2 = random & 21
$974    $D40E   DRW      V4, V0, #E      ; Draw 14-byte sprite at V4, V0
$976    $4633   SNE      V6, #33         ; Skip if V6 != 51
$978    $038D   SYS      $38D            ; System call to 38D
$97A    $CA2D   RND      VA, #2D         ; VA = random & 2D
$97C    $73C6   ADD      V3, #C6         ; Add 198 to V3
$97E    $81AA   UNKNOWN  81AA            ; Unknown 8xxx instruction
$980    $B835   JP       V0, $835        ; Jump to V0 + 835
$982    $2F17   CALL     $F17            ; Call subroutine at F17
$984    $3C64   SE       VC, #64         ; Skip if VC == 100
$986    $CF62   RND      VF, #62         ; VF = random & 62
$988    $37CC   SE       V7, #CC         ; Skip if V7 == 204
$98A    $760F   ADD      V6, #0F         ; Add 15 to V6
$98C    $FD26   UNKNOWN  FD26            ; Unknown Fxxx instruction
$98E    $5B03   UNKNOWN  $5B03           ; Unknown 5xxx instruction
$990    $8E42   AND      VE, V4          ; VE &= V4
$992    $247E   CALL     $47E            ; Call subroutine at 47E
$994    $297E   CALL     $97E            ; Call subroutine at 97E
$996    $34B6   SE       V4, #B6         ; Skip if V4 == 182
$998    $7953   ADD      V9, #53         ; Add 83 to V9
$99A    $6AAD   LD       VA, #AD         ; Load 173 into VA
$99C    $F5AC   UNKNOWN  F5AC            ; Unknown Fxxx instruction
$99E    $A03E   LD       I, $03E         ; Load 03E into I
$9A0    $8C3C   UNKNOWN  8C3C            ; Unknown 8xxx instruction
$9A2    $F953   UNKNOWN  F953            ; Unknown Fxxx instruction
$9A4    $6762   LD       V7, #62         ; Load 98 into V7
$9A6    $493F   SNE      V9, #3F         ; Skip if V9 != 63
$9A8    $45CF   SNE      V5, #CF         ; Skip if V5 != 207
$9AA    $BD82   JP       V0, $D82        ; Jump to V0 + D82
$9AC    $F6FC   UNKNOWN  F6FC            ; Unknown Fxxx instruction
$9AE    $24CB   CALL     $4CB            ; Call subroutine at 4CB
$9B0    $CC3C   RND      VC, #3C         ; VC = random & 3C
$9B2    $F52A   UNKNOWN  F52A            ; Unknown Fxxx instruction
$9B4    $3823   SE       V8, #23         ; Skip if V8 == 35
$9B6    $959E   UNKNOWN  $959E           ; Unknown 9xxx instruction
$9B8    $252B   CALL     $52B            ; Call subroutine at 52B
$9BA    $7D59   ADD      VD, #59         ; Add 89 to VD
$9BC    $7D2D   ADD      VD, #2D         ; Add 45 to VD
$9BE    $2454   CALL     $454            ; Call subroutine at 454
$9C0    $676A   LD       V7, #6A         ; Load 106 into V7
$9C2    $8DDE   SHL      VD              ; VD <<= 1, VF = MSB
$9C4    $C0E1   RND      V0, #E1         ; V0 = random & E1
$9C6    $4E7A   SNE      VE, #7A         ; Skip if VE != 122
$9C8    $DE7A   DRW      VE, V7, #A      ; Draw 10-byte sprite at VE, V7
$9CA    $4105   SNE      V1, #05         ; Skip if V1 != 5
$9CC    $A00B   LD       I, $00B         ; Load 00B into I
$9CE    $11A5   JP       $1A5            ; Jump to 1A5
$9D0    $F491   UNKNOWN  F491            ; Unknown Fxxx instruction
$9D2    $E2D1   UNKNOWN  $E2D1           ; Unknown Exxx instruction
$9D4    $59CB   UNKNOWN  $59CB           ; Unknown 5xxx instruction
$9D6    $44D5   SNE      V4, #D5         ; Skip if V4 != 213
$9D8    $6CBA   LD       VC, #BA         ; Load 186 into VC
$9DA    $9475   UNKNOWN  $9475           ; Unknown 9xxx instruction
$9DC    $F3F4   UNKNOWN  F3F4            ; Unknown Fxxx instruction
$9DE    $8E42   AND      VE, V4          ; VE &= V4
$9E0    $3AF4   SE       VA, #F4         ; Skip if VA == 244
$9E2    $D76D   DRW      V7, V6, #D      ; Draw 13-byte sprite at V7, V6
$9E4    $B117   JP       V0, $117        ; Jump to V0 + 117
$9E6    $A799   LD       I, $799         ; Load 799 into I
$9E8    $0DEE   SYS      $DEE            ; System call to DEE
$9EA    $21CF   CALL     $1CF            ; Call subroutine at 1CF
$9EC    $2C6D   CALL     $C6D            ; Call subroutine at C6D
$9EE    $F9DB   UNKNOWN  F9DB            ; Unknown Fxxx instruction
$9F0    $B4A5   JP       V0, $4A5        ; Jump to V0 + 4A5
$9F2    $3A3F   SE       VA, #3F         ; Skip if VA == 63
$9F4    $556E   UNKNOWN  $556E           ; Unknown 5xxx instruction
$9F6    $9716   UNKNOWN  $9716           ; Unknown 9xxx instruction
$9F8    $B872   JP       V0, $872        ; Jump to V0 + 872
$9FA    $7525   ADD      V5, #25         ; Add 37 to V5
$9FC    $842C   UNKNOWN  842C            ; Unknown 8xxx instruction
$9FE    $5C5A   UNKNOWN  $5C5A           ; Unknown 5xxx instruction
$A00    $4A2C   SNE      VA, #2C         ; Skip if VA != 44
$A02    $703C   ADD      V0, #3C         ; Add 60 to V0
$A04    $9DDF   UNKNOWN  $9DDF           ; Unknown 9xxx instruction
$A06    $9073   UNKNOWN  $9073           ; Unknown 9xxx instruction
$A08    $B26B   JP       V0, $26B        ; Jump to V0 + 26B
$A0A    $ED6C   UNKNOWN  $ED6C           ; Unknown Exxx instruction
$A0C    $4C8E   SNE      VC, #8E         ; Skip if VC != 142
$A0E    $A707   LD       I, $707         ; Load 707 into I
$A10    $CD29   RND      VD, #29         ; VD = random & 29
$A12    $A7C0   LD       I, $7C0         ; Load 7C0 into I
$A14    $0A06   SYS      $A06            ; System call to A06
$A16    $0A3B   SYS      $A3B            ; System call to A3B
$A18    $C8F7   RND      V8, #F7         ; V8 = random & F7
$A1A    $0F93   SYS      $F93            ; System call to F93
$A1C    $1737   JP       $737            ; Jump to 737
$A1E    $5AD5   UNKNOWN  $5AD5           ; Unknown 5xxx instruction
$A20    $51A7   UNKNOWN  $51A7           ; Unknown 5xxx instruction
$A22    $475C   SNE      V7, #5C         ; Skip if V7 != 92
$A24    $5A08   UNKNOWN  $5A08           ; Unknown 5xxx instruction
$A26    $98AF   UNKNOWN  $98AF           ; Unknown 9xxx instruction
$A28    $EA09   UNKNOWN  $EA09           ; Unknown Exxx instruction
$A2A    $4FCE   SNE      VF, #CE         ; Skip if VF != 206
$A2C    $698C   LD       V9, #8C         ; Load 140 into V9
$A2E    $7401   ADD      V4, #01         ; Add 1 to V4
$A30    $2987   CALL     $987            ; Call subroutine at 987
$A32    $3EDE   SE       VE, #DE         ; Skip if VE == 222
$A34    $D000   DRW      V0, V0, #0      ; Draw 0-byte sprite at V0, V0
$A36    $3678   SE       V6, #78         ; Skip if V6 == 120
$A38    $217A   CALL     $17A            ; Call subroutine at 17A
$A3A    $C418   RND      V4, #18         ; V4 = random & 18
$A3C    $F64B   UNKNOWN  F64B            ; Unknown Fxxx instruction
$A3E    $3550   SE       V5, #50         ; Skip if V5 == 80
$A40    $F0ED   UNKNOWN  F0ED            ; Unknown Fxxx instruction
$A42    $35EA   SE       V5, #EA         ; Skip if V5 == 234
$A44    $9B69   UNKNOWN  $9B69           ; Unknown 9xxx instruction
$A46    $387B   SE       V8, #7B         ; Skip if V8 == 123
$A48    $3A73   SE       VA, #73         ; Skip if VA == 115
$A4A    $0B73   SYS      $B73            ; System call to B73
$A4C    $676D   LD       V7, #6D         ; Load 109 into V7
$A4E    $14F1   JP       $4F1            ; Jump to 4F1
$A50    $05DA   SYS      $5DA            ; System call to 5DA
$A52    $1AF0   JP       $AF0            ; Jump to AF0
$A54    $DF71   DRW      VF, V7, #1      ; Draw 1-byte sprite at VF, V7
$A56    $A873   LD       I, $873         ; Load 873 into I
$A58    $7FA3   ADD      VF, #A3         ; Add 163 to VF
$A5A    $D9B6   DRW      V9, VB, #6      ; Draw 6-byte sprite at V9, VB
$A5C    $04E3   SYS      $4E3            ; System call to 4E3
$A5E    $4207   SNE      V2, #07         ; Skip if V2 != 7
$A60    $7B4B   ADD      VB, #4B         ; Add 75 to VB
$A62    $0945   SYS      $945            ; System call to 945
$A64    $0CE3   SYS      $CE3            ; System call to CE3
$A66    $69CD   LD       V9, #CD         ; Load 205 into V9
$A68    $B955   JP       V0, $955        ; Jump to V0 + 955
$A6A    $2065   CALL     $065            ; Call subroutine at 065
$A6C    $3CDA   SE       VC, #DA         ; Skip if VC == 218
$A6E    $1206   JP       $206            ; Jump to 206
$A70    $A704   LD       I, $704         ; Load 704 into I
$A72    $33E2   SE       V3, #E2         ; Skip if V3 == 226
$A74    $BCEA   JP       V0, $CEA        ; Jump to V0 + CEA
$A76    $37B8   SE       V7, #B8         ; Skip if V7 == 184
$A78    $0926   SYS      $926            ; System call to 926
$A7A    $F5DF   UNKNOWN  F5DF            ; Unknown Fxxx instruction
$A7C    $A9F5   LD       I, $9F5         ; Load 9F5 into I
$A7E    $E6B2   UNKNOWN  $E6B2           ; Unknown Exxx instruction
$A80    $D321   DRW      V3, V2, #1      ; Draw 1-byte sprite at V3, V2
$A82    $FA56   UNKNOWN  FA56            ; Unknown Fxxx instruction
$A84    $3953   SE       V9, #53         ; Skip if V9 == 83
$A86    $F0CD   UNKNOWN  F0CD            ; Unknown Fxxx instruction
$A88    $73DA   ADD      V3, #DA         ; Add 218 to V3
$A8A    $B740   JP       V0, $740        ; Jump to V0 + 740
$A8C    $4105   SNE      V1, #05         ; Skip if V1 != 5
$A8E    $0B27   SYS      $B27            ; System call to B27
$A90    $05BF   SYS      $5BF            ; System call to 5BF
$A92    $DDF8   DRW      VD, VF, #8      ; Draw 8-byte sprite at VD, VF
$A94    $4ABE   SNE      VA, #BE         ; Skip if VA != 190
$A96    $ABE5   LD       I, $BE5         ; Load BE5 into I
$A98    $6D9D   LD       VD, #9D         ; Load 157 into VD
$A9A    $FDB4   UNKNOWN  FDB4            ; Unknown Fxxx instruction
$A9C    $F150   UNKNOWN  F150            ; Unknown Fxxx instruction
$A9E    $A86E   LD       I, $86E         ; Load 86E into I
$AA0    $65D9   LD       V5, #D9         ; Load 217 into V5
$AA2    $D5AD   DRW      V5, VA, #D      ; Draw 13-byte sprite at V5, VA
$AA4    $E14D   UNKNOWN  $E14D           ; Unknown Exxx instruction
$AA6    $FEEB   UNKNOWN  FEEB            ; Unknown Fxxx instruction
$AA8    $F0E0   UNKNOWN  F0E0            ; Unknown Fxxx instruction
$AAA    $5589   UNKNOWN  $5589           ; Unknown 5xxx instruction
$AAC    $1B6A   JP       $B6A            ; Jump to B6A
$AAE    $C1FD   RND      V1, #FD         ; V1 = random & FD
$AB0    $72C5   ADD      V2, #C5         ; Add 197 to V2
$AB2    $760E   ADD      V6, #0E         ; Add 14 to V6
$AB4    $F3D5   UNKNOWN  F3D5            ; Unknown Fxxx instruction
$AB6    $F55D   UNKNOWN  F55D            ; Unknown Fxxx instruction
$AB8    $F37C   UNKNOWN  F37C            ; Unknown Fxxx instruction
$ABA    $FE8D   UNKNOWN  FE8D            ; Unknown Fxxx instruction
$ABC    $A003   LD       I, $003         ; Load 003 into I
$ABE    $4E90   SNE      VE, #90         ; Skip if VE != 144
$AC0    $FC71   UNKNOWN  FC71            ; Unknown Fxxx instruction
$AC2    $FD45   UNKNOWN  FD45            ; Unknown Fxxx instruction
$AC4    $4131   SNE      V1, #31         ; Skip if V1 != 49
$AC6    $7C52   ADD      VC, #52         ; Add 82 to VC
$AC8    $89CE   SHL      V9              ; V9 <<= 1, VF = MSB
$ACA    $30FD   SE       V0, #FD         ; Skip if V0 == 253
$ACC    $7F2C   ADD      VF, #2C         ; Add 44 to VF
$ACE    $5035   UNKNOWN  $5035           ; Unknown 5xxx instruction
$AD0    $72BD   ADD      V2, #BD         ; Add 189 to V2
$AD2    $CB9C   RND      VB, #9C         ; VB = random & 9C
$AD4    $D4B0   DRW      V4, VB, #0      ; Draw 0-byte sprite at V4, VB
$AD6    $ADE1   LD       I, $DE1         ; Load DE1 into I
$AD8    $B3AB   JP       V0, $3AB        ; Jump to V0 + 3AB
$ADA    $B666   JP       V0, $666        ; Jump to V0 + 666
$ADC    $1C13   JP       $C13            ; Jump to C13
$ADE    $E28C   UNKNOWN  $E28C           ; Unknown Exxx instruction
$AE0    $A54C   LD       I, $54C         ; Load 54C into I
$AE2    $C6BE   RND      V6, #BE         ; V6 = random & BE
$AE4    $11F2   JP       $1F2            ; Jump to 1F2
$AE6    $CE6F   RND      VE, #6F         ; VE = random & 6F
$AE8    $7323   ADD      V3, #23         ; Add 35 to V3
$AEA    $3B15   SE       VB, #15         ; Skip if VB == 21
$AEC    $6C0C   LD       VC, #0C         ; Load 12 into VC
$AEE    $2A18   CALL     $A18            ; Call subroutine at A18
$AF0    $7FFB   ADD      VF, #FB         ; Add 251 to VF
$AF2    $4E0B   SNE      VE, #0B         ; Skip if VE != 11
$AF4    $2021   CALL     $021            ; Call subroutine at 021
$AF6    $34BC   SE       V4, #BC         ; Skip if V4 == 188
$AF8    $B77C   JP       V0, $77C        ; Jump to V0 + 77C
$AFA    $B979   JP       V0, $979        ; Jump to V0 + 979
$AFC    $C244   RND      V2, #44         ; V2 = random & 44
$AFE    $2AEC   CALL     $AEC            ; Call subroutine at AEC
$B00    $45E2   SNE      V5, #E2         ; Skip if V5 != 226
$B02    $1482   JP       $482            ; Jump to 482
$B04    $8338   UNKNOWN  8338            ; Unknown 8xxx instruction
$B06    $F65E   UNKNOWN  F65E            ; Unknown Fxxx instruction
$B08    $5732   UNKNOWN  $5732           ; Unknown 5xxx instruction
$B0A    $3867   SE       V8, #67         ; Skip if V8 == 103
$B0C    $9B04   UNKNOWN  $9B04           ; Unknown 9xxx instruction
$B0E    $DDDC   DRW      VD, VD, #C      ; Draw 12-byte sprite at VD, VD
$B10    $67EB   LD       V7, #EB         ; Load 235 into V7
$B12    $1A77   JP       $A77            ; Jump to A77
$B14    $7840   ADD      V8, #40         ; Add 64 to V8
$B16    $C78B   RND      V7, #8B         ; V7 = random & 8B
$B18    $BDF2   JP       V0, $DF2        ; Jump to V0 + DF2
$B1A    $70D3   ADD      V0, #D3         ; Add 211 to V0
$B1C    $ABF5   LD       I, $BF5         ; Load BF5 into I
$B1E    $ACFB   LD       I, $CFB         ; Load CFB into I
$B20    $3B5D   SE       VB, #5D         ; Skip if VB == 93
$B22    $D2BC   DRW      V2, VB, #C      ; Draw 12-byte sprite at V2, VB
$B24    $498F   SNE      V9, #8F         ; Skip if V9 != 143
$B26    $739D   ADD      V3, #9D         ; Add 157 to V3
$B28    $268B   CALL     $68B            ; Call subroutine at 68B
$B2A    $63EF   LD       V3, #EF         ; Load 239 into V3
$B2C    $C31D   RND      V3, #1D         ; V3 = random & 1D
$B2E    $B373   JP       V0, $373        ; Jump to V0 + 373
$B30    $202B   CALL     $02B            ; Call subroutine at 02B
$B32    $559C   UNKNOWN  $559C           ; Unknown 5xxx instruction
$B34    $A0CA   LD       I, $0CA         ; Load 0CA into I
$B36    $646B   LD       V4, #6B         ; Load 107 into V4
$B38    $0B4A   SYS      $B4A            ; System call to B4A
$B3A    $D9BB   DRW      V9, VB, #B      ; Draw 11-byte sprite at V9, VB
$B3C    $A18E   LD       I, $18E         ; Load 18E into I
$B3E    $8F74   ADD      VF, V7          ; VF += V7, VF = carry
$B40    $75EE   ADD      V5, #EE         ; Add 238 to V5
$B42    $853A   UNKNOWN  853A            ; Unknown 8xxx instruction
$B44    $1097   JP       $097            ; Jump to 097
$B46    $C91E   RND      V9, #1E         ; V9 = random & 1E
$B48    $6709   LD       V7, #09         ; Load 9 into V7
$B4A    $9D35   UNKNOWN  $9D35           ; Unknown 9xxx instruction
$B4C    $B0A7   JP       V0, $0A7        ; Jump to V0 + 0A7
$B4E    $8D2F   UNKNOWN  8D2F            ; Unknown 8xxx instruction
$B50    $A6D6   LD       I, $6D6         ; Load 6D6 into I
$B52    $AF6C   LD       I, $F6C         ; Load F6C into I
$B54    $AF08   LD       I, $F08         ; Load F08 into I
$B56    $1151   JP       $151            ; Jump to 151
$B58    $C150   RND      V1, #50         ; V1 = random & 50
$B5A    $C777   RND      V7, #77         ; V7 = random & 77
$B5C    $DCAE   DRW      VC, VA, #E      ; Draw 14-byte sprite at VC, VA
$B5E    $E301   UNKNOWN  $E301           ; Unknown Exxx instruction
$B60    $6383   LD       V3, #83         ; Load 131 into V3
$B62    $D588   DRW      V5, V8, #8      ; Draw 8-byte sprite at V5, V8
$B64    $9DAF   UNKNOWN  $9DAF           ; Unknown 9xxx instruction
$B66    $66D7   LD       V6, #D7         ; Load 215 into V6
$B68    $A74D   LD       I, $74D         ; Load 74D into I
$B6A    $9942   UNKNOWN  $9942           ; Unknown 9xxx instruction
$B6C    $6CFD   LD       VC, #FD         ; Load 253 into VC
$B6E    $3C54   SE       VC, #54         ; Skip if VC == 84
$B70    $2E6F   CALL     $E6F            ; Call subroutine at E6F
$B72    $706A   ADD      V0, #6A         ; Add 106 to V0
$B74    $91C9   UNKNOWN  $91C9           ; Unknown 9xxx instruction
$B76    $FA68   UNKNOWN  FA68            ; Unknown Fxxx instruction
$B78    $7A88   ADD      VA, #88         ; Add 136 to VA
$B7A    $0431   SYS      $431            ; System call to 431
$B7C    $A7D6   LD       I, $7D6         ; Load 7D6 into I
$B7E    $8F00   LD       VF, V0          ; VF = V0
$B80    $BA54   JP       V0, $A54        ; Jump to V0 + A54
$B82    $6E73   LD       VE, #73         ; Load 115 into VE
$B84    $F3B5   UNKNOWN  F3B5            ; Unknown Fxxx instruction
$B86    $9C31   UNKNOWN  $9C31           ; Unknown 9xxx instruction
$B88    $7A25   ADD      VA, #25         ; Add 37 to VA
$B8A    $6D0A   LD       VD, #0A         ; Load 10 into VD
$B8C    $B123   JP       V0, $123        ; Jump to V0 + 123
$B8E    $A018   LD       I, $018         ; Load 018 into I
$B90    $21BD   CALL     $1BD            ; Call subroutine at 1BD
$B92    $2F3B   CALL     $F3B            ; Call subroutine at F3B
$B94    $AE2B   LD       I, $E2B         ; Load E2B into I
$B96    $6C22   LD       VC, #22         ; Load 34 into VC
$B98    $3184   SE       V1, #84         ; Skip if V1 == 132
$B9A    $24B3   CALL     $4B3            ; Call subroutine at 4B3
$B9C    $5752   UNKNOWN  $5752           ; Unknown 5xxx instruction
$B9E    $FEAF   UNKNOWN  FEAF            ; Unknown Fxxx instruction
$BA0    $6A8D   LD       VA, #8D         ; Load 141 into VA
$BA2    $3D67   SE       VD, #67         ; Skip if VD == 103
$BA4    $23A9   CALL     $3A9            ; Call subroutine at 3A9
$BA6    $B1F2   JP       V0, $1F2        ; Jump to V0 + 1F2
$BA8    $0E11   SYS      $E11            ; System call to E11
$BAA    $17AE   JP       $7AE            ; Jump to 7AE
$BAC    $2CC9   CALL     $CC9            ; Call subroutine at CC9
$BAE    $FD6A   UNKNOWN  FD6A            ; Unknown Fxxx instruction
$BB0    $EB1F   UNKNOWN  $EB1F           ; Unknown Exxx instruction
$BB2    $E927   UNKNOWN  $E927           ; Unknown Exxx instruction
$BB4    $91D5   UNKNOWN  $91D5           ; Unknown 9xxx instruction
$BB6    $8F8D   UNKNOWN  8F8D            ; Unknown 8xxx instruction
$BB8    $F61B   UNKNOWN  F61B            ; Unknown Fxxx instruction
$BBA    $9E86   UNKNOWN  $9E86           ; Unknown 9xxx instruction
$BBC    $4DEC   SNE      VD, #EC         ; Skip if VD != 236
$BBE    $32A5   SE       V2, #A5         ; Skip if V2 == 165
$BC0    $CD6D   RND      VD, #6D         ; VD = random & 6D
$BC2    $6278   LD       V2, #78         ; Load 120 into V2
$BC4    $B9EE   JP       V0, $9EE        ; Jump to V0 + 9EE
$BC6    $B7EC   JP       V0, $7EC        ; Jump to V0 + 7EC
$BC8    $812E   SHL      V1              ; V1 <<= 1, VF = MSB
$BCA    $4592   SNE      V5, #92         ; Skip if V5 != 146
$BCC    $B867   JP       V0, $867        ; Jump to V0 + 867
$BCE    $CE9E   RND      VE, #9E         ; VE = random & 9E
$BD0    $BA6A   JP       V0, $A6A        ; Jump to V0 + A6A
$BD2    $5591   UNKNOWN  $5591           ; Unknown 5xxx instruction
$BD4    $0F8A   SYS      $F8A            ; System call to F8A
$BD6    $A848   LD       I, $848         ; Load 848 into I
$BD8    $C3A3   RND      V3, #A3         ; V3 = random & A3
$BDA    $323F   SE       V2, #3F         ; Skip if V2 == 63
$BDC    $147C   JP       $47C            ; Jump to 47C
$BDE    $7BE4   ADD      VB, #E4         ; Add 228 to VB
$BE0    $5D7B   UNKNOWN  $5D7B           ; Unknown 5xxx instruction
$BE2    $4F26   SNE      VF, #26         ; Skip if VF != 38
$BE4    $3393   SE       V3, #93         ; Skip if V3 == 147
$BE6    $A5DA   LD       I, $5DA         ; Load 5DA into I
$BE8    $F6BF   UNKNOWN  F6BF            ; Unknown Fxxx instruction
$BEA    $0C31   SYS      $C31            ; System call to C31
$BEC    $200A   CALL     $00A            ; Call subroutine at 00A
$BEE    $2089   CALL     $089            ; Call subroutine at 089
$BF0    $2675   CALL     $675            ; Call subroutine at 675
$BF2    $8DD8   UNKNOWN  8DD8            ; Unknown 8xxx instruction
$BF4    $FC20   UNKNOWN  FC20            ; Unknown Fxxx instruction
$BF6    $8AB9   UNKNOWN  8AB9            ; Unknown 8xxx instruction
$BF8    $6AC9   LD       VA, #C9         ; Load 201 into VA
$BFA    $BDD6   JP       V0, $DD6        ; Jump to V0 + DD6
$BFC    $FEAE   UNKNOWN  FEAE            ; Unknown Fxxx instruction
$BFE    $31D5   SE       V1, #D5         ; Skip if V1 == 213
$C00    $899E   SHL      V9              ; V9 <<= 1, VF = MSB
$C02    $7E55   ADD      VE, #55         ; Add 85 to VE
$C04    $84F0   LD       V4, VF          ; V4 = VF
$C06    $E287   UNKNOWN  $E287           ; Unknown Exxx instruction
$C08    $441E   SNE      V4, #1E         ; Skip if V4 != 30
$C0A    $0A34   SYS      $A34            ; System call to A34
$C0C    $69BB   LD       V9, #BB         ; Load 187 into V9
$C0E    $7F6D   ADD      VF, #6D         ; Add 109 to VF
$C10    $1F77   JP       $F77            ; Jump to F77
$C12    $B3C1   JP       V0, $3C1        ; Jump to V0 + 3C1
$C14    $F234   UNKNOWN  F234            ; Unknown Fxxx instruction
$C16    $2B0F   CALL     $B0F            ; Call subroutine at B0F
$C18    $B80E   JP       V0, $80E        ; Jump to V0 + 80E
$C1A    $963B   UNKNOWN  $963B           ; Unknown 9xxx instruction
$C1C    $AB4A   LD       I, $B4A         ; Load B4A into I
$C1E    $ED71   UNKNOWN  $ED71           ; Unknown Exxx instruction
$C20    $BB9F   JP       V0, $B9F        ; Jump to V0 + B9F
$C22    $C9F0   RND      V9, #F0         ; V9 = random & F0
$C24    $8D0B   UNKNOWN  8D0B            ; Unknown 8xxx instruction
$C26    $CAE1   RND      VA, #E1         ; VA = random & E1
$C28    $EB38   UNKNOWN  $EB38           ; Unknown Exxx instruction
$C2A    $A1F6   LD       I, $1F6         ; Load 1F6 into I
$C2C    $C293   RND      V2, #93         ; V2 = random & 93
$C2E    $5E21   UNKNOWN  $5E21           ; Unknown 5xxx instruction
$C30    $E463   UNKNOWN  $E463           ; Unknown Exxx instruction
$C32    $257C   CALL     $57C            ; Call subroutine at 57C
$C34    $5B31   UNKNOWN  $5B31           ; Unknown 5xxx instruction
$C36    $93EF   UNKNOWN  $93EF           ; Unknown 9xxx instruction
$C38    $BC8C   JP       V0, $C8C        ; Jump to V0 + C8C
$C3A    $00EC   SYS      $0EC            ; System call to 0EC
$C3C    $9820   SNE      V8, V2          ; Skip if V8 != V2
$C3E    $48F7   SNE      V8, #F7         ; Skip if V8 != 247
$C40    $1E32   JP       $E32            ; Jump to E32
$C42    $F1B5   UNKNOWN  F1B5            ; Unknown Fxxx instruction
$C44    $649E   LD       V4, #9E         ; Load 158 into V4
$C46    $CDD9   RND      VD, #D9         ; VD = random & D9
$C48    $5A04   UNKNOWN  $5A04           ; Unknown 5xxx instruction
$C4A    $0C72   SYS      $C72            ; System call to C72
$C4C    $605D   LD       V0, #5D         ; Load 93 into V0
$C4E    $FB23   UNKNOWN  FB23            ; Unknown Fxxx instruction
$C50    $50AB   UNKNOWN  $50AB           ; Unknown 5xxx instruction
$C52    $9EEE   UNKNOWN  $9EEE           ; Unknown 9xxx instruction
$C54    $8B30   LD       VB, V3          ; VB = V3
$C56    $AD03   LD       I, $D03         ; Load D03 into I
$C58    $4199   SNE      V1, #99         ; Skip if V1 != 153
$C5A    $FCCE   UNKNOWN  FCCE            ; Unknown Fxxx instruction
$C5C    $56E5   UNKNOWN  $56E5           ; Unknown 5xxx instruction
$C5E    $200A   CALL     $00A            ; Call subroutine at 00A
$C60    $0997   SYS      $997            ; System call to 997
$C62    $29EE   CALL     $9EE            ; Call subroutine at 9EE
$C64    $CA41   RND      VA, #41         ; VA = random & 41
$C66    $61E8   LD       V1, #E8         ; Load 232 into V1
$C68    $26C5   CALL     $6C5            ; Call subroutine at 6C5
$C6A    $F23E   UNKNOWN  F23E            ; Unknown Fxxx instruction
$C6C    $D840   DRW      V8, V4, #0      ; Draw 0-byte sprite at V8, V4
$C6E    $09B0   SYS      $9B0            ; System call to 9B0
$C70    $68A0   LD       V8, #A0         ; Load 160 into V8
$C72    $E62A   UNKNOWN  $E62A           ; Unknown Exxx instruction
$C74    $3051   SE       V0, #51         ; Skip if V0 == 81
$C76    $8928   UNKNOWN  8928            ; Unknown 8xxx instruction
$C78    $CADA   RND      VA, #DA         ; VA = random & DA
$C7A    $4E1D   SNE      VE, #1D         ; Skip if VE != 29
$C7C    $CE94   RND      VE, #94         ; VE = random & 94
$C7E    $4600   SNE      V6, #00         ; Skip if V6 != 0
$C80    $49E5   SNE      V9, #E5         ; Skip if V9 != 229
$C82    $95E9   UNKNOWN  $95E9           ; Unknown 9xxx instruction
$C84    $B978   JP       V0, $978        ; Jump to V0 + 978
$C86    $E26C   UNKNOWN  $E26C           ; Unknown Exxx instruction
$C88    $56F4   UNKNOWN  $56F4           ; Unknown 5xxx instruction
$C8A    $4B8F   SNE      VB, #8F         ; Skip if VB != 143
$C8C    $243F   CALL     $43F            ; Call subroutine at 43F
$C8E    $0502   SYS      $502            ; System call to 502
$C90    $B93F   JP       V0, $93F        ; Jump to V0 + 93F
$C92    $25C4   CALL     $5C4            ; Call subroutine at 5C4
$C94    $2449   CALL     $449            ; Call subroutine at 449
$C96    $4420   SNE      V4, #20         ; Skip if V4 != 32
$C98    $B083   JP       V0, $083        ; Jump to V0 + 083
$C9A    $048F   SYS      $48F            ; System call to 48F
$C9C    $F3BB   UNKNOWN  F3BB            ; Unknown Fxxx instruction
$C9E    $7B43   ADD      VB, #43         ; Add 67 to VB
$CA0    $57D9   UNKNOWN  $57D9           ; Unknown 5xxx instruction
$CA2    $9865   UNKNOWN  $9865           ; Unknown 9xxx instruction
$CA4    $371D   SE       V7, #1D         ; Skip if V7 == 29
$CA6    $4C99   SNE      VC, #99         ; Skip if VC != 153
$CA8    $527D   UNKNOWN  $527D           ; Unknown 5xxx instruction
$CAA    $FC01   UNKNOWN  FC01            ; Unknown Fxxx instruction
$CAC    $2C48   CALL     $C48            ; Call subroutine at C48
$CAE    $0069   SYS      $069            ; System call to 069
$CB0    $426E   SNE      V2, #6E         ; Skip if V2 != 110
$CB2    $11B4   JP       $1B4            ; Jump to 1B4
$CB4    $0D1D   SYS      $D1D            ; System call to D1D
$CB6    $F604   UNKNOWN  F604            ; Unknown Fxxx instruction
$CB8    $5B8E   UNKNOWN  $5B8E           ; Unknown 5xxx instruction
$CBA    $D3E2   DRW      V3, VE, #2      ; Draw 2-byte sprite at V3, VE
$CBC    $1517   JP       $517            ; Jump to 517
$CBE    $5009   UNKNOWN  $5009           ; Unknown 5xxx instruction
$CC0    $8DC8   UNKNOWN  8DC8            ; Unknown 8xxx instruction
$CC2    $CA0F   RND      VA, #0F         ; VA = random & 0F
$CC4    $274A   CALL     $74A            ; Call subroutine at 74A
$CC6    $30F6   SE       V0, #F6         ; Skip if V0 == 246
$CC8    $3232   SE       V2, #32         ; Skip if V2 == 50
$CCA    $ED1C   UNKNOWN  $ED1C           ; Unknown Exxx instruction
$CCC    $42AB   SNE      V2, #AB         ; Skip if V2 != 171
$CCE    $7824   ADD      V8, #24         ; Add 36 to V8
$CD0    $3180   SE       V1, #80         ; Skip if V1 == 128
$CD2    $9F27   UNKNOWN  $9F27           ; Unknown 9xxx instruction
$CD4    $F0F6   UNKNOWN  F0F6            ; Unknown Fxxx instruction
$CD6    $57EB   UNKNOWN  $57EB           ; Unknown 5xxx instruction
$CD8    $5743   UNKNOWN  $5743           ; Unknown 5xxx instruction
$CDA    $7642   ADD      V6, #42         ; Add 66 to V6
$CDC    $7818   ADD      V8, #18         ; Add 24 to V8
$CDE    $B726   JP       V0, $726        ; Jump to V0 + 726
$CE0    $09F2   SYS      $9F2            ; System call to 9F2
$CE2    $0221   SYS      $221            ; System call to 221
$CE4    $82B1   OR       V2, VB          ; V2 |= VB
$CE6    $A619   LD       I, $619         ; Load 619 into I
$CE8    $A5D0   LD       I, $5D0         ; Load 5D0 into I
$CEA    $5552   UNKNOWN  $5552           ; Unknown 5xxx instruction
$CEC    $3F90   SE       VF, #90         ; Skip if VF == 144
$CEE    $5240   SE       V2, V4          ; Skip if V2 == V4
$CF0    $5D76   UNKNOWN  $5D76           ; Unknown 5xxx instruction
$CF2    $ED40   UNKNOWN  $ED40           ; Unknown Exxx instruction
$CF4    $9B6F   UNKNOWN  $9B6F           ; Unknown 9xxx instruction
$CF6    $23EC   CALL     $3EC            ; Call subroutine at 3EC
$CF8    $1EE7   JP       $EE7            ; Jump to EE7
$CFA    $5E15   UNKNOWN  $5E15           ; Unknown 5xxx instruction
$CFC    $A197   LD       I, $197         ; Load 197 into I
$CFE    $1A4A   JP       $A4A            ; Jump to A4A
$D00    $BBAF   JP       V0, $BAF        ; Jump to V0 + BAF
$D02    $8F18   UNKNOWN  8F18            ; Unknown 8xxx instruction
$D04    $2031   CALL     $031            ; Call subroutine at 031
$D06    $E24D   UNKNOWN  $E24D           ; Unknown Exxx instruction
$D08    $39B1   SE       V9, #B1         ; Skip if V9 == 177
$D0A    $9CCE   UNKNOWN  $9CCE           ; Unknown 9xxx instruction
$D0C    $9BBD   UNKNOWN  $9BBD           ; Unknown 9xxx instruction
$D0E    $69CB   LD       V9, #CB         ; Load 203 into V9
$D10    $EE4D   UNKNOWN  $EE4D           ; Unknown Exxx instruction
$D12    $5E3D   UNKNOWN  $5E3D           ; Unknown 5xxx instruction
$D14    $0E7A   SYS      $E7A            ; System call to E7A
$D16    $A8C9   LD       I, $8C9         ; Load 8C9 into I
$D18    $C9E5   RND      V9, #E5         ; V9 = random & E5
$D1A    $FFE6   UNKNOWN  FFE6            ; Unknown Fxxx instruction
$D1C    $0FCE   SYS      $FCE            ; System call to FCE
$D1E    $2395   CALL     $395            ; Call subroutine at 395
$D20    $0C41   SYS      $C41            ; System call to C41
$D22    $E987   UNKNOWN  $E987           ; Unknown Exxx instruction
$D24    $8940   LD       V9, V4          ; V9 = V4
$D26    $B1EE   JP       V0, $1EE        ; Jump to V0 + 1EE
$D28    $21D8   CALL     $1D8            ; Call subroutine at 1D8
$D2A    $D5A6   DRW      V5, VA, #6      ; Draw 6-byte sprite at V5, VA
$D2C    $2740   CALL     $740            ; Call subroutine at 740
$D2E    $AE9D   LD       I, $E9D         ; Load E9D into I
$D30    $A6AC   LD       I, $6AC         ; Load 6AC into I
$D32    $83D3   XOR      V3, VD          ; V3 ^= VD
$D34    $F216   UNKNOWN  F216            ; Unknown Fxxx instruction
$D36    $DAD7   DRW      VA, VD, #7      ; Draw 7-byte sprite at VA, VD
$D38    $5CB8   UNKNOWN  $5CB8           ; Unknown 5xxx instruction
$D3A    $8AE5   SUB      VA, VE          ; VA -= VE, VF = !borrow
$D3C    $21EB   CALL     $1EB            ; Call subroutine at 1EB
$D3E    $F595   UNKNOWN  F595            ; Unknown Fxxx instruction
$D40    $FDC2   UNKNOWN  FDC2            ; Unknown Fxxx instruction
$D42    $58D8   UNKNOWN  $58D8           ; Unknown 5xxx instruction
$D44    $35D7   SE       V5, #D7         ; Skip if V5 == 215
$D46    $D662   DRW      V6, V6, #2      ; Draw 2-byte sprite at V6, V6
$D48    $BE26   JP       V0, $E26        ; Jump to V0 + E26
$D4A    $19A9   JP       $9A9            ; Jump to 9A9
$D4C    $331A   SE       V3, #1A         ; Skip if V3 == 26
$D4E    $3CC6   SE       VC, #C6         ; Skip if VC == 198
$D50    $19A4   JP       $9A4            ; Jump to 9A4
$D52    $B13E   JP       V0, $13E        ; Jump to V0 + 13E
$D54    $42D4   SNE      V2, #D4         ; Skip if V2 != 212
$D56    $CA6D   RND      VA, #6D         ; VA = random & 6D
$D58    $FACB   UNKNOWN  FACB            ; Unknown Fxxx instruction
$D5A    $8583   XOR      V5, V8          ; V5 ^= V8
$D5C    $3421   SE       V4, #21         ; Skip if V4 == 33
$D5E    $0949   SYS      $949            ; System call to 949
$D60    $9FAB   UNKNOWN  $9FAB           ; Unknown 9xxx instruction
$D62    $7A50   ADD      VA, #50         ; Add 80 to VA
$D64    $0222   SYS      $222            ; System call to 222
$D66    $370B   SE       V7, #0B         ; Skip if V7 == 11
$D68    $DA36   DRW      VA, V3, #6      ; Draw 6-byte sprite at VA, V3
$D6A    $94C1   UNKNOWN  $94C1           ; Unknown 9xxx instruction
$D6C    $8F51   OR       VF, V5          ; VF |= V5
$D6E    $AAAA   LD       I, $AAA         ; Load AAA into I
$D70    $3981   SE       V9, #81         ; Skip if V9 == 129
$D72    $D062   DRW      V0, V6, #2      ; Draw 2-byte sprite at V0, V6
$D74    $CF44   RND      VF, #44         ; VF = random & 44
$D76    $9F5D   UNKNOWN  $9F5D           ; Unknown 9xxx instruction
$D78    $48D0   SNE      V8, #D0         ; Skip if V8 != 208
$D7A    $FF5A   UNKNOWN  FF5A            ; Unknown Fxxx instruction
$D7C    $D8FE   DRW      V8, VF, #E      ; Draw 14-byte sprite at V8, VF
$D7E    $CD2B   RND      VD, #2B         ; VD = random & 2B
$D80    $6C53   LD       VC, #53         ; Load 83 into VC
$D82    $9EC8   UNKNOWN  $9EC8           ; Unknown 9xxx instruction
$D84    $378A   SE       V7, #8A         ; Skip if V7 == 138
$D86    $458A   SNE      V5, #8A         ; Skip if V5 != 138
$D88    $F63F   UNKNOWN  F63F            ; Unknown Fxxx instruction
$D8A    $EACF   UNKNOWN  $EACF           ; Unknown Exxx instruction
$D8C    $33AE   SE       V3, #AE         ; Skip if V3 == 174
$D8E    $657A   LD       V5, #7A         ; Load 122 into V5
$D90    $AAC8   LD       I, $AC8         ; Load AC8 into I
$D92    $C3F3   RND      V3, #F3         ; V3 = random & F3
$D94    $FAE8   UNKNOWN  FAE8            ; Unknown Fxxx instruction
$D96    $B135   JP       V0, $135        ; Jump to V0 + 135
$D98    $4518   SNE      V5, #18         ; Skip if V5 != 24
$D9A    $95AC   UNKNOWN  $95AC           ; Unknown 9xxx instruction
$D9C    $45E4   SNE      V5, #E4         ; Skip if V5 != 228
$D9E    $6B90   LD       VB, #90         ; Load 144 into VB
$DA0    $9B8F   UNKNOWN  $9B8F           ; Unknown 9xxx instruction
$DA2    $9C84   UNKNOWN  $9C84           ; Unknown 9xxx instruction
$DA4    $8EE2   AND      VE, VE          ; VE &= VE
$DA6    $3B4B   SE       VB, #4B         ; Skip if VB == 75
$DA8    $057C   SYS      $57C            ; System call to 57C
$DAA    $5938   UNKNOWN  $5938           ; Unknown 5xxx instruction
$DAC    $9C0A   UNKNOWN  $9C0A           ; Unknown 9xxx instruction
$DAE    $8AFF   UNKNOWN  8AFF            ; Unknown 8xxx instruction
$DB0    $97FD   UNKNOWN  $97FD           ; Unknown 9xxx instruction
$DB2    $81B7   SUBN     V1, VB          ; V1 = VB - V1, VF = !borrow
$DB4    $F010   UNKNOWN  F010            ; Unknown Fxxx instruction
$DB6    $E3AB   UNKNOWN  $E3AB           ; Unknown Exxx instruction
$DB8    $140A   JP       $40A            ; Jump to 40A
$DBA    $F110   UNKNOWN  F110            ; Unknown Fxxx instruction
$DBC    $113E   JP       $13E            ; Jump to 13E
$DBE    $8045   SUB      V0, V4          ; V0 -= V4, VF = !borrow
$DC0    $BAFC   JP       V0, $AFC        ; Jump to V0 + AFC
$DC2    $D04C   DRW      V0, V4, #C      ; Draw 12-byte sprite at V0, V4
$DC4    $DE75   DRW      VE, V7, #5      ; Draw 5-byte sprite at VE, V7
$DC6    $B97C   JP       V0, $97C        ; Jump to V0 + 97C
$DC8    $C303   RND      V3, #03         ; V3 = random & 03
$DCA    $1D4F   JP       $D4F            ; Jump to D4F
$DCC    $4EC8   SNE      VE, #C8         ; Skip if VE != 200
$DCE    $E9F4   UNKNOWN  $E9F4           ; Unknown Exxx instruction
$DD0    $2A75   CALL     $A75            ; Call subroutine at A75
$DD2    $C403   RND      V4, #03         ; V4 = random & 03
$DD4    $4BC6   SNE      VB, #C6         ; Skip if VB != 198
$DD6    $0E26   SYS      $E26            ; System call to E26
$DD8    $D5A3   DRW      V5, VA, #3      ; Draw 3-byte sprite at V5, VA
$DDA    $4F29   SNE      VF, #29         ; Skip if VF != 41
$DDC    $FE61   UNKNOWN  FE61            ; Unknown Fxxx instruction
$DDE    $62D8   LD       V2, #D8         ; Load 216 into V2
$DE0    $5360   SE       V3, V6          ; Skip if V3 == V6
$DE2    $6F56   LD       VF, #56         ; Load 86 into VF
$DE4    $1B38   JP       $B38            ; Jump to B38
$DE6    $C54A   RND      V5, #4A         ; V5 = random & 4A
$DE8    $F3D6   UNKNOWN  F3D6            ; Unknown Fxxx instruction
$DEA    $B371   JP       V0, $371        ; Jump to V0 + 371
$DEC    $5DAD   UNKNOWN  $5DAD           ; Unknown 5xxx instruction
$DEE    $8AF7   SUBN     VA, VF          ; VA = VF - VA, VF = !borrow
$DF0    $0049   SYS      $049            ; System call to 049
$DF2    $B668   JP       V0, $668        ; Jump to V0 + 668
$DF4    $6022   LD       V0, #22         ; Load 34 into V0
$DF6    $9AA3   UNKNOWN  $9AA3           ; Unknown 9xxx instruction
$DF8    $9260   SNE      V2, V6          ; Skip if V2 != V6
$DFA    $2F5B   CALL     $F5B            ; Call subroutine at F5B
$DFC    $1C91   JP       $C91            ; Jump to C91
$DFE    $CB3B   RND      VB, #3B         ; VB = random & 3B
$E00    $05F9   SYS      $5F9            ; System call to 5F9
$E02    $87CE   SHL      V7              ; V7 <<= 1, VF = MSB
$E04    $F775   UNKNOWN  F775            ; Unknown Fxxx instruction
$E06    $BDE8   JP       V0, $DE8        ; Jump to V0 + DE8
$E08    $7BA1   ADD      VB, #A1         ; Add 161 to VB
$E0A    $92B2   UNKNOWN  $92B2           ; Unknown 9xxx instruction
$E0C    $FE45   UNKNOWN  FE45            ; Unknown Fxxx instruction
$E0E    $1EF2   JP       $EF2            ; Jump to EF2
$E10    $DC32   DRW      VC, V3, #2      ; Draw 2-byte sprite at VC, V3
$E12    $ABF8   LD       I, $BF8         ; Load BF8 into I
$E14    $3E79   SE       VE, #79         ; Skip if VE == 121
$E16    $3DE8   SE       VD, #E8         ; Skip if VD == 232
$E18    $1AB2   JP       $AB2            ; Jump to AB2
$E1A    $29DC   CALL     $9DC            ; Call subroutine at 9DC
$E1C    $CD4E   RND      VD, #4E         ; VD = random & 4E
$E1E    $342A   SE       V4, #2A         ; Skip if V4 == 42
$E20    $4B32   SNE      VB, #32         ; Skip if VB != 50
$E22    $EA67   UNKNOWN  $EA67           ; Unknown Exxx instruction
$E24    $BB44   JP       V0, $B44        ; Jump to V0 + B44
$E26    $DDA5   DRW      VD, VA, #5      ; Draw 5-byte sprite at VD, VA
$E28    $A6ED   LD       I, $6ED         ; Load 6ED into I
$E2A    $6FF2   LD       VF, #F2         ; Load 242 into VF
$E2C    $5F09   UNKNOWN  $5F09           ; Unknown 5xxx instruction
$E2E    $2E3D   CALL     $E3D            ; Call subroutine at E3D
$E30    $C8A1   RND      V8, #A1         ; V8 = random & A1
$E32    $EA52   UNKNOWN  $EA52           ; Unknown Exxx instruction
$E34    $7D7F   ADD      VD, #7F         ; Add 127 to VD
$E36    $EC1F   UNKNOWN  $EC1F           ; Unknown Exxx instruction
$E38    $27E7   CALL     $7E7            ; Call subroutine at 7E7
$E3A    $7C5B   ADD      VC, #5B         ; Add 91 to VC
$E3C    $FC6B   UNKNOWN  FC6B            ; Unknown Fxxx instruction
$E3E    $2342   CALL     $342            ; Call subroutine at 342
$E40    $2BA9   CALL     $BA9            ; Call subroutine at BA9
$E42    $ED29   UNKNOWN  $ED29           ; Unknown Exxx instruction
$E44    $9428   UNKNOWN  $9428           ; Unknown 9xxx instruction
$E46    $A652   LD       I, $652         ; Load 652 into I
$E48    $44DA   SNE      V4, #DA         ; Skip if V4 != 218
$E4A    $D0E5   DRW      V0, VE, #5      ; Draw 5-byte sprite at V0, VE
$E4C    $0B90   SYS      $B90            ; System call to B90
$E4E    $6160   LD       V1, #60         ; Load 96 into V1
$E50    $B211   JP       V0, $211        ; Jump to V0 + 211
$E52    $02B4   SYS      $2B4            ; System call to 2B4
$E54    $D70F   DRW      V7, V0, #F      ; Draw 15-byte sprite at V7, V0
$E56    $B98C   JP       V0, $98C        ; Jump to V0 + 98C
$E58    $8BA1   OR       VB, VA          ; VB |= VA
$E5A    $94FB   UNKNOWN  $94FB           ; Unknown 9xxx instruction
$E5C    $4D2D   SNE      VD, #2D         ; Skip if VD != 45
$E5E    $2D4F   CALL     $D4F            ; Call subroutine at D4F
$E60    $1F3C   JP       $F3C            ; Jump to F3C
$E62    $257A   CALL     $57A            ; Call subroutine at 57A
$E64    $A1EB   LD       I, $1EB         ; Load 1EB into I
$E66    $1D38   JP       $D38            ; Jump to D38
$E68    $6436   LD       V4, #36         ; Load 54 into V4
$E6A    $9AE7   UNKNOWN  $9AE7           ; Unknown 9xxx instruction
$E6C    $CD48   RND      VD, #48         ; VD = random & 48
$E6E    $11BF   JP       $1BF            ; Jump to 1BF
$E70    $D6E9   DRW      V6, VE, #9      ; Draw 9-byte sprite at V6, VE
$E72    $B222   JP       V0, $222        ; Jump to V0 + 222
$E74    $77C7   ADD      V7, #C7         ; Add 199 to V7
$E76    $6528   LD       V5, #28         ; Load 40 into V5
$E78    $F799   UNKNOWN  F799            ; Unknown Fxxx instruction
$E7A    $1A5F   JP       $A5F            ; Jump to A5F
$E7C    $0016   SYS      $016            ; System call to 016
$E7E    $9CBA   UNKNOWN  $9CBA           ; Unknown 9xxx instruction
$E80    $82DE   SHL      V2              ; V2 <<= 1, VF = MSB
$E82    $B6C8   JP       V0, $6C8        ; Jump to V0 + 6C8
$E84    $47DB   SNE      V7, #DB         ; Skip if V7 != 219
$E86    $EFD7   UNKNOWN  $EFD7           ; Unknown Exxx instruction
$E88    $2575   CALL     $575            ; Call subroutine at 575
$E8A    $95E5   UNKNOWN  $95E5           ; Unknown 9xxx instruction
$E8C    $DF93   DRW      VF, V9, #3      ; Draw 3-byte sprite at VF, V9
$E8E    $D3F1   DRW      V3, VF, #1      ; Draw 1-byte sprite at V3, VF
$E90    $0091   SYS      $091            ; System call to 091
$E92    $64F8   LD       V4, #F8         ; Load 248 into V4
$E94    $817C   UNKNOWN  817C            ; Unknown 8xxx instruction
$E96    $1F97   JP       $F97            ; Jump to F97
$E98    $6CC4   LD       VC, #C4         ; Load 196 into VC
$E9A    $BAAE   JP       V0, $AAE        ; Jump to V0 + AAE
$E9C    $0254   SYS      $254            ; System call to 254
$E9E    $7CB2   ADD      VC, #B2         ; Add 178 to VC
$EA0    $9AD1   UNKNOWN  $9AD1           ; Unknown 9xxx instruction
$EA2    $C5D3   RND      V5, #D3         ; V5 = random & D3
$EA4    $F8CD   UNKNOWN  F8CD            ; Unknown Fxxx instruction
$EA6    $D623   DRW      V6, V2, #3      ; Draw 3-byte sprite at V6, V2
$EA8    $80A2   AND      V0, VA          ; V0 &= VA
$EAA    $9087   UNKNOWN  $9087           ; Unknown 9xxx instruction
$EAC    $6476   LD       V4, #76         ; Load 118 into V4
$EAE    $171F   JP       $71F            ; Jump to 71F
$EB0    $1D00   JP       $D00            ; Jump to D00
$EB2    $2896   CALL     $896            ; Call subroutine at 896
$EB4    $1086   JP       $086            ; Jump to 086
$EB6    $C9B2   RND      V9, #B2         ; V9 = random & B2
$EB8    $B91E   JP       V0, $91E        ; Jump to V0 + 91E
$EBA    $FAA5   UNKNOWN  FAA5            ; Unknown Fxxx instruction
$EBC    $09A9   SYS      $9A9            ; System call to 9A9
$EBE    $3F35   SE       VF, #35         ; Skip if VF == 53
$EC0    $7120   ADD      V1, #20         ; Add 32 to V1
$EC2    $2715   CALL     $715            ; Call subroutine at 715
$EC4    $8E55   SUB      VE, V5          ; VE -= V5, VF = !borrow
$EC6    $6491   LD       V4, #91         ; Load 145 into V4
$EC8    $3A2F   SE       VA, #2F         ; Skip if VA == 47
$ECA    $26CD   CALL     $6CD            ; Call subroutine at 6CD
$ECC    $ED10   UNKNOWN  $ED10           ; Unknown Exxx instruction
$ECE    $3DF4   SE       VD, #F4         ; Skip if VD == 244
$ED0    $25E3   CALL     $5E3            ; Call subroutine at 5E3
$ED2    $7F2A   ADD      VF, #2A         ; Add 42 to VF
$ED4    $ED6A   UNKNOWN  $ED6A           ; Unknown Exxx instruction
$ED6    $B881   JP       V0, $881        ; Jump to V0 + 881
$ED8    $3883   SE       V8, #83         ; Skip if V8 == 131
$EDA    $E17A   UNKNOWN  $E17A           ; Unknown Exxx instruction
$EDC    $2AAB   CALL     $AAB            ; Call subroutine at AAB
$EDE    $E9F8   UNKNOWN  $E9F8           ; Unknown Exxx instruction
$EE0    $0B5D   SYS      $B5D            ; System call to B5D
$EE2    $B087   JP       V0, $087        ; Jump to V0 + 087
$EE4    $911C   UNKNOWN  $911C           ; Unknown 9xxx instruction
$EE6    $C5F3   RND      V5, #F3         ; V5 = random & F3
$EE8    $D229   DRW      V2, V2, #9      ; Draw 9-byte sprite at V2, V2
$EEA    $9947   UNKNOWN  $9947           ; Unknown 9xxx instruction
$EEC    $B222   JP       V0, $222        ; Jump to V0 + 222
$EEE    $EC30   UNKNOWN  $EC30           ; Unknown Exxx instruction
$EF0    $D4F3   DRW      V4, VF, #3      ; Draw 3-byte sprite at V4, VF
$EF2    $4148   SNE      V1, #48         ; Skip if V1 != 72
$EF4    $DBA8   DRW      VB, VA, #8      ; Draw 8-byte sprite at VB, VA
$EF6    $D47D   DRW      V4, V7, #D      ; Draw 13-byte sprite at V4, V7
$EF8    $10A7   JP       $0A7            ; Jump to 0A7
$EFA    $5D78   UNKNOWN  $5D78           ; Unknown 5xxx instruction
$EFC    $BC9D   JP       V0, $C9D        ; Jump to V0 + C9D
$EFE    $68D6   LD       V8, #D6         ; Load 214 into V8
$F00    $5A69   UNKNOWN  $5A69           ; Unknown 5xxx instruction
$F02    $DEAC   DRW      VE, VA, #C      ; Draw 12-byte sprite at VE, VA
$F04    $E2A3   UNKNOWN  $E2A3           ; Unknown Exxx instruction
$F06    $0C1F   SYS      $C1F            ; System call to C1F
$F08    $F8A7   UNKNOWN  F8A7            ; Unknown Fxxx instruction
$F0A    $8AD9   UNKNOWN  8AD9            ; Unknown 8xxx instruction
$F0C    $9770   SNE      V7, V7          ; Skip if V7 != V7
$F0E    $F75D   UNKNOWN  F75D            ; Unknown Fxxx instruction
$F10    $2D6D   CALL     $D6D            ; Call subroutine at D6D
$F12    $D439   DRW      V4, V3, #9      ; Draw 9-byte sprite at V4, V3
$F14    $BFAD   JP       V0, $FAD        ; Jump to V0 + FAD
$F16    $B766   JP       V0, $766        ; Jump to V0 + 766
$F18    $D67A   DRW      V6, V7, #A      ; Draw 10-byte sprite at V6, V7
$F1A    $1B27   JP       $B27            ; Jump to B27
$F1C    $A306   LD       I, $306         ; Load 306 into I
$F1E    $946E   UNKNOWN  $946E           ; Unknown 9xxx instruction
$F20    $20DF   CALL     $0DF            ; Call subroutine at 0DF
$F22    $8D80   LD       VD, V8          ; VD = V8
$F24    $57B7   UNKNOWN  $57B7           ; Unknown 5xxx instruction
$F26    $136F   JP       $36F            ; Jump to 36F
$F28    $F5C5   UNKNOWN  F5C5            ; Unknown Fxxx instruction
$F2A    $A281   LD       I, $281         ; Load 281 into I
$F2C    $9621   UNKNOWN  $9621           ; Unknown 9xxx instruction
$F2E    $C220   RND      V2, #20         ; V2 = random & 20
$F30    $C972   RND      V9, #72         ; V9 = random & 72
$F32    $88FC   UNKNOWN  88FC            ; Unknown 8xxx instruction
$F34    $0287   SYS      $287            ; System call to 287
$F36    $0FFA   SYS      $FFA            ; System call to FFA
$F38    $088A   SYS      $88A            ; System call to 88A
$F3A    $E5D9   UNKNOWN  $E5D9           ; Unknown Exxx instruction
$F3C    $EBE9   UNKNOWN  $EBE9           ; Unknown Exxx instruction
$F3E    $466F   SNE      V6, #6F         ; Skip if V6 != 111
$F40    $BCB5   JP       V0, $CB5        ; Jump to V0 + CB5
$F42    $A53E   LD       I, $53E         ; Load 53E into I
$F44    $433B   SNE      V3, #3B         ; Skip if V3 != 59
$F46    $CAA1   RND      VA, #A1         ; VA = random & A1
$F48    $CBF1   RND      VB, #F1         ; VB = random & F1
$F4A    $7686   ADD      V6, #86         ; Add 134 to V6
$F4C    $9CC7   UNKNOWN  $9CC7           ; Unknown 9xxx instruction
$F4E    $EF72   UNKNOWN  $EF72           ; Unknown Exxx instruction
$F50    $A5FB   LD       I, $5FB         ; Load 5FB into I
$F52    $43B8   SNE      V3, #B8         ; Skip if V3 != 184
$F54    $0760   SYS      $760            ; System call to 760
$F56    $D426   DRW      V4, V2, #6      ; Draw 6-byte sprite at V4, V2
$F58    $45AB   SNE      V5, #AB         ; Skip if V5 != 171
$F5A    $A22B   LD       I, $22B         ; Load 22B into I
$F5C    $1435   JP       $435            ; Jump to 435
$F5E    $28A7   CALL     $8A7            ; Call subroutine at 8A7
$F60    $10A1   JP       $0A1            ; Jump to 0A1
$F62    $F43A   UNKNOWN  F43A            ; Unknown Fxxx instruction
$F64    $4D40   SNE      VD, #40         ; Skip if VD != 64
$F66    $DCED   DRW      VC, VE, #D      ; Draw 13-byte sprite at VC, VE
$F68    $6E6D   LD       VE, #6D         ; Load 109 into VE
$F6A    $0821   SYS      $821            ; System call to 821
$F6C    $5426   UNKNOWN  $5426           ; Unknown 5xxx instruction
$F6E    $B491   JP       V0, $491        ; Jump to V0 + 491
$F70    $51EF   UNKNOWN  $51EF           ; Unknown 5xxx instruction
$F72    $D769   DRW      V7, V6, #9      ; Draw 9-byte sprite at V7, V6
$F74    $6629   LD       V6, #29         ; Load 41 into V6
$F76    $575E   UNKNOWN  $575E           ; Unknown 5xxx instruction
$F78    $7D3B   ADD      VD, #3B         ; Add 59 to VD
$F7A    $C776   RND      V7, #76         ; V7 = random & 76
$F7C    $C867   RND      V8, #67         ; V8 = random & 67
$F7E    $C1D1   RND      V1, #D1         ; V1 = random & D1
$F80    $90C1   UNKNOWN  $90C1           ; Unknown 9xxx instruction
$F82    $2E48   CALL     $E48            ; Call subroutine at E48
$F84    $ADB6   LD       I, $DB6         ; Load DB6 into I
$F86    $A266   LD       I, $266         ; Load 266 into I
$F88    $9509   UNKNOWN  $9509           ; Unknown 9xxx instruction
$F8A    $613D   LD       V1, #3D         ; Load 61 into V1
$F8C    $2ECE   CALL     $ECE            ; Call subroutine at ECE
$F8E    $8281   OR       V2, V8          ; V2 |= V8
$F90    $4364   SNE      V3, #64         ; Skip if V3 != 100
$F92    $F277   UNKNOWN  F277            ; Unknown Fxxx instruction
$F94    $06B4   SYS      $6B4            ; System call to 6B4
$F96    $2382   CALL     $382            ; Call subroutine at 382
$F98    $BD38   JP       V0, $D38        ; Jump to V0 + D38
$F9A    $9444   UNKNOWN  $9444           ; Unknown 9xxx instruction
$F9C    $68A7   LD       V8, #A7         ; Load 167 into V8
$F9E    $6F15   LD       VF, #15         ; Load 21 into VF
$FA0    $1E5C   JP       $E5C            ; Jump to E5C
$FA2    $51C1   UNKNOWN  $51C1           ; Unknown 5xxx instruction
$FA4    $6628   LD       V6, #28         ; Load 40 into V6
$FA6    $8AC1   OR       VA, VC          ; VA |= VC
$FA8    $C377   RND      V3, #77         ; V3 = random & 77
$FAA    $E02B   UNKNOWN  $E02B           ; Unknown Exxx instruction
$FAC    $2A48   CALL     $A48            ; Call subroutine at A48
$FAE    $C043   RND      V0, #43         ; V0 = random & 43
$FB0    $2FA7   CALL     $FA7            ; Call subroutine at FA7
$FB2    $C6E3   RND      V6, #E3         ; V6 = random & E3
$FB4    $A8B5   LD       I, $8B5         ; Load 8B5 into I
$FB6    $3AEB   SE       VA, #EB         ; Skip if VA == 235
$FB8    $B21D   JP       V0, $21D        ; Jump to V0 + 21D
$FBA    $05C9   SYS      $5C9            ; System call to 5C9
$FBC    $ED6E   UNKNOWN  $ED6E           ; Unknown Exxx instruction
$FBE    $65BB   LD       V5, #BB         ; Load 187 into V5
$FC0    $D2F0   DRW      V2, VF, #0      ; Draw 0-byte sprite at V2, VF
$FC2    $F170   UNKNOWN  F170            ; Unknown Fxxx instruction
$FC4    $2F0E   CALL     $F0E            ; Call subroutine at F0E
$FC6    $1E81   JP       $E81            ; Jump to E81
$FC8    $919B   UNKNOWN  $919B           ; Unknown 9xxx instruction
$FCA    $7E76   ADD      VE, #76         ; Add 118 to VE
$FCC    $1411   JP       $411            ; Jump to 411
$FCE    $8786   SHR      V7              ; V7 >>= 1, VF = LSB
$FD0    $CB6D   RND      VB, #6D         ; VB = random & 6D
$FD2    $2258   CALL     $258            ; Call subroutine at 258
$FD4    $7D42   ADD      VD, #42         ; Add 66 to VD
$FD6    $6520   LD       V5, #20         ; Load 32 into V5
$FD8    $F1E2   UNKNOWN  F1E2            ; Unknown Fxxx instruction
$FDA    $5F51   UNKNOWN  $5F51           ; Unknown 5xxx instruction
$FDC    $1BFF   JP       $BFF            ; Jump to BFF
$FDE    $3311   SE       V3, #11         ; Skip if V3 == 17
$FE0    $4CB1   SNE      VC, #B1         ; Skip if VC != 177
$FE2    $04BA   SYS      $4BA            ; System call to 4BA
$FE4    $0E50   SYS      $E50            ; System call to E50
$FE6    $CAF4   RND      VA, #F4         ; VA = random & F4
$FE8    $2F55   CALL     $F55            ; Call subroutine at F55
$FEA    $7C0D   ADD      VC, #0D         ; Add 13 to VC
$FEC    $A69A   LD       I, $69A         ; Load 69A into I
$FEE    $CE42   RND      VE, #42         ; VE = random & 42
$FF0    $6CED   LD       VC, #ED         ; Load 237 into VC
$FF2    $C7DF   RND      V7, #DF         ; V7 = random & DF
$FF4    $9ADA   UNKNOWN  $9ADA           ; Unknown 9xxx instruction
$FF6    $1BDF   JP       $BDF            ; Jump to BDF
$FF8    $1E11   JP       $E11            ; Jump to E11
$FFA    $043B   SYS      $43B            ; System call to 43B
$FFC    $7CB5   ADD      VC, #B5         ; Add 181 to VC
$FFE    $346C   SE       V4, #6C         ; Skip if V4 == 108

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 445 (24.8%)
  LD      : 265 (14.8%)
  JP      : 221 (12.3%)
  CALL    : 133 ( 7.4%)
  SNE     : 130 ( 7.3%)
  SYS     : 121 ( 6.8%)
  RND     : 120 ( 6.7%)
  SE      : 118 ( 6.6%)
  ADD     : 106 ( 5.9%)
  DRW     :  95 ( 5.3%)
  SHL     :   8 ( 0.4%)
  SUB     :   7 ( 0.4%)
  OR      :   7 ( 0.4%)
  SHR     :   4 ( 0.2%)
  XOR     :   4 ( 0.2%)
  SUBN    :   4 ( 0.2%)
  AND     :   4 ( 0.2%)

Memory Operations: 371 (20.7%)
Arithmetic Operations: 132 (7.4%)
