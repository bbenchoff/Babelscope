
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B4121D01_I30449_C7464_f584b8850c5b.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 4121
Instance: 30449
Direction: ascending
Final Array: [24, 44, 64, 84, 104, 124, 144, 164]
Operations: R:0 W:8 C:282 S:275

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 124
Sort Array References:
  $214: LD I, $8BC ; Load 8BC into I
  $23A: LD I, $0B4 ; Load 0B4 into I
  $254: LD I, $8BC ; Load 8BC into I
  $27A: LD I, $0B4 ; Load 0B4 into I
  $294: LD I, $8BC ; Load 8BC into I
  $2BA: LD I, $0B4 ; Load 0B4 into I
  $2D4: LD I, $8BC ; Load 8BC into I
  $2FA: LD I, $0B4 ; Load 0B4 into I
  $318: LD I, $B38 ; Load B38 into I
  $320: LD I, $2A2 ; Load 2A2 into I
  $330: LD I, $A6F ; Load A6F into I
  $334: LD I, $39E ; Load 39E into I
  $33A: LD I, $104 ; Load 104 into I
  $374: LD I, $622 ; Load 622 into I
  $376: LD I, $466 ; Load 466 into I
  $3B0: LD I, $E39 ; Load E39 into I
  $3B4: LD I, $FB3 ; Load FB3 into I
  $3C0: LD I, $0F6 ; Load 0F6 into I
  $3D4: LD I, $BD7 ; Load BD7 into I
  $3FC: LD I, $DA1 ; Load DA1 into I
  $458: LD I, $B0A ; Load B0A into I
  $46A: LD I, $673 ; Load 673 into I
  $4E0: LD I, $4E1 ; Load 4E1 into I
  $4F4: LD I, $FF7 ; Load FF7 into I
  $4F6: LD I, $9F3 ; Load 9F3 into I
  $4FE: LD I, $1DF ; Load 1DF into I
  $510: LD I, $9CD ; Load 9CD into I
  $52C: LD I, $F19 ; Load F19 into I
  $556: LD I, $9E1 ; Load 9E1 into I
  $55C: LD I, $61E ; Load 61E into I
  $562: LD I, $E74 ; Load E74 into I
  $56C: LD I, $582 ; Load 582 into I
  $588: LD I, $EE9 ; Load EE9 into I
  $5CE: LD I, $960 ; Load 960 into I
  $5D0: LD I, $D87 ; Load D87 into I
  $5EE: LD I, $AAC ; Load AAC into I
  $5F6: LD I, $1B4 ; Load 1B4 into I
  $616: LD I, $BA2 ; Load BA2 into I
  $628: LD I, $A80 ; Load A80 into I
  $63E: LD I, $CEF ; Load CEF into I
  $690: LD I, $E82 ; Load E82 into I
  $6E6: LD I, $86E ; Load 86E into I
  $6F2: LD I, $696 ; Load 696 into I
  $702: LD I, $2A7 ; Load 2A7 into I
  $704: LD I, $2B1 ; Load 2B1 into I
  $70C: LD I, $029 ; Load 029 into I
  $718: LD I, $891 ; Load 891 into I
  $720: LD I, $EE4 ; Load EE4 into I
  $724: LD I, $96D ; Load 96D into I
  $734: LD I, $6E8 ; Load 6E8 into I
  $78C: LD I, $46C ; Load 46C into I
  $78E: LD I, $6D7 ; Load 6D7 into I
  $792: LD I, $12A ; Load 12A into I
  $794: LD I, $186 ; Load 186 into I
  $7A4: LD I, $D98 ; Load D98 into I
  $7F6: LD I, $E72 ; Load E72 into I
  $852: LD I, $5AC ; Load 5AC into I
  $86E: LD I, $E89 ; Load E89 into I
  $8B0: LD I, $883 ; Load 883 into I
  $8E4: LD I, $075 ; Load 075 into I
  $8E8: LD I, $CAF ; Load CAF into I
  $8F0: LD I, $99B ; Load 99B into I
  $900: LD I, $520 ; Load 520 into I
  $94E: LD I, $4D8 ; Load 4D8 into I
  $964: LD I, $48A ; Load 48A into I
  $9BC: LD I, $6F9 ; Load 6F9 into I
  $9D8: LD I, $7D6 ; Load 7D6 into I
  $9E6: LD I, $6E4 ; Load 6E4 into I
  $A08: LD I, $974 ; Load 974 into I
  $A0A: LD I, $08E ; Load 08E into I
  $A2E: LD I, $DE2 ; Load DE2 into I
  $A48: LD I, $3F3 ; Load 3F3 into I
  $A4E: LD I, $44F ; Load 44F into I
  $A72: LD I, $A23 ; Load A23 into I
  $A98: LD I, $E56 ; Load E56 into I
  $AAE: LD I, $B5D ; Load B5D into I
  $ADC: LD I, $153 ; Load 153 into I
  $ADE: LD I, $9D9 ; Load 9D9 into I
  $AFC: LD I, $6AA ; Load 6AA into I
  $B04: LD I, $F94 ; Load F94 into I
  $B0A: LD I, $17A ; Load 17A into I
  $B1C: LD I, $0A6 ; Load 0A6 into I
  $B2A: LD I, $EF9 ; Load EF9 into I
  $B2C: LD I, $1E5 ; Load 1E5 into I
  $B32: LD I, $B2C ; Load B2C into I
  $B5A: LD I, $3FA ; Load 3FA into I
  $B5C: LD I, $1A9 ; Load 1A9 into I
  $B64: LD I, $FBC ; Load FBC into I
  $B80: LD I, $0E7 ; Load 0E7 into I
  $BA8: LD I, $93C ; Load 93C into I
  $BE0: LD I, $81B ; Load 81B into I
  $C1E: LD I, $36F ; Load 36F into I
  $C44: LD I, $683 ; Load 683 into I
  $C5C: LD I, $C2F ; Load C2F into I
  $CE6: LD I, $45D ; Load 45D into I
  $CE8: LD I, $12C ; Load 12C into I
  $D00: LD I, $FB7 ; Load FB7 into I
  $D2E: LD I, $E6C ; Load E6C into I
  $D88: LD I, $17A ; Load 17A into I
  $DA6: LD I, $E5D ; Load E5D into I
  $DAA: LD I, $4B5 ; Load 4B5 into I
  $DB8: LD I, $852 ; Load 852 into I
  $DC4: LD I, $E32 ; Load E32 into I
  $DC6: LD I, $EAC ; Load EAC into I
  $DE6: LD I, $70D ; Load 70D into I
  $E70: LD I, $6F8 ; Load 6F8 into I
  $E88: LD I, $367 ; Load 367 into I
  $EAC: LD I, $1B7 ; Load 1B7 into I
  $EB0: LD I, $E42 ; Load E42 into I
  $EC2: LD I, $688 ; Load 688 into I
  $EC4: LD I, $7D3 ; Load 7D3 into I
  $EDA: LD I, $BC2 ; Load BC2 into I
  $EE2: LD I, $716 ; Load 716 into I
  $EE4: LD I, $3B7 ; Load 3B7 into I
  $F00: LD I, $0EC ; Load 0EC into I
  $F2A: LD I, $1D5 ; Load 1D5 into I
  $F3E: LD I, $A0F ; Load A0F into I
  $F44: LD I, $264 ; Load 264 into I
  $F48: LD I, $580 ; Load 580 into I
  $F70: LD I, $619 ; Load 619 into I
  $F82: LD I, $4B9 ; Load 4B9 into I
  $F88: LD I, $379 ; Load 379 into I
  $FD4: LD I, $B6A ; Load B6A into I
  $FE4: LD I, $BD4 ; Load BD4 into I

CONTROL FLOW ANALYSIS:
Jumps: 241
Calls: 95
Branches: 240
Loops: 149
Loop Structures:
  $226 -> $024 (backward jump)
  $22E -> $0C4 (backward jump)
  $266 -> $024 (backward jump)
  $26E -> $0C4 (backward jump)
  $2A6 -> $024 (backward jump)
  $2AE -> $0C4 (backward jump)
  $2E6 -> $024 (backward jump)
  $2EE -> $0C4 (backward jump)
  $3D0 -> $053 (backward jump)
  $3DE -> $2C9 (backward jump)
  $43E -> $011 (backward jump)
  $45C -> $38C (backward jump)
  $46E -> $3DB (backward jump)
  $474 -> $0AB (backward jump)
  $4A0 -> $198 (backward jump)
  $4AE -> $315 (backward jump)
  $4B0 -> $369 (backward jump)
  $4BA -> $45F (backward jump)
  $51C -> $40E (backward jump)
  $574 -> $0AF (backward jump)
  $5B0 -> $45F (backward jump)
  $5EC -> $4A0 (backward jump)
  $5FC -> $167 (backward jump)
  $62C -> $22D (backward jump)
  $636 -> $263 (backward jump)
  $666 -> $587 (backward jump)
  $668 -> $23F (backward jump)
  $674 -> $319 (backward jump)
  $6B0 -> $355 (backward jump)
  $6B4 -> $30E (backward jump)
  $6C2 -> $273 (backward jump)
  $6EC -> $3F4 (backward jump)
  $6FA -> $0B3 (backward jump)
  $708 -> $1C8 (backward jump)
  $722 -> $1BE (backward jump)
  $73A -> $4F7 (backward jump)
  $75A -> $2AD (backward jump)
  $780 -> $539 (backward jump)
  $790 -> $557 (backward jump)
  $7C4 -> $41B (backward jump)
  $7DA -> $2C3 (backward jump)
  $7DE -> $286 (backward jump)
  $804 -> $142 (backward jump)
  $806 -> $45F (backward jump)
  $812 -> $173 (backward jump)
  $844 -> $736 (backward jump)
  $870 -> $72C (backward jump)
  $898 -> $68B (backward jump)
  $8A0 -> $38F (backward jump)
  $8DA -> $82D (backward jump)
  $8F4 -> $4A3 (backward jump)
  $91C -> $873 (backward jump)
  $942 -> $634 (backward jump)
  $958 -> $4D7 (backward jump)
  $968 -> $515 (backward jump)
  $978 -> $7B9 (backward jump)
  $97C -> $69D (backward jump)
  $9A0 -> $86B (backward jump)
  $9CE -> $57B (backward jump)
  $9E2 -> $4AF (backward jump)
  $9F4 -> $4CC (backward jump)
  $A1C -> $3D4 (backward jump)
  $A22 -> $78A (backward jump)
  $A4C -> $0B3 (backward jump)
  $A56 -> $079 (backward jump)
  $A76 -> $45B (backward jump)
  $A7E -> $7DB (backward jump)
  $AE4 -> $24A (backward jump)
  $AF4 -> $75C (backward jump)
  $AFA -> $8E1 (backward jump)
  $B0C -> $719 (backward jump)
  $B3A -> $325 (backward jump)
  $B46 -> $39B (backward jump)
  $B4C -> $9DE (backward jump)
  $B6A -> $7B4 (backward jump)
  $B78 -> $696 (backward jump)
  $B96 -> $677 (backward jump)
  $B9E -> $3E7 (backward jump)
  $BDC -> $2E1 (backward jump)
  $C06 -> $108 (backward jump)
  $C08 -> $5E5 (backward jump)
  $C14 -> $279 (backward jump)
  $C22 -> $BA6 (backward jump)
  $C4A -> $24F (backward jump)
  $C68 -> $4C2 (backward jump)
  $C78 -> $3D4 (backward jump)
  $C84 -> $4BB (backward jump)
  $C98 -> $267 (backward jump)
  $C9C -> $C67 (backward jump)
  $CB8 -> $00F (backward jump)
  $CBE -> $092 (backward jump)
  $CD6 -> $C1D (backward jump)
  $CEC -> $20D (backward jump)
  $CFA -> $875 (backward jump)
  $CFE -> $735 (backward jump)
  $D1C -> $AD3 (backward jump)
  $D2C -> $17C (backward jump)
  $D30 -> $A3E (backward jump)
  $D36 -> $327 (backward jump)
  $D52 -> $16C (backward jump)
  $D58 -> $8AA (backward jump)
  $D72 -> $155 (backward jump)
  $D74 -> $804 (backward jump)
  $D7A -> $D65 (backward jump)
  $D7C -> $80E (backward jump)
  $D98 -> $AD3 (backward jump)
  $D9A -> $184 (backward jump)
  $D9C -> $4C7 (backward jump)
  $DA0 -> $AFB (backward jump)
  $DA4 -> $6CF (backward jump)
  $DA8 -> $9F8 (backward jump)
  $DB6 -> $C43 (backward jump)
  $DF4 -> $54F (backward jump)
  $E04 -> $26E (backward jump)
  $E16 -> $136 (backward jump)
  $E24 -> $308 (backward jump)
  $E30 -> $40F (backward jump)
  $E34 -> $05A (backward jump)
  $E52 -> $4C7 (backward jump)
  $E5A -> $583 (backward jump)
  $E80 -> $A44 (backward jump)
  $E8E -> $556 (backward jump)
  $E9E -> $301 (backward jump)
  $EBA -> $0EB (backward jump)
  $ECC -> $C40 (backward jump)
  $ED2 -> $707 (backward jump)
  $EF0 -> $C25 (backward jump)
  $EF8 -> $B62 (backward jump)
  $F02 -> $07F (backward jump)
  $F04 -> $94B (backward jump)
  $F08 -> $566 (backward jump)
  $F26 -> $14E (backward jump)
  $F30 -> $D81 (backward jump)
  $F36 -> $D3C (backward jump)
  $F46 -> $119 (backward jump)
  $F4A -> $76E (backward jump)
  $F62 -> $CF3 (backward jump)
  $F66 -> $D9C (backward jump)
  $F6C -> $362 (backward jump)
  $F6E -> $B5C (backward jump)
  $F7E -> $CFE (backward jump)
  $F86 -> $7BE (backward jump)
  $F9A -> $CC7 (backward jump)
  $FA2 -> $49B (backward jump)
  $FA6 -> $9F0 (backward jump)
  $FBC -> $543 (backward jump)
  $FCA -> $761 (backward jump)
  $FDE -> $082 (backward jump)
  $FFC -> $0FA (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $182C   JP       $82C            ; Jump to 82C
$202    $4054   SNE      V0, #54         ; Skip if V0 != 84
$204    $687C   LD       V8, #7C         ; Load 124 into V8
$206    $90A4   UNKNOWN  $90A4           ; Unknown 9xxx instruction
$208    $B8CC   JP       V0, $8CC        ; Jump to V0 + 8CC
$20A    $E0F4   UNKNOWN  $E0F4           ; Unknown Exxx instruction
$20C    $081C   SYS      $81C            ; System call to 81C
$20E    $3044   SE       V0, #44         ; Skip if V0 == 68
$210    $586C   UNKNOWN  $586C           ; Unknown 5xxx instruction
$212    $8094   ADD      V0, V9          ; V0 += V9, VF = carry
$214    $A8BC   LD       I, $8BC         ; Load 8BC into I
$216    $D0E4   DRW      V0, VE, #4      ; Draw 4-byte sprite at V0, VE
$218    $F80C   UNKNOWN  F80C            ; Unknown Fxxx instruction
$21A    $2034   CALL     $034            ; Call subroutine at 034
$21C    $485C   SNE      V8, #5C         ; Skip if V8 != 92
$21E    $7084   ADD      V0, #84         ; Add 132 to V0
$220    $98AC   UNKNOWN  $98AC           ; Unknown 9xxx instruction
$222    $C0D4   RND      V0, #D4         ; V0 = random & D4
$224    $E8FC   UNKNOWN  $E8FC           ; Unknown Exxx instruction
$226    $1024   JP       $024            ; Jump to 024
$228    $384C   SE       V8, #4C         ; Skip if V8 == 76
$22A    $6074   LD       V0, #74         ; Load 116 into V0
$22C    $889C   UNKNOWN  889C            ; Unknown 8xxx instruction
$22E    $B0C4   JP       V0, $0C4        ; Jump to V0 + 0C4
$230    $D8EC   DRW      V8, VE, #C      ; Draw 12-byte sprite at V8, VE
$232    $0014   SYS      $014            ; System call to 014
$234    $283C   CALL     $83C            ; Call subroutine at 83C
$236    $5064   UNKNOWN  $5064           ; Unknown 5xxx instruction
$238    $788C   ADD      V8, #8C         ; Add 140 to V8
$23A    $A0B4   LD       I, $0B4         ; Load 0B4 into I
$23C    $C8DC   RND      V8, #DC         ; V8 = random & DC
$23E    $F004   UNKNOWN  F004            ; Unknown Fxxx instruction
$240    $182C   JP       $82C            ; Jump to 82C
$242    $4054   SNE      V0, #54         ; Skip if V0 != 84
$244    $687C   LD       V8, #7C         ; Load 124 into V8
$246    $90A4   UNKNOWN  $90A4           ; Unknown 9xxx instruction
$248    $B8CC   JP       V0, $8CC        ; Jump to V0 + 8CC
$24A    $E0F4   UNKNOWN  $E0F4           ; Unknown Exxx instruction
$24C    $081C   SYS      $81C            ; System call to 81C
$24E    $3044   SE       V0, #44         ; Skip if V0 == 68
$250    $586C   UNKNOWN  $586C           ; Unknown 5xxx instruction
$252    $8094   ADD      V0, V9          ; V0 += V9, VF = carry
$254    $A8BC   LD       I, $8BC         ; Load 8BC into I
$256    $D0E4   DRW      V0, VE, #4      ; Draw 4-byte sprite at V0, VE
$258    $F80C   UNKNOWN  F80C            ; Unknown Fxxx instruction
$25A    $2034   CALL     $034            ; Call subroutine at 034
$25C    $485C   SNE      V8, #5C         ; Skip if V8 != 92
$25E    $7084   ADD      V0, #84         ; Add 132 to V0
$260    $98AC   UNKNOWN  $98AC           ; Unknown 9xxx instruction
$262    $C0D4   RND      V0, #D4         ; V0 = random & D4
$264    $E8FC   UNKNOWN  $E8FC           ; Unknown Exxx instruction
$266    $1024   JP       $024            ; Jump to 024
$268    $384C   SE       V8, #4C         ; Skip if V8 == 76
$26A    $6074   LD       V0, #74         ; Load 116 into V0
$26C    $889C   UNKNOWN  889C            ; Unknown 8xxx instruction
$26E    $B0C4   JP       V0, $0C4        ; Jump to V0 + 0C4
$270    $D8EC   DRW      V8, VE, #C      ; Draw 12-byte sprite at V8, VE
$272    $0014   SYS      $014            ; System call to 014
$274    $283C   CALL     $83C            ; Call subroutine at 83C
$276    $5064   UNKNOWN  $5064           ; Unknown 5xxx instruction
$278    $788C   ADD      V8, #8C         ; Add 140 to V8
$27A    $A0B4   LD       I, $0B4         ; Load 0B4 into I
$27C    $C8DC   RND      V8, #DC         ; V8 = random & DC
$27E    $F004   UNKNOWN  F004            ; Unknown Fxxx instruction
$280    $182C   JP       $82C            ; Jump to 82C
$282    $4054   SNE      V0, #54         ; Skip if V0 != 84
$284    $687C   LD       V8, #7C         ; Load 124 into V8
$286    $90A4   UNKNOWN  $90A4           ; Unknown 9xxx instruction
$288    $B8CC   JP       V0, $8CC        ; Jump to V0 + 8CC
$28A    $E0F4   UNKNOWN  $E0F4           ; Unknown Exxx instruction
$28C    $081C   SYS      $81C            ; System call to 81C
$28E    $3044   SE       V0, #44         ; Skip if V0 == 68
$290    $586C   UNKNOWN  $586C           ; Unknown 5xxx instruction
$292    $8094   ADD      V0, V9          ; V0 += V9, VF = carry
$294    $A8BC   LD       I, $8BC         ; Load 8BC into I
$296    $D0E4   DRW      V0, VE, #4      ; Draw 4-byte sprite at V0, VE
$298    $F80C   UNKNOWN  F80C            ; Unknown Fxxx instruction
$29A    $2034   CALL     $034            ; Call subroutine at 034
$29C    $485C   SNE      V8, #5C         ; Skip if V8 != 92
$29E    $7084   ADD      V0, #84         ; Add 132 to V0
$2A0    $98AC   UNKNOWN  $98AC           ; Unknown 9xxx instruction
$2A2    $C0D4   RND      V0, #D4         ; V0 = random & D4
$2A4    $E8FC   UNKNOWN  $E8FC           ; Unknown Exxx instruction
$2A6    $1024   JP       $024            ; Jump to 024
$2A8    $384C   SE       V8, #4C         ; Skip if V8 == 76
$2AA    $6074   LD       V0, #74         ; Load 116 into V0
$2AC    $889C   UNKNOWN  889C            ; Unknown 8xxx instruction
$2AE    $B0C4   JP       V0, $0C4        ; Jump to V0 + 0C4
$2B0    $D8EC   DRW      V8, VE, #C      ; Draw 12-byte sprite at V8, VE
$2B2    $0014   SYS      $014            ; System call to 014
$2B4    $283C   CALL     $83C            ; Call subroutine at 83C
$2B6    $5064   UNKNOWN  $5064           ; Unknown 5xxx instruction
$2B8    $788C   ADD      V8, #8C         ; Add 140 to V8
$2BA    $A0B4   LD       I, $0B4         ; Load 0B4 into I
$2BC    $C8DC   RND      V8, #DC         ; V8 = random & DC
$2BE    $F004   UNKNOWN  F004            ; Unknown Fxxx instruction
$2C0    $182C   JP       $82C            ; Jump to 82C
$2C2    $4054   SNE      V0, #54         ; Skip if V0 != 84
$2C4    $687C   LD       V8, #7C         ; Load 124 into V8
$2C6    $90A4   UNKNOWN  $90A4           ; Unknown 9xxx instruction
$2C8    $B8CC   JP       V0, $8CC        ; Jump to V0 + 8CC
$2CA    $E0F4   UNKNOWN  $E0F4           ; Unknown Exxx instruction
$2CC    $081C   SYS      $81C            ; System call to 81C
$2CE    $3044   SE       V0, #44         ; Skip if V0 == 68
$2D0    $586C   UNKNOWN  $586C           ; Unknown 5xxx instruction
$2D2    $8094   ADD      V0, V9          ; V0 += V9, VF = carry
$2D4    $A8BC   LD       I, $8BC         ; Load 8BC into I
$2D6    $D0E4   DRW      V0, VE, #4      ; Draw 4-byte sprite at V0, VE
$2D8    $F80C   UNKNOWN  F80C            ; Unknown Fxxx instruction
$2DA    $2034   CALL     $034            ; Call subroutine at 034
$2DC    $485C   SNE      V8, #5C         ; Skip if V8 != 92
$2DE    $7084   ADD      V0, #84         ; Add 132 to V0
$2E0    $98AC   UNKNOWN  $98AC           ; Unknown 9xxx instruction
$2E2    $C0D4   RND      V0, #D4         ; V0 = random & D4
$2E4    $E8FC   UNKNOWN  $E8FC           ; Unknown Exxx instruction
$2E6    $1024   JP       $024            ; Jump to 024
$2E8    $384C   SE       V8, #4C         ; Skip if V8 == 76
$2EA    $6074   LD       V0, #74         ; Load 116 into V0
$2EC    $889C   UNKNOWN  889C            ; Unknown 8xxx instruction
$2EE    $B0C4   JP       V0, $0C4        ; Jump to V0 + 0C4
$2F0    $D8EC   DRW      V8, VE, #C      ; Draw 12-byte sprite at V8, VE
$2F2    $0014   SYS      $014            ; System call to 014
$2F4    $283C   CALL     $83C            ; Call subroutine at 83C
$2F6    $5064   UNKNOWN  $5064           ; Unknown 5xxx instruction
$2F8    $788C   ADD      V8, #8C         ; Add 140 to V8
$2FA    $A0B4   LD       I, $0B4         ; Load 0B4 into I
$2FC    $C8DC   RND      V8, #DC         ; V8 = random & DC
$2FE    $F004   UNKNOWN  F004            ; Unknown Fxxx instruction
$300    $182C   JP       $82C            ; Jump to 82C
$302    $4054   SNE      V0, #54         ; Skip if V0 != 84
$304    $687C   LD       V8, #7C         ; Load 124 into V8
$306    $90A4   UNKNOWN  $90A4           ; Unknown 9xxx instruction
$308    $B8CC   JP       V0, $8CC        ; Jump to V0 + 8CC
$30A    $E0F4   UNKNOWN  $E0F4           ; Unknown Exxx instruction
$30C    $081C   SYS      $81C            ; System call to 81C
$30E    $3044   SE       V0, #44         ; Skip if V0 == 68
$310    $586C   UNKNOWN  $586C           ; Unknown 5xxx instruction
$312    $80CE   SHL      V0              ; V0 <<= 1, VF = MSB
$314    $2F08   CALL     $F08            ; Call subroutine at F08
$316    $1966   JP       $966            ; Jump to 966
$318    $AB38   LD       I, $B38         ; Load B38 into I
$31A    $8479   UNKNOWN  8479            ; Unknown 8xxx instruction
$31C    $F5BF   UNKNOWN  F5BF            ; Unknown Fxxx instruction
$31E    $59E5   UNKNOWN  $59E5           ; Unknown 5xxx instruction
$320    $A2A2   LD       I, $2A2         ; Load 2A2 into I
$322    $D3B0   DRW      V3, VB, #0      ; Draw 0-byte sprite at V3, VB
$324    $5107   UNKNOWN  $5107           ; Unknown 5xxx instruction
$326    $E3F0   UNKNOWN  $E3F0           ; Unknown Exxx instruction
$328    $D5A9   DRW      V5, VA, #9      ; Draw 9-byte sprite at V5, VA
$32A    $403E   SNE      V0, #3E         ; Skip if V0 != 62
$32C    $1D93   JP       $D93            ; Jump to D93
$32E    $95E2   UNKNOWN  $95E2           ; Unknown 9xxx instruction
$330    $AA6F   LD       I, $A6F         ; Load A6F into I
$332    $F38C   UNKNOWN  F38C            ; Unknown Fxxx instruction
$334    $A39E   LD       I, $39E         ; Load 39E into I
$336    $48A5   SNE      V8, #A5         ; Skip if V8 != 165
$338    $7957   ADD      V9, #57         ; Add 87 to V9
$33A    $A104   LD       I, $104         ; Load 104 into I
$33C    $F6EE   UNKNOWN  F6EE            ; Unknown Fxxx instruction
$33E    $5DAF   UNKNOWN  $5DAF           ; Unknown 5xxx instruction
$340    $DC8B   DRW      VC, V8, #B      ; Draw 11-byte sprite at VC, V8
$342    $CEC1   RND      VE, #C1         ; VE = random & C1
$344    $4E56   SNE      VE, #56         ; Skip if VE != 86
$346    $44DC   SNE      V4, #DC         ; Skip if V4 != 220
$348    $ECA9   UNKNOWN  $ECA9           ; Unknown Exxx instruction
$34A    $74D9   ADD      V4, #D9         ; Add 217 to V4
$34C    $3E53   SE       VE, #53         ; Skip if VE == 83
$34E    $43C5   SNE      V3, #C5         ; Skip if V3 != 197
$350    $1CC4   JP       $CC4            ; Jump to CC4
$352    $EB25   UNKNOWN  $EB25           ; Unknown Exxx instruction
$354    $7BA8   ADD      VB, #A8         ; Add 168 to VB
$356    $939F   UNKNOWN  $939F           ; Unknown 9xxx instruction
$358    $5FD9   UNKNOWN  $5FD9           ; Unknown 5xxx instruction
$35A    $06B9   SYS      $6B9            ; System call to 6B9
$35C    $885A   UNKNOWN  885A            ; Unknown 8xxx instruction
$35E    $B568   JP       V0, $568        ; Jump to V0 + 568
$360    $E349   UNKNOWN  $E349           ; Unknown Exxx instruction
$362    $69EC   LD       V9, #EC         ; Load 236 into V9
$364    $88AE   SHL      V8              ; V8 <<= 1, VF = MSB
$366    $F89C   UNKNOWN  F89C            ; Unknown Fxxx instruction
$368    $4D5C   SNE      VD, #5C         ; Skip if VD != 92
$36A    $2429   CALL     $429            ; Call subroutine at 429
$36C    $BE5C   JP       V0, $E5C        ; Jump to V0 + E5C
$36E    $2D33   CALL     $D33            ; Call subroutine at D33
$370    $277D   CALL     $77D            ; Call subroutine at 77D
$372    $3B09   SE       VB, #09         ; Skip if VB == 9
$374    $A622   LD       I, $622         ; Load 622 into I
$376    $A466   LD       I, $466         ; Load 466 into I
$378    $6347   LD       V3, #47         ; Load 71 into V3
$37A    $E0F8   UNKNOWN  $E0F8           ; Unknown Exxx instruction
$37C    $D90C   DRW      V9, V0, #C      ; Draw 12-byte sprite at V9, V0
$37E    $44D8   SNE      V4, #D8         ; Skip if V4 != 216
$380    $954E   UNKNOWN  $954E           ; Unknown 9xxx instruction
$382    $53A5   UNKNOWN  $53A5           ; Unknown 5xxx instruction
$384    $9BD7   UNKNOWN  $9BD7           ; Unknown 9xxx instruction
$386    $281E   CALL     $81E            ; Call subroutine at 81E
$388    $9DC3   UNKNOWN  $9DC3           ; Unknown 9xxx instruction
$38A    $9D7F   UNKNOWN  $9D7F           ; Unknown 9xxx instruction
$38C    $86F5   SUB      V6, VF          ; V6 -= VF, VF = !borrow
$38E    $663E   LD       V6, #3E         ; Load 62 into V6
$390    $37B9   SE       V7, #B9         ; Skip if V7 == 185
$392    $FBE9   UNKNOWN  FBE9            ; Unknown Fxxx instruction
$394    $6C06   LD       VC, #06         ; Load 6 into VC
$396    $D3F0   DRW      V3, VF, #0      ; Draw 0-byte sprite at V3, VF
$398    $4676   SNE      V6, #76         ; Skip if V6 != 118
$39A    $9304   UNKNOWN  $9304           ; Unknown 9xxx instruction
$39C    $ECD8   UNKNOWN  $ECD8           ; Unknown Exxx instruction
$39E    $7650   ADD      V6, #50         ; Add 80 to V6
$3A0    $C0CB   RND      V0, #CB         ; V0 = random & CB
$3A2    $1D07   JP       $D07            ; Jump to D07
$3A4    $5F09   UNKNOWN  $5F09           ; Unknown 5xxx instruction
$3A6    $3E22   SE       VE, #22         ; Skip if VE == 34
$3A8    $D975   DRW      V9, V7, #5      ; Draw 5-byte sprite at V9, V7
$3AA    $5FA2   UNKNOWN  $5FA2           ; Unknown 5xxx instruction
$3AC    $441D   SNE      V4, #1D         ; Skip if V4 != 29
$3AE    $8D9D   UNKNOWN  8D9D            ; Unknown 8xxx instruction
$3B0    $AE39   LD       I, $E39         ; Load E39 into I
$3B2    $06B1   SYS      $6B1            ; System call to 6B1
$3B4    $AFB3   LD       I, $FB3         ; Load FB3 into I
$3B6    $C36E   RND      V3, #6E         ; V3 = random & 6E
$3B8    $2729   CALL     $729            ; Call subroutine at 729
$3BA    $CD82   RND      VD, #82         ; VD = random & 82
$3BC    $5C18   UNKNOWN  $5C18           ; Unknown 5xxx instruction
$3BE    $72C3   ADD      V2, #C3         ; Add 195 to V2
$3C0    $A0F6   LD       I, $0F6         ; Load 0F6 into I
$3C2    $C6B9   RND      V6, #B9         ; V6 = random & B9
$3C4    $1CBF   JP       $CBF            ; Jump to CBF
$3C6    $5615   UNKNOWN  $5615           ; Unknown 5xxx instruction
$3C8    $FB40   UNKNOWN  FB40            ; Unknown Fxxx instruction
$3CA    $2AEE   CALL     $AEE            ; Call subroutine at AEE
$3CC    $4A86   SNE      VA, #86         ; Skip if VA != 134
$3CE    $78E2   ADD      V8, #E2         ; Add 226 to V8
$3D0    $1053   JP       $053            ; Jump to 053
$3D2    $6424   LD       V4, #24         ; Load 36 into V4
$3D4    $ABD7   LD       I, $BD7         ; Load BD7 into I
$3D6    $FBC7   UNKNOWN  FBC7            ; Unknown Fxxx instruction
$3D8    $5D6C   UNKNOWN  $5D6C           ; Unknown 5xxx instruction
$3DA    $43F3   SNE      V3, #F3         ; Skip if V3 != 243
$3DC    $2FBE   CALL     $FBE            ; Call subroutine at FBE
$3DE    $B2C9   JP       V0, $2C9        ; Jump to V0 + 2C9
$3E0    $2CC1   CALL     $CC1            ; Call subroutine at CC1
$3E2    $B4D4   JP       V0, $4D4        ; Jump to V0 + 4D4
$3E4    $4D0C   SNE      VD, #0C         ; Skip if VD != 12
$3E6    $9C94   UNKNOWN  $9C94           ; Unknown 9xxx instruction
$3E8    $DE50   DRW      VE, V5, #0      ; Draw 0-byte sprite at VE, V5
$3EA    $EE26   UNKNOWN  $EE26           ; Unknown Exxx instruction
$3EC    $9C0A   UNKNOWN  $9C0A           ; Unknown 9xxx instruction
$3EE    $19DA   JP       $9DA            ; Jump to 9DA
$3F0    $FE34   UNKNOWN  FE34            ; Unknown Fxxx instruction
$3F2    $9E0C   UNKNOWN  $9E0C           ; Unknown 9xxx instruction
$3F4    $C64F   RND      V6, #4F         ; V6 = random & 4F
$3F6    $0581   SYS      $581            ; System call to 581
$3F8    $E320   UNKNOWN  $E320           ; Unknown Exxx instruction
$3FA    $9F54   UNKNOWN  $9F54           ; Unknown 9xxx instruction
$3FC    $ADA1   LD       I, $DA1         ; Load DA1 into I
$3FE    $E2CA   UNKNOWN  $E2CA           ; Unknown Exxx instruction
$400    $2580   CALL     $580            ; Call subroutine at 580
$402    $3EEF   SE       VE, #EF         ; Skip if VE == 239
$404    $3681   SE       V6, #81         ; Skip if V6 == 129
$406    $6835   LD       V8, #35         ; Load 53 into V8
$408    $55DE   UNKNOWN  $55DE           ; Unknown 5xxx instruction
$40A    $F284   UNKNOWN  F284            ; Unknown Fxxx instruction
$40C    $6426   LD       V4, #26         ; Load 38 into V4
$40E    $001E   SYS      $01E            ; System call to 01E
$410    $D514   DRW      V5, V1, #4      ; Draw 4-byte sprite at V5, V1
$412    $63F5   LD       V3, #F5         ; Load 245 into V3
$414    $DAB0   DRW      VA, VB, #0      ; Draw 0-byte sprite at VA, VB
$416    $9450   SNE      V4, V5          ; Skip if V4 != V5
$418    $569E   UNKNOWN  $569E           ; Unknown 5xxx instruction
$41A    $9533   UNKNOWN  $9533           ; Unknown 9xxx instruction
$41C    $7C61   ADD      VC, #61         ; Add 97 to VC
$41E    $9B15   UNKNOWN  $9B15           ; Unknown 9xxx instruction
$420    $611C   LD       V1, #1C         ; Load 28 into V1
$422    $DD87   DRW      VD, V8, #7      ; Draw 7-byte sprite at VD, V8
$424    $5CF4   UNKNOWN  $5CF4           ; Unknown 5xxx instruction
$426    $E320   UNKNOWN  $E320           ; Unknown Exxx instruction
$428    $397D   SE       V9, #7D         ; Skip if V9 == 125
$42A    $4DFE   SNE      VD, #FE         ; Skip if VD != 254
$42C    $D949   DRW      V9, V4, #9      ; Draw 9-byte sprite at V9, V4
$42E    $8C12   AND      VC, V1          ; VC &= V1
$430    $06FF   SYS      $6FF            ; System call to 6FF
$432    $FD95   UNKNOWN  FD95            ; Unknown Fxxx instruction
$434    $F2AC   UNKNOWN  F2AC            ; Unknown Fxxx instruction
$436    $C93A   RND      V9, #3A         ; V9 = random & 3A
$438    $4375   SNE      V3, #75         ; Skip if V3 != 117
$43A    $F6E2   UNKNOWN  F6E2            ; Unknown Fxxx instruction
$43C    $8855   SUB      V8, V5          ; V8 -= V5, VF = !borrow
$43E    $1011   JP       $011            ; Jump to 011
$440    $4D04   SNE      VD, #04         ; Skip if VD != 4
$442    $B9DE   JP       V0, $9DE        ; Jump to V0 + 9DE
$444    $027C   SYS      $27C            ; System call to 27C
$446    $5687   UNKNOWN  $5687           ; Unknown 5xxx instruction
$448    $EB8E   UNKNOWN  $EB8E           ; Unknown Exxx instruction
$44A    $D163   DRW      V1, V6, #3      ; Draw 3-byte sprite at V1, V6
$44C    $C250   RND      V2, #50         ; V2 = random & 50
$44E    $F05C   UNKNOWN  F05C            ; Unknown Fxxx instruction
$450    $0ADB   SYS      $ADB            ; System call to ADB
$452    $5436   UNKNOWN  $5436           ; Unknown 5xxx instruction
$454    $E39A   UNKNOWN  $E39A           ; Unknown Exxx instruction
$456    $503C   UNKNOWN  $503C           ; Unknown 5xxx instruction
$458    $AB0A   LD       I, $B0A         ; Load B0A into I
$45A    $43EE   SNE      V3, #EE         ; Skip if V3 != 238
$45C    $B38C   JP       V0, $38C        ; Jump to V0 + 38C
$45E    $F618   LD       ST, V6          ; Sound timer = V6
$460    $899C   UNKNOWN  899C            ; Unknown 8xxx instruction
$462    $017C   SYS      $17C            ; System call to 17C
$464    $C78A   RND      V7, #8A         ; V7 = random & 8A
$466    $88DC   UNKNOWN  88DC            ; Unknown 8xxx instruction
$468    $73F4   ADD      V3, #F4         ; Add 244 to V3
$46A    $A673   LD       I, $673         ; Load 673 into I
$46C    $0586   SYS      $586            ; System call to 586
$46E    $13DB   JP       $3DB            ; Jump to 3DB
$470    $C252   RND      V2, #52         ; V2 = random & 52
$472    $7094   ADD      V0, #94         ; Add 148 to V0
$474    $10AB   JP       $0AB            ; Jump to 0AB
$476    $9512   UNKNOWN  $9512           ; Unknown 9xxx instruction
$478    $7CBE   ADD      VC, #BE         ; Add 190 to VC
$47A    $C2A6   RND      V2, #A6         ; V2 = random & A6
$47C    $37BA   SE       V7, #BA         ; Skip if V7 == 186
$47E    $DE81   DRW      VE, V8, #1      ; Draw 1-byte sprite at VE, V8
$480    $752E   ADD      V5, #2E         ; Add 46 to V5
$482    $1BB2   JP       $BB2            ; Jump to BB2
$484    $85E8   UNKNOWN  85E8            ; Unknown 8xxx instruction
$486    $FE19   UNKNOWN  FE19            ; Unknown Fxxx instruction
$488    $91A3   UNKNOWN  $91A3           ; Unknown 9xxx instruction
$48A    $24DD   CALL     $4DD            ; Call subroutine at 4DD
$48C    $D33B   DRW      V3, V3, #B      ; Draw 11-byte sprite at V3, V3
$48E    $2137   CALL     $137            ; Call subroutine at 137
$490    $CD03   RND      VD, #03         ; VD = random & 03
$492    $47A8   SNE      V7, #A8         ; Skip if V7 != 168
$494    $EFE9   UNKNOWN  $EFE9           ; Unknown Exxx instruction
$496    $7E0A   ADD      VE, #0A         ; Add 10 to VE
$498    $E989   UNKNOWN  $E989           ; Unknown Exxx instruction
$49A    $D650   DRW      V6, V5, #0      ; Draw 0-byte sprite at V6, V5
$49C    $9F50   SNE      VF, V5          ; Skip if VF != V5
$49E    $BF92   JP       V0, $F92        ; Jump to V0 + F92
$4A0    $B198   JP       V0, $198        ; Jump to V0 + 198
$4A2    $0FD2   SYS      $FD2            ; System call to FD2
$4A4    $F82E   UNKNOWN  F82E            ; Unknown Fxxx instruction
$4A6    $9EB6   UNKNOWN  $9EB6           ; Unknown 9xxx instruction
$4A8    $B530   JP       V0, $530        ; Jump to V0 + 530
$4AA    $8354   ADD      V3, V5          ; V3 += V5, VF = carry
$4AC    $9BC8   UNKNOWN  $9BC8           ; Unknown 9xxx instruction
$4AE    $B315   JP       V0, $315        ; Jump to V0 + 315
$4B0    $1369   JP       $369            ; Jump to 369
$4B2    $0638   SYS      $638            ; System call to 638
$4B4    $568C   UNKNOWN  $568C           ; Unknown 5xxx instruction
$4B6    $D983   DRW      V9, V8, #3      ; Draw 3-byte sprite at V9, V8
$4B8    $DFDC   DRW      VF, VD, #C      ; Draw 12-byte sprite at VF, VD
$4BA    $B45F   JP       V0, $45F        ; Jump to V0 + 45F
$4BC    $4C52   SNE      VC, #52         ; Skip if VC != 82
$4BE    $F1BE   UNKNOWN  F1BE            ; Unknown Fxxx instruction
$4C0    $B715   JP       V0, $715        ; Jump to V0 + 715
$4C2    $999C   UNKNOWN  $999C           ; Unknown 9xxx instruction
$4C4    $7F92   ADD      VF, #92         ; Add 146 to VF
$4C6    $FB49   UNKNOWN  FB49            ; Unknown Fxxx instruction
$4C8    $F17D   UNKNOWN  F17D            ; Unknown Fxxx instruction
$4CA    $998C   UNKNOWN  $998C           ; Unknown 9xxx instruction
$4CC    $4565   SNE      V5, #65         ; Skip if V5 != 101
$4CE    $707D   ADD      V0, #7D         ; Add 125 to V0
$4D0    $F167   UNKNOWN  F167            ; Unknown Fxxx instruction
$4D2    $59DB   UNKNOWN  $59DB           ; Unknown 5xxx instruction
$4D4    $CF93   RND      VF, #93         ; VF = random & 93
$4D6    $8A26   SHR      VA              ; VA >>= 1, VF = LSB
$4D8    $52D8   UNKNOWN  $52D8           ; Unknown 5xxx instruction
$4DA    $49C0   SNE      V9, #C0         ; Skip if V9 != 192
$4DC    $F9CE   UNKNOWN  F9CE            ; Unknown Fxxx instruction
$4DE    $6424   LD       V4, #24         ; Load 36 into V4
$4E0    $A4E1   LD       I, $4E1         ; Load 4E1 into I
$4E2    $1B2A   JP       $B2A            ; Jump to B2A
$4E4    $EAD8   UNKNOWN  $EAD8           ; Unknown Exxx instruction
$4E6    $276D   CALL     $76D            ; Call subroutine at 76D
$4E8    $1E32   JP       $E32            ; Jump to E32
$4EA    $5198   UNKNOWN  $5198           ; Unknown 5xxx instruction
$4EC    $6108   LD       V1, #08         ; Load 8 into V1
$4EE    $F205   UNKNOWN  F205            ; Unknown Fxxx instruction
$4F0    $D761   DRW      V7, V6, #1      ; Draw 1-byte sprite at V7, V6
$4F2    $E97D   UNKNOWN  $E97D           ; Unknown Exxx instruction
$4F4    $AFF7   LD       I, $FF7         ; Load FF7 into I
$4F6    $A9F3   LD       I, $9F3         ; Load 9F3 into I
$4F8    $38ED   SE       V8, #ED         ; Skip if V8 == 237
$4FA    $E00E   UNKNOWN  $E00E           ; Unknown Exxx instruction
$4FC    $0568   SYS      $568            ; System call to 568
$4FE    $A1DF   LD       I, $1DF         ; Load 1DF into I
$500    $312A   SE       V1, #2A         ; Skip if V1 == 42
$502    $7257   ADD      V2, #57         ; Add 87 to V2
$504    $4056   SNE      V0, #56         ; Skip if V0 != 86
$506    $49D8   SNE      V9, #D8         ; Skip if V9 != 216
$508    $255A   CALL     $55A            ; Call subroutine at 55A
$50A    $39E9   SE       V9, #E9         ; Skip if V9 == 233
$50C    $6E5E   LD       VE, #5E         ; Load 94 into VE
$50E    $6FEC   LD       VF, #EC         ; Load 236 into VF
$510    $A9CD   LD       I, $9CD         ; Load 9CD into I
$512    $C883   RND      V8, #83         ; V8 = random & 83
$514    $DC22   DRW      VC, V2, #2      ; Draw 2-byte sprite at VC, V2
$516    $B94D   JP       V0, $94D        ; Jump to V0 + 94D
$518    $62AE   LD       V2, #AE         ; Load 174 into V2
$51A    $1E06   JP       $E06            ; Jump to E06
$51C    $140E   JP       $40E            ; Jump to 40E
$51E    $87B4   ADD      V7, VB          ; V7 += VB, VF = carry
$520    $3077   SE       V0, #77         ; Skip if V0 == 119
$522    $5C51   UNKNOWN  $5C51           ; Unknown 5xxx instruction
$524    $0870   SYS      $870            ; System call to 870
$526    $7405   ADD      V4, #05         ; Add 5 to V4
$528    $DF29   DRW      VF, V2, #9      ; Draw 9-byte sprite at VF, V2
$52A    $7878   ADD      V8, #78         ; Add 120 to V8
$52C    $AF19   LD       I, $F19         ; Load F19 into I
$52E    $E8C9   UNKNOWN  $E8C9           ; Unknown Exxx instruction
$530    $CDB1   RND      VD, #B1         ; VD = random & B1
$532    $827F   UNKNOWN  827F            ; Unknown 8xxx instruction
$534    $C805   RND      V8, #05         ; V8 = random & 05
$536    $ED5A   UNKNOWN  $ED5A           ; Unknown Exxx instruction
$538    $057A   SYS      $57A            ; System call to 57A
$53A    $9584   UNKNOWN  $9584           ; Unknown 9xxx instruction
$53C    $5C59   UNKNOWN  $5C59           ; Unknown 5xxx instruction
$53E    $5EF7   UNKNOWN  $5EF7           ; Unknown 5xxx instruction
$540    $7E07   ADD      VE, #07         ; Add 7 to VE
$542    $1728   JP       $728            ; Jump to 728
$544    $DB3B   DRW      VB, V3, #B      ; Draw 11-byte sprite at VB, V3
$546    $6F8F   LD       VF, #8F         ; Load 143 into VF
$548    $9769   UNKNOWN  $9769           ; Unknown 9xxx instruction
$54A    $C03B   RND      V0, #3B         ; V0 = random & 3B
$54C    $6EF6   LD       VE, #F6         ; Load 246 into VE
$54E    $BEA1   JP       V0, $EA1        ; Jump to V0 + EA1
$550    $F501   UNKNOWN  F501            ; Unknown Fxxx instruction
$552    $BD17   JP       V0, $D17        ; Jump to V0 + D17
$554    $E7AB   UNKNOWN  $E7AB           ; Unknown Exxx instruction
$556    $A9E1   LD       I, $9E1         ; Load 9E1 into I
$558    $D29C   DRW      V2, V9, #C      ; Draw 12-byte sprite at V2, V9
$55A    $74F0   ADD      V4, #F0         ; Add 240 to V4
$55C    $A61E   LD       I, $61E         ; Load 61E into I
$55E    $6A9A   LD       VA, #9A         ; Load 154 into VA
$560    $9542   UNKNOWN  $9542           ; Unknown 9xxx instruction
$562    $AE74   LD       I, $E74         ; Load E74 into I
$564    $F836   UNKNOWN  F836            ; Unknown Fxxx instruction
$566    $61F4   LD       V1, #F4         ; Load 244 into V1
$568    $7352   ADD      V3, #52         ; Add 82 to V3
$56A    $9E79   UNKNOWN  $9E79           ; Unknown 9xxx instruction
$56C    $A582   LD       I, $582         ; Load 582 into I
$56E    $D78C   DRW      V7, V8, #C      ; Draw 12-byte sprite at V7, V8
$570    $025C   SYS      $25C            ; System call to 25C
$572    $2A26   CALL     $A26            ; Call subroutine at A26
$574    $B0AF   JP       V0, $0AF        ; Jump to V0 + 0AF
$576    $2F0C   CALL     $F0C            ; Call subroutine at F0C
$578    $E836   UNKNOWN  $E836           ; Unknown Exxx instruction
$57A    $F229   LD       F, V2           ; I = sprite address for digit V2
$57C    $D344   DRW      V3, V4, #4      ; Draw 4-byte sprite at V3, V4
$57E    $CEAA   RND      VE, #AA         ; VE = random & AA
$580    $FFAE   UNKNOWN  FFAE            ; Unknown Fxxx instruction
$582    $93C4   UNKNOWN  $93C4           ; Unknown 9xxx instruction
$584    $24E8   CALL     $4E8            ; Call subroutine at 4E8
$586    $CDBA   RND      VD, #BA         ; VD = random & BA
$588    $AEE9   LD       I, $EE9         ; Load EE9 into I
$58A    $D157   DRW      V1, V5, #7      ; Draw 7-byte sprite at V1, V5
$58C    $8B1B   UNKNOWN  8B1B            ; Unknown 8xxx instruction
$58E    $FF17   UNKNOWN  FF17            ; Unknown Fxxx instruction
$590    $C97F   RND      V9, #7F         ; V9 = random & 7F
$592    $3B4A   SE       VB, #4A         ; Skip if VB == 74
$594    $DD2C   DRW      VD, V2, #C      ; Draw 12-byte sprite at VD, V2
$596    $C927   RND      V9, #27         ; V9 = random & 27
$598    $0800   SYS      $800            ; System call to 800
$59A    $DDC9   DRW      VD, VC, #9      ; Draw 9-byte sprite at VD, VC
$59C    $963E   UNKNOWN  $963E           ; Unknown 9xxx instruction
$59E    $0C8F   SYS      $C8F            ; System call to C8F
$5A0    $C1D3   RND      V1, #D3         ; V1 = random & D3
$5A2    $0FB3   SYS      $FB3            ; System call to FB3
$5A4    $5C4C   UNKNOWN  $5C4C           ; Unknown 5xxx instruction
$5A6    $DFB9   DRW      VF, VB, #9      ; Draw 9-byte sprite at VF, VB
$5A8    $DD8A   DRW      VD, V8, #A      ; Draw 10-byte sprite at VD, V8
$5AA    $F60B   UNKNOWN  F60B            ; Unknown Fxxx instruction
$5AC    $91BE   UNKNOWN  $91BE           ; Unknown 9xxx instruction
$5AE    $9666   UNKNOWN  $9666           ; Unknown 9xxx instruction
$5B0    $145F   JP       $45F            ; Jump to 45F
$5B2    $4D08   SNE      VD, #08         ; Skip if VD != 8
$5B4    $9793   UNKNOWN  $9793           ; Unknown 9xxx instruction
$5B6    $2B9B   CALL     $B9B            ; Call subroutine at B9B
$5B8    $64EE   LD       V4, #EE         ; Load 238 into V4
$5BA    $8861   OR       V8, V6          ; V8 |= V6
$5BC    $1927   JP       $927            ; Jump to 927
$5BE    $961C   UNKNOWN  $961C           ; Unknown 9xxx instruction
$5C0    $2EE9   CALL     $EE9            ; Call subroutine at EE9
$5C2    $9035   UNKNOWN  $9035           ; Unknown 9xxx instruction
$5C4    $51B5   UNKNOWN  $51B5           ; Unknown 5xxx instruction
$5C6    $4EF2   SNE      VE, #F2         ; Skip if VE != 242
$5C8    $950F   UNKNOWN  $950F           ; Unknown 9xxx instruction
$5CA    $23DA   CALL     $3DA            ; Call subroutine at 3DA
$5CC    $4B8B   SNE      VB, #8B         ; Skip if VB != 139
$5CE    $A960   LD       I, $960         ; Load 960 into I
$5D0    $AD87   LD       I, $D87         ; Load D87 into I
$5D2    $BC9B   JP       V0, $C9B        ; Jump to V0 + C9B
$5D4    $4A87   SNE      VA, #87         ; Skip if VA != 135
$5D6    $CFA5   RND      VF, #A5         ; VF = random & A5
$5D8    $2C37   CALL     $C37            ; Call subroutine at C37
$5DA    $5587   UNKNOWN  $5587           ; Unknown 5xxx instruction
$5DC    $09FF   SYS      $9FF            ; System call to 9FF
$5DE    $1633   JP       $633            ; Jump to 633
$5E0    $6DEE   LD       VD, #EE         ; Load 238 into VD
$5E2    $291F   CALL     $91F            ; Call subroutine at 91F
$5E4    $1B41   JP       $B41            ; Jump to B41
$5E6    $B922   JP       V0, $922        ; Jump to V0 + 922
$5E8    $9EA0   SNE      VE, VA          ; Skip if VE != VA
$5EA    $567C   UNKNOWN  $567C           ; Unknown 5xxx instruction
$5EC    $14A0   JP       $4A0            ; Jump to 4A0
$5EE    $AAAC   LD       I, $AAC         ; Load AAC into I
$5F0    $0D74   SYS      $D74            ; System call to D74
$5F2    $99D6   UNKNOWN  $99D6           ; Unknown 9xxx instruction
$5F4    $BE1F   JP       V0, $E1F        ; Jump to V0 + E1F
$5F6    $A1B4   LD       I, $1B4         ; Load 1B4 into I
$5F8    $47E0   SNE      V7, #E0         ; Skip if V7 != 224
$5FA    $4B5E   SNE      VB, #5E         ; Skip if VB != 94
$5FC    $B167   JP       V0, $167        ; Jump to V0 + 167
$5FE    $9D04   UNKNOWN  $9D04           ; Unknown 9xxx instruction
$600    $784B   ADD      V8, #4B         ; Add 75 to V8
$602    $4A03   SNE      VA, #03         ; Skip if VA != 3
$604    $B8B3   JP       V0, $8B3        ; Jump to V0 + 8B3
$606    $DA5F   DRW      VA, V5, #F      ; Draw 15-byte sprite at VA, V5
$608    $48A4   SNE      V8, #A4         ; Skip if V8 != 164
$60A    $76D5   ADD      V6, #D5         ; Add 213 to V6
$60C    $8EBB   UNKNOWN  8EBB            ; Unknown 8xxx instruction
$60E    $97AF   UNKNOWN  $97AF           ; Unknown 9xxx instruction
$610    $7C6F   ADD      VC, #6F         ; Add 111 to VC
$612    $E795   UNKNOWN  $E795           ; Unknown Exxx instruction
$614    $3AE6   SE       VA, #E6         ; Skip if VA == 230
$616    $ABA2   LD       I, $BA2         ; Load BA2 into I
$618    $46E6   SNE      V6, #E6         ; Skip if V6 != 230
$61A    $6166   LD       V1, #66         ; Load 102 into V1
$61C    $35F1   SE       V5, #F1         ; Skip if V5 == 241
$61E    $8538   UNKNOWN  8538            ; Unknown 8xxx instruction
$620    $D850   DRW      V8, V5, #0      ; Draw 0-byte sprite at V8, V5
$622    $70B0   ADD      V0, #B0         ; Add 176 to V0
$624    $28D3   CALL     $8D3            ; Call subroutine at 8D3
$626    $003C   SYS      $03C            ; System call to 03C
$628    $AA80   LD       I, $A80         ; Load A80 into I
$62A    $1D3D   JP       $D3D            ; Jump to D3D
$62C    $122D   JP       $22D            ; Jump to 22D
$62E    $647F   LD       V4, #7F         ; Load 127 into V4
$630    $9D22   UNKNOWN  $9D22           ; Unknown 9xxx instruction
$632    $74E4   ADD      V4, #E4         ; Add 228 to V4
$634    $8A1C   UNKNOWN  8A1C            ; Unknown 8xxx instruction
$636    $1263   JP       $263            ; Jump to 263
$638    $38BD   SE       V8, #BD         ; Skip if V8 == 189
$63A    $976D   UNKNOWN  $976D           ; Unknown 9xxx instruction
$63C    $2307   CALL     $307            ; Call subroutine at 307
$63E    $ACEF   LD       I, $CEF         ; Load CEF into I
$640    $1771   JP       $771            ; Jump to 771
$642    $29A8   CALL     $9A8            ; Call subroutine at 9A8
$644    $7608   ADD      V6, #08         ; Add 8 to V6
$646    $02A7   SYS      $2A7            ; System call to 2A7
$648    $267D   CALL     $67D            ; Call subroutine at 67D
$64A    $9001   UNKNOWN  $9001           ; Unknown 9xxx instruction
$64C    $98D5   UNKNOWN  $98D5           ; Unknown 9xxx instruction
$64E    $8AB6   SHR      VA              ; VA >>= 1, VF = LSB
$650    $024D   SYS      $24D            ; System call to 24D
$652    $E8CC   UNKNOWN  $E8CC           ; Unknown Exxx instruction
$654    $6DF9   LD       VD, #F9         ; Load 249 into VD
$656    $25B1   CALL     $5B1            ; Call subroutine at 5B1
$658    $6597   LD       V5, #97         ; Load 151 into V5
$65A    $E760   UNKNOWN  $E760           ; Unknown Exxx instruction
$65C    $4449   SNE      V4, #49         ; Skip if V4 != 73
$65E    $6F83   LD       VF, #83         ; Load 131 into VF
$660    $9D7D   UNKNOWN  $9D7D           ; Unknown 9xxx instruction
$662    $74D6   ADD      V4, #D6         ; Add 214 to V4
$664    $6870   LD       V8, #70         ; Load 112 into V8
$666    $B587   JP       V0, $587        ; Jump to V0 + 587
$668    $123F   JP       $23F            ; Jump to 23F
$66A    $0FA0   SYS      $FA0            ; System call to FA0
$66C    $50C9   UNKNOWN  $50C9           ; Unknown 5xxx instruction
$66E    $8DB9   UNKNOWN  8DB9            ; Unknown 8xxx instruction
$670    $5BC2   UNKNOWN  $5BC2           ; Unknown 5xxx instruction
$672    $EE66   UNKNOWN  $EE66           ; Unknown Exxx instruction
$674    $1319   JP       $319            ; Jump to 319
$676    $67A0   LD       V7, #A0         ; Load 160 into V7
$678    $C5BC   RND      V5, #BC         ; V5 = random & BC
$67A    $83BF   UNKNOWN  83BF            ; Unknown 8xxx instruction
$67C    $BE94   JP       V0, $E94        ; Jump to V0 + E94
$67E    $326C   SE       V2, #6C         ; Skip if V2 == 108
$680    $8500   LD       V5, V0          ; V5 = V0
$682    $5D58   UNKNOWN  $5D58           ; Unknown 5xxx instruction
$684    $8EEE   SHL      VE              ; VE <<= 1, VF = MSB
$686    $FB95   UNKNOWN  FB95            ; Unknown Fxxx instruction
$688    $07FF   SYS      $7FF            ; System call to 7FF
$68A    $F708   UNKNOWN  F708            ; Unknown Fxxx instruction
$68C    $807D   UNKNOWN  807D            ; Unknown 8xxx instruction
$68E    $C6F3   RND      V6, #F3         ; V6 = random & F3
$690    $AE82   LD       I, $E82         ; Load E82 into I
$692    $2D8F   CALL     $D8F            ; Call subroutine at D8F
$694    $8B5A   UNKNOWN  8B5A            ; Unknown 8xxx instruction
$696    $03FB   SYS      $3FB            ; System call to 3FB
$698    $207F   CALL     $07F            ; Call subroutine at 07F
$69A    $8AD4   ADD      VA, VD          ; VA += VD, VF = carry
$69C    $345D   SE       V4, #5D         ; Skip if V4 == 93
$69E    $85EE   SHL      V5              ; V5 <<= 1, VF = MSB
$6A0    $5F95   UNKNOWN  $5F95           ; Unknown 5xxx instruction
$6A2    $70F5   ADD      V0, #F5         ; Add 245 to V0
$6A4    $732D   ADD      V3, #2D         ; Add 45 to V3
$6A6    $63A4   LD       V3, #A4         ; Load 164 into V3
$6A8    $58EE   UNKNOWN  $58EE           ; Unknown 5xxx instruction
$6AA    $295F   CALL     $95F            ; Call subroutine at 95F
$6AC    $07EA   SYS      $7EA            ; System call to 7EA
$6AE    $3685   SE       V6, #85         ; Skip if V6 == 133
$6B0    $1355   JP       $355            ; Jump to 355
$6B2    $C87B   RND      V8, #7B         ; V8 = random & 7B
$6B4    $B30E   JP       V0, $30E        ; Jump to V0 + 30E
$6B6    $1E52   JP       $E52            ; Jump to E52
$6B8    $BA79   JP       V0, $A79        ; Jump to V0 + A79
$6BA    $7EF0   ADD      VE, #F0         ; Add 240 to VE
$6BC    $696C   LD       V9, #6C         ; Load 108 into V9
$6BE    $59A8   UNKNOWN  $59A8           ; Unknown 5xxx instruction
$6C0    $65D6   LD       V5, #D6         ; Load 214 into V5
$6C2    $B273   JP       V0, $273        ; Jump to V0 + 273
$6C4    $7F89   ADD      VF, #89         ; Add 137 to VF
$6C6    $DE58   DRW      VE, V5, #8      ; Draw 8-byte sprite at VE, V5
$6C8    $4505   SNE      V5, #05         ; Skip if V5 != 5
$6CA    $17A7   JP       $7A7            ; Jump to 7A7
$6CC    $521D   UNKNOWN  $521D           ; Unknown 5xxx instruction
$6CE    $6312   LD       V3, #12         ; Load 18 into V3
$6D0    $CA08   RND      VA, #08         ; VA = random & 08
$6D2    $7BAD   ADD      VB, #AD         ; Add 173 to VB
$6D4    $3280   SE       V2, #80         ; Skip if V2 == 128
$6D6    $57C7   UNKNOWN  $57C7           ; Unknown 5xxx instruction
$6D8    $459E   SNE      V5, #9E         ; Skip if V5 != 158
$6DA    $71DA   ADD      V1, #DA         ; Add 218 to V1
$6DC    $6D17   LD       VD, #17         ; Load 23 into VD
$6DE    $C957   RND      V9, #57         ; V9 = random & 57
$6E0    $605D   LD       V0, #5D         ; Load 93 into V0
$6E2    $3ABC   SE       VA, #BC         ; Skip if VA == 188
$6E4    $32A2   SE       V2, #A2         ; Skip if V2 == 162
$6E6    $A86E   LD       I, $86E         ; Load 86E into I
$6E8    $8414   ADD      V4, V1          ; V4 += V1, VF = carry
$6EA    $5F70   SE       VF, V7          ; Skip if VF == V7
$6EC    $13F4   JP       $3F4            ; Jump to 3F4
$6EE    $BAF1   JP       V0, $AF1        ; Jump to V0 + AF1
$6F0    $F504   UNKNOWN  F504            ; Unknown Fxxx instruction
$6F2    $A696   LD       I, $696         ; Load 696 into I
$6F4    $6684   LD       V6, #84         ; Load 132 into V6
$6F6    $EFFF   UNKNOWN  $EFFF           ; Unknown Exxx instruction
$6F8    $9706   UNKNOWN  $9706           ; Unknown 9xxx instruction
$6FA    $10B3   JP       $0B3            ; Jump to 0B3
$6FC    $8762   AND      V7, V6          ; V7 &= V6
$6FE    $4E7A   SNE      VE, #7A         ; Skip if VE != 122
$700    $F12C   UNKNOWN  F12C            ; Unknown Fxxx instruction
$702    $A2A7   LD       I, $2A7         ; Load 2A7 into I
$704    $A2B1   LD       I, $2B1         ; Load 2B1 into I
$706    $0F91   SYS      $F91            ; System call to F91
$708    $11C8   JP       $1C8            ; Jump to 1C8
$70A    $722D   ADD      V2, #2D         ; Add 45 to V2
$70C    $A029   LD       I, $029         ; Load 029 into I
$70E    $0AE3   SYS      $AE3            ; System call to AE3
$710    $CD59   RND      VD, #59         ; VD = random & 59
$712    $40F9   SNE      V0, #F9         ; Skip if V0 != 249
$714    $5FAF   UNKNOWN  $5FAF           ; Unknown 5xxx instruction
$716    $3FFB   SE       VF, #FB         ; Skip if VF == 251
$718    $A891   LD       I, $891         ; Load 891 into I
$71A    $3E71   SE       VE, #71         ; Skip if VE == 113
$71C    $D1D4   DRW      V1, VD, #4      ; Draw 4-byte sprite at V1, VD
$71E    $C866   RND      V8, #66         ; V8 = random & 66
$720    $AEE4   LD       I, $EE4         ; Load EE4 into I
$722    $11BE   JP       $1BE            ; Jump to 1BE
$724    $A96D   LD       I, $96D         ; Load 96D into I
$726    $8281   OR       V2, V8          ; V2 |= V8
$728    $1AEE   JP       $AEE            ; Jump to AEE
$72A    $8543   XOR      V5, V4          ; V5 ^= V4
$72C    $4F32   SNE      VF, #32         ; Skip if VF != 50
$72E    $8263   XOR      V2, V6          ; V2 ^= V6
$730    $331E   SE       V3, #1E         ; Skip if V3 == 30
$732    $8DAE   SHL      VD              ; VD <<= 1, VF = MSB
$734    $A6E8   LD       I, $6E8         ; Load 6E8 into I
$736    $5DA3   UNKNOWN  $5DA3           ; Unknown 5xxx instruction
$738    $35A1   SE       V5, #A1         ; Skip if V5 == 161
$73A    $14F7   JP       $4F7            ; Jump to 4F7
$73C    $0DA1   SYS      $DA1            ; System call to DA1
$73E    $8A46   SHR      VA              ; VA >>= 1, VF = LSB
$740    $F166   UNKNOWN  F166            ; Unknown Fxxx instruction
$742    $E94C   UNKNOWN  $E94C           ; Unknown Exxx instruction
$744    $50BC   UNKNOWN  $50BC           ; Unknown 5xxx instruction
$746    $5AF8   UNKNOWN  $5AF8           ; Unknown 5xxx instruction
$748    $C349   RND      V3, #49         ; V3 = random & 49
$74A    $B97F   JP       V0, $97F        ; Jump to V0 + 97F
$74C    $4F8A   SNE      VF, #8A         ; Skip if VF != 138
$74E    $3E46   SE       VE, #46         ; Skip if VE == 70
$750    $1BF8   JP       $BF8            ; Jump to BF8
$752    $FD05   UNKNOWN  FD05            ; Unknown Fxxx instruction
$754    $B871   JP       V0, $871        ; Jump to V0 + 871
$756    $F494   UNKNOWN  F494            ; Unknown Fxxx instruction
$758    $908E   UNKNOWN  $908E           ; Unknown 9xxx instruction
$75A    $12AD   JP       $2AD            ; Jump to 2AD
$75C    $61B6   LD       V1, #B6         ; Load 182 into V1
$75E    $F897   UNKNOWN  F897            ; Unknown Fxxx instruction
$760    $3FA1   SE       VF, #A1         ; Skip if VF == 161
$762    $88D1   OR       V8, VD          ; V8 |= VD
$764    $FA8F   UNKNOWN  FA8F            ; Unknown Fxxx instruction
$766    $02EA   SYS      $2EA            ; System call to 2EA
$768    $0A3D   SYS      $A3D            ; System call to A3D
$76A    $BB7E   JP       V0, $B7E        ; Jump to V0 + B7E
$76C    $D1B1   DRW      V1, VB, #1      ; Draw 1-byte sprite at V1, VB
$76E    $BC33   JP       V0, $C33        ; Jump to V0 + C33
$770    $8034   ADD      V0, V3          ; V0 += V3, VF = carry
$772    $6489   LD       V4, #89         ; Load 137 into V4
$774    $799E   ADD      V9, #9E         ; Add 158 to V9
$776    $30EC   SE       V0, #EC         ; Skip if V0 == 236
$778    $D95A   DRW      V9, V5, #A      ; Draw 10-byte sprite at V9, V5
$77A    $4E1F   SNE      VE, #1F         ; Skip if VE != 31
$77C    $4242   SNE      V2, #42         ; Skip if V2 != 66
$77E    $8CC2   AND      VC, VC          ; VC &= VC
$780    $B539   JP       V0, $539        ; Jump to V0 + 539
$782    $D6A5   DRW      V6, VA, #5      ; Draw 5-byte sprite at V6, VA
$784    $6C02   LD       VC, #02         ; Load 2 into VC
$786    $4B6F   SNE      VB, #6F         ; Skip if VB != 111
$788    $6D9C   LD       VD, #9C         ; Load 156 into VD
$78A    $7762   ADD      V7, #62         ; Add 98 to V7
$78C    $A46C   LD       I, $46C         ; Load 46C into I
$78E    $A6D7   LD       I, $6D7         ; Load 6D7 into I
$790    $B557   JP       V0, $557        ; Jump to V0 + 557
$792    $A12A   LD       I, $12A         ; Load 12A into I
$794    $A186   LD       I, $186         ; Load 186 into I
$796    $2766   CALL     $766            ; Call subroutine at 766
$798    $00A5   SYS      $0A5            ; System call to 0A5
$79A    $E48E   UNKNOWN  $E48E           ; Unknown Exxx instruction
$79C    $D49E   DRW      V4, V9, #E      ; Draw 14-byte sprite at V4, V9
$79E    $9245   UNKNOWN  $9245           ; Unknown 9xxx instruction
$7A0    $8FF8   UNKNOWN  8FF8            ; Unknown 8xxx instruction
$7A2    $2C95   CALL     $C95            ; Call subroutine at C95
$7A4    $AD98   LD       I, $D98         ; Load D98 into I
$7A6    $459A   SNE      V5, #9A         ; Skip if V5 != 154
$7A8    $D52D   DRW      V5, V2, #D      ; Draw 13-byte sprite at V5, V2
$7AA    $8231   OR       V2, V3          ; V2 |= V3
$7AC    $4A2E   SNE      VA, #2E         ; Skip if VA != 46
$7AE    $7A7F   ADD      VA, #7F         ; Add 127 to VA
$7B0    $E610   UNKNOWN  $E610           ; Unknown Exxx instruction
$7B2    $69D6   LD       V9, #D6         ; Load 214 into V9
$7B4    $61B9   LD       V1, #B9         ; Load 185 into V1
$7B6    $7DE3   ADD      VD, #E3         ; Add 227 to VD
$7B8    $8B69   UNKNOWN  8B69            ; Unknown 8xxx instruction
$7BA    $683B   LD       V8, #3B         ; Load 59 into V8
$7BC    $320F   SE       V2, #0F         ; Skip if V2 == 15
$7BE    $601F   LD       V0, #1F         ; Load 31 into V0
$7C0    $5997   UNKNOWN  $5997           ; Unknown 5xxx instruction
$7C2    $F575   UNKNOWN  F575            ; Unknown Fxxx instruction
$7C4    $141B   JP       $41B            ; Jump to 41B
$7C6    $BE32   JP       V0, $E32        ; Jump to V0 + E32
$7C8    $2B4B   CALL     $B4B            ; Call subroutine at B4B
$7CA    $5A1B   UNKNOWN  $5A1B           ; Unknown 5xxx instruction
$7CC    $1E4F   JP       $E4F            ; Jump to E4F
$7CE    $3EDD   SE       VE, #DD         ; Skip if VE == 221
$7D0    $0D58   SYS      $D58            ; System call to D58
$7D2    $7D98   ADD      VD, #98         ; Add 152 to VD
$7D4    $24D8   CALL     $4D8            ; Call subroutine at 4D8
$7D6    $E54D   UNKNOWN  $E54D           ; Unknown Exxx instruction
$7D8    $4BB3   SNE      VB, #B3         ; Skip if VB != 179
$7DA    $B2C3   JP       V0, $2C3        ; Jump to V0 + 2C3
$7DC    $B8D8   JP       V0, $8D8        ; Jump to V0 + 8D8
$7DE    $B286   JP       V0, $286        ; Jump to V0 + 286
$7E0    $8245   SUB      V2, V4          ; V2 -= V4, VF = !borrow
$7E2    $F5F2   UNKNOWN  F5F2            ; Unknown Fxxx instruction
$7E4    $F0A6   UNKNOWN  F0A6            ; Unknown Fxxx instruction
$7E6    $8F80   LD       VF, V8          ; VF = V8
$7E8    $23BC   CALL     $3BC            ; Call subroutine at 3BC
$7EA    $5B75   UNKNOWN  $5B75           ; Unknown 5xxx instruction
$7EC    $64E0   LD       V4, #E0         ; Load 224 into V4
$7EE    $3078   SE       V0, #78         ; Skip if V0 == 120
$7F0    $CBA5   RND      VB, #A5         ; VB = random & A5
$7F2    $E82A   UNKNOWN  $E82A           ; Unknown Exxx instruction
$7F4    $E34B   UNKNOWN  $E34B           ; Unknown Exxx instruction
$7F6    $AE72   LD       I, $E72         ; Load E72 into I
$7F8    $65CF   LD       V5, #CF         ; Load 207 into V5
$7FA    $7437   ADD      V4, #37         ; Add 55 to V4
$7FC    $63E8   LD       V3, #E8         ; Load 232 into V3
$7FE    $E665   UNKNOWN  $E665           ; Unknown Exxx instruction
$800    $4A2B   SNE      VA, #2B         ; Skip if VA != 43
$802    $6B47   LD       VB, #47         ; Load 71 into VB
$804    $B142   JP       V0, $142        ; Jump to V0 + 142
$806    $145F   JP       $45F            ; Jump to 45F
$808    $C1B8   RND      V1, #B8         ; V1 = random & B8
$80A    $328A   SE       V2, #8A         ; Skip if V2 == 138
$80C    $DDCE   DRW      VD, VC, #E      ; Draw 14-byte sprite at VD, VC
$80E    $9906   UNKNOWN  $9906           ; Unknown 9xxx instruction
$810    $2455   CALL     $455            ; Call subroutine at 455
$812    $B173   JP       V0, $173        ; Jump to V0 + 173
$814    $6E4E   LD       VE, #4E         ; Load 78 into VE
$816    $DA32   DRW      VA, V3, #2      ; Draw 2-byte sprite at VA, V3
$818    $02B6   SYS      $2B6            ; System call to 2B6
$81A    $8773   XOR      V7, V7          ; V7 ^= V7
$81C    $6CA2   LD       VC, #A2         ; Load 162 into VC
$81E    $6C76   LD       VC, #76         ; Load 118 into VC
$820    $BC63   JP       V0, $C63        ; Jump to V0 + C63
$822    $BD81   JP       V0, $D81        ; Jump to V0 + D81
$824    $91E3   UNKNOWN  $91E3           ; Unknown 9xxx instruction
$826    $0DA3   SYS      $DA3            ; System call to DA3
$828    $0784   SYS      $784            ; System call to 784
$82A    $0EBF   SYS      $EBF            ; System call to EBF
$82C    $2AD3   CALL     $AD3            ; Call subroutine at AD3
$82E    $3425   SE       V4, #25         ; Skip if V4 == 37
$830    $FE95   UNKNOWN  FE95            ; Unknown Fxxx instruction
$832    $5B29   UNKNOWN  $5B29           ; Unknown 5xxx instruction
$834    $5AFE   UNKNOWN  $5AFE           ; Unknown 5xxx instruction
$836    $4DB4   SNE      VD, #B4         ; Skip if VD != 180
$838    $076D   SYS      $76D            ; System call to 76D
$83A    $DF97   DRW      VF, V9, #7      ; Draw 7-byte sprite at VF, V9
$83C    $7BD7   ADD      VB, #D7         ; Add 215 to VB
$83E    $8C95   SUB      VC, V9          ; VC -= V9, VF = !borrow
$840    $5935   UNKNOWN  $5935           ; Unknown 5xxx instruction
$842    $8796   SHR      V7              ; V7 >>= 1, VF = LSB
$844    $B736   JP       V0, $736        ; Jump to V0 + 736
$846    $8676   SHR      V6              ; V6 >>= 1, VF = LSB
$848    $4FE4   SNE      VF, #E4         ; Skip if VF != 228
$84A    $DBC8   DRW      VB, VC, #8      ; Draw 8-byte sprite at VB, VC
$84C    $DC15   DRW      VC, V1, #5      ; Draw 5-byte sprite at VC, V1
$84E    $2176   CALL     $176            ; Call subroutine at 176
$850    $737C   ADD      V3, #7C         ; Add 124 to V3
$852    $A5AC   LD       I, $5AC         ; Load 5AC into I
$854    $02B2   SYS      $2B2            ; System call to 2B2
$856    $63C6   LD       V3, #C6         ; Load 198 into V3
$858    $FAFB   UNKNOWN  FAFB            ; Unknown Fxxx instruction
$85A    $D831   DRW      V8, V3, #1      ; Draw 1-byte sprite at V8, V3
$85C    $9AC5   UNKNOWN  $9AC5           ; Unknown 9xxx instruction
$85E    $1C1B   JP       $C1B            ; Jump to C1B
$860    $5FE6   UNKNOWN  $5FE6           ; Unknown 5xxx instruction
$862    $CE16   RND      VE, #16         ; VE = random & 16
$864    $3B17   SE       VB, #17         ; Skip if VB == 23
$866    $BEED   JP       V0, $EED        ; Jump to V0 + EED
$868    $BAD9   JP       V0, $AD9        ; Jump to V0 + AD9
$86A    $F469   UNKNOWN  F469            ; Unknown Fxxx instruction
$86C    $DA0D   DRW      VA, V0, #D      ; Draw 13-byte sprite at VA, V0
$86E    $AE89   LD       I, $E89         ; Load E89 into I
$870    $B72C   JP       V0, $72C        ; Jump to V0 + 72C
$872    $073A   SYS      $73A            ; System call to 73A
$874    $C083   RND      V0, #83         ; V0 = random & 83
$876    $6CD2   LD       VC, #D2         ; Load 210 into VC
$878    $F8DB   UNKNOWN  F8DB            ; Unknown Fxxx instruction
$87A    $D0C8   DRW      V0, VC, #8      ; Draw 8-byte sprite at V0, VC
$87C    $907E   UNKNOWN  $907E           ; Unknown 9xxx instruction
$87E    $0BAA   SYS      $BAA            ; System call to BAA
$880    $20A1   CALL     $0A1            ; Call subroutine at 0A1
$882    $F54C   UNKNOWN  F54C            ; Unknown Fxxx instruction
$884    $FAE7   UNKNOWN  FAE7            ; Unknown Fxxx instruction
$886    $F044   UNKNOWN  F044            ; Unknown Fxxx instruction
$888    $3CF8   SE       VC, #F8         ; Skip if VC == 248
$88A    $2EE7   CALL     $EE7            ; Call subroutine at EE7
$88C    $F937   UNKNOWN  F937            ; Unknown Fxxx instruction
$88E    $DF90   DRW      VF, V9, #0      ; Draw 0-byte sprite at VF, V9
$890    $C693   RND      V6, #93         ; V6 = random & 93
$892    $9474   UNKNOWN  $9474           ; Unknown 9xxx instruction
$894    $D071   DRW      V0, V7, #1      ; Draw 1-byte sprite at V0, V7
$896    $F707   LD       V7, DT          ; V7 = delay timer
$898    $168B   JP       $68B            ; Jump to 68B
$89A    $2001   CALL     $001            ; Call subroutine at 001
$89C    $9E89   UNKNOWN  $9E89           ; Unknown 9xxx instruction
$89E    $6CA3   LD       VC, #A3         ; Load 163 into VC
$8A0    $B38F   JP       V0, $38F        ; Jump to V0 + 38F
$8A2    $9AEF   UNKNOWN  $9AEF           ; Unknown 9xxx instruction
$8A4    $DBDC   DRW      VB, VD, #C      ; Draw 12-byte sprite at VB, VD
$8A6    $E2BB   UNKNOWN  $E2BB           ; Unknown Exxx instruction
$8A8    $2CE0   CALL     $CE0            ; Call subroutine at CE0
$8AA    $D263   DRW      V2, V6, #3      ; Draw 3-byte sprite at V2, V6
$8AC    $FC3A   UNKNOWN  FC3A            ; Unknown Fxxx instruction
$8AE    $D348   DRW      V3, V4, #8      ; Draw 8-byte sprite at V3, V4
$8B0    $A883   LD       I, $883         ; Load 883 into I
$8B2    $7E38   ADD      VE, #38         ; Add 56 to VE
$8B4    $7BEB   ADD      VB, #EB         ; Add 235 to VB
$8B6    $419C   SNE      V1, #9C         ; Skip if V1 != 156
$8B8    $0AD6   SYS      $AD6            ; System call to AD6
$8BA    $2582   CALL     $582            ; Call subroutine at 582
$8BC    $E48F   UNKNOWN  $E48F           ; Unknown Exxx instruction
$8BE    $456D   SNE      V5, #6D         ; Skip if V5 != 109
$8C0    $42DB   SNE      V2, #DB         ; Skip if V2 != 219
$8C2    $8185   SUB      V1, V8          ; V1 -= V8, VF = !borrow
$8C4    $4FD4   SNE      VF, #D4         ; Skip if VF != 212
$8C6    $53D3   UNKNOWN  $53D3           ; Unknown 5xxx instruction
$8C8    $3A3B   SE       VA, #3B         ; Skip if VA == 59
$8CA    $DBA3   DRW      VB, VA, #3      ; Draw 3-byte sprite at VB, VA
$8CC    $FF3B   UNKNOWN  FF3B            ; Unknown Fxxx instruction
$8CE    $8089   UNKNOWN  8089            ; Unknown 8xxx instruction
$8D0    $93B9   UNKNOWN  $93B9           ; Unknown 9xxx instruction
$8D2    $5F4A   UNKNOWN  $5F4A           ; Unknown 5xxx instruction
$8D4    $0AEB   SYS      $AEB            ; System call to AEB
$8D6    $3FC4   SE       VF, #C4         ; Skip if VF == 196
$8D8    $60F1   LD       V0, #F1         ; Load 241 into V0
$8DA    $182D   JP       $82D            ; Jump to 82D
$8DC    $3533   SE       V5, #33         ; Skip if V5 == 51
$8DE    $DF83   DRW      VF, V8, #3      ; Draw 3-byte sprite at VF, V8
$8E0    $D640   DRW      V6, V4, #0      ; Draw 0-byte sprite at V6, V4
$8E2    $6D4C   LD       VD, #4C         ; Load 76 into VD
$8E4    $A075   LD       I, $075         ; Load 075 into I
$8E6    $3FFB   SE       VF, #FB         ; Skip if VF == 251
$8E8    $ACAF   LD       I, $CAF         ; Load CAF into I
$8EA    $4611   SNE      V6, #11         ; Skip if V6 != 17
$8EC    $3885   SE       V8, #85         ; Skip if V8 == 133
$8EE    $CC54   RND      VC, #54         ; VC = random & 54
$8F0    $A99B   LD       I, $99B         ; Load 99B into I
$8F2    $7B18   ADD      VB, #18         ; Add 24 to VB
$8F4    $B4A3   JP       V0, $4A3        ; Jump to V0 + 4A3
$8F6    $4EC7   SNE      VE, #C7         ; Skip if VE != 199
$8F8    $7B45   ADD      VB, #45         ; Add 69 to VB
$8FA    $E5E2   UNKNOWN  $E5E2           ; Unknown Exxx instruction
$8FC    $79B6   ADD      V9, #B6         ; Add 182 to V9
$8FE    $59E5   UNKNOWN  $59E5           ; Unknown 5xxx instruction
$900    $A520   LD       I, $520         ; Load 520 into I
$902    $E4E2   UNKNOWN  $E4E2           ; Unknown Exxx instruction
$904    $2BE0   CALL     $BE0            ; Call subroutine at BE0
$906    $6F63   LD       VF, #63         ; Load 99 into VF
$908    $99A1   UNKNOWN  $99A1           ; Unknown 9xxx instruction
$90A    $4EE5   SNE      VE, #E5         ; Skip if VE != 229
$90C    $6B1C   LD       VB, #1C         ; Load 28 into VB
$90E    $9866   UNKNOWN  $9866           ; Unknown 9xxx instruction
$910    $9835   UNKNOWN  $9835           ; Unknown 9xxx instruction
$912    $604E   LD       V0, #4E         ; Load 78 into V0
$914    $956C   UNKNOWN  $956C           ; Unknown 9xxx instruction
$916    $815A   UNKNOWN  815A            ; Unknown 8xxx instruction
$918    $27AF   CALL     $7AF            ; Call subroutine at 7AF
$91A    $BABE   JP       V0, $ABE        ; Jump to V0 + ABE
$91C    $1873   JP       $873            ; Jump to 873
$91E    $EA7D   UNKNOWN  $EA7D           ; Unknown Exxx instruction
$920    $3377   SE       V3, #77         ; Skip if V3 == 119
$922    $D1B4   DRW      V1, VB, #4      ; Draw 4-byte sprite at V1, VB
$924    $6A64   LD       VA, #64         ; Load 100 into VA
$926    $8A85   SUB      VA, V8          ; VA -= V8, VF = !borrow
$928    $E5CD   UNKNOWN  $E5CD           ; Unknown Exxx instruction
$92A    $2C99   CALL     $C99            ; Call subroutine at C99
$92C    $577D   UNKNOWN  $577D           ; Unknown 5xxx instruction
$92E    $FDCC   UNKNOWN  FDCC            ; Unknown Fxxx instruction
$930    $7B54   ADD      VB, #54         ; Add 84 to VB
$932    $43CE   SNE      V3, #CE         ; Skip if V3 != 206
$934    $76A9   ADD      V6, #A9         ; Add 169 to V6
$936    $F0A9   UNKNOWN  F0A9            ; Unknown Fxxx instruction
$938    $ED72   UNKNOWN  $ED72           ; Unknown Exxx instruction
$93A    $6D55   LD       VD, #55         ; Load 85 into VD
$93C    $35B1   SE       V5, #B1         ; Skip if V5 == 177
$93E    $59DA   UNKNOWN  $59DA           ; Unknown 5xxx instruction
$940    $1F2A   JP       $F2A            ; Jump to F2A
$942    $1634   JP       $634            ; Jump to 634
$944    $C617   RND      V6, #17         ; V6 = random & 17
$946    $989E   UNKNOWN  $989E           ; Unknown 9xxx instruction
$948    $286E   CALL     $86E            ; Call subroutine at 86E
$94A    $C980   RND      V9, #80         ; V9 = random & 80
$94C    $6064   LD       V0, #64         ; Load 100 into V0
$94E    $A4D8   LD       I, $4D8         ; Load 4D8 into I
$950    $D089   DRW      V0, V8, #9      ; Draw 9-byte sprite at V0, V8
$952    $CCD7   RND      VC, #D7         ; VC = random & D7
$954    $84A9   UNKNOWN  84A9            ; Unknown 8xxx instruction
$956    $88D3   XOR      V8, VD          ; V8 ^= VD
$958    $B4D7   JP       V0, $4D7        ; Jump to V0 + 4D7
$95A    $3E64   SE       VE, #64         ; Skip if VE == 100
$95C    $EEB0   UNKNOWN  $EEB0           ; Unknown Exxx instruction
$95E    $8710   LD       V7, V1          ; V7 = V1
$960    $7833   ADD      V8, #33         ; Add 51 to V8
$962    $923B   UNKNOWN  $923B           ; Unknown 9xxx instruction
$964    $A48A   LD       I, $48A         ; Load 48A into I
$966    $0622   SYS      $622            ; System call to 622
$968    $B515   JP       V0, $515        ; Jump to V0 + 515
$96A    $D25A   DRW      V2, V5, #A      ; Draw 10-byte sprite at V2, V5
$96C    $6C6B   LD       VC, #6B         ; Load 107 into VC
$96E    $3166   SE       V1, #66         ; Skip if V1 == 102
$970    $8457   SUBN     V4, V5          ; V4 = V5 - V4, VF = !borrow
$972    $E76D   UNKNOWN  $E76D           ; Unknown Exxx instruction
$974    $9985   UNKNOWN  $9985           ; Unknown 9xxx instruction
$976    $0D64   SYS      $D64            ; System call to D64
$978    $17B9   JP       $7B9            ; Jump to 7B9
$97A    $707A   ADD      V0, #7A         ; Add 122 to V0
$97C    $B69D   JP       V0, $69D        ; Jump to V0 + 69D
$97E    $47B0   SNE      V7, #B0         ; Skip if V7 != 176
$980    $4F22   SNE      VF, #22         ; Skip if VF != 34
$982    $756F   ADD      V5, #6F         ; Add 111 to V5
$984    $0675   SYS      $675            ; System call to 675
$986    $E272   UNKNOWN  $E272           ; Unknown Exxx instruction
$988    $E7FB   UNKNOWN  $E7FB           ; Unknown Exxx instruction
$98A    $4D6B   SNE      VD, #6B         ; Skip if VD != 107
$98C    $8831   OR       V8, V3          ; V8 |= V3
$98E    $C720   RND      V7, #20         ; V7 = random & 20
$990    $51CD   UNKNOWN  $51CD           ; Unknown 5xxx instruction
$992    $78AA   ADD      V8, #AA         ; Add 170 to V8
$994    $CF51   RND      VF, #51         ; VF = random & 51
$996    $80EC   UNKNOWN  80EC            ; Unknown 8xxx instruction
$998    $45E7   SNE      V5, #E7         ; Skip if V5 != 231
$99A    $DC81   DRW      VC, V8, #1      ; Draw 1-byte sprite at VC, V8
$99C    $99E0   SNE      V9, VE          ; Skip if V9 != VE
$99E    $954E   UNKNOWN  $954E           ; Unknown 9xxx instruction
$9A0    $186B   JP       $86B            ; Jump to 86B
$9A2    $3DB9   SE       VD, #B9         ; Skip if VD == 185
$9A4    $6BAD   LD       VB, #AD         ; Load 173 into VB
$9A6    $9572   UNKNOWN  $9572           ; Unknown 9xxx instruction
$9A8    $BA74   JP       V0, $A74        ; Jump to V0 + A74
$9AA    $94AA   UNKNOWN  $94AA           ; Unknown 9xxx instruction
$9AC    $D022   DRW      V0, V2, #2      ; Draw 2-byte sprite at V0, V2
$9AE    $0B48   SYS      $B48            ; System call to B48
$9B0    $058E   SYS      $58E            ; System call to 58E
$9B2    $D2D8   DRW      V2, VD, #8      ; Draw 8-byte sprite at V2, VD
$9B4    $0CB1   SYS      $CB1            ; System call to CB1
$9B6    $DC77   DRW      VC, V7, #7      ; Draw 7-byte sprite at VC, V7
$9B8    $58E1   UNKNOWN  $58E1           ; Unknown 5xxx instruction
$9BA    $8ADC   UNKNOWN  8ADC            ; Unknown 8xxx instruction
$9BC    $A6F9   LD       I, $6F9         ; Load 6F9 into I
$9BE    $1FF9   JP       $FF9            ; Jump to FF9
$9C0    $3D7E   SE       VD, #7E         ; Skip if VD == 126
$9C2    $769C   ADD      V6, #9C         ; Add 156 to V6
$9C4    $61F1   LD       V1, #F1         ; Load 241 into V1
$9C6    $E10C   UNKNOWN  $E10C           ; Unknown Exxx instruction
$9C8    $0FB8   SYS      $FB8            ; System call to FB8
$9CA    $EE05   UNKNOWN  $EE05           ; Unknown Exxx instruction
$9CC    $539D   UNKNOWN  $539D           ; Unknown 5xxx instruction
$9CE    $B57B   JP       V0, $57B        ; Jump to V0 + 57B
$9D0    $6287   LD       V2, #87         ; Load 135 into V2
$9D2    $60A6   LD       V0, #A6         ; Load 166 into V0
$9D4    $DE42   DRW      VE, V4, #2      ; Draw 2-byte sprite at VE, V4
$9D6    $3EEC   SE       VE, #EC         ; Skip if VE == 236
$9D8    $A7D6   LD       I, $7D6         ; Load 7D6 into I
$9DA    $8E8A   UNKNOWN  8E8A            ; Unknown 8xxx instruction
$9DC    $1E4A   JP       $E4A            ; Jump to E4A
$9DE    $4AD9   SNE      VA, #D9         ; Skip if VA != 217
$9E0    $3CE6   SE       VC, #E6         ; Skip if VC == 230
$9E2    $B4AF   JP       V0, $4AF        ; Jump to V0 + 4AF
$9E4    $DD38   DRW      VD, V3, #8      ; Draw 8-byte sprite at VD, V3
$9E6    $A6E4   LD       I, $6E4         ; Load 6E4 into I
$9E8    $D1E7   DRW      V1, VE, #7      ; Draw 7-byte sprite at V1, VE
$9EA    $1E24   JP       $E24            ; Jump to E24
$9EC    $2EAA   CALL     $EAA            ; Call subroutine at EAA
$9EE    $57E0   SE       V7, VE          ; Skip if V7 == VE
$9F0    $F18F   UNKNOWN  F18F            ; Unknown Fxxx instruction
$9F2    $2C07   CALL     $C07            ; Call subroutine at C07
$9F4    $14CC   JP       $4CC            ; Jump to 4CC
$9F6    $C98C   RND      V9, #8C         ; V9 = random & 8C
$9F8    $1F70   JP       $F70            ; Jump to F70
$9FA    $51C1   UNKNOWN  $51C1           ; Unknown 5xxx instruction
$9FC    $8900   LD       V9, V0          ; V9 = V0
$9FE    $BF04   JP       V0, $F04        ; Jump to V0 + F04
$A00    $EAB6   UNKNOWN  $EAB6           ; Unknown Exxx instruction
$A02    $44A3   SNE      V4, #A3         ; Skip if V4 != 163
$A04    $3895   SE       V8, #95         ; Skip if V8 == 149
$A06    $353F   SE       V5, #3F         ; Skip if V5 == 63
$A08    $A974   LD       I, $974         ; Load 974 into I
$A0A    $A08E   LD       I, $08E         ; Load 08E into I
$A0C    $EB43   UNKNOWN  $EB43           ; Unknown Exxx instruction
$A0E    $FC68   UNKNOWN  FC68            ; Unknown Fxxx instruction
$A10    $39F6   SE       V9, #F6         ; Skip if V9 == 246
$A12    $09DB   SYS      $9DB            ; System call to 9DB
$A14    $73B8   ADD      V3, #B8         ; Add 184 to V3
$A16    $9C35   UNKNOWN  $9C35           ; Unknown 9xxx instruction
$A18    $E1E4   UNKNOWN  $E1E4           ; Unknown Exxx instruction
$A1A    $5A22   UNKNOWN  $5A22           ; Unknown 5xxx instruction
$A1C    $B3D4   JP       V0, $3D4        ; Jump to V0 + 3D4
$A1E    $8B42   AND      VB, V4          ; VB &= V4
$A20    $066D   SYS      $66D            ; System call to 66D
$A22    $178A   JP       $78A            ; Jump to 78A
$A24    $34AC   SE       V4, #AC         ; Skip if V4 == 172
$A26    $2934   CALL     $934            ; Call subroutine at 934
$A28    $1C0F   JP       $C0F            ; Jump to C0F
$A2A    $60BA   LD       V0, #BA         ; Load 186 into V0
$A2C    $DEF2   DRW      VE, VF, #2      ; Draw 2-byte sprite at VE, VF
$A2E    $ADE2   LD       I, $DE2         ; Load DE2 into I
$A30    $6CE7   LD       VC, #E7         ; Load 231 into VC
$A32    $2756   CALL     $756            ; Call subroutine at 756
$A34    $BEDF   JP       V0, $EDF        ; Jump to V0 + EDF
$A36    $52A4   UNKNOWN  $52A4           ; Unknown 5xxx instruction
$A38    $F959   UNKNOWN  F959            ; Unknown Fxxx instruction
$A3A    $8A0B   UNKNOWN  8A0B            ; Unknown 8xxx instruction
$A3C    $1BC6   JP       $BC6            ; Jump to BC6
$A3E    $9F4A   UNKNOWN  $9F4A           ; Unknown 9xxx instruction
$A40    $36F1   SE       V6, #F1         ; Skip if V6 == 241
$A42    $F369   UNKNOWN  F369            ; Unknown Fxxx instruction
$A44    $6484   LD       V4, #84         ; Load 132 into V4
$A46    $D676   DRW      V6, V7, #6      ; Draw 6-byte sprite at V6, V7
$A48    $A3F3   LD       I, $3F3         ; Load 3F3 into I
$A4A    $33B2   SE       V3, #B2         ; Skip if V3 == 178
$A4C    $B0B3   JP       V0, $0B3        ; Jump to V0 + 0B3
$A4E    $A44F   LD       I, $44F         ; Load 44F into I
$A50    $535D   UNKNOWN  $535D           ; Unknown 5xxx instruction
$A52    $E78C   UNKNOWN  $E78C           ; Unknown Exxx instruction
$A54    $208F   CALL     $08F            ; Call subroutine at 08F
$A56    $1079   JP       $079            ; Jump to 079
$A58    $74C7   ADD      V4, #C7         ; Add 199 to V4
$A5A    $7C52   ADD      VC, #52         ; Add 82 to VC
$A5C    $BE1C   JP       V0, $E1C        ; Jump to V0 + E1C
$A5E    $1AA2   JP       $AA2            ; Jump to AA2
$A60    $D610   DRW      V6, V1, #0      ; Draw 0-byte sprite at V6, V1
$A62    $7244   ADD      V2, #44         ; Add 68 to V2
$A64    $476A   SNE      V7, #6A         ; Skip if V7 != 106
$A66    $E45F   UNKNOWN  $E45F           ; Unknown Exxx instruction
$A68    $E7C7   UNKNOWN  $E7C7           ; Unknown Exxx instruction
$A6A    $90EE   UNKNOWN  $90EE           ; Unknown 9xxx instruction
$A6C    $8CE5   SUB      VC, VE          ; VC -= VE, VF = !borrow
$A6E    $5481   UNKNOWN  $5481           ; Unknown 5xxx instruction
$A70    $1C2F   JP       $C2F            ; Jump to C2F
$A72    $AA23   LD       I, $A23         ; Load A23 into I
$A74    $4B72   SNE      VB, #72         ; Skip if VB != 114
$A76    $B45B   JP       V0, $45B        ; Jump to V0 + 45B
$A78    $CEDC   RND      VE, #DC         ; VE = random & DC
$A7A    $2E2B   CALL     $E2B            ; Call subroutine at E2B
$A7C    $E229   UNKNOWN  $E229           ; Unknown Exxx instruction
$A7E    $17DB   JP       $7DB            ; Jump to 7DB
$A80    $39F8   SE       V9, #F8         ; Skip if V9 == 248
$A82    $DA7B   DRW      VA, V7, #B      ; Draw 11-byte sprite at VA, V7
$A84    $FE52   UNKNOWN  FE52            ; Unknown Fxxx instruction
$A86    $D487   DRW      V4, V8, #7      ; Draw 7-byte sprite at V4, V8
$A88    $2AF1   CALL     $AF1            ; Call subroutine at AF1
$A8A    $0B3D   SYS      $B3D            ; System call to B3D
$A8C    $2436   CALL     $436            ; Call subroutine at 436
$A8E    $C3E0   RND      V3, #E0         ; V3 = random & E0
$A90    $7490   ADD      V4, #90         ; Add 144 to V4
$A92    $62CD   LD       V2, #CD         ; Load 205 into V2
$A94    $0DE5   SYS      $DE5            ; System call to DE5
$A96    $85A9   UNKNOWN  85A9            ; Unknown 8xxx instruction
$A98    $AE56   LD       I, $E56         ; Load E56 into I
$A9A    $D429   DRW      V4, V2, #9      ; Draw 9-byte sprite at V4, V2
$A9C    $4130   SNE      V1, #30         ; Skip if V1 != 48
$A9E    $CAA9   RND      VA, #A9         ; VA = random & A9
$AA0    $D1B7   DRW      V1, VB, #7      ; Draw 7-byte sprite at V1, VB
$AA2    $C9DF   RND      V9, #DF         ; V9 = random & DF
$AA4    $50B4   UNKNOWN  $50B4           ; Unknown 5xxx instruction
$AA6    $917D   UNKNOWN  $917D           ; Unknown 9xxx instruction
$AA8    $BD43   JP       V0, $D43        ; Jump to V0 + D43
$AAA    $CDAA   RND      VD, #AA         ; VD = random & AA
$AAC    $E084   UNKNOWN  $E084           ; Unknown Exxx instruction
$AAE    $AB5D   LD       I, $B5D         ; Load B5D into I
$AB0    $0347   SYS      $347            ; System call to 347
$AB2    $3FCA   SE       VF, #CA         ; Skip if VF == 202
$AB4    $D11F   DRW      V1, V1, #F      ; Draw 15-byte sprite at V1, V1
$AB6    $3D33   SE       VD, #33         ; Skip if VD == 51
$AB8    $83C6   SHR      V3              ; V3 >>= 1, VF = LSB
$ABA    $32D4   SE       V2, #D4         ; Skip if V2 == 212
$ABC    $FF46   UNKNOWN  FF46            ; Unknown Fxxx instruction
$ABE    $60E9   LD       V0, #E9         ; Load 233 into V0
$AC0    $92E3   UNKNOWN  $92E3           ; Unknown 9xxx instruction
$AC2    $4E46   SNE      VE, #46         ; Skip if VE != 70
$AC4    $CCFB   RND      VC, #FB         ; VC = random & FB
$AC6    $8C06   SHR      VC              ; VC >>= 1, VF = LSB
$AC8    $2AB6   CALL     $AB6            ; Call subroutine at AB6
$ACA    $7DAA   ADD      VD, #AA         ; Add 170 to VD
$ACC    $280B   CALL     $80B            ; Call subroutine at 80B
$ACE    $F2E0   UNKNOWN  F2E0            ; Unknown Fxxx instruction
$AD0    $7C68   ADD      VC, #68         ; Add 104 to VC
$AD2    $CADD   RND      VA, #DD         ; VA = random & DD
$AD4    $E065   UNKNOWN  $E065           ; Unknown Exxx instruction
$AD6    $5943   UNKNOWN  $5943           ; Unknown 5xxx instruction
$AD8    $6C3F   LD       VC, #3F         ; Load 63 into VC
$ADA    $571D   UNKNOWN  $571D           ; Unknown 5xxx instruction
$ADC    $A153   LD       I, $153         ; Load 153 into I
$ADE    $A9D9   LD       I, $9D9         ; Load 9D9 into I
$AE0    $0575   SYS      $575            ; System call to 575
$AE2    $1F28   JP       $F28            ; Jump to F28
$AE4    $124A   JP       $24A            ; Jump to 24A
$AE6    $E80D   UNKNOWN  $E80D           ; Unknown Exxx instruction
$AE8    $7160   ADD      V1, #60         ; Add 96 to V1
$AEA    $87EC   UNKNOWN  87EC            ; Unknown 8xxx instruction
$AEC    $7F2F   ADD      VF, #2F         ; Add 47 to VF
$AEE    $3BB2   SE       VB, #B2         ; Skip if VB == 178
$AF0    $4FF1   SNE      VF, #F1         ; Skip if VF != 241
$AF2    $7E13   ADD      VE, #13         ; Add 19 to VE
$AF4    $B75C   JP       V0, $75C        ; Jump to V0 + 75C
$AF6    $48D7   SNE      V8, #D7         ; Skip if V8 != 215
$AF8    $36BA   SE       V6, #BA         ; Skip if V6 == 186
$AFA    $B8E1   JP       V0, $8E1        ; Jump to V0 + 8E1
$AFC    $A6AA   LD       I, $6AA         ; Load 6AA into I
$AFE    $CA80   RND      VA, #80         ; VA = random & 80
$B00    $0A5B   SYS      $A5B            ; System call to A5B
$B02    $E35D   UNKNOWN  $E35D           ; Unknown Exxx instruction
$B04    $AF94   LD       I, $F94         ; Load F94 into I
$B06    $3081   SE       V0, #81         ; Skip if V0 == 129
$B08    $5A7E   UNKNOWN  $5A7E           ; Unknown 5xxx instruction
$B0A    $A17A   LD       I, $17A         ; Load 17A into I
$B0C    $B719   JP       V0, $719        ; Jump to V0 + 719
$B0E    $5D78   UNKNOWN  $5D78           ; Unknown 5xxx instruction
$B10    $E79F   UNKNOWN  $E79F           ; Unknown Exxx instruction
$B12    $4C64   SNE      VC, #64         ; Skip if VC != 100
$B14    $DC17   DRW      VC, V1, #7      ; Draw 7-byte sprite at VC, V1
$B16    $1DBF   JP       $DBF            ; Jump to DBF
$B18    $E37F   UNKNOWN  $E37F           ; Unknown Exxx instruction
$B1A    $9C44   UNKNOWN  $9C44           ; Unknown 9xxx instruction
$B1C    $A0A6   LD       I, $0A6         ; Load 0A6 into I
$B1E    $E482   UNKNOWN  $E482           ; Unknown Exxx instruction
$B20    $EFB5   UNKNOWN  $EFB5           ; Unknown Exxx instruction
$B22    $59F9   UNKNOWN  $59F9           ; Unknown 5xxx instruction
$B24    $5E5B   UNKNOWN  $5E5B           ; Unknown 5xxx instruction
$B26    $E728   UNKNOWN  $E728           ; Unknown Exxx instruction
$B28    $0269   SYS      $269            ; System call to 269
$B2A    $AEF9   LD       I, $EF9         ; Load EF9 into I
$B2C    $A1E5   LD       I, $1E5         ; Load 1E5 into I
$B2E    $3C9A   SE       VC, #9A         ; Skip if VC == 154
$B30    $1000   JP       $000            ; Jump to 000
$B32    $AB2C   LD       I, $B2C         ; Load B2C into I
$B34    $1FEA   JP       $FEA            ; Jump to FEA
$B36    $E22A   UNKNOWN  $E22A           ; Unknown Exxx instruction
$B38    $3ECD   SE       VE, #CD         ; Skip if VE == 205
$B3A    $1325   JP       $325            ; Jump to 325
$B3C    $E3F0   UNKNOWN  $E3F0           ; Unknown Exxx instruction
$B3E    $4CB5   SNE      VC, #B5         ; Skip if VC != 181
$B40    $95BF   UNKNOWN  $95BF           ; Unknown 9xxx instruction
$B42    $5CBE   UNKNOWN  $5CBE           ; Unknown 5xxx instruction
$B44    $C058   RND      V0, #58         ; V0 = random & 58
$B46    $139B   JP       $39B            ; Jump to 39B
$B48    $87CD   UNKNOWN  87CD            ; Unknown 8xxx instruction
$B4A    $F3AF   UNKNOWN  F3AF            ; Unknown Fxxx instruction
$B4C    $B9DE   JP       V0, $9DE        ; Jump to V0 + 9DE
$B4E    $365E   SE       V6, #5E         ; Skip if V6 == 94
$B50    $48DA   SNE      V8, #DA         ; Skip if V8 != 218
$B52    $43D4   SNE      V3, #D4         ; Skip if V3 != 212
$B54    $E134   UNKNOWN  $E134           ; Unknown Exxx instruction
$B56    $56E7   UNKNOWN  $56E7           ; Unknown 5xxx instruction
$B58    $CBE9   RND      VB, #E9         ; VB = random & E9
$B5A    $A3FA   LD       I, $3FA         ; Load 3FA into I
$B5C    $A1A9   LD       I, $1A9         ; Load 1A9 into I
$B5E    $5265   UNKNOWN  $5265           ; Unknown 5xxx instruction
$B60    $57E3   UNKNOWN  $57E3           ; Unknown 5xxx instruction
$B62    $79E4   ADD      V9, #E4         ; Add 228 to V9
$B64    $AFBC   LD       I, $FBC         ; Load FBC into I
$B66    $C880   RND      V8, #80         ; V8 = random & 80
$B68    $3CED   SE       VC, #ED         ; Skip if VC == 237
$B6A    $17B4   JP       $7B4            ; Jump to 7B4
$B6C    $E268   UNKNOWN  $E268           ; Unknown Exxx instruction
$B6E    $029A   SYS      $29A            ; System call to 29A
$B70    $90D5   UNKNOWN  $90D5           ; Unknown 9xxx instruction
$B72    $E7E5   UNKNOWN  $E7E5           ; Unknown Exxx instruction
$B74    $81B4   ADD      V1, VB          ; V1 += VB, VF = carry
$B76    $9435   UNKNOWN  $9435           ; Unknown 9xxx instruction
$B78    $B696   JP       V0, $696        ; Jump to V0 + 696
$B7A    $8C81   OR       VC, V8          ; VC |= V8
$B7C    $CE27   RND      VE, #27         ; VE = random & 27
$B7E    $684E   LD       V8, #4E         ; Load 78 into V8
$B80    $A0E7   LD       I, $0E7         ; Load 0E7 into I
$B82    $31E4   SE       V1, #E4         ; Skip if V1 == 228
$B84    $060B   SYS      $60B            ; System call to 60B
$B86    $0C50   SYS      $C50            ; System call to C50
$B88    $0023   SYS      $023            ; System call to 023
$B8A    $6297   LD       V2, #97         ; Load 151 into V2
$B8C    $299A   CALL     $99A            ; Call subroutine at 99A
$B8E    $974D   UNKNOWN  $974D           ; Unknown 9xxx instruction
$B90    $6DF2   LD       VD, #F2         ; Load 242 into VD
$B92    $E01D   UNKNOWN  $E01D           ; Unknown Exxx instruction
$B94    $7952   ADD      V9, #52         ; Add 82 to V9
$B96    $1677   JP       $677            ; Jump to 677
$B98    $5643   UNKNOWN  $5643           ; Unknown 5xxx instruction
$B9A    $0E62   SYS      $E62            ; System call to E62
$B9C    $9BC8   UNKNOWN  $9BC8           ; Unknown 9xxx instruction
$B9E    $13E7   JP       $3E7            ; Jump to 3E7
$BA0    $2BEE   CALL     $BEE            ; Call subroutine at BEE
$BA2    $C165   RND      V1, #65         ; V1 = random & 65
$BA4    $C414   RND      V4, #14         ; V4 = random & 14
$BA6    $7B2E   ADD      VB, #2E         ; Add 46 to VB
$BA8    $A93C   LD       I, $93C         ; Load 93C into I
$BAA    $D608   DRW      V6, V0, #8      ; Draw 8-byte sprite at V6, V0
$BAC    $9565   UNKNOWN  $9565           ; Unknown 9xxx instruction
$BAE    $6B2B   LD       VB, #2B         ; Load 43 into VB
$BB0    $051D   SYS      $51D            ; System call to 51D
$BB2    $79DB   ADD      V9, #DB         ; Add 219 to V9
$BB4    $7E06   ADD      VE, #06         ; Add 6 to VE
$BB6    $538D   UNKNOWN  $538D           ; Unknown 5xxx instruction
$BB8    $9273   UNKNOWN  $9273           ; Unknown 9xxx instruction
$BBA    $1F0B   JP       $F0B            ; Jump to F0B
$BBC    $8D59   UNKNOWN  8D59            ; Unknown 8xxx instruction
$BBE    $EBB5   UNKNOWN  $EBB5           ; Unknown Exxx instruction
$BC0    $F786   UNKNOWN  F786            ; Unknown Fxxx instruction
$BC2    $C5A9   RND      V5, #A9         ; V5 = random & A9
$BC4    $587B   UNKNOWN  $587B           ; Unknown 5xxx instruction
$BC6    $0FF5   SYS      $FF5            ; System call to FF5
$BC8    $862E   SHL      V6              ; V6 <<= 1, VF = MSB
$BCA    $89CF   UNKNOWN  89CF            ; Unknown 8xxx instruction
$BCC    $F909   UNKNOWN  F909            ; Unknown Fxxx instruction
$BCE    $BDCD   JP       V0, $DCD        ; Jump to V0 + DCD
$BD0    $C583   RND      V5, #83         ; V5 = random & 83
$BD2    $0FAE   SYS      $FAE            ; System call to FAE
$BD4    $6CA8   LD       VC, #A8         ; Load 168 into VC
$BD6    $7D8D   ADD      VD, #8D         ; Add 141 to VD
$BD8    $F169   UNKNOWN  F169            ; Unknown Fxxx instruction
$BDA    $69DB   LD       V9, #DB         ; Load 219 into V9
$BDC    $12E1   JP       $2E1            ; Jump to 2E1
$BDE    $4B1F   SNE      VB, #1F         ; Skip if VB != 31
$BE0    $A81B   LD       I, $81B         ; Load 81B into I
$BE2    $263D   CALL     $63D            ; Call subroutine at 63D
$BE4    $569F   UNKNOWN  $569F           ; Unknown 5xxx instruction
$BE6    $C90F   RND      V9, #0F         ; V9 = random & 0F
$BE8    $3BED   SE       VB, #ED         ; Skip if VB == 237
$BEA    $703D   ADD      V0, #3D         ; Add 61 to V0
$BEC    $2CAF   CALL     $CAF            ; Call subroutine at CAF
$BEE    $29D6   CALL     $9D6            ; Call subroutine at 9D6
$BF0    $0052   SYS      $052            ; System call to 052
$BF2    $E4EF   UNKNOWN  $E4EF           ; Unknown Exxx instruction
$BF4    $7A12   ADD      VA, #12         ; Add 18 to VA
$BF6    $39B2   SE       V9, #B2         ; Skip if V9 == 178
$BF8    $9C3A   UNKNOWN  $9C3A           ; Unknown 9xxx instruction
$BFA    $CFBF   RND      VF, #BF         ; VF = random & BF
$BFC    $88F5   SUB      V8, VF          ; V8 -= VF, VF = !borrow
$BFE    $81B2   AND      V1, VB          ; V1 &= VB
$C00    $65DE   LD       V5, #DE         ; Load 222 into V5
$C02    $836B   UNKNOWN  836B            ; Unknown 8xxx instruction
$C04    $EB78   UNKNOWN  $EB78           ; Unknown Exxx instruction
$C06    $1108   JP       $108            ; Jump to 108
$C08    $15E5   JP       $5E5            ; Jump to 5E5
$C0A    $47FF   SNE      V7, #FF         ; Skip if V7 != 255
$C0C    $927C   UNKNOWN  $927C           ; Unknown 9xxx instruction
$C0E    $C936   RND      V9, #36         ; V9 = random & 36
$C10    $963E   UNKNOWN  $963E           ; Unknown 9xxx instruction
$C12    $F44D   UNKNOWN  F44D            ; Unknown Fxxx instruction
$C14    $1279   JP       $279            ; Jump to 279
$C16    $8A6B   UNKNOWN  8A6B            ; Unknown 8xxx instruction
$C18    $4980   SNE      V9, #80         ; Skip if V9 != 128
$C1A    $49CC   SNE      V9, #CC         ; Skip if V9 != 204
$C1C    $EF69   UNKNOWN  $EF69           ; Unknown Exxx instruction
$C1E    $A36F   LD       I, $36F         ; Load 36F into I
$C20    $9E64   UNKNOWN  $9E64           ; Unknown 9xxx instruction
$C22    $1BA6   JP       $BA6            ; Jump to BA6
$C24    $47C9   SNE      V7, #C9         ; Skip if V7 != 201
$C26    $4503   SNE      V5, #03         ; Skip if V5 != 3
$C28    $0848   SYS      $848            ; System call to 848
$C2A    $5378   UNKNOWN  $5378           ; Unknown 5xxx instruction
$C2C    $3CA7   SE       VC, #A7         ; Skip if VC == 167
$C2E    $F5CF   UNKNOWN  F5CF            ; Unknown Fxxx instruction
$C30    $4624   SNE      V6, #24         ; Skip if V6 != 36
$C32    $C728   RND      V7, #28         ; V7 = random & 28
$C34    $444B   SNE      V4, #4B         ; Skip if V4 != 75
$C36    $D12E   DRW      V1, V2, #E      ; Draw 14-byte sprite at V1, V2
$C38    $910C   UNKNOWN  $910C           ; Unknown 9xxx instruction
$C3A    $407A   SNE      V0, #7A         ; Skip if V0 != 122
$C3C    $5E55   UNKNOWN  $5E55           ; Unknown 5xxx instruction
$C3E    $F101   UNKNOWN  F101            ; Unknown Fxxx instruction
$C40    $CF8F   RND      VF, #8F         ; VF = random & 8F
$C42    $72DF   ADD      V2, #DF         ; Add 223 to V2
$C44    $A683   LD       I, $683         ; Load 683 into I
$C46    $8801   OR       V8, V0          ; V8 |= V0
$C48    $226C   CALL     $26C            ; Call subroutine at 26C
$C4A    $B24F   JP       V0, $24F        ; Jump to V0 + 24F
$C4C    $1FF7   JP       $FF7            ; Jump to FF7
$C4E    $2EF8   CALL     $EF8            ; Call subroutine at EF8
$C50    $5E98   UNKNOWN  $5E98           ; Unknown 5xxx instruction
$C52    $4301   SNE      V3, #01         ; Skip if V3 != 1
$C54    $0D5C   SYS      $D5C            ; System call to D5C
$C56    $FB10   UNKNOWN  FB10            ; Unknown Fxxx instruction
$C58    $96A0   SNE      V6, VA          ; Skip if V6 != VA
$C5A    $6495   LD       V4, #95         ; Load 149 into V4
$C5C    $AC2F   LD       I, $C2F         ; Load C2F into I
$C5E    $E7EF   UNKNOWN  $E7EF           ; Unknown Exxx instruction
$C60    $41EB   SNE      V1, #EB         ; Skip if V1 != 235
$C62    $5B8C   UNKNOWN  $5B8C           ; Unknown 5xxx instruction
$C64    $CCCF   RND      VC, #CF         ; VC = random & CF
$C66    $3C96   SE       VC, #96         ; Skip if VC == 150
$C68    $14C2   JP       $4C2            ; Jump to 4C2
$C6A    $24F3   CALL     $4F3            ; Call subroutine at 4F3
$C6C    $700A   ADD      V0, #0A         ; Add 10 to V0
$C6E    $370A   SE       V7, #0A         ; Skip if V7 == 10
$C70    $BFD0   JP       V0, $FD0        ; Jump to V0 + FD0
$C72    $D671   DRW      V6, V7, #1      ; Draw 1-byte sprite at V6, V7
$C74    $BF7D   JP       V0, $F7D        ; Jump to V0 + F7D
$C76    $9AAF   UNKNOWN  $9AAF           ; Unknown 9xxx instruction
$C78    $B3D4   JP       V0, $3D4        ; Jump to V0 + 3D4
$C7A    $5AC3   UNKNOWN  $5AC3           ; Unknown 5xxx instruction
$C7C    $75C4   ADD      V5, #C4         ; Add 196 to V5
$C7E    $E5FF   UNKNOWN  $E5FF           ; Unknown Exxx instruction
$C80    $DA6D   DRW      VA, V6, #D      ; Draw 13-byte sprite at VA, V6
$C82    $FEDA   UNKNOWN  FEDA            ; Unknown Fxxx instruction
$C84    $B4BB   JP       V0, $4BB        ; Jump to V0 + 4BB
$C86    $99A0   SNE      V9, VA          ; Skip if V9 != VA
$C88    $9561   UNKNOWN  $9561           ; Unknown 9xxx instruction
$C8A    $64A4   LD       V4, #A4         ; Load 164 into V4
$C8C    $3F47   SE       VF, #47         ; Skip if VF == 71
$C8E    $85DC   UNKNOWN  85DC            ; Unknown 8xxx instruction
$C90    $EC2E   UNKNOWN  $EC2E           ; Unknown Exxx instruction
$C92    $9D7B   UNKNOWN  $9D7B           ; Unknown 9xxx instruction
$C94    $67B1   LD       V7, #B1         ; Load 177 into V7
$C96    $1CB7   JP       $CB7            ; Jump to CB7
$C98    $B267   JP       V0, $267        ; Jump to V0 + 267
$C9A    $82D2   AND      V2, VD          ; V2 &= VD
$C9C    $BC67   JP       V0, $C67        ; Jump to V0 + C67
$C9E    $5C27   UNKNOWN  $5C27           ; Unknown 5xxx instruction
$CA0    $5E56   UNKNOWN  $5E56           ; Unknown 5xxx instruction
$CA2    $0994   SYS      $994            ; System call to 994
$CA4    $3371   SE       V3, #71         ; Skip if V3 == 113
$CA6    $5B71   UNKNOWN  $5B71           ; Unknown 5xxx instruction
$CA8    $1E8A   JP       $E8A            ; Jump to E8A
$CAA    $D28B   DRW      V2, V8, #B      ; Draw 11-byte sprite at V2, V8
$CAC    $8E13   XOR      VE, V1          ; VE ^= V1
$CAE    $2917   CALL     $917            ; Call subroutine at 917
$CB0    $DB59   DRW      VB, V5, #9      ; Draw 9-byte sprite at VB, V5
$CB2    $F466   UNKNOWN  F466            ; Unknown Fxxx instruction
$CB4    $9AB4   UNKNOWN  $9AB4           ; Unknown 9xxx instruction
$CB6    $8639   UNKNOWN  8639            ; Unknown 8xxx instruction
$CB8    $100F   JP       $00F            ; Jump to 00F
$CBA    $86C2   AND      V6, VC          ; V6 &= VC
$CBC    $4C68   SNE      VC, #68         ; Skip if VC != 104
$CBE    $1092   JP       $092            ; Jump to 092
$CC0    $6E12   LD       VE, #12         ; Load 18 into VE
$CC2    $DAD7   DRW      VA, VD, #7      ; Draw 7-byte sprite at VA, VD
$CC4    $27DC   CALL     $7DC            ; Call subroutine at 7DC
$CC6    $9CD6   UNKNOWN  $9CD6           ; Unknown 9xxx instruction
$CC8    $4C91   SNE      VC, #91         ; Skip if VC != 145
$CCA    $668B   LD       V6, #8B         ; Load 139 into V6
$CCC    $0590   SYS      $590            ; System call to 590
$CCE    $F330   UNKNOWN  F330            ; Unknown Fxxx instruction
$CD0    $DC83   DRW      VC, V8, #3      ; Draw 3-byte sprite at VC, V8
$CD2    $25BD   CALL     $5BD            ; Call subroutine at 5BD
$CD4    $5238   UNKNOWN  $5238           ; Unknown 5xxx instruction
$CD6    $BC1D   JP       V0, $C1D        ; Jump to V0 + C1D
$CD8    $86D8   UNKNOWN  86D8            ; Unknown 8xxx instruction
$CDA    $3A90   SE       VA, #90         ; Skip if VA == 144
$CDC    $E1E6   UNKNOWN  $E1E6           ; Unknown Exxx instruction
$CDE    $FD9B   UNKNOWN  FD9B            ; Unknown Fxxx instruction
$CE0    $858E   SHL      V5              ; V5 <<= 1, VF = MSB
$CE2    $5157   UNKNOWN  $5157           ; Unknown 5xxx instruction
$CE4    $BE2F   JP       V0, $E2F        ; Jump to V0 + E2F
$CE6    $A45D   LD       I, $45D         ; Load 45D into I
$CE8    $A12C   LD       I, $12C         ; Load 12C into I
$CEA    $F477   UNKNOWN  F477            ; Unknown Fxxx instruction
$CEC    $B20D   JP       V0, $20D        ; Jump to V0 + 20D
$CEE    $06C0   SYS      $6C0            ; System call to 6C0
$CF0    $4BAE   SNE      VB, #AE         ; Skip if VB != 174
$CF2    $0446   SYS      $446            ; System call to 446
$CF4    $2A58   CALL     $A58            ; Call subroutine at A58
$CF6    $0184   SYS      $184            ; System call to 184
$CF8    $99CE   UNKNOWN  $99CE           ; Unknown 9xxx instruction
$CFA    $1875   JP       $875            ; Jump to 875
$CFC    $BFA6   JP       V0, $FA6        ; Jump to V0 + FA6
$CFE    $1735   JP       $735            ; Jump to 735
$D00    $AFB7   LD       I, $FB7         ; Load FB7 into I
$D02    $9D86   UNKNOWN  $9D86           ; Unknown 9xxx instruction
$D04    $D556   DRW      V5, V5, #6      ; Draw 6-byte sprite at V5, V5
$D06    $61E5   LD       V1, #E5         ; Load 229 into V1
$D08    $D738   DRW      V7, V3, #8      ; Draw 8-byte sprite at V7, V3
$D0A    $DD29   DRW      VD, V2, #9      ; Draw 9-byte sprite at VD, V2
$D0C    $EF9D   UNKNOWN  $EF9D           ; Unknown Exxx instruction
$D0E    $BF22   JP       V0, $F22        ; Jump to V0 + F22
$D10    $9213   UNKNOWN  $9213           ; Unknown 9xxx instruction
$D12    $2958   CALL     $958            ; Call subroutine at 958
$D14    $3048   SE       V0, #48         ; Skip if V0 == 72
$D16    $3123   SE       V1, #23         ; Skip if V1 == 35
$D18    $76B9   ADD      V6, #B9         ; Add 185 to V6
$D1A    $32DC   SE       V2, #DC         ; Skip if V2 == 220
$D1C    $1AD3   JP       $AD3            ; Jump to AD3
$D1E    $C7BB   RND      V7, #BB         ; V7 = random & BB
$D20    $446D   SNE      V4, #6D         ; Skip if V4 != 109
$D22    $4A05   SNE      VA, #05         ; Skip if VA != 5
$D24    $2FA7   CALL     $FA7            ; Call subroutine at FA7
$D26    $C90C   RND      V9, #0C         ; V9 = random & 0C
$D28    $CDD9   RND      VD, #D9         ; VD = random & D9
$D2A    $C8BC   RND      V8, #BC         ; V8 = random & BC
$D2C    $B17C   JP       V0, $17C        ; Jump to V0 + 17C
$D2E    $AE6C   LD       I, $E6C         ; Load E6C into I
$D30    $BA3E   JP       V0, $A3E        ; Jump to V0 + A3E
$D32    $EC3B   UNKNOWN  $EC3B           ; Unknown Exxx instruction
$D34    $1F47   JP       $F47            ; Jump to F47
$D36    $B327   JP       V0, $327        ; Jump to V0 + 327
$D38    $756B   ADD      V5, #6B         ; Add 107 to V5
$D3A    $4A23   SNE      VA, #23         ; Skip if VA != 35
$D3C    $0279   SYS      $279            ; System call to 279
$D3E    $5280   SE       V2, V8          ; Skip if V2 == V8
$D40    $3367   SE       V3, #67         ; Skip if V3 == 103
$D42    $D2F0   DRW      V2, VF, #0      ; Draw 0-byte sprite at V2, VF
$D44    $EA02   UNKNOWN  $EA02           ; Unknown Exxx instruction
$D46    $9E4B   UNKNOWN  $9E4B           ; Unknown 9xxx instruction
$D48    $022E   SYS      $22E            ; System call to 22E
$D4A    $9D5A   UNKNOWN  $9D5A           ; Unknown 9xxx instruction
$D4C    $4CF5   SNE      VC, #F5         ; Skip if VC != 245
$D4E    $0698   SYS      $698            ; System call to 698
$D50    $F85E   UNKNOWN  F85E            ; Unknown Fxxx instruction
$D52    $116C   JP       $16C            ; Jump to 16C
$D54    $F70D   UNKNOWN  F70D            ; Unknown Fxxx instruction
$D56    $2A15   CALL     $A15            ; Call subroutine at A15
$D58    $B8AA   JP       V0, $8AA        ; Jump to V0 + 8AA
$D5A    $684C   LD       V8, #4C         ; Load 76 into V8
$D5C    $C302   RND      V3, #02         ; V3 = random & 02
$D5E    $FBB4   UNKNOWN  FBB4            ; Unknown Fxxx instruction
$D60    $D37A   DRW      V3, V7, #A      ; Draw 10-byte sprite at V3, V7
$D62    $40AD   SNE      V0, #AD         ; Skip if V0 != 173
$D64    $DAE3   DRW      VA, VE, #3      ; Draw 3-byte sprite at VA, VE
$D66    $68DE   LD       V8, #DE         ; Load 222 into V8
$D68    $4E2B   SNE      VE, #2B         ; Skip if VE != 43
$D6A    $8E88   UNKNOWN  8E88            ; Unknown 8xxx instruction
$D6C    $603D   LD       V0, #3D         ; Load 61 into V0
$D6E    $2DA1   CALL     $DA1            ; Call subroutine at DA1
$D70    $E652   UNKNOWN  $E652           ; Unknown Exxx instruction
$D72    $1155   JP       $155            ; Jump to 155
$D74    $B804   JP       V0, $804        ; Jump to V0 + 804
$D76    $DED9   DRW      VE, VD, #9      ; Draw 9-byte sprite at VE, VD
$D78    $C28D   RND      V2, #8D         ; V2 = random & 8D
$D7A    $1D65   JP       $D65            ; Jump to D65
$D7C    $B80E   JP       V0, $80E        ; Jump to V0 + 80E
$D7E    $4DB6   SNE      VD, #B6         ; Skip if VD != 182
$D80    $0350   SYS      $350            ; System call to 350
$D82    $36DB   SE       V6, #DB         ; Skip if V6 == 219
$D84    $7EC6   ADD      VE, #C6         ; Add 198 to VE
$D86    $09D4   SYS      $9D4            ; System call to 9D4
$D88    $A17A   LD       I, $17A         ; Load 17A into I
$D8A    $CBBF   RND      VB, #BF         ; VB = random & BF
$D8C    $58A0   SE       V8, VA          ; Skip if V8 == VA
$D8E    $82B6   SHR      V2              ; V2 >>= 1, VF = LSB
$D90    $9A82   UNKNOWN  $9A82           ; Unknown 9xxx instruction
$D92    $679E   LD       V7, #9E         ; Load 158 into V7
$D94    $4AC2   SNE      VA, #C2         ; Skip if VA != 194
$D96    $2B2F   CALL     $B2F            ; Call subroutine at B2F
$D98    $BAD3   JP       V0, $AD3        ; Jump to V0 + AD3
$D9A    $1184   JP       $184            ; Jump to 184
$D9C    $B4C7   JP       V0, $4C7        ; Jump to V0 + 4C7
$D9E    $C542   RND      V5, #42         ; V5 = random & 42
$DA0    $1AFB   JP       $AFB            ; Jump to AFB
$DA2    $82D3   XOR      V2, VD          ; V2 ^= VD
$DA4    $16CF   JP       $6CF            ; Jump to 6CF
$DA6    $AE5D   LD       I, $E5D         ; Load E5D into I
$DA8    $19F8   JP       $9F8            ; Jump to 9F8
$DAA    $A4B5   LD       I, $4B5         ; Load 4B5 into I
$DAC    $5D74   UNKNOWN  $5D74           ; Unknown 5xxx instruction
$DAE    $6A6F   LD       VA, #6F         ; Load 111 into VA
$DB0    $8F6A   UNKNOWN  8F6A            ; Unknown 8xxx instruction
$DB2    $358A   SE       V5, #8A         ; Skip if V5 == 138
$DB4    $DBE7   DRW      VB, VE, #7      ; Draw 7-byte sprite at VB, VE
$DB6    $1C43   JP       $C43            ; Jump to C43
$DB8    $A852   LD       I, $852         ; Load 852 into I
$DBA    $6F1E   LD       VF, #1E         ; Load 30 into VF
$DBC    $5AF0   SE       VA, VF          ; Skip if VA == VF
$DBE    $8F91   OR       VF, V9          ; VF |= V9
$DC0    $4348   SNE      V3, #48         ; Skip if V3 != 72
$DC2    $00D3   SYS      $0D3            ; System call to 0D3
$DC4    $AE32   LD       I, $E32         ; Load E32 into I
$DC6    $AEAC   LD       I, $EAC         ; Load EAC into I
$DC8    $FB61   UNKNOWN  FB61            ; Unknown Fxxx instruction
$DCA    $01B5   SYS      $1B5            ; System call to 1B5
$DCC    $D707   DRW      V7, V0, #7      ; Draw 7-byte sprite at V7, V0
$DCE    $D9BD   DRW      V9, VB, #D      ; Draw 13-byte sprite at V9, VB
$DD0    $9A5A   UNKNOWN  $9A5A           ; Unknown 9xxx instruction
$DD2    $7037   ADD      V0, #37         ; Add 55 to V0
$DD4    $F3C8   UNKNOWN  F3C8            ; Unknown Fxxx instruction
$DD6    $78D8   ADD      V8, #D8         ; Add 216 to V8
$DD8    $E190   UNKNOWN  $E190           ; Unknown Exxx instruction
$DDA    $92A4   UNKNOWN  $92A4           ; Unknown 9xxx instruction
$DDC    $5BF6   UNKNOWN  $5BF6           ; Unknown 5xxx instruction
$DDE    $6961   LD       V9, #61         ; Load 97 into V9
$DE0    $8545   SUB      V5, V4          ; V5 -= V4, VF = !borrow
$DE2    $70A3   ADD      V0, #A3         ; Add 163 to V0
$DE4    $C948   RND      V9, #48         ; V9 = random & 48
$DE6    $A70D   LD       I, $70D         ; Load 70D into I
$DE8    $7DF2   ADD      VD, #F2         ; Add 242 to VD
$DEA    $1F45   JP       $F45            ; Jump to F45
$DEC    $2F1E   CALL     $F1E            ; Call subroutine at F1E
$DEE    $1EE6   JP       $EE6            ; Jump to EE6
$DF0    $4837   SNE      V8, #37         ; Skip if V8 != 55
$DF2    $C4B9   RND      V4, #B9         ; V4 = random & B9
$DF4    $154F   JP       $54F            ; Jump to 54F
$DF6    $39B4   SE       V9, #B4         ; Skip if V9 == 180
$DF8    $6D4E   LD       VD, #4E         ; Load 78 into VD
$DFA    $96B1   UNKNOWN  $96B1           ; Unknown 9xxx instruction
$DFC    $9D5B   UNKNOWN  $9D5B           ; Unknown 9xxx instruction
$DFE    $D0B3   DRW      V0, VB, #3      ; Draw 3-byte sprite at V0, VB
$E00    $DB5C   DRW      VB, V5, #C      ; Draw 12-byte sprite at VB, V5
$E02    $617D   LD       V1, #7D         ; Load 125 into V1
$E04    $B26E   JP       V0, $26E        ; Jump to V0 + 26E
$E06    $88CC   UNKNOWN  88CC            ; Unknown 8xxx instruction
$E08    $693D   LD       V9, #3D         ; Load 61 into V9
$E0A    $FA21   UNKNOWN  FA21            ; Unknown Fxxx instruction
$E0C    $52FE   UNKNOWN  $52FE           ; Unknown 5xxx instruction
$E0E    $38A0   SE       V8, #A0         ; Skip if V8 == 160
$E10    $C2EC   RND      V2, #EC         ; V2 = random & EC
$E12    $F210   UNKNOWN  F210            ; Unknown Fxxx instruction
$E14    $0916   SYS      $916            ; System call to 916
$E16    $B136   JP       V0, $136        ; Jump to V0 + 136
$E18    $35C0   SE       V5, #C0         ; Skip if V5 == 192
$E1A    $52B5   UNKNOWN  $52B5           ; Unknown 5xxx instruction
$E1C    $1F38   JP       $F38            ; Jump to F38
$E1E    $2A43   CALL     $A43            ; Call subroutine at A43
$E20    $2E17   CALL     $E17            ; Call subroutine at E17
$E22    $6CC2   LD       VC, #C2         ; Load 194 into VC
$E24    $1308   JP       $308            ; Jump to 308
$E26    $4B6A   SNE      VB, #6A         ; Skip if VB != 106
$E28    $C587   RND      V5, #87         ; V5 = random & 87
$E2A    $F3F2   UNKNOWN  F3F2            ; Unknown Fxxx instruction
$E2C    $4872   SNE      V8, #72         ; Skip if V8 != 114
$E2E    $C8A3   RND      V8, #A3         ; V8 = random & A3
$E30    $B40F   JP       V0, $40F        ; Jump to V0 + 40F
$E32    $7431   ADD      V4, #31         ; Add 49 to V4
$E34    $B05A   JP       V0, $05A        ; Jump to V0 + 05A
$E36    $6379   LD       V3, #79         ; Load 121 into V3
$E38    $5BCA   UNKNOWN  $5BCA           ; Unknown 5xxx instruction
$E3A    $5F3F   UNKNOWN  $5F3F           ; Unknown 5xxx instruction
$E3C    $4A90   SNE      VA, #90         ; Skip if VA != 144
$E3E    $6957   LD       V9, #57         ; Load 87 into V9
$E40    $ED0C   UNKNOWN  $ED0C           ; Unknown Exxx instruction
$E42    $0FE0   SYS      $FE0            ; System call to FE0
$E44    $CC6D   RND      VC, #6D         ; VC = random & 6D
$E46    $8BE7   SUBN     VB, VE          ; VB = VE - VB, VF = !borrow
$E48    $91BC   UNKNOWN  $91BC           ; Unknown 9xxx instruction
$E4A    $079A   SYS      $79A            ; System call to 79A
$E4C    $EA12   UNKNOWN  $EA12           ; Unknown Exxx instruction
$E4E    $22AA   CALL     $2AA            ; Call subroutine at 2AA
$E50    $8953   XOR      V9, V5          ; V9 ^= V5
$E52    $14C7   JP       $4C7            ; Jump to 4C7
$E54    $67A8   LD       V7, #A8         ; Load 168 into V7
$E56    $D4DF   DRW      V4, VD, #F      ; Draw 15-byte sprite at V4, VD
$E58    $600B   LD       V0, #0B         ; Load 11 into V0
$E5A    $1583   JP       $583            ; Jump to 583
$E5C    $0F79   SYS      $F79            ; System call to F79
$E5E    $7D7F   ADD      VD, #7F         ; Add 127 to VD
$E60    $EB46   UNKNOWN  $EB46           ; Unknown Exxx instruction
$E62    $02B6   SYS      $2B6            ; System call to 2B6
$E64    $490B   SNE      V9, #0B         ; Skip if V9 != 11
$E66    $7B92   ADD      VB, #92         ; Add 146 to VB
$E68    $56FF   UNKNOWN  $56FF           ; Unknown 5xxx instruction
$E6A    $D275   DRW      V2, V7, #5      ; Draw 5-byte sprite at V2, V7
$E6C    $4D86   SNE      VD, #86         ; Skip if VD != 134
$E6E    $F129   LD       F, V1           ; I = sprite address for digit V1
$E70    $A6F8   LD       I, $6F8         ; Load 6F8 into I
$E72    $D335   DRW      V3, V3, #5      ; Draw 5-byte sprite at V3, V3
$E74    $680B   LD       V8, #0B         ; Load 11 into V8
$E76    $0EE1   SYS      $EE1            ; System call to EE1
$E78    $5847   UNKNOWN  $5847           ; Unknown 5xxx instruction
$E7A    $089F   SYS      $89F            ; System call to 89F
$E7C    $D0A4   DRW      V0, VA, #4      ; Draw 4-byte sprite at V0, VA
$E7E    $58F6   UNKNOWN  $58F6           ; Unknown 5xxx instruction
$E80    $BA44   JP       V0, $A44        ; Jump to V0 + A44
$E82    $715A   ADD      V1, #5A         ; Add 90 to V1
$E84    $8259   UNKNOWN  8259            ; Unknown 8xxx instruction
$E86    $2712   CALL     $712            ; Call subroutine at 712
$E88    $A367   LD       I, $367         ; Load 367 into I
$E8A    $ECB2   UNKNOWN  $ECB2           ; Unknown Exxx instruction
$E8C    $D060   DRW      V0, V6, #0      ; Draw 0-byte sprite at V0, V6
$E8E    $1556   JP       $556            ; Jump to 556
$E90    $DBBA   DRW      VB, VB, #A      ; Draw 10-byte sprite at VB, VB
$E92    $5A66   UNKNOWN  $5A66           ; Unknown 5xxx instruction
$E94    $9909   UNKNOWN  $9909           ; Unknown 9xxx instruction
$E96    $7678   ADD      V6, #78         ; Add 120 to V6
$E98    $2519   CALL     $519            ; Call subroutine at 519
$E9A    $9361   UNKNOWN  $9361           ; Unknown 9xxx instruction
$E9C    $8B3C   UNKNOWN  8B3C            ; Unknown 8xxx instruction
$E9E    $B301   JP       V0, $301        ; Jump to V0 + 301
$EA0    $7FF4   ADD      VF, #F4         ; Add 244 to VF
$EA2    $9C10   SNE      VC, V1          ; Skip if VC != V1
$EA4    $9A35   UNKNOWN  $9A35           ; Unknown 9xxx instruction
$EA6    $49F9   SNE      V9, #F9         ; Skip if V9 != 249
$EA8    $8671   OR       V6, V7          ; V6 |= V7
$EAA    $6E5D   LD       VE, #5D         ; Load 93 into VE
$EAC    $A1B7   LD       I, $1B7         ; Load 1B7 into I
$EAE    $8B3A   UNKNOWN  8B3A            ; Unknown 8xxx instruction
$EB0    $AE42   LD       I, $E42         ; Load E42 into I
$EB2    $4F43   SNE      VF, #43         ; Skip if VF != 67
$EB4    $3E5D   SE       VE, #5D         ; Skip if VE == 93
$EB6    $5E35   UNKNOWN  $5E35           ; Unknown 5xxx instruction
$EB8    $E684   UNKNOWN  $E684           ; Unknown Exxx instruction
$EBA    $10EB   JP       $0EB            ; Jump to 0EB
$EBC    $4189   SNE      V1, #89         ; Skip if V1 != 137
$EBE    $CEA2   RND      VE, #A2         ; VE = random & A2
$EC0    $53A7   UNKNOWN  $53A7           ; Unknown 5xxx instruction
$EC2    $A688   LD       I, $688         ; Load 688 into I
$EC4    $A7D3   LD       I, $7D3         ; Load 7D3 into I
$EC6    $53B4   UNKNOWN  $53B4           ; Unknown 5xxx instruction
$EC8    $C319   RND      V3, #19         ; V3 = random & 19
$ECA    $6B2B   LD       VB, #2B         ; Load 43 into VB
$ECC    $BC40   JP       V0, $C40        ; Jump to V0 + C40
$ECE    $3CF2   SE       VC, #F2         ; Skip if VC == 242
$ED0    $6732   LD       V7, #32         ; Load 50 into V7
$ED2    $B707   JP       V0, $707        ; Jump to V0 + 707
$ED4    $30CD   SE       V0, #CD         ; Skip if V0 == 205
$ED6    $49C4   SNE      V9, #C4         ; Skip if V9 != 196
$ED8    $43E9   SNE      V3, #E9         ; Skip if V3 != 233
$EDA    $ABC2   LD       I, $BC2         ; Load BC2 into I
$EDC    $80A7   SUBN     V0, VA          ; V0 = VA - V0, VF = !borrow
$EDE    $89FC   UNKNOWN  89FC            ; Unknown 8xxx instruction
$EE0    $C9E5   RND      V9, #E5         ; V9 = random & E5
$EE2    $A716   LD       I, $716         ; Load 716 into I
$EE4    $A3B7   LD       I, $3B7         ; Load 3B7 into I
$EE6    $819E   SHL      V1              ; V1 <<= 1, VF = MSB
$EE8    $2E13   CALL     $E13            ; Call subroutine at E13
$EEA    $92C8   UNKNOWN  $92C8           ; Unknown 9xxx instruction
$EEC    $653C   LD       V5, #3C         ; Load 60 into V5
$EEE    $77C1   ADD      V7, #C1         ; Add 193 to V7
$EF0    $1C25   JP       $C25            ; Jump to C25
$EF2    $0B68   SYS      $B68            ; System call to B68
$EF4    $BFC9   JP       V0, $FC9        ; Jump to V0 + FC9
$EF6    $92C2   UNKNOWN  $92C2           ; Unknown 9xxx instruction
$EF8    $1B62   JP       $B62            ; Jump to B62
$EFA    $96BF   UNKNOWN  $96BF           ; Unknown 9xxx instruction
$EFC    $FB60   UNKNOWN  FB60            ; Unknown Fxxx instruction
$EFE    $FE50   UNKNOWN  FE50            ; Unknown Fxxx instruction
$F00    $A0EC   LD       I, $0EC         ; Load 0EC into I
$F02    $107F   JP       $07F            ; Jump to 07F
$F04    $194B   JP       $94B            ; Jump to 94B
$F06    $8977   SUBN     V9, V7          ; V9 = V7 - V9, VF = !borrow
$F08    $1566   JP       $566            ; Jump to 566
$F0A    $5C61   UNKNOWN  $5C61           ; Unknown 5xxx instruction
$F0C    $0BDD   SYS      $BDD            ; System call to BDD
$F0E    $E486   UNKNOWN  $E486           ; Unknown Exxx instruction
$F10    $4D47   SNE      VD, #47         ; Skip if VD != 71
$F12    $DC41   DRW      VC, V4, #1      ; Draw 1-byte sprite at VC, V4
$F14    $DFA4   DRW      VF, VA, #4      ; Draw 4-byte sprite at VF, VA
$F16    $F8F3   UNKNOWN  F8F3            ; Unknown Fxxx instruction
$F18    $7AA0   ADD      VA, #A0         ; Add 160 to VA
$F1A    $71DE   ADD      V1, #DE         ; Add 222 to V1
$F1C    $69B9   LD       V9, #B9         ; Load 185 into V9
$F1E    $77F4   ADD      V7, #F4         ; Add 244 to V7
$F20    $D306   DRW      V3, V0, #6      ; Draw 6-byte sprite at V3, V0
$F22    $9A25   UNKNOWN  $9A25           ; Unknown 9xxx instruction
$F24    $0019   SYS      $019            ; System call to 019
$F26    $B14E   JP       V0, $14E        ; Jump to V0 + 14E
$F28    $3186   SE       V1, #86         ; Skip if V1 == 134
$F2A    $A1D5   LD       I, $1D5         ; Load 1D5 into I
$F2C    $605E   LD       V0, #5E         ; Load 94 into V0
$F2E    $E58C   UNKNOWN  $E58C           ; Unknown Exxx instruction
$F30    $BD81   JP       V0, $D81        ; Jump to V0 + D81
$F32    $796A   ADD      V9, #6A         ; Add 106 to V9
$F34    $FFA9   UNKNOWN  FFA9            ; Unknown Fxxx instruction
$F36    $1D3C   JP       $D3C            ; Jump to D3C
$F38    $FACA   UNKNOWN  FACA            ; Unknown Fxxx instruction
$F3A    $EE5A   UNKNOWN  $EE5A           ; Unknown Exxx instruction
$F3C    $4906   SNE      V9, #06         ; Skip if V9 != 6
$F3E    $AA0F   LD       I, $A0F         ; Load A0F into I
$F40    $DA58   DRW      VA, V5, #8      ; Draw 8-byte sprite at VA, V5
$F42    $4692   SNE      V6, #92         ; Skip if V6 != 146
$F44    $A264   LD       I, $264         ; Load 264 into I
$F46    $1119   JP       $119            ; Jump to 119
$F48    $A580   LD       I, $580         ; Load 580 into I
$F4A    $176E   JP       $76E            ; Jump to 76E
$F4C    $6D7E   LD       VD, #7E         ; Load 126 into VD
$F4E    $0465   SYS      $465            ; System call to 465
$F50    $3AB9   SE       VA, #B9         ; Skip if VA == 185
$F52    $E887   UNKNOWN  $E887           ; Unknown Exxx instruction
$F54    $4BAA   SNE      VB, #AA         ; Skip if VB != 170
$F56    $93BC   UNKNOWN  $93BC           ; Unknown 9xxx instruction
$F58    $7640   ADD      V6, #40         ; Add 64 to V6
$F5A    $C52D   RND      V5, #2D         ; V5 = random & 2D
$F5C    $497C   SNE      V9, #7C         ; Skip if V9 != 124
$F5E    $EB9F   UNKNOWN  $EB9F           ; Unknown Exxx instruction
$F60    $E7FE   UNKNOWN  $E7FE           ; Unknown Exxx instruction
$F62    $BCF3   JP       V0, $CF3        ; Jump to V0 + CF3
$F64    $EDC5   UNKNOWN  $EDC5           ; Unknown Exxx instruction
$F66    $BD9C   JP       V0, $D9C        ; Jump to V0 + D9C
$F68    $30D8   SE       V0, #D8         ; Skip if V0 == 216
$F6A    $C7EC   RND      V7, #EC         ; V7 = random & EC
$F6C    $1362   JP       $362            ; Jump to 362
$F6E    $BB5C   JP       V0, $B5C        ; Jump to V0 + B5C
$F70    $A619   LD       I, $619         ; Load 619 into I
$F72    $6E5D   LD       VE, #5D         ; Load 93 into VE
$F74    $9F39   UNKNOWN  $9F39           ; Unknown 9xxx instruction
$F76    $317B   SE       V1, #7B         ; Skip if V1 == 123
$F78    $3D63   SE       VD, #63         ; Skip if VD == 99
$F7A    $2A1A   CALL     $A1A            ; Call subroutine at A1A
$F7C    $FE9C   UNKNOWN  FE9C            ; Unknown Fxxx instruction
$F7E    $1CFE   JP       $CFE            ; Jump to CFE
$F80    $9B9B   UNKNOWN  $9B9B           ; Unknown 9xxx instruction
$F82    $A4B9   LD       I, $4B9         ; Load 4B9 into I
$F84    $0AC7   SYS      $AC7            ; System call to AC7
$F86    $B7BE   JP       V0, $7BE        ; Jump to V0 + 7BE
$F88    $A379   LD       I, $379         ; Load 379 into I
$F8A    $2177   CALL     $177            ; Call subroutine at 177
$F8C    $0124   SYS      $124            ; System call to 124
$F8E    $5E4E   UNKNOWN  $5E4E           ; Unknown 5xxx instruction
$F90    $4473   SNE      V4, #73         ; Skip if V4 != 115
$F92    $9B60   SNE      VB, V6          ; Skip if VB != V6
$F94    $8BDC   UNKNOWN  8BDC            ; Unknown 8xxx instruction
$F96    $CCCD   RND      VC, #CD         ; VC = random & CD
$F98    $9E0E   UNKNOWN  $9E0E           ; Unknown 9xxx instruction
$F9A    $BCC7   JP       V0, $CC7        ; Jump to V0 + CC7
$F9C    $7BE9   ADD      VB, #E9         ; Add 233 to VB
$F9E    $EA81   UNKNOWN  $EA81           ; Unknown Exxx instruction
$FA0    $930D   UNKNOWN  $930D           ; Unknown 9xxx instruction
$FA2    $B49B   JP       V0, $49B        ; Jump to V0 + 49B
$FA4    $0A98   SYS      $A98            ; System call to A98
$FA6    $B9F0   JP       V0, $9F0        ; Jump to V0 + 9F0
$FA8    $7E4C   ADD      VE, #4C         ; Add 76 to VE
$FAA    $262F   CALL     $62F            ; Call subroutine at 62F
$FAC    $C871   RND      V8, #71         ; V8 = random & 71
$FAE    $D39D   DRW      V3, V9, #D      ; Draw 13-byte sprite at V3, V9
$FB0    $0B14   SYS      $B14            ; System call to B14
$FB2    $6A4D   LD       VA, #4D         ; Load 77 into VA
$FB4    $6562   LD       V5, #62         ; Load 98 into V5
$FB6    $E949   UNKNOWN  $E949           ; Unknown Exxx instruction
$FB8    $87DB   UNKNOWN  87DB            ; Unknown 8xxx instruction
$FBA    $4557   SNE      V5, #57         ; Skip if V5 != 87
$FBC    $B543   JP       V0, $543        ; Jump to V0 + 543
$FBE    $9E55   UNKNOWN  $9E55           ; Unknown 9xxx instruction
$FC0    $8CE7   SUBN     VC, VE          ; VC = VE - VC, VF = !borrow
$FC2    $35FF   SE       V5, #FF         ; Skip if V5 == 255
$FC4    $0AB8   SYS      $AB8            ; System call to AB8
$FC6    $6DF6   LD       VD, #F6         ; Load 246 into VD
$FC8    $D60A   DRW      V6, V0, #A      ; Draw 10-byte sprite at V6, V0
$FCA    $1761   JP       $761            ; Jump to 761
$FCC    $F4D6   UNKNOWN  F4D6            ; Unknown Fxxx instruction
$FCE    $4BCF   SNE      VB, #CF         ; Skip if VB != 207
$FD0    $377E   SE       V7, #7E         ; Skip if V7 == 126
$FD2    $96DA   UNKNOWN  $96DA           ; Unknown 9xxx instruction
$FD4    $AB6A   LD       I, $B6A         ; Load B6A into I
$FD6    $3309   SE       V3, #09         ; Skip if V3 == 9
$FD8    $5DAC   UNKNOWN  $5DAC           ; Unknown 5xxx instruction
$FDA    $03CA   SYS      $3CA            ; System call to 3CA
$FDC    $25BD   CALL     $5BD            ; Call subroutine at 5BD
$FDE    $B082   JP       V0, $082        ; Jump to V0 + 082
$FE0    $2C26   CALL     $C26            ; Call subroutine at C26
$FE2    $F8CA   UNKNOWN  F8CA            ; Unknown Fxxx instruction
$FE4    $ABD4   LD       I, $BD4         ; Load BD4 into I
$FE6    $60C4   LD       V0, #C4         ; Load 196 into V0
$FE8    $714F   ADD      V1, #4F         ; Add 79 to V1
$FEA    $268A   CALL     $68A            ; Call subroutine at 68A
$FEC    $7ECD   ADD      VE, #CD         ; Add 205 to VE
$FEE    $0E3A   SYS      $E3A            ; System call to E3A
$FF0    $6E30   LD       VE, #30         ; Load 48 into VE
$FF2    $F744   UNKNOWN  F744            ; Unknown Fxxx instruction
$FF4    $ECEE   UNKNOWN  $ECEE           ; Unknown Exxx instruction
$FF6    $C651   RND      V6, #51         ; V6 = random & 51
$FF8    $C8F7   RND      V8, #F7         ; V8 = random & F7
$FFA    $CA84   RND      VA, #84         ; VA = random & 84
$FFC    $B0FA   JP       V0, $0FA        ; Jump to V0 + 0FA
$FFE    $46E5   SNE      V6, #E5         ; Skip if V6 != 229

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 473 (26.4%)
  LD      : 254 (14.2%)
  JP      : 242 (13.5%)
  SNE     : 131 ( 7.3%)
  ADD     : 116 ( 6.5%)
  DRW     : 113 ( 6.3%)
  SYS     : 109 ( 6.1%)
  SE      : 109 ( 6.1%)
  RND     :  97 ( 5.4%)
  CALL    :  95 ( 5.3%)
  SUB     :   9 ( 0.5%)
  OR      :   9 ( 0.5%)
  SHL     :   8 ( 0.4%)
  SHR     :   8 ( 0.4%)
  AND     :   7 ( 0.4%)
  XOR     :   7 ( 0.4%)
  SUBN    :   5 ( 0.3%)

Memory Operations: 370 (20.6%)
Arithmetic Operations: 153 (8.5%)
