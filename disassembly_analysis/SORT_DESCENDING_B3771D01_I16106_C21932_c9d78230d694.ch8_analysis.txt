
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B3771D01_I16106_C21932_c9d78230d694.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 3771
Instance: 16106
Direction: descending
Final Array: [248, 248, 248, 248, 248, 248, 177, 169]
Operations: R:0 W:6 C:453 S:443

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 93
Sort Array References:
  $326: LD I, $27A ; Load 27A into I
  $33E: LD I, $061 ; Load 061 into I
  $342: LD I, $B57 ; Load B57 into I
  $34C: LD I, $FD2 ; Load FD2 into I
  $3A8: LD I, $C20 ; Load C20 into I
  $3AC: LD I, $EBB ; Load EBB into I
  $414: LD I, $7D3 ; Load 7D3 into I
  $434: LD I, $FEC ; Load FEC into I
  $43C: LD I, $39B ; Load 39B into I
  $450: LD I, $690 ; Load 690 into I
  $452: LD I, $4F6 ; Load 4F6 into I
  $470: LD I, $DAF ; Load DAF into I
  $482: LD I, $C4E ; Load C4E into I
  $492: LD I, $769 ; Load 769 into I
  $4C2: LD I, $523 ; Load 523 into I
  $4D6: LD [I], V0 ; Store V0-V0 at I
  $4F8: LD I, $6AA ; Load 6AA into I
  $516: LD I, $F93 ; Load F93 into I
  $53A: LD I, $9DB ; Load 9DB into I
  $55E: LD I, $0DD ; Load 0DD into I
  $594: LD I, $E72 ; Load E72 into I
  $5B6: LD I, $F9F ; Load F9F into I
  $5C8: LD I, $833 ; Load 833 into I
  $5DE: LD I, $096 ; Load 096 into I
  $5F8: LD I, $40D ; Load 40D into I
  $61E: LD I, $E8C ; Load E8C into I
  $636: LD I, $0D4 ; Load 0D4 into I
  $65A: LD I, $0F6 ; Load 0F6 into I
  $6FA: LD I, $9ED ; Load 9ED into I
  $70E: LD I, $94D ; Load 94D into I
  $71C: LD I, $AE1 ; Load AE1 into I
  $71E: LD I, $E89 ; Load E89 into I
  $724: LD I, $B8E ; Load B8E into I
  $72C: LD I, $E4B ; Load E4B into I
  $734: LD I, $99E ; Load 99E into I
  $77E: LD I, $CC8 ; Load CC8 into I
  $782: LD I, $176 ; Load 176 into I
  $7AA: LD I, $061 ; Load 061 into I
  $7D8: LD I, $416 ; Load 416 into I
  $81A: LD I, $E54 ; Load E54 into I
  $826: LD I, $983 ; Load 983 into I
  $87C: LD I, $74D ; Load 74D into I
  $922: LD I, $ED3 ; Load ED3 into I
  $94A: LD I, $D35 ; Load D35 into I
  $95C: LD I, $2B6 ; Load 2B6 into I
  $966: LD I, $153 ; Load 153 into I
  $974: LD I, $D23 ; Load D23 into I
  $98E: LD I, $1FA ; Load 1FA into I
  $9A8: LD I, $E2C ; Load E2C into I
  $9B8: LD I, $0C0 ; Load 0C0 into I
  $9BC: LD I, $854 ; Load 854 into I
  $9CE: LD I, $2C9 ; Load 2C9 into I
  $9F0: LD I, $743 ; Load 743 into I
  $9F8: LD I, $9BB ; Load 9BB into I
  $A02: LD I, $42C ; Load 42C into I
  $A36: LD I, $5FC ; Load 5FC into I
  $A48: LD I, $380 ; Load 380 into I
  $A64: LD I, $EBD ; Load EBD into I
  $A98: LD I, $683 ; Load 683 into I
  $ACE: LD I, $1F5 ; Load 1F5 into I
  $B42: LD I, $4DD ; Load 4DD into I
  $B44: LD I, $15B ; Load 15B into I
  $B7A: LD I, $5F9 ; Load 5F9 into I
  $B92: LD I, $BBB ; Load BBB into I
  $BA4: LD I, $509 ; Load 509 into I
  $BC6: LD I, $2AD ; Load 2AD into I
  $BC8: LD I, $099 ; Load 099 into I
  $BD0: LD I, $EB4 ; Load EB4 into I
  $BF0: LD I, $316 ; Load 316 into I
  $C30: LD I, $DF7 ; Load DF7 into I
  $C5A: LD I, $C89 ; Load C89 into I
  $C82: LD I, $635 ; Load 635 into I
  $CB8: LD I, $9E9 ; Load 9E9 into I
  $CCC: LD I, $3C8 ; Load 3C8 into I
  $D0A: LD I, $40C ; Load 40C into I
  $D34: LD I, $981 ; Load 981 into I
  $D64: LD I, $409 ; Load 409 into I
  $D7A: LD I, $95E ; Load 95E into I
  $DDA: LD I, $D3E ; Load D3E into I
  $DE4: LD I, $5AD ; Load 5AD into I
  $E38: LD I, $A3A ; Load A3A into I
  $E3C: LD I, $AF7 ; Load AF7 into I
  $E6A: LD I, $C58 ; Load C58 into I
  $E70: LD I, $194 ; Load 194 into I
  $E7A: LD I, $3B9 ; Load 3B9 into I
  $EAE: LD I, $82D ; Load 82D into I
  $EC2: LD I, $6FB ; Load 6FB into I
  $F3E: LD I, $B89 ; Load B89 into I
  $F5A: LD I, $B09 ; Load B09 into I
  $F62: LD I, $8D7 ; Load 8D7 into I
  $F96: LD I, $242 ; Load 242 into I
  $FA2: LD I, $46B ; Load 46B into I
  $FD0: LD I, $D87 ; Load D87 into I

CONTROL FLOW ANALYSIS:
Jumps: 214
Calls: 92
Branches: 218
Loops: 129
Loop Structures:
  $20A -> $024 (backward jump)
  $218 -> $02E (backward jump)
  $21A -> $162 (backward jump)
  $306 -> $1A9 (backward jump)
  $316 -> $023 (backward jump)
  $3CA -> $291 (backward jump)
  $3D6 -> $27E (backward jump)
  $46C -> $09E (backward jump)
  $4DA -> $466 (backward jump)
  $518 -> $15D (backward jump)
  $52C -> $32A (backward jump)
  $542 -> $1CB (backward jump)
  $552 -> $3F3 (backward jump)
  $564 -> $3D4 (backward jump)
  $5D0 -> $51F (backward jump)
  $5EC -> $18A (backward jump)
  $5FA -> $2CC (backward jump)
  $680 -> $4DC (backward jump)
  $68C -> $266 (backward jump)
  $692 -> $4E3 (backward jump)
  $696 -> $390 (backward jump)
  $698 -> $049 (backward jump)
  $69C -> $2B1 (backward jump)
  $6A4 -> $643 (backward jump)
  $6BE -> $179 (backward jump)
  $6CC -> $0EB (backward jump)
  $6FE -> $587 (backward jump)
  $702 -> $071 (backward jump)
  $760 -> $34F (backward jump)
  $774 -> $3BE (backward jump)
  $804 -> $496 (backward jump)
  $81C -> $265 (backward jump)
  $824 -> $158 (backward jump)
  $83E -> $465 (backward jump)
  $84C -> $37A (backward jump)
  $86E -> $50D (backward jump)
  $87E -> $2ED (backward jump)
  $882 -> $809 (backward jump)
  $890 -> $7C0 (backward jump)
  $89A -> $21F (backward jump)
  $8AE -> $526 (backward jump)
  $8B2 -> $78A (backward jump)
  $8D4 -> $1A4 (backward jump)
  $902 -> $2E7 (backward jump)
  $908 -> $3A6 (backward jump)
  $918 -> $01B (backward jump)
  $924 -> $4F0 (backward jump)
  $928 -> $567 (backward jump)
  $92A -> $338 (backward jump)
  $92E -> $4C9 (backward jump)
  $932 -> $4DE (backward jump)
  $946 -> $824 (backward jump)
  $964 -> $893 (backward jump)
  $976 -> $03B (backward jump)
  $97E -> $067 (backward jump)
  $990 -> $005 (backward jump)
  $9C2 -> $771 (backward jump)
  $9C4 -> $13B (backward jump)
  $9C8 -> $781 (backward jump)
  $9D6 -> $16C (backward jump)
  $9DA -> $298 (backward jump)
  $9F2 -> $6A0 (backward jump)
  $A00 -> $497 (backward jump)
  $A0E -> $1CC (backward jump)
  $A1A -> $3F6 (backward jump)
  $A20 -> $580 (backward jump)
  $A2A -> $4DE (backward jump)
  $A66 -> $355 (backward jump)
  $AA6 -> $405 (backward jump)
  $AD4 -> $849 (backward jump)
  $AD8 -> $759 (backward jump)
  $B46 -> $55C (backward jump)
  $B4A -> $2B4 (backward jump)
  $B60 -> $A5A (backward jump)
  $B6E -> $1F2 (backward jump)
  $B72 -> $038 (backward jump)
  $B80 -> $4DD (backward jump)
  $B94 -> $58D (backward jump)
  $B96 -> $42F (backward jump)
  $BEE -> $371 (backward jump)
  $BFA -> $642 (backward jump)
  $C02 -> $05F (backward jump)
  $C08 -> $663 (backward jump)
  $C3A -> $A80 (backward jump)
  $C3C -> $3C3 (backward jump)
  $C40 -> $42A (backward jump)
  $C62 -> $B17 (backward jump)
  $CAC -> $0ED (backward jump)
  $CD0 -> $93D (backward jump)
  $CE0 -> $A21 (backward jump)
  $CFA -> $605 (backward jump)
  $D1C -> $B5B (backward jump)
  $D1E -> $46D (backward jump)
  $D6C -> $423 (backward jump)
  $D84 -> $0D4 (backward jump)
  $D9E -> $D08 (backward jump)
  $DC0 -> $65D (backward jump)
  $DFC -> $AE6 (backward jump)
  $DFE -> $90A (backward jump)
  $E0A -> $C46 (backward jump)
  $E1E -> $484 (backward jump)
  $E36 -> $BD5 (backward jump)
  $E80 -> $2AF (backward jump)
  $E88 -> $0E3 (backward jump)
  $E8A -> $D89 (backward jump)
  $EA4 -> $8A9 (backward jump)
  $EAA -> $707 (backward jump)
  $EB8 -> $091 (backward jump)
  $EBA -> $593 (backward jump)
  $EC0 -> $392 (backward jump)
  $EE0 -> $5DC (backward jump)
  $F06 -> $C38 (backward jump)
  $F22 -> $40C (backward jump)
  $F2A -> $186 (backward jump)
  $F30 -> $A5F (backward jump)
  $F44 -> $748 (backward jump)
  $F4E -> $66F (backward jump)
  $F66 -> $3B1 (backward jump)
  $F9C -> $C88 (backward jump)
  $FA0 -> $3D7 (backward jump)
  $FA4 -> $1A1 (backward jump)
  $FA8 -> $D1B (backward jump)
  $FBC -> $61A (backward jump)
  $FC0 -> $E94 (backward jump)
  $FC6 -> $C92 (backward jump)
  $FCC -> $8F0 (backward jump)
  $FD2 -> $A3E (backward jump)
  $FDE -> $10D (backward jump)
  $FF0 -> $2ED (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $BF98   JP       V0, $F98        ; Jump to V0 + F98
$202    $9510   SNE      V5, V1          ; Skip if V5 != V1
$204    $3704   SE       V7, #04         ; Skip if V7 == 4
$206    $6402   LD       V4, #02         ; Load 2 into V4
$208    $3994   SE       V9, #94         ; Skip if V9 == 148
$20A    $1024   JP       $024            ; Jump to 024
$20C    $5662   UNKNOWN  $5662           ; Unknown 5xxx instruction
$20E    $E8AA   UNKNOWN  $E8AA           ; Unknown Exxx instruction
$210    $8ACD   UNKNOWN  8ACD            ; Unknown 8xxx instruction
$212    $4AFC   SNE      VA, #FC         ; Skip if VA != 252
$214    $D04D   DRW      V0, V4, #D      ; Draw 13-byte sprite at V0, V4
$216    $B5CF   JP       V0, $5CF        ; Jump to V0 + 5CF
$218    $B02E   JP       V0, $02E        ; Jump to V0 + 02E
$21A    $1162   JP       $162            ; Jump to 162
$21C    $7B53   ADD      VB, #53         ; Add 83 to VB
$21E    $FC8B   UNKNOWN  FC8B            ; Unknown Fxxx instruction
$220    $CD76   RND      VD, #76         ; VD = random & 76
$222    $BFF9   JP       V0, $FF9        ; Jump to V0 + FF9
$224    $F20A   LD       V2, K           ; Wait for key press, store in V2
$226    $4A39   SNE      VA, #39         ; Skip if VA != 57
$228    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$22A    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$22C    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$22E    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$230    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$232    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$234    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$236    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$238    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$23A    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$23C    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$23E    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$240    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$242    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$244    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$246    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$248    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$24A    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$24C    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$24E    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$250    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$252    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$254    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$256    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$258    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$25A    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$25C    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$25E    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$260    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$262    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$264    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$266    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$268    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$26A    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$26C    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$26E    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$270    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$272    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$274    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$276    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$278    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$27A    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$27C    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$27E    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$280    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$282    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$284    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$286    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$288    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$28A    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$28C    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$28E    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$290    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$292    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$294    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$296    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$298    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$29A    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$29C    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$29E    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2A0    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2A2    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2A4    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2A6    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2A8    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2AA    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2AC    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2AE    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2B0    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2B2    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2B4    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2B6    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2B8    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2BA    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2BC    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2BE    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2C0    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2C2    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2C4    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2C6    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2C8    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2CA    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2CC    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2CE    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2D0    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2D2    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2D4    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2D6    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2D8    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2DA    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2DC    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2DE    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2E0    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2E2    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2E4    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2E6    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2E8    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2EA    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2EC    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2EE    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2F0    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2F2    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2F4    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2F6    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2F8    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2FA    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2FC    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2FE    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$300    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$302    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$304    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$306    $B1A9   JP       V0, $1A9        ; Jump to V0 + 1A9
$308    $B990   JP       V0, $990        ; Jump to V0 + 990
$30A    $E359   UNKNOWN  $E359           ; Unknown Exxx instruction
$30C    $0445   SYS      $445            ; System call to 445
$30E    $60E5   LD       V0, #E5         ; Load 229 into V0
$310    $1ADE   JP       $ADE            ; Jump to ADE
$312    $9248   UNKNOWN  $9248           ; Unknown 9xxx instruction
$314    $9417   UNKNOWN  $9417           ; Unknown 9xxx instruction
$316    $1023   JP       $023            ; Jump to 023
$318    $E103   UNKNOWN  $E103           ; Unknown Exxx instruction
$31A    $99D2   UNKNOWN  $99D2           ; Unknown 9xxx instruction
$31C    $BAA0   JP       V0, $AA0        ; Jump to V0 + AA0
$31E    $5D5A   UNKNOWN  $5D5A           ; Unknown 5xxx instruction
$320    $D3CF   DRW      V3, VC, #F      ; Draw 15-byte sprite at V3, VC
$322    $9C0A   UNKNOWN  $9C0A           ; Unknown 9xxx instruction
$324    $32C1   SE       V2, #C1         ; Skip if V2 == 193
$326    $A27A   LD       I, $27A         ; Load 27A into I
$328    $F23F   UNKNOWN  F23F            ; Unknown Fxxx instruction
$32A    $8761   OR       V7, V6          ; V7 |= V6
$32C    $E976   UNKNOWN  $E976           ; Unknown Exxx instruction
$32E    $7926   ADD      V9, #26         ; Add 38 to V9
$330    $BB06   JP       V0, $B06        ; Jump to V0 + B06
$332    $5B11   UNKNOWN  $5B11           ; Unknown 5xxx instruction
$334    $1768   JP       $768            ; Jump to 768
$336    $EA18   UNKNOWN  $EA18           ; Unknown Exxx instruction
$338    $D828   DRW      V8, V2, #8      ; Draw 8-byte sprite at V8, V2
$33A    $B70C   JP       V0, $70C        ; Jump to V0 + 70C
$33C    $97BB   UNKNOWN  $97BB           ; Unknown 9xxx instruction
$33E    $A061   LD       I, $061         ; Load 061 into I
$340    $7FAF   ADD      VF, #AF         ; Add 175 to VF
$342    $AB57   LD       I, $B57         ; Load B57 into I
$344    $9961   UNKNOWN  $9961           ; Unknown 9xxx instruction
$346    $64E3   LD       V4, #E3         ; Load 227 into V4
$348    $D48E   DRW      V4, V8, #E      ; Draw 14-byte sprite at V4, V8
$34A    $391B   SE       V9, #1B         ; Skip if V9 == 27
$34C    $AFD2   LD       I, $FD2         ; Load FD2 into I
$34E    $7163   ADD      V1, #63         ; Add 99 to V1
$350    $EB16   UNKNOWN  $EB16           ; Unknown Exxx instruction
$352    $C28A   RND      V2, #8A         ; V2 = random & 8A
$354    $2618   CALL     $618            ; Call subroutine at 618
$356    $BF06   JP       V0, $F06        ; Jump to V0 + F06
$358    $6EBC   LD       VE, #BC         ; Load 188 into VE
$35A    $FDA5   UNKNOWN  FDA5            ; Unknown Fxxx instruction
$35C    $CE8E   RND      VE, #8E         ; VE = random & 8E
$35E    $7A01   ADD      VA, #01         ; Add 1 to VA
$360    $C156   RND      V1, #56         ; V1 = random & 56
$362    $B888   JP       V0, $888        ; Jump to V0 + 888
$364    $F1CD   UNKNOWN  F1CD            ; Unknown Fxxx instruction
$366    $1AFA   JP       $AFA            ; Jump to AFA
$368    $6B42   LD       VB, #42         ; Load 66 into VB
$36A    $6038   LD       V0, #38         ; Load 56 into V0
$36C    $0C28   SYS      $C28            ; System call to C28
$36E    $7D0D   ADD      VD, #0D         ; Add 13 to VD
$370    $C379   RND      V3, #79         ; V3 = random & 79
$372    $71F7   ADD      V1, #F7         ; Add 247 to V1
$374    $0119   SYS      $119            ; System call to 119
$376    $3961   SE       V9, #61         ; Skip if V9 == 97
$378    $2355   CALL     $355            ; Call subroutine at 355
$37A    $8CB3   XOR      VC, VB          ; VC ^= VB
$37C    $7BA8   ADD      VB, #A8         ; Add 168 to VB
$37E    $5137   UNKNOWN  $5137           ; Unknown 5xxx instruction
$380    $46AD   SNE      V6, #AD         ; Skip if V6 != 173
$382    $B470   JP       V0, $470        ; Jump to V0 + 470
$384    $75B8   ADD      V5, #B8         ; Add 184 to V5
$386    $F713   UNKNOWN  F713            ; Unknown Fxxx instruction
$388    $17DB   JP       $7DB            ; Jump to 7DB
$38A    $D002   DRW      V0, V0, #2      ; Draw 2-byte sprite at V0, V0
$38C    $0A54   SYS      $A54            ; System call to A54
$38E    $4B9A   SNE      VB, #9A         ; Skip if VB != 154
$390    $ED43   UNKNOWN  $ED43           ; Unknown Exxx instruction
$392    $D57B   DRW      V5, V7, #B      ; Draw 11-byte sprite at V5, V7
$394    $64AD   LD       V4, #AD         ; Load 173 into V4
$396    $37DC   SE       V7, #DC         ; Skip if V7 == 220
$398    $8471   OR       V4, V7          ; V4 |= V7
$39A    $89CE   SHL      V9              ; V9 <<= 1, VF = MSB
$39C    $33C5   SE       V3, #C5         ; Skip if V3 == 197
$39E    $3408   SE       V4, #08         ; Skip if V4 == 8
$3A0    $F2BB   UNKNOWN  F2BB            ; Unknown Fxxx instruction
$3A2    $BEC8   JP       V0, $EC8        ; Jump to V0 + EC8
$3A4    $9452   UNKNOWN  $9452           ; Unknown 9xxx instruction
$3A6    $880E   SHL      V8              ; V8 <<= 1, VF = MSB
$3A8    $AC20   LD       I, $C20         ; Load C20 into I
$3AA    $C74B   RND      V7, #4B         ; V7 = random & 4B
$3AC    $AEBB   LD       I, $EBB         ; Load EBB into I
$3AE    $2A8E   CALL     $A8E            ; Call subroutine at A8E
$3B0    $8D5F   UNKNOWN  8D5F            ; Unknown 8xxx instruction
$3B2    $4C60   SNE      VC, #60         ; Skip if VC != 96
$3B4    $F718   LD       ST, V7          ; Sound timer = V7
$3B6    $D134   DRW      V1, V3, #4      ; Draw 4-byte sprite at V1, V3
$3B8    $3EE3   SE       VE, #E3         ; Skip if VE == 227
$3BA    $FFA7   UNKNOWN  FFA7            ; Unknown Fxxx instruction
$3BC    $BA36   JP       V0, $A36        ; Jump to V0 + A36
$3BE    $28B0   CALL     $8B0            ; Call subroutine at 8B0
$3C0    $E637   UNKNOWN  $E637           ; Unknown Exxx instruction
$3C2    $ECAD   UNKNOWN  $ECAD           ; Unknown Exxx instruction
$3C4    $E0CF   UNKNOWN  $E0CF           ; Unknown Exxx instruction
$3C6    $8C14   ADD      VC, V1          ; VC += V1, VF = carry
$3C8    $DA05   DRW      VA, V0, #5      ; Draw 5-byte sprite at VA, V0
$3CA    $1291   JP       $291            ; Jump to 291
$3CC    $4724   SNE      V7, #24         ; Skip if V7 != 36
$3CE    $D355   DRW      V3, V5, #5      ; Draw 5-byte sprite at V3, V5
$3D0    $616E   LD       V1, #6E         ; Load 110 into V1
$3D2    $CEB3   RND      VE, #B3         ; VE = random & B3
$3D4    $DE85   DRW      VE, V8, #5      ; Draw 5-byte sprite at VE, V8
$3D6    $B27E   JP       V0, $27E        ; Jump to V0 + 27E
$3D8    $4E5A   SNE      VE, #5A         ; Skip if VE != 90
$3DA    $8710   LD       V7, V1          ; V7 = V1
$3DC    $4FAA   SNE      VF, #AA         ; Skip if VF != 170
$3DE    $1C05   JP       $C05            ; Jump to C05
$3E0    $6345   LD       V3, #45         ; Load 69 into V3
$3E2    $23E2   CALL     $3E2            ; Call subroutine at 3E2
$3E4    $66AD   LD       V6, #AD         ; Load 173 into V6
$3E6    $1ECA   JP       $ECA            ; Jump to ECA
$3E8    $07E1   SYS      $7E1            ; System call to 7E1
$3EA    $93DE   UNKNOWN  $93DE           ; Unknown 9xxx instruction
$3EC    $B9E8   JP       V0, $9E8        ; Jump to V0 + 9E8
$3EE    $70E4   ADD      V0, #E4         ; Add 228 to V0
$3F0    $8353   XOR      V3, V5          ; V3 ^= V5
$3F2    $2D99   CALL     $D99            ; Call subroutine at D99
$3F4    $695A   LD       V9, #5A         ; Load 90 into V9
$3F6    $18ED   JP       $8ED            ; Jump to 8ED
$3F8    $1EC4   JP       $EC4            ; Jump to EC4
$3FA    $85BF   UNKNOWN  85BF            ; Unknown 8xxx instruction
$3FC    $C1D8   RND      V1, #D8         ; V1 = random & D8
$3FE    $0C5F   SYS      $C5F            ; System call to C5F
$400    $EBCF   UNKNOWN  $EBCF           ; Unknown Exxx instruction
$402    $45BA   SNE      V5, #BA         ; Skip if V5 != 186
$404    $8FC1   OR       VF, VC          ; VF |= VC
$406    $E424   UNKNOWN  $E424           ; Unknown Exxx instruction
$408    $2440   CALL     $440            ; Call subroutine at 440
$40A    $C87B   RND      V8, #7B         ; V8 = random & 7B
$40C    $C8FF   RND      V8, #FF         ; V8 = random & FF
$40E    $BCBB   JP       V0, $CBB        ; Jump to V0 + CBB
$410    $7187   ADD      V1, #87         ; Add 135 to V1
$412    $FDB3   UNKNOWN  FDB3            ; Unknown Fxxx instruction
$414    $A7D3   LD       I, $7D3         ; Load 7D3 into I
$416    $1839   JP       $839            ; Jump to 839
$418    $FD0E   UNKNOWN  FD0E            ; Unknown Fxxx instruction
$41A    $F84F   UNKNOWN  F84F            ; Unknown Fxxx instruction
$41C    $EC15   UNKNOWN  $EC15           ; Unknown Exxx instruction
$41E    $8127   SUBN     V1, V2          ; V1 = V2 - V1, VF = !borrow
$420    $5466   UNKNOWN  $5466           ; Unknown 5xxx instruction
$422    $42C4   SNE      V2, #C4         ; Skip if V2 != 196
$424    $E096   UNKNOWN  $E096           ; Unknown Exxx instruction
$426    $BEFF   JP       V0, $EFF        ; Jump to V0 + EFF
$428    $6B51   LD       VB, #51         ; Load 81 into VB
$42A    $8171   OR       V1, V7          ; V1 |= V7
$42C    $BFCA   JP       V0, $FCA        ; Jump to V0 + FCA
$42E    $4B5D   SNE      VB, #5D         ; Skip if VB != 93
$430    $46AD   SNE      V6, #AD         ; Skip if V6 != 173
$432    $37E4   SE       V7, #E4         ; Skip if V7 == 228
$434    $AFEC   LD       I, $FEC         ; Load FEC into I
$436    $1949   JP       $949            ; Jump to 949
$438    $C3ED   RND      V3, #ED         ; V3 = random & ED
$43A    $6526   LD       V5, #26         ; Load 38 into V5
$43C    $A39B   LD       I, $39B         ; Load 39B into I
$43E    $9E7E   UNKNOWN  $9E7E           ; Unknown 9xxx instruction
$440    $76CC   ADD      V6, #CC         ; Add 204 to V6
$442    $90D0   SNE      V0, VD          ; Skip if V0 != VD
$444    $9C96   UNKNOWN  $9C96           ; Unknown 9xxx instruction
$446    $C1CB   RND      V1, #CB         ; V1 = random & CB
$448    $7782   ADD      V7, #82         ; Add 130 to V7
$44A    $E008   UNKNOWN  $E008           ; Unknown Exxx instruction
$44C    $3401   SE       V4, #01         ; Skip if V4 == 1
$44E    $4F11   SNE      VF, #11         ; Skip if VF != 17
$450    $A690   LD       I, $690         ; Load 690 into I
$452    $A4F6   LD       I, $4F6         ; Load 4F6 into I
$454    $BB39   JP       V0, $B39        ; Jump to V0 + B39
$456    $4A8B   SNE      VA, #8B         ; Skip if VA != 139
$458    $CA88   RND      VA, #88         ; VA = random & 88
$45A    $3204   SE       V2, #04         ; Skip if V2 == 4
$45C    $449B   SNE      V4, #9B         ; Skip if V4 != 155
$45E    $2520   CALL     $520            ; Call subroutine at 520
$460    $359D   SE       V5, #9D         ; Skip if V5 == 157
$462    $FCD9   UNKNOWN  FCD9            ; Unknown Fxxx instruction
$464    $0187   SYS      $187            ; System call to 187
$466    $4DE3   SNE      VD, #E3         ; Skip if VD != 227
$468    $90CF   UNKNOWN  $90CF           ; Unknown 9xxx instruction
$46A    $0B7E   SYS      $B7E            ; System call to B7E
$46C    $109E   JP       $09E            ; Jump to 09E
$46E    $ED8C   UNKNOWN  $ED8C           ; Unknown Exxx instruction
$470    $ADAF   LD       I, $DAF         ; Load DAF into I
$472    $DFFE   DRW      VF, VF, #E      ; Draw 14-byte sprite at VF, VF
$474    $47D1   SNE      V7, #D1         ; Skip if V7 != 209
$476    $2255   CALL     $255            ; Call subroutine at 255
$478    $72FB   ADD      V2, #FB         ; Add 251 to V2
$47A    $EE16   UNKNOWN  $EE16           ; Unknown Exxx instruction
$47C    $0D92   SYS      $D92            ; System call to D92
$47E    $58D1   UNKNOWN  $58D1           ; Unknown 5xxx instruction
$480    $B85F   JP       V0, $85F        ; Jump to V0 + 85F
$482    $AC4E   LD       I, $C4E         ; Load C4E into I
$484    $7AC0   ADD      VA, #C0         ; Add 192 to VA
$486    $7CCE   ADD      VC, #CE         ; Add 206 to VC
$488    $21BB   CALL     $1BB            ; Call subroutine at 1BB
$48A    $F5ED   UNKNOWN  F5ED            ; Unknown Fxxx instruction
$48C    $3699   SE       V6, #99         ; Skip if V6 == 153
$48E    $E036   UNKNOWN  $E036           ; Unknown Exxx instruction
$490    $4968   SNE      V9, #68         ; Skip if V9 != 104
$492    $A769   LD       I, $769         ; Load 769 into I
$494    $DCBA   DRW      VC, VB, #A      ; Draw 10-byte sprite at VC, VB
$496    $279E   CALL     $79E            ; Call subroutine at 79E
$498    $6BE4   LD       VB, #E4         ; Load 228 into VB
$49A    $813A   UNKNOWN  813A            ; Unknown 8xxx instruction
$49C    $EA52   UNKNOWN  $EA52           ; Unknown Exxx instruction
$49E    $963C   UNKNOWN  $963C           ; Unknown 9xxx instruction
$4A0    $F3C3   UNKNOWN  F3C3            ; Unknown Fxxx instruction
$4A2    $BA70   JP       V0, $A70        ; Jump to V0 + A70
$4A4    $CFC2   RND      VF, #C2         ; VF = random & C2
$4A6    $944B   UNKNOWN  $944B           ; Unknown 9xxx instruction
$4A8    $640F   LD       V4, #0F         ; Load 15 into V4
$4AA    $9BED   UNKNOWN  $9BED           ; Unknown 9xxx instruction
$4AC    $1ACD   JP       $ACD            ; Jump to ACD
$4AE    $66E4   LD       V6, #E4         ; Load 228 into V6
$4B0    $9585   UNKNOWN  $9585           ; Unknown 9xxx instruction
$4B2    $5C83   UNKNOWN  $5C83           ; Unknown 5xxx instruction
$4B4    $0B56   SYS      $B56            ; System call to B56
$4B6    $549C   UNKNOWN  $549C           ; Unknown 5xxx instruction
$4B8    $C271   RND      V2, #71         ; V2 = random & 71
$4BA    $7029   ADD      V0, #29         ; Add 41 to V0
$4BC    $E141   UNKNOWN  $E141           ; Unknown Exxx instruction
$4BE    $7C45   ADD      VC, #45         ; Add 69 to VC
$4C0    $4E5F   SNE      VE, #5F         ; Skip if VE != 95
$4C2    $A523   LD       I, $523         ; Load 523 into I
$4C4    $F68B   UNKNOWN  F68B            ; Unknown Fxxx instruction
$4C6    $F834   UNKNOWN  F834            ; Unknown Fxxx instruction
$4C8    $3DC6   SE       VD, #C6         ; Skip if VD == 198
$4CA    $79F8   ADD      V9, #F8         ; Add 248 to V9
$4CC    $0B56   SYS      $B56            ; System call to B56
$4CE    $323F   SE       V2, #3F         ; Skip if V2 == 63
$4D0    $6977   LD       V9, #77         ; Load 119 into V9
$4D2    $F54A   UNKNOWN  F54A            ; Unknown Fxxx instruction
$4D4    $96C1   UNKNOWN  $96C1           ; Unknown 9xxx instruction
$4D6    $F055   LD       [I], V0         ; Store V0-V0 at I
$4D8    $9F1F   UNKNOWN  $9F1F           ; Unknown 9xxx instruction
$4DA    $1466   JP       $466            ; Jump to 466
$4DC    $7507   ADD      V5, #07         ; Add 7 to V5
$4DE    $0AEB   SYS      $AEB            ; System call to AEB
$4E0    $C960   RND      V9, #60         ; V9 = random & 60
$4E2    $2858   CALL     $858            ; Call subroutine at 858
$4E4    $49B6   SNE      V9, #B6         ; Skip if V9 != 182
$4E6    $E7F0   UNKNOWN  $E7F0           ; Unknown Exxx instruction
$4E8    $4242   SNE      V2, #42         ; Skip if V2 != 66
$4EA    $51E7   UNKNOWN  $51E7           ; Unknown 5xxx instruction
$4EC    $3F93   SE       VF, #93         ; Skip if VF == 147
$4EE    $9233   UNKNOWN  $9233           ; Unknown 9xxx instruction
$4F0    $2D4C   CALL     $D4C            ; Call subroutine at D4C
$4F2    $703F   ADD      V0, #3F         ; Add 63 to V0
$4F4    $D44C   DRW      V4, V4, #C      ; Draw 12-byte sprite at V4, V4
$4F6    $24B3   CALL     $4B3            ; Call subroutine at 4B3
$4F8    $A6AA   LD       I, $6AA         ; Load 6AA into I
$4FA    $E073   UNKNOWN  $E073           ; Unknown Exxx instruction
$4FC    $F39D   UNKNOWN  F39D            ; Unknown Fxxx instruction
$4FE    $5178   UNKNOWN  $5178           ; Unknown 5xxx instruction
$500    $3BB7   SE       VB, #B7         ; Skip if VB == 183
$502    $40B5   SNE      V0, #B5         ; Skip if V0 != 181
$504    $D685   DRW      V6, V8, #5      ; Draw 5-byte sprite at V6, V8
$506    $2F45   CALL     $F45            ; Call subroutine at F45
$508    $5904   UNKNOWN  $5904           ; Unknown 5xxx instruction
$50A    $C716   RND      V7, #16         ; V7 = random & 16
$50C    $6CD8   LD       VC, #D8         ; Load 216 into VC
$50E    $5D90   SE       VD, V9          ; Skip if VD == V9
$510    $319B   SE       V1, #9B         ; Skip if V1 == 155
$512    $55C5   UNKNOWN  $55C5           ; Unknown 5xxx instruction
$514    $E187   UNKNOWN  $E187           ; Unknown Exxx instruction
$516    $AF93   LD       I, $F93         ; Load F93 into I
$518    $115D   JP       $15D            ; Jump to 15D
$51A    $0403   SYS      $403            ; System call to 403
$51C    $30C4   SE       V0, #C4         ; Skip if V0 == 196
$51E    $1B18   JP       $B18            ; Jump to B18
$520    $9568   UNKNOWN  $9568           ; Unknown 9xxx instruction
$522    $40EC   SNE      V0, #EC         ; Skip if V0 != 236
$524    $17DF   JP       $7DF            ; Jump to 7DF
$526    $E551   UNKNOWN  $E551           ; Unknown Exxx instruction
$528    $06CE   SYS      $6CE            ; System call to 6CE
$52A    $0DBE   SYS      $DBE            ; System call to DBE
$52C    $132A   JP       $32A            ; Jump to 32A
$52E    $EE01   UNKNOWN  $EE01           ; Unknown Exxx instruction
$530    $FA73   UNKNOWN  FA73            ; Unknown Fxxx instruction
$532    $866A   UNKNOWN  866A            ; Unknown 8xxx instruction
$534    $613A   LD       V1, #3A         ; Load 58 into V1
$536    $2154   CALL     $154            ; Call subroutine at 154
$538    $153F   JP       $53F            ; Jump to 53F
$53A    $A9DB   LD       I, $9DB         ; Load 9DB into I
$53C    $96E8   UNKNOWN  $96E8           ; Unknown 9xxx instruction
$53E    $E17C   UNKNOWN  $E17C           ; Unknown Exxx instruction
$540    $DCFA   DRW      VC, VF, #A      ; Draw 10-byte sprite at VC, VF
$542    $11CB   JP       $1CB            ; Jump to 1CB
$544    $4F5A   SNE      VF, #5A         ; Skip if VF != 90
$546    $2436   CALL     $436            ; Call subroutine at 436
$548    $E1A9   UNKNOWN  $E1A9           ; Unknown Exxx instruction
$54A    $9324   UNKNOWN  $9324           ; Unknown 9xxx instruction
$54C    $5A75   UNKNOWN  $5A75           ; Unknown 5xxx instruction
$54E    $65BE   LD       V5, #BE         ; Load 190 into V5
$550    $D5C2   DRW      V5, VC, #2      ; Draw 2-byte sprite at V5, VC
$552    $13F3   JP       $3F3            ; Jump to 3F3
$554    $1869   JP       $869            ; Jump to 869
$556    $536B   UNKNOWN  $536B           ; Unknown 5xxx instruction
$558    $D310   DRW      V3, V1, #0      ; Draw 0-byte sprite at V3, V1
$55A    $6B99   LD       VB, #99         ; Load 153 into VB
$55C    $6285   LD       V2, #85         ; Load 133 into V2
$55E    $A0DD   LD       I, $0DD         ; Load 0DD into I
$560    $1CC1   JP       $CC1            ; Jump to CC1
$562    $6299   LD       V2, #99         ; Load 153 into V2
$564    $B3D4   JP       V0, $3D4        ; Jump to V0 + 3D4
$566    $CC93   RND      VC, #93         ; VC = random & 93
$568    $856B   UNKNOWN  856B            ; Unknown 8xxx instruction
$56A    $0DE1   SYS      $DE1            ; System call to DE1
$56C    $0C46   SYS      $C46            ; System call to C46
$56E    $2133   CALL     $133            ; Call subroutine at 133
$570    $BC3D   JP       V0, $C3D        ; Jump to V0 + C3D
$572    $F5B4   UNKNOWN  F5B4            ; Unknown Fxxx instruction
$574    $EA2E   UNKNOWN  $EA2E           ; Unknown Exxx instruction
$576    $6742   LD       V7, #42         ; Load 66 into V7
$578    $0384   SYS      $384            ; System call to 384
$57A    $1C62   JP       $C62            ; Jump to C62
$57C    $CD68   RND      VD, #68         ; VD = random & 68
$57E    $6D2E   LD       VD, #2E         ; Load 46 into VD
$580    $468B   SNE      V6, #8B         ; Skip if V6 != 139
$582    $B9A5   JP       V0, $9A5        ; Jump to V0 + 9A5
$584    $C67E   RND      V6, #7E         ; V6 = random & 7E
$586    $D5BF   DRW      V5, VB, #F      ; Draw 15-byte sprite at V5, VB
$588    $3C44   SE       VC, #44         ; Skip if VC == 68
$58A    $5E93   UNKNOWN  $5E93           ; Unknown 5xxx instruction
$58C    $0F79   SYS      $F79            ; System call to F79
$58E    $DB14   DRW      VB, V1, #4      ; Draw 4-byte sprite at VB, V1
$590    $1EE7   JP       $EE7            ; Jump to EE7
$592    $467B   SNE      V6, #7B         ; Skip if V6 != 123
$594    $AE72   LD       I, $E72         ; Load E72 into I
$596    $EE06   UNKNOWN  $EE06           ; Unknown Exxx instruction
$598    $8F38   UNKNOWN  8F38            ; Unknown 8xxx instruction
$59A    $62F1   LD       V2, #F1         ; Load 241 into V2
$59C    $B6D0   JP       V0, $6D0        ; Jump to V0 + 6D0
$59E    $CE7B   RND      VE, #7B         ; VE = random & 7B
$5A0    $B6B6   JP       V0, $6B6        ; Jump to V0 + 6B6
$5A2    $1DC4   JP       $DC4            ; Jump to DC4
$5A4    $8C5B   UNKNOWN  8C5B            ; Unknown 8xxx instruction
$5A6    $84CE   SHL      V4              ; V4 <<= 1, VF = MSB
$5A8    $C18C   RND      V1, #8C         ; V1 = random & 8C
$5AA    $22AE   CALL     $2AE            ; Call subroutine at 2AE
$5AC    $0B4A   SYS      $B4A            ; System call to B4A
$5AE    $950B   UNKNOWN  $950B           ; Unknown 9xxx instruction
$5B0    $8641   OR       V6, V4          ; V6 |= V4
$5B2    $6863   LD       V8, #63         ; Load 99 into V8
$5B4    $CC1B   RND      VC, #1B         ; VC = random & 1B
$5B6    $AF9F   LD       I, $F9F         ; Load F9F into I
$5B8    $CCCA   RND      VC, #CA         ; VC = random & CA
$5BA    $61A8   LD       V1, #A8         ; Load 168 into V1
$5BC    $F01A   UNKNOWN  F01A            ; Unknown Fxxx instruction
$5BE    $BA61   JP       V0, $A61        ; Jump to V0 + A61
$5C0    $558E   UNKNOWN  $558E           ; Unknown 5xxx instruction
$5C2    $7995   ADD      V9, #95         ; Add 149 to V9
$5C4    $C6FB   RND      V6, #FB         ; V6 = random & FB
$5C6    $0510   SYS      $510            ; System call to 510
$5C8    $A833   LD       I, $833         ; Load 833 into I
$5CA    $162A   JP       $62A            ; Jump to 62A
$5CC    $328B   SE       V2, #8B         ; Skip if V2 == 139
$5CE    $F6A2   UNKNOWN  F6A2            ; Unknown Fxxx instruction
$5D0    $B51F   JP       V0, $51F        ; Jump to V0 + 51F
$5D2    $20D1   CALL     $0D1            ; Call subroutine at 0D1
$5D4    $F522   UNKNOWN  F522            ; Unknown Fxxx instruction
$5D6    $28E3   CALL     $8E3            ; Call subroutine at 8E3
$5D8    $30F3   SE       V0, #F3         ; Skip if V0 == 243
$5DA    $6A28   LD       VA, #28         ; Load 40 into VA
$5DC    $1D04   JP       $D04            ; Jump to D04
$5DE    $A096   LD       I, $096         ; Load 096 into I
$5E0    $6660   LD       V6, #60         ; Load 96 into V6
$5E2    $C3C5   RND      V3, #C5         ; V3 = random & C5
$5E4    $D1F8   DRW      V1, VF, #8      ; Draw 8-byte sprite at V1, VF
$5E6    $42F8   SNE      V2, #F8         ; Skip if V2 != 248
$5E8    $E7A1   SKNP     V7              ; Skip if key V7 not pressed
$5EA    $6A1D   LD       VA, #1D         ; Load 29 into VA
$5EC    $118A   JP       $18A            ; Jump to 18A
$5EE    $21F6   CALL     $1F6            ; Call subroutine at 1F6
$5F0    $357B   SE       V5, #7B         ; Skip if V5 == 123
$5F2    $67CC   LD       V7, #CC         ; Load 204 into V7
$5F4    $0722   SYS      $722            ; System call to 722
$5F6    $61F8   LD       V1, #F8         ; Load 248 into V1
$5F8    $A40D   LD       I, $40D         ; Load 40D into I
$5FA    $12CC   JP       $2CC            ; Jump to 2CC
$5FC    $5405   UNKNOWN  $5405           ; Unknown 5xxx instruction
$5FE    $792D   ADD      V9, #2D         ; Add 45 to V9
$600    $00BC   SYS      $0BC            ; System call to 0BC
$602    $9061   UNKNOWN  $9061           ; Unknown 9xxx instruction
$604    $BFBF   JP       V0, $FBF        ; Jump to V0 + FBF
$606    $3687   SE       V6, #87         ; Skip if V6 == 135
$608    $8DB6   SHR      VD              ; VD >>= 1, VF = LSB
$60A    $5AD9   UNKNOWN  $5AD9           ; Unknown 5xxx instruction
$60C    $F6FB   UNKNOWN  F6FB            ; Unknown Fxxx instruction
$60E    $3837   SE       V8, #37         ; Skip if V8 == 55
$610    $676B   LD       V7, #6B         ; Load 107 into V7
$612    $1C41   JP       $C41            ; Jump to C41
$614    $C026   RND      V0, #26         ; V0 = random & 26
$616    $090B   SYS      $90B            ; System call to 90B
$618    $5EC0   SE       VE, VC          ; Skip if VE == VC
$61A    $86BC   UNKNOWN  86BC            ; Unknown 8xxx instruction
$61C    $C338   RND      V3, #38         ; V3 = random & 38
$61E    $AE8C   LD       I, $E8C         ; Load E8C into I
$620    $5533   UNKNOWN  $5533           ; Unknown 5xxx instruction
$622    $CF36   RND      VF, #36         ; VF = random & 36
$624    $9611   UNKNOWN  $9611           ; Unknown 9xxx instruction
$626    $1D4B   JP       $D4B            ; Jump to D4B
$628    $4690   SNE      V6, #90         ; Skip if V6 != 144
$62A    $C9C1   RND      V9, #C1         ; V9 = random & C1
$62C    $E423   UNKNOWN  $E423           ; Unknown Exxx instruction
$62E    $4AE2   SNE      VA, #E2         ; Skip if VA != 226
$630    $6AC0   LD       VA, #C0         ; Load 192 into VA
$632    $6E7B   LD       VE, #7B         ; Load 123 into VE
$634    $9C66   UNKNOWN  $9C66           ; Unknown 9xxx instruction
$636    $A0D4   LD       I, $0D4         ; Load 0D4 into I
$638    $1ABF   JP       $ABF            ; Jump to ABF
$63A    $C7FA   RND      V7, #FA         ; V7 = random & FA
$63C    $D6E7   DRW      V6, VE, #7      ; Draw 7-byte sprite at V6, VE
$63E    $F162   UNKNOWN  F162            ; Unknown Fxxx instruction
$640    $CCD6   RND      VC, #D6         ; VC = random & D6
$642    $18DE   JP       $8DE            ; Jump to 8DE
$644    $721A   ADD      V2, #1A         ; Add 26 to V2
$646    $1692   JP       $692            ; Jump to 692
$648    $3D89   SE       VD, #89         ; Skip if VD == 137
$64A    $8B5A   UNKNOWN  8B5A            ; Unknown 8xxx instruction
$64C    $DC12   DRW      VC, V1, #2      ; Draw 2-byte sprite at VC, V1
$64E    $6546   LD       V5, #46         ; Load 70 into V5
$650    $9472   UNKNOWN  $9472           ; Unknown 9xxx instruction
$652    $4CD9   SNE      VC, #D9         ; Skip if VC != 217
$654    $D3C8   DRW      V3, VC, #8      ; Draw 8-byte sprite at V3, VC
$656    $5F49   UNKNOWN  $5F49           ; Unknown 5xxx instruction
$658    $4A35   SNE      VA, #35         ; Skip if VA != 53
$65A    $A0F6   LD       I, $0F6         ; Load 0F6 into I
$65C    $E6C0   UNKNOWN  $E6C0           ; Unknown Exxx instruction
$65E    $5E7B   UNKNOWN  $5E7B           ; Unknown 5xxx instruction
$660    $B967   JP       V0, $967        ; Jump to V0 + 967
$662    $CFAB   RND      VF, #AB         ; VF = random & AB
$664    $044B   SYS      $44B            ; System call to 44B
$666    $1726   JP       $726            ; Jump to 726
$668    $9072   UNKNOWN  $9072           ; Unknown 9xxx instruction
$66A    $E345   UNKNOWN  $E345           ; Unknown Exxx instruction
$66C    $70CB   ADD      V0, #CB         ; Add 203 to V0
$66E    $CC3E   RND      VC, #3E         ; VC = random & 3E
$670    $CA1F   RND      VA, #1F         ; VA = random & 1F
$672    $7B45   ADD      VB, #45         ; Add 69 to VB
$674    $3696   SE       V6, #96         ; Skip if V6 == 150
$676    $E0D4   UNKNOWN  $E0D4           ; Unknown Exxx instruction
$678    $CEF9   RND      VE, #F9         ; VE = random & F9
$67A    $FEFD   UNKNOWN  FEFD            ; Unknown Fxxx instruction
$67C    $644C   LD       V4, #4C         ; Load 76 into V4
$67E    $2DD3   CALL     $DD3            ; Call subroutine at DD3
$680    $B4DC   JP       V0, $4DC        ; Jump to V0 + 4DC
$682    $0F54   SYS      $F54            ; System call to F54
$684    $F3E6   UNKNOWN  F3E6            ; Unknown Fxxx instruction
$686    $E9B3   UNKNOWN  $E9B3           ; Unknown Exxx instruction
$688    $6ABE   LD       VA, #BE         ; Load 190 into VA
$68A    $2B1A   CALL     $B1A            ; Call subroutine at B1A
$68C    $B266   JP       V0, $266        ; Jump to V0 + 266
$68E    $E2FF   UNKNOWN  $E2FF           ; Unknown Exxx instruction
$690    $8CB4   ADD      VC, VB          ; VC += VB, VF = carry
$692    $B4E3   JP       V0, $4E3        ; Jump to V0 + 4E3
$694    $02F5   SYS      $2F5            ; System call to 2F5
$696    $B390   JP       V0, $390        ; Jump to V0 + 390
$698    $1049   JP       $049            ; Jump to 049
$69A    $87A2   AND      V7, VA          ; V7 &= VA
$69C    $12B1   JP       $2B1            ; Jump to 2B1
$69E    $44B5   SNE      V4, #B5         ; Skip if V4 != 181
$6A0    $85B1   OR       V5, VB          ; V5 |= VB
$6A2    $F948   UNKNOWN  F948            ; Unknown Fxxx instruction
$6A4    $1643   JP       $643            ; Jump to 643
$6A6    $769F   ADD      V6, #9F         ; Add 159 to V6
$6A8    $D18B   DRW      V1, V8, #B      ; Draw 11-byte sprite at V1, V8
$6AA    $2C23   CALL     $C23            ; Call subroutine at C23
$6AC    $709D   ADD      V0, #9D         ; Add 157 to V0
$6AE    $02EE   SYS      $2EE            ; System call to 2EE
$6B0    $E92B   UNKNOWN  $E92B           ; Unknown Exxx instruction
$6B2    $E013   UNKNOWN  $E013           ; Unknown Exxx instruction
$6B4    $7BC4   ADD      VB, #C4         ; Add 196 to VB
$6B6    $0576   SYS      $576            ; System call to 576
$6B8    $FAE2   UNKNOWN  FAE2            ; Unknown Fxxx instruction
$6BA    $2B8A   CALL     $B8A            ; Call subroutine at B8A
$6BC    $3A69   SE       VA, #69         ; Skip if VA == 105
$6BE    $B179   JP       V0, $179        ; Jump to V0 + 179
$6C0    $8534   ADD      V5, V3          ; V5 += V3, VF = carry
$6C2    $8ED9   UNKNOWN  8ED9            ; Unknown 8xxx instruction
$6C4    $72A6   ADD      V2, #A6         ; Add 166 to V2
$6C6    $9271   UNKNOWN  $9271           ; Unknown 9xxx instruction
$6C8    $D93A   DRW      V9, V3, #A      ; Draw 10-byte sprite at V9, V3
$6CA    $F1C3   UNKNOWN  F1C3            ; Unknown Fxxx instruction
$6CC    $B0EB   JP       V0, $0EB        ; Jump to V0 + 0EB
$6CE    $2C72   CALL     $C72            ; Call subroutine at C72
$6D0    $2029   CALL     $029            ; Call subroutine at 029
$6D2    $2BF4   CALL     $BF4            ; Call subroutine at BF4
$6D4    $EB23   UNKNOWN  $EB23           ; Unknown Exxx instruction
$6D6    $7EF7   ADD      VE, #F7         ; Add 247 to VE
$6D8    $8608   UNKNOWN  8608            ; Unknown 8xxx instruction
$6DA    $EE03   UNKNOWN  $EE03           ; Unknown Exxx instruction
$6DC    $8521   OR       V5, V2          ; V5 |= V2
$6DE    $5FE3   UNKNOWN  $5FE3           ; Unknown 5xxx instruction
$6E0    $4916   SNE      V9, #16         ; Skip if V9 != 22
$6E2    $BAC8   JP       V0, $AC8        ; Jump to V0 + AC8
$6E4    $FB54   UNKNOWN  FB54            ; Unknown Fxxx instruction
$6E6    $FC71   UNKNOWN  FC71            ; Unknown Fxxx instruction
$6E8    $D0A6   DRW      V0, VA, #6      ; Draw 6-byte sprite at V0, VA
$6EA    $E0FC   UNKNOWN  $E0FC           ; Unknown Exxx instruction
$6EC    $24BA   CALL     $4BA            ; Call subroutine at 4BA
$6EE    $66CA   LD       V6, #CA         ; Load 202 into V6
$6F0    $41E8   SNE      V1, #E8         ; Skip if V1 != 232
$6F2    $41B3   SNE      V1, #B3         ; Skip if V1 != 179
$6F4    $9481   UNKNOWN  $9481           ; Unknown 9xxx instruction
$6F6    $8F79   UNKNOWN  8F79            ; Unknown 8xxx instruction
$6F8    $3259   SE       V2, #59         ; Skip if V2 == 89
$6FA    $A9ED   LD       I, $9ED         ; Load 9ED into I
$6FC    $CC04   RND      VC, #04         ; VC = random & 04
$6FE    $1587   JP       $587            ; Jump to 587
$700    $693F   LD       V9, #3F         ; Load 63 into V9
$702    $1071   JP       $071            ; Jump to 071
$704    $F20A   LD       V2, K           ; Wait for key press, store in V2
$706    $C4F2   RND      V4, #F2         ; V4 = random & F2
$708    $5D7F   UNKNOWN  $5D7F           ; Unknown 5xxx instruction
$70A    $45FB   SNE      V5, #FB         ; Skip if V5 != 251
$70C    $36CF   SE       V6, #CF         ; Skip if V6 == 207
$70E    $A94D   LD       I, $94D         ; Load 94D into I
$710    $057B   SYS      $57B            ; System call to 57B
$712    $F436   UNKNOWN  F436            ; Unknown Fxxx instruction
$714    $5A6C   UNKNOWN  $5A6C           ; Unknown 5xxx instruction
$716    $60A1   LD       V0, #A1         ; Load 161 into V0
$718    $0C58   SYS      $C58            ; System call to C58
$71A    $0926   SYS      $926            ; System call to 926
$71C    $AAE1   LD       I, $AE1         ; Load AE1 into I
$71E    $AE89   LD       I, $E89         ; Load E89 into I
$720    $BFA1   JP       V0, $FA1        ; Jump to V0 + FA1
$722    $3626   SE       V6, #26         ; Skip if V6 == 38
$724    $AB8E   LD       I, $B8E         ; Load B8E into I
$726    $3277   SE       V2, #77         ; Skip if V2 == 119
$728    $5FC7   UNKNOWN  $5FC7           ; Unknown 5xxx instruction
$72A    $5083   UNKNOWN  $5083           ; Unknown 5xxx instruction
$72C    $AE4B   LD       I, $E4B         ; Load E4B into I
$72E    $DD43   DRW      VD, V4, #3      ; Draw 3-byte sprite at VD, V4
$730    $00D5   SYS      $0D5            ; System call to 0D5
$732    $8446   SHR      V4              ; V4 >>= 1, VF = LSB
$734    $A99E   LD       I, $99E         ; Load 99E into I
$736    $CA6B   RND      VA, #6B         ; VA = random & 6B
$738    $3991   SE       V9, #91         ; Skip if V9 == 145
$73A    $38ED   SE       V8, #ED         ; Skip if V8 == 237
$73C    $6FFA   LD       VF, #FA         ; Load 250 into VF
$73E    $08B8   SYS      $8B8            ; System call to 8B8
$740    $C88C   RND      V8, #8C         ; V8 = random & 8C
$742    $C56B   RND      V5, #6B         ; V5 = random & 6B
$744    $DDAC   DRW      VD, VA, #C      ; Draw 12-byte sprite at VD, VA
$746    $EF5A   UNKNOWN  $EF5A           ; Unknown Exxx instruction
$748    $BFE9   JP       V0, $FE9        ; Jump to V0 + FE9
$74A    $DD0E   DRW      VD, V0, #E      ; Draw 14-byte sprite at VD, V0
$74C    $2D44   CALL     $D44            ; Call subroutine at D44
$74E    $22CF   CALL     $2CF            ; Call subroutine at 2CF
$750    $CDAD   RND      VD, #AD         ; VD = random & AD
$752    $014B   SYS      $14B            ; System call to 14B
$754    $DE91   DRW      VE, V9, #1      ; Draw 1-byte sprite at VE, V9
$756    $DD81   DRW      VD, V8, #1      ; Draw 1-byte sprite at VD, V8
$758    $2EA4   CALL     $EA4            ; Call subroutine at EA4
$75A    $53F3   UNKNOWN  $53F3           ; Unknown 5xxx instruction
$75C    $EBD9   UNKNOWN  $EBD9           ; Unknown Exxx instruction
$75E    $4420   SNE      V4, #20         ; Skip if V4 != 32
$760    $B34F   JP       V0, $34F        ; Jump to V0 + 34F
$762    $2933   CALL     $933            ; Call subroutine at 933
$764    $397C   SE       V9, #7C         ; Skip if V9 == 124
$766    $380B   SE       V8, #0B         ; Skip if V8 == 11
$768    $8CAD   UNKNOWN  8CAD            ; Unknown 8xxx instruction
$76A    $2297   CALL     $297            ; Call subroutine at 297
$76C    $7701   ADD      V7, #01         ; Add 1 to V7
$76E    $4D83   SNE      VD, #83         ; Skip if VD != 131
$770    $1BB9   JP       $BB9            ; Jump to BB9
$772    $DAF7   DRW      VA, VF, #7      ; Draw 7-byte sprite at VA, VF
$774    $13BE   JP       $3BE            ; Jump to 3BE
$776    $C6DD   RND      V6, #DD         ; V6 = random & DD
$778    $CDFE   RND      VD, #FE         ; VD = random & FE
$77A    $834F   UNKNOWN  834F            ; Unknown 8xxx instruction
$77C    $01E5   SYS      $1E5            ; System call to 1E5
$77E    $ACC8   LD       I, $CC8         ; Load CC8 into I
$780    $79A5   ADD      V9, #A5         ; Add 165 to V9
$782    $A176   LD       I, $176         ; Load 176 into I
$784    $3D16   SE       VD, #16         ; Skip if VD == 22
$786    $6835   LD       V8, #35         ; Load 53 into V8
$788    $D9C5   DRW      V9, VC, #5      ; Draw 5-byte sprite at V9, VC
$78A    $D4A8   DRW      V4, VA, #8      ; Draw 8-byte sprite at V4, VA
$78C    $786D   ADD      V8, #6D         ; Add 109 to V8
$78E    $F56C   UNKNOWN  F56C            ; Unknown Fxxx instruction
$790    $9786   UNKNOWN  $9786           ; Unknown 9xxx instruction
$792    $5295   UNKNOWN  $5295           ; Unknown 5xxx instruction
$794    $6E30   LD       VE, #30         ; Load 48 into VE
$796    $ECE8   UNKNOWN  $ECE8           ; Unknown Exxx instruction
$798    $4126   SNE      V1, #26         ; Skip if V1 != 38
$79A    $6937   LD       V9, #37         ; Load 55 into V9
$79C    $6D36   LD       VD, #36         ; Load 54 into VD
$79E    $E2CB   UNKNOWN  $E2CB           ; Unknown Exxx instruction
$7A0    $FD53   UNKNOWN  FD53            ; Unknown Fxxx instruction
$7A2    $CED6   RND      VE, #D6         ; VE = random & D6
$7A4    $E217   UNKNOWN  $E217           ; Unknown Exxx instruction
$7A6    $562A   UNKNOWN  $562A           ; Unknown 5xxx instruction
$7A8    $300F   SE       V0, #0F         ; Skip if V0 == 15
$7AA    $A061   LD       I, $061         ; Load 061 into I
$7AC    $DC7F   DRW      VC, V7, #F      ; Draw 15-byte sprite at VC, V7
$7AE    $ECF6   UNKNOWN  $ECF6           ; Unknown Exxx instruction
$7B0    $C06D   RND      V0, #6D         ; V0 = random & 6D
$7B2    $D342   DRW      V3, V4, #2      ; Draw 2-byte sprite at V3, V4
$7B4    $F5E0   UNKNOWN  F5E0            ; Unknown Fxxx instruction
$7B6    $614A   LD       V1, #4A         ; Load 74 into V1
$7B8    $D190   DRW      V1, V9, #0      ; Draw 0-byte sprite at V1, V9
$7BA    $85EE   SHL      V5              ; V5 <<= 1, VF = MSB
$7BC    $804A   UNKNOWN  804A            ; Unknown 8xxx instruction
$7BE    $58E4   UNKNOWN  $58E4           ; Unknown 5xxx instruction
$7C0    $C5ED   RND      V5, #ED         ; V5 = random & ED
$7C2    $D1CF   DRW      V1, VC, #F      ; Draw 15-byte sprite at V1, VC
$7C4    $4262   SNE      V2, #62         ; Skip if V2 != 98
$7C6    $BF82   JP       V0, $F82        ; Jump to V0 + F82
$7C8    $510A   UNKNOWN  $510A           ; Unknown 5xxx instruction
$7CA    $3DB3   SE       VD, #B3         ; Skip if VD == 179
$7CC    $73E5   ADD      V3, #E5         ; Add 229 to V3
$7CE    $C522   RND      V5, #22         ; V5 = random & 22
$7D0    $CBA3   RND      VB, #A3         ; VB = random & A3
$7D2    $2973   CALL     $973            ; Call subroutine at 973
$7D4    $0AD6   SYS      $AD6            ; System call to AD6
$7D6    $0EEA   SYS      $EEA            ; System call to EEA
$7D8    $A416   LD       I, $416         ; Load 416 into I
$7DA    $84F4   ADD      V4, VF          ; V4 += VF, VF = carry
$7DC    $7900   ADD      V9, #00         ; Add 0 to V9
$7DE    $CFAA   RND      VF, #AA         ; VF = random & AA
$7E0    $C6E3   RND      V6, #E3         ; V6 = random & E3
$7E2    $09FD   SYS      $9FD            ; System call to 9FD
$7E4    $EF7D   UNKNOWN  $EF7D           ; Unknown Exxx instruction
$7E6    $6C59   LD       VC, #59         ; Load 89 into VC
$7E8    $68DA   LD       V8, #DA         ; Load 218 into V8
$7EA    $088C   SYS      $88C            ; System call to 88C
$7EC    $1CE3   JP       $CE3            ; Jump to CE3
$7EE    $702F   ADD      V0, #2F         ; Add 47 to V0
$7F0    $581D   UNKNOWN  $581D           ; Unknown 5xxx instruction
$7F2    $78D7   ADD      V8, #D7         ; Add 215 to V8
$7F4    $E86C   UNKNOWN  $E86C           ; Unknown Exxx instruction
$7F6    $E64D   UNKNOWN  $E64D           ; Unknown Exxx instruction
$7F8    $1AB6   JP       $AB6            ; Jump to AB6
$7FA    $FC64   UNKNOWN  FC64            ; Unknown Fxxx instruction
$7FC    $4883   SNE      V8, #83         ; Skip if V8 != 131
$7FE    $535E   UNKNOWN  $535E           ; Unknown 5xxx instruction
$800    $F7BE   UNKNOWN  F7BE            ; Unknown Fxxx instruction
$802    $F92D   UNKNOWN  F92D            ; Unknown Fxxx instruction
$804    $B496   JP       V0, $496        ; Jump to V0 + 496
$806    $22DA   CALL     $2DA            ; Call subroutine at 2DA
$808    $E133   UNKNOWN  $E133           ; Unknown Exxx instruction
$80A    $95E8   UNKNOWN  $95E8           ; Unknown 9xxx instruction
$80C    $9B31   UNKNOWN  $9B31           ; Unknown 9xxx instruction
$80E    $773A   ADD      V7, #3A         ; Add 58 to V7
$810    $D1C9   DRW      V1, VC, #9      ; Draw 9-byte sprite at V1, VC
$812    $E25C   UNKNOWN  $E25C           ; Unknown Exxx instruction
$814    $C6D2   RND      V6, #D2         ; V6 = random & D2
$816    $C8C3   RND      V8, #C3         ; V8 = random & C3
$818    $EC8A   UNKNOWN  $EC8A           ; Unknown Exxx instruction
$81A    $AE54   LD       I, $E54         ; Load E54 into I
$81C    $B265   JP       V0, $265        ; Jump to V0 + 265
$81E    $D92F   DRW      V9, V2, #F      ; Draw 15-byte sprite at V9, V2
$820    $D3D1   DRW      V3, VD, #1      ; Draw 1-byte sprite at V3, VD
$822    $24D4   CALL     $4D4            ; Call subroutine at 4D4
$824    $B158   JP       V0, $158        ; Jump to V0 + 158
$826    $A983   LD       I, $983         ; Load 983 into I
$828    $C90E   RND      V9, #0E         ; V9 = random & 0E
$82A    $7A11   ADD      VA, #11         ; Add 17 to VA
$82C    $4A6F   SNE      VA, #6F         ; Skip if VA != 111
$82E    $6827   LD       V8, #27         ; Load 39 into V8
$830    $0BF4   SYS      $BF4            ; System call to BF4
$832    $2CEF   CALL     $CEF            ; Call subroutine at CEF
$834    $9346   UNKNOWN  $9346           ; Unknown 9xxx instruction
$836    $F5A9   UNKNOWN  F5A9            ; Unknown Fxxx instruction
$838    $BFAC   JP       V0, $FAC        ; Jump to V0 + FAC
$83A    $C0FB   RND      V0, #FB         ; V0 = random & FB
$83C    $4373   SNE      V3, #73         ; Skip if V3 != 115
$83E    $1465   JP       $465            ; Jump to 465
$840    $8C9A   UNKNOWN  8C9A            ; Unknown 8xxx instruction
$842    $4D3A   SNE      VD, #3A         ; Skip if VD != 58
$844    $E695   UNKNOWN  $E695           ; Unknown Exxx instruction
$846    $F38D   UNKNOWN  F38D            ; Unknown Fxxx instruction
$848    $5AB9   UNKNOWN  $5AB9           ; Unknown 5xxx instruction
$84A    $8173   XOR      V1, V7          ; V1 ^= V7
$84C    $B37A   JP       V0, $37A        ; Jump to V0 + 37A
$84E    $3E48   SE       VE, #48         ; Skip if VE == 72
$850    $7659   ADD      V6, #59         ; Add 89 to V6
$852    $8654   ADD      V6, V5          ; V6 += V5, VF = carry
$854    $EAC3   UNKNOWN  $EAC3           ; Unknown Exxx instruction
$856    $19EC   JP       $9EC            ; Jump to 9EC
$858    $4EE3   SNE      VE, #E3         ; Skip if VE != 227
$85A    $72F3   ADD      V2, #F3         ; Add 243 to V2
$85C    $8375   SUB      V3, V7          ; V3 -= V7, VF = !borrow
$85E    $C6A1   RND      V6, #A1         ; V6 = random & A1
$860    $9742   UNKNOWN  $9742           ; Unknown 9xxx instruction
$862    $6A01   LD       VA, #01         ; Load 1 into VA
$864    $4C4B   SNE      VC, #4B         ; Skip if VC != 75
$866    $76E9   ADD      V6, #E9         ; Add 233 to V6
$868    $0487   SYS      $487            ; System call to 487
$86A    $ED4B   UNKNOWN  $ED4B           ; Unknown Exxx instruction
$86C    $1BCF   JP       $BCF            ; Jump to BCF
$86E    $B50D   JP       V0, $50D        ; Jump to V0 + 50D
$870    $4B8B   SNE      VB, #8B         ; Skip if VB != 139
$872    $9B7B   UNKNOWN  $9B7B           ; Unknown 9xxx instruction
$874    $33CE   SE       V3, #CE         ; Skip if V3 == 206
$876    $3CD1   SE       VC, #D1         ; Skip if VC == 209
$878    $F73A   UNKNOWN  F73A            ; Unknown Fxxx instruction
$87A    $9558   UNKNOWN  $9558           ; Unknown 9xxx instruction
$87C    $A74D   LD       I, $74D         ; Load 74D into I
$87E    $12ED   JP       $2ED            ; Jump to 2ED
$880    $9049   UNKNOWN  $9049           ; Unknown 9xxx instruction
$882    $B809   JP       V0, $809        ; Jump to V0 + 809
$884    $35AD   SE       V5, #AD         ; Skip if V5 == 173
$886    $0D19   SYS      $D19            ; System call to D19
$888    $335A   SE       V3, #5A         ; Skip if V3 == 90
$88A    $624A   LD       V2, #4A         ; Load 74 into V2
$88C    $3B73   SE       VB, #73         ; Skip if VB == 115
$88E    $82AD   UNKNOWN  82AD            ; Unknown 8xxx instruction
$890    $B7C0   JP       V0, $7C0        ; Jump to V0 + 7C0
$892    $3FB9   SE       VF, #B9         ; Skip if VF == 185
$894    $62E1   LD       V2, #E1         ; Load 225 into V2
$896    $6594   LD       V5, #94         ; Load 148 into V5
$898    $420A   SNE      V2, #0A         ; Skip if V2 != 10
$89A    $121F   JP       $21F            ; Jump to 21F
$89C    $499D   SNE      V9, #9D         ; Skip if V9 != 157
$89E    $0155   SYS      $155            ; System call to 155
$8A0    $54E5   UNKNOWN  $54E5           ; Unknown 5xxx instruction
$8A2    $6A13   LD       VA, #13         ; Load 19 into VA
$8A4    $8488   UNKNOWN  8488            ; Unknown 8xxx instruction
$8A6    $813C   UNKNOWN  813C            ; Unknown 8xxx instruction
$8A8    $6DC5   LD       VD, #C5         ; Load 197 into VD
$8AA    $DC8F   DRW      VC, V8, #F      ; Draw 15-byte sprite at VC, V8
$8AC    $B9BF   JP       V0, $9BF        ; Jump to V0 + 9BF
$8AE    $B526   JP       V0, $526        ; Jump to V0 + 526
$8B0    $F2DC   UNKNOWN  F2DC            ; Unknown Fxxx instruction
$8B2    $178A   JP       $78A            ; Jump to 78A
$8B4    $5D59   UNKNOWN  $5D59           ; Unknown 5xxx instruction
$8B6    $9F29   UNKNOWN  $9F29           ; Unknown 9xxx instruction
$8B8    $23F3   CALL     $3F3            ; Call subroutine at 3F3
$8BA    $6B8D   LD       VB, #8D         ; Load 141 into VB
$8BC    $5F8E   UNKNOWN  $5F8E           ; Unknown 5xxx instruction
$8BE    $5D23   UNKNOWN  $5D23           ; Unknown 5xxx instruction
$8C0    $55DC   UNKNOWN  $55DC           ; Unknown 5xxx instruction
$8C2    $7694   ADD      V6, #94         ; Add 148 to V6
$8C4    $D80D   DRW      V8, V0, #D      ; Draw 13-byte sprite at V8, V0
$8C6    $767A   ADD      V6, #7A         ; Add 122 to V6
$8C8    $D60E   DRW      V6, V0, #E      ; Draw 14-byte sprite at V6, V0
$8CA    $CF21   RND      VF, #21         ; VF = random & 21
$8CC    $0043   SYS      $043            ; System call to 043
$8CE    $9ADA   UNKNOWN  $9ADA           ; Unknown 9xxx instruction
$8D0    $922D   UNKNOWN  $922D           ; Unknown 9xxx instruction
$8D2    $C067   RND      V0, #67         ; V0 = random & 67
$8D4    $11A4   JP       $1A4            ; Jump to 1A4
$8D6    $93DE   UNKNOWN  $93DE           ; Unknown 9xxx instruction
$8D8    $F5F9   UNKNOWN  F5F9            ; Unknown Fxxx instruction
$8DA    $B8F4   JP       V0, $8F4        ; Jump to V0 + 8F4
$8DC    $05A2   SYS      $5A2            ; System call to 5A2
$8DE    $25D6   CALL     $5D6            ; Call subroutine at 5D6
$8E0    $5892   UNKNOWN  $5892           ; Unknown 5xxx instruction
$8E2    $D9B8   DRW      V9, VB, #8      ; Draw 8-byte sprite at V9, VB
$8E4    $3270   SE       V2, #70         ; Skip if V2 == 112
$8E6    $2E3F   CALL     $E3F            ; Call subroutine at E3F
$8E8    $D942   DRW      V9, V4, #2      ; Draw 2-byte sprite at V9, V4
$8EA    $E211   UNKNOWN  $E211           ; Unknown Exxx instruction
$8EC    $ED8C   UNKNOWN  $ED8C           ; Unknown Exxx instruction
$8EE    $07B0   SYS      $7B0            ; System call to 7B0
$8F0    $7F8A   ADD      VF, #8A         ; Add 138 to VF
$8F2    $576F   UNKNOWN  $576F           ; Unknown 5xxx instruction
$8F4    $65D7   LD       V5, #D7         ; Load 215 into V5
$8F6    $7E54   ADD      VE, #54         ; Add 84 to VE
$8F8    $07D5   SYS      $7D5            ; System call to 7D5
$8FA    $32D0   SE       V2, #D0         ; Skip if V2 == 208
$8FC    $73FC   ADD      V3, #FC         ; Add 252 to V3
$8FE    $BD86   JP       V0, $D86        ; Jump to V0 + D86
$900    $EB9C   UNKNOWN  $EB9C           ; Unknown Exxx instruction
$902    $12E7   JP       $2E7            ; Jump to 2E7
$904    $2407   CALL     $407            ; Call subroutine at 407
$906    $8ED0   LD       VE, VD          ; VE = VD
$908    $B3A6   JP       V0, $3A6        ; Jump to V0 + 3A6
$90A    $D019   DRW      V0, V1, #9      ; Draw 9-byte sprite at V0, V1
$90C    $FF33   LD       B, VF           ; Store BCD of VF at I, I+1, I+2
$90E    $97BC   UNKNOWN  $97BC           ; Unknown 9xxx instruction
$910    $338E   SE       V3, #8E         ; Skip if V3 == 142
$912    $5FA4   UNKNOWN  $5FA4           ; Unknown 5xxx instruction
$914    $8727   SUBN     V7, V2          ; V7 = V2 - V7, VF = !borrow
$916    $FFB7   UNKNOWN  FFB7            ; Unknown Fxxx instruction
$918    $101B   JP       $01B            ; Jump to 01B
$91A    $2DDB   CALL     $DDB            ; Call subroutine at DDB
$91C    $D8C1   DRW      V8, VC, #1      ; Draw 1-byte sprite at V8, VC
$91E    $0765   SYS      $765            ; System call to 765
$920    $74CA   ADD      V4, #CA         ; Add 202 to V4
$922    $AED3   LD       I, $ED3         ; Load ED3 into I
$924    $B4F0   JP       V0, $4F0        ; Jump to V0 + 4F0
$926    $391B   SE       V9, #1B         ; Skip if V9 == 27
$928    $B567   JP       V0, $567        ; Jump to V0 + 567
$92A    $1338   JP       $338            ; Jump to 338
$92C    $808F   UNKNOWN  808F            ; Unknown 8xxx instruction
$92E    $14C9   JP       $4C9            ; Jump to 4C9
$930    $3BC9   SE       VB, #C9         ; Skip if VB == 201
$932    $B4DE   JP       V0, $4DE        ; Jump to V0 + 4DE
$934    $5A24   UNKNOWN  $5A24           ; Unknown 5xxx instruction
$936    $3F7E   SE       VF, #7E         ; Skip if VF == 126
$938    $8845   SUB      V8, V4          ; V8 -= V4, VF = !borrow
$93A    $42A5   SNE      V2, #A5         ; Skip if V2 != 165
$93C    $9DDD   UNKNOWN  $9DDD           ; Unknown 9xxx instruction
$93E    $0021   SYS      $021            ; System call to 021
$940    $634C   LD       V3, #4C         ; Load 76 into V3
$942    $60ED   LD       V0, #ED         ; Load 237 into V0
$944    $7727   ADD      V7, #27         ; Add 39 to V7
$946    $1824   JP       $824            ; Jump to 824
$948    $6B84   LD       VB, #84         ; Load 132 into VB
$94A    $AD35   LD       I, $D35         ; Load D35 into I
$94C    $229E   CALL     $29E            ; Call subroutine at 29E
$94E    $3B67   SE       VB, #67         ; Skip if VB == 103
$950    $D01B   DRW      V0, V1, #B      ; Draw 11-byte sprite at V0, V1
$952    $06BE   SYS      $6BE            ; System call to 6BE
$954    $D964   DRW      V9, V6, #4      ; Draw 4-byte sprite at V9, V6
$956    $E866   UNKNOWN  $E866           ; Unknown Exxx instruction
$958    $932B   UNKNOWN  $932B           ; Unknown 9xxx instruction
$95A    $407B   SNE      V0, #7B         ; Skip if V0 != 123
$95C    $A2B6   LD       I, $2B6         ; Load 2B6 into I
$95E    $FB45   UNKNOWN  FB45            ; Unknown Fxxx instruction
$960    $0DE0   SYS      $DE0            ; System call to DE0
$962    $E734   UNKNOWN  $E734           ; Unknown Exxx instruction
$964    $B893   JP       V0, $893        ; Jump to V0 + 893
$966    $A153   LD       I, $153         ; Load 153 into I
$968    $24A8   CALL     $4A8            ; Call subroutine at 4A8
$96A    $EAAE   UNKNOWN  $EAAE           ; Unknown Exxx instruction
$96C    $8B59   UNKNOWN  8B59            ; Unknown 8xxx instruction
$96E    $7E50   ADD      VE, #50         ; Add 80 to VE
$970    $088E   SYS      $88E            ; System call to 88E
$972    $5499   UNKNOWN  $5499           ; Unknown 5xxx instruction
$974    $AD23   LD       I, $D23         ; Load D23 into I
$976    $103B   JP       $03B            ; Jump to 03B
$978    $E1C8   UNKNOWN  $E1C8           ; Unknown Exxx instruction
$97A    $DC9D   DRW      VC, V9, #D      ; Draw 13-byte sprite at VC, V9
$97C    $2F6D   CALL     $F6D            ; Call subroutine at F6D
$97E    $B067   JP       V0, $067        ; Jump to V0 + 067
$980    $19E6   JP       $9E6            ; Jump to 9E6
$982    $DBC8   DRW      VB, VC, #8      ; Draw 8-byte sprite at VB, VC
$984    $D0E2   DRW      V0, VE, #2      ; Draw 2-byte sprite at V0, VE
$986    $E1B2   UNKNOWN  $E1B2           ; Unknown Exxx instruction
$988    $F323   UNKNOWN  F323            ; Unknown Fxxx instruction
$98A    $DA9E   DRW      VA, V9, #E      ; Draw 14-byte sprite at VA, V9
$98C    $C598   RND      V5, #98         ; V5 = random & 98
$98E    $A1FA   LD       I, $1FA         ; Load 1FA into I
$990    $B005   JP       V0, $005        ; Jump to V0 + 005
$992    $30CD   SE       V0, #CD         ; Skip if V0 == 205
$994    $BBE0   JP       V0, $BE0        ; Jump to V0 + BE0
$996    $739D   ADD      V3, #9D         ; Add 157 to V3
$998    $0D83   SYS      $D83            ; System call to D83
$99A    $24DA   CALL     $4DA            ; Call subroutine at 4DA
$99C    $7DBC   ADD      VD, #BC         ; Add 188 to VD
$99E    $68C5   LD       V8, #C5         ; Load 197 into V8
$9A0    $769C   ADD      V6, #9C         ; Add 156 to V6
$9A2    $8709   UNKNOWN  8709            ; Unknown 8xxx instruction
$9A4    $9BE9   UNKNOWN  $9BE9           ; Unknown 9xxx instruction
$9A6    $D379   DRW      V3, V7, #9      ; Draw 9-byte sprite at V3, V7
$9A8    $AE2C   LD       I, $E2C         ; Load E2C into I
$9AA    $76B8   ADD      V6, #B8         ; Add 184 to V6
$9AC    $4E15   SNE      VE, #15         ; Skip if VE != 21
$9AE    $EDAA   UNKNOWN  $EDAA           ; Unknown Exxx instruction
$9B0    $DB9B   DRW      VB, V9, #B      ; Draw 11-byte sprite at VB, V9
$9B2    $705E   ADD      V0, #5E         ; Add 94 to V0
$9B4    $699B   LD       V9, #9B         ; Load 155 into V9
$9B6    $F58A   UNKNOWN  F58A            ; Unknown Fxxx instruction
$9B8    $A0C0   LD       I, $0C0         ; Load 0C0 into I
$9BA    $2F6F   CALL     $F6F            ; Call subroutine at F6F
$9BC    $A854   LD       I, $854         ; Load 854 into I
$9BE    $90CB   UNKNOWN  $90CB           ; Unknown 9xxx instruction
$9C0    $F589   UNKNOWN  F589            ; Unknown Fxxx instruction
$9C2    $1771   JP       $771            ; Jump to 771
$9C4    $113B   JP       $13B            ; Jump to 13B
$9C6    $C306   RND      V3, #06         ; V3 = random & 06
$9C8    $1781   JP       $781            ; Jump to 781
$9CA    $223A   CALL     $23A            ; Call subroutine at 23A
$9CC    $96AF   UNKNOWN  $96AF           ; Unknown 9xxx instruction
$9CE    $A2C9   LD       I, $2C9         ; Load 2C9 into I
$9D0    $2556   CALL     $556            ; Call subroutine at 556
$9D2    $9763   UNKNOWN  $9763           ; Unknown 9xxx instruction
$9D4    $1B77   JP       $B77            ; Jump to B77
$9D6    $116C   JP       $16C            ; Jump to 16C
$9D8    $62AB   LD       V2, #AB         ; Load 171 into V2
$9DA    $B298   JP       V0, $298        ; Jump to V0 + 298
$9DC    $5317   UNKNOWN  $5317           ; Unknown 5xxx instruction
$9DE    $7CF0   ADD      VC, #F0         ; Add 240 to VC
$9E0    $7268   ADD      V2, #68         ; Add 104 to V2
$9E2    $E6C3   UNKNOWN  $E6C3           ; Unknown Exxx instruction
$9E4    $4DCA   SNE      VD, #CA         ; Skip if VD != 202
$9E6    $0873   SYS      $873            ; System call to 873
$9E8    $3BE9   SE       VB, #E9         ; Skip if VB == 233
$9EA    $EDB4   UNKNOWN  $EDB4           ; Unknown Exxx instruction
$9EC    $F10F   UNKNOWN  F10F            ; Unknown Fxxx instruction
$9EE    $6E61   LD       VE, #61         ; Load 97 into VE
$9F0    $A743   LD       I, $743         ; Load 743 into I
$9F2    $B6A0   JP       V0, $6A0        ; Jump to V0 + 6A0
$9F4    $EF68   UNKNOWN  $EF68           ; Unknown Exxx instruction
$9F6    $E469   UNKNOWN  $E469           ; Unknown Exxx instruction
$9F8    $A9BB   LD       I, $9BB         ; Load 9BB into I
$9FA    $81D3   XOR      V1, VD          ; V1 ^= VD
$9FC    $417C   SNE      V1, #7C         ; Skip if V1 != 124
$9FE    $6689   LD       V6, #89         ; Load 137 into V6
$A00    $B497   JP       V0, $497        ; Jump to V0 + 497
$A02    $A42C   LD       I, $42C         ; Load 42C into I
$A04    $E449   UNKNOWN  $E449           ; Unknown Exxx instruction
$A06    $441D   SNE      V4, #1D         ; Skip if V4 != 29
$A08    $D42C   DRW      V4, V2, #C      ; Draw 12-byte sprite at V4, V2
$A0A    $E839   UNKNOWN  $E839           ; Unknown Exxx instruction
$A0C    $91E2   UNKNOWN  $91E2           ; Unknown 9xxx instruction
$A0E    $11CC   JP       $1CC            ; Jump to 1CC
$A10    $8053   XOR      V0, V5          ; V0 ^= V5
$A12    $F1FE   UNKNOWN  F1FE            ; Unknown Fxxx instruction
$A14    $3D41   SE       VD, #41         ; Skip if VD == 65
$A16    $8761   OR       V7, V6          ; V7 |= V6
$A18    $6974   LD       V9, #74         ; Load 116 into V9
$A1A    $B3F6   JP       V0, $3F6        ; Jump to V0 + 3F6
$A1C    $0E54   SYS      $E54            ; System call to E54
$A1E    $5DA8   UNKNOWN  $5DA8           ; Unknown 5xxx instruction
$A20    $1580   JP       $580            ; Jump to 580
$A22    $6F2A   LD       VF, #2A         ; Load 42 into VF
$A24    $643C   LD       V4, #3C         ; Load 60 into V4
$A26    $7515   ADD      V5, #15         ; Add 21 to V5
$A28    $EE25   UNKNOWN  $EE25           ; Unknown Exxx instruction
$A2A    $14DE   JP       $4DE            ; Jump to 4DE
$A2C    $3E8A   SE       VE, #8A         ; Skip if VE == 138
$A2E    $4487   SNE      V4, #87         ; Skip if V4 != 135
$A30    $7B2B   ADD      VB, #2B         ; Add 43 to VB
$A32    $1EBB   JP       $EBB            ; Jump to EBB
$A34    $077C   SYS      $77C            ; System call to 77C
$A36    $A5FC   LD       I, $5FC         ; Load 5FC into I
$A38    $F316   UNKNOWN  F316            ; Unknown Fxxx instruction
$A3A    $DB19   DRW      VB, V1, #9      ; Draw 9-byte sprite at VB, V1
$A3C    $47C3   SNE      V7, #C3         ; Skip if V7 != 195
$A3E    $8A5B   UNKNOWN  8A5B            ; Unknown 8xxx instruction
$A40    $25F5   CALL     $5F5            ; Call subroutine at 5F5
$A42    $7FE2   ADD      VF, #E2         ; Add 226 to VF
$A44    $863C   UNKNOWN  863C            ; Unknown 8xxx instruction
$A46    $578D   UNKNOWN  $578D           ; Unknown 5xxx instruction
$A48    $A380   LD       I, $380         ; Load 380 into I
$A4A    $81CE   SHL      V1              ; V1 <<= 1, VF = MSB
$A4C    $2961   CALL     $961            ; Call subroutine at 961
$A4E    $0448   SYS      $448            ; System call to 448
$A50    $6605   LD       V6, #05         ; Load 5 into V6
$A52    $8346   SHR      V3              ; V3 >>= 1, VF = LSB
$A54    $5E63   UNKNOWN  $5E63           ; Unknown 5xxx instruction
$A56    $0F2C   SYS      $F2C            ; System call to F2C
$A58    $41D0   SNE      V1, #D0         ; Skip if V1 != 208
$A5A    $6CE7   LD       VC, #E7         ; Load 231 into VC
$A5C    $804A   UNKNOWN  804A            ; Unknown 8xxx instruction
$A5E    $4434   SNE      V4, #34         ; Skip if V4 != 52
$A60    $47BB   SNE      V7, #BB         ; Skip if V7 != 187
$A62    $7A0D   ADD      VA, #0D         ; Add 13 to VA
$A64    $AEBD   LD       I, $EBD         ; Load EBD into I
$A66    $B355   JP       V0, $355        ; Jump to V0 + 355
$A68    $09D8   SYS      $9D8            ; System call to 9D8
$A6A    $E8CA   UNKNOWN  $E8CA           ; Unknown Exxx instruction
$A6C    $D60A   DRW      V6, V0, #A      ; Draw 10-byte sprite at V6, V0
$A6E    $6A69   LD       VA, #69         ; Load 105 into VA
$A70    $2ACA   CALL     $ACA            ; Call subroutine at ACA
$A72    $410B   SNE      V1, #0B         ; Skip if V1 != 11
$A74    $0BCB   SYS      $BCB            ; System call to BCB
$A76    $95EC   UNKNOWN  $95EC           ; Unknown 9xxx instruction
$A78    $480B   SNE      V8, #0B         ; Skip if V8 != 11
$A7A    $3E9F   SE       VE, #9F         ; Skip if VE == 159
$A7C    $43DB   SNE      V3, #DB         ; Skip if V3 != 219
$A7E    $078D   SYS      $78D            ; System call to 78D
$A80    $95CD   UNKNOWN  $95CD           ; Unknown 9xxx instruction
$A82    $3E87   SE       VE, #87         ; Skip if VE == 135
$A84    $1A95   JP       $A95            ; Jump to A95
$A86    $7D43   ADD      VD, #43         ; Add 67 to VD
$A88    $CC75   RND      VC, #75         ; VC = random & 75
$A8A    $8B09   UNKNOWN  8B09            ; Unknown 8xxx instruction
$A8C    $7409   ADD      V4, #09         ; Add 9 to V4
$A8E    $0D4F   SYS      $D4F            ; System call to D4F
$A90    $3810   SE       V8, #10         ; Skip if V8 == 16
$A92    $FD8F   UNKNOWN  FD8F            ; Unknown Fxxx instruction
$A94    $6F09   LD       VF, #09         ; Load 9 into VF
$A96    $5640   SE       V6, V4          ; Skip if V6 == V4
$A98    $A683   LD       I, $683         ; Load 683 into I
$A9A    $8FC8   UNKNOWN  8FC8            ; Unknown 8xxx instruction
$A9C    $4990   SNE      V9, #90         ; Skip if V9 != 144
$A9E    $62AA   LD       V2, #AA         ; Load 170 into V2
$AA0    $1B6A   JP       $B6A            ; Jump to B6A
$AA2    $71C4   ADD      V1, #C4         ; Add 196 to V1
$AA4    $2CAF   CALL     $CAF            ; Call subroutine at CAF
$AA6    $1405   JP       $405            ; Jump to 405
$AA8    $5E2E   UNKNOWN  $5E2E           ; Unknown 5xxx instruction
$AAA    $785B   ADD      V8, #5B         ; Add 91 to V8
$AAC    $FAF7   UNKNOWN  FAF7            ; Unknown Fxxx instruction
$AAE    $F45A   UNKNOWN  F45A            ; Unknown Fxxx instruction
$AB0    $EF4B   UNKNOWN  $EF4B           ; Unknown Exxx instruction
$AB2    $6A33   LD       VA, #33         ; Load 51 into VA
$AB4    $2C51   CALL     $C51            ; Call subroutine at C51
$AB6    $6DE5   LD       VD, #E5         ; Load 229 into VD
$AB8    $7C38   ADD      VC, #38         ; Add 56 to VC
$ABA    $E4A4   UNKNOWN  $E4A4           ; Unknown Exxx instruction
$ABC    $E089   UNKNOWN  $E089           ; Unknown Exxx instruction
$ABE    $51B9   UNKNOWN  $51B9           ; Unknown 5xxx instruction
$AC0    $39A4   SE       V9, #A4         ; Skip if V9 == 164
$AC2    $0CA8   SYS      $CA8            ; System call to CA8
$AC4    $372E   SE       V7, #2E         ; Skip if V7 == 46
$AC6    $EF5B   UNKNOWN  $EF5B           ; Unknown Exxx instruction
$AC8    $84FD   UNKNOWN  84FD            ; Unknown 8xxx instruction
$ACA    $FE00   UNKNOWN  FE00            ; Unknown Fxxx instruction
$ACC    $2C72   CALL     $C72            ; Call subroutine at C72
$ACE    $A1F5   LD       I, $1F5         ; Load 1F5 into I
$AD0    $E4F8   UNKNOWN  $E4F8           ; Unknown Exxx instruction
$AD2    $2BF0   CALL     $BF0            ; Call subroutine at BF0
$AD4    $B849   JP       V0, $849        ; Jump to V0 + 849
$AD6    $C832   RND      V8, #32         ; V8 = random & 32
$AD8    $1759   JP       $759            ; Jump to 759
$ADA    $E4B1   UNKNOWN  $E4B1           ; Unknown Exxx instruction
$ADC    $31F2   SE       V1, #F2         ; Skip if V1 == 242
$ADE    $57D0   SE       V7, VD          ; Skip if V7 == VD
$AE0    $1F74   JP       $F74            ; Jump to F74
$AE2    $DD42   DRW      VD, V4, #2      ; Draw 2-byte sprite at VD, V4
$AE4    $C30D   RND      V3, #0D         ; V3 = random & 0D
$AE6    $DCF5   DRW      VC, VF, #5      ; Draw 5-byte sprite at VC, VF
$AE8    $953F   UNKNOWN  $953F           ; Unknown 9xxx instruction
$AEA    $38EF   SE       V8, #EF         ; Skip if V8 == 239
$AEC    $FB72   UNKNOWN  FB72            ; Unknown Fxxx instruction
$AEE    $E6B5   UNKNOWN  $E6B5           ; Unknown Exxx instruction
$AF0    $9FF0   SNE      VF, VF          ; Skip if VF != VF
$AF2    $5F87   UNKNOWN  $5F87           ; Unknown 5xxx instruction
$AF4    $C342   RND      V3, #42         ; V3 = random & 42
$AF6    $2D27   CALL     $D27            ; Call subroutine at D27
$AF8    $7674   ADD      V6, #74         ; Add 116 to V6
$AFA    $CA18   RND      VA, #18         ; VA = random & 18
$AFC    $CC5A   RND      VC, #5A         ; VC = random & 5A
$AFE    $21E0   CALL     $1E0            ; Call subroutine at 1E0
$B00    $917F   UNKNOWN  $917F           ; Unknown 9xxx instruction
$B02    $5C11   UNKNOWN  $5C11           ; Unknown 5xxx instruction
$B04    $9281   UNKNOWN  $9281           ; Unknown 9xxx instruction
$B06    $7A62   ADD      VA, #62         ; Add 98 to VA
$B08    $79E0   ADD      V9, #E0         ; Add 224 to V9
$B0A    $703D   ADD      V0, #3D         ; Add 61 to V0
$B0C    $C28D   RND      V2, #8D         ; V2 = random & 8D
$B0E    $6371   LD       V3, #71         ; Load 113 into V3
$B10    $C7D7   RND      V7, #D7         ; V7 = random & D7
$B12    $FADD   UNKNOWN  FADD            ; Unknown Fxxx instruction
$B14    $3595   SE       V5, #95         ; Skip if V5 == 149
$B16    $6789   LD       V7, #89         ; Load 137 into V7
$B18    $6E61   LD       VE, #61         ; Load 97 into VE
$B1A    $DA22   DRW      VA, V2, #2      ; Draw 2-byte sprite at VA, V2
$B1C    $65FB   LD       V5, #FB         ; Load 251 into V5
$B1E    $8469   UNKNOWN  8469            ; Unknown 8xxx instruction
$B20    $CFDF   RND      VF, #DF         ; VF = random & DF
$B22    $5BB1   UNKNOWN  $5BB1           ; Unknown 5xxx instruction
$B24    $C70F   RND      V7, #0F         ; V7 = random & 0F
$B26    $BC05   JP       V0, $C05        ; Jump to V0 + C05
$B28    $6C84   LD       VC, #84         ; Load 132 into VC
$B2A    $723A   ADD      V2, #3A         ; Add 58 to V2
$B2C    $6C8A   LD       VC, #8A         ; Load 138 into VC
$B2E    $008C   SYS      $08C            ; System call to 08C
$B30    $29DF   CALL     $9DF            ; Call subroutine at 9DF
$B32    $2652   CALL     $652            ; Call subroutine at 652
$B34    $EEE8   UNKNOWN  $EEE8           ; Unknown Exxx instruction
$B36    $540E   UNKNOWN  $540E           ; Unknown 5xxx instruction
$B38    $F8FE   UNKNOWN  F8FE            ; Unknown Fxxx instruction
$B3A    $6905   LD       V9, #05         ; Load 5 into V9
$B3C    $1D4C   JP       $D4C            ; Jump to D4C
$B3E    $6E68   LD       VE, #68         ; Load 104 into VE
$B40    $5C44   UNKNOWN  $5C44           ; Unknown 5xxx instruction
$B42    $A4DD   LD       I, $4DD         ; Load 4DD into I
$B44    $A15B   LD       I, $15B         ; Load 15B into I
$B46    $B55C   JP       V0, $55C        ; Jump to V0 + 55C
$B48    $FEDC   UNKNOWN  FEDC            ; Unknown Fxxx instruction
$B4A    $B2B4   JP       V0, $2B4        ; Jump to V0 + 2B4
$B4C    $C9E4   RND      V9, #E4         ; V9 = random & E4
$B4E    $0F7A   SYS      $F7A            ; System call to F7A
$B50    $512F   UNKNOWN  $512F           ; Unknown 5xxx instruction
$B52    $24B9   CALL     $4B9            ; Call subroutine at 4B9
$B54    $DC9A   DRW      VC, V9, #A      ; Draw 10-byte sprite at VC, V9
$B56    $4645   SNE      V6, #45         ; Skip if V6 != 69
$B58    $39F3   SE       V9, #F3         ; Skip if V9 == 243
$B5A    $3331   SE       V3, #31         ; Skip if V3 == 49
$B5C    $F0F9   UNKNOWN  F0F9            ; Unknown Fxxx instruction
$B5E    $764E   ADD      V6, #4E         ; Add 78 to V6
$B60    $BA5A   JP       V0, $A5A        ; Jump to V0 + A5A
$B62    $CC13   RND      VC, #13         ; VC = random & 13
$B64    $64A4   LD       V4, #A4         ; Load 164 into V4
$B66    $2E29   CALL     $E29            ; Call subroutine at E29
$B68    $E6D1   UNKNOWN  $E6D1           ; Unknown Exxx instruction
$B6A    $747A   ADD      V4, #7A         ; Add 122 to V4
$B6C    $7CF0   ADD      VC, #F0         ; Add 240 to VC
$B6E    $11F2   JP       $1F2            ; Jump to 1F2
$B70    $E6F8   UNKNOWN  $E6F8           ; Unknown Exxx instruction
$B72    $1038   JP       $038            ; Jump to 038
$B74    $D805   DRW      V8, V0, #5      ; Draw 5-byte sprite at V8, V0
$B76    $CB8B   RND      VB, #8B         ; VB = random & 8B
$B78    $E384   UNKNOWN  $E384           ; Unknown Exxx instruction
$B7A    $A5F9   LD       I, $5F9         ; Load 5F9 into I
$B7C    $BFD6   JP       V0, $FD6        ; Jump to V0 + FD6
$B7E    $2910   CALL     $910            ; Call subroutine at 910
$B80    $14DD   JP       $4DD            ; Jump to 4DD
$B82    $E207   UNKNOWN  $E207           ; Unknown Exxx instruction
$B84    $D6C6   DRW      V6, VC, #6      ; Draw 6-byte sprite at V6, VC
$B86    $99C2   UNKNOWN  $99C2           ; Unknown 9xxx instruction
$B88    $F287   UNKNOWN  F287            ; Unknown Fxxx instruction
$B8A    $E2C5   UNKNOWN  $E2C5           ; Unknown Exxx instruction
$B8C    $9EF3   UNKNOWN  $9EF3           ; Unknown 9xxx instruction
$B8E    $1CE7   JP       $CE7            ; Jump to CE7
$B90    $038E   SYS      $38E            ; System call to 38E
$B92    $ABBB   LD       I, $BBB         ; Load BBB into I
$B94    $B58D   JP       V0, $58D        ; Jump to V0 + 58D
$B96    $142F   JP       $42F            ; Jump to 42F
$B98    $80EA   UNKNOWN  80EA            ; Unknown 8xxx instruction
$B9A    $C54D   RND      V5, #4D         ; V5 = random & 4D
$B9C    $2E1D   CALL     $E1D            ; Call subroutine at E1D
$B9E    $F189   UNKNOWN  F189            ; Unknown Fxxx instruction
$BA0    $82A9   UNKNOWN  82A9            ; Unknown 8xxx instruction
$BA2    $9C7A   UNKNOWN  $9C7A           ; Unknown 9xxx instruction
$BA4    $A509   LD       I, $509         ; Load 509 into I
$BA6    $28BF   CALL     $8BF            ; Call subroutine at 8BF
$BA8    $F246   UNKNOWN  F246            ; Unknown Fxxx instruction
$BAA    $C145   RND      V1, #45         ; V1 = random & 45
$BAC    $C559   RND      V5, #59         ; V5 = random & 59
$BAE    $FE73   UNKNOWN  FE73            ; Unknown Fxxx instruction
$BB0    $5C9B   UNKNOWN  $5C9B           ; Unknown 5xxx instruction
$BB2    $4457   SNE      V4, #57         ; Skip if V4 != 87
$BB4    $0133   SYS      $133            ; System call to 133
$BB6    $4CA1   SNE      VC, #A1         ; Skip if VC != 161
$BB8    $5BCA   UNKNOWN  $5BCA           ; Unknown 5xxx instruction
$BBA    $3497   SE       V4, #97         ; Skip if V4 == 151
$BBC    $60FB   LD       V0, #FB         ; Load 251 into V0
$BBE    $63A5   LD       V3, #A5         ; Load 165 into V3
$BC0    $598D   UNKNOWN  $598D           ; Unknown 5xxx instruction
$BC2    $C715   RND      V7, #15         ; V7 = random & 15
$BC4    $8940   LD       V9, V4          ; V9 = V4
$BC6    $A2AD   LD       I, $2AD         ; Load 2AD into I
$BC8    $A099   LD       I, $099         ; Load 099 into I
$BCA    $CB33   RND      VB, #33         ; VB = random & 33
$BCC    $4ECB   SNE      VE, #CB         ; Skip if VE != 203
$BCE    $BDFE   JP       V0, $DFE        ; Jump to V0 + DFE
$BD0    $AEB4   LD       I, $EB4         ; Load EB4 into I
$BD2    $FC0E   UNKNOWN  FC0E            ; Unknown Fxxx instruction
$BD4    $0855   SYS      $855            ; System call to 855
$BD6    $E617   UNKNOWN  $E617           ; Unknown Exxx instruction
$BD8    $CDF9   RND      VD, #F9         ; VD = random & F9
$BDA    $7130   ADD      V1, #30         ; Add 48 to V1
$BDC    $D531   DRW      V5, V3, #1      ; Draw 1-byte sprite at V5, V3
$BDE    $F978   UNKNOWN  F978            ; Unknown Fxxx instruction
$BE0    $0DF7   SYS      $DF7            ; System call to DF7
$BE2    $61A7   LD       V1, #A7         ; Load 167 into V1
$BE4    $088D   SYS      $88D            ; System call to 88D
$BE6    $82A2   AND      V2, VA          ; V2 &= VA
$BE8    $63EA   LD       V3, #EA         ; Load 234 into V3
$BEA    $D958   DRW      V9, V5, #8      ; Draw 8-byte sprite at V9, V5
$BEC    $5F5F   UNKNOWN  $5F5F           ; Unknown 5xxx instruction
$BEE    $1371   JP       $371            ; Jump to 371
$BF0    $A316   LD       I, $316         ; Load 316 into I
$BF2    $C2E9   RND      V2, #E9         ; V2 = random & E9
$BF4    $432E   SNE      V3, #2E         ; Skip if V3 != 46
$BF6    $98FE   UNKNOWN  $98FE           ; Unknown 9xxx instruction
$BF8    $1D62   JP       $D62            ; Jump to D62
$BFA    $1642   JP       $642            ; Jump to 642
$BFC    $E297   UNKNOWN  $E297           ; Unknown Exxx instruction
$BFE    $8AA9   UNKNOWN  8AA9            ; Unknown 8xxx instruction
$C00    $04BE   SYS      $4BE            ; System call to 4BE
$C02    $105F   JP       $05F            ; Jump to 05F
$C04    $2961   CALL     $961            ; Call subroutine at 961
$C06    $7347   ADD      V3, #47         ; Add 71 to V3
$C08    $B663   JP       V0, $663        ; Jump to V0 + 663
$C0A    $62EF   LD       V2, #EF         ; Load 239 into V2
$C0C    $4C37   SNE      VC, #37         ; Skip if VC != 55
$C0E    $4083   SNE      V0, #83         ; Skip if V0 != 131
$C10    $2AB8   CALL     $AB8            ; Call subroutine at AB8
$C12    $FC32   UNKNOWN  FC32            ; Unknown Fxxx instruction
$C14    $1D2B   JP       $D2B            ; Jump to D2B
$C16    $E73F   UNKNOWN  $E73F           ; Unknown Exxx instruction
$C18    $723B   ADD      V2, #3B         ; Add 59 to V2
$C1A    $6E40   LD       VE, #40         ; Load 64 into VE
$C1C    $CB4F   RND      VB, #4F         ; VB = random & 4F
$C1E    $9BC3   UNKNOWN  $9BC3           ; Unknown 9xxx instruction
$C20    $F4A2   UNKNOWN  F4A2            ; Unknown Fxxx instruction
$C22    $DF34   DRW      VF, V3, #4      ; Draw 4-byte sprite at VF, V3
$C24    $2383   CALL     $383            ; Call subroutine at 383
$C26    $EF34   UNKNOWN  $EF34           ; Unknown Exxx instruction
$C28    $C9E1   RND      V9, #E1         ; V9 = random & E1
$C2A    $74D9   ADD      V4, #D9         ; Add 217 to V4
$C2C    $8D4F   UNKNOWN  8D4F            ; Unknown 8xxx instruction
$C2E    $974A   UNKNOWN  $974A           ; Unknown 9xxx instruction
$C30    $ADF7   LD       I, $DF7         ; Load DF7 into I
$C32    $6418   LD       V4, #18         ; Load 24 into V4
$C34    $343F   SE       V4, #3F         ; Skip if V4 == 63
$C36    $9AC7   UNKNOWN  $9AC7           ; Unknown 9xxx instruction
$C38    $3D67   SE       VD, #67         ; Skip if VD == 103
$C3A    $BA80   JP       V0, $A80        ; Jump to V0 + A80
$C3C    $13C3   JP       $3C3            ; Jump to 3C3
$C3E    $C0D1   RND      V0, #D1         ; V0 = random & D1
$C40    $B42A   JP       V0, $42A        ; Jump to V0 + 42A
$C42    $0BAC   SYS      $BAC            ; System call to BAC
$C44    $6973   LD       V9, #73         ; Load 115 into V9
$C46    $6DF8   LD       VD, #F8         ; Load 248 into VD
$C48    $4613   SNE      V6, #13         ; Skip if V6 != 19
$C4A    $ECAB   UNKNOWN  $ECAB           ; Unknown Exxx instruction
$C4C    $9E8B   UNKNOWN  $9E8B           ; Unknown 9xxx instruction
$C4E    $FE1C   UNKNOWN  FE1C            ; Unknown Fxxx instruction
$C50    $C753   RND      V7, #53         ; V7 = random & 53
$C52    $95F1   UNKNOWN  $95F1           ; Unknown 9xxx instruction
$C54    $FC32   UNKNOWN  FC32            ; Unknown Fxxx instruction
$C56    $5448   UNKNOWN  $5448           ; Unknown 5xxx instruction
$C58    $42E2   SNE      V2, #E2         ; Skip if V2 != 226
$C5A    $AC89   LD       I, $C89         ; Load C89 into I
$C5C    $7855   ADD      V8, #55         ; Add 85 to V8
$C5E    $464B   SNE      V6, #4B         ; Skip if V6 != 75
$C60    $42C1   SNE      V2, #C1         ; Skip if V2 != 193
$C62    $BB17   JP       V0, $B17        ; Jump to V0 + B17
$C64    $1E88   JP       $E88            ; Jump to E88
$C66    $D1D4   DRW      V1, VD, #4      ; Draw 4-byte sprite at V1, VD
$C68    $88A2   AND      V8, VA          ; V8 &= VA
$C6A    $0939   SYS      $939            ; System call to 939
$C6C    $07D7   SYS      $7D7            ; System call to 7D7
$C6E    $FF1A   UNKNOWN  FF1A            ; Unknown Fxxx instruction
$C70    $C848   RND      V8, #48         ; V8 = random & 48
$C72    $7759   ADD      V7, #59         ; Add 89 to V7
$C74    $BF15   JP       V0, $F15        ; Jump to V0 + F15
$C76    $4BC3   SNE      VB, #C3         ; Skip if VB != 195
$C78    $98EB   UNKNOWN  $98EB           ; Unknown 9xxx instruction
$C7A    $D636   DRW      V6, V3, #6      ; Draw 6-byte sprite at V6, V3
$C7C    $9FDE   UNKNOWN  $9FDE           ; Unknown 9xxx instruction
$C7E    $046F   SYS      $46F            ; System call to 46F
$C80    $0A33   SYS      $A33            ; System call to A33
$C82    $A635   LD       I, $635         ; Load 635 into I
$C84    $62E5   LD       V2, #E5         ; Load 229 into V2
$C86    $D709   DRW      V7, V0, #9      ; Draw 9-byte sprite at V7, V0
$C88    $8978   UNKNOWN  8978            ; Unknown 8xxx instruction
$C8A    $EB40   UNKNOWN  $EB40           ; Unknown Exxx instruction
$C8C    $F3A7   UNKNOWN  F3A7            ; Unknown Fxxx instruction
$C8E    $DB6A   DRW      VB, V6, #A      ; Draw 10-byte sprite at VB, V6
$C90    $6C82   LD       VC, #82         ; Load 130 into VC
$C92    $D2FE   DRW      V2, VF, #E      ; Draw 14-byte sprite at V2, VF
$C94    $4F28   SNE      VF, #28         ; Skip if VF != 40
$C96    $DF7F   DRW      VF, V7, #F      ; Draw 15-byte sprite at VF, V7
$C98    $D934   DRW      V9, V3, #4      ; Draw 4-byte sprite at V9, V3
$C9A    $DDA1   DRW      VD, VA, #1      ; Draw 1-byte sprite at VD, VA
$C9C    $6027   LD       V0, #27         ; Load 39 into V0
$C9E    $33E7   SE       V3, #E7         ; Skip if V3 == 231
$CA0    $4C1B   SNE      VC, #1B         ; Skip if VC != 27
$CA2    $3BF6   SE       VB, #F6         ; Skip if VB == 246
$CA4    $DCD9   DRW      VC, VD, #9      ; Draw 9-byte sprite at VC, VD
$CA6    $86C2   AND      V6, VC          ; V6 &= VC
$CA8    $0C9C   SYS      $C9C            ; System call to C9C
$CAA    $54B0   SE       V4, VB          ; Skip if V4 == VB
$CAC    $B0ED   JP       V0, $0ED        ; Jump to V0 + 0ED
$CAE    $31F9   SE       V1, #F9         ; Skip if V1 == 249
$CB0    $93C3   UNKNOWN  $93C3           ; Unknown 9xxx instruction
$CB2    $8D44   ADD      VD, V4          ; VD += V4, VF = carry
$CB4    $9B1D   UNKNOWN  $9B1D           ; Unknown 9xxx instruction
$CB6    $BEE5   JP       V0, $EE5        ; Jump to V0 + EE5
$CB8    $A9E9   LD       I, $9E9         ; Load 9E9 into I
$CBA    $782A   ADD      V8, #2A         ; Add 42 to V8
$CBC    $CA84   RND      VA, #84         ; VA = random & 84
$CBE    $9529   UNKNOWN  $9529           ; Unknown 9xxx instruction
$CC0    $6ED5   LD       VE, #D5         ; Load 213 into VE
$CC2    $F8BB   UNKNOWN  F8BB            ; Unknown Fxxx instruction
$CC4    $E7F6   UNKNOWN  $E7F6           ; Unknown Exxx instruction
$CC6    $FC93   UNKNOWN  FC93            ; Unknown Fxxx instruction
$CC8    $DC6D   DRW      VC, V6, #D      ; Draw 13-byte sprite at VC, V6
$CCA    $3401   SE       V4, #01         ; Skip if V4 == 1
$CCC    $A3C8   LD       I, $3C8         ; Load 3C8 into I
$CCE    $50E2   UNKNOWN  $50E2           ; Unknown 5xxx instruction
$CD0    $193D   JP       $93D            ; Jump to 93D
$CD2    $EE9E   SKP      VE              ; Skip if key VE pressed
$CD4    $CD31   RND      VD, #31         ; VD = random & 31
$CD6    $9C0E   UNKNOWN  $9C0E           ; Unknown 9xxx instruction
$CD8    $967C   UNKNOWN  $967C           ; Unknown 9xxx instruction
$CDA    $EEEA   UNKNOWN  $EEEA           ; Unknown Exxx instruction
$CDC    $E9FB   UNKNOWN  $E9FB           ; Unknown Exxx instruction
$CDE    $73E6   ADD      V3, #E6         ; Add 230 to V3
$CE0    $1A21   JP       $A21            ; Jump to A21
$CE2    $6A9D   LD       VA, #9D         ; Load 157 into VA
$CE4    $45F2   SNE      V5, #F2         ; Skip if V5 != 242
$CE6    $67BA   LD       V7, #BA         ; Load 186 into V7
$CE8    $0B9A   SYS      $B9A            ; System call to B9A
$CEA    $E308   UNKNOWN  $E308           ; Unknown Exxx instruction
$CEC    $8E48   UNKNOWN  8E48            ; Unknown 8xxx instruction
$CEE    $FB3F   UNKNOWN  FB3F            ; Unknown Fxxx instruction
$CF0    $023F   SYS      $23F            ; System call to 23F
$CF2    $9B37   UNKNOWN  $9B37           ; Unknown 9xxx instruction
$CF4    $DE33   DRW      VE, V3, #3      ; Draw 3-byte sprite at VE, V3
$CF6    $54A6   UNKNOWN  $54A6           ; Unknown 5xxx instruction
$CF8    $CBCC   RND      VB, #CC         ; VB = random & CC
$CFA    $1605   JP       $605            ; Jump to 605
$CFC    $C8B2   RND      V8, #B2         ; V8 = random & B2
$CFE    $4F2C   SNE      VF, #2C         ; Skip if VF != 44
$D00    $F162   UNKNOWN  F162            ; Unknown Fxxx instruction
$D02    $4619   SNE      V6, #19         ; Skip if V6 != 25
$D04    $2AFD   CALL     $AFD            ; Call subroutine at AFD
$D06    $660C   LD       V6, #0C         ; Load 12 into V6
$D08    $674E   LD       V7, #4E         ; Load 78 into V7
$D0A    $A40C   LD       I, $40C         ; Load 40C into I
$D0C    $034F   SYS      $34F            ; System call to 34F
$D0E    $3106   SE       V1, #06         ; Skip if V1 == 6
$D10    $E312   UNKNOWN  $E312           ; Unknown Exxx instruction
$D12    $DA12   DRW      VA, V1, #2      ; Draw 2-byte sprite at VA, V1
$D14    $4572   SNE      V5, #72         ; Skip if V5 != 114
$D16    $C12C   RND      V1, #2C         ; V1 = random & 2C
$D18    $EB83   UNKNOWN  $EB83           ; Unknown Exxx instruction
$D1A    $069D   SYS      $69D            ; System call to 69D
$D1C    $BB5B   JP       V0, $B5B        ; Jump to V0 + B5B
$D1E    $146D   JP       $46D            ; Jump to 46D
$D20    $96B4   UNKNOWN  $96B4           ; Unknown 9xxx instruction
$D22    $FC78   UNKNOWN  FC78            ; Unknown Fxxx instruction
$D24    $6E28   LD       VE, #28         ; Load 40 into VE
$D26    $8718   UNKNOWN  8718            ; Unknown 8xxx instruction
$D28    $7EDA   ADD      VE, #DA         ; Add 218 to VE
$D2A    $6BA4   LD       VB, #A4         ; Load 164 into VB
$D2C    $6112   LD       V1, #12         ; Load 18 into V1
$D2E    $2BD9   CALL     $BD9            ; Call subroutine at BD9
$D30    $E7A2   UNKNOWN  $E7A2           ; Unknown Exxx instruction
$D32    $F6A7   UNKNOWN  F6A7            ; Unknown Fxxx instruction
$D34    $A981   LD       I, $981         ; Load 981 into I
$D36    $DF9C   DRW      VF, V9, #C      ; Draw 12-byte sprite at VF, V9
$D38    $6FBF   LD       VF, #BF         ; Load 191 into VF
$D3A    $4D00   SNE      VD, #00         ; Skip if VD != 0
$D3C    $0CCF   SYS      $CCF            ; System call to CCF
$D3E    $8ACA   UNKNOWN  8ACA            ; Unknown 8xxx instruction
$D40    $9796   UNKNOWN  $9796           ; Unknown 9xxx instruction
$D42    $6C24   LD       VC, #24         ; Load 36 into VC
$D44    $739D   ADD      V3, #9D         ; Add 157 to V3
$D46    $476E   SNE      V7, #6E         ; Skip if V7 != 110
$D48    $0C8E   SYS      $C8E            ; System call to C8E
$D4A    $4596   SNE      V5, #96         ; Skip if V5 != 150
$D4C    $E311   UNKNOWN  $E311           ; Unknown Exxx instruction
$D4E    $ED35   UNKNOWN  $ED35           ; Unknown Exxx instruction
$D50    $4AAA   SNE      VA, #AA         ; Skip if VA != 170
$D52    $38EB   SE       V8, #EB         ; Skip if V8 == 235
$D54    $565D   UNKNOWN  $565D           ; Unknown 5xxx instruction
$D56    $FD4E   UNKNOWN  FD4E            ; Unknown Fxxx instruction
$D58    $5672   UNKNOWN  $5672           ; Unknown 5xxx instruction
$D5A    $C616   RND      V6, #16         ; V6 = random & 16
$D5C    $46D4   SNE      V6, #D4         ; Skip if V6 != 212
$D5E    $9D13   UNKNOWN  $9D13           ; Unknown 9xxx instruction
$D60    $93FC   UNKNOWN  $93FC           ; Unknown 9xxx instruction
$D62    $94B7   UNKNOWN  $94B7           ; Unknown 9xxx instruction
$D64    $A409   LD       I, $409         ; Load 409 into I
$D66    $4E9F   SNE      VE, #9F         ; Skip if VE != 159
$D68    $D606   DRW      V6, V0, #6      ; Draw 6-byte sprite at V6, V0
$D6A    $6CE5   LD       VC, #E5         ; Load 229 into VC
$D6C    $B423   JP       V0, $423        ; Jump to V0 + 423
$D6E    $7966   ADD      V9, #66         ; Add 102 to V9
$D70    $F125   UNKNOWN  F125            ; Unknown Fxxx instruction
$D72    $0730   SYS      $730            ; System call to 730
$D74    $80FF   UNKNOWN  80FF            ; Unknown 8xxx instruction
$D76    $465C   SNE      V6, #5C         ; Skip if V6 != 92
$D78    $3EFE   SE       VE, #FE         ; Skip if VE == 254
$D7A    $A95E   LD       I, $95E         ; Load 95E into I
$D7C    $3732   SE       V7, #32         ; Skip if V7 == 50
$D7E    $DB6A   DRW      VB, V6, #A      ; Draw 10-byte sprite at VB, V6
$D80    $8FA6   SHR      VF              ; VF >>= 1, VF = LSB
$D82    $D580   DRW      V5, V8, #0      ; Draw 0-byte sprite at V5, V8
$D84    $B0D4   JP       V0, $0D4        ; Jump to V0 + 0D4
$D86    $06F1   SYS      $6F1            ; System call to 6F1
$D88    $0201   SYS      $201            ; System call to 201
$D8A    $4477   SNE      V4, #77         ; Skip if V4 != 119
$D8C    $6115   LD       V1, #15         ; Load 21 into V1
$D8E    $DB4C   DRW      VB, V4, #C      ; Draw 12-byte sprite at VB, V4
$D90    $D994   DRW      V9, V9, #4      ; Draw 4-byte sprite at V9, V9
$D92    $CFB9   RND      VF, #B9         ; VF = random & B9
$D94    $D079   DRW      V0, V7, #9      ; Draw 9-byte sprite at V0, V7
$D96    $2810   CALL     $810            ; Call subroutine at 810
$D98    $F8A8   UNKNOWN  F8A8            ; Unknown Fxxx instruction
$D9A    $7269   ADD      V2, #69         ; Add 105 to V2
$D9C    $3ECE   SE       VE, #CE         ; Skip if VE == 206
$D9E    $1D08   JP       $D08            ; Jump to D08
$DA0    $7F4E   ADD      VF, #4E         ; Add 78 to VF
$DA2    $949E   UNKNOWN  $949E           ; Unknown 9xxx instruction
$DA4    $D629   DRW      V6, V2, #9      ; Draw 9-byte sprite at V6, V2
$DA6    $48BB   SNE      V8, #BB         ; Skip if V8 != 187
$DA8    $7114   ADD      V1, #14         ; Add 20 to V1
$DAA    $9765   UNKNOWN  $9765           ; Unknown 9xxx instruction
$DAC    $CE30   RND      VE, #30         ; VE = random & 30
$DAE    $E90B   UNKNOWN  $E90B           ; Unknown Exxx instruction
$DB0    $060B   SYS      $60B            ; System call to 60B
$DB2    $D82A   DRW      V8, V2, #A      ; Draw 10-byte sprite at V8, V2
$DB4    $09FE   SYS      $9FE            ; System call to 9FE
$DB6    $39F4   SE       V9, #F4         ; Skip if V9 == 244
$DB8    $9CE3   UNKNOWN  $9CE3           ; Unknown 9xxx instruction
$DBA    $2E6F   CALL     $E6F            ; Call subroutine at E6F
$DBC    $4D7A   SNE      VD, #7A         ; Skip if VD != 122
$DBE    $C99D   RND      V9, #9D         ; V9 = random & 9D
$DC0    $165D   JP       $65D            ; Jump to 65D
$DC2    $318F   SE       V1, #8F         ; Skip if V1 == 143
$DC4    $2D3F   CALL     $D3F            ; Call subroutine at D3F
$DC6    $75B0   ADD      V5, #B0         ; Add 176 to V5
$DC8    $9BA8   UNKNOWN  $9BA8           ; Unknown 9xxx instruction
$DCA    $6E43   LD       VE, #43         ; Load 67 into VE
$DCC    $8617   SUBN     V6, V1          ; V6 = V1 - V6, VF = !borrow
$DCE    $9E1B   UNKNOWN  $9E1B           ; Unknown 9xxx instruction
$DD0    $5673   UNKNOWN  $5673           ; Unknown 5xxx instruction
$DD2    $3230   SE       V2, #30         ; Skip if V2 == 48
$DD4    $7A6E   ADD      VA, #6E         ; Add 110 to VA
$DD6    $9A7E   UNKNOWN  $9A7E           ; Unknown 9xxx instruction
$DD8    $842A   UNKNOWN  842A            ; Unknown 8xxx instruction
$DDA    $AD3E   LD       I, $D3E         ; Load D3E into I
$DDC    $2F59   CALL     $F59            ; Call subroutine at F59
$DDE    $41D0   SNE      V1, #D0         ; Skip if V1 != 208
$DE0    $F906   UNKNOWN  F906            ; Unknown Fxxx instruction
$DE2    $C442   RND      V4, #42         ; V4 = random & 42
$DE4    $A5AD   LD       I, $5AD         ; Load 5AD into I
$DE6    $57F4   UNKNOWN  $57F4           ; Unknown 5xxx instruction
$DE8    $FEEB   UNKNOWN  FEEB            ; Unknown Fxxx instruction
$DEA    $60F6   LD       V0, #F6         ; Load 246 into V0
$DEC    $EF15   UNKNOWN  $EF15           ; Unknown Exxx instruction
$DEE    $EC1B   UNKNOWN  $EC1B           ; Unknown Exxx instruction
$DF0    $BEB2   JP       V0, $EB2        ; Jump to V0 + EB2
$DF2    $9370   SNE      V3, V7          ; Skip if V3 != V7
$DF4    $CB42   RND      VB, #42         ; VB = random & 42
$DF6    $2968   CALL     $968            ; Call subroutine at 968
$DF8    $E3AE   UNKNOWN  $E3AE           ; Unknown Exxx instruction
$DFA    $41D5   SNE      V1, #D5         ; Skip if V1 != 213
$DFC    $BAE6   JP       V0, $AE6        ; Jump to V0 + AE6
$DFE    $B90A   JP       V0, $90A        ; Jump to V0 + 90A
$E00    $E711   UNKNOWN  $E711           ; Unknown Exxx instruction
$E02    $3ACD   SE       VA, #CD         ; Skip if VA == 205
$E04    $5B8E   UNKNOWN  $5B8E           ; Unknown 5xxx instruction
$E06    $E87E   UNKNOWN  $E87E           ; Unknown Exxx instruction
$E08    $CCED   RND      VC, #ED         ; VC = random & ED
$E0A    $BC46   JP       V0, $C46        ; Jump to V0 + C46
$E0C    $6B95   LD       VB, #95         ; Load 149 into VB
$E0E    $3991   SE       V9, #91         ; Skip if V9 == 145
$E10    $55E6   UNKNOWN  $55E6           ; Unknown 5xxx instruction
$E12    $EC25   UNKNOWN  $EC25           ; Unknown Exxx instruction
$E14    $E751   UNKNOWN  $E751           ; Unknown Exxx instruction
$E16    $028C   SYS      $28C            ; System call to 28C
$E18    $9D69   UNKNOWN  $9D69           ; Unknown 9xxx instruction
$E1A    $2C7D   CALL     $C7D            ; Call subroutine at C7D
$E1C    $33C3   SE       V3, #C3         ; Skip if V3 == 195
$E1E    $1484   JP       $484            ; Jump to 484
$E20    $886A   UNKNOWN  886A            ; Unknown 8xxx instruction
$E22    $7F21   ADD      VF, #21         ; Add 33 to VF
$E24    $51E2   UNKNOWN  $51E2           ; Unknown 5xxx instruction
$E26    $95A0   SNE      V5, VA          ; Skip if V5 != VA
$E28    $9FBF   UNKNOWN  $9FBF           ; Unknown 9xxx instruction
$E2A    $5394   UNKNOWN  $5394           ; Unknown 5xxx instruction
$E2C    $ED73   UNKNOWN  $ED73           ; Unknown Exxx instruction
$E2E    $DBD5   DRW      VB, VD, #5      ; Draw 5-byte sprite at VB, VD
$E30    $3919   SE       V9, #19         ; Skip if V9 == 25
$E32    $F78C   UNKNOWN  F78C            ; Unknown Fxxx instruction
$E34    $DEF2   DRW      VE, VF, #2      ; Draw 2-byte sprite at VE, VF
$E36    $1BD5   JP       $BD5            ; Jump to BD5
$E38    $AA3A   LD       I, $A3A         ; Load A3A into I
$E3A    $D77F   DRW      V7, V7, #F      ; Draw 15-byte sprite at V7, V7
$E3C    $AAF7   LD       I, $AF7         ; Load AF7 into I
$E3E    $CFC2   RND      VF, #C2         ; VF = random & C2
$E40    $7F9B   ADD      VF, #9B         ; Add 155 to VF
$E42    $94A7   UNKNOWN  $94A7           ; Unknown 9xxx instruction
$E44    $FA4E   UNKNOWN  FA4E            ; Unknown Fxxx instruction
$E46    $53D4   UNKNOWN  $53D4           ; Unknown 5xxx instruction
$E48    $59FD   UNKNOWN  $59FD           ; Unknown 5xxx instruction
$E4A    $4399   SNE      V3, #99         ; Skip if V3 != 153
$E4C    $C66E   RND      V6, #6E         ; V6 = random & 6E
$E4E    $3562   SE       V5, #62         ; Skip if V5 == 98
$E50    $54C5   UNKNOWN  $54C5           ; Unknown 5xxx instruction
$E52    $7E01   ADD      VE, #01         ; Add 1 to VE
$E54    $7244   ADD      V2, #44         ; Add 68 to V2
$E56    $3622   SE       V6, #22         ; Skip if V6 == 34
$E58    $5211   UNKNOWN  $5211           ; Unknown 5xxx instruction
$E5A    $C0A4   RND      V0, #A4         ; V0 = random & A4
$E5C    $5EE8   UNKNOWN  $5EE8           ; Unknown 5xxx instruction
$E5E    $5D3A   UNKNOWN  $5D3A           ; Unknown 5xxx instruction
$E60    $0A65   SYS      $A65            ; System call to A65
$E62    $329F   SE       V2, #9F         ; Skip if V2 == 159
$E64    $C474   RND      V4, #74         ; V4 = random & 74
$E66    $0D82   SYS      $D82            ; System call to D82
$E68    $34BF   SE       V4, #BF         ; Skip if V4 == 191
$E6A    $AC58   LD       I, $C58         ; Load C58 into I
$E6C    $D4D7   DRW      V4, VD, #7      ; Draw 7-byte sprite at V4, VD
$E6E    $E28C   UNKNOWN  $E28C           ; Unknown Exxx instruction
$E70    $A194   LD       I, $194         ; Load 194 into I
$E72    $0070   SYS      $070            ; System call to 070
$E74    $44D2   SNE      V4, #D2         ; Skip if V4 != 210
$E76    $C00A   RND      V0, #0A         ; V0 = random & 0A
$E78    $C791   RND      V7, #91         ; V7 = random & 91
$E7A    $A3B9   LD       I, $3B9         ; Load 3B9 into I
$E7C    $654A   LD       V5, #4A         ; Load 74 into V5
$E7E    $F846   UNKNOWN  F846            ; Unknown Fxxx instruction
$E80    $B2AF   JP       V0, $2AF        ; Jump to V0 + 2AF
$E82    $C754   RND      V7, #54         ; V7 = random & 54
$E84    $25C7   CALL     $5C7            ; Call subroutine at 5C7
$E86    $9E5F   UNKNOWN  $9E5F           ; Unknown 9xxx instruction
$E88    $B0E3   JP       V0, $0E3        ; Jump to V0 + 0E3
$E8A    $BD89   JP       V0, $D89        ; Jump to V0 + D89
$E8C    $57F7   UNKNOWN  $57F7           ; Unknown 5xxx instruction
$E8E    $CA06   RND      VA, #06         ; VA = random & 06
$E90    $35B3   SE       V5, #B3         ; Skip if V5 == 179
$E92    $7BA5   ADD      VB, #A5         ; Add 165 to VB
$E94    $2427   CALL     $427            ; Call subroutine at 427
$E96    $DF39   DRW      VF, V3, #9      ; Draw 9-byte sprite at VF, V3
$E98    $C2A6   RND      V2, #A6         ; V2 = random & A6
$E9A    $6C39   LD       VC, #39         ; Load 57 into VC
$E9C    $01E3   SYS      $1E3            ; System call to 1E3
$E9E    $C4C6   RND      V4, #C6         ; V4 = random & C6
$EA0    $27EA   CALL     $7EA            ; Call subroutine at 7EA
$EA2    $E8BB   UNKNOWN  $E8BB           ; Unknown Exxx instruction
$EA4    $B8A9   JP       V0, $8A9        ; Jump to V0 + 8A9
$EA6    $7BE2   ADD      VB, #E2         ; Add 226 to VB
$EA8    $999B   UNKNOWN  $999B           ; Unknown 9xxx instruction
$EAA    $1707   JP       $707            ; Jump to 707
$EAC    $27A8   CALL     $7A8            ; Call subroutine at 7A8
$EAE    $A82D   LD       I, $82D         ; Load 82D into I
$EB0    $451D   SNE      V5, #1D         ; Skip if V5 != 29
$EB2    $3259   SE       V2, #59         ; Skip if V2 == 89
$EB4    $D8D5   DRW      V8, VD, #5      ; Draw 5-byte sprite at V8, VD
$EB6    $0ADF   SYS      $ADF            ; System call to ADF
$EB8    $B091   JP       V0, $091        ; Jump to V0 + 091
$EBA    $B593   JP       V0, $593        ; Jump to V0 + 593
$EBC    $E10F   UNKNOWN  $E10F           ; Unknown Exxx instruction
$EBE    $4F68   SNE      VF, #68         ; Skip if VF != 104
$EC0    $B392   JP       V0, $392        ; Jump to V0 + 392
$EC2    $A6FB   LD       I, $6FB         ; Load 6FB into I
$EC4    $3EF6   SE       VE, #F6         ; Skip if VE == 246
$EC6    $88F2   AND      V8, VF          ; V8 &= VF
$EC8    $5667   UNKNOWN  $5667           ; Unknown 5xxx instruction
$ECA    $7359   ADD      V3, #59         ; Add 89 to V3
$ECC    $D325   DRW      V3, V2, #5      ; Draw 5-byte sprite at V3, V2
$ECE    $6827   LD       V8, #27         ; Load 39 into V8
$ED0    $0B94   SYS      $B94            ; System call to B94
$ED2    $2B87   CALL     $B87            ; Call subroutine at B87
$ED4    $90A7   UNKNOWN  $90A7           ; Unknown 9xxx instruction
$ED6    $9898   UNKNOWN  $9898           ; Unknown 9xxx instruction
$ED8    $048E   SYS      $48E            ; System call to 48E
$EDA    $66A0   LD       V6, #A0         ; Load 160 into V6
$EDC    $E070   UNKNOWN  $E070           ; Unknown Exxx instruction
$EDE    $2463   CALL     $463            ; Call subroutine at 463
$EE0    $15DC   JP       $5DC            ; Jump to 5DC
$EE2    $91D4   UNKNOWN  $91D4           ; Unknown 9xxx instruction
$EE4    $0293   SYS      $293            ; System call to 293
$EE6    $5DF4   UNKNOWN  $5DF4           ; Unknown 5xxx instruction
$EE8    $5C5A   UNKNOWN  $5C5A           ; Unknown 5xxx instruction
$EEA    $C9EA   RND      V9, #EA         ; V9 = random & EA
$EEC    $5123   UNKNOWN  $5123           ; Unknown 5xxx instruction
$EEE    $762D   ADD      V6, #2D         ; Add 45 to V6
$EF0    $54BE   UNKNOWN  $54BE           ; Unknown 5xxx instruction
$EF2    $2E8E   CALL     $E8E            ; Call subroutine at E8E
$EF4    $C8A5   RND      V8, #A5         ; V8 = random & A5
$EF6    $9A79   UNKNOWN  $9A79           ; Unknown 9xxx instruction
$EF8    $77C5   ADD      V7, #C5         ; Add 197 to V7
$EFA    $7450   ADD      V4, #50         ; Add 80 to V4
$EFC    $3DE8   SE       VD, #E8         ; Skip if VD == 232
$EFE    $8AA6   SHR      VA              ; VA >>= 1, VF = LSB
$F00    $8C43   XOR      VC, V4          ; VC ^= V4
$F02    $30A8   SE       V0, #A8         ; Skip if V0 == 168
$F04    $98B9   UNKNOWN  $98B9           ; Unknown 9xxx instruction
$F06    $BC38   JP       V0, $C38        ; Jump to V0 + C38
$F08    $2504   CALL     $504            ; Call subroutine at 504
$F0A    $D6BB   DRW      V6, VB, #B      ; Draw 11-byte sprite at V6, VB
$F0C    $DCA1   DRW      VC, VA, #1      ; Draw 1-byte sprite at VC, VA
$F0E    $0FFF   SYS      $FFF            ; System call to FFF
$F10    $1F4D   JP       $F4D            ; Jump to F4D
$F12    $7337   ADD      V3, #37         ; Add 55 to V3
$F14    $9588   UNKNOWN  $9588           ; Unknown 9xxx instruction
$F16    $4995   SNE      V9, #95         ; Skip if V9 != 149
$F18    $E048   UNKNOWN  $E048           ; Unknown Exxx instruction
$F1A    $8545   SUB      V5, V4          ; V5 -= V4, VF = !borrow
$F1C    $F498   UNKNOWN  F498            ; Unknown Fxxx instruction
$F1E    $D0DC   DRW      V0, VD, #C      ; Draw 12-byte sprite at V0, VD
$F20    $0857   SYS      $857            ; System call to 857
$F22    $140C   JP       $40C            ; Jump to 40C
$F24    $E938   UNKNOWN  $E938           ; Unknown Exxx instruction
$F26    $D3FB   DRW      V3, VF, #B      ; Draw 11-byte sprite at V3, VF
$F28    $E55D   UNKNOWN  $E55D           ; Unknown Exxx instruction
$F2A    $1186   JP       $186            ; Jump to 186
$F2C    $2360   CALL     $360            ; Call subroutine at 360
$F2E    $5F1D   UNKNOWN  $5F1D           ; Unknown 5xxx instruction
$F30    $BA5F   JP       V0, $A5F        ; Jump to V0 + A5F
$F32    $8685   SUB      V6, V8          ; V6 -= V8, VF = !borrow
$F34    $0882   SYS      $882            ; System call to 882
$F36    $F733   LD       B, V7           ; Store BCD of V7 at I, I+1, I+2
$F38    $2084   CALL     $084            ; Call subroutine at 084
$F3A    $432B   SNE      V3, #2B         ; Skip if V3 != 43
$F3C    $4923   SNE      V9, #23         ; Skip if V9 != 35
$F3E    $AB89   LD       I, $B89         ; Load B89 into I
$F40    $7325   ADD      V3, #25         ; Add 37 to V3
$F42    $512B   UNKNOWN  $512B           ; Unknown 5xxx instruction
$F44    $B748   JP       V0, $748        ; Jump to V0 + 748
$F46    $8A17   SUBN     VA, V1          ; VA = V1 - VA, VF = !borrow
$F48    $5B13   UNKNOWN  $5B13           ; Unknown 5xxx instruction
$F4A    $8A7D   UNKNOWN  8A7D            ; Unknown 8xxx instruction
$F4C    $D45F   DRW      V4, V5, #F      ; Draw 15-byte sprite at V4, V5
$F4E    $166F   JP       $66F            ; Jump to 66F
$F50    $C710   RND      V7, #10         ; V7 = random & 10
$F52    $F84D   UNKNOWN  F84D            ; Unknown Fxxx instruction
$F54    $CF88   RND      VF, #88         ; VF = random & 88
$F56    $2DA5   CALL     $DA5            ; Call subroutine at DA5
$F58    $2A2B   CALL     $A2B            ; Call subroutine at A2B
$F5A    $AB09   LD       I, $B09         ; Load B09 into I
$F5C    $E22C   UNKNOWN  $E22C           ; Unknown Exxx instruction
$F5E    $50AB   UNKNOWN  $50AB           ; Unknown 5xxx instruction
$F60    $4342   SNE      V3, #42         ; Skip if V3 != 66
$F62    $A8D7   LD       I, $8D7         ; Load 8D7 into I
$F64    $2305   CALL     $305            ; Call subroutine at 305
$F66    $B3B1   JP       V0, $3B1        ; Jump to V0 + 3B1
$F68    $7AEF   ADD      VA, #EF         ; Add 239 to VA
$F6A    $02E9   SYS      $2E9            ; System call to 2E9
$F6C    $6BD6   LD       VB, #D6         ; Load 214 into VB
$F6E    $6C75   LD       VC, #75         ; Load 117 into VC
$F70    $352B   SE       V5, #2B         ; Skip if V5 == 43
$F72    $80C8   UNKNOWN  80C8            ; Unknown 8xxx instruction
$F74    $5FD3   UNKNOWN  $5FD3           ; Unknown 5xxx instruction
$F76    $6EB6   LD       VE, #B6         ; Load 182 into VE
$F78    $4884   SNE      V8, #84         ; Skip if V8 != 132
$F7A    $F8FD   UNKNOWN  F8FD            ; Unknown Fxxx instruction
$F7C    $C199   RND      V1, #99         ; V1 = random & 99
$F7E    $68CE   LD       V8, #CE         ; Load 206 into V8
$F80    $7690   ADD      V6, #90         ; Add 144 to V6
$F82    $FEA1   UNKNOWN  FEA1            ; Unknown Fxxx instruction
$F84    $45D4   SNE      V5, #D4         ; Skip if V5 != 212
$F86    $EBF7   UNKNOWN  $EBF7           ; Unknown Exxx instruction
$F88    $0EBF   SYS      $EBF            ; System call to EBF
$F8A    $DFD0   DRW      VF, VD, #0      ; Draw 0-byte sprite at VF, VD
$F8C    $6F63   LD       VF, #63         ; Load 99 into VF
$F8E    $DC5E   DRW      VC, V5, #E      ; Draw 14-byte sprite at VC, V5
$F90    $EFBE   UNKNOWN  $EFBE           ; Unknown Exxx instruction
$F92    $0519   SYS      $519            ; System call to 519
$F94    $E025   UNKNOWN  $E025           ; Unknown Exxx instruction
$F96    $A242   LD       I, $242         ; Load 242 into I
$F98    $FADE   UNKNOWN  FADE            ; Unknown Fxxx instruction
$F9A    $2D1A   CALL     $D1A            ; Call subroutine at D1A
$F9C    $1C88   JP       $C88            ; Jump to C88
$F9E    $829F   UNKNOWN  829F            ; Unknown 8xxx instruction
$FA0    $13D7   JP       $3D7            ; Jump to 3D7
$FA2    $A46B   LD       I, $46B         ; Load 46B into I
$FA4    $B1A1   JP       V0, $1A1        ; Jump to V0 + 1A1
$FA6    $D10B   DRW      V1, V0, #B      ; Draw 11-byte sprite at V1, V0
$FA8    $BD1B   JP       V0, $D1B        ; Jump to V0 + D1B
$FAA    $0815   SYS      $815            ; System call to 815
$FAC    $9531   UNKNOWN  $9531           ; Unknown 9xxx instruction
$FAE    $5F58   UNKNOWN  $5F58           ; Unknown 5xxx instruction
$FB0    $5B5C   UNKNOWN  $5B5C           ; Unknown 5xxx instruction
$FB2    $E5F9   UNKNOWN  $E5F9           ; Unknown Exxx instruction
$FB4    $497A   SNE      V9, #7A         ; Skip if V9 != 122
$FB6    $DF96   DRW      VF, V9, #6      ; Draw 6-byte sprite at VF, V9
$FB8    $72C9   ADD      V2, #C9         ; Add 201 to V2
$FBA    $0013   SYS      $013            ; System call to 013
$FBC    $B61A   JP       V0, $61A        ; Jump to V0 + 61A
$FBE    $3A9E   SE       VA, #9E         ; Skip if VA == 158
$FC0    $BE94   JP       V0, $E94        ; Jump to V0 + E94
$FC2    $3721   SE       V7, #21         ; Skip if V7 == 33
$FC4    $991B   UNKNOWN  $991B           ; Unknown 9xxx instruction
$FC6    $1C92   JP       $C92            ; Jump to C92
$FC8    $8442   AND      V4, V4          ; V4 &= V4
$FCA    $09E1   SYS      $9E1            ; System call to 9E1
$FCC    $18F0   JP       $8F0            ; Jump to 8F0
$FCE    $4B7D   SNE      VB, #7D         ; Skip if VB != 125
$FD0    $AD87   LD       I, $D87         ; Load D87 into I
$FD2    $BA3E   JP       V0, $A3E        ; Jump to V0 + A3E
$FD4    $7D71   ADD      VD, #71         ; Add 113 to VD
$FD6    $65B8   LD       V5, #B8         ; Load 184 into V5
$FD8    $916B   UNKNOWN  $916B           ; Unknown 9xxx instruction
$FDA    $71C4   ADD      V1, #C4         ; Add 196 to V1
$FDC    $C3EE   RND      V3, #EE         ; V3 = random & EE
$FDE    $B10D   JP       V0, $10D        ; Jump to V0 + 10D
$FE0    $F26A   UNKNOWN  F26A            ; Unknown Fxxx instruction
$FE2    $6C90   LD       VC, #90         ; Load 144 into VC
$FE4    $6327   LD       V3, #27         ; Load 39 into V3
$FE6    $07D1   SYS      $7D1            ; System call to 7D1
$FE8    $E64E   UNKNOWN  $E64E           ; Unknown Exxx instruction
$FEA    $0925   SYS      $925            ; System call to 925
$FEC    $D992   DRW      V9, V9, #2      ; Draw 2-byte sprite at V9, V9
$FEE    $6AEE   LD       VA, #EE         ; Load 238 into VA
$FF0    $12ED   JP       $2ED            ; Jump to 2ED
$FF2    $C694   RND      V6, #94         ; V6 = random & 94
$FF4    $EF19   UNKNOWN  $EF19           ; Unknown Exxx instruction
$FF6    $8651   OR       V6, V5          ; V6 |= V5
$FF8    $7C64   ADD      VC, #64         ; Add 100 to VC
$FFA    $4E8C   SNE      VE, #8C         ; Skip if VE != 140
$FFC    $EEF8   UNKNOWN  $EEF8           ; Unknown Exxx instruction
$FFE    $5819   UNKNOWN  $5819           ; Unknown 5xxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 558 (31.1%)
  LD      : 227 (12.7%)
  JP      : 214 (11.9%)
  ADD     : 115 ( 6.4%)
  RND     : 114 ( 6.4%)
  SNE     : 112 ( 6.2%)
  SYS     : 109 ( 6.1%)
  DRW     : 106 ( 5.9%)
  SE      : 104 ( 5.8%)
  CALL    :  92 ( 5.1%)
  OR      :   9 ( 0.5%)
  XOR     :   6 ( 0.3%)
  AND     :   6 ( 0.3%)
  SHL     :   5 ( 0.3%)
  SHR     :   5 ( 0.3%)
  SUBN    :   4 ( 0.2%)
  SUB     :   4 ( 0.2%)
  SKNP    :   1 ( 0.1%)
  SKP     :   1 ( 0.1%)

Memory Operations: 342 (19.1%)
Arithmetic Operations: 144 (8.0%)
