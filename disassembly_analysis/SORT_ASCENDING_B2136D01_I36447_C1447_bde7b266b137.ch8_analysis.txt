
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B2136D01_I36447_C1447_bde7b266b137.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 2136
Instance: 36447
Direction: ascending
Final Array: [2, 2, 7, 9, 48, 109, 198, 219]
Operations: R:0 W:1 C:68 S:5

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 115
Sort Array References:
  $226: LD I, $7EA ; Load 7EA into I
  $234: LD I, $CCA ; Load CCA into I
  $242: LD I, $55A ; Load 55A into I
  $268: LD I, $787 ; Load 787 into I
  $26E: ADD I, V1 ; I ADDRESS MANIPULATION
  $294: LD I, $779 ; Load 779 into I
  $2B4: LD I, $5C1 ; Load 5C1 into I
  $2CC: LD I, $924 ; Load 924 into I
  $2E4: LD I, $2DF ; Load 2DF into I
  $2E6: LD I, $551 ; Load 551 into I
  $31E: LD I, $77E ; Load 77E into I
  $320: LD I, $7B4 ; Load 7B4 into I
  $328: LD I, $FB4 ; Load FB4 into I
  $32A: LD I, $EFB ; Load EFB into I
  $332: LD I, $D56 ; Load D56 into I
  $37A: LD I, $3FD ; Load 3FD into I
  $39A: LD I, $463 ; Load 463 into I
  $3A0: LD I, $9CD ; Load 9CD into I
  $3C6: LD I, $172 ; Load 172 into I
  $3CA: LD I, $821 ; Load 821 into I
  $3D8: LD I, $D2C ; Load D2C into I
  $406: LD I, $C11 ; Load C11 into I
  $480: LD I, $93D ; Load 93D into I
  $4E4: LD I, $93A ; Load 93A into I
  $516: LD I, $855 ; Load 855 into I
  $53A: LD I, $424 ; Load 424 into I
  $56E: LD I, $D82 ; Load D82 into I
  $586: LD I, $F07 ; Load F07 into I
  $5BA: LD I, $4FF ; Load 4FF into I
  $5E0: LD I, $16A ; Load 16A into I
  $5E8: LD I, $7F8 ; Load 7F8 into I
  $5F2: LD I, $B0D ; Load B0D into I
  $5FC: LD I, $D02 ; Load D02 into I
  $5FE: LD I, $C5C ; Load C5C into I
  $60E: LD I, $976 ; Load 976 into I
  $62A: LD I, $BE4 ; Load BE4 into I
  $66E: LD I, $5FF ; Load 5FF into I
  $68A: LD I, $DA2 ; Load DA2 into I
  $6B4: LD I, $982 ; Load 982 into I
  $6CE: LD I, $100 ; Load 100 into I
  $6F2: LD I, $084 ; Load 084 into I
  $720: LD I, $9C0 ; Load 9C0 into I
  $76C: LD I, $E11 ; Load E11 into I
  $7CE: LD I, $C04 ; Load C04 into I
  $7D8: LD I, $C33 ; Load C33 into I
  $7E4: LD I, $BBF ; Load BBF into I
  $7F8: LD I, $6A5 ; Load 6A5 into I
  $826: LD I, $1EC ; Load 1EC into I
  $82E: LD I, $951 ; Load 951 into I
  $834: LD I, $37F ; Load 37F into I
  $836: LD I, $72E ; Load 72E into I
  $85E: LD I, $8C3 ; Load 8C3 into I
  $86A: LD I, $C36 ; Load C36 into I
  $874: LD I, $6A0 ; Load 6A0 into I
  $892: LD I, $452 ; Load 452 into I
  $8B2: LD I, $B11 ; Load B11 into I
  $8B4: LD I, $1A7 ; Load 1A7 into I
  $93C: LD I, $7B9 ; Load 7B9 into I
  $95A: LD I, $D50 ; Load D50 into I
  $962: LD I, $D4B ; Load D4B into I
  $980: LD I, $C33 ; Load C33 into I
  $992: LD I, $C55 ; Load C55 into I
  $9D6: LD I, $88D ; Load 88D into I
  $9DA: LD I, $760 ; Load 760 into I
  $9E4: LD I, $9CD ; Load 9CD into I
  $9FE: LD I, $434 ; Load 434 into I
  $A4C: LD I, $772 ; Load 772 into I
  $A58: LD I, $B19 ; Load B19 into I
  $A9C: LD I, $989 ; Load 989 into I
  $A9E: LD I, $5F4 ; Load 5F4 into I
  $AB6: LD I, $E52 ; Load E52 into I
  $AE8: LD [I], V3 ; Store V0-V3 at I
  $B06: LD I, $09A ; Load 09A into I
  $B0C: LD I, $BA6 ; Load BA6 into I
  $B1C: LD I, $14B ; Load 14B into I
  $B32: LD I, $1C9 ; Load 1C9 into I
  $B44: LD I, $F62 ; Load F62 into I
  $B4E: LD I, $62A ; Load 62A into I
  $B54: LD I, $F29 ; Load F29 into I
  $B64: LD I, $B00 ; Load B00 into I
  $B9A: LD I, $2F6 ; Load 2F6 into I
  $BC4: LD I, $5F5 ; Load 5F5 into I
  $BCC: LD I, $513 ; Load 513 into I
  $BD0: LD I, $028 ; Load 028 into I
  $BFA: LD I, $205 ; Load 205 into I
  $C3C: LD I, $AFB ; Load AFB into I
  $C6E: LD I, $43E ; Load 43E into I
  $C72: LD I, $28D ; Load 28D into I
  $CC2: LD I, $4E6 ; Load 4E6 into I
  $CE2: LD I, $EC7 ; Load EC7 into I
  $CE6: LD I, $476 ; Load 476 into I
  $D02: LD I, $612 ; Load 612 into I
  $D12: LD I, $CB2 ; Load CB2 into I
  $D4C: LD I, $CED ; Load CED into I
  $D68: LD I, $4FE ; Load 4FE into I
  $D76: LD I, $C98 ; Load C98 into I
  $D78: LD I, $459 ; Load 459 into I
  $D92: LD I, $77B ; Load 77B into I
  $DAA: LD I, $320 ; Load 320 into I
  $DC8: LD I, $725 ; Load 725 into I
  $DDE: LD I, $993 ; Load 993 into I
  $DF0: LD I, $9F8 ; Load 9F8 into I
  $DF6: LD I, $553 ; Load 553 into I
  $E04: LD I, $1BD ; Load 1BD into I
  $E38: LD I, $84E ; Load 84E into I
  $E9C: LD I, $AF0 ; Load AF0 into I
  $EBA: LD I, $739 ; Load 739 into I
  $ED4: LD I, $70A ; Load 70A into I
  $EEA: LD [I], V1 ; Store V0-V1 at I
  $F42: LD I, $293 ; Load 293 into I
  $F4E: LD I, $297 ; Load 297 into I
  $F52: LD I, $E54 ; Load E54 into I
  $F92: LD I, $6F8 ; Load 6F8 into I
  $FB4: LD I, $D9B ; Load D9B into I
  $FD6: LD I, $34C ; Load 34C into I

CONTROL FLOW ANALYSIS:
Jumps: 242
Calls: 111
Branches: 238
Loops: 138
Loop Structures:
  $2C8 -> $1C7 (backward jump)
  $3AA -> $1AC (backward jump)
  $3BA -> $22C (backward jump)
  $3D0 -> $096 (backward jump)
  $3F4 -> $3D5 (backward jump)
  $3FE -> $321 (backward jump)
  $404 -> $392 (backward jump)
  $40E -> $395 (backward jump)
  $418 -> $303 (backward jump)
  $42C -> $30F (backward jump)
  $430 -> $118 (backward jump)
  $450 -> $257 (backward jump)
  $462 -> $431 (backward jump)
  $46C -> $40E (backward jump)
  $49C -> $1F6 (backward jump)
  $4A8 -> $2B6 (backward jump)
  $4B6 -> $426 (backward jump)
  $4CA -> $41E (backward jump)
  $528 -> $0CF (backward jump)
  $5AE -> $199 (backward jump)
  $5B6 -> $3C9 (backward jump)
  $600 -> $4CA (backward jump)
  $60C -> $332 (backward jump)
  $648 -> $556 (backward jump)
  $64A -> $5E7 (backward jump)
  $656 -> $0B4 (backward jump)
  $6A8 -> $54B (backward jump)
  $6D2 -> $477 (backward jump)
  $6D6 -> $32A (backward jump)
  $70A -> $38A (backward jump)
  $730 -> $11B (backward jump)
  $738 -> $373 (backward jump)
  $754 -> $652 (backward jump)
  $764 -> $517 (backward jump)
  $7AE -> $091 (backward jump)
  $7CC -> $7A3 (backward jump)
  $83A -> $6AA (backward jump)
  $83E -> $569 (backward jump)
  $8B0 -> $5A3 (backward jump)
  $8C0 -> $32A (backward jump)
  $8D8 -> $572 (backward jump)
  $8DC -> $2E3 (backward jump)
  $8FA -> $508 (backward jump)
  $90A -> $820 (backward jump)
  $90E -> $204 (backward jump)
  $91E -> $82A (backward jump)
  $932 -> $58D (backward jump)
  $942 -> $479 (backward jump)
  $950 -> $8F6 (backward jump)
  $958 -> $427 (backward jump)
  $964 -> $7E4 (backward jump)
  $968 -> $471 (backward jump)
  $970 -> $45B (backward jump)
  $972 -> $084 (backward jump)
  $97A -> $918 (backward jump)
  $9BC -> $4AB (backward jump)
  $9C4 -> $3E4 (backward jump)
  $A00 -> $8D5 (backward jump)
  $A10 -> $43A (backward jump)
  $A52 -> $86C (backward jump)
  $A78 -> $21A (backward jump)
  $AB2 -> $4A2 (backward jump)
  $AB4 -> $51A (backward jump)
  $ACE -> $4D6 (backward jump)
  $AD0 -> $508 (backward jump)
  $AEA -> $62C (backward jump)
  $B02 -> $831 (backward jump)
  $B16 -> $791 (backward jump)
  $B2E -> $9AD (backward jump)
  $B7C -> $A1F (backward jump)
  $B96 -> $9EC (backward jump)
  $BC0 -> $621 (backward jump)
  $BCE -> $09D (backward jump)
  $BD2 -> $76F (backward jump)
  $BD4 -> $7AD (backward jump)
  $BE8 -> $41B (backward jump)
  $C0C -> $98A (backward jump)
  $C12 -> $14A (backward jump)
  $C2A -> $624 (backward jump)
  $C44 -> $3DB (backward jump)
  $C46 -> $583 (backward jump)
  $C48 -> $BA8 (backward jump)
  $C4C -> $35E (backward jump)
  $C88 -> $05B (backward jump)
  $CC6 -> $9CC (backward jump)
  $CF0 -> $C15 (backward jump)
  $CF4 -> $81F (backward jump)
  $D56 -> $CEF (backward jump)
  $D5C -> $1D5 (backward jump)
  $D66 -> $9B8 (backward jump)
  $D88 -> $5D0 (backward jump)
  $D96 -> $96D (backward jump)
  $D98 -> $90C (backward jump)
  $DA8 -> $C90 (backward jump)
  $DB0 -> $D03 (backward jump)
  $DB4 -> $A8F (backward jump)
  $DDA -> $184 (backward jump)
  $E02 -> $DD5 (backward jump)
  $E1C -> $160 (backward jump)
  $E24 -> $B89 (backward jump)
  $E26 -> $87A (backward jump)
  $E34 -> $9EE (backward jump)
  $E40 -> $934 (backward jump)
  $E50 -> $8F7 (backward jump)
  $E58 -> $B7B (backward jump)
  $E6A -> $BD4 (backward jump)
  $E70 -> $71E (backward jump)
  $E88 -> $4B6 (backward jump)
  $E8C -> $204 (backward jump)
  $E92 -> $B66 (backward jump)
  $EA2 -> $6F6 (backward jump)
  $EB6 -> $2C1 (backward jump)
  $EC4 -> $589 (backward jump)
  $ECA -> $CEC (backward jump)
  $ECE -> $0DA (backward jump)
  $ED0 -> $C82 (backward jump)
  $ED6 -> $CB3 (backward jump)
  $EE4 -> $CB4 (backward jump)
  $EE6 -> $915 (backward jump)
  $F06 -> $BF2 (backward jump)
  $F0C -> $9DB (backward jump)
  $F12 -> $4C5 (backward jump)
  $F14 -> $7C6 (backward jump)
  $F16 -> $A7A (backward jump)
  $F18 -> $A74 (backward jump)
  $F1A -> $19D (backward jump)
  $F26 -> $55F (backward jump)
  $F40 -> $923 (backward jump)
  $F46 -> $A93 (backward jump)
  $F58 -> $B25 (backward jump)
  $F6A -> $2D2 (backward jump)
  $F84 -> $706 (backward jump)
  $F9C -> $4D7 (backward jump)
  $FA6 -> $9B9 (backward jump)
  $FC8 -> $534 (backward jump)
  $FD4 -> $12B (backward jump)
  $FE6 -> $BF5 (backward jump)
  $FEE -> $B2A (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $3D4F   SE       VD, #4F         ; Skip if VD == 79
$202    $000B   SYS      $00B            ; System call to 00B
$204    $78F0   ADD      V8, #F0         ; Add 240 to V8
$206    $3986   SE       V9, #86         ; Skip if V9 == 134
$208    $BD33   JP       V0, $D33        ; Jump to V0 + D33
$20A    $8E23   XOR      VE, V2          ; VE ^= V2
$20C    $9760   SNE      V7, V6          ; Skip if V7 != V6
$20E    $8648   UNKNOWN  8648            ; Unknown 8xxx instruction
$210    $8193   XOR      V1, V9          ; V1 ^= V9
$212    $EAB6   UNKNOWN  $EAB6           ; Unknown Exxx instruction
$214    $F622   UNKNOWN  F622            ; Unknown Fxxx instruction
$216    $0266   SYS      $266            ; System call to 266
$218    $6693   LD       V6, #93         ; Load 147 into V6
$21A    $16E4   JP       $6E4            ; Jump to 6E4
$21C    $2E31   CALL     $E31            ; Call subroutine at E31
$21E    $F710   UNKNOWN  F710            ; Unknown Fxxx instruction
$220    $71D6   ADD      V1, #D6         ; Add 214 to V1
$222    $146E   JP       $46E            ; Jump to 46E
$224    $1854   JP       $854            ; Jump to 854
$226    $A7EA   LD       I, $7EA         ; Load 7EA into I
$228    $74BC   ADD      V4, #BC         ; Add 188 to V4
$22A    $4BB1   SNE      VB, #B1         ; Skip if VB != 177
$22C    $8F42   AND      VF, V4          ; VF &= V4
$22E    $8B8A   UNKNOWN  8B8A            ; Unknown 8xxx instruction
$230    $28F8   CALL     $8F8            ; Call subroutine at 8F8
$232    $F50C   UNKNOWN  F50C            ; Unknown Fxxx instruction
$234    $ACCA   LD       I, $CCA         ; Load CCA into I
$236    $5F58   UNKNOWN  $5F58           ; Unknown 5xxx instruction
$238    $F009   UNKNOWN  F009            ; Unknown Fxxx instruction
$23A    $BBF3   JP       V0, $BF3        ; Jump to V0 + BF3
$23C    $323D   SE       V2, #3D         ; Skip if V2 == 61
$23E    $4409   SNE      V4, #09         ; Skip if V4 != 9
$240    $5F92   UNKNOWN  $5F92           ; Unknown 5xxx instruction
$242    $A55A   LD       I, $55A         ; Load 55A into I
$244    $5575   UNKNOWN  $5575           ; Unknown 5xxx instruction
$246    $0AC4   SYS      $AC4            ; System call to AC4
$248    $1556   JP       $556            ; Jump to 556
$24A    $E3FB   UNKNOWN  $E3FB           ; Unknown Exxx instruction
$24C    $90B6   UNKNOWN  $90B6           ; Unknown 9xxx instruction
$24E    $CC2F   RND      VC, #2F         ; VC = random & 2F
$250    $1E09   JP       $E09            ; Jump to E09
$252    $20D6   CALL     $0D6            ; Call subroutine at 0D6
$254    $853A   UNKNOWN  853A            ; Unknown 8xxx instruction
$256    $F8DE   UNKNOWN  F8DE            ; Unknown Fxxx instruction
$258    $1C96   JP       $C96            ; Jump to C96
$25A    $981B   UNKNOWN  $981B           ; Unknown 9xxx instruction
$25C    $8B87   SUBN     VB, V8          ; VB = V8 - VB, VF = !borrow
$25E    $3AE6   SE       VA, #E6         ; Skip if VA == 230
$260    $BF45   JP       V0, $F45        ; Jump to V0 + F45
$262    $241B   CALL     $41B            ; Call subroutine at 41B
$264    $C915   RND      V9, #15         ; V9 = random & 15
$266    $BB54   JP       V0, $B54        ; Jump to V0 + B54
$268    $A787   LD       I, $787         ; Load 787 into I
$26A    $DB52   DRW      VB, V5, #2      ; Draw 2-byte sprite at VB, V5
$26C    $E2A1   SKNP     V2              ; Skip if key V2 not pressed
$26E    $F11E   ADD      I, V1           ; I += V1
$270    $F63F   UNKNOWN  F63F            ; Unknown Fxxx instruction
$272    $3C30   SE       VC, #30         ; Skip if VC == 48
$274    $483B   SNE      V8, #3B         ; Skip if V8 != 59
$276    $B504   JP       V0, $504        ; Jump to V0 + 504
$278    $FD83   UNKNOWN  FD83            ; Unknown Fxxx instruction
$27A    $178F   JP       $78F            ; Jump to 78F
$27C    $E207   UNKNOWN  $E207           ; Unknown Exxx instruction
$27E    $5720   SE       V7, V2          ; Skip if V7 == V2
$280    $0FB8   SYS      $FB8            ; System call to FB8
$282    $8797   SUBN     V7, V9          ; V7 = V9 - V7, VF = !borrow
$284    $41E9   SNE      V1, #E9         ; Skip if V1 != 233
$286    $4968   SNE      V9, #68         ; Skip if V9 != 104
$288    $FC9C   UNKNOWN  FC9C            ; Unknown Fxxx instruction
$28A    $71B0   ADD      V1, #B0         ; Add 176 to V1
$28C    $C2CB   RND      V2, #CB         ; V2 = random & CB
$28E    $98B7   UNKNOWN  $98B7           ; Unknown 9xxx instruction
$290    $9CDE   UNKNOWN  $9CDE           ; Unknown 9xxx instruction
$292    $6232   LD       V2, #32         ; Load 50 into V2
$294    $A779   LD       I, $779         ; Load 779 into I
$296    $EA9A   UNKNOWN  $EA9A           ; Unknown Exxx instruction
$298    $95BB   UNKNOWN  $95BB           ; Unknown 9xxx instruction
$29A    $043F   SYS      $43F            ; System call to 43F
$29C    $07BC   SYS      $7BC            ; System call to 7BC
$29E    $20A3   CALL     $0A3            ; Call subroutine at 0A3
$2A0    $0158   SYS      $158            ; System call to 158
$2A2    $29A2   CALL     $9A2            ; Call subroutine at 9A2
$2A4    $CEC2   RND      VE, #C2         ; VE = random & C2
$2A6    $C037   RND      V0, #37         ; V0 = random & 37
$2A8    $757A   ADD      V5, #7A         ; Add 122 to V5
$2AA    $C4BC   RND      V4, #BC         ; V4 = random & BC
$2AC    $9EF2   UNKNOWN  $9EF2           ; Unknown 9xxx instruction
$2AE    $1569   JP       $569            ; Jump to 569
$2B0    $6B3A   LD       VB, #3A         ; Load 58 into VB
$2B2    $53B2   UNKNOWN  $53B2           ; Unknown 5xxx instruction
$2B4    $A5C1   LD       I, $5C1         ; Load 5C1 into I
$2B6    $CFDC   RND      VF, #DC         ; VF = random & DC
$2B8    $3DFE   SE       VD, #FE         ; Skip if VD == 254
$2BA    $2A2C   CALL     $A2C            ; Call subroutine at A2C
$2BC    $6838   LD       V8, #38         ; Load 56 into V8
$2BE    $F5FC   UNKNOWN  F5FC            ; Unknown Fxxx instruction
$2C0    $DB57   DRW      VB, V5, #7      ; Draw 7-byte sprite at VB, V5
$2C2    $517F   UNKNOWN  $517F           ; Unknown 5xxx instruction
$2C4    $65B7   LD       V5, #B7         ; Load 183 into V5
$2C6    $F552   UNKNOWN  F552            ; Unknown Fxxx instruction
$2C8    $11C7   JP       $1C7            ; Jump to 1C7
$2CA    $2B09   CALL     $B09            ; Call subroutine at B09
$2CC    $A924   LD       I, $924         ; Load 924 into I
$2CE    $76E8   ADD      V6, #E8         ; Add 232 to V6
$2D0    $95EA   UNKNOWN  $95EA           ; Unknown 9xxx instruction
$2D2    $D952   DRW      V9, V5, #2      ; Draw 2-byte sprite at V9, V5
$2D4    $131C   JP       $31C            ; Jump to 31C
$2D6    $6391   LD       V3, #91         ; Load 145 into V3
$2D8    $DBC9   DRW      VB, VC, #9      ; Draw 9-byte sprite at VB, VC
$2DA    $8B10   LD       VB, V1          ; VB = V1
$2DC    $93D1   UNKNOWN  $93D1           ; Unknown 9xxx instruction
$2DE    $69A1   LD       V9, #A1         ; Load 161 into V9
$2E0    $2985   CALL     $985            ; Call subroutine at 985
$2E2    $2437   CALL     $437            ; Call subroutine at 437
$2E4    $A2DF   LD       I, $2DF         ; Load 2DF into I
$2E6    $A551   LD       I, $551         ; Load 551 into I
$2E8    $C706   RND      V7, #06         ; V7 = random & 06
$2EA    $B8D5   JP       V0, $8D5        ; Jump to V0 + 8D5
$2EC    $D0C9   DRW      V0, VC, #9      ; Draw 9-byte sprite at V0, VC
$2EE    $9269   UNKNOWN  $9269           ; Unknown 9xxx instruction
$2F0    $E27C   UNKNOWN  $E27C           ; Unknown Exxx instruction
$2F2    $E38F   UNKNOWN  $E38F           ; Unknown Exxx instruction
$2F4    $900A   UNKNOWN  $900A           ; Unknown 9xxx instruction
$2F6    $558B   UNKNOWN  $558B           ; Unknown 5xxx instruction
$2F8    $2DB3   CALL     $DB3            ; Call subroutine at DB3
$2FA    $F7BC   UNKNOWN  F7BC            ; Unknown Fxxx instruction
$2FC    $69B2   LD       V9, #B2         ; Load 178 into V9
$2FE    $94DA   UNKNOWN  $94DA           ; Unknown 9xxx instruction
$300    $0202   SYS      $202            ; System call to 202
$302    $0709   SYS      $709            ; System call to 709
$304    $306D   SE       V0, #6D         ; Skip if V0 == 109
$306    $C6DB   RND      V6, #DB         ; V6 = random & DB
$308    $9078   UNKNOWN  $9078           ; Unknown 9xxx instruction
$30A    $69C6   LD       V9, #C6         ; Load 198 into V9
$30C    $C801   RND      V8, #01         ; V8 = random & 01
$30E    $7ED3   ADD      VE, #D3         ; Add 211 to VE
$310    $75D3   ADD      V5, #D3         ; Add 211 to V5
$312    $30BF   SE       V0, #BF         ; Skip if V0 == 191
$314    $3D0F   SE       VD, #0F         ; Skip if VD == 15
$316    $0646   SYS      $646            ; System call to 646
$318    $5BD3   UNKNOWN  $5BD3           ; Unknown 5xxx instruction
$31A    $6A35   LD       VA, #35         ; Load 53 into VA
$31C    $17EF   JP       $7EF            ; Jump to 7EF
$31E    $A77E   LD       I, $77E         ; Load 77E into I
$320    $A7B4   LD       I, $7B4         ; Load 7B4 into I
$322    $82D1   OR       V2, VD          ; V2 |= VD
$324    $3E42   SE       VE, #42         ; Skip if VE == 66
$326    $6E58   LD       VE, #58         ; Load 88 into VE
$328    $AFB4   LD       I, $FB4         ; Load FB4 into I
$32A    $AEFB   LD       I, $EFB         ; Load EFB into I
$32C    $21E4   CALL     $1E4            ; Call subroutine at 1E4
$32E    $B71E   JP       V0, $71E        ; Jump to V0 + 71E
$330    $7153   ADD      V1, #53         ; Add 83 to V1
$332    $AD56   LD       I, $D56         ; Load D56 into I
$334    $D39D   DRW      V3, V9, #D      ; Draw 13-byte sprite at V3, V9
$336    $E19D   UNKNOWN  $E19D           ; Unknown Exxx instruction
$338    $1A31   JP       $A31            ; Jump to A31
$33A    $244D   CALL     $44D            ; Call subroutine at 44D
$33C    $29BF   CALL     $9BF            ; Call subroutine at 9BF
$33E    $E232   UNKNOWN  $E232           ; Unknown Exxx instruction
$340    $788A   ADD      V8, #8A         ; Add 138 to V8
$342    $B549   JP       V0, $549        ; Jump to V0 + 549
$344    $929B   UNKNOWN  $929B           ; Unknown 9xxx instruction
$346    $EAA5   UNKNOWN  $EAA5           ; Unknown Exxx instruction
$348    $45F6   SNE      V5, #F6         ; Skip if V5 != 246
$34A    $97CE   UNKNOWN  $97CE           ; Unknown 9xxx instruction
$34C    $F982   UNKNOWN  F982            ; Unknown Fxxx instruction
$34E    $09AF   SYS      $9AF            ; System call to 9AF
$350    $D7AD   DRW      V7, VA, #D      ; Draw 13-byte sprite at V7, VA
$352    $4554   SNE      V5, #54         ; Skip if V5 != 84
$354    $5701   UNKNOWN  $5701           ; Unknown 5xxx instruction
$356    $6489   LD       V4, #89         ; Load 137 into V4
$358    $626D   LD       V2, #6D         ; Load 109 into V2
$35A    $3C3B   SE       VC, #3B         ; Skip if VC == 59
$35C    $9190   SNE      V1, V9          ; Skip if V1 != V9
$35E    $4A3D   SNE      VA, #3D         ; Skip if VA != 61
$360    $EE89   UNKNOWN  $EE89           ; Unknown Exxx instruction
$362    $B92C   JP       V0, $92C        ; Jump to V0 + 92C
$364    $8B64   ADD      VB, V6          ; VB += V6, VF = carry
$366    $E28A   UNKNOWN  $E28A           ; Unknown Exxx instruction
$368    $455B   SNE      V5, #5B         ; Skip if V5 != 91
$36A    $4D88   SNE      VD, #88         ; Skip if VD != 136
$36C    $1A95   JP       $A95            ; Jump to A95
$36E    $1D17   JP       $D17            ; Jump to D17
$370    $CEC6   RND      VE, #C6         ; VE = random & C6
$372    $DBD1   DRW      VB, VD, #1      ; Draw 1-byte sprite at VB, VD
$374    $D1C5   DRW      V1, VC, #5      ; Draw 5-byte sprite at V1, VC
$376    $4EAE   SNE      VE, #AE         ; Skip if VE != 174
$378    $2C56   CALL     $C56            ; Call subroutine at C56
$37A    $A3FD   LD       I, $3FD         ; Load 3FD into I
$37C    $3E53   SE       VE, #53         ; Skip if VE == 83
$37E    $146A   JP       $46A            ; Jump to 46A
$380    $D80B   DRW      V8, V0, #B      ; Draw 11-byte sprite at V8, V0
$382    $914A   UNKNOWN  $914A           ; Unknown 9xxx instruction
$384    $8D1E   SHL      VD              ; VD <<= 1, VF = MSB
$386    $8739   UNKNOWN  8739            ; Unknown 8xxx instruction
$388    $8B78   UNKNOWN  8B78            ; Unknown 8xxx instruction
$38A    $F8C5   UNKNOWN  F8C5            ; Unknown Fxxx instruction
$38C    $2205   CALL     $205            ; Call subroutine at 205
$38E    $D438   DRW      V4, V3, #8      ; Draw 8-byte sprite at V4, V3
$390    $2309   CALL     $309            ; Call subroutine at 309
$392    $7B57   ADD      VB, #57         ; Add 87 to VB
$394    $1ADA   JP       $ADA            ; Jump to ADA
$396    $3D99   SE       VD, #99         ; Skip if VD == 153
$398    $EEB6   UNKNOWN  $EEB6           ; Unknown Exxx instruction
$39A    $A463   LD       I, $463         ; Load 463 into I
$39C    $7121   ADD      V1, #21         ; Add 33 to V1
$39E    $F898   UNKNOWN  F898            ; Unknown Fxxx instruction
$3A0    $A9CD   LD       I, $9CD         ; Load 9CD into I
$3A2    $1596   JP       $596            ; Jump to 596
$3A4    $8119   UNKNOWN  8119            ; Unknown 8xxx instruction
$3A6    $1F7E   JP       $F7E            ; Jump to F7E
$3A8    $EDE4   UNKNOWN  $EDE4           ; Unknown Exxx instruction
$3AA    $B1AC   JP       V0, $1AC        ; Jump to V0 + 1AC
$3AC    $571E   UNKNOWN  $571E           ; Unknown 5xxx instruction
$3AE    $C0D4   RND      V0, #D4         ; V0 = random & D4
$3B0    $9318   UNKNOWN  $9318           ; Unknown 9xxx instruction
$3B2    $F336   UNKNOWN  F336            ; Unknown Fxxx instruction
$3B4    $5F71   UNKNOWN  $5F71           ; Unknown 5xxx instruction
$3B6    $9F42   UNKNOWN  $9F42           ; Unknown 9xxx instruction
$3B8    $7B79   ADD      VB, #79         ; Add 121 to VB
$3BA    $B22C   JP       V0, $22C        ; Jump to V0 + 22C
$3BC    $3DB4   SE       VD, #B4         ; Skip if VD == 180
$3BE    $8FD7   SUBN     VF, VD          ; VF = VD - VF, VF = !borrow
$3C0    $1D26   JP       $D26            ; Jump to D26
$3C2    $247A   CALL     $47A            ; Call subroutine at 47A
$3C4    $2DFF   CALL     $DFF            ; Call subroutine at DFF
$3C6    $A172   LD       I, $172         ; Load 172 into I
$3C8    $58C7   UNKNOWN  $58C7           ; Unknown 5xxx instruction
$3CA    $A821   LD       I, $821         ; Load 821 into I
$3CC    $D919   DRW      V9, V1, #9      ; Draw 9-byte sprite at V9, V1
$3CE    $733A   ADD      V3, #3A         ; Add 58 to V3
$3D0    $B096   JP       V0, $096        ; Jump to V0 + 096
$3D2    $14F1   JP       $4F1            ; Jump to 4F1
$3D4    $8B1F   UNKNOWN  8B1F            ; Unknown 8xxx instruction
$3D6    $2329   CALL     $329            ; Call subroutine at 329
$3D8    $AD2C   LD       I, $D2C         ; Load D2C into I
$3DA    $E97A   UNKNOWN  $E97A           ; Unknown Exxx instruction
$3DC    $E1C9   UNKNOWN  $E1C9           ; Unknown Exxx instruction
$3DE    $D001   DRW      V0, V0, #1      ; Draw 1-byte sprite at V0, V0
$3E0    $F0DD   UNKNOWN  F0DD            ; Unknown Fxxx instruction
$3E2    $F178   UNKNOWN  F178            ; Unknown Fxxx instruction
$3E4    $5275   UNKNOWN  $5275           ; Unknown 5xxx instruction
$3E6    $1677   JP       $677            ; Jump to 677
$3E8    $8532   AND      V5, V3          ; V5 &= V3
$3EA    $87B8   UNKNOWN  87B8            ; Unknown 8xxx instruction
$3EC    $68E7   LD       V8, #E7         ; Load 231 into V8
$3EE    $0F11   SYS      $F11            ; System call to F11
$3F0    $9C03   UNKNOWN  $9C03           ; Unknown 9xxx instruction
$3F2    $7A62   ADD      VA, #62         ; Add 98 to VA
$3F4    $13D5   JP       $3D5            ; Jump to 3D5
$3F6    $9839   UNKNOWN  $9839           ; Unknown 9xxx instruction
$3F8    $1F60   JP       $F60            ; Jump to F60
$3FA    $26D9   CALL     $6D9            ; Call subroutine at 6D9
$3FC    $52DE   UNKNOWN  $52DE           ; Unknown 5xxx instruction
$3FE    $B321   JP       V0, $321        ; Jump to V0 + 321
$400    $8BA1   OR       VB, VA          ; VB |= VA
$402    $EDBB   UNKNOWN  $EDBB           ; Unknown Exxx instruction
$404    $B392   JP       V0, $392        ; Jump to V0 + 392
$406    $AC11   LD       I, $C11         ; Load C11 into I
$408    $B999   JP       V0, $999        ; Jump to V0 + 999
$40A    $9D02   UNKNOWN  $9D02           ; Unknown 9xxx instruction
$40C    $2AD4   CALL     $AD4            ; Call subroutine at AD4
$40E    $B395   JP       V0, $395        ; Jump to V0 + 395
$410    $C5EF   RND      V5, #EF         ; V5 = random & EF
$412    $67CF   LD       V7, #CF         ; Load 207 into V7
$414    $47E6   SNE      V7, #E6         ; Skip if V7 != 230
$416    $F191   UNKNOWN  F191            ; Unknown Fxxx instruction
$418    $B303   JP       V0, $303        ; Jump to V0 + 303
$41A    $2C22   CALL     $C22            ; Call subroutine at C22
$41C    $740D   ADD      V4, #0D         ; Add 13 to V4
$41E    $F56D   UNKNOWN  F56D            ; Unknown Fxxx instruction
$420    $4281   SNE      V2, #81         ; Skip if V2 != 129
$422    $2005   CALL     $005            ; Call subroutine at 005
$424    $4D9E   SNE      VD, #9E         ; Skip if VD != 158
$426    $9AC5   UNKNOWN  $9AC5           ; Unknown 9xxx instruction
$428    $F7FA   UNKNOWN  F7FA            ; Unknown Fxxx instruction
$42A    $9040   SNE      V0, V4          ; Skip if V0 != V4
$42C    $130F   JP       $30F            ; Jump to 30F
$42E    $E077   UNKNOWN  $E077           ; Unknown Exxx instruction
$430    $B118   JP       V0, $118        ; Jump to V0 + 118
$432    $4597   SNE      V5, #97         ; Skip if V5 != 151
$434    $B81C   JP       V0, $81C        ; Jump to V0 + 81C
$436    $FD0F   UNKNOWN  FD0F            ; Unknown Fxxx instruction
$438    $E825   UNKNOWN  $E825           ; Unknown Exxx instruction
$43A    $6E09   LD       VE, #09         ; Load 9 into VE
$43C    $FD70   UNKNOWN  FD70            ; Unknown Fxxx instruction
$43E    $3F1E   SE       VF, #1E         ; Skip if VF == 30
$440    $C1E6   RND      V1, #E6         ; V1 = random & E6
$442    $E8B2   UNKNOWN  $E8B2           ; Unknown Exxx instruction
$444    $8D75   SUB      VD, V7          ; VD -= V7, VF = !borrow
$446    $06F7   SYS      $6F7            ; System call to 6F7
$448    $EDDC   UNKNOWN  $EDDC           ; Unknown Exxx instruction
$44A    $86E4   ADD      V6, VE          ; V6 += VE, VF = carry
$44C    $5F5C   UNKNOWN  $5F5C           ; Unknown 5xxx instruction
$44E    $9A84   UNKNOWN  $9A84           ; Unknown 9xxx instruction
$450    $1257   JP       $257            ; Jump to 257
$452    $2FFD   CALL     $FFD            ; Call subroutine at FFD
$454    $E5DF   UNKNOWN  $E5DF           ; Unknown Exxx instruction
$456    $D9B9   DRW      V9, VB, #9      ; Draw 9-byte sprite at V9, VB
$458    $F11B   UNKNOWN  F11B            ; Unknown Fxxx instruction
$45A    $FCA5   UNKNOWN  FCA5            ; Unknown Fxxx instruction
$45C    $2E8E   CALL     $E8E            ; Call subroutine at E8E
$45E    $FBEC   UNKNOWN  FBEC            ; Unknown Fxxx instruction
$460    $7EE8   ADD      VE, #E8         ; Add 232 to VE
$462    $1431   JP       $431            ; Jump to 431
$464    $4A4C   SNE      VA, #4C         ; Skip if VA != 76
$466    $2409   CALL     $409            ; Call subroutine at 409
$468    $8FB5   SUB      VF, VB          ; VF -= VB, VF = !borrow
$46A    $7EBB   ADD      VE, #BB         ; Add 187 to VE
$46C    $140E   JP       $40E            ; Jump to 40E
$46E    $BD4B   JP       V0, $D4B        ; Jump to V0 + D4B
$470    $F681   UNKNOWN  F681            ; Unknown Fxxx instruction
$472    $1802   JP       $802            ; Jump to 802
$474    $2D06   CALL     $D06            ; Call subroutine at D06
$476    $4C8C   SNE      VC, #8C         ; Skip if VC != 140
$478    $F185   UNKNOWN  F185            ; Unknown Fxxx instruction
$47A    $E618   UNKNOWN  $E618           ; Unknown Exxx instruction
$47C    $1B97   JP       $B97            ; Jump to B97
$47E    $3B26   SE       VB, #26         ; Skip if VB == 38
$480    $A93D   LD       I, $93D         ; Load 93D into I
$482    $B758   JP       V0, $758        ; Jump to V0 + 758
$484    $DD80   DRW      VD, V8, #0      ; Draw 0-byte sprite at VD, V8
$486    $7AFE   ADD      VA, #FE         ; Add 254 to VA
$488    $E2F4   UNKNOWN  $E2F4           ; Unknown Exxx instruction
$48A    $5DB4   UNKNOWN  $5DB4           ; Unknown 5xxx instruction
$48C    $2F9C   CALL     $F9C            ; Call subroutine at F9C
$48E    $5047   UNKNOWN  $5047           ; Unknown 5xxx instruction
$490    $7656   ADD      V6, #56         ; Add 86 to V6
$492    $7FA6   ADD      VF, #A6         ; Add 166 to VF
$494    $F2C3   UNKNOWN  F2C3            ; Unknown Fxxx instruction
$496    $C20D   RND      V2, #0D         ; V2 = random & 0D
$498    $F4F1   UNKNOWN  F4F1            ; Unknown Fxxx instruction
$49A    $4662   SNE      V6, #62         ; Skip if V6 != 98
$49C    $B1F6   JP       V0, $1F6        ; Jump to V0 + 1F6
$49E    $7CB1   ADD      VC, #B1         ; Add 177 to VC
$4A0    $FE6A   UNKNOWN  FE6A            ; Unknown Fxxx instruction
$4A2    $28BD   CALL     $8BD            ; Call subroutine at 8BD
$4A4    $FA5A   UNKNOWN  FA5A            ; Unknown Fxxx instruction
$4A6    $7EEE   ADD      VE, #EE         ; Add 238 to VE
$4A8    $B2B6   JP       V0, $2B6        ; Jump to V0 + 2B6
$4AA    $675D   LD       V7, #5D         ; Load 93 into V7
$4AC    $B787   JP       V0, $787        ; Jump to V0 + 787
$4AE    $FEC7   UNKNOWN  FEC7            ; Unknown Fxxx instruction
$4B0    $8E53   XOR      VE, V5          ; VE ^= V5
$4B2    $FC21   UNKNOWN  FC21            ; Unknown Fxxx instruction
$4B4    $D84C   DRW      V8, V4, #C      ; Draw 12-byte sprite at V8, V4
$4B6    $1426   JP       $426            ; Jump to 426
$4B8    $1829   JP       $829            ; Jump to 829
$4BA    $BF66   JP       V0, $F66        ; Jump to V0 + F66
$4BC    $EE95   UNKNOWN  $EE95           ; Unknown Exxx instruction
$4BE    $9799   UNKNOWN  $9799           ; Unknown 9xxx instruction
$4C0    $C72D   RND      V7, #2D         ; V7 = random & 2D
$4C2    $8417   SUBN     V4, V1          ; V4 = V1 - V4, VF = !borrow
$4C4    $9154   UNKNOWN  $9154           ; Unknown 9xxx instruction
$4C6    $CFFC   RND      VF, #FC         ; VF = random & FC
$4C8    $CA1D   RND      VA, #1D         ; VA = random & 1D
$4CA    $B41E   JP       V0, $41E        ; Jump to V0 + 41E
$4CC    $0D3F   SYS      $D3F            ; System call to D3F
$4CE    $FF4D   UNKNOWN  FF4D            ; Unknown Fxxx instruction
$4D0    $91CB   UNKNOWN  $91CB           ; Unknown 9xxx instruction
$4D2    $C803   RND      V8, #03         ; V8 = random & 03
$4D4    $0C33   SYS      $C33            ; System call to C33
$4D6    $543F   UNKNOWN  $543F           ; Unknown 5xxx instruction
$4D8    $8CB8   UNKNOWN  8CB8            ; Unknown 8xxx instruction
$4DA    $542B   UNKNOWN  $542B           ; Unknown 5xxx instruction
$4DC    $294C   CALL     $94C            ; Call subroutine at 94C
$4DE    $344F   SE       V4, #4F         ; Skip if V4 == 79
$4E0    $41B8   SNE      V1, #B8         ; Skip if V1 != 184
$4E2    $D434   DRW      V4, V3, #4      ; Draw 4-byte sprite at V4, V3
$4E4    $A93A   LD       I, $93A         ; Load 93A into I
$4E6    $F133   LD       B, V1           ; Store BCD of V1 at I, I+1, I+2
$4E8    $C1CB   RND      V1, #CB         ; V1 = random & CB
$4EA    $0B1F   SYS      $B1F            ; System call to B1F
$4EC    $6D51   LD       VD, #51         ; Load 81 into VD
$4EE    $C966   RND      V9, #66         ; V9 = random & 66
$4F0    $21F6   CALL     $1F6            ; Call subroutine at 1F6
$4F2    $4F3A   SNE      VF, #3A         ; Skip if VF != 58
$4F4    $999B   UNKNOWN  $999B           ; Unknown 9xxx instruction
$4F6    $92D1   UNKNOWN  $92D1           ; Unknown 9xxx instruction
$4F8    $3285   SE       V2, #85         ; Skip if V2 == 133
$4FA    $5CAB   UNKNOWN  $5CAB           ; Unknown 5xxx instruction
$4FC    $D504   DRW      V5, V0, #4      ; Draw 4-byte sprite at V5, V0
$4FE    $74AF   ADD      V4, #AF         ; Add 175 to V4
$500    $5ECD   UNKNOWN  $5ECD           ; Unknown 5xxx instruction
$502    $4732   SNE      V7, #32         ; Skip if V7 != 50
$504    $81CC   UNKNOWN  81CC            ; Unknown 8xxx instruction
$506    $9EC2   UNKNOWN  $9EC2           ; Unknown 9xxx instruction
$508    $FF0C   UNKNOWN  FF0C            ; Unknown Fxxx instruction
$50A    $096D   SYS      $96D            ; System call to 96D
$50C    $2693   CALL     $693            ; Call subroutine at 693
$50E    $D418   DRW      V4, V1, #8      ; Draw 8-byte sprite at V4, V1
$510    $9478   UNKNOWN  $9478           ; Unknown 9xxx instruction
$512    $E3C2   UNKNOWN  $E3C2           ; Unknown Exxx instruction
$514    $C2C7   RND      V2, #C7         ; V2 = random & C7
$516    $A855   LD       I, $855         ; Load 855 into I
$518    $91B7   UNKNOWN  $91B7           ; Unknown 9xxx instruction
$51A    $CF96   RND      VF, #96         ; VF = random & 96
$51C    $D122   DRW      V1, V2, #2      ; Draw 2-byte sprite at V1, V2
$51E    $9C98   UNKNOWN  $9C98           ; Unknown 9xxx instruction
$520    $9B84   UNKNOWN  $9B84           ; Unknown 9xxx instruction
$522    $ECE8   UNKNOWN  $ECE8           ; Unknown Exxx instruction
$524    $D75A   DRW      V7, V5, #A      ; Draw 10-byte sprite at V7, V5
$526    $9B47   UNKNOWN  $9B47           ; Unknown 9xxx instruction
$528    $B0CF   JP       V0, $0CF        ; Jump to V0 + 0CF
$52A    $794B   ADD      V9, #4B         ; Add 75 to V9
$52C    $3440   SE       V4, #40         ; Skip if V4 == 64
$52E    $881D   UNKNOWN  881D            ; Unknown 8xxx instruction
$530    $F93D   UNKNOWN  F93D            ; Unknown Fxxx instruction
$532    $BE34   JP       V0, $E34        ; Jump to V0 + E34
$534    $6B16   LD       VB, #16         ; Load 22 into VB
$536    $E5FC   UNKNOWN  $E5FC           ; Unknown Exxx instruction
$538    $0ADD   SYS      $ADD            ; System call to ADD
$53A    $A424   LD       I, $424         ; Load 424 into I
$53C    $955C   UNKNOWN  $955C           ; Unknown 9xxx instruction
$53E    $1AD7   JP       $AD7            ; Jump to AD7
$540    $294C   CALL     $94C            ; Call subroutine at 94C
$542    $E715   UNKNOWN  $E715           ; Unknown Exxx instruction
$544    $BD9A   JP       V0, $D9A        ; Jump to V0 + D9A
$546    $4254   SNE      V2, #54         ; Skip if V2 != 84
$548    $5436   UNKNOWN  $5436           ; Unknown 5xxx instruction
$54A    $D52F   DRW      V5, V2, #F      ; Draw 15-byte sprite at V5, V2
$54C    $FBF1   UNKNOWN  FBF1            ; Unknown Fxxx instruction
$54E    $8CEE   SHL      VC              ; VC <<= 1, VF = MSB
$550    $6DEB   LD       VD, #EB         ; Load 235 into VD
$552    $C3CF   RND      V3, #CF         ; V3 = random & CF
$554    $1B98   JP       $B98            ; Jump to B98
$556    $25F7   CALL     $5F7            ; Call subroutine at 5F7
$558    $C912   RND      V9, #12         ; V9 = random & 12
$55A    $B929   JP       V0, $929        ; Jump to V0 + 929
$55C    $F7EB   UNKNOWN  F7EB            ; Unknown Fxxx instruction
$55E    $48E1   SNE      V8, #E1         ; Skip if V8 != 225
$560    $FD66   UNKNOWN  FD66            ; Unknown Fxxx instruction
$562    $CD19   RND      VD, #19         ; VD = random & 19
$564    $42D5   SNE      V2, #D5         ; Skip if V2 != 213
$566    $2CA3   CALL     $CA3            ; Call subroutine at CA3
$568    $3841   SE       V8, #41         ; Skip if V8 == 65
$56A    $4B3B   SNE      VB, #3B         ; Skip if VB != 59
$56C    $B9A0   JP       V0, $9A0        ; Jump to V0 + 9A0
$56E    $AD82   LD       I, $D82         ; Load D82 into I
$570    $7DC5   ADD      VD, #C5         ; Add 197 to VD
$572    $DCBB   DRW      VC, VB, #B      ; Draw 11-byte sprite at VC, VB
$574    $8754   ADD      V7, V5          ; V7 += V5, VF = carry
$576    $FC82   UNKNOWN  FC82            ; Unknown Fxxx instruction
$578    $83D5   SUB      V3, VD          ; V3 -= VD, VF = !borrow
$57A    $E1F9   UNKNOWN  $E1F9           ; Unknown Exxx instruction
$57C    $7A3C   ADD      VA, #3C         ; Add 60 to VA
$57E    $DB6C   DRW      VB, V6, #C      ; Draw 12-byte sprite at VB, V6
$580    $8C2A   UNKNOWN  8C2A            ; Unknown 8xxx instruction
$582    $B811   JP       V0, $811        ; Jump to V0 + 811
$584    $EE8F   UNKNOWN  $EE8F           ; Unknown Exxx instruction
$586    $AF07   LD       I, $F07         ; Load F07 into I
$588    $5AB5   UNKNOWN  $5AB5           ; Unknown 5xxx instruction
$58A    $64C5   LD       V4, #C5         ; Load 197 into V4
$58C    $FFAF   UNKNOWN  FFAF            ; Unknown Fxxx instruction
$58E    $8032   AND      V0, V3          ; V0 &= V3
$590    $9679   UNKNOWN  $9679           ; Unknown 9xxx instruction
$592    $3E87   SE       VE, #87         ; Skip if VE == 135
$594    $E85C   UNKNOWN  $E85C           ; Unknown Exxx instruction
$596    $3669   SE       V6, #69         ; Skip if V6 == 105
$598    $E690   UNKNOWN  $E690           ; Unknown Exxx instruction
$59A    $2E7B   CALL     $E7B            ; Call subroutine at E7B
$59C    $45AE   SNE      V5, #AE         ; Skip if V5 != 174
$59E    $7C55   ADD      VC, #55         ; Add 85 to VC
$5A0    $785D   ADD      V8, #5D         ; Add 93 to V8
$5A2    $9148   UNKNOWN  $9148           ; Unknown 9xxx instruction
$5A4    $8990   LD       V9, V9          ; V9 = V9
$5A6    $1EF5   JP       $EF5            ; Jump to EF5
$5A8    $586C   UNKNOWN  $586C           ; Unknown 5xxx instruction
$5AA    $46B8   SNE      V6, #B8         ; Skip if V6 != 184
$5AC    $FE91   UNKNOWN  FE91            ; Unknown Fxxx instruction
$5AE    $B199   JP       V0, $199        ; Jump to V0 + 199
$5B0    $442D   SNE      V4, #2D         ; Skip if V4 != 45
$5B2    $C49F   RND      V4, #9F         ; V4 = random & 9F
$5B4    $BC74   JP       V0, $C74        ; Jump to V0 + C74
$5B6    $B3C9   JP       V0, $3C9        ; Jump to V0 + 3C9
$5B8    $4237   SNE      V2, #37         ; Skip if V2 != 55
$5BA    $A4FF   LD       I, $4FF         ; Load 4FF into I
$5BC    $F339   UNKNOWN  F339            ; Unknown Fxxx instruction
$5BE    $67C2   LD       V7, #C2         ; Load 194 into V7
$5C0    $EACB   UNKNOWN  $EACB           ; Unknown Exxx instruction
$5C2    $F366   UNKNOWN  F366            ; Unknown Fxxx instruction
$5C4    $49E0   SNE      V9, #E0         ; Skip if V9 != 224
$5C6    $4134   SNE      V1, #34         ; Skip if V1 != 52
$5C8    $09C2   SYS      $9C2            ; System call to 9C2
$5CA    $5193   UNKNOWN  $5193           ; Unknown 5xxx instruction
$5CC    $9754   UNKNOWN  $9754           ; Unknown 9xxx instruction
$5CE    $58E1   UNKNOWN  $58E1           ; Unknown 5xxx instruction
$5D0    $5403   UNKNOWN  $5403           ; Unknown 5xxx instruction
$5D2    $C284   RND      V2, #84         ; V2 = random & 84
$5D4    $E1E5   UNKNOWN  $E1E5           ; Unknown Exxx instruction
$5D6    $CA5D   RND      VA, #5D         ; VA = random & 5D
$5D8    $BEDD   JP       V0, $EDD        ; Jump to V0 + EDD
$5DA    $9E91   UNKNOWN  $9E91           ; Unknown 9xxx instruction
$5DC    $6AA0   LD       VA, #A0         ; Load 160 into VA
$5DE    $00F8   SYS      $0F8            ; System call to 0F8
$5E0    $A16A   LD       I, $16A         ; Load 16A into I
$5E2    $F5EC   UNKNOWN  F5EC            ; Unknown Fxxx instruction
$5E4    $0DF3   SYS      $DF3            ; System call to DF3
$5E6    $88EB   UNKNOWN  88EB            ; Unknown 8xxx instruction
$5E8    $A7F8   LD       I, $7F8         ; Load 7F8 into I
$5EA    $3408   SE       V4, #08         ; Skip if V4 == 8
$5EC    $5338   UNKNOWN  $5338           ; Unknown 5xxx instruction
$5EE    $1798   JP       $798            ; Jump to 798
$5F0    $96D3   UNKNOWN  $96D3           ; Unknown 9xxx instruction
$5F2    $AB0D   LD       I, $B0D         ; Load B0D into I
$5F4    $99A4   UNKNOWN  $99A4           ; Unknown 9xxx instruction
$5F6    $2E3A   CALL     $E3A            ; Call subroutine at E3A
$5F8    $F16A   UNKNOWN  F16A            ; Unknown Fxxx instruction
$5FA    $4F4D   SNE      VF, #4D         ; Skip if VF != 77
$5FC    $AD02   LD       I, $D02         ; Load D02 into I
$5FE    $AC5C   LD       I, $C5C         ; Load C5C into I
$600    $B4CA   JP       V0, $4CA        ; Jump to V0 + 4CA
$602    $F260   UNKNOWN  F260            ; Unknown Fxxx instruction
$604    $7679   ADD      V6, #79         ; Add 121 to V6
$606    $41E6   SNE      V1, #E6         ; Skip if V1 != 230
$608    $9115   UNKNOWN  $9115           ; Unknown 9xxx instruction
$60A    $95B1   UNKNOWN  $95B1           ; Unknown 9xxx instruction
$60C    $1332   JP       $332            ; Jump to 332
$60E    $A976   LD       I, $976         ; Load 976 into I
$610    $6CFA   LD       VC, #FA         ; Load 250 into VC
$612    $C695   RND      V6, #95         ; V6 = random & 95
$614    $F64E   UNKNOWN  F64E            ; Unknown Fxxx instruction
$616    $7C99   ADD      VC, #99         ; Add 153 to VC
$618    $1683   JP       $683            ; Jump to 683
$61A    $4455   SNE      V4, #55         ; Skip if V4 != 85
$61C    $7983   ADD      V9, #83         ; Add 131 to V9
$61E    $40B2   SNE      V0, #B2         ; Skip if V0 != 178
$620    $187F   JP       $87F            ; Jump to 87F
$622    $1DF2   JP       $DF2            ; Jump to DF2
$624    $B7B4   JP       V0, $7B4        ; Jump to V0 + 7B4
$626    $181D   JP       $81D            ; Jump to 81D
$628    $6320   LD       V3, #20         ; Load 32 into V3
$62A    $ABE4   LD       I, $BE4         ; Load BE4 into I
$62C    $54E6   UNKNOWN  $54E6           ; Unknown 5xxx instruction
$62E    $6A1C   LD       VA, #1C         ; Load 28 into VA
$630    $DA25   DRW      VA, V2, #5      ; Draw 5-byte sprite at VA, V2
$632    $7ADB   ADD      VA, #DB         ; Add 219 to VA
$634    $4D78   SNE      VD, #78         ; Skip if VD != 120
$636    $6064   LD       V0, #64         ; Load 100 into V0
$638    $7CF9   ADD      VC, #F9         ; Add 249 to VC
$63A    $9B36   UNKNOWN  $9B36           ; Unknown 9xxx instruction
$63C    $797A   ADD      V9, #7A         ; Add 122 to V9
$63E    $EA48   UNKNOWN  $EA48           ; Unknown Exxx instruction
$640    $2D09   CALL     $D09            ; Call subroutine at D09
$642    $C919   RND      V9, #19         ; V9 = random & 19
$644    $2ED0   CALL     $ED0            ; Call subroutine at ED0
$646    $DF37   DRW      VF, V3, #7      ; Draw 7-byte sprite at VF, V3
$648    $B556   JP       V0, $556        ; Jump to V0 + 556
$64A    $15E7   JP       $5E7            ; Jump to 5E7
$64C    $1A5D   JP       $A5D            ; Jump to A5D
$64E    $5DF5   UNKNOWN  $5DF5           ; Unknown 5xxx instruction
$650    $3D9A   SE       VD, #9A         ; Skip if VD == 154
$652    $373B   SE       V7, #3B         ; Skip if V7 == 59
$654    $7B75   ADD      VB, #75         ; Add 117 to VB
$656    $B0B4   JP       V0, $0B4        ; Jump to V0 + 0B4
$658    $BB61   JP       V0, $B61        ; Jump to V0 + B61
$65A    $D7F6   DRW      V7, VF, #6      ; Draw 6-byte sprite at V7, VF
$65C    $220B   CALL     $20B            ; Call subroutine at 20B
$65E    $7BB0   ADD      VB, #B0         ; Add 176 to VB
$660    $948A   UNKNOWN  $948A           ; Unknown 9xxx instruction
$662    $D1CB   DRW      V1, VC, #B      ; Draw 11-byte sprite at V1, VC
$664    $4A1C   SNE      VA, #1C         ; Skip if VA != 28
$666    $E8AD   UNKNOWN  $E8AD           ; Unknown Exxx instruction
$668    $4770   SNE      V7, #70         ; Skip if V7 != 112
$66A    $7FE7   ADD      VF, #E7         ; Add 231 to VF
$66C    $40FB   SNE      V0, #FB         ; Skip if V0 != 251
$66E    $A5FF   LD       I, $5FF         ; Load 5FF into I
$670    $2901   CALL     $901            ; Call subroutine at 901
$672    $F110   UNKNOWN  F110            ; Unknown Fxxx instruction
$674    $31AF   SE       V1, #AF         ; Skip if V1 == 175
$676    $DC0E   DRW      VC, V0, #E      ; Draw 14-byte sprite at VC, V0
$678    $FEFE   UNKNOWN  FEFE            ; Unknown Fxxx instruction
$67A    $FCD4   UNKNOWN  FCD4            ; Unknown Fxxx instruction
$67C    $417B   SNE      V1, #7B         ; Skip if V1 != 123
$67E    $53AA   UNKNOWN  $53AA           ; Unknown 5xxx instruction
$680    $472E   SNE      V7, #2E         ; Skip if V7 != 46
$682    $2EAE   CALL     $EAE            ; Call subroutine at EAE
$684    $9854   UNKNOWN  $9854           ; Unknown 9xxx instruction
$686    $F3AE   UNKNOWN  F3AE            ; Unknown Fxxx instruction
$688    $FB73   UNKNOWN  FB73            ; Unknown Fxxx instruction
$68A    $ADA2   LD       I, $DA2         ; Load DA2 into I
$68C    $43C2   SNE      V3, #C2         ; Skip if V3 != 194
$68E    $243C   CALL     $43C            ; Call subroutine at 43C
$690    $3D95   SE       VD, #95         ; Skip if VD == 149
$692    $F3FD   UNKNOWN  F3FD            ; Unknown Fxxx instruction
$694    $53DE   UNKNOWN  $53DE           ; Unknown 5xxx instruction
$696    $FBF1   UNKNOWN  FBF1            ; Unknown Fxxx instruction
$698    $E7C1   UNKNOWN  $E7C1           ; Unknown Exxx instruction
$69A    $6886   LD       V8, #86         ; Load 134 into V8
$69C    $6C23   LD       VC, #23         ; Load 35 into VC
$69E    $D7B5   DRW      V7, VB, #5      ; Draw 5-byte sprite at V7, VB
$6A0    $1A1B   JP       $A1B            ; Jump to A1B
$6A2    $CEA1   RND      VE, #A1         ; VE = random & A1
$6A4    $397C   SE       V9, #7C         ; Skip if V9 == 124
$6A6    $DFA6   DRW      VF, VA, #6      ; Draw 6-byte sprite at VF, VA
$6A8    $154B   JP       $54B            ; Jump to 54B
$6AA    $ECB3   UNKNOWN  $ECB3           ; Unknown Exxx instruction
$6AC    $2A0E   CALL     $A0E            ; Call subroutine at A0E
$6AE    $F4D4   UNKNOWN  F4D4            ; Unknown Fxxx instruction
$6B0    $F3BE   UNKNOWN  F3BE            ; Unknown Fxxx instruction
$6B2    $98BF   UNKNOWN  $98BF           ; Unknown 9xxx instruction
$6B4    $A982   LD       I, $982         ; Load 982 into I
$6B6    $F270   UNKNOWN  F270            ; Unknown Fxxx instruction
$6B8    $464B   SNE      V6, #4B         ; Skip if V6 != 75
$6BA    $0F1A   SYS      $F1A            ; System call to F1A
$6BC    $DFE1   DRW      VF, VE, #1      ; Draw 1-byte sprite at VF, VE
$6BE    $7E87   ADD      VE, #87         ; Add 135 to VE
$6C0    $988C   UNKNOWN  $988C           ; Unknown 9xxx instruction
$6C2    $6FC8   LD       VF, #C8         ; Load 200 into VF
$6C4    $2AC9   CALL     $AC9            ; Call subroutine at AC9
$6C6    $1F8C   JP       $F8C            ; Jump to F8C
$6C8    $289C   CALL     $89C            ; Call subroutine at 89C
$6CA    $9372   UNKNOWN  $9372           ; Unknown 9xxx instruction
$6CC    $3608   SE       V6, #08         ; Skip if V6 == 8
$6CE    $A100   LD       I, $100         ; Load 100 into I
$6D0    $C9F8   RND      V9, #F8         ; V9 = random & F8
$6D2    $B477   JP       V0, $477        ; Jump to V0 + 477
$6D4    $7FAB   ADD      VF, #AB         ; Add 171 to VF
$6D6    $132A   JP       $32A            ; Jump to 32A
$6D8    $DB04   DRW      VB, V0, #4      ; Draw 4-byte sprite at VB, V0
$6DA    $E2B4   UNKNOWN  $E2B4           ; Unknown Exxx instruction
$6DC    $1D3E   JP       $D3E            ; Jump to D3E
$6DE    $EC50   UNKNOWN  $EC50           ; Unknown Exxx instruction
$6E0    $5FEF   UNKNOWN  $5FEF           ; Unknown 5xxx instruction
$6E2    $016A   SYS      $16A            ; System call to 16A
$6E4    $587D   UNKNOWN  $587D           ; Unknown 5xxx instruction
$6E6    $C9EF   RND      V9, #EF         ; V9 = random & EF
$6E8    $09DB   SYS      $9DB            ; System call to 9DB
$6EA    $29ED   CALL     $9ED            ; Call subroutine at 9ED
$6EC    $27A0   CALL     $7A0            ; Call subroutine at 7A0
$6EE    $96C6   UNKNOWN  $96C6           ; Unknown 9xxx instruction
$6F0    $DB99   DRW      VB, V9, #9      ; Draw 9-byte sprite at VB, V9
$6F2    $A084   LD       I, $084         ; Load 084 into I
$6F4    $E0C4   UNKNOWN  $E0C4           ; Unknown Exxx instruction
$6F6    $60D9   LD       V0, #D9         ; Load 217 into V0
$6F8    $8824   ADD      V8, V2          ; V8 += V2, VF = carry
$6FA    $5FD0   SE       VF, VD          ; Skip if VF == VD
$6FC    $87AF   UNKNOWN  87AF            ; Unknown 8xxx instruction
$6FE    $2AD5   CALL     $AD5            ; Call subroutine at AD5
$700    $45F5   SNE      V5, #F5         ; Skip if V5 != 245
$702    $5FA4   UNKNOWN  $5FA4           ; Unknown 5xxx instruction
$704    $EC8A   UNKNOWN  $EC8A           ; Unknown Exxx instruction
$706    $0015   SYS      $015            ; System call to 015
$708    $3AEC   SE       VA, #EC         ; Skip if VA == 236
$70A    $138A   JP       $38A            ; Jump to 38A
$70C    $4226   SNE      V2, #26         ; Skip if V2 != 38
$70E    $9B22   UNKNOWN  $9B22           ; Unknown 9xxx instruction
$710    $04E3   SYS      $4E3            ; System call to 4E3
$712    $F9BC   UNKNOWN  F9BC            ; Unknown Fxxx instruction
$714    $5717   UNKNOWN  $5717           ; Unknown 5xxx instruction
$716    $3522   SE       V5, #22         ; Skip if V5 == 34
$718    $E999   UNKNOWN  $E999           ; Unknown Exxx instruction
$71A    $D8B4   DRW      V8, VB, #4      ; Draw 4-byte sprite at V8, VB
$71C    $0BD2   SYS      $BD2            ; System call to BD2
$71E    $3B39   SE       VB, #39         ; Skip if VB == 57
$720    $A9C0   LD       I, $9C0         ; Load 9C0 into I
$722    $44A6   SNE      V4, #A6         ; Skip if V4 != 166
$724    $FAB2   UNKNOWN  FAB2            ; Unknown Fxxx instruction
$726    $4E8B   SNE      VE, #8B         ; Skip if VE != 139
$728    $EF95   UNKNOWN  $EF95           ; Unknown Exxx instruction
$72A    $552E   UNKNOWN  $552E           ; Unknown 5xxx instruction
$72C    $DA45   DRW      VA, V4, #5      ; Draw 5-byte sprite at VA, V4
$72E    $E1C9   UNKNOWN  $E1C9           ; Unknown Exxx instruction
$730    $111B   JP       $11B            ; Jump to 11B
$732    $FAE3   UNKNOWN  FAE3            ; Unknown Fxxx instruction
$734    $FC88   UNKNOWN  FC88            ; Unknown Fxxx instruction
$736    $062C   SYS      $62C            ; System call to 62C
$738    $1373   JP       $373            ; Jump to 373
$73A    $676D   LD       V7, #6D         ; Load 109 into V7
$73C    $2CCD   CALL     $CCD            ; Call subroutine at CCD
$73E    $4B84   SNE      VB, #84         ; Skip if VB != 132
$740    $1E89   JP       $E89            ; Jump to E89
$742    $2B43   CALL     $B43            ; Call subroutine at B43
$744    $1BCB   JP       $BCB            ; Jump to BCB
$746    $8D98   UNKNOWN  8D98            ; Unknown 8xxx instruction
$748    $3F16   SE       VF, #16         ; Skip if VF == 22
$74A    $2C97   CALL     $C97            ; Call subroutine at C97
$74C    $FCA9   UNKNOWN  FCA9            ; Unknown Fxxx instruction
$74E    $88A1   OR       V8, VA          ; V8 |= VA
$750    $9EEA   UNKNOWN  $9EEA           ; Unknown 9xxx instruction
$752    $2311   CALL     $311            ; Call subroutine at 311
$754    $1652   JP       $652            ; Jump to 652
$756    $BC52   JP       V0, $C52        ; Jump to V0 + C52
$758    $EF37   UNKNOWN  $EF37           ; Unknown Exxx instruction
$75A    $4014   SNE      V0, #14         ; Skip if V0 != 20
$75C    $9C95   UNKNOWN  $9C95           ; Unknown 9xxx instruction
$75E    $1ED1   JP       $ED1            ; Jump to ED1
$760    $3697   SE       V6, #97         ; Skip if V6 == 151
$762    $4C49   SNE      VC, #49         ; Skip if VC != 73
$764    $B517   JP       V0, $517        ; Jump to V0 + 517
$766    $3A61   SE       VA, #61         ; Skip if VA == 97
$768    $C4DD   RND      V4, #DD         ; V4 = random & DD
$76A    $0FDB   SYS      $FDB            ; System call to FDB
$76C    $AE11   LD       I, $E11         ; Load E11 into I
$76E    $8B46   SHR      VB              ; VB >>= 1, VF = LSB
$770    $BB91   JP       V0, $B91        ; Jump to V0 + B91
$772    $301E   SE       V0, #1E         ; Skip if V0 == 30
$774    $3F53   SE       VF, #53         ; Skip if VF == 83
$776    $ED1A   UNKNOWN  $ED1A           ; Unknown Exxx instruction
$778    $5013   UNKNOWN  $5013           ; Unknown 5xxx instruction
$77A    $2BCB   CALL     $BCB            ; Call subroutine at BCB
$77C    $F5D8   UNKNOWN  F5D8            ; Unknown Fxxx instruction
$77E    $49C3   SNE      V9, #C3         ; Skip if V9 != 195
$780    $72E0   ADD      V2, #E0         ; Add 224 to V2
$782    $3EEC   SE       VE, #EC         ; Skip if VE == 236
$784    $645C   LD       V4, #5C         ; Load 92 into V4
$786    $926C   UNKNOWN  $926C           ; Unknown 9xxx instruction
$788    $95E5   UNKNOWN  $95E5           ; Unknown 9xxx instruction
$78A    $F8B9   UNKNOWN  F8B9            ; Unknown Fxxx instruction
$78C    $6942   LD       V9, #42         ; Load 66 into V9
$78E    $E85F   UNKNOWN  $E85F           ; Unknown Exxx instruction
$790    $5056   UNKNOWN  $5056           ; Unknown 5xxx instruction
$792    $71C0   ADD      V1, #C0         ; Add 192 to V1
$794    $34C4   SE       V4, #C4         ; Skip if V4 == 196
$796    $5A49   UNKNOWN  $5A49           ; Unknown 5xxx instruction
$798    $FD66   UNKNOWN  FD66            ; Unknown Fxxx instruction
$79A    $F450   UNKNOWN  F450            ; Unknown Fxxx instruction
$79C    $36BD   SE       V6, #BD         ; Skip if V6 == 189
$79E    $3C0B   SE       VC, #0B         ; Skip if VC == 11
$7A0    $6518   LD       V5, #18         ; Load 24 into V5
$7A2    $3AB9   SE       VA, #B9         ; Skip if VA == 185
$7A4    $664A   LD       V6, #4A         ; Load 74 into V6
$7A6    $0C4C   SYS      $C4C            ; System call to C4C
$7A8    $45F1   SNE      V5, #F1         ; Skip if V5 != 241
$7AA    $C4CA   RND      V4, #CA         ; V4 = random & CA
$7AC    $FC1B   UNKNOWN  FC1B            ; Unknown Fxxx instruction
$7AE    $B091   JP       V0, $091        ; Jump to V0 + 091
$7B0    $C2EE   RND      V2, #EE         ; V2 = random & EE
$7B2    $0D60   SYS      $D60            ; System call to D60
$7B4    $D4B9   DRW      V4, VB, #9      ; Draw 9-byte sprite at V4, VB
$7B6    $3805   SE       V8, #05         ; Skip if V8 == 5
$7B8    $4922   SNE      V9, #22         ; Skip if V9 != 34
$7BA    $268D   CALL     $68D            ; Call subroutine at 68D
$7BC    $0C0A   SYS      $C0A            ; System call to C0A
$7BE    $9CDA   UNKNOWN  $9CDA           ; Unknown 9xxx instruction
$7C0    $F2D8   UNKNOWN  F2D8            ; Unknown Fxxx instruction
$7C2    $242A   CALL     $42A            ; Call subroutine at 42A
$7C4    $0A35   SYS      $A35            ; System call to A35
$7C6    $2173   CALL     $173            ; Call subroutine at 173
$7C8    $DF40   DRW      VF, V4, #0      ; Draw 0-byte sprite at VF, V4
$7CA    $B86C   JP       V0, $86C        ; Jump to V0 + 86C
$7CC    $B7A3   JP       V0, $7A3        ; Jump to V0 + 7A3
$7CE    $AC04   LD       I, $C04         ; Load C04 into I
$7D0    $7E55   ADD      VE, #55         ; Add 85 to VE
$7D2    $7DCA   ADD      VD, #CA         ; Add 202 to VD
$7D4    $C793   RND      V7, #93         ; V7 = random & 93
$7D6    $5788   UNKNOWN  $5788           ; Unknown 5xxx instruction
$7D8    $AC33   LD       I, $C33         ; Load C33 into I
$7DA    $7138   ADD      V1, #38         ; Add 56 to V1
$7DC    $3CF0   SE       VC, #F0         ; Skip if VC == 240
$7DE    $49D0   SNE      V9, #D0         ; Skip if V9 != 208
$7E0    $BB4B   JP       V0, $B4B        ; Jump to V0 + B4B
$7E2    $D08C   DRW      V0, V8, #C      ; Draw 12-byte sprite at V0, V8
$7E4    $ABBF   LD       I, $BBF         ; Load BBF into I
$7E6    $9456   UNKNOWN  $9456           ; Unknown 9xxx instruction
$7E8    $9CED   UNKNOWN  $9CED           ; Unknown 9xxx instruction
$7EA    $957E   UNKNOWN  $957E           ; Unknown 9xxx instruction
$7EC    $676F   LD       V7, #6F         ; Load 111 into V7
$7EE    $8008   UNKNOWN  8008            ; Unknown 8xxx instruction
$7F0    $866D   UNKNOWN  866D            ; Unknown 8xxx instruction
$7F2    $97DE   UNKNOWN  $97DE           ; Unknown 9xxx instruction
$7F4    $7BC3   ADD      VB, #C3         ; Add 195 to VB
$7F6    $F79C   UNKNOWN  F79C            ; Unknown Fxxx instruction
$7F8    $A6A5   LD       I, $6A5         ; Load 6A5 into I
$7FA    $CC3B   RND      VC, #3B         ; VC = random & 3B
$7FC    $FC0D   UNKNOWN  FC0D            ; Unknown Fxxx instruction
$7FE    $04DA   SYS      $4DA            ; System call to 4DA
$800    $4273   SNE      V2, #73         ; Skip if V2 != 115
$802    $854A   UNKNOWN  854A            ; Unknown 8xxx instruction
$804    $FE18   LD       ST, VE          ; Sound timer = VE
$806    $6E2A   LD       VE, #2A         ; Load 42 into VE
$808    $3DDD   SE       VD, #DD         ; Skip if VD == 221
$80A    $877D   UNKNOWN  877D            ; Unknown 8xxx instruction
$80C    $18A6   JP       $8A6            ; Jump to 8A6
$80E    $5568   UNKNOWN  $5568           ; Unknown 5xxx instruction
$810    $DD45   DRW      VD, V4, #5      ; Draw 5-byte sprite at VD, V4
$812    $97DD   UNKNOWN  $97DD           ; Unknown 9xxx instruction
$814    $953C   UNKNOWN  $953C           ; Unknown 9xxx instruction
$816    $00D7   SYS      $0D7            ; System call to 0D7
$818    $38E6   SE       V8, #E6         ; Skip if V8 == 230
$81A    $E45A   UNKNOWN  $E45A           ; Unknown Exxx instruction
$81C    $DD75   DRW      VD, V7, #5      ; Draw 5-byte sprite at VD, V7
$81E    $F946   UNKNOWN  F946            ; Unknown Fxxx instruction
$820    $88C7   SUBN     V8, VC          ; V8 = VC - V8, VF = !borrow
$822    $5366   UNKNOWN  $5366           ; Unknown 5xxx instruction
$824    $8E0A   UNKNOWN  8E0A            ; Unknown 8xxx instruction
$826    $A1EC   LD       I, $1EC         ; Load 1EC into I
$828    $BADB   JP       V0, $ADB        ; Jump to V0 + ADB
$82A    $253C   CALL     $53C            ; Call subroutine at 53C
$82C    $BC39   JP       V0, $C39        ; Jump to V0 + C39
$82E    $A951   LD       I, $951         ; Load 951 into I
$830    $BA9D   JP       V0, $A9D        ; Jump to V0 + A9D
$832    $784A   ADD      V8, #4A         ; Add 74 to V8
$834    $A37F   LD       I, $37F         ; Load 37F into I
$836    $A72E   LD       I, $72E         ; Load 72E into I
$838    $EBEB   UNKNOWN  $EBEB           ; Unknown Exxx instruction
$83A    $16AA   JP       $6AA            ; Jump to 6AA
$83C    $DFB5   DRW      VF, VB, #5      ; Draw 5-byte sprite at VF, VB
$83E    $1569   JP       $569            ; Jump to 569
$840    $EE27   UNKNOWN  $EE27           ; Unknown Exxx instruction
$842    $52EC   UNKNOWN  $52EC           ; Unknown 5xxx instruction
$844    $31AC   SE       V1, #AC         ; Skip if V1 == 172
$846    $19DE   JP       $9DE            ; Jump to 9DE
$848    $9C29   UNKNOWN  $9C29           ; Unknown 9xxx instruction
$84A    $7AD9   ADD      VA, #D9         ; Add 217 to VA
$84C    $2578   CALL     $578            ; Call subroutine at 578
$84E    $BD63   JP       V0, $D63        ; Jump to V0 + D63
$850    $D50E   DRW      V5, V0, #E      ; Draw 14-byte sprite at V5, V0
$852    $1E1C   JP       $E1C            ; Jump to E1C
$854    $E9B7   UNKNOWN  $E9B7           ; Unknown Exxx instruction
$856    $E2E1   UNKNOWN  $E2E1           ; Unknown Exxx instruction
$858    $D680   DRW      V6, V8, #0      ; Draw 0-byte sprite at V6, V8
$85A    $266C   CALL     $66C            ; Call subroutine at 66C
$85C    $EFF2   UNKNOWN  $EFF2           ; Unknown Exxx instruction
$85E    $A8C3   LD       I, $8C3         ; Load 8C3 into I
$860    $6602   LD       V6, #02         ; Load 2 into V6
$862    $EF6C   UNKNOWN  $EF6C           ; Unknown Exxx instruction
$864    $FC82   UNKNOWN  FC82            ; Unknown Fxxx instruction
$866    $CC58   RND      VC, #58         ; VC = random & 58
$868    $5009   UNKNOWN  $5009           ; Unknown 5xxx instruction
$86A    $AC36   LD       I, $C36         ; Load C36 into I
$86C    $71F8   ADD      V1, #F8         ; Add 248 to V1
$86E    $C6AA   RND      V6, #AA         ; V6 = random & AA
$870    $270B   CALL     $70B            ; Call subroutine at 70B
$872    $5C83   UNKNOWN  $5C83           ; Unknown 5xxx instruction
$874    $A6A0   LD       I, $6A0         ; Load 6A0 into I
$876    $9CEF   UNKNOWN  $9CEF           ; Unknown 9xxx instruction
$878    $2AD1   CALL     $AD1            ; Call subroutine at AD1
$87A    $7356   ADD      V3, #56         ; Add 86 to V3
$87C    $F8BD   UNKNOWN  F8BD            ; Unknown Fxxx instruction
$87E    $89E4   ADD      V9, VE          ; V9 += VE, VF = carry
$880    $6B4B   LD       VB, #4B         ; Load 75 into VB
$882    $415D   SNE      V1, #5D         ; Skip if V1 != 93
$884    $FF2B   UNKNOWN  FF2B            ; Unknown Fxxx instruction
$886    $6B47   LD       VB, #47         ; Load 71 into VB
$888    $B972   JP       V0, $972        ; Jump to V0 + 972
$88A    $04D3   SYS      $4D3            ; System call to 4D3
$88C    $6D8A   LD       VD, #8A         ; Load 138 into VD
$88E    $CFF3   RND      VF, #F3         ; VF = random & F3
$890    $392C   SE       V9, #2C         ; Skip if V9 == 44
$892    $A452   LD       I, $452         ; Load 452 into I
$894    $89D9   UNKNOWN  89D9            ; Unknown 8xxx instruction
$896    $C051   RND      V0, #51         ; V0 = random & 51
$898    $4E48   SNE      VE, #48         ; Skip if VE != 72
$89A    $DD11   DRW      VD, V1, #1      ; Draw 1-byte sprite at VD, V1
$89C    $DCDC   DRW      VC, VD, #C      ; Draw 12-byte sprite at VC, VD
$89E    $C514   RND      V5, #14         ; V5 = random & 14
$8A0    $E19F   UNKNOWN  $E19F           ; Unknown Exxx instruction
$8A2    $F3B9   UNKNOWN  F3B9            ; Unknown Fxxx instruction
$8A4    $5766   UNKNOWN  $5766           ; Unknown 5xxx instruction
$8A6    $FB27   UNKNOWN  FB27            ; Unknown Fxxx instruction
$8A8    $E2CD   UNKNOWN  $E2CD           ; Unknown Exxx instruction
$8AA    $D31F   DRW      V3, V1, #F      ; Draw 15-byte sprite at V3, V1
$8AC    $F6BA   UNKNOWN  F6BA            ; Unknown Fxxx instruction
$8AE    $664F   LD       V6, #4F         ; Load 79 into V6
$8B0    $B5A3   JP       V0, $5A3        ; Jump to V0 + 5A3
$8B2    $AB11   LD       I, $B11         ; Load B11 into I
$8B4    $A1A7   LD       I, $1A7         ; Load 1A7 into I
$8B6    $6D9E   LD       VD, #9E         ; Load 158 into VD
$8B8    $C384   RND      V3, #84         ; V3 = random & 84
$8BA    $F728   UNKNOWN  F728            ; Unknown Fxxx instruction
$8BC    $1F44   JP       $F44            ; Jump to F44
$8BE    $F4AF   UNKNOWN  F4AF            ; Unknown Fxxx instruction
$8C0    $132A   JP       $32A            ; Jump to 32A
$8C2    $95E4   UNKNOWN  $95E4           ; Unknown 9xxx instruction
$8C4    $2A66   CALL     $A66            ; Call subroutine at A66
$8C6    $B929   JP       V0, $929        ; Jump to V0 + 929
$8C8    $4808   SNE      V8, #08         ; Skip if V8 != 8
$8CA    $F4F5   UNKNOWN  F4F5            ; Unknown Fxxx instruction
$8CC    $87A5   SUB      V7, VA          ; V7 -= VA, VF = !borrow
$8CE    $4779   SNE      V7, #79         ; Skip if V7 != 121
$8D0    $710E   ADD      V1, #0E         ; Add 14 to V1
$8D2    $4D76   SNE      VD, #76         ; Skip if VD != 118
$8D4    $CACE   RND      VA, #CE         ; VA = random & CE
$8D6    $5A00   SE       VA, V0          ; Skip if VA == V0
$8D8    $B572   JP       V0, $572        ; Jump to V0 + 572
$8DA    $D880   DRW      V8, V8, #0      ; Draw 0-byte sprite at V8, V8
$8DC    $12E3   JP       $2E3            ; Jump to 2E3
$8DE    $342B   SE       V4, #2B         ; Skip if V4 == 43
$8E0    $5B60   SE       VB, V6          ; Skip if VB == V6
$8E2    $0FCA   SYS      $FCA            ; System call to FCA
$8E4    $654B   LD       V5, #4B         ; Load 75 into V5
$8E6    $40F9   SNE      V0, #F9         ; Skip if V0 != 249
$8E8    $7A32   ADD      VA, #32         ; Add 50 to VA
$8EA    $649D   LD       V4, #9D         ; Load 157 into V4
$8EC    $72B9   ADD      V2, #B9         ; Add 185 to V2
$8EE    $3D32   SE       VD, #32         ; Skip if VD == 50
$8F0    $668E   LD       V6, #8E         ; Load 142 into V6
$8F2    $378D   SE       V7, #8D         ; Skip if V7 == 141
$8F4    $F4B6   UNKNOWN  F4B6            ; Unknown Fxxx instruction
$8F6    $7CAB   ADD      VC, #AB         ; Add 171 to VC
$8F8    $3FC5   SE       VF, #C5         ; Skip if VF == 197
$8FA    $1508   JP       $508            ; Jump to 508
$8FC    $D617   DRW      V6, V1, #7      ; Draw 7-byte sprite at V6, V1
$8FE    $998D   UNKNOWN  $998D           ; Unknown 9xxx instruction
$900    $8D61   OR       VD, V6          ; VD |= V6
$902    $8700   LD       V7, V0          ; V7 = V0
$904    $200C   CALL     $00C            ; Call subroutine at 00C
$906    $6F02   LD       VF, #02         ; Load 2 into VF
$908    $E2BC   UNKNOWN  $E2BC           ; Unknown Exxx instruction
$90A    $B820   JP       V0, $820        ; Jump to V0 + 820
$90C    $987C   UNKNOWN  $987C           ; Unknown 9xxx instruction
$90E    $1204   JP       $204            ; Jump to 204
$910    $75F5   ADD      V5, #F5         ; Add 245 to V5
$912    $9BED   UNKNOWN  $9BED           ; Unknown 9xxx instruction
$914    $8F60   LD       VF, V6          ; VF = V6
$916    $9320   SNE      V3, V2          ; Skip if V3 != V2
$918    $028B   SYS      $28B            ; System call to 28B
$91A    $BF4E   JP       V0, $F4E        ; Jump to V0 + F4E
$91C    $8B6D   UNKNOWN  8B6D            ; Unknown 8xxx instruction
$91E    $B82A   JP       V0, $82A        ; Jump to V0 + 82A
$920    $2B3F   CALL     $B3F            ; Call subroutine at B3F
$922    $43EF   SNE      V3, #EF         ; Skip if V3 != 239
$924    $7D61   ADD      VD, #61         ; Add 97 to VD
$926    $2627   CALL     $627            ; Call subroutine at 627
$928    $0F15   SYS      $F15            ; System call to F15
$92A    $955D   UNKNOWN  $955D           ; Unknown 9xxx instruction
$92C    $551A   UNKNOWN  $551A           ; Unknown 5xxx instruction
$92E    $9EAA   UNKNOWN  $9EAA           ; Unknown 9xxx instruction
$930    $5908   UNKNOWN  $5908           ; Unknown 5xxx instruction
$932    $B58D   JP       V0, $58D        ; Jump to V0 + 58D
$934    $5980   SE       V9, V8          ; Skip if V9 == V8
$936    $E9F3   UNKNOWN  $E9F3           ; Unknown Exxx instruction
$938    $94EA   UNKNOWN  $94EA           ; Unknown 9xxx instruction
$93A    $23FB   CALL     $3FB            ; Call subroutine at 3FB
$93C    $A7B9   LD       I, $7B9         ; Load 7B9 into I
$93E    $FADD   UNKNOWN  FADD            ; Unknown Fxxx instruction
$940    $DC62   DRW      VC, V6, #2      ; Draw 2-byte sprite at VC, V6
$942    $1479   JP       $479            ; Jump to 479
$944    $8393   XOR      V3, V9          ; V3 ^= V9
$946    $35E0   SE       V5, #E0         ; Skip if V5 == 224
$948    $4D90   SNE      VD, #90         ; Skip if VD != 144
$94A    $9C4F   UNKNOWN  $9C4F           ; Unknown 9xxx instruction
$94C    $32D0   SE       V2, #D0         ; Skip if V2 == 208
$94E    $5113   UNKNOWN  $5113           ; Unknown 5xxx instruction
$950    $18F6   JP       $8F6            ; Jump to 8F6
$952    $F15F   UNKNOWN  F15F            ; Unknown Fxxx instruction
$954    $7B40   ADD      VB, #40         ; Add 64 to VB
$956    $0B75   SYS      $B75            ; System call to B75
$958    $B427   JP       V0, $427        ; Jump to V0 + 427
$95A    $AD50   LD       I, $D50         ; Load D50 into I
$95C    $C9E0   RND      V9, #E0         ; V9 = random & E0
$95E    $7616   ADD      V6, #16         ; Add 22 to V6
$960    $69D3   LD       V9, #D3         ; Load 211 into V9
$962    $AD4B   LD       I, $D4B         ; Load D4B into I
$964    $17E4   JP       $7E4            ; Jump to 7E4
$966    $1B91   JP       $B91            ; Jump to B91
$968    $1471   JP       $471            ; Jump to 471
$96A    $4AC1   SNE      VA, #C1         ; Skip if VA != 193
$96C    $97CA   UNKNOWN  $97CA           ; Unknown 9xxx instruction
$96E    $EFA9   UNKNOWN  $EFA9           ; Unknown Exxx instruction
$970    $145B   JP       $45B            ; Jump to 45B
$972    $1084   JP       $084            ; Jump to 084
$974    $0D34   SYS      $D34            ; System call to D34
$976    $4F3A   SNE      VF, #3A         ; Skip if VF != 58
$978    $88E9   UNKNOWN  88E9            ; Unknown 8xxx instruction
$97A    $B918   JP       V0, $918        ; Jump to V0 + 918
$97C    $37FB   SE       V7, #FB         ; Skip if V7 == 251
$97E    $9637   UNKNOWN  $9637           ; Unknown 9xxx instruction
$980    $AC33   LD       I, $C33         ; Load C33 into I
$982    $8D60   LD       VD, V6          ; VD = V6
$984    $F608   UNKNOWN  F608            ; Unknown Fxxx instruction
$986    $78B7   ADD      V8, #B7         ; Add 183 to V8
$988    $D9CA   DRW      V9, VC, #A      ; Draw 10-byte sprite at V9, VC
$98A    $E73C   UNKNOWN  $E73C           ; Unknown Exxx instruction
$98C    $5FB2   UNKNOWN  $5FB2           ; Unknown 5xxx instruction
$98E    $6296   LD       V2, #96         ; Load 150 into V2
$990    $CA37   RND      VA, #37         ; VA = random & 37
$992    $AC55   LD       I, $C55         ; Load C55 into I
$994    $9266   UNKNOWN  $9266           ; Unknown 9xxx instruction
$996    $C7E7   RND      V7, #E7         ; V7 = random & E7
$998    $027A   SYS      $27A            ; System call to 27A
$99A    $EB50   UNKNOWN  $EB50           ; Unknown Exxx instruction
$99C    $FBBF   UNKNOWN  FBBF            ; Unknown Fxxx instruction
$99E    $24B5   CALL     $4B5            ; Call subroutine at 4B5
$9A0    $9D12   UNKNOWN  $9D12           ; Unknown 9xxx instruction
$9A2    $9972   UNKNOWN  $9972           ; Unknown 9xxx instruction
$9A4    $269B   CALL     $69B            ; Call subroutine at 69B
$9A6    $807C   UNKNOWN  807C            ; Unknown 8xxx instruction
$9A8    $0151   SYS      $151            ; System call to 151
$9AA    $E36F   UNKNOWN  $E36F           ; Unknown Exxx instruction
$9AC    $79FF   ADD      V9, #FF         ; Add 255 to V9
$9AE    $93FE   UNKNOWN  $93FE           ; Unknown 9xxx instruction
$9B0    $4C92   SNE      VC, #92         ; Skip if VC != 146
$9B2    $589E   UNKNOWN  $589E           ; Unknown 5xxx instruction
$9B4    $D66A   DRW      V6, V6, #A      ; Draw 10-byte sprite at V6, V6
$9B6    $E8F8   UNKNOWN  $E8F8           ; Unknown Exxx instruction
$9B8    $F7A7   UNKNOWN  F7A7            ; Unknown Fxxx instruction
$9BA    $DF9C   DRW      VF, V9, #C      ; Draw 12-byte sprite at VF, V9
$9BC    $14AB   JP       $4AB            ; Jump to 4AB
$9BE    $435F   SNE      V3, #5F         ; Skip if V3 != 95
$9C0    $D9C4   DRW      V9, VC, #4      ; Draw 4-byte sprite at V9, VC
$9C2    $6E57   LD       VE, #57         ; Load 87 into VE
$9C4    $13E4   JP       $3E4            ; Jump to 3E4
$9C6    $98AA   UNKNOWN  $98AA           ; Unknown 9xxx instruction
$9C8    $5E39   UNKNOWN  $5E39           ; Unknown 5xxx instruction
$9CA    $F7AD   UNKNOWN  F7AD            ; Unknown Fxxx instruction
$9CC    $4AF8   SNE      VA, #F8         ; Skip if VA != 248
$9CE    $841E   SHL      V4              ; V4 <<= 1, VF = MSB
$9D0    $01DE   SYS      $1DE            ; System call to 1DE
$9D2    $9A95   UNKNOWN  $9A95           ; Unknown 9xxx instruction
$9D4    $FAE8   UNKNOWN  FAE8            ; Unknown Fxxx instruction
$9D6    $A88D   LD       I, $88D         ; Load 88D into I
$9D8    $F1FA   UNKNOWN  F1FA            ; Unknown Fxxx instruction
$9DA    $A760   LD       I, $760         ; Load 760 into I
$9DC    $5F77   UNKNOWN  $5F77           ; Unknown 5xxx instruction
$9DE    $5B6D   UNKNOWN  $5B6D           ; Unknown 5xxx instruction
$9E0    $EB82   UNKNOWN  $EB82           ; Unknown Exxx instruction
$9E2    $C4B2   RND      V4, #B2         ; V4 = random & B2
$9E4    $A9CD   LD       I, $9CD         ; Load 9CD into I
$9E6    $1D96   JP       $D96            ; Jump to D96
$9E8    $3602   SE       V6, #02         ; Skip if V6 == 2
$9EA    $501C   UNKNOWN  $501C           ; Unknown 5xxx instruction
$9EC    $5BCE   UNKNOWN  $5BCE           ; Unknown 5xxx instruction
$9EE    $4FBD   SNE      VF, #BD         ; Skip if VF != 189
$9F0    $93B5   UNKNOWN  $93B5           ; Unknown 9xxx instruction
$9F2    $2319   CALL     $319            ; Call subroutine at 319
$9F4    $02E9   SYS      $2E9            ; System call to 2E9
$9F6    $32AF   SE       V2, #AF         ; Skip if V2 == 175
$9F8    $2BFB   CALL     $BFB            ; Call subroutine at BFB
$9FA    $E21D   UNKNOWN  $E21D           ; Unknown Exxx instruction
$9FC    $C406   RND      V4, #06         ; V4 = random & 06
$9FE    $A434   LD       I, $434         ; Load 434 into I
$A00    $B8D5   JP       V0, $8D5        ; Jump to V0 + 8D5
$A02    $45DE   SNE      V5, #DE         ; Skip if V5 != 222
$A04    $1ADA   JP       $ADA            ; Jump to ADA
$A06    $282E   CALL     $82E            ; Call subroutine at 82E
$A08    $2BBA   CALL     $BBA            ; Call subroutine at BBA
$A0A    $FF3A   UNKNOWN  FF3A            ; Unknown Fxxx instruction
$A0C    $2277   CALL     $277            ; Call subroutine at 277
$A0E    $5FEB   UNKNOWN  $5FEB           ; Unknown 5xxx instruction
$A10    $143A   JP       $43A            ; Jump to 43A
$A12    $5510   SE       V5, V1          ; Skip if V5 == V1
$A14    $E5BE   UNKNOWN  $E5BE           ; Unknown Exxx instruction
$A16    $8A1C   UNKNOWN  8A1C            ; Unknown 8xxx instruction
$A18    $C483   RND      V4, #83         ; V4 = random & 83
$A1A    $1F24   JP       $F24            ; Jump to F24
$A1C    $4A12   SNE      VA, #12         ; Skip if VA != 18
$A1E    $CA0C   RND      VA, #0C         ; VA = random & 0C
$A20    $D8A5   DRW      V8, VA, #5      ; Draw 5-byte sprite at V8, VA
$A22    $1B00   JP       $B00            ; Jump to B00
$A24    $9A8E   UNKNOWN  $9A8E           ; Unknown 9xxx instruction
$A26    $0D7E   SYS      $D7E            ; System call to D7E
$A28    $C8C4   RND      V8, #C4         ; V8 = random & C4
$A2A    $2C2C   CALL     $C2C            ; Call subroutine at C2C
$A2C    $010C   SYS      $10C            ; System call to 10C
$A2E    $CE59   RND      VE, #59         ; VE = random & 59
$A30    $BBFD   JP       V0, $BFD        ; Jump to V0 + BFD
$A32    $7E7C   ADD      VE, #7C         ; Add 124 to VE
$A34    $C70C   RND      V7, #0C         ; V7 = random & 0C
$A36    $E1DD   UNKNOWN  $E1DD           ; Unknown Exxx instruction
$A38    $54BE   UNKNOWN  $54BE           ; Unknown 5xxx instruction
$A3A    $F46A   UNKNOWN  F46A            ; Unknown Fxxx instruction
$A3C    $6727   LD       V7, #27         ; Load 39 into V7
$A3E    $7B98   ADD      VB, #98         ; Add 152 to VB
$A40    $D4DA   DRW      V4, VD, #A      ; Draw 10-byte sprite at V4, VD
$A42    $C8C2   RND      V8, #C2         ; V8 = random & C2
$A44    $2CBE   CALL     $CBE            ; Call subroutine at CBE
$A46    $41AD   SNE      V1, #AD         ; Skip if V1 != 173
$A48    $4BCD   SNE      VB, #CD         ; Skip if VB != 205
$A4A    $C526   RND      V5, #26         ; V5 = random & 26
$A4C    $A772   LD       I, $772         ; Load 772 into I
$A4E    $8339   UNKNOWN  8339            ; Unknown 8xxx instruction
$A50    $760A   ADD      V6, #0A         ; Add 10 to V6
$A52    $186C   JP       $86C            ; Jump to 86C
$A54    $D351   DRW      V3, V5, #1      ; Draw 1-byte sprite at V3, V5
$A56    $E6B1   UNKNOWN  $E6B1           ; Unknown Exxx instruction
$A58    $AB19   LD       I, $B19         ; Load B19 into I
$A5A    $7EAB   ADD      VE, #AB         ; Add 171 to VE
$A5C    $6B01   LD       VB, #01         ; Load 1 into VB
$A5E    $8533   XOR      V5, V3          ; V5 ^= V3
$A60    $D2C2   DRW      V2, VC, #2      ; Draw 2-byte sprite at V2, VC
$A62    $6C96   LD       VC, #96         ; Load 150 into VC
$A64    $270E   CALL     $70E            ; Call subroutine at 70E
$A66    $522B   UNKNOWN  $522B           ; Unknown 5xxx instruction
$A68    $0EBE   SYS      $EBE            ; System call to EBE
$A6A    $C97C   RND      V9, #7C         ; V9 = random & 7C
$A6C    $6B2B   LD       VB, #2B         ; Load 43 into VB
$A6E    $5E66   UNKNOWN  $5E66           ; Unknown 5xxx instruction
$A70    $44A4   SNE      V4, #A4         ; Skip if V4 != 164
$A72    $C719   RND      V7, #19         ; V7 = random & 19
$A74    $E708   UNKNOWN  $E708           ; Unknown Exxx instruction
$A76    $F28B   UNKNOWN  F28B            ; Unknown Fxxx instruction
$A78    $121A   JP       $21A            ; Jump to 21A
$A7A    $1EDB   JP       $EDB            ; Jump to EDB
$A7C    $C7AF   RND      V7, #AF         ; V7 = random & AF
$A7E    $DCAD   DRW      VC, VA, #D      ; Draw 13-byte sprite at VC, VA
$A80    $3A49   SE       VA, #49         ; Skip if VA == 73
$A82    $350F   SE       V5, #0F         ; Skip if V5 == 15
$A84    $F477   UNKNOWN  F477            ; Unknown Fxxx instruction
$A86    $1C0B   JP       $C0B            ; Jump to C0B
$A88    $9470   SNE      V4, V7          ; Skip if V4 != V7
$A8A    $8973   XOR      V9, V7          ; V9 ^= V7
$A8C    $DFD9   DRW      VF, VD, #9      ; Draw 9-byte sprite at VF, VD
$A8E    $4270   SNE      V2, #70         ; Skip if V2 != 112
$A90    $C493   RND      V4, #93         ; V4 = random & 93
$A92    $2379   CALL     $379            ; Call subroutine at 379
$A94    $8980   LD       V9, V8          ; V9 = V8
$A96    $3111   SE       V1, #11         ; Skip if V1 == 17
$A98    $43B3   SNE      V3, #B3         ; Skip if V3 != 179
$A9A    $66F9   LD       V6, #F9         ; Load 249 into V6
$A9C    $A989   LD       I, $989         ; Load 989 into I
$A9E    $A5F4   LD       I, $5F4         ; Load 5F4 into I
$AA0    $C8EB   RND      V8, #EB         ; V8 = random & EB
$AA2    $BC6C   JP       V0, $C6C        ; Jump to V0 + C6C
$AA4    $8513   XOR      V5, V1          ; V5 ^= V1
$AA6    $C86B   RND      V8, #6B         ; V8 = random & 6B
$AA8    $DD8F   DRW      VD, V8, #F      ; Draw 15-byte sprite at VD, V8
$AAA    $396C   SE       V9, #6C         ; Skip if V9 == 108
$AAC    $7673   ADD      V6, #73         ; Add 115 to V6
$AAE    $6B9C   LD       VB, #9C         ; Load 156 into VB
$AB0    $52F3   UNKNOWN  $52F3           ; Unknown 5xxx instruction
$AB2    $B4A2   JP       V0, $4A2        ; Jump to V0 + 4A2
$AB4    $151A   JP       $51A            ; Jump to 51A
$AB6    $AE52   LD       I, $E52         ; Load E52 into I
$AB8    $417F   SNE      V1, #7F         ; Skip if V1 != 127
$ABA    $F732   UNKNOWN  F732            ; Unknown Fxxx instruction
$ABC    $BEB5   JP       V0, $EB5        ; Jump to V0 + EB5
$ABE    $4F62   SNE      VF, #62         ; Skip if VF != 98
$AC0    $8560   LD       V5, V6          ; V5 = V6
$AC2    $836D   UNKNOWN  836D            ; Unknown 8xxx instruction
$AC4    $0574   SYS      $574            ; System call to 574
$AC6    $0340   SYS      $340            ; System call to 340
$AC8    $4969   SNE      V9, #69         ; Skip if V9 != 105
$ACA    $E670   UNKNOWN  $E670           ; Unknown Exxx instruction
$ACC    $84EE   SHL      V4              ; V4 <<= 1, VF = MSB
$ACE    $14D6   JP       $4D6            ; Jump to 4D6
$AD0    $1508   JP       $508            ; Jump to 508
$AD2    $1D46   JP       $D46            ; Jump to D46
$AD4    $1FE1   JP       $FE1            ; Jump to FE1
$AD6    $7EAC   ADD      VE, #AC         ; Add 172 to VE
$AD8    $FE45   UNKNOWN  FE45            ; Unknown Fxxx instruction
$ADA    $227E   CALL     $27E            ; Call subroutine at 27E
$ADC    $C460   RND      V4, #60         ; V4 = random & 60
$ADE    $E0D5   UNKNOWN  $E0D5           ; Unknown Exxx instruction
$AE0    $F2EE   UNKNOWN  F2EE            ; Unknown Fxxx instruction
$AE2    $BF99   JP       V0, $F99        ; Jump to V0 + F99
$AE4    $8846   SHR      V8              ; V8 >>= 1, VF = LSB
$AE6    $F3DD   UNKNOWN  F3DD            ; Unknown Fxxx instruction
$AE8    $F355   LD       [I], V3         ; Store V0-V3 at I
$AEA    $162C   JP       $62C            ; Jump to 62C
$AEC    $9F53   UNKNOWN  $9F53           ; Unknown 9xxx instruction
$AEE    $7182   ADD      V1, #82         ; Add 130 to V1
$AF0    $C887   RND      V8, #87         ; V8 = random & 87
$AF2    $0979   SYS      $979            ; System call to 979
$AF4    $C591   RND      V5, #91         ; V5 = random & 91
$AF6    $1FFB   JP       $FFB            ; Jump to FFB
$AF8    $F1E9   UNKNOWN  F1E9            ; Unknown Fxxx instruction
$AFA    $D163   DRW      V1, V6, #3      ; Draw 3-byte sprite at V1, V6
$AFC    $21EE   CALL     $1EE            ; Call subroutine at 1EE
$AFE    $85D7   SUBN     V5, VD          ; V5 = VD - V5, VF = !borrow
$B00    $9DF3   UNKNOWN  $9DF3           ; Unknown 9xxx instruction
$B02    $B831   JP       V0, $831        ; Jump to V0 + 831
$B04    $5324   UNKNOWN  $5324           ; Unknown 5xxx instruction
$B06    $A09A   LD       I, $09A         ; Load 09A into I
$B08    $8605   SUB      V6, V0          ; V6 -= V0, VF = !borrow
$B0A    $0C45   SYS      $C45            ; System call to C45
$B0C    $ABA6   LD       I, $BA6         ; Load BA6 into I
$B0E    $8BD0   LD       VB, VD          ; VB = VD
$B10    $7E28   ADD      VE, #28         ; Add 40 to VE
$B12    $5855   UNKNOWN  $5855           ; Unknown 5xxx instruction
$B14    $E52D   UNKNOWN  $E52D           ; Unknown Exxx instruction
$B16    $B791   JP       V0, $791        ; Jump to V0 + 791
$B18    $9BB6   UNKNOWN  $9BB6           ; Unknown 9xxx instruction
$B1A    $8644   ADD      V6, V4          ; V6 += V4, VF = carry
$B1C    $A14B   LD       I, $14B         ; Load 14B into I
$B1E    $8E50   LD       VE, V5          ; VE = V5
$B20    $46FB   SNE      V6, #FB         ; Skip if V6 != 251
$B22    $38A4   SE       V8, #A4         ; Skip if V8 == 164
$B24    $D38C   DRW      V3, V8, #C      ; Draw 12-byte sprite at V3, V8
$B26    $E26C   UNKNOWN  $E26C           ; Unknown Exxx instruction
$B28    $F23E   UNKNOWN  F23E            ; Unknown Fxxx instruction
$B2A    $D51E   DRW      V5, V1, #E      ; Draw 14-byte sprite at V5, V1
$B2C    $EA5B   UNKNOWN  $EA5B           ; Unknown Exxx instruction
$B2E    $B9AD   JP       V0, $9AD        ; Jump to V0 + 9AD
$B30    $FE19   UNKNOWN  FE19            ; Unknown Fxxx instruction
$B32    $A1C9   LD       I, $1C9         ; Load 1C9 into I
$B34    $97B4   UNKNOWN  $97B4           ; Unknown 9xxx instruction
$B36    $1E8C   JP       $E8C            ; Jump to E8C
$B38    $77EF   ADD      V7, #EF         ; Add 239 to V7
$B3A    $DF41   DRW      VF, V4, #1      ; Draw 1-byte sprite at VF, V4
$B3C    $618E   LD       V1, #8E         ; Load 142 into V1
$B3E    $7F1B   ADD      VF, #1B         ; Add 27 to VF
$B40    $F8C4   UNKNOWN  F8C4            ; Unknown Fxxx instruction
$B42    $4B0F   SNE      VB, #0F         ; Skip if VB != 15
$B44    $AF62   LD       I, $F62         ; Load F62 into I
$B46    $3A38   SE       VA, #38         ; Skip if VA == 56
$B48    $1D48   JP       $D48            ; Jump to D48
$B4A    $4F1D   SNE      VF, #1D         ; Skip if VF != 29
$B4C    $8CDE   SHL      VC              ; VC <<= 1, VF = MSB
$B4E    $A62A   LD       I, $62A         ; Load 62A into I
$B50    $049E   SYS      $49E            ; System call to 49E
$B52    $8146   SHR      V1              ; V1 >>= 1, VF = LSB
$B54    $AF29   LD       I, $F29         ; Load F29 into I
$B56    $8E20   LD       VE, V2          ; VE = V2
$B58    $969B   UNKNOWN  $969B           ; Unknown 9xxx instruction
$B5A    $7103   ADD      V1, #03         ; Add 3 to V1
$B5C    $5E22   UNKNOWN  $5E22           ; Unknown 5xxx instruction
$B5E    $609E   LD       V0, #9E         ; Load 158 into V0
$B60    $4904   SNE      V9, #04         ; Skip if V9 != 4
$B62    $4045   SNE      V0, #45         ; Skip if V0 != 69
$B64    $AB00   LD       I, $B00         ; Load B00 into I
$B66    $7A6C   ADD      VA, #6C         ; Add 108 to VA
$B68    $2248   CALL     $248            ; Call subroutine at 248
$B6A    $77DA   ADD      V7, #DA         ; Add 218 to V7
$B6C    $47C9   SNE      V7, #C9         ; Skip if V7 != 201
$B6E    $F932   UNKNOWN  F932            ; Unknown Fxxx instruction
$B70    $68C2   LD       V8, #C2         ; Load 194 into V8
$B72    $971D   UNKNOWN  $971D           ; Unknown 9xxx instruction
$B74    $32D3   SE       V2, #D3         ; Skip if V2 == 211
$B76    $0B83   SYS      $B83            ; System call to B83
$B78    $76B3   ADD      V6, #B3         ; Add 179 to V6
$B7A    $1E35   JP       $E35            ; Jump to E35
$B7C    $1A1F   JP       $A1F            ; Jump to A1F
$B7E    $095D   SYS      $95D            ; System call to 95D
$B80    $46D5   SNE      V6, #D5         ; Skip if V6 != 213
$B82    $6FF8   LD       VF, #F8         ; Load 248 into VF
$B84    $7609   ADD      V6, #09         ; Add 9 to V6
$B86    $802B   UNKNOWN  802B            ; Unknown 8xxx instruction
$B88    $1C57   JP       $C57            ; Jump to C57
$B8A    $8AFB   UNKNOWN  8AFB            ; Unknown 8xxx instruction
$B8C    $3313   SE       V3, #13         ; Skip if V3 == 19
$B8E    $49FE   SNE      V9, #FE         ; Skip if V9 != 254
$B90    $7D5B   ADD      VD, #5B         ; Add 91 to VD
$B92    $453C   SNE      V5, #3C         ; Skip if V5 != 60
$B94    $93B5   UNKNOWN  $93B5           ; Unknown 9xxx instruction
$B96    $B9EC   JP       V0, $9EC        ; Jump to V0 + 9EC
$B98    $DB5C   DRW      VB, V5, #C      ; Draw 12-byte sprite at VB, V5
$B9A    $A2F6   LD       I, $2F6         ; Load 2F6 into I
$B9C    $8110   LD       V1, V1          ; V1 = V1
$B9E    $998D   UNKNOWN  $998D           ; Unknown 9xxx instruction
$BA0    $8E67   SUBN     VE, V6          ; VE = V6 - VE, VF = !borrow
$BA2    $7106   ADD      V1, #06         ; Add 6 to V1
$BA4    $897F   UNKNOWN  897F            ; Unknown 8xxx instruction
$BA6    $7761   ADD      V7, #61         ; Add 97 to V7
$BA8    $3221   SE       V2, #21         ; Skip if V2 == 33
$BAA    $4C37   SNE      VC, #37         ; Skip if VC != 55
$BAC    $5BDE   UNKNOWN  $5BDE           ; Unknown 5xxx instruction
$BAE    $5D47   UNKNOWN  $5D47           ; Unknown 5xxx instruction
$BB0    $73FC   ADD      V3, #FC         ; Add 252 to V3
$BB2    $6ABA   LD       VA, #BA         ; Load 186 into VA
$BB4    $DB71   DRW      VB, V7, #1      ; Draw 1-byte sprite at VB, V7
$BB6    $3F60   SE       VF, #60         ; Skip if VF == 96
$BB8    $FB80   UNKNOWN  FB80            ; Unknown Fxxx instruction
$BBA    $CE48   RND      VE, #48         ; VE = random & 48
$BBC    $33AE   SE       V3, #AE         ; Skip if V3 == 174
$BBE    $9696   UNKNOWN  $9696           ; Unknown 9xxx instruction
$BC0    $B621   JP       V0, $621        ; Jump to V0 + 621
$BC2    $CD20   RND      VD, #20         ; VD = random & 20
$BC4    $A5F5   LD       I, $5F5         ; Load 5F5 into I
$BC6    $79F2   ADD      V9, #F2         ; Add 242 to V9
$BC8    $24F3   CALL     $4F3            ; Call subroutine at 4F3
$BCA    $D356   DRW      V3, V5, #6      ; Draw 6-byte sprite at V3, V5
$BCC    $A513   LD       I, $513         ; Load 513 into I
$BCE    $109D   JP       $09D            ; Jump to 09D
$BD0    $A028   LD       I, $028         ; Load 028 into I
$BD2    $176F   JP       $76F            ; Jump to 76F
$BD4    $17AD   JP       $7AD            ; Jump to 7AD
$BD6    $E325   UNKNOWN  $E325           ; Unknown Exxx instruction
$BD8    $7DC7   ADD      VD, #C7         ; Add 199 to VD
$BDA    $CBC7   RND      VB, #C7         ; VB = random & C7
$BDC    $E5D7   UNKNOWN  $E5D7           ; Unknown Exxx instruction
$BDE    $0EEC   SYS      $EEC            ; System call to EEC
$BE0    $37C3   SE       V7, #C3         ; Skip if V7 == 195
$BE2    $6547   LD       V5, #47         ; Load 71 into V5
$BE4    $0492   SYS      $492            ; System call to 492
$BE6    $6DD0   LD       VD, #D0         ; Load 208 into VD
$BE8    $B41B   JP       V0, $41B        ; Jump to V0 + 41B
$BEA    $80C1   OR       V0, VC          ; V0 |= VC
$BEC    $D6E6   DRW      V6, VE, #6      ; Draw 6-byte sprite at V6, VE
$BEE    $5337   UNKNOWN  $5337           ; Unknown 5xxx instruction
$BF0    $CAFD   RND      VA, #FD         ; VA = random & FD
$BF2    $F8E3   UNKNOWN  F8E3            ; Unknown Fxxx instruction
$BF4    $D7A9   DRW      V7, VA, #9      ; Draw 9-byte sprite at V7, VA
$BF6    $D7A7   DRW      V7, VA, #7      ; Draw 7-byte sprite at V7, VA
$BF8    $87C6   SHR      V7              ; V7 >>= 1, VF = LSB
$BFA    $A205   LD       I, $205         ; Load 205 into I
$BFC    $D4D4   DRW      V4, VD, #4      ; Draw 4-byte sprite at V4, VD
$BFE    $478E   SNE      V7, #8E         ; Skip if V7 != 142
$C00    $4FFB   SNE      VF, #FB         ; Skip if VF != 251
$C02    $EDEC   UNKNOWN  $EDEC           ; Unknown Exxx instruction
$C04    $3562   SE       V5, #62         ; Skip if V5 == 98
$C06    $0F36   SYS      $F36            ; System call to F36
$C08    $342F   SE       V4, #2F         ; Skip if V4 == 47
$C0A    $7073   ADD      V0, #73         ; Add 115 to V0
$C0C    $B98A   JP       V0, $98A        ; Jump to V0 + 98A
$C0E    $914D   UNKNOWN  $914D           ; Unknown 9xxx instruction
$C10    $D97B   DRW      V9, V7, #B      ; Draw 11-byte sprite at V9, V7
$C12    $B14A   JP       V0, $14A        ; Jump to V0 + 14A
$C14    $3240   SE       V2, #40         ; Skip if V2 == 64
$C16    $1CF6   JP       $CF6            ; Jump to CF6
$C18    $7AA6   ADD      VA, #A6         ; Add 166 to VA
$C1A    $8117   SUBN     V1, V1          ; V1 = V1 - V1, VF = !borrow
$C1C    $02A1   SYS      $2A1            ; System call to 2A1
$C1E    $CB16   RND      VB, #16         ; VB = random & 16
$C20    $C5A2   RND      V5, #A2         ; V5 = random & A2
$C22    $0E86   SYS      $E86            ; System call to E86
$C24    $8529   UNKNOWN  8529            ; Unknown 8xxx instruction
$C26    $012C   SYS      $12C            ; System call to 12C
$C28    $E19B   UNKNOWN  $E19B           ; Unknown Exxx instruction
$C2A    $B624   JP       V0, $624        ; Jump to V0 + 624
$C2C    $433F   SNE      V3, #3F         ; Skip if V3 != 63
$C2E    $C679   RND      V6, #79         ; V6 = random & 79
$C30    $5487   UNKNOWN  $5487           ; Unknown 5xxx instruction
$C32    $37F7   SE       V7, #F7         ; Skip if V7 == 247
$C34    $D975   DRW      V9, V7, #5      ; Draw 5-byte sprite at V9, V7
$C36    $F639   UNKNOWN  F639            ; Unknown Fxxx instruction
$C38    $9468   UNKNOWN  $9468           ; Unknown 9xxx instruction
$C3A    $7195   ADD      V1, #95         ; Add 149 to V1
$C3C    $AAFB   LD       I, $AFB         ; Load AFB into I
$C3E    $477E   SNE      V7, #7E         ; Skip if V7 != 126
$C40    $5756   UNKNOWN  $5756           ; Unknown 5xxx instruction
$C42    $CD07   RND      VD, #07         ; VD = random & 07
$C44    $B3DB   JP       V0, $3DB        ; Jump to V0 + 3DB
$C46    $1583   JP       $583            ; Jump to 583
$C48    $BBA8   JP       V0, $BA8        ; Jump to V0 + BA8
$C4A    $8A7E   SHL      VA              ; VA <<= 1, VF = MSB
$C4C    $B35E   JP       V0, $35E        ; Jump to V0 + 35E
$C4E    $D214   DRW      V2, V1, #4      ; Draw 4-byte sprite at V2, V1
$C50    $F35E   UNKNOWN  F35E            ; Unknown Fxxx instruction
$C52    $3C64   SE       VC, #64         ; Skip if VC == 100
$C54    $523F   UNKNOWN  $523F           ; Unknown 5xxx instruction
$C56    $E003   UNKNOWN  $E003           ; Unknown Exxx instruction
$C58    $F888   UNKNOWN  F888            ; Unknown Fxxx instruction
$C5A    $9165   UNKNOWN  $9165           ; Unknown 9xxx instruction
$C5C    $7388   ADD      V3, #88         ; Add 136 to V3
$C5E    $871B   UNKNOWN  871B            ; Unknown 8xxx instruction
$C60    $EF2F   UNKNOWN  $EF2F           ; Unknown Exxx instruction
$C62    $ECD8   UNKNOWN  $ECD8           ; Unknown Exxx instruction
$C64    $8E55   SUB      VE, V5          ; VE -= V5, VF = !borrow
$C66    $2FD1   CALL     $FD1            ; Call subroutine at FD1
$C68    $EC36   UNKNOWN  $EC36           ; Unknown Exxx instruction
$C6A    $6DA1   LD       VD, #A1         ; Load 161 into VD
$C6C    $7561   ADD      V5, #61         ; Add 97 to V5
$C6E    $A43E   LD       I, $43E         ; Load 43E into I
$C70    $BF9E   JP       V0, $F9E        ; Jump to V0 + F9E
$C72    $A28D   LD       I, $28D         ; Load 28D into I
$C74    $247B   CALL     $47B            ; Call subroutine at 47B
$C76    $4090   SNE      V0, #90         ; Skip if V0 != 144
$C78    $79BE   ADD      V9, #BE         ; Add 190 to V9
$C7A    $5E57   UNKNOWN  $5E57           ; Unknown 5xxx instruction
$C7C    $EEDA   UNKNOWN  $EEDA           ; Unknown Exxx instruction
$C7E    $8B83   XOR      VB, V8          ; VB ^= V8
$C80    $0BE4   SYS      $BE4            ; System call to BE4
$C82    $F5D1   UNKNOWN  F5D1            ; Unknown Fxxx instruction
$C84    $2FB3   CALL     $FB3            ; Call subroutine at FB3
$C86    $1E97   JP       $E97            ; Jump to E97
$C88    $B05B   JP       V0, $05B        ; Jump to V0 + 05B
$C8A    $4AA4   SNE      VA, #A4         ; Skip if VA != 164
$C8C    $9D47   UNKNOWN  $9D47           ; Unknown 9xxx instruction
$C8E    $D070   DRW      V0, V7, #0      ; Draw 0-byte sprite at V0, V7
$C90    $E69C   UNKNOWN  $E69C           ; Unknown Exxx instruction
$C92    $ED3A   UNKNOWN  $ED3A           ; Unknown Exxx instruction
$C94    $7B3B   ADD      VB, #3B         ; Add 59 to VB
$C96    $F81C   UNKNOWN  F81C            ; Unknown Fxxx instruction
$C98    $1D54   JP       $D54            ; Jump to D54
$C9A    $FCA4   UNKNOWN  FCA4            ; Unknown Fxxx instruction
$C9C    $FE28   UNKNOWN  FE28            ; Unknown Fxxx instruction
$C9E    $ECB9   UNKNOWN  $ECB9           ; Unknown Exxx instruction
$CA0    $33FE   SE       V3, #FE         ; Skip if V3 == 254
$CA2    $98D5   UNKNOWN  $98D5           ; Unknown 9xxx instruction
$CA4    $24B4   CALL     $4B4            ; Call subroutine at 4B4
$CA6    $586B   UNKNOWN  $586B           ; Unknown 5xxx instruction
$CA8    $7B74   ADD      VB, #74         ; Add 116 to VB
$CAA    $7165   ADD      V1, #65         ; Add 101 to V1
$CAC    $3BF9   SE       VB, #F9         ; Skip if VB == 249
$CAE    $D4B0   DRW      V4, VB, #0      ; Draw 0-byte sprite at V4, VB
$CB0    $94BB   UNKNOWN  $94BB           ; Unknown 9xxx instruction
$CB2    $06ED   SYS      $6ED            ; System call to 6ED
$CB4    $48A7   SNE      V8, #A7         ; Skip if V8 != 167
$CB6    $46EF   SNE      V6, #EF         ; Skip if V6 != 239
$CB8    $3210   SE       V2, #10         ; Skip if V2 == 16
$CBA    $E48A   UNKNOWN  $E48A           ; Unknown Exxx instruction
$CBC    $937A   UNKNOWN  $937A           ; Unknown 9xxx instruction
$CBE    $4C79   SNE      VC, #79         ; Skip if VC != 121
$CC0    $E3B5   UNKNOWN  $E3B5           ; Unknown Exxx instruction
$CC2    $A4E6   LD       I, $4E6         ; Load 4E6 into I
$CC4    $88A8   UNKNOWN  88A8            ; Unknown 8xxx instruction
$CC6    $19CC   JP       $9CC            ; Jump to 9CC
$CC8    $E9CA   UNKNOWN  $E9CA           ; Unknown Exxx instruction
$CCA    $5DC2   UNKNOWN  $5DC2           ; Unknown 5xxx instruction
$CCC    $34F0   SE       V4, #F0         ; Skip if V4 == 240
$CCE    $1F37   JP       $F37            ; Jump to F37
$CD0    $41A4   SNE      V1, #A4         ; Skip if V1 != 164
$CD2    $334F   SE       V3, #4F         ; Skip if V3 == 79
$CD4    $C30B   RND      V3, #0B         ; V3 = random & 0B
$CD6    $860F   UNKNOWN  860F            ; Unknown 8xxx instruction
$CD8    $5C17   UNKNOWN  $5C17           ; Unknown 5xxx instruction
$CDA    $F56A   UNKNOWN  F56A            ; Unknown Fxxx instruction
$CDC    $CE1F   RND      VE, #1F         ; VE = random & 1F
$CDE    $2511   CALL     $511            ; Call subroutine at 511
$CE0    $0B87   SYS      $B87            ; System call to B87
$CE2    $AEC7   LD       I, $EC7         ; Load EC7 into I
$CE4    $0227   SYS      $227            ; System call to 227
$CE6    $A476   LD       I, $476         ; Load 476 into I
$CE8    $6A5B   LD       VA, #5B         ; Load 91 into VA
$CEA    $E030   UNKNOWN  $E030           ; Unknown Exxx instruction
$CEC    $2064   CALL     $064            ; Call subroutine at 064
$CEE    $F2F8   UNKNOWN  F2F8            ; Unknown Fxxx instruction
$CF0    $BC15   JP       V0, $C15        ; Jump to V0 + C15
$CF2    $7950   ADD      V9, #50         ; Add 80 to V9
$CF4    $181F   JP       $81F            ; Jump to 81F
$CF6    $55FE   UNKNOWN  $55FE           ; Unknown 5xxx instruction
$CF8    $E8EC   UNKNOWN  $E8EC           ; Unknown Exxx instruction
$CFA    $6CFD   LD       VC, #FD         ; Load 253 into VC
$CFC    $CA83   RND      VA, #83         ; VA = random & 83
$CFE    $CE5B   RND      VE, #5B         ; VE = random & 5B
$D00    $EEE9   UNKNOWN  $EEE9           ; Unknown Exxx instruction
$D02    $A612   LD       I, $612         ; Load 612 into I
$D04    $3F52   SE       VF, #52         ; Skip if VF == 82
$D06    $3083   SE       V0, #83         ; Skip if V0 == 131
$D08    $E269   UNKNOWN  $E269           ; Unknown Exxx instruction
$D0A    $F46B   UNKNOWN  F46B            ; Unknown Fxxx instruction
$D0C    $CD4E   RND      VD, #4E         ; VD = random & 4E
$D0E    $C223   RND      V2, #23         ; V2 = random & 23
$D10    $0CBB   SYS      $CBB            ; System call to CBB
$D12    $ACB2   LD       I, $CB2         ; Load CB2 into I
$D14    $3319   SE       V3, #19         ; Skip if V3 == 25
$D16    $3872   SE       V8, #72         ; Skip if V8 == 114
$D18    $988E   UNKNOWN  $988E           ; Unknown 9xxx instruction
$D1A    $3312   SE       V3, #12         ; Skip if V3 == 18
$D1C    $22FA   CALL     $2FA            ; Call subroutine at 2FA
$D1E    $90DE   UNKNOWN  $90DE           ; Unknown 9xxx instruction
$D20    $E884   UNKNOWN  $E884           ; Unknown Exxx instruction
$D22    $5777   UNKNOWN  $5777           ; Unknown 5xxx instruction
$D24    $0014   SYS      $014            ; System call to 014
$D26    $0E52   SYS      $E52            ; System call to E52
$D28    $3094   SE       V0, #94         ; Skip if V0 == 148
$D2A    $F085   UNKNOWN  F085            ; Unknown Fxxx instruction
$D2C    $D0CA   DRW      V0, VC, #A      ; Draw 10-byte sprite at V0, VC
$D2E    $D11C   DRW      V1, V1, #C      ; Draw 12-byte sprite at V1, V1
$D30    $827D   UNKNOWN  827D            ; Unknown 8xxx instruction
$D32    $4A1D   SNE      VA, #1D         ; Skip if VA != 29
$D34    $FB70   UNKNOWN  FB70            ; Unknown Fxxx instruction
$D36    $0F82   SYS      $F82            ; System call to F82
$D38    $C0C2   RND      V0, #C2         ; V0 = random & C2
$D3A    $F681   UNKNOWN  F681            ; Unknown Fxxx instruction
$D3C    $8D0F   UNKNOWN  8D0F            ; Unknown 8xxx instruction
$D3E    $7A2D   ADD      VA, #2D         ; Add 45 to VA
$D40    $4275   SNE      V2, #75         ; Skip if V2 != 117
$D42    $D9F4   DRW      V9, VF, #4      ; Draw 4-byte sprite at V9, VF
$D44    $3A6E   SE       VA, #6E         ; Skip if VA == 110
$D46    $75A7   ADD      V5, #A7         ; Add 167 to V5
$D48    $7953   ADD      V9, #53         ; Add 83 to V9
$D4A    $D481   DRW      V4, V8, #1      ; Draw 1-byte sprite at V4, V8
$D4C    $ACED   LD       I, $CED         ; Load CED into I
$D4E    $6E5B   LD       VE, #5B         ; Load 91 into VE
$D50    $C2C9   RND      V2, #C9         ; V2 = random & C9
$D52    $4FDC   SNE      VF, #DC         ; Skip if VF != 220
$D54    $F26B   UNKNOWN  F26B            ; Unknown Fxxx instruction
$D56    $1CEF   JP       $CEF            ; Jump to CEF
$D58    $57EE   UNKNOWN  $57EE           ; Unknown 5xxx instruction
$D5A    $9870   SNE      V8, V7          ; Skip if V8 != V7
$D5C    $B1D5   JP       V0, $1D5        ; Jump to V0 + 1D5
$D5E    $6EC0   LD       VE, #C0         ; Load 192 into VE
$D60    $7FB1   ADD      VF, #B1         ; Add 177 to VF
$D62    $704A   ADD      V0, #4A         ; Add 74 to V0
$D64    $3552   SE       V5, #52         ; Skip if V5 == 82
$D66    $B9B8   JP       V0, $9B8        ; Jump to V0 + 9B8
$D68    $A4FE   LD       I, $4FE         ; Load 4FE into I
$D6A    $5FD1   UNKNOWN  $5FD1           ; Unknown 5xxx instruction
$D6C    $723C   ADD      V2, #3C         ; Add 60 to V2
$D6E    $D338   DRW      V3, V3, #8      ; Draw 8-byte sprite at V3, V3
$D70    $ED05   UNKNOWN  $ED05           ; Unknown Exxx instruction
$D72    $5F96   UNKNOWN  $5F96           ; Unknown 5xxx instruction
$D74    $042F   SYS      $42F            ; System call to 42F
$D76    $AC98   LD       I, $C98         ; Load C98 into I
$D78    $A459   LD       I, $459         ; Load 459 into I
$D7A    $2429   CALL     $429            ; Call subroutine at 429
$D7C    $5E54   UNKNOWN  $5E54           ; Unknown 5xxx instruction
$D7E    $29F9   CALL     $9F9            ; Call subroutine at 9F9
$D80    $22FE   CALL     $2FE            ; Call subroutine at 2FE
$D82    $E401   UNKNOWN  $E401           ; Unknown Exxx instruction
$D84    $5641   UNKNOWN  $5641           ; Unknown 5xxx instruction
$D86    $5539   UNKNOWN  $5539           ; Unknown 5xxx instruction
$D88    $B5D0   JP       V0, $5D0        ; Jump to V0 + 5D0
$D8A    $6529   LD       V5, #29         ; Load 41 into V5
$D8C    $40BC   SNE      V0, #BC         ; Skip if V0 != 188
$D8E    $0139   SYS      $139            ; System call to 139
$D90    $2439   CALL     $439            ; Call subroutine at 439
$D92    $A77B   LD       I, $77B         ; Load 77B into I
$D94    $E7EA   UNKNOWN  $E7EA           ; Unknown Exxx instruction
$D96    $196D   JP       $96D            ; Jump to 96D
$D98    $190C   JP       $90C            ; Jump to 90C
$D9A    $62E6   LD       V2, #E6         ; Load 230 into V2
$D9C    $6A32   LD       VA, #32         ; Load 50 into VA
$D9E    $5186   UNKNOWN  $5186           ; Unknown 5xxx instruction
$DA0    $C26B   RND      V2, #6B         ; V2 = random & 6B
$DA2    $C8C6   RND      V8, #C6         ; V8 = random & C6
$DA4    $7A4E   ADD      VA, #4E         ; Add 78 to VA
$DA6    $E4CA   UNKNOWN  $E4CA           ; Unknown Exxx instruction
$DA8    $1C90   JP       $C90            ; Jump to C90
$DAA    $A320   LD       I, $320         ; Load 320 into I
$DAC    $E6BA   UNKNOWN  $E6BA           ; Unknown Exxx instruction
$DAE    $925F   UNKNOWN  $925F           ; Unknown 9xxx instruction
$DB0    $1D03   JP       $D03            ; Jump to D03
$DB2    $300C   SE       V0, #0C         ; Skip if V0 == 12
$DB4    $1A8F   JP       $A8F            ; Jump to A8F
$DB6    $0EEA   SYS      $EEA            ; System call to EEA
$DB8    $F7FF   UNKNOWN  F7FF            ; Unknown Fxxx instruction
$DBA    $D2C9   DRW      V2, VC, #9      ; Draw 9-byte sprite at V2, VC
$DBC    $62DA   LD       V2, #DA         ; Load 218 into V2
$DBE    $CE23   RND      VE, #23         ; VE = random & 23
$DC0    $0335   SYS      $335            ; System call to 335
$DC2    $6FAF   LD       VF, #AF         ; Load 175 into VF
$DC4    $9A11   UNKNOWN  $9A11           ; Unknown 9xxx instruction
$DC6    $337B   SE       V3, #7B         ; Skip if V3 == 123
$DC8    $A725   LD       I, $725         ; Load 725 into I
$DCA    $CBE8   RND      VB, #E8         ; VB = random & E8
$DCC    $CA61   RND      VA, #61         ; VA = random & 61
$DCE    $9906   UNKNOWN  $9906           ; Unknown 9xxx instruction
$DD0    $9CDE   UNKNOWN  $9CDE           ; Unknown 9xxx instruction
$DD2    $04C6   SYS      $4C6            ; System call to 4C6
$DD4    $FFCE   UNKNOWN  FFCE            ; Unknown Fxxx instruction
$DD6    $0380   SYS      $380            ; System call to 380
$DD8    $0117   SYS      $117            ; System call to 117
$DDA    $B184   JP       V0, $184        ; Jump to V0 + 184
$DDC    $0E35   SYS      $E35            ; System call to E35
$DDE    $A993   LD       I, $993         ; Load 993 into I
$DE0    $ED9D   UNKNOWN  $ED9D           ; Unknown Exxx instruction
$DE2    $7FE9   ADD      VF, #E9         ; Add 233 to VF
$DE4    $E8A4   UNKNOWN  $E8A4           ; Unknown Exxx instruction
$DE6    $3A11   SE       VA, #11         ; Skip if VA == 17
$DE8    $31F9   SE       V1, #F9         ; Skip if V1 == 249
$DEA    $D1EB   DRW      V1, VE, #B      ; Draw 11-byte sprite at V1, VE
$DEC    $702D   ADD      V0, #2D         ; Add 45 to V0
$DEE    $20D3   CALL     $0D3            ; Call subroutine at 0D3
$DF0    $A9F8   LD       I, $9F8         ; Load 9F8 into I
$DF2    $0707   SYS      $707            ; System call to 707
$DF4    $D1D3   DRW      V1, VD, #3      ; Draw 3-byte sprite at V1, VD
$DF6    $A553   LD       I, $553         ; Load 553 into I
$DF8    $DBA1   DRW      VB, VA, #1      ; Draw 1-byte sprite at VB, VA
$DFA    $C303   RND      V3, #03         ; V3 = random & 03
$DFC    $2EC0   CALL     $EC0            ; Call subroutine at EC0
$DFE    $3B76   SE       VB, #76         ; Skip if VB == 118
$E00    $FDF6   UNKNOWN  FDF6            ; Unknown Fxxx instruction
$E02    $BDD5   JP       V0, $DD5        ; Jump to V0 + DD5
$E04    $A1BD   LD       I, $1BD         ; Load 1BD into I
$E06    $C029   RND      V0, #29         ; V0 = random & 29
$E08    $F0D1   UNKNOWN  F0D1            ; Unknown Fxxx instruction
$E0A    $6999   LD       V9, #99         ; Load 153 into V9
$E0C    $6ACA   LD       VA, #CA         ; Load 202 into VA
$E0E    $DD5D   DRW      VD, V5, #D      ; Draw 13-byte sprite at VD, V5
$E10    $59BA   UNKNOWN  $59BA           ; Unknown 5xxx instruction
$E12    $C8FA   RND      V8, #FA         ; V8 = random & FA
$E14    $8726   SHR      V7              ; V7 >>= 1, VF = LSB
$E16    $2A17   CALL     $A17            ; Call subroutine at A17
$E18    $C259   RND      V2, #59         ; V2 = random & 59
$E1A    $BE85   JP       V0, $E85        ; Jump to V0 + E85
$E1C    $1160   JP       $160            ; Jump to 160
$E1E    $06AC   SYS      $6AC            ; System call to 6AC
$E20    $9F03   UNKNOWN  $9F03           ; Unknown 9xxx instruction
$E22    $D759   DRW      V7, V5, #9      ; Draw 9-byte sprite at V7, V5
$E24    $1B89   JP       $B89            ; Jump to B89
$E26    $B87A   JP       V0, $87A        ; Jump to V0 + 87A
$E28    $7472   ADD      V4, #72         ; Add 114 to V4
$E2A    $E2F3   UNKNOWN  $E2F3           ; Unknown Exxx instruction
$E2C    $E365   UNKNOWN  $E365           ; Unknown Exxx instruction
$E2E    $7E09   ADD      VE, #09         ; Add 9 to VE
$E30    $7B40   ADD      VB, #40         ; Add 64 to VB
$E32    $3F68   SE       VF, #68         ; Skip if VF == 104
$E34    $B9EE   JP       V0, $9EE        ; Jump to V0 + 9EE
$E36    $7B32   ADD      VB, #32         ; Add 50 to VB
$E38    $A84E   LD       I, $84E         ; Load 84E into I
$E3A    $EBAC   UNKNOWN  $EBAC           ; Unknown Exxx instruction
$E3C    $C946   RND      V9, #46         ; V9 = random & 46
$E3E    $57BD   UNKNOWN  $57BD           ; Unknown 5xxx instruction
$E40    $B934   JP       V0, $934        ; Jump to V0 + 934
$E42    $0670   SYS      $670            ; System call to 670
$E44    $064A   SYS      $64A            ; System call to 64A
$E46    $6F8E   LD       VF, #8E         ; Load 142 into VF
$E48    $6520   LD       V5, #20         ; Load 32 into V5
$E4A    $2390   CALL     $390            ; Call subroutine at 390
$E4C    $F5AB   UNKNOWN  F5AB            ; Unknown Fxxx instruction
$E4E    $E34A   UNKNOWN  $E34A           ; Unknown Exxx instruction
$E50    $B8F7   JP       V0, $8F7        ; Jump to V0 + 8F7
$E52    $4EA1   SNE      VE, #A1         ; Skip if VE != 161
$E54    $285E   CALL     $85E            ; Call subroutine at 85E
$E56    $D99B   DRW      V9, V9, #B      ; Draw 11-byte sprite at V9, V9
$E58    $BB7B   JP       V0, $B7B        ; Jump to V0 + B7B
$E5A    $2815   CALL     $815            ; Call subroutine at 815
$E5C    $0CDE   SYS      $CDE            ; System call to CDE
$E5E    $0347   SYS      $347            ; System call to 347
$E60    $EBC9   UNKNOWN  $EBC9           ; Unknown Exxx instruction
$E62    $87EE   SHL      V7              ; V7 <<= 1, VF = MSB
$E64    $08AD   SYS      $8AD            ; System call to 8AD
$E66    $0A62   SYS      $A62            ; System call to A62
$E68    $36CA   SE       V6, #CA         ; Skip if V6 == 202
$E6A    $BBD4   JP       V0, $BD4        ; Jump to V0 + BD4
$E6C    $9C78   UNKNOWN  $9C78           ; Unknown 9xxx instruction
$E6E    $3DE8   SE       VD, #E8         ; Skip if VD == 232
$E70    $171E   JP       $71E            ; Jump to 71E
$E72    $E8AA   UNKNOWN  $E8AA           ; Unknown Exxx instruction
$E74    $569C   UNKNOWN  $569C           ; Unknown 5xxx instruction
$E76    $D820   DRW      V8, V2, #0      ; Draw 0-byte sprite at V8, V2
$E78    $3B07   SE       VB, #07         ; Skip if VB == 7
$E7A    $F7C0   UNKNOWN  F7C0            ; Unknown Fxxx instruction
$E7C    $30D8   SE       V0, #D8         ; Skip if V0 == 216
$E7E    $C6C8   RND      V6, #C8         ; V6 = random & C8
$E80    $8702   AND      V7, V0          ; V7 &= V0
$E82    $31A2   SE       V1, #A2         ; Skip if V1 == 162
$E84    $F124   UNKNOWN  F124            ; Unknown Fxxx instruction
$E86    $7DE6   ADD      VD, #E6         ; Add 230 to VD
$E88    $B4B6   JP       V0, $4B6        ; Jump to V0 + 4B6
$E8A    $BFF6   JP       V0, $FF6        ; Jump to V0 + FF6
$E8C    $1204   JP       $204            ; Jump to 204
$E8E    $F929   LD       F, V9           ; I = sprite address for digit V9
$E90    $8652   AND      V6, V5          ; V6 &= V5
$E92    $1B66   JP       $B66            ; Jump to B66
$E94    $51F8   UNKNOWN  $51F8           ; Unknown 5xxx instruction
$E96    $0613   SYS      $613            ; System call to 613
$E98    $89FC   UNKNOWN  89FC            ; Unknown 8xxx instruction
$E9A    $9945   UNKNOWN  $9945           ; Unknown 9xxx instruction
$E9C    $AAF0   LD       I, $AF0         ; Load AF0 into I
$E9E    $413A   SNE      V1, #3A         ; Skip if V1 != 58
$EA0    $8AD0   LD       VA, VD          ; VA = VD
$EA2    $16F6   JP       $6F6            ; Jump to 6F6
$EA4    $91BA   UNKNOWN  $91BA           ; Unknown 9xxx instruction
$EA6    $8516   SHR      V5              ; V5 >>= 1, VF = LSB
$EA8    $3CC2   SE       VC, #C2         ; Skip if VC == 194
$EAA    $950F   UNKNOWN  $950F           ; Unknown 9xxx instruction
$EAC    $C24F   RND      V2, #4F         ; V2 = random & 4F
$EAE    $0139   SYS      $139            ; System call to 139
$EB0    $0006   SYS      $006            ; System call to 006
$EB2    $22F2   CALL     $2F2            ; Call subroutine at 2F2
$EB4    $829E   SHL      V2              ; V2 <<= 1, VF = MSB
$EB6    $12C1   JP       $2C1            ; Jump to 2C1
$EB8    $E2B0   UNKNOWN  $E2B0           ; Unknown Exxx instruction
$EBA    $A739   LD       I, $739         ; Load 739 into I
$EBC    $6380   LD       V3, #80         ; Load 128 into V3
$EBE    $8CAD   UNKNOWN  8CAD            ; Unknown 8xxx instruction
$EC0    $83A2   AND      V3, VA          ; V3 &= VA
$EC2    $D314   DRW      V3, V1, #4      ; Draw 4-byte sprite at V3, V1
$EC4    $1589   JP       $589            ; Jump to 589
$EC6    $F5A0   UNKNOWN  F5A0            ; Unknown Fxxx instruction
$EC8    $5C6B   UNKNOWN  $5C6B           ; Unknown 5xxx instruction
$ECA    $1CEC   JP       $CEC            ; Jump to CEC
$ECC    $E78F   UNKNOWN  $E78F           ; Unknown Exxx instruction
$ECE    $10DA   JP       $0DA            ; Jump to 0DA
$ED0    $1C82   JP       $C82            ; Jump to C82
$ED2    $F2C3   UNKNOWN  F2C3            ; Unknown Fxxx instruction
$ED4    $A70A   LD       I, $70A         ; Load 70A into I
$ED6    $1CB3   JP       $CB3            ; Jump to CB3
$ED8    $C7E5   RND      V7, #E5         ; V7 = random & E5
$EDA    $DB29   DRW      VB, V2, #9      ; Draw 9-byte sprite at VB, V2
$EDC    $C8F3   RND      V8, #F3         ; V8 = random & F3
$EDE    $4951   SNE      V9, #51         ; Skip if V9 != 81
$EE0    $70EC   ADD      V0, #EC         ; Add 236 to V0
$EE2    $E146   UNKNOWN  $E146           ; Unknown Exxx instruction
$EE4    $1CB4   JP       $CB4            ; Jump to CB4
$EE6    $B915   JP       V0, $915        ; Jump to V0 + 915
$EE8    $7C2C   ADD      VC, #2C         ; Add 44 to VC
$EEA    $F155   LD       [I], V1         ; Store V0-V1 at I
$EEC    $9E37   UNKNOWN  $9E37           ; Unknown 9xxx instruction
$EEE    $47B2   SNE      V7, #B2         ; Skip if V7 != 178
$EF0    $FD29   LD       F, VD           ; I = sprite address for digit VD
$EF2    $7715   ADD      V7, #15         ; Add 21 to V7
$EF4    $9F41   UNKNOWN  $9F41           ; Unknown 9xxx instruction
$EF6    $9E31   UNKNOWN  $9E31           ; Unknown 9xxx instruction
$EF8    $8732   AND      V7, V3          ; V7 &= V3
$EFA    $5382   UNKNOWN  $5382           ; Unknown 5xxx instruction
$EFC    $DDD0   DRW      VD, VD, #0      ; Draw 0-byte sprite at VD, VD
$EFE    $0B2D   SYS      $B2D            ; System call to B2D
$F00    $30FE   SE       V0, #FE         ; Skip if V0 == 254
$F02    $4BF2   SNE      VB, #F2         ; Skip if VB != 242
$F04    $CFFA   RND      VF, #FA         ; VF = random & FA
$F06    $BBF2   JP       V0, $BF2        ; Jump to V0 + BF2
$F08    $790C   ADD      V9, #0C         ; Add 12 to V9
$F0A    $F1A6   UNKNOWN  F1A6            ; Unknown Fxxx instruction
$F0C    $19DB   JP       $9DB            ; Jump to 9DB
$F0E    $8248   UNKNOWN  8248            ; Unknown 8xxx instruction
$F10    $3411   SE       V4, #11         ; Skip if V4 == 17
$F12    $14C5   JP       $4C5            ; Jump to 4C5
$F14    $17C6   JP       $7C6            ; Jump to 7C6
$F16    $BA7A   JP       V0, $A7A        ; Jump to V0 + A7A
$F18    $BA74   JP       V0, $A74        ; Jump to V0 + A74
$F1A    $119D   JP       $19D            ; Jump to 19D
$F1C    $627D   LD       V2, #7D         ; Load 125 into V2
$F1E    $2F56   CALL     $F56            ; Call subroutine at F56
$F20    $0C5E   SYS      $C5E            ; System call to C5E
$F22    $725F   ADD      V2, #5F         ; Add 95 to V2
$F24    $8AB3   XOR      VA, VB          ; VA ^= VB
$F26    $B55F   JP       V0, $55F        ; Jump to V0 + 55F
$F28    $5842   UNKNOWN  $5842           ; Unknown 5xxx instruction
$F2A    $0207   SYS      $207            ; System call to 207
$F2C    $9A06   UNKNOWN  $9A06           ; Unknown 9xxx instruction
$F2E    $EDD6   UNKNOWN  $EDD6           ; Unknown Exxx instruction
$F30    $3123   SE       V1, #23         ; Skip if V1 == 35
$F32    $3E85   SE       VE, #85         ; Skip if VE == 133
$F34    $568F   UNKNOWN  $568F           ; Unknown 5xxx instruction
$F36    $DE0C   DRW      VE, V0, #C      ; Draw 12-byte sprite at VE, V0
$F38    $9E45   UNKNOWN  $9E45           ; Unknown 9xxx instruction
$F3A    $4F88   SNE      VF, #88         ; Skip if VF != 136
$F3C    $7D2E   ADD      VD, #2E         ; Add 46 to VD
$F3E    $BFF9   JP       V0, $FF9        ; Jump to V0 + FF9
$F40    $B923   JP       V0, $923        ; Jump to V0 + 923
$F42    $A293   LD       I, $293         ; Load 293 into I
$F44    $505B   UNKNOWN  $505B           ; Unknown 5xxx instruction
$F46    $BA93   JP       V0, $A93        ; Jump to V0 + A93
$F48    $6BA8   LD       VB, #A8         ; Load 168 into VB
$F4A    $058D   SYS      $58D            ; System call to 58D
$F4C    $ECEB   UNKNOWN  $ECEB           ; Unknown Exxx instruction
$F4E    $A297   LD       I, $297         ; Load 297 into I
$F50    $69B7   LD       V9, #B7         ; Load 183 into V9
$F52    $AE54   LD       I, $E54         ; Load E54 into I
$F54    $252A   CALL     $52A            ; Call subroutine at 52A
$F56    $3DB9   SE       VD, #B9         ; Skip if VD == 185
$F58    $1B25   JP       $B25            ; Jump to B25
$F5A    $E083   UNKNOWN  $E083           ; Unknown Exxx instruction
$F5C    $26F2   CALL     $6F2            ; Call subroutine at 6F2
$F5E    $F015   LD       DT, V0          ; Delay timer = V0
$F60    $CFF1   RND      VF, #F1         ; VF = random & F1
$F62    $C72B   RND      V7, #2B         ; V7 = random & 2B
$F64    $F706   UNKNOWN  F706            ; Unknown Fxxx instruction
$F66    $8A26   SHR      VA              ; VA >>= 1, VF = LSB
$F68    $3C6E   SE       VC, #6E         ; Skip if VC == 110
$F6A    $B2D2   JP       V0, $2D2        ; Jump to V0 + 2D2
$F6C    $F939   UNKNOWN  F939            ; Unknown Fxxx instruction
$F6E    $9F8F   UNKNOWN  $9F8F           ; Unknown 9xxx instruction
$F70    $3312   SE       V3, #12         ; Skip if V3 == 18
$F72    $7A1A   ADD      VA, #1A         ; Add 26 to VA
$F74    $E1D5   UNKNOWN  $E1D5           ; Unknown Exxx instruction
$F76    $EFE2   UNKNOWN  $EFE2           ; Unknown Exxx instruction
$F78    $325C   SE       V2, #5C         ; Skip if V2 == 92
$F7A    $4E70   SNE      VE, #70         ; Skip if VE != 112
$F7C    $E4F7   UNKNOWN  $E4F7           ; Unknown Exxx instruction
$F7E    $F3CB   UNKNOWN  F3CB            ; Unknown Fxxx instruction
$F80    $2471   CALL     $471            ; Call subroutine at 471
$F82    $7D3A   ADD      VD, #3A         ; Add 58 to VD
$F84    $B706   JP       V0, $706        ; Jump to V0 + 706
$F86    $5871   UNKNOWN  $5871           ; Unknown 5xxx instruction
$F88    $E8D8   UNKNOWN  $E8D8           ; Unknown Exxx instruction
$F8A    $78B7   ADD      V8, #B7         ; Add 183 to V8
$F8C    $497D   SNE      V9, #7D         ; Skip if V9 != 125
$F8E    $CC95   RND      VC, #95         ; VC = random & 95
$F90    $439D   SNE      V3, #9D         ; Skip if V3 != 157
$F92    $A6F8   LD       I, $6F8         ; Load 6F8 into I
$F94    $DAF0   DRW      VA, VF, #0      ; Draw 0-byte sprite at VA, VF
$F96    $E611   UNKNOWN  $E611           ; Unknown Exxx instruction
$F98    $E3E3   UNKNOWN  $E3E3           ; Unknown Exxx instruction
$F9A    $020D   SYS      $20D            ; System call to 20D
$F9C    $B4D7   JP       V0, $4D7        ; Jump to V0 + 4D7
$F9E    $DFBC   DRW      VF, VB, #C      ; Draw 12-byte sprite at VF, VB
$FA0    $2EB2   CALL     $EB2            ; Call subroutine at EB2
$FA2    $FAA4   UNKNOWN  FAA4            ; Unknown Fxxx instruction
$FA4    $20EA   CALL     $0EA            ; Call subroutine at 0EA
$FA6    $B9B9   JP       V0, $9B9        ; Jump to V0 + 9B9
$FA8    $053A   SYS      $53A            ; System call to 53A
$FAA    $C1BB   RND      V1, #BB         ; V1 = random & BB
$FAC    $8910   LD       V9, V1          ; V9 = V1
$FAE    $D395   DRW      V3, V9, #5      ; Draw 5-byte sprite at V3, V9
$FB0    $E1E2   UNKNOWN  $E1E2           ; Unknown Exxx instruction
$FB2    $CA61   RND      VA, #61         ; VA = random & 61
$FB4    $AD9B   LD       I, $D9B         ; Load D9B into I
$FB6    $F5A0   UNKNOWN  F5A0            ; Unknown Fxxx instruction
$FB8    $7C12   ADD      VC, #12         ; Add 18 to VC
$FBA    $4475   SNE      V4, #75         ; Skip if V4 != 117
$FBC    $C4BE   RND      V4, #BE         ; V4 = random & BE
$FBE    $2946   CALL     $946            ; Call subroutine at 946
$FC0    $9444   UNKNOWN  $9444           ; Unknown 9xxx instruction
$FC2    $DBC9   DRW      VB, VC, #9      ; Draw 9-byte sprite at VB, VC
$FC4    $2DD5   CALL     $DD5            ; Call subroutine at DD5
$FC6    $DE4E   DRW      VE, V4, #E      ; Draw 14-byte sprite at VE, V4
$FC8    $1534   JP       $534            ; Jump to 534
$FCA    $FD0F   UNKNOWN  FD0F            ; Unknown Fxxx instruction
$FCC    $D795   DRW      V7, V9, #5      ; Draw 5-byte sprite at V7, V9
$FCE    $D45D   DRW      V4, V5, #D      ; Draw 13-byte sprite at V4, V5
$FD0    $5CD1   UNKNOWN  $5CD1           ; Unknown 5xxx instruction
$FD2    $4E1B   SNE      VE, #1B         ; Skip if VE != 27
$FD4    $B12B   JP       V0, $12B        ; Jump to V0 + 12B
$FD6    $A34C   LD       I, $34C         ; Load 34C into I
$FD8    $0DF1   SYS      $DF1            ; System call to DF1
$FDA    $D4EF   DRW      V4, VE, #F      ; Draw 15-byte sprite at V4, VE
$FDC    $2BBC   CALL     $BBC            ; Call subroutine at BBC
$FDE    $4BFC   SNE      VB, #FC         ; Skip if VB != 252
$FE0    $442E   SNE      V4, #2E         ; Skip if V4 != 46
$FE2    $83BD   UNKNOWN  83BD            ; Unknown 8xxx instruction
$FE4    $FB05   UNKNOWN  FB05            ; Unknown Fxxx instruction
$FE6    $1BF5   JP       $BF5            ; Jump to BF5
$FE8    $4A08   SNE      VA, #08         ; Skip if VA != 8
$FEA    $7AD4   ADD      VA, #D4         ; Add 212 to VA
$FEC    $2D6D   CALL     $D6D            ; Call subroutine at D6D
$FEE    $1B2A   JP       $B2A            ; Jump to B2A
$FF0    $DF52   DRW      VF, V5, #2      ; Draw 2-byte sprite at VF, V5
$FF2    $E5D9   UNKNOWN  $E5D9           ; Unknown Exxx instruction
$FF4    $386E   SE       V8, #6E         ; Skip if V8 == 110
$FF6    $5992   UNKNOWN  $5992           ; Unknown 5xxx instruction
$FF8    $CFAD   RND      VF, #AD         ; VF = random & AD
$FFA    $E0CE   UNKNOWN  $E0CE           ; Unknown Exxx instruction
$FFC    $FBD1   UNKNOWN  FBD1            ; Unknown Fxxx instruction
$FFE    $8CA5   SUB      VC, VA          ; VC -= VA, VF = !borrow

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 510 (28.5%)
  JP      : 242 (13.5%)
  LD      : 214 (11.9%)
  ADD     : 123 ( 6.9%)
  SNE     : 123 ( 6.9%)
  SE      : 114 ( 6.4%)
  CALL    : 111 ( 6.2%)
  RND     : 105 ( 5.9%)
  DRW     : 103 ( 5.7%)
  SYS     :  95 ( 5.3%)
  XOR     :   9 ( 0.5%)
  SUBN    :   8 ( 0.4%)
  SHL     :   8 ( 0.4%)
  AND     :   7 ( 0.4%)
  SUB     :   7 ( 0.4%)
  SHR     :   7 ( 0.4%)
  OR      :   5 ( 0.3%)
  SKNP    :   1 ( 0.1%)

Memory Operations: 337 (18.8%)
Arithmetic Operations: 159 (8.9%)
