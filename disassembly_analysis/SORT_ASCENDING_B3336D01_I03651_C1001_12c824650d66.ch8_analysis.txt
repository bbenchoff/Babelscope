
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B3336D01_I03651_C1001_12c824650d66.ch8
ROM Size: 3584 bytes
Instructions Found: 1789

DISCOVERY INFORMATION:
Batch: 3336
Instance: 3651
Direction: ascending
Final Array: [0, 0, 0, 0, 0, 0, 82, 90]
Operations: R:0 W:8 C:92 S:3

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 131
Sort Array References:
  $200: LD I, $248 ; Load 248 into I
  $218: LD I, $3C1 ; Load 3C1 into I
  $21A: LD I, $FAC ; Load FAC into I
  $288: LD I, $B2A ; Load B2A into I
  $294: LD I, $571 ; Load 571 into I
  $2A0: LD I, $EE6 ; Load EE6 into I
  $2B2: LD I, $B6B ; Load B6B into I
  $2DC: LD I, $D29 ; Load D29 into I
  $2F6: LD I, $D8E ; Load D8E into I
  $328: LD I, $36F ; Load 36F into I
  $358: LD I, $B44 ; Load B44 into I
  $364: LD I, $CF0 ; Load CF0 into I
  $3AE: LD I, $C0B ; Load C0B into I
  $3C6: LD I, $C20 ; Load C20 into I
  $3CA: LD I, $2FC ; Load 2FC into I
  $3EC: LD I, $4C7 ; Load 4C7 into I
  $410: LD [I], V0 ; Store V0-V0 at I
  $480: LD I, $CAC ; Load CAC into I
  $484: LD I, $7FA ; Load 7FA into I
  $486: LD I, $832 ; Load 832 into I
  $492: LD I, $36D ; Load 36D into I
  $49A: LD I, $293 ; Load 293 into I
  $4AA: LD I, $4B6 ; Load 4B6 into I
  $4C6: LD I, $B96 ; Load B96 into I
  $4CC: LD I, $713 ; Load 713 into I
  $510: LD I, $FB9 ; Load FB9 into I
  $51A: LD I, $BDF ; Load BDF into I
  $534: LD I, $E7E ; Load E7E into I
  $58E: LD I, $D3E ; Load D3E into I
  $59E: LD I, $9E2 ; Load 9E2 into I
  $5CE: LD I, $B74 ; Load B74 into I
  $5D8: LD I, $7C2 ; Load 7C2 into I
  $5F0: LD I, $85D ; Load 85D into I
  $5F4: LD I, $A7A ; Load A7A into I
  $5F8: LD I, $93D ; Load 93D into I
  $614: LD I, $6FB ; Load 6FB into I
  $628: LD I, $DB5 ; Load DB5 into I
  $62C: LD I, $CA5 ; Load CA5 into I
  $642: LD I, $3F6 ; Load 3F6 into I
  $68C: LD I, $4F9 ; Load 4F9 into I
  $696: LD I, $284 ; Load 284 into I
  $6A0: LD I, $CE4 ; Load CE4 into I
  $6A6: LD I, $587 ; Load 587 into I
  $6B4: LD I, $BA4 ; Load BA4 into I
  $6C2: LD I, $0A9 ; Load 0A9 into I
  $6C4: LD I, $806 ; Load 806 into I
  $6DE: LD I, $161 ; Load 161 into I
  $6FC: LD I, $C10 ; Load C10 into I
  $716: LD I, $2D7 ; Load 2D7 into I
  $726: LD I, $2BC ; Load 2BC into I
  $734: LD I, $4E2 ; Load 4E2 into I
  $73A: LD I, $FDB ; Load FDB into I
  $75E: LD I, $957 ; Load 957 into I
  $776: LD I, $120 ; Load 120 into I
  $77C: LD I, $E9E ; Load E9E into I
  $780: LD I, $2D5 ; Load 2D5 into I
  $788: LD I, $A0D ; Load A0D into I
  $7C0: LD I, $B8D ; Load B8D into I
  $7C4: LD I, $69F ; Load 69F into I
  $7DC: LD I, $D26 ; Load D26 into I
  $7FE: LD I, $2B1 ; Load 2B1 into I
  $808: LD I, $673 ; Load 673 into I
  $80C: LD I, $CFB ; Load CFB into I
  $810: ADD I, V3 ; I ADDRESS MANIPULATION
  $82A: LD I, $D03 ; Load D03 into I
  $834: LD I, $76B ; Load 76B into I
  $86E: LD I, $9AA ; Load 9AA into I
  $870: LD I, $859 ; Load 859 into I
  $87C: LD I, $CF3 ; Load CF3 into I
  $8B2: LD I, $CA9 ; Load CA9 into I
  $8B4: LD I, $F15 ; Load F15 into I
  $8F4: LD I, $7AA ; Load 7AA into I
  $910: LD I, $BBF ; Load BBF into I
  $924: LD I, $6B2 ; Load 6B2 into I
  $936: LD I, $B3D ; Load B3D into I
  $972: LD I, $B8C ; Load B8C into I
  $99E: LD I, $DFA ; Load DFA into I
  $9B2: LD I, $FAB ; Load FAB into I
  $9C2: LD I, $698 ; Load 698 into I
  $9DC: LD I, $936 ; Load 936 into I
  $A2E: LD I, $817 ; Load 817 into I
  $A56: LD I, $5DB ; Load 5DB into I
  $A6A: LD I, $1CD ; Load 1CD into I
  $AB2: LD I, $946 ; Load 946 into I
  $AB6: LD I, $0D0 ; Load 0D0 into I
  $AC4: LD I, $412 ; Load 412 into I
  $ADE: LD I, $AAB ; Load AAB into I
  $AF2: LD I, $A7A ; Load A7A into I
  $AFA: LD I, $531 ; Load 531 into I
  $AFC: LD I, $0A5 ; Load 0A5 into I
  $B02: LD I, $052 ; Load 052 into I
  $B0E: LD I, $212 ; Load 212 into I
  $B24: LD I, $635 ; Load 635 into I
  $B48: LD I, $CDD ; Load CDD into I
  $BAE: LD I, $09F ; Load 09F into I
  $BB2: LD I, $0B5 ; Load 0B5 into I
  $BC2: LD I, $916 ; Load 916 into I
  $BD2: LD I, $B1B ; Load B1B into I
  $C24: LD I, $3F4 ; Load 3F4 into I
  $C4E: LD I, $02B ; Load 02B into I
  $C50: LD V5, [I] ; Load V0-V5 from I
  $C80: LD [I], VA ; Store V0-VA at I
  $C96: LD I, $F60 ; Load F60 into I
  $C98: LD I, $A0A ; Load A0A into I
  $C9A: LD I, $18E ; Load 18E into I
  $CE4: LD I, $63A ; Load 63A into I
  $CFA: LD I, $414 ; Load 414 into I
  $D2E: LD I, $433 ; Load 433 into I
  $D38: LD I, $181 ; Load 181 into I
  $D50: LD I, $F14 ; Load F14 into I
  $DB8: LD I, $ABD ; Load ABD into I
  $DCC: LD I, $681 ; Load 681 into I
  $DD2: LD I, $FBA ; Load FBA into I
  $E16: LD I, $CD1 ; Load CD1 into I
  $E1C: LD I, $153 ; Load 153 into I
  $E30: LD I, $32A ; Load 32A into I
  $E4C: LD I, $8A2 ; Load 8A2 into I
  $E64: LD I, $810 ; Load 810 into I
  $E8C: LD I, $2E4 ; Load 2E4 into I
  $EBC: LD I, $C72 ; Load C72 into I
  $EF0: LD I, $C25 ; Load C25 into I
  $EF4: LD I, $F6C ; Load F6C into I
  $EFE: LD I, $86A ; Load 86A into I
  $F0A: LD I, $189 ; Load 189 into I
  $F2A: LD I, $FBA ; Load FBA into I
  $F40: LD I, $059 ; Load 059 into I
  $F6A: LD I, $8DF ; Load 8DF into I
  $F96: LD I, $708 ; Load 708 into I
  $FB8: LD I, $F5C ; Load F5C into I
  $FDC: LD I, $014 ; Load 014 into I
  $FE6: LD I, $9AA ; Load 9AA into I

CONTROL FLOW ANALYSIS:
Jumps: 229
Calls: 104
Branches: 252
Loops: 124
Loop Structures:
  $212 -> $021 (backward jump)
  $242 -> $15B (backward jump)
  $284 -> $21E (backward jump)
  $28E -> $0CE (backward jump)
  $2C8 -> $2BE (backward jump)
  $2D2 -> $1FA (backward jump)
  $314 -> $047 (backward jump)
  $38C -> $218 (backward jump)
  $3C4 -> $35D (backward jump)
  $3E4 -> $2B4 (backward jump)
  $408 -> $09B (backward jump)
  $40C -> $15D (backward jump)
  $43C -> $427 (backward jump)
  $4B6 -> $02B (backward jump)
  $536 -> $259 (backward jump)
  $538 -> $484 (backward jump)
  $55E -> $0F6 (backward jump)
  $596 -> $165 (backward jump)
  $62A -> $19C (backward jump)
  $63A -> $598 (backward jump)
  $640 -> $3DB (backward jump)
  $646 -> $0BB (backward jump)
  $664 -> $12D (backward jump)
  $6C0 -> $39F (backward jump)
  $6DC -> $50B (backward jump)
  $6EE -> $533 (backward jump)
  $6F4 -> $347 (backward jump)
  $702 -> $066 (backward jump)
  $73E -> $057 (backward jump)
  $760 -> $3A5 (backward jump)
  $772 -> $5D0 (backward jump)
  $778 -> $6AC (backward jump)
  $798 -> $1D5 (backward jump)
  $7A4 -> $6B5 (backward jump)
  $7AC -> $616 (backward jump)
  $7B8 -> $12A (backward jump)
  $7CA -> $1F1 (backward jump)
  $7E8 -> $2B0 (backward jump)
  $81E -> $10E (backward jump)
  $848 -> $040 (backward jump)
  $858 -> $833 (backward jump)
  $868 -> $6A8 (backward jump)
  $876 -> $226 (backward jump)
  $8D6 -> $4E2 (backward jump)
  $8F2 -> $564 (backward jump)
  $958 -> $243 (backward jump)
  $978 -> $8B5 (backward jump)
  $97E -> $57D (backward jump)
  $99C -> $545 (backward jump)
  $9AA -> $6E7 (backward jump)
  $9AE -> $1C0 (backward jump)
  $9D2 -> $119 (backward jump)
  $9E6 -> $524 (backward jump)
  $A16 -> $93B (backward jump)
  $A2A -> $1D4 (backward jump)
  $A3A -> $0D6 (backward jump)
  $A4E -> $65E (backward jump)
  $A7C -> $407 (backward jump)
  $AA4 -> $559 (backward jump)
  $ACE -> $7D7 (backward jump)
  $B10 -> $A58 (backward jump)
  $B62 -> $057 (backward jump)
  $B74 -> $6D2 (backward jump)
  $B8C -> $2F9 (backward jump)
  $BB0 -> $4E2 (backward jump)
  $BBA -> $019 (backward jump)
  $BCA -> $7DC (backward jump)
  $BE2 -> $40A (backward jump)
  $C02 -> $79D (backward jump)
  $C06 -> $6F8 (backward jump)
  $C0C -> $8D8 (backward jump)
  $C0E -> $BDD (backward jump)
  $C1A -> $131 (backward jump)
  $C1E -> $325 (backward jump)
  $C3A -> $B68 (backward jump)
  $C62 -> $571 (backward jump)
  $C66 -> $20B (backward jump)
  $C82 -> $248 (backward jump)
  $C90 -> $65A (backward jump)
  $C92 -> $02F (backward jump)
  $CA2 -> $9F7 (backward jump)
  $CA4 -> $456 (backward jump)
  $CC0 -> $5FE (backward jump)
  $CD2 -> $467 (backward jump)
  $D0E -> $44B (backward jump)
  $D10 -> $1BB (backward jump)
  $D16 -> $3C4 (backward jump)
  $D26 -> $065 (backward jump)
  $D48 -> $662 (backward jump)
  $D82 -> $2C3 (backward jump)
  $D9E -> $197 (backward jump)
  $DD6 -> $032 (backward jump)
  $DE0 -> $CDE (backward jump)
  $DE8 -> $3FD (backward jump)
  $E32 -> $D87 (backward jump)
  $E3C -> $776 (backward jump)
  $E4E -> $723 (backward jump)
  $E52 -> $9F1 (backward jump)
  $E56 -> $30D (backward jump)
  $E80 -> $5F4 (backward jump)
  $E82 -> $21F (backward jump)
  $E96 -> $1F2 (backward jump)
  $ED8 -> $BA0 (backward jump)
  $EE4 -> $A2B (backward jump)
  $EFA -> $D10 (backward jump)
  $F02 -> $5AD (backward jump)
  $F10 -> $96B (backward jump)
  $F14 -> $591 (backward jump)
  $F1A -> $93F (backward jump)
  $F30 -> $21F (backward jump)
  $F42 -> $AAE (backward jump)
  $F76 -> $E5F (backward jump)
  $F7E -> $10D (backward jump)
  $F82 -> $94D (backward jump)
  $F8E -> $47C (backward jump)
  $FA8 -> $747 (backward jump)
  $FB2 -> $6E6 (backward jump)
  $FBE -> $8AD (backward jump)
  $FC0 -> $BA4 (backward jump)
  $FCE -> $D2C (backward jump)
  $FD8 -> $124 (backward jump)
  $FE0 -> $005 (backward jump)
  $FE4 -> $2F8 (backward jump)
  $FF0 -> $6F6 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $A248   LD       I, $248         ; Load 248 into I
$202    $8791   OR       V7, V9          ; V7 |= V9
$204    $0EF4   SYS      $EF4            ; System call to EF4
$206    $BF56   JP       V0, $F56        ; Jump to V0 + F56
$208    $6AF1   LD       VA, #F1         ; Load 241 into VA
$20A    $FC9A   UNKNOWN  FC9A            ; Unknown Fxxx instruction
$20C    $B9C5   JP       V0, $9C5        ; Jump to V0 + 9C5
$20E    $97DA   UNKNOWN  $97DA           ; Unknown 9xxx instruction
$210    $6A81   LD       VA, #81         ; Load 129 into VA
$212    $1021   JP       $021            ; Jump to 021
$214    $D538   DRW      V5, V3, #8      ; Draw 8-byte sprite at V5, V3
$216    $3DF6   SE       VD, #F6         ; Skip if VD == 246
$218    $A3C1   LD       I, $3C1         ; Load 3C1 into I
$21A    $AFAC   LD       I, $FAC         ; Load FAC into I
$21C    $38AD   SE       V8, #AD         ; Skip if V8 == 173
$21E    $7862   ADD      V8, #62         ; Add 98 to V8
$220    $47F6   SNE      V7, #F6         ; Skip if V7 != 246
$222    $8679   UNKNOWN  8679            ; Unknown 8xxx instruction
$224    $1294   JP       $294            ; Jump to 294
$226    $57F1   UNKNOWN  $57F1           ; Unknown 5xxx instruction
$228    $3527   SE       V5, #27         ; Skip if V5 == 39
$22A    $4582   SNE      V5, #82         ; Skip if V5 != 130
$22C    $9C19   UNKNOWN  $9C19           ; Unknown 9xxx instruction
$22E    $8D7F   UNKNOWN  8D7F            ; Unknown 8xxx instruction
$230    $89BF   UNKNOWN  89BF            ; Unknown 8xxx instruction
$232    $FA4D   UNKNOWN  FA4D            ; Unknown Fxxx instruction
$234    $4016   SNE      V0, #16         ; Skip if V0 != 22
$236    $FC74   UNKNOWN  FC74            ; Unknown Fxxx instruction
$238    $8643   XOR      V6, V4          ; V6 ^= V4
$23A    $8C18   UNKNOWN  8C18            ; Unknown 8xxx instruction
$23C    $24A7   CALL     $4A7            ; Call subroutine at 4A7
$23E    $EA78   UNKNOWN  $EA78           ; Unknown Exxx instruction
$240    $B8A1   JP       V0, $8A1        ; Jump to V0 + 8A1
$242    $B15B   JP       V0, $15B        ; Jump to V0 + 15B
$244    $0994   SYS      $994            ; System call to 994
$246    $D890   DRW      V8, V9, #0      ; Draw 0-byte sprite at V8, V9
$248    $45B1   SNE      V5, #B1         ; Skip if V5 != 177
$24A    $BEEB   JP       V0, $EEB        ; Jump to V0 + EEB
$24C    $2606   CALL     $606            ; Call subroutine at 606
$24E    $12DE   JP       $2DE            ; Jump to 2DE
$250    $0DDE   SYS      $DDE            ; System call to DDE
$252    $6C90   LD       VC, #90         ; Load 144 into VC
$254    $DA67   DRW      VA, V6, #7      ; Draw 7-byte sprite at VA, V6
$256    $554A   UNKNOWN  $554A           ; Unknown 5xxx instruction
$258    $DBE3   DRW      VB, VE, #3      ; Draw 3-byte sprite at VB, VE
$25A    $6CE3   LD       VC, #E3         ; Load 227 into VC
$25C    $77F3   ADD      V7, #F3         ; Add 243 to V7
$25E    $C21C   RND      V2, #1C         ; V2 = random & 1C
$260    $4F66   SNE      VF, #66         ; Skip if VF != 102
$262    $8D5E   SHL      VD              ; VD <<= 1, VF = MSB
$264    $0581   SYS      $581            ; System call to 581
$266    $7BF1   ADD      VB, #F1         ; Add 241 to VB
$268    $FC78   UNKNOWN  FC78            ; Unknown Fxxx instruction
$26A    $7273   ADD      V2, #73         ; Add 115 to V2
$26C    $0888   SYS      $888            ; System call to 888
$26E    $D95C   DRW      V9, V5, #C      ; Draw 12-byte sprite at V9, V5
$270    $BFD9   JP       V0, $FD9        ; Jump to V0 + FD9
$272    $4E7E   SNE      VE, #7E         ; Skip if VE != 126
$274    $3B35   SE       VB, #35         ; Skip if VB == 53
$276    $94B5   UNKNOWN  $94B5           ; Unknown 9xxx instruction
$278    $C3FF   RND      V3, #FF         ; V3 = random & FF
$27A    $1F46   JP       $F46            ; Jump to F46
$27C    $8512   AND      V5, V1          ; V5 &= V1
$27E    $881D   UNKNOWN  881D            ; Unknown 8xxx instruction
$280    $4D9D   SNE      VD, #9D         ; Skip if VD != 157
$282    $7A1C   ADD      VA, #1C         ; Add 28 to VA
$284    $B21E   JP       V0, $21E        ; Jump to V0 + 21E
$286    $8BB2   AND      VB, VB          ; VB &= VB
$288    $AB2A   LD       I, $B2A         ; Load B2A into I
$28A    $841B   UNKNOWN  841B            ; Unknown 8xxx instruction
$28C    $F849   UNKNOWN  F849            ; Unknown Fxxx instruction
$28E    $B0CE   JP       V0, $0CE        ; Jump to V0 + 0CE
$290    $EEE0   UNKNOWN  $EEE0           ; Unknown Exxx instruction
$292    $BFD0   JP       V0, $FD0        ; Jump to V0 + FD0
$294    $A571   LD       I, $571         ; Load 571 into I
$296    $35CD   SE       V5, #CD         ; Skip if V5 == 205
$298    $9C14   UNKNOWN  $9C14           ; Unknown 9xxx instruction
$29A    $3B6F   SE       VB, #6F         ; Skip if VB == 111
$29C    $D554   DRW      V5, V5, #4      ; Draw 4-byte sprite at V5, V5
$29E    $B5FA   JP       V0, $5FA        ; Jump to V0 + 5FA
$2A0    $AEE6   LD       I, $EE6         ; Load EE6 into I
$2A2    $F937   UNKNOWN  F937            ; Unknown Fxxx instruction
$2A4    $24B4   CALL     $4B4            ; Call subroutine at 4B4
$2A6    $E8A3   UNKNOWN  $E8A3           ; Unknown Exxx instruction
$2A8    $4C8B   SNE      VC, #8B         ; Skip if VC != 139
$2AA    $7739   ADD      V7, #39         ; Add 57 to V7
$2AC    $23B1   CALL     $3B1            ; Call subroutine at 3B1
$2AE    $FAC9   UNKNOWN  FAC9            ; Unknown Fxxx instruction
$2B0    $43F4   SNE      V3, #F4         ; Skip if V3 != 244
$2B2    $AB6B   LD       I, $B6B         ; Load B6B into I
$2B4    $9738   UNKNOWN  $9738           ; Unknown 9xxx instruction
$2B6    $DAD6   DRW      VA, VD, #6      ; Draw 6-byte sprite at VA, VD
$2B8    $708E   ADD      V0, #8E         ; Add 142 to V0
$2BA    $504C   UNKNOWN  $504C           ; Unknown 5xxx instruction
$2BC    $EE27   UNKNOWN  $EE27           ; Unknown Exxx instruction
$2BE    $2982   CALL     $982            ; Call subroutine at 982
$2C0    $FEAE   UNKNOWN  FEAE            ; Unknown Fxxx instruction
$2C2    $BC25   JP       V0, $C25        ; Jump to V0 + C25
$2C4    $E556   UNKNOWN  $E556           ; Unknown Exxx instruction
$2C6    $3321   SE       V3, #21         ; Skip if V3 == 33
$2C8    $B2BE   JP       V0, $2BE        ; Jump to V0 + 2BE
$2CA    $0222   SYS      $222            ; System call to 222
$2CC    $CADD   RND      VA, #DD         ; VA = random & DD
$2CE    $9B10   SNE      VB, V1          ; Skip if VB != V1
$2D0    $47E8   SNE      V7, #E8         ; Skip if V7 != 232
$2D2    $11FA   JP       $1FA            ; Jump to 1FA
$2D4    $302B   SE       V0, #2B         ; Skip if V0 == 43
$2D6    $1E60   JP       $E60            ; Jump to E60
$2D8    $E956   UNKNOWN  $E956           ; Unknown Exxx instruction
$2DA    $6F67   LD       VF, #67         ; Load 103 into VF
$2DC    $AD29   LD       I, $D29         ; Load D29 into I
$2DE    $1C08   JP       $C08            ; Jump to C08
$2E0    $9043   UNKNOWN  $9043           ; Unknown 9xxx instruction
$2E2    $30C0   SE       V0, #C0         ; Skip if V0 == 192
$2E4    $B3E9   JP       V0, $3E9        ; Jump to V0 + 3E9
$2E6    $14CB   JP       $4CB            ; Jump to 4CB
$2E8    $775F   ADD      V7, #5F         ; Add 95 to V7
$2EA    $F732   UNKNOWN  F732            ; Unknown Fxxx instruction
$2EC    $3F15   SE       VF, #15         ; Skip if VF == 21
$2EE    $DE23   DRW      VE, V2, #3      ; Draw 3-byte sprite at VE, V2
$2F0    $CB93   RND      VB, #93         ; VB = random & 93
$2F2    $960C   UNKNOWN  $960C           ; Unknown 9xxx instruction
$2F4    $812B   UNKNOWN  812B            ; Unknown 8xxx instruction
$2F6    $AD8E   LD       I, $D8E         ; Load D8E into I
$2F8    $D009   DRW      V0, V0, #9      ; Draw 9-byte sprite at V0, V0
$2FA    $23CD   CALL     $3CD            ; Call subroutine at 3CD
$2FC    $5CEB   UNKNOWN  $5CEB           ; Unknown 5xxx instruction
$2FE    $1991   JP       $991            ; Jump to 991
$306    $525A   UNKNOWN  $525A           ; Unknown 5xxx instruction
$308    $D63A   DRW      V6, V3, #A      ; Draw 10-byte sprite at V6, V3
$30A    $1EEA   JP       $EEA            ; Jump to EEA
$30C    $3590   SE       V5, #90         ; Skip if V5 == 144
$30E    $737F   ADD      V3, #7F         ; Add 127 to V3
$310    $D0D0   DRW      V0, VD, #0      ; Draw 0-byte sprite at V0, VD
$312    $9B75   UNKNOWN  $9B75           ; Unknown 9xxx instruction
$314    $B047   JP       V0, $047        ; Jump to V0 + 047
$316    $3784   SE       V7, #84         ; Skip if V7 == 132
$318    $3FE8   SE       VF, #E8         ; Skip if VF == 232
$31A    $9A4F   UNKNOWN  $9A4F           ; Unknown 9xxx instruction
$31C    $BF4A   JP       V0, $F4A        ; Jump to V0 + F4A
$31E    $E0E7   UNKNOWN  $E0E7           ; Unknown Exxx instruction
$320    $8F89   UNKNOWN  8F89            ; Unknown 8xxx instruction
$322    $08AE   SYS      $8AE            ; System call to 8AE
$324    $94DC   UNKNOWN  $94DC           ; Unknown 9xxx instruction
$326    $889D   UNKNOWN  889D            ; Unknown 8xxx instruction
$328    $A36F   LD       I, $36F         ; Load 36F into I
$32A    $0E24   SYS      $E24            ; System call to E24
$32C    $E6EE   UNKNOWN  $E6EE           ; Unknown Exxx instruction
$32E    $EF7A   UNKNOWN  $EF7A           ; Unknown Exxx instruction
$330    $3091   SE       V0, #91         ; Skip if V0 == 145
$332    $024E   SYS      $24E            ; System call to 24E
$334    $9471   UNKNOWN  $9471           ; Unknown 9xxx instruction
$336    $F7A2   UNKNOWN  F7A2            ; Unknown Fxxx instruction
$338    $BA95   JP       V0, $A95        ; Jump to V0 + A95
$33A    $8BF4   ADD      VB, VF          ; VB += VF, VF = carry
$33C    $0CB7   SYS      $CB7            ; System call to CB7
$33E    $94E0   SNE      V4, VE          ; Skip if V4 != VE
$340    $DF3C   DRW      VF, V3, #C      ; Draw 12-byte sprite at VF, V3
$342    $F8E4   UNKNOWN  F8E4            ; Unknown Fxxx instruction
$344    $95D6   UNKNOWN  $95D6           ; Unknown 9xxx instruction
$346    $9685   UNKNOWN  $9685           ; Unknown 9xxx instruction
$348    $CEBB   RND      VE, #BB         ; VE = random & BB
$34A    $C9C2   RND      V9, #C2         ; V9 = random & C2
$34C    $2D1F   CALL     $D1F            ; Call subroutine at D1F
$34E    $0A94   SYS      $A94            ; System call to A94
$350    $5B2B   UNKNOWN  $5B2B           ; Unknown 5xxx instruction
$352    $F34E   UNKNOWN  F34E            ; Unknown Fxxx instruction
$354    $3009   SE       V0, #09         ; Skip if V0 == 9
$356    $3B54   SE       VB, #54         ; Skip if VB == 84
$358    $AB44   LD       I, $B44         ; Load B44 into I
$35A    $70E3   ADD      V0, #E3         ; Add 227 to V0
$35C    $39AD   SE       V9, #AD         ; Skip if V9 == 173
$35E    $798F   ADD      V9, #8F         ; Add 143 to V9
$360    $91C0   SNE      V1, VC          ; Skip if V1 != VC
$362    $E13A   UNKNOWN  $E13A           ; Unknown Exxx instruction
$364    $ACF0   LD       I, $CF0         ; Load CF0 into I
$366    $0EDA   SYS      $EDA            ; System call to EDA
$368    $F28A   UNKNOWN  F28A            ; Unknown Fxxx instruction
$36A    $9215   UNKNOWN  $9215           ; Unknown 9xxx instruction
$36C    $43EB   SNE      V3, #EB         ; Skip if V3 != 235
$36E    $5748   UNKNOWN  $5748           ; Unknown 5xxx instruction
$370    $5D15   UNKNOWN  $5D15           ; Unknown 5xxx instruction
$372    $DE8C   DRW      VE, V8, #C      ; Draw 12-byte sprite at VE, V8
$374    $C542   RND      V5, #42         ; V5 = random & 42
$376    $C300   RND      V3, #00         ; V3 = random & 00
$378    $B37E   JP       V0, $37E        ; Jump to V0 + 37E
$37A    $43CE   SNE      V3, #CE         ; Skip if V3 != 206
$37C    $41AC   SNE      V1, #AC         ; Skip if V1 != 172
$37E    $0A4A   SYS      $A4A            ; System call to A4A
$380    $DA6D   DRW      VA, V6, #D      ; Draw 13-byte sprite at VA, V6
$382    $0332   SYS      $332            ; System call to 332
$384    $F8C9   UNKNOWN  F8C9            ; Unknown Fxxx instruction
$386    $B6DB   JP       V0, $6DB        ; Jump to V0 + 6DB
$388    $1F8A   JP       $F8A            ; Jump to F8A
$38A    $5EFE   UNKNOWN  $5EFE           ; Unknown 5xxx instruction
$38C    $1218   JP       $218            ; Jump to 218
$38E    $6023   LD       V0, #23         ; Load 35 into V0
$390    $7DA6   ADD      VD, #A6         ; Add 166 to VD
$392    $FE52   UNKNOWN  FE52            ; Unknown Fxxx instruction
$394    $0DD6   SYS      $DD6            ; System call to DD6
$396    $C698   RND      V6, #98         ; V6 = random & 98
$398    $FA6C   UNKNOWN  FA6C            ; Unknown Fxxx instruction
$39A    $80FF   UNKNOWN  80FF            ; Unknown 8xxx instruction
$39C    $52CF   UNKNOWN  $52CF           ; Unknown 5xxx instruction
$39E    $CC06   RND      VC, #06         ; VC = random & 06
$3A0    $1802   JP       $802            ; Jump to 802
$3A2    $13ED   JP       $3ED            ; Jump to 3ED
$3A4    $B518   JP       V0, $518        ; Jump to V0 + 518
$3A6    $8192   AND      V1, V9          ; V1 &= V9
$3A8    $7CFA   ADD      VC, #FA         ; Add 250 to VC
$3AA    $BBE4   JP       V0, $BE4        ; Jump to V0 + BE4
$3AC    $41B2   SNE      V1, #B2         ; Skip if V1 != 178
$3AE    $AC0B   LD       I, $C0B         ; Load C0B into I
$3B0    $4B2C   SNE      VB, #2C         ; Skip if VB != 44
$3B2    $7E9D   ADD      VE, #9D         ; Add 157 to VE
$3B4    $C71A   RND      V7, #1A         ; V7 = random & 1A
$3B6    $FC81   UNKNOWN  FC81            ; Unknown Fxxx instruction
$3B8    $45E0   SNE      V5, #E0         ; Skip if V5 != 224
$3BA    $BD31   JP       V0, $D31        ; Jump to V0 + D31
$3BC    $40D3   SNE      V0, #D3         ; Skip if V0 != 211
$3BE    $79AB   ADD      V9, #AB         ; Add 171 to V9
$3C0    $E861   UNKNOWN  $E861           ; Unknown Exxx instruction
$3C2    $4016   SNE      V0, #16         ; Skip if V0 != 22
$3C4    $B35D   JP       V0, $35D        ; Jump to V0 + 35D
$3C6    $AC20   LD       I, $C20         ; Load C20 into I
$3C8    $3C09   SE       VC, #09         ; Skip if VC == 9
$3CA    $A2FC   LD       I, $2FC         ; Load 2FC into I
$3CC    $F3EE   UNKNOWN  F3EE            ; Unknown Fxxx instruction
$3CE    $5718   UNKNOWN  $5718           ; Unknown 5xxx instruction
$3D0    $7437   ADD      V4, #37         ; Add 55 to V4
$3D2    $5248   UNKNOWN  $5248           ; Unknown 5xxx instruction
$3D4    $9C3C   UNKNOWN  $9C3C           ; Unknown 9xxx instruction
$3D6    $1FBF   JP       $FBF            ; Jump to FBF
$3D8    $73EF   ADD      V3, #EF         ; Add 239 to V3
$3DA    $CBC2   RND      VB, #C2         ; VB = random & C2
$3DC    $78CB   ADD      V8, #CB         ; Add 203 to V8
$3DE    $BACC   JP       V0, $ACC        ; Jump to V0 + ACC
$3E0    $0523   SYS      $523            ; System call to 523
$3E2    $B52C   JP       V0, $52C        ; Jump to V0 + 52C
$3E4    $B2B4   JP       V0, $2B4        ; Jump to V0 + 2B4
$3E6    $7387   ADD      V3, #87         ; Add 135 to V3
$3E8    $FA41   UNKNOWN  FA41            ; Unknown Fxxx instruction
$3EA    $2AF9   CALL     $AF9            ; Call subroutine at AF9
$3EC    $A4C7   LD       I, $4C7         ; Load 4C7 into I
$3EE    $1DED   JP       $DED            ; Jump to DED
$3F0    $1F9F   JP       $F9F            ; Jump to F9F
$3F2    $735D   ADD      V3, #5D         ; Add 93 to V3
$3F4    $914F   UNKNOWN  $914F           ; Unknown 9xxx instruction
$3F6    $08F7   SYS      $8F7            ; System call to 8F7
$3F8    $EE81   UNKNOWN  $EE81           ; Unknown Exxx instruction
$3FA    $363B   SE       V6, #3B         ; Skip if V6 == 59
$3FC    $BBDD   JP       V0, $BDD        ; Jump to V0 + BDD
$3FE    $8048   UNKNOWN  8048            ; Unknown 8xxx instruction
$400    $932E   UNKNOWN  $932E           ; Unknown 9xxx instruction
$402    $1F7A   JP       $F7A            ; Jump to F7A
$404    $F67D   UNKNOWN  F67D            ; Unknown Fxxx instruction
$406    $8606   SHR      V6              ; V6 >>= 1, VF = LSB
$408    $B09B   JP       V0, $09B        ; Jump to V0 + 09B
$40A    $EDE5   UNKNOWN  $EDE5           ; Unknown Exxx instruction
$40C    $115D   JP       $15D            ; Jump to 15D
$40E    $7F05   ADD      VF, #05         ; Add 5 to VF
$410    $F055   LD       [I], V0         ; Store V0-V0 at I
$412    $5894   UNKNOWN  $5894           ; Unknown 5xxx instruction
$414    $20B0   CALL     $0B0            ; Call subroutine at 0B0
$416    $D743   DRW      V7, V4, #3      ; Draw 3-byte sprite at V7, V4
$418    $7100   ADD      V1, #00         ; Add 0 to V1
$41A    $9D3C   UNKNOWN  $9D3C           ; Unknown 9xxx instruction
$41C    $55FB   UNKNOWN  $55FB           ; Unknown 5xxx instruction
$41E    $FC0A   LD       VC, K           ; Wait for key press, store in VC
$420    $006C   SYS      $06C            ; System call to 06C
$422    $F5F0   UNKNOWN  F5F0            ; Unknown Fxxx instruction
$424    $1C91   JP       $C91            ; Jump to C91
$426    $0E04   SYS      $E04            ; System call to E04
$428    $4CA2   SNE      VC, #A2         ; Skip if VC != 162
$42A    $40CF   SNE      V0, #CF         ; Skip if V0 != 207
$42C    $C427   RND      V4, #27         ; V4 = random & 27
$42E    $88F1   OR       V8, VF          ; V8 |= VF
$430    $FDCD   UNKNOWN  FDCD            ; Unknown Fxxx instruction
$432    $3109   SE       V1, #09         ; Skip if V1 == 9
$434    $0C3B   SYS      $C3B            ; System call to C3B
$436    $3060   SE       V0, #60         ; Skip if V0 == 96
$438    $DD3D   DRW      VD, V3, #D      ; Draw 13-byte sprite at VD, V3
$43A    $31DC   SE       V1, #DC         ; Skip if V1 == 220
$43C    $B427   JP       V0, $427        ; Jump to V0 + 427
$43E    $6138   LD       V1, #38         ; Load 56 into V1
$440    $176C   JP       $76C            ; Jump to 76C
$442    $FF48   UNKNOWN  FF48            ; Unknown Fxxx instruction
$444    $E3F8   UNKNOWN  $E3F8           ; Unknown Exxx instruction
$446    $E0F4   UNKNOWN  $E0F4           ; Unknown Exxx instruction
$448    $BFE6   JP       V0, $FE6        ; Jump to V0 + FE6
$44A    $5430   SE       V4, V3          ; Skip if V4 == V3
$44C    $D9FE   DRW      V9, VF, #E      ; Draw 14-byte sprite at V9, VF
$44E    $CE69   RND      VE, #69         ; VE = random & 69
$450    $3F5C   SE       VF, #5C         ; Skip if VF == 92
$452    $80A0   LD       V0, VA          ; V0 = VA
$454    $686B   LD       V8, #6B         ; Load 107 into V8
$456    $8313   XOR      V3, V1          ; V3 ^= V1
$458    $3450   SE       V4, #50         ; Skip if V4 == 80
$45A    $15C2   JP       $5C2            ; Jump to 5C2
$45C    $EDFF   UNKNOWN  $EDFF           ; Unknown Exxx instruction
$45E    $BE29   JP       V0, $E29        ; Jump to V0 + E29
$460    $3FE4   SE       VF, #E4         ; Skip if VF == 228
$462    $F174   UNKNOWN  F174            ; Unknown Fxxx instruction
$464    $D441   DRW      V4, V4, #1      ; Draw 1-byte sprite at V4, V4
$466    $05CB   SYS      $5CB            ; System call to 5CB
$468    $33A6   SE       V3, #A6         ; Skip if V3 == 166
$46A    $D45D   DRW      V4, V5, #D      ; Draw 13-byte sprite at V4, V5
$46C    $537D   UNKNOWN  $537D           ; Unknown 5xxx instruction
$46E    $42EB   SNE      V2, #EB         ; Skip if V2 != 235
$470    $5E95   UNKNOWN  $5E95           ; Unknown 5xxx instruction
$472    $C1CB   RND      V1, #CB         ; V1 = random & CB
$474    $25A9   CALL     $5A9            ; Call subroutine at 5A9
$476    $1C1B   JP       $C1B            ; Jump to C1B
$478    $82F9   UNKNOWN  82F9            ; Unknown 8xxx instruction
$47A    $CD05   RND      VD, #05         ; VD = random & 05
$47C    $5BE8   UNKNOWN  $5BE8           ; Unknown 5xxx instruction
$47E    $494A   SNE      V9, #4A         ; Skip if V9 != 74
$480    $ACAC   LD       I, $CAC         ; Load CAC into I
$482    $303A   SE       V0, #3A         ; Skip if V0 == 58
$484    $A7FA   LD       I, $7FA         ; Load 7FA into I
$486    $A832   LD       I, $832         ; Load 832 into I
$488    $7AEE   ADD      VA, #EE         ; Add 238 to VA
$48A    $95DC   UNKNOWN  $95DC           ; Unknown 9xxx instruction
$48C    $0BD3   SYS      $BD3            ; System call to BD3
$48E    $6FE1   LD       VF, #E1         ; Load 225 into VF
$490    $2C4D   CALL     $C4D            ; Call subroutine at C4D
$492    $A36D   LD       I, $36D         ; Load 36D into I
$494    $BDFD   JP       V0, $DFD        ; Jump to V0 + DFD
$496    $DDB9   DRW      VD, VB, #9      ; Draw 9-byte sprite at VD, VB
$498    $7456   ADD      V4, #56         ; Add 86 to V4
$49A    $A293   LD       I, $293         ; Load 293 into I
$49C    $9849   UNKNOWN  $9849           ; Unknown 9xxx instruction
$49E    $9FFB   UNKNOWN  $9FFB           ; Unknown 9xxx instruction
$4A0    $3B85   SE       VB, #85         ; Skip if VB == 133
$4A2    $5C14   UNKNOWN  $5C14           ; Unknown 5xxx instruction
$4A4    $C05A   RND      V0, #5A         ; V0 = random & 5A
$4A6    $D59C   DRW      V5, V9, #C      ; Draw 12-byte sprite at V5, V9
$4A8    $887D   UNKNOWN  887D            ; Unknown 8xxx instruction
$4AA    $A4B6   LD       I, $4B6         ; Load 4B6 into I
$4AC    $EF7F   UNKNOWN  $EF7F           ; Unknown Exxx instruction
$4AE    $E9F7   UNKNOWN  $E9F7           ; Unknown Exxx instruction
$4B0    $77B3   ADD      V7, #B3         ; Add 179 to V7
$4B2    $D0C0   DRW      V0, VC, #0      ; Draw 0-byte sprite at V0, VC
$4B4    $3540   SE       V5, #40         ; Skip if V5 == 64
$4B6    $102B   JP       $02B            ; Jump to 02B
$4B8    $EAFB   UNKNOWN  $EAFB           ; Unknown Exxx instruction
$4BA    $B61A   JP       V0, $61A        ; Jump to V0 + 61A
$4BC    $21F4   CALL     $1F4            ; Call subroutine at 1F4
$4BE    $2426   CALL     $426            ; Call subroutine at 426
$4C0    $9D74   UNKNOWN  $9D74           ; Unknown 9xxx instruction
$4C2    $6B57   LD       VB, #57         ; Load 87 into VB
$4C4    $2FE8   CALL     $FE8            ; Call subroutine at FE8
$4C6    $AB96   LD       I, $B96         ; Load B96 into I
$4C8    $284D   CALL     $84D            ; Call subroutine at 84D
$4CA    $2FCD   CALL     $FCD            ; Call subroutine at FCD
$4CC    $A713   LD       I, $713         ; Load 713 into I
$4CE    $9EE1   UNKNOWN  $9EE1           ; Unknown 9xxx instruction
$4D0    $5BC5   UNKNOWN  $5BC5           ; Unknown 5xxx instruction
$4D2    $1811   JP       $811            ; Jump to 811
$4D4    $C9DE   RND      V9, #DE         ; V9 = random & DE
$4D6    $8D9A   UNKNOWN  8D9A            ; Unknown 8xxx instruction
$4D8    $F3A6   UNKNOWN  F3A6            ; Unknown Fxxx instruction
$4DA    $155C   JP       $55C            ; Jump to 55C
$4DC    $9DD3   UNKNOWN  $9DD3           ; Unknown 9xxx instruction
$4DE    $CD6F   RND      VD, #6F         ; VD = random & 6F
$4E0    $C295   RND      V2, #95         ; V2 = random & 95
$4E2    $46CC   SNE      V6, #CC         ; Skip if V6 != 204
$4E4    $F4EF   UNKNOWN  F4EF            ; Unknown Fxxx instruction
$4E6    $7D57   ADD      VD, #57         ; Add 87 to VD
$4E8    $44F3   SNE      V4, #F3         ; Skip if V4 != 243
$4EA    $C997   RND      V9, #97         ; V9 = random & 97
$4EC    $8FB3   XOR      VF, VB          ; VF ^= VB
$4EE    $CBA2   RND      VB, #A2         ; VB = random & A2
$4F0    $92CF   UNKNOWN  $92CF           ; Unknown 9xxx instruction
$4F2    $25A5   CALL     $5A5            ; Call subroutine at 5A5
$4F4    $BC7E   JP       V0, $C7E        ; Jump to V0 + C7E
$4F6    $576D   UNKNOWN  $576D           ; Unknown 5xxx instruction
$4F8    $C043   RND      V0, #43         ; V0 = random & 43
$4FA    $8F7F   UNKNOWN  8F7F            ; Unknown 8xxx instruction
$4FC    $9C0A   UNKNOWN  $9C0A           ; Unknown 9xxx instruction
$4FE    $BC14   JP       V0, $C14        ; Jump to V0 + C14
$500    $546D   UNKNOWN  $546D           ; Unknown 5xxx instruction
$502    $6287   LD       V2, #87         ; Load 135 into V2
$504    $6462   LD       V4, #62         ; Load 98 into V4
$506    $549B   UNKNOWN  $549B           ; Unknown 5xxx instruction
$508    $1CD9   JP       $CD9            ; Jump to CD9
$50A    $ED72   UNKNOWN  $ED72           ; Unknown Exxx instruction
$50C    $D4CC   DRW      V4, VC, #C      ; Draw 12-byte sprite at V4, VC
$50E    $1B65   JP       $B65            ; Jump to B65
$510    $AFB9   LD       I, $FB9         ; Load FB9 into I
$512    $C9FB   RND      V9, #FB         ; V9 = random & FB
$514    $6163   LD       V1, #63         ; Load 99 into V1
$516    $9941   UNKNOWN  $9941           ; Unknown 9xxx instruction
$518    $8E3C   UNKNOWN  8E3C            ; Unknown 8xxx instruction
$51A    $ABDF   LD       I, $BDF         ; Load BDF into I
$51C    $6104   LD       V1, #04         ; Load 4 into V1
$51E    $7FB8   ADD      VF, #B8         ; Add 184 to VF
$520    $3F0B   SE       VF, #0B         ; Skip if VF == 11
$522    $3EDE   SE       VE, #DE         ; Skip if VE == 222
$524    $480B   SNE      V8, #0B         ; Skip if V8 != 11
$526    $4E67   SNE      VE, #67         ; Skip if VE != 103
$528    $6674   LD       V6, #74         ; Load 116 into V6
$52A    $F10A   LD       V1, K           ; Wait for key press, store in V1
$52C    $F656   UNKNOWN  F656            ; Unknown Fxxx instruction
$52E    $D279   DRW      V2, V7, #9      ; Draw 9-byte sprite at V2, V7
$530    $2D35   CALL     $D35            ; Call subroutine at D35
$532    $F208   UNKNOWN  F208            ; Unknown Fxxx instruction
$534    $AE7E   LD       I, $E7E         ; Load E7E into I
$536    $B259   JP       V0, $259        ; Jump to V0 + 259
$538    $1484   JP       $484            ; Jump to 484
$53A    $C8C0   RND      V8, #C0         ; V8 = random & C0
$53C    $6B84   LD       VB, #84         ; Load 132 into VB
$53E    $BD21   JP       V0, $D21        ; Jump to V0 + D21
$540    $96B4   UNKNOWN  $96B4           ; Unknown 9xxx instruction
$542    $F47B   UNKNOWN  F47B            ; Unknown Fxxx instruction
$544    $1F07   JP       $F07            ; Jump to F07
$546    $CF32   RND      VF, #32         ; VF = random & 32
$548    $DB17   DRW      VB, V1, #7      ; Draw 7-byte sprite at VB, V1
$54A    $0897   SYS      $897            ; System call to 897
$54C    $CA67   RND      VA, #67         ; VA = random & 67
$54E    $B99E   JP       V0, $99E        ; Jump to V0 + 99E
$550    $7DE2   ADD      VD, #E2         ; Add 226 to VD
$552    $E2A4   UNKNOWN  $E2A4           ; Unknown Exxx instruction
$554    $9A2A   UNKNOWN  $9A2A           ; Unknown 9xxx instruction
$556    $5A7E   UNKNOWN  $5A7E           ; Unknown 5xxx instruction
$558    $B61F   JP       V0, $61F        ; Jump to V0 + 61F
$55A    $5037   UNKNOWN  $5037           ; Unknown 5xxx instruction
$55C    $CE8F   RND      VE, #8F         ; VE = random & 8F
$55E    $B0F6   JP       V0, $0F6        ; Jump to V0 + 0F6
$560    $BCA1   JP       V0, $CA1        ; Jump to V0 + CA1
$562    $73A3   ADD      V3, #A3         ; Add 163 to V3
$564    $BCE9   JP       V0, $CE9        ; Jump to V0 + CE9
$566    $32E2   SE       V2, #E2         ; Skip if V2 == 226
$568    $C8EF   RND      V8, #EF         ; V8 = random & EF
$56A    $4901   SNE      V9, #01         ; Skip if V9 != 1
$56C    $090B   SYS      $90B            ; System call to 90B
$56E    $1CA3   JP       $CA3            ; Jump to CA3
$570    $6187   LD       V1, #87         ; Load 135 into V1
$572    $6D84   LD       VD, #84         ; Load 132 into VD
$574    $9CB7   UNKNOWN  $9CB7           ; Unknown 9xxx instruction
$576    $7781   ADD      V7, #81         ; Add 129 to V7
$578    $1C6C   JP       $C6C            ; Jump to C6C
$57A    $7E49   ADD      VE, #49         ; Add 73 to VE
$57C    $7212   ADD      V2, #12         ; Add 18 to V2
$57E    $8D87   SUBN     VD, V8          ; VD = V8 - VD, VF = !borrow
$580    $76EA   ADD      V6, #EA         ; Add 234 to V6
$582    $9406   UNKNOWN  $9406           ; Unknown 9xxx instruction
$584    $D6B4   DRW      V6, VB, #4      ; Draw 4-byte sprite at V6, VB
$586    $9F5F   UNKNOWN  $9F5F           ; Unknown 9xxx instruction
$588    $CCBD   RND      VC, #BD         ; VC = random & BD
$58A    $0877   SYS      $877            ; System call to 877
$58C    $16ED   JP       $6ED            ; Jump to 6ED
$58E    $AD3E   LD       I, $D3E         ; Load D3E into I
$590    $750C   ADD      V5, #0C         ; Add 12 to V5
$592    $CF95   RND      VF, #95         ; VF = random & 95
$594    $4883   SNE      V8, #83         ; Skip if V8 != 131
$596    $1165   JP       $165            ; Jump to 165
$598    $0BB3   SYS      $BB3            ; System call to BB3
$59A    $C8DF   RND      V8, #DF         ; V8 = random & DF
$59C    $2282   CALL     $282            ; Call subroutine at 282
$59E    $A9E2   LD       I, $9E2         ; Load 9E2 into I
$5A0    $2391   CALL     $391            ; Call subroutine at 391
$5A2    $9067   UNKNOWN  $9067           ; Unknown 9xxx instruction
$5A4    $3B7F   SE       VB, #7F         ; Skip if VB == 127
$5A6    $8A21   OR       VA, V2          ; VA |= V2
$5A8    $47DE   SNE      V7, #DE         ; Skip if V7 != 222
$5AA    $1A9A   JP       $A9A            ; Jump to A9A
$5AC    $937F   UNKNOWN  $937F           ; Unknown 9xxx instruction
$5AE    $CFC1   RND      VF, #C1         ; VF = random & C1
$5B0    $0208   SYS      $208            ; System call to 208
$5B2    $8675   SUB      V6, V7          ; V6 -= V7, VF = !borrow
$5B4    $5408   UNKNOWN  $5408           ; Unknown 5xxx instruction
$5B6    $D9F7   DRW      V9, VF, #7      ; Draw 7-byte sprite at V9, VF
$5B8    $0ED8   SYS      $ED8            ; System call to ED8
$5BA    $7F4B   ADD      VF, #4B         ; Add 75 to VF
$5BC    $FDA2   UNKNOWN  FDA2            ; Unknown Fxxx instruction
$5BE    $7F5E   ADD      VF, #5E         ; Add 94 to VF
$5C0    $8AFA   UNKNOWN  8AFA            ; Unknown 8xxx instruction
$5C2    $97AF   UNKNOWN  $97AF           ; Unknown 9xxx instruction
$5C4    $B6E9   JP       V0, $6E9        ; Jump to V0 + 6E9
$5C6    $53CC   UNKNOWN  $53CC           ; Unknown 5xxx instruction
$5C8    $310B   SE       V1, #0B         ; Skip if V1 == 11
$5CA    $9A76   UNKNOWN  $9A76           ; Unknown 9xxx instruction
$5CC    $699E   LD       V9, #9E         ; Load 158 into V9
$5CE    $AB74   LD       I, $B74         ; Load B74 into I
$5D0    $F279   UNKNOWN  F279            ; Unknown Fxxx instruction
$5D2    $86EC   UNKNOWN  86EC            ; Unknown 8xxx instruction
$5D4    $C5CB   RND      V5, #CB         ; V5 = random & CB
$5D6    $EAD8   UNKNOWN  $EAD8           ; Unknown Exxx instruction
$5D8    $A7C2   LD       I, $7C2         ; Load 7C2 into I
$5DA    $EAAC   UNKNOWN  $EAAC           ; Unknown Exxx instruction
$5DC    $EC27   UNKNOWN  $EC27           ; Unknown Exxx instruction
$5DE    $1C3E   JP       $C3E            ; Jump to C3E
$5E0    $684A   LD       V8, #4A         ; Load 74 into V8
$5E2    $2795   CALL     $795            ; Call subroutine at 795
$5E4    $8F98   UNKNOWN  8F98            ; Unknown 8xxx instruction
$5E6    $DE7F   DRW      VE, V7, #F      ; Draw 15-byte sprite at VE, V7
$5E8    $E6C0   UNKNOWN  $E6C0           ; Unknown Exxx instruction
$5EA    $D2A7   DRW      V2, VA, #7      ; Draw 7-byte sprite at V2, VA
$5EC    $F931   UNKNOWN  F931            ; Unknown Fxxx instruction
$5EE    $E366   UNKNOWN  $E366           ; Unknown Exxx instruction
$5F0    $A85D   LD       I, $85D         ; Load 85D into I
$5F2    $6473   LD       V4, #73         ; Load 115 into V4
$5F4    $AA7A   LD       I, $A7A         ; Load A7A into I
$5F6    $7E05   ADD      VE, #05         ; Add 5 to VE
$5F8    $A93D   LD       I, $93D         ; Load 93D into I
$5FA    $7C37   ADD      VC, #37         ; Add 55 to VC
$5FC    $23E1   CALL     $3E1            ; Call subroutine at 3E1
$5FE    $4BE3   SNE      VB, #E3         ; Skip if VB != 227
$600    $011B   SYS      $11B            ; System call to 11B
$602    $1671   JP       $671            ; Jump to 671
$604    $5F8F   UNKNOWN  $5F8F           ; Unknown 5xxx instruction
$606    $F7AE   UNKNOWN  F7AE            ; Unknown Fxxx instruction
$608    $3032   SE       V0, #32         ; Skip if V0 == 50
$60A    $5AE1   UNKNOWN  $5AE1           ; Unknown 5xxx instruction
$60C    $468E   SNE      V6, #8E         ; Skip if V6 != 142
$60E    $1D18   JP       $D18            ; Jump to D18
$610    $C745   RND      V7, #45         ; V7 = random & 45
$612    $3C3A   SE       VC, #3A         ; Skip if VC == 58
$614    $A6FB   LD       I, $6FB         ; Load 6FB into I
$616    $4159   SNE      V1, #59         ; Skip if V1 != 89
$618    $DE35   DRW      VE, V3, #5      ; Draw 5-byte sprite at VE, V3
$61A    $5924   UNKNOWN  $5924           ; Unknown 5xxx instruction
$61C    $190A   JP       $90A            ; Jump to 90A
$61E    $2C92   CALL     $C92            ; Call subroutine at C92
$620    $D262   DRW      V2, V6, #2      ; Draw 2-byte sprite at V2, V6
$622    $4BE7   SNE      VB, #E7         ; Skip if VB != 231
$624    $9827   UNKNOWN  $9827           ; Unknown 9xxx instruction
$626    $5714   UNKNOWN  $5714           ; Unknown 5xxx instruction
$628    $ADB5   LD       I, $DB5         ; Load DB5 into I
$62A    $B19C   JP       V0, $19C        ; Jump to V0 + 19C
$62C    $ACA5   LD       I, $CA5         ; Load CA5 into I
$62E    $FBD6   UNKNOWN  FBD6            ; Unknown Fxxx instruction
$630    $88B6   SHR      V8              ; V8 >>= 1, VF = LSB
$632    $EE5B   UNKNOWN  $EE5B           ; Unknown Exxx instruction
$634    $E699   UNKNOWN  $E699           ; Unknown Exxx instruction
$636    $F76B   UNKNOWN  F76B            ; Unknown Fxxx instruction
$638    $8B36   SHR      VB              ; VB >>= 1, VF = LSB
$63A    $1598   JP       $598            ; Jump to 598
$63C    $4235   SNE      V2, #35         ; Skip if V2 != 53
$63E    $FA44   UNKNOWN  FA44            ; Unknown Fxxx instruction
$640    $B3DB   JP       V0, $3DB        ; Jump to V0 + 3DB
$642    $A3F6   LD       I, $3F6         ; Load 3F6 into I
$644    $497E   SNE      V9, #7E         ; Skip if V9 != 126
$646    $10BB   JP       $0BB            ; Jump to 0BB
$648    $34FB   SE       V4, #FB         ; Skip if V4 == 251
$64A    $D3E5   DRW      V3, VE, #5      ; Draw 5-byte sprite at V3, VE
$64C    $5338   UNKNOWN  $5338           ; Unknown 5xxx instruction
$64E    $1773   JP       $773            ; Jump to 773
$650    $3974   SE       V9, #74         ; Skip if V9 == 116
$652    $23E8   CALL     $3E8            ; Call subroutine at 3E8
$654    $3DF7   SE       VD, #F7         ; Skip if VD == 247
$656    $9BAF   UNKNOWN  $9BAF           ; Unknown 9xxx instruction
$658    $FDD8   UNKNOWN  FDD8            ; Unknown Fxxx instruction
$65A    $84E9   UNKNOWN  84E9            ; Unknown 8xxx instruction
$65C    $2A2C   CALL     $A2C            ; Call subroutine at A2C
$65E    $0A63   SYS      $A63            ; System call to A63
$660    $3EB2   SE       VE, #B2         ; Skip if VE == 178
$662    $FCAF   UNKNOWN  FCAF            ; Unknown Fxxx instruction
$664    $B12D   JP       V0, $12D        ; Jump to V0 + 12D
$666    $6B24   LD       VB, #24         ; Load 36 into VB
$668    $515C   UNKNOWN  $515C           ; Unknown 5xxx instruction
$66A    $5112   UNKNOWN  $5112           ; Unknown 5xxx instruction
$66C    $B942   JP       V0, $942        ; Jump to V0 + 942
$66E    $C664   RND      V6, #64         ; V6 = random & 64
$670    $925A   UNKNOWN  $925A           ; Unknown 9xxx instruction
$672    $3DCF   SE       VD, #CF         ; Skip if VD == 207
$674    $0210   SYS      $210            ; System call to 210
$676    $6DD1   LD       VD, #D1         ; Load 209 into VD
$678    $027D   SYS      $27D            ; System call to 27D
$67A    $5812   UNKNOWN  $5812           ; Unknown 5xxx instruction
$67C    $8A58   UNKNOWN  8A58            ; Unknown 8xxx instruction
$67E    $246C   CALL     $46C            ; Call subroutine at 46C
$680    $ED6B   UNKNOWN  $ED6B           ; Unknown Exxx instruction
$682    $C98A   RND      V9, #8A         ; V9 = random & 8A
$684    $0697   SYS      $697            ; System call to 697
$686    $ED1A   UNKNOWN  $ED1A           ; Unknown Exxx instruction
$688    $2A58   CALL     $A58            ; Call subroutine at A58
$68A    $6D7E   LD       VD, #7E         ; Load 126 into VD
$68C    $A4F9   LD       I, $4F9         ; Load 4F9 into I
$68E    $FF81   UNKNOWN  FF81            ; Unknown Fxxx instruction
$690    $504F   UNKNOWN  $504F           ; Unknown 5xxx instruction
$692    $4FAF   SNE      VF, #AF         ; Skip if VF != 175
$694    $EBA0   UNKNOWN  $EBA0           ; Unknown Exxx instruction
$696    $A284   LD       I, $284         ; Load 284 into I
$698    $BBD6   JP       V0, $BD6        ; Jump to V0 + BD6
$69A    $2173   CALL     $173            ; Call subroutine at 173
$69C    $04B5   SYS      $4B5            ; System call to 4B5
$69E    $4F66   SNE      VF, #66         ; Skip if VF != 102
$6A0    $ACE4   LD       I, $CE4         ; Load CE4 into I
$6A2    $778D   ADD      V7, #8D         ; Add 141 to V7
$6A4    $9D96   UNKNOWN  $9D96           ; Unknown 9xxx instruction
$6A6    $A587   LD       I, $587         ; Load 587 into I
$6A8    $3A60   SE       VA, #60         ; Skip if VA == 96
$6AA    $BA57   JP       V0, $A57        ; Jump to V0 + A57
$6AC    $8BF3   XOR      VB, VF          ; VB ^= VF
$6AE    $D813   DRW      V8, V1, #3      ; Draw 3-byte sprite at V8, V1
$6B0    $33C9   SE       V3, #C9         ; Skip if V3 == 201
$6B2    $5336   UNKNOWN  $5336           ; Unknown 5xxx instruction
$6B4    $ABA4   LD       I, $BA4         ; Load BA4 into I
$6B6    $DD28   DRW      VD, V2, #8      ; Draw 8-byte sprite at VD, V2
$6B8    $FBFE   UNKNOWN  FBFE            ; Unknown Fxxx instruction
$6BA    $25C9   CALL     $5C9            ; Call subroutine at 5C9
$6BC    $DDDB   DRW      VD, VD, #B      ; Draw 11-byte sprite at VD, VD
$6BE    $0A9F   SYS      $A9F            ; System call to A9F
$6C0    $139F   JP       $39F            ; Jump to 39F
$6C2    $A0A9   LD       I, $0A9         ; Load 0A9 into I
$6C4    $A806   LD       I, $806         ; Load 806 into I
$6C6    $675C   LD       V7, #5C         ; Load 92 into V7
$6C8    $E10E   UNKNOWN  $E10E           ; Unknown Exxx instruction
$6CA    $F414   UNKNOWN  F414            ; Unknown Fxxx instruction
$6CC    $6DCD   LD       VD, #CD         ; Load 205 into VD
$6CE    $79D8   ADD      V9, #D8         ; Add 216 to V9
$6D0    $6819   LD       V8, #19         ; Load 25 into V8
$6D2    $E68A   UNKNOWN  $E68A           ; Unknown Exxx instruction
$6D4    $6DE5   LD       VD, #E5         ; Load 229 into VD
$6D6    $F63D   UNKNOWN  F63D            ; Unknown Fxxx instruction
$6D8    $1993   JP       $993            ; Jump to 993
$6DA    $3009   SE       V0, #09         ; Skip if V0 == 9
$6DC    $150B   JP       $50B            ; Jump to 50B
$6DE    $A161   LD       I, $161         ; Load 161 into I
$6E0    $FBA1   UNKNOWN  FBA1            ; Unknown Fxxx instruction
$6E2    $52F0   SE       V2, VF          ; Skip if V2 == VF
$6E4    $9467   UNKNOWN  $9467           ; Unknown 9xxx instruction
$6E6    $E710   UNKNOWN  $E710           ; Unknown Exxx instruction
$6E8    $3A9A   SE       VA, #9A         ; Skip if VA == 154
$6EA    $5FFE   UNKNOWN  $5FFE           ; Unknown 5xxx instruction
$6EC    $FCCF   UNKNOWN  FCCF            ; Unknown Fxxx instruction
$6EE    $B533   JP       V0, $533        ; Jump to V0 + 533
$6F0    $EDC2   UNKNOWN  $EDC2           ; Unknown Exxx instruction
$6F2    $056D   SYS      $56D            ; System call to 56D
$6F4    $1347   JP       $347            ; Jump to 347
$6F6    $3F3B   SE       VF, #3B         ; Skip if VF == 59
$6F8    $5D02   UNKNOWN  $5D02           ; Unknown 5xxx instruction
$6FA    $576C   UNKNOWN  $576C           ; Unknown 5xxx instruction
$6FC    $AC10   LD       I, $C10         ; Load C10 into I
$6FE    $D351   DRW      V3, V5, #1      ; Draw 1-byte sprite at V3, V5
$700    $256B   CALL     $56B            ; Call subroutine at 56B
$702    $B066   JP       V0, $066        ; Jump to V0 + 066
$704    $1D40   JP       $D40            ; Jump to D40
$706    $7AD0   ADD      VA, #D0         ; Add 208 to VA
$708    $87A4   ADD      V7, VA          ; V7 += VA, VF = carry
$70A    $0F90   SYS      $F90            ; System call to F90
$70C    $773A   ADD      V7, #3A         ; Add 58 to V7
$70E    $1AAE   JP       $AAE            ; Jump to AAE
$710    $EA33   UNKNOWN  $EA33           ; Unknown Exxx instruction
$712    $5B83   UNKNOWN  $5B83           ; Unknown 5xxx instruction
$714    $E022   UNKNOWN  $E022           ; Unknown Exxx instruction
$716    $A2D7   LD       I, $2D7         ; Load 2D7 into I
$718    $984F   UNKNOWN  $984F           ; Unknown 9xxx instruction
$71A    $D44E   DRW      V4, V4, #E      ; Draw 14-byte sprite at V4, V4
$71C    $FAA1   UNKNOWN  FAA1            ; Unknown Fxxx instruction
$71E    $6B40   LD       VB, #40         ; Load 64 into VB
$720    $39F2   SE       V9, #F2         ; Skip if V9 == 242
$722    $6D0C   LD       VD, #0C         ; Load 12 into VD
$724    $80A4   ADD      V0, VA          ; V0 += VA, VF = carry
$726    $A2BC   LD       I, $2BC         ; Load 2BC into I
$728    $02D8   SYS      $2D8            ; System call to 2D8
$72A    $27FC   CALL     $7FC            ; Call subroutine at 7FC
$72C    $2326   CALL     $326            ; Call subroutine at 326
$72E    $2E62   CALL     $E62            ; Call subroutine at E62
$730    $D6CE   DRW      V6, VC, #E      ; Draw 14-byte sprite at V6, VC
$732    $2ED3   CALL     $ED3            ; Call subroutine at ED3
$734    $A4E2   LD       I, $4E2         ; Load 4E2 into I
$736    $29A0   CALL     $9A0            ; Call subroutine at 9A0
$738    $CCFE   RND      VC, #FE         ; VC = random & FE
$73A    $AFDB   LD       I, $FDB         ; Load FDB into I
$73C    $7AD8   ADD      VA, #D8         ; Add 216 to VA
$73E    $1057   JP       $057            ; Jump to 057
$740    $3095   SE       V0, #95         ; Skip if V0 == 149
$742    $4E17   SNE      VE, #17         ; Skip if VE != 23
$744    $604D   LD       V0, #4D         ; Load 77 into V0
$746    $32BF   SE       V2, #BF         ; Skip if V2 == 191
$748    $8DE5   SUB      VD, VE          ; VD -= VE, VF = !borrow
$74A    $C2B3   RND      V2, #B3         ; V2 = random & B3
$74C    $33F0   SE       V3, #F0         ; Skip if V3 == 240
$74E    $8206   SHR      V2              ; V2 >>= 1, VF = LSB
$750    $76E1   ADD      V6, #E1         ; Add 225 to V6
$752    $21B7   CALL     $1B7            ; Call subroutine at 1B7
$754    $0915   SYS      $915            ; System call to 915
$756    $2F21   CALL     $F21            ; Call subroutine at F21
$758    $82D8   UNKNOWN  82D8            ; Unknown 8xxx instruction
$75A    $303D   SE       V0, #3D         ; Skip if V0 == 61
$75C    $9A32   UNKNOWN  $9A32           ; Unknown 9xxx instruction
$75E    $A957   LD       I, $957         ; Load 957 into I
$760    $B3A5   JP       V0, $3A5        ; Jump to V0 + 3A5
$762    $F66F   UNKNOWN  F66F            ; Unknown Fxxx instruction
$764    $459C   SNE      V5, #9C         ; Skip if V5 != 156
$766    $1CF1   JP       $CF1            ; Jump to CF1
$768    $9191   UNKNOWN  $9191           ; Unknown 9xxx instruction
$76A    $863B   UNKNOWN  863B            ; Unknown 8xxx instruction
$76C    $1E38   JP       $E38            ; Jump to E38
$76E    $43F5   SNE      V3, #F5         ; Skip if V3 != 245
$770    $50D9   UNKNOWN  $50D9           ; Unknown 5xxx instruction
$772    $B5D0   JP       V0, $5D0        ; Jump to V0 + 5D0
$774    $0248   SYS      $248            ; System call to 248
$776    $A120   LD       I, $120         ; Load 120 into I
$778    $B6AC   JP       V0, $6AC        ; Jump to V0 + 6AC
$77A    $D8F9   DRW      V8, VF, #9      ; Draw 9-byte sprite at V8, VF
$77C    $AE9E   LD       I, $E9E         ; Load E9E into I
$77E    $6398   LD       V3, #98         ; Load 152 into V3
$780    $A2D5   LD       I, $2D5         ; Load 2D5 into I
$782    $0C65   SYS      $C65            ; System call to C65
$784    $222D   CALL     $22D            ; Call subroutine at 22D
$786    $7FFE   ADD      VF, #FE         ; Add 254 to VF
$788    $AA0D   LD       I, $A0D         ; Load A0D into I
$78A    $DCA3   DRW      VC, VA, #3      ; Draw 3-byte sprite at VC, VA
$78C    $7230   ADD      V2, #30         ; Add 48 to V2
$78E    $9CA4   UNKNOWN  $9CA4           ; Unknown 9xxx instruction
$790    $E092   UNKNOWN  $E092           ; Unknown Exxx instruction
$792    $3425   SE       V4, #25         ; Skip if V4 == 37
$794    $EF51   UNKNOWN  $EF51           ; Unknown Exxx instruction
$796    $DF13   DRW      VF, V1, #3      ; Draw 3-byte sprite at VF, V1
$798    $B1D5   JP       V0, $1D5        ; Jump to V0 + 1D5
$79A    $7A0A   ADD      VA, #0A         ; Add 10 to VA
$79C    $E763   UNKNOWN  $E763           ; Unknown Exxx instruction
$79E    $4B4C   SNE      VB, #4C         ; Skip if VB != 76
$7A0    $5EBE   UNKNOWN  $5EBE           ; Unknown 5xxx instruction
$7A2    $C656   RND      V6, #56         ; V6 = random & 56
$7A4    $B6B5   JP       V0, $6B5        ; Jump to V0 + 6B5
$7A6    $BD9C   JP       V0, $D9C        ; Jump to V0 + D9C
$7A8    $0EC2   SYS      $EC2            ; System call to EC2
$7AA    $69BC   LD       V9, #BC         ; Load 188 into V9
$7AC    $1616   JP       $616            ; Jump to 616
$7AE    $F6E3   UNKNOWN  F6E3            ; Unknown Fxxx instruction
$7B0    $00A0   SYS      $0A0            ; System call to 0A0
$7B2    $F0D0   UNKNOWN  F0D0            ; Unknown Fxxx instruction
$7B4    $C944   RND      V9, #44         ; V9 = random & 44
$7B6    $36DC   SE       V6, #DC         ; Skip if V6 == 220
$7B8    $B12A   JP       V0, $12A        ; Jump to V0 + 12A
$7BA    $6A42   LD       VA, #42         ; Load 66 into VA
$7BC    $481D   SNE      V8, #1D         ; Skip if V8 != 29
$7BE    $7594   ADD      V5, #94         ; Add 148 to V5
$7C0    $AB8D   LD       I, $B8D         ; Load B8D into I
$7C2    $E923   UNKNOWN  $E923           ; Unknown Exxx instruction
$7C4    $A69F   LD       I, $69F         ; Load 69F into I
$7C6    $4DAA   SNE      VD, #AA         ; Skip if VD != 170
$7C8    $092A   SYS      $92A            ; System call to 92A
$7CA    $11F1   JP       $1F1            ; Jump to 1F1
$7CC    $DC94   DRW      VC, V9, #4      ; Draw 4-byte sprite at VC, V9
$7CE    $17FA   JP       $7FA            ; Jump to 7FA
$7D0    $0E43   SYS      $E43            ; System call to E43
$7D2    $8E6D   UNKNOWN  8E6D            ; Unknown 8xxx instruction
$7D4    $8E63   XOR      VE, V6          ; VE ^= V6
$7D6    $0BAC   SYS      $BAC            ; System call to BAC
$7D8    $5613   UNKNOWN  $5613           ; Unknown 5xxx instruction
$7DA    $FEF8   UNKNOWN  FEF8            ; Unknown Fxxx instruction
$7DC    $AD26   LD       I, $D26         ; Load D26 into I
$7DE    $9D3D   UNKNOWN  $9D3D           ; Unknown 9xxx instruction
$7E0    $3631   SE       V6, #31         ; Skip if V6 == 49
$7E2    $9813   UNKNOWN  $9813           ; Unknown 9xxx instruction
$7E4    $87E2   AND      V7, VE          ; V7 &= VE
$7E6    $4ED4   SNE      VE, #D4         ; Skip if VE != 212
$7E8    $B2B0   JP       V0, $2B0        ; Jump to V0 + 2B0
$7EA    $61E8   LD       V1, #E8         ; Load 232 into V1
$7EC    $35D8   SE       V5, #D8         ; Skip if V5 == 216
$7EE    $22B0   CALL     $2B0            ; Call subroutine at 2B0
$7F0    $CC9B   RND      VC, #9B         ; VC = random & 9B
$7F2    $725E   ADD      V2, #5E         ; Add 94 to V2
$7F4    $E0CE   UNKNOWN  $E0CE           ; Unknown Exxx instruction
$7F6    $1F93   JP       $F93            ; Jump to F93
$7F8    $CCED   RND      VC, #ED         ; VC = random & ED
$7FA    $0D38   SYS      $D38            ; System call to D38
$7FC    $E91A   UNKNOWN  $E91A           ; Unknown Exxx instruction
$7FE    $A2B1   LD       I, $2B1         ; Load 2B1 into I
$800    $E566   UNKNOWN  $E566           ; Unknown Exxx instruction
$802    $35E0   SE       V5, #E0         ; Skip if V5 == 224
$804    $0C0D   SYS      $C0D            ; System call to C0D
$806    $95AC   UNKNOWN  $95AC           ; Unknown 9xxx instruction
$808    $A673   LD       I, $673         ; Load 673 into I
$80A    $E7B8   UNKNOWN  $E7B8           ; Unknown Exxx instruction
$80C    $ACFB   LD       I, $CFB         ; Load CFB into I
$80E    $C93D   RND      V9, #3D         ; V9 = random & 3D
$810    $F31E   ADD      I, V3           ; I += V3
$812    $94CC   UNKNOWN  $94CC           ; Unknown 9xxx instruction
$814    $66C1   LD       V6, #C1         ; Load 193 into V6
$816    $45EE   SNE      V5, #EE         ; Skip if V5 != 238
$818    $F9C8   UNKNOWN  F9C8            ; Unknown Fxxx instruction
$81A    $54CC   UNKNOWN  $54CC           ; Unknown 5xxx instruction
$81C    $7AEE   ADD      VA, #EE         ; Add 238 to VA
$81E    $B10E   JP       V0, $10E        ; Jump to V0 + 10E
$820    $9E14   UNKNOWN  $9E14           ; Unknown 9xxx instruction
$822    $6D50   LD       VD, #50         ; Load 80 into VD
$824    $96D0   SNE      V6, VD          ; Skip if V6 != VD
$826    $C1E3   RND      V1, #E3         ; V1 = random & E3
$828    $DC35   DRW      VC, V3, #5      ; Draw 5-byte sprite at VC, V3
$82A    $AD03   LD       I, $D03         ; Load D03 into I
$82C    $7B2F   ADD      VB, #2F         ; Add 47 to VB
$82E    $2188   CALL     $188            ; Call subroutine at 188
$830    $85B6   SHR      V5              ; V5 >>= 1, VF = LSB
$832    $55A1   UNKNOWN  $55A1           ; Unknown 5xxx instruction
$834    $A76B   LD       I, $76B         ; Load 76B into I
$836    $5F26   UNKNOWN  $5F26           ; Unknown 5xxx instruction
$838    $44E2   SNE      V4, #E2         ; Skip if V4 != 226
$83A    $F403   UNKNOWN  F403            ; Unknown Fxxx instruction
$83C    $542D   UNKNOWN  $542D           ; Unknown 5xxx instruction
$83E    $C2D1   RND      V2, #D1         ; V2 = random & D1
$840    $DAE0   DRW      VA, VE, #0      ; Draw 0-byte sprite at VA, VE
$842    $90C3   UNKNOWN  $90C3           ; Unknown 9xxx instruction
$844    $5A07   UNKNOWN  $5A07           ; Unknown 5xxx instruction
$846    $2F3A   CALL     $F3A            ; Call subroutine at F3A
$848    $B040   JP       V0, $040        ; Jump to V0 + 040
$84A    $D9E6   DRW      V9, VE, #6      ; Draw 6-byte sprite at V9, VE
$84C    $0F23   SYS      $F23            ; System call to F23
$84E    $DF38   DRW      VF, V3, #8      ; Draw 8-byte sprite at VF, V3
$850    $7A2C   ADD      VA, #2C         ; Add 44 to VA
$852    $880E   SHL      V8              ; V8 <<= 1, VF = MSB
$854    $BB07   JP       V0, $B07        ; Jump to V0 + B07
$856    $993D   UNKNOWN  $993D           ; Unknown 9xxx instruction
$858    $1833   JP       $833            ; Jump to 833
$85A    $606D   LD       V0, #6D         ; Load 109 into V0
$85C    $28D7   CALL     $8D7            ; Call subroutine at 8D7
$85E    $231B   CALL     $31B            ; Call subroutine at 31B
$860    $544F   UNKNOWN  $544F           ; Unknown 5xxx instruction
$862    $3CC8   SE       VC, #C8         ; Skip if VC == 200
$864    $97A0   SNE      V7, VA          ; Skip if V7 != VA
$866    $60EB   LD       V0, #EB         ; Load 235 into V0
$868    $16A8   JP       $6A8            ; Jump to 6A8
$86A    $4E07   SNE      VE, #07         ; Skip if VE != 7
$86C    $381B   SE       V8, #1B         ; Skip if V8 == 27
$86E    $A9AA   LD       I, $9AA         ; Load 9AA into I
$870    $A859   LD       I, $859         ; Load 859 into I
$872    $D5CC   DRW      V5, VC, #C      ; Draw 12-byte sprite at V5, VC
$874    $EA8C   UNKNOWN  $EA8C           ; Unknown Exxx instruction
$876    $B226   JP       V0, $226        ; Jump to V0 + 226
$878    $97AF   UNKNOWN  $97AF           ; Unknown 9xxx instruction
$87A    $2E4D   CALL     $E4D            ; Call subroutine at E4D
$87C    $ACF3   LD       I, $CF3         ; Load CF3 into I
$87E    $F901   UNKNOWN  F901            ; Unknown Fxxx instruction
$880    $392A   SE       V9, #2A         ; Skip if V9 == 42
$882    $EAE2   UNKNOWN  $EAE2           ; Unknown Exxx instruction
$884    $76FA   ADD      V6, #FA         ; Add 250 to V6
$886    $5635   UNKNOWN  $5635           ; Unknown 5xxx instruction
$888    $F0F1   UNKNOWN  F0F1            ; Unknown Fxxx instruction
$88A    $02E8   SYS      $2E8            ; System call to 2E8
$88C    $CD63   RND      VD, #63         ; VD = random & 63
$88E    $3094   SE       V0, #94         ; Skip if V0 == 148
$890    $D7A1   DRW      V7, VA, #1      ; Draw 1-byte sprite at V7, VA
$892    $5553   UNKNOWN  $5553           ; Unknown 5xxx instruction
$894    $BCD9   JP       V0, $CD9        ; Jump to V0 + CD9
$896    $1CF4   JP       $CF4            ; Jump to CF4
$898    $D919   DRW      V9, V1, #9      ; Draw 9-byte sprite at V9, V1
$89A    $2F18   CALL     $F18            ; Call subroutine at F18
$89C    $54C3   UNKNOWN  $54C3           ; Unknown 5xxx instruction
$89E    $FC61   UNKNOWN  FC61            ; Unknown Fxxx instruction
$8A0    $7AE0   ADD      VA, #E0         ; Add 224 to VA
$8A2    $240A   CALL     $40A            ; Call subroutine at 40A
$8A4    $3E44   SE       VE, #44         ; Skip if VE == 68
$8A6    $8592   AND      V5, V9          ; V5 &= V9
$8A8    $BD6A   JP       V0, $D6A        ; Jump to V0 + D6A
$8AA    $9BF7   UNKNOWN  $9BF7           ; Unknown 9xxx instruction
$8AC    $8EC7   SUBN     VE, VC          ; VE = VC - VE, VF = !borrow
$8AE    $0683   SYS      $683            ; System call to 683
$8B0    $F690   UNKNOWN  F690            ; Unknown Fxxx instruction
$8B2    $ACA9   LD       I, $CA9         ; Load CA9 into I
$8B4    $AF15   LD       I, $F15         ; Load F15 into I
$8B6    $D031   DRW      V0, V3, #1      ; Draw 1-byte sprite at V0, V3
$8B8    $CA4C   RND      VA, #4C         ; VA = random & 4C
$8BA    $4DDD   SNE      VD, #DD         ; Skip if VD != 221
$8BC    $EDC1   UNKNOWN  $EDC1           ; Unknown Exxx instruction
$8BE    $DAA4   DRW      VA, VA, #4      ; Draw 4-byte sprite at VA, VA
$8C0    $333E   SE       V3, #3E         ; Skip if V3 == 62
$8C2    $C723   RND      V7, #23         ; V7 = random & 23
$8C4    $C85A   RND      V8, #5A         ; V8 = random & 5A
$8C6    $D725   DRW      V7, V2, #5      ; Draw 5-byte sprite at V7, V2
$8C8    $82B7   SUBN     V2, VB          ; V2 = VB - V2, VF = !borrow
$8CA    $BD81   JP       V0, $D81        ; Jump to V0 + D81
$8CC    $615F   LD       V1, #5F         ; Load 95 into V1
$8CE    $002D   SYS      $02D            ; System call to 02D
$8D0    $E076   UNKNOWN  $E076           ; Unknown Exxx instruction
$8D2    $019C   SYS      $19C            ; System call to 19C
$8D4    $1F6F   JP       $F6F            ; Jump to F6F
$8D6    $14E2   JP       $4E2            ; Jump to 4E2
$8D8    $BD1E   JP       V0, $D1E        ; Jump to V0 + D1E
$8DA    $F33A   UNKNOWN  F33A            ; Unknown Fxxx instruction
$8DC    $1F8A   JP       $F8A            ; Jump to F8A
$8DE    $6548   LD       V5, #48         ; Load 72 into V5
$8E0    $71FE   ADD      V1, #FE         ; Add 254 to V1
$8E2    $EBEC   UNKNOWN  $EBEC           ; Unknown Exxx instruction
$8E4    $EDD3   UNKNOWN  $EDD3           ; Unknown Exxx instruction
$8E6    $3564   SE       V5, #64         ; Skip if V5 == 100
$8E8    $1FA0   JP       $FA0            ; Jump to FA0
$8EA    $3F1D   SE       VF, #1D         ; Skip if VF == 29
$8EC    $51ED   UNKNOWN  $51ED           ; Unknown 5xxx instruction
$8EE    $4D32   SNE      VD, #32         ; Skip if VD != 50
$8F0    $7D93   ADD      VD, #93         ; Add 147 to VD
$8F2    $B564   JP       V0, $564        ; Jump to V0 + 564
$8F4    $A7AA   LD       I, $7AA         ; Load 7AA into I
$8F6    $9A64   UNKNOWN  $9A64           ; Unknown 9xxx instruction
$8F8    $4093   SNE      V0, #93         ; Skip if V0 != 147
$8FA    $794F   ADD      V9, #4F         ; Add 79 to V9
$8FC    $EFDB   UNKNOWN  $EFDB           ; Unknown Exxx instruction
$8FE    $458F   SNE      V5, #8F         ; Skip if V5 != 143
$900    $5ACB   UNKNOWN  $5ACB           ; Unknown 5xxx instruction
$902    $5872   UNKNOWN  $5872           ; Unknown 5xxx instruction
$904    $0F8B   SYS      $F8B            ; System call to F8B
$906    $0B3D   SYS      $B3D            ; System call to B3D
$908    $C4EE   RND      V4, #EE         ; V4 = random & EE
$90A    $568B   UNKNOWN  $568B           ; Unknown 5xxx instruction
$90C    $E605   UNKNOWN  $E605           ; Unknown Exxx instruction
$90E    $0F0F   SYS      $F0F            ; System call to F0F
$910    $ABBF   LD       I, $BBF         ; Load BBF into I
$912    $5D2C   UNKNOWN  $5D2C           ; Unknown 5xxx instruction
$914    $DD90   DRW      VD, V9, #0      ; Draw 0-byte sprite at VD, V9
$916    $56FB   UNKNOWN  $56FB           ; Unknown 5xxx instruction
$918    $1FD1   JP       $FD1            ; Jump to FD1
$91A    $40A4   SNE      V0, #A4         ; Skip if V0 != 164
$91C    $D425   DRW      V4, V2, #5      ; Draw 5-byte sprite at V4, V2
$91E    $E8B0   UNKNOWN  $E8B0           ; Unknown Exxx instruction
$920    $C466   RND      V4, #66         ; V4 = random & 66
$922    $E676   UNKNOWN  $E676           ; Unknown Exxx instruction
$924    $A6B2   LD       I, $6B2         ; Load 6B2 into I
$926    $4CF8   SNE      VC, #F8         ; Skip if VC != 248
$928    $4431   SNE      V4, #31         ; Skip if V4 != 49
$92A    $49BB   SNE      V9, #BB         ; Skip if V9 != 187
$92C    $3F7C   SE       VF, #7C         ; Skip if VF == 124
$92E    $908B   UNKNOWN  $908B           ; Unknown 9xxx instruction
$930    $6A26   LD       VA, #26         ; Load 38 into VA
$932    $BFCF   JP       V0, $FCF        ; Jump to V0 + FCF
$934    $F618   LD       ST, V6          ; Sound timer = V6
$936    $AB3D   LD       I, $B3D         ; Load B3D into I
$938    $87F2   AND      V7, VF          ; V7 &= VF
$93A    $9057   UNKNOWN  $9057           ; Unknown 9xxx instruction
$93C    $577A   UNKNOWN  $577A           ; Unknown 5xxx instruction
$93E    $4396   SNE      V3, #96         ; Skip if V3 != 150
$940    $FFE0   UNKNOWN  FFE0            ; Unknown Fxxx instruction
$942    $57AD   UNKNOWN  $57AD           ; Unknown 5xxx instruction
$944    $6818   LD       V8, #18         ; Load 24 into V8
$946    $6DD1   LD       VD, #D1         ; Load 209 into VD
$948    $3FBF   SE       VF, #BF         ; Skip if VF == 191
$94A    $E9DB   UNKNOWN  $E9DB           ; Unknown Exxx instruction
$94C    $98E6   UNKNOWN  $98E6           ; Unknown 9xxx instruction
$94E    $8A54   ADD      VA, V5          ; VA += V5, VF = carry
$950    $BBAE   JP       V0, $BAE        ; Jump to V0 + BAE
$952    $4C58   SNE      VC, #58         ; Skip if VC != 88
$954    $E6D7   UNKNOWN  $E6D7           ; Unknown Exxx instruction
$956    $6DB5   LD       VD, #B5         ; Load 181 into VD
$958    $B243   JP       V0, $243        ; Jump to V0 + 243
$95A    $3B86   SE       VB, #86         ; Skip if VB == 134
$95C    $6E43   LD       VE, #43         ; Load 67 into VE
$95E    $F9AD   UNKNOWN  F9AD            ; Unknown Fxxx instruction
$960    $CDFF   RND      VD, #FF         ; VD = random & FF
$962    $9CEE   UNKNOWN  $9CEE           ; Unknown 9xxx instruction
$964    $0552   SYS      $552            ; System call to 552
$966    $1D2D   JP       $D2D            ; Jump to D2D
$968    $74F2   ADD      V4, #F2         ; Add 242 to V4
$96A    $5107   UNKNOWN  $5107           ; Unknown 5xxx instruction
$96C    $D4FF   DRW      V4, VF, #F      ; Draw 15-byte sprite at V4, VF
$96E    $5132   UNKNOWN  $5132           ; Unknown 5xxx instruction
$970    $047E   SYS      $47E            ; System call to 47E
$972    $AB8C   LD       I, $B8C         ; Load B8C into I
$974    $DD43   DRW      VD, V4, #3      ; Draw 3-byte sprite at VD, V4
$976    $013D   SYS      $13D            ; System call to 13D
$978    $18B5   JP       $8B5            ; Jump to 8B5
$97A    $7529   ADD      V5, #29         ; Add 41 to V5
$97C    $40FF   SNE      V0, #FF         ; Skip if V0 != 255
$97E    $157D   JP       $57D            ; Jump to 57D
$980    $F068   UNKNOWN  F068            ; Unknown Fxxx instruction
$982    $44ED   SNE      V4, #ED         ; Skip if V4 != 237
$984    $947C   UNKNOWN  $947C           ; Unknown 9xxx instruction
$986    $9FF2   UNKNOWN  $9FF2           ; Unknown 9xxx instruction
$988    $36BD   SE       V6, #BD         ; Skip if V6 == 189
$98A    $4E6F   SNE      VE, #6F         ; Skip if VE != 111
$98C    $56AE   UNKNOWN  $56AE           ; Unknown 5xxx instruction
$98E    $CD6C   RND      VD, #6C         ; VD = random & 6C
$990    $78EE   ADD      V8, #EE         ; Add 238 to V8
$992    $86CD   UNKNOWN  86CD            ; Unknown 8xxx instruction
$994    $C304   RND      V3, #04         ; V3 = random & 04
$996    $633F   LD       V3, #3F         ; Load 63 into V3
$998    $7F5B   ADD      VF, #5B         ; Add 91 to VF
$99A    $95CF   UNKNOWN  $95CF           ; Unknown 9xxx instruction
$99C    $B545   JP       V0, $545        ; Jump to V0 + 545
$99E    $ADFA   LD       I, $DFA         ; Load DFA into I
$9A0    $42A9   SNE      V2, #A9         ; Skip if V2 != 169
$9A2    $3AD0   SE       VA, #D0         ; Skip if VA == 208
$9A4    $80D6   SHR      V0              ; V0 >>= 1, VF = LSB
$9A6    $60D2   LD       V0, #D2         ; Load 210 into V0
$9A8    $387B   SE       V8, #7B         ; Skip if V8 == 123
$9AA    $16E7   JP       $6E7            ; Jump to 6E7
$9AC    $38BC   SE       V8, #BC         ; Skip if V8 == 188
$9AE    $B1C0   JP       V0, $1C0        ; Jump to V0 + 1C0
$9B0    $764A   ADD      V6, #4A         ; Add 74 to V6
$9B2    $AFAB   LD       I, $FAB         ; Load FAB into I
$9B4    $0F0C   SYS      $F0C            ; System call to F0C
$9B6    $96F4   UNKNOWN  $96F4           ; Unknown 9xxx instruction
$9B8    $4FAC   SNE      VF, #AC         ; Skip if VF != 172
$9BA    $82E0   LD       V2, VE          ; V2 = VE
$9BC    $268B   CALL     $68B            ; Call subroutine at 68B
$9BE    $CFD7   RND      VF, #D7         ; VF = random & D7
$9C0    $81AF   UNKNOWN  81AF            ; Unknown 8xxx instruction
$9C2    $A698   LD       I, $698         ; Load 698 into I
$9C4    $8A59   UNKNOWN  8A59            ; Unknown 8xxx instruction
$9C6    $CF7B   RND      VF, #7B         ; VF = random & 7B
$9C8    $9A69   UNKNOWN  $9A69           ; Unknown 9xxx instruction
$9CA    $2DC5   CALL     $DC5            ; Call subroutine at DC5
$9CC    $6FAE   LD       VF, #AE         ; Load 174 into VF
$9CE    $6F6C   LD       VF, #6C         ; Load 108 into VF
$9D0    $482D   SNE      V8, #2D         ; Skip if V8 != 45
$9D2    $B119   JP       V0, $119        ; Jump to V0 + 119
$9D4    $9BAB   UNKNOWN  $9BAB           ; Unknown 9xxx instruction
$9D6    $09F7   SYS      $9F7            ; System call to 9F7
$9D8    $CA5D   RND      VA, #5D         ; VA = random & 5D
$9DA    $8CC3   XOR      VC, VC          ; VC ^= VC
$9DC    $A936   LD       I, $936         ; Load 936 into I
$9DE    $8001   OR       V0, V0          ; V0 |= V0
$9E0    $36BB   SE       V6, #BB         ; Skip if V6 == 187
$9E2    $FFF3   UNKNOWN  FFF3            ; Unknown Fxxx instruction
$9E4    $E34A   UNKNOWN  $E34A           ; Unknown Exxx instruction
$9E6    $1524   JP       $524            ; Jump to 524
$9E8    $011A   SYS      $11A            ; System call to 11A
$9EA    $C5DB   RND      V5, #DB         ; V5 = random & DB
$9EC    $4805   SNE      V8, #05         ; Skip if V8 != 5
$9EE    $81CF   UNKNOWN  81CF            ; Unknown 8xxx instruction
$9F0    $3F88   SE       VF, #88         ; Skip if VF == 136
$9F2    $5F38   UNKNOWN  $5F38           ; Unknown 5xxx instruction
$9F4    $2008   CALL     $008            ; Call subroutine at 008
$9F6    $F808   UNKNOWN  F808            ; Unknown Fxxx instruction
$9F8    $8F00   LD       VF, V0          ; VF = V0
$9FA    $648E   LD       V4, #8E         ; Load 142 into V4
$9FC    $D25A   DRW      V2, V5, #A      ; Draw 10-byte sprite at V2, V5
$9FE    $41A9   SNE      V1, #A9         ; Skip if V1 != 169
$A00    $2EE3   CALL     $EE3            ; Call subroutine at EE3
$A02    $FB73   UNKNOWN  FB73            ; Unknown Fxxx instruction
$A04    $CC7E   RND      VC, #7E         ; VC = random & 7E
$A06    $3D2A   SE       VD, #2A         ; Skip if VD == 42
$A08    $45E0   SNE      V5, #E0         ; Skip if V5 != 224
$A0A    $0770   SYS      $770            ; System call to 770
$A0C    $5639   UNKNOWN  $5639           ; Unknown 5xxx instruction
$A0E    $E93E   UNKNOWN  $E93E           ; Unknown Exxx instruction
$A10    $55FD   UNKNOWN  $55FD           ; Unknown 5xxx instruction
$A12    $BEA4   JP       V0, $EA4        ; Jump to V0 + EA4
$A14    $C2DB   RND      V2, #DB         ; V2 = random & DB
$A16    $B93B   JP       V0, $93B        ; Jump to V0 + 93B
$A18    $85D4   ADD      V5, VD          ; V5 += VD, VF = carry
$A1A    $50F4   UNKNOWN  $50F4           ; Unknown 5xxx instruction
$A1C    $7138   ADD      V1, #38         ; Add 56 to V1
$A1E    $393B   SE       V9, #3B         ; Skip if V9 == 59
$A20    $68B6   LD       V8, #B6         ; Load 182 into V8
$A22    $7EEC   ADD      VE, #EC         ; Add 236 to VE
$A24    $0B25   SYS      $B25            ; System call to B25
$A26    $0B1B   SYS      $B1B            ; System call to B1B
$A28    $5B39   UNKNOWN  $5B39           ; Unknown 5xxx instruction
$A2A    $11D4   JP       $1D4            ; Jump to 1D4
$A2C    $4E9B   SNE      VE, #9B         ; Skip if VE != 155
$A2E    $A817   LD       I, $817         ; Load 817 into I
$A30    $C2FA   RND      V2, #FA         ; V2 = random & FA
$A32    $C937   RND      V9, #37         ; V9 = random & 37
$A34    $C971   RND      V9, #71         ; V9 = random & 71
$A36    $4C00   SNE      VC, #00         ; Skip if VC != 0
$A38    $4697   SNE      V6, #97         ; Skip if V6 != 151
$A3A    $B0D6   JP       V0, $0D6        ; Jump to V0 + 0D6
$A3C    $F22B   UNKNOWN  F22B            ; Unknown Fxxx instruction
$A3E    $D4BA   DRW      V4, VB, #A      ; Draw 10-byte sprite at V4, VB
$A40    $05E3   SYS      $5E3            ; System call to 5E3
$A42    $2499   CALL     $499            ; Call subroutine at 499
$A44    $81E4   ADD      V1, VE          ; V1 += VE, VF = carry
$A46    $6226   LD       V2, #26         ; Load 38 into V2
$A48    $BC9E   JP       V0, $C9E        ; Jump to V0 + C9E
$A4A    $94C8   UNKNOWN  $94C8           ; Unknown 9xxx instruction
$A4C    $4BC7   SNE      VB, #C7         ; Skip if VB != 199
$A4E    $B65E   JP       V0, $65E        ; Jump to V0 + 65E
$A50    $F884   UNKNOWN  F884            ; Unknown Fxxx instruction
$A52    $E01D   UNKNOWN  $E01D           ; Unknown Exxx instruction
$A54    $DA21   DRW      VA, V2, #1      ; Draw 1-byte sprite at VA, V2
$A56    $A5DB   LD       I, $5DB         ; Load 5DB into I
$A58    $8EA1   OR       VE, VA          ; VE |= VA
$A5A    $F7FB   UNKNOWN  F7FB            ; Unknown Fxxx instruction
$A5C    $688E   LD       V8, #8E         ; Load 142 into V8
$A5E    $5D21   UNKNOWN  $5D21           ; Unknown 5xxx instruction
$A60    $9203   UNKNOWN  $9203           ; Unknown 9xxx instruction
$A62    $66A4   LD       V6, #A4         ; Load 164 into V6
$A64    $2A4D   CALL     $A4D            ; Call subroutine at A4D
$A66    $3277   SE       V2, #77         ; Skip if V2 == 119
$A68    $E2DC   UNKNOWN  $E2DC           ; Unknown Exxx instruction
$A6A    $A1CD   LD       I, $1CD         ; Load 1CD into I
$A6C    $4266   SNE      V2, #66         ; Skip if V2 != 102
$A6E    $ED5B   UNKNOWN  $ED5B           ; Unknown Exxx instruction
$A70    $F0D0   UNKNOWN  F0D0            ; Unknown Fxxx instruction
$A72    $3DD2   SE       VD, #D2         ; Skip if VD == 210
$A74    $077B   SYS      $77B            ; System call to 77B
$A76    $7EC0   ADD      VE, #C0         ; Add 192 to VE
$A78    $2D85   CALL     $D85            ; Call subroutine at D85
$A7A    $47EB   SNE      V7, #EB         ; Skip if V7 != 235
$A7C    $B407   JP       V0, $407        ; Jump to V0 + 407
$A7E    $DE10   DRW      VE, V1, #0      ; Draw 0-byte sprite at VE, V1
$A80    $5992   UNKNOWN  $5992           ; Unknown 5xxx instruction
$A82    $D9A3   DRW      V9, VA, #3      ; Draw 3-byte sprite at V9, VA
$A84    $7139   ADD      V1, #39         ; Add 57 to V1
$A86    $2B1F   CALL     $B1F            ; Call subroutine at B1F
$A88    $8D73   XOR      VD, V7          ; VD ^= V7
$A8A    $6CF7   LD       VC, #F7         ; Load 247 into VC
$A8C    $F5C0   UNKNOWN  F5C0            ; Unknown Fxxx instruction
$A8E    $6A7F   LD       VA, #7F         ; Load 127 into VA
$A90    $437C   SNE      V3, #7C         ; Skip if V3 != 124
$A92    $C62F   RND      V6, #2F         ; V6 = random & 2F
$A94    $2BDD   CALL     $BDD            ; Call subroutine at BDD
$A96    $D2F5   DRW      V2, VF, #5      ; Draw 5-byte sprite at V2, VF
$A98    $31FE   SE       V1, #FE         ; Skip if V1 == 254
$A9A    $4BBA   SNE      VB, #BA         ; Skip if VB != 186
$A9C    $3E1F   SE       VE, #1F         ; Skip if VE == 31
$A9E    $D01E   DRW      V0, V1, #E      ; Draw 14-byte sprite at V0, V1
$AA0    $40D9   SNE      V0, #D9         ; Skip if V0 != 217
$AA2    $3636   SE       V6, #36         ; Skip if V6 == 54
$AA4    $B559   JP       V0, $559        ; Jump to V0 + 559
$AA6    $C24C   RND      V2, #4C         ; V2 = random & 4C
$AA8    $9E0E   UNKNOWN  $9E0E           ; Unknown 9xxx instruction
$AAA    $8AA6   SHR      VA              ; VA >>= 1, VF = LSB
$AAC    $E045   UNKNOWN  $E045           ; Unknown Exxx instruction
$AAE    $5C38   UNKNOWN  $5C38           ; Unknown 5xxx instruction
$AB0    $BE29   JP       V0, $E29        ; Jump to V0 + E29
$AB2    $A946   LD       I, $946         ; Load 946 into I
$AB4    $DC13   DRW      VC, V1, #3      ; Draw 3-byte sprite at VC, V1
$AB6    $A0D0   LD       I, $0D0         ; Load 0D0 into I
$AB8    $7008   ADD      V0, #08         ; Add 8 to V0
$ABA    $2378   CALL     $378            ; Call subroutine at 378
$ABC    $92AD   UNKNOWN  $92AD           ; Unknown 9xxx instruction
$ABE    $2F8C   CALL     $F8C            ; Call subroutine at F8C
$AC0    $2214   CALL     $214            ; Call subroutine at 214
$AC2    $D67A   DRW      V6, V7, #A      ; Draw 10-byte sprite at V6, V7
$AC4    $A412   LD       I, $412         ; Load 412 into I
$AC6    $678C   LD       V7, #8C         ; Load 140 into V7
$AC8    $7A94   ADD      VA, #94         ; Add 148 to VA
$ACA    $C1C5   RND      V1, #C5         ; V1 = random & C5
$ACC    $800B   UNKNOWN  800B            ; Unknown 8xxx instruction
$ACE    $17D7   JP       $7D7            ; Jump to 7D7
$AD0    $2FC1   CALL     $FC1            ; Call subroutine at FC1
$AD2    $E727   UNKNOWN  $E727           ; Unknown Exxx instruction
$AD4    $454D   SNE      V5, #4D         ; Skip if V5 != 77
$AD6    $D001   DRW      V0, V0, #1      ; Draw 1-byte sprite at V0, V0
$AD8    $8A4A   UNKNOWN  8A4A            ; Unknown 8xxx instruction
$ADA    $E70C   UNKNOWN  $E70C           ; Unknown Exxx instruction
$ADC    $D22C   DRW      V2, V2, #C      ; Draw 12-byte sprite at V2, V2
$ADE    $AAAB   LD       I, $AAB         ; Load AAB into I
$AE0    $E573   UNKNOWN  $E573           ; Unknown Exxx instruction
$AE2    $6868   LD       V8, #68         ; Load 104 into V8
$AE4    $6237   LD       V2, #37         ; Load 55 into V2
$AE6    $1EDC   JP       $EDC            ; Jump to EDC
$AE8    $3FD5   SE       VF, #D5         ; Skip if VF == 213
$AEA    $8D4D   UNKNOWN  8D4D            ; Unknown 8xxx instruction
$AEC    $5B82   UNKNOWN  $5B82           ; Unknown 5xxx instruction
$AEE    $05E6   SYS      $5E6            ; System call to 5E6
$AF0    $D5C8   DRW      V5, VC, #8      ; Draw 8-byte sprite at V5, VC
$AF2    $AA7A   LD       I, $A7A         ; Load A7A into I
$AF4    $0DBB   SYS      $DBB            ; System call to DBB
$AF6    $C165   RND      V1, #65         ; V1 = random & 65
$AF8    $207A   CALL     $07A            ; Call subroutine at 07A
$AFA    $A531   LD       I, $531         ; Load 531 into I
$AFC    $A0A5   LD       I, $0A5         ; Load 0A5 into I
$AFE    $9ECD   UNKNOWN  $9ECD           ; Unknown 9xxx instruction
$B00    $42C3   SNE      V2, #C3         ; Skip if V2 != 195
$B02    $A052   LD       I, $052         ; Load 052 into I
$B04    $793E   ADD      V9, #3E         ; Add 62 to V9
$B06    $D143   DRW      V1, V4, #3      ; Draw 3-byte sprite at V1, V4
$B08    $8E58   UNKNOWN  8E58            ; Unknown 8xxx instruction
$B0A    $FAEB   UNKNOWN  FAEB            ; Unknown Fxxx instruction
$B0C    $5951   UNKNOWN  $5951           ; Unknown 5xxx instruction
$B0E    $A212   LD       I, $212         ; Load 212 into I
$B10    $BA58   JP       V0, $A58        ; Jump to V0 + A58
$B12    $C86C   RND      V8, #6C         ; V8 = random & 6C
$B14    $474A   SNE      V7, #4A         ; Skip if V7 != 74
$B16    $3ACA   SE       VA, #CA         ; Skip if VA == 202
$B18    $C506   RND      V5, #06         ; V5 = random & 06
$B1A    $9C21   UNKNOWN  $9C21           ; Unknown 9xxx instruction
$B1C    $4973   SNE      V9, #73         ; Skip if V9 != 115
$B1E    $5E80   SE       VE, V8          ; Skip if VE == V8
$B20    $76AC   ADD      V6, #AC         ; Add 172 to V6
$B22    $932F   UNKNOWN  $932F           ; Unknown 9xxx instruction
$B24    $A635   LD       I, $635         ; Load 635 into I
$B26    $4FF1   SNE      VF, #F1         ; Skip if VF != 241
$B28    $00AA   SYS      $0AA            ; System call to 0AA
$B2A    $2064   CALL     $064            ; Call subroutine at 064
$B2C    $5446   UNKNOWN  $5446           ; Unknown 5xxx instruction
$B2E    $C9CC   RND      V9, #CC         ; V9 = random & CC
$B30    $3241   SE       V2, #41         ; Skip if V2 == 65
$B32    $06C1   SYS      $6C1            ; System call to 6C1
$B34    $BCBB   JP       V0, $CBB        ; Jump to V0 + CBB
$B36    $718E   ADD      V1, #8E         ; Add 142 to V1
$B38    $80BD   UNKNOWN  80BD            ; Unknown 8xxx instruction
$B3A    $3AB4   SE       VA, #B4         ; Skip if VA == 180
$B3C    $DEAB   DRW      VE, VA, #B      ; Draw 11-byte sprite at VE, VA
$B3E    $EB78   UNKNOWN  $EB78           ; Unknown Exxx instruction
$B40    $9042   UNKNOWN  $9042           ; Unknown 9xxx instruction
$B42    $2536   CALL     $536            ; Call subroutine at 536
$B44    $BDE2   JP       V0, $DE2        ; Jump to V0 + DE2
$B46    $5288   UNKNOWN  $5288           ; Unknown 5xxx instruction
$B48    $ACDD   LD       I, $CDD         ; Load CDD into I
$B4A    $98F5   UNKNOWN  $98F5           ; Unknown 9xxx instruction
$B4C    $5C91   UNKNOWN  $5C91           ; Unknown 5xxx instruction
$B4E    $29DD   CALL     $9DD            ; Call subroutine at 9DD
$B50    $9B53   UNKNOWN  $9B53           ; Unknown 9xxx instruction
$B52    $63E6   LD       V3, #E6         ; Load 230 into V3
$B54    $C478   RND      V4, #78         ; V4 = random & 78
$B56    $45C2   SNE      V5, #C2         ; Skip if V5 != 194
$B58    $0838   SYS      $838            ; System call to 838
$B5A    $0B35   SYS      $B35            ; System call to B35
$B5C    $8A3E   SHL      VA              ; VA <<= 1, VF = MSB
$B5E    $3FD8   SE       VF, #D8         ; Skip if VF == 216
$B60    $79D9   ADD      V9, #D9         ; Add 217 to V9
$B62    $B057   JP       V0, $057        ; Jump to V0 + 057
$B64    $7F2D   ADD      VF, #2D         ; Add 45 to VF
$B66    $3D81   SE       VD, #81         ; Skip if VD == 129
$B68    $F61C   UNKNOWN  F61C            ; Unknown Fxxx instruction
$B6A    $3D1A   SE       VD, #1A         ; Skip if VD == 26
$B6C    $D36F   DRW      V3, V6, #F      ; Draw 15-byte sprite at V3, V6
$B6E    $CAE0   RND      VA, #E0         ; VA = random & E0
$B70    $1B74   JP       $B74            ; Jump to B74
$B72    $277F   CALL     $77F            ; Call subroutine at 77F
$B74    $16D2   JP       $6D2            ; Jump to 6D2
$B76    $2413   CALL     $413            ; Call subroutine at 413
$B78    $43CF   SNE      V3, #CF         ; Skip if V3 != 207
$B7A    $CA13   RND      VA, #13         ; VA = random & 13
$B7C    $E351   UNKNOWN  $E351           ; Unknown Exxx instruction
$B7E    $69CB   LD       V9, #CB         ; Load 203 into V9
$B80    $E2A4   UNKNOWN  $E2A4           ; Unknown Exxx instruction
$B82    $86C3   XOR      V6, VC          ; V6 ^= VC
$B84    $2425   CALL     $425            ; Call subroutine at 425
$B86    $7029   ADD      V0, #29         ; Add 41 to V0
$B88    $8AA9   UNKNOWN  8AA9            ; Unknown 8xxx instruction
$B8A    $2CB8   CALL     $CB8            ; Call subroutine at CB8
$B8C    $B2F9   JP       V0, $2F9        ; Jump to V0 + 2F9
$B8E    $C5F2   RND      V5, #F2         ; V5 = random & F2
$B90    $5A7B   UNKNOWN  $5A7B           ; Unknown 5xxx instruction
$B92    $2076   CALL     $076            ; Call subroutine at 076
$B94    $75F8   ADD      V5, #F8         ; Add 248 to V5
$B96    $569F   UNKNOWN  $569F           ; Unknown 5xxx instruction
$B98    $D126   DRW      V1, V2, #6      ; Draw 6-byte sprite at V1, V2
$B9A    $CE8D   RND      VE, #8D         ; VE = random & 8D
$B9C    $9941   UNKNOWN  $9941           ; Unknown 9xxx instruction
$B9E    $6077   LD       V0, #77         ; Load 119 into V0
$BA0    $E39F   UNKNOWN  $E39F           ; Unknown Exxx instruction
$BA2    $E774   UNKNOWN  $E774           ; Unknown Exxx instruction
$BA4    $6CE9   LD       VC, #E9         ; Load 233 into VC
$BA6    $ED2C   UNKNOWN  $ED2C           ; Unknown Exxx instruction
$BA8    $D9FC   DRW      V9, VF, #C      ; Draw 12-byte sprite at V9, VF
$BAA    $6184   LD       V1, #84         ; Load 132 into V1
$BAC    $693B   LD       V9, #3B         ; Load 59 into V9
$BAE    $A09F   LD       I, $09F         ; Load 09F into I
$BB0    $B4E2   JP       V0, $4E2        ; Jump to V0 + 4E2
$BB2    $A0B5   LD       I, $0B5         ; Load 0B5 into I
$BB4    $7524   ADD      V5, #24         ; Add 36 to V5
$BB6    $0B79   SYS      $B79            ; System call to B79
$BB8    $6B62   LD       VB, #62         ; Load 98 into VB
$BBA    $1019   JP       $019            ; Jump to 019
$BBC    $92CA   UNKNOWN  $92CA           ; Unknown 9xxx instruction
$BBE    $69B8   LD       V9, #B8         ; Load 184 into V9
$BC0    $E84E   UNKNOWN  $E84E           ; Unknown Exxx instruction
$BC2    $A916   LD       I, $916         ; Load 916 into I
$BC4    $0218   SYS      $218            ; System call to 218
$BC6    $45ED   SNE      V5, #ED         ; Skip if V5 != 237
$BC8    $9728   UNKNOWN  $9728           ; Unknown 9xxx instruction
$BCA    $17DC   JP       $7DC            ; Jump to 7DC
$BCC    $E76E   UNKNOWN  $E76E           ; Unknown Exxx instruction
$BCE    $21AA   CALL     $1AA            ; Call subroutine at 1AA
$BD0    $F445   UNKNOWN  F445            ; Unknown Fxxx instruction
$BD2    $AB1B   LD       I, $B1B         ; Load B1B into I
$BD4    $6219   LD       V2, #19         ; Load 25 into V2
$BD6    $F681   UNKNOWN  F681            ; Unknown Fxxx instruction
$BD8    $8DFC   UNKNOWN  8DFC            ; Unknown 8xxx instruction
$BDA    $6064   LD       V0, #64         ; Load 100 into V0
$BDC    $FC9E   UNKNOWN  FC9E            ; Unknown Fxxx instruction
$BDE    $F8B6   UNKNOWN  F8B6            ; Unknown Fxxx instruction
$BE0    $7694   ADD      V6, #94         ; Add 148 to V6
$BE2    $140A   JP       $40A            ; Jump to 40A
$BE4    $25D0   CALL     $5D0            ; Call subroutine at 5D0
$BE6    $4133   SNE      V1, #33         ; Skip if V1 != 51
$BE8    $43EB   SNE      V3, #EB         ; Skip if V3 != 235
$BEA    $320F   SE       V2, #0F         ; Skip if V2 == 15
$BEC    $0744   SYS      $744            ; System call to 744
$BEE    $F067   UNKNOWN  F067            ; Unknown Fxxx instruction
$BF0    $7AEF   ADD      VA, #EF         ; Add 239 to VA
$BF2    $C6F3   RND      V6, #F3         ; V6 = random & F3
$BF4    $E3D5   UNKNOWN  $E3D5           ; Unknown Exxx instruction
$BF6    $82C2   AND      V2, VC          ; V2 &= VC
$BF8    $8DC8   UNKNOWN  8DC8            ; Unknown 8xxx instruction
$BFA    $2D9F   CALL     $D9F            ; Call subroutine at D9F
$BFC    $6BBF   LD       VB, #BF         ; Load 191 into VB
$BFE    $359A   SE       V5, #9A         ; Skip if V5 == 154
$C00    $774C   ADD      V7, #4C         ; Add 76 to V7
$C02    $B79D   JP       V0, $79D        ; Jump to V0 + 79D
$C04    $ED67   UNKNOWN  $ED67           ; Unknown Exxx instruction
$C06    $B6F8   JP       V0, $6F8        ; Jump to V0 + 6F8
$C08    $3C18   SE       VC, #18         ; Skip if VC == 24
$C0A    $477B   SNE      V7, #7B         ; Skip if V7 != 123
$C0C    $18D8   JP       $8D8            ; Jump to 8D8
$C0E    $BBDD   JP       V0, $BDD        ; Jump to V0 + BDD
$C10    $53E9   UNKNOWN  $53E9           ; Unknown 5xxx instruction
$C12    $700C   ADD      V0, #0C         ; Add 12 to V0
$C14    $20F7   CALL     $0F7            ; Call subroutine at 0F7
$C16    $1F07   JP       $F07            ; Jump to F07
$C18    $E80F   UNKNOWN  $E80F           ; Unknown Exxx instruction
$C1A    $1131   JP       $131            ; Jump to 131
$C1C    $5B38   UNKNOWN  $5B38           ; Unknown 5xxx instruction
$C1E    $B325   JP       V0, $325        ; Jump to V0 + 325
$C20    $FDBD   UNKNOWN  FDBD            ; Unknown Fxxx instruction
$C22    $41A1   SNE      V1, #A1         ; Skip if V1 != 161
$C24    $A3F4   LD       I, $3F4         ; Load 3F4 into I
$C26    $CFEE   RND      VF, #EE         ; VF = random & EE
$C28    $F4A3   UNKNOWN  F4A3            ; Unknown Fxxx instruction
$C2A    $5467   UNKNOWN  $5467           ; Unknown 5xxx instruction
$C2C    $296A   CALL     $96A            ; Call subroutine at 96A
$C2E    $9C96   UNKNOWN  $9C96           ; Unknown 9xxx instruction
$C30    $6564   LD       V5, #64         ; Load 100 into V5
$C32    $C460   RND      V4, #60         ; V4 = random & 60
$C34    $5317   UNKNOWN  $5317           ; Unknown 5xxx instruction
$C36    $87DA   UNKNOWN  87DA            ; Unknown 8xxx instruction
$C38    $83D5   SUB      V3, VD          ; V3 -= VD, VF = !borrow
$C3A    $1B68   JP       $B68            ; Jump to B68
$C3C    $5128   UNKNOWN  $5128           ; Unknown 5xxx instruction
$C3E    $2AF5   CALL     $AF5            ; Call subroutine at AF5
$C40    $0A45   SYS      $A45            ; System call to A45
$C42    $EB66   UNKNOWN  $EB66           ; Unknown Exxx instruction
$C44    $894C   UNKNOWN  894C            ; Unknown 8xxx instruction
$C46    $D426   DRW      V4, V2, #6      ; Draw 6-byte sprite at V4, V2
$C48    $D29E   DRW      V2, V9, #E      ; Draw 14-byte sprite at V2, V9
$C4A    $6E28   LD       VE, #28         ; Load 40 into VE
$C4C    $C8F0   RND      V8, #F0         ; V8 = random & F0
$C4E    $A02B   LD       I, $02B         ; Load 02B into I
$C50    $F565   LD       V5, [I]         ; Load V0-V5 from I
$C52    $397D   SE       V9, #7D         ; Skip if V9 == 125
$C54    $D161   DRW      V1, V6, #1      ; Draw 1-byte sprite at V1, V6
$C56    $43BB   SNE      V3, #BB         ; Skip if V3 != 187
$C58    $D56B   DRW      V5, V6, #B      ; Draw 11-byte sprite at V5, V6
$C5A    $1DF7   JP       $DF7            ; Jump to DF7
$C5C    $CDC4   RND      VD, #C4         ; VD = random & C4
$C5E    $DF28   DRW      VF, V2, #8      ; Draw 8-byte sprite at VF, V2
$C60    $81CC   UNKNOWN  81CC            ; Unknown 8xxx instruction
$C62    $1571   JP       $571            ; Jump to 571
$C64    $9F12   UNKNOWN  $9F12           ; Unknown 9xxx instruction
$C66    $B20B   JP       V0, $20B        ; Jump to V0 + 20B
$C68    $EA84   UNKNOWN  $EA84           ; Unknown Exxx instruction
$C6A    $2C65   CALL     $C65            ; Call subroutine at C65
$C6C    $8C76   SHR      VC              ; VC >>= 1, VF = LSB
$C6E    $DD62   DRW      VD, V6, #2      ; Draw 2-byte sprite at VD, V6
$C70    $D837   DRW      V8, V3, #7      ; Draw 7-byte sprite at V8, V3
$C72    $FE05   UNKNOWN  FE05            ; Unknown Fxxx instruction
$C74    $BE7F   JP       V0, $E7F        ; Jump to V0 + E7F
$C76    $5226   UNKNOWN  $5226           ; Unknown 5xxx instruction
$C78    $FF2A   UNKNOWN  FF2A            ; Unknown Fxxx instruction
$C7A    $6814   LD       V8, #14         ; Load 20 into V8
$C7C    $68D6   LD       V8, #D6         ; Load 214 into V8
$C7E    $D28B   DRW      V2, V8, #B      ; Draw 11-byte sprite at V2, V8
$C80    $FA55   LD       [I], VA         ; Store V0-VA at I
$C82    $B248   JP       V0, $248        ; Jump to V0 + 248
$C84    $F669   UNKNOWN  F669            ; Unknown Fxxx instruction
$C86    $C504   RND      V5, #04         ; V5 = random & 04
$C88    $E0FD   UNKNOWN  $E0FD           ; Unknown Exxx instruction
$C8A    $2A4D   CALL     $A4D            ; Call subroutine at A4D
$C8C    $3853   SE       V8, #53         ; Skip if V8 == 83
$C8E    $25A4   CALL     $5A4            ; Call subroutine at 5A4
$C90    $165A   JP       $65A            ; Jump to 65A
$C92    $B02F   JP       V0, $02F        ; Jump to V0 + 02F
$C94    $9241   UNKNOWN  $9241           ; Unknown 9xxx instruction
$C96    $AF60   LD       I, $F60         ; Load F60 into I
$C98    $AA0A   LD       I, $A0A         ; Load A0A into I
$C9A    $A18E   LD       I, $18E         ; Load 18E into I
$C9C    $3A16   SE       VA, #16         ; Skip if VA == 22
$C9E    $056D   SYS      $56D            ; System call to 56D
$CA0    $6E6E   LD       VE, #6E         ; Load 110 into VE
$CA2    $B9F7   JP       V0, $9F7        ; Jump to V0 + 9F7
$CA4    $1456   JP       $456            ; Jump to 456
$CA6    $FD0B   UNKNOWN  FD0B            ; Unknown Fxxx instruction
$CA8    $BDE1   JP       V0, $DE1        ; Jump to V0 + DE1
$CAA    $906E   UNKNOWN  $906E           ; Unknown 9xxx instruction
$CAC    $5E02   UNKNOWN  $5E02           ; Unknown 5xxx instruction
$CAE    $FD39   UNKNOWN  FD39            ; Unknown Fxxx instruction
$CB0    $6AE4   LD       VA, #E4         ; Load 228 into VA
$CB2    $BD39   JP       V0, $D39        ; Jump to V0 + D39
$CB4    $EC73   UNKNOWN  $EC73           ; Unknown Exxx instruction
$CB6    $0B2B   SYS      $B2B            ; System call to B2B
$CB8    $670B   LD       V7, #0B         ; Load 11 into V7
$CBA    $E351   UNKNOWN  $E351           ; Unknown Exxx instruction
$CBC    $5339   UNKNOWN  $5339           ; Unknown 5xxx instruction
$CBE    $4593   SNE      V5, #93         ; Skip if V5 != 147
$CC0    $15FE   JP       $5FE            ; Jump to 5FE
$CC2    $58C5   UNKNOWN  $58C5           ; Unknown 5xxx instruction
$CC4    $5580   SE       V5, V8          ; Skip if V5 == V8
$CC6    $0279   SYS      $279            ; System call to 279
$CC8    $C077   RND      V0, #77         ; V0 = random & 77
$CCA    $9D60   SNE      VD, V6          ; Skip if VD != V6
$CCC    $4202   SNE      V2, #02         ; Skip if V2 != 2
$CCE    $2BE3   CALL     $BE3            ; Call subroutine at BE3
$CD0    $26AC   CALL     $6AC            ; Call subroutine at 6AC
$CD2    $1467   JP       $467            ; Jump to 467
$CD4    $74A3   ADD      V4, #A3         ; Add 163 to V4
$CD6    $4412   SNE      V4, #12         ; Skip if V4 != 18
$CD8    $3A3C   SE       VA, #3C         ; Skip if VA == 60
$CDA    $8BCE   SHL      VB              ; VB <<= 1, VF = MSB
$CDC    $8D49   UNKNOWN  8D49            ; Unknown 8xxx instruction
$CDE    $82D0   LD       V2, VD          ; V2 = VD
$CE0    $58F5   UNKNOWN  $58F5           ; Unknown 5xxx instruction
$CE2    $225D   CALL     $25D            ; Call subroutine at 25D
$CE4    $A63A   LD       I, $63A         ; Load 63A into I
$CE6    $DC3B   DRW      VC, V3, #B      ; Draw 11-byte sprite at VC, V3
$CE8    $2FB9   CALL     $FB9            ; Call subroutine at FB9
$CEA    $6ABA   LD       VA, #BA         ; Load 186 into VA
$CEC    $6A7C   LD       VA, #7C         ; Load 124 into VA
$CEE    $2AD2   CALL     $AD2            ; Call subroutine at AD2
$CF0    $5129   UNKNOWN  $5129           ; Unknown 5xxx instruction
$CF2    $EF02   UNKNOWN  $EF02           ; Unknown Exxx instruction
$CF4    $9726   UNKNOWN  $9726           ; Unknown 9xxx instruction
$CF6    $01FD   SYS      $1FD            ; System call to 1FD
$CF8    $8F95   SUB      VF, V9          ; VF -= V9, VF = !borrow
$CFA    $A414   LD       I, $414         ; Load 414 into I
$CFC    $D614   DRW      V6, V1, #4      ; Draw 4-byte sprite at V6, V1
$CFE    $D651   DRW      V6, V5, #1      ; Draw 1-byte sprite at V6, V5
$D00    $0545   SYS      $545            ; System call to 545
$D02    $91D3   UNKNOWN  $91D3           ; Unknown 9xxx instruction
$D04    $00D7   SYS      $0D7            ; System call to 0D7
$D06    $01C9   SYS      $1C9            ; System call to 1C9
$D08    $FC63   UNKNOWN  FC63            ; Unknown Fxxx instruction
$D0A    $5F24   UNKNOWN  $5F24           ; Unknown 5xxx instruction
$D0C    $E844   UNKNOWN  $E844           ; Unknown Exxx instruction
$D0E    $144B   JP       $44B            ; Jump to 44B
$D10    $B1BB   JP       V0, $1BB        ; Jump to V0 + 1BB
$D12    $97BC   UNKNOWN  $97BC           ; Unknown 9xxx instruction
$D14    $C9A5   RND      V9, #A5         ; V9 = random & A5
$D16    $B3C4   JP       V0, $3C4        ; Jump to V0 + 3C4
$D18    $5EEC   UNKNOWN  $5EEC           ; Unknown 5xxx instruction
$D1A    $620A   LD       V2, #0A         ; Load 10 into V2
$D1C    $32BF   SE       V2, #BF         ; Skip if V2 == 191
$D1E    $77A1   ADD      V7, #A1         ; Add 161 to V7
$D20    $64CD   LD       V4, #CD         ; Load 205 into V4
$D22    $5304   UNKNOWN  $5304           ; Unknown 5xxx instruction
$D24    $8A86   SHR      VA              ; VA >>= 1, VF = LSB
$D26    $1065   JP       $065            ; Jump to 065
$D28    $BE01   JP       V0, $E01        ; Jump to V0 + E01
$D2A    $D229   DRW      V2, V2, #9      ; Draw 9-byte sprite at V2, V2
$D2C    $C536   RND      V5, #36         ; V5 = random & 36
$D2E    $A433   LD       I, $433         ; Load 433 into I
$D30    $3D66   SE       VD, #66         ; Skip if VD == 102
$D32    $524C   UNKNOWN  $524C           ; Unknown 5xxx instruction
$D34    $0F34   SYS      $F34            ; System call to F34
$D36    $45FA   SNE      V5, #FA         ; Skip if V5 != 250
$D38    $A181   LD       I, $181         ; Load 181 into I
$D3A    $9E86   UNKNOWN  $9E86           ; Unknown 9xxx instruction
$D3C    $0C81   SYS      $C81            ; System call to C81
$D3E    $6FD2   LD       VF, #D2         ; Load 210 into VF
$D40    $CFFA   RND      VF, #FA         ; VF = random & FA
$D42    $782C   ADD      V8, #2C         ; Add 44 to V8
$D44    $7940   ADD      V9, #40         ; Add 64 to V9
$D46    $360E   SE       V6, #0E         ; Skip if V6 == 14
$D48    $1662   JP       $662            ; Jump to 662
$D4A    $C15D   RND      V1, #5D         ; V1 = random & 5D
$D4C    $3613   SE       V6, #13         ; Skip if V6 == 19
$D4E    $C9BC   RND      V9, #BC         ; V9 = random & BC
$D50    $AF14   LD       I, $F14         ; Load F14 into I
$D52    $82A1   OR       V2, VA          ; V2 |= VA
$D54    $9028   UNKNOWN  $9028           ; Unknown 9xxx instruction
$D56    $CDD9   RND      VD, #D9         ; VD = random & D9
$D58    $563A   UNKNOWN  $563A           ; Unknown 5xxx instruction
$D5A    $5DAA   UNKNOWN  $5DAA           ; Unknown 5xxx instruction
$D5C    $2EA3   CALL     $EA3            ; Call subroutine at EA3
$D5E    $63FD   LD       V3, #FD         ; Load 253 into V3
$D60    $68A4   LD       V8, #A4         ; Load 164 into V8
$D62    $E072   UNKNOWN  $E072           ; Unknown Exxx instruction
$D64    $9E1F   UNKNOWN  $9E1F           ; Unknown 9xxx instruction
$D66    $9B3B   UNKNOWN  $9B3B           ; Unknown 9xxx instruction
$D68    $1DD4   JP       $DD4            ; Jump to DD4
$D6A    $7DBC   ADD      VD, #BC         ; Add 188 to VD
$D6C    $C4D7   RND      V4, #D7         ; V4 = random & D7
$D6E    $F435   UNKNOWN  F435            ; Unknown Fxxx instruction
$D70    $0C64   SYS      $C64            ; System call to C64
$D72    $E569   UNKNOWN  $E569           ; Unknown Exxx instruction
$D74    $1FEF   JP       $FEF            ; Jump to FEF
$D76    $038B   SYS      $38B            ; System call to 38B
$D78    $66CD   LD       V6, #CD         ; Load 205 into V6
$D7A    $04FA   SYS      $4FA            ; System call to 4FA
$D7C    $D424   DRW      V4, V2, #4      ; Draw 4-byte sprite at V4, V2
$D7E    $03CA   SYS      $3CA            ; System call to 3CA
$D80    $5F6D   UNKNOWN  $5F6D           ; Unknown 5xxx instruction
$D82    $B2C3   JP       V0, $2C3        ; Jump to V0 + 2C3
$D84    $4186   SNE      V1, #86         ; Skip if V1 != 134
$D86    $DA37   DRW      VA, V3, #7      ; Draw 7-byte sprite at VA, V3
$D88    $3C69   SE       VC, #69         ; Skip if VC == 105
$D8A    $65F5   LD       V5, #F5         ; Load 245 into V5
$D8C    $08FD   SYS      $8FD            ; System call to 8FD
$D8E    $7EED   ADD      VE, #ED         ; Add 237 to VE
$D90    $6F65   LD       VF, #65         ; Load 101 into VF
$D92    $3B99   SE       VB, #99         ; Skip if VB == 153
$D94    $7EAD   ADD      VE, #AD         ; Add 173 to VE
$D96    $09A5   SYS      $9A5            ; System call to 9A5
$D98    $D3D3   DRW      V3, VD, #3      ; Draw 3-byte sprite at V3, VD
$D9A    $85B8   UNKNOWN  85B8            ; Unknown 8xxx instruction
$D9C    $75C6   ADD      V5, #C6         ; Add 198 to V5
$D9E    $1197   JP       $197            ; Jump to 197
$DA0    $9F2A   UNKNOWN  $9F2A           ; Unknown 9xxx instruction
$DA2    $4BD2   SNE      VB, #D2         ; Skip if VB != 210
$DA4    $C97A   RND      V9, #7A         ; V9 = random & 7A
$DA6    $D61B   DRW      V6, V1, #B      ; Draw 11-byte sprite at V6, V1
$DA8    $7996   ADD      V9, #96         ; Add 150 to V9
$DAA    $DE29   DRW      VE, V2, #9      ; Draw 9-byte sprite at VE, V2
$DAC    $4E16   SNE      VE, #16         ; Skip if VE != 22
$DAE    $9C65   UNKNOWN  $9C65           ; Unknown 9xxx instruction
$DB0    $6F97   LD       VF, #97         ; Load 151 into VF
$DB2    $2A5D   CALL     $A5D            ; Call subroutine at A5D
$DB4    $710C   ADD      V1, #0C         ; Add 12 to V1
$DB6    $4599   SNE      V5, #99         ; Skip if V5 != 153
$DB8    $AABD   LD       I, $ABD         ; Load ABD into I
$DBA    $0C80   SYS      $C80            ; System call to C80
$DBC    $2BE9   CALL     $BE9            ; Call subroutine at BE9
$DBE    $0867   SYS      $867            ; System call to 867
$DC0    $D184   DRW      V1, V8, #4      ; Draw 4-byte sprite at V1, V8
$DC2    $CFFD   RND      VF, #FD         ; VF = random & FD
$DC4    $E73E   UNKNOWN  $E73E           ; Unknown Exxx instruction
$DC6    $ED92   UNKNOWN  $ED92           ; Unknown Exxx instruction
$DC8    $9D62   UNKNOWN  $9D62           ; Unknown 9xxx instruction
$DCA    $D157   DRW      V1, V5, #7      ; Draw 7-byte sprite at V1, V5
$DCC    $A681   LD       I, $681         ; Load 681 into I
$DCE    $267B   CALL     $67B            ; Call subroutine at 67B
$DD0    $F2F2   UNKNOWN  F2F2            ; Unknown Fxxx instruction
$DD2    $AFBA   LD       I, $FBA         ; Load FBA into I
$DD4    $24C9   CALL     $4C9            ; Call subroutine at 4C9
$DD6    $1032   JP       $032            ; Jump to 032
$DD8    $39C5   SE       V9, #C5         ; Skip if V9 == 197
$DDA    $8BA7   SUBN     VB, VA          ; VB = VA - VB, VF = !borrow
$DDC    $CAFD   RND      VA, #FD         ; VA = random & FD
$DDE    $3020   SE       V0, #20         ; Skip if V0 == 32
$DE0    $BCDE   JP       V0, $CDE        ; Jump to V0 + CDE
$DE2    $FBE4   UNKNOWN  FBE4            ; Unknown Fxxx instruction
$DE4    $D4E7   DRW      V4, VE, #7      ; Draw 7-byte sprite at V4, VE
$DE6    $86E1   OR       V6, VE          ; V6 |= VE
$DE8    $13FD   JP       $3FD            ; Jump to 3FD
$DEA    $5660   SE       V6, V6          ; Skip if V6 == V6
$DEC    $553A   UNKNOWN  $553A           ; Unknown 5xxx instruction
$DEE    $E554   UNKNOWN  $E554           ; Unknown Exxx instruction
$DF0    $4322   SNE      V3, #22         ; Skip if V3 != 34
$DF2    $E47F   UNKNOWN  $E47F           ; Unknown Exxx instruction
$DF4    $0DA5   SYS      $DA5            ; System call to DA5
$DF6    $FD84   UNKNOWN  FD84            ; Unknown Fxxx instruction
$DF8    $4C26   SNE      VC, #26         ; Skip if VC != 38
$DFA    $0467   SYS      $467            ; System call to 467
$DFC    $5A9C   UNKNOWN  $5A9C           ; Unknown 5xxx instruction
$DFE    $C95D   RND      V9, #5D         ; V9 = random & 5D
$E00    $DD0B   DRW      VD, V0, #B      ; Draw 11-byte sprite at VD, V0
$E02    $DBB1   DRW      VB, VB, #1      ; Draw 1-byte sprite at VB, VB
$E04    $6872   LD       V8, #72         ; Load 114 into V8
$E06    $5FD9   UNKNOWN  $5FD9           ; Unknown 5xxx instruction
$E08    $3F94   SE       VF, #94         ; Skip if VF == 148
$E0A    $D4F0   DRW      V4, VF, #0      ; Draw 0-byte sprite at V4, VF
$E0C    $5BF3   UNKNOWN  $5BF3           ; Unknown 5xxx instruction
$E0E    $3F68   SE       VF, #68         ; Skip if VF == 104
$E10    $486B   SNE      V8, #6B         ; Skip if V8 != 107
$E12    $5D23   UNKNOWN  $5D23           ; Unknown 5xxx instruction
$E14    $0792   SYS      $792            ; System call to 792
$E16    $ACD1   LD       I, $CD1         ; Load CD1 into I
$E18    $3636   SE       V6, #36         ; Skip if V6 == 54
$E1A    $9867   UNKNOWN  $9867           ; Unknown 9xxx instruction
$E1C    $A153   LD       I, $153         ; Load 153 into I
$E1E    $82C5   SUB      V2, VC          ; V2 -= VC, VF = !borrow
$E20    $C351   RND      V3, #51         ; V3 = random & 51
$E22    $7312   ADD      V3, #12         ; Add 18 to V3
$E24    $9E8E   UNKNOWN  $9E8E           ; Unknown 9xxx instruction
$E26    $CB39   RND      VB, #39         ; VB = random & 39
$E28    $D2C2   DRW      V2, VC, #2      ; Draw 2-byte sprite at V2, VC
$E2A    $0951   SYS      $951            ; System call to 951
$E2C    $6378   LD       V3, #78         ; Load 120 into V3
$E2E    $C933   RND      V9, #33         ; V9 = random & 33
$E30    $A32A   LD       I, $32A         ; Load 32A into I
$E32    $1D87   JP       $D87            ; Jump to D87
$E34    $F978   UNKNOWN  F978            ; Unknown Fxxx instruction
$E36    $90EE   UNKNOWN  $90EE           ; Unknown 9xxx instruction
$E38    $E951   UNKNOWN  $E951           ; Unknown Exxx instruction
$E3A    $DFCF   DRW      VF, VC, #F      ; Draw 15-byte sprite at VF, VC
$E3C    $1776   JP       $776            ; Jump to 776
$E3E    $4F19   SNE      VF, #19         ; Skip if VF != 25
$E40    $D6C5   DRW      V6, VC, #5      ; Draw 5-byte sprite at V6, VC
$E42    $0F4C   SYS      $F4C            ; System call to F4C
$E44    $DB53   DRW      VB, V5, #3      ; Draw 3-byte sprite at VB, V5
$E46    $8DDD   UNKNOWN  8DDD            ; Unknown 8xxx instruction
$E48    $2FE2   CALL     $FE2            ; Call subroutine at FE2
$E4A    $DB0F   DRW      VB, V0, #F      ; Draw 15-byte sprite at VB, V0
$E4C    $A8A2   LD       I, $8A2         ; Load 8A2 into I
$E4E    $B723   JP       V0, $723        ; Jump to V0 + 723
$E50    $3E5C   SE       VE, #5C         ; Skip if VE == 92
$E52    $B9F1   JP       V0, $9F1        ; Jump to V0 + 9F1
$E54    $FAFF   UNKNOWN  FAFF            ; Unknown Fxxx instruction
$E56    $130D   JP       $30D            ; Jump to 30D
$E58    $C2A9   RND      V2, #A9         ; V2 = random & A9
$E5A    $F184   UNKNOWN  F184            ; Unknown Fxxx instruction
$E5C    $7C5F   ADD      VC, #5F         ; Add 95 to VC
$E5E    $4BCD   SNE      VB, #CD         ; Skip if VB != 205
$E60    $6FB5   LD       VF, #B5         ; Load 181 into VF
$E62    $3A66   SE       VA, #66         ; Skip if VA == 102
$E64    $A810   LD       I, $810         ; Load 810 into I
$E66    $7C76   ADD      VC, #76         ; Add 118 to VC
$E68    $684D   LD       V8, #4D         ; Load 77 into V8
$E6A    $7473   ADD      V4, #73         ; Add 115 to V4
$E6C    $BF3C   JP       V0, $F3C        ; Jump to V0 + F3C
$E6E    $D851   DRW      V8, V5, #1      ; Draw 1-byte sprite at V8, V5
$E70    $48B4   SNE      V8, #B4         ; Skip if V8 != 180
$E72    $EAE4   UNKNOWN  $EAE4           ; Unknown Exxx instruction
$E74    $94F2   UNKNOWN  $94F2           ; Unknown 9xxx instruction
$E76    $33F1   SE       V3, #F1         ; Skip if V3 == 241
$E78    $4FCA   SNE      VF, #CA         ; Skip if VF != 202
$E7A    $F60A   LD       V6, K           ; Wait for key press, store in V6
$E7C    $4A72   SNE      VA, #72         ; Skip if VA != 114
$E7E    $CE01   RND      VE, #01         ; VE = random & 01
$E80    $15F4   JP       $5F4            ; Jump to 5F4
$E82    $121F   JP       $21F            ; Jump to 21F
$E84    $408C   SNE      V0, #8C         ; Skip if V0 != 140
$E86    $9956   UNKNOWN  $9956           ; Unknown 9xxx instruction
$E88    $8092   AND      V0, V9          ; V0 &= V9
$E8A    $E6B6   UNKNOWN  $E6B6           ; Unknown Exxx instruction
$E8C    $A2E4   LD       I, $2E4         ; Load 2E4 into I
$E8E    $2E89   CALL     $E89            ; Call subroutine at E89
$E90    $95B4   UNKNOWN  $95B4           ; Unknown 9xxx instruction
$E92    $2649   CALL     $649            ; Call subroutine at 649
$E94    $5BB6   UNKNOWN  $5BB6           ; Unknown 5xxx instruction
$E96    $B1F2   JP       V0, $1F2        ; Jump to V0 + 1F2
$E98    $3C71   SE       VC, #71         ; Skip if VC == 113
$E9A    $F50D   UNKNOWN  F50D            ; Unknown Fxxx instruction
$E9C    $4796   SNE      V7, #96         ; Skip if V7 != 150
$E9E    $CBA4   RND      VB, #A4         ; VB = random & A4
$EA0    $F4DC   UNKNOWN  F4DC            ; Unknown Fxxx instruction
$EA2    $5899   UNKNOWN  $5899           ; Unknown 5xxx instruction
$EA4    $374A   SE       V7, #4A         ; Skip if V7 == 74
$EA6    $3526   SE       V5, #26         ; Skip if V5 == 38
$EA8    $ECCD   UNKNOWN  $ECCD           ; Unknown Exxx instruction
$EAA    $D4BE   DRW      V4, VB, #E      ; Draw 14-byte sprite at V4, VB
$EAC    $6676   LD       V6, #76         ; Load 118 into V6
$EAE    $E6EE   UNKNOWN  $E6EE           ; Unknown Exxx instruction
$EB0    $6336   LD       V3, #36         ; Load 54 into V3
$EB2    $C3AD   RND      V3, #AD         ; V3 = random & AD
$EB4    $452E   SNE      V5, #2E         ; Skip if V5 != 46
$EB6    $0046   SYS      $046            ; System call to 046
$EB8    $FC71   UNKNOWN  FC71            ; Unknown Fxxx instruction
$EBA    $98B6   UNKNOWN  $98B6           ; Unknown 9xxx instruction
$EBC    $AC72   LD       I, $C72         ; Load C72 into I
$EBE    $2292   CALL     $292            ; Call subroutine at 292
$EC0    $3016   SE       V0, #16         ; Skip if V0 == 22
$EC2    $5095   UNKNOWN  $5095           ; Unknown 5xxx instruction
$EC4    $248E   CALL     $48E            ; Call subroutine at 48E
$EC6    $6761   LD       V7, #61         ; Load 97 into V7
$EC8    $4919   SNE      V9, #19         ; Skip if V9 != 25
$ECA    $5BB0   SE       VB, VB          ; Skip if VB == VB
$ECC    $0651   SYS      $651            ; System call to 651
$ECE    $458F   SNE      V5, #8F         ; Skip if V5 != 143
$ED0    $4230   SNE      V2, #30         ; Skip if V2 != 48
$ED2    $46F3   SNE      V6, #F3         ; Skip if V6 != 243
$ED4    $5F27   UNKNOWN  $5F27           ; Unknown 5xxx instruction
$ED6    $72C0   ADD      V2, #C0         ; Add 192 to V2
$ED8    $1BA0   JP       $BA0            ; Jump to BA0
$EDA    $2894   CALL     $894            ; Call subroutine at 894
$EDC    $8D73   XOR      VD, V7          ; VD ^= V7
$EDE    $7BE1   ADD      VB, #E1         ; Add 225 to VB
$EE0    $C1D0   RND      V1, #D0         ; V1 = random & D0
$EE2    $2ECC   CALL     $ECC            ; Call subroutine at ECC
$EE4    $BA2B   JP       V0, $A2B        ; Jump to V0 + A2B
$EE6    $9E37   UNKNOWN  $9E37           ; Unknown 9xxx instruction
$EE8    $DC0F   DRW      VC, V0, #F      ; Draw 15-byte sprite at VC, V0
$EEA    $510D   UNKNOWN  $510D           ; Unknown 5xxx instruction
$EEC    $401C   SNE      V0, #1C         ; Skip if V0 != 28
$EEE    $080E   SYS      $80E            ; System call to 80E
$EF0    $AC25   LD       I, $C25         ; Load C25 into I
$EF2    $E20D   UNKNOWN  $E20D           ; Unknown Exxx instruction
$EF4    $AF6C   LD       I, $F6C         ; Load F6C into I
$EF6    $F44F   UNKNOWN  F44F            ; Unknown Fxxx instruction
$EF8    $421E   SNE      V2, #1E         ; Skip if V2 != 30
$EFA    $BD10   JP       V0, $D10        ; Jump to V0 + D10
$EFC    $6CCC   LD       VC, #CC         ; Load 204 into VC
$EFE    $A86A   LD       I, $86A         ; Load 86A into I
$F00    $27AE   CALL     $7AE            ; Call subroutine at 7AE
$F02    $B5AD   JP       V0, $5AD        ; Jump to V0 + 5AD
$F04    $E379   UNKNOWN  $E379           ; Unknown Exxx instruction
$F06    $6C59   LD       VC, #59         ; Load 89 into VC
$F08    $6089   LD       V0, #89         ; Load 137 into V0
$F0A    $A189   LD       I, $189         ; Load 189 into I
$F0C    $CE2F   RND      VE, #2F         ; VE = random & 2F
$F0E    $0622   SYS      $622            ; System call to 622
$F10    $B96B   JP       V0, $96B        ; Jump to V0 + 96B
$F12    $6547   LD       V5, #47         ; Load 71 into V5
$F14    $1591   JP       $591            ; Jump to 591
$F16    $3391   SE       V3, #91         ; Skip if V3 == 145
$F18    $698B   LD       V9, #8B         ; Load 139 into V9
$F1A    $193F   JP       $93F            ; Jump to 93F
$F1C    $5ADC   UNKNOWN  $5ADC           ; Unknown 5xxx instruction
$F1E    $F2A0   UNKNOWN  F2A0            ; Unknown Fxxx instruction
$F20    $241D   CALL     $41D            ; Call subroutine at 41D
$F22    $DA68   DRW      VA, V6, #8      ; Draw 8-byte sprite at VA, V6
$F24    $4491   SNE      V4, #91         ; Skip if V4 != 145
$F26    $6407   LD       V4, #07         ; Load 7 into V4
$F28    $354D   SE       V5, #4D         ; Skip if V5 == 77
$F2A    $AFBA   LD       I, $FBA         ; Load FBA into I
$F2C    $F5FF   UNKNOWN  F5FF            ; Unknown Fxxx instruction
$F2E    $35F7   SE       V5, #F7         ; Skip if V5 == 247
$F30    $121F   JP       $21F            ; Jump to 21F
$F32    $E8D1   UNKNOWN  $E8D1           ; Unknown Exxx instruction
$F34    $73F3   ADD      V3, #F3         ; Add 243 to V3
$F36    $D332   DRW      V3, V3, #2      ; Draw 2-byte sprite at V3, V3
$F38    $C024   RND      V0, #24         ; V0 = random & 24
$F3A    $7201   ADD      V2, #01         ; Add 1 to V2
$F3C    $F998   UNKNOWN  F998            ; Unknown Fxxx instruction
$F3E    $44C0   SNE      V4, #C0         ; Skip if V4 != 192
$F40    $A059   LD       I, $059         ; Load 059 into I
$F42    $1AAE   JP       $AAE            ; Jump to AAE
$F44    $728F   ADD      V2, #8F         ; Add 143 to V2
$F46    $CAD8   RND      VA, #D8         ; VA = random & D8
$F48    $C4ED   RND      V4, #ED         ; V4 = random & ED
$F4A    $E9DA   UNKNOWN  $E9DA           ; Unknown Exxx instruction
$F4C    $9EE0   SNE      VE, VE          ; Skip if VE != VE
$F4E    $7052   ADD      V0, #52         ; Add 82 to V0
$F50    $8F77   SUBN     VF, V7          ; VF = V7 - VF, VF = !borrow
$F52    $FCAF   UNKNOWN  FCAF            ; Unknown Fxxx instruction
$F54    $EE8B   UNKNOWN  $EE8B           ; Unknown Exxx instruction
$F56    $EA99   UNKNOWN  $EA99           ; Unknown Exxx instruction
$F58    $1FBE   JP       $FBE            ; Jump to FBE
$F5A    $8B91   OR       VB, V9          ; VB |= V9
$F5C    $09B5   SYS      $9B5            ; System call to 9B5
$F5E    $DCE4   DRW      VC, VE, #4      ; Draw 4-byte sprite at VC, VE
$F60    $9374   UNKNOWN  $9374           ; Unknown 9xxx instruction
$F62    $2AED   CALL     $AED            ; Call subroutine at AED
$F64    $69C6   LD       V9, #C6         ; Load 198 into V9
$F66    $6EF0   LD       VE, #F0         ; Load 240 into VE
$F68    $EC67   UNKNOWN  $EC67           ; Unknown Exxx instruction
$F6A    $A8DF   LD       I, $8DF         ; Load 8DF into I
$F6C    $E2E2   UNKNOWN  $E2E2           ; Unknown Exxx instruction
$F6E    $297F   CALL     $97F            ; Call subroutine at 97F
$F70    $2506   CALL     $506            ; Call subroutine at 506
$F72    $94BB   UNKNOWN  $94BB           ; Unknown 9xxx instruction
$F74    $216D   CALL     $16D            ; Call subroutine at 16D
$F76    $BE5F   JP       V0, $E5F        ; Jump to V0 + E5F
$F78    $D19E   DRW      V1, V9, #E      ; Draw 14-byte sprite at V1, V9
$F7A    $2280   CALL     $280            ; Call subroutine at 280
$F7C    $E07C   UNKNOWN  $E07C           ; Unknown Exxx instruction
$F7E    $B10D   JP       V0, $10D        ; Jump to V0 + 10D
$F80    $3467   SE       V4, #67         ; Skip if V4 == 103
$F82    $194D   JP       $94D            ; Jump to 94D
$F84    $23DF   CALL     $3DF            ; Call subroutine at 3DF
$F86    $F6EC   UNKNOWN  F6EC            ; Unknown Fxxx instruction
$F88    $C4D5   RND      V4, #D5         ; V4 = random & D5
$F8A    $F790   UNKNOWN  F790            ; Unknown Fxxx instruction
$F8C    $297E   CALL     $97E            ; Call subroutine at 97E
$F8E    $B47C   JP       V0, $47C        ; Jump to V0 + 47C
$F90    $FDF0   UNKNOWN  FDF0            ; Unknown Fxxx instruction
$F92    $DAF1   DRW      VA, VF, #1      ; Draw 1-byte sprite at VA, VF
$F94    $D0A4   DRW      V0, VA, #4      ; Draw 4-byte sprite at V0, VA
$F96    $A708   LD       I, $708         ; Load 708 into I
$F98    $3CF3   SE       VC, #F3         ; Skip if VC == 243
$F9A    $0B04   SYS      $B04            ; System call to B04
$F9C    $9AA1   UNKNOWN  $9AA1           ; Unknown 9xxx instruction
$F9E    $37F2   SE       V7, #F2         ; Skip if V7 == 242
$FA0    $0F76   SYS      $F76            ; System call to F76
$FA2    $9CCB   UNKNOWN  $9CCB           ; Unknown 9xxx instruction
$FA4    $0A97   SYS      $A97            ; System call to A97
$FA6    $DC67   DRW      VC, V6, #7      ; Draw 7-byte sprite at VC, V6
$FA8    $1747   JP       $747            ; Jump to 747
$FAA    $8049   UNKNOWN  8049            ; Unknown 8xxx instruction
$FAC    $723C   ADD      V2, #3C         ; Add 60 to V2
$FAE    $0255   SYS      $255            ; System call to 255
$FB0    $2C62   CALL     $C62            ; Call subroutine at C62
$FB2    $B6E6   JP       V0, $6E6        ; Jump to V0 + 6E6
$FB4    $FD10   UNKNOWN  FD10            ; Unknown Fxxx instruction
$FB6    $EDF6   UNKNOWN  $EDF6           ; Unknown Exxx instruction
$FB8    $AF5C   LD       I, $F5C         ; Load F5C into I
$FBA    $F309   UNKNOWN  F309            ; Unknown Fxxx instruction
$FBC    $3289   SE       V2, #89         ; Skip if V2 == 137
$FBE    $18AD   JP       $8AD            ; Jump to 8AD
$FC0    $1BA4   JP       $BA4            ; Jump to BA4
$FC2    $0125   SYS      $125            ; System call to 125
$FC4    $358B   SE       V5, #8B         ; Skip if V5 == 139
$FC6    $34BA   SE       V4, #BA         ; Skip if V4 == 186
$FC8    $6FF0   LD       VF, #F0         ; Load 240 into VF
$FCA    $DE3B   DRW      VE, V3, #B      ; Draw 11-byte sprite at VE, V3
$FCC    $DE15   DRW      VE, V1, #5      ; Draw 5-byte sprite at VE, V1
$FCE    $BD2C   JP       V0, $D2C        ; Jump to V0 + D2C
$FD0    $49C9   SNE      V9, #C9         ; Skip if V9 != 201
$FD2    $CEAB   RND      VE, #AB         ; VE = random & AB
$FD4    $9186   UNKNOWN  $9186           ; Unknown 9xxx instruction
$FD6    $4C4D   SNE      VC, #4D         ; Skip if VC != 77
$FD8    $B124   JP       V0, $124        ; Jump to V0 + 124
$FDA    $5FBC   UNKNOWN  $5FBC           ; Unknown 5xxx instruction
$FDC    $A014   LD       I, $014         ; Load 014 into I
$FDE    $EFD3   UNKNOWN  $EFD3           ; Unknown Exxx instruction
$FE0    $1005   JP       $005            ; Jump to 005
$FE2    $7672   ADD      V6, #72         ; Add 114 to V6
$FE4    $12F8   JP       $2F8            ; Jump to 2F8
$FE6    $A9AA   LD       I, $9AA         ; Load 9AA into I
$FE8    $D108   DRW      V1, V0, #8      ; Draw 8-byte sprite at V1, V0
$FEA    $F6F5   UNKNOWN  F6F5            ; Unknown Fxxx instruction
$FEC    $5123   UNKNOWN  $5123           ; Unknown 5xxx instruction
$FEE    $D0D4   DRW      V0, VD, #4      ; Draw 4-byte sprite at V0, VD
$FF0    $16F6   JP       $6F6            ; Jump to 6F6
$FF2    $33FD   SE       V3, #FD         ; Skip if V3 == 253
$FF4    $8F2C   UNKNOWN  8F2C            ; Unknown 8xxx instruction
$FF6    $D011   DRW      V0, V1, #1      ; Draw 1-byte sprite at V0, V1
$FF8    $5321   UNKNOWN  $5321           ; Unknown 5xxx instruction
$FFA    $7F53   ADD      VF, #53         ; Add 83 to VF
$FFC    $5E3D   UNKNOWN  $5E3D           ; Unknown 5xxx instruction
$FFE    $08D4   SYS      $8D4            ; System call to 8D4

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 469 (26.2%)
  LD      : 243 (13.6%)
  JP      : 229 (12.8%)
  SE      : 128 ( 7.2%)
  SNE     : 124 ( 6.9%)
  DRW     : 116 ( 6.5%)
  SYS     : 110 ( 6.1%)
  ADD     : 110 ( 6.1%)
  RND     : 108 ( 6.0%)
  CALL    : 104 ( 5.8%)
  XOR     :   9 ( 0.5%)
  SHR     :   9 ( 0.5%)
  OR      :   8 ( 0.4%)
  AND     :   8 ( 0.4%)
  SUBN    :   5 ( 0.3%)
  SUB     :   5 ( 0.3%)
  SHL     :   4 ( 0.2%)

Memory Operations: 353 (19.7%)
Arithmetic Operations: 145 (8.1%)
