
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B3656D01_I24613_C7615_47cea20387dd.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 3656
Instance: 24613
Direction: ascending
Final Array: [32, 32, 32, 32, 32, 170, 242, 247]
Operations: R:0 W:5 C:770 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 106
Sort Array References:
  $216: LD I, $D60 ; Load D60 into I
  $240: LD I, $E8D ; Load E8D into I
  $260: LD I, $02D ; Load 02D into I
  $27C: LD V1, [I] ; Load V0-V1 from I
  $27E: LD I, $0A4 ; Load 0A4 into I
  $338: LD I, $E44 ; Load E44 into I
  $35E: LD I, $8D2 ; Load 8D2 into I
  $39A: LD I, $EE0 ; Load EE0 into I
  $3B2: LD I, $6E2 ; Load 6E2 into I
  $3C8: LD I, $1B3 ; Load 1B3 into I
  $3E0: LD I, $C89 ; Load C89 into I
  $3E6: LD I, $8C4 ; Load 8C4 into I
  $3FE: LD I, $9BF ; Load 9BF into I
  $40A: LD I, $8C3 ; Load 8C3 into I
  $45C: LD I, $848 ; Load 848 into I
  $470: LD I, $838 ; Load 838 into I
  $4B4: LD [I], VA ; Store V0-VA at I
  $4F4: LD I, $942 ; Load 942 into I
  $526: LD I, $EA8 ; Load EA8 into I
  $538: LD I, $B2D ; Load B2D into I
  $56E: LD I, $526 ; Load 526 into I
  $594: LD I, $276 ; Load 276 into I
  $5DE: LD I, $699 ; Load 699 into I
  $5E6: LD I, $7C0 ; Load 7C0 into I
  $5F0: LD I, $FC8 ; Load FC8 into I
  $606: LD I, $4C7 ; Load 4C7 into I
  $64A: LD I, $C02 ; Load C02 into I
  $64C: LD I, $22B ; Load 22B into I
  $65E: LD I, $D8B ; Load D8B into I
  $666: LD I, $8A8 ; Load 8A8 into I
  $672: LD I, $3B1 ; Load 3B1 into I
  $680: LD I, $089 ; Load 089 into I
  $682: LD I, $43C ; Load 43C into I
  $69E: LD I, $0A6 ; Load 0A6 into I
  $6DC: LD I, $AF7 ; Load AF7 into I
  $6E8: LD I, $A5B ; Load A5B into I
  $6EE: LD I, $F5E ; Load F5E into I
  $700: LD I, $F53 ; Load F53 into I
  $70C: LD I, $409 ; Load 409 into I
  $71E: LD I, $0EA ; Load 0EA into I
  $748: LD I, $1EB ; Load 1EB into I
  $78E: LD I, $203 ; Load 203 into I
  $794: LD I, $39A ; Load 39A into I
  $806: LD I, $16D ; Load 16D into I
  $810: LD I, $19C ; Load 19C into I
  $852: LD I, $C03 ; Load C03 into I
  $860: LD I, $68F ; Load 68F into I
  $88C: LD I, $163 ; Load 163 into I
  $89E: LD I, $4AC ; Load 4AC into I
  $8EA: LD I, $3AB ; Load 3AB into I
  $916: LD I, $C53 ; Load C53 into I
  $95E: LD I, $0CB ; Load 0CB into I
  $968: LD I, $FA5 ; Load FA5 into I
  $9A4: LD I, $D8A ; Load D8A into I
  $9BC: LD I, $18A ; Load 18A into I
  $9F2: LD I, $930 ; Load 930 into I
  $9F4: LD I, $E04 ; Load E04 into I
  $9FE: LD I, $7C5 ; Load 7C5 into I
  $A26: LD I, $2A1 ; Load 2A1 into I
  $A36: LD I, $73B ; Load 73B into I
  $A66: LD I, $F38 ; Load F38 into I
  $AAE: LD I, $302 ; Load 302 into I
  $AC2: LD I, $1C5 ; Load 1C5 into I
  $AE2: LD I, $28A ; Load 28A into I
  $B0C: LD I, $DD3 ; Load DD3 into I
  $B26: LD I, $9EF ; Load 9EF into I
  $B2E: LD I, $1C8 ; Load 1C8 into I
  $B6E: LD I, $2DC ; Load 2DC into I
  $BA2: LD I, $ED8 ; Load ED8 into I
  $BE2: LD I, $DEE ; Load DEE into I
  $BEC: LD I, $9BA ; Load 9BA into I
  $BEE: LD I, $FAE ; Load FAE into I
  $BF0: LD I, $5F9 ; Load 5F9 into I
  $C18: LD I, $5E4 ; Load 5E4 into I
  $C5A: LD I, $FEF ; Load FEF into I
  $C6A: LD I, $1C0 ; Load 1C0 into I
  $C8A: LD I, $0AB ; Load 0AB into I
  $C9A: LD I, $ACA ; Load ACA into I
  $CB8: LD I, $CF2 ; Load CF2 into I
  $CD2: LD I, $A30 ; Load A30 into I
  $CD6: LD I, $4CB ; Load 4CB into I
  $CD8: LD I, $E1D ; Load E1D into I
  $D12: LD I, $380 ; Load 380 into I
  $D14: LD I, $01A ; Load 01A into I
  $D88: LD I, $DB8 ; Load DB8 into I
  $DCC: LD I, $DFB ; Load DFB into I
  $DD0: LD I, $190 ; Load 190 into I
  $DD8: LD I, $EB5 ; Load EB5 into I
  $E36: LD I, $1F1 ; Load 1F1 into I
  $E3C: LD I, $6C9 ; Load 6C9 into I
  $E70: LD I, $B68 ; Load B68 into I
  $E80: LD I, $9A9 ; Load 9A9 into I
  $EA8: LD I, $32E ; Load 32E into I
  $EB0: LD I, $EE8 ; Load EE8 into I
  $EB6: LD I, $F59 ; Load F59 into I
  $EEE: LD I, $480 ; Load 480 into I
  $F04: LD I, $17F ; Load 17F into I
  $F10: LD I, $527 ; Load 527 into I
  $F1A: LD I, $555 ; Load 555 into I
  $F42: LD I, $D67 ; Load D67 into I
  $F50: LD I, $10C ; Load 10C into I
  $F56: LD [I], V0 ; Store V0-V0 at I
  $F86: LD I, $471 ; Load 471 into I
  $F8C: LD I, $732 ; Load 732 into I
  $FCE: LD I, $B62 ; Load B62 into I
  $FD8: LD I, $60E ; Load 60E into I

CONTROL FLOW ANALYSIS:
Jumps: 218
Calls: 185
Branches: 207
Loops: 132
Loop Structures:
  $248 -> $08E (backward jump)
  $24C -> $1C8 (backward jump)
  $270 -> $058 (backward jump)
  $274 -> $180 (backward jump)
  $3A4 -> $171 (backward jump)
  $4AC -> $418 (backward jump)
  $4BE -> $0A2 (backward jump)
  $4D6 -> $196 (backward jump)
  $4E2 -> $40A (backward jump)
  $528 -> $0A8 (backward jump)
  $52A -> $3E5 (backward jump)
  $54E -> $32F (backward jump)
  $55E -> $38A (backward jump)
  $57A -> $0F4 (backward jump)
  $5A4 -> $47F (backward jump)
  $5C0 -> $48A (backward jump)
  $5E8 -> $389 (backward jump)
  $650 -> $3DC (backward jump)
  $664 -> $485 (backward jump)
  $6B8 -> $616 (backward jump)
  $6CA -> $6A8 (backward jump)
  $6CE -> $0CF (backward jump)
  $6D2 -> $33C (backward jump)
  $6D4 -> $098 (backward jump)
  $6E0 -> $2CC (backward jump)
  $70E -> $5E1 (backward jump)
  $792 -> $4BA (backward jump)
  $79C -> $3C7 (backward jump)
  $7CC -> $0DD (backward jump)
  $7CE -> $3D2 (backward jump)
  $7D2 -> $097 (backward jump)
  $7FA -> $444 (backward jump)
  $7FC -> $359 (backward jump)
  $81C -> $20C (backward jump)
  $82A -> $696 (backward jump)
  $842 -> $7FD (backward jump)
  $87A -> $11C (backward jump)
  $89A -> $1C2 (backward jump)
  $8A4 -> $632 (backward jump)
  $8AE -> $152 (backward jump)
  $8C0 -> $172 (backward jump)
  $8C6 -> $760 (backward jump)
  $8F6 -> $316 (backward jump)
  $914 -> $2F5 (backward jump)
  $924 -> $56E (backward jump)
  $926 -> $771 (backward jump)
  $94A -> $4AE (backward jump)
  $958 -> $5EC (backward jump)
  $964 -> $382 (backward jump)
  $970 -> $23F (backward jump)
  $974 -> $618 (backward jump)
  $994 -> $824 (backward jump)
  $9B4 -> $15D (backward jump)
  $9C0 -> $24F (backward jump)
  $9DE -> $763 (backward jump)
  $9E8 -> $11D (backward jump)
  $A1A -> $444 (backward jump)
  $A50 -> $4A6 (backward jump)
  $A6A -> $6E3 (backward jump)
  $A72 -> $80D (backward jump)
  $A8C -> $828 (backward jump)
  $A8E -> $A49 (backward jump)
  $AA2 -> $3AA (backward jump)
  $AA4 -> $155 (backward jump)
  $AA6 -> $060 (backward jump)
  $AB0 -> $782 (backward jump)
  $ABE -> $9D9 (backward jump)
  $AC8 -> $8F7 (backward jump)
  $AE8 -> $630 (backward jump)
  $AFE -> $678 (backward jump)
  $B08 -> $ABF (backward jump)
  $B0E -> $749 (backward jump)
  $B12 -> $89F (backward jump)
  $B14 -> $11E (backward jump)
  $B52 -> $8B2 (backward jump)
  $B70 -> $908 (backward jump)
  $B7C -> $737 (backward jump)
  $B9A -> $B2D (backward jump)
  $BAC -> $8DB (backward jump)
  $BC8 -> $6EE (backward jump)
  $C0A -> $0A1 (backward jump)
  $C10 -> $0F3 (backward jump)
  $C26 -> $1A5 (backward jump)
  $C2E -> $2B6 (backward jump)
  $C30 -> $68E (backward jump)
  $C3A -> $445 (backward jump)
  $C7A -> $C48 (backward jump)
  $C8C -> $9E1 (backward jump)
  $C92 -> $28A (backward jump)
  $CA6 -> $B7E (backward jump)
  $CC2 -> $416 (backward jump)
  $CC8 -> $862 (backward jump)
  $CCE -> $4B0 (backward jump)
  $CDA -> $18F (backward jump)
  $D0A -> $8C3 (backward jump)
  $D0E -> $C59 (backward jump)
  $D34 -> $2DD (backward jump)
  $D54 -> $CA3 (backward jump)
  $D58 -> $192 (backward jump)
  $D64 -> $2B7 (backward jump)
  $D92 -> $D58 (backward jump)
  $DC8 -> $930 (backward jump)
  $DD6 -> $61E (backward jump)
  $DF0 -> $249 (backward jump)
  $DF6 -> $D4D (backward jump)
  $E20 -> $A49 (backward jump)
  $E44 -> $828 (backward jump)
  $E4E -> $4E9 (backward jump)
  $E7C -> $629 (backward jump)
  $EA0 -> $4A0 (backward jump)
  $ECA -> $B59 (backward jump)
  $ED4 -> $1CC (backward jump)
  $EE0 -> $493 (backward jump)
  $EF2 -> $D8E (backward jump)
  $EF8 -> $572 (backward jump)
  $F0E -> $C5A (backward jump)
  $F22 -> $903 (backward jump)
  $F2E -> $1EA (backward jump)
  $F3C -> $559 (backward jump)
  $F58 -> $D7E (backward jump)
  $F5A -> $723 (backward jump)
  $F62 -> $279 (backward jump)
  $F6A -> $F63 (backward jump)
  $F6C -> $ECE (backward jump)
  $F6E -> $A23 (backward jump)
  $F88 -> $4C3 (backward jump)
  $FA0 -> $417 (backward jump)
  $FB6 -> $E4E (backward jump)
  $FBA -> $5A1 (backward jump)
  $FC4 -> $EA9 (backward jump)
  $FD2 -> $C13 (backward jump)
  $FFE -> $364 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $0CF3   SYS      $CF3            ; System call to CF3
$202    $5E2C   UNKNOWN  $5E2C           ; Unknown 5xxx instruction
$204    $4FEF   SNE      VF, #EF         ; Skip if VF != 239
$206    $18FA   JP       $8FA            ; Jump to 8FA
$208    $3EB3   SE       VE, #B3         ; Skip if VE == 179
$20A    $9F43   UNKNOWN  $9F43           ; Unknown 9xxx instruction
$20C    $8F25   SUB      VF, V2          ; VF -= V2, VF = !borrow
$20E    $9B41   UNKNOWN  $9B41           ; Unknown 9xxx instruction
$210    $7630   ADD      V6, #30         ; Add 48 to V6
$212    $0DE5   SYS      $DE5            ; System call to DE5
$214    $484F   SNE      V8, #4F         ; Skip if V8 != 79
$216    $AD60   LD       I, $D60         ; Load D60 into I
$218    $0595   SYS      $595            ; System call to 595
$21A    $F0FC   UNKNOWN  F0FC            ; Unknown Fxxx instruction
$21C    $7533   ADD      V5, #33         ; Add 51 to V5
$21E    $8106   SHR      V1              ; V1 >>= 1, VF = LSB
$220    $8365   SUB      V3, V6          ; V3 -= V6, VF = !borrow
$222    $57A5   UNKNOWN  $57A5           ; Unknown 5xxx instruction
$224    $BEFA   JP       V0, $EFA        ; Jump to V0 + EFA
$226    $B6B7   JP       V0, $6B7        ; Jump to V0 + 6B7
$228    $57B8   UNKNOWN  $57B8           ; Unknown 5xxx instruction
$22A    $E65C   UNKNOWN  $E65C           ; Unknown Exxx instruction
$22C    $2A33   CALL     $A33            ; Call subroutine at A33
$22E    $CBF4   RND      VB, #F4         ; VB = random & F4
$230    $0C9A   SYS      $C9A            ; System call to C9A
$232    $170E   JP       $70E            ; Jump to 70E
$234    $D768   DRW      V7, V6, #8      ; Draw 8-byte sprite at V7, V6
$236    $D519   DRW      V5, V1, #9      ; Draw 9-byte sprite at V5, V1
$238    $7CF0   ADD      VC, #F0         ; Add 240 to VC
$23A    $405C   SNE      V0, #5C         ; Skip if V0 != 92
$23C    $1308   JP       $308            ; Jump to 308
$23E    $8510   LD       V5, V1          ; V5 = V1
$240    $AE8D   LD       I, $E8D         ; Load E8D into I
$242    $9F18   UNKNOWN  $9F18           ; Unknown 9xxx instruction
$244    $201E   CALL     $01E            ; Call subroutine at 01E
$246    $DBB8   DRW      VB, VB, #8      ; Draw 8-byte sprite at VB, VB
$248    $B08E   JP       V0, $08E        ; Jump to V0 + 08E
$24A    $2B7E   CALL     $B7E            ; Call subroutine at B7E
$24C    $B1C8   JP       V0, $1C8        ; Jump to V0 + 1C8
$24E    $6DBF   LD       VD, #BF         ; Load 191 into VD
$250    $1D93   JP       $D93            ; Jump to D93
$252    $45FB   SNE      V5, #FB         ; Skip if V5 != 251
$254    $ECE7   UNKNOWN  $ECE7           ; Unknown Exxx instruction
$256    $EACE   UNKNOWN  $EACE           ; Unknown Exxx instruction
$258    $091A   SYS      $91A            ; System call to 91A
$25A    $50B8   UNKNOWN  $50B8           ; Unknown 5xxx instruction
$25C    $874F   UNKNOWN  874F            ; Unknown 8xxx instruction
$25E    $E9C9   UNKNOWN  $E9C9           ; Unknown Exxx instruction
$260    $A02D   LD       I, $02D         ; Load 02D into I
$262    $5F91   UNKNOWN  $5F91           ; Unknown 5xxx instruction
$264    $F1FA   UNKNOWN  F1FA            ; Unknown Fxxx instruction
$266    $C1F2   RND      V1, #F2         ; V1 = random & F2
$268    $4FC1   SNE      VF, #C1         ; Skip if VF != 193
$26A    $6332   LD       V3, #32         ; Load 50 into V3
$26C    $000B   SYS      $00B            ; System call to 00B
$26E    $E512   UNKNOWN  $E512           ; Unknown Exxx instruction
$270    $B058   JP       V0, $058        ; Jump to V0 + 058
$272    $C435   RND      V4, #35         ; V4 = random & 35
$274    $1180   JP       $180            ; Jump to 180
$276    $8312   AND      V3, V1          ; V3 &= V1
$278    $2C7E   CALL     $C7E            ; Call subroutine at C7E
$27A    $F451   UNKNOWN  F451            ; Unknown Fxxx instruction
$27C    $F165   LD       V1, [I]         ; Load V0-V1 from I
$27E    $A0A4   LD       I, $0A4         ; Load 0A4 into I
$280    $4497   SNE      V4, #97         ; Skip if V4 != 151
$282    $43C1   SNE      V3, #C1         ; Skip if V3 != 193
$284    $FD4A   UNKNOWN  FD4A            ; Unknown Fxxx instruction
$286    $0D7E   SYS      $D7E            ; System call to D7E
$288    $803F   UNKNOWN  803F            ; Unknown 8xxx instruction
$28A    $2020   CALL     $020            ; Call subroutine at 020
$28C    $2020   CALL     $020            ; Call subroutine at 020
$28E    $2020   CALL     $020            ; Call subroutine at 020
$290    $2020   CALL     $020            ; Call subroutine at 020
$292    $2020   CALL     $020            ; Call subroutine at 020
$294    $2020   CALL     $020            ; Call subroutine at 020
$296    $2020   CALL     $020            ; Call subroutine at 020
$298    $2020   CALL     $020            ; Call subroutine at 020
$29A    $2020   CALL     $020            ; Call subroutine at 020
$29C    $2020   CALL     $020            ; Call subroutine at 020
$29E    $2020   CALL     $020            ; Call subroutine at 020
$2A0    $2020   CALL     $020            ; Call subroutine at 020
$2A2    $2020   CALL     $020            ; Call subroutine at 020
$2A4    $2020   CALL     $020            ; Call subroutine at 020
$2A6    $2020   CALL     $020            ; Call subroutine at 020
$2A8    $2020   CALL     $020            ; Call subroutine at 020
$2AA    $2020   CALL     $020            ; Call subroutine at 020
$2AC    $2020   CALL     $020            ; Call subroutine at 020
$2AE    $2020   CALL     $020            ; Call subroutine at 020
$2B0    $2020   CALL     $020            ; Call subroutine at 020
$2B2    $2020   CALL     $020            ; Call subroutine at 020
$2B4    $2020   CALL     $020            ; Call subroutine at 020
$2B6    $2020   CALL     $020            ; Call subroutine at 020
$2B8    $2020   CALL     $020            ; Call subroutine at 020
$2BA    $2020   CALL     $020            ; Call subroutine at 020
$2BC    $2020   CALL     $020            ; Call subroutine at 020
$2BE    $2020   CALL     $020            ; Call subroutine at 020
$2C0    $2020   CALL     $020            ; Call subroutine at 020
$2C2    $2020   CALL     $020            ; Call subroutine at 020
$2C4    $2020   CALL     $020            ; Call subroutine at 020
$2C6    $2020   CALL     $020            ; Call subroutine at 020
$2C8    $2020   CALL     $020            ; Call subroutine at 020
$2CA    $2020   CALL     $020            ; Call subroutine at 020
$2CC    $2020   CALL     $020            ; Call subroutine at 020
$2CE    $2020   CALL     $020            ; Call subroutine at 020
$2D0    $2020   CALL     $020            ; Call subroutine at 020
$2D2    $2020   CALL     $020            ; Call subroutine at 020
$2D4    $2020   CALL     $020            ; Call subroutine at 020
$2D6    $2020   CALL     $020            ; Call subroutine at 020
$2D8    $2020   CALL     $020            ; Call subroutine at 020
$2DA    $2020   CALL     $020            ; Call subroutine at 020
$2DC    $2020   CALL     $020            ; Call subroutine at 020
$2DE    $2020   CALL     $020            ; Call subroutine at 020
$2E0    $2020   CALL     $020            ; Call subroutine at 020
$2E2    $2020   CALL     $020            ; Call subroutine at 020
$2E4    $2020   CALL     $020            ; Call subroutine at 020
$2E6    $2020   CALL     $020            ; Call subroutine at 020
$2E8    $2020   CALL     $020            ; Call subroutine at 020
$2EA    $2020   CALL     $020            ; Call subroutine at 020
$2EC    $2020   CALL     $020            ; Call subroutine at 020
$2EE    $2020   CALL     $020            ; Call subroutine at 020
$2F0    $2020   CALL     $020            ; Call subroutine at 020
$2F2    $2020   CALL     $020            ; Call subroutine at 020
$2F4    $2020   CALL     $020            ; Call subroutine at 020
$2F6    $2020   CALL     $020            ; Call subroutine at 020
$2F8    $2020   CALL     $020            ; Call subroutine at 020
$2FA    $2020   CALL     $020            ; Call subroutine at 020
$2FC    $2020   CALL     $020            ; Call subroutine at 020
$2FE    $2020   CALL     $020            ; Call subroutine at 020
$300    $2020   CALL     $020            ; Call subroutine at 020
$302    $2020   CALL     $020            ; Call subroutine at 020
$304    $20AA   CALL     $0AA            ; Call subroutine at 0AA
$306    $F2F7   UNKNOWN  F2F7            ; Unknown Fxxx instruction
$308    $61F5   LD       V1, #F5         ; Load 245 into V1
$30A    $B991   JP       V0, $991        ; Jump to V0 + 991
$30C    $5FB6   UNKNOWN  $5FB6           ; Unknown 5xxx instruction
$30E    $1A5A   JP       $A5A            ; Jump to A5A
$310    $5CAA   UNKNOWN  $5CAA           ; Unknown 5xxx instruction
$312    $2E6B   CALL     $E6B            ; Call subroutine at E6B
$314    $89EF   UNKNOWN  89EF            ; Unknown 8xxx instruction
$316    $7B67   ADD      VB, #67         ; Add 103 to VB
$318    $54EC   UNKNOWN  $54EC           ; Unknown 5xxx instruction
$31A    $7CDF   ADD      VC, #DF         ; Add 223 to VC
$31C    $DF47   DRW      VF, V4, #7      ; Draw 7-byte sprite at VF, V4
$31E    $688D   LD       V8, #8D         ; Load 141 into V8
$320    $C42B   RND      V4, #2B         ; V4 = random & 2B
$322    $91B4   UNKNOWN  $91B4           ; Unknown 9xxx instruction
$324    $C0D6   RND      V0, #D6         ; V0 = random & D6
$326    $2F7E   CALL     $F7E            ; Call subroutine at F7E
$328    $4B2E   SNE      VB, #2E         ; Skip if VB != 46
$32A    $8260   LD       V2, V6          ; V2 = V6
$32C    $F970   UNKNOWN  F970            ; Unknown Fxxx instruction
$32E    $DECD   DRW      VE, VC, #D      ; Draw 13-byte sprite at VE, VC
$330    $491B   SNE      V9, #1B         ; Skip if V9 != 27
$332    $C485   RND      V4, #85         ; V4 = random & 85
$334    $0861   SYS      $861            ; System call to 861
$336    $74BC   ADD      V4, #BC         ; Add 188 to V4
$338    $AE44   LD       I, $E44         ; Load E44 into I
$33A    $F106   UNKNOWN  F106            ; Unknown Fxxx instruction
$33C    $2469   CALL     $469            ; Call subroutine at 469
$33E    $848C   UNKNOWN  848C            ; Unknown 8xxx instruction
$340    $6F73   LD       VF, #73         ; Load 115 into VF
$342    $9580   SNE      V5, V8          ; Skip if V5 != V8
$344    $385B   SE       V8, #5B         ; Skip if V8 == 91
$346    $7CC2   ADD      VC, #C2         ; Add 194 to VC
$348    $567A   UNKNOWN  $567A           ; Unknown 5xxx instruction
$34A    $FF10   UNKNOWN  FF10            ; Unknown Fxxx instruction
$34C    $CF74   RND      VF, #74         ; VF = random & 74
$34E    $EBB2   UNKNOWN  $EBB2           ; Unknown Exxx instruction
$350    $FF2E   UNKNOWN  FF2E            ; Unknown Fxxx instruction
$352    $519D   UNKNOWN  $519D           ; Unknown 5xxx instruction
$354    $9496   UNKNOWN  $9496           ; Unknown 9xxx instruction
$356    $0098   SYS      $098            ; System call to 098
$358    $2809   CALL     $809            ; Call subroutine at 809
$35A    $DF09   DRW      VF, V0, #9      ; Draw 9-byte sprite at VF, V0
$35C    $2719   CALL     $719            ; Call subroutine at 719
$35E    $A8D2   LD       I, $8D2         ; Load 8D2 into I
$360    $C84A   RND      V8, #4A         ; V8 = random & 4A
$362    $5572   UNKNOWN  $5572           ; Unknown 5xxx instruction
$364    $691F   LD       V9, #1F         ; Load 31 into V9
$366    $9A0B   UNKNOWN  $9A0B           ; Unknown 9xxx instruction
$368    $1857   JP       $857            ; Jump to 857
$36A    $B872   JP       V0, $872        ; Jump to V0 + 872
$36C    $8149   UNKNOWN  8149            ; Unknown 8xxx instruction
$36E    $C147   RND      V1, #47         ; V1 = random & 47
$370    $F12E   UNKNOWN  F12E            ; Unknown Fxxx instruction
$372    $47D6   SNE      V7, #D6         ; Skip if V7 != 214
$374    $4A26   SNE      VA, #26         ; Skip if VA != 38
$376    $BBF7   JP       V0, $BF7        ; Jump to V0 + BF7
$378    $8703   XOR      V7, V0          ; V7 ^= V0
$37A    $3C0F   SE       VC, #0F         ; Skip if VC == 15
$37C    $3B73   SE       VB, #73         ; Skip if VB == 115
$37E    $2EE0   CALL     $EE0            ; Call subroutine at EE0
$380    $3C0E   SE       VC, #0E         ; Skip if VC == 14
$382    $2B19   CALL     $B19            ; Call subroutine at B19
$384    $5BBC   UNKNOWN  $5BBC           ; Unknown 5xxx instruction
$386    $EE5D   UNKNOWN  $EE5D           ; Unknown Exxx instruction
$388    $FE00   UNKNOWN  FE00            ; Unknown Fxxx instruction
$38A    $2AFF   CALL     $AFF            ; Call subroutine at AFF
$38C    $7725   ADD      V7, #25         ; Add 37 to V7
$38E    $F0B2   UNKNOWN  F0B2            ; Unknown Fxxx instruction
$390    $17A0   JP       $7A0            ; Jump to 7A0
$392    $2620   CALL     $620            ; Call subroutine at 620
$394    $8012   AND      V0, V1          ; V0 &= V1
$396    $6DFD   LD       VD, #FD         ; Load 253 into VD
$398    $1C5E   JP       $C5E            ; Jump to C5E
$39A    $AEE0   LD       I, $EE0         ; Load EE0 into I
$39C    $FCA5   UNKNOWN  FCA5            ; Unknown Fxxx instruction
$39E    $9FC4   UNKNOWN  $9FC4           ; Unknown 9xxx instruction
$3A0    $E807   UNKNOWN  $E807           ; Unknown Exxx instruction
$3A2    $5778   UNKNOWN  $5778           ; Unknown 5xxx instruction
$3A4    $1171   JP       $171            ; Jump to 171
$3A6    $E56C   UNKNOWN  $E56C           ; Unknown Exxx instruction
$3A8    $3C67   SE       VC, #67         ; Skip if VC == 103
$3AA    $B55F   JP       V0, $55F        ; Jump to V0 + 55F
$3AC    $F8E9   UNKNOWN  F8E9            ; Unknown Fxxx instruction
$3AE    $1B5D   JP       $B5D            ; Jump to B5D
$3B0    $B770   JP       V0, $770        ; Jump to V0 + 770
$3B2    $A6E2   LD       I, $6E2         ; Load 6E2 into I
$3B4    $2120   CALL     $120            ; Call subroutine at 120
$3B6    $3BDB   SE       VB, #DB         ; Skip if VB == 219
$3B8    $5C07   UNKNOWN  $5C07           ; Unknown 5xxx instruction
$3BA    $6F92   LD       VF, #92         ; Load 146 into VF
$3BC    $D86E   DRW      V8, V6, #E      ; Draw 14-byte sprite at V8, V6
$3BE    $E9CE   UNKNOWN  $E9CE           ; Unknown Exxx instruction
$3C0    $637F   LD       V3, #7F         ; Load 127 into V3
$3C2    $B7A3   JP       V0, $7A3        ; Jump to V0 + 7A3
$3C4    $2C46   CALL     $C46            ; Call subroutine at C46
$3C6    $6FA9   LD       VF, #A9         ; Load 169 into VF
$3C8    $A1B3   LD       I, $1B3         ; Load 1B3 into I
$3CA    $D4BC   DRW      V4, VB, #C      ; Draw 12-byte sprite at V4, VB
$3CC    $9FDE   UNKNOWN  $9FDE           ; Unknown 9xxx instruction
$3CE    $8511   OR       V5, V1          ; V5 |= V1
$3D0    $DA41   DRW      VA, V4, #1      ; Draw 1-byte sprite at VA, V4
$3D2    $9C9B   UNKNOWN  $9C9B           ; Unknown 9xxx instruction
$3D4    $E702   UNKNOWN  $E702           ; Unknown Exxx instruction
$3D6    $4479   SNE      V4, #79         ; Skip if V4 != 121
$3D8    $899A   UNKNOWN  899A            ; Unknown 8xxx instruction
$3DA    $066E   SYS      $66E            ; System call to 66E
$3DC    $0115   SYS      $115            ; System call to 115
$3DE    $50D2   UNKNOWN  $50D2           ; Unknown 5xxx instruction
$3E0    $AC89   LD       I, $C89         ; Load C89 into I
$3E2    $4394   SNE      V3, #94         ; Skip if V3 != 148
$3E4    $FA54   UNKNOWN  FA54            ; Unknown Fxxx instruction
$3E6    $A8C4   LD       I, $8C4         ; Load 8C4 into I
$3E8    $F092   UNKNOWN  F092            ; Unknown Fxxx instruction
$3EA    $4E19   SNE      VE, #19         ; Skip if VE != 25
$3EC    $D963   DRW      V9, V6, #3      ; Draw 3-byte sprite at V9, V6
$3EE    $2C1D   CALL     $C1D            ; Call subroutine at C1D
$3F0    $F5C4   UNKNOWN  F5C4            ; Unknown Fxxx instruction
$3F2    $9AB6   UNKNOWN  $9AB6           ; Unknown 9xxx instruction
$3F4    $D7A7   DRW      V7, VA, #7      ; Draw 7-byte sprite at V7, VA
$3F6    $0F1D   SYS      $F1D            ; System call to F1D
$3F8    $2732   CALL     $732            ; Call subroutine at 732
$3FA    $B499   JP       V0, $499        ; Jump to V0 + 499
$3FC    $F45E   UNKNOWN  F45E            ; Unknown Fxxx instruction
$3FE    $A9BF   LD       I, $9BF         ; Load 9BF into I
$400    $D5EB   DRW      V5, VE, #B      ; Draw 11-byte sprite at V5, VE
$402    $333C   SE       V3, #3C         ; Skip if V3 == 60
$404    $FC97   UNKNOWN  FC97            ; Unknown Fxxx instruction
$406    $3CD6   SE       VC, #D6         ; Skip if VC == 214
$408    $3ED9   SE       VE, #D9         ; Skip if VE == 217
$40A    $A8C3   LD       I, $8C3         ; Load 8C3 into I
$40C    $CFAD   RND      VF, #AD         ; VF = random & AD
$40E    $C125   RND      V1, #25         ; V1 = random & 25
$410    $622F   LD       V2, #2F         ; Load 47 into V2
$412    $5DFB   UNKNOWN  $5DFB           ; Unknown 5xxx instruction
$414    $19D0   JP       $9D0            ; Jump to 9D0
$416    $5E29   UNKNOWN  $5E29           ; Unknown 5xxx instruction
$418    $0473   SYS      $473            ; System call to 473
$41A    $CC62   RND      VC, #62         ; VC = random & 62
$41C    $8D9F   UNKNOWN  8D9F            ; Unknown 8xxx instruction
$41E    $F529   LD       F, V5           ; I = sprite address for digit V5
$420    $07A5   SYS      $7A5            ; System call to 7A5
$422    $81D8   UNKNOWN  81D8            ; Unknown 8xxx instruction
$424    $7E36   ADD      VE, #36         ; Add 54 to VE
$426    $600D   LD       V0, #0D         ; Load 13 into V0
$428    $7E64   ADD      VE, #64         ; Add 100 to VE
$42A    $DAAB   DRW      VA, VA, #B      ; Draw 11-byte sprite at VA, VA
$42C    $6A6E   LD       VA, #6E         ; Load 110 into VA
$42E    $43EB   SNE      V3, #EB         ; Skip if V3 != 235
$430    $DC98   DRW      VC, V9, #8      ; Draw 8-byte sprite at VC, V9
$432    $F5D2   UNKNOWN  F5D2            ; Unknown Fxxx instruction
$434    $1E85   JP       $E85            ; Jump to E85
$436    $EE00   UNKNOWN  $EE00           ; Unknown Exxx instruction
$438    $B5CF   JP       V0, $5CF        ; Jump to V0 + 5CF
$43A    $77CB   ADD      V7, #CB         ; Add 203 to V7
$43C    $4192   SNE      V1, #92         ; Skip if V1 != 146
$43E    $52CF   UNKNOWN  $52CF           ; Unknown 5xxx instruction
$440    $C2D5   RND      V2, #D5         ; V2 = random & D5
$442    $2D11   CALL     $D11            ; Call subroutine at D11
$444    $E70B   UNKNOWN  $E70B           ; Unknown Exxx instruction
$446    $B506   JP       V0, $506        ; Jump to V0 + 506
$448    $464D   SNE      V6, #4D         ; Skip if V6 != 77
$44A    $803E   SHL      V0              ; V0 <<= 1, VF = MSB
$44C    $168B   JP       $68B            ; Jump to 68B
$44E    $E864   UNKNOWN  $E864           ; Unknown Exxx instruction
$450    $9812   UNKNOWN  $9812           ; Unknown 9xxx instruction
$452    $8059   UNKNOWN  8059            ; Unknown 8xxx instruction
$454    $CAB6   RND      VA, #B6         ; VA = random & B6
$456    $86CA   UNKNOWN  86CA            ; Unknown 8xxx instruction
$458    $F1A5   UNKNOWN  F1A5            ; Unknown Fxxx instruction
$45A    $4508   SNE      V5, #08         ; Skip if V5 != 8
$45C    $A848   LD       I, $848         ; Load 848 into I
$45E    $96A5   UNKNOWN  $96A5           ; Unknown 9xxx instruction
$460    $86BE   SHL      V6              ; V6 <<= 1, VF = MSB
$462    $1C34   JP       $C34            ; Jump to C34
$464    $C3DA   RND      V3, #DA         ; V3 = random & DA
$466    $5C9F   UNKNOWN  $5C9F           ; Unknown 5xxx instruction
$468    $D891   DRW      V8, V9, #1      ; Draw 1-byte sprite at V8, V9
$46A    $385F   SE       V8, #5F         ; Skip if V8 == 95
$46C    $67CC   LD       V7, #CC         ; Load 204 into V7
$46E    $BFA7   JP       V0, $FA7        ; Jump to V0 + FA7
$470    $A838   LD       I, $838         ; Load 838 into I
$472    $2119   CALL     $119            ; Call subroutine at 119
$474    $E90F   UNKNOWN  $E90F           ; Unknown Exxx instruction
$476    $3001   SE       V0, #01         ; Skip if V0 == 1
$478    $4A8B   SNE      VA, #8B         ; Skip if VA != 139
$47A    $DCFB   DRW      VC, VF, #B      ; Draw 11-byte sprite at VC, VF
$47C    $F1E8   UNKNOWN  F1E8            ; Unknown Fxxx instruction
$47E    $4752   SNE      V7, #52         ; Skip if V7 != 82
$480    $EDBC   UNKNOWN  $EDBC           ; Unknown Exxx instruction
$482    $16DF   JP       $6DF            ; Jump to 6DF
$484    $FC3F   UNKNOWN  FC3F            ; Unknown Fxxx instruction
$486    $5ACF   UNKNOWN  $5ACF           ; Unknown 5xxx instruction
$488    $8608   UNKNOWN  8608            ; Unknown 8xxx instruction
$48A    $B6E0   JP       V0, $6E0        ; Jump to V0 + 6E0
$48C    $871F   UNKNOWN  871F            ; Unknown 8xxx instruction
$48E    $EB13   UNKNOWN  $EB13           ; Unknown Exxx instruction
$490    $E066   UNKNOWN  $E066           ; Unknown Exxx instruction
$492    $1A5F   JP       $A5F            ; Jump to A5F
$494    $C55B   RND      V5, #5B         ; V5 = random & 5B
$496    $E70E   UNKNOWN  $E70E           ; Unknown Exxx instruction
$498    $7F91   ADD      VF, #91         ; Add 145 to VF
$49A    $E9FE   UNKNOWN  $E9FE           ; Unknown Exxx instruction
$49C    $C7E6   RND      V7, #E6         ; V7 = random & E6
$49E    $BE89   JP       V0, $E89        ; Jump to V0 + E89
$4A0    $BA67   JP       V0, $A67        ; Jump to V0 + A67
$4A2    $E822   UNKNOWN  $E822           ; Unknown Exxx instruction
$4A4    $9E48   UNKNOWN  $9E48           ; Unknown 9xxx instruction
$4A6    $5398   UNKNOWN  $5398           ; Unknown 5xxx instruction
$4A8    $CB14   RND      VB, #14         ; VB = random & 14
$4AA    $07C3   SYS      $7C3            ; System call to 7C3
$4AC    $1418   JP       $418            ; Jump to 418
$4AE    $2E25   CALL     $E25            ; Call subroutine at E25
$4B0    $382F   SE       V8, #2F         ; Skip if V8 == 47
$4B2    $0138   SYS      $138            ; System call to 138
$4B4    $FA55   LD       [I], VA         ; Store V0-VA at I
$4B6    $E1FF   UNKNOWN  $E1FF           ; Unknown Exxx instruction
$4B8    $975F   UNKNOWN  $975F           ; Unknown 9xxx instruction
$4BA    $F844   UNKNOWN  F844            ; Unknown Fxxx instruction
$4BC    $05B0   SYS      $5B0            ; System call to 5B0
$4BE    $10A2   JP       $0A2            ; Jump to 0A2
$4C0    $EAFA   UNKNOWN  $EAFA           ; Unknown Exxx instruction
$4C2    $FE3D   UNKNOWN  FE3D            ; Unknown Fxxx instruction
$4C4    $3BD0   SE       VB, #D0         ; Skip if VB == 208
$4C6    $6A2D   LD       VA, #2D         ; Load 45 into VA
$4C8    $3614   SE       V6, #14         ; Skip if V6 == 20
$4CA    $2AE0   CALL     $AE0            ; Call subroutine at AE0
$4CC    $D934   DRW      V9, V3, #4      ; Draw 4-byte sprite at V9, V3
$4CE    $E92C   UNKNOWN  $E92C           ; Unknown Exxx instruction
$4D0    $08D5   SYS      $8D5            ; System call to 8D5
$4D2    $C147   RND      V1, #47         ; V1 = random & 47
$4D4    $CD19   RND      VD, #19         ; VD = random & 19
$4D6    $B196   JP       V0, $196        ; Jump to V0 + 196
$4D8    $D863   DRW      V8, V6, #3      ; Draw 3-byte sprite at V8, V6
$4DA    $CC4B   RND      VC, #4B         ; VC = random & 4B
$4DC    $76CA   ADD      V6, #CA         ; Add 202 to V6
$4DE    $C744   RND      V7, #44         ; V7 = random & 44
$4E0    $C406   RND      V4, #06         ; V4 = random & 06
$4E2    $140A   JP       $40A            ; Jump to 40A
$4E4    $EA4B   UNKNOWN  $EA4B           ; Unknown Exxx instruction
$4E6    $CC40   RND      VC, #40         ; VC = random & 40
$4E8    $BBEE   JP       V0, $BEE        ; Jump to V0 + BEE
$4EA    $5991   UNKNOWN  $5991           ; Unknown 5xxx instruction
$4EC    $65F2   LD       V5, #F2         ; Load 242 into V5
$4EE    $4882   SNE      V8, #82         ; Skip if V8 != 130
$4F0    $F143   UNKNOWN  F143            ; Unknown Fxxx instruction
$4F2    $F9FB   UNKNOWN  F9FB            ; Unknown Fxxx instruction
$4F4    $A942   LD       I, $942         ; Load 942 into I
$4F6    $28B3   CALL     $8B3            ; Call subroutine at 8B3
$4F8    $D764   DRW      V7, V6, #4      ; Draw 4-byte sprite at V7, V6
$4FA    $8572   AND      V5, V7          ; V5 &= V7
$4FC    $C423   RND      V4, #23         ; V4 = random & 23
$4FE    $4168   SNE      V1, #68         ; Skip if V1 != 104
$500    $0857   SYS      $857            ; System call to 857
$502    $932F   UNKNOWN  $932F           ; Unknown 9xxx instruction
$504    $D86B   DRW      V8, V6, #B      ; Draw 11-byte sprite at V8, V6
$506    $9555   UNKNOWN  $9555           ; Unknown 9xxx instruction
$508    $FAC9   UNKNOWN  FAC9            ; Unknown Fxxx instruction
$50A    $4998   SNE      V9, #98         ; Skip if V9 != 152
$50C    $00AE   SYS      $0AE            ; System call to 0AE
$50E    $0767   SYS      $767            ; System call to 767
$510    $9770   SNE      V7, V7          ; Skip if V7 != V7
$512    $3E86   SE       VE, #86         ; Skip if VE == 134
$514    $CFC8   RND      VF, #C8         ; VF = random & C8
$516    $9E5F   UNKNOWN  $9E5F           ; Unknown 9xxx instruction
$518    $098F   SYS      $98F            ; System call to 98F
$51A    $C1B3   RND      V1, #B3         ; V1 = random & B3
$51C    $673E   LD       V7, #3E         ; Load 62 into V7
$51E    $56E3   UNKNOWN  $56E3           ; Unknown 5xxx instruction
$520    $276C   CALL     $76C            ; Call subroutine at 76C
$522    $2923   CALL     $923            ; Call subroutine at 923
$524    $9EEF   UNKNOWN  $9EEF           ; Unknown 9xxx instruction
$526    $AEA8   LD       I, $EA8         ; Load EA8 into I
$528    $B0A8   JP       V0, $0A8        ; Jump to V0 + 0A8
$52A    $13E5   JP       $3E5            ; Jump to 3E5
$52C    $C019   RND      V0, #19         ; V0 = random & 19
$52E    $E617   UNKNOWN  $E617           ; Unknown Exxx instruction
$530    $1E71   JP       $E71            ; Jump to E71
$532    $E697   UNKNOWN  $E697           ; Unknown Exxx instruction
$534    $09D5   SYS      $9D5            ; System call to 9D5
$536    $6156   LD       V1, #56         ; Load 86 into V1
$538    $AB2D   LD       I, $B2D         ; Load B2D into I
$53A    $EE2E   UNKNOWN  $EE2E           ; Unknown Exxx instruction
$53C    $22A6   CALL     $2A6            ; Call subroutine at 2A6
$53E    $0DC6   SYS      $DC6            ; System call to DC6
$540    $EA86   UNKNOWN  $EA86           ; Unknown Exxx instruction
$542    $73A0   ADD      V3, #A0         ; Add 160 to V3
$544    $23BB   CALL     $3BB            ; Call subroutine at 3BB
$546    $4E0D   SNE      VE, #0D         ; Skip if VE != 13
$548    $D38B   DRW      V3, V8, #B      ; Draw 11-byte sprite at V3, V8
$54A    $B96A   JP       V0, $96A        ; Jump to V0 + 96A
$54C    $77DC   ADD      V7, #DC         ; Add 220 to V7
$54E    $132F   JP       $32F            ; Jump to 32F
$550    $9159   UNKNOWN  $9159           ; Unknown 9xxx instruction
$552    $97CB   UNKNOWN  $97CB           ; Unknown 9xxx instruction
$554    $7D8E   ADD      VD, #8E         ; Add 142 to VD
$556    $76A6   ADD      V6, #A6         ; Add 166 to V6
$558    $5BAD   UNKNOWN  $5BAD           ; Unknown 5xxx instruction
$55A    $93E0   SNE      V3, VE          ; Skip if V3 != VE
$55C    $CD8A   RND      VD, #8A         ; VD = random & 8A
$55E    $B38A   JP       V0, $38A        ; Jump to V0 + 38A
$560    $F466   UNKNOWN  F466            ; Unknown Fxxx instruction
$562    $C491   RND      V4, #91         ; V4 = random & 91
$564    $F10B   UNKNOWN  F10B            ; Unknown Fxxx instruction
$566    $7601   ADD      V6, #01         ; Add 1 to V6
$568    $BD14   JP       V0, $D14        ; Jump to V0 + D14
$56A    $6D2D   LD       VD, #2D         ; Load 45 into VD
$56C    $78AE   ADD      V8, #AE         ; Add 174 to V8
$56E    $A526   LD       I, $526         ; Load 526 into I
$570    $E3CF   UNKNOWN  $E3CF           ; Unknown Exxx instruction
$572    $D449   DRW      V4, V4, #9      ; Draw 9-byte sprite at V4, V4
$574    $D735   DRW      V7, V3, #5      ; Draw 5-byte sprite at V7, V3
$576    $CFE1   RND      VF, #E1         ; VF = random & E1
$578    $4851   SNE      V8, #51         ; Skip if V8 != 81
$57A    $B0F4   JP       V0, $0F4        ; Jump to V0 + 0F4
$57C    $9774   UNKNOWN  $9774           ; Unknown 9xxx instruction
$57E    $F7DC   UNKNOWN  F7DC            ; Unknown Fxxx instruction
$580    $99FA   UNKNOWN  $99FA           ; Unknown 9xxx instruction
$582    $7FAF   ADD      VF, #AF         ; Add 175 to VF
$584    $5340   SE       V3, V4          ; Skip if V3 == V4
$586    $5A0B   UNKNOWN  $5A0B           ; Unknown 5xxx instruction
$588    $19E2   JP       $9E2            ; Jump to 9E2
$58A    $57FF   UNKNOWN  $57FF           ; Unknown 5xxx instruction
$58C    $9690   SNE      V6, V9          ; Skip if V6 != V9
$58E    $F649   UNKNOWN  F649            ; Unknown Fxxx instruction
$590    $1736   JP       $736            ; Jump to 736
$592    $78F0   ADD      V8, #F0         ; Add 240 to V8
$594    $A276   LD       I, $276         ; Load 276 into I
$596    $F296   UNKNOWN  F296            ; Unknown Fxxx instruction
$598    $CFEE   RND      VF, #EE         ; VF = random & EE
$59A    $4862   SNE      V8, #62         ; Skip if V8 != 98
$59C    $53DE   UNKNOWN  $53DE           ; Unknown 5xxx instruction
$59E    $2DEB   CALL     $DEB            ; Call subroutine at DEB
$5A0    $939C   UNKNOWN  $939C           ; Unknown 9xxx instruction
$5A2    $854D   UNKNOWN  854D            ; Unknown 8xxx instruction
$5A4    $B47F   JP       V0, $47F        ; Jump to V0 + 47F
$5A6    $4AE6   SNE      VA, #E6         ; Skip if VA != 230
$5A8    $53D1   UNKNOWN  $53D1           ; Unknown 5xxx instruction
$5AA    $929D   UNKNOWN  $929D           ; Unknown 9xxx instruction
$5AC    $8F4A   UNKNOWN  8F4A            ; Unknown 8xxx instruction
$5AE    $2DB8   CALL     $DB8            ; Call subroutine at DB8
$5B0    $969E   UNKNOWN  $969E           ; Unknown 9xxx instruction
$5B2    $CAB8   RND      VA, #B8         ; VA = random & B8
$5B4    $3E8B   SE       VE, #8B         ; Skip if VE == 139
$5B6    $8DB1   OR       VD, VB          ; VD |= VB
$5B8    $E8BF   UNKNOWN  $E8BF           ; Unknown Exxx instruction
$5BA    $FB16   UNKNOWN  FB16            ; Unknown Fxxx instruction
$5BC    $8956   SHR      V9              ; V9 >>= 1, VF = LSB
$5BE    $FDC2   UNKNOWN  FDC2            ; Unknown Fxxx instruction
$5C0    $148A   JP       $48A            ; Jump to 48A
$5C2    $FBB8   UNKNOWN  FBB8            ; Unknown Fxxx instruction
$5C4    $3DCC   SE       VD, #CC         ; Skip if VD == 204
$5C6    $2262   CALL     $262            ; Call subroutine at 262
$5C8    $CA7D   RND      VA, #7D         ; VA = random & 7D
$5CA    $3C9C   SE       VC, #9C         ; Skip if VC == 156
$5CC    $7FA9   ADD      VF, #A9         ; Add 169 to VF
$5CE    $DD85   DRW      VD, V8, #5      ; Draw 5-byte sprite at VD, V8
$5D0    $F190   UNKNOWN  F190            ; Unknown Fxxx instruction
$5D2    $2F3F   CALL     $F3F            ; Call subroutine at F3F
$5D4    $708A   ADD      V0, #8A         ; Add 138 to V0
$5D6    $0C9A   SYS      $C9A            ; System call to C9A
$5D8    $4D14   SNE      VD, #14         ; Skip if VD != 20
$5DA    $7ED9   ADD      VE, #D9         ; Add 217 to VE
$5DC    $F7B1   UNKNOWN  F7B1            ; Unknown Fxxx instruction
$5DE    $A699   LD       I, $699         ; Load 699 into I
$5E0    $46DF   SNE      V6, #DF         ; Skip if V6 != 223
$5E2    $3303   SE       V3, #03         ; Skip if V3 == 3
$5E4    $DD20   DRW      VD, V2, #0      ; Draw 0-byte sprite at VD, V2
$5E6    $A7C0   LD       I, $7C0         ; Load 7C0 into I
$5E8    $1389   JP       $389            ; Jump to 389
$5EA    $5877   UNKNOWN  $5877           ; Unknown 5xxx instruction
$5EC    $6ED9   LD       VE, #D9         ; Load 217 into VE
$5EE    $6EF9   LD       VE, #F9         ; Load 249 into VE
$5F0    $AFC8   LD       I, $FC8         ; Load FC8 into I
$5F2    $DE32   DRW      VE, V3, #2      ; Draw 2-byte sprite at VE, V3
$5F4    $BD53   JP       V0, $D53        ; Jump to V0 + D53
$5F6    $98A8   UNKNOWN  $98A8           ; Unknown 9xxx instruction
$5F8    $942D   UNKNOWN  $942D           ; Unknown 9xxx instruction
$5FA    $CA82   RND      VA, #82         ; VA = random & 82
$5FC    $8857   SUBN     V8, V5          ; V8 = V5 - V8, VF = !borrow
$5FE    $C1D0   RND      V1, #D0         ; V1 = random & D0
$600    $2131   CALL     $131            ; Call subroutine at 131
$602    $C338   RND      V3, #38         ; V3 = random & 38
$604    $3944   SE       V9, #44         ; Skip if V9 == 68
$606    $A4C7   LD       I, $4C7         ; Load 4C7 into I
$608    $8F4B   UNKNOWN  8F4B            ; Unknown 8xxx instruction
$60A    $D8CF   DRW      V8, VC, #F      ; Draw 15-byte sprite at V8, VC
$60C    $370F   SE       V7, #0F         ; Skip if V7 == 15
$60E    $8380   LD       V3, V8          ; V3 = V8
$610    $BF5B   JP       V0, $F5B        ; Jump to V0 + F5B
$612    $F8C9   UNKNOWN  F8C9            ; Unknown Fxxx instruction
$614    $9F86   UNKNOWN  $9F86           ; Unknown 9xxx instruction
$616    $01B3   SYS      $1B3            ; System call to 1B3
$618    $0215   SYS      $215            ; System call to 215
$61A    $E1C4   UNKNOWN  $E1C4           ; Unknown Exxx instruction
$61C    $84AD   UNKNOWN  84AD            ; Unknown 8xxx instruction
$61E    $CE1E   RND      VE, #1E         ; VE = random & 1E
$620    $0516   SYS      $516            ; System call to 516
$622    $2CF6   CALL     $CF6            ; Call subroutine at CF6
$624    $7A2E   ADD      VA, #2E         ; Add 46 to VA
$626    $497F   SNE      V9, #7F         ; Skip if V9 != 127
$628    $0BBB   SYS      $BBB            ; System call to BBB
$62A    $73E2   ADD      V3, #E2         ; Add 226 to V3
$62C    $29CE   CALL     $9CE            ; Call subroutine at 9CE
$62E    $78A4   ADD      V8, #A4         ; Add 164 to V8
$630    $FDA7   UNKNOWN  FDA7            ; Unknown Fxxx instruction
$632    $08B3   SYS      $8B3            ; System call to 8B3
$634    $528F   UNKNOWN  $528F           ; Unknown 5xxx instruction
$636    $C2B1   RND      V2, #B1         ; V2 = random & B1
$638    $26D0   CALL     $6D0            ; Call subroutine at 6D0
$63A    $30DB   SE       V0, #DB         ; Skip if V0 == 219
$63C    $E05F   UNKNOWN  $E05F           ; Unknown Exxx instruction
$63E    $9CD8   UNKNOWN  $9CD8           ; Unknown 9xxx instruction
$640    $87E8   UNKNOWN  87E8            ; Unknown 8xxx instruction
$642    $34C2   SE       V4, #C2         ; Skip if V4 == 194
$644    $3C2C   SE       VC, #2C         ; Skip if VC == 44
$646    $9B93   UNKNOWN  $9B93           ; Unknown 9xxx instruction
$648    $19D3   JP       $9D3            ; Jump to 9D3
$64A    $AC02   LD       I, $C02         ; Load C02 into I
$64C    $A22B   LD       I, $22B         ; Load 22B into I
$64E    $3526   SE       V5, #26         ; Skip if V5 == 38
$650    $B3DC   JP       V0, $3DC        ; Jump to V0 + 3DC
$652    $B7FF   JP       V0, $7FF        ; Jump to V0 + 7FF
$654    $DF71   DRW      VF, V7, #1      ; Draw 1-byte sprite at VF, V7
$656    $1F83   JP       $F83            ; Jump to F83
$658    $E26C   UNKNOWN  $E26C           ; Unknown Exxx instruction
$65A    $6F1D   LD       VF, #1D         ; Load 29 into VF
$65C    $9006   UNKNOWN  $9006           ; Unknown 9xxx instruction
$65E    $AD8B   LD       I, $D8B         ; Load D8B into I
$660    $DBBD   DRW      VB, VB, #D      ; Draw 13-byte sprite at VB, VB
$662    $5E67   UNKNOWN  $5E67           ; Unknown 5xxx instruction
$664    $B485   JP       V0, $485        ; Jump to V0 + 485
$666    $A8A8   LD       I, $8A8         ; Load 8A8 into I
$668    $C96C   RND      V9, #6C         ; V9 = random & 6C
$66A    $9297   UNKNOWN  $9297           ; Unknown 9xxx instruction
$66C    $CCC6   RND      VC, #C6         ; VC = random & C6
$66E    $3AF7   SE       VA, #F7         ; Skip if VA == 247
$670    $EE2A   UNKNOWN  $EE2A           ; Unknown Exxx instruction
$672    $A3B1   LD       I, $3B1         ; Load 3B1 into I
$674    $BDB2   JP       V0, $DB2        ; Jump to V0 + DB2
$676    $7652   ADD      V6, #52         ; Add 82 to V6
$678    $9055   UNKNOWN  $9055           ; Unknown 9xxx instruction
$67A    $C664   RND      V6, #64         ; V6 = random & 64
$67C    $8BC6   SHR      VB              ; VB >>= 1, VF = LSB
$67E    $EC8A   UNKNOWN  $EC8A           ; Unknown Exxx instruction
$680    $A089   LD       I, $089         ; Load 089 into I
$682    $A43C   LD       I, $43C         ; Load 43C into I
$684    $F941   UNKNOWN  F941            ; Unknown Fxxx instruction
$686    $6D22   LD       VD, #22         ; Load 34 into VD
$688    $8DE3   XOR      VD, VE          ; VD ^= VE
$68A    $8460   LD       V4, V6          ; V4 = V6
$68C    $46B7   SNE      V6, #B7         ; Skip if V6 != 183
$68E    $314C   SE       V1, #4C         ; Skip if V1 == 76
$690    $4B66   SNE      VB, #66         ; Skip if VB != 102
$692    $DE8C   DRW      VE, V8, #C      ; Draw 12-byte sprite at VE, V8
$694    $29C8   CALL     $9C8            ; Call subroutine at 9C8
$696    $DABD   DRW      VA, VB, #D      ; Draw 13-byte sprite at VA, VB
$698    $9071   UNKNOWN  $9071           ; Unknown 9xxx instruction
$69A    $4B3E   SNE      VB, #3E         ; Skip if VB != 62
$69C    $2E69   CALL     $E69            ; Call subroutine at E69
$69E    $A0A6   LD       I, $0A6         ; Load 0A6 into I
$6A0    $D708   DRW      V7, V0, #8      ; Draw 8-byte sprite at V7, V0
$6A2    $68D4   LD       V8, #D4         ; Load 212 into V8
$6A4    $C3B9   RND      V3, #B9         ; V3 = random & B9
$6A6    $2E8F   CALL     $E8F            ; Call subroutine at E8F
$6A8    $EA83   UNKNOWN  $EA83           ; Unknown Exxx instruction
$6AA    $E76D   UNKNOWN  $E76D           ; Unknown Exxx instruction
$6AC    $2824   CALL     $824            ; Call subroutine at 824
$6AE    $560A   UNKNOWN  $560A           ; Unknown 5xxx instruction
$6B0    $F296   UNKNOWN  F296            ; Unknown Fxxx instruction
$6B2    $7FA0   ADD      VF, #A0         ; Add 160 to VF
$6B4    $0427   SYS      $427            ; System call to 427
$6B6    $62E4   LD       V2, #E4         ; Load 228 into V2
$6B8    $B616   JP       V0, $616        ; Jump to V0 + 616
$6BA    $F528   UNKNOWN  F528            ; Unknown Fxxx instruction
$6BC    $2735   CALL     $735            ; Call subroutine at 735
$6BE    $8979   UNKNOWN  8979            ; Unknown 8xxx instruction
$6C0    $8FA8   UNKNOWN  8FA8            ; Unknown 8xxx instruction
$6C2    $CDC3   RND      VD, #C3         ; VD = random & C3
$6C4    $3C47   SE       VC, #47         ; Skip if VC == 71
$6C6    $0767   SYS      $767            ; System call to 767
$6C8    $FEA5   UNKNOWN  FEA5            ; Unknown Fxxx instruction
$6CA    $16A8   JP       $6A8            ; Jump to 6A8
$6CC    $2E08   CALL     $E08            ; Call subroutine at E08
$6CE    $B0CF   JP       V0, $0CF        ; Jump to V0 + 0CF
$6D0    $810C   UNKNOWN  810C            ; Unknown 8xxx instruction
$6D2    $133C   JP       $33C            ; Jump to 33C
$6D4    $1098   JP       $098            ; Jump to 098
$6D6    $18AC   JP       $8AC            ; Jump to 8AC
$6D8    $6931   LD       V9, #31         ; Load 49 into V9
$6DA    $F61B   UNKNOWN  F61B            ; Unknown Fxxx instruction
$6DC    $AAF7   LD       I, $AF7         ; Load AF7 into I
$6DE    $D318   DRW      V3, V1, #8      ; Draw 8-byte sprite at V3, V1
$6E0    $12CC   JP       $2CC            ; Jump to 2CC
$6E2    $8121   OR       V1, V2          ; V1 |= V2
$6E4    $BCE9   JP       V0, $CE9        ; Jump to V0 + CE9
$6E6    $2556   CALL     $556            ; Call subroutine at 556
$6E8    $AA5B   LD       I, $A5B         ; Load A5B into I
$6EA    $4A7E   SNE      VA, #7E         ; Skip if VA != 126
$6EC    $282C   CALL     $82C            ; Call subroutine at 82C
$6EE    $AF5E   LD       I, $F5E         ; Load F5E into I
$6F0    $BCF9   JP       V0, $CF9        ; Jump to V0 + CF9
$6F2    $DEDE   DRW      VE, VD, #E      ; Draw 14-byte sprite at VE, VD
$6F4    $571D   UNKNOWN  $571D           ; Unknown 5xxx instruction
$6F6    $5636   UNKNOWN  $5636           ; Unknown 5xxx instruction
$6F8    $6120   LD       V1, #20         ; Load 32 into V1
$6FA    $64B2   LD       V4, #B2         ; Load 178 into V4
$6FC    $76D1   ADD      V6, #D1         ; Add 209 to V6
$6FE    $DDC6   DRW      VD, VC, #6      ; Draw 6-byte sprite at VD, VC
$700    $AF53   LD       I, $F53         ; Load F53 into I
$702    $ED29   UNKNOWN  $ED29           ; Unknown Exxx instruction
$704    $C49D   RND      V4, #9D         ; V4 = random & 9D
$706    $C6B6   RND      V6, #B6         ; V6 = random & B6
$708    $7D77   ADD      VD, #77         ; Add 119 to VD
$70A    $6FE4   LD       VF, #E4         ; Load 228 into VF
$70C    $A409   LD       I, $409         ; Load 409 into I
$70E    $15E1   JP       $5E1            ; Jump to 5E1
$710    $0530   SYS      $530            ; System call to 530
$712    $C1BC   RND      V1, #BC         ; V1 = random & BC
$714    $BF0A   JP       V0, $F0A        ; Jump to V0 + F0A
$716    $980C   UNKNOWN  $980C           ; Unknown 9xxx instruction
$718    $9C56   UNKNOWN  $9C56           ; Unknown 9xxx instruction
$71A    $E7F3   UNKNOWN  $E7F3           ; Unknown Exxx instruction
$71C    $9E96   UNKNOWN  $9E96           ; Unknown 9xxx instruction
$71E    $A0EA   LD       I, $0EA         ; Load 0EA into I
$720    $08D0   SYS      $8D0            ; System call to 8D0
$722    $4917   SNE      V9, #17         ; Skip if V9 != 23
$724    $3731   SE       V7, #31         ; Skip if V7 == 49
$726    $421A   SNE      V2, #1A         ; Skip if V2 != 26
$728    $CE6B   RND      VE, #6B         ; VE = random & 6B
$72A    $E175   UNKNOWN  $E175           ; Unknown Exxx instruction
$72C    $24EF   CALL     $4EF            ; Call subroutine at 4EF
$72E    $43DA   SNE      V3, #DA         ; Skip if V3 != 218
$730    $8F0A   UNKNOWN  8F0A            ; Unknown 8xxx instruction
$732    $49D2   SNE      V9, #D2         ; Skip if V9 != 210
$734    $1F50   JP       $F50            ; Jump to F50
$736    $5ADE   UNKNOWN  $5ADE           ; Unknown 5xxx instruction
$738    $41BC   SNE      V1, #BC         ; Skip if V1 != 188
$73A    $6B32   LD       VB, #32         ; Load 50 into VB
$73C    $E4D4   UNKNOWN  $E4D4           ; Unknown Exxx instruction
$73E    $026A   SYS      $26A            ; System call to 26A
$740    $2A37   CALL     $A37            ; Call subroutine at A37
$742    $04D8   SYS      $4D8            ; System call to 4D8
$744    $2D1A   CALL     $D1A            ; Call subroutine at D1A
$746    $4016   SNE      V0, #16         ; Skip if V0 != 22
$748    $A1EB   LD       I, $1EB         ; Load 1EB into I
$74A    $C063   RND      V0, #63         ; V0 = random & 63
$74C    $9645   UNKNOWN  $9645           ; Unknown 9xxx instruction
$74E    $633B   LD       V3, #3B         ; Load 59 into V3
$750    $784B   ADD      V8, #4B         ; Add 75 to V8
$752    $8422   AND      V4, V2          ; V4 &= V2
$754    $6142   LD       V1, #42         ; Load 66 into V1
$756    $994C   UNKNOWN  $994C           ; Unknown 9xxx instruction
$758    $BEF0   JP       V0, $EF0        ; Jump to V0 + EF0
$75A    $4124   SNE      V1, #24         ; Skip if V1 != 36
$75C    $EFD0   UNKNOWN  $EFD0           ; Unknown Exxx instruction
$75E    $004C   SYS      $04C            ; System call to 04C
$760    $DFAE   DRW      VF, VA, #E      ; Draw 14-byte sprite at VF, VA
$762    $62EB   LD       V2, #EB         ; Load 235 into V2
$764    $9A18   UNKNOWN  $9A18           ; Unknown 9xxx instruction
$766    $7BDA   ADD      VB, #DA         ; Add 218 to VB
$768    $17DE   JP       $7DE            ; Jump to 7DE
$76A    $FF25   UNKNOWN  FF25            ; Unknown Fxxx instruction
$76C    $8EFB   UNKNOWN  8EFB            ; Unknown 8xxx instruction
$76E    $31FA   SE       V1, #FA         ; Skip if V1 == 250
$770    $2E6B   CALL     $E6B            ; Call subroutine at E6B
$772    $B88A   JP       V0, $88A        ; Jump to V0 + 88A
$774    $4AE3   SNE      VA, #E3         ; Skip if VA != 227
$776    $F2D2   UNKNOWN  F2D2            ; Unknown Fxxx instruction
$778    $F0A4   UNKNOWN  F0A4            ; Unknown Fxxx instruction
$77A    $E545   UNKNOWN  $E545           ; Unknown Exxx instruction
$77C    $DE3E   DRW      VE, V3, #E      ; Draw 14-byte sprite at VE, V3
$77E    $0A74   SYS      $A74            ; System call to A74
$780    $E983   UNKNOWN  $E983           ; Unknown Exxx instruction
$782    $8224   ADD      V2, V2          ; V2 += V2, VF = carry
$784    $7073   ADD      V0, #73         ; Add 115 to V0
$786    $BD5D   JP       V0, $D5D        ; Jump to V0 + D5D
$788    $C511   RND      V5, #11         ; V5 = random & 11
$78A    $501D   UNKNOWN  $501D           ; Unknown 5xxx instruction
$78C    $63A2   LD       V3, #A2         ; Load 162 into V3
$78E    $A203   LD       I, $203         ; Load 203 into I
$790    $BBE4   JP       V0, $BE4        ; Jump to V0 + BE4
$792    $B4BA   JP       V0, $4BA        ; Jump to V0 + 4BA
$794    $A39A   LD       I, $39A         ; Load 39A into I
$796    $9D64   UNKNOWN  $9D64           ; Unknown 9xxx instruction
$798    $027E   SYS      $27E            ; System call to 27E
$79A    $725C   ADD      V2, #5C         ; Add 92 to V2
$79C    $B3C7   JP       V0, $3C7        ; Jump to V0 + 3C7
$79E    $317E   SE       V1, #7E         ; Skip if V1 == 126
$7A0    $F9AB   UNKNOWN  F9AB            ; Unknown Fxxx instruction
$7A2    $E0CB   UNKNOWN  $E0CB           ; Unknown Exxx instruction
$7A4    $05F7   SYS      $5F7            ; System call to 5F7
$7A6    $F9A7   UNKNOWN  F9A7            ; Unknown Fxxx instruction
$7A8    $EA08   UNKNOWN  $EA08           ; Unknown Exxx instruction
$7AA    $4D0B   SNE      VD, #0B         ; Skip if VD != 11
$7AC    $C9F1   RND      V9, #F1         ; V9 = random & F1
$7AE    $BE64   JP       V0, $E64        ; Jump to V0 + E64
$7B0    $86CE   SHL      V6              ; V6 <<= 1, VF = MSB
$7B2    $1EF2   JP       $EF2            ; Jump to EF2
$7B4    $8EAE   SHL      VE              ; VE <<= 1, VF = MSB
$7B6    $4DFF   SNE      VD, #FF         ; Skip if VD != 255
$7B8    $839E   SHL      V3              ; V3 <<= 1, VF = MSB
$7BA    $FFBB   UNKNOWN  FFBB            ; Unknown Fxxx instruction
$7BC    $98ED   UNKNOWN  $98ED           ; Unknown 9xxx instruction
$7BE    $E87B   UNKNOWN  $E87B           ; Unknown Exxx instruction
$7C0    $27AC   CALL     $7AC            ; Call subroutine at 7AC
$7C2    $CFA1   RND      VF, #A1         ; VF = random & A1
$7C4    $4A6E   SNE      VA, #6E         ; Skip if VA != 110
$7C6    $1922   JP       $922            ; Jump to 922
$7C8    $2FEE   CALL     $FEE            ; Call subroutine at FEE
$7CA    $0B87   SYS      $B87            ; System call to B87
$7CC    $10DD   JP       $0DD            ; Jump to 0DD
$7CE    $13D2   JP       $3D2            ; Jump to 3D2
$7D0    $212A   CALL     $12A            ; Call subroutine at 12A
$7D2    $1097   JP       $097            ; Jump to 097
$7D4    $CC4B   RND      VC, #4B         ; VC = random & 4B
$7D6    $7EB4   ADD      VE, #B4         ; Add 180 to VE
$7D8    $77E5   ADD      V7, #E5         ; Add 229 to V7
$7DA    $7F36   ADD      VF, #36         ; Add 54 to VF
$7DC    $1C6F   JP       $C6F            ; Jump to C6F
$7DE    $DC60   DRW      VC, V6, #0      ; Draw 0-byte sprite at VC, V6
$7E0    $387C   SE       V8, #7C         ; Skip if V8 == 124
$7E2    $8AE9   UNKNOWN  8AE9            ; Unknown 8xxx instruction
$7E4    $726D   ADD      V2, #6D         ; Add 109 to V2
$7E6    $C443   RND      V4, #43         ; V4 = random & 43
$7E8    $7F18   ADD      VF, #18         ; Add 24 to VF
$7EA    $DE78   DRW      VE, V7, #8      ; Draw 8-byte sprite at VE, V7
$7EC    $ED45   UNKNOWN  $ED45           ; Unknown Exxx instruction
$7EE    $CCD1   RND      VC, #D1         ; VC = random & D1
$7F0    $FC29   LD       F, VC           ; I = sprite address for digit VC
$7F2    $7E49   ADD      VE, #49         ; Add 73 to VE
$7F4    $FFAB   UNKNOWN  FFAB            ; Unknown Fxxx instruction
$7F6    $F45C   UNKNOWN  F45C            ; Unknown Fxxx instruction
$7F8    $7173   ADD      V1, #73         ; Add 115 to V1
$7FA    $B444   JP       V0, $444        ; Jump to V0 + 444
$7FC    $B359   JP       V0, $359        ; Jump to V0 + 359
$7FE    $75C4   ADD      V5, #C4         ; Add 196 to V5
$800    $4397   SNE      V3, #97         ; Skip if V3 != 151
$802    $0538   SYS      $538            ; System call to 538
$804    $243F   CALL     $43F            ; Call subroutine at 43F
$806    $A16D   LD       I, $16D         ; Load 16D into I
$808    $5857   UNKNOWN  $5857           ; Unknown 5xxx instruction
$80A    $66DE   LD       V6, #DE         ; Load 222 into V6
$80C    $2D50   CALL     $D50            ; Call subroutine at D50
$80E    $0A64   SYS      $A64            ; System call to A64
$810    $A19C   LD       I, $19C         ; Load 19C into I
$812    $0CBD   SYS      $CBD            ; System call to CBD
$814    $DA4E   DRW      VA, V4, #E      ; Draw 14-byte sprite at VA, V4
$816    $92CC   UNKNOWN  $92CC           ; Unknown 9xxx instruction
$818    $8288   UNKNOWN  8288            ; Unknown 8xxx instruction
$81A    $FD3D   UNKNOWN  FD3D            ; Unknown Fxxx instruction
$81C    $120C   JP       $20C            ; Jump to 20C
$81E    $5A53   UNKNOWN  $5A53           ; Unknown 5xxx instruction
$820    $CADF   RND      VA, #DF         ; VA = random & DF
$822    $4DBA   SNE      VD, #BA         ; Skip if VD != 186
$824    $9BD1   UNKNOWN  $9BD1           ; Unknown 9xxx instruction
$826    $9E64   UNKNOWN  $9E64           ; Unknown 9xxx instruction
$828    $2111   CALL     $111            ; Call subroutine at 111
$82A    $B696   JP       V0, $696        ; Jump to V0 + 696
$82C    $863A   UNKNOWN  863A            ; Unknown 8xxx instruction
$82E    $599E   UNKNOWN  $599E           ; Unknown 5xxx instruction
$830    $1AB3   JP       $AB3            ; Jump to AB3
$832    $BD19   JP       V0, $D19        ; Jump to V0 + D19
$834    $B977   JP       V0, $977        ; Jump to V0 + 977
$836    $C550   RND      V5, #50         ; V5 = random & 50
$838    $DEF1   DRW      VE, VF, #1      ; Draw 1-byte sprite at VE, VF
$83A    $3246   SE       V2, #46         ; Skip if V2 == 70
$83C    $25B0   CALL     $5B0            ; Call subroutine at 5B0
$83E    $F0AA   UNKNOWN  F0AA            ; Unknown Fxxx instruction
$840    $34DB   SE       V4, #DB         ; Skip if V4 == 219
$842    $17FD   JP       $7FD            ; Jump to 7FD
$844    $9FE5   UNKNOWN  $9FE5           ; Unknown 9xxx instruction
$846    $CACA   RND      VA, #CA         ; VA = random & CA
$848    $4F93   SNE      VF, #93         ; Skip if VF != 147
$84A    $826C   UNKNOWN  826C            ; Unknown 8xxx instruction
$84C    $46C1   SNE      V6, #C1         ; Skip if V6 != 193
$84E    $5BAE   UNKNOWN  $5BAE           ; Unknown 5xxx instruction
$850    $EE3D   UNKNOWN  $EE3D           ; Unknown Exxx instruction
$852    $AC03   LD       I, $C03         ; Load C03 into I
$854    $47CF   SNE      V7, #CF         ; Skip if V7 != 207
$856    $4EB7   SNE      VE, #B7         ; Skip if VE != 183
$858    $8413   XOR      V4, V1          ; V4 ^= V1
$85A    $1A47   JP       $A47            ; Jump to A47
$85C    $63F2   LD       V3, #F2         ; Load 242 into V3
$85E    $E2FF   UNKNOWN  $E2FF           ; Unknown Exxx instruction
$860    $A68F   LD       I, $68F         ; Load 68F into I
$862    $D230   DRW      V2, V3, #0      ; Draw 0-byte sprite at V2, V3
$864    $E406   UNKNOWN  $E406           ; Unknown Exxx instruction
$866    $BA05   JP       V0, $A05        ; Jump to V0 + A05
$868    $5858   UNKNOWN  $5858           ; Unknown 5xxx instruction
$86A    $50CF   UNKNOWN  $50CF           ; Unknown 5xxx instruction
$86C    $926E   UNKNOWN  $926E           ; Unknown 9xxx instruction
$86E    $ED48   UNKNOWN  $ED48           ; Unknown Exxx instruction
$870    $2984   CALL     $984            ; Call subroutine at 984
$872    $06B2   SYS      $6B2            ; System call to 6B2
$874    $C6DA   RND      V6, #DA         ; V6 = random & DA
$876    $248C   CALL     $48C            ; Call subroutine at 48C
$878    $F0AB   UNKNOWN  F0AB            ; Unknown Fxxx instruction
$87A    $B11C   JP       V0, $11C        ; Jump to V0 + 11C
$87C    $8056   SHR      V0              ; V0 >>= 1, VF = LSB
$87E    $1D68   JP       $D68            ; Jump to D68
$880    $C448   RND      V4, #48         ; V4 = random & 48
$882    $BB15   JP       V0, $B15        ; Jump to V0 + B15
$884    $4A0C   SNE      VA, #0C         ; Skip if VA != 12
$886    $79E8   ADD      V9, #E8         ; Add 232 to V9
$888    $C1B2   RND      V1, #B2         ; V1 = random & B2
$88A    $DE6D   DRW      VE, V6, #D      ; Draw 13-byte sprite at VE, V6
$88C    $A163   LD       I, $163         ; Load 163 into I
$88E    $203B   CALL     $03B            ; Call subroutine at 03B
$890    $68C2   LD       V8, #C2         ; Load 194 into V8
$892    $1A5D   JP       $A5D            ; Jump to A5D
$894    $3378   SE       V3, #78         ; Skip if V3 == 120
$896    $03CC   SYS      $3CC            ; System call to 3CC
$898    $D09B   DRW      V0, V9, #B      ; Draw 11-byte sprite at V0, V9
$89A    $B1C2   JP       V0, $1C2        ; Jump to V0 + 1C2
$89C    $D696   DRW      V6, V9, #6      ; Draw 6-byte sprite at V6, V9
$89E    $A4AC   LD       I, $4AC         ; Load 4AC into I
$8A0    $0D9D   SYS      $D9D            ; System call to D9D
$8A2    $2093   CALL     $093            ; Call subroutine at 093
$8A4    $1632   JP       $632            ; Jump to 632
$8A6    $E592   UNKNOWN  $E592           ; Unknown Exxx instruction
$8A8    $D74F   DRW      V7, V4, #F      ; Draw 15-byte sprite at V7, V4
$8AA    $51CB   UNKNOWN  $51CB           ; Unknown 5xxx instruction
$8AC    $FCF6   UNKNOWN  FCF6            ; Unknown Fxxx instruction
$8AE    $1152   JP       $152            ; Jump to 152
$8B0    $0C96   SYS      $C96            ; System call to C96
$8B2    $F86C   UNKNOWN  F86C            ; Unknown Fxxx instruction
$8B4    $69FF   LD       V9, #FF         ; Load 255 into V9
$8B6    $5D25   UNKNOWN  $5D25           ; Unknown 5xxx instruction
$8B8    $F278   UNKNOWN  F278            ; Unknown Fxxx instruction
$8BA    $1B04   JP       $B04            ; Jump to B04
$8BC    $E69A   UNKNOWN  $E69A           ; Unknown Exxx instruction
$8BE    $39F3   SE       V9, #F3         ; Skip if V9 == 243
$8C0    $1172   JP       $172            ; Jump to 172
$8C2    $81D7   SUBN     V1, VD          ; V1 = VD - V1, VF = !borrow
$8C4    $0229   SYS      $229            ; System call to 229
$8C6    $B760   JP       V0, $760        ; Jump to V0 + 760
$8C8    $EAC8   UNKNOWN  $EAC8           ; Unknown Exxx instruction
$8CA    $D167   DRW      V1, V6, #7      ; Draw 7-byte sprite at V1, V6
$8CC    $5751   UNKNOWN  $5751           ; Unknown 5xxx instruction
$8CE    $8E9E   SHL      VE              ; VE <<= 1, VF = MSB
$8D0    $2453   CALL     $453            ; Call subroutine at 453
$8D2    $75CA   ADD      V5, #CA         ; Add 202 to V5
$8D4    $33AC   SE       V3, #AC         ; Skip if V3 == 172
$8D6    $40B2   SNE      V0, #B2         ; Skip if V0 != 178
$8D8    $7A1D   ADD      VA, #1D         ; Add 29 to VA
$8DA    $4BFF   SNE      VB, #FF         ; Skip if VB != 255
$8DC    $32E1   SE       V2, #E1         ; Skip if V2 == 225
$8DE    $9689   UNKNOWN  $9689           ; Unknown 9xxx instruction
$8E0    $D208   DRW      V2, V0, #8      ; Draw 8-byte sprite at V2, V0
$8E2    $1A3F   JP       $A3F            ; Jump to A3F
$8E4    $4F72   SNE      VF, #72         ; Skip if VF != 114
$8E6    $909C   UNKNOWN  $909C           ; Unknown 9xxx instruction
$8E8    $DAB9   DRW      VA, VB, #9      ; Draw 9-byte sprite at VA, VB
$8EA    $A3AB   LD       I, $3AB         ; Load 3AB into I
$8EC    $4D9A   SNE      VD, #9A         ; Skip if VD != 154
$8EE    $0453   SYS      $453            ; System call to 453
$8F0    $6E7B   LD       VE, #7B         ; Load 123 into VE
$8F2    $6A45   LD       VA, #45         ; Load 69 into VA
$8F4    $347C   SE       V4, #7C         ; Skip if V4 == 124
$8F6    $B316   JP       V0, $316        ; Jump to V0 + 316
$8F8    $F391   UNKNOWN  F391            ; Unknown Fxxx instruction
$8FA    $68FB   LD       V8, #FB         ; Load 251 into V8
$8FC    $97D7   UNKNOWN  $97D7           ; Unknown 9xxx instruction
$8FE    $5201   UNKNOWN  $5201           ; Unknown 5xxx instruction
$900    $C72E   RND      V7, #2E         ; V7 = random & 2E
$902    $8A27   SUBN     VA, V2          ; VA = V2 - VA, VF = !borrow
$904    $CFA4   RND      VF, #A4         ; VF = random & A4
$906    $89CD   UNKNOWN  89CD            ; Unknown 8xxx instruction
$908    $E42E   UNKNOWN  $E42E           ; Unknown Exxx instruction
$90A    $226D   CALL     $26D            ; Call subroutine at 26D
$90C    $C29C   RND      V2, #9C         ; V2 = random & 9C
$90E    $F033   LD       B, V0           ; Store BCD of V0 at I, I+1, I+2
$910    $32CC   SE       V2, #CC         ; Skip if V2 == 204
$912    $93F8   UNKNOWN  $93F8           ; Unknown 9xxx instruction
$914    $B2F5   JP       V0, $2F5        ; Jump to V0 + 2F5
$916    $AC53   LD       I, $C53         ; Load C53 into I
$918    $CA2A   RND      VA, #2A         ; VA = random & 2A
$91A    $DAA0   DRW      VA, VA, #0      ; Draw 0-byte sprite at VA, VA
$91C    $55FD   UNKNOWN  $55FD           ; Unknown 5xxx instruction
$91E    $ED70   UNKNOWN  $ED70           ; Unknown Exxx instruction
$920    $0841   SYS      $841            ; System call to 841
$922    $D87E   DRW      V8, V7, #E      ; Draw 14-byte sprite at V8, V7
$924    $156E   JP       $56E            ; Jump to 56E
$926    $1771   JP       $771            ; Jump to 771
$928    $F5DC   UNKNOWN  F5DC            ; Unknown Fxxx instruction
$92A    $857E   SHL      V5              ; V5 <<= 1, VF = MSB
$92C    $6D12   LD       VD, #12         ; Load 18 into VD
$92E    $EE3E   UNKNOWN  $EE3E           ; Unknown Exxx instruction
$930    $7A3D   ADD      VA, #3D         ; Add 61 to VA
$932    $E2EA   UNKNOWN  $E2EA           ; Unknown Exxx instruction
$934    $46C3   SNE      V6, #C3         ; Skip if V6 != 195
$936    $3B9F   SE       VB, #9F         ; Skip if VB == 159
$938    $6E34   LD       VE, #34         ; Load 52 into VE
$93A    $BB44   JP       V0, $B44        ; Jump to V0 + B44
$93C    $8559   UNKNOWN  8559            ; Unknown 8xxx instruction
$93E    $BFEE   JP       V0, $FEE        ; Jump to V0 + FEE
$940    $61DF   LD       V1, #DF         ; Load 223 into V1
$942    $31D2   SE       V1, #D2         ; Skip if V1 == 210
$944    $3EE8   SE       VE, #E8         ; Skip if VE == 232
$946    $6722   LD       V7, #22         ; Load 34 into V7
$948    $F4D3   UNKNOWN  F4D3            ; Unknown Fxxx instruction
$94A    $14AE   JP       $4AE            ; Jump to 4AE
$94C    $5EEE   UNKNOWN  $5EEE           ; Unknown 5xxx instruction
$94E    $E08B   UNKNOWN  $E08B           ; Unknown Exxx instruction
$950    $529C   UNKNOWN  $529C           ; Unknown 5xxx instruction
$952    $F5BB   UNKNOWN  F5BB            ; Unknown Fxxx instruction
$954    $39ED   SE       V9, #ED         ; Skip if V9 == 237
$956    $E3F9   UNKNOWN  $E3F9           ; Unknown Exxx instruction
$958    $B5EC   JP       V0, $5EC        ; Jump to V0 + 5EC
$95A    $200E   CALL     $00E            ; Call subroutine at 00E
$95C    $338B   SE       V3, #8B         ; Skip if V3 == 139
$95E    $A0CB   LD       I, $0CB         ; Load 0CB into I
$960    $FCD0   UNKNOWN  FCD0            ; Unknown Fxxx instruction
$962    $0507   SYS      $507            ; System call to 507
$964    $1382   JP       $382            ; Jump to 382
$966    $72AB   ADD      V2, #AB         ; Add 171 to V2
$968    $AFA5   LD       I, $FA5         ; Load FA5 into I
$96A    $2B93   CALL     $B93            ; Call subroutine at B93
$96C    $0416   SYS      $416            ; System call to 416
$96E    $0536   SYS      $536            ; System call to 536
$970    $B23F   JP       V0, $23F        ; Jump to V0 + 23F
$972    $941A   UNKNOWN  $941A           ; Unknown 9xxx instruction
$974    $1618   JP       $618            ; Jump to 618
$976    $93BB   UNKNOWN  $93BB           ; Unknown 9xxx instruction
$978    $0530   SYS      $530            ; System call to 530
$97A    $E1A2   UNKNOWN  $E1A2           ; Unknown Exxx instruction
$97C    $872B   UNKNOWN  872B            ; Unknown 8xxx instruction
$97E    $F0D3   UNKNOWN  F0D3            ; Unknown Fxxx instruction
$980    $EC3D   UNKNOWN  $EC3D           ; Unknown Exxx instruction
$982    $BAC4   JP       V0, $AC4        ; Jump to V0 + AC4
$984    $0F51   SYS      $F51            ; System call to F51
$986    $3292   SE       V2, #92         ; Skip if V2 == 146
$988    $E442   UNKNOWN  $E442           ; Unknown Exxx instruction
$98A    $2DE3   CALL     $DE3            ; Call subroutine at DE3
$98C    $3105   SE       V1, #05         ; Skip if V1 == 5
$98E    $7AE0   ADD      VA, #E0         ; Add 224 to VA
$990    $CD69   RND      VD, #69         ; VD = random & 69
$992    $F272   UNKNOWN  F272            ; Unknown Fxxx instruction
$994    $B824   JP       V0, $824        ; Jump to V0 + 824
$996    $7FA0   ADD      VF, #A0         ; Add 160 to VF
$998    $1FBD   JP       $FBD            ; Jump to FBD
$99A    $4B98   SNE      VB, #98         ; Skip if VB != 152
$99C    $6549   LD       V5, #49         ; Load 73 into V5
$99E    $80F1   OR       V0, VF          ; V0 |= VF
$9A0    $004F   SYS      $04F            ; System call to 04F
$9A2    $36C4   SE       V6, #C4         ; Skip if V6 == 196
$9A4    $AD8A   LD       I, $D8A         ; Load D8A into I
$9A6    $E999   UNKNOWN  $E999           ; Unknown Exxx instruction
$9A8    $2CDA   CALL     $CDA            ; Call subroutine at CDA
$9AA    $7726   ADD      V7, #26         ; Add 38 to V7
$9AC    $F6A2   UNKNOWN  F6A2            ; Unknown Fxxx instruction
$9AE    $1A1B   JP       $A1B            ; Jump to A1B
$9B0    $689D   LD       V8, #9D         ; Load 157 into V8
$9B2    $539B   UNKNOWN  $539B           ; Unknown 5xxx instruction
$9B4    $B15D   JP       V0, $15D        ; Jump to V0 + 15D
$9B6    $2FF2   CALL     $FF2            ; Call subroutine at FF2
$9B8    $4799   SNE      V7, #99         ; Skip if V7 != 153
$9BA    $E64A   UNKNOWN  $E64A           ; Unknown Exxx instruction
$9BC    $A18A   LD       I, $18A         ; Load 18A into I
$9BE    $5750   SE       V7, V5          ; Skip if V7 == V5
$9C0    $124F   JP       $24F            ; Jump to 24F
$9C2    $5157   UNKNOWN  $5157           ; Unknown 5xxx instruction
$9C4    $C4B9   RND      V4, #B9         ; V4 = random & B9
$9C6    $DCE2   DRW      VC, VE, #2      ; Draw 2-byte sprite at VC, VE
$9C8    $6ABD   LD       VA, #BD         ; Load 189 into VA
$9CA    $4F54   SNE      VF, #54         ; Skip if VF != 84
$9CC    $F8A8   UNKNOWN  F8A8            ; Unknown Fxxx instruction
$9CE    $3CB3   SE       VC, #B3         ; Skip if VC == 179
$9D0    $20D7   CALL     $0D7            ; Call subroutine at 0D7
$9D2    $501F   UNKNOWN  $501F           ; Unknown 5xxx instruction
$9D4    $544C   UNKNOWN  $544C           ; Unknown 5xxx instruction
$9D6    $26B8   CALL     $6B8            ; Call subroutine at 6B8
$9D8    $67F6   LD       V7, #F6         ; Load 246 into V7
$9DA    $091F   SYS      $91F            ; System call to 91F
$9DC    $9864   UNKNOWN  $9864           ; Unknown 9xxx instruction
$9DE    $B763   JP       V0, $763        ; Jump to V0 + 763
$9E0    $BDC4   JP       V0, $DC4        ; Jump to V0 + DC4
$9E2    $DA0E   DRW      VA, V0, #E      ; Draw 14-byte sprite at VA, V0
$9E4    $97B5   UNKNOWN  $97B5           ; Unknown 9xxx instruction
$9E6    $35D5   SE       V5, #D5         ; Skip if V5 == 213
$9E8    $B11D   JP       V0, $11D        ; Jump to V0 + 11D
$9EA    $0175   SYS      $175            ; System call to 175
$9EC    $5DE8   UNKNOWN  $5DE8           ; Unknown 5xxx instruction
$9EE    $9F7F   UNKNOWN  $9F7F           ; Unknown 9xxx instruction
$9F0    $66ED   LD       V6, #ED         ; Load 237 into V6
$9F2    $A930   LD       I, $930         ; Load 930 into I
$9F4    $AE04   LD       I, $E04         ; Load E04 into I
$9F6    $85F5   SUB      V5, VF          ; V5 -= VF, VF = !borrow
$9F8    $59D4   UNKNOWN  $59D4           ; Unknown 5xxx instruction
$9FA    $5A9B   UNKNOWN  $5A9B           ; Unknown 5xxx instruction
$9FC    $F3BC   UNKNOWN  F3BC            ; Unknown Fxxx instruction
$9FE    $A7C5   LD       I, $7C5         ; Load 7C5 into I
$A00    $3139   SE       V1, #39         ; Skip if V1 == 57
$A02    $C4E8   RND      V4, #E8         ; V4 = random & E8
$A04    $1DDA   JP       $DDA            ; Jump to DDA
$A06    $9BF4   UNKNOWN  $9BF4           ; Unknown 9xxx instruction
$A08    $BFE9   JP       V0, $FE9        ; Jump to V0 + FE9
$A0A    $65C9   LD       V5, #C9         ; Load 201 into V5
$A0C    $540D   UNKNOWN  $540D           ; Unknown 5xxx instruction
$A0E    $6E62   LD       VE, #62         ; Load 98 into VE
$A10    $0E85   SYS      $E85            ; System call to E85
$A12    $923B   UNKNOWN  $923B           ; Unknown 9xxx instruction
$A14    $8ED2   AND      VE, VD          ; VE &= VD
$A16    $F3F2   UNKNOWN  F3F2            ; Unknown Fxxx instruction
$A18    $5F54   UNKNOWN  $5F54           ; Unknown 5xxx instruction
$A1A    $1444   JP       $444            ; Jump to 444
$A1C    $852D   UNKNOWN  852D            ; Unknown 8xxx instruction
$A1E    $9AB1   UNKNOWN  $9AB1           ; Unknown 9xxx instruction
$A20    $F9C3   UNKNOWN  F9C3            ; Unknown Fxxx instruction
$A22    $59CF   UNKNOWN  $59CF           ; Unknown 5xxx instruction
$A24    $04AC   SYS      $4AC            ; System call to 4AC
$A26    $A2A1   LD       I, $2A1         ; Load 2A1 into I
$A28    $9839   UNKNOWN  $9839           ; Unknown 9xxx instruction
$A2A    $D201   DRW      V2, V0, #1      ; Draw 1-byte sprite at V2, V0
$A2C    $0BB9   SYS      $BB9            ; System call to BB9
$A2E    $4A1C   SNE      VA, #1C         ; Skip if VA != 28
$A30    $0BE9   SYS      $BE9            ; System call to BE9
$A32    $3B63   SE       VB, #63         ; Skip if VB == 99
$A34    $36C6   SE       V6, #C6         ; Skip if V6 == 198
$A36    $A73B   LD       I, $73B         ; Load 73B into I
$A38    $1E0D   JP       $E0D            ; Jump to E0D
$A3A    $3276   SE       V2, #76         ; Skip if V2 == 118
$A3C    $8FD8   UNKNOWN  8FD8            ; Unknown 8xxx instruction
$A3E    $357F   SE       V5, #7F         ; Skip if V5 == 127
$A40    $5A05   UNKNOWN  $5A05           ; Unknown 5xxx instruction
$A42    $29DD   CALL     $9DD            ; Call subroutine at 9DD
$A44    $6BF2   LD       VB, #F2         ; Load 242 into VB
$A46    $651E   LD       V5, #1E         ; Load 30 into V5
$A48    $693D   LD       V9, #3D         ; Load 61 into V9
$A4A    $2A2C   CALL     $A2C            ; Call subroutine at A2C
$A4C    $8CA8   UNKNOWN  8CA8            ; Unknown 8xxx instruction
$A4E    $2D1A   CALL     $D1A            ; Call subroutine at D1A
$A50    $B4A6   JP       V0, $4A6        ; Jump to V0 + 4A6
$A52    $3B3B   SE       VB, #3B         ; Skip if VB == 59
$A54    $C5EC   RND      V5, #EC         ; V5 = random & EC
$A56    $4652   SNE      V6, #52         ; Skip if V6 != 82
$A58    $6505   LD       V5, #05         ; Load 5 into V5
$A5A    $D083   DRW      V0, V8, #3      ; Draw 3-byte sprite at V0, V8
$A5C    $CAA5   RND      VA, #A5         ; VA = random & A5
$A5E    $D94A   DRW      V9, V4, #A      ; Draw 10-byte sprite at V9, V4
$A60    $5B88   UNKNOWN  $5B88           ; Unknown 5xxx instruction
$A62    $643C   LD       V4, #3C         ; Load 60 into V4
$A64    $F6F9   UNKNOWN  F6F9            ; Unknown Fxxx instruction
$A66    $AF38   LD       I, $F38         ; Load F38 into I
$A68    $0748   SYS      $748            ; System call to 748
$A6A    $B6E3   JP       V0, $6E3        ; Jump to V0 + 6E3
$A6C    $5A3F   UNKNOWN  $5A3F           ; Unknown 5xxx instruction
$A6E    $C991   RND      V9, #91         ; V9 = random & 91
$A70    $C978   RND      V9, #78         ; V9 = random & 78
$A72    $B80D   JP       V0, $80D        ; Jump to V0 + 80D
$A74    $6844   LD       V8, #44         ; Load 68 into V8
$A76    $E914   UNKNOWN  $E914           ; Unknown Exxx instruction
$A78    $8BD3   XOR      VB, VD          ; VB ^= VD
$A7A    $6BD3   LD       VB, #D3         ; Load 211 into VB
$A7C    $DF60   DRW      VF, V6, #0      ; Draw 0-byte sprite at VF, V6
$A7E    $2A2B   CALL     $A2B            ; Call subroutine at A2B
$A80    $BBBB   JP       V0, $BBB        ; Jump to V0 + BBB
$A82    $9B6D   UNKNOWN  $9B6D           ; Unknown 9xxx instruction
$A84    $4ABA   SNE      VA, #BA         ; Skip if VA != 186
$A86    $9E64   UNKNOWN  $9E64           ; Unknown 9xxx instruction
$A88    $2162   CALL     $162            ; Call subroutine at 162
$A8A    $45E7   SNE      V5, #E7         ; Skip if V5 != 231
$A8C    $1828   JP       $828            ; Jump to 828
$A8E    $BA49   JP       V0, $A49        ; Jump to V0 + A49
$A90    $2216   CALL     $216            ; Call subroutine at 216
$A92    $7919   ADD      V9, #19         ; Add 25 to V9
$A94    $528B   UNKNOWN  $528B           ; Unknown 5xxx instruction
$A96    $2D7E   CALL     $D7E            ; Call subroutine at D7E
$A98    $ED7A   UNKNOWN  $ED7A           ; Unknown Exxx instruction
$A9A    $60DF   LD       V0, #DF         ; Load 223 into V0
$A9C    $903B   UNKNOWN  $903B           ; Unknown 9xxx instruction
$A9E    $FB0E   UNKNOWN  FB0E            ; Unknown Fxxx instruction
$AA0    $E9EC   UNKNOWN  $E9EC           ; Unknown Exxx instruction
$AA2    $B3AA   JP       V0, $3AA        ; Jump to V0 + 3AA
$AA4    $1155   JP       $155            ; Jump to 155
$AA6    $B060   JP       V0, $060        ; Jump to V0 + 060
$AA8    $F405   UNKNOWN  F405            ; Unknown Fxxx instruction
$AAA    $87AB   UNKNOWN  87AB            ; Unknown 8xxx instruction
$AAC    $6094   LD       V0, #94         ; Load 148 into V0
$AAE    $A302   LD       I, $302         ; Load 302 into I
$AB0    $B782   JP       V0, $782        ; Jump to V0 + 782
$AB2    $F958   UNKNOWN  F958            ; Unknown Fxxx instruction
$AB4    $465C   SNE      V6, #5C         ; Skip if V6 != 92
$AB6    $5D0A   UNKNOWN  $5D0A           ; Unknown 5xxx instruction
$AB8    $EA81   UNKNOWN  $EA81           ; Unknown Exxx instruction
$ABA    $0F7E   SYS      $F7E            ; System call to F7E
$ABC    $40C1   SNE      V0, #C1         ; Skip if V0 != 193
$ABE    $B9D9   JP       V0, $9D9        ; Jump to V0 + 9D9
$AC0    $86AE   SHL      V6              ; V6 <<= 1, VF = MSB
$AC2    $A1C5   LD       I, $1C5         ; Load 1C5 into I
$AC4    $6D6D   LD       VD, #6D         ; Load 109 into VD
$AC6    $4B26   SNE      VB, #26         ; Skip if VB != 38
$AC8    $18F7   JP       $8F7            ; Jump to 8F7
$ACA    $C01B   RND      V0, #1B         ; V0 = random & 1B
$ACC    $D947   DRW      V9, V4, #7      ; Draw 7-byte sprite at V9, V4
$ACE    $8EDA   UNKNOWN  8EDA            ; Unknown 8xxx instruction
$AD0    $0FFF   SYS      $FFF            ; System call to FFF
$AD2    $9A56   UNKNOWN  $9A56           ; Unknown 9xxx instruction
$AD4    $5F18   UNKNOWN  $5F18           ; Unknown 5xxx instruction
$AD6    $3010   SE       V0, #10         ; Skip if V0 == 16
$AD8    $23F9   CALL     $3F9            ; Call subroutine at 3F9
$ADA    $897E   SHL      V9              ; V9 <<= 1, VF = MSB
$ADC    $207C   CALL     $07C            ; Call subroutine at 07C
$ADE    $CB18   RND      VB, #18         ; VB = random & 18
$AE0    $E35E   UNKNOWN  $E35E           ; Unknown Exxx instruction
$AE2    $A28A   LD       I, $28A         ; Load 28A into I
$AE4    $2827   CALL     $827            ; Call subroutine at 827
$AE6    $C5A4   RND      V5, #A4         ; V5 = random & A4
$AE8    $1630   JP       $630            ; Jump to 630
$AEA    $59F4   UNKNOWN  $59F4           ; Unknown 5xxx instruction
$AEC    $C90C   RND      V9, #0C         ; V9 = random & 0C
$AEE    $8999   UNKNOWN  8999            ; Unknown 8xxx instruction
$AF0    $3CFE   SE       VC, #FE         ; Skip if VC == 254
$AF2    $F092   UNKNOWN  F092            ; Unknown Fxxx instruction
$AF4    $7B72   ADD      VB, #72         ; Add 114 to VB
$AF6    $91CA   UNKNOWN  $91CA           ; Unknown 9xxx instruction
$AF8    $5A3B   UNKNOWN  $5A3B           ; Unknown 5xxx instruction
$AFA    $FA54   UNKNOWN  FA54            ; Unknown Fxxx instruction
$AFC    $E345   UNKNOWN  $E345           ; Unknown Exxx instruction
$AFE    $1678   JP       $678            ; Jump to 678
$B00    $4973   SNE      V9, #73         ; Skip if V9 != 115
$B02    $38EC   SE       V8, #EC         ; Skip if V8 == 236
$B04    $3CB0   SE       VC, #B0         ; Skip if VC == 176
$B06    $C58A   RND      V5, #8A         ; V5 = random & 8A
$B08    $BABF   JP       V0, $ABF        ; Jump to V0 + ABF
$B0A    $766B   ADD      V6, #6B         ; Add 107 to V6
$B0C    $ADD3   LD       I, $DD3         ; Load DD3 into I
$B0E    $1749   JP       $749            ; Jump to 749
$B10    $4F87   SNE      VF, #87         ; Skip if VF != 135
$B12    $B89F   JP       V0, $89F        ; Jump to V0 + 89F
$B14    $111E   JP       $11E            ; Jump to 11E
$B16    $0B9F   SYS      $B9F            ; System call to B9F
$B18    $5CD6   UNKNOWN  $5CD6           ; Unknown 5xxx instruction
$B1A    $D858   DRW      V8, V5, #8      ; Draw 8-byte sprite at V8, V5
$B1C    $F0F2   UNKNOWN  F0F2            ; Unknown Fxxx instruction
$B1E    $956B   UNKNOWN  $956B           ; Unknown 9xxx instruction
$B20    $56AC   UNKNOWN  $56AC           ; Unknown 5xxx instruction
$B22    $E46D   UNKNOWN  $E46D           ; Unknown Exxx instruction
$B24    $0C94   SYS      $C94            ; System call to C94
$B26    $A9EF   LD       I, $9EF         ; Load 9EF into I
$B28    $8B6A   UNKNOWN  8B6A            ; Unknown 8xxx instruction
$B2A    $BFF3   JP       V0, $FF3        ; Jump to V0 + FF3
$B2C    $DA05   DRW      VA, V0, #5      ; Draw 5-byte sprite at VA, V0
$B2E    $A1C8   LD       I, $1C8         ; Load 1C8 into I
$B30    $250E   CALL     $50E            ; Call subroutine at 50E
$B32    $5410   SE       V4, V1          ; Skip if V4 == V1
$B34    $1BD8   JP       $BD8            ; Jump to BD8
$B36    $6BB0   LD       VB, #B0         ; Load 176 into VB
$B38    $EE52   UNKNOWN  $EE52           ; Unknown Exxx instruction
$B3A    $CA13   RND      VA, #13         ; VA = random & 13
$B3C    $2277   CALL     $277            ; Call subroutine at 277
$B3E    $BFE2   JP       V0, $FE2        ; Jump to V0 + FE2
$B40    $E6A0   UNKNOWN  $E6A0           ; Unknown Exxx instruction
$B42    $FCCF   UNKNOWN  FCCF            ; Unknown Fxxx instruction
$B44    $2C32   CALL     $C32            ; Call subroutine at C32
$B46    $F3F2   UNKNOWN  F3F2            ; Unknown Fxxx instruction
$B48    $DF94   DRW      VF, V9, #4      ; Draw 4-byte sprite at VF, V9
$B4A    $DCC3   DRW      VC, VC, #3      ; Draw 3-byte sprite at VC, VC
$B4C    $7233   ADD      V2, #33         ; Add 51 to V2
$B4E    $9B37   UNKNOWN  $9B37           ; Unknown 9xxx instruction
$B50    $899F   UNKNOWN  899F            ; Unknown 8xxx instruction
$B52    $B8B2   JP       V0, $8B2        ; Jump to V0 + 8B2
$B54    $F7B1   UNKNOWN  F7B1            ; Unknown Fxxx instruction
$B56    $4004   SNE      V0, #04         ; Skip if V0 != 4
$B58    $51A3   UNKNOWN  $51A3           ; Unknown 5xxx instruction
$B5A    $78B5   ADD      V8, #B5         ; Add 181 to V8
$B5C    $444E   SNE      V4, #4E         ; Skip if V4 != 78
$B5E    $1B76   JP       $B76            ; Jump to B76
$B60    $CD96   RND      VD, #96         ; VD = random & 96
$B62    $78DF   ADD      V8, #DF         ; Add 223 to V8
$B64    $3276   SE       V2, #76         ; Skip if V2 == 118
$B66    $ECA1   SKNP     VC              ; Skip if key VC not pressed
$B68    $6976   LD       V9, #76         ; Load 118 into V9
$B6A    $48D5   SNE      V8, #D5         ; Skip if V8 != 213
$B6C    $BF92   JP       V0, $F92        ; Jump to V0 + F92
$B6E    $A2DC   LD       I, $2DC         ; Load 2DC into I
$B70    $1908   JP       $908            ; Jump to 908
$B72    $99E9   UNKNOWN  $99E9           ; Unknown 9xxx instruction
$B74    $D596   DRW      V5, V9, #6      ; Draw 6-byte sprite at V5, V9
$B76    $FFF2   UNKNOWN  FFF2            ; Unknown Fxxx instruction
$B78    $EFBF   UNKNOWN  $EFBF           ; Unknown Exxx instruction
$B7A    $D753   DRW      V7, V5, #3      ; Draw 3-byte sprite at V7, V5
$B7C    $B737   JP       V0, $737        ; Jump to V0 + 737
$B7E    $279F   CALL     $79F            ; Call subroutine at 79F
$B80    $3B3B   SE       VB, #3B         ; Skip if VB == 59
$B82    $5720   SE       V7, V2          ; Skip if V7 == V2
$B84    $6CE7   LD       VC, #E7         ; Load 231 into VC
$B86    $F381   UNKNOWN  F381            ; Unknown Fxxx instruction
$B88    $ED5C   UNKNOWN  $ED5C           ; Unknown Exxx instruction
$B8A    $74B5   ADD      V4, #B5         ; Add 181 to V4
$B8C    $20BE   CALL     $0BE            ; Call subroutine at 0BE
$B8E    $6049   LD       V0, #49         ; Load 73 into V0
$B90    $4088   SNE      V0, #88         ; Skip if V0 != 136
$B92    $2819   CALL     $819            ; Call subroutine at 819
$B94    $2AA7   CALL     $AA7            ; Call subroutine at AA7
$B96    $53CF   UNKNOWN  $53CF           ; Unknown 5xxx instruction
$B98    $27AD   CALL     $7AD            ; Call subroutine at 7AD
$B9A    $BB2D   JP       V0, $B2D        ; Jump to V0 + B2D
$B9C    $5EFA   UNKNOWN  $5EFA           ; Unknown 5xxx instruction
$B9E    $54F4   UNKNOWN  $54F4           ; Unknown 5xxx instruction
$BA0    $E46E   UNKNOWN  $E46E           ; Unknown Exxx instruction
$BA2    $AED8   LD       I, $ED8         ; Load ED8 into I
$BA4    $815D   UNKNOWN  815D            ; Unknown 8xxx instruction
$BA6    $EBF5   UNKNOWN  $EBF5           ; Unknown Exxx instruction
$BA8    $84DA   UNKNOWN  84DA            ; Unknown 8xxx instruction
$BAA    $BD7C   JP       V0, $D7C        ; Jump to V0 + D7C
$BAC    $18DB   JP       $8DB            ; Jump to 8DB
$BAE    $5393   UNKNOWN  $5393           ; Unknown 5xxx instruction
$BB0    $79D7   ADD      V9, #D7         ; Add 215 to V9
$BB2    $E419   UNKNOWN  $E419           ; Unknown Exxx instruction
$BB4    $4416   SNE      V4, #16         ; Skip if V4 != 22
$BB6    $3A89   SE       VA, #89         ; Skip if VA == 137
$BB8    $C8ED   RND      V8, #ED         ; V8 = random & ED
$BBA    $88F8   UNKNOWN  88F8            ; Unknown 8xxx instruction
$BBC    $5F11   UNKNOWN  $5F11           ; Unknown 5xxx instruction
$BBE    $96C4   UNKNOWN  $96C4           ; Unknown 9xxx instruction
$BC0    $6C13   LD       VC, #13         ; Load 19 into VC
$BC2    $E25A   UNKNOWN  $E25A           ; Unknown Exxx instruction
$BC4    $C22A   RND      V2, #2A         ; V2 = random & 2A
$BC6    $2E06   CALL     $E06            ; Call subroutine at E06
$BC8    $16EE   JP       $6EE            ; Jump to 6EE
$BCA    $D5C8   DRW      V5, VC, #8      ; Draw 8-byte sprite at V5, VC
$BCC    $02B3   SYS      $2B3            ; System call to 2B3
$BCE    $8044   ADD      V0, V4          ; V0 += V4, VF = carry
$BD0    $EB78   UNKNOWN  $EB78           ; Unknown Exxx instruction
$BD2    $8793   XOR      V7, V9          ; V7 ^= V9
$BD4    $497F   SNE      V9, #7F         ; Skip if V9 != 127
$BD6    $72A5   ADD      V2, #A5         ; Add 165 to V2
$BD8    $C934   RND      V9, #34         ; V9 = random & 34
$BDA    $D3AB   DRW      V3, VA, #B      ; Draw 11-byte sprite at V3, VA
$BDC    $51D0   SE       V1, VD          ; Skip if V1 == VD
$BDE    $6576   LD       V5, #76         ; Load 118 into V5
$BE0    $39FD   SE       V9, #FD         ; Skip if V9 == 253
$BE2    $ADEE   LD       I, $DEE         ; Load DEE into I
$BE4    $8F24   ADD      VF, V2          ; VF += V2, VF = carry
$BE6    $6938   LD       V9, #38         ; Load 56 into V9
$BE8    $F9C4   UNKNOWN  F9C4            ; Unknown Fxxx instruction
$BEA    $26F1   CALL     $6F1            ; Call subroutine at 6F1
$BEC    $A9BA   LD       I, $9BA         ; Load 9BA into I
$BEE    $AFAE   LD       I, $FAE         ; Load FAE into I
$BF0    $A5F9   LD       I, $5F9         ; Load 5F9 into I
$BF2    $0533   SYS      $533            ; System call to 533
$BF4    $275F   CALL     $75F            ; Call subroutine at 75F
$BF6    $9493   UNKNOWN  $9493           ; Unknown 9xxx instruction
$BF8    $9258   UNKNOWN  $9258           ; Unknown 9xxx instruction
$BFA    $5274   UNKNOWN  $5274           ; Unknown 5xxx instruction
$BFC    $4BC9   SNE      VB, #C9         ; Skip if VB != 201
$BFE    $5D2B   UNKNOWN  $5D2B           ; Unknown 5xxx instruction
$C00    $8C72   AND      VC, V7          ; VC &= V7
$C02    $DF17   DRW      VF, V1, #7      ; Draw 7-byte sprite at VF, V1
$C04    $8B70   LD       VB, V7          ; VB = V7
$C06    $2FA8   CALL     $FA8            ; Call subroutine at FA8
$C08    $C40B   RND      V4, #0B         ; V4 = random & 0B
$C0A    $10A1   JP       $0A1            ; Jump to 0A1
$C0C    $E7A6   UNKNOWN  $E7A6           ; Unknown Exxx instruction
$C0E    $9158   UNKNOWN  $9158           ; Unknown 9xxx instruction
$C10    $B0F3   JP       V0, $0F3        ; Jump to V0 + 0F3
$C12    $360E   SE       V6, #0E         ; Skip if V6 == 14
$C14    $5916   UNKNOWN  $5916           ; Unknown 5xxx instruction
$C16    $EC3C   UNKNOWN  $EC3C           ; Unknown Exxx instruction
$C18    $A5E4   LD       I, $5E4         ; Load 5E4 into I
$C1A    $9347   UNKNOWN  $9347           ; Unknown 9xxx instruction
$C1C    $31E8   SE       V1, #E8         ; Skip if V1 == 232
$C1E    $F1F3   UNKNOWN  F1F3            ; Unknown Fxxx instruction
$C20    $D598   DRW      V5, V9, #8      ; Draw 8-byte sprite at V5, V9
$C22    $F722   UNKNOWN  F722            ; Unknown Fxxx instruction
$C24    $4F32   SNE      VF, #32         ; Skip if VF != 50
$C26    $B1A5   JP       V0, $1A5        ; Jump to V0 + 1A5
$C28    $66BF   LD       V6, #BF         ; Load 191 into V6
$C2A    $3035   SE       V0, #35         ; Skip if V0 == 53
$C2C    $2E98   CALL     $E98            ; Call subroutine at E98
$C2E    $12B6   JP       $2B6            ; Jump to 2B6
$C30    $B68E   JP       V0, $68E        ; Jump to V0 + 68E
$C32    $32D4   SE       V2, #D4         ; Skip if V2 == 212
$C34    $7E56   ADD      VE, #56         ; Add 86 to VE
$C36    $516B   UNKNOWN  $516B           ; Unknown 5xxx instruction
$C38    $D5EC   DRW      V5, VE, #C      ; Draw 12-byte sprite at V5, VE
$C3A    $1445   JP       $445            ; Jump to 445
$C3C    $2FAF   CALL     $FAF            ; Call subroutine at FAF
$C3E    $7A82   ADD      VA, #82         ; Add 130 to VA
$C40    $D1F2   DRW      V1, VF, #2      ; Draw 2-byte sprite at V1, VF
$C42    $3E22   SE       VE, #22         ; Skip if VE == 34
$C44    $EAC1   UNKNOWN  $EAC1           ; Unknown Exxx instruction
$C46    $5D43   UNKNOWN  $5D43           ; Unknown 5xxx instruction
$C48    $9FFE   UNKNOWN  $9FFE           ; Unknown 9xxx instruction
$C4A    $1DD1   JP       $DD1            ; Jump to DD1
$C4C    $D113   DRW      V1, V1, #3      ; Draw 3-byte sprite at V1, V1
$C4E    $D7EE   DRW      V7, VE, #E      ; Draw 14-byte sprite at V7, VE
$C50    $00D2   SYS      $0D2            ; System call to 0D2
$C52    $8CE7   SUBN     VC, VE          ; VC = VE - VC, VF = !borrow
$C54    $CAC3   RND      VA, #C3         ; VA = random & C3
$C56    $3AE4   SE       VA, #E4         ; Skip if VA == 228
$C58    $4B23   SNE      VB, #23         ; Skip if VB != 35
$C5A    $AFEF   LD       I, $FEF         ; Load FEF into I
$C5C    $6BF6   LD       VB, #F6         ; Load 246 into VB
$C5E    $9570   SNE      V5, V7          ; Skip if V5 != V7
$C60    $4991   SNE      V9, #91         ; Skip if V9 != 145
$C62    $8609   UNKNOWN  8609            ; Unknown 8xxx instruction
$C64    $30AB   SE       V0, #AB         ; Skip if V0 == 171
$C66    $3638   SE       V6, #38         ; Skip if V6 == 56
$C68    $5FB8   UNKNOWN  $5FB8           ; Unknown 5xxx instruction
$C6A    $A1C0   LD       I, $1C0         ; Load 1C0 into I
$C6C    $500E   UNKNOWN  $500E           ; Unknown 5xxx instruction
$C6E    $6B2B   LD       VB, #2B         ; Load 43 into VB
$C70    $E82C   UNKNOWN  $E82C           ; Unknown Exxx instruction
$C72    $6F32   LD       VF, #32         ; Load 50 into VF
$C74    $0C1E   SYS      $C1E            ; System call to C1E
$C76    $2C45   CALL     $C45            ; Call subroutine at C45
$C78    $3949   SE       V9, #49         ; Skip if V9 == 73
$C7A    $BC48   JP       V0, $C48        ; Jump to V0 + C48
$C7C    $41AD   SNE      V1, #AD         ; Skip if V1 != 173
$C7E    $C0BF   RND      V0, #BF         ; V0 = random & BF
$C80    $7AE8   ADD      VA, #E8         ; Add 232 to VA
$C82    $D827   DRW      V8, V2, #7      ; Draw 7-byte sprite at V8, V2
$C84    $F868   UNKNOWN  F868            ; Unknown Fxxx instruction
$C86    $7553   ADD      V5, #53         ; Add 83 to V5
$C88    $526B   UNKNOWN  $526B           ; Unknown 5xxx instruction
$C8A    $A0AB   LD       I, $0AB         ; Load 0AB into I
$C8C    $B9E1   JP       V0, $9E1        ; Jump to V0 + 9E1
$C8E    $5C4F   UNKNOWN  $5C4F           ; Unknown 5xxx instruction
$C90    $8202   AND      V2, V0          ; V2 &= V0
$C92    $B28A   JP       V0, $28A        ; Jump to V0 + 28A
$C94    $1D72   JP       $D72            ; Jump to D72
$C96    $69D7   LD       V9, #D7         ; Load 215 into V9
$C98    $F44F   UNKNOWN  F44F            ; Unknown Fxxx instruction
$C9A    $AACA   LD       I, $ACA         ; Load ACA into I
$C9C    $420C   SNE      V2, #0C         ; Skip if V2 != 12
$C9E    $75B9   ADD      V5, #B9         ; Add 185 to V5
$CA0    $0A46   SYS      $A46            ; System call to A46
$CA2    $D99E   DRW      V9, V9, #E      ; Draw 14-byte sprite at V9, V9
$CA4    $9681   UNKNOWN  $9681           ; Unknown 9xxx instruction
$CA6    $BB7E   JP       V0, $B7E        ; Jump to V0 + B7E
$CA8    $3B6B   SE       VB, #6B         ; Skip if VB == 107
$CAA    $88E6   SHR      V8              ; V8 >>= 1, VF = LSB
$CAC    $7AAE   ADD      VA, #AE         ; Add 174 to VA
$CAE    $E582   UNKNOWN  $E582           ; Unknown Exxx instruction
$CB0    $D9A8   DRW      V9, VA, #8      ; Draw 8-byte sprite at V9, VA
$CB2    $909E   UNKNOWN  $909E           ; Unknown 9xxx instruction
$CB4    $F29B   UNKNOWN  F29B            ; Unknown Fxxx instruction
$CB6    $D184   DRW      V1, V8, #4      ; Draw 4-byte sprite at V1, V8
$CB8    $ACF2   LD       I, $CF2         ; Load CF2 into I
$CBA    $C122   RND      V1, #22         ; V1 = random & 22
$CBC    $8575   SUB      V5, V7          ; V5 -= V7, VF = !borrow
$CBE    $9FEF   UNKNOWN  $9FEF           ; Unknown 9xxx instruction
$CC0    $2FD3   CALL     $FD3            ; Call subroutine at FD3
$CC2    $B416   JP       V0, $416        ; Jump to V0 + 416
$CC4    $4FC3   SNE      VF, #C3         ; Skip if VF != 195
$CC6    $E22E   UNKNOWN  $E22E           ; Unknown Exxx instruction
$CC8    $B862   JP       V0, $862        ; Jump to V0 + 862
$CCA    $C84F   RND      V8, #4F         ; V8 = random & 4F
$CCC    $59D7   UNKNOWN  $59D7           ; Unknown 5xxx instruction
$CCE    $B4B0   JP       V0, $4B0        ; Jump to V0 + 4B0
$CD0    $D566   DRW      V5, V6, #6      ; Draw 6-byte sprite at V5, V6
$CD2    $AA30   LD       I, $A30         ; Load A30 into I
$CD4    $64E8   LD       V4, #E8         ; Load 232 into V4
$CD6    $A4CB   LD       I, $4CB         ; Load 4CB into I
$CD8    $AE1D   LD       I, $E1D         ; Load E1D into I
$CDA    $118F   JP       $18F            ; Jump to 18F
$CDC    $CC6C   RND      VC, #6C         ; VC = random & 6C
$CDE    $586F   UNKNOWN  $586F           ; Unknown 5xxx instruction
$CE0    $EFF9   UNKNOWN  $EFF9           ; Unknown Exxx instruction
$CE2    $54A9   UNKNOWN  $54A9           ; Unknown 5xxx instruction
$CE4    $805E   SHL      V0              ; V0 <<= 1, VF = MSB
$CE6    $3B1A   SE       VB, #1A         ; Skip if VB == 26
$CE8    $04C0   SYS      $4C0            ; System call to 4C0
$CEA    $EC18   UNKNOWN  $EC18           ; Unknown Exxx instruction
$CEC    $2C8C   CALL     $C8C            ; Call subroutine at C8C
$CEE    $8EEA   UNKNOWN  8EEA            ; Unknown 8xxx instruction
$CF0    $86F5   SUB      V6, VF          ; V6 -= VF, VF = !borrow
$CF2    $0C61   SYS      $C61            ; System call to C61
$CF4    $8470   LD       V4, V7          ; V4 = V7
$CF6    $7E38   ADD      VE, #38         ; Add 56 to VE
$CF8    $0CB0   SYS      $CB0            ; System call to CB0
$CFA    $7958   ADD      V9, #58         ; Add 88 to V9
$CFC    $0CDC   SYS      $CDC            ; System call to CDC
$CFE    $F9F5   UNKNOWN  F9F5            ; Unknown Fxxx instruction
$D00    $6DA6   LD       VD, #A6         ; Load 166 into VD
$D02    $3139   SE       V1, #39         ; Skip if V1 == 57
$D04    $9240   SNE      V2, V4          ; Skip if V2 != V4
$D06    $6217   LD       V2, #17         ; Load 23 into V2
$D08    $DEBB   DRW      VE, VB, #B      ; Draw 11-byte sprite at VE, VB
$D0A    $18C3   JP       $8C3            ; Jump to 8C3
$D0C    $965A   UNKNOWN  $965A           ; Unknown 9xxx instruction
$D0E    $1C59   JP       $C59            ; Jump to C59
$D10    $E2B7   UNKNOWN  $E2B7           ; Unknown Exxx instruction
$D12    $A380   LD       I, $380         ; Load 380 into I
$D14    $A01A   LD       I, $01A         ; Load 01A into I
$D16    $9C05   UNKNOWN  $9C05           ; Unknown 9xxx instruction
$D18    $80C1   OR       V0, VC          ; V0 |= VC
$D1A    $C794   RND      V7, #94         ; V7 = random & 94
$D1C    $64AA   LD       V4, #AA         ; Load 170 into V4
$D1E    $9A45   UNKNOWN  $9A45           ; Unknown 9xxx instruction
$D20    $68B2   LD       V8, #B2         ; Load 178 into V8
$D22    $2149   CALL     $149            ; Call subroutine at 149
$D24    $5CF7   UNKNOWN  $5CF7           ; Unknown 5xxx instruction
$D26    $F868   UNKNOWN  F868            ; Unknown Fxxx instruction
$D28    $7333   ADD      V3, #33         ; Add 51 to V3
$D2A    $0176   SYS      $176            ; System call to 176
$D2C    $287C   CALL     $87C            ; Call subroutine at 87C
$D2E    $8A6A   UNKNOWN  8A6A            ; Unknown 8xxx instruction
$D30    $4199   SNE      V1, #99         ; Skip if V1 != 153
$D32    $9F24   UNKNOWN  $9F24           ; Unknown 9xxx instruction
$D34    $B2DD   JP       V0, $2DD        ; Jump to V0 + 2DD
$D36    $DFF9   DRW      VF, VF, #9      ; Draw 9-byte sprite at VF, VF
$D38    $45BB   SNE      V5, #BB         ; Skip if V5 != 187
$D3A    $0DA8   SYS      $DA8            ; System call to DA8
$D3C    $ED42   UNKNOWN  $ED42           ; Unknown Exxx instruction
$D3E    $50B9   UNKNOWN  $50B9           ; Unknown 5xxx instruction
$D40    $FA8A   UNKNOWN  FA8A            ; Unknown Fxxx instruction
$D42    $3C57   SE       VC, #57         ; Skip if VC == 87
$D44    $8BDD   UNKNOWN  8BDD            ; Unknown 8xxx instruction
$D46    $C06A   RND      V0, #6A         ; V0 = random & 6A
$D48    $CA48   RND      VA, #48         ; VA = random & 48
$D4A    $57FF   UNKNOWN  $57FF           ; Unknown 5xxx instruction
$D4C    $3632   SE       V6, #32         ; Skip if V6 == 50
$D4E    $9880   SNE      V8, V8          ; Skip if V8 != V8
$D50    $5547   UNKNOWN  $5547           ; Unknown 5xxx instruction
$D52    $0A78   SYS      $A78            ; System call to A78
$D54    $BCA3   JP       V0, $CA3        ; Jump to V0 + CA3
$D56    $C054   RND      V0, #54         ; V0 = random & 54
$D58    $B192   JP       V0, $192        ; Jump to V0 + 192
$D5A    $53A1   UNKNOWN  $53A1           ; Unknown 5xxx instruction
$D5C    $70EA   ADD      V0, #EA         ; Add 234 to V0
$D5E    $0C48   SYS      $C48            ; System call to C48
$D60    $2020   CALL     $020            ; Call subroutine at 020
$D62    $2020   CALL     $020            ; Call subroutine at 020
$D64    $12B7   JP       $2B7            ; Jump to 2B7
$D66    $8975   SUB      V9, V7          ; V9 -= V7, VF = !borrow
$D68    $73EC   ADD      V3, #EC         ; Add 236 to V3
$D6A    $27BD   CALL     $7BD            ; Call subroutine at 7BD
$D6C    $56A9   UNKNOWN  $56A9           ; Unknown 5xxx instruction
$D6E    $5D08   UNKNOWN  $5D08           ; Unknown 5xxx instruction
$D70    $819C   UNKNOWN  819C            ; Unknown 8xxx instruction
$D72    $203C   CALL     $03C            ; Call subroutine at 03C
$D74    $D920   DRW      V9, V2, #0      ; Draw 0-byte sprite at V9, V2
$D76    $D543   DRW      V5, V4, #3      ; Draw 3-byte sprite at V5, V4
$D78    $5895   UNKNOWN  $5895           ; Unknown 5xxx instruction
$D7A    $0D29   SYS      $D29            ; System call to D29
$D7C    $ECAA   UNKNOWN  $ECAA           ; Unknown Exxx instruction
$D7E    $8894   ADD      V8, V9          ; V8 += V9, VF = carry
$D80    $715F   ADD      V1, #5F         ; Add 95 to V1
$D82    $1F17   JP       $F17            ; Jump to F17
$D84    $379F   SE       V7, #9F         ; Skip if V7 == 159
$D86    $2978   CALL     $978            ; Call subroutine at 978
$D88    $ADB8   LD       I, $DB8         ; Load DB8 into I
$D8A    $5B6D   UNKNOWN  $5B6D           ; Unknown 5xxx instruction
$D8C    $69A3   LD       V9, #A3         ; Load 163 into V9
$D8E    $8FEA   UNKNOWN  8FEA            ; Unknown 8xxx instruction
$D90    $C04A   RND      V0, #4A         ; V0 = random & 4A
$D92    $BD58   JP       V0, $D58        ; Jump to V0 + D58
$D94    $C85B   RND      V8, #5B         ; V8 = random & 5B
$D96    $FBBF   UNKNOWN  FBBF            ; Unknown Fxxx instruction
$D98    $061A   SYS      $61A            ; System call to 61A
$D9A    $D243   DRW      V2, V4, #3      ; Draw 3-byte sprite at V2, V4
$D9C    $8F56   SHR      VF              ; VF >>= 1, VF = LSB
$D9E    $2247   CALL     $247            ; Call subroutine at 247
$DA0    $0BE2   SYS      $BE2            ; System call to BE2
$DA2    $4C46   SNE      VC, #46         ; Skip if VC != 70
$DA4    $4E22   SNE      VE, #22         ; Skip if VE != 34
$DA6    $8952   AND      V9, V5          ; V9 &= V5
$DA8    $0F02   SYS      $F02            ; System call to F02
$DAA    $769C   ADD      V6, #9C         ; Add 156 to V6
$DAC    $68A1   LD       V8, #A1         ; Load 161 into V8
$DAE    $D386   DRW      V3, V8, #6      ; Draw 6-byte sprite at V3, V8
$DB0    $1FE1   JP       $FE1            ; Jump to FE1
$DB2    $0D95   SYS      $D95            ; System call to D95
$DB4    $62D2   LD       V2, #D2         ; Load 210 into V2
$DB6    $20A2   CALL     $0A2            ; Call subroutine at 0A2
$DB8    $5432   UNKNOWN  $5432           ; Unknown 5xxx instruction
$DBA    $9582   UNKNOWN  $9582           ; Unknown 9xxx instruction
$DBC    $0721   SYS      $721            ; System call to 721
$DBE    $6E8A   LD       VE, #8A         ; Load 138 into VE
$DC0    $D22B   DRW      V2, V2, #B      ; Draw 11-byte sprite at V2, V2
$DC2    $6105   LD       V1, #05         ; Load 5 into V1
$DC4    $304C   SE       V0, #4C         ; Skip if V0 == 76
$DC6    $22DB   CALL     $2DB            ; Call subroutine at 2DB
$DC8    $B930   JP       V0, $930        ; Jump to V0 + 930
$DCA    $F780   UNKNOWN  F780            ; Unknown Fxxx instruction
$DCC    $ADFB   LD       I, $DFB         ; Load DFB into I
$DCE    $4753   SNE      V7, #53         ; Skip if V7 != 83
$DD0    $A190   LD       I, $190         ; Load 190 into I
$DD2    $829C   UNKNOWN  829C            ; Unknown 8xxx instruction
$DD4    $D956   DRW      V9, V5, #6      ; Draw 6-byte sprite at V9, V5
$DD6    $B61E   JP       V0, $61E        ; Jump to V0 + 61E
$DD8    $AEB5   LD       I, $EB5         ; Load EB5 into I
$DDA    $06CB   SYS      $6CB            ; System call to 6CB
$DDC    $E112   UNKNOWN  $E112           ; Unknown Exxx instruction
$DDE    $FDC2   UNKNOWN  FDC2            ; Unknown Fxxx instruction
$DE0    $F928   UNKNOWN  F928            ; Unknown Fxxx instruction
$DE2    $6B99   LD       VB, #99         ; Load 153 into VB
$DE4    $67F7   LD       V7, #F7         ; Load 247 into V7
$DE6    $5787   UNKNOWN  $5787           ; Unknown 5xxx instruction
$DE8    $FAF1   UNKNOWN  FAF1            ; Unknown Fxxx instruction
$DEA    $776E   ADD      V7, #6E         ; Add 110 to V7
$DEC    $5395   UNKNOWN  $5395           ; Unknown 5xxx instruction
$DEE    $8199   UNKNOWN  8199            ; Unknown 8xxx instruction
$DF0    $B249   JP       V0, $249        ; Jump to V0 + 249
$DF2    $C98B   RND      V9, #8B         ; V9 = random & 8B
$DF4    $335A   SE       V3, #5A         ; Skip if V3 == 90
$DF6    $1D4D   JP       $D4D            ; Jump to D4D
$DF8    $500C   UNKNOWN  $500C           ; Unknown 5xxx instruction
$DFA    $C4DD   RND      V4, #DD         ; V4 = random & DD
$DFC    $DD4C   DRW      VD, V4, #C      ; Draw 12-byte sprite at VD, V4
$DFE    $7E48   ADD      VE, #48         ; Add 72 to VE
$E00    $9AFD   UNKNOWN  $9AFD           ; Unknown 9xxx instruction
$E02    $C125   RND      V1, #25         ; V1 = random & 25
$E04    $2571   CALL     $571            ; Call subroutine at 571
$E06    $7D74   ADD      VD, #74         ; Add 116 to VD
$E08    $FF2E   UNKNOWN  FF2E            ; Unknown Fxxx instruction
$E0A    $8057   SUBN     V0, V5          ; V0 = V5 - V0, VF = !borrow
$E0C    $60D3   LD       V0, #D3         ; Load 211 into V0
$E0E    $D53E   DRW      V5, V3, #E      ; Draw 14-byte sprite at V5, V3
$E10    $E43E   UNKNOWN  $E43E           ; Unknown Exxx instruction
$E12    $ED1A   UNKNOWN  $ED1A           ; Unknown Exxx instruction
$E14    $63E5   LD       V3, #E5         ; Load 229 into V3
$E16    $8007   SUBN     V0, V0          ; V0 = V0 - V0, VF = !borrow
$E18    $FF8A   UNKNOWN  FF8A            ; Unknown Fxxx instruction
$E1A    $0A54   SYS      $A54            ; System call to A54
$E1C    $E5F8   UNKNOWN  $E5F8           ; Unknown Exxx instruction
$E1E    $9B68   UNKNOWN  $9B68           ; Unknown 9xxx instruction
$E20    $BA49   JP       V0, $A49        ; Jump to V0 + A49
$E22    $7FA7   ADD      VF, #A7         ; Add 167 to VF
$E24    $2221   CALL     $221            ; Call subroutine at 221
$E26    $7BF5   ADD      VB, #F5         ; Add 245 to VB
$E28    $D223   DRW      V2, V2, #3      ; Draw 3-byte sprite at V2, V2
$E2A    $7DC0   ADD      VD, #C0         ; Add 192 to VD
$E2C    $FD75   UNKNOWN  FD75            ; Unknown Fxxx instruction
$E2E    $034D   SYS      $34D            ; System call to 34D
$E30    $0636   SYS      $636            ; System call to 636
$E32    $9785   UNKNOWN  $9785           ; Unknown 9xxx instruction
$E34    $7811   ADD      V8, #11         ; Add 17 to V8
$E36    $A1F1   LD       I, $1F1         ; Load 1F1 into I
$E38    $3846   SE       V8, #46         ; Skip if V8 == 70
$E3A    $4A9A   SNE      VA, #9A         ; Skip if VA != 154
$E3C    $A6C9   LD       I, $6C9         ; Load 6C9 into I
$E3E    $5F44   UNKNOWN  $5F44           ; Unknown 5xxx instruction
$E40    $32D2   SE       V2, #D2         ; Skip if V2 == 210
$E42    $CC81   RND      VC, #81         ; VC = random & 81
$E44    $B828   JP       V0, $828        ; Jump to V0 + 828
$E46    $E4E9   UNKNOWN  $E4E9           ; Unknown Exxx instruction
$E48    $EB71   UNKNOWN  $EB71           ; Unknown Exxx instruction
$E4A    $C0C7   RND      V0, #C7         ; V0 = random & C7
$E4C    $F6E5   UNKNOWN  F6E5            ; Unknown Fxxx instruction
$E4E    $14E9   JP       $4E9            ; Jump to 4E9
$E50    $2DB1   CALL     $DB1            ; Call subroutine at DB1
$E52    $6B0B   LD       VB, #0B         ; Load 11 into VB
$E54    $4C82   SNE      VC, #82         ; Skip if VC != 130
$E56    $01FE   SYS      $1FE            ; System call to 1FE
$E58    $7A04   ADD      VA, #04         ; Add 4 to VA
$E5A    $5C30   SE       VC, V3          ; Skip if VC == V3
$E5C    $8EFE   SHL      VE              ; VE <<= 1, VF = MSB
$E5E    $ECDA   UNKNOWN  $ECDA           ; Unknown Exxx instruction
$E60    $CFEB   RND      VF, #EB         ; VF = random & EB
$E62    $FC4D   UNKNOWN  FC4D            ; Unknown Fxxx instruction
$E64    $EB85   UNKNOWN  $EB85           ; Unknown Exxx instruction
$E66    $9F71   UNKNOWN  $9F71           ; Unknown 9xxx instruction
$E68    $EB43   UNKNOWN  $EB43           ; Unknown Exxx instruction
$E6A    $2886   CALL     $886            ; Call subroutine at 886
$E6C    $2B93   CALL     $B93            ; Call subroutine at B93
$E6E    $0479   SYS      $479            ; System call to 479
$E70    $AB68   LD       I, $B68         ; Load B68 into I
$E72    $058A   SYS      $58A            ; System call to 58A
$E74    $C8C0   RND      V8, #C0         ; V8 = random & C0
$E76    $E421   UNKNOWN  $E421           ; Unknown Exxx instruction
$E78    $0A98   SYS      $A98            ; System call to A98
$E7A    $3557   SE       V5, #57         ; Skip if V5 == 87
$E7C    $B629   JP       V0, $629        ; Jump to V0 + 629
$E7E    $7FEC   ADD      VF, #EC         ; Add 236 to VF
$E80    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$E82    $332C   SE       V3, #2C         ; Skip if V3 == 44
$E84    $95B7   UNKNOWN  $95B7           ; Unknown 9xxx instruction
$E86    $34FA   SE       V4, #FA         ; Skip if V4 == 250
$E88    $D490   DRW      V4, V9, #0      ; Draw 0-byte sprite at V4, V9
$E8A    $8650   LD       V6, V5          ; V6 = V5
$E8C    $53FF   UNKNOWN  $53FF           ; Unknown 5xxx instruction
$E8E    $9FB6   UNKNOWN  $9FB6           ; Unknown 9xxx instruction
$E90    $549B   UNKNOWN  $549B           ; Unknown 5xxx instruction
$E92    $2909   CALL     $909            ; Call subroutine at 909
$E94    $D644   DRW      V6, V4, #4      ; Draw 4-byte sprite at V6, V4
$E96    $F251   UNKNOWN  F251            ; Unknown Fxxx instruction
$E98    $935B   UNKNOWN  $935B           ; Unknown 9xxx instruction
$E9A    $F494   UNKNOWN  F494            ; Unknown Fxxx instruction
$E9C    $48E0   SNE      V8, #E0         ; Skip if V8 != 224
$E9E    $4859   SNE      V8, #59         ; Skip if V8 != 89
$EA0    $B4A0   JP       V0, $4A0        ; Jump to V0 + 4A0
$EA2    $E5A3   UNKNOWN  $E5A3           ; Unknown Exxx instruction
$EA4    $856A   UNKNOWN  856A            ; Unknown 8xxx instruction
$EA6    $3CB6   SE       VC, #B6         ; Skip if VC == 182
$EA8    $A32E   LD       I, $32E         ; Load 32E into I
$EAA    $0A42   SYS      $A42            ; System call to A42
$EAC    $99BE   UNKNOWN  $99BE           ; Unknown 9xxx instruction
$EAE    $5444   UNKNOWN  $5444           ; Unknown 5xxx instruction
$EB0    $AEE8   LD       I, $EE8         ; Load EE8 into I
$EB2    $019E   SYS      $19E            ; System call to 19E
$EB4    $55C6   UNKNOWN  $55C6           ; Unknown 5xxx instruction
$EB6    $AF59   LD       I, $F59         ; Load F59 into I
$EB8    $04E5   SYS      $4E5            ; System call to 4E5
$EBA    $F4D3   UNKNOWN  F4D3            ; Unknown Fxxx instruction
$EBC    $03EA   SYS      $3EA            ; System call to 3EA
$EBE    $5D8C   UNKNOWN  $5D8C           ; Unknown 5xxx instruction
$EC0    $41A9   SNE      V1, #A9         ; Skip if V1 != 169
$EC2    $904B   UNKNOWN  $904B           ; Unknown 9xxx instruction
$EC4    $5327   UNKNOWN  $5327           ; Unknown 5xxx instruction
$EC6    $C11D   RND      V1, #1D         ; V1 = random & 1D
$EC8    $8F0C   UNKNOWN  8F0C            ; Unknown 8xxx instruction
$ECA    $BB59   JP       V0, $B59        ; Jump to V0 + B59
$ECC    $6888   LD       V8, #88         ; Load 136 into V8
$ECE    $9571   UNKNOWN  $9571           ; Unknown 9xxx instruction
$ED0    $EFF0   UNKNOWN  $EFF0           ; Unknown Exxx instruction
$ED2    $8FB8   UNKNOWN  8FB8            ; Unknown 8xxx instruction
$ED4    $11CC   JP       $1CC            ; Jump to 1CC
$ED6    $3292   SE       V2, #92         ; Skip if V2 == 146
$ED8    $560A   UNKNOWN  $560A           ; Unknown 5xxx instruction
$EDA    $6DA4   LD       VD, #A4         ; Load 164 into VD
$EDC    $584A   UNKNOWN  $584A           ; Unknown 5xxx instruction
$EDE    $8C23   XOR      VC, V2          ; VC ^= V2
$EE0    $B493   JP       V0, $493        ; Jump to V0 + 493
$EE2    $7250   ADD      V2, #50         ; Add 80 to V2
$EE4    $8FE7   SUBN     VF, VE          ; VF = VE - VF, VF = !borrow
$EE6    $CDCB   RND      VD, #CB         ; VD = random & CB
$EE8    $88EC   UNKNOWN  88EC            ; Unknown 8xxx instruction
$EEA    $6DB2   LD       VD, #B2         ; Load 178 into VD
$EEC    $8DD3   XOR      VD, VD          ; VD ^= VD
$EEE    $A480   LD       I, $480         ; Load 480 into I
$EF0    $3CF4   SE       VC, #F4         ; Skip if VC == 244
$EF2    $1D8E   JP       $D8E            ; Jump to D8E
$EF4    $59C6   UNKNOWN  $59C6           ; Unknown 5xxx instruction
$EF6    $CFFE   RND      VF, #FE         ; VF = random & FE
$EF8    $1572   JP       $572            ; Jump to 572
$EFA    $696E   LD       V9, #6E         ; Load 110 into V9
$EFC    $817C   UNKNOWN  817C            ; Unknown 8xxx instruction
$EFE    $2A60   CALL     $A60            ; Call subroutine at A60
$F00    $DE3F   DRW      VE, V3, #F      ; Draw 15-byte sprite at VE, V3
$F02    $EF1C   UNKNOWN  $EF1C           ; Unknown Exxx instruction
$F04    $A17F   LD       I, $17F         ; Load 17F into I
$F06    $C550   RND      V5, #50         ; V5 = random & 50
$F08    $96AE   UNKNOWN  $96AE           ; Unknown 9xxx instruction
$F0A    $8745   SUB      V7, V4          ; V7 -= V4, VF = !borrow
$F0C    $F892   UNKNOWN  F892            ; Unknown Fxxx instruction
$F0E    $BC5A   JP       V0, $C5A        ; Jump to V0 + C5A
$F10    $A527   LD       I, $527         ; Load 527 into I
$F12    $D9CE   DRW      V9, VC, #E      ; Draw 14-byte sprite at V9, VC
$F14    $875F   UNKNOWN  875F            ; Unknown 8xxx instruction
$F16    $D75A   DRW      V7, V5, #A      ; Draw 10-byte sprite at V7, V5
$F18    $D220   DRW      V2, V2, #0      ; Draw 0-byte sprite at V2, V2
$F1A    $A555   LD       I, $555         ; Load 555 into I
$F1C    $CD4F   RND      VD, #4F         ; VD = random & 4F
$F1E    $98D1   UNKNOWN  $98D1           ; Unknown 9xxx instruction
$F20    $D04B   DRW      V0, V4, #B      ; Draw 11-byte sprite at V0, V4
$F22    $1903   JP       $903            ; Jump to 903
$F24    $FC86   UNKNOWN  FC86            ; Unknown Fxxx instruction
$F26    $8626   SHR      V6              ; V6 >>= 1, VF = LSB
$F28    $F735   UNKNOWN  F735            ; Unknown Fxxx instruction
$F2A    $EBF5   UNKNOWN  $EBF5           ; Unknown Exxx instruction
$F2C    $CDB1   RND      VD, #B1         ; VD = random & B1
$F2E    $11EA   JP       $1EA            ; Jump to 1EA
$F30    $63F8   LD       V3, #F8         ; Load 248 into V3
$F32    $2F26   CALL     $F26            ; Call subroutine at F26
$F34    $4D24   SNE      VD, #24         ; Skip if VD != 36
$F36    $D234   DRW      V2, V3, #4      ; Draw 4-byte sprite at V2, V3
$F38    $E5C6   UNKNOWN  $E5C6           ; Unknown Exxx instruction
$F3A    $D36F   DRW      V3, V6, #F      ; Draw 15-byte sprite at V3, V6
$F3C    $B559   JP       V0, $559        ; Jump to V0 + 559
$F3E    $8FDB   UNKNOWN  8FDB            ; Unknown 8xxx instruction
$F40    $08E3   SYS      $8E3            ; System call to 8E3
$F42    $AD67   LD       I, $D67         ; Load D67 into I
$F44    $0266   SYS      $266            ; System call to 266
$F46    $C74C   RND      V7, #4C         ; V7 = random & 4C
$F48    $5B88   UNKNOWN  $5B88           ; Unknown 5xxx instruction
$F4A    $23A8   CALL     $3A8            ; Call subroutine at 3A8
$F4C    $567A   UNKNOWN  $567A           ; Unknown 5xxx instruction
$F4E    $77E8   ADD      V7, #E8         ; Add 232 to V7
$F50    $A10C   LD       I, $10C         ; Load 10C into I
$F52    $9286   UNKNOWN  $9286           ; Unknown 9xxx instruction
$F54    $81AA   UNKNOWN  81AA            ; Unknown 8xxx instruction
$F56    $F055   LD       [I], V0         ; Store V0-V0 at I
$F58    $1D7E   JP       $D7E            ; Jump to D7E
$F5A    $B723   JP       V0, $723        ; Jump to V0 + 723
$F5C    $950A   UNKNOWN  $950A           ; Unknown 9xxx instruction
$F5E    $3624   SE       V6, #24         ; Skip if V6 == 36
$F60    $41B2   SNE      V1, #B2         ; Skip if V1 != 178
$F62    $B279   JP       V0, $279        ; Jump to V0 + 279
$F64    $2296   CALL     $296            ; Call subroutine at 296
$F66    $6749   LD       V7, #49         ; Load 73 into V7
$F68    $CBD0   RND      VB, #D0         ; VB = random & D0
$F6A    $BF63   JP       V0, $F63        ; Jump to V0 + F63
$F6C    $1ECE   JP       $ECE            ; Jump to ECE
$F6E    $BA23   JP       V0, $A23        ; Jump to V0 + A23
$F70    $333A   SE       V3, #3A         ; Skip if V3 == 58
$F72    $F2D5   UNKNOWN  F2D5            ; Unknown Fxxx instruction
$F74    $986B   UNKNOWN  $986B           ; Unknown 9xxx instruction
$F76    $754B   ADD      V5, #4B         ; Add 75 to V5
$F78    $FD22   UNKNOWN  FD22            ; Unknown Fxxx instruction
$F7A    $EBCC   UNKNOWN  $EBCC           ; Unknown Exxx instruction
$F7C    $081A   SYS      $81A            ; System call to 81A
$F7E    $C5F7   RND      V5, #F7         ; V5 = random & F7
$F80    $5943   UNKNOWN  $5943           ; Unknown 5xxx instruction
$F82    $3160   SE       V1, #60         ; Skip if V1 == 96
$F84    $599F   UNKNOWN  $599F           ; Unknown 5xxx instruction
$F86    $A471   LD       I, $471         ; Load 471 into I
$F88    $B4C3   JP       V0, $4C3        ; Jump to V0 + 4C3
$F8A    $0372   SYS      $372            ; System call to 372
$F8C    $A732   LD       I, $732         ; Load 732 into I
$F8E    $E01E   UNKNOWN  $E01E           ; Unknown Exxx instruction
$F90    $EB58   UNKNOWN  $EB58           ; Unknown Exxx instruction
$F92    $9BC9   UNKNOWN  $9BC9           ; Unknown 9xxx instruction
$F94    $FC12   UNKNOWN  FC12            ; Unknown Fxxx instruction
$F96    $9D4D   UNKNOWN  $9D4D           ; Unknown 9xxx instruction
$F98    $6599   LD       V5, #99         ; Load 153 into V5
$F9A    $924A   UNKNOWN  $924A           ; Unknown 9xxx instruction
$F9C    $371A   SE       V7, #1A         ; Skip if V7 == 26
$F9E    $23E0   CALL     $3E0            ; Call subroutine at 3E0
$FA0    $B417   JP       V0, $417        ; Jump to V0 + 417
$FA2    $02A8   SYS      $2A8            ; System call to 2A8
$FA4    $8EAE   SHL      VE              ; VE <<= 1, VF = MSB
$FA6    $271A   CALL     $71A            ; Call subroutine at 71A
$FA8    $2B6C   CALL     $B6C            ; Call subroutine at B6C
$FAA    $361B   SE       V6, #1B         ; Skip if V6 == 27
$FAC    $24FC   CALL     $4FC            ; Call subroutine at 4FC
$FAE    $05DF   SYS      $5DF            ; System call to 5DF
$FB0    $5CD6   UNKNOWN  $5CD6           ; Unknown 5xxx instruction
$FB2    $24B7   CALL     $4B7            ; Call subroutine at 4B7
$FB4    $2174   CALL     $174            ; Call subroutine at 174
$FB6    $1E4E   JP       $E4E            ; Jump to E4E
$FB8    $DCD9   DRW      VC, VD, #9      ; Draw 9-byte sprite at VC, VD
$FBA    $B5A1   JP       V0, $5A1        ; Jump to V0 + 5A1
$FBC    $D0DA   DRW      V0, VD, #A      ; Draw 10-byte sprite at V0, VD
$FBE    $9D2B   UNKNOWN  $9D2B           ; Unknown 9xxx instruction
$FC0    $7270   ADD      V2, #70         ; Add 112 to V2
$FC2    $2A6D   CALL     $A6D            ; Call subroutine at A6D
$FC4    $1EA9   JP       $EA9            ; Jump to EA9
$FC6    $376A   SE       V7, #6A         ; Skip if V7 == 106
$FC8    $EE2B   UNKNOWN  $EE2B           ; Unknown Exxx instruction
$FCA    $9299   UNKNOWN  $9299           ; Unknown 9xxx instruction
$FCC    $6BFD   LD       VB, #FD         ; Load 253 into VB
$FCE    $AB62   LD       I, $B62         ; Load B62 into I
$FD0    $2022   CALL     $022            ; Call subroutine at 022
$FD2    $BC13   JP       V0, $C13        ; Jump to V0 + C13
$FD4    $5414   UNKNOWN  $5414           ; Unknown 5xxx instruction
$FD6    $F79C   UNKNOWN  F79C            ; Unknown Fxxx instruction
$FD8    $A60E   LD       I, $60E         ; Load 60E into I
$FDA    $69C7   LD       V9, #C7         ; Load 199 into V9
$FDC    $CB21   RND      VB, #21         ; VB = random & 21
$FDE    $2499   CALL     $499            ; Call subroutine at 499
$FE0    $023B   SYS      $23B            ; System call to 23B
$FE2    $7595   ADD      V5, #95         ; Add 149 to V5
$FE4    $2147   CALL     $147            ; Call subroutine at 147
$FE6    $34CC   SE       V4, #CC         ; Skip if V4 == 204
$FE8    $351D   SE       V5, #1D         ; Skip if V5 == 29
$FEA    $3E71   SE       VE, #71         ; Skip if VE == 113
$FEC    $7377   ADD      V3, #77         ; Add 119 to V3
$FEE    $DEBD   DRW      VE, VB, #D      ; Draw 13-byte sprite at VE, VB
$FF0    $EBFA   UNKNOWN  $EBFA           ; Unknown Exxx instruction
$FF2    $FCEA   UNKNOWN  FCEA            ; Unknown Fxxx instruction
$FF4    $8363   XOR      V3, V6          ; V3 ^= V6
$FF6    $F0E9   UNKNOWN  F0E9            ; Unknown Fxxx instruction
$FF8    $F8B4   UNKNOWN  F8B4            ; Unknown Fxxx instruction
$FFA    $EB7D   UNKNOWN  $EB7D           ; Unknown Exxx instruction
$FFC    $9E97   UNKNOWN  $9E97           ; Unknown 9xxx instruction
$FFE    $1364   JP       $364            ; Jump to 364

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 505 (28.2%)
  JP      : 218 (12.2%)
  LD      : 214 (11.9%)
  CALL    : 185 (10.3%)
  RND     : 111 ( 6.2%)
  SYS     : 106 ( 5.9%)
  SE      : 105 ( 5.9%)
  SNE     : 101 ( 5.6%)
  DRW     : 100 ( 5.6%)
  ADD     :  92 ( 5.1%)
  SHL     :  12 ( 0.7%)
  AND     :   8 ( 0.4%)
  XOR     :   8 ( 0.4%)
  SUB     :   7 ( 0.4%)
  SHR     :   7 ( 0.4%)
  SUBN    :   7 ( 0.4%)
  OR      :   5 ( 0.3%)
  SKNP    :   1 ( 0.1%)

Memory Operations: 306 (17.1%)
Arithmetic Operations: 127 (7.1%)
