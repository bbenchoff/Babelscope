
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B6861D01_I18292_C1001_f59b3e04b75b.ch8
ROM Size: 3584 bytes
Instructions Found: 1791

DISCOVERY INFORMATION:
Batch: 6861
Instance: 18292
Direction: ascending
Final Array: [0, 0, 0, 39, 58, 67, 112, 204]
Operations: R:0 W:1 C:106 S:6

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 120
Sort Array References:
  $200: LD I, $994 ; Load 994 into I
  $226: LD I, $99A ; Load 99A into I
  $23C: LD I, $CF0 ; Load CF0 into I
  $244: LD I, $246 ; Load 246 into I
  $262: LD I, $667 ; Load 667 into I
  $270: LD I, $541 ; Load 541 into I
  $2B6: LD I, $119 ; Load 119 into I
  $2B8: LD I, $5B5 ; Load 5B5 into I
  $2BC: LD I, $6F7 ; Load 6F7 into I
  $2F2: LD I, $41F ; Load 41F into I
  $2FC: LD I, $49A ; Load 49A into I
  $340: LD I, $D03 ; Load D03 into I
  $34E: ADD I, V9 ; I ADDRESS MANIPULATION
  $368: LD I, $BA5 ; Load BA5 into I
  $376: LD I, $EEC ; Load EEC into I
  $392: LD I, $5E0 ; Load 5E0 into I
  $3A0: LD I, $F41 ; Load F41 into I
  $3A4: LD I, $F16 ; Load F16 into I
  $3AC: LD I, $1AE ; Load 1AE into I
  $3C6: LD I, $0B4 ; Load 0B4 into I
  $3CE: LD I, $59E ; Load 59E into I
  $3D0: LD I, $315 ; Load 315 into I
  $3FA: LD I, $8BC ; Load 8BC into I
  $452: LD I, $460 ; Load 460 into I
  $456: LD I, $89C ; Load 89C into I
  $46A: LD I, $B0F ; Load B0F into I
  $482: LD I, $421 ; Load 421 into I
  $49E: LD I, $ED2 ; Load ED2 into I
  $4AA: LD I, $436 ; Load 436 into I
  $4B8: LD I, $B68 ; Load B68 into I
  $4EA: LD I, $C7A ; Load C7A into I
  $4EC: LD I, $2F7 ; Load 2F7 into I
  $5E4: LD I, $491 ; Load 491 into I
  $5F6: LD I, $70C ; Load 70C into I
  $660: LD I, $A70 ; Load A70 into I
  $666: LD I, $0E2 ; Load 0E2 into I
  $682: LD VD, [I] ; Load V0-VD from I
  $6AA: LD I, $9C2 ; Load 9C2 into I
  $6BC: LD I, $92D ; Load 92D into I
  $6D2: LD I, $5E7 ; Load 5E7 into I
  $6E4: LD I, $A1E ; Load A1E into I
  $6EC: LD I, $E78 ; Load E78 into I
  $72E: LD I, $8E8 ; Load 8E8 into I
  $748: LD I, $FD1 ; Load FD1 into I
  $766: LD I, $71E ; Load 71E into I
  $76A: LD I, $114 ; Load 114 into I
  $798: LD I, $20D ; Load 20D into I
  $7B8: LD I, $443 ; Load 443 into I
  $7D4: LD I, $F91 ; Load F91 into I
  $7EC: LD I, $A83 ; Load A83 into I
  $7F0: LD I, $2FA ; Load 2FA into I
  $7F8: LD I, $B84 ; Load B84 into I
  $802: LD I, $E58 ; Load E58 into I
  $84E: LD I, $226 ; Load 226 into I
  $856: LD I, $097 ; Load 097 into I
  $86E: LD I, $333 ; Load 333 into I
  $88C: LD I, $032 ; Load 032 into I
  $894: LD I, $C6C ; Load C6C into I
  $8B2: LD I, $F8E ; Load F8E into I
  $8B4: LD I, $0AE ; Load 0AE into I
  $8CE: LD I, $986 ; Load 986 into I
  $94A: LD I, $4EF ; Load 4EF into I
  $96A: LD I, $4E9 ; Load 4E9 into I
  $976: LD I, $5FB ; Load 5FB into I
  $984: LD I, $0A0 ; Load 0A0 into I
  $988: LD I, $1A5 ; Load 1A5 into I
  $9C8: LD I, $85F ; Load 85F into I
  $9F4: LD I, $98A ; Load 98A into I
  $A3A: LD I, $BD3 ; Load BD3 into I
  $A3C: LD I, $BBF ; Load BBF into I
  $A44: LD I, $D8E ; Load D8E into I
  $A5A: LD I, $A80 ; Load A80 into I
  $A9C: LD I, $D26 ; Load D26 into I
  $A9E: LD I, $1EF ; Load 1EF into I
  $AE0: LD I, $6A4 ; Load 6A4 into I
  $AE6: LD [I], VB ; Store V0-VB at I
  $B04: LD I, $937 ; Load 937 into I
  $B12: LD I, $A20 ; Load A20 into I
  $B24: LD I, $B71 ; Load B71 into I
  $B2C: LD I, $1E9 ; Load 1E9 into I
  $B32: LD I, $6B4 ; Load 6B4 into I
  $B40: LD I, $346 ; Load 346 into I
  $B7A: LD I, $D80 ; Load D80 into I
  $B96: LD I, $763 ; Load 763 into I
  $BA0: LD I, $751 ; Load 751 into I
  $BA2: LD I, $13F ; Load 13F into I
  $BC4: LD I, $92E ; Load 92E into I
  $BD6: LD I, $300 ; Load 300 into I
  $C74: LD I, $54F ; Load 54F into I
  $C90: LD I, $99B ; Load 99B into I
  $CB0: LD I, $1F5 ; Load 1F5 into I
  $CBA: LD I, $22E ; Load 22E into I
  $CDC: LD I, $EEB ; Load EEB into I
  $CE6: LD I, $815 ; Load 815 into I
  $CE8: LD I, $B98 ; Load B98 into I
  $D06: LD I, $9CF ; Load 9CF into I
  $D20: LD I, $37F ; Load 37F into I
  $D36: LD I, $EE3 ; Load EE3 into I
  $D8C: LD I, $0E4 ; Load 0E4 into I
  $D8E: LD I, $C02 ; Load C02 into I
  $D98: LD I, $3A1 ; Load 3A1 into I
  $DB2: LD I, $305 ; Load 305 into I
  $DBA: LD I, $F3D ; Load F3D into I
  $DC2: LD [I], VF ; Store V0-VF at I
  $DDC: LD I, $574 ; Load 574 into I
  $DEE: LD I, $319 ; Load 319 into I
  $E36: LD I, $6DE ; Load 6DE into I
  $E5E: LD I, $E79 ; Load E79 into I
  $E68: LD I, $B30 ; Load B30 into I
  $E7A: LD I, $3E6 ; Load 3E6 into I
  $E8E: LD I, $0DE ; Load 0DE into I
  $EB8: LD I, $579 ; Load 579 into I
  $EC0: LD I, $BEF ; Load BEF into I
  $EEE: LD I, $692 ; Load 692 into I
  $F02: LD I, $0AD ; Load 0AD into I
  $F34: LD I, $099 ; Load 099 into I
  $F6A: LD I, $E72 ; Load E72 into I
  $F82: LD I, $B7B ; Load B7B into I
  $F88: LD I, $7E8 ; Load 7E8 into I
  $F90: LD I, $7AE ; Load 7AE into I

CONTROL FLOW ANALYSIS:
Jumps: 218
Calls: 114
Branches: 226
Loops: 134
Loop Structures:
  $25E -> $1BE (backward jump)
  $280 -> $25D (backward jump)
  $2E6 -> $011 (backward jump)
  $334 -> $324 (backward jump)
  $338 -> $25F (backward jump)
  $33A -> $198 (backward jump)
  $362 -> $11A (backward jump)
  $382 -> $269 (backward jump)
  $390 -> $1E9 (backward jump)
  $420 -> $31B (backward jump)
  $460 -> $3EC (backward jump)
  $46E -> $43E (backward jump)
  $492 -> $0D8 (backward jump)
  $4CA -> $15A (backward jump)
  $4EE -> $07B (backward jump)
  $50C -> $0FE (backward jump)
  $52A -> $1B5 (backward jump)
  $54E -> $1A4 (backward jump)
  $5AE -> $2C2 (backward jump)
  $5C4 -> $351 (backward jump)
  $606 -> $3F3 (backward jump)
  $618 -> $2D1 (backward jump)
  $67C -> $037 (backward jump)
  $68A -> $5AB (backward jump)
  $6EA -> $56C (backward jump)
  $704 -> $453 (backward jump)
  $710 -> $686 (backward jump)
  $742 -> $332 (backward jump)
  $758 -> $16D (backward jump)
  $7C2 -> $75C (backward jump)
  $810 -> $19D (backward jump)
  $824 -> $308 (backward jump)
  $872 -> $183 (backward jump)
  $884 -> $365 (backward jump)
  $8A8 -> $3A2 (backward jump)
  $8AE -> $547 (backward jump)
  $8B6 -> $575 (backward jump)
  $928 -> $591 (backward jump)
  $936 -> $73E (backward jump)
  $940 -> $722 (backward jump)
  $952 -> $36E (backward jump)
  $964 -> $563 (backward jump)
  $968 -> $5C8 (backward jump)
  $96E -> $90A (backward jump)
  $974 -> $22F (backward jump)
  $9A2 -> $313 (backward jump)
  $9AC -> $18B (backward jump)
  $9BC -> $2EC (backward jump)
  $9CE -> $8C1 (backward jump)
  $9D8 -> $8B6 (backward jump)
  $A16 -> $125 (backward jump)
  $A18 -> $5CB (backward jump)
  $A1C -> $078 (backward jump)
  $A1E -> $6E7 (backward jump)
  $A34 -> $5E8 (backward jump)
  $A54 -> $633 (backward jump)
  $A58 -> $40A (backward jump)
  $A60 -> $7D4 (backward jump)
  $A86 -> $0BB (backward jump)
  $A90 -> $338 (backward jump)
  $AA2 -> $845 (backward jump)
  $AA6 -> $A67 (backward jump)
  $AE4 -> $4D4 (backward jump)
  $AF2 -> $556 (backward jump)
  $AFA -> $73D (backward jump)
  $AFE -> $10E (backward jump)
  $B02 -> $47C (backward jump)
  $B18 -> $828 (backward jump)
  $B1C -> $A8B (backward jump)
  $B20 -> $A85 (backward jump)
  $B46 -> $A16 (backward jump)
  $B5C -> $1FB (backward jump)
  $B6A -> $A01 (backward jump)
  $B70 -> $793 (backward jump)
  $BE0 -> $55D (backward jump)
  $BF2 -> $373 (backward jump)
  $BF4 -> $1C2 (backward jump)
  $C02 -> $7CE (backward jump)
  $C04 -> $047 (backward jump)
  $C08 -> $A32 (backward jump)
  $C26 -> $B11 (backward jump)
  $C34 -> $C18 (backward jump)
  $C6E -> $4A5 (backward jump)
  $C8C -> $773 (backward jump)
  $C96 -> $556 (backward jump)
  $CA2 -> $A46 (backward jump)
  $CAC -> $86B (backward jump)
  $CB2 -> $86F (backward jump)
  $CB8 -> $64E (backward jump)
  $CBE -> $1C6 (backward jump)
  $CC0 -> $999 (backward jump)
  $CF4 -> $94D (backward jump)
  $CF6 -> $471 (backward jump)
  $D18 -> $5FE (backward jump)
  $D56 -> $915 (backward jump)
  $D60 -> $039 (backward jump)
  $D74 -> $57B (backward jump)
  $D76 -> $220 (backward jump)
  $D86 -> $3B1 (backward jump)
  $DC8 -> $351 (backward jump)
  $DEC -> $975 (backward jump)
  $E14 -> $899 (backward jump)
  $E28 -> $B92 (backward jump)
  $E34 -> $DC7 (backward jump)
  $E3C -> $829 (backward jump)
  $E44 -> $A11 (backward jump)
  $E46 -> $995 (backward jump)
  $E52 -> $A25 (backward jump)
  $E70 -> $8EB (backward jump)
  $E82 -> $391 (backward jump)
  $EA4 -> $779 (backward jump)
  $EE6 -> $8B2 (backward jump)
  $EF0 -> $4CC (backward jump)
  $EF2 -> $41B (backward jump)
  $EFC -> $B2C (backward jump)
  $F16 -> $CF0 (backward jump)
  $F22 -> $D93 (backward jump)
  $F26 -> $B2C (backward jump)
  $F3A -> $E4C (backward jump)
  $F3C -> $100 (backward jump)
  $F5E -> $9AC (backward jump)
  $F78 -> $88A (backward jump)
  $F7E -> $415 (backward jump)
  $F92 -> $210 (backward jump)
  $F96 -> $C74 (backward jump)
  $F9C -> $68C (backward jump)
  $FA2 -> $C0B (backward jump)
  $FBE -> $043 (backward jump)
  $FCC -> $7F5 (backward jump)
  $FCE -> $4CD (backward jump)
  $FD8 -> $663 (backward jump)
  $FEA -> $7B1 (backward jump)
  $FFA -> $D78 (backward jump)
  $FFE -> $C24 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $A994   LD       I, $994         ; Load 994 into I
$202    $E306   UNKNOWN  $E306           ; Unknown Exxx instruction
$204    $EEBB   UNKNOWN  $EEBB           ; Unknown Exxx instruction
$206    $0EAB   SYS      $EAB            ; System call to EAB
$208    $50CF   UNKNOWN  $50CF           ; Unknown 5xxx instruction
$20A    $C57F   RND      V5, #7F         ; V5 = random & 7F
$20C    $7C19   ADD      VC, #19         ; Add 25 to VC
$20E    $935B   UNKNOWN  $935B           ; Unknown 9xxx instruction
$210    $082A   SYS      $82A            ; System call to 82A
$212    $62F5   LD       V2, #F5         ; Load 245 into V2
$214    $F1E9   UNKNOWN  F1E9            ; Unknown Fxxx instruction
$216    $99A7   UNKNOWN  $99A7           ; Unknown 9xxx instruction
$218    $3A28   SE       VA, #28         ; Skip if VA == 40
$21A    $DC30   DRW      VC, V3, #0      ; Draw 0-byte sprite at VC, V3
$21C    $83D6   SHR      V3              ; V3 >>= 1, VF = LSB
$21E    $5CBB   UNKNOWN  $5CBB           ; Unknown 5xxx instruction
$220    $9EAB   UNKNOWN  $9EAB           ; Unknown 9xxx instruction
$222    $0E8A   SYS      $E8A            ; System call to E8A
$224    $D785   DRW      V7, V8, #5      ; Draw 5-byte sprite at V7, V8
$226    $A99A   LD       I, $99A         ; Load 99A into I
$228    $75DC   ADD      V5, #DC         ; Add 220 to V5
$22A    $EA86   UNKNOWN  $EA86           ; Unknown Exxx instruction
$22C    $B5F7   JP       V0, $5F7        ; Jump to V0 + 5F7
$22E    $1EAC   JP       $EAC            ; Jump to EAC
$230    $6BA9   LD       VB, #A9         ; Load 169 into VB
$232    $0E67   SYS      $E67            ; System call to E67
$234    $5229   UNKNOWN  $5229           ; Unknown 5xxx instruction
$236    $4EC1   SNE      VE, #C1         ; Skip if VE != 193
$238    $2DFD   CALL     $DFD            ; Call subroutine at DFD
$23A    $669F   LD       V6, #9F         ; Load 159 into V6
$23C    $ACF0   LD       I, $CF0         ; Load CF0 into I
$23E    $8543   XOR      V5, V4          ; V5 ^= V4
$240    $5EBB   UNKNOWN  $5EBB           ; Unknown 5xxx instruction
$242    $CABD   RND      VA, #BD         ; VA = random & BD
$244    $A246   LD       I, $246         ; Load 246 into I
$246    $1CC4   JP       $CC4            ; Jump to CC4
$248    $E457   UNKNOWN  $E457           ; Unknown Exxx instruction
$24A    $359F   SE       V5, #9F         ; Skip if V5 == 159
$24C    $0901   SYS      $901            ; System call to 901
$24E    $DC59   DRW      VC, V5, #9      ; Draw 9-byte sprite at VC, V5
$250    $EFC2   UNKNOWN  $EFC2           ; Unknown Exxx instruction
$252    $8CDB   UNKNOWN  8CDB            ; Unknown 8xxx instruction
$254    $1BF1   JP       $BF1            ; Jump to BF1
$256    $31DF   SE       V1, #DF         ; Skip if V1 == 223
$258    $D89D   DRW      V8, V9, #D      ; Draw 13-byte sprite at V8, V9
$25A    $E386   UNKNOWN  $E386           ; Unknown Exxx instruction
$25C    $608A   LD       V0, #8A         ; Load 138 into V0
$25E    $B1BE   JP       V0, $1BE        ; Jump to V0 + 1BE
$260    $489A   SNE      V8, #9A         ; Skip if V8 != 154
$262    $A667   LD       I, $667         ; Load 667 into I
$264    $2B9E   CALL     $B9E            ; Call subroutine at B9E
$266    $473E   SNE      V7, #3E         ; Skip if V7 != 62
$268    $B42B   JP       V0, $42B        ; Jump to V0 + 42B
$26A    $8A92   AND      VA, V9          ; VA &= V9
$26C    $BA44   JP       V0, $A44        ; Jump to V0 + A44
$26E    $99C2   UNKNOWN  $99C2           ; Unknown 9xxx instruction
$270    $A541   LD       I, $541         ; Load 541 into I
$272    $8731   OR       V7, V3          ; V7 |= V3
$274    $24D4   CALL     $4D4            ; Call subroutine at 4D4
$276    $9269   UNKNOWN  $9269           ; Unknown 9xxx instruction
$278    $9136   UNKNOWN  $9136           ; Unknown 9xxx instruction
$27A    $15F0   JP       $5F0            ; Jump to 5F0
$27C    $C8B5   RND      V8, #B5         ; V8 = random & B5
$27E    $9681   UNKNOWN  $9681           ; Unknown 9xxx instruction
$280    $125D   JP       $25D            ; Jump to 25D
$282    $E7FD   UNKNOWN  $E7FD           ; Unknown Exxx instruction
$284    $74AD   ADD      V4, #AD         ; Add 173 to V4
$286    $6302   LD       V3, #02         ; Load 2 into V3
$288    $E89A   UNKNOWN  $E89A           ; Unknown Exxx instruction
$28A    $EC42   UNKNOWN  $EC42           ; Unknown Exxx instruction
$28C    $801E   SHL      V0              ; V0 <<= 1, VF = MSB
$28E    $9817   UNKNOWN  $9817           ; Unknown 9xxx instruction
$290    $4F11   SNE      VF, #11         ; Skip if VF != 17
$292    $0C56   SYS      $C56            ; System call to C56
$294    $E377   UNKNOWN  $E377           ; Unknown Exxx instruction
$296    $D982   DRW      V9, V8, #2      ; Draw 2-byte sprite at V9, V8
$298    $8E35   SUB      VE, V3          ; VE -= V3, VF = !borrow
$29A    $2633   CALL     $633            ; Call subroutine at 633
$29C    $07BB   SYS      $7BB            ; System call to 7BB
$29E    $0572   SYS      $572            ; System call to 572
$2A0    $FCEF   UNKNOWN  FCEF            ; Unknown Fxxx instruction
$2A2    $00EF   SYS      $0EF            ; System call to 0EF
$2A4    $8C8F   UNKNOWN  8C8F            ; Unknown 8xxx instruction
$2A6    $DD20   DRW      VD, V2, #0      ; Draw 0-byte sprite at VD, V2
$2A8    $04CB   SYS      $4CB            ; System call to 4CB
$2AA    $2F3E   CALL     $F3E            ; Call subroutine at F3E
$2AC    $1DA6   JP       $DA6            ; Jump to DA6
$2AE    $9AC9   UNKNOWN  $9AC9           ; Unknown 9xxx instruction
$2B0    $4EDD   SNE      VE, #DD         ; Skip if VE != 221
$2B2    $4920   SNE      V9, #20         ; Skip if V9 != 32
$2B4    $3697   SE       V6, #97         ; Skip if V6 == 151
$2B6    $A119   LD       I, $119         ; Load 119 into I
$2B8    $A5B5   LD       I, $5B5         ; Load 5B5 into I
$2BA    $2BF7   CALL     $BF7            ; Call subroutine at BF7
$2BC    $A6F7   LD       I, $6F7         ; Load 6F7 into I
$2BE    $D30D   DRW      V3, V0, #D      ; Draw 13-byte sprite at V3, V0
$2C0    $B510   JP       V0, $510        ; Jump to V0 + 510
$2C2    $EEB6   UNKNOWN  $EEB6           ; Unknown Exxx instruction
$2C4    $3AB3   SE       VA, #B3         ; Skip if VA == 179
$2C6    $94F2   UNKNOWN  $94F2           ; Unknown 9xxx instruction
$2C8    $2C44   CALL     $C44            ; Call subroutine at C44
$2CA    $83A2   AND      V3, VA          ; V3 &= VA
$2CC    $22B2   CALL     $2B2            ; Call subroutine at 2B2
$2CE    $25A8   CALL     $5A8            ; Call subroutine at 5A8
$2D0    $9AE6   UNKNOWN  $9AE6           ; Unknown 9xxx instruction
$2D2    $8BD4   ADD      VB, VD          ; VB += VD, VF = carry
$2D4    $6C49   LD       VC, #49         ; Load 73 into VC
$2D6    $9F10   SNE      VF, V1          ; Skip if VF != V1
$2D8    $27EA   CALL     $7EA            ; Call subroutine at 7EA
$2DA    $B75B   JP       V0, $75B        ; Jump to V0 + 75B
$2DC    $E2B8   UNKNOWN  $E2B8           ; Unknown Exxx instruction
$2DE    $9713   UNKNOWN  $9713           ; Unknown 9xxx instruction
$2E0    $97D6   UNKNOWN  $97D6           ; Unknown 9xxx instruction
$2E2    $CE03   RND      VE, #03         ; VE = random & 03
$2E4    $60CF   LD       V0, #CF         ; Load 207 into V0
$2E6    $1011   JP       $011            ; Jump to 011
$2E8    $034A   SYS      $34A            ; System call to 34A
$2EA    $9ECF   UNKNOWN  $9ECF           ; Unknown 9xxx instruction
$2EC    $C1CA   RND      V1, #CA         ; V1 = random & CA
$2EE    $88BB   UNKNOWN  88BB            ; Unknown 8xxx instruction
$2F0    $DE91   DRW      VE, V9, #1      ; Draw 1-byte sprite at VE, V9
$2F2    $A41F   LD       I, $41F         ; Load 41F into I
$2F4    $6F44   LD       VF, #44         ; Load 68 into VF
$2F6    $91D0   SNE      V1, VD          ; Skip if V1 != VD
$2F8    $EE2D   UNKNOWN  $EE2D           ; Unknown Exxx instruction
$2FA    $8444   ADD      V4, V4          ; V4 += V4, VF = carry
$2FC    $A49A   LD       I, $49A         ; Load 49A into I
$2FE    $8C32   AND      VC, V3          ; VC &= V3
$302    $0027   SYS      $027            ; System call to 027
$304    $3A43   SE       VA, #43         ; Skip if VA == 67
$306    $70CC   ADD      V0, #CC         ; Add 204 to V0
$308    $367D   SE       V6, #7D         ; Skip if V6 == 125
$30A    $4A3E   SNE      VA, #3E         ; Skip if VA != 62
$30C    $142C   JP       $42C            ; Jump to 42C
$30E    $D807   DRW      V8, V0, #7      ; Draw 7-byte sprite at V8, V0
$310    $329C   SE       V2, #9C         ; Skip if V2 == 156
$312    $D0C8   DRW      V0, VC, #8      ; Draw 8-byte sprite at V0, VC
$314    $DA81   DRW      VA, V8, #1      ; Draw 1-byte sprite at VA, V8
$316    $F69F   UNKNOWN  F69F            ; Unknown Fxxx instruction
$318    $20CB   CALL     $0CB            ; Call subroutine at 0CB
$31A    $28AF   CALL     $8AF            ; Call subroutine at 8AF
$31C    $F2B7   UNKNOWN  F2B7            ; Unknown Fxxx instruction
$31E    $8E42   AND      VE, V4          ; VE &= V4
$320    $50A2   UNKNOWN  $50A2           ; Unknown 5xxx instruction
$322    $85A7   SUBN     V5, VA          ; V5 = VA - V5, VF = !borrow
$324    $E97F   UNKNOWN  $E97F           ; Unknown Exxx instruction
$326    $EAF5   UNKNOWN  $EAF5           ; Unknown Exxx instruction
$328    $CDB2   RND      VD, #B2         ; VD = random & B2
$32A    $99B6   UNKNOWN  $99B6           ; Unknown 9xxx instruction
$32C    $F2BC   UNKNOWN  F2BC            ; Unknown Fxxx instruction
$32E    $DC35   DRW      VC, V3, #5      ; Draw 5-byte sprite at VC, V3
$330    $F9C7   UNKNOWN  F9C7            ; Unknown Fxxx instruction
$332    $C49B   RND      V4, #9B         ; V4 = random & 9B
$334    $1324   JP       $324            ; Jump to 324
$336    $39CD   SE       V9, #CD         ; Skip if V9 == 205
$338    $B25F   JP       V0, $25F        ; Jump to V0 + 25F
$33A    $1198   JP       $198            ; Jump to 198
$33C    $4C9F   SNE      VC, #9F         ; Skip if VC != 159
$33E    $686A   LD       V8, #6A         ; Load 106 into V8
$340    $AD03   LD       I, $D03         ; Load D03 into I
$342    $1574   JP       $574            ; Jump to 574
$344    $94EB   UNKNOWN  $94EB           ; Unknown 9xxx instruction
$346    $D07C   DRW      V0, V7, #C      ; Draw 12-byte sprite at V0, V7
$348    $FACB   UNKNOWN  FACB            ; Unknown Fxxx instruction
$34A    $3516   SE       V5, #16         ; Skip if V5 == 22
$34C    $3E55   SE       VE, #55         ; Skip if VE == 85
$34E    $F91E   ADD      I, V9           ; I += V9
$350    $CEEF   RND      VE, #EF         ; VE = random & EF
$352    $04BD   SYS      $4BD            ; System call to 4BD
$354    $76CE   ADD      V6, #CE         ; Add 206 to V6
$356    $281F   CALL     $81F            ; Call subroutine at 81F
$358    $88B0   LD       V8, VB          ; V8 = VB
$35A    $7026   ADD      V0, #26         ; Add 38 to V0
$35C    $EB25   UNKNOWN  $EB25           ; Unknown Exxx instruction
$35E    $CB1C   RND      VB, #1C         ; VB = random & 1C
$360    $7090   ADD      V0, #90         ; Add 144 to V0
$362    $111A   JP       $11A            ; Jump to 11A
$364    $64F8   LD       V4, #F8         ; Load 248 into V4
$366    $90F2   UNKNOWN  $90F2           ; Unknown 9xxx instruction
$368    $ABA5   LD       I, $BA5         ; Load BA5 into I
$36A    $F892   UNKNOWN  F892            ; Unknown Fxxx instruction
$36C    $5696   UNKNOWN  $5696           ; Unknown 5xxx instruction
$36E    $2392   CALL     $392            ; Call subroutine at 392
$370    $8F81   OR       VF, V8          ; VF |= V8
$372    $E9F1   UNKNOWN  $E9F1           ; Unknown Exxx instruction
$374    $02A5   SYS      $2A5            ; System call to 2A5
$376    $AEEC   LD       I, $EEC         ; Load EEC into I
$378    $BE36   JP       V0, $E36        ; Jump to V0 + E36
$37A    $49DF   SNE      V9, #DF         ; Skip if V9 != 223
$37C    $3B8A   SE       VB, #8A         ; Skip if VB == 138
$37E    $07D6   SYS      $7D6            ; System call to 7D6
$380    $6595   LD       V5, #95         ; Load 149 into V5
$382    $1269   JP       $269            ; Jump to 269
$384    $F117   UNKNOWN  F117            ; Unknown Fxxx instruction
$386    $1B5C   JP       $B5C            ; Jump to B5C
$388    $57D4   UNKNOWN  $57D4           ; Unknown 5xxx instruction
$38A    $91F5   UNKNOWN  $91F5           ; Unknown 9xxx instruction
$38C    $D52B   DRW      V5, V2, #B      ; Draw 11-byte sprite at V5, V2
$38E    $685A   LD       V8, #5A         ; Load 90 into V8
$390    $B1E9   JP       V0, $1E9        ; Jump to V0 + 1E9
$392    $A5E0   LD       I, $5E0         ; Load 5E0 into I
$394    $BF94   JP       V0, $F94        ; Jump to V0 + F94
$396    $8CE7   SUBN     VC, VE          ; VC = VE - VC, VF = !borrow
$398    $B51C   JP       V0, $51C        ; Jump to V0 + 51C
$39A    $8F3D   UNKNOWN  8F3D            ; Unknown 8xxx instruction
$39C    $89D8   UNKNOWN  89D8            ; Unknown 8xxx instruction
$39E    $3FD3   SE       VF, #D3         ; Skip if VF == 211
$3A0    $AF41   LD       I, $F41         ; Load F41 into I
$3A2    $E1D2   UNKNOWN  $E1D2           ; Unknown Exxx instruction
$3A4    $AF16   LD       I, $F16         ; Load F16 into I
$3A6    $7B25   ADD      VB, #25         ; Add 37 to VB
$3A8    $6849   LD       V8, #49         ; Load 73 into V8
$3AA    $DA63   DRW      VA, V6, #3      ; Draw 3-byte sprite at VA, V6
$3AC    $A1AE   LD       I, $1AE         ; Load 1AE into I
$3AE    $ECF7   UNKNOWN  $ECF7           ; Unknown Exxx instruction
$3B0    $D9B1   DRW      V9, VB, #1      ; Draw 1-byte sprite at V9, VB
$3B2    $5893   UNKNOWN  $5893           ; Unknown 5xxx instruction
$3B4    $4EC8   SNE      VE, #C8         ; Skip if VE != 200
$3B6    $CEC4   RND      VE, #C4         ; VE = random & C4
$3B8    $5E01   UNKNOWN  $5E01           ; Unknown 5xxx instruction
$3BA    $1E56   JP       $E56            ; Jump to E56
$3BC    $E743   UNKNOWN  $E743           ; Unknown Exxx instruction
$3BE    $D457   DRW      V4, V5, #7      ; Draw 7-byte sprite at V4, V5
$3C0    $8E7D   UNKNOWN  8E7D            ; Unknown 8xxx instruction
$3C2    $005E   SYS      $05E            ; System call to 05E
$3C4    $CFBD   RND      VF, #BD         ; VF = random & BD
$3C6    $A0B4   LD       I, $0B4         ; Load 0B4 into I
$3C8    $1AA8   JP       $AA8            ; Jump to AA8
$3CA    $E2A5   UNKNOWN  $E2A5           ; Unknown Exxx instruction
$3CC    $0856   SYS      $856            ; System call to 856
$3CE    $A59E   LD       I, $59E         ; Load 59E into I
$3D0    $A315   LD       I, $315         ; Load 315 into I
$3D2    $152C   JP       $52C            ; Jump to 52C
$3D4    $DE19   DRW      VE, V1, #9      ; Draw 9-byte sprite at VE, V1
$3D6    $1CDE   JP       $CDE            ; Jump to CDE
$3D8    $DB0D   DRW      VB, V0, #D      ; Draw 13-byte sprite at VB, V0
$3DA    $6912   LD       V9, #12         ; Load 18 into V9
$3DC    $B804   JP       V0, $804        ; Jump to V0 + 804
$3DE    $F62D   UNKNOWN  F62D            ; Unknown Fxxx instruction
$3E0    $7B2B   ADD      VB, #2B         ; Add 43 to VB
$3E2    $B9D2   JP       V0, $9D2        ; Jump to V0 + 9D2
$3E4    $7E68   ADD      VE, #68         ; Add 104 to VE
$3E6    $7BC0   ADD      VB, #C0         ; Add 192 to VB
$3E8    $F9F1   UNKNOWN  F9F1            ; Unknown Fxxx instruction
$3EA    $78F7   ADD      V8, #F7         ; Add 247 to V8
$3EC    $2A19   CALL     $A19            ; Call subroutine at A19
$3EE    $21F3   CALL     $1F3            ; Call subroutine at 1F3
$3F0    $081C   SYS      $81C            ; System call to 81C
$3F2    $018F   SYS      $18F            ; System call to 18F
$3F4    $FD42   UNKNOWN  FD42            ; Unknown Fxxx instruction
$3F6    $3CEF   SE       VC, #EF         ; Skip if VC == 239
$3F8    $6BE8   LD       VB, #E8         ; Load 232 into VB
$3FA    $A8BC   LD       I, $8BC         ; Load 8BC into I
$3FC    $61A3   LD       V1, #A3         ; Load 163 into V1
$3FE    $C39E   RND      V3, #9E         ; V3 = random & 9E
$400    $0B8E   SYS      $B8E            ; System call to B8E
$402    $34D8   SE       V4, #D8         ; Skip if V4 == 216
$404    $883A   UNKNOWN  883A            ; Unknown 8xxx instruction
$406    $281D   CALL     $81D            ; Call subroutine at 81D
$408    $C71C   RND      V7, #1C         ; V7 = random & 1C
$40A    $426B   SNE      V2, #6B         ; Skip if V2 != 107
$40C    $364E   SE       V6, #4E         ; Skip if V6 == 78
$40E    $4701   SNE      V7, #01         ; Skip if V7 != 1
$410    $8EDA   UNKNOWN  8EDA            ; Unknown 8xxx instruction
$412    $152F   JP       $52F            ; Jump to 52F
$414    $D7C0   DRW      V7, VC, #0      ; Draw 0-byte sprite at V7, VC
$416    $B56C   JP       V0, $56C        ; Jump to V0 + 56C
$418    $6125   LD       V1, #25         ; Load 37 into V1
$41A    $2CB5   CALL     $CB5            ; Call subroutine at CB5
$41C    $9632   UNKNOWN  $9632           ; Unknown 9xxx instruction
$41E    $57CD   UNKNOWN  $57CD           ; Unknown 5xxx instruction
$420    $B31B   JP       V0, $31B        ; Jump to V0 + 31B
$422    $2A6B   CALL     $A6B            ; Call subroutine at A6B
$424    $F9BC   UNKNOWN  F9BC            ; Unknown Fxxx instruction
$426    $3E4D   SE       VE, #4D         ; Skip if VE == 77
$428    $4778   SNE      V7, #78         ; Skip if V7 != 120
$42A    $2D35   CALL     $D35            ; Call subroutine at D35
$42C    $2542   CALL     $542            ; Call subroutine at 542
$42E    $60C9   LD       V0, #C9         ; Load 201 into V0
$430    $DA3C   DRW      VA, V3, #C      ; Draw 12-byte sprite at VA, V3
$432    $BAD4   JP       V0, $AD4        ; Jump to V0 + AD4
$434    $439D   SNE      V3, #9D         ; Skip if V3 != 157
$436    $EC28   UNKNOWN  $EC28           ; Unknown Exxx instruction
$438    $66CB   LD       V6, #CB         ; Load 203 into V6
$43A    $E1B4   UNKNOWN  $E1B4           ; Unknown Exxx instruction
$43C    $9C5C   UNKNOWN  $9C5C           ; Unknown 9xxx instruction
$43E    $8B06   SHR      VB              ; VB >>= 1, VF = LSB
$440    $8D5B   UNKNOWN  8D5B            ; Unknown 8xxx instruction
$442    $3CA1   SE       VC, #A1         ; Skip if VC == 161
$444    $15B0   JP       $5B0            ; Jump to 5B0
$446    $9666   UNKNOWN  $9666           ; Unknown 9xxx instruction
$448    $EE12   UNKNOWN  $EE12           ; Unknown Exxx instruction
$44A    $5E51   UNKNOWN  $5E51           ; Unknown 5xxx instruction
$44C    $6200   LD       V2, #00         ; Load 0 into V2
$44E    $9BA4   UNKNOWN  $9BA4           ; Unknown 9xxx instruction
$450    $162A   JP       $62A            ; Jump to 62A
$452    $A460   LD       I, $460         ; Load 460 into I
$454    $2651   CALL     $651            ; Call subroutine at 651
$456    $A89C   LD       I, $89C         ; Load 89C into I
$458    $0911   SYS      $911            ; System call to 911
$45A    $8A79   UNKNOWN  8A79            ; Unknown 8xxx instruction
$45C    $BD5E   JP       V0, $D5E        ; Jump to V0 + D5E
$45E    $59CC   UNKNOWN  $59CC           ; Unknown 5xxx instruction
$460    $B3EC   JP       V0, $3EC        ; Jump to V0 + 3EC
$462    $CC0B   RND      VC, #0B         ; VC = random & 0B
$464    $6241   LD       V2, #41         ; Load 65 into V2
$466    $EF0D   UNKNOWN  $EF0D           ; Unknown Exxx instruction
$468    $7D2E   ADD      VD, #2E         ; Add 46 to VD
$46A    $AB0F   LD       I, $B0F         ; Load B0F into I
$46C    $5D60   SE       VD, V6          ; Skip if VD == V6
$46E    $B43E   JP       V0, $43E        ; Jump to V0 + 43E
$470    $F767   UNKNOWN  F767            ; Unknown Fxxx instruction
$472    $4935   SNE      V9, #35         ; Skip if V9 != 53
$474    $0FB0   SYS      $FB0            ; System call to FB0
$476    $52D8   UNKNOWN  $52D8           ; Unknown 5xxx instruction
$478    $EF30   UNKNOWN  $EF30           ; Unknown Exxx instruction
$47A    $C590   RND      V5, #90         ; V5 = random & 90
$47C    $D60F   DRW      V6, V0, #F      ; Draw 15-byte sprite at V6, V0
$47E    $45EF   SNE      V5, #EF         ; Skip if V5 != 239
$480    $8D00   LD       VD, V0          ; VD = V0
$482    $A421   LD       I, $421         ; Load 421 into I
$484    $F3B7   UNKNOWN  F3B7            ; Unknown Fxxx instruction
$486    $1730   JP       $730            ; Jump to 730
$488    $59F7   UNKNOWN  $59F7           ; Unknown 5xxx instruction
$48A    $E0FA   UNKNOWN  $E0FA           ; Unknown Exxx instruction
$48C    $78AE   ADD      V8, #AE         ; Add 174 to V8
$48E    $00F7   SYS      $0F7            ; System call to 0F7
$490    $63E5   LD       V3, #E5         ; Load 229 into V3
$492    $B0D8   JP       V0, $0D8        ; Jump to V0 + 0D8
$494    $3DD0   SE       VD, #D0         ; Skip if VD == 208
$496    $BFAA   JP       V0, $FAA        ; Jump to V0 + FAA
$498    $7803   ADD      V8, #03         ; Add 3 to V8
$49A    $8371   OR       V3, V7          ; V3 |= V7
$49C    $4912   SNE      V9, #12         ; Skip if V9 != 18
$49E    $AED2   LD       I, $ED2         ; Load ED2 into I
$4A0    $D078   DRW      V0, V7, #8      ; Draw 8-byte sprite at V0, V7
$4A2    $92EB   UNKNOWN  $92EB           ; Unknown 9xxx instruction
$4A4    $092D   SYS      $92D            ; System call to 92D
$4A6    $84F3   XOR      V4, VF          ; V4 ^= VF
$4A8    $044A   SYS      $44A            ; System call to 44A
$4AA    $A436   LD       I, $436         ; Load 436 into I
$4AC    $93D2   UNKNOWN  $93D2           ; Unknown 9xxx instruction
$4AE    $6593   LD       V5, #93         ; Load 147 into V5
$4B0    $34CB   SE       V4, #CB         ; Skip if V4 == 203
$4B2    $1844   JP       $844            ; Jump to 844
$4B4    $BACA   JP       V0, $ACA        ; Jump to V0 + ACA
$4B6    $71FE   ADD      V1, #FE         ; Add 254 to V1
$4B8    $AB68   LD       I, $B68         ; Load B68 into I
$4BA    $44A5   SNE      V4, #A5         ; Skip if V4 != 165
$4BC    $BEC2   JP       V0, $EC2        ; Jump to V0 + EC2
$4BE    $DFAF   DRW      VF, VA, #F      ; Draw 15-byte sprite at VF, VA
$4C0    $60C2   LD       V0, #C2         ; Load 194 into V0
$4C2    $061E   SYS      $61E            ; System call to 61E
$4C4    $D0A8   DRW      V0, VA, #8      ; Draw 8-byte sprite at V0, VA
$4C6    $1766   JP       $766            ; Jump to 766
$4C8    $7652   ADD      V6, #52         ; Add 82 to V6
$4CA    $B15A   JP       V0, $15A        ; Jump to V0 + 15A
$4CC    $E4CA   UNKNOWN  $E4CA           ; Unknown Exxx instruction
$4CE    $70FC   ADD      V0, #FC         ; Add 252 to V0
$4D0    $269A   CALL     $69A            ; Call subroutine at 69A
$4D2    $81ED   UNKNOWN  81ED            ; Unknown 8xxx instruction
$4D4    $887F   UNKNOWN  887F            ; Unknown 8xxx instruction
$4D6    $8620   LD       V6, V2          ; V6 = V2
$4D8    $247B   CALL     $47B            ; Call subroutine at 47B
$4DA    $B606   JP       V0, $606        ; Jump to V0 + 606
$4DC    $1E9F   JP       $E9F            ; Jump to E9F
$4DE    $FA75   UNKNOWN  FA75            ; Unknown Fxxx instruction
$4E0    $FBF4   UNKNOWN  FBF4            ; Unknown Fxxx instruction
$4E2    $0D60   SYS      $D60            ; System call to D60
$4E4    $DF4A   DRW      VF, V4, #A      ; Draw 10-byte sprite at VF, V4
$4E6    $2B07   CALL     $B07            ; Call subroutine at B07
$4E8    $BCFE   JP       V0, $CFE        ; Jump to V0 + CFE
$4EA    $AC7A   LD       I, $C7A         ; Load C7A into I
$4EC    $A2F7   LD       I, $2F7         ; Load 2F7 into I
$4EE    $107B   JP       $07B            ; Jump to 07B
$4F0    $8014   ADD      V0, V1          ; V0 += V1, VF = carry
$4F2    $34C1   SE       V4, #C1         ; Skip if V4 == 193
$4F4    $B939   JP       V0, $939        ; Jump to V0 + 939
$4F6    $B53D   JP       V0, $53D        ; Jump to V0 + 53D
$4F8    $87B8   UNKNOWN  87B8            ; Unknown 8xxx instruction
$4FA    $0420   SYS      $420            ; System call to 420
$4FC    $5ED9   UNKNOWN  $5ED9           ; Unknown 5xxx instruction
$4FE    $BEEB   JP       V0, $EEB        ; Jump to V0 + EEB
$500    $C437   RND      V4, #37         ; V4 = random & 37
$502    $4BBD   SNE      VB, #BD         ; Skip if VB != 189
$504    $0EEE   SYS      $EEE            ; System call to EEE
$506    $1F03   JP       $F03            ; Jump to F03
$508    $2129   CALL     $129            ; Call subroutine at 129
$50A    $5697   UNKNOWN  $5697           ; Unknown 5xxx instruction
$50C    $10FE   JP       $0FE            ; Jump to 0FE
$50E    $73C6   ADD      V3, #C6         ; Add 198 to V3
$510    $7723   ADD      V7, #23         ; Add 35 to V7
$512    $0E25   SYS      $E25            ; System call to E25
$514    $5808   UNKNOWN  $5808           ; Unknown 5xxx instruction
$516    $D84E   DRW      V8, V4, #E      ; Draw 14-byte sprite at V8, V4
$518    $49A0   SNE      V9, #A0         ; Skip if V9 != 160
$51A    $B5E8   JP       V0, $5E8        ; Jump to V0 + 5E8
$51C    $619D   LD       V1, #9D         ; Load 157 into V1
$51E    $2427   CALL     $427            ; Call subroutine at 427
$520    $33BC   SE       V3, #BC         ; Skip if V3 == 188
$522    $7524   ADD      V5, #24         ; Add 36 to V5
$524    $D77C   DRW      V7, V7, #C      ; Draw 12-byte sprite at V7, V7
$526    $2EA6   CALL     $EA6            ; Call subroutine at EA6
$528    $2FFB   CALL     $FFB            ; Call subroutine at FFB
$52A    $B1B5   JP       V0, $1B5        ; Jump to V0 + 1B5
$52C    $4DAE   SNE      VD, #AE         ; Skip if VD != 174
$52E    $0C40   SYS      $C40            ; System call to C40
$530    $8B07   SUBN     VB, V0          ; VB = V0 - VB, VF = !borrow
$532    $C99A   RND      V9, #9A         ; V9 = random & 9A
$534    $3E81   SE       VE, #81         ; Skip if VE == 129
$536    $E935   UNKNOWN  $E935           ; Unknown Exxx instruction
$538    $2772   CALL     $772            ; Call subroutine at 772
$53A    $953E   UNKNOWN  $953E           ; Unknown 9xxx instruction
$53C    $8DC4   ADD      VD, VC          ; VD += VC, VF = carry
$53E    $7052   ADD      V0, #52         ; Add 82 to V0
$540    $5248   UNKNOWN  $5248           ; Unknown 5xxx instruction
$542    $E3BB   UNKNOWN  $E3BB           ; Unknown Exxx instruction
$544    $4CC0   SNE      VC, #C0         ; Skip if VC != 192
$546    $C0A5   RND      V0, #A5         ; V0 = random & A5
$548    $2CC0   CALL     $CC0            ; Call subroutine at CC0
$54A    $724D   ADD      V2, #4D         ; Add 77 to V2
$54C    $5C05   UNKNOWN  $5C05           ; Unknown 5xxx instruction
$54E    $11A4   JP       $1A4            ; Jump to 1A4
$550    $8EBE   SHL      VE              ; VE <<= 1, VF = MSB
$552    $F4D9   UNKNOWN  F4D9            ; Unknown Fxxx instruction
$554    $9AF0   SNE      VA, VF          ; Skip if VA != VF
$556    $012A   SYS      $12A            ; System call to 12A
$558    $F0AD   UNKNOWN  F0AD            ; Unknown Fxxx instruction
$55A    $93F5   UNKNOWN  $93F5           ; Unknown 9xxx instruction
$55C    $EA87   UNKNOWN  $EA87           ; Unknown Exxx instruction
$55E    $E873   UNKNOWN  $E873           ; Unknown Exxx instruction
$560    $815A   UNKNOWN  815A            ; Unknown 8xxx instruction
$562    $706C   ADD      V0, #6C         ; Add 108 to V0
$564    $380E   SE       V8, #0E         ; Skip if V8 == 14
$566    $D0CB   DRW      V0, VC, #B      ; Draw 11-byte sprite at V0, VC
$568    $7610   ADD      V6, #10         ; Add 16 to V6
$56A    $19E6   JP       $9E6            ; Jump to 9E6
$56C    $2C4C   CALL     $C4C            ; Call subroutine at C4C
$56E    $F3F7   UNKNOWN  F3F7            ; Unknown Fxxx instruction
$570    $0A9E   SYS      $A9E            ; System call to A9E
$572    $EF61   UNKNOWN  $EF61           ; Unknown Exxx instruction
$574    $E71D   UNKNOWN  $E71D           ; Unknown Exxx instruction
$576    $C8F2   RND      V8, #F2         ; V8 = random & F2
$578    $F245   UNKNOWN  F245            ; Unknown Fxxx instruction
$57A    $3D8E   SE       VD, #8E         ; Skip if VD == 142
$57C    $9F1D   UNKNOWN  $9F1D           ; Unknown 9xxx instruction
$57E    $36AE   SE       V6, #AE         ; Skip if V6 == 174
$580    $8D32   AND      VD, V3          ; VD &= V3
$582    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$584    $C56F   RND      V5, #6F         ; V5 = random & 6F
$586    $C80D   RND      V8, #0D         ; V8 = random & 0D
$588    $7B69   ADD      VB, #69         ; Add 105 to VB
$58A    $3E41   SE       VE, #41         ; Skip if VE == 65
$58C    $EEB5   UNKNOWN  $EEB5           ; Unknown Exxx instruction
$58E    $60EB   LD       V0, #EB         ; Load 235 into V0
$590    $2A7B   CALL     $A7B            ; Call subroutine at A7B
$592    $E5F5   UNKNOWN  $E5F5           ; Unknown Exxx instruction
$594    $28AC   CALL     $8AC            ; Call subroutine at 8AC
$596    $29AC   CALL     $9AC            ; Call subroutine at 9AC
$598    $41A5   SNE      V1, #A5         ; Skip if V1 != 165
$59A    $BC0D   JP       V0, $C0D        ; Jump to V0 + C0D
$59C    $9767   UNKNOWN  $9767           ; Unknown 9xxx instruction
$59E    $8303   XOR      V3, V0          ; V3 ^= V0
$5A0    $C528   RND      V5, #28         ; V5 = random & 28
$5A2    $5066   UNKNOWN  $5066           ; Unknown 5xxx instruction
$5A4    $BAAB   JP       V0, $AAB        ; Jump to V0 + AAB
$5A6    $2D37   CALL     $D37            ; Call subroutine at D37
$5A8    $4B53   SNE      VB, #53         ; Skip if VB != 83
$5AA    $2DDF   CALL     $DDF            ; Call subroutine at DDF
$5AC    $E38B   UNKNOWN  $E38B           ; Unknown Exxx instruction
$5AE    $B2C2   JP       V0, $2C2        ; Jump to V0 + 2C2
$5B0    $0CF8   SYS      $CF8            ; System call to CF8
$5B2    $3296   SE       V2, #96         ; Skip if V2 == 150
$5B4    $2126   CALL     $126            ; Call subroutine at 126
$5B6    $6494   LD       V4, #94         ; Load 148 into V4
$5B8    $76E3   ADD      V6, #E3         ; Add 227 to V6
$5BA    $D18F   DRW      V1, V8, #F      ; Draw 15-byte sprite at V1, V8
$5BC    $04C9   SYS      $4C9            ; System call to 4C9
$5BE    $4BEE   SNE      VB, #EE         ; Skip if VB != 238
$5C0    $2F09   CALL     $F09            ; Call subroutine at F09
$5C2    $F9C6   UNKNOWN  F9C6            ; Unknown Fxxx instruction
$5C4    $1351   JP       $351            ; Jump to 351
$5C6    $C385   RND      V3, #85         ; V3 = random & 85
$5C8    $9504   UNKNOWN  $9504           ; Unknown 9xxx instruction
$5CA    $093C   SYS      $93C            ; System call to 93C
$5CC    $53E7   UNKNOWN  $53E7           ; Unknown 5xxx instruction
$5CE    $3DD1   SE       VD, #D1         ; Skip if VD == 209
$5D0    $C29E   RND      V2, #9E         ; V2 = random & 9E
$5D2    $3AE5   SE       VA, #E5         ; Skip if VA == 229
$5D4    $DB4E   DRW      VB, V4, #E      ; Draw 14-byte sprite at VB, V4
$5D6    $9745   UNKNOWN  $9745           ; Unknown 9xxx instruction
$5D8    $72EF   ADD      V2, #EF         ; Add 239 to V2
$5DA    $8E01   OR       VE, V0          ; VE |= V0
$5DC    $0CE6   SYS      $CE6            ; System call to CE6
$5DE    $4CC4   SNE      VC, #C4         ; Skip if VC != 196
$5E0    $48B2   SNE      V8, #B2         ; Skip if V8 != 178
$5E2    $8F06   SHR      VF              ; VF >>= 1, VF = LSB
$5E4    $A491   LD       I, $491         ; Load 491 into I
$5E6    $385B   SE       V8, #5B         ; Skip if V8 == 91
$5E8    $C271   RND      V2, #71         ; V2 = random & 71
$5EA    $B8C0   JP       V0, $8C0        ; Jump to V0 + 8C0
$5EC    $17CE   JP       $7CE            ; Jump to 7CE
$5EE    $8848   UNKNOWN  8848            ; Unknown 8xxx instruction
$5F0    $218A   CALL     $18A            ; Call subroutine at 18A
$5F2    $26FE   CALL     $6FE            ; Call subroutine at 6FE
$5F4    $0C21   SYS      $C21            ; System call to C21
$5F6    $A70C   LD       I, $70C         ; Load 70C into I
$5F8    $2AD4   CALL     $AD4            ; Call subroutine at AD4
$5FA    $FC39   UNKNOWN  FC39            ; Unknown Fxxx instruction
$5FC    $DCA4   DRW      VC, VA, #4      ; Draw 4-byte sprite at VC, VA
$5FE    $0ED1   SYS      $ED1            ; System call to ED1
$600    $7FA8   ADD      VF, #A8         ; Add 168 to VF
$602    $8CF6   SHR      VC              ; VC >>= 1, VF = LSB
$604    $B930   JP       V0, $930        ; Jump to V0 + 930
$606    $13F3   JP       $3F3            ; Jump to 3F3
$608    $49BE   SNE      V9, #BE         ; Skip if V9 != 190
$60A    $5B05   UNKNOWN  $5B05           ; Unknown 5xxx instruction
$60C    $FCA6   UNKNOWN  FCA6            ; Unknown Fxxx instruction
$60E    $5CD5   UNKNOWN  $5CD5           ; Unknown 5xxx instruction
$610    $3C5C   SE       VC, #5C         ; Skip if VC == 92
$612    $D093   DRW      V0, V9, #3      ; Draw 3-byte sprite at V0, V9
$614    $D50A   DRW      V5, V0, #A      ; Draw 10-byte sprite at V5, V0
$616    $EB48   UNKNOWN  $EB48           ; Unknown Exxx instruction
$618    $B2D1   JP       V0, $2D1        ; Jump to V0 + 2D1
$61A    $FCF2   UNKNOWN  FCF2            ; Unknown Fxxx instruction
$61C    $5803   UNKNOWN  $5803           ; Unknown 5xxx instruction
$61E    $47DF   SNE      V7, #DF         ; Skip if V7 != 223
$620    $5FCC   UNKNOWN  $5FCC           ; Unknown 5xxx instruction
$622    $3E5A   SE       VE, #5A         ; Skip if VE == 90
$624    $43BC   SNE      V3, #BC         ; Skip if V3 != 188
$626    $FA48   UNKNOWN  FA48            ; Unknown Fxxx instruction
$628    $6CC3   LD       VC, #C3         ; Load 195 into VC
$62A    $24FB   CALL     $4FB            ; Call subroutine at 4FB
$62C    $6171   LD       V1, #71         ; Load 113 into V1
$62E    $2BB1   CALL     $BB1            ; Call subroutine at BB1
$630    $CC78   RND      VC, #78         ; VC = random & 78
$632    $7A0D   ADD      VA, #0D         ; Add 13 to VA
$634    $736F   ADD      V3, #6F         ; Add 111 to V3
$636    $F3EC   UNKNOWN  F3EC            ; Unknown Fxxx instruction
$638    $923B   UNKNOWN  $923B           ; Unknown 9xxx instruction
$63A    $CDF4   RND      VD, #F4         ; VD = random & F4
$63C    $9228   UNKNOWN  $9228           ; Unknown 9xxx instruction
$63E    $3FA1   SE       VF, #A1         ; Skip if VF == 161
$640    $5621   UNKNOWN  $5621           ; Unknown 5xxx instruction
$642    $EDEA   UNKNOWN  $EDEA           ; Unknown Exxx instruction
$644    $D0E6   DRW      V0, VE, #6      ; Draw 6-byte sprite at V0, VE
$646    $8A2D   UNKNOWN  8A2D            ; Unknown 8xxx instruction
$648    $4D90   SNE      VD, #90         ; Skip if VD != 144
$64A    $1BF4   JP       $BF4            ; Jump to BF4
$64C    $C9CD   RND      V9, #CD         ; V9 = random & CD
$64E    $E4CE   UNKNOWN  $E4CE           ; Unknown Exxx instruction
$650    $DABA   DRW      VA, VB, #A      ; Draw 10-byte sprite at VA, VB
$652    $449D   SNE      V4, #9D         ; Skip if V4 != 157
$654    $5D81   UNKNOWN  $5D81           ; Unknown 5xxx instruction
$656    $009A   SYS      $09A            ; System call to 09A
$658    $7F67   ADD      VF, #67         ; Add 103 to VF
$65A    $5880   SE       V8, V8          ; Skip if V8 == V8
$65C    $6F06   LD       VF, #06         ; Load 6 into VF
$65E    $EA62   UNKNOWN  $EA62           ; Unknown Exxx instruction
$660    $AA70   LD       I, $A70         ; Load A70 into I
$662    $6CD7   LD       VC, #D7         ; Load 215 into VC
$664    $EA34   UNKNOWN  $EA34           ; Unknown Exxx instruction
$666    $A0E2   LD       I, $0E2         ; Load 0E2 into I
$668    $8D3A   UNKNOWN  8D3A            ; Unknown 8xxx instruction
$66A    $DE5A   DRW      VE, V5, #A      ; Draw 10-byte sprite at VE, V5
$66C    $55B6   UNKNOWN  $55B6           ; Unknown 5xxx instruction
$66E    $F95E   UNKNOWN  F95E            ; Unknown Fxxx instruction
$670    $5F52   UNKNOWN  $5F52           ; Unknown 5xxx instruction
$672    $CE04   RND      VE, #04         ; VE = random & 04
$674    $73CF   ADD      V3, #CF         ; Add 207 to V3
$676    $42DF   SNE      V2, #DF         ; Skip if V2 != 223
$678    $581F   UNKNOWN  $581F           ; Unknown 5xxx instruction
$67A    $D02D   DRW      V0, V2, #D      ; Draw 13-byte sprite at V0, V2
$67C    $B037   JP       V0, $037        ; Jump to V0 + 037
$67E    $7603   ADD      V6, #03         ; Add 3 to V6
$680    $716C   ADD      V1, #6C         ; Add 108 to V1
$682    $FD65   LD       VD, [I]         ; Load V0-VD from I
$684    $BEB4   JP       V0, $EB4        ; Jump to V0 + EB4
$686    $E2F4   UNKNOWN  $E2F4           ; Unknown Exxx instruction
$688    $2CB4   CALL     $CB4            ; Call subroutine at CB4
$68A    $B5AB   JP       V0, $5AB        ; Jump to V0 + 5AB
$68C    $05C2   SYS      $5C2            ; System call to 5C2
$68E    $470C   SNE      V7, #0C         ; Skip if V7 != 12
$690    $747E   ADD      V4, #7E         ; Add 126 to V4
$692    $70E7   ADD      V0, #E7         ; Add 231 to V0
$694    $DD0F   DRW      VD, V0, #F      ; Draw 15-byte sprite at VD, V0
$696    $BCFE   JP       V0, $CFE        ; Jump to V0 + CFE
$698    $5CE4   UNKNOWN  $5CE4           ; Unknown 5xxx instruction
$69A    $9007   UNKNOWN  $9007           ; Unknown 9xxx instruction
$69C    $21F7   CALL     $1F7            ; Call subroutine at 1F7
$69E    $2FE3   CALL     $FE3            ; Call subroutine at FE3
$6A0    $B797   JP       V0, $797        ; Jump to V0 + 797
$6A2    $7BD1   ADD      VB, #D1         ; Add 209 to VB
$6A4    $652F   LD       V5, #2F         ; Load 47 into V5
$6A6    $E110   UNKNOWN  $E110           ; Unknown Exxx instruction
$6A8    $E8DC   UNKNOWN  $E8DC           ; Unknown Exxx instruction
$6AA    $A9C2   LD       I, $9C2         ; Load 9C2 into I
$6AC    $E16E   UNKNOWN  $E16E           ; Unknown Exxx instruction
$6AE    $4B6F   SNE      VB, #6F         ; Skip if VB != 111
$6B0    $C23D   RND      V2, #3D         ; V2 = random & 3D
$6B2    $6581   LD       V5, #81         ; Load 129 into V5
$6B4    $8AB6   SHR      VA              ; VA >>= 1, VF = LSB
$6B6    $0035   SYS      $035            ; System call to 035
$6B8    $085A   SYS      $85A            ; System call to 85A
$6BA    $C382   RND      V3, #82         ; V3 = random & 82
$6BC    $A92D   LD       I, $92D         ; Load 92D into I
$6BE    $257E   CALL     $57E            ; Call subroutine at 57E
$6C0    $543F   UNKNOWN  $543F           ; Unknown 5xxx instruction
$6C2    $05C2   SYS      $5C2            ; System call to 5C2
$6C4    $EE39   UNKNOWN  $EE39           ; Unknown Exxx instruction
$6C6    $0BBD   SYS      $BBD            ; System call to BBD
$6C8    $9072   UNKNOWN  $9072           ; Unknown 9xxx instruction
$6CA    $6FC4   LD       VF, #C4         ; Load 196 into VF
$6CC    $8E43   XOR      VE, V4          ; VE ^= V4
$6CE    $57D7   UNKNOWN  $57D7           ; Unknown 5xxx instruction
$6D0    $622D   LD       V2, #2D         ; Load 45 into V2
$6D2    $A5E7   LD       I, $5E7         ; Load 5E7 into I
$6D4    $75C3   ADD      V5, #C3         ; Add 195 to V5
$6D6    $21B2   CALL     $1B2            ; Call subroutine at 1B2
$6D8    $9418   UNKNOWN  $9418           ; Unknown 9xxx instruction
$6DA    $7B82   ADD      VB, #82         ; Add 130 to VB
$6DC    $640B   LD       V4, #0B         ; Load 11 into V4
$6DE    $93E6   UNKNOWN  $93E6           ; Unknown 9xxx instruction
$6E0    $F7AB   UNKNOWN  F7AB            ; Unknown Fxxx instruction
$6E2    $54E7   UNKNOWN  $54E7           ; Unknown 5xxx instruction
$6E4    $AA1E   LD       I, $A1E         ; Load A1E into I
$6E6    $1989   JP       $989            ; Jump to 989
$6E8    $D0AB   DRW      V0, VA, #B      ; Draw 11-byte sprite at V0, VA
$6EA    $B56C   JP       V0, $56C        ; Jump to V0 + 56C
$6EC    $AE78   LD       I, $E78         ; Load E78 into I
$6EE    $EDC2   UNKNOWN  $EDC2           ; Unknown Exxx instruction
$6F0    $9962   UNKNOWN  $9962           ; Unknown 9xxx instruction
$6F2    $87EE   SHL      V7              ; V7 <<= 1, VF = MSB
$6F4    $C412   RND      V4, #12         ; V4 = random & 12
$6F6    $9EAA   UNKNOWN  $9EAA           ; Unknown 9xxx instruction
$6F8    $5942   UNKNOWN  $5942           ; Unknown 5xxx instruction
$6FA    $1A4F   JP       $A4F            ; Jump to A4F
$6FC    $821C   UNKNOWN  821C            ; Unknown 8xxx instruction
$6FE    $6808   LD       V8, #08         ; Load 8 into V8
$700    $7C04   ADD      VC, #04         ; Add 4 to VC
$702    $F707   LD       V7, DT          ; V7 = delay timer
$704    $1453   JP       $453            ; Jump to 453
$706    $B90F   JP       V0, $90F        ; Jump to V0 + 90F
$708    $5311   UNKNOWN  $5311           ; Unknown 5xxx instruction
$70A    $0431   SYS      $431            ; System call to 431
$70C    $5667   UNKNOWN  $5667           ; Unknown 5xxx instruction
$70E    $936E   UNKNOWN  $936E           ; Unknown 9xxx instruction
$710    $B686   JP       V0, $686        ; Jump to V0 + 686
$712    $43B7   SNE      V3, #B7         ; Skip if V3 != 183
$714    $D729   DRW      V7, V2, #9      ; Draw 9-byte sprite at V7, V2
$716    $7EB2   ADD      VE, #B2         ; Add 178 to VE
$718    $8759   UNKNOWN  8759            ; Unknown 8xxx instruction
$71A    $6E42   LD       VE, #42         ; Load 66 into VE
$71C    $E0CA   UNKNOWN  $E0CA           ; Unknown Exxx instruction
$71E    $4EB4   SNE      VE, #B4         ; Skip if VE != 180
$720    $07CE   SYS      $7CE            ; System call to 7CE
$722    $E12B   UNKNOWN  $E12B           ; Unknown Exxx instruction
$724    $0AF7   SYS      $AF7            ; System call to AF7
$726    $3FAC   SE       VF, #AC         ; Skip if VF == 172
$728    $5BAF   UNKNOWN  $5BAF           ; Unknown 5xxx instruction
$72A    $CE54   RND      VE, #54         ; VE = random & 54
$72C    $4893   SNE      V8, #93         ; Skip if V8 != 147
$72E    $A8E8   LD       I, $8E8         ; Load 8E8 into I
$730    $D44B   DRW      V4, V4, #B      ; Draw 11-byte sprite at V4, V4
$732    $9B06   UNKNOWN  $9B06           ; Unknown 9xxx instruction
$734    $2B72   CALL     $B72            ; Call subroutine at B72
$736    $BB90   JP       V0, $B90        ; Jump to V0 + B90
$738    $F2A2   UNKNOWN  F2A2            ; Unknown Fxxx instruction
$73A    $FD7A   UNKNOWN  FD7A            ; Unknown Fxxx instruction
$73C    $285E   CALL     $85E            ; Call subroutine at 85E
$73E    $353B   SE       V5, #3B         ; Skip if V5 == 59
$740    $6B3B   LD       VB, #3B         ; Load 59 into VB
$742    $B332   JP       V0, $332        ; Jump to V0 + 332
$744    $3526   SE       V5, #26         ; Skip if V5 == 38
$746    $3C0A   SE       VC, #0A         ; Skip if VC == 10
$748    $AFD1   LD       I, $FD1         ; Load FD1 into I
$74A    $29A0   CALL     $9A0            ; Call subroutine at 9A0
$74C    $E039   UNKNOWN  $E039           ; Unknown Exxx instruction
$74E    $8A25   SUB      VA, V2          ; VA -= V2, VF = !borrow
$750    $035D   SYS      $35D            ; System call to 35D
$752    $B9D1   JP       V0, $9D1        ; Jump to V0 + 9D1
$754    $FD04   UNKNOWN  FD04            ; Unknown Fxxx instruction
$756    $96FD   UNKNOWN  $96FD           ; Unknown 9xxx instruction
$758    $B16D   JP       V0, $16D        ; Jump to V0 + 16D
$75A    $8F84   ADD      VF, V8          ; VF += V8, VF = carry
$75C    $D7F0   DRW      V7, VF, #0      ; Draw 0-byte sprite at V7, VF
$75E    $7F71   ADD      VF, #71         ; Add 113 to VF
$760    $DA9A   DRW      VA, V9, #A      ; Draw 10-byte sprite at VA, V9
$762    $6027   LD       V0, #27         ; Load 39 into V0
$764    $3AA3   SE       VA, #A3         ; Skip if VA == 163
$766    $A71E   LD       I, $71E         ; Load 71E into I
$768    $88EA   UNKNOWN  88EA            ; Unknown 8xxx instruction
$76A    $A114   LD       I, $114         ; Load 114 into I
$76C    $2E8C   CALL     $E8C            ; Call subroutine at E8C
$76E    $BD42   JP       V0, $D42        ; Jump to V0 + D42
$770    $4FC9   SNE      VF, #C9         ; Skip if VF != 201
$772    $0780   SYS      $780            ; System call to 780
$774    $FDCC   UNKNOWN  FDCC            ; Unknown Fxxx instruction
$776    $F7CE   UNKNOWN  F7CE            ; Unknown Fxxx instruction
$778    $3D72   SE       VD, #72         ; Skip if VD == 114
$77A    $F9CC   UNKNOWN  F9CC            ; Unknown Fxxx instruction
$77C    $1B85   JP       $B85            ; Jump to B85
$77E    $DBEA   DRW      VB, VE, #A      ; Draw 10-byte sprite at VB, VE
$780    $F632   UNKNOWN  F632            ; Unknown Fxxx instruction
$782    $628A   LD       V2, #8A         ; Load 138 into V2
$784    $FA77   UNKNOWN  FA77            ; Unknown Fxxx instruction
$786    $871B   UNKNOWN  871B            ; Unknown 8xxx instruction
$788    $0545   SYS      $545            ; System call to 545
$78A    $929C   UNKNOWN  $929C           ; Unknown 9xxx instruction
$78C    $0EEB   SYS      $EEB            ; System call to EEB
$78E    $06CE   SYS      $6CE            ; System call to 6CE
$790    $94A9   UNKNOWN  $94A9           ; Unknown 9xxx instruction
$792    $C2FD   RND      V2, #FD         ; V2 = random & FD
$794    $3365   SE       V3, #65         ; Skip if V3 == 101
$796    $543E   UNKNOWN  $543E           ; Unknown 5xxx instruction
$798    $A20D   LD       I, $20D         ; Load 20D into I
$79A    $C103   RND      V1, #03         ; V1 = random & 03
$79C    $F461   UNKNOWN  F461            ; Unknown Fxxx instruction
$79E    $1CA2   JP       $CA2            ; Jump to CA2
$7A0    $60B7   LD       V0, #B7         ; Load 183 into V0
$7A2    $31C7   SE       V1, #C7         ; Skip if V1 == 199
$7A4    $30ED   SE       V0, #ED         ; Skip if V0 == 237
$7A6    $CBE0   RND      VB, #E0         ; VB = random & E0
$7A8    $D964   DRW      V9, V6, #4      ; Draw 4-byte sprite at V9, V6
$7AA    $E335   UNKNOWN  $E335           ; Unknown Exxx instruction
$7AC    $D40C   DRW      V4, V0, #C      ; Draw 12-byte sprite at V4, V0
$7AE    $8036   SHR      V0              ; V0 >>= 1, VF = LSB
$7B0    $BFD5   JP       V0, $FD5        ; Jump to V0 + FD5
$7B2    $2F2C   CALL     $F2C            ; Call subroutine at F2C
$7B4    $8D58   UNKNOWN  8D58            ; Unknown 8xxx instruction
$7B6    $C0EB   RND      V0, #EB         ; V0 = random & EB
$7B8    $A443   LD       I, $443         ; Load 443 into I
$7BA    $08A8   SYS      $8A8            ; System call to 8A8
$7BC    $0936   SYS      $936            ; System call to 936
$7BE    $6C34   LD       VC, #34         ; Load 52 into VC
$7C0    $C6B2   RND      V6, #B2         ; V6 = random & B2
$7C2    $B75C   JP       V0, $75C        ; Jump to V0 + 75C
$7C4    $9B39   UNKNOWN  $9B39           ; Unknown 9xxx instruction
$7C6    $0023   SYS      $023            ; System call to 023
$7C8    $00C3   SYS      $0C3            ; System call to 0C3
$7CA    $DD3A   DRW      VD, V3, #A      ; Draw 10-byte sprite at VD, V3
$7CC    $2D49   CALL     $D49            ; Call subroutine at D49
$7CE    $F38B   UNKNOWN  F38B            ; Unknown Fxxx instruction
$7D0    $0E93   SYS      $E93            ; System call to E93
$7D2    $356C   SE       V5, #6C         ; Skip if V5 == 108
$7D4    $AF91   LD       I, $F91         ; Load F91 into I
$7D6    $75C1   ADD      V5, #C1         ; Add 193 to V5
$7D8    $406B   SNE      V0, #6B         ; Skip if V0 != 107
$7DA    $0DBB   SYS      $DBB            ; System call to DBB
$7DC    $9BE5   UNKNOWN  $9BE5           ; Unknown 9xxx instruction
$7DE    $8E6A   UNKNOWN  8E6A            ; Unknown 8xxx instruction
$7E0    $59F6   UNKNOWN  $59F6           ; Unknown 5xxx instruction
$7E2    $5177   UNKNOWN  $5177           ; Unknown 5xxx instruction
$7E4    $00A6   SYS      $0A6            ; System call to 0A6
$7E6    $DEAB   DRW      VE, VA, #B      ; Draw 11-byte sprite at VE, VA
$7E8    $8452   AND      V4, V5          ; V4 &= V5
$7EA    $19D6   JP       $9D6            ; Jump to 9D6
$7EC    $AA83   LD       I, $A83         ; Load A83 into I
$7EE    $6FE8   LD       VF, #E8         ; Load 232 into VF
$7F0    $A2FA   LD       I, $2FA         ; Load 2FA into I
$7F2    $2099   CALL     $099            ; Call subroutine at 099
$7F4    $58CD   UNKNOWN  $58CD           ; Unknown 5xxx instruction
$7F6    $9F5B   UNKNOWN  $9F5B           ; Unknown 9xxx instruction
$7F8    $AB84   LD       I, $B84         ; Load B84 into I
$7FA    $2E26   CALL     $E26            ; Call subroutine at E26
$7FC    $8919   UNKNOWN  8919            ; Unknown 8xxx instruction
$7FE    $2CE8   CALL     $CE8            ; Call subroutine at CE8
$800    $4651   SNE      V6, #51         ; Skip if V6 != 81
$802    $AE58   LD       I, $E58         ; Load E58 into I
$804    $3E6F   SE       VE, #6F         ; Skip if VE == 111
$806    $23B0   CALL     $3B0            ; Call subroutine at 3B0
$808    $C4B5   RND      V4, #B5         ; V4 = random & B5
$80A    $4E25   SNE      VE, #25         ; Skip if VE != 37
$80C    $9378   UNKNOWN  $9378           ; Unknown 9xxx instruction
$80E    $75DB   ADD      V5, #DB         ; Add 219 to V5
$810    $B19D   JP       V0, $19D        ; Jump to V0 + 19D
$812    $FE97   UNKNOWN  FE97            ; Unknown Fxxx instruction
$814    $894D   UNKNOWN  894D            ; Unknown 8xxx instruction
$816    $027A   SYS      $27A            ; System call to 27A
$818    $EF27   UNKNOWN  $EF27           ; Unknown Exxx instruction
$81A    $7293   ADD      V2, #93         ; Add 147 to V2
$81C    $C53E   RND      V5, #3E         ; V5 = random & 3E
$81E    $9774   UNKNOWN  $9774           ; Unknown 9xxx instruction
$820    $4002   SNE      V0, #02         ; Skip if V0 != 2
$822    $1F94   JP       $F94            ; Jump to F94
$824    $1308   JP       $308            ; Jump to 308
$826    $2BBB   CALL     $BBB            ; Call subroutine at BBB
$828    $026A   SYS      $26A            ; System call to 26A
$82A    $E5CC   UNKNOWN  $E5CC           ; Unknown Exxx instruction
$82C    $7200   ADD      V2, #00         ; Add 0 to V2
$82E    $764A   ADD      V6, #4A         ; Add 74 to V6
$830    $7770   ADD      V7, #70         ; Add 112 to V7
$832    $47DA   SNE      V7, #DA         ; Skip if V7 != 218
$834    $F899   UNKNOWN  F899            ; Unknown Fxxx instruction
$836    $7522   ADD      V5, #22         ; Add 34 to V5
$838    $21CB   CALL     $1CB            ; Call subroutine at 1CB
$83A    $68BB   LD       V8, #BB         ; Load 187 into V8
$83C    $0075   SYS      $075            ; System call to 075
$83E    $FEB6   UNKNOWN  FEB6            ; Unknown Fxxx instruction
$840    $E590   UNKNOWN  $E590           ; Unknown Exxx instruction
$842    $2623   CALL     $623            ; Call subroutine at 623
$844    $6911   LD       V9, #11         ; Load 17 into V9
$846    $9175   UNKNOWN  $9175           ; Unknown 9xxx instruction
$848    $8830   LD       V8, V3          ; V8 = V3
$84A    $7DE0   ADD      VD, #E0         ; Add 224 to VD
$84C    $84A5   SUB      V4, VA          ; V4 -= VA, VF = !borrow
$84E    $A226   LD       I, $226         ; Load 226 into I
$850    $386A   SE       V8, #6A         ; Skip if V8 == 106
$852    $7BB8   ADD      VB, #B8         ; Add 184 to VB
$854    $0517   SYS      $517            ; System call to 517
$856    $A097   LD       I, $097         ; Load 097 into I
$858    $59AF   UNKNOWN  $59AF           ; Unknown 5xxx instruction
$85A    $0127   SYS      $127            ; System call to 127
$85C    $EEBD   UNKNOWN  $EEBD           ; Unknown Exxx instruction
$85E    $82E8   UNKNOWN  82E8            ; Unknown 8xxx instruction
$860    $1892   JP       $892            ; Jump to 892
$862    $C92C   RND      V9, #2C         ; V9 = random & 2C
$864    $E64C   UNKNOWN  $E64C           ; Unknown Exxx instruction
$866    $567B   UNKNOWN  $567B           ; Unknown 5xxx instruction
$868    $D48F   DRW      V4, V8, #F      ; Draw 15-byte sprite at V4, V8
$86A    $7E8E   ADD      VE, #8E         ; Add 142 to VE
$86C    $C4FD   RND      V4, #FD         ; V4 = random & FD
$86E    $A333   LD       I, $333         ; Load 333 into I
$870    $6035   LD       V0, #35         ; Load 53 into V0
$872    $B183   JP       V0, $183        ; Jump to V0 + 183
$874    $E0B2   UNKNOWN  $E0B2           ; Unknown Exxx instruction
$876    $FFC6   UNKNOWN  FFC6            ; Unknown Fxxx instruction
$878    $F769   UNKNOWN  F769            ; Unknown Fxxx instruction
$87A    $4C38   SNE      VC, #38         ; Skip if VC != 56
$87C    $295C   CALL     $95C            ; Call subroutine at 95C
$87E    $CA36   RND      VA, #36         ; VA = random & 36
$880    $CB22   RND      VB, #22         ; VB = random & 22
$882    $5C3D   UNKNOWN  $5C3D           ; Unknown 5xxx instruction
$884    $B365   JP       V0, $365        ; Jump to V0 + 365
$886    $79E9   ADD      V9, #E9         ; Add 233 to V9
$888    $FD1A   UNKNOWN  FD1A            ; Unknown Fxxx instruction
$88A    $C8BC   RND      V8, #BC         ; V8 = random & BC
$88C    $A032   LD       I, $032         ; Load 032 into I
$88E    $CDA3   RND      VD, #A3         ; VD = random & A3
$890    $4D51   SNE      VD, #51         ; Skip if VD != 81
$892    $7D3F   ADD      VD, #3F         ; Add 63 to VD
$894    $AC6C   LD       I, $C6C         ; Load C6C into I
$896    $C204   RND      V2, #04         ; V2 = random & 04
$898    $238B   CALL     $38B            ; Call subroutine at 38B
$89A    $3A54   SE       VA, #54         ; Skip if VA == 84
$89C    $8E08   UNKNOWN  8E08            ; Unknown 8xxx instruction
$89E    $845B   UNKNOWN  845B            ; Unknown 8xxx instruction
$8A0    $0C25   SYS      $C25            ; System call to C25
$8A2    $6631   LD       V6, #31         ; Load 49 into V6
$8A4    $DF88   DRW      VF, V8, #8      ; Draw 8-byte sprite at VF, V8
$8A6    $7258   ADD      V2, #58         ; Add 88 to V2
$8A8    $B3A2   JP       V0, $3A2        ; Jump to V0 + 3A2
$8AA    $2746   CALL     $746            ; Call subroutine at 746
$8AC    $9D6A   UNKNOWN  $9D6A           ; Unknown 9xxx instruction
$8AE    $B547   JP       V0, $547        ; Jump to V0 + 547
$8B0    $D9F5   DRW      V9, VF, #5      ; Draw 5-byte sprite at V9, VF
$8B2    $AF8E   LD       I, $F8E         ; Load F8E into I
$8B4    $A0AE   LD       I, $0AE         ; Load 0AE into I
$8B6    $1575   JP       $575            ; Jump to 575
$8B8    $01B0   SYS      $1B0            ; System call to 1B0
$8BA    $DF6E   DRW      VF, V6, #E      ; Draw 14-byte sprite at VF, V6
$8BC    $68BB   LD       V8, #BB         ; Load 187 into V8
$8BE    $DC51   DRW      VC, V5, #1      ; Draw 1-byte sprite at VC, V5
$8C0    $9A3A   UNKNOWN  $9A3A           ; Unknown 9xxx instruction
$8C2    $CF8D   RND      VF, #8D         ; VF = random & 8D
$8C4    $7FDC   ADD      VF, #DC         ; Add 220 to VF
$8C6    $3F87   SE       VF, #87         ; Skip if VF == 135
$8C8    $C4AE   RND      V4, #AE         ; V4 = random & AE
$8CA    $D628   DRW      V6, V2, #8      ; Draw 8-byte sprite at V6, V2
$8CC    $CCB0   RND      VC, #B0         ; VC = random & B0
$8CE    $A986   LD       I, $986         ; Load 986 into I
$8D0    $CBD4   RND      VB, #D4         ; VB = random & D4
$8D2    $474D   SNE      V7, #4D         ; Skip if V7 != 77
$8D4    $6B39   LD       VB, #39         ; Load 57 into VB
$8D6    $E09D   UNKNOWN  $E09D           ; Unknown Exxx instruction
$8D8    $21C0   CALL     $1C0            ; Call subroutine at 1C0
$8DA    $D825   DRW      V8, V2, #5      ; Draw 5-byte sprite at V8, V2
$8DC    $0F8E   SYS      $F8E            ; System call to F8E
$8DE    $7F47   ADD      VF, #47         ; Add 71 to VF
$8E0    $BB52   JP       V0, $B52        ; Jump to V0 + B52
$8E2    $237A   CALL     $37A            ; Call subroutine at 37A
$8E4    $0337   SYS      $337            ; System call to 337
$8E6    $CCB3   RND      VC, #B3         ; VC = random & B3
$8E8    $7145   ADD      V1, #45         ; Add 69 to V1
$8EA    $9849   UNKNOWN  $9849           ; Unknown 9xxx instruction
$8EC    $DBE2   DRW      VB, VE, #2      ; Draw 2-byte sprite at VB, VE
$8EE    $C200   RND      V2, #00         ; V2 = random & 00
$8F0    $D3B2   DRW      V3, VB, #2      ; Draw 2-byte sprite at V3, VB
$8F2    $0240   SYS      $240            ; System call to 240
$8F4    $E288   UNKNOWN  $E288           ; Unknown Exxx instruction
$8F6    $9C22   UNKNOWN  $9C22           ; Unknown 9xxx instruction
$8F8    $DE58   DRW      VE, V5, #8      ; Draw 8-byte sprite at VE, V5
$8FA    $7E1E   ADD      VE, #1E         ; Add 30 to VE
$8FC    $9562   UNKNOWN  $9562           ; Unknown 9xxx instruction
$8FE    $E189   UNKNOWN  $E189           ; Unknown Exxx instruction
$900    $4D07   SNE      VD, #07         ; Skip if VD != 7
$902    $7ACB   ADD      VA, #CB         ; Add 203 to VA
$904    $3F57   SE       VF, #57         ; Skip if VF == 87
$906    $4614   SNE      V6, #14         ; Skip if V6 != 20
$908    $965E   UNKNOWN  $965E           ; Unknown 9xxx instruction
$90A    $4289   SNE      V2, #89         ; Skip if V2 != 137
$90C    $4F9F   SNE      VF, #9F         ; Skip if VF != 159
$90E    $8639   UNKNOWN  8639            ; Unknown 8xxx instruction
$910    $356D   SE       V5, #6D         ; Skip if V5 == 109
$912    $D049   DRW      V0, V4, #9      ; Draw 9-byte sprite at V0, V4
$914    $C48E   RND      V4, #8E         ; V4 = random & 8E
$916    $0B8F   SYS      $B8F            ; System call to B8F
$918    $96B9   UNKNOWN  $96B9           ; Unknown 9xxx instruction
$91A    $99C5   UNKNOWN  $99C5           ; Unknown 9xxx instruction
$91C    $E294   UNKNOWN  $E294           ; Unknown Exxx instruction
$91E    $7BA5   ADD      VB, #A5         ; Add 165 to VB
$920    $85AC   UNKNOWN  85AC            ; Unknown 8xxx instruction
$922    $24F4   CALL     $4F4            ; Call subroutine at 4F4
$924    $E365   UNKNOWN  $E365           ; Unknown Exxx instruction
$926    $09D8   SYS      $9D8            ; System call to 9D8
$928    $B591   JP       V0, $591        ; Jump to V0 + 591
$92A    $6ED8   LD       VE, #D8         ; Load 216 into VE
$92C    $DDB5   DRW      VD, VB, #5      ; Draw 5-byte sprite at VD, VB
$92E    $DD73   DRW      VD, V7, #3      ; Draw 3-byte sprite at VD, V7
$930    $6C79   LD       VC, #79         ; Load 121 into VC
$932    $46BE   SNE      V6, #BE         ; Skip if V6 != 190
$934    $C7AA   RND      V7, #AA         ; V7 = random & AA
$936    $B73E   JP       V0, $73E        ; Jump to V0 + 73E
$938    $5533   UNKNOWN  $5533           ; Unknown 5xxx instruction
$93A    $7A43   ADD      VA, #43         ; Add 67 to VA
$93C    $59EA   UNKNOWN  $59EA           ; Unknown 5xxx instruction
$93E    $6187   LD       V1, #87         ; Load 135 into V1
$940    $1722   JP       $722            ; Jump to 722
$942    $931F   UNKNOWN  $931F           ; Unknown 9xxx instruction
$944    $0AE3   SYS      $AE3            ; System call to AE3
$946    $84EC   UNKNOWN  84EC            ; Unknown 8xxx instruction
$948    $826B   UNKNOWN  826B            ; Unknown 8xxx instruction
$94A    $A4EF   LD       I, $4EF         ; Load 4EF into I
$94C    $8D6D   UNKNOWN  8D6D            ; Unknown 8xxx instruction
$94E    $FB07   LD       VB, DT          ; VB = delay timer
$950    $BBBD   JP       V0, $BBD        ; Jump to V0 + BBD
$952    $B36E   JP       V0, $36E        ; Jump to V0 + 36E
$954    $BFCF   JP       V0, $FCF        ; Jump to V0 + FCF
$956    $9D01   UNKNOWN  $9D01           ; Unknown 9xxx instruction
$958    $75AA   ADD      V5, #AA         ; Add 170 to V5
$95A    $0389   SYS      $389            ; System call to 389
$95C    $E625   UNKNOWN  $E625           ; Unknown Exxx instruction
$95E    $F110   UNKNOWN  F110            ; Unknown Fxxx instruction
$960    $682D   LD       V8, #2D         ; Load 45 into V8
$962    $F418   LD       ST, V4          ; Sound timer = V4
$964    $1563   JP       $563            ; Jump to 563
$966    $DD30   DRW      VD, V3, #0      ; Draw 0-byte sprite at VD, V3
$968    $15C8   JP       $5C8            ; Jump to 5C8
$96A    $A4E9   LD       I, $4E9         ; Load 4E9 into I
$96C    $F168   UNKNOWN  F168            ; Unknown Fxxx instruction
$96E    $190A   JP       $90A            ; Jump to 90A
$970    $3E89   SE       VE, #89         ; Skip if VE == 137
$972    $0DA2   SYS      $DA2            ; System call to DA2
$974    $122F   JP       $22F            ; Jump to 22F
$976    $A5FB   LD       I, $5FB         ; Load 5FB into I
$978    $6AB5   LD       VA, #B5         ; Load 181 into VA
$97A    $982D   UNKNOWN  $982D           ; Unknown 9xxx instruction
$97C    $FF9D   UNKNOWN  FF9D            ; Unknown Fxxx instruction
$97E    $DAE3   DRW      VA, VE, #3      ; Draw 3-byte sprite at VA, VE
$980    $8AFA   UNKNOWN  8AFA            ; Unknown 8xxx instruction
$982    $F329   LD       F, V3           ; I = sprite address for digit V3
$984    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$986    $90DD   UNKNOWN  $90DD           ; Unknown 9xxx instruction
$988    $A1A5   LD       I, $1A5         ; Load 1A5 into I
$98A    $E753   UNKNOWN  $E753           ; Unknown Exxx instruction
$98C    $5548   UNKNOWN  $5548           ; Unknown 5xxx instruction
$98E    $0EBB   SYS      $EBB            ; System call to EBB
$990    $503D   UNKNOWN  $503D           ; Unknown 5xxx instruction
$992    $3E1F   SE       VE, #1F         ; Skip if VE == 31
$994    $31F2   SE       V1, #F2         ; Skip if V1 == 242
$996    $1FEC   JP       $FEC            ; Jump to FEC
$998    $F30C   UNKNOWN  F30C            ; Unknown Fxxx instruction
$99A    $E3B4   UNKNOWN  $E3B4           ; Unknown Exxx instruction
$99C    $7258   ADD      V2, #58         ; Add 88 to V2
$99E    $0E9E   SYS      $E9E            ; System call to E9E
$9A0    $7C93   ADD      VC, #93         ; Add 147 to VC
$9A2    $1313   JP       $313            ; Jump to 313
$9A4    $F926   UNKNOWN  F926            ; Unknown Fxxx instruction
$9A6    $7CE9   ADD      VC, #E9         ; Add 233 to VC
$9A8    $929D   UNKNOWN  $929D           ; Unknown 9xxx instruction
$9AA    $0063   SYS      $063            ; System call to 063
$9AC    $B18B   JP       V0, $18B        ; Jump to V0 + 18B
$9AE    $9610   SNE      V6, V1          ; Skip if V6 != V1
$9B0    $D5EE   DRW      V5, VE, #E      ; Draw 14-byte sprite at V5, VE
$9B2    $359E   SE       V5, #9E         ; Skip if V5 == 158
$9B4    $4938   SNE      V9, #38         ; Skip if V9 != 56
$9B6    $C9CC   RND      V9, #CC         ; V9 = random & CC
$9B8    $85A4   ADD      V5, VA          ; V5 += VA, VF = carry
$9BA    $5038   UNKNOWN  $5038           ; Unknown 5xxx instruction
$9BC    $12EC   JP       $2EC            ; Jump to 2EC
$9BE    $7B02   ADD      VB, #02         ; Add 2 to VB
$9C0    $765A   ADD      V6, #5A         ; Add 90 to V6
$9C2    $4058   SNE      V0, #58         ; Skip if V0 != 88
$9C4    $BC35   JP       V0, $C35        ; Jump to V0 + C35
$9C6    $0E87   SYS      $E87            ; System call to E87
$9C8    $A85F   LD       I, $85F         ; Load 85F into I
$9CA    $3C4A   SE       VC, #4A         ; Skip if VC == 74
$9CC    $625D   LD       V2, #5D         ; Load 93 into V2
$9CE    $18C1   JP       $8C1            ; Jump to 8C1
$9D0    $C838   RND      V8, #38         ; V8 = random & 38
$9D2    $DB6A   DRW      VB, V6, #A      ; Draw 10-byte sprite at VB, V6
$9D4    $8464   ADD      V4, V6          ; V4 += V6, VF = carry
$9D6    $65F0   LD       V5, #F0         ; Load 240 into V5
$9D8    $B8B6   JP       V0, $8B6        ; Jump to V0 + 8B6
$9DA    $BAE3   JP       V0, $AE3        ; Jump to V0 + AE3
$9DC    $8612   AND      V6, V1          ; V6 &= V1
$9DE    $9F88   UNKNOWN  $9F88           ; Unknown 9xxx instruction
$9E0    $25A3   CALL     $5A3            ; Call subroutine at 5A3
$9E2    $24C3   CALL     $4C3            ; Call subroutine at 4C3
$9E4    $FDF7   UNKNOWN  FDF7            ; Unknown Fxxx instruction
$9E6    $7EB0   ADD      VE, #B0         ; Add 176 to VE
$9E8    $33BC   SE       V3, #BC         ; Skip if V3 == 188
$9EA    $CF56   RND      VF, #56         ; VF = random & 56
$9EC    $7548   ADD      V5, #48         ; Add 72 to V5
$9EE    $2512   CALL     $512            ; Call subroutine at 512
$9F0    $1BB3   JP       $BB3            ; Jump to BB3
$9F2    $221D   CALL     $21D            ; Call subroutine at 21D
$9F4    $A98A   LD       I, $98A         ; Load 98A into I
$9F6    $C760   RND      V7, #60         ; V7 = random & 60
$9F8    $FD59   UNKNOWN  FD59            ; Unknown Fxxx instruction
$9FA    $04A3   SYS      $4A3            ; System call to 4A3
$9FC    $F292   UNKNOWN  F292            ; Unknown Fxxx instruction
$9FE    $93B5   UNKNOWN  $93B5           ; Unknown 9xxx instruction
$A00    $CDC7   RND      VD, #C7         ; VD = random & C7
$A02    $8ACB   UNKNOWN  8ACB            ; Unknown 8xxx instruction
$A04    $500C   UNKNOWN  $500C           ; Unknown 5xxx instruction
$A06    $C964   RND      V9, #64         ; V9 = random & 64
$A08    $2195   CALL     $195            ; Call subroutine at 195
$A0A    $6A03   LD       VA, #03         ; Load 3 into VA
$A0C    $E687   UNKNOWN  $E687           ; Unknown Exxx instruction
$A0E    $F6B5   UNKNOWN  F6B5            ; Unknown Fxxx instruction
$A10    $E314   UNKNOWN  $E314           ; Unknown Exxx instruction
$A12    $9B82   UNKNOWN  $9B82           ; Unknown 9xxx instruction
$A14    $47C0   SNE      V7, #C0         ; Skip if V7 != 192
$A16    $1125   JP       $125            ; Jump to 125
$A18    $15CB   JP       $5CB            ; Jump to 5CB
$A1A    $829D   UNKNOWN  829D            ; Unknown 8xxx instruction
$A1C    $1078   JP       $078            ; Jump to 078
$A1E    $B6E7   JP       V0, $6E7        ; Jump to V0 + 6E7
$A20    $07B6   SYS      $7B6            ; System call to 7B6
$A22    $CCA6   RND      VC, #A6         ; VC = random & A6
$A24    $34C7   SE       V4, #C7         ; Skip if V4 == 199
$A26    $1BA2   JP       $BA2            ; Jump to BA2
$A28    $976A   UNKNOWN  $976A           ; Unknown 9xxx instruction
$A2A    $E4CA   UNKNOWN  $E4CA           ; Unknown Exxx instruction
$A2C    $3F40   SE       VF, #40         ; Skip if VF == 64
$A2E    $4E5A   SNE      VE, #5A         ; Skip if VE != 90
$A30    $2A98   CALL     $A98            ; Call subroutine at A98
$A32    $78BC   ADD      V8, #BC         ; Add 188 to V8
$A34    $B5E8   JP       V0, $5E8        ; Jump to V0 + 5E8
$A36    $7318   ADD      V3, #18         ; Add 24 to V3
$A38    $5F76   UNKNOWN  $5F76           ; Unknown 5xxx instruction
$A3A    $ABD3   LD       I, $BD3         ; Load BD3 into I
$A3C    $ABBF   LD       I, $BBF         ; Load BBF into I
$A3E    $0CA1   SYS      $CA1            ; System call to CA1
$A40    $84E8   UNKNOWN  84E8            ; Unknown 8xxx instruction
$A42    $D120   DRW      V1, V2, #0      ; Draw 0-byte sprite at V1, V2
$A44    $AD8E   LD       I, $D8E         ; Load D8E into I
$A46    $9FAE   UNKNOWN  $9FAE           ; Unknown 9xxx instruction
$A48    $8BCD   UNKNOWN  8BCD            ; Unknown 8xxx instruction
$A4A    $ED34   UNKNOWN  $ED34           ; Unknown Exxx instruction
$A4C    $4C36   SNE      VC, #36         ; Skip if VC != 54
$A4E    $E024   UNKNOWN  $E024           ; Unknown Exxx instruction
$A50    $91B1   UNKNOWN  $91B1           ; Unknown 9xxx instruction
$A52    $22BE   CALL     $2BE            ; Call subroutine at 2BE
$A54    $1633   JP       $633            ; Jump to 633
$A56    $F9A3   UNKNOWN  F9A3            ; Unknown Fxxx instruction
$A58    $B40A   JP       V0, $40A        ; Jump to V0 + 40A
$A5A    $AA80   LD       I, $A80         ; Load A80 into I
$A5C    $80C2   AND      V0, VC          ; V0 &= VC
$A5E    $F76A   UNKNOWN  F76A            ; Unknown Fxxx instruction
$A60    $17D4   JP       $7D4            ; Jump to 7D4
$A62    $4DC6   SNE      VD, #C6         ; Skip if VD != 198
$A64    $7658   ADD      V6, #58         ; Add 88 to V6
$A66    $C9A4   RND      V9, #A4         ; V9 = random & A4
$A68    $C819   RND      V8, #19         ; V8 = random & 19
$A6A    $1AAF   JP       $AAF            ; Jump to AAF
$A6C    $F243   UNKNOWN  F243            ; Unknown Fxxx instruction
$A6E    $6236   LD       V2, #36         ; Load 54 into V2
$A70    $6FFE   LD       VF, #FE         ; Load 254 into VF
$A72    $E8D5   UNKNOWN  $E8D5           ; Unknown Exxx instruction
$A74    $0E68   SYS      $E68            ; System call to E68
$A76    $F3EC   UNKNOWN  F3EC            ; Unknown Fxxx instruction
$A78    $8A56   SHR      VA              ; VA >>= 1, VF = LSB
$A7A    $FB98   UNKNOWN  FB98            ; Unknown Fxxx instruction
$A7C    $2CE4   CALL     $CE4            ; Call subroutine at CE4
$A7E    $09D5   SYS      $9D5            ; System call to 9D5
$A80    $3BFF   SE       VB, #FF         ; Skip if VB == 255
$A82    $3A7C   SE       VA, #7C         ; Skip if VA == 124
$A84    $0B46   SYS      $B46            ; System call to B46
$A86    $10BB   JP       $0BB            ; Jump to 0BB
$A88    $9505   UNKNOWN  $9505           ; Unknown 9xxx instruction
$A8A    $7BDE   ADD      VB, #DE         ; Add 222 to VB
$A8C    $7847   ADD      V8, #47         ; Add 71 to V8
$A8E    $E70F   UNKNOWN  $E70F           ; Unknown Exxx instruction
$A90    $1338   JP       $338            ; Jump to 338
$A92    $0DB3   SYS      $DB3            ; System call to DB3
$A94    $4B8B   SNE      VB, #8B         ; Skip if VB != 139
$A96    $3BEE   SE       VB, #EE         ; Skip if VB == 238
$A98    $E9B9   UNKNOWN  $E9B9           ; Unknown Exxx instruction
$A9A    $C887   RND      V8, #87         ; V8 = random & 87
$A9C    $AD26   LD       I, $D26         ; Load D26 into I
$A9E    $A1EF   LD       I, $1EF         ; Load 1EF into I
$AA0    $8C74   ADD      VC, V7          ; VC += V7, VF = carry
$AA2    $1845   JP       $845            ; Jump to 845
$AA4    $2A99   CALL     $A99            ; Call subroutine at A99
$AA6    $1A67   JP       $A67            ; Jump to A67
$AA8    $C40E   RND      V4, #0E         ; V4 = random & 0E
$AAA    $D0F2   DRW      V0, VF, #2      ; Draw 2-byte sprite at V0, VF
$AAC    $38D8   SE       V8, #D8         ; Skip if V8 == 216
$AAE    $63F2   LD       V3, #F2         ; Load 242 into V3
$AB0    $1DEE   JP       $DEE            ; Jump to DEE
$AB2    $FC5B   UNKNOWN  FC5B            ; Unknown Fxxx instruction
$AB4    $737B   ADD      V3, #7B         ; Add 123 to V3
$AB6    $613F   LD       V1, #3F         ; Load 63 into V1
$AB8    $D8AA   DRW      V8, VA, #A      ; Draw 10-byte sprite at V8, VA
$ABA    $4A31   SNE      VA, #31         ; Skip if VA != 49
$ABC    $0655   SYS      $655            ; System call to 655
$ABE    $F808   UNKNOWN  F808            ; Unknown Fxxx instruction
$AC0    $9265   UNKNOWN  $9265           ; Unknown 9xxx instruction
$AC2    $29C8   CALL     $9C8            ; Call subroutine at 9C8
$AC4    $98E3   UNKNOWN  $98E3           ; Unknown 9xxx instruction
$AC6    $9A71   UNKNOWN  $9A71           ; Unknown 9xxx instruction
$AC8    $3D9E   SE       VD, #9E         ; Skip if VD == 158
$ACA    $6D4D   LD       VD, #4D         ; Load 77 into VD
$ACC    $801B   UNKNOWN  801B            ; Unknown 8xxx instruction
$ACE    $C56A   RND      V5, #6A         ; V5 = random & 6A
$AD0    $E4FF   UNKNOWN  $E4FF           ; Unknown Exxx instruction
$AD2    $23A6   CALL     $3A6            ; Call subroutine at 3A6
$AD4    $0B26   SYS      $B26            ; System call to B26
$AD6    $ECA4   UNKNOWN  $ECA4           ; Unknown Exxx instruction
$AD8    $3038   SE       V0, #38         ; Skip if V0 == 56
$ADA    $76C1   ADD      V6, #C1         ; Add 193 to V6
$ADC    $E938   UNKNOWN  $E938           ; Unknown Exxx instruction
$ADE    $3E5B   SE       VE, #5B         ; Skip if VE == 91
$AE0    $A6A4   LD       I, $6A4         ; Load 6A4 into I
$AE2    $5DC8   UNKNOWN  $5DC8           ; Unknown 5xxx instruction
$AE4    $14D4   JP       $4D4            ; Jump to 4D4
$AE6    $FB55   LD       [I], VB         ; Store V0-VB at I
$AE8    $5BBE   UNKNOWN  $5BBE           ; Unknown 5xxx instruction
$AEA    $22E6   CALL     $2E6            ; Call subroutine at 2E6
$AEC    $5624   UNKNOWN  $5624           ; Unknown 5xxx instruction
$AEE    $75E2   ADD      V5, #E2         ; Add 226 to V5
$AF0    $D0FC   DRW      V0, VF, #C      ; Draw 12-byte sprite at V0, VF
$AF2    $1556   JP       $556            ; Jump to 556
$AF4    $0880   SYS      $880            ; System call to 880
$AF6    $3E3C   SE       VE, #3C         ; Skip if VE == 60
$AF8    $22C4   CALL     $2C4            ; Call subroutine at 2C4
$AFA    $173D   JP       $73D            ; Jump to 73D
$AFC    $300D   SE       V0, #0D         ; Skip if V0 == 13
$AFE    $B10E   JP       V0, $10E        ; Jump to V0 + 10E
$B00    $EBDC   UNKNOWN  $EBDC           ; Unknown Exxx instruction
$B02    $B47C   JP       V0, $47C        ; Jump to V0 + 47C
$B04    $A937   LD       I, $937         ; Load 937 into I
$B06    $0320   SYS      $320            ; System call to 320
$B08    $933E   UNKNOWN  $933E           ; Unknown 9xxx instruction
$B0A    $D1A5   DRW      V1, VA, #5      ; Draw 5-byte sprite at V1, VA
$B0C    $F51C   UNKNOWN  F51C            ; Unknown Fxxx instruction
$B0E    $CDE5   RND      VD, #E5         ; VD = random & E5
$B10    $CA5B   RND      VA, #5B         ; VA = random & 5B
$B12    $AA20   LD       I, $A20         ; Load A20 into I
$B14    $2FAD   CALL     $FAD            ; Call subroutine at FAD
$B16    $5473   UNKNOWN  $5473           ; Unknown 5xxx instruction
$B18    $B828   JP       V0, $828        ; Jump to V0 + 828
$B1A    $EDA0   UNKNOWN  $EDA0           ; Unknown Exxx instruction
$B1C    $1A8B   JP       $A8B            ; Jump to A8B
$B1E    $F2F6   UNKNOWN  F2F6            ; Unknown Fxxx instruction
$B20    $BA85   JP       V0, $A85        ; Jump to V0 + A85
$B22    $6DD7   LD       VD, #D7         ; Load 215 into VD
$B24    $AB71   LD       I, $B71         ; Load B71 into I
$B26    $C139   RND      V1, #39         ; V1 = random & 39
$B28    $3641   SE       V6, #41         ; Skip if V6 == 65
$B2A    $4B39   SNE      VB, #39         ; Skip if VB != 57
$B2C    $A1E9   LD       I, $1E9         ; Load 1E9 into I
$B2E    $1DB8   JP       $DB8            ; Jump to DB8
$B30    $F756   UNKNOWN  F756            ; Unknown Fxxx instruction
$B32    $A6B4   LD       I, $6B4         ; Load 6B4 into I
$B34    $7576   ADD      V5, #76         ; Add 118 to V5
$B36    $2F4B   CALL     $F4B            ; Call subroutine at F4B
$B38    $325F   SE       V2, #5F         ; Skip if V2 == 95
$B3A    $0148   SYS      $148            ; System call to 148
$B3C    $5368   UNKNOWN  $5368           ; Unknown 5xxx instruction
$B3E    $0142   SYS      $142            ; System call to 142
$B40    $A346   LD       I, $346         ; Load 346 into I
$B42    $F951   UNKNOWN  F951            ; Unknown Fxxx instruction
$B44    $CDF3   RND      VD, #F3         ; VD = random & F3
$B46    $BA16   JP       V0, $A16        ; Jump to V0 + A16
$B48    $FC01   UNKNOWN  FC01            ; Unknown Fxxx instruction
$B4A    $79C5   ADD      V9, #C5         ; Add 197 to V9
$B4C    $F581   UNKNOWN  F581            ; Unknown Fxxx instruction
$B4E    $491B   SNE      V9, #1B         ; Skip if V9 != 27
$B50    $5473   UNKNOWN  $5473           ; Unknown 5xxx instruction
$B52    $4630   SNE      V6, #30         ; Skip if V6 != 48
$B54    $8C0B   UNKNOWN  8C0B            ; Unknown 8xxx instruction
$B56    $BBE9   JP       V0, $BE9        ; Jump to V0 + BE9
$B58    $CB19   RND      VB, #19         ; VB = random & 19
$B5A    $9673   UNKNOWN  $9673           ; Unknown 9xxx instruction
$B5C    $11FB   JP       $1FB            ; Jump to 1FB
$B5E    $69DD   LD       V9, #DD         ; Load 221 into V9
$B60    $5742   UNKNOWN  $5742           ; Unknown 5xxx instruction
$B62    $3498   SE       V4, #98         ; Skip if V4 == 152
$B64    $E478   UNKNOWN  $E478           ; Unknown Exxx instruction
$B66    $57CD   UNKNOWN  $57CD           ; Unknown 5xxx instruction
$B68    $D379   DRW      V3, V7, #9      ; Draw 9-byte sprite at V3, V7
$B6A    $BA01   JP       V0, $A01        ; Jump to V0 + A01
$B6C    $82C4   ADD      V2, VC          ; V2 += VC, VF = carry
$B6E    $7796   ADD      V7, #96         ; Add 150 to V7
$B70    $B793   JP       V0, $793        ; Jump to V0 + 793
$B72    $C247   RND      V2, #47         ; V2 = random & 47
$B74    $2994   CALL     $994            ; Call subroutine at 994
$B76    $CB22   RND      VB, #22         ; VB = random & 22
$B78    $6217   LD       V2, #17         ; Load 23 into V2
$B7A    $AD80   LD       I, $D80         ; Load D80 into I
$B7C    $D4A4   DRW      V4, VA, #4      ; Draw 4-byte sprite at V4, VA
$B7E    $FC0B   UNKNOWN  FC0B            ; Unknown Fxxx instruction
$B80    $CC57   RND      VC, #57         ; VC = random & 57
$B82    $CCEF   RND      VC, #EF         ; VC = random & EF
$B84    $5126   UNKNOWN  $5126           ; Unknown 5xxx instruction
$B86    $E761   UNKNOWN  $E761           ; Unknown Exxx instruction
$B88    $5059   UNKNOWN  $5059           ; Unknown 5xxx instruction
$B8A    $0E0E   SYS      $E0E            ; System call to E0E
$B8C    $866A   UNKNOWN  866A            ; Unknown 8xxx instruction
$B8E    $7D35   ADD      VD, #35         ; Add 53 to VD
$B90    $D80B   DRW      V8, V0, #B      ; Draw 11-byte sprite at V8, V0
$B92    $E5F0   UNKNOWN  $E5F0           ; Unknown Exxx instruction
$B94    $4079   SNE      V0, #79         ; Skip if V0 != 121
$B96    $A763   LD       I, $763         ; Load 763 into I
$B98    $F69A   UNKNOWN  F69A            ; Unknown Fxxx instruction
$B9A    $8634   ADD      V6, V3          ; V6 += V3, VF = carry
$B9C    $3462   SE       V4, #62         ; Skip if V4 == 98
$B9E    $5C5E   UNKNOWN  $5C5E           ; Unknown 5xxx instruction
$BA0    $A751   LD       I, $751         ; Load 751 into I
$BA2    $A13F   LD       I, $13F         ; Load 13F into I
$BA4    $9911   UNKNOWN  $9911           ; Unknown 9xxx instruction
$BA6    $7B1D   ADD      VB, #1D         ; Add 29 to VB
$BA8    $4372   SNE      V3, #72         ; Skip if V3 != 114
$BAA    $9914   UNKNOWN  $9914           ; Unknown 9xxx instruction
$BAC    $5AD9   UNKNOWN  $5AD9           ; Unknown 5xxx instruction
$BAE    $1F3C   JP       $F3C            ; Jump to F3C
$BB0    $89E2   AND      V9, VE          ; V9 &= VE
$BB2    $E9C2   UNKNOWN  $E9C2           ; Unknown Exxx instruction
$BB4    $3B9A   SE       VB, #9A         ; Skip if VB == 154
$BB6    $9255   UNKNOWN  $9255           ; Unknown 9xxx instruction
$BB8    $630B   LD       V3, #0B         ; Load 11 into V3
$BBA    $C727   RND      V7, #27         ; V7 = random & 27
$BBC    $3393   SE       V3, #93         ; Skip if V3 == 147
$BBE    $76E3   ADD      V6, #E3         ; Add 227 to V6
$BC0    $0F66   SYS      $F66            ; System call to F66
$BC2    $D034   DRW      V0, V3, #4      ; Draw 4-byte sprite at V0, V3
$BC4    $A92E   LD       I, $92E         ; Load 92E into I
$BC6    $E722   UNKNOWN  $E722           ; Unknown Exxx instruction
$BC8    $8190   LD       V1, V9          ; V1 = V9
$BCA    $8AFF   UNKNOWN  8AFF            ; Unknown 8xxx instruction
$BCC    $5BC0   SE       VB, VC          ; Skip if VB == VC
$BCE    $82BE   SHL      V2              ; V2 <<= 1, VF = MSB
$BD0    $8C6F   UNKNOWN  8C6F            ; Unknown 8xxx instruction
$BD2    $93BE   UNKNOWN  $93BE           ; Unknown 9xxx instruction
$BD4    $54A4   UNKNOWN  $54A4           ; Unknown 5xxx instruction
$BD6    $A300   LD       I, $300         ; Load 300 into I
$BD8    $3136   SE       V1, #36         ; Skip if V1 == 54
$BDA    $F033   LD       B, V0           ; Store BCD of V0 at I, I+1, I+2
$BDC    $D4B8   DRW      V4, VB, #8      ; Draw 8-byte sprite at V4, VB
$BDE    $C8E3   RND      V8, #E3         ; V8 = random & E3
$BE0    $155D   JP       $55D            ; Jump to 55D
$BE2    $F56C   UNKNOWN  F56C            ; Unknown Fxxx instruction
$BE4    $C2D7   RND      V2, #D7         ; V2 = random & D7
$BE6    $EC8E   UNKNOWN  $EC8E           ; Unknown Exxx instruction
$BE8    $FFDD   UNKNOWN  FFDD            ; Unknown Fxxx instruction
$BEA    $CF06   RND      VF, #06         ; VF = random & 06
$BEC    $484A   SNE      V8, #4A         ; Skip if V8 != 74
$BEE    $5437   UNKNOWN  $5437           ; Unknown 5xxx instruction
$BF0    $2AE2   CALL     $AE2            ; Call subroutine at AE2
$BF2    $B373   JP       V0, $373        ; Jump to V0 + 373
$BF4    $B1C2   JP       V0, $1C2        ; Jump to V0 + 1C2
$BF6    $87FA   UNKNOWN  87FA            ; Unknown 8xxx instruction
$BF8    $D975   DRW      V9, V7, #5      ; Draw 5-byte sprite at V9, V7
$BFA    $C1AB   RND      V1, #AB         ; V1 = random & AB
$BFC    $D1E1   DRW      V1, VE, #1      ; Draw 1-byte sprite at V1, VE
$BFE    $D292   DRW      V2, V9, #2      ; Draw 2-byte sprite at V2, V9
$C00    $615E   LD       V1, #5E         ; Load 94 into V1
$C02    $17CE   JP       $7CE            ; Jump to 7CE
$C04    $1047   JP       $047            ; Jump to 047
$C06    $F17F   UNKNOWN  F17F            ; Unknown Fxxx instruction
$C08    $BA32   JP       V0, $A32        ; Jump to V0 + A32
$C0A    $033D   SYS      $33D            ; System call to 33D
$C0C    $FBA4   UNKNOWN  FBA4            ; Unknown Fxxx instruction
$C0E    $8AB7   SUBN     VA, VB          ; VA = VB - VA, VF = !borrow
$C10    $EA09   UNKNOWN  $EA09           ; Unknown Exxx instruction
$C12    $0A6D   SYS      $A6D            ; System call to A6D
$C14    $9B55   UNKNOWN  $9B55           ; Unknown 9xxx instruction
$C16    $4830   SNE      V8, #30         ; Skip if V8 != 48
$C18    $0FC3   SYS      $FC3            ; System call to FC3
$C1A    $ECA6   UNKNOWN  $ECA6           ; Unknown Exxx instruction
$C1C    $35B6   SE       V5, #B6         ; Skip if V5 == 182
$C1E    $83FB   UNKNOWN  83FB            ; Unknown 8xxx instruction
$C20    $964E   UNKNOWN  $964E           ; Unknown 9xxx instruction
$C22    $78C6   ADD      V8, #C6         ; Add 198 to V8
$C24    $C95C   RND      V9, #5C         ; V9 = random & 5C
$C26    $BB11   JP       V0, $B11        ; Jump to V0 + B11
$C28    $BF17   JP       V0, $F17        ; Jump to V0 + F17
$C2A    $3A08   SE       VA, #08         ; Skip if VA == 8
$C2C    $5092   UNKNOWN  $5092           ; Unknown 5xxx instruction
$C2E    $43BC   SNE      V3, #BC         ; Skip if V3 != 188
$C30    $C832   RND      V8, #32         ; V8 = random & 32
$C32    $EB37   UNKNOWN  $EB37           ; Unknown Exxx instruction
$C34    $BC18   JP       V0, $C18        ; Jump to V0 + C18
$C36    $EBBF   UNKNOWN  $EBBF           ; Unknown Exxx instruction
$C38    $74FD   ADD      V4, #FD         ; Add 253 to V4
$C3A    $E529   UNKNOWN  $E529           ; Unknown Exxx instruction
$C3C    $3A63   SE       VA, #63         ; Skip if VA == 99
$C3E    $E8BE   UNKNOWN  $E8BE           ; Unknown Exxx instruction
$C40    $5EAB   UNKNOWN  $5EAB           ; Unknown 5xxx instruction
$C42    $6418   LD       V4, #18         ; Load 24 into V4
$C44    $C344   RND      V3, #44         ; V3 = random & 44
$C46    $2734   CALL     $734            ; Call subroutine at 734
$C48    $515C   UNKNOWN  $515C           ; Unknown 5xxx instruction
$C4A    $3FF5   SE       VF, #F5         ; Skip if VF == 245
$C4C    $3C2A   SE       VC, #2A         ; Skip if VC == 42
$C4E    $FE77   UNKNOWN  FE77            ; Unknown Fxxx instruction
$C50    $2D3D   CALL     $D3D            ; Call subroutine at D3D
$C52    $9202   UNKNOWN  $9202           ; Unknown 9xxx instruction
$C54    $0FEA   SYS      $FEA            ; System call to FEA
$C56    $D7F5   DRW      V7, VF, #5      ; Draw 5-byte sprite at V7, VF
$C58    $3999   SE       V9, #99         ; Skip if V9 == 153
$C5A    $E934   UNKNOWN  $E934           ; Unknown Exxx instruction
$C5C    $0CB8   SYS      $CB8            ; System call to CB8
$C5E    $F99D   UNKNOWN  F99D            ; Unknown Fxxx instruction
$C60    $C80C   RND      V8, #0C         ; V8 = random & 0C
$C62    $3D4F   SE       VD, #4F         ; Skip if VD == 79
$C64    $3967   SE       V9, #67         ; Skip if V9 == 103
$C66    $3368   SE       V3, #68         ; Skip if V3 == 104
$C68    $7D5E   ADD      VD, #5E         ; Add 94 to VD
$C6A    $DE93   DRW      VE, V9, #3      ; Draw 3-byte sprite at VE, V9
$C6C    $7AA3   ADD      VA, #A3         ; Add 163 to VA
$C6E    $B4A5   JP       V0, $4A5        ; Jump to V0 + 4A5
$C70    $7183   ADD      V1, #83         ; Add 131 to V1
$C72    $2250   CALL     $250            ; Call subroutine at 250
$C74    $A54F   LD       I, $54F         ; Load 54F into I
$C76    $744D   ADD      V4, #4D         ; Add 77 to V4
$C78    $81C6   SHR      V1              ; V1 >>= 1, VF = LSB
$C7A    $4707   SNE      V7, #07         ; Skip if V7 != 7
$C7C    $6EF9   LD       VE, #F9         ; Load 249 into VE
$C7E    $679A   LD       V7, #9A         ; Load 154 into V7
$C80    $D2E7   DRW      V2, VE, #7      ; Draw 7-byte sprite at V2, VE
$C82    $7AA4   ADD      VA, #A4         ; Add 164 to VA
$C84    $CFF8   RND      VF, #F8         ; VF = random & F8
$C86    $5A99   UNKNOWN  $5A99           ; Unknown 5xxx instruction
$C88    $1E41   JP       $E41            ; Jump to E41
$C8A    $DB7B   DRW      VB, V7, #B      ; Draw 11-byte sprite at VB, V7
$C8C    $1773   JP       $773            ; Jump to 773
$C8E    $4AD9   SNE      VA, #D9         ; Skip if VA != 217
$C90    $A99B   LD       I, $99B         ; Load 99B into I
$C92    $9D50   SNE      VD, V5          ; Skip if VD != V5
$C94    $7BB8   ADD      VB, #B8         ; Add 184 to VB
$C96    $1556   JP       $556            ; Jump to 556
$C98    $FAB4   UNKNOWN  FAB4            ; Unknown Fxxx instruction
$C9A    $74F6   ADD      V4, #F6         ; Add 246 to V4
$C9C    $91C6   UNKNOWN  $91C6           ; Unknown 9xxx instruction
$C9E    $5929   UNKNOWN  $5929           ; Unknown 5xxx instruction
$CA0    $9ADD   UNKNOWN  $9ADD           ; Unknown 9xxx instruction
$CA2    $BA46   JP       V0, $A46        ; Jump to V0 + A46
$CA4    $6E7A   LD       VE, #7A         ; Load 122 into VE
$CA6    $2916   CALL     $916            ; Call subroutine at 916
$CA8    $0F7E   SYS      $F7E            ; System call to F7E
$CAA    $6DFA   LD       VD, #FA         ; Load 250 into VD
$CAC    $B86B   JP       V0, $86B        ; Jump to V0 + 86B
$CAE    $CB37   RND      VB, #37         ; VB = random & 37
$CB0    $A1F5   LD       I, $1F5         ; Load 1F5 into I
$CB2    $B86F   JP       V0, $86F        ; Jump to V0 + 86F
$CB4    $926C   UNKNOWN  $926C           ; Unknown 9xxx instruction
$CB6    $22E6   CALL     $2E6            ; Call subroutine at 2E6
$CB8    $B64E   JP       V0, $64E        ; Jump to V0 + 64E
$CBA    $A22E   LD       I, $22E         ; Load 22E into I
$CBC    $7862   ADD      V8, #62         ; Add 98 to V8
$CBE    $B1C6   JP       V0, $1C6        ; Jump to V0 + 1C6
$CC0    $B999   JP       V0, $999        ; Jump to V0 + 999
$CC2    $EB84   UNKNOWN  $EB84           ; Unknown Exxx instruction
$CC4    $D1C7   DRW      V1, VC, #7      ; Draw 7-byte sprite at V1, VC
$CC6    $E637   UNKNOWN  $E637           ; Unknown Exxx instruction
$CC8    $1D92   JP       $D92            ; Jump to D92
$CCA    $D1E3   DRW      V1, VE, #3      ; Draw 3-byte sprite at V1, VE
$CCC    $5372   UNKNOWN  $5372           ; Unknown 5xxx instruction
$CCE    $060C   SYS      $60C            ; System call to 60C
$CD0    $6206   LD       V2, #06         ; Load 6 into V2
$CD2    $D221   DRW      V2, V2, #1      ; Draw 1-byte sprite at V2, V2
$CD4    $0097   SYS      $097            ; System call to 097
$CD6    $38BB   SE       V8, #BB         ; Skip if V8 == 187
$CD8    $39FF   SE       V9, #FF         ; Skip if V9 == 255
$CDA    $9AEE   UNKNOWN  $9AEE           ; Unknown 9xxx instruction
$CDC    $AEEB   LD       I, $EEB         ; Load EEB into I
$CDE    $9EBC   UNKNOWN  $9EBC           ; Unknown 9xxx instruction
$CE0    $FAC7   UNKNOWN  FAC7            ; Unknown Fxxx instruction
$CE2    $C602   RND      V6, #02         ; V6 = random & 02
$CE4    $6547   LD       V5, #47         ; Load 71 into V5
$CE6    $A815   LD       I, $815         ; Load 815 into I
$CE8    $AB98   LD       I, $B98         ; Load B98 into I
$CEA    $3373   SE       V3, #73         ; Skip if V3 == 115
$CEC    $51A9   UNKNOWN  $51A9           ; Unknown 5xxx instruction
$CEE    $5CF9   UNKNOWN  $5CF9           ; Unknown 5xxx instruction
$CF0    $00EE   RET                      ; Return from subroutine
$CF2    $3796   SE       V7, #96         ; Skip if V7 == 150
$CF4    $194D   JP       $94D            ; Jump to 94D
$CF6    $1471   JP       $471            ; Jump to 471
$CF8    $E188   UNKNOWN  $E188           ; Unknown Exxx instruction
$CFA    $4578   SNE      V5, #78         ; Skip if V5 != 120
$CFC    $4770   SNE      V7, #70         ; Skip if V7 != 112
$CFE    $E1D2   UNKNOWN  $E1D2           ; Unknown Exxx instruction
$D00    $CC43   RND      VC, #43         ; VC = random & 43
$D02    $42A6   SNE      V2, #A6         ; Skip if V2 != 166
$D04    $5296   UNKNOWN  $5296           ; Unknown 5xxx instruction
$D06    $A9CF   LD       I, $9CF         ; Load 9CF into I
$D08    $C749   RND      V7, #49         ; V7 = random & 49
$D0A    $9F8D   UNKNOWN  $9F8D           ; Unknown 9xxx instruction
$D0C    $0B7C   SYS      $B7C            ; System call to B7C
$D0E    $990F   UNKNOWN  $990F           ; Unknown 9xxx instruction
$D10    $8115   SUB      V1, V1          ; V1 -= V1, VF = !borrow
$D12    $6854   LD       V8, #54         ; Load 84 into V8
$D14    $D1F6   DRW      V1, VF, #6      ; Draw 6-byte sprite at V1, VF
$D16    $22DB   CALL     $2DB            ; Call subroutine at 2DB
$D18    $15FE   JP       $5FE            ; Jump to 5FE
$D1A    $CE84   RND      VE, #84         ; VE = random & 84
$D1C    $8CBA   UNKNOWN  8CBA            ; Unknown 8xxx instruction
$D1E    $48C7   SNE      V8, #C7         ; Skip if V8 != 199
$D20    $A37F   LD       I, $37F         ; Load 37F into I
$D22    $45D2   SNE      V5, #D2         ; Skip if V5 != 210
$D24    $6A92   LD       VA, #92         ; Load 146 into VA
$D26    $CF03   RND      VF, #03         ; VF = random & 03
$D28    $7A3E   ADD      VA, #3E         ; Add 62 to VA
$D2A    $DBE5   DRW      VB, VE, #5      ; Draw 5-byte sprite at VB, VE
$D2C    $F46A   UNKNOWN  F46A            ; Unknown Fxxx instruction
$D2E    $7BB8   ADD      VB, #B8         ; Add 184 to VB
$D30    $7115   ADD      V1, #15         ; Add 21 to V1
$D32    $7614   ADD      V6, #14         ; Add 20 to V6
$D34    $8B98   UNKNOWN  8B98            ; Unknown 8xxx instruction
$D36    $AEE3   LD       I, $EE3         ; Load EE3 into I
$D38    $4547   SNE      V5, #47         ; Skip if V5 != 71
$D3A    $CBE8   RND      VB, #E8         ; VB = random & E8
$D3C    $C7B9   RND      V7, #B9         ; V7 = random & B9
$D3E    $45EF   SNE      V5, #EF         ; Skip if V5 != 239
$D40    $E1FB   UNKNOWN  $E1FB           ; Unknown Exxx instruction
$D42    $764D   ADD      V6, #4D         ; Add 77 to V6
$D44    $0BC1   SYS      $BC1            ; System call to BC1
$D46    $C827   RND      V8, #27         ; V8 = random & 27
$D48    $57A9   UNKNOWN  $57A9           ; Unknown 5xxx instruction
$D4A    $7811   ADD      V8, #11         ; Add 17 to V8
$D4C    $031C   SYS      $31C            ; System call to 31C
$D4E    $3D80   SE       VD, #80         ; Skip if VD == 128
$D50    $0180   SYS      $180            ; System call to 180
$D52    $F30C   UNKNOWN  F30C            ; Unknown Fxxx instruction
$D54    $479F   SNE      V7, #9F         ; Skip if V7 != 159
$D56    $1915   JP       $915            ; Jump to 915
$D58    $640C   LD       V4, #0C         ; Load 12 into V4
$D5A    $EE2E   UNKNOWN  $EE2E           ; Unknown Exxx instruction
$D5C    $BED1   JP       V0, $ED1        ; Jump to V0 + ED1
$D5E    $8B39   UNKNOWN  8B39            ; Unknown 8xxx instruction
$D60    $B039   JP       V0, $039        ; Jump to V0 + 039
$D62    $D641   DRW      V6, V4, #1      ; Draw 1-byte sprite at V6, V4
$D64    $333C   SE       V3, #3C         ; Skip if V3 == 60
$D66    $2B29   CALL     $B29            ; Call subroutine at B29
$D68    $30A8   SE       V0, #A8         ; Skip if V0 == 168
$D6A    $09DD   SYS      $9DD            ; System call to 9DD
$D6C    $C6CA   RND      V6, #CA         ; V6 = random & CA
$D6E    $F010   UNKNOWN  F010            ; Unknown Fxxx instruction
$D70    $ED1D   UNKNOWN  $ED1D           ; Unknown Exxx instruction
$D72    $7FDC   ADD      VF, #DC         ; Add 220 to VF
$D74    $B57B   JP       V0, $57B        ; Jump to V0 + 57B
$D76    $1220   JP       $220            ; Jump to 220
$D78    $55B8   UNKNOWN  $55B8           ; Unknown 5xxx instruction
$D7A    $7B66   ADD      VB, #66         ; Add 102 to VB
$D7C    $8AE6   SHR      VA              ; VA >>= 1, VF = LSB
$D7E    $5097   UNKNOWN  $5097           ; Unknown 5xxx instruction
$D80    $6377   LD       V3, #77         ; Load 119 into V3
$D82    $4D75   SNE      VD, #75         ; Skip if VD != 117
$D84    $3252   SE       V2, #52         ; Skip if V2 == 82
$D86    $B3B1   JP       V0, $3B1        ; Jump to V0 + 3B1
$D88    $98FA   UNKNOWN  $98FA           ; Unknown 9xxx instruction
$D8A    $8F63   XOR      VF, V6          ; VF ^= V6
$D8C    $A0E4   LD       I, $0E4         ; Load 0E4 into I
$D8E    $AC02   LD       I, $C02         ; Load C02 into I
$D90    $FE20   UNKNOWN  FE20            ; Unknown Fxxx instruction
$D92    $D2C7   DRW      V2, VC, #7      ; Draw 7-byte sprite at V2, VC
$D94    $DE18   DRW      VE, V1, #8      ; Draw 8-byte sprite at VE, V1
$D96    $4B85   SNE      VB, #85         ; Skip if VB != 133
$D98    $A3A1   LD       I, $3A1         ; Load 3A1 into I
$D9A    $E7DC   UNKNOWN  $E7DC           ; Unknown Exxx instruction
$D9C    $E9FD   UNKNOWN  $E9FD           ; Unknown Exxx instruction
$D9E    $F7B6   UNKNOWN  F7B6            ; Unknown Fxxx instruction
$DA0    $340E   SE       V4, #0E         ; Skip if V4 == 14
$DA2    $E8C8   UNKNOWN  $E8C8           ; Unknown Exxx instruction
$DA4    $9C73   UNKNOWN  $9C73           ; Unknown 9xxx instruction
$DA6    $829A   UNKNOWN  829A            ; Unknown 8xxx instruction
$DA8    $8005   SUB      V0, V0          ; V0 -= V0, VF = !borrow
$DAA    $CD48   RND      VD, #48         ; VD = random & 48
$DAC    $04E9   SYS      $4E9            ; System call to 4E9
$DAE    $5BAA   UNKNOWN  $5BAA           ; Unknown 5xxx instruction
$DB0    $4861   SNE      V8, #61         ; Skip if V8 != 97
$DB2    $A305   LD       I, $305         ; Load 305 into I
$DB4    $633D   LD       V3, #3D         ; Load 61 into V3
$DB6    $51C4   UNKNOWN  $51C4           ; Unknown 5xxx instruction
$DB8    $6E31   LD       VE, #31         ; Load 49 into VE
$DBA    $AF3D   LD       I, $F3D         ; Load F3D into I
$DBC    $0218   SYS      $218            ; System call to 218
$DBE    $3F69   SE       VF, #69         ; Skip if VF == 105
$DC0    $065E   SYS      $65E            ; System call to 65E
$DC2    $FF55   LD       [I], VF         ; Store V0-VF at I
$DC4    $49E6   SNE      V9, #E6         ; Skip if V9 != 230
$DC6    $4694   SNE      V6, #94         ; Skip if V6 != 148
$DC8    $B351   JP       V0, $351        ; Jump to V0 + 351
$DCA    $2516   CALL     $516            ; Call subroutine at 516
$DCC    $CB40   RND      VB, #40         ; VB = random & 40
$DCE    $DDBF   DRW      VD, VB, #F      ; Draw 15-byte sprite at VD, VB
$DD0    $7188   ADD      V1, #88         ; Add 136 to V1
$DD2    $705A   ADD      V0, #5A         ; Add 90 to V0
$DD4    $2074   CALL     $074            ; Call subroutine at 074
$DD6    $1E36   JP       $E36            ; Jump to E36
$DD8    $0F22   SYS      $F22            ; System call to F22
$DDA    $518A   UNKNOWN  $518A           ; Unknown 5xxx instruction
$DDC    $A574   LD       I, $574         ; Load 574 into I
$DDE    $8750   LD       V7, V5          ; V7 = V5
$DE0    $7878   ADD      V8, #78         ; Add 120 to V8
$DE2    $95BE   UNKNOWN  $95BE           ; Unknown 9xxx instruction
$DE4    $C478   RND      V4, #78         ; V4 = random & 78
$DE6    $537C   UNKNOWN  $537C           ; Unknown 5xxx instruction
$DE8    $BFE3   JP       V0, $FE3        ; Jump to V0 + FE3
$DEA    $BF7D   JP       V0, $F7D        ; Jump to V0 + F7D
$DEC    $B975   JP       V0, $975        ; Jump to V0 + 975
$DEE    $A319   LD       I, $319         ; Load 319 into I
$DF0    $91E6   UNKNOWN  $91E6           ; Unknown 9xxx instruction
$DF2    $E612   UNKNOWN  $E612           ; Unknown Exxx instruction
$DF4    $E090   UNKNOWN  $E090           ; Unknown Exxx instruction
$DF6    $F3F6   UNKNOWN  F3F6            ; Unknown Fxxx instruction
$DF8    $02B4   SYS      $2B4            ; System call to 2B4
$DFA    $49A4   SNE      V9, #A4         ; Skip if V9 != 164
$DFC    $2646   CALL     $646            ; Call subroutine at 646
$DFE    $D4D6   DRW      V4, VD, #6      ; Draw 6-byte sprite at V4, VD
$E00    $7703   ADD      V7, #03         ; Add 3 to V7
$E02    $264B   CALL     $64B            ; Call subroutine at 64B
$E04    $4AAF   SNE      VA, #AF         ; Skip if VA != 175
$E06    $D9A3   DRW      V9, VA, #3      ; Draw 3-byte sprite at V9, VA
$E08    $D9DE   DRW      V9, VD, #E      ; Draw 14-byte sprite at V9, VD
$E0A    $C917   RND      V9, #17         ; V9 = random & 17
$E0C    $956D   UNKNOWN  $956D           ; Unknown 9xxx instruction
$E0E    $2644   CALL     $644            ; Call subroutine at 644
$E10    $0009   SYS      $009            ; System call to 009
$E12    $D992   DRW      V9, V9, #2      ; Draw 2-byte sprite at V9, V9
$E14    $1899   JP       $899            ; Jump to 899
$E16    $7A1C   ADD      VA, #1C         ; Add 28 to VA
$E18    $8CFF   UNKNOWN  8CFF            ; Unknown 8xxx instruction
$E1A    $651B   LD       V5, #1B         ; Load 27 into V5
$E1C    $4969   SNE      V9, #69         ; Skip if V9 != 105
$E1E    $7091   ADD      V0, #91         ; Add 145 to V0
$E20    $065D   SYS      $65D            ; System call to 65D
$E22    $9B05   UNKNOWN  $9B05           ; Unknown 9xxx instruction
$E24    $73D7   ADD      V3, #D7         ; Add 215 to V3
$E26    $EDE2   UNKNOWN  $EDE2           ; Unknown Exxx instruction
$E28    $BB92   JP       V0, $B92        ; Jump to V0 + B92
$E2A    $02F1   SYS      $2F1            ; System call to 2F1
$E2C    $DDE6   DRW      VD, VE, #6      ; Draw 6-byte sprite at VD, VE
$E2E    $C8B4   RND      V8, #B4         ; V8 = random & B4
$E30    $EF86   UNKNOWN  $EF86           ; Unknown Exxx instruction
$E32    $7687   ADD      V6, #87         ; Add 135 to V6
$E34    $BDC7   JP       V0, $DC7        ; Jump to V0 + DC7
$E36    $A6DE   LD       I, $6DE         ; Load 6DE into I
$E38    $060D   SYS      $60D            ; System call to 60D
$E3A    $2D2A   CALL     $D2A            ; Call subroutine at D2A
$E3C    $B829   JP       V0, $829        ; Jump to V0 + 829
$E3E    $DF69   DRW      VF, V6, #9      ; Draw 9-byte sprite at VF, V6
$E40    $DF1F   DRW      VF, V1, #F      ; Draw 15-byte sprite at VF, V1
$E42    $4DD6   SNE      VD, #D6         ; Skip if VD != 214
$E44    $BA11   JP       V0, $A11        ; Jump to V0 + A11
$E46    $1995   JP       $995            ; Jump to 995
$E48    $D415   DRW      V4, V1, #5      ; Draw 5-byte sprite at V4, V1
$E4A    $364A   SE       V6, #4A         ; Skip if V6 == 74
$E4C    $0389   SYS      $389            ; System call to 389
$E4E    $2048   CALL     $048            ; Call subroutine at 048
$E50    $EF66   UNKNOWN  $EF66           ; Unknown Exxx instruction
$E52    $BA25   JP       V0, $A25        ; Jump to V0 + A25
$E54    $474E   SNE      V7, #4E         ; Skip if V7 != 78
$E56    $3507   SE       V5, #07         ; Skip if V5 == 7
$E58    $D0AB   DRW      V0, VA, #B      ; Draw 11-byte sprite at V0, VA
$E5A    $07E8   SYS      $7E8            ; System call to 7E8
$E5C    $34CF   SE       V4, #CF         ; Skip if V4 == 207
$E5E    $AE79   LD       I, $E79         ; Load E79 into I
$E60    $D024   DRW      V0, V2, #4      ; Draw 4-byte sprite at V0, V2
$E62    $C761   RND      V7, #61         ; V7 = random & 61
$E64    $D824   DRW      V8, V2, #4      ; Draw 4-byte sprite at V8, V2
$E66    $7C91   ADD      VC, #91         ; Add 145 to VC
$E68    $AB30   LD       I, $B30         ; Load B30 into I
$E6A    $30FB   SE       V0, #FB         ; Skip if V0 == 251
$E6C    $D547   DRW      V5, V4, #7      ; Draw 7-byte sprite at V5, V4
$E6E    $9B4A   UNKNOWN  $9B4A           ; Unknown 9xxx instruction
$E70    $18EB   JP       $8EB            ; Jump to 8EB
$E72    $4408   SNE      V4, #08         ; Skip if V4 != 8
$E74    $7982   ADD      V9, #82         ; Add 130 to V9
$E76    $54E9   UNKNOWN  $54E9           ; Unknown 5xxx instruction
$E78    $9477   UNKNOWN  $9477           ; Unknown 9xxx instruction
$E7A    $A3E6   LD       I, $3E6         ; Load 3E6 into I
$E7C    $5E41   UNKNOWN  $5E41           ; Unknown 5xxx instruction
$E7E    $FB3B   UNKNOWN  FB3B            ; Unknown Fxxx instruction
$E80    $CBE4   RND      VB, #E4         ; VB = random & E4
$E82    $1391   JP       $391            ; Jump to 391
$E84    $D209   DRW      V2, V0, #9      ; Draw 9-byte sprite at V2, V0
$E86    $9E04   UNKNOWN  $9E04           ; Unknown 9xxx instruction
$E88    $DE6F   DRW      VE, V6, #F      ; Draw 15-byte sprite at VE, V6
$E8A    $F43E   UNKNOWN  F43E            ; Unknown Fxxx instruction
$E8C    $49F3   SNE      V9, #F3         ; Skip if V9 != 243
$E8E    $A0DE   LD       I, $0DE         ; Load 0DE into I
$E90    $956B   UNKNOWN  $956B           ; Unknown 9xxx instruction
$E92    $D86E   DRW      V8, V6, #E      ; Draw 14-byte sprite at V8, V6
$E94    $76D8   ADD      V6, #D8         ; Add 216 to V6
$E96    $4E43   SNE      VE, #43         ; Skip if VE != 67
$E98    $C76E   RND      V7, #6E         ; V7 = random & 6E
$E9A    $D2F0   DRW      V2, VF, #0      ; Draw 0-byte sprite at V2, VF
$E9C    $C9DE   RND      V9, #DE         ; V9 = random & DE
$E9E    $412F   SNE      V1, #2F         ; Skip if V1 != 47
$EA0    $E04D   UNKNOWN  $E04D           ; Unknown Exxx instruction
$EA2    $6BA6   LD       VB, #A6         ; Load 166 into VB
$EA4    $1779   JP       $779            ; Jump to 779
$EA6    $CBFA   RND      VB, #FA         ; VB = random & FA
$EA8    $06A8   SYS      $6A8            ; System call to 6A8
$EAA    $732F   ADD      V3, #2F         ; Add 47 to V3
$EAC    $0075   SYS      $075            ; System call to 075
$EAE    $6545   LD       V5, #45         ; Load 69 into V5
$EB0    $3C25   SE       VC, #25         ; Skip if VC == 37
$EB2    $53C3   UNKNOWN  $53C3           ; Unknown 5xxx instruction
$EB4    $C2B7   RND      V2, #B7         ; V2 = random & B7
$EB6    $FA18   LD       ST, VA          ; Sound timer = VA
$EB8    $A579   LD       I, $579         ; Load 579 into I
$EBA    $540B   UNKNOWN  $540B           ; Unknown 5xxx instruction
$EBC    $926C   UNKNOWN  $926C           ; Unknown 9xxx instruction
$EBE    $97A1   UNKNOWN  $97A1           ; Unknown 9xxx instruction
$EC0    $ABEF   LD       I, $BEF         ; Load BEF into I
$EC2    $455B   SNE      V5, #5B         ; Skip if V5 != 91
$EC4    $9FEC   UNKNOWN  $9FEC           ; Unknown 9xxx instruction
$EC6    $0986   SYS      $986            ; System call to 986
$EC8    $24E2   CALL     $4E2            ; Call subroutine at 4E2
$ECA    $08B5   SYS      $8B5            ; System call to 8B5
$ECC    $E0D2   UNKNOWN  $E0D2           ; Unknown Exxx instruction
$ECE    $8AB0   LD       VA, VB          ; VA = VB
$ED0    $588A   UNKNOWN  $588A           ; Unknown 5xxx instruction
$ED2    $EDB5   UNKNOWN  $EDB5           ; Unknown Exxx instruction
$ED4    $0215   SYS      $215            ; System call to 215
$ED6    $96BF   UNKNOWN  $96BF           ; Unknown 9xxx instruction
$ED8    $ECC9   UNKNOWN  $ECC9           ; Unknown Exxx instruction
$EDA    $E13E   UNKNOWN  $E13E           ; Unknown Exxx instruction
$EDC    $34B9   SE       V4, #B9         ; Skip if V4 == 185
$EDE    $D283   DRW      V2, V8, #3      ; Draw 3-byte sprite at V2, V8
$EE0    $795F   ADD      V9, #5F         ; Add 95 to V9
$EE2    $4CFA   SNE      VC, #FA         ; Skip if VC != 250
$EE4    $850D   UNKNOWN  850D            ; Unknown 8xxx instruction
$EE6    $B8B2   JP       V0, $8B2        ; Jump to V0 + 8B2
$EE8    $64C6   LD       V4, #C6         ; Load 198 into V4
$EEA    $F85D   UNKNOWN  F85D            ; Unknown Fxxx instruction
$EEC    $2E8F   CALL     $E8F            ; Call subroutine at E8F
$EEE    $A692   LD       I, $692         ; Load 692 into I
$EF0    $B4CC   JP       V0, $4CC        ; Jump to V0 + 4CC
$EF2    $141B   JP       $41B            ; Jump to 41B
$EF4    $5746   UNKNOWN  $5746           ; Unknown 5xxx instruction
$EF6    $6C84   LD       VC, #84         ; Load 132 into VC
$EF8    $F0F0   UNKNOWN  F0F0            ; Unknown Fxxx instruction
$EFA    $0C4E   SYS      $C4E            ; System call to C4E
$EFC    $BB2C   JP       V0, $B2C        ; Jump to V0 + B2C
$EFE    $74F8   ADD      V4, #F8         ; Add 248 to V4
$F00    $32D5   SE       V2, #D5         ; Skip if V2 == 213
$F02    $A0AD   LD       I, $0AD         ; Load 0AD into I
$F04    $3CDE   SE       VC, #DE         ; Skip if VC == 222
$F06    $700A   ADD      V0, #0A         ; Add 10 to V0
$F08    $6DFA   LD       VD, #FA         ; Load 250 into VD
$F0A    $F314   UNKNOWN  F314            ; Unknown Fxxx instruction
$F0C    $3548   SE       V5, #48         ; Skip if V5 == 72
$F0E    $FF04   UNKNOWN  FF04            ; Unknown Fxxx instruction
$F10    $9D7D   UNKNOWN  $9D7D           ; Unknown 9xxx instruction
$F12    $C6F6   RND      V6, #F6         ; V6 = random & F6
$F14    $8BF8   UNKNOWN  8BF8            ; Unknown 8xxx instruction
$F16    $BCF0   JP       V0, $CF0        ; Jump to V0 + CF0
$F18    $FDE5   UNKNOWN  FDE5            ; Unknown Fxxx instruction
$F1A    $22B5   CALL     $2B5            ; Call subroutine at 2B5
$F1C    $9053   UNKNOWN  $9053           ; Unknown 9xxx instruction
$F1E    $F71B   UNKNOWN  F71B            ; Unknown Fxxx instruction
$F20    $C4F2   RND      V4, #F2         ; V4 = random & F2
$F22    $BD93   JP       V0, $D93        ; Jump to V0 + D93
$F24    $0197   SYS      $197            ; System call to 197
$F26    $BB2C   JP       V0, $B2C        ; Jump to V0 + B2C
$F28    $4126   SNE      V1, #26         ; Skip if V1 != 38
$F2A    $60EE   LD       V0, #EE         ; Load 238 into V0
$F2C    $67BC   LD       V7, #BC         ; Load 188 into V7
$F2E    $7A6C   ADD      VA, #6C         ; Add 108 to VA
$F30    $D926   DRW      V9, V2, #6      ; Draw 6-byte sprite at V9, V2
$F32    $EEDF   UNKNOWN  $EEDF           ; Unknown Exxx instruction
$F34    $A099   LD       I, $099         ; Load 099 into I
$F36    $4584   SNE      V5, #84         ; Skip if V5 != 132
$F38    $E849   UNKNOWN  $E849           ; Unknown Exxx instruction
$F3A    $1E4C   JP       $E4C            ; Jump to E4C
$F3C    $B100   JP       V0, $100        ; Jump to V0 + 100
$F3E    $C382   RND      V3, #82         ; V3 = random & 82
$F40    $3D3C   SE       VD, #3C         ; Skip if VD == 60
$F42    $09EC   SYS      $9EC            ; System call to 9EC
$F44    $4D5A   SNE      VD, #5A         ; Skip if VD != 90
$F46    $5D7B   UNKNOWN  $5D7B           ; Unknown 5xxx instruction
$F48    $48C2   SNE      V8, #C2         ; Skip if V8 != 194
$F4A    $4831   SNE      V8, #31         ; Skip if V8 != 49
$F4C    $01AC   SYS      $1AC            ; System call to 1AC
$F4E    $230B   CALL     $30B            ; Call subroutine at 30B
$F50    $2110   CALL     $110            ; Call subroutine at 110
$F52    $D3ED   DRW      V3, VE, #D      ; Draw 13-byte sprite at V3, VE
$F54    $23E3   CALL     $3E3            ; Call subroutine at 3E3
$F56    $31F0   SE       V1, #F0         ; Skip if V1 == 240
$F58    $DA85   DRW      VA, V8, #5      ; Draw 5-byte sprite at VA, V8
$F5A    $661E   LD       V6, #1E         ; Load 30 into V6
$F5C    $9B8B   UNKNOWN  $9B8B           ; Unknown 9xxx instruction
$F5E    $B9AC   JP       V0, $9AC        ; Jump to V0 + 9AC
$F60    $DB33   DRW      VB, V3, #3      ; Draw 3-byte sprite at VB, V3
$F62    $9EBD   UNKNOWN  $9EBD           ; Unknown 9xxx instruction
$F64    $9083   UNKNOWN  $9083           ; Unknown 9xxx instruction
$F66    $962B   UNKNOWN  $962B           ; Unknown 9xxx instruction
$F68    $50CC   UNKNOWN  $50CC           ; Unknown 5xxx instruction
$F6A    $AE72   LD       I, $E72         ; Load E72 into I
$F6C    $2AB9   CALL     $AB9            ; Call subroutine at AB9
$F6E    $2D62   CALL     $D62            ; Call subroutine at D62
$F70    $7FDD   ADD      VF, #DD         ; Add 221 to VF
$F72    $22DD   CALL     $2DD            ; Call subroutine at 2DD
$F74    $4886   SNE      V8, #86         ; Skip if V8 != 134
$F76    $827C   UNKNOWN  827C            ; Unknown 8xxx instruction
$F78    $188A   JP       $88A            ; Jump to 88A
$F7A    $E500   UNKNOWN  $E500           ; Unknown Exxx instruction
$F7C    $217E   CALL     $17E            ; Call subroutine at 17E
$F7E    $1415   JP       $415            ; Jump to 415
$F80    $2856   CALL     $856            ; Call subroutine at 856
$F82    $AB7B   LD       I, $B7B         ; Load B7B into I
$F84    $3A5D   SE       VA, #5D         ; Skip if VA == 93
$F86    $3A12   SE       VA, #12         ; Skip if VA == 18
$F88    $A7E8   LD       I, $7E8         ; Load 7E8 into I
$F8A    $F52E   UNKNOWN  F52E            ; Unknown Fxxx instruction
$F8C    $3643   SE       V6, #43         ; Skip if V6 == 67
$F8E    $76B8   ADD      V6, #B8         ; Add 184 to V6
$F90    $A7AE   LD       I, $7AE         ; Load 7AE into I
$F92    $1210   JP       $210            ; Jump to 210
$F94    $8E68   UNKNOWN  8E68            ; Unknown 8xxx instruction
$F96    $BC74   JP       V0, $C74        ; Jump to V0 + C74
$F98    $62AD   LD       V2, #AD         ; Load 173 into V2
$F9A    $2247   CALL     $247            ; Call subroutine at 247
$F9C    $B68C   JP       V0, $68C        ; Jump to V0 + 68C
$F9E    $8567   SUBN     V5, V6          ; V5 = V6 - V5, VF = !borrow
$FA0    $44B1   SNE      V4, #B1         ; Skip if V4 != 177
$FA2    $1C0B   JP       $C0B            ; Jump to C0B
$FA4    $3F53   SE       VF, #53         ; Skip if VF == 83
$FA6    $462F   SNE      V6, #2F         ; Skip if V6 != 47
$FA8    $334C   SE       V3, #4C         ; Skip if V3 == 76
$FAA    $360A   SE       V6, #0A         ; Skip if V6 == 10
$FAC    $082C   SYS      $82C            ; System call to 82C
$FAE    $2AA7   CALL     $AA7            ; Call subroutine at AA7
$FB0    $90EF   UNKNOWN  $90EF           ; Unknown 9xxx instruction
$FB2    $47E0   SNE      V7, #E0         ; Skip if V7 != 224
$FB4    $C09A   RND      V0, #9A         ; V0 = random & 9A
$FB6    $0ECC   SYS      $ECC            ; System call to ECC
$FB8    $000D   SYS      $00D            ; System call to 00D
$FBA    $DA82   DRW      VA, V8, #2      ; Draw 2-byte sprite at VA, V8
$FBC    $0634   SYS      $634            ; System call to 634
$FBE    $1043   JP       $043            ; Jump to 043
$FC0    $F52B   UNKNOWN  F52B            ; Unknown Fxxx instruction
$FC2    $3CE2   SE       VC, #E2         ; Skip if VC == 226
$FC4    $D186   DRW      V1, V8, #6      ; Draw 6-byte sprite at V1, V8
$FC6    $2E15   CALL     $E15            ; Call subroutine at E15
$FC8    $8811   OR       V8, V1          ; V8 |= V1
$FCA    $8E98   UNKNOWN  8E98            ; Unknown 8xxx instruction
$FCC    $B7F5   JP       V0, $7F5        ; Jump to V0 + 7F5
$FCE    $14CD   JP       $4CD            ; Jump to 4CD
$FD0    $5F19   UNKNOWN  $5F19           ; Unknown 5xxx instruction
$FD2    $62BD   LD       V2, #BD         ; Load 189 into V2
$FD4    $6943   LD       V9, #43         ; Load 67 into V9
$FD6    $EE7B   UNKNOWN  $EE7B           ; Unknown Exxx instruction
$FD8    $1663   JP       $663            ; Jump to 663
$FDA    $83AA   UNKNOWN  83AA            ; Unknown 8xxx instruction
$FDC    $C3D3   RND      V3, #D3         ; V3 = random & D3
$FDE    $5628   UNKNOWN  $5628           ; Unknown 5xxx instruction
$FE0    $CEA0   RND      VE, #A0         ; VE = random & A0
$FE2    $8347   SUBN     V3, V4          ; V3 = V4 - V3, VF = !borrow
$FE4    $032B   SYS      $32B            ; System call to 32B
$FE6    $C482   RND      V4, #82         ; V4 = random & 82
$FE8    $7811   ADD      V8, #11         ; Add 17 to V8
$FEA    $B7B1   JP       V0, $7B1        ; Jump to V0 + 7B1
$FEC    $8178   UNKNOWN  8178            ; Unknown 8xxx instruction
$FEE    $3384   SE       V3, #84         ; Skip if V3 == 132
$FF0    $E116   UNKNOWN  $E116           ; Unknown Exxx instruction
$FF2    $5E27   UNKNOWN  $5E27           ; Unknown 5xxx instruction
$FF4    $3744   SE       V7, #44         ; Skip if V7 == 68
$FF6    $41ED   SNE      V1, #ED         ; Skip if V1 != 237
$FF8    $4C04   SNE      VC, #04         ; Skip if VC != 4
$FFA    $1D78   JP       $D78            ; Jump to D78
$FFC    $2961   CALL     $961            ; Call subroutine at 961
$FFE    $1C24   JP       $C24            ; Jump to C24

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 470 (26.2%)
  LD      : 225 (12.6%)
  JP      : 218 (12.2%)
  ADD     : 133 ( 7.4%)
  SYS     : 132 ( 7.4%)
  SE      : 116 ( 6.5%)
  DRW     : 115 ( 6.4%)
  RND     : 114 ( 6.4%)
  CALL    : 114 ( 6.4%)
  SNE     : 110 ( 6.1%)
  SHR     :   9 ( 0.5%)
  AND     :   9 ( 0.5%)
  SUBN    :   6 ( 0.3%)
  XOR     :   5 ( 0.3%)
  OR      :   5 ( 0.3%)
  SUB     :   5 ( 0.3%)
  SHL     :   4 ( 0.2%)
  RET     :   1 ( 0.1%)

Memory Operations: 358 (20.0%)
Arithmetic Operations: 163 (9.1%)
