
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B2267D01_I36716_C1001_30a2e9534e06.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 2267
Instance: 36716
Direction: ascending
Final Array: [2, 3, 5, 73, 76, 121, 174, 191]
Operations: R:0 W:1 C:61 S:8

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 123
Sort Array References:
  $216: LD I, $4D2 ; Load 4D2 into I
  $250: LD I, $307 ; Load 307 into I
  $28E: LD I, $93C ; Load 93C into I
  $2A6: LD I, $56D ; Load 56D into I
  $2E8: LD I, $9A2 ; Load 9A2 into I
  $2EA: LD I, $C0B ; Load C0B into I
  $306: LD I, $EBF ; Load EBF into I
  $30C: LD I, $B64 ; Load B64 into I
  $37E: LD I, $E5C ; Load E5C into I
  $398: LD I, $CAE ; Load CAE into I
  $3BA: LD I, $AB4 ; Load AB4 into I
  $3D0: LD I, $7B5 ; Load 7B5 into I
  $3DC: LD I, $C69 ; Load C69 into I
  $3DE: LD I, $AD3 ; Load AD3 into I
  $400: LD I, $485 ; Load 485 into I
  $420: LD VE, [I] ; Load V0-VE from I
  $422: LD I, $3FE ; Load 3FE into I
  $426: LD I, $F35 ; Load F35 into I
  $450: LD I, $823 ; Load 823 into I
  $48C: LD I, $14E ; Load 14E into I
  $4BE: LD I, $17B ; Load 17B into I
  $4C0: LD I, $8E3 ; Load 8E3 into I
  $4C4: LD I, $686 ; Load 686 into I
  $4DE: LD I, $1F0 ; Load 1F0 into I
  $4E2: LD I, $15A ; Load 15A into I
  $506: LD I, $8E4 ; Load 8E4 into I
  $538: LD I, $F9A ; Load F9A into I
  $548: LD I, $CB7 ; Load CB7 into I
  $568: LD I, $080 ; Load 080 into I
  $582: LD I, $F1B ; Load F1B into I
  $5AC: LD I, $BD0 ; Load BD0 into I
  $602: LD I, $CAF ; Load CAF into I
  $620: LD I, $7A2 ; Load 7A2 into I
  $626: LD I, $CA1 ; Load CA1 into I
  $630: LD I, $6DF ; Load 6DF into I
  $658: LD I, $F08 ; Load F08 into I
  $664: LD I, $59F ; Load 59F into I
  $69C: LD I, $6CF ; Load 6CF into I
  $6D6: LD I, $16C ; Load 16C into I
  $714: LD I, $D0A ; Load D0A into I
  $720: LD I, $C88 ; Load C88 into I
  $724: LD I, $FA2 ; Load FA2 into I
  $73A: LD I, $B93 ; Load B93 into I
  $746: LD I, $A90 ; Load A90 into I
  $75E: LD I, $4F8 ; Load 4F8 into I
  $76C: LD I, $20C ; Load 20C into I
  $778: LD I, $072 ; Load 072 into I
  $784: LD I, $42B ; Load 42B into I
  $796: LD I, $65C ; Load 65C into I
  $7A8: LD I, $034 ; Load 034 into I
  $7B4: LD I, $99D ; Load 99D into I
  $7CC: LD I, $C6D ; Load C6D into I
  $7D2: LD I, $877 ; Load 877 into I
  $7E0: LD I, $5A2 ; Load 5A2 into I
  $81E: LD I, $33B ; Load 33B into I
  $822: LD I, $59A ; Load 59A into I
  $834: LD I, $06D ; Load 06D into I
  $860: LD I, $BB2 ; Load BB2 into I
  $880: LD I, $AE8 ; Load AE8 into I
  $8A4: LD I, $923 ; Load 923 into I
  $8BE: LD I, $F9B ; Load F9B into I
  $8C4: LD I, $A47 ; Load A47 into I
  $8D2: LD I, $A8F ; Load A8F into I
  $8D4: LD I, $1F9 ; Load 1F9 into I
  $8FE: LD I, $F3C ; Load F3C into I
  $90A: LD I, $717 ; Load 717 into I
  $90C: LD I, $9CB ; Load 9CB into I
  $91A: LD I, $58C ; Load 58C into I
  $920: LD I, $759 ; Load 759 into I
  $942: LD I, $BA7 ; Load BA7 into I
  $97A: LD I, $92E ; Load 92E into I
  $996: LD I, $647 ; Load 647 into I
  $9CE: LD I, $344 ; Load 344 into I
  $9EE: LD I, $464 ; Load 464 into I
  $9FA: LD I, $087 ; Load 087 into I
  $A10: LD I, $E0F ; Load E0F into I
  $A36: LD I, $033 ; Load 033 into I
  $A42: LD I, $913 ; Load 913 into I
  $A46: LD I, $3B8 ; Load 3B8 into I
  $A52: LD I, $BFF ; Load BFF into I
  $A8C: LD I, $A0D ; Load A0D into I
  $ABC: LD I, $80D ; Load 80D into I
  $AC0: LD I, $39C ; Load 39C into I
  $AE2: LD I, $46C ; Load 46C into I
  $B0A: LD I, $0AC ; Load 0AC into I
  $B20: LD I, $B73 ; Load B73 into I
  $B2A: LD I, $DB9 ; Load DB9 into I
  $B58: LD I, $4D3 ; Load 4D3 into I
  $B72: LD I, $687 ; Load 687 into I
  $B7A: LD I, $CC9 ; Load CC9 into I
  $BA2: LD I, $4A2 ; Load 4A2 into I
  $BC2: LD I, $224 ; Load 224 into I
  $BF2: LD I, $501 ; Load 501 into I
  $C62: LD I, $999 ; Load 999 into I
  $C70: LD I, $41A ; Load 41A into I
  $C88: LD I, $69A ; Load 69A into I
  $C8E: LD I, $F7D ; Load F7D into I
  $CA2: LD I, $A2E ; Load A2E into I
  $CE2: LD I, $A79 ; Load A79 into I
  $D20: LD I, $BF0 ; Load BF0 into I
  $D2E: LD I, $70B ; Load 70B into I
  $D30: LD I, $FE8 ; Load FE8 into I
  $D5C: LD I, $5B5 ; Load 5B5 into I
  $DB0: LD I, $567 ; Load 567 into I
  $DD0: LD I, $CAB ; Load CAB into I
  $DDC: LD I, $E84 ; Load E84 into I
  $DFE: LD I, $8A1 ; Load 8A1 into I
  $E00: LD I, $7C2 ; Load 7C2 into I
  $E02: LD I, $D2E ; Load D2E into I
  $E82: LD I, $D98 ; Load D98 into I
  $EB0: LD I, $621 ; Load 621 into I
  $EDC: LD I, $4B5 ; Load 4B5 into I
  $EF4: LD I, $A9F ; Load A9F into I
  $F18: LD I, $069 ; Load 069 into I
  $F44: LD I, $87E ; Load 87E into I
  $F8A: LD I, $B3D ; Load B3D into I
  $F96: LD I, $531 ; Load 531 into I
  $FC8: LD I, $6C0 ; Load 6C0 into I
  $FDA: LD I, $D61 ; Load D61 into I
  $FE2: LD I, $A66 ; Load A66 into I
  $FEC: LD I, $2A5 ; Load 2A5 into I
  $FF0: LD I, $38F ; Load 38F into I
  $FF6: LD I, $2F1 ; Load 2F1 into I

CONTROL FLOW ANALYSIS:
Jumps: 249
Calls: 107
Branches: 231
Loops: 132
Loop Structures:
  $340 -> $01A (backward jump)
  $352 -> $23E (backward jump)
  $3E8 -> $1E7 (backward jump)
  $44A -> $0BE (backward jump)
  $48A -> $2C1 (backward jump)
  $492 -> $0DF (backward jump)
  $4AE -> $0B8 (backward jump)
  $4E8 -> $18F (backward jump)
  $508 -> $0E1 (backward jump)
  $51E -> $4EC (backward jump)
  $546 -> $4BF (backward jump)
  $554 -> $0FE (backward jump)
  $57C -> $2A6 (backward jump)
  $5B2 -> $20F (backward jump)
  $5E0 -> $4C3 (backward jump)
  $610 -> $274 (backward jump)
  $648 -> $4BF (backward jump)
  $680 -> $2F7 (backward jump)
  $6AE -> $127 (backward jump)
  $6B6 -> $62D (backward jump)
  $6B8 -> $098 (backward jump)
  $6C2 -> $2A3 (backward jump)
  $6D4 -> $3FB (backward jump)
  $6EC -> $2C2 (backward jump)
  $708 -> $6A2 (backward jump)
  $70A -> $18C (backward jump)
  $73C -> $1DE (backward jump)
  $752 -> $6C8 (backward jump)
  $760 -> $637 (backward jump)
  $7D6 -> $066 (backward jump)
  $844 -> $402 (backward jump)
  $88E -> $5C4 (backward jump)
  $89A -> $741 (backward jump)
  $8B8 -> $52E (backward jump)
  $8C2 -> $535 (backward jump)
  $8CE -> $2AC (backward jump)
  $914 -> $48D (backward jump)
  $93A -> $05E (backward jump)
  $974 -> $81B (backward jump)
  $982 -> $18D (backward jump)
  $9B0 -> $7E1 (backward jump)
  $9B2 -> $92A (backward jump)
  $9B8 -> $22C (backward jump)
  $9EC -> $65D (backward jump)
  $9FE -> $111 (backward jump)
  $A16 -> $87E (backward jump)
  $A38 -> $0B0 (backward jump)
  $A44 -> $976 (backward jump)
  $A4E -> $5DE (backward jump)
  $A56 -> $269 (backward jump)
  $A5C -> $403 (backward jump)
  $A5E -> $397 (backward jump)
  $A72 -> $053 (backward jump)
  $A94 -> $A02 (backward jump)
  $A98 -> $0AE (backward jump)
  $A9E -> $110 (backward jump)
  $AE4 -> $082 (backward jump)
  $AE8 -> $A5B (backward jump)
  $AF6 -> $289 (backward jump)
  $AFC -> $4A3 (backward jump)
  $B30 -> $4AD (backward jump)
  $B32 -> $1D7 (backward jump)
  $B3C -> $0D5 (backward jump)
  $B86 -> $989 (backward jump)
  $B94 -> $277 (backward jump)
  $B98 -> $90D (backward jump)
  $BC0 -> $583 (backward jump)
  $BCA -> $048 (backward jump)
  $BFC -> $038 (backward jump)
  $C10 -> $891 (backward jump)
  $C22 -> $ACF (backward jump)
  $C30 -> $5F4 (backward jump)
  $C50 -> $597 (backward jump)
  $C64 -> $7F3 (backward jump)
  $C82 -> $4C5 (backward jump)
  $CC8 -> $35D (backward jump)
  $CEE -> $899 (backward jump)
  $D12 -> $BF6 (backward jump)
  $D1C -> $4E7 (backward jump)
  $D34 -> $76D (backward jump)
  $D36 -> $179 (backward jump)
  $D4E -> $55C (backward jump)
  $D56 -> $0DA (backward jump)
  $D58 -> $B06 (backward jump)
  $D5A -> $689 (backward jump)
  $D6C -> $C18 (backward jump)
  $D74 -> $7BB (backward jump)
  $DA6 -> $645 (backward jump)
  $DB8 -> $6C3 (backward jump)
  $DC6 -> $3A0 (backward jump)
  $DE2 -> $24B (backward jump)
  $DE6 -> $CA8 (backward jump)
  $DF0 -> $219 (backward jump)
  $DF4 -> $138 (backward jump)
  $DF6 -> $5A1 (backward jump)
  $DFA -> $9F6 (backward jump)
  $E04 -> $69B (backward jump)
  $E0E -> $DF3 (backward jump)
  $E20 -> $599 (backward jump)
  $E22 -> $E1E (backward jump)
  $E58 -> $5B8 (backward jump)
  $E64 -> $96C (backward jump)
  $E68 -> $99D (backward jump)
  $E80 -> $CFB (backward jump)
  $E84 -> $7DE (backward jump)
  $E86 -> $7CA (backward jump)
  $E90 -> $869 (backward jump)
  $E9C -> $480 (backward jump)
  $EA6 -> $636 (backward jump)
  $EBA -> $43E (backward jump)
  $EC8 -> $DDB (backward jump)
  $ECE -> $695 (backward jump)
  $EDA -> $54A (backward jump)
  $EE2 -> $357 (backward jump)
  $EF8 -> $988 (backward jump)
  $F0E -> $C29 (backward jump)
  $F12 -> $F00 (backward jump)
  $F2C -> $5B2 (backward jump)
  $F34 -> $1E6 (backward jump)
  $F48 -> $B4F (backward jump)
  $F50 -> $A86 (backward jump)
  $F78 -> $EFF (backward jump)
  $F86 -> $0DD (backward jump)
  $FA4 -> $89E (backward jump)
  $FB0 -> $32B (backward jump)
  $FB8 -> $404 (backward jump)
  $FBA -> $237 (backward jump)
  $FBE -> $E26 (backward jump)
  $FCA -> $3CF (backward jump)
  $FD2 -> $474 (backward jump)
  $FFC -> $C6A (backward jump)
  $FFE -> $4E2 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $8173   XOR      V1, V7          ; V1 ^= V7
$202    $C2D1   RND      V2, #D1         ; V2 = random & D1
$204    $91B7   UNKNOWN  $91B7           ; Unknown 9xxx instruction
$206    $EC5A   UNKNOWN  $EC5A           ; Unknown Exxx instruction
$208    $F89A   UNKNOWN  F89A            ; Unknown Fxxx instruction
$20A    $5699   UNKNOWN  $5699           ; Unknown 5xxx instruction
$20C    $FC3E   UNKNOWN  FC3E            ; Unknown Fxxx instruction
$20E    $1851   JP       $851            ; Jump to 851
$210    $BC6B   JP       V0, $C6B        ; Jump to V0 + C6B
$212    $E10A   UNKNOWN  $E10A           ; Unknown Exxx instruction
$214    $D0A6   DRW      V0, VA, #6      ; Draw 6-byte sprite at V0, VA
$216    $A4D2   LD       I, $4D2         ; Load 4D2 into I
$218    $F1FC   UNKNOWN  F1FC            ; Unknown Fxxx instruction
$21A    $DA21   DRW      VA, V2, #1      ; Draw 1-byte sprite at VA, V2
$21C    $7665   ADD      V6, #65         ; Add 101 to V6
$21E    $370C   SE       V7, #0C         ; Skip if V7 == 12
$220    $3BD8   SE       VB, #D8         ; Skip if VB == 216
$222    $F0EF   UNKNOWN  F0EF            ; Unknown Fxxx instruction
$224    $634A   LD       V3, #4A         ; Load 74 into V3
$226    $355E   SE       V5, #5E         ; Skip if V5 == 94
$228    $6CA2   LD       VC, #A2         ; Load 162 into VC
$22A    $F759   UNKNOWN  F759            ; Unknown Fxxx instruction
$22C    $63A5   LD       V3, #A5         ; Load 165 into V3
$22E    $D162   DRW      V1, V6, #2      ; Draw 2-byte sprite at V1, V6
$230    $793B   ADD      V9, #3B         ; Add 59 to V9
$232    $DF3B   DRW      VF, V3, #B      ; Draw 11-byte sprite at VF, V3
$234    $C156   RND      V1, #56         ; V1 = random & 56
$236    $C87E   RND      V8, #7E         ; V8 = random & 7E
$238    $C933   RND      V9, #33         ; V9 = random & 33
$23A    $DE73   DRW      VE, V7, #3      ; Draw 3-byte sprite at VE, V7
$23C    $9776   UNKNOWN  $9776           ; Unknown 9xxx instruction
$23E    $0221   SYS      $221            ; System call to 221
$240    $001C   SYS      $01C            ; System call to 01C
$242    $4011   SNE      V0, #11         ; Skip if V0 != 17
$244    $5D04   UNKNOWN  $5D04           ; Unknown 5xxx instruction
$246    $C78C   RND      V7, #8C         ; V7 = random & 8C
$248    $7F4C   ADD      VF, #4C         ; Add 76 to VF
$24A    $8760   LD       V7, V6          ; V7 = V6
$24C    $4C65   SNE      VC, #65         ; Skip if VC != 101
$24E    $1CD8   JP       $CD8            ; Jump to CD8
$250    $A307   LD       I, $307         ; Load 307 into I
$252    $F090   UNKNOWN  F090            ; Unknown Fxxx instruction
$254    $8487   SUBN     V4, V8          ; V4 = V8 - V4, VF = !borrow
$256    $E87A   UNKNOWN  $E87A           ; Unknown Exxx instruction
$258    $F2CF   UNKNOWN  F2CF            ; Unknown Fxxx instruction
$25A    $E707   UNKNOWN  $E707           ; Unknown Exxx instruction
$25C    $B495   JP       V0, $495        ; Jump to V0 + 495
$25E    $92B1   UNKNOWN  $92B1           ; Unknown 9xxx instruction
$260    $73C8   ADD      V3, #C8         ; Add 200 to V3
$262    $66E0   LD       V6, #E0         ; Load 224 into V6
$264    $16D3   JP       $6D3            ; Jump to 6D3
$266    $8AC9   UNKNOWN  8AC9            ; Unknown 8xxx instruction
$268    $E4D0   UNKNOWN  $E4D0           ; Unknown Exxx instruction
$26A    $1EB3   JP       $EB3            ; Jump to EB3
$26C    $03E0   SYS      $3E0            ; System call to 3E0
$26E    $76E0   ADD      V6, #E0         ; Add 224 to V6
$270    $8CA1   OR       VC, VA          ; VC |= VA
$272    $8C01   OR       VC, V0          ; VC |= V0
$274    $C9F8   RND      V9, #F8         ; V9 = random & F8
$276    $5504   UNKNOWN  $5504           ; Unknown 5xxx instruction
$278    $CC3E   RND      VC, #3E         ; VC = random & 3E
$27A    $D649   DRW      V6, V4, #9      ; Draw 9-byte sprite at V6, V4
$27C    $CFD2   RND      VF, #D2         ; VF = random & D2
$27E    $043A   SYS      $43A            ; System call to 43A
$280    $7FF5   ADD      VF, #F5         ; Add 245 to VF
$282    $DE22   DRW      VE, V2, #2      ; Draw 2-byte sprite at VE, V2
$284    $46E2   SNE      V6, #E2         ; Skip if V6 != 226
$286    $1A0B   JP       $A0B            ; Jump to A0B
$288    $7687   ADD      V6, #87         ; Add 135 to V6
$28A    $597F   UNKNOWN  $597F           ; Unknown 5xxx instruction
$28C    $00F8   SYS      $0F8            ; System call to 0F8
$28E    $A93C   LD       I, $93C         ; Load 93C into I
$290    $E6D5   UNKNOWN  $E6D5           ; Unknown Exxx instruction
$292    $01C7   SYS      $1C7            ; System call to 1C7
$294    $6849   LD       V8, #49         ; Load 73 into V8
$296    $C5AF   RND      V5, #AF         ; V5 = random & AF
$298    $9BB8   UNKNOWN  $9BB8           ; Unknown 9xxx instruction
$29A    $22DC   CALL     $2DC            ; Call subroutine at 2DC
$29C    $8DFD   UNKNOWN  8DFD            ; Unknown 8xxx instruction
$29E    $C053   RND      V0, #53         ; V0 = random & 53
$2A0    $DD06   DRW      VD, V0, #6      ; Draw 6-byte sprite at VD, V0
$2A2    $B2BA   JP       V0, $2BA        ; Jump to V0 + 2BA
$2A4    $6E45   LD       VE, #45         ; Load 69 into VE
$2A6    $A56D   LD       I, $56D         ; Load 56D into I
$2A8    $72B1   ADD      V2, #B1         ; Add 177 to V2
$2AA    $0EC2   SYS      $EC2            ; System call to EC2
$2AC    $B67F   JP       V0, $67F        ; Jump to V0 + 67F
$2AE    $26E6   CALL     $6E6            ; Call subroutine at 6E6
$2B0    $40F9   SNE      V0, #F9         ; Skip if V0 != 249
$2B2    $0526   SYS      $526            ; System call to 526
$2B4    $BBF3   JP       V0, $BF3        ; Jump to V0 + BF3
$2B6    $9115   UNKNOWN  $9115           ; Unknown 9xxx instruction
$2B8    $42FA   SNE      V2, #FA         ; Skip if V2 != 250
$2BA    $FE82   UNKNOWN  FE82            ; Unknown Fxxx instruction
$2BC    $13D8   JP       $3D8            ; Jump to 3D8
$2BE    $D4DC   DRW      V4, VD, #C      ; Draw 12-byte sprite at V4, VD
$2C0    $3378   SE       V3, #78         ; Skip if V3 == 120
$2C2    $E85D   UNKNOWN  $E85D           ; Unknown Exxx instruction
$2C4    $901D   UNKNOWN  $901D           ; Unknown 9xxx instruction
$2C6    $51E8   UNKNOWN  $51E8           ; Unknown 5xxx instruction
$2C8    $354A   SE       V5, #4A         ; Skip if V5 == 74
$2CA    $189D   JP       $89D            ; Jump to 89D
$2CC    $1843   JP       $843            ; Jump to 843
$2CE    $01F8   SYS      $1F8            ; System call to 1F8
$2D0    $8F92   AND      VF, V9          ; VF &= V9
$2D2    $7BAE   ADD      VB, #AE         ; Add 174 to VB
$2D4    $DBDB   DRW      VB, VD, #B      ; Draw 11-byte sprite at VB, VD
$2D6    $7E05   ADD      VE, #05         ; Add 5 to VE
$2D8    $5A01   UNKNOWN  $5A01           ; Unknown 5xxx instruction
$2DA    $DB7D   DRW      VB, V7, #D      ; Draw 13-byte sprite at VB, V7
$2DC    $7375   ADD      V3, #75         ; Add 117 to V3
$2DE    $49C6   SNE      V9, #C6         ; Skip if V9 != 198
$2E0    $94B4   UNKNOWN  $94B4           ; Unknown 9xxx instruction
$2E2    $3E5A   SE       VE, #5A         ; Skip if VE == 90
$2E4    $45B7   SNE      V5, #B7         ; Skip if V5 != 183
$2E6    $E148   UNKNOWN  $E148           ; Unknown Exxx instruction
$2E8    $A9A2   LD       I, $9A2         ; Load 9A2 into I
$2EA    $AC0B   LD       I, $C0B         ; Load C0B into I
$2EC    $7B00   ADD      VB, #00         ; Add 0 to VB
$2EE    $54BF   UNKNOWN  $54BF           ; Unknown 5xxx instruction
$2F0    $15E4   JP       $5E4            ; Jump to 5E4
$2F2    $BCCC   JP       V0, $CCC        ; Jump to V0 + CCC
$2F4    $5E08   UNKNOWN  $5E08           ; Unknown 5xxx instruction
$2F6    $C358   RND      V3, #58         ; V3 = random & 58
$2F8    $8713   XOR      V7, V1          ; V7 ^= V1
$2FA    $BFFB   JP       V0, $FFB        ; Jump to V0 + FFB
$2FC    $D9B4   DRW      V9, VB, #4      ; Draw 4-byte sprite at V9, VB
$2FE    $4050   SNE      V0, #50         ; Skip if V0 != 80
$300    $0203   SYS      $203            ; System call to 203
$302    $0549   SYS      $549            ; System call to 549
$304    $4C79   SNE      VC, #79         ; Skip if VC != 121
$306    $AEBF   LD       I, $EBF         ; Load EBF into I
$308    $69A1   LD       V9, #A1         ; Load 161 into V9
$30A    $C052   RND      V0, #52         ; V0 = random & 52
$30C    $AB64   LD       I, $B64         ; Load B64 into I
$30E    $B571   JP       V0, $571        ; Jump to V0 + 571
$310    $EBC1   UNKNOWN  $EBC1           ; Unknown Exxx instruction
$312    $5DE9   UNKNOWN  $5DE9           ; Unknown 5xxx instruction
$314    $ECF0   UNKNOWN  $ECF0           ; Unknown Exxx instruction
$316    $7147   ADD      V1, #47         ; Add 71 to V1
$318    $4F5A   SNE      VF, #5A         ; Skip if VF != 90
$31A    $6EBF   LD       VE, #BF         ; Load 191 into VE
$31C    $F935   UNKNOWN  F935            ; Unknown Fxxx instruction
$31E    $6B9E   LD       VB, #9E         ; Load 158 into VB
$320    $9492   UNKNOWN  $9492           ; Unknown 9xxx instruction
$322    $7C9F   ADD      VC, #9F         ; Add 159 to VC
$324    $2DCB   CALL     $DCB            ; Call subroutine at DCB
$326    $EF6E   UNKNOWN  $EF6E           ; Unknown Exxx instruction
$328    $43AC   SNE      V3, #AC         ; Skip if V3 != 172
$32A    $D3C8   DRW      V3, VC, #8      ; Draw 8-byte sprite at V3, VC
$32C    $BB03   JP       V0, $B03        ; Jump to V0 + B03
$32E    $BE44   JP       V0, $E44        ; Jump to V0 + E44
$330    $267B   CALL     $67B            ; Call subroutine at 67B
$332    $3E5C   SE       VE, #5C         ; Skip if VE == 92
$334    $404B   SNE      V0, #4B         ; Skip if V0 != 75
$336    $852A   UNKNOWN  852A            ; Unknown 8xxx instruction
$338    $451E   SNE      V5, #1E         ; Skip if V5 != 30
$33A    $9F6F   UNKNOWN  $9F6F           ; Unknown 9xxx instruction
$33C    $B9BD   JP       V0, $9BD        ; Jump to V0 + 9BD
$33E    $2E6E   CALL     $E6E            ; Call subroutine at E6E
$340    $B01A   JP       V0, $01A        ; Jump to V0 + 01A
$342    $DE33   DRW      VE, V3, #3      ; Draw 3-byte sprite at VE, V3
$344    $68DB   LD       V8, #DB         ; Load 219 into V8
$346    $440B   SNE      V4, #0B         ; Skip if V4 != 11
$348    $EE43   UNKNOWN  $EE43           ; Unknown Exxx instruction
$34A    $36C1   SE       V6, #C1         ; Skip if V6 == 193
$34C    $5829   UNKNOWN  $5829           ; Unknown 5xxx instruction
$34E    $DB32   DRW      VB, V3, #2      ; Draw 2-byte sprite at VB, V3
$350    $9A23   UNKNOWN  $9A23           ; Unknown 9xxx instruction
$352    $123E   JP       $23E            ; Jump to 23E
$354    $2B75   CALL     $B75            ; Call subroutine at B75
$356    $4170   SNE      V1, #70         ; Skip if V1 != 112
$358    $7E48   ADD      VE, #48         ; Add 72 to VE
$35A    $63BA   LD       V3, #BA         ; Load 186 into V3
$35C    $DE52   DRW      VE, V5, #2      ; Draw 2-byte sprite at VE, V5
$35E    $D270   DRW      V2, V7, #0      ; Draw 0-byte sprite at V2, V7
$360    $62FF   LD       V2, #FF         ; Load 255 into V2
$362    $4641   SNE      V6, #41         ; Skip if V6 != 65
$364    $536A   UNKNOWN  $536A           ; Unknown 5xxx instruction
$366    $8168   UNKNOWN  8168            ; Unknown 8xxx instruction
$368    $1F52   JP       $F52            ; Jump to F52
$36A    $96D7   UNKNOWN  $96D7           ; Unknown 9xxx instruction
$36C    $6382   LD       V3, #82         ; Load 130 into V3
$36E    $28E9   CALL     $8E9            ; Call subroutine at 8E9
$370    $4BEE   SNE      VB, #EE         ; Skip if VB != 238
$372    $FF23   UNKNOWN  FF23            ; Unknown Fxxx instruction
$374    $166F   JP       $66F            ; Jump to 66F
$376    $BF60   JP       V0, $F60        ; Jump to V0 + F60
$378    $E9F0   UNKNOWN  $E9F0           ; Unknown Exxx instruction
$37A    $398F   SE       V9, #8F         ; Skip if V9 == 143
$37C    $EAAA   UNKNOWN  $EAAA           ; Unknown Exxx instruction
$37E    $AE5C   LD       I, $E5C         ; Load E5C into I
$380    $2B07   CALL     $B07            ; Call subroutine at B07
$382    $82A7   SUBN     V2, VA          ; V2 = VA - V2, VF = !borrow
$384    $B503   JP       V0, $503        ; Jump to V0 + 503
$386    $7A54   ADD      VA, #54         ; Add 84 to VA
$388    $9529   UNKNOWN  $9529           ; Unknown 9xxx instruction
$38A    $397F   SE       V9, #7F         ; Skip if V9 == 127
$38C    $B87F   JP       V0, $87F        ; Jump to V0 + 87F
$38E    $1522   JP       $522            ; Jump to 522
$390    $9142   UNKNOWN  $9142           ; Unknown 9xxx instruction
$392    $F36B   UNKNOWN  F36B            ; Unknown Fxxx instruction
$394    $794A   ADD      V9, #4A         ; Add 74 to V9
$396    $D61A   DRW      V6, V1, #A      ; Draw 10-byte sprite at V6, V1
$398    $ACAE   LD       I, $CAE         ; Load CAE into I
$39A    $535A   UNKNOWN  $535A           ; Unknown 5xxx instruction
$39C    $96F4   UNKNOWN  $96F4           ; Unknown 9xxx instruction
$39E    $62B7   LD       V2, #B7         ; Load 183 into V2
$3A0    $DC72   DRW      VC, V7, #2      ; Draw 2-byte sprite at VC, V7
$3A2    $DFE5   DRW      VF, VE, #5      ; Draw 5-byte sprite at VF, VE
$3A4    $3FBB   SE       VF, #BB         ; Skip if VF == 187
$3A6    $7614   ADD      V6, #14         ; Add 20 to V6
$3A8    $85A9   UNKNOWN  85A9            ; Unknown 8xxx instruction
$3AA    $E7B8   UNKNOWN  $E7B8           ; Unknown Exxx instruction
$3AC    $5040   SE       V0, V4          ; Skip if V0 == V4
$3AE    $5944   UNKNOWN  $5944           ; Unknown 5xxx instruction
$3B0    $321A   SE       V2, #1A         ; Skip if V2 == 26
$3B2    $28E2   CALL     $8E2            ; Call subroutine at 8E2
$3B4    $1BF7   JP       $BF7            ; Jump to BF7
$3B6    $CD60   RND      VD, #60         ; VD = random & 60
$3B8    $EA02   UNKNOWN  $EA02           ; Unknown Exxx instruction
$3BA    $AAB4   LD       I, $AB4         ; Load AB4 into I
$3BC    $9406   UNKNOWN  $9406           ; Unknown 9xxx instruction
$3BE    $E2D4   UNKNOWN  $E2D4           ; Unknown Exxx instruction
$3C0    $CF67   RND      VF, #67         ; VF = random & 67
$3C2    $DBC7   DRW      VB, VC, #7      ; Draw 7-byte sprite at VB, VC
$3C4    $B5A1   JP       V0, $5A1        ; Jump to V0 + 5A1
$3C6    $08A8   SYS      $8A8            ; System call to 8A8
$3C8    $19C6   JP       $9C6            ; Jump to 9C6
$3CA    $7272   ADD      V2, #72         ; Add 114 to V2
$3CC    $2FCD   CALL     $FCD            ; Call subroutine at FCD
$3CE    $ECB4   UNKNOWN  $ECB4           ; Unknown Exxx instruction
$3D0    $A7B5   LD       I, $7B5         ; Load 7B5 into I
$3D2    $97AF   UNKNOWN  $97AF           ; Unknown 9xxx instruction
$3D4    $E0CB   UNKNOWN  $E0CB           ; Unknown Exxx instruction
$3D6    $7448   ADD      V4, #48         ; Add 72 to V4
$3D8    $BC7C   JP       V0, $C7C        ; Jump to V0 + C7C
$3DA    $53A7   UNKNOWN  $53A7           ; Unknown 5xxx instruction
$3DC    $AC69   LD       I, $C69         ; Load C69 into I
$3DE    $AAD3   LD       I, $AD3         ; Load AD3 into I
$3E0    $E5CB   UNKNOWN  $E5CB           ; Unknown Exxx instruction
$3E2    $EA83   UNKNOWN  $EA83           ; Unknown Exxx instruction
$3E4    $2ACC   CALL     $ACC            ; Call subroutine at ACC
$3E6    $0789   SYS      $789            ; System call to 789
$3E8    $B1E7   JP       V0, $1E7        ; Jump to V0 + 1E7
$3EA    $F474   UNKNOWN  F474            ; Unknown Fxxx instruction
$3EC    $E148   UNKNOWN  $E148           ; Unknown Exxx instruction
$3EE    $2C1F   CALL     $C1F            ; Call subroutine at C1F
$3F0    $F80A   LD       V8, K           ; Wait for key press, store in V8
$3F2    $440C   SNE      V4, #0C         ; Skip if V4 != 12
$3F4    $7939   ADD      V9, #39         ; Add 57 to V9
$3F6    $235B   CALL     $35B            ; Call subroutine at 35B
$3F8    $976F   UNKNOWN  $976F           ; Unknown 9xxx instruction
$3FA    $DB07   DRW      VB, V0, #7      ; Draw 7-byte sprite at VB, V0
$3FC    $EA75   UNKNOWN  $EA75           ; Unknown Exxx instruction
$3FE    $9C38   UNKNOWN  $9C38           ; Unknown 9xxx instruction
$400    $A485   LD       I, $485         ; Load 485 into I
$402    $C0A9   RND      V0, #A9         ; V0 = random & A9
$404    $19A5   JP       $9A5            ; Jump to 9A5
$406    $4818   SNE      V8, #18         ; Skip if V8 != 24
$408    $9901   UNKNOWN  $9901           ; Unknown 9xxx instruction
$40A    $4E7E   SNE      VE, #7E         ; Skip if VE != 126
$40C    $4C2E   SNE      VC, #2E         ; Skip if VC != 46
$40E    $1792   JP       $792            ; Jump to 792
$410    $30B8   SE       V0, #B8         ; Skip if V0 == 184
$412    $C300   RND      V3, #00         ; V3 = random & 00
$414    $DEC1   DRW      VE, VC, #1      ; Draw 1-byte sprite at VE, VC
$416    $727D   ADD      V2, #7D         ; Add 125 to V2
$418    $6C70   LD       VC, #70         ; Load 112 into VC
$41A    $8D62   AND      VD, V6          ; VD &= V6
$41C    $7883   ADD      V8, #83         ; Add 131 to V8
$41E    $511B   UNKNOWN  $511B           ; Unknown 5xxx instruction
$420    $FE65   LD       VE, [I]         ; Load V0-VE from I
$422    $A3FE   LD       I, $3FE         ; Load 3FE into I
$424    $33BE   SE       V3, #BE         ; Skip if V3 == 190
$426    $AF35   LD       I, $F35         ; Load F35 into I
$428    $BA39   JP       V0, $A39        ; Jump to V0 + A39
$42A    $7BDA   ADD      VB, #DA         ; Add 218 to VB
$42C    $EB4A   UNKNOWN  $EB4A           ; Unknown Exxx instruction
$42E    $3CF4   SE       VC, #F4         ; Skip if VC == 244
$430    $9CAB   UNKNOWN  $9CAB           ; Unknown 9xxx instruction
$432    $9414   UNKNOWN  $9414           ; Unknown 9xxx instruction
$434    $264D   CALL     $64D            ; Call subroutine at 64D
$436    $1FFE   JP       $FFE            ; Jump to FFE
$438    $7653   ADD      V6, #53         ; Add 83 to V6
$43A    $6703   LD       V7, #03         ; Load 3 into V7
$43C    $4D54   SNE      VD, #54         ; Skip if VD != 84
$43E    $5B3A   UNKNOWN  $5B3A           ; Unknown 5xxx instruction
$440    $F320   UNKNOWN  F320            ; Unknown Fxxx instruction
$442    $6E00   LD       VE, #00         ; Load 0 into VE
$444    $257E   CALL     $57E            ; Call subroutine at 57E
$446    $5019   UNKNOWN  $5019           ; Unknown 5xxx instruction
$448    $86B4   ADD      V6, VB          ; V6 += VB, VF = carry
$44A    $B0BE   JP       V0, $0BE        ; Jump to V0 + 0BE
$44C    $FA12   UNKNOWN  FA12            ; Unknown Fxxx instruction
$44E    $8FD0   LD       VF, VD          ; VF = VD
$450    $A823   LD       I, $823         ; Load 823 into I
$452    $8E4E   SHL      VE              ; VE <<= 1, VF = MSB
$454    $15FD   JP       $5FD            ; Jump to 5FD
$456    $24C3   CALL     $4C3            ; Call subroutine at 4C3
$458    $5487   UNKNOWN  $5487           ; Unknown 5xxx instruction
$45A    $E2B6   UNKNOWN  $E2B6           ; Unknown Exxx instruction
$45C    $50F2   UNKNOWN  $50F2           ; Unknown 5xxx instruction
$45E    $75DF   ADD      V5, #DF         ; Add 223 to V5
$460    $EAE2   UNKNOWN  $EAE2           ; Unknown Exxx instruction
$462    $187A   JP       $87A            ; Jump to 87A
$464    $6C66   LD       VC, #66         ; Load 102 into VC
$466    $DEA3   DRW      VE, VA, #3      ; Draw 3-byte sprite at VE, VA
$468    $67E3   LD       V7, #E3         ; Load 227 into V7
$46A    $5E26   UNKNOWN  $5E26           ; Unknown 5xxx instruction
$46C    $CA2B   RND      VA, #2B         ; VA = random & 2B
$46E    $7938   ADD      V9, #38         ; Add 56 to V9
$470    $8E38   UNKNOWN  8E38            ; Unknown 8xxx instruction
$472    $0A6F   SYS      $A6F            ; System call to A6F
$474    $BA17   JP       V0, $A17        ; Jump to V0 + A17
$476    $647D   LD       V4, #7D         ; Load 125 into V4
$478    $9C8C   UNKNOWN  $9C8C           ; Unknown 9xxx instruction
$47A    $37CA   SE       V7, #CA         ; Skip if V7 == 202
$47C    $2E85   CALL     $E85            ; Call subroutine at E85
$47E    $811B   UNKNOWN  811B            ; Unknown 8xxx instruction
$480    $8163   XOR      V1, V6          ; V1 ^= V6
$482    $1E73   JP       $E73            ; Jump to E73
$484    $45C5   SNE      V5, #C5         ; Skip if V5 != 197
$486    $1F75   JP       $F75            ; Jump to F75
$488    $6590   LD       V5, #90         ; Load 144 into V5
$48A    $12C1   JP       $2C1            ; Jump to 2C1
$48C    $A14E   LD       I, $14E         ; Load 14E into I
$48E    $15C5   JP       $5C5            ; Jump to 5C5
$490    $FDC4   UNKNOWN  FDC4            ; Unknown Fxxx instruction
$492    $B0DF   JP       V0, $0DF        ; Jump to V0 + 0DF
$494    $3E66   SE       VE, #66         ; Skip if VE == 102
$496    $73F9   ADD      V3, #F9         ; Add 249 to V3
$498    $E9B2   UNKNOWN  $E9B2           ; Unknown Exxx instruction
$49A    $E2F8   UNKNOWN  $E2F8           ; Unknown Exxx instruction
$49C    $05C4   SYS      $5C4            ; System call to 5C4
$49E    $7BF3   ADD      VB, #F3         ; Add 243 to VB
$4A0    $BF15   JP       V0, $F15        ; Jump to V0 + F15
$4A2    $912C   UNKNOWN  $912C           ; Unknown 9xxx instruction
$4A4    $5736   UNKNOWN  $5736           ; Unknown 5xxx instruction
$4A6    $E167   UNKNOWN  $E167           ; Unknown Exxx instruction
$4A8    $B959   JP       V0, $959        ; Jump to V0 + 959
$4AA    $8E09   UNKNOWN  8E09            ; Unknown 8xxx instruction
$4AC    $4DCF   SNE      VD, #CF         ; Skip if VD != 207
$4AE    $B0B8   JP       V0, $0B8        ; Jump to V0 + 0B8
$4B0    $0A80   SYS      $A80            ; System call to A80
$4B2    $7C68   ADD      VC, #68         ; Add 104 to VC
$4B4    $35D6   SE       V5, #D6         ; Skip if V5 == 214
$4B6    $68A4   LD       V8, #A4         ; Load 164 into V8
$4B8    $E9D7   UNKNOWN  $E9D7           ; Unknown Exxx instruction
$4BA    $C5FE   RND      V5, #FE         ; V5 = random & FE
$4BC    $EE1D   UNKNOWN  $EE1D           ; Unknown Exxx instruction
$4BE    $A17B   LD       I, $17B         ; Load 17B into I
$4C0    $A8E3   LD       I, $8E3         ; Load 8E3 into I
$4C2    $4209   SNE      V2, #09         ; Skip if V2 != 9
$4C4    $A686   LD       I, $686         ; Load 686 into I
$4C6    $D4F7   DRW      V4, VF, #7      ; Draw 7-byte sprite at V4, VF
$4C8    $1837   JP       $837            ; Jump to 837
$4CA    $C527   RND      V5, #27         ; V5 = random & 27
$4CC    $5354   UNKNOWN  $5354           ; Unknown 5xxx instruction
$4CE    $80EE   SHL      V0              ; V0 <<= 1, VF = MSB
$4D0    $C5E2   RND      V5, #E2         ; V5 = random & E2
$4D2    $9496   UNKNOWN  $9496           ; Unknown 9xxx instruction
$4D4    $4F74   SNE      VF, #74         ; Skip if VF != 116
$4D6    $0571   SYS      $571            ; System call to 571
$4D8    $D1F9   DRW      V1, VF, #9      ; Draw 9-byte sprite at V1, VF
$4DA    $0C08   SYS      $C08            ; System call to C08
$4DC    $6A8B   LD       VA, #8B         ; Load 139 into VA
$4DE    $A1F0   LD       I, $1F0         ; Load 1F0 into I
$4E0    $2570   CALL     $570            ; Call subroutine at 570
$4E2    $A15A   LD       I, $15A         ; Load 15A into I
$4E4    $D3A7   DRW      V3, VA, #7      ; Draw 7-byte sprite at V3, VA
$4E6    $3BDE   SE       VB, #DE         ; Skip if VB == 222
$4E8    $118F   JP       $18F            ; Jump to 18F
$4EA    $FDAA   UNKNOWN  FDAA            ; Unknown Fxxx instruction
$4EC    $6ACA   LD       VA, #CA         ; Load 202 into VA
$4EE    $3B10   SE       VB, #10         ; Skip if VB == 16
$4F0    $710B   ADD      V1, #0B         ; Add 11 to V1
$4F2    $0CC7   SYS      $CC7            ; System call to CC7
$4F4    $430A   SNE      V3, #0A         ; Skip if V3 != 10
$4F6    $0A6C   SYS      $A6C            ; System call to A6C
$4F8    $511E   UNKNOWN  $511E           ; Unknown 5xxx instruction
$4FA    $51E1   UNKNOWN  $51E1           ; Unknown 5xxx instruction
$4FC    $ED8E   UNKNOWN  $ED8E           ; Unknown Exxx instruction
$4FE    $5555   UNKNOWN  $5555           ; Unknown 5xxx instruction
$500    $8F43   XOR      VF, V4          ; VF ^= V4
$502    $6F93   LD       VF, #93         ; Load 147 into VF
$504    $0FF1   SYS      $FF1            ; System call to FF1
$506    $A8E4   LD       I, $8E4         ; Load 8E4 into I
$508    $B0E1   JP       V0, $0E1        ; Jump to V0 + 0E1
$50A    $521B   UNKNOWN  $521B           ; Unknown 5xxx instruction
$50C    $2C7E   CALL     $C7E            ; Call subroutine at C7E
$50E    $9872   UNKNOWN  $9872           ; Unknown 9xxx instruction
$510    $4DE7   SNE      VD, #E7         ; Skip if VD != 231
$512    $B6C5   JP       V0, $6C5        ; Jump to V0 + 6C5
$514    $EAB7   UNKNOWN  $EAB7           ; Unknown Exxx instruction
$516    $8433   XOR      V4, V3          ; V4 ^= V3
$518    $E806   UNKNOWN  $E806           ; Unknown Exxx instruction
$51A    $61DE   LD       V1, #DE         ; Load 222 into V1
$51C    $4F47   SNE      VF, #47         ; Skip if VF != 71
$51E    $B4EC   JP       V0, $4EC        ; Jump to V0 + 4EC
$520    $F5EC   UNKNOWN  F5EC            ; Unknown Fxxx instruction
$522    $56AC   UNKNOWN  $56AC           ; Unknown 5xxx instruction
$524    $DD1E   DRW      VD, V1, #E      ; Draw 14-byte sprite at VD, V1
$526    $989A   UNKNOWN  $989A           ; Unknown 9xxx instruction
$528    $D067   DRW      V0, V6, #7      ; Draw 7-byte sprite at V0, V6
$52A    $9C61   UNKNOWN  $9C61           ; Unknown 9xxx instruction
$52C    $4B2D   SNE      VB, #2D         ; Skip if VB != 45
$52E    $92CA   UNKNOWN  $92CA           ; Unknown 9xxx instruction
$530    $8BCB   UNKNOWN  8BCB            ; Unknown 8xxx instruction
$532    $F4E5   UNKNOWN  F4E5            ; Unknown Fxxx instruction
$534    $7327   ADD      V3, #27         ; Add 39 to V3
$536    $0B3A   SYS      $B3A            ; System call to B3A
$538    $AF9A   LD       I, $F9A         ; Load F9A into I
$53A    $0984   SYS      $984            ; System call to 984
$53C    $674C   LD       V7, #4C         ; Load 76 into V7
$53E    $C27D   RND      V2, #7D         ; V2 = random & 7D
$540    $C52B   RND      V5, #2B         ; V5 = random & 2B
$542    $E6FD   UNKNOWN  $E6FD           ; Unknown Exxx instruction
$544    $D93E   DRW      V9, V3, #E      ; Draw 14-byte sprite at V9, V3
$546    $B4BF   JP       V0, $4BF        ; Jump to V0 + 4BF
$548    $ACB7   LD       I, $CB7         ; Load CB7 into I
$54A    $B9F1   JP       V0, $9F1        ; Jump to V0 + 9F1
$54C    $BF6E   JP       V0, $F6E        ; Jump to V0 + F6E
$54E    $C8BE   RND      V8, #BE         ; V8 = random & BE
$550    $1DC3   JP       $DC3            ; Jump to DC3
$552    $705A   ADD      V0, #5A         ; Add 90 to V0
$554    $B0FE   JP       V0, $0FE        ; Jump to V0 + 0FE
$556    $70D2   ADD      V0, #D2         ; Add 210 to V0
$558    $17EC   JP       $7EC            ; Jump to 7EC
$55A    $0D17   SYS      $D17            ; System call to D17
$55C    $591A   UNKNOWN  $591A           ; Unknown 5xxx instruction
$55E    $866F   UNKNOWN  866F            ; Unknown 8xxx instruction
$560    $9043   UNKNOWN  $9043           ; Unknown 9xxx instruction
$562    $5D8E   UNKNOWN  $5D8E           ; Unknown 5xxx instruction
$564    $3755   SE       V7, #55         ; Skip if V7 == 85
$566    $EAF0   UNKNOWN  $EAF0           ; Unknown Exxx instruction
$568    $A080   LD       I, $080         ; Load 080 into I
$56A    $8C14   ADD      VC, V1          ; VC += V1, VF = carry
$56C    $173F   JP       $73F            ; Jump to 73F
$56E    $F14F   UNKNOWN  F14F            ; Unknown Fxxx instruction
$570    $CA19   RND      VA, #19         ; VA = random & 19
$572    $5827   UNKNOWN  $5827           ; Unknown 5xxx instruction
$574    $3697   SE       V6, #97         ; Skip if V6 == 151
$576    $9680   SNE      V6, V8          ; Skip if V6 != V8
$578    $9B3B   UNKNOWN  $9B3B           ; Unknown 9xxx instruction
$57A    $BFA1   JP       V0, $FA1        ; Jump to V0 + FA1
$57C    $12A6   JP       $2A6            ; Jump to 2A6
$57E    $FBE8   UNKNOWN  FBE8            ; Unknown Fxxx instruction
$580    $D9AC   DRW      V9, VA, #C      ; Draw 12-byte sprite at V9, VA
$582    $AF1B   LD       I, $F1B         ; Load F1B into I
$584    $30B9   SE       V0, #B9         ; Skip if V0 == 185
$586    $2E7B   CALL     $E7B            ; Call subroutine at E7B
$588    $5579   UNKNOWN  $5579           ; Unknown 5xxx instruction
$58A    $3E5B   SE       VE, #5B         ; Skip if VE == 91
$58C    $8748   UNKNOWN  8748            ; Unknown 8xxx instruction
$58E    $8E63   XOR      VE, V6          ; VE ^= V6
$590    $3F3B   SE       VF, #3B         ; Skip if VF == 59
$592    $8FF4   ADD      VF, VF          ; VF += VF, VF = carry
$594    $B788   JP       V0, $788        ; Jump to V0 + 788
$596    $348D   SE       V4, #8D         ; Skip if V4 == 141
$598    $DEB8   DRW      VE, VB, #8      ; Draw 8-byte sprite at VE, VB
$59A    $F362   UNKNOWN  F362            ; Unknown Fxxx instruction
$59C    $4E91   SNE      VE, #91         ; Skip if VE != 145
$59E    $F163   UNKNOWN  F163            ; Unknown Fxxx instruction
$5A0    $1B36   JP       $B36            ; Jump to B36
$5A2    $B7F6   JP       V0, $7F6        ; Jump to V0 + 7F6
$5A4    $8910   LD       V9, V1          ; V9 = V1
$5A6    $EE6F   UNKNOWN  $EE6F           ; Unknown Exxx instruction
$5A8    $BC6F   JP       V0, $C6F        ; Jump to V0 + C6F
$5AA    $6583   LD       V5, #83         ; Load 131 into V5
$5AC    $ABD0   LD       I, $BD0         ; Load BD0 into I
$5AE    $B6B8   JP       V0, $6B8        ; Jump to V0 + 6B8
$5B0    $E002   UNKNOWN  $E002           ; Unknown Exxx instruction
$5B2    $120F   JP       $20F            ; Jump to 20F
$5B4    $47C1   SNE      V7, #C1         ; Skip if V7 != 193
$5B6    $7314   ADD      V3, #14         ; Add 20 to V3
$5B8    $5131   UNKNOWN  $5131           ; Unknown 5xxx instruction
$5BA    $1817   JP       $817            ; Jump to 817
$5BC    $C2F6   RND      V2, #F6         ; V2 = random & F6
$5BE    $405F   SNE      V0, #5F         ; Skip if V0 != 95
$5C0    $8DCF   UNKNOWN  8DCF            ; Unknown 8xxx instruction
$5C2    $0626   SYS      $626            ; System call to 626
$5C4    $09CE   SYS      $9CE            ; System call to 9CE
$5C6    $C8B4   RND      V8, #B4         ; V8 = random & B4
$5C8    $0C9C   SYS      $C9C            ; System call to C9C
$5CA    $D9F9   DRW      V9, VF, #9      ; Draw 9-byte sprite at V9, VF
$5CC    $2EFF   CALL     $EFF            ; Call subroutine at EFF
$5CE    $6780   LD       V7, #80         ; Load 128 into V7
$5D0    $63FC   LD       V3, #FC         ; Load 252 into V3
$5D2    $DB7A   DRW      VB, V7, #A      ; Draw 10-byte sprite at VB, V7
$5D4    $E090   UNKNOWN  $E090           ; Unknown Exxx instruction
$5D6    $F18C   UNKNOWN  F18C            ; Unknown Fxxx instruction
$5D8    $D81B   DRW      V8, V1, #B      ; Draw 11-byte sprite at V8, V1
$5DA    $4B85   SNE      VB, #85         ; Skip if VB != 133
$5DC    $95A5   UNKNOWN  $95A5           ; Unknown 9xxx instruction
$5DE    $CBE9   RND      VB, #E9         ; VB = random & E9
$5E0    $B4C3   JP       V0, $4C3        ; Jump to V0 + 4C3
$5E2    $89AE   SHL      V9              ; V9 <<= 1, VF = MSB
$5E4    $6DC2   LD       VD, #C2         ; Load 194 into VD
$5E6    $936D   UNKNOWN  $936D           ; Unknown 9xxx instruction
$5E8    $013B   SYS      $13B            ; System call to 13B
$5EA    $DDD2   DRW      VD, VD, #2      ; Draw 2-byte sprite at VD, VD
$5EC    $8882   AND      V8, V8          ; V8 &= V8
$5EE    $50E1   UNKNOWN  $50E1           ; Unknown 5xxx instruction
$5F0    $00B0   SYS      $0B0            ; System call to 0B0
$5F2    $2EE4   CALL     $EE4            ; Call subroutine at EE4
$5F4    $2686   CALL     $686            ; Call subroutine at 686
$5F6    $17BC   JP       $7BC            ; Jump to 7BC
$5F8    $ECFC   UNKNOWN  $ECFC           ; Unknown Exxx instruction
$5FA    $7902   ADD      V9, #02         ; Add 2 to V9
$5FC    $46A4   SNE      V6, #A4         ; Skip if V6 != 164
$5FE    $F287   UNKNOWN  F287            ; Unknown Fxxx instruction
$600    $9AAC   UNKNOWN  $9AAC           ; Unknown 9xxx instruction
$602    $ACAF   LD       I, $CAF         ; Load CAF into I
$604    $03F3   SYS      $3F3            ; System call to 3F3
$606    $BC2F   JP       V0, $C2F        ; Jump to V0 + C2F
$608    $8618   UNKNOWN  8618            ; Unknown 8xxx instruction
$60A    $0238   SYS      $238            ; System call to 238
$60C    $7473   ADD      V4, #73         ; Add 115 to V4
$60E    $BF4E   JP       V0, $F4E        ; Jump to V0 + F4E
$610    $1274   JP       $274            ; Jump to 274
$612    $36E2   SE       V6, #E2         ; Skip if V6 == 226
$614    $037E   SYS      $37E            ; System call to 37E
$616    $FE73   UNKNOWN  FE73            ; Unknown Fxxx instruction
$618    $20B6   CALL     $0B6            ; Call subroutine at 0B6
$61A    $E8C6   UNKNOWN  $E8C6           ; Unknown Exxx instruction
$61C    $CE7A   RND      VE, #7A         ; VE = random & 7A
$61E    $E5CA   UNKNOWN  $E5CA           ; Unknown Exxx instruction
$620    $A7A2   LD       I, $7A2         ; Load 7A2 into I
$622    $E2A6   UNKNOWN  $E2A6           ; Unknown Exxx instruction
$624    $2F28   CALL     $F28            ; Call subroutine at F28
$626    $ACA1   LD       I, $CA1         ; Load CA1 into I
$628    $BF78   JP       V0, $F78        ; Jump to V0 + F78
$62A    $695C   LD       V9, #5C         ; Load 92 into V9
$62C    $4E72   SNE      VE, #72         ; Skip if VE != 114
$62E    $90C1   UNKNOWN  $90C1           ; Unknown 9xxx instruction
$630    $A6DF   LD       I, $6DF         ; Load 6DF into I
$632    $25A4   CALL     $5A4            ; Call subroutine at 5A4
$634    $E652   UNKNOWN  $E652           ; Unknown Exxx instruction
$636    $8B24   ADD      VB, V2          ; VB += V2, VF = carry
$638    $3713   SE       V7, #13         ; Skip if V7 == 19
$63A    $B71B   JP       V0, $71B        ; Jump to V0 + 71B
$63C    $F61F   UNKNOWN  F61F            ; Unknown Fxxx instruction
$63E    $7410   ADD      V4, #10         ; Add 16 to V4
$640    $22F2   CALL     $2F2            ; Call subroutine at 2F2
$642    $18EC   JP       $8EC            ; Jump to 8EC
$644    $9173   UNKNOWN  $9173           ; Unknown 9xxx instruction
$646    $1D39   JP       $D39            ; Jump to D39
$648    $B4BF   JP       V0, $4BF        ; Jump to V0 + 4BF
$64A    $6ED7   LD       VE, #D7         ; Load 215 into VE
$64C    $3431   SE       V4, #31         ; Skip if V4 == 49
$64E    $66A3   LD       V6, #A3         ; Load 163 into V6
$650    $C3DF   RND      V3, #DF         ; V3 = random & DF
$652    $9C21   UNKNOWN  $9C21           ; Unknown 9xxx instruction
$654    $8215   SUB      V2, V1          ; V2 -= V1, VF = !borrow
$656    $7208   ADD      V2, #08         ; Add 8 to V2
$658    $AF08   LD       I, $F08         ; Load F08 into I
$65A    $8A3C   UNKNOWN  8A3C            ; Unknown 8xxx instruction
$65C    $BBEC   JP       V0, $BEC        ; Jump to V0 + BEC
$65E    $040D   SYS      $40D            ; System call to 40D
$660    $4209   SNE      V2, #09         ; Skip if V2 != 9
$662    $BF70   JP       V0, $F70        ; Jump to V0 + F70
$664    $A59F   LD       I, $59F         ; Load 59F into I
$666    $06FA   SYS      $6FA            ; System call to 6FA
$668    $F92A   UNKNOWN  F92A            ; Unknown Fxxx instruction
$66A    $F251   UNKNOWN  F251            ; Unknown Fxxx instruction
$66C    $8E9B   UNKNOWN  8E9B            ; Unknown 8xxx instruction
$66E    $81CE   SHL      V1              ; V1 <<= 1, VF = MSB
$670    $3F74   SE       VF, #74         ; Skip if VF == 116
$672    $FF56   UNKNOWN  FF56            ; Unknown Fxxx instruction
$674    $F111   UNKNOWN  F111            ; Unknown Fxxx instruction
$676    $0431   SYS      $431            ; System call to 431
$678    $E7D8   UNKNOWN  $E7D8           ; Unknown Exxx instruction
$67A    $9FB1   UNKNOWN  $9FB1           ; Unknown 9xxx instruction
$67C    $91B9   UNKNOWN  $91B9           ; Unknown 9xxx instruction
$67E    $0B61   SYS      $B61            ; System call to B61
$680    $12F7   JP       $2F7            ; Jump to 2F7
$682    $8E70   LD       VE, V7          ; VE = V7
$684    $C65F   RND      V6, #5F         ; V6 = random & 5F
$686    $F1C3   UNKNOWN  F1C3            ; Unknown Fxxx instruction
$688    $CB6D   RND      VB, #6D         ; VB = random & 6D
$68A    $3DA9   SE       VD, #A9         ; Skip if VD == 169
$68C    $6626   LD       V6, #26         ; Load 38 into V6
$68E    $DE58   DRW      VE, V5, #8      ; Draw 8-byte sprite at VE, V5
$690    $6461   LD       V4, #61         ; Load 97 into V4
$692    $9379   UNKNOWN  $9379           ; Unknown 9xxx instruction
$694    $9EDB   UNKNOWN  $9EDB           ; Unknown 9xxx instruction
$696    $373B   SE       V7, #3B         ; Skip if V7 == 59
$698    $8137   SUBN     V1, V3          ; V1 = V3 - V1, VF = !borrow
$69A    $EB5A   UNKNOWN  $EB5A           ; Unknown Exxx instruction
$69C    $A6CF   LD       I, $6CF         ; Load 6CF into I
$69E    $3D78   SE       VD, #78         ; Skip if VD == 120
$6A0    $899E   SHL      V9              ; V9 <<= 1, VF = MSB
$6A2    $0724   SYS      $724            ; System call to 724
$6A4    $EE94   UNKNOWN  $EE94           ; Unknown Exxx instruction
$6A6    $0DE7   SYS      $DE7            ; System call to DE7
$6A8    $550E   UNKNOWN  $550E           ; Unknown 5xxx instruction
$6AA    $4AAA   SNE      VA, #AA         ; Skip if VA != 170
$6AC    $C63D   RND      V6, #3D         ; V6 = random & 3D
$6AE    $B127   JP       V0, $127        ; Jump to V0 + 127
$6B0    $86D4   ADD      V6, VD          ; V6 += VD, VF = carry
$6B2    $1758   JP       $758            ; Jump to 758
$6B4    $D76A   DRW      V7, V6, #A      ; Draw 10-byte sprite at V7, V6
$6B6    $162D   JP       $62D            ; Jump to 62D
$6B8    $B098   JP       V0, $098        ; Jump to V0 + 098
$6BA    $DA15   DRW      VA, V1, #5      ; Draw 5-byte sprite at VA, V1
$6BC    $02E8   SYS      $2E8            ; System call to 2E8
$6BE    $B817   JP       V0, $817        ; Jump to V0 + 817
$6C0    $C5B4   RND      V5, #B4         ; V5 = random & B4
$6C2    $12A3   JP       $2A3            ; Jump to 2A3
$6C4    $5D0D   UNKNOWN  $5D0D           ; Unknown 5xxx instruction
$6C6    $BA99   JP       V0, $A99        ; Jump to V0 + A99
$6C8    $EA6C   UNKNOWN  $EA6C           ; Unknown Exxx instruction
$6CA    $17FC   JP       $7FC            ; Jump to 7FC
$6CC    $8898   UNKNOWN  8898            ; Unknown 8xxx instruction
$6CE    $7369   ADD      V3, #69         ; Add 105 to V3
$6D0    $FDE9   UNKNOWN  FDE9            ; Unknown Fxxx instruction
$6D2    $247E   CALL     $47E            ; Call subroutine at 47E
$6D4    $13FB   JP       $3FB            ; Jump to 3FB
$6D6    $A16C   LD       I, $16C         ; Load 16C into I
$6D8    $0C8C   SYS      $C8C            ; System call to C8C
$6DA    $2F17   CALL     $F17            ; Call subroutine at F17
$6DC    $8C68   UNKNOWN  8C68            ; Unknown 8xxx instruction
$6DE    $C5F6   RND      V5, #F6         ; V5 = random & F6
$6E0    $3ECE   SE       VE, #CE         ; Skip if VE == 206
$6E2    $61A9   LD       V1, #A9         ; Load 169 into V1
$6E4    $9D96   UNKNOWN  $9D96           ; Unknown 9xxx instruction
$6E6    $925E   UNKNOWN  $925E           ; Unknown 9xxx instruction
$6E8    $65BE   LD       V5, #BE         ; Load 190 into V5
$6EA    $D57C   DRW      V5, V7, #C      ; Draw 12-byte sprite at V5, V7
$6EC    $12C2   JP       $2C2            ; Jump to 2C2
$6EE    $8728   UNKNOWN  8728            ; Unknown 8xxx instruction
$6F0    $BAFB   JP       V0, $AFB        ; Jump to V0 + AFB
$6F2    $35E2   SE       V5, #E2         ; Skip if V5 == 226
$6F4    $C400   RND      V4, #00         ; V4 = random & 00
$6F6    $267A   CALL     $67A            ; Call subroutine at 67A
$6F8    $52A9   UNKNOWN  $52A9           ; Unknown 5xxx instruction
$6FA    $1CBB   JP       $CBB            ; Jump to CBB
$6FC    $BACA   JP       V0, $ACA        ; Jump to V0 + ACA
$6FE    $ED5D   UNKNOWN  $ED5D           ; Unknown Exxx instruction
$700    $3870   SE       V8, #70         ; Skip if V8 == 112
$702    $1D88   JP       $D88            ; Jump to D88
$704    $CD1C   RND      VD, #1C         ; VD = random & 1C
$706    $CC8F   RND      VC, #8F         ; VC = random & 8F
$708    $16A2   JP       $6A2            ; Jump to 6A2
$70A    $B18C   JP       V0, $18C        ; Jump to V0 + 18C
$70C    $1F99   JP       $F99            ; Jump to F99
$70E    $D518   DRW      V5, V1, #8      ; Draw 8-byte sprite at V5, V1
$710    $5699   UNKNOWN  $5699           ; Unknown 5xxx instruction
$712    $30B7   SE       V0, #B7         ; Skip if V0 == 183
$714    $AD0A   LD       I, $D0A         ; Load D0A into I
$716    $9AEB   UNKNOWN  $9AEB           ; Unknown 9xxx instruction
$718    $1EFD   JP       $EFD            ; Jump to EFD
$71A    $942A   UNKNOWN  $942A           ; Unknown 9xxx instruction
$71C    $C025   RND      V0, #25         ; V0 = random & 25
$71E    $3282   SE       V2, #82         ; Skip if V2 == 130
$720    $AC88   LD       I, $C88         ; Load C88 into I
$722    $DDEC   DRW      VD, VE, #C      ; Draw 12-byte sprite at VD, VE
$724    $AFA2   LD       I, $FA2         ; Load FA2 into I
$726    $330E   SE       V3, #0E         ; Skip if V3 == 14
$728    $6C60   LD       VC, #60         ; Load 96 into VC
$72A    $5C57   UNKNOWN  $5C57           ; Unknown 5xxx instruction
$72C    $3576   SE       V5, #76         ; Skip if V5 == 118
$72E    $B9F7   JP       V0, $9F7        ; Jump to V0 + 9F7
$730    $FB4A   UNKNOWN  FB4A            ; Unknown Fxxx instruction
$732    $BCC1   JP       V0, $CC1        ; Jump to V0 + CC1
$734    $6B25   LD       VB, #25         ; Load 37 into VB
$736    $7DD6   ADD      VD, #D6         ; Add 214 to VD
$738    $C97A   RND      V9, #7A         ; V9 = random & 7A
$73A    $AB93   LD       I, $B93         ; Load B93 into I
$73C    $11DE   JP       $1DE            ; Jump to 1DE
$73E    $1B91   JP       $B91            ; Jump to B91
$740    $45A0   SNE      V5, #A0         ; Skip if V5 != 160
$742    $5DF0   SE       VD, VF          ; Skip if VD == VF
$744    $830F   UNKNOWN  830F            ; Unknown 8xxx instruction
$746    $AA90   LD       I, $A90         ; Load A90 into I
$748    $6245   LD       V2, #45         ; Load 69 into V2
$74A    $2D26   CALL     $D26            ; Call subroutine at D26
$74C    $F1CA   UNKNOWN  F1CA            ; Unknown Fxxx instruction
$74E    $D0FE   DRW      V0, VF, #E      ; Draw 14-byte sprite at V0, VF
$750    $BEFD   JP       V0, $EFD        ; Jump to V0 + EFD
$752    $B6C8   JP       V0, $6C8        ; Jump to V0 + 6C8
$754    $7F00   ADD      VF, #00         ; Add 0 to VF
$756    $26E3   CALL     $6E3            ; Call subroutine at 6E3
$758    $1AF5   JP       $AF5            ; Jump to AF5
$75A    $609A   LD       V0, #9A         ; Load 154 into V0
$75C    $3973   SE       V9, #73         ; Skip if V9 == 115
$75E    $A4F8   LD       I, $4F8         ; Load 4F8 into I
$760    $B637   JP       V0, $637        ; Jump to V0 + 637
$762    $3DED   SE       VD, #ED         ; Skip if VD == 237
$764    $E5A5   UNKNOWN  $E5A5           ; Unknown Exxx instruction
$766    $4884   SNE      V8, #84         ; Skip if V8 != 132
$768    $5C31   UNKNOWN  $5C31           ; Unknown 5xxx instruction
$76A    $BC16   JP       V0, $C16        ; Jump to V0 + C16
$76C    $A20C   LD       I, $20C         ; Load 20C into I
$76E    $CEA3   RND      VE, #A3         ; VE = random & A3
$770    $1F8E   JP       $F8E            ; Jump to F8E
$772    $3713   SE       V7, #13         ; Skip if V7 == 19
$774    $503B   UNKNOWN  $503B           ; Unknown 5xxx instruction
$776    $6201   LD       V2, #01         ; Load 1 into V2
$778    $A072   LD       I, $072         ; Load 072 into I
$77A    $3E96   SE       VE, #96         ; Skip if VE == 150
$77C    $2E82   CALL     $E82            ; Call subroutine at E82
$77E    $57D0   SE       V7, VD          ; Skip if V7 == VD
$780    $5AB9   UNKNOWN  $5AB9           ; Unknown 5xxx instruction
$782    $D079   DRW      V0, V7, #9      ; Draw 9-byte sprite at V0, V7
$784    $A42B   LD       I, $42B         ; Load 42B into I
$786    $9B1C   UNKNOWN  $9B1C           ; Unknown 9xxx instruction
$788    $FC3D   UNKNOWN  FC3D            ; Unknown Fxxx instruction
$78A    $DC5B   DRW      VC, V5, #B      ; Draw 11-byte sprite at VC, V5
$78C    $DD78   DRW      VD, V7, #8      ; Draw 8-byte sprite at VD, V7
$78E    $8876   SHR      V8              ; V8 >>= 1, VF = LSB
$790    $C3AB   RND      V3, #AB         ; V3 = random & AB
$792    $8E1E   SHL      VE              ; VE <<= 1, VF = MSB
$794    $6093   LD       V0, #93         ; Load 147 into V0
$796    $A65C   LD       I, $65C         ; Load 65C into I
$798    $0399   SYS      $399            ; System call to 399
$79A    $0A93   SYS      $A93            ; System call to A93
$79C    $1E43   JP       $E43            ; Jump to E43
$79E    $8648   UNKNOWN  8648            ; Unknown 8xxx instruction
$7A0    $DC5D   DRW      VC, V5, #D      ; Draw 13-byte sprite at VC, V5
$7A2    $37DF   SE       V7, #DF         ; Skip if V7 == 223
$7A4    $EAB7   UNKNOWN  $EAB7           ; Unknown Exxx instruction
$7A6    $7E3F   ADD      VE, #3F         ; Add 63 to VE
$7A8    $A034   LD       I, $034         ; Load 034 into I
$7AA    $369A   SE       V6, #9A         ; Skip if V6 == 154
$7AC    $53B9   UNKNOWN  $53B9           ; Unknown 5xxx instruction
$7AE    $C718   RND      V7, #18         ; V7 = random & 18
$7B0    $04A8   SYS      $4A8            ; System call to 4A8
$7B2    $DADB   DRW      VA, VD, #B      ; Draw 11-byte sprite at VA, VD
$7B4    $A99D   LD       I, $99D         ; Load 99D into I
$7B6    $FBB9   UNKNOWN  FBB9            ; Unknown Fxxx instruction
$7B8    $CEB6   RND      VE, #B6         ; VE = random & B6
$7BA    $05E3   SYS      $5E3            ; System call to 5E3
$7BC    $3A5A   SE       VA, #5A         ; Skip if VA == 90
$7BE    $7F72   ADD      VF, #72         ; Add 114 to VF
$7C0    $9F80   SNE      VF, V8          ; Skip if VF != V8
$7C2    $7331   ADD      V3, #31         ; Add 49 to V3
$7C4    $C4C5   RND      V4, #C5         ; V4 = random & C5
$7C6    $5E7F   UNKNOWN  $5E7F           ; Unknown 5xxx instruction
$7C8    $DE16   DRW      VE, V1, #6      ; Draw 6-byte sprite at VE, V1
$7CA    $4792   SNE      V7, #92         ; Skip if V7 != 146
$7CC    $AC6D   LD       I, $C6D         ; Load C6D into I
$7CE    $5DE0   SE       VD, VE          ; Skip if VD == VE
$7D0    $2288   CALL     $288            ; Call subroutine at 288
$7D2    $A877   LD       I, $877         ; Load 877 into I
$7D4    $4C60   SNE      VC, #60         ; Skip if VC != 96
$7D6    $1066   JP       $066            ; Jump to 066
$7D8    $73B9   ADD      V3, #B9         ; Add 185 to V3
$7DA    $9455   UNKNOWN  $9455           ; Unknown 9xxx instruction
$7DC    $E4DE   UNKNOWN  $E4DE           ; Unknown Exxx instruction
$7DE    $7BF0   ADD      VB, #F0         ; Add 240 to VB
$7E0    $A5A2   LD       I, $5A2         ; Load 5A2 into I
$7E2    $03A5   SYS      $3A5            ; System call to 3A5
$7E4    $D8F7   DRW      V8, VF, #7      ; Draw 7-byte sprite at V8, VF
$7E6    $ECE5   UNKNOWN  $ECE5           ; Unknown Exxx instruction
$7E8    $D610   DRW      V6, V1, #0      ; Draw 0-byte sprite at V6, V1
$7EA    $C45D   RND      V4, #5D         ; V4 = random & 5D
$7EC    $17FD   JP       $7FD            ; Jump to 7FD
$7EE    $E73D   UNKNOWN  $E73D           ; Unknown Exxx instruction
$7F0    $1D8F   JP       $D8F            ; Jump to D8F
$7F2    $703A   ADD      V0, #3A         ; Add 58 to V0
$7F4    $6DD6   LD       VD, #D6         ; Load 214 into VD
$7F6    $C321   RND      V3, #21         ; V3 = random & 21
$7F8    $6A68   LD       VA, #68         ; Load 104 into VA
$7FA    $E8F6   UNKNOWN  $E8F6           ; Unknown Exxx instruction
$7FC    $BA11   JP       V0, $A11        ; Jump to V0 + A11
$7FE    $CD37   RND      VD, #37         ; VD = random & 37
$800    $CED5   RND      VE, #D5         ; VE = random & D5
$802    $34B7   SE       V4, #B7         ; Skip if V4 == 183
$804    $55B2   UNKNOWN  $55B2           ; Unknown 5xxx instruction
$806    $87F8   UNKNOWN  87F8            ; Unknown 8xxx instruction
$808    $C525   RND      V5, #25         ; V5 = random & 25
$80A    $2A5D   CALL     $A5D            ; Call subroutine at A5D
$80C    $9322   UNKNOWN  $9322           ; Unknown 9xxx instruction
$80E    $E278   UNKNOWN  $E278           ; Unknown Exxx instruction
$810    $4894   SNE      V8, #94         ; Skip if V8 != 148
$812    $26EC   CALL     $6EC            ; Call subroutine at 6EC
$814    $89E2   AND      V9, VE          ; V9 &= VE
$816    $BD1F   JP       V0, $D1F        ; Jump to V0 + D1F
$818    $5FDB   UNKNOWN  $5FDB           ; Unknown 5xxx instruction
$81A    $9A82   UNKNOWN  $9A82           ; Unknown 9xxx instruction
$81C    $2801   CALL     $801            ; Call subroutine at 801
$81E    $A33B   LD       I, $33B         ; Load 33B into I
$820    $06DA   SYS      $6DA            ; System call to 6DA
$822    $A59A   LD       I, $59A         ; Load 59A into I
$824    $BF99   JP       V0, $F99        ; Jump to V0 + F99
$826    $544E   UNKNOWN  $544E           ; Unknown 5xxx instruction
$828    $F7F1   UNKNOWN  F7F1            ; Unknown Fxxx instruction
$82A    $EB84   UNKNOWN  $EB84           ; Unknown Exxx instruction
$82C    $7D93   ADD      VD, #93         ; Add 147 to VD
$82E    $87F2   AND      V7, VF          ; V7 &= VF
$830    $BF53   JP       V0, $F53        ; Jump to V0 + F53
$832    $7F21   ADD      VF, #21         ; Add 33 to VF
$834    $A06D   LD       I, $06D         ; Load 06D into I
$836    $1F80   JP       $F80            ; Jump to F80
$838    $CF52   RND      VF, #52         ; VF = random & 52
$83A    $5A26   UNKNOWN  $5A26           ; Unknown 5xxx instruction
$83C    $322F   SE       V2, #2F         ; Skip if V2 == 47
$83E    $9EE8   UNKNOWN  $9EE8           ; Unknown 9xxx instruction
$840    $2F8E   CALL     $F8E            ; Call subroutine at F8E
$842    $454D   SNE      V5, #4D         ; Skip if V5 != 77
$844    $B402   JP       V0, $402        ; Jump to V0 + 402
$846    $C105   RND      V1, #05         ; V1 = random & 05
$848    $2CF1   CALL     $CF1            ; Call subroutine at CF1
$84A    $4F66   SNE      VF, #66         ; Skip if VF != 102
$84C    $CD43   RND      VD, #43         ; VD = random & 43
$84E    $E8BA   UNKNOWN  $E8BA           ; Unknown Exxx instruction
$850    $2147   CALL     $147            ; Call subroutine at 147
$852    $2C7D   CALL     $C7D            ; Call subroutine at C7D
$854    $8DCB   UNKNOWN  8DCB            ; Unknown 8xxx instruction
$856    $4168   SNE      V1, #68         ; Skip if V1 != 104
$858    $96D3   UNKNOWN  $96D3           ; Unknown 9xxx instruction
$85A    $CD58   RND      VD, #58         ; VD = random & 58
$85C    $2D33   CALL     $D33            ; Call subroutine at D33
$85E    $7896   ADD      V8, #96         ; Add 150 to V8
$860    $ABB2   LD       I, $BB2         ; Load BB2 into I
$862    $DA37   DRW      VA, V3, #7      ; Draw 7-byte sprite at VA, V3
$864    $0392   SYS      $392            ; System call to 392
$866    $575E   UNKNOWN  $575E           ; Unknown 5xxx instruction
$868    $38E8   SE       V8, #E8         ; Skip if V8 == 232
$86A    $FABE   UNKNOWN  FABE            ; Unknown Fxxx instruction
$86C    $7BD3   ADD      VB, #D3         ; Add 211 to VB
$86E    $77EE   ADD      V7, #EE         ; Add 238 to V7
$870    $3525   SE       V5, #25         ; Skip if V5 == 37
$872    $DD62   DRW      VD, V6, #2      ; Draw 2-byte sprite at VD, V6
$874    $6A18   LD       VA, #18         ; Load 24 into VA
$876    $9035   UNKNOWN  $9035           ; Unknown 9xxx instruction
$878    $D920   DRW      V9, V2, #0      ; Draw 0-byte sprite at V9, V2
$87A    $D173   DRW      V1, V7, #3      ; Draw 3-byte sprite at V1, V7
$87C    $D9E2   DRW      V9, VE, #2      ; Draw 2-byte sprite at V9, VE
$87E    $C5EC   RND      V5, #EC         ; V5 = random & EC
$880    $AAE8   LD       I, $AE8         ; Load AE8 into I
$882    $49B9   SNE      V9, #B9         ; Skip if V9 != 185
$884    $270F   CALL     $70F            ; Call subroutine at 70F
$886    $E947   UNKNOWN  $E947           ; Unknown Exxx instruction
$888    $9244   UNKNOWN  $9244           ; Unknown 9xxx instruction
$88A    $1C07   JP       $C07            ; Jump to C07
$88C    $E3F8   UNKNOWN  $E3F8           ; Unknown Exxx instruction
$88E    $B5C4   JP       V0, $5C4        ; Jump to V0 + 5C4
$890    $E6B7   UNKNOWN  $E6B7           ; Unknown Exxx instruction
$892    $6B5F   LD       VB, #5F         ; Load 95 into VB
$894    $19F6   JP       $9F6            ; Jump to 9F6
$896    $2AEF   CALL     $AEF            ; Call subroutine at AEF
$898    $8EA3   XOR      VE, VA          ; VE ^= VA
$89A    $B741   JP       V0, $741        ; Jump to V0 + 741
$89C    $4FD8   SNE      VF, #D8         ; Skip if VF != 216
$89E    $C717   RND      V7, #17         ; V7 = random & 17
$8A0    $9A9A   UNKNOWN  $9A9A           ; Unknown 9xxx instruction
$8A2    $E70C   UNKNOWN  $E70C           ; Unknown Exxx instruction
$8A4    $A923   LD       I, $923         ; Load 923 into I
$8A6    $CE4D   RND      VE, #4D         ; VE = random & 4D
$8A8    $C868   RND      V8, #68         ; V8 = random & 68
$8AA    $4E8B   SNE      VE, #8B         ; Skip if VE != 139
$8AC    $995C   UNKNOWN  $995C           ; Unknown 9xxx instruction
$8AE    $FD04   UNKNOWN  FD04            ; Unknown Fxxx instruction
$8B0    $25A3   CALL     $5A3            ; Call subroutine at 5A3
$8B2    $50E5   UNKNOWN  $50E5           ; Unknown 5xxx instruction
$8B4    $9132   UNKNOWN  $9132           ; Unknown 9xxx instruction
$8B6    $E078   UNKNOWN  $E078           ; Unknown Exxx instruction
$8B8    $152E   JP       $52E            ; Jump to 52E
$8BA    $E275   UNKNOWN  $E275           ; Unknown Exxx instruction
$8BC    $2394   CALL     $394            ; Call subroutine at 394
$8BE    $AF9B   LD       I, $F9B         ; Load F9B into I
$8C0    $83BD   UNKNOWN  83BD            ; Unknown 8xxx instruction
$8C2    $B535   JP       V0, $535        ; Jump to V0 + 535
$8C4    $AA47   LD       I, $A47         ; Load A47 into I
$8C6    $348C   SE       V4, #8C         ; Skip if V4 == 140
$8C8    $D839   DRW      V8, V3, #9      ; Draw 9-byte sprite at V8, V3
$8CA    $302F   SE       V0, #2F         ; Skip if V0 == 47
$8CC    $571C   UNKNOWN  $571C           ; Unknown 5xxx instruction
$8CE    $B2AC   JP       V0, $2AC        ; Jump to V0 + 2AC
$8D0    $6C8A   LD       VC, #8A         ; Load 138 into VC
$8D2    $AA8F   LD       I, $A8F         ; Load A8F into I
$8D4    $A1F9   LD       I, $1F9         ; Load 1F9 into I
$8D6    $3AC6   SE       VA, #C6         ; Skip if VA == 198
$8D8    $D0E7   DRW      V0, VE, #7      ; Draw 7-byte sprite at V0, VE
$8DA    $F97D   UNKNOWN  F97D            ; Unknown Fxxx instruction
$8DC    $511B   UNKNOWN  $511B           ; Unknown 5xxx instruction
$8DE    $1C50   JP       $C50            ; Jump to C50
$8E0    $CB56   RND      VB, #56         ; VB = random & 56
$8E2    $9478   UNKNOWN  $9478           ; Unknown 9xxx instruction
$8E4    $CA79   RND      VA, #79         ; VA = random & 79
$8E6    $DD5B   DRW      VD, V5, #B      ; Draw 11-byte sprite at VD, V5
$8E8    $4ED3   SNE      VE, #D3         ; Skip if VE != 211
$8EA    $C590   RND      V5, #90         ; V5 = random & 90
$8EC    $9699   UNKNOWN  $9699           ; Unknown 9xxx instruction
$8EE    $CFA6   RND      VF, #A6         ; VF = random & A6
$8F0    $FB8F   UNKNOWN  FB8F            ; Unknown Fxxx instruction
$8F2    $8845   SUB      V8, V4          ; V8 -= V4, VF = !borrow
$8F4    $68F0   LD       V8, #F0         ; Load 240 into V8
$8F6    $4B54   SNE      VB, #54         ; Skip if VB != 84
$8F8    $1AA5   JP       $AA5            ; Jump to AA5
$8FA    $71BF   ADD      V1, #BF         ; Add 191 to V1
$8FC    $27D7   CALL     $7D7            ; Call subroutine at 7D7
$8FE    $AF3C   LD       I, $F3C         ; Load F3C into I
$900    $8049   UNKNOWN  8049            ; Unknown 8xxx instruction
$902    $47BB   SNE      V7, #BB         ; Skip if V7 != 187
$904    $788C   ADD      V8, #8C         ; Add 140 to V8
$906    $253F   CALL     $53F            ; Call subroutine at 53F
$908    $8AAB   UNKNOWN  8AAB            ; Unknown 8xxx instruction
$90A    $A717   LD       I, $717         ; Load 717 into I
$90C    $A9CB   LD       I, $9CB         ; Load 9CB into I
$90E    $9C2D   UNKNOWN  $9C2D           ; Unknown 9xxx instruction
$910    $EE57   UNKNOWN  $EE57           ; Unknown Exxx instruction
$912    $646E   LD       V4, #6E         ; Load 110 into V4
$914    $148D   JP       $48D            ; Jump to 48D
$916    $94EC   UNKNOWN  $94EC           ; Unknown 9xxx instruction
$918    $3D59   SE       VD, #59         ; Skip if VD == 89
$91A    $A58C   LD       I, $58C         ; Load 58C into I
$91C    $BC5A   JP       V0, $C5A        ; Jump to V0 + C5A
$91E    $E7F7   UNKNOWN  $E7F7           ; Unknown Exxx instruction
$920    $A759   LD       I, $759         ; Load 759 into I
$922    $9B0C   UNKNOWN  $9B0C           ; Unknown 9xxx instruction
$924    $05F0   SYS      $5F0            ; System call to 5F0
$926    $D40C   DRW      V4, V0, #C      ; Draw 12-byte sprite at V4, V0
$928    $3D3D   SE       VD, #3D         ; Skip if VD == 61
$92A    $D49A   DRW      V4, V9, #A      ; Draw 10-byte sprite at V4, V9
$92C    $0665   SYS      $665            ; System call to 665
$92E    $93F8   UNKNOWN  $93F8           ; Unknown 9xxx instruction
$930    $50D9   UNKNOWN  $50D9           ; Unknown 5xxx instruction
$932    $1E17   JP       $E17            ; Jump to E17
$934    $7FAC   ADD      VF, #AC         ; Add 172 to VF
$936    $51D9   UNKNOWN  $51D9           ; Unknown 5xxx instruction
$938    $6B43   LD       VB, #43         ; Load 67 into VB
$93A    $105E   JP       $05E            ; Jump to 05E
$93C    $FB18   LD       ST, VB          ; Sound timer = VB
$93E    $D5A2   DRW      V5, VA, #2      ; Draw 2-byte sprite at V5, VA
$940    $485B   SNE      V8, #5B         ; Skip if V8 != 91
$942    $ABA7   LD       I, $BA7         ; Load BA7 into I
$944    $091F   SYS      $91F            ; System call to 91F
$946    $0604   SYS      $604            ; System call to 604
$948    $F7C1   UNKNOWN  F7C1            ; Unknown Fxxx instruction
$94A    $0786   SYS      $786            ; System call to 786
$94C    $7B79   ADD      VB, #79         ; Add 121 to VB
$94E    $BAF6   JP       V0, $AF6        ; Jump to V0 + AF6
$950    $92B5   UNKNOWN  $92B5           ; Unknown 9xxx instruction
$952    $95AA   UNKNOWN  $95AA           ; Unknown 9xxx instruction
$954    $50DA   UNKNOWN  $50DA           ; Unknown 5xxx instruction
$956    $C1DB   RND      V1, #DB         ; V1 = random & DB
$958    $36A1   SE       V6, #A1         ; Skip if V6 == 161
$95A    $3417   SE       V4, #17         ; Skip if V4 == 23
$95C    $1DDB   JP       $DDB            ; Jump to DDB
$95E    $5E96   UNKNOWN  $5E96           ; Unknown 5xxx instruction
$960    $59EF   UNKNOWN  $59EF           ; Unknown 5xxx instruction
$962    $2711   CALL     $711            ; Call subroutine at 711
$964    $E3D3   UNKNOWN  $E3D3           ; Unknown Exxx instruction
$966    $E9CC   UNKNOWN  $E9CC           ; Unknown Exxx instruction
$968    $E37A   UNKNOWN  $E37A           ; Unknown Exxx instruction
$96A    $E198   UNKNOWN  $E198           ; Unknown Exxx instruction
$96C    $288A   CALL     $88A            ; Call subroutine at 88A
$96E    $3179   SE       V1, #79         ; Skip if V1 == 121
$970    $0D53   SYS      $D53            ; System call to D53
$972    $9F7D   UNKNOWN  $9F7D           ; Unknown 9xxx instruction
$974    $181B   JP       $81B            ; Jump to 81B
$976    $3405   SE       V4, #05         ; Skip if V4 == 5
$978    $F47C   UNKNOWN  F47C            ; Unknown Fxxx instruction
$97A    $A92E   LD       I, $92E         ; Load 92E into I
$97C    $06F3   SYS      $6F3            ; System call to 6F3
$97E    $923E   UNKNOWN  $923E           ; Unknown 9xxx instruction
$980    $9F67   UNKNOWN  $9F67           ; Unknown 9xxx instruction
$982    $B18D   JP       V0, $18D        ; Jump to V0 + 18D
$984    $FEFD   UNKNOWN  FEFD            ; Unknown Fxxx instruction
$986    $E21F   UNKNOWN  $E21F           ; Unknown Exxx instruction
$988    $5AAA   UNKNOWN  $5AAA           ; Unknown 5xxx instruction
$98A    $6101   LD       V1, #01         ; Load 1 into V1
$98C    $EF1E   UNKNOWN  $EF1E           ; Unknown Exxx instruction
$98E    $93E6   UNKNOWN  $93E6           ; Unknown 9xxx instruction
$990    $1EEA   JP       $EEA            ; Jump to EEA
$992    $8F4F   UNKNOWN  8F4F            ; Unknown 8xxx instruction
$994    $FE4E   UNKNOWN  FE4E            ; Unknown Fxxx instruction
$996    $A647   LD       I, $647         ; Load 647 into I
$998    $8FA7   SUBN     VF, VA          ; VF = VA - VF, VF = !borrow
$99A    $7887   ADD      V8, #87         ; Add 135 to V8
$99C    $5C7F   UNKNOWN  $5C7F           ; Unknown 5xxx instruction
$99E    $F304   UNKNOWN  F304            ; Unknown Fxxx instruction
$9A0    $22C9   CALL     $2C9            ; Call subroutine at 2C9
$9A2    $2E0E   CALL     $E0E            ; Call subroutine at E0E
$9A4    $50E2   UNKNOWN  $50E2           ; Unknown 5xxx instruction
$9A6    $9B15   UNKNOWN  $9B15           ; Unknown 9xxx instruction
$9A8    $325E   SE       V2, #5E         ; Skip if V2 == 94
$9AA    $22E4   CALL     $2E4            ; Call subroutine at 2E4
$9AC    $0E1D   SYS      $E1D            ; System call to E1D
$9AE    $4733   SNE      V7, #33         ; Skip if V7 != 51
$9B0    $17E1   JP       $7E1            ; Jump to 7E1
$9B2    $192A   JP       $92A            ; Jump to 92A
$9B4    $7FB0   ADD      VF, #B0         ; Add 176 to VF
$9B6    $D37D   DRW      V3, V7, #D      ; Draw 13-byte sprite at V3, V7
$9B8    $B22C   JP       V0, $22C        ; Jump to V0 + 22C
$9BA    $4E39   SNE      VE, #39         ; Skip if VE != 57
$9BC    $8C2B   UNKNOWN  8C2B            ; Unknown 8xxx instruction
$9BE    $F8F9   UNKNOWN  F8F9            ; Unknown Fxxx instruction
$9C0    $7F73   ADD      VF, #73         ; Add 115 to VF
$9C2    $77D1   ADD      V7, #D1         ; Add 209 to V7
$9C4    $0793   SYS      $793            ; System call to 793
$9C6    $5A57   UNKNOWN  $5A57           ; Unknown 5xxx instruction
$9C8    $69E1   LD       V9, #E1         ; Load 225 into V9
$9CA    $98CD   UNKNOWN  $98CD           ; Unknown 9xxx instruction
$9CC    $1A9B   JP       $A9B            ; Jump to A9B
$9CE    $A344   LD       I, $344         ; Load 344 into I
$9D0    $5957   UNKNOWN  $5957           ; Unknown 5xxx instruction
$9D2    $27DE   CALL     $7DE            ; Call subroutine at 7DE
$9D4    $421A   SNE      V2, #1A         ; Skip if V2 != 26
$9D6    $E6D1   UNKNOWN  $E6D1           ; Unknown Exxx instruction
$9D8    $448F   SNE      V4, #8F         ; Skip if V4 != 143
$9DA    $0961   SYS      $961            ; System call to 961
$9DC    $E2EB   UNKNOWN  $E2EB           ; Unknown Exxx instruction
$9DE    $EAAA   UNKNOWN  $EAAA           ; Unknown Exxx instruction
$9E0    $0DBB   SYS      $DBB            ; System call to DBB
$9E2    $F02C   UNKNOWN  F02C            ; Unknown Fxxx instruction
$9E4    $6D76   LD       VD, #76         ; Load 118 into VD
$9E6    $FADA   UNKNOWN  FADA            ; Unknown Fxxx instruction
$9E8    $3C5F   SE       VC, #5F         ; Skip if VC == 95
$9EA    $54E0   SE       V4, VE          ; Skip if V4 == VE
$9EC    $165D   JP       $65D            ; Jump to 65D
$9EE    $A464   LD       I, $464         ; Load 464 into I
$9F0    $FD0B   UNKNOWN  FD0B            ; Unknown Fxxx instruction
$9F2    $717E   ADD      V1, #7E         ; Add 126 to V1
$9F4    $5479   UNKNOWN  $5479           ; Unknown 5xxx instruction
$9F6    $6B78   LD       VB, #78         ; Load 120 into VB
$9F8    $5480   SE       V4, V8          ; Skip if V4 == V8
$9FA    $A087   LD       I, $087         ; Load 087 into I
$9FC    $D199   DRW      V1, V9, #9      ; Draw 9-byte sprite at V1, V9
$9FE    $B111   JP       V0, $111        ; Jump to V0 + 111
$A00    $4722   SNE      V7, #22         ; Skip if V7 != 34
$A02    $CA6B   RND      VA, #6B         ; VA = random & 6B
$A04    $D739   DRW      V7, V3, #9      ; Draw 9-byte sprite at V7, V3
$A06    $E0B4   UNKNOWN  $E0B4           ; Unknown Exxx instruction
$A08    $E487   UNKNOWN  $E487           ; Unknown Exxx instruction
$A0A    $DFF0   DRW      VF, VF, #0      ; Draw 0-byte sprite at VF, VF
$A0C    $D882   DRW      V8, V8, #2      ; Draw 2-byte sprite at V8, V8
$A0E    $3807   SE       V8, #07         ; Skip if V8 == 7
$A10    $AE0F   LD       I, $E0F         ; Load E0F into I
$A12    $4FB4   SNE      VF, #B4         ; Skip if VF != 180
$A14    $F519   UNKNOWN  F519            ; Unknown Fxxx instruction
$A16    $B87E   JP       V0, $87E        ; Jump to V0 + 87E
$A18    $9A26   UNKNOWN  $9A26           ; Unknown 9xxx instruction
$A1A    $016F   SYS      $16F            ; System call to 16F
$A1C    $F289   UNKNOWN  F289            ; Unknown Fxxx instruction
$A1E    $38A1   SE       V8, #A1         ; Skip if V8 == 161
$A20    $4E51   SNE      VE, #51         ; Skip if VE != 81
$A22    $861B   UNKNOWN  861B            ; Unknown 8xxx instruction
$A24    $CF7B   RND      VF, #7B         ; VF = random & 7B
$A26    $029F   SYS      $29F            ; System call to 29F
$A28    $F615   LD       DT, V6          ; Delay timer = V6
$A2A    $01E6   SYS      $1E6            ; System call to 1E6
$A2C    $865F   UNKNOWN  865F            ; Unknown 8xxx instruction
$A2E    $CC8B   RND      VC, #8B         ; VC = random & 8B
$A30    $8BB6   SHR      VB              ; VB >>= 1, VF = LSB
$A32    $4C08   SNE      VC, #08         ; Skip if VC != 8
$A34    $CAA4   RND      VA, #A4         ; VA = random & A4
$A36    $A033   LD       I, $033         ; Load 033 into I
$A38    $10B0   JP       $0B0            ; Jump to 0B0
$A3A    $2428   CALL     $428            ; Call subroutine at 428
$A3C    $DEBE   DRW      VE, VB, #E      ; Draw 14-byte sprite at VE, VB
$A3E    $FE7C   UNKNOWN  FE7C            ; Unknown Fxxx instruction
$A40    $BDA1   JP       V0, $DA1        ; Jump to V0 + DA1
$A42    $A913   LD       I, $913         ; Load 913 into I
$A44    $B976   JP       V0, $976        ; Jump to V0 + 976
$A46    $A3B8   LD       I, $3B8         ; Load 3B8 into I
$A48    $99A1   UNKNOWN  $99A1           ; Unknown 9xxx instruction
$A4A    $F8F2   UNKNOWN  F8F2            ; Unknown Fxxx instruction
$A4C    $0BE1   SYS      $BE1            ; System call to BE1
$A4E    $B5DE   JP       V0, $5DE        ; Jump to V0 + 5DE
$A50    $983C   UNKNOWN  $983C           ; Unknown 9xxx instruction
$A52    $ABFF   LD       I, $BFF         ; Load BFF into I
$A54    $CC4F   RND      VC, #4F         ; VC = random & 4F
$A56    $1269   JP       $269            ; Jump to 269
$A58    $E22D   UNKNOWN  $E22D           ; Unknown Exxx instruction
$A5A    $3457   SE       V4, #57         ; Skip if V4 == 87
$A5C    $1403   JP       $403            ; Jump to 403
$A5E    $1397   JP       $397            ; Jump to 397
$A60    $4254   SNE      V2, #54         ; Skip if V2 != 84
$A62    $80E5   SUB      V0, VE          ; V0 -= VE, VF = !borrow
$A64    $85C4   ADD      V5, VC          ; V5 += VC, VF = carry
$A66    $F7F3   UNKNOWN  F7F3            ; Unknown Fxxx instruction
$A68    $2F15   CALL     $F15            ; Call subroutine at F15
$A6A    $F59B   UNKNOWN  F59B            ; Unknown Fxxx instruction
$A6C    $0F76   SYS      $F76            ; System call to F76
$A6E    $ECBC   UNKNOWN  $ECBC           ; Unknown Exxx instruction
$A70    $650D   LD       V5, #0D         ; Load 13 into V5
$A72    $B053   JP       V0, $053        ; Jump to V0 + 053
$A74    $014C   SYS      $14C            ; System call to 14C
$A76    $4D87   SNE      VD, #87         ; Skip if VD != 135
$A78    $D32F   DRW      V3, V2, #F      ; Draw 15-byte sprite at V3, V2
$A7A    $FE15   LD       DT, VE          ; Delay timer = VE
$A7C    $C687   RND      V6, #87         ; V6 = random & 87
$A7E    $5DAA   UNKNOWN  $5DAA           ; Unknown 5xxx instruction
$A80    $73E2   ADD      V3, #E2         ; Add 226 to V3
$A82    $F4EB   UNKNOWN  F4EB            ; Unknown Fxxx instruction
$A84    $4C7F   SNE      VC, #7F         ; Skip if VC != 127
$A86    $0C34   SYS      $C34            ; System call to C34
$A88    $31EA   SE       V1, #EA         ; Skip if V1 == 234
$A8A    $D93E   DRW      V9, V3, #E      ; Draw 14-byte sprite at V9, V3
$A8C    $AA0D   LD       I, $A0D         ; Load A0D into I
$A8E    $F25D   UNKNOWN  F25D            ; Unknown Fxxx instruction
$A90    $75B3   ADD      V5, #B3         ; Add 179 to V5
$A92    $F938   UNKNOWN  F938            ; Unknown Fxxx instruction
$A94    $BA02   JP       V0, $A02        ; Jump to V0 + A02
$A96    $668F   LD       V6, #8F         ; Load 143 into V6
$A98    $10AE   JP       $0AE            ; Jump to 0AE
$A9A    $D6E8   DRW      V6, VE, #8      ; Draw 8-byte sprite at V6, VE
$A9C    $5082   UNKNOWN  $5082           ; Unknown 5xxx instruction
$A9E    $1110   JP       $110            ; Jump to 110
$AA0    $C6BB   RND      V6, #BB         ; V6 = random & BB
$AA2    $CAB3   RND      VA, #B3         ; VA = random & B3
$AA4    $0F9F   SYS      $F9F            ; System call to F9F
$AA6    $F8B2   UNKNOWN  F8B2            ; Unknown Fxxx instruction
$AA8    $4310   SNE      V3, #10         ; Skip if V3 != 16
$AAA    $BC25   JP       V0, $C25        ; Jump to V0 + C25
$AAC    $40B3   SNE      V0, #B3         ; Skip if V0 != 179
$AAE    $CAB1   RND      VA, #B1         ; VA = random & B1
$AB0    $3CCC   SE       VC, #CC         ; Skip if VC == 204
$AB2    $95E6   UNKNOWN  $95E6           ; Unknown 9xxx instruction
$AB4    $96D6   UNKNOWN  $96D6           ; Unknown 9xxx instruction
$AB6    $E4EB   UNKNOWN  $E4EB           ; Unknown Exxx instruction
$AB8    $F9D1   UNKNOWN  F9D1            ; Unknown Fxxx instruction
$ABA    $821E   SHL      V2              ; V2 <<= 1, VF = MSB
$ABC    $A80D   LD       I, $80D         ; Load 80D into I
$ABE    $9246   UNKNOWN  $9246           ; Unknown 9xxx instruction
$AC0    $A39C   LD       I, $39C         ; Load 39C into I
$AC2    $4956   SNE      V9, #56         ; Skip if V9 != 86
$AC4    $09E0   SYS      $9E0            ; System call to 9E0
$AC6    $E0A6   UNKNOWN  $E0A6           ; Unknown Exxx instruction
$AC8    $3EF7   SE       VE, #F7         ; Skip if VE == 247
$ACA    $26EE   CALL     $6EE            ; Call subroutine at 6EE
$ACC    $61A1   LD       V1, #A1         ; Load 161 into V1
$ACE    $99DB   UNKNOWN  $99DB           ; Unknown 9xxx instruction
$AD0    $3CEF   SE       VC, #EF         ; Skip if VC == 239
$AD2    $77F5   ADD      V7, #F5         ; Add 245 to V7
$AD4    $2A09   CALL     $A09            ; Call subroutine at A09
$AD6    $4305   SNE      V3, #05         ; Skip if V3 != 5
$AD8    $761A   ADD      V6, #1A         ; Add 26 to V6
$ADA    $D959   DRW      V9, V5, #9      ; Draw 9-byte sprite at V9, V5
$ADC    $0708   SYS      $708            ; System call to 708
$ADE    $8964   ADD      V9, V6          ; V9 += V6, VF = carry
$AE0    $2461   CALL     $461            ; Call subroutine at 461
$AE2    $A46C   LD       I, $46C         ; Load 46C into I
$AE4    $B082   JP       V0, $082        ; Jump to V0 + 082
$AE6    $DBB1   DRW      VB, VB, #1      ; Draw 1-byte sprite at VB, VB
$AE8    $1A5B   JP       $A5B            ; Jump to A5B
$AEA    $5FC2   UNKNOWN  $5FC2           ; Unknown 5xxx instruction
$AEC    $F43D   UNKNOWN  F43D            ; Unknown Fxxx instruction
$AEE    $90C8   UNKNOWN  $90C8           ; Unknown 9xxx instruction
$AF0    $7DB2   ADD      VD, #B2         ; Add 178 to VD
$AF2    $8E21   OR       VE, V2          ; VE |= V2
$AF4    $7E15   ADD      VE, #15         ; Add 21 to VE
$AF6    $1289   JP       $289            ; Jump to 289
$AF8    $3F14   SE       VF, #14         ; Skip if VF == 20
$AFA    $CF82   RND      VF, #82         ; VF = random & 82
$AFC    $B4A3   JP       V0, $4A3        ; Jump to V0 + 4A3
$AFE    $BF13   JP       V0, $F13        ; Jump to V0 + F13
$B00    $4BB9   SNE      VB, #B9         ; Skip if VB != 185
$B02    $40B4   SNE      V0, #B4         ; Skip if V0 != 180
$B04    $20D2   CALL     $0D2            ; Call subroutine at 0D2
$B06    $5E31   UNKNOWN  $5E31           ; Unknown 5xxx instruction
$B08    $354F   SE       V5, #4F         ; Skip if V5 == 79
$B0A    $A0AC   LD       I, $0AC         ; Load 0AC into I
$B0C    $4F39   SNE      VF, #39         ; Skip if VF != 57
$B0E    $8DA4   ADD      VD, VA          ; VD += VA, VF = carry
$B10    $8019   UNKNOWN  8019            ; Unknown 8xxx instruction
$B12    $E916   UNKNOWN  $E916           ; Unknown Exxx instruction
$B14    $E689   UNKNOWN  $E689           ; Unknown Exxx instruction
$B16    $9623   UNKNOWN  $9623           ; Unknown 9xxx instruction
$B18    $0E16   SYS      $E16            ; System call to E16
$B1A    $8C64   ADD      VC, V6          ; VC += V6, VF = carry
$B1C    $1BBB   JP       $BBB            ; Jump to BBB
$B1E    $6A13   LD       VA, #13         ; Load 19 into VA
$B20    $AB73   LD       I, $B73         ; Load B73 into I
$B22    $F2C7   UNKNOWN  F2C7            ; Unknown Fxxx instruction
$B24    $FC54   UNKNOWN  FC54            ; Unknown Fxxx instruction
$B26    $0321   SYS      $321            ; System call to 321
$B28    $2B62   CALL     $B62            ; Call subroutine at B62
$B2A    $ADB9   LD       I, $DB9         ; Load DB9 into I
$B2C    $32E8   SE       V2, #E8         ; Skip if V2 == 232
$B2E    $E326   UNKNOWN  $E326           ; Unknown Exxx instruction
$B30    $B4AD   JP       V0, $4AD        ; Jump to V0 + 4AD
$B32    $B1D7   JP       V0, $1D7        ; Jump to V0 + 1D7
$B34    $E8F2   UNKNOWN  $E8F2           ; Unknown Exxx instruction
$B36    $6247   LD       V2, #47         ; Load 71 into V2
$B38    $274E   CALL     $74E            ; Call subroutine at 74E
$B3A    $51D3   UNKNOWN  $51D3           ; Unknown 5xxx instruction
$B3C    $B0D5   JP       V0, $0D5        ; Jump to V0 + 0D5
$B3E    $7003   ADD      V0, #03         ; Add 3 to V0
$B40    $67BB   LD       V7, #BB         ; Load 187 into V7
$B42    $40BD   SNE      V0, #BD         ; Skip if V0 != 189
$B44    $FF32   UNKNOWN  FF32            ; Unknown Fxxx instruction
$B46    $97F5   UNKNOWN  $97F5           ; Unknown 9xxx instruction
$B48    $FD3A   UNKNOWN  FD3A            ; Unknown Fxxx instruction
$B4A    $8959   UNKNOWN  8959            ; Unknown 8xxx instruction
$B4C    $78D9   ADD      V8, #D9         ; Add 217 to V8
$B4E    $7C6D   ADD      VC, #6D         ; Add 109 to VC
$B50    $63C6   LD       V3, #C6         ; Load 198 into V3
$B52    $8054   ADD      V0, V5          ; V0 += V5, VF = carry
$B54    $55C1   UNKNOWN  $55C1           ; Unknown 5xxx instruction
$B56    $89A4   ADD      V9, VA          ; V9 += VA, VF = carry
$B58    $A4D3   LD       I, $4D3         ; Load 4D3 into I
$B5A    $5721   UNKNOWN  $5721           ; Unknown 5xxx instruction
$B5C    $FC94   UNKNOWN  FC94            ; Unknown Fxxx instruction
$B5E    $5F90   SE       VF, V9          ; Skip if VF == V9
$B60    $363D   SE       V6, #3D         ; Skip if V6 == 61
$B62    $D295   DRW      V2, V9, #5      ; Draw 5-byte sprite at V2, V9
$B64    $93B3   UNKNOWN  $93B3           ; Unknown 9xxx instruction
$B66    $5876   UNKNOWN  $5876           ; Unknown 5xxx instruction
$B68    $6CBE   LD       VC, #BE         ; Load 190 into VC
$B6A    $ED26   UNKNOWN  $ED26           ; Unknown Exxx instruction
$B6C    $EC91   UNKNOWN  $EC91           ; Unknown Exxx instruction
$B6E    $39C4   SE       V9, #C4         ; Skip if V9 == 196
$B70    $E611   UNKNOWN  $E611           ; Unknown Exxx instruction
$B72    $A687   LD       I, $687         ; Load 687 into I
$B74    $4417   SNE      V4, #17         ; Skip if V4 != 23
$B76    $66F6   LD       V6, #F6         ; Load 246 into V6
$B78    $000E   SYS      $00E            ; System call to 00E
$B7A    $ACC9   LD       I, $CC9         ; Load CC9 into I
$B7C    $485C   SNE      V8, #5C         ; Skip if V8 != 92
$B7E    $05AD   SYS      $5AD            ; System call to 5AD
$B80    $F041   UNKNOWN  F041            ; Unknown Fxxx instruction
$B82    $1C82   JP       $C82            ; Jump to C82
$B84    $2935   CALL     $935            ; Call subroutine at 935
$B86    $1989   JP       $989            ; Jump to 989
$B88    $EC6E   UNKNOWN  $EC6E           ; Unknown Exxx instruction
$B8A    $46E3   SNE      V6, #E3         ; Skip if V6 != 227
$B8C    $3B02   SE       VB, #02         ; Skip if VB == 2
$B8E    $BEAB   JP       V0, $EAB        ; Jump to V0 + EAB
$B90    $2A9F   CALL     $A9F            ; Call subroutine at A9F
$B92    $69B4   LD       V9, #B4         ; Load 180 into V9
$B94    $1277   JP       $277            ; Jump to 277
$B96    $8703   XOR      V7, V0          ; V7 ^= V0
$B98    $B90D   JP       V0, $90D        ; Jump to V0 + 90D
$B9A    $6EC7   LD       VE, #C7         ; Load 199 into VE
$B9C    $26A8   CALL     $6A8            ; Call subroutine at 6A8
$B9E    $90DE   UNKNOWN  $90DE           ; Unknown 9xxx instruction
$BA0    $2BBB   CALL     $BBB            ; Call subroutine at BBB
$BA2    $A4A2   LD       I, $4A2         ; Load 4A2 into I
$BA4    $7A32   ADD      VA, #32         ; Add 50 to VA
$BA6    $5471   UNKNOWN  $5471           ; Unknown 5xxx instruction
$BA8    $3888   SE       V8, #88         ; Skip if V8 == 136
$BAA    $9562   UNKNOWN  $9562           ; Unknown 9xxx instruction
$BAC    $E64A   UNKNOWN  $E64A           ; Unknown Exxx instruction
$BAE    $D5B6   DRW      V5, VB, #6      ; Draw 6-byte sprite at V5, VB
$BB0    $3D15   SE       VD, #15         ; Skip if VD == 21
$BB2    $FE3A   UNKNOWN  FE3A            ; Unknown Fxxx instruction
$BB4    $0DE9   SYS      $DE9            ; System call to DE9
$BB6    $EA1F   UNKNOWN  $EA1F           ; Unknown Exxx instruction
$BB8    $05D4   SYS      $5D4            ; System call to 5D4
$BBA    $9946   UNKNOWN  $9946           ; Unknown 9xxx instruction
$BBC    $85BF   UNKNOWN  85BF            ; Unknown 8xxx instruction
$BBE    $2863   CALL     $863            ; Call subroutine at 863
$BC0    $B583   JP       V0, $583        ; Jump to V0 + 583
$BC2    $A224   LD       I, $224         ; Load 224 into I
$BC4    $C896   RND      V8, #96         ; V8 = random & 96
$BC6    $2460   CALL     $460            ; Call subroutine at 460
$BC8    $E5D0   UNKNOWN  $E5D0           ; Unknown Exxx instruction
$BCA    $B048   JP       V0, $048        ; Jump to V0 + 048
$BCC    $DF46   DRW      VF, V4, #6      ; Draw 6-byte sprite at VF, V4
$BCE    $9580   SNE      V5, V8          ; Skip if V5 != V8
$BD0    $F1FF   UNKNOWN  F1FF            ; Unknown Fxxx instruction
$BD2    $36D0   SE       V6, #D0         ; Skip if V6 == 208
$BD4    $5276   UNKNOWN  $5276           ; Unknown 5xxx instruction
$BD6    $C7BC   RND      V7, #BC         ; V7 = random & BC
$BD8    $4E63   SNE      VE, #63         ; Skip if VE != 99
$BDA    $FF86   UNKNOWN  FF86            ; Unknown Fxxx instruction
$BDC    $9E79   UNKNOWN  $9E79           ; Unknown 9xxx instruction
$BDE    $F9BA   UNKNOWN  F9BA            ; Unknown Fxxx instruction
$BE0    $3625   SE       V6, #25         ; Skip if V6 == 37
$BE2    $E8B6   UNKNOWN  $E8B6           ; Unknown Exxx instruction
$BE4    $7D60   ADD      VD, #60         ; Add 96 to VD
$BE6    $FB11   UNKNOWN  FB11            ; Unknown Fxxx instruction
$BE8    $8297   SUBN     V2, V9          ; V2 = V9 - V2, VF = !borrow
$BEA    $986E   UNKNOWN  $986E           ; Unknown 9xxx instruction
$BEC    $02FE   SYS      $2FE            ; System call to 2FE
$BEE    $90B9   UNKNOWN  $90B9           ; Unknown 9xxx instruction
$BF0    $DDB1   DRW      VD, VB, #1      ; Draw 1-byte sprite at VD, VB
$BF2    $A501   LD       I, $501         ; Load 501 into I
$BF4    $09DF   SYS      $9DF            ; System call to 9DF
$BF6    $0906   SYS      $906            ; System call to 906
$BF8    $1F17   JP       $F17            ; Jump to F17
$BFA    $9AEB   UNKNOWN  $9AEB           ; Unknown 9xxx instruction
$BFC    $1038   JP       $038            ; Jump to 038
$BFE    $5F90   SE       VF, V9          ; Skip if VF == V9
$C00    $22D8   CALL     $2D8            ; Call subroutine at 2D8
$C02    $644B   LD       V4, #4B         ; Load 75 into V4
$C04    $3C93   SE       VC, #93         ; Skip if VC == 147
$C06    $90AE   UNKNOWN  $90AE           ; Unknown 9xxx instruction
$C08    $98C3   UNKNOWN  $98C3           ; Unknown 9xxx instruction
$C0A    $897E   SHL      V9              ; V9 <<= 1, VF = MSB
$C0C    $0D0A   SYS      $D0A            ; System call to D0A
$C0E    $0FBC   SYS      $FBC            ; System call to FBC
$C10    $B891   JP       V0, $891        ; Jump to V0 + 891
$C12    $2C78   CALL     $C78            ; Call subroutine at C78
$C14    $E875   UNKNOWN  $E875           ; Unknown Exxx instruction
$C16    $6A4B   LD       VA, #4B         ; Load 75 into VA
$C18    $48D2   SNE      V8, #D2         ; Skip if V8 != 210
$C1A    $D903   DRW      V9, V0, #3      ; Draw 3-byte sprite at V9, V0
$C1C    $68C3   LD       V8, #C3         ; Load 195 into V8
$C1E    $FDE2   UNKNOWN  FDE2            ; Unknown Fxxx instruction
$C20    $DDB0   DRW      VD, VB, #0      ; Draw 0-byte sprite at VD, VB
$C22    $1ACF   JP       $ACF            ; Jump to ACF
$C24    $546F   UNKNOWN  $546F           ; Unknown 5xxx instruction
$C26    $DC36   DRW      VC, V3, #6      ; Draw 6-byte sprite at VC, V3
$C28    $4B19   SNE      VB, #19         ; Skip if VB != 25
$C2A    $7E89   ADD      VE, #89         ; Add 137 to VE
$C2C    $0CDF   SYS      $CDF            ; System call to CDF
$C2E    $D9CD   DRW      V9, VC, #D      ; Draw 13-byte sprite at V9, VC
$C30    $B5F4   JP       V0, $5F4        ; Jump to V0 + 5F4
$C32    $E222   UNKNOWN  $E222           ; Unknown Exxx instruction
$C34    $2C1E   CALL     $C1E            ; Call subroutine at C1E
$C36    $FB52   UNKNOWN  FB52            ; Unknown Fxxx instruction
$C38    $D7CE   DRW      V7, VC, #E      ; Draw 14-byte sprite at V7, VC
$C3A    $8918   UNKNOWN  8918            ; Unknown 8xxx instruction
$C3C    $F190   UNKNOWN  F190            ; Unknown Fxxx instruction
$C3E    $1DE3   JP       $DE3            ; Jump to DE3
$C40    $7B2F   ADD      VB, #2F         ; Add 47 to VB
$C42    $2088   CALL     $088            ; Call subroutine at 088
$C44    $6012   LD       V0, #12         ; Load 18 into V0
$C46    $7C2B   ADD      VC, #2B         ; Add 43 to VC
$C48    $FE71   UNKNOWN  FE71            ; Unknown Fxxx instruction
$C4A    $C9A7   RND      V9, #A7         ; V9 = random & A7
$C4C    $EE34   UNKNOWN  $EE34           ; Unknown Exxx instruction
$C4E    $438B   SNE      V3, #8B         ; Skip if V3 != 139
$C50    $B597   JP       V0, $597        ; Jump to V0 + 597
$C52    $3B4E   SE       VB, #4E         ; Skip if VB == 78
$C54    $42FE   SNE      V2, #FE         ; Skip if V2 != 254
$C56    $3C1F   SE       VC, #1F         ; Skip if VC == 31
$C58    $5A1A   UNKNOWN  $5A1A           ; Unknown 5xxx instruction
$C5A    $D8F0   DRW      V8, VF, #0      ; Draw 0-byte sprite at V8, VF
$C5C    $E3F5   UNKNOWN  $E3F5           ; Unknown Exxx instruction
$C5E    $F416   UNKNOWN  F416            ; Unknown Fxxx instruction
$C60    $CED1   RND      VE, #D1         ; VE = random & D1
$C62    $A999   LD       I, $999         ; Load 999 into I
$C64    $B7F3   JP       V0, $7F3        ; Jump to V0 + 7F3
$C66    $0D84   SYS      $D84            ; System call to D84
$C68    $D106   DRW      V1, V0, #6      ; Draw 6-byte sprite at V1, V0
$C6A    $0D74   SYS      $D74            ; System call to D74
$C6C    $EC9C   UNKNOWN  $EC9C           ; Unknown Exxx instruction
$C6E    $D871   DRW      V8, V7, #1      ; Draw 1-byte sprite at V8, V7
$C70    $A41A   LD       I, $41A         ; Load 41A into I
$C72    $0E7D   SYS      $E7D            ; System call to E7D
$C74    $2E8C   CALL     $E8C            ; Call subroutine at E8C
$C76    $0CF3   SYS      $CF3            ; System call to CF3
$C78    $F2EB   UNKNOWN  F2EB            ; Unknown Fxxx instruction
$C7A    $2CE4   CALL     $CE4            ; Call subroutine at CE4
$C7C    $8CA5   SUB      VC, VA          ; VC -= VA, VF = !borrow
$C7E    $2836   CALL     $836            ; Call subroutine at 836
$C80    $7FB9   ADD      VF, #B9         ; Add 185 to VF
$C82    $B4C5   JP       V0, $4C5        ; Jump to V0 + 4C5
$C84    $8B01   OR       VB, V0          ; VB |= V0
$C86    $432A   SNE      V3, #2A         ; Skip if V3 != 42
$C88    $A69A   LD       I, $69A         ; Load 69A into I
$C8A    $906E   UNKNOWN  $906E           ; Unknown 9xxx instruction
$C8C    $013C   SYS      $13C            ; System call to 13C
$C8E    $AF7D   LD       I, $F7D         ; Load F7D into I
$C90    $3540   SE       V5, #40         ; Skip if V5 == 64
$C92    $3465   SE       V4, #65         ; Skip if V4 == 101
$C94    $CCDF   RND      VC, #DF         ; VC = random & DF
$C96    $0B32   SYS      $B32            ; System call to B32
$C98    $22EF   CALL     $2EF            ; Call subroutine at 2EF
$C9A    $6440   LD       V4, #40         ; Load 64 into V4
$C9C    $F3DB   UNKNOWN  F3DB            ; Unknown Fxxx instruction
$C9E    $3A25   SE       VA, #25         ; Skip if VA == 37
$CA0    $2797   CALL     $797            ; Call subroutine at 797
$CA2    $AA2E   LD       I, $A2E         ; Load A2E into I
$CA4    $4181   SNE      V1, #81         ; Skip if V1 != 129
$CA6    $829E   SHL      V2              ; V2 <<= 1, VF = MSB
$CA8    $06F9   SYS      $6F9            ; System call to 6F9
$CAA    $2022   CALL     $022            ; Call subroutine at 022
$CAC    $57E3   UNKNOWN  $57E3           ; Unknown 5xxx instruction
$CAE    $BD17   JP       V0, $D17        ; Jump to V0 + D17
$CB0    $D694   DRW      V6, V9, #4      ; Draw 4-byte sprite at V6, V9
$CB2    $739D   ADD      V3, #9D         ; Add 157 to V3
$CB4    $5C32   UNKNOWN  $5C32           ; Unknown 5xxx instruction
$CB6    $1EBE   JP       $EBE            ; Jump to EBE
$CB8    $6AD3   LD       VA, #D3         ; Load 211 into VA
$CBA    $EE66   UNKNOWN  $EE66           ; Unknown Exxx instruction
$CBC    $7AE0   ADD      VA, #E0         ; Add 224 to VA
$CBE    $880E   SHL      V8              ; V8 <<= 1, VF = MSB
$CC0    $23A3   CALL     $3A3            ; Call subroutine at 3A3
$CC2    $3BBE   SE       VB, #BE         ; Skip if VB == 190
$CC4    $2E3C   CALL     $E3C            ; Call subroutine at E3C
$CC6    $CDD4   RND      VD, #D4         ; VD = random & D4
$CC8    $135D   JP       $35D            ; Jump to 35D
$CCA    $C2AE   RND      V2, #AE         ; V2 = random & AE
$CCC    $FCAD   UNKNOWN  FCAD            ; Unknown Fxxx instruction
$CCE    $4D2E   SNE      VD, #2E         ; Skip if VD != 46
$CD0    $4DCD   SNE      VD, #CD         ; Skip if VD != 205
$CD2    $673A   LD       V7, #3A         ; Load 58 into V7
$CD4    $ED97   UNKNOWN  $ED97           ; Unknown Exxx instruction
$CD6    $344D   SE       V4, #4D         ; Skip if V4 == 77
$CD8    $6903   LD       V9, #03         ; Load 3 into V9
$CDA    $05BC   SYS      $5BC            ; System call to 5BC
$CDC    $5E34   UNKNOWN  $5E34           ; Unknown 5xxx instruction
$CDE    $57E3   UNKNOWN  $57E3           ; Unknown 5xxx instruction
$CE0    $5A1E   UNKNOWN  $5A1E           ; Unknown 5xxx instruction
$CE2    $AA79   LD       I, $A79         ; Load A79 into I
$CE4    $2DCF   CALL     $DCF            ; Call subroutine at DCF
$CE6    $EB78   UNKNOWN  $EB78           ; Unknown Exxx instruction
$CE8    $FDB4   UNKNOWN  FDB4            ; Unknown Fxxx instruction
$CEA    $C834   RND      V8, #34         ; V8 = random & 34
$CEC    $60C0   LD       V0, #C0         ; Load 192 into V0
$CEE    $B899   JP       V0, $899        ; Jump to V0 + 899
$CF0    $5698   UNKNOWN  $5698           ; Unknown 5xxx instruction
$CF2    $714C   ADD      V1, #4C         ; Add 76 to V1
$CF4    $F649   UNKNOWN  F649            ; Unknown Fxxx instruction
$CF6    $99D3   UNKNOWN  $99D3           ; Unknown 9xxx instruction
$CF8    $6848   LD       V8, #48         ; Load 72 into V8
$CFA    $F42A   UNKNOWN  F42A            ; Unknown Fxxx instruction
$CFC    $EE8A   UNKNOWN  $EE8A           ; Unknown Exxx instruction
$CFE    $4C2B   SNE      VC, #2B         ; Skip if VC != 43
$D00    $FE8E   UNKNOWN  FE8E            ; Unknown Fxxx instruction
$D02    $5CA8   UNKNOWN  $5CA8           ; Unknown 5xxx instruction
$D04    $1E04   JP       $E04            ; Jump to E04
$D06    $33F5   SE       V3, #F5         ; Skip if V3 == 245
$D08    $80F2   AND      V0, VF          ; V0 &= VF
$D0A    $33F3   SE       V3, #F3         ; Skip if V3 == 243
$D0C    $4175   SNE      V1, #75         ; Skip if V1 != 117
$D0E    $21CC   CALL     $1CC            ; Call subroutine at 1CC
$D10    $08E5   SYS      $8E5            ; System call to 8E5
$D12    $BBF6   JP       V0, $BF6        ; Jump to V0 + BF6
$D14    $2407   CALL     $407            ; Call subroutine at 407
$D16    $7583   ADD      V5, #83         ; Add 131 to V5
$D18    $1D38   JP       $D38            ; Jump to D38
$D1A    $FBFC   UNKNOWN  FBFC            ; Unknown Fxxx instruction
$D1C    $B4E7   JP       V0, $4E7        ; Jump to V0 + 4E7
$D1E    $C0E3   RND      V0, #E3         ; V0 = random & E3
$D20    $ABF0   LD       I, $BF0         ; Load BF0 into I
$D22    $1F5A   JP       $F5A            ; Jump to F5A
$D24    $EEC1   UNKNOWN  $EEC1           ; Unknown Exxx instruction
$D26    $0897   SYS      $897            ; System call to 897
$D28    $07F8   SYS      $7F8            ; System call to 7F8
$D2A    $006B   SYS      $06B            ; System call to 06B
$D2C    $F21C   UNKNOWN  F21C            ; Unknown Fxxx instruction
$D2E    $A70B   LD       I, $70B         ; Load 70B into I
$D30    $AFE8   LD       I, $FE8         ; Load FE8 into I
$D32    $2D35   CALL     $D35            ; Call subroutine at D35
$D34    $B76D   JP       V0, $76D        ; Jump to V0 + 76D
$D36    $B179   JP       V0, $179        ; Jump to V0 + 179
$D38    $D51C   DRW      V5, V1, #C      ; Draw 12-byte sprite at V5, V1
$D3A    $2800   CALL     $800            ; Call subroutine at 800
$D3C    $C1AA   RND      V1, #AA         ; V1 = random & AA
$D3E    $9ACC   UNKNOWN  $9ACC           ; Unknown 9xxx instruction
$D40    $889E   SHL      V8              ; V8 <<= 1, VF = MSB
$D42    $570A   UNKNOWN  $570A           ; Unknown 5xxx instruction
$D44    $FD32   UNKNOWN  FD32            ; Unknown Fxxx instruction
$D46    $20C3   CALL     $0C3            ; Call subroutine at 0C3
$D48    $0008   SYS      $008            ; System call to 008
$D4A    $2CE1   CALL     $CE1            ; Call subroutine at CE1
$D4C    $C573   RND      V5, #73         ; V5 = random & 73
$D4E    $B55C   JP       V0, $55C        ; Jump to V0 + 55C
$D50    $FAC4   UNKNOWN  FAC4            ; Unknown Fxxx instruction
$D52    $9C56   UNKNOWN  $9C56           ; Unknown 9xxx instruction
$D54    $09E8   SYS      $9E8            ; System call to 9E8
$D56    $B0DA   JP       V0, $0DA        ; Jump to V0 + 0DA
$D58    $BB06   JP       V0, $B06        ; Jump to V0 + B06
$D5A    $1689   JP       $689            ; Jump to 689
$D5C    $A5B5   LD       I, $5B5         ; Load 5B5 into I
$D5E    $D006   DRW      V0, V0, #6      ; Draw 6-byte sprite at V0, V0
$D60    $9F77   UNKNOWN  $9F77           ; Unknown 9xxx instruction
$D62    $0E97   SYS      $E97            ; System call to E97
$D64    $D5D1   DRW      V5, VD, #1      ; Draw 1-byte sprite at V5, VD
$D66    $9296   UNKNOWN  $9296           ; Unknown 9xxx instruction
$D68    $978A   UNKNOWN  $978A           ; Unknown 9xxx instruction
$D6A    $4FE0   SNE      VF, #E0         ; Skip if VF != 224
$D6C    $BC18   JP       V0, $C18        ; Jump to V0 + C18
$D6E    $FEDC   UNKNOWN  FEDC            ; Unknown Fxxx instruction
$D70    $4D30   SNE      VD, #30         ; Skip if VD != 48
$D72    $0FD2   SYS      $FD2            ; System call to FD2
$D74    $17BB   JP       $7BB            ; Jump to 7BB
$D76    $6C11   LD       VC, #11         ; Load 17 into VC
$D78    $9A9E   UNKNOWN  $9A9E           ; Unknown 9xxx instruction
$D7A    $7523   ADD      V5, #23         ; Add 35 to V5
$D7C    $E02C   UNKNOWN  $E02C           ; Unknown Exxx instruction
$D7E    $480A   SNE      V8, #0A         ; Skip if V8 != 10
$D80    $2BBC   CALL     $BBC            ; Call subroutine at BBC
$D82    $F7EB   UNKNOWN  F7EB            ; Unknown Fxxx instruction
$D84    $598D   UNKNOWN  $598D           ; Unknown 5xxx instruction
$D86    $9907   UNKNOWN  $9907           ; Unknown 9xxx instruction
$D88    $F703   UNKNOWN  F703            ; Unknown Fxxx instruction
$D8A    $8500   LD       V5, V0          ; V5 = V0
$D8C    $F094   UNKNOWN  F094            ; Unknown Fxxx instruction
$D8E    $7F30   ADD      VF, #30         ; Add 48 to VF
$D90    $E7F3   UNKNOWN  $E7F3           ; Unknown Exxx instruction
$D92    $00F7   SYS      $0F7            ; System call to 0F7
$D94    $6582   LD       V5, #82         ; Load 130 into V5
$D96    $4C17   SNE      VC, #17         ; Skip if VC != 23
$D98    $4CE5   SNE      VC, #E5         ; Skip if VC != 229
$D9A    $CC03   RND      VC, #03         ; VC = random & 03
$D9C    $7F7A   ADD      VF, #7A         ; Add 122 to VF
$D9E    $0FD8   SYS      $FD8            ; System call to FD8
$DA0    $C7CE   RND      V7, #CE         ; V7 = random & CE
$DA2    $42B8   SNE      V2, #B8         ; Skip if V2 != 184
$DA4    $9412   UNKNOWN  $9412           ; Unknown 9xxx instruction
$DA6    $B645   JP       V0, $645        ; Jump to V0 + 645
$DA8    $EBF9   UNKNOWN  $EBF9           ; Unknown Exxx instruction
$DAA    $4C9B   SNE      VC, #9B         ; Skip if VC != 155
$DAC    $423C   SNE      V2, #3C         ; Skip if V2 != 60
$DAE    $6397   LD       V3, #97         ; Load 151 into V3
$DB0    $A567   LD       I, $567         ; Load 567 into I
$DB2    $2CE8   CALL     $CE8            ; Call subroutine at CE8
$DB4    $0FC5   SYS      $FC5            ; System call to FC5
$DB6    $C94A   RND      V9, #4A         ; V9 = random & 4A
$DB8    $16C3   JP       $6C3            ; Jump to 6C3
$DBA    $8560   LD       V5, V6          ; V5 = V6
$DBC    $5ABE   UNKNOWN  $5ABE           ; Unknown 5xxx instruction
$DBE    $3D88   SE       VD, #88         ; Skip if VD == 136
$DC0    $E34B   UNKNOWN  $E34B           ; Unknown Exxx instruction
$DC2    $4703   SNE      V7, #03         ; Skip if V7 != 3
$DC4    $08CE   SYS      $8CE            ; System call to 8CE
$DC6    $B3A0   JP       V0, $3A0        ; Jump to V0 + 3A0
$DC8    $9F5B   UNKNOWN  $9F5B           ; Unknown 9xxx instruction
$DCA    $59B5   UNKNOWN  $59B5           ; Unknown 5xxx instruction
$DCC    $08C3   SYS      $8C3            ; System call to 8C3
$DCE    $3322   SE       V3, #22         ; Skip if V3 == 34
$DD0    $ACAB   LD       I, $CAB         ; Load CAB into I
$DD2    $7355   ADD      V3, #55         ; Add 85 to V3
$DD4    $9757   UNKNOWN  $9757           ; Unknown 9xxx instruction
$DD6    $0FD4   SYS      $FD4            ; System call to FD4
$DD8    $9A12   UNKNOWN  $9A12           ; Unknown 9xxx instruction
$DDA    $08FF   SYS      $8FF            ; System call to 8FF
$DDC    $AE84   LD       I, $E84         ; Load E84 into I
$DDE    $9E4D   UNKNOWN  $9E4D           ; Unknown 9xxx instruction
$DE0    $BFC4   JP       V0, $FC4        ; Jump to V0 + FC4
$DE2    $B24B   JP       V0, $24B        ; Jump to V0 + 24B
$DE4    $0F80   SYS      $F80            ; System call to F80
$DE6    $1CA8   JP       $CA8            ; Jump to CA8
$DE8    $FAEB   UNKNOWN  FAEB            ; Unknown Fxxx instruction
$DEA    $5A53   UNKNOWN  $5A53           ; Unknown 5xxx instruction
$DEC    $5328   UNKNOWN  $5328           ; Unknown 5xxx instruction
$DEE    $C145   RND      V1, #45         ; V1 = random & 45
$DF0    $B219   JP       V0, $219        ; Jump to V0 + 219
$DF2    $4B8C   SNE      VB, #8C         ; Skip if VB != 140
$DF4    $B138   JP       V0, $138        ; Jump to V0 + 138
$DF6    $15A1   JP       $5A1            ; Jump to 5A1
$DF8    $1FF3   JP       $FF3            ; Jump to FF3
$DFA    $B9F6   JP       V0, $9F6        ; Jump to V0 + 9F6
$DFC    $E347   UNKNOWN  $E347           ; Unknown Exxx instruction
$DFE    $A8A1   LD       I, $8A1         ; Load 8A1 into I
$E00    $A7C2   LD       I, $7C2         ; Load 7C2 into I
$E02    $AD2E   LD       I, $D2E         ; Load D2E into I
$E04    $169B   JP       $69B            ; Jump to 69B
$E06    $57F9   UNKNOWN  $57F9           ; Unknown 5xxx instruction
$E08    $9A1C   UNKNOWN  $9A1C           ; Unknown 9xxx instruction
$E0A    $D217   DRW      V2, V1, #7      ; Draw 7-byte sprite at V2, V1
$E0C    $500F   UNKNOWN  $500F           ; Unknown 5xxx instruction
$E0E    $1DF3   JP       $DF3            ; Jump to DF3
$E10    $27D1   CALL     $7D1            ; Call subroutine at 7D1
$E12    $F094   UNKNOWN  F094            ; Unknown Fxxx instruction
$E14    $E906   UNKNOWN  $E906           ; Unknown Exxx instruction
$E16    $C9DB   RND      V9, #DB         ; V9 = random & DB
$E18    $0842   SYS      $842            ; System call to 842
$E1A    $28ED   CALL     $8ED            ; Call subroutine at 8ED
$E1C    $D1E8   DRW      V1, VE, #8      ; Draw 8-byte sprite at V1, VE
$E1E    $5A60   SE       VA, V6          ; Skip if VA == V6
$E20    $1599   JP       $599            ; Jump to 599
$E22    $1E1E   JP       $E1E            ; Jump to E1E
$E24    $8924   ADD      V9, V2          ; V9 += V2, VF = carry
$E26    $DA01   DRW      VA, V0, #1      ; Draw 1-byte sprite at VA, V0
$E28    $E83D   UNKNOWN  $E83D           ; Unknown Exxx instruction
$E2A    $E30F   UNKNOWN  $E30F           ; Unknown Exxx instruction
$E2C    $7133   ADD      V1, #33         ; Add 51 to V1
$E2E    $5497   UNKNOWN  $5497           ; Unknown 5xxx instruction
$E30    $388C   SE       V8, #8C         ; Skip if V8 == 140
$E32    $54A7   UNKNOWN  $54A7           ; Unknown 5xxx instruction
$E34    $97A7   UNKNOWN  $97A7           ; Unknown 9xxx instruction
$E36    $22BB   CALL     $2BB            ; Call subroutine at 2BB
$E38    $00A8   SYS      $0A8            ; System call to 0A8
$E3A    $51F6   UNKNOWN  $51F6           ; Unknown 5xxx instruction
$E3C    $D2E3   DRW      V2, VE, #3      ; Draw 3-byte sprite at V2, VE
$E3E    $C5EC   RND      V5, #EC         ; V5 = random & EC
$E40    $634F   LD       V3, #4F         ; Load 79 into V3
$E42    $284B   CALL     $84B            ; Call subroutine at 84B
$E44    $7B06   ADD      VB, #06         ; Add 6 to VB
$E46    $DC73   DRW      VC, V7, #3      ; Draw 3-byte sprite at VC, V7
$E48    $58B7   UNKNOWN  $58B7           ; Unknown 5xxx instruction
$E4A    $EF38   UNKNOWN  $EF38           ; Unknown Exxx instruction
$E4C    $3DBE   SE       VD, #BE         ; Skip if VD == 190
$E4E    $775A   ADD      V7, #5A         ; Add 90 to V7
$E50    $7E78   ADD      VE, #78         ; Add 120 to VE
$E52    $9A7D   UNKNOWN  $9A7D           ; Unknown 9xxx instruction
$E54    $5BEC   UNKNOWN  $5BEC           ; Unknown 5xxx instruction
$E56    $20A9   CALL     $0A9            ; Call subroutine at 0A9
$E58    $B5B8   JP       V0, $5B8        ; Jump to V0 + 5B8
$E5A    $3BCB   SE       VB, #CB         ; Skip if VB == 203
$E5C    $3FBF   SE       VF, #BF         ; Skip if VF == 191
$E5E    $40EB   SNE      V0, #EB         ; Skip if V0 != 235
$E60    $3D1D   SE       VD, #1D         ; Skip if VD == 29
$E62    $5476   UNKNOWN  $5476           ; Unknown 5xxx instruction
$E64    $B96C   JP       V0, $96C        ; Jump to V0 + 96C
$E66    $91FE   UNKNOWN  $91FE           ; Unknown 9xxx instruction
$E68    $B99D   JP       V0, $99D        ; Jump to V0 + 99D
$E6A    $9429   UNKNOWN  $9429           ; Unknown 9xxx instruction
$E6C    $41DF   SNE      V1, #DF         ; Skip if V1 != 223
$E6E    $34A4   SE       V4, #A4         ; Skip if V4 == 164
$E70    $77D7   ADD      V7, #D7         ; Add 215 to V7
$E72    $26E4   CALL     $6E4            ; Call subroutine at 6E4
$E74    $824B   UNKNOWN  824B            ; Unknown 8xxx instruction
$E76    $85E3   XOR      V5, VE          ; V5 ^= VE
$E78    $25D7   CALL     $5D7            ; Call subroutine at 5D7
$E7A    $3667   SE       V6, #67         ; Skip if V6 == 103
$E7C    $4D3A   SNE      VD, #3A         ; Skip if VD != 58
$E7E    $F86B   UNKNOWN  F86B            ; Unknown Fxxx instruction
$E80    $BCFB   JP       V0, $CFB        ; Jump to V0 + CFB
$E82    $AD98   LD       I, $D98         ; Load D98 into I
$E84    $17DE   JP       $7DE            ; Jump to 7DE
$E86    $B7CA   JP       V0, $7CA        ; Jump to V0 + 7CA
$E88    $9C49   UNKNOWN  $9C49           ; Unknown 9xxx instruction
$E8A    $F67C   UNKNOWN  F67C            ; Unknown Fxxx instruction
$E8C    $4252   SNE      V2, #52         ; Skip if V2 != 82
$E8E    $5215   UNKNOWN  $5215           ; Unknown 5xxx instruction
$E90    $1869   JP       $869            ; Jump to 869
$E92    $53C4   UNKNOWN  $53C4           ; Unknown 5xxx instruction
$E94    $0B86   SYS      $B86            ; System call to B86
$E96    $DD20   DRW      VD, V2, #0      ; Draw 0-byte sprite at VD, V2
$E98    $93F7   UNKNOWN  $93F7           ; Unknown 9xxx instruction
$E9A    $5435   UNKNOWN  $5435           ; Unknown 5xxx instruction
$E9C    $B480   JP       V0, $480        ; Jump to V0 + 480
$E9E    $8585   SUB      V5, V8          ; V5 -= V8, VF = !borrow
$EA0    $D2C3   DRW      V2, VC, #3      ; Draw 3-byte sprite at V2, VC
$EA2    $717B   ADD      V1, #7B         ; Add 123 to V1
$EA4    $DD8B   DRW      VD, V8, #B      ; Draw 11-byte sprite at VD, V8
$EA6    $B636   JP       V0, $636        ; Jump to V0 + 636
$EA8    $7CE9   ADD      VC, #E9         ; Add 233 to VC
$EAA    $D2BF   DRW      V2, VB, #F      ; Draw 15-byte sprite at V2, VB
$EAC    $E7A8   UNKNOWN  $E7A8           ; Unknown Exxx instruction
$EAE    $DE57   DRW      VE, V5, #7      ; Draw 7-byte sprite at VE, V5
$EB0    $A621   LD       I, $621         ; Load 621 into I
$EB2    $C198   RND      V1, #98         ; V1 = random & 98
$EB4    $79FF   ADD      V9, #FF         ; Add 255 to V9
$EB6    $27F3   CALL     $7F3            ; Call subroutine at 7F3
$EB8    $EA3E   UNKNOWN  $EA3E           ; Unknown Exxx instruction
$EBA    $143E   JP       $43E            ; Jump to 43E
$EBC    $9560   SNE      V5, V6          ; Skip if V5 != V6
$EBE    $0342   SYS      $342            ; System call to 342
$EC0    $57FF   UNKNOWN  $57FF           ; Unknown 5xxx instruction
$EC2    $4731   SNE      V7, #31         ; Skip if V7 != 49
$EC4    $9F2F   UNKNOWN  $9F2F           ; Unknown 9xxx instruction
$EC6    $2FC8   CALL     $FC8            ; Call subroutine at FC8
$EC8    $1DDB   JP       $DDB            ; Jump to DDB
$ECA    $9ECC   UNKNOWN  $9ECC           ; Unknown 9xxx instruction
$ECC    $93EC   UNKNOWN  $93EC           ; Unknown 9xxx instruction
$ECE    $1695   JP       $695            ; Jump to 695
$ED0    $4ED9   SNE      VE, #D9         ; Skip if VE != 217
$ED2    $38EC   SE       V8, #EC         ; Skip if V8 == 236
$ED4    $F60F   UNKNOWN  F60F            ; Unknown Fxxx instruction
$ED6    $7A3E   ADD      VA, #3E         ; Add 62 to VA
$ED8    $CF99   RND      VF, #99         ; VF = random & 99
$EDA    $B54A   JP       V0, $54A        ; Jump to V0 + 54A
$EDC    $A4B5   LD       I, $4B5         ; Load 4B5 into I
$EDE    $66B8   LD       V6, #B8         ; Load 184 into V6
$EE0    $7BE9   ADD      VB, #E9         ; Add 233 to VB
$EE2    $B357   JP       V0, $357        ; Jump to V0 + 357
$EE4    $9D82   UNKNOWN  $9D82           ; Unknown 9xxx instruction
$EE6    $5B1A   UNKNOWN  $5B1A           ; Unknown 5xxx instruction
$EE8    $D5A3   DRW      V5, VA, #3      ; Draw 3-byte sprite at V5, VA
$EEA    $8B3D   UNKNOWN  8B3D            ; Unknown 8xxx instruction
$EEC    $7544   ADD      V5, #44         ; Add 68 to V5
$EEE    $3CA6   SE       VC, #A6         ; Skip if VC == 166
$EF0    $6177   LD       V1, #77         ; Load 119 into V1
$EF2    $45E9   SNE      V5, #E9         ; Skip if V5 != 233
$EF4    $AA9F   LD       I, $A9F         ; Load A9F into I
$EF6    $9F5D   UNKNOWN  $9F5D           ; Unknown 9xxx instruction
$EF8    $1988   JP       $988            ; Jump to 988
$EFA    $8CFA   UNKNOWN  8CFA            ; Unknown 8xxx instruction
$EFC    $8267   SUBN     V2, V6          ; V2 = V6 - V2, VF = !borrow
$EFE    $0A73   SYS      $A73            ; System call to A73
$F00    $49B9   SNE      V9, #B9         ; Skip if V9 != 185
$F02    $C994   RND      V9, #94         ; V9 = random & 94
$F04    $70C6   ADD      V0, #C6         ; Add 198 to V0
$F06    $9F45   UNKNOWN  $9F45           ; Unknown 9xxx instruction
$F08    $57E9   UNKNOWN  $57E9           ; Unknown 5xxx instruction
$F0A    $9427   UNKNOWN  $9427           ; Unknown 9xxx instruction
$F0C    $BF85   JP       V0, $F85        ; Jump to V0 + F85
$F0E    $1C29   JP       $C29            ; Jump to C29
$F10    $4157   SNE      V1, #57         ; Skip if V1 != 87
$F12    $BF00   JP       V0, $F00        ; Jump to V0 + F00
$F14    $9251   UNKNOWN  $9251           ; Unknown 9xxx instruction
$F16    $EE17   UNKNOWN  $EE17           ; Unknown Exxx instruction
$F18    $A069   LD       I, $069         ; Load 069 into I
$F1A    $3D01   SE       VD, #01         ; Skip if VD == 1
$F1C    $F362   UNKNOWN  F362            ; Unknown Fxxx instruction
$F1E    $E5EA   UNKNOWN  $E5EA           ; Unknown Exxx instruction
$F20    $2ED6   CALL     $ED6            ; Call subroutine at ED6
$F22    $0A32   SYS      $A32            ; System call to A32
$F24    $D98E   DRW      V9, V8, #E      ; Draw 14-byte sprite at V9, V8
$F26    $D20A   DRW      V2, V0, #A      ; Draw 10-byte sprite at V2, V0
$F28    $2060   CALL     $060            ; Call subroutine at 060
$F2A    $0789   SYS      $789            ; System call to 789
$F2C    $15B2   JP       $5B2            ; Jump to 5B2
$F2E    $2AF7   CALL     $AF7            ; Call subroutine at AF7
$F30    $3243   SE       V2, #43         ; Skip if V2 == 67
$F32    $0E99   SYS      $E99            ; System call to E99
$F34    $11E6   JP       $1E6            ; Jump to 1E6
$F36    $4BCA   SNE      VB, #CA         ; Skip if VB != 202
$F38    $8EE6   SHR      VE              ; VE >>= 1, VF = LSB
$F3A    $5ECA   UNKNOWN  $5ECA           ; Unknown 5xxx instruction
$F3C    $386E   SE       V8, #6E         ; Skip if V8 == 110
$F3E    $5C47   UNKNOWN  $5C47           ; Unknown 5xxx instruction
$F40    $4839   SNE      V8, #39         ; Skip if V8 != 57
$F42    $9AD5   UNKNOWN  $9AD5           ; Unknown 9xxx instruction
$F44    $A87E   LD       I, $87E         ; Load 87E into I
$F46    $D6C8   DRW      V6, VC, #8      ; Draw 8-byte sprite at V6, VC
$F48    $1B4F   JP       $B4F            ; Jump to B4F
$F4A    $4C83   SNE      VC, #83         ; Skip if VC != 131
$F4C    $20BD   CALL     $0BD            ; Call subroutine at 0BD
$F4E    $9199   UNKNOWN  $9199           ; Unknown 9xxx instruction
$F50    $1A86   JP       $A86            ; Jump to A86
$F52    $F837   UNKNOWN  F837            ; Unknown Fxxx instruction
$F54    $8778   UNKNOWN  8778            ; Unknown 8xxx instruction
$F56    $C62C   RND      V6, #2C         ; V6 = random & 2C
$F58    $BF91   JP       V0, $F91        ; Jump to V0 + F91
$F5A    $E592   UNKNOWN  $E592           ; Unknown Exxx instruction
$F5C    $8342   AND      V3, V4          ; V3 &= V4
$F5E    $8B6C   UNKNOWN  8B6C            ; Unknown 8xxx instruction
$F60    $FB9F   UNKNOWN  FB9F            ; Unknown Fxxx instruction
$F62    $C975   RND      V9, #75         ; V9 = random & 75
$F64    $0B44   SYS      $B44            ; System call to B44
$F66    $213C   CALL     $13C            ; Call subroutine at 13C
$F68    $C745   RND      V7, #45         ; V7 = random & 45
$F6A    $C6B2   RND      V6, #B2         ; V6 = random & B2
$F6C    $0F12   SYS      $F12            ; System call to F12
$F6E    $2DD5   CALL     $DD5            ; Call subroutine at DD5
$F70    $775D   ADD      V7, #5D         ; Add 93 to V7
$F72    $7EB9   ADD      VE, #B9         ; Add 185 to VE
$F74    $EF2C   UNKNOWN  $EF2C           ; Unknown Exxx instruction
$F76    $D0E0   DRW      V0, VE, #0      ; Draw 0-byte sprite at V0, VE
$F78    $BEFF   JP       V0, $EFF        ; Jump to V0 + EFF
$F7A    $8CE1   OR       VC, VE          ; VC |= VE
$F7C    $2D87   CALL     $D87            ; Call subroutine at D87
$F7E    $DFD1   DRW      VF, VD, #1      ; Draw 1-byte sprite at VF, VD
$F80    $59C8   UNKNOWN  $59C8           ; Unknown 5xxx instruction
$F82    $9265   UNKNOWN  $9265           ; Unknown 9xxx instruction
$F84    $DF8F   DRW      VF, V8, #F      ; Draw 15-byte sprite at VF, V8
$F86    $10DD   JP       $0DD            ; Jump to 0DD
$F88    $5675   UNKNOWN  $5675           ; Unknown 5xxx instruction
$F8A    $AB3D   LD       I, $B3D         ; Load B3D into I
$F8C    $CB1E   RND      VB, #1E         ; VB = random & 1E
$F8E    $81EB   UNKNOWN  81EB            ; Unknown 8xxx instruction
$F90    $C6F8   RND      V6, #F8         ; V6 = random & F8
$F92    $DFBA   DRW      VF, VB, #A      ; Draw 10-byte sprite at VF, VB
$F94    $2E3C   CALL     $E3C            ; Call subroutine at E3C
$F96    $A531   LD       I, $531         ; Load 531 into I
$F98    $4CF1   SNE      VC, #F1         ; Skip if VC != 241
$F9A    $E580   UNKNOWN  $E580           ; Unknown Exxx instruction
$F9C    $6CAD   LD       VC, #AD         ; Load 173 into VC
$F9E    $6106   LD       V1, #06         ; Load 6 into V1
$FA0    $CC7A   RND      VC, #7A         ; VC = random & 7A
$FA2    $3B4B   SE       VB, #4B         ; Skip if VB == 75
$FA4    $189E   JP       $89E            ; Jump to 89E
$FA6    $9373   UNKNOWN  $9373           ; Unknown 9xxx instruction
$FA8    $6E35   LD       VE, #35         ; Load 53 into VE
$FAA    $CF7E   RND      VF, #7E         ; VF = random & 7E
$FAC    $6DE6   LD       VD, #E6         ; Load 230 into VD
$FAE    $63DC   LD       V3, #DC         ; Load 220 into V3
$FB0    $B32B   JP       V0, $32B        ; Jump to V0 + 32B
$FB2    $478A   SNE      V7, #8A         ; Skip if V7 != 138
$FB4    $FC31   UNKNOWN  FC31            ; Unknown Fxxx instruction
$FB6    $3B7E   SE       VB, #7E         ; Skip if VB == 126
$FB8    $B404   JP       V0, $404        ; Jump to V0 + 404
$FBA    $B237   JP       V0, $237        ; Jump to V0 + 237
$FBC    $8EB7   SUBN     VE, VB          ; VE = VB - VE, VF = !borrow
$FBE    $1E26   JP       $E26            ; Jump to E26
$FC0    $C02F   RND      V0, #2F         ; V0 = random & 2F
$FC2    $DE88   DRW      VE, V8, #8      ; Draw 8-byte sprite at VE, V8
$FC4    $58EF   UNKNOWN  $58EF           ; Unknown 5xxx instruction
$FC6    $70A1   ADD      V0, #A1         ; Add 161 to V0
$FC8    $A6C0   LD       I, $6C0         ; Load 6C0 into I
$FCA    $B3CF   JP       V0, $3CF        ; Jump to V0 + 3CF
$FCC    $548F   UNKNOWN  $548F           ; Unknown 5xxx instruction
$FCE    $6732   LD       V7, #32         ; Load 50 into V7
$FD0    $8039   UNKNOWN  8039            ; Unknown 8xxx instruction
$FD2    $1474   JP       $474            ; Jump to 474
$FD4    $E2F7   UNKNOWN  $E2F7           ; Unknown Exxx instruction
$FD6    $D04D   DRW      V0, V4, #D      ; Draw 13-byte sprite at V0, V4
$FD8    $8D79   UNKNOWN  8D79            ; Unknown 8xxx instruction
$FDA    $AD61   LD       I, $D61         ; Load D61 into I
$FDC    $2F7F   CALL     $F7F            ; Call subroutine at F7F
$FDE    $C04B   RND      V0, #4B         ; V0 = random & 4B
$FE0    $33AD   SE       V3, #AD         ; Skip if V3 == 173
$FE2    $AA66   LD       I, $A66         ; Load A66 into I
$FE4    $7BC9   ADD      VB, #C9         ; Add 201 to VB
$FE6    $0DF4   SYS      $DF4            ; System call to DF4
$FE8    $FB1F   UNKNOWN  FB1F            ; Unknown Fxxx instruction
$FEA    $5E58   UNKNOWN  $5E58           ; Unknown 5xxx instruction
$FEC    $A2A5   LD       I, $2A5         ; Load 2A5 into I
$FEE    $0254   SYS      $254            ; System call to 254
$FF0    $A38F   LD       I, $38F         ; Load 38F into I
$FF2    $0B9D   SYS      $B9D            ; System call to B9D
$FF4    $34B0   SE       V4, #B0         ; Skip if V4 == 176
$FF6    $A2F1   LD       I, $2F1         ; Load 2F1 into I
$FF8    $5C29   UNKNOWN  $5C29           ; Unknown 5xxx instruction
$FFA    $4259   SNE      V2, #59         ; Skip if V2 != 89
$FFC    $BC6A   JP       V0, $C6A        ; Jump to V0 + C6A
$FFE    $14E2   JP       $4E2            ; Jump to 4E2

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 495 (27.6%)
  JP      : 249 (13.9%)
  LD      : 222 (12.4%)
  SYS     : 117 ( 6.5%)
  SE      : 116 ( 6.5%)
  SNE     : 115 ( 6.4%)
  ADD     : 113 ( 6.3%)
  DRW     : 109 ( 6.1%)
  CALL    : 107 ( 6.0%)
  RND     : 102 ( 5.7%)
  SHL     :  11 ( 0.6%)
  XOR     :   9 ( 0.5%)
  SUBN    :   7 ( 0.4%)
  AND     :   7 ( 0.4%)
  OR      :   5 ( 0.3%)
  SUB     :   5 ( 0.3%)
  SHR     :   3 ( 0.2%)

Memory Operations: 335 (18.7%)
Arithmetic Operations: 146 (8.1%)
