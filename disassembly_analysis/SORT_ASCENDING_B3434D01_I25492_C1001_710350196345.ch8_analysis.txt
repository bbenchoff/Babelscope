
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B3434D01_I25492_C1001_710350196345.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 3434
Instance: 25492
Direction: ascending
Final Array: [2, 3, 4, 39, 98, 155, 175, 187]
Operations: R:0 W:1 C:77 S:15

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 109
Sort Array References:
  $200: LD I, $0CE ; Load 0CE into I
  $216: LD I, $BFA ; Load BFA into I
  $228: LD I, $CD4 ; Load CD4 into I
  $262: LD I, $CEC ; Load CEC into I
  $27C: LD I, $CE1 ; Load CE1 into I
  $2A8: LD I, $FD9 ; Load FD9 into I
  $2E4: LD I, $21D ; Load 21D into I
  $2EC: LD I, $3B3 ; Load 3B3 into I
  $306: LD I, $FBB ; Load FBB into I
  $340: LD I, $418 ; Load 418 into I
  $348: LD I, $0BA ; Load 0BA into I
  $35A: LD I, $7C3 ; Load 7C3 into I
  $362: LD I, $3FC ; Load 3FC into I
  $37C: LD I, $2E7 ; Load 2E7 into I
  $3AA: LD I, $72B ; Load 72B into I
  $3B0: LD I, $931 ; Load 931 into I
  $3DE: LD I, $28B ; Load 28B into I
  $40C: LD I, $8FE ; Load 8FE into I
  $41E: LD I, $8F2 ; Load 8F2 into I
  $430: LD I, $C02 ; Load C02 into I
  $436: LD I, $DB4 ; Load DB4 into I
  $46E: LD I, $B52 ; Load B52 into I
  $47A: LD I, $DDC ; Load DDC into I
  $48C: LD I, $EE5 ; Load EE5 into I
  $496: LD I, $AF9 ; Load AF9 into I
  $4A2: LD I, $D8E ; Load D8E into I
  $52C: LD I, $450 ; Load 450 into I
  $548: LD I, $95A ; Load 95A into I
  $54A: LD I, $DBE ; Load DBE into I
  $56A: LD I, $CC3 ; Load CC3 into I
  $582: LD I, $AE0 ; Load AE0 into I
  $598: LD I, $079 ; Load 079 into I
  $5A0: LD I, $CC9 ; Load CC9 into I
  $5A2: LD I, $A8A ; Load A8A into I
  $5B8: LD I, $836 ; Load 836 into I
  $5CE: LD I, $255 ; Load 255 into I
  $5D0: LD I, $31E ; Load 31E into I
  $5F0: LD I, $B5E ; Load B5E into I
  $610: LD I, $468 ; Load 468 into I
  $66A: LD I, $9B7 ; Load 9B7 into I
  $676: LD I, $3E5 ; Load 3E5 into I
  $67E: LD I, $0DB ; Load 0DB into I
  $6D0: LD I, $388 ; Load 388 into I
  $702: LD I, $371 ; Load 371 into I
  $73C: LD I, $D92 ; Load D92 into I
  $762: LD I, $B3D ; Load B3D into I
  $768: LD I, $B9A ; Load B9A into I
  $7D2: LD I, $5CF ; Load 5CF into I
  $7E6: LD I, $1CB ; Load 1CB into I
  $7F2: LD I, $DD4 ; Load DD4 into I
  $880: LD I, $2E6 ; Load 2E6 into I
  $894: LD I, $34C ; Load 34C into I
  $8D4: LD I, $6FD ; Load 6FD into I
  $8E0: LD I, $DCC ; Load DCC into I
  $8F4: LD I, $CBE ; Load CBE into I
  $920: LD I, $ED5 ; Load ED5 into I
  $94E: LD I, $A6C ; Load A6C into I
  $950: LD I, $388 ; Load 388 into I
  $956: LD I, $E9D ; Load E9D into I
  $962: LD V2, [I] ; Load V0-V2 from I
  $966: LD I, $934 ; Load 934 into I
  $992: LD I, $906 ; Load 906 into I
  $998: LD I, $CBD ; Load CBD into I
  $99E: LD I, $2E7 ; Load 2E7 into I
  $9CA: LD I, $0A2 ; Load 0A2 into I
  $A40: LD I, $A21 ; Load A21 into I
  $A46: LD I, $10C ; Load 10C into I
  $A5A: LD I, $369 ; Load 369 into I
  $A72: LD I, $2A9 ; Load 2A9 into I
  $A8C: LD I, $BAF ; Load BAF into I
  $A8E: LD I, $5EE ; Load 5EE into I
  $AE4: LD I, $55D ; Load 55D into I
  $B2A: LD I, $FEC ; Load FEC into I
  $B3E: LD I, $44A ; Load 44A into I
  $B80: LD I, $F6E ; Load F6E into I
  $B88: LD I, $A28 ; Load A28 into I
  $BCC: LD I, $1DA ; Load 1DA into I
  $BD4: LD I, $4DD ; Load 4DD into I
  $BE6: LD I, $F8A ; Load F8A into I
  $BFA: LD I, $FEE ; Load FEE into I
  $C0E: LD I, $9D1 ; Load 9D1 into I
  $C14: LD I, $F20 ; Load F20 into I
  $C36: LD V5, [I] ; Load V0-V5 from I
  $C3A: LD I, $CCC ; Load CCC into I
  $C3C: LD I, $66D ; Load 66D into I
  $CBA: LD I, $007 ; Load 007 into I
  $CBC: LD I, $276 ; Load 276 into I
  $CCE: LD I, $AC6 ; Load AC6 into I
  $D74: LD I, $678 ; Load 678 into I
  $D98: LD I, $B2E ; Load B2E into I
  $DA6: LD I, $DA7 ; Load DA7 into I
  $DAC: LD I, $851 ; Load 851 into I
  $DD6: LD I, $7C7 ; Load 7C7 into I
  $DDE: LD I, $F59 ; Load F59 into I
  $E14: LD I, $24D ; Load 24D into I
  $E3E: LD I, $13E ; Load 13E into I
  $E54: LD I, $9FB ; Load 9FB into I
  $E5E: LD I, $A6C ; Load A6C into I
  $E86: LD I, $1E3 ; Load 1E3 into I
  $E9C: LD I, $B7A ; Load B7A into I
  $EB4: LD I, $FD7 ; Load FD7 into I
  $EC8: LD I, $91B ; Load 91B into I
  $EEA: LD I, $168 ; Load 168 into I
  $F3E: LD I, $3FF ; Load 3FF into I
  $F40: LD I, $91A ; Load 91A into I
  $F46: LD I, $CCE ; Load CCE into I
  $F6C: LD I, $34A ; Load 34A into I
  $F8C: LD I, $735 ; Load 735 into I
  $F98: LD I, $347 ; Load 347 into I

CONTROL FLOW ANALYSIS:
Jumps: 249
Calls: 111
Branches: 255
Loops: 136
Loop Structures:
  $22E -> $011 (backward jump)
  $240 -> $0F1 (backward jump)
  $278 -> $05A (backward jump)
  $382 -> $289 (backward jump)
  $3A8 -> $099 (backward jump)
  $444 -> $2AC (backward jump)
  $44C -> $327 (backward jump)
  $488 -> $331 (backward jump)
  $49C -> $0E4 (backward jump)
  $4AE -> $43F (backward jump)
  $4C6 -> $0E7 (backward jump)
  $4CA -> $41F (backward jump)
  $4F4 -> $266 (backward jump)
  $50C -> $3ED (backward jump)
  $52A -> $1EF (backward jump)
  $53E -> $167 (backward jump)
  $57E -> $284 (backward jump)
  $588 -> $040 (backward jump)
  $5C2 -> $19C (backward jump)
  $5F4 -> $18D (backward jump)
  $5FA -> $19A (backward jump)
  $602 -> $440 (backward jump)
  $60A -> $606 (backward jump)
  $634 -> $257 (backward jump)
  $640 -> $46A (backward jump)
  $66C -> $4BE (backward jump)
  $69A -> $5E1 (backward jump)
  $722 -> $4B5 (backward jump)
  $75E -> $07B (backward jump)
  $774 -> $40A (backward jump)
  $786 -> $596 (backward jump)
  $7B0 -> $3D4 (backward jump)
  $7B8 -> $290 (backward jump)
  $7F6 -> $577 (backward jump)
  $7FA -> $256 (backward jump)
  $81E -> $1A6 (backward jump)
  $89E -> $382 (backward jump)
  $8B8 -> $153 (backward jump)
  $8E2 -> $22A (backward jump)
  $902 -> $5D6 (backward jump)
  $910 -> $080 (backward jump)
  $938 -> $229 (backward jump)
  $93E -> $5A8 (backward jump)
  $98A -> $461 (backward jump)
  $9D0 -> $7D6 (backward jump)
  $9D6 -> $00A (backward jump)
  $9DA -> $890 (backward jump)
  $9EA -> $568 (backward jump)
  $9F4 -> $6F4 (backward jump)
  $9F6 -> $2AF (backward jump)
  $A28 -> $013 (backward jump)
  $A4E -> $3CB (backward jump)
  $A54 -> $373 (backward jump)
  $A64 -> $39F (backward jump)
  $A70 -> $A16 (backward jump)
  $A80 -> $1E4 (backward jump)
  $A8A -> $949 (backward jump)
  $A96 -> $44C (backward jump)
  $A9E -> $A8B (backward jump)
  $AA0 -> $6F2 (backward jump)
  $AA2 -> $902 (backward jump)
  $AA4 -> $722 (backward jump)
  $AA6 -> $89C (backward jump)
  $AB4 -> $5B1 (backward jump)
  $AD6 -> $48A (backward jump)
  $ADA -> $85C (backward jump)
  $AF6 -> $522 (backward jump)
  $B26 -> $67E (backward jump)
  $B3A -> $01A (backward jump)
  $B44 -> $105 (backward jump)
  $B82 -> $269 (backward jump)
  $B94 -> $1E2 (backward jump)
  $BA8 -> $A29 (backward jump)
  $BBE -> $742 (backward jump)
  $BC6 -> $089 (backward jump)
  $BDE -> $235 (backward jump)
  $BE0 -> $B73 (backward jump)
  $C06 -> $2B7 (backward jump)
  $C38 -> $97F (backward jump)
  $C48 -> $9CC (backward jump)
  $C86 -> $836 (backward jump)
  $C98 -> $3E2 (backward jump)
  $C9A -> $1CA (backward jump)
  $CB6 -> $ABB (backward jump)
  $CBE -> $1C0 (backward jump)
  $CE2 -> $011 (backward jump)
  $CEE -> $A3E (backward jump)
  $CF4 -> $563 (backward jump)
  $D34 -> $59B (backward jump)
  $D60 -> $955 (backward jump)
  $D78 -> $1CF (backward jump)
  $D84 -> $695 (backward jump)
  $D94 -> $2DC (backward jump)
  $DB2 -> $B0D (backward jump)
  $DC4 -> $876 (backward jump)
  $DC8 -> $BB9 (backward jump)
  $DDA -> $70F (backward jump)
  $DEC -> $2C4 (backward jump)
  $DF0 -> $3D0 (backward jump)
  $DF4 -> $037 (backward jump)
  $E04 -> $856 (backward jump)
  $E26 -> $D0F (backward jump)
  $E42 -> $73B (backward jump)
  $E46 -> $11E (backward jump)
  $E4C -> $9E4 (backward jump)
  $E50 -> $429 (backward jump)
  $E58 -> $7E5 (backward jump)
  $E6C -> $578 (backward jump)
  $E6E -> $B9F (backward jump)
  $E70 -> $AA7 (backward jump)
  $E76 -> $527 (backward jump)
  $E88 -> $18C (backward jump)
  $E90 -> $01F (backward jump)
  $EA8 -> $197 (backward jump)
  $EBC -> $32D (backward jump)
  $EC2 -> $219 (backward jump)
  $ECE -> $CDE (backward jump)
  $EE8 -> $58D (backward jump)
  $F18 -> $B62 (backward jump)
  $F1C -> $259 (backward jump)
  $F2A -> $ADE (backward jump)
  $F2C -> $E72 (backward jump)
  $F2E -> $B22 (backward jump)
  $F36 -> $975 (backward jump)
  $F56 -> $4F3 (backward jump)
  $F66 -> $5B1 (backward jump)
  $F7E -> $25E (backward jump)
  $F82 -> $CF0 (backward jump)
  $F8A -> $9D7 (backward jump)
  $F9E -> $32E (backward jump)
  $FBA -> $E75 (backward jump)
  $FC0 -> $6F6 (backward jump)
  $FCC -> $975 (backward jump)
  $FD2 -> $DBD (backward jump)
  $FE0 -> $3E7 (backward jump)
  $FF6 -> $C0F (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $A0CE   LD       I, $0CE         ; Load 0CE into I
$202    $7AE1   ADD      VA, #E1         ; Add 225 to VA
$204    $BC49   JP       V0, $C49        ; Jump to V0 + C49
$206    $B227   JP       V0, $227        ; Jump to V0 + 227
$208    $CADE   RND      VA, #DE         ; VA = random & DE
$20A    $4140   SNE      V1, #40         ; Skip if V1 != 64
$20C    $F8A8   UNKNOWN  F8A8            ; Unknown Fxxx instruction
$20E    $9621   UNKNOWN  $9621           ; Unknown 9xxx instruction
$210    $45E5   SNE      V5, #E5         ; Skip if V5 != 229
$212    $6860   LD       V8, #60         ; Load 96 into V8
$214    $1DF1   JP       $DF1            ; Jump to DF1
$216    $ABFA   LD       I, $BFA         ; Load BFA into I
$218    $33C6   SE       V3, #C6         ; Skip if V3 == 198
$21A    $9F2C   UNKNOWN  $9F2C           ; Unknown 9xxx instruction
$21C    $C973   RND      V9, #73         ; V9 = random & 73
$21E    $3315   SE       V3, #15         ; Skip if V3 == 21
$220    $7C3A   ADD      VC, #3A         ; Add 58 to VC
$222    $E7C7   UNKNOWN  $E7C7           ; Unknown Exxx instruction
$224    $178F   JP       $78F            ; Jump to 78F
$226    $EE53   UNKNOWN  $EE53           ; Unknown Exxx instruction
$228    $ACD4   LD       I, $CD4         ; Load CD4 into I
$22A    $E993   UNKNOWN  $E993           ; Unknown Exxx instruction
$22C    $D59E   DRW      V5, V9, #E      ; Draw 14-byte sprite at V5, V9
$22E    $B011   JP       V0, $011        ; Jump to V0 + 011
$230    $6D2E   LD       VD, #2E         ; Load 46 into VD
$232    $CA04   RND      VA, #04         ; VA = random & 04
$234    $BC73   JP       V0, $C73        ; Jump to V0 + C73
$236    $E873   UNKNOWN  $E873           ; Unknown Exxx instruction
$238    $3310   SE       V3, #10         ; Skip if V3 == 16
$23A    $64DD   LD       V4, #DD         ; Load 221 into V4
$23C    $61BC   LD       V1, #BC         ; Load 188 into V1
$23E    $472C   SNE      V7, #2C         ; Skip if V7 != 44
$240    $10F1   JP       $0F1            ; Jump to 0F1
$242    $C61A   RND      V6, #1A         ; V6 = random & 1A
$244    $16D8   JP       $6D8            ; Jump to 6D8
$246    $7F73   ADD      VF, #73         ; Add 115 to VF
$248    $F831   UNKNOWN  F831            ; Unknown Fxxx instruction
$24A    $CDA9   RND      VD, #A9         ; VD = random & A9
$24C    $D611   DRW      V6, V1, #1      ; Draw 1-byte sprite at V6, V1
$24E    $3FB3   SE       VF, #B3         ; Skip if VF == 179
$250    $7E0C   ADD      VE, #0C         ; Add 12 to VE
$252    $BDFA   JP       V0, $DFA        ; Jump to V0 + DFA
$254    $3B5D   SE       VB, #5D         ; Skip if VB == 93
$256    $6B51   LD       VB, #51         ; Load 81 into VB
$258    $6119   LD       V1, #19         ; Load 25 into V1
$25A    $1F23   JP       $F23            ; Jump to F23
$25C    $438C   SNE      V3, #8C         ; Skip if V3 != 140
$25E    $1578   JP       $578            ; Jump to 578
$260    $9C3B   UNKNOWN  $9C3B           ; Unknown 9xxx instruction
$262    $ACEC   LD       I, $CEC         ; Load CEC into I
$264    $FE81   UNKNOWN  FE81            ; Unknown Fxxx instruction
$266    $EE87   UNKNOWN  $EE87           ; Unknown Exxx instruction
$268    $72D3   ADD      V2, #D3         ; Add 211 to V2
$26A    $89D9   UNKNOWN  89D9            ; Unknown 8xxx instruction
$26C    $BD85   JP       V0, $D85        ; Jump to V0 + D85
$26E    $729E   ADD      V2, #9E         ; Add 158 to V2
$270    $8E44   ADD      VE, V4          ; VE += V4, VF = carry
$272    $1DC0   JP       $DC0            ; Jump to DC0
$274    $0090   SYS      $090            ; System call to 090
$276    $48E9   SNE      V8, #E9         ; Skip if V8 != 233
$278    $105A   JP       $05A            ; Jump to 05A
$27A    $BB0E   JP       V0, $B0E        ; Jump to V0 + B0E
$27C    $ACE1   LD       I, $CE1         ; Load CE1 into I
$27E    $84BB   UNKNOWN  84BB            ; Unknown 8xxx instruction
$280    $F22F   UNKNOWN  F22F            ; Unknown Fxxx instruction
$282    $B458   JP       V0, $458        ; Jump to V0 + 458
$284    $88EB   UNKNOWN  88EB            ; Unknown 8xxx instruction
$286    $374B   SE       V7, #4B         ; Skip if V7 == 75
$288    $4710   SNE      V7, #10         ; Skip if V7 != 16
$28A    $6412   LD       V4, #12         ; Load 18 into V4
$28C    $655B   LD       V5, #5B         ; Load 91 into V5
$28E    $2590   CALL     $590            ; Call subroutine at 590
$290    $28AF   CALL     $8AF            ; Call subroutine at 8AF
$292    $DEB2   DRW      VE, VB, #2      ; Draw 2-byte sprite at VE, VB
$294    $0D3C   SYS      $D3C            ; System call to D3C
$296    $89B1   OR       V9, VB          ; V9 |= VB
$298    $2128   CALL     $128            ; Call subroutine at 128
$29A    $F4E6   UNKNOWN  F4E6            ; Unknown Fxxx instruction
$29C    $1566   JP       $566            ; Jump to 566
$29E    $4E3A   SNE      VE, #3A         ; Skip if VE != 58
$2A0    $5F5E   UNKNOWN  $5F5E           ; Unknown 5xxx instruction
$2A2    $719C   ADD      V1, #9C         ; Add 156 to V1
$2A4    $3B6F   SE       VB, #6F         ; Skip if VB == 111
$2A6    $DE04   DRW      VE, V0, #4      ; Draw 4-byte sprite at VE, V0
$2A8    $AFD9   LD       I, $FD9         ; Load FD9 into I
$2AA    $B505   JP       V0, $505        ; Jump to V0 + 505
$2AC    $5E4F   UNKNOWN  $5E4F           ; Unknown 5xxx instruction
$2AE    $019F   SYS      $19F            ; System call to 19F
$2B0    $431D   SNE      V3, #1D         ; Skip if V3 != 29
$2B2    $B942   JP       V0, $942        ; Jump to V0 + 942
$2B4    $C4BD   RND      V4, #BD         ; V4 = random & BD
$2B6    $28B0   CALL     $8B0            ; Call subroutine at 8B0
$2B8    $C087   RND      V0, #87         ; V0 = random & 87
$2BA    $5B4D   UNKNOWN  $5B4D           ; Unknown 5xxx instruction
$2BC    $664C   LD       V6, #4C         ; Load 76 into V6
$2BE    $6361   LD       V3, #61         ; Load 97 into V3
$2C0    $EEEE   UNKNOWN  $EEEE           ; Unknown Exxx instruction
$2C2    $C985   RND      V9, #85         ; V9 = random & 85
$2C4    $1688   JP       $688            ; Jump to 688
$2C6    $BA1F   JP       V0, $A1F        ; Jump to V0 + A1F
$2C8    $5164   UNKNOWN  $5164           ; Unknown 5xxx instruction
$2CA    $20CC   CALL     $0CC            ; Call subroutine at 0CC
$2CC    $6B62   LD       VB, #62         ; Load 98 into VB
$2CE    $43C3   SNE      V3, #C3         ; Skip if V3 != 195
$2D0    $DB42   DRW      VB, V4, #2      ; Draw 2-byte sprite at VB, V4
$2D2    $E198   UNKNOWN  $E198           ; Unknown Exxx instruction
$2D4    $3176   SE       V1, #76         ; Skip if V1 == 118
$2D6    $48D6   SNE      V8, #D6         ; Skip if V8 != 214
$2D8    $90A9   UNKNOWN  $90A9           ; Unknown 9xxx instruction
$2DA    $64FA   LD       V4, #FA         ; Load 250 into V4
$2DC    $E838   UNKNOWN  $E838           ; Unknown Exxx instruction
$2DE    $2A13   CALL     $A13            ; Call subroutine at A13
$2E0    $8E09   UNKNOWN  8E09            ; Unknown 8xxx instruction
$2E2    $1A96   JP       $A96            ; Jump to A96
$2E4    $A21D   LD       I, $21D         ; Load 21D into I
$2E6    $275C   CALL     $75C            ; Call subroutine at 75C
$2E8    $7ABF   ADD      VA, #BF         ; Add 191 to VA
$2EA    $520C   UNKNOWN  $520C           ; Unknown 5xxx instruction
$2EC    $A3B3   LD       I, $3B3         ; Load 3B3 into I
$2EE    $69CF   LD       V9, #CF         ; Load 207 into V9
$2F0    $3396   SE       V3, #96         ; Skip if V3 == 150
$2F2    $5FEC   UNKNOWN  $5FEC           ; Unknown 5xxx instruction
$2F4    $F810   UNKNOWN  F810            ; Unknown Fxxx instruction
$2F6    $338B   SE       V3, #8B         ; Skip if V3 == 139
$2F8    $C024   RND      V0, #24         ; V0 = random & 24
$2FA    $CBCF   RND      VB, #CF         ; VB = random & CF
$2FC    $E532   UNKNOWN  $E532           ; Unknown Exxx instruction
$2FE    $B4EF   JP       V0, $4EF        ; Jump to V0 + 4EF
$300    $0203   SYS      $203            ; System call to 203
$302    $0427   SYS      $427            ; System call to 427
$304    $629B   LD       V2, #9B         ; Load 155 into V2
$306    $AFBB   LD       I, $FBB         ; Load FBB into I
$308    $1E24   JP       $E24            ; Jump to E24
$30A    $D0F4   DRW      V0, VF, #4      ; Draw 4-byte sprite at V0, VF
$30C    $C65E   RND      V6, #5E         ; V6 = random & 5E
$30E    $F226   UNKNOWN  F226            ; Unknown Fxxx instruction
$310    $0C8A   SYS      $C8A            ; System call to C8A
$312    $9557   UNKNOWN  $9557           ; Unknown 9xxx instruction
$314    $3EFC   SE       VE, #FC         ; Skip if VE == 252
$316    $EEDD   UNKNOWN  $EEDD           ; Unknown Exxx instruction
$318    $DD7E   DRW      VD, V7, #E      ; Draw 14-byte sprite at VD, V7
$31A    $FD6D   UNKNOWN  FD6D            ; Unknown Fxxx instruction
$31C    $9293   UNKNOWN  $9293           ; Unknown 9xxx instruction
$31E    $20CD   CALL     $0CD            ; Call subroutine at 0CD
$320    $2E87   CALL     $E87            ; Call subroutine at E87
$322    $2B36   CALL     $B36            ; Call subroutine at B36
$324    $B3C8   JP       V0, $3C8        ; Jump to V0 + 3C8
$326    $3016   SE       V0, #16         ; Skip if V0 == 22
$328    $C730   RND      V7, #30         ; V7 = random & 30
$32A    $F6AF   UNKNOWN  F6AF            ; Unknown Fxxx instruction
$32C    $BF48   JP       V0, $F48        ; Jump to V0 + F48
$32E    $CA6F   RND      VA, #6F         ; VA = random & 6F
$330    $BBB5   JP       V0, $BB5        ; Jump to V0 + BB5
$332    $F0A1   UNKNOWN  F0A1            ; Unknown Fxxx instruction
$334    $2408   CALL     $408            ; Call subroutine at 408
$336    $0408   SYS      $408            ; System call to 408
$338    $4179   SNE      V1, #79         ; Skip if V1 != 121
$33A    $F0F9   UNKNOWN  F0F9            ; Unknown Fxxx instruction
$33C    $EDBC   UNKNOWN  $EDBC           ; Unknown Exxx instruction
$33E    $C0F3   RND      V0, #F3         ; V0 = random & F3
$340    $A418   LD       I, $418         ; Load 418 into I
$342    $0CA4   SYS      $CA4            ; System call to CA4
$344    $6B31   LD       VB, #31         ; Load 49 into VB
$346    $0299   SYS      $299            ; System call to 299
$348    $A0BA   LD       I, $0BA         ; Load 0BA into I
$34A    $225E   CALL     $25E            ; Call subroutine at 25E
$34C    $6848   LD       V8, #48         ; Load 72 into V8
$34E    $7B53   ADD      VB, #53         ; Add 83 to VB
$350    $EF5D   UNKNOWN  $EF5D           ; Unknown Exxx instruction
$352    $D5DC   DRW      V5, VD, #C      ; Draw 12-byte sprite at V5, VD
$354    $46DB   SNE      V6, #DB         ; Skip if V6 != 219
$356    $0006   SYS      $006            ; System call to 006
$358    $EA98   UNKNOWN  $EA98           ; Unknown Exxx instruction
$35A    $A7C3   LD       I, $7C3         ; Load 7C3 into I
$35C    $73D6   ADD      V3, #D6         ; Add 214 to V3
$35E    $5A66   UNKNOWN  $5A66           ; Unknown 5xxx instruction
$360    $D6E3   DRW      V6, VE, #3      ; Draw 3-byte sprite at V6, VE
$362    $A3FC   LD       I, $3FC         ; Load 3FC into I
$364    $9EB8   UNKNOWN  $9EB8           ; Unknown 9xxx instruction
$366    $72D9   ADD      V2, #D9         ; Add 217 to V2
$368    $C90C   RND      V9, #0C         ; V9 = random & 0C
$36A    $17EA   JP       $7EA            ; Jump to 7EA
$36C    $6D98   LD       VD, #98         ; Load 152 into VD
$36E    $20E6   CALL     $0E6            ; Call subroutine at 0E6
$370    $F811   UNKNOWN  F811            ; Unknown Fxxx instruction
$372    $3867   SE       V8, #67         ; Skip if V8 == 103
$374    $B4DB   JP       V0, $4DB        ; Jump to V0 + 4DB
$376    $BAC8   JP       V0, $AC8        ; Jump to V0 + AC8
$378    $1E4F   JP       $E4F            ; Jump to E4F
$37A    $F000   UNKNOWN  F000            ; Unknown Fxxx instruction
$37C    $A2E7   LD       I, $2E7         ; Load 2E7 into I
$37E    $BA46   JP       V0, $A46        ; Jump to V0 + A46
$380    $CA37   RND      VA, #37         ; VA = random & 37
$382    $B289   JP       V0, $289        ; Jump to V0 + 289
$384    $DE84   DRW      VE, V8, #4      ; Draw 4-byte sprite at VE, V8
$386    $B726   JP       V0, $726        ; Jump to V0 + 726
$388    $40E8   SNE      V0, #E8         ; Skip if V0 != 232
$38A    $DCAF   DRW      VC, VA, #F      ; Draw 15-byte sprite at VC, VA
$38C    $C083   RND      V0, #83         ; V0 = random & 83
$38E    $92BE   UNKNOWN  $92BE           ; Unknown 9xxx instruction
$390    $3848   SE       V8, #48         ; Skip if V8 == 72
$392    $4FAA   SNE      VF, #AA         ; Skip if VF != 170
$394    $BD07   JP       V0, $D07        ; Jump to V0 + D07
$396    $61A3   LD       V1, #A3         ; Load 163 into V1
$398    $C089   RND      V0, #89         ; V0 = random & 89
$39A    $4F4C   SNE      VF, #4C         ; Skip if VF != 76
$39C    $05E4   SYS      $5E4            ; System call to 5E4
$39E    $63F3   LD       V3, #F3         ; Load 243 into V3
$3A0    $154E   JP       $54E            ; Jump to 54E
$3A2    $5AC2   UNKNOWN  $5AC2           ; Unknown 5xxx instruction
$3A4    $4CFD   SNE      VC, #FD         ; Skip if VC != 253
$3A6    $83B3   XOR      V3, VB          ; V3 ^= VB
$3A8    $B099   JP       V0, $099        ; Jump to V0 + 099
$3AA    $A72B   LD       I, $72B         ; Load 72B into I
$3AC    $53D3   UNKNOWN  $53D3           ; Unknown 5xxx instruction
$3AE    $2A54   CALL     $A54            ; Call subroutine at A54
$3B0    $A931   LD       I, $931         ; Load 931 into I
$3B2    $78F7   ADD      V8, #F7         ; Add 247 to V8
$3B4    $5187   UNKNOWN  $5187           ; Unknown 5xxx instruction
$3B6    $66CF   LD       V6, #CF         ; Load 207 into V6
$3B8    $2DE7   CALL     $DE7            ; Call subroutine at DE7
$3BA    $F3FD   UNKNOWN  F3FD            ; Unknown Fxxx instruction
$3BC    $1AEB   JP       $AEB            ; Jump to AEB
$3BE    $67A1   LD       V7, #A1         ; Load 161 into V7
$3C0    $2A48   CALL     $A48            ; Call subroutine at A48
$3C2    $6452   LD       V4, #52         ; Load 82 into V4
$3C4    $EBD0   UNKNOWN  $EBD0           ; Unknown Exxx instruction
$3C6    $6857   LD       V8, #57         ; Load 87 into V8
$3C8    $4BD3   SNE      VB, #D3         ; Skip if VB != 211
$3CA    $3230   SE       V2, #30         ; Skip if V2 == 48
$3CC    $5D93   UNKNOWN  $5D93           ; Unknown 5xxx instruction
$3CE    $9D4D   UNKNOWN  $9D4D           ; Unknown 9xxx instruction
$3D0    $4E8F   SNE      VE, #8F         ; Skip if VE != 143
$3D2    $1618   JP       $618            ; Jump to 618
$3D4    $CEB8   RND      VE, #B8         ; VE = random & B8
$3D6    $4CC5   SNE      VC, #C5         ; Skip if VC != 197
$3D8    $CFFA   RND      VF, #FA         ; VF = random & FA
$3DA    $B7DC   JP       V0, $7DC        ; Jump to V0 + 7DC
$3DC    $2E3E   CALL     $E3E            ; Call subroutine at E3E
$3DE    $A28B   LD       I, $28B         ; Load 28B into I
$3E0    $20C4   CALL     $0C4            ; Call subroutine at 0C4
$3E2    $D053   DRW      V0, V5, #3      ; Draw 3-byte sprite at V0, V5
$3E4    $4DAD   SNE      VD, #AD         ; Skip if VD != 173
$3E6    $F09F   UNKNOWN  F09F            ; Unknown Fxxx instruction
$3E8    $3E10   SE       VE, #10         ; Skip if VE == 16
$3EA    $FB1F   UNKNOWN  FB1F            ; Unknown Fxxx instruction
$3EC    $CC66   RND      VC, #66         ; VC = random & 66
$3EE    $D326   DRW      V3, V2, #6      ; Draw 6-byte sprite at V3, V2
$3F0    $D05D   DRW      V0, V5, #D      ; Draw 13-byte sprite at V0, V5
$3F2    $57E2   UNKNOWN  $57E2           ; Unknown 5xxx instruction
$3F4    $4A75   SNE      VA, #75         ; Skip if VA != 117
$3F6    $1A59   JP       $A59            ; Jump to A59
$3F8    $B9B9   JP       V0, $9B9        ; Jump to V0 + 9B9
$3FA    $8C4A   UNKNOWN  8C4A            ; Unknown 8xxx instruction
$3FC    $92C0   SNE      V2, VC          ; Skip if V2 != VC
$3FE    $1FE4   JP       $FE4            ; Jump to FE4
$400    $4546   SNE      V5, #46         ; Skip if V5 != 70
$402    $92BD   UNKNOWN  $92BD           ; Unknown 9xxx instruction
$404    $FC8D   UNKNOWN  FC8D            ; Unknown Fxxx instruction
$406    $3B8E   SE       VB, #8E         ; Skip if VB == 142
$408    $1897   JP       $897            ; Jump to 897
$40A    $42A0   SNE      V2, #A0         ; Skip if V2 != 160
$40C    $A8FE   LD       I, $8FE         ; Load 8FE into I
$40E    $3D86   SE       VD, #86         ; Skip if VD == 134
$410    $346C   SE       V4, #6C         ; Skip if V4 == 108
$412    $8CC5   SUB      VC, VC          ; VC -= VC, VF = !borrow
$414    $24DB   CALL     $4DB            ; Call subroutine at 4DB
$416    $3A33   SE       VA, #33         ; Skip if VA == 51
$418    $8346   SHR      V3              ; V3 >>= 1, VF = LSB
$41A    $E399   UNKNOWN  $E399           ; Unknown Exxx instruction
$41C    $6CB1   LD       VC, #B1         ; Load 177 into VC
$41E    $A8F2   LD       I, $8F2         ; Load 8F2 into I
$420    $FC6E   UNKNOWN  FC6E            ; Unknown Fxxx instruction
$422    $823B   UNKNOWN  823B            ; Unknown 8xxx instruction
$424    $D92D   DRW      V9, V2, #D      ; Draw 13-byte sprite at V9, V2
$426    $166C   JP       $66C            ; Jump to 66C
$428    $4383   SNE      V3, #83         ; Skip if V3 != 131
$42A    $1E3E   JP       $E3E            ; Jump to E3E
$42C    $1FA8   JP       $FA8            ; Jump to FA8
$42E    $BC85   JP       V0, $C85        ; Jump to V0 + C85
$430    $AC02   LD       I, $C02         ; Load C02 into I
$432    $77DE   ADD      V7, #DE         ; Add 222 to V7
$434    $E1A1   SKNP     V1              ; Skip if key V1 not pressed
$436    $ADB4   LD       I, $DB4         ; Load DB4 into I
$438    $7E1C   ADD      VE, #1C         ; Add 28 to VE
$43A    $7129   ADD      V1, #29         ; Add 41 to V1
$43C    $058E   SYS      $58E            ; System call to 58E
$43E    $DD4D   DRW      VD, V4, #D      ; Draw 13-byte sprite at VD, V4
$440    $60A4   LD       V0, #A4         ; Load 164 into V0
$442    $9F08   UNKNOWN  $9F08           ; Unknown 9xxx instruction
$444    $B2AC   JP       V0, $2AC        ; Jump to V0 + 2AC
$446    $94F1   UNKNOWN  $94F1           ; Unknown 9xxx instruction
$448    $5890   SE       V8, V9          ; Skip if V8 == V9
$44A    $F703   UNKNOWN  F703            ; Unknown Fxxx instruction
$44C    $1327   JP       $327            ; Jump to 327
$44E    $744B   ADD      V4, #4B         ; Add 75 to V4
$450    $54E8   UNKNOWN  $54E8           ; Unknown 5xxx instruction
$452    $0B76   SYS      $B76            ; System call to B76
$454    $E73F   UNKNOWN  $E73F           ; Unknown Exxx instruction
$456    $03A0   SYS      $3A0            ; System call to 3A0
$458    $15D4   JP       $5D4            ; Jump to 5D4
$45A    $849E   SHL      V4              ; V4 <<= 1, VF = MSB
$45C    $8841   OR       V8, V4          ; V8 |= V4
$45E    $252D   CALL     $52D            ; Call subroutine at 52D
$460    $38C1   SE       V8, #C1         ; Skip if V8 == 193
$462    $D021   DRW      V0, V2, #1      ; Draw 1-byte sprite at V0, V2
$464    $877A   UNKNOWN  877A            ; Unknown 8xxx instruction
$466    $7625   ADD      V6, #25         ; Add 37 to V6
$468    $EAC1   UNKNOWN  $EAC1           ; Unknown Exxx instruction
$46A    $3DE3   SE       VD, #E3         ; Skip if VD == 227
$46C    $0C84   SYS      $C84            ; System call to C84
$46E    $AB52   LD       I, $B52         ; Load B52 into I
$470    $7996   ADD      V9, #96         ; Add 150 to V9
$472    $42D0   SNE      V2, #D0         ; Skip if V2 != 208
$474    $EC13   UNKNOWN  $EC13           ; Unknown Exxx instruction
$476    $295B   CALL     $95B            ; Call subroutine at 95B
$478    $CBE3   RND      VB, #E3         ; VB = random & E3
$47A    $ADDC   LD       I, $DDC         ; Load DDC into I
$47C    $0AD2   SYS      $AD2            ; System call to AD2
$47E    $0813   SYS      $813            ; System call to 813
$480    $ECCC   UNKNOWN  $ECCC           ; Unknown Exxx instruction
$482    $CE7B   RND      VE, #7B         ; VE = random & 7B
$484    $5E26   UNKNOWN  $5E26           ; Unknown 5xxx instruction
$486    $178A   JP       $78A            ; Jump to 78A
$488    $B331   JP       V0, $331        ; Jump to V0 + 331
$48A    $5280   SE       V2, V8          ; Skip if V2 == V8
$48C    $AEE5   LD       I, $EE5         ; Load EE5 into I
$48E    $955E   UNKNOWN  $955E           ; Unknown 9xxx instruction
$490    $612A   LD       V1, #2A         ; Load 42 into V1
$492    $F098   UNKNOWN  F098            ; Unknown Fxxx instruction
$494    $F41A   UNKNOWN  F41A            ; Unknown Fxxx instruction
$496    $AAF9   LD       I, $AF9         ; Load AF9 into I
$498    $0908   SYS      $908            ; System call to 908
$49A    $6550   LD       V5, #50         ; Load 80 into V5
$49C    $10E4   JP       $0E4            ; Jump to 0E4
$49E    $67CD   LD       V7, #CD         ; Load 205 into V7
$4A0    $46B9   SNE      V6, #B9         ; Skip if V6 != 185
$4A2    $AD8E   LD       I, $D8E         ; Load D8E into I
$4A4    $47F3   SNE      V7, #F3         ; Skip if V7 != 243
$4A6    $6890   LD       V8, #90         ; Load 144 into V8
$4A8    $5EE0   SE       VE, VE          ; Skip if VE == VE
$4AA    $E291   UNKNOWN  $E291           ; Unknown Exxx instruction
$4AC    $0F8C   SYS      $F8C            ; System call to F8C
$4AE    $143F   JP       $43F            ; Jump to 43F
$4B0    $DC0A   DRW      VC, V0, #A      ; Draw 10-byte sprite at VC, V0
$4B2    $1B73   JP       $B73            ; Jump to B73
$4B4    $761E   ADD      V6, #1E         ; Add 30 to V6
$4B6    $07FB   SYS      $7FB            ; System call to 7FB
$4B8    $5996   UNKNOWN  $5996           ; Unknown 5xxx instruction
$4BA    $6987   LD       V9, #87         ; Load 135 into V9
$4BC    $2F7A   CALL     $F7A            ; Call subroutine at F7A
$4BE    $BFFC   JP       V0, $FFC        ; Jump to V0 + FFC
$4C0    $3802   SE       V8, #02         ; Skip if V8 == 2
$4C2    $B4DD   JP       V0, $4DD        ; Jump to V0 + 4DD
$4C4    $C3EC   RND      V3, #EC         ; V3 = random & EC
$4C6    $10E7   JP       $0E7            ; Jump to 0E7
$4C8    $8C4E   SHL      VC              ; VC <<= 1, VF = MSB
$4CA    $141F   JP       $41F            ; Jump to 41F
$4CC    $2FD3   CALL     $FD3            ; Call subroutine at FD3
$4CE    $05ED   SYS      $5ED            ; System call to 5ED
$4D0    $6905   LD       V9, #05         ; Load 5 into V9
$4D2    $6A4A   LD       VA, #4A         ; Load 74 into VA
$4D4    $1A9D   JP       $A9D            ; Jump to A9D
$4D6    $1B26   JP       $B26            ; Jump to B26
$4D8    $F6C4   UNKNOWN  F6C4            ; Unknown Fxxx instruction
$4DA    $4528   SNE      V5, #28         ; Skip if V5 != 40
$4DC    $EB98   UNKNOWN  $EB98           ; Unknown Exxx instruction
$4DE    $8640   LD       V6, V4          ; V6 = V4
$4E0    $3D9D   SE       VD, #9D         ; Skip if VD == 157
$4E2    $3F2A   SE       VF, #2A         ; Skip if VF == 42
$4E4    $BA7D   JP       V0, $A7D        ; Jump to V0 + A7D
$4E6    $D49D   DRW      V4, V9, #D      ; Draw 13-byte sprite at V4, V9
$4E8    $327B   SE       V2, #7B         ; Skip if V2 == 123
$4EA    $CD3A   RND      VD, #3A         ; VD = random & 3A
$4EC    $FA49   UNKNOWN  FA49            ; Unknown Fxxx instruction
$4EE    $6D83   LD       VD, #83         ; Load 131 into VD
$4F0    $F156   UNKNOWN  F156            ; Unknown Fxxx instruction
$4F2    $2EB5   CALL     $EB5            ; Call subroutine at EB5
$4F4    $B266   JP       V0, $266        ; Jump to V0 + 266
$4F6    $7AF3   ADD      VA, #F3         ; Add 243 to VA
$4F8    $ECEC   UNKNOWN  $ECEC           ; Unknown Exxx instruction
$4FA    $C5E2   RND      V5, #E2         ; V5 = random & E2
$4FC    $F603   UNKNOWN  F603            ; Unknown Fxxx instruction
$4FE    $2A07   CALL     $A07            ; Call subroutine at A07
$500    $E07E   UNKNOWN  $E07E           ; Unknown Exxx instruction
$502    $5304   UNKNOWN  $5304           ; Unknown 5xxx instruction
$504    $7CF8   ADD      VC, #F8         ; Add 248 to VC
$506    $FEDE   UNKNOWN  FEDE            ; Unknown Fxxx instruction
$508    $1DB6   JP       $DB6            ; Jump to DB6
$50A    $6CE0   LD       VC, #E0         ; Load 224 into VC
$50C    $13ED   JP       $3ED            ; Jump to 3ED
$50E    $BB90   JP       V0, $B90        ; Jump to V0 + B90
$510    $DA34   DRW      VA, V3, #4      ; Draw 4-byte sprite at VA, V3
$512    $5AB6   UNKNOWN  $5AB6           ; Unknown 5xxx instruction
$514    $3081   SE       V0, #81         ; Skip if V0 == 129
$516    $298C   CALL     $98C            ; Call subroutine at 98C
$518    $281C   CALL     $81C            ; Call subroutine at 81C
$51A    $4049   SNE      V0, #49         ; Skip if V0 != 73
$51C    $03D3   SYS      $3D3            ; System call to 3D3
$51E    $1DA2   JP       $DA2            ; Jump to DA2
$520    $F9B3   UNKNOWN  F9B3            ; Unknown Fxxx instruction
$522    $6C77   LD       VC, #77         ; Load 119 into VC
$524    $6922   LD       V9, #22         ; Load 34 into V9
$526    $62C6   LD       V2, #C6         ; Load 198 into V2
$528    $5706   UNKNOWN  $5706           ; Unknown 5xxx instruction
$52A    $B1EF   JP       V0, $1EF        ; Jump to V0 + 1EF
$52C    $A450   LD       I, $450         ; Load 450 into I
$52E    $244D   CALL     $44D            ; Call subroutine at 44D
$530    $9A3F   UNKNOWN  $9A3F           ; Unknown 9xxx instruction
$532    $D3CC   DRW      V3, VC, #C      ; Draw 12-byte sprite at V3, VC
$534    $7E62   ADD      VE, #62         ; Add 98 to VE
$536    $7F70   ADD      VF, #70         ; Add 112 to VF
$538    $F021   UNKNOWN  F021            ; Unknown Fxxx instruction
$53A    $0398   SYS      $398            ; System call to 398
$53C    $29FD   CALL     $9FD            ; Call subroutine at 9FD
$53E    $B167   JP       V0, $167        ; Jump to V0 + 167
$540    $1A9E   JP       $A9E            ; Jump to A9E
$542    $3C4B   SE       VC, #4B         ; Skip if VC == 75
$544    $74A9   ADD      V4, #A9         ; Add 169 to V4
$546    $2FBF   CALL     $FBF            ; Call subroutine at FBF
$548    $A95A   LD       I, $95A         ; Load 95A into I
$54A    $ADBE   LD       I, $DBE         ; Load DBE into I
$54C    $51A8   UNKNOWN  $51A8           ; Unknown 5xxx instruction
$54E    $3B4A   SE       VB, #4A         ; Skip if VB == 74
$550    $1C3A   JP       $C3A            ; Jump to C3A
$552    $8D38   UNKNOWN  8D38            ; Unknown 8xxx instruction
$554    $6B4C   LD       VB, #4C         ; Load 76 into VB
$556    $B8F9   JP       V0, $8F9        ; Jump to V0 + 8F9
$558    $81B5   SUB      V1, VB          ; V1 -= VB, VF = !borrow
$55A    $C003   RND      V0, #03         ; V0 = random & 03
$55C    $1F2B   JP       $F2B            ; Jump to F2B
$55E    $F7FE   UNKNOWN  F7FE            ; Unknown Fxxx instruction
$560    $21BE   CALL     $1BE            ; Call subroutine at 1BE
$562    $1F14   JP       $F14            ; Jump to F14
$564    $E442   UNKNOWN  $E442           ; Unknown Exxx instruction
$566    $6EA7   LD       VE, #A7         ; Load 167 into VE
$568    $22DE   CALL     $2DE            ; Call subroutine at 2DE
$56A    $ACC3   LD       I, $CC3         ; Load CC3 into I
$56C    $BD94   JP       V0, $D94        ; Jump to V0 + D94
$56E    $47C4   SNE      V7, #C4         ; Skip if V7 != 196
$570    $97B0   SNE      V7, VB          ; Skip if V7 != VB
$572    $4700   SNE      V7, #00         ; Skip if V7 != 0
$574    $2448   CALL     $448            ; Call subroutine at 448
$576    $5FE9   UNKNOWN  $5FE9           ; Unknown 5xxx instruction
$578    $4DD7   SNE      VD, #D7         ; Skip if VD != 215
$57A    $2E64   CALL     $E64            ; Call subroutine at E64
$57C    $1595   JP       $595            ; Jump to 595
$57E    $B284   JP       V0, $284        ; Jump to V0 + 284
$580    $FCDE   UNKNOWN  FCDE            ; Unknown Fxxx instruction
$582    $AAE0   LD       I, $AE0         ; Load AE0 into I
$584    $7D3A   ADD      VD, #3A         ; Add 58 to VD
$586    $6729   LD       V7, #29         ; Load 41 into V7
$588    $B040   JP       V0, $040        ; Jump to V0 + 040
$58A    $971D   UNKNOWN  $971D           ; Unknown 9xxx instruction
$58C    $21C2   CALL     $1C2            ; Call subroutine at 1C2
$58E    $DBD3   DRW      VB, VD, #3      ; Draw 3-byte sprite at VB, VD
$590    $D516   DRW      V5, V1, #6      ; Draw 6-byte sprite at V5, V1
$592    $C0DF   RND      V0, #DF         ; V0 = random & DF
$594    $2B71   CALL     $B71            ; Call subroutine at B71
$596    $817C   UNKNOWN  817C            ; Unknown 8xxx instruction
$598    $A079   LD       I, $079         ; Load 079 into I
$59A    $EDDB   UNKNOWN  $EDDB           ; Unknown Exxx instruction
$59C    $5D47   UNKNOWN  $5D47           ; Unknown 5xxx instruction
$59E    $06F0   SYS      $6F0            ; System call to 6F0
$5A0    $ACC9   LD       I, $CC9         ; Load CC9 into I
$5A2    $AA8A   LD       I, $A8A         ; Load A8A into I
$5A4    $C22B   RND      V2, #2B         ; V2 = random & 2B
$5A6    $6560   LD       V5, #60         ; Load 96 into V5
$5A8    $FBEE   UNKNOWN  FBEE            ; Unknown Fxxx instruction
$5AA    $93D2   UNKNOWN  $93D2           ; Unknown 9xxx instruction
$5AC    $16C5   JP       $6C5            ; Jump to 6C5
$5AE    $1FC5   JP       $FC5            ; Jump to FC5
$5B0    $7B42   ADD      VB, #42         ; Add 66 to VB
$5B2    $49C4   SNE      V9, #C4         ; Skip if V9 != 196
$5B4    $5987   UNKNOWN  $5987           ; Unknown 5xxx instruction
$5B6    $C5FE   RND      V5, #FE         ; V5 = random & FE
$5B8    $A836   LD       I, $836         ; Load 836 into I
$5BA    $D74B   DRW      V7, V4, #B      ; Draw 11-byte sprite at V7, V4
$5BC    $F6ED   UNKNOWN  F6ED            ; Unknown Fxxx instruction
$5BE    $6270   LD       V2, #70         ; Load 112 into V2
$5C0    $0118   SYS      $118            ; System call to 118
$5C2    $B19C   JP       V0, $19C        ; Jump to V0 + 19C
$5C4    $EC5A   UNKNOWN  $EC5A           ; Unknown Exxx instruction
$5C6    $84B7   SUBN     V4, VB          ; V4 = VB - V4, VF = !borrow
$5C8    $F5F5   UNKNOWN  F5F5            ; Unknown Fxxx instruction
$5CA    $3C09   SE       VC, #09         ; Skip if VC == 9
$5CC    $5416   UNKNOWN  $5416           ; Unknown 5xxx instruction
$5CE    $A255   LD       I, $255         ; Load 255 into I
$5D0    $A31E   LD       I, $31E         ; Load 31E into I
$5D2    $F9AA   UNKNOWN  F9AA            ; Unknown Fxxx instruction
$5D4    $826A   UNKNOWN  826A            ; Unknown 8xxx instruction
$5D6    $4FC3   SNE      VF, #C3         ; Skip if VF != 195
$5D8    $4A87   SNE      VA, #87         ; Skip if VA != 135
$5DA    $5E6C   UNKNOWN  $5E6C           ; Unknown 5xxx instruction
$5DC    $3D35   SE       VD, #35         ; Skip if VD == 53
$5DE    $E188   UNKNOWN  $E188           ; Unknown Exxx instruction
$5E0    $5534   UNKNOWN  $5534           ; Unknown 5xxx instruction
$5E2    $6FE2   LD       VF, #E2         ; Load 226 into VF
$5E4    $8BD3   XOR      VB, VD          ; VB ^= VD
$5E6    $0772   SYS      $772            ; System call to 772
$5E8    $FD81   UNKNOWN  FD81            ; Unknown Fxxx instruction
$5EA    $9B47   UNKNOWN  $9B47           ; Unknown 9xxx instruction
$5EC    $33D0   SE       V3, #D0         ; Skip if V3 == 208
$5EE    $0763   SYS      $763            ; System call to 763
$5F0    $AB5E   LD       I, $B5E         ; Load B5E into I
$5F2    $5C94   UNKNOWN  $5C94           ; Unknown 5xxx instruction
$5F4    $B18D   JP       V0, $18D        ; Jump to V0 + 18D
$5F6    $89C3   XOR      V9, VC          ; V9 ^= VC
$5F8    $E263   UNKNOWN  $E263           ; Unknown Exxx instruction
$5FA    $B19A   JP       V0, $19A        ; Jump to V0 + 19A
$5FC    $C37E   RND      V3, #7E         ; V3 = random & 7E
$5FE    $7A37   ADD      VA, #37         ; Add 55 to VA
$600    $F88B   UNKNOWN  F88B            ; Unknown Fxxx instruction
$602    $1440   JP       $440            ; Jump to 440
$604    $F90B   UNKNOWN  F90B            ; Unknown Fxxx instruction
$606    $D683   DRW      V6, V8, #3      ; Draw 3-byte sprite at V6, V8
$608    $DB6B   DRW      VB, V6, #B      ; Draw 11-byte sprite at VB, V6
$60A    $1606   JP       $606            ; Jump to 606
$60C    $F98B   UNKNOWN  F98B            ; Unknown Fxxx instruction
$60E    $6835   LD       V8, #35         ; Load 53 into V8
$610    $A468   LD       I, $468         ; Load 468 into I
$612    $1E94   JP       $E94            ; Jump to E94
$614    $DAFB   DRW      VA, VF, #B      ; Draw 11-byte sprite at VA, VF
$616    $2536   CALL     $536            ; Call subroutine at 536
$618    $652F   LD       V5, #2F         ; Load 47 into V5
$61A    $8C2B   UNKNOWN  8C2B            ; Unknown 8xxx instruction
$61C    $29DC   CALL     $9DC            ; Call subroutine at 9DC
$61E    $8D5C   UNKNOWN  8D5C            ; Unknown 8xxx instruction
$620    $5331   UNKNOWN  $5331           ; Unknown 5xxx instruction
$622    $F9EA   UNKNOWN  F9EA            ; Unknown Fxxx instruction
$624    $423C   SNE      V2, #3C         ; Skip if V2 != 60
$626    $985A   UNKNOWN  $985A           ; Unknown 9xxx instruction
$628    $9015   UNKNOWN  $9015           ; Unknown 9xxx instruction
$62A    $0E39   SYS      $E39            ; System call to E39
$62C    $48AE   SNE      V8, #AE         ; Skip if V8 != 174
$62E    $0326   SYS      $326            ; System call to 326
$630    $6F0E   LD       VF, #0E         ; Load 14 into VF
$632    $8837   SUBN     V8, V3          ; V8 = V3 - V8, VF = !borrow
$634    $B257   JP       V0, $257        ; Jump to V0 + 257
$636    $B6A2   JP       V0, $6A2        ; Jump to V0 + 6A2
$638    $6B17   LD       VB, #17         ; Load 23 into VB
$63A    $EA74   UNKNOWN  $EA74           ; Unknown Exxx instruction
$63C    $7423   ADD      V4, #23         ; Add 35 to V4
$63E    $5D44   UNKNOWN  $5D44           ; Unknown 5xxx instruction
$640    $146A   JP       $46A            ; Jump to 46A
$642    $1A66   JP       $A66            ; Jump to A66
$644    $3131   SE       V1, #31         ; Skip if V1 == 49
$646    $601E   LD       V0, #1E         ; Load 30 into V0
$648    $5BE6   UNKNOWN  $5BE6           ; Unknown 5xxx instruction
$64A    $F7A3   UNKNOWN  F7A3            ; Unknown Fxxx instruction
$64C    $8D9D   UNKNOWN  8D9D            ; Unknown 8xxx instruction
$64E    $7ADF   ADD      VA, #DF         ; Add 223 to VA
$650    $9870   SNE      V8, V7          ; Skip if V8 != V7
$652    $2AA9   CALL     $AA9            ; Call subroutine at AA9
$654    $9D8E   UNKNOWN  $9D8E           ; Unknown 9xxx instruction
$656    $3F7A   SE       VF, #7A         ; Skip if VF == 122
$658    $BB4E   JP       V0, $B4E        ; Jump to V0 + B4E
$65A    $5FEE   UNKNOWN  $5FEE           ; Unknown 5xxx instruction
$65C    $41E9   SNE      V1, #E9         ; Skip if V1 != 233
$65E    $172E   JP       $72E            ; Jump to 72E
$660    $DB8E   DRW      VB, V8, #E      ; Draw 14-byte sprite at VB, V8
$662    $D871   DRW      V8, V7, #1      ; Draw 1-byte sprite at V8, V7
$664    $398D   SE       V9, #8D         ; Skip if V9 == 141
$666    $67C1   LD       V7, #C1         ; Load 193 into V7
$668    $E1EF   UNKNOWN  $E1EF           ; Unknown Exxx instruction
$66A    $A9B7   LD       I, $9B7         ; Load 9B7 into I
$66C    $14BE   JP       $4BE            ; Jump to 4BE
$66E    $510A   UNKNOWN  $510A           ; Unknown 5xxx instruction
$670    $7F0B   ADD      VF, #0B         ; Add 11 to VF
$672    $DC2B   DRW      VC, V2, #B      ; Draw 11-byte sprite at VC, V2
$674    $8D5D   UNKNOWN  8D5D            ; Unknown 8xxx instruction
$676    $A3E5   LD       I, $3E5         ; Load 3E5 into I
$678    $28C5   CALL     $8C5            ; Call subroutine at 8C5
$67A    $B6A2   JP       V0, $6A2        ; Jump to V0 + 6A2
$67C    $FABC   UNKNOWN  FABC            ; Unknown Fxxx instruction
$67E    $A0DB   LD       I, $0DB         ; Load 0DB into I
$680    $8876   SHR      V8              ; V8 >>= 1, VF = LSB
$682    $4D4E   SNE      VD, #4E         ; Skip if VD != 78
$684    $6385   LD       V3, #85         ; Load 133 into V3
$686    $95BC   UNKNOWN  $95BC           ; Unknown 9xxx instruction
$688    $9D05   UNKNOWN  $9D05           ; Unknown 9xxx instruction
$68A    $1D3A   JP       $D3A            ; Jump to D3A
$68C    $8926   SHR      V9              ; V9 >>= 1, VF = LSB
$68E    $6A75   LD       VA, #75         ; Load 117 into VA
$690    $7451   ADD      V4, #51         ; Add 81 to V4
$692    $8304   ADD      V3, V0          ; V3 += V0, VF = carry
$694    $4D0B   SNE      VD, #0B         ; Skip if VD != 11
$696    $241A   CALL     $41A            ; Call subroutine at 41A
$698    $6D11   LD       VD, #11         ; Load 17 into VD
$69A    $15E1   JP       $5E1            ; Jump to 5E1
$69C    $5C77   UNKNOWN  $5C77           ; Unknown 5xxx instruction
$69E    $D1B7   DRW      V1, VB, #7      ; Draw 7-byte sprite at V1, VB
$6A0    $3645   SE       V6, #45         ; Skip if V6 == 69
$6A2    $C701   RND      V7, #01         ; V7 = random & 01
$6A4    $BEC6   JP       V0, $EC6        ; Jump to V0 + EC6
$6A6    $C3AD   RND      V3, #AD         ; V3 = random & AD
$6A8    $9F02   UNKNOWN  $9F02           ; Unknown 9xxx instruction
$6AA    $69AA   LD       V9, #AA         ; Load 170 into V9
$6AC    $F788   UNKNOWN  F788            ; Unknown Fxxx instruction
$6AE    $8A2E   SHL      VA              ; VA <<= 1, VF = MSB
$6B0    $3499   SE       V4, #99         ; Skip if V4 == 153
$6B2    $BA93   JP       V0, $A93        ; Jump to V0 + A93
$6B4    $CF02   RND      VF, #02         ; VF = random & 02
$6B6    $3F71   SE       VF, #71         ; Skip if VF == 113
$6B8    $CA4A   RND      VA, #4A         ; VA = random & 4A
$6BA    $C51E   RND      V5, #1E         ; V5 = random & 1E
$6BC    $06F4   SYS      $6F4            ; System call to 6F4
$6BE    $8184   ADD      V1, V8          ; V1 += V8, VF = carry
$6C0    $0574   SYS      $574            ; System call to 574
$6C2    $27AA   CALL     $7AA            ; Call subroutine at 7AA
$6C4    $776F   ADD      V7, #6F         ; Add 111 to V7
$6C6    $712E   ADD      V1, #2E         ; Add 46 to V1
$6C8    $9950   SNE      V9, V5          ; Skip if V9 != V5
$6CA    $B9E2   JP       V0, $9E2        ; Jump to V0 + 9E2
$6CC    $E773   UNKNOWN  $E773           ; Unknown Exxx instruction
$6CE    $8455   SUB      V4, V5          ; V4 -= V5, VF = !borrow
$6D0    $A388   LD       I, $388         ; Load 388 into I
$6D2    $8EEE   SHL      VE              ; VE <<= 1, VF = MSB
$6D4    $EF65   UNKNOWN  $EF65           ; Unknown Exxx instruction
$6D6    $92F0   SNE      V2, VF          ; Skip if V2 != VF
$6D8    $665E   LD       V6, #5E         ; Load 94 into V6
$6DA    $2437   CALL     $437            ; Call subroutine at 437
$6DC    $72F5   ADD      V2, #F5         ; Add 245 to V2
$6DE    $5748   UNKNOWN  $5748           ; Unknown 5xxx instruction
$6E0    $D6D8   DRW      V6, VD, #8      ; Draw 8-byte sprite at V6, VD
$6E2    $5393   UNKNOWN  $5393           ; Unknown 5xxx instruction
$6E4    $0851   SYS      $851            ; System call to 851
$6E6    $9F6E   UNKNOWN  $9F6E           ; Unknown 9xxx instruction
$6E8    $5057   UNKNOWN  $5057           ; Unknown 5xxx instruction
$6EA    $35BC   SE       V5, #BC         ; Skip if V5 == 188
$6EC    $875F   UNKNOWN  875F            ; Unknown 8xxx instruction
$6EE    $753D   ADD      V5, #3D         ; Add 61 to V5
$6F0    $6A34   LD       VA, #34         ; Load 52 into VA
$6F2    $6782   LD       V7, #82         ; Load 130 into V7
$6F4    $BE48   JP       V0, $E48        ; Jump to V0 + E48
$6F6    $6A46   LD       VA, #46         ; Load 70 into VA
$6F8    $E35D   UNKNOWN  $E35D           ; Unknown Exxx instruction
$6FA    $FB85   UNKNOWN  FB85            ; Unknown Fxxx instruction
$6FC    $EE0B   UNKNOWN  $EE0B           ; Unknown Exxx instruction
$6FE    $DEBE   DRW      VE, VB, #E      ; Draw 14-byte sprite at VE, VB
$700    $DFC3   DRW      VF, VC, #3      ; Draw 3-byte sprite at VF, VC
$702    $A371   LD       I, $371         ; Load 371 into I
$704    $05EB   SYS      $5EB            ; System call to 5EB
$706    $1A83   JP       $A83            ; Jump to A83
$708    $FC96   UNKNOWN  FC96            ; Unknown Fxxx instruction
$70A    $DFFF   DRW      VF, VF, #F      ; Draw 15-byte sprite at VF, VF
$70C    $52BF   UNKNOWN  $52BF           ; Unknown 5xxx instruction
$70E    $D868   DRW      V8, V6, #8      ; Draw 8-byte sprite at V8, V6
$710    $87A6   SHR      V7              ; V7 >>= 1, VF = LSB
$712    $EEAE   UNKNOWN  $EEAE           ; Unknown Exxx instruction
$714    $E751   UNKNOWN  $E751           ; Unknown Exxx instruction
$716    $4931   SNE      V9, #31         ; Skip if V9 != 49
$718    $1CAF   JP       $CAF            ; Jump to CAF
$71A    $47F7   SNE      V7, #F7         ; Skip if V7 != 247
$71C    $0F6C   SYS      $F6C            ; System call to F6C
$71E    $02D6   SYS      $2D6            ; System call to 2D6
$720    $31FF   SE       V1, #FF         ; Skip if V1 == 255
$722    $B4B5   JP       V0, $4B5        ; Jump to V0 + 4B5
$724    $2C3C   CALL     $C3C            ; Call subroutine at C3C
$726    $9960   SNE      V9, V6          ; Skip if V9 != V6
$728    $24C8   CALL     $4C8            ; Call subroutine at 4C8
$72A    $C1BC   RND      V1, #BC         ; V1 = random & BC
$72C    $856A   UNKNOWN  856A            ; Unknown 8xxx instruction
$72E    $FC52   UNKNOWN  FC52            ; Unknown Fxxx instruction
$730    $4AF1   SNE      VA, #F1         ; Skip if VA != 241
$732    $CAB4   RND      VA, #B4         ; VA = random & B4
$734    $1A36   JP       $A36            ; Jump to A36
$736    $3C3B   SE       VC, #3B         ; Skip if VC == 59
$738    $CD7B   RND      VD, #7B         ; VD = random & 7B
$73A    $6003   LD       V0, #03         ; Load 3 into V0
$73C    $AD92   LD       I, $D92         ; Load D92 into I
$73E    $F737   UNKNOWN  F737            ; Unknown Fxxx instruction
$740    $9313   UNKNOWN  $9313           ; Unknown 9xxx instruction
$742    $CB1F   RND      VB, #1F         ; VB = random & 1F
$744    $2239   CALL     $239            ; Call subroutine at 239
$746    $9D24   UNKNOWN  $9D24           ; Unknown 9xxx instruction
$748    $84F4   ADD      V4, VF          ; V4 += VF, VF = carry
$74A    $C581   RND      V5, #81         ; V5 = random & 81
$74C    $BA21   JP       V0, $A21        ; Jump to V0 + A21
$74E    $326F   SE       V2, #6F         ; Skip if V2 == 111
$750    $C8D1   RND      V8, #D1         ; V8 = random & D1
$752    $EF48   UNKNOWN  $EF48           ; Unknown Exxx instruction
$754    $D031   DRW      V0, V3, #1      ; Draw 1-byte sprite at V0, V3
$756    $E694   UNKNOWN  $E694           ; Unknown Exxx instruction
$758    $6431   LD       V4, #31         ; Load 49 into V4
$75A    $F7EF   UNKNOWN  F7EF            ; Unknown Fxxx instruction
$75C    $9F84   UNKNOWN  $9F84           ; Unknown 9xxx instruction
$75E    $107B   JP       $07B            ; Jump to 07B
$760    $5F7F   UNKNOWN  $5F7F           ; Unknown 5xxx instruction
$762    $AB3D   LD       I, $B3D         ; Load B3D into I
$764    $41D5   SNE      V1, #D5         ; Skip if V1 != 213
$766    $298A   CALL     $98A            ; Call subroutine at 98A
$768    $AB9A   LD       I, $B9A         ; Load B9A into I
$76A    $1DBE   JP       $DBE            ; Jump to DBE
$76C    $8D66   SHR      VD              ; VD >>= 1, VF = LSB
$76E    $7648   ADD      V6, #48         ; Add 72 to V6
$770    $E8FA   UNKNOWN  $E8FA           ; Unknown Exxx instruction
$772    $83B0   LD       V3, VB          ; V3 = VB
$774    $140A   JP       $40A            ; Jump to 40A
$776    $C8E5   RND      V8, #E5         ; V8 = random & E5
$778    $6A37   LD       VA, #37         ; Load 55 into VA
$77A    $CF9A   RND      VF, #9A         ; VF = random & 9A
$77C    $BE09   JP       V0, $E09        ; Jump to V0 + E09
$77E    $30C5   SE       V0, #C5         ; Skip if V0 == 197
$780    $CED5   RND      VE, #D5         ; VE = random & D5
$782    $6F9B   LD       VF, #9B         ; Load 155 into VF
$784    $C632   RND      V6, #32         ; V6 = random & 32
$786    $1596   JP       $596            ; Jump to 596
$788    $344C   SE       V4, #4C         ; Skip if V4 == 76
$78A    $88BC   UNKNOWN  88BC            ; Unknown 8xxx instruction
$78C    $2730   CALL     $730            ; Call subroutine at 730
$78E    $C979   RND      V9, #79         ; V9 = random & 79
$790    $9627   UNKNOWN  $9627           ; Unknown 9xxx instruction
$792    $3AFC   SE       VA, #FC         ; Skip if VA == 252
$794    $6FDA   LD       VF, #DA         ; Load 218 into VF
$796    $2777   CALL     $777            ; Call subroutine at 777
$798    $4997   SNE      V9, #97         ; Skip if V9 != 151
$79A    $FE06   UNKNOWN  FE06            ; Unknown Fxxx instruction
$79C    $BC46   JP       V0, $C46        ; Jump to V0 + C46
$79E    $C984   RND      V9, #84         ; V9 = random & 84
$7A0    $033D   SYS      $33D            ; System call to 33D
$7A2    $4A89   SNE      VA, #89         ; Skip if VA != 137
$7A4    $6E5E   LD       VE, #5E         ; Load 94 into VE
$7A6    $9BF8   UNKNOWN  $9BF8           ; Unknown 9xxx instruction
$7A8    $D71D   DRW      V7, V1, #D      ; Draw 13-byte sprite at V7, V1
$7AA    $7F92   ADD      VF, #92         ; Add 146 to VF
$7AC    $0331   SYS      $331            ; System call to 331
$7AE    $9918   UNKNOWN  $9918           ; Unknown 9xxx instruction
$7B0    $13D4   JP       $3D4            ; Jump to 3D4
$7B2    $E226   UNKNOWN  $E226           ; Unknown Exxx instruction
$7B4    $933C   UNKNOWN  $933C           ; Unknown 9xxx instruction
$7B6    $E24E   UNKNOWN  $E24E           ; Unknown Exxx instruction
$7B8    $B290   JP       V0, $290        ; Jump to V0 + 290
$7BA    $4AE0   SNE      VA, #E0         ; Skip if VA != 224
$7BC    $8D6C   UNKNOWN  8D6C            ; Unknown 8xxx instruction
$7BE    $B90D   JP       V0, $90D        ; Jump to V0 + 90D
$7C0    $28BC   CALL     $8BC            ; Call subroutine at 8BC
$7C2    $6D4B   LD       VD, #4B         ; Load 75 into VD
$7C4    $67D2   LD       V7, #D2         ; Load 210 into V7
$7C6    $668B   LD       V6, #8B         ; Load 139 into V6
$7C8    $8F7F   UNKNOWN  8F7F            ; Unknown 8xxx instruction
$7CA    $1D86   JP       $D86            ; Jump to D86
$7CC    $7778   ADD      V7, #78         ; Add 120 to V7
$7CE    $C4A1   RND      V4, #A1         ; V4 = random & A1
$7D0    $7E6B   ADD      VE, #6B         ; Add 107 to VE
$7D2    $A5CF   LD       I, $5CF         ; Load 5CF into I
$7D4    $6D85   LD       VD, #85         ; Load 133 into VD
$7D6    $22C7   CALL     $2C7            ; Call subroutine at 2C7
$7D8    $5848   UNKNOWN  $5848           ; Unknown 5xxx instruction
$7DA    $04F5   SYS      $4F5            ; System call to 4F5
$7DC    $5F28   UNKNOWN  $5F28           ; Unknown 5xxx instruction
$7DE    $384A   SE       V8, #4A         ; Skip if V8 == 74
$7E0    $19AB   JP       $9AB            ; Jump to 9AB
$7E2    $DD10   DRW      VD, V1, #0      ; Draw 0-byte sprite at VD, V1
$7E4    $6D40   LD       VD, #40         ; Load 64 into VD
$7E6    $A1CB   LD       I, $1CB         ; Load 1CB into I
$7E8    $2E81   CALL     $E81            ; Call subroutine at E81
$7EA    $1D23   JP       $D23            ; Jump to D23
$7EC    $C22F   RND      V2, #2F         ; V2 = random & 2F
$7EE    $81EE   SHL      V1              ; V1 <<= 1, VF = MSB
$7F0    $6B61   LD       VB, #61         ; Load 97 into VB
$7F2    $ADD4   LD       I, $DD4         ; Load DD4 into I
$7F4    $D994   DRW      V9, V9, #4      ; Draw 4-byte sprite at V9, V9
$7F6    $1577   JP       $577            ; Jump to 577
$7F8    $5F6A   UNKNOWN  $5F6A           ; Unknown 5xxx instruction
$7FA    $1256   JP       $256            ; Jump to 256
$7FC    $95C3   UNKNOWN  $95C3           ; Unknown 9xxx instruction
$7FE    $6502   LD       V5, #02         ; Load 2 into V5
$800    $00FD   SYS      $0FD            ; System call to 0FD
$802    $6AA8   LD       VA, #A8         ; Load 168 into VA
$804    $5C11   UNKNOWN  $5C11           ; Unknown 5xxx instruction
$806    $F472   UNKNOWN  F472            ; Unknown Fxxx instruction
$808    $CEC5   RND      VE, #C5         ; VE = random & C5
$80A    $3659   SE       V6, #59         ; Skip if V6 == 89
$80C    $8F70   LD       VF, V7          ; VF = V7
$80E    $C75C   RND      V7, #5C         ; V7 = random & 5C
$810    $BE78   JP       V0, $E78        ; Jump to V0 + E78
$812    $F1EC   UNKNOWN  F1EC            ; Unknown Fxxx instruction
$814    $7ED9   ADD      VE, #D9         ; Add 217 to VE
$816    $99CB   UNKNOWN  $99CB           ; Unknown 9xxx instruction
$818    $D73C   DRW      V7, V3, #C      ; Draw 12-byte sprite at V7, V3
$81A    $D7BB   DRW      V7, VB, #B      ; Draw 11-byte sprite at V7, VB
$81C    $89BE   SHL      V9              ; V9 <<= 1, VF = MSB
$81E    $11A6   JP       $1A6            ; Jump to 1A6
$820    $64F8   LD       V4, #F8         ; Load 248 into V4
$822    $0117   SYS      $117            ; System call to 117
$824    $7609   ADD      V6, #09         ; Add 9 to V6
$826    $4946   SNE      V9, #46         ; Skip if V9 != 70
$828    $77C3   ADD      V7, #C3         ; Add 195 to V7
$82A    $36B7   SE       V6, #B7         ; Skip if V6 == 183
$82C    $F92E   UNKNOWN  F92E            ; Unknown Fxxx instruction
$82E    $7349   ADD      V3, #49         ; Add 73 to V3
$830    $9D6C   UNKNOWN  $9D6C           ; Unknown 9xxx instruction
$832    $FAC4   UNKNOWN  FAC4            ; Unknown Fxxx instruction
$834    $3915   SE       V9, #15         ; Skip if V9 == 21
$836    $66A0   LD       V6, #A0         ; Load 160 into V6
$838    $6FAF   LD       VF, #AF         ; Load 175 into VF
$83A    $7816   ADD      V8, #16         ; Add 22 to V8
$83C    $5A36   UNKNOWN  $5A36           ; Unknown 5xxx instruction
$83E    $078E   SYS      $78E            ; System call to 78E
$840    $5F19   UNKNOWN  $5F19           ; Unknown 5xxx instruction
$842    $96E1   UNKNOWN  $96E1           ; Unknown 9xxx instruction
$844    $4A45   SNE      VA, #45         ; Skip if VA != 69
$846    $2E50   CALL     $E50            ; Call subroutine at E50
$848    $61B7   LD       V1, #B7         ; Load 183 into V1
$84A    $3DBC   SE       VD, #BC         ; Skip if VD == 188
$84C    $5AD9   UNKNOWN  $5AD9           ; Unknown 5xxx instruction
$84E    $1B2B   JP       $B2B            ; Jump to B2B
$850    $23BB   CALL     $3BB            ; Call subroutine at 3BB
$852    $EDB0   UNKNOWN  $EDB0           ; Unknown Exxx instruction
$854    $C4EA   RND      V4, #EA         ; V4 = random & EA
$856    $8984   ADD      V9, V8          ; V9 += V8, VF = carry
$858    $F563   UNKNOWN  F563            ; Unknown Fxxx instruction
$85A    $890A   UNKNOWN  890A            ; Unknown 8xxx instruction
$85C    $890E   SHL      V9              ; V9 <<= 1, VF = MSB
$85E    $E370   UNKNOWN  $E370           ; Unknown Exxx instruction
$860    $C842   RND      V8, #42         ; V8 = random & 42
$862    $3929   SE       V9, #29         ; Skip if V9 == 41
$864    $94B6   UNKNOWN  $94B6           ; Unknown 9xxx instruction
$866    $F8B8   UNKNOWN  F8B8            ; Unknown Fxxx instruction
$868    $3D91   SE       VD, #91         ; Skip if VD == 145
$86A    $B974   JP       V0, $974        ; Jump to V0 + 974
$86C    $3663   SE       V6, #63         ; Skip if V6 == 99
$86E    $DE94   DRW      VE, V9, #4      ; Draw 4-byte sprite at VE, V9
$870    $3710   SE       V7, #10         ; Skip if V7 == 16
$872    $942A   UNKNOWN  $942A           ; Unknown 9xxx instruction
$874    $5001   UNKNOWN  $5001           ; Unknown 5xxx instruction
$876    $195A   JP       $95A            ; Jump to 95A
$878    $D659   DRW      V6, V5, #9      ; Draw 9-byte sprite at V6, V5
$87A    $0551   SYS      $551            ; System call to 551
$87C    $E95D   UNKNOWN  $E95D           ; Unknown Exxx instruction
$87E    $5B2B   UNKNOWN  $5B2B           ; Unknown 5xxx instruction
$880    $A2E6   LD       I, $2E6         ; Load 2E6 into I
$882    $78B3   ADD      V8, #B3         ; Add 179 to V8
$884    $5579   UNKNOWN  $5579           ; Unknown 5xxx instruction
$886    $D645   DRW      V6, V4, #5      ; Draw 5-byte sprite at V6, V4
$888    $3231   SE       V2, #31         ; Skip if V2 == 49
$88A    $0160   SYS      $160            ; System call to 160
$88C    $F1E5   UNKNOWN  F1E5            ; Unknown Fxxx instruction
$88E    $2188   CALL     $188            ; Call subroutine at 188
$890    $E6CD   UNKNOWN  $E6CD           ; Unknown Exxx instruction
$892    $4197   SNE      V1, #97         ; Skip if V1 != 151
$894    $A34C   LD       I, $34C         ; Load 34C into I
$896    $ED77   UNKNOWN  $ED77           ; Unknown Exxx instruction
$898    $3A7A   SE       VA, #7A         ; Skip if VA == 122
$89A    $1DB9   JP       $DB9            ; Jump to DB9
$89C    $E644   UNKNOWN  $E644           ; Unknown Exxx instruction
$89E    $B382   JP       V0, $382        ; Jump to V0 + 382
$8A0    $3CCC   SE       VC, #CC         ; Skip if VC == 204
$8A2    $9B7D   UNKNOWN  $9B7D           ; Unknown 9xxx instruction
$8A4    $F647   UNKNOWN  F647            ; Unknown Fxxx instruction
$8A6    $3798   SE       V7, #98         ; Skip if V7 == 152
$8A8    $838D   UNKNOWN  838D            ; Unknown 8xxx instruction
$8AA    $43DD   SNE      V3, #DD         ; Skip if V3 != 221
$8AC    $9434   UNKNOWN  $9434           ; Unknown 9xxx instruction
$8AE    $1F66   JP       $F66            ; Jump to F66
$8B0    $7403   ADD      V4, #03         ; Add 3 to V4
$8B2    $281B   CALL     $81B            ; Call subroutine at 81B
$8B4    $6F27   LD       VF, #27         ; Load 39 into VF
$8B6    $3A1A   SE       VA, #1A         ; Skip if VA == 26
$8B8    $1153   JP       $153            ; Jump to 153
$8BA    $27A5   CALL     $7A5            ; Call subroutine at 7A5
$8BC    $4DC6   SNE      VD, #C6         ; Skip if VD != 198
$8BE    $CB6C   RND      VB, #6C         ; VB = random & 6C
$8C0    $54DF   UNKNOWN  $54DF           ; Unknown 5xxx instruction
$8C2    $5FB2   UNKNOWN  $5FB2           ; Unknown 5xxx instruction
$8C4    $600B   LD       V0, #0B         ; Load 11 into V0
$8C6    $8559   UNKNOWN  8559            ; Unknown 8xxx instruction
$8C8    $5813   UNKNOWN  $5813           ; Unknown 5xxx instruction
$8CA    $0B51   SYS      $B51            ; System call to B51
$8CC    $8C8F   UNKNOWN  8C8F            ; Unknown 8xxx instruction
$8CE    $961D   UNKNOWN  $961D           ; Unknown 9xxx instruction
$8D0    $4C8D   SNE      VC, #8D         ; Skip if VC != 141
$8D2    $018C   SYS      $18C            ; System call to 18C
$8D4    $A6FD   LD       I, $6FD         ; Load 6FD into I
$8D6    $26A5   CALL     $6A5            ; Call subroutine at 6A5
$8D8    $C649   RND      V6, #49         ; V6 = random & 49
$8DA    $9230   SNE      V2, V3          ; Skip if V2 != V3
$8DC    $6ECE   LD       VE, #CE         ; Load 206 into VE
$8DE    $73BC   ADD      V3, #BC         ; Add 188 to V3
$8E0    $ADCC   LD       I, $DCC         ; Load DCC into I
$8E2    $122A   JP       $22A            ; Jump to 22A
$8E4    $0B80   SYS      $B80            ; System call to B80
$8E6    $3836   SE       V8, #36         ; Skip if V8 == 54
$8E8    $7383   ADD      V3, #83         ; Add 131 to V3
$8EA    $573A   UNKNOWN  $573A           ; Unknown 5xxx instruction
$8EC    $5549   UNKNOWN  $5549           ; Unknown 5xxx instruction
$8EE    $D23B   DRW      V2, V3, #B      ; Draw 11-byte sprite at V2, V3
$8F0    $F704   UNKNOWN  F704            ; Unknown Fxxx instruction
$8F2    $19F2   JP       $9F2            ; Jump to 9F2
$8F4    $ACBE   LD       I, $CBE         ; Load CBE into I
$8F6    $33CE   SE       V3, #CE         ; Skip if V3 == 206
$8F8    $4F83   SNE      VF, #83         ; Skip if VF != 131
$8FA    $FB4D   UNKNOWN  FB4D            ; Unknown Fxxx instruction
$8FC    $6DA7   LD       VD, #A7         ; Load 167 into VD
$8FE    $252F   CALL     $52F            ; Call subroutine at 52F
$900    $2D21   CALL     $D21            ; Call subroutine at D21
$902    $15D6   JP       $5D6            ; Jump to 5D6
$904    $501B   UNKNOWN  $501B           ; Unknown 5xxx instruction
$906    $3812   SE       V8, #12         ; Skip if V8 == 18
$908    $1E57   JP       $E57            ; Jump to E57
$90A    $1A79   JP       $A79            ; Jump to A79
$90C    $450D   SNE      V5, #0D         ; Skip if V5 != 13
$90E    $80F8   UNKNOWN  80F8            ; Unknown 8xxx instruction
$910    $B080   JP       V0, $080        ; Jump to V0 + 080
$912    $1D39   JP       $D39            ; Jump to D39
$914    $C814   RND      V8, #14         ; V8 = random & 14
$916    $4F99   SNE      VF, #99         ; Skip if VF != 153
$918    $DE00   DRW      VE, V0, #0      ; Draw 0-byte sprite at VE, V0
$91A    $7574   ADD      V5, #74         ; Add 116 to V5
$91C    $1B38   JP       $B38            ; Jump to B38
$91E    $3E17   SE       VE, #17         ; Skip if VE == 23
$920    $AED5   LD       I, $ED5         ; Load ED5 into I
$922    $081C   SYS      $81C            ; System call to 81C
$924    $891D   UNKNOWN  891D            ; Unknown 8xxx instruction
$926    $BACF   JP       V0, $ACF        ; Jump to V0 + ACF
$928    $4BF0   SNE      VB, #F0         ; Skip if VB != 240
$92A    $DBDA   DRW      VB, VD, #A      ; Draw 10-byte sprite at VB, VD
$92C    $5476   UNKNOWN  $5476           ; Unknown 5xxx instruction
$92E    $D742   DRW      V7, V4, #2      ; Draw 2-byte sprite at V7, V4
$930    $9617   UNKNOWN  $9617           ; Unknown 9xxx instruction
$932    $7309   ADD      V3, #09         ; Add 9 to V3
$934    $C752   RND      V7, #52         ; V7 = random & 52
$936    $309E   SE       V0, #9E         ; Skip if V0 == 158
$938    $B229   JP       V0, $229        ; Jump to V0 + 229
$93A    $F489   UNKNOWN  F489            ; Unknown Fxxx instruction
$93C    $52AC   UNKNOWN  $52AC           ; Unknown 5xxx instruction
$93E    $15A8   JP       $5A8            ; Jump to 5A8
$940    $5815   UNKNOWN  $5815           ; Unknown 5xxx instruction
$942    $2BE1   CALL     $BE1            ; Call subroutine at BE1
$944    $4F33   SNE      VF, #33         ; Skip if VF != 51
$946    $2721   CALL     $721            ; Call subroutine at 721
$948    $6348   LD       V3, #48         ; Load 72 into V3
$94A    $3C1A   SE       VC, #1A         ; Skip if VC == 26
$94C    $7AB9   ADD      VA, #B9         ; Add 185 to VA
$94E    $AA6C   LD       I, $A6C         ; Load A6C into I
$950    $A388   LD       I, $388         ; Load 388 into I
$952    $2282   CALL     $282            ; Call subroutine at 282
$954    $9B8E   UNKNOWN  $9B8E           ; Unknown 9xxx instruction
$956    $AE9D   LD       I, $E9D         ; Load E9D into I
$958    $9D48   UNKNOWN  $9D48           ; Unknown 9xxx instruction
$95A    $375E   SE       V7, #5E         ; Skip if V7 == 94
$95C    $31B4   SE       V1, #B4         ; Skip if V1 == 180
$95E    $DB5C   DRW      VB, V5, #C      ; Draw 12-byte sprite at VB, V5
$960    $FBA7   UNKNOWN  FBA7            ; Unknown Fxxx instruction
$962    $F265   LD       V2, [I]         ; Load V0-V2 from I
$964    $8158   UNKNOWN  8158            ; Unknown 8xxx instruction
$966    $A934   LD       I, $934         ; Load 934 into I
$968    $6BBA   LD       VB, #BA         ; Load 186 into VB
$96A    $4AE4   SNE      VA, #E4         ; Skip if VA != 228
$96C    $F53C   UNKNOWN  F53C            ; Unknown Fxxx instruction
$96E    $D558   DRW      V5, V5, #8      ; Draw 8-byte sprite at V5, V5
$970    $49CC   SNE      V9, #CC         ; Skip if V9 != 204
$972    $7257   ADD      V2, #57         ; Add 87 to V2
$974    $631C   LD       V3, #1C         ; Load 28 into V3
$976    $5EB6   UNKNOWN  $5EB6           ; Unknown 5xxx instruction
$978    $86B7   SUBN     V6, VB          ; V6 = VB - V6, VF = !borrow
$97A    $DA7A   DRW      VA, V7, #A      ; Draw 10-byte sprite at VA, V7
$97C    $8E14   ADD      VE, V1          ; VE += V1, VF = carry
$97E    $0B1C   SYS      $B1C            ; System call to B1C
$980    $29BB   CALL     $9BB            ; Call subroutine at 9BB
$982    $F9F5   UNKNOWN  F9F5            ; Unknown Fxxx instruction
$984    $4D17   SNE      VD, #17         ; Skip if VD != 23
$986    $5BC0   SE       VB, VC          ; Skip if VB == VC
$988    $8A1A   UNKNOWN  8A1A            ; Unknown 8xxx instruction
$98A    $B461   JP       V0, $461        ; Jump to V0 + 461
$98C    $7E04   ADD      VE, #04         ; Add 4 to VE
$98E    $54BD   UNKNOWN  $54BD           ; Unknown 5xxx instruction
$990    $2B6E   CALL     $B6E            ; Call subroutine at B6E
$992    $A906   LD       I, $906         ; Load 906 into I
$994    $C335   RND      V3, #35         ; V3 = random & 35
$996    $3B28   SE       VB, #28         ; Skip if VB == 40
$998    $ACBD   LD       I, $CBD         ; Load CBD into I
$99A    $52B7   UNKNOWN  $52B7           ; Unknown 5xxx instruction
$99C    $9B84   UNKNOWN  $9B84           ; Unknown 9xxx instruction
$99E    $A2E7   LD       I, $2E7         ; Load 2E7 into I
$9A0    $FD6B   UNKNOWN  FD6B            ; Unknown Fxxx instruction
$9A2    $4C5C   SNE      VC, #5C         ; Skip if VC != 92
$9A4    $2354   CALL     $354            ; Call subroutine at 354
$9A6    $67AA   LD       V7, #AA         ; Load 170 into V7
$9A8    $FC90   UNKNOWN  FC90            ; Unknown Fxxx instruction
$9AA    $BAD2   JP       V0, $AD2        ; Jump to V0 + AD2
$9AC    $46B5   SNE      V6, #B5         ; Skip if V6 != 181
$9AE    $EF1D   UNKNOWN  $EF1D           ; Unknown Exxx instruction
$9B0    $CB48   RND      VB, #48         ; VB = random & 48
$9B2    $7D51   ADD      VD, #51         ; Add 81 to VD
$9B4    $7118   ADD      V1, #18         ; Add 24 to V1
$9B6    $0D54   SYS      $D54            ; System call to D54
$9B8    $80D1   OR       V0, VD          ; V0 |= VD
$9BA    $5F42   UNKNOWN  $5F42           ; Unknown 5xxx instruction
$9BC    $4504   SNE      V5, #04         ; Skip if V5 != 4
$9BE    $19F9   JP       $9F9            ; Jump to 9F9
$9C0    $0FF4   SYS      $FF4            ; System call to FF4
$9C2    $686B   LD       V8, #6B         ; Load 107 into V8
$9C4    $C89A   RND      V8, #9A         ; V8 = random & 9A
$9C6    $2B6D   CALL     $B6D            ; Call subroutine at B6D
$9C8    $EC21   UNKNOWN  $EC21           ; Unknown Exxx instruction
$9CA    $A0A2   LD       I, $0A2         ; Load 0A2 into I
$9CC    $3B2E   SE       VB, #2E         ; Skip if VB == 46
$9CE    $D670   DRW      V6, V7, #0      ; Draw 0-byte sprite at V6, V7
$9D0    $17D6   JP       $7D6            ; Jump to 7D6
$9D2    $D7F8   DRW      V7, VF, #8      ; Draw 8-byte sprite at V7, VF
$9D4    $7D42   ADD      VD, #42         ; Add 66 to VD
$9D6    $B00A   JP       V0, $00A        ; Jump to V0 + 00A
$9D8    $C3D3   RND      V3, #D3         ; V3 = random & D3
$9DA    $1890   JP       $890            ; Jump to 890
$9DC    $DA78   DRW      VA, V7, #8      ; Draw 8-byte sprite at VA, V7
$9DE    $1E41   JP       $E41            ; Jump to E41
$9E0    $DC02   DRW      VC, V0, #2      ; Draw 2-byte sprite at VC, V0
$9E2    $9A46   UNKNOWN  $9A46           ; Unknown 9xxx instruction
$9E4    $750E   ADD      V5, #0E         ; Add 14 to V5
$9E6    $C139   RND      V1, #39         ; V1 = random & 39
$9E8    $6CBD   LD       VC, #BD         ; Load 189 into VC
$9EA    $B568   JP       V0, $568        ; Jump to V0 + 568
$9EC    $4A8E   SNE      VA, #8E         ; Skip if VA != 142
$9EE    $33E5   SE       V3, #E5         ; Skip if V3 == 229
$9F0    $EA4A   UNKNOWN  $EA4A           ; Unknown Exxx instruction
$9F2    $975C   UNKNOWN  $975C           ; Unknown 9xxx instruction
$9F4    $16F4   JP       $6F4            ; Jump to 6F4
$9F6    $12AF   JP       $2AF            ; Jump to 2AF
$9F8    $981E   UNKNOWN  $981E           ; Unknown 9xxx instruction
$9FA    $43A2   SNE      V3, #A2         ; Skip if V3 != 162
$9FC    $7DA3   ADD      VD, #A3         ; Add 163 to VD
$9FE    $CE34   RND      VE, #34         ; VE = random & 34
$A00    $39F2   SE       V9, #F2         ; Skip if V9 == 242
$A02    $6611   LD       V6, #11         ; Load 17 into V6
$A04    $3B2B   SE       VB, #2B         ; Skip if VB == 43
$A06    $9BF9   UNKNOWN  $9BF9           ; Unknown 9xxx instruction
$A08    $0254   SYS      $254            ; System call to 254
$A0A    $962E   UNKNOWN  $962E           ; Unknown 9xxx instruction
$A0C    $45E8   SNE      V5, #E8         ; Skip if V5 != 232
$A0E    $000D   SYS      $00D            ; System call to 00D
$A10    $5EC3   UNKNOWN  $5EC3           ; Unknown 5xxx instruction
$A12    $376A   SE       V7, #6A         ; Skip if V7 == 106
$A14    $BF2D   JP       V0, $F2D        ; Jump to V0 + F2D
$A16    $F152   UNKNOWN  F152            ; Unknown Fxxx instruction
$A18    $9E63   UNKNOWN  $9E63           ; Unknown 9xxx instruction
$A1A    $C5CE   RND      V5, #CE         ; V5 = random & CE
$A1C    $3107   SE       V1, #07         ; Skip if V1 == 7
$A1E    $546C   UNKNOWN  $546C           ; Unknown 5xxx instruction
$A20    $BD5A   JP       V0, $D5A        ; Jump to V0 + D5A
$A22    $39A1   SE       V9, #A1         ; Skip if V9 == 161
$A24    $9245   UNKNOWN  $9245           ; Unknown 9xxx instruction
$A26    $78B7   ADD      V8, #B7         ; Add 183 to V8
$A28    $B013   JP       V0, $013        ; Jump to V0 + 013
$A2A    $6617   LD       V6, #17         ; Load 23 into V6
$A2C    $3A2A   SE       VA, #2A         ; Skip if VA == 42
$A2E    $E8EF   UNKNOWN  $E8EF           ; Unknown Exxx instruction
$A30    $BFE3   JP       V0, $FE3        ; Jump to V0 + FE3
$A32    $471F   SNE      V7, #1F         ; Skip if V7 != 31
$A34    $498C   SNE      V9, #8C         ; Skip if V9 != 140
$A36    $1ACD   JP       $ACD            ; Jump to ACD
$A38    $EBC6   UNKNOWN  $EBC6           ; Unknown Exxx instruction
$A3A    $897F   UNKNOWN  897F            ; Unknown 8xxx instruction
$A3C    $4762   SNE      V7, #62         ; Skip if V7 != 98
$A3E    $86AA   UNKNOWN  86AA            ; Unknown 8xxx instruction
$A40    $AA21   LD       I, $A21         ; Load A21 into I
$A42    $5FFB   UNKNOWN  $5FFB           ; Unknown 5xxx instruction
$A44    $673E   LD       V7, #3E         ; Load 62 into V7
$A46    $A10C   LD       I, $10C         ; Load 10C into I
$A48    $C6D2   RND      V6, #D2         ; V6 = random & D2
$A4A    $0CCC   SYS      $CCC            ; System call to CCC
$A4C    $3AA7   SE       VA, #A7         ; Skip if VA == 167
$A4E    $13CB   JP       $3CB            ; Jump to 3CB
$A50    $EA85   UNKNOWN  $EA85           ; Unknown Exxx instruction
$A52    $3522   SE       V5, #22         ; Skip if V5 == 34
$A54    $1373   JP       $373            ; Jump to 373
$A56    $DD54   DRW      VD, V5, #4      ; Draw 4-byte sprite at VD, V5
$A58    $E4BF   UNKNOWN  $E4BF           ; Unknown Exxx instruction
$A5A    $A369   LD       I, $369         ; Load 369 into I
$A5C    $2CDB   CALL     $CDB            ; Call subroutine at CDB
$A5E    $3D19   SE       VD, #19         ; Skip if VD == 25
$A60    $7DC2   ADD      VD, #C2         ; Add 194 to VD
$A62    $63EF   LD       V3, #EF         ; Load 239 into V3
$A64    $139F   JP       $39F            ; Jump to 39F
$A66    $F77C   UNKNOWN  F77C            ; Unknown Fxxx instruction
$A68    $FE93   UNKNOWN  FE93            ; Unknown Fxxx instruction
$A6A    $478A   SNE      V7, #8A         ; Skip if V7 != 138
$A6C    $F1B5   UNKNOWN  F1B5            ; Unknown Fxxx instruction
$A6E    $4D74   SNE      VD, #74         ; Skip if VD != 116
$A70    $1A16   JP       $A16            ; Jump to A16
$A72    $A2A9   LD       I, $2A9         ; Load 2A9 into I
$A74    $671D   LD       V7, #1D         ; Load 29 into V7
$A76    $1CF0   JP       $CF0            ; Jump to CF0
$A78    $6B1A   LD       VB, #1A         ; Load 26 into VB
$A7A    $3A06   SE       VA, #06         ; Skip if VA == 6
$A7C    $3D3F   SE       VD, #3F         ; Skip if VD == 63
$A7E    $6ED0   LD       VE, #D0         ; Load 208 into VE
$A80    $11E4   JP       $1E4            ; Jump to 1E4
$A82    $EA34   UNKNOWN  $EA34           ; Unknown Exxx instruction
$A84    $22A4   CALL     $2A4            ; Call subroutine at 2A4
$A86    $5B6D   UNKNOWN  $5B6D           ; Unknown 5xxx instruction
$A88    $60ED   LD       V0, #ED         ; Load 237 into V0
$A8A    $1949   JP       $949            ; Jump to 949
$A8C    $ABAF   LD       I, $BAF         ; Load BAF into I
$A8E    $A5EE   LD       I, $5EE         ; Load 5EE into I
$A90    $C6D8   RND      V6, #D8         ; V6 = random & D8
$A92    $E560   UNKNOWN  $E560           ; Unknown Exxx instruction
$A94    $00BC   SYS      $0BC            ; System call to 0BC
$A96    $B44C   JP       V0, $44C        ; Jump to V0 + 44C
$A98    $271E   CALL     $71E            ; Call subroutine at 71E
$A9A    $713E   ADD      V1, #3E         ; Add 62 to V1
$A9C    $8C0B   UNKNOWN  8C0B            ; Unknown 8xxx instruction
$A9E    $1A8B   JP       $A8B            ; Jump to A8B
$AA0    $16F2   JP       $6F2            ; Jump to 6F2
$AA2    $1902   JP       $902            ; Jump to 902
$AA4    $B722   JP       V0, $722        ; Jump to V0 + 722
$AA6    $189C   JP       $89C            ; Jump to 89C
$AA8    $8418   UNKNOWN  8418            ; Unknown 8xxx instruction
$AAA    $730D   ADD      V3, #0D         ; Add 13 to V3
$AAC    $D742   DRW      V7, V4, #2      ; Draw 2-byte sprite at V7, V4
$AAE    $DB48   DRW      VB, V4, #8      ; Draw 8-byte sprite at VB, V4
$AB0    $3C8A   SE       VC, #8A         ; Skip if VC == 138
$AB2    $09E1   SYS      $9E1            ; System call to 9E1
$AB4    $B5B1   JP       V0, $5B1        ; Jump to V0 + 5B1
$AB6    $53A8   UNKNOWN  $53A8           ; Unknown 5xxx instruction
$AB8    $9B4E   UNKNOWN  $9B4E           ; Unknown 9xxx instruction
$ABA    $02D7   SYS      $2D7            ; System call to 2D7
$ABC    $9A27   UNKNOWN  $9A27           ; Unknown 9xxx instruction
$ABE    $368C   SE       V6, #8C         ; Skip if V6 == 140
$AC0    $9F0C   UNKNOWN  $9F0C           ; Unknown 9xxx instruction
$AC2    $DE3C   DRW      VE, V3, #C      ; Draw 12-byte sprite at VE, V3
$AC4    $756D   ADD      V5, #6D         ; Add 109 to V5
$AC6    $D504   DRW      V5, V0, #4      ; Draw 4-byte sprite at V5, V0
$AC8    $C7A2   RND      V7, #A2         ; V7 = random & A2
$ACA    $D7F1   DRW      V7, VF, #1      ; Draw 1-byte sprite at V7, VF
$ACC    $9F29   UNKNOWN  $9F29           ; Unknown 9xxx instruction
$ACE    $9DE9   UNKNOWN  $9DE9           ; Unknown 9xxx instruction
$AD0    $3C05   SE       VC, #05         ; Skip if VC == 5
$AD2    $ECC9   UNKNOWN  $ECC9           ; Unknown Exxx instruction
$AD4    $D5B4   DRW      V5, VB, #4      ; Draw 4-byte sprite at V5, VB
$AD6    $148A   JP       $48A            ; Jump to 48A
$AD8    $70F1   ADD      V0, #F1         ; Add 241 to V0
$ADA    $185C   JP       $85C            ; Jump to 85C
$ADC    $CF70   RND      VF, #70         ; VF = random & 70
$ADE    $381E   SE       V8, #1E         ; Skip if V8 == 30
$AE0    $41AC   SNE      V1, #AC         ; Skip if V1 != 172
$AE2    $8424   ADD      V4, V2          ; V4 += V2, VF = carry
$AE4    $A55D   LD       I, $55D         ; Load 55D into I
$AE6    $32D3   SE       V2, #D3         ; Skip if V2 == 211
$AE8    $3F3C   SE       VF, #3C         ; Skip if VF == 60
$AEA    $74B3   ADD      V4, #B3         ; Add 179 to V4
$AEC    $54B7   UNKNOWN  $54B7           ; Unknown 5xxx instruction
$AEE    $0874   SYS      $874            ; System call to 874
$AF0    $60F5   LD       V0, #F5         ; Load 245 into V0
$AF2    $70C9   ADD      V0, #C9         ; Add 201 to V0
$AF4    $507C   UNKNOWN  $507C           ; Unknown 5xxx instruction
$AF6    $B522   JP       V0, $522        ; Jump to V0 + 522
$AF8    $DDFE   DRW      VD, VF, #E      ; Draw 14-byte sprite at VD, VF
$AFA    $E725   UNKNOWN  $E725           ; Unknown Exxx instruction
$AFC    $9FFC   UNKNOWN  $9FFC           ; Unknown 9xxx instruction
$AFE    $50BD   UNKNOWN  $50BD           ; Unknown 5xxx instruction
$B00    $4071   SNE      V0, #71         ; Skip if V0 != 113
$B02    $4C3F   SNE      VC, #3F         ; Skip if VC != 63
$B04    $4570   SNE      V5, #70         ; Skip if V5 != 112
$B06    $F1DB   UNKNOWN  F1DB            ; Unknown Fxxx instruction
$B08    $6866   LD       V8, #66         ; Load 102 into V8
$B0A    $00ED   SYS      $0ED            ; System call to 0ED
$B0C    $0D51   SYS      $D51            ; System call to D51
$B0E    $8380   LD       V3, V8          ; V3 = V8
$B10    $4CF3   SNE      VC, #F3         ; Skip if VC != 243
$B12    $9956   UNKNOWN  $9956           ; Unknown 9xxx instruction
$B14    $8652   AND      V6, V5          ; V6 &= V5
$B16    $2535   CALL     $535            ; Call subroutine at 535
$B18    $484F   SNE      V8, #4F         ; Skip if V8 != 79
$B1A    $408C   SNE      V0, #8C         ; Skip if V0 != 140
$B1C    $4A51   SNE      VA, #51         ; Skip if VA != 81
$B1E    $30E1   SE       V0, #E1         ; Skip if V0 == 225
$B20    $CB79   RND      VB, #79         ; VB = random & 79
$B22    $2C48   CALL     $C48            ; Call subroutine at C48
$B24    $0BD6   SYS      $BD6            ; System call to BD6
$B26    $167E   JP       $67E            ; Jump to 67E
$B28    $451D   SNE      V5, #1D         ; Skip if V5 != 29
$B2A    $AFEC   LD       I, $FEC         ; Load FEC into I
$B2C    $743F   ADD      V4, #3F         ; Add 63 to V4
$B2E    $0F69   SYS      $F69            ; System call to F69
$B30    $2F55   CALL     $F55            ; Call subroutine at F55
$B32    $649C   LD       V4, #9C         ; Load 156 into V4
$B34    $F51B   UNKNOWN  F51B            ; Unknown Fxxx instruction
$B36    $1DA6   JP       $DA6            ; Jump to DA6
$B38    $EC5B   UNKNOWN  $EC5B           ; Unknown Exxx instruction
$B3A    $B01A   JP       V0, $01A        ; Jump to V0 + 01A
$B3C    $C2B0   RND      V2, #B0         ; V2 = random & B0
$B3E    $A44A   LD       I, $44A         ; Load 44A into I
$B40    $1D6F   JP       $D6F            ; Jump to D6F
$B42    $27DD   CALL     $7DD            ; Call subroutine at 7DD
$B44    $B105   JP       V0, $105        ; Jump to V0 + 105
$B46    $59FB   UNKNOWN  $59FB           ; Unknown 5xxx instruction
$B48    $7084   ADD      V0, #84         ; Add 132 to V0
$B4A    $5ACF   UNKNOWN  $5ACF           ; Unknown 5xxx instruction
$B4C    $EDA3   UNKNOWN  $EDA3           ; Unknown Exxx instruction
$B4E    $3BA0   SE       VB, #A0         ; Skip if VB == 160
$B50    $2FEF   CALL     $FEF            ; Call subroutine at FEF
$B52    $2D03   CALL     $D03            ; Call subroutine at D03
$B54    $479F   SNE      V7, #9F         ; Skip if V7 != 159
$B56    $7DDA   ADD      VD, #DA         ; Add 218 to VD
$B58    $59FB   UNKNOWN  $59FB           ; Unknown 5xxx instruction
$B5A    $0B95   SYS      $B95            ; System call to B95
$B5C    $488F   SNE      V8, #8F         ; Skip if V8 != 143
$B5E    $3A36   SE       VA, #36         ; Skip if VA == 54
$B60    $0A35   SYS      $A35            ; System call to A35
$B62    $E99D   UNKNOWN  $E99D           ; Unknown Exxx instruction
$B64    $796E   ADD      V9, #6E         ; Add 110 to V9
$B66    $09DA   SYS      $9DA            ; System call to 9DA
$B68    $7BB1   ADD      VB, #B1         ; Add 177 to VB
$B6A    $86B8   UNKNOWN  86B8            ; Unknown 8xxx instruction
$B6C    $C742   RND      V7, #42         ; V7 = random & 42
$B6E    $846A   UNKNOWN  846A            ; Unknown 8xxx instruction
$B70    $2FA6   CALL     $FA6            ; Call subroutine at FA6
$B72    $918B   UNKNOWN  $918B           ; Unknown 9xxx instruction
$B74    $F1A7   UNKNOWN  F1A7            ; Unknown Fxxx instruction
$B76    $8EF3   XOR      VE, VF          ; VE ^= VF
$B78    $DAFB   DRW      VA, VF, #B      ; Draw 11-byte sprite at VA, VF
$B7A    $2F88   CALL     $F88            ; Call subroutine at F88
$B7C    $EFF5   UNKNOWN  $EFF5           ; Unknown Exxx instruction
$B7E    $59FD   UNKNOWN  $59FD           ; Unknown 5xxx instruction
$B80    $AF6E   LD       I, $F6E         ; Load F6E into I
$B82    $1269   JP       $269            ; Jump to 269
$B84    $715F   ADD      V1, #5F         ; Add 95 to V1
$B86    $5303   UNKNOWN  $5303           ; Unknown 5xxx instruction
$B88    $AA28   LD       I, $A28         ; Load A28 into I
$B8A    $1EA0   JP       $EA0            ; Jump to EA0
$B8C    $F556   UNKNOWN  F556            ; Unknown Fxxx instruction
$B8E    $4E4A   SNE      VE, #4A         ; Skip if VE != 74
$B90    $FF2A   UNKNOWN  FF2A            ; Unknown Fxxx instruction
$B92    $4A40   SNE      VA, #40         ; Skip if VA != 64
$B94    $11E2   JP       $1E2            ; Jump to 1E2
$B96    $BC28   JP       V0, $C28        ; Jump to V0 + C28
$B98    $9E15   UNKNOWN  $9E15           ; Unknown 9xxx instruction
$B9A    $E92B   UNKNOWN  $E92B           ; Unknown Exxx instruction
$B9C    $34FD   SE       V4, #FD         ; Skip if V4 == 253
$B9E    $7E6E   ADD      VE, #6E         ; Add 110 to VE
$BA0    $ECCD   UNKNOWN  $ECCD           ; Unknown Exxx instruction
$BA2    $31F5   SE       V1, #F5         ; Skip if V1 == 245
$BA4    $85E9   UNKNOWN  85E9            ; Unknown 8xxx instruction
$BA6    $C96A   RND      V9, #6A         ; V9 = random & 6A
$BA8    $BA29   JP       V0, $A29        ; Jump to V0 + A29
$BAA    $8A2D   UNKNOWN  8A2D            ; Unknown 8xxx instruction
$BAC    $E69C   UNKNOWN  $E69C           ; Unknown Exxx instruction
$BAE    $E61B   UNKNOWN  $E61B           ; Unknown Exxx instruction
$BB0    $3513   SE       V5, #13         ; Skip if V5 == 19
$BB2    $08A1   SYS      $8A1            ; System call to 8A1
$BB4    $FA28   UNKNOWN  FA28            ; Unknown Fxxx instruction
$BB6    $6C99   LD       VC, #99         ; Load 153 into VC
$BB8    $EF1C   UNKNOWN  $EF1C           ; Unknown Exxx instruction
$BBA    $DB02   DRW      VB, V0, #2      ; Draw 2-byte sprite at VB, V0
$BBC    $C3A0   RND      V3, #A0         ; V3 = random & A0
$BBE    $B742   JP       V0, $742        ; Jump to V0 + 742
$BC0    $5C9E   UNKNOWN  $5C9E           ; Unknown 5xxx instruction
$BC2    $2E10   CALL     $E10            ; Call subroutine at E10
$BC4    $8DE4   ADD      VD, VE          ; VD += VE, VF = carry
$BC6    $B089   JP       V0, $089        ; Jump to V0 + 089
$BC8    $FAAC   UNKNOWN  FAAC            ; Unknown Fxxx instruction
$BCA    $6821   LD       V8, #21         ; Load 33 into V8
$BCC    $A1DA   LD       I, $1DA         ; Load 1DA into I
$BCE    $E1B1   UNKNOWN  $E1B1           ; Unknown Exxx instruction
$BD0    $65B2   LD       V5, #B2         ; Load 178 into V5
$BD2    $571B   UNKNOWN  $571B           ; Unknown 5xxx instruction
$BD4    $A4DD   LD       I, $4DD         ; Load 4DD into I
$BD6    $83D4   ADD      V3, VD          ; V3 += VD, VF = carry
$BD8    $7961   ADD      V9, #61         ; Add 97 to V9
$BDA    $55CC   UNKNOWN  $55CC           ; Unknown 5xxx instruction
$BDC    $8A6F   UNKNOWN  8A6F            ; Unknown 8xxx instruction
$BDE    $B235   JP       V0, $235        ; Jump to V0 + 235
$BE0    $BB73   JP       V0, $B73        ; Jump to V0 + B73
$BE2    $FE3C   UNKNOWN  FE3C            ; Unknown Fxxx instruction
$BE4    $FE49   UNKNOWN  FE49            ; Unknown Fxxx instruction
$BE6    $AF8A   LD       I, $F8A         ; Load F8A into I
$BE8    $7B91   ADD      VB, #91         ; Add 145 to VB
$BEA    $533D   UNKNOWN  $533D           ; Unknown 5xxx instruction
$BEC    $2A2E   CALL     $A2E            ; Call subroutine at A2E
$BEE    $9920   SNE      V9, V2          ; Skip if V9 != V2
$BF0    $8A8F   UNKNOWN  8A8F            ; Unknown 8xxx instruction
$BF2    $31C1   SE       V1, #C1         ; Skip if V1 == 193
$BF4    $9E9F   UNKNOWN  $9E9F           ; Unknown 9xxx instruction
$BF6    $7428   ADD      V4, #28         ; Add 40 to V4
$BF8    $C98E   RND      V9, #8E         ; V9 = random & 8E
$BFA    $AFEE   LD       I, $FEE         ; Load FEE into I
$BFC    $26A8   CALL     $6A8            ; Call subroutine at 6A8
$BFE    $D25F   DRW      V2, V5, #F      ; Draw 15-byte sprite at V2, V5
$C00    $4DB5   SNE      VD, #B5         ; Skip if VD != 181
$C02    $74FB   ADD      V4, #FB         ; Add 251 to V4
$C04    $D5BD   DRW      V5, VB, #D      ; Draw 13-byte sprite at V5, VB
$C06    $12B7   JP       $2B7            ; Jump to 2B7
$C08    $33A6   SE       V3, #A6         ; Skip if V3 == 166
$C0A    $5E16   UNKNOWN  $5E16           ; Unknown 5xxx instruction
$C0C    $BE3A   JP       V0, $E3A        ; Jump to V0 + E3A
$C0E    $A9D1   LD       I, $9D1         ; Load 9D1 into I
$C10    $FEFF   UNKNOWN  FEFF            ; Unknown Fxxx instruction
$C12    $F17D   UNKNOWN  F17D            ; Unknown Fxxx instruction
$C14    $AF20   LD       I, $F20         ; Load F20 into I
$C16    $C818   RND      V8, #18         ; V8 = random & 18
$C18    $D634   DRW      V6, V3, #4      ; Draw 4-byte sprite at V6, V3
$C1A    $535E   UNKNOWN  $535E           ; Unknown 5xxx instruction
$C1C    $7EE6   ADD      VE, #E6         ; Add 230 to VE
$C1E    $8177   SUBN     V1, V7          ; V1 = V7 - V1, VF = !borrow
$C20    $8580   LD       V5, V8          ; V5 = V8
$C22    $C238   RND      V2, #38         ; V2 = random & 38
$C24    $8C6A   UNKNOWN  8C6A            ; Unknown 8xxx instruction
$C26    $7EF3   ADD      VE, #F3         ; Add 243 to VE
$C28    $C6B3   RND      V6, #B3         ; V6 = random & B3
$C2A    $250C   CALL     $50C            ; Call subroutine at 50C
$C2C    $63E5   LD       V3, #E5         ; Load 229 into V3
$C2E    $E912   UNKNOWN  $E912           ; Unknown Exxx instruction
$C30    $F9AB   UNKNOWN  F9AB            ; Unknown Fxxx instruction
$C32    $94E5   UNKNOWN  $94E5           ; Unknown 9xxx instruction
$C34    $D64C   DRW      V6, V4, #C      ; Draw 12-byte sprite at V6, V4
$C36    $F565   LD       V5, [I]         ; Load V0-V5 from I
$C38    $197F   JP       $97F            ; Jump to 97F
$C3A    $ACCC   LD       I, $CCC         ; Load CCC into I
$C3C    $A66D   LD       I, $66D         ; Load 66D into I
$C3E    $832A   UNKNOWN  832A            ; Unknown 8xxx instruction
$C40    $3235   SE       V2, #35         ; Skip if V2 == 53
$C42    $51A4   UNKNOWN  $51A4           ; Unknown 5xxx instruction
$C44    $369B   SE       V6, #9B         ; Skip if V6 == 155
$C46    $27AC   CALL     $7AC            ; Call subroutine at 7AC
$C48    $19CC   JP       $9CC            ; Jump to 9CC
$C4A    $D02A   DRW      V0, V2, #A      ; Draw 10-byte sprite at V0, V2
$C4C    $EBA4   UNKNOWN  $EBA4           ; Unknown Exxx instruction
$C4E    $4775   SNE      V7, #75         ; Skip if V7 != 117
$C50    $C4CB   RND      V4, #CB         ; V4 = random & CB
$C52    $C795   RND      V7, #95         ; V7 = random & 95
$C54    $EE54   UNKNOWN  $EE54           ; Unknown Exxx instruction
$C56    $2945   CALL     $945            ; Call subroutine at 945
$C58    $3578   SE       V5, #78         ; Skip if V5 == 120
$C5A    $4DBA   SNE      VD, #BA         ; Skip if VD != 186
$C5C    $CDE3   RND      VD, #E3         ; VD = random & E3
$C5E    $553D   UNKNOWN  $553D           ; Unknown 5xxx instruction
$C60    $7851   ADD      V8, #51         ; Add 81 to V8
$C62    $9A74   UNKNOWN  $9A74           ; Unknown 9xxx instruction
$C64    $543D   UNKNOWN  $543D           ; Unknown 5xxx instruction
$C66    $D942   DRW      V9, V4, #2      ; Draw 2-byte sprite at V9, V4
$C68    $CED7   RND      VE, #D7         ; VE = random & D7
$C6A    $5DC5   UNKNOWN  $5DC5           ; Unknown 5xxx instruction
$C6C    $0D7F   SYS      $D7F            ; System call to D7F
$C6E    $C11B   RND      V1, #1B         ; V1 = random & 1B
$C70    $50C9   UNKNOWN  $50C9           ; Unknown 5xxx instruction
$C72    $CDAE   RND      VD, #AE         ; VD = random & AE
$C74    $F4A6   UNKNOWN  F4A6            ; Unknown Fxxx instruction
$C76    $CCEE   RND      VC, #EE         ; VC = random & EE
$C78    $9E49   UNKNOWN  $9E49           ; Unknown 9xxx instruction
$C7A    $E70F   UNKNOWN  $E70F           ; Unknown Exxx instruction
$C7C    $C63B   RND      V6, #3B         ; V6 = random & 3B
$C7E    $687F   LD       V8, #7F         ; Load 127 into V8
$C80    $798B   ADD      V9, #8B         ; Add 139 to V9
$C82    $FBBB   UNKNOWN  FBBB            ; Unknown Fxxx instruction
$C84    $6B18   LD       VB, #18         ; Load 24 into VB
$C86    $B836   JP       V0, $836        ; Jump to V0 + 836
$C88    $5114   UNKNOWN  $5114           ; Unknown 5xxx instruction
$C8A    $E77F   UNKNOWN  $E77F           ; Unknown Exxx instruction
$C8C    $53F8   UNKNOWN  $53F8           ; Unknown 5xxx instruction
$C8E    $45FE   SNE      V5, #FE         ; Skip if V5 != 254
$C90    $04B8   SYS      $4B8            ; System call to 4B8
$C92    $CBDA   RND      VB, #DA         ; VB = random & DA
$C94    $49DF   SNE      V9, #DF         ; Skip if V9 != 223
$C96    $2241   CALL     $241            ; Call subroutine at 241
$C98    $13E2   JP       $3E2            ; Jump to 3E2
$C9A    $B1CA   JP       V0, $1CA        ; Jump to V0 + 1CA
$C9C    $FC5B   UNKNOWN  FC5B            ; Unknown Fxxx instruction
$C9E    $CCC2   RND      VC, #C2         ; VC = random & C2
$CA0    $3693   SE       V6, #93         ; Skip if V6 == 147
$CA2    $4043   SNE      V0, #43         ; Skip if V0 != 67
$CA4    $6292   LD       V2, #92         ; Load 146 into V2
$CA6    $DDC5   DRW      VD, VC, #5      ; Draw 5-byte sprite at VD, VC
$CA8    $F026   UNKNOWN  F026            ; Unknown Fxxx instruction
$CAA    $4A01   SNE      VA, #01         ; Skip if VA != 1
$CAC    $ED4C   UNKNOWN  $ED4C           ; Unknown Exxx instruction
$CAE    $9A2C   UNKNOWN  $9A2C           ; Unknown 9xxx instruction
$CB0    $2020   CALL     $020            ; Call subroutine at 020
$CB2    $D11A   DRW      V1, V1, #A      ; Draw 10-byte sprite at V1, V1
$CB4    $76A9   ADD      V6, #A9         ; Add 169 to V6
$CB6    $BABB   JP       V0, $ABB        ; Jump to V0 + ABB
$CB8    $5314   UNKNOWN  $5314           ; Unknown 5xxx instruction
$CBA    $A007   LD       I, $007         ; Load 007 into I
$CBC    $A276   LD       I, $276         ; Load 276 into I
$CBE    $11C0   JP       $1C0            ; Jump to 1C0
$CC0    $828B   UNKNOWN  828B            ; Unknown 8xxx instruction
$CC2    $DB35   DRW      VB, V3, #5      ; Draw 5-byte sprite at VB, V3
$CC4    $0443   SYS      $443            ; System call to 443
$CC6    $7638   ADD      V6, #38         ; Add 56 to V6
$CC8    $228A   CALL     $28A            ; Call subroutine at 28A
$CCA    $9E9B   UNKNOWN  $9E9B           ; Unknown 9xxx instruction
$CCC    $9291   UNKNOWN  $9291           ; Unknown 9xxx instruction
$CCE    $AAC6   LD       I, $AC6         ; Load AC6 into I
$CD0    $968A   UNKNOWN  $968A           ; Unknown 9xxx instruction
$CD2    $CEA2   RND      VE, #A2         ; VE = random & A2
$CD4    $4B1A   SNE      VB, #1A         ; Skip if VB != 26
$CD6    $5279   UNKNOWN  $5279           ; Unknown 5xxx instruction
$CD8    $F9E3   UNKNOWN  F9E3            ; Unknown Fxxx instruction
$CDA    $C1DB   RND      V1, #DB         ; V1 = random & DB
$CDC    $789D   ADD      V8, #9D         ; Add 157 to V8
$CDE    $504C   UNKNOWN  $504C           ; Unknown 5xxx instruction
$CE0    $E80C   UNKNOWN  $E80C           ; Unknown Exxx instruction
$CE2    $B011   JP       V0, $011        ; Jump to V0 + 011
$CE4    $C563   RND      V5, #63         ; V5 = random & 63
$CE6    $3223   SE       V2, #23         ; Skip if V2 == 35
$CE8    $C693   RND      V6, #93         ; V6 = random & 93
$CEA    $22C4   CALL     $2C4            ; Call subroutine at 2C4
$CEC    $E190   UNKNOWN  $E190           ; Unknown Exxx instruction
$CEE    $BA3E   JP       V0, $A3E        ; Jump to V0 + A3E
$CF0    $6037   LD       V0, #37         ; Load 55 into V0
$CF2    $234E   CALL     $34E            ; Call subroutine at 34E
$CF4    $B563   JP       V0, $563        ; Jump to V0 + 563
$CF6    $E8B3   UNKNOWN  $E8B3           ; Unknown Exxx instruction
$CF8    $86A0   LD       V6, VA          ; V6 = VA
$CFA    $5D17   UNKNOWN  $5D17           ; Unknown 5xxx instruction
$CFC    $809B   UNKNOWN  809B            ; Unknown 8xxx instruction
$CFE    $521B   UNKNOWN  $521B           ; Unknown 5xxx instruction
$D00    $E394   UNKNOWN  $E394           ; Unknown Exxx instruction
$D02    $C4D9   RND      V4, #D9         ; V4 = random & D9
$D04    $7BAA   ADD      VB, #AA         ; Add 170 to VB
$D06    $35B2   SE       V5, #B2         ; Skip if V5 == 178
$D08    $C466   RND      V4, #66         ; V4 = random & 66
$D0A    $E686   UNKNOWN  $E686           ; Unknown Exxx instruction
$D0C    $F5D0   UNKNOWN  F5D0            ; Unknown Fxxx instruction
$D0E    $D872   DRW      V8, V7, #2      ; Draw 2-byte sprite at V8, V7
$D10    $E60F   UNKNOWN  $E60F           ; Unknown Exxx instruction
$D12    $0087   SYS      $087            ; System call to 087
$D14    $D2D2   DRW      V2, VD, #2      ; Draw 2-byte sprite at V2, VD
$D16    $8706   SHR      V7              ; V7 >>= 1, VF = LSB
$D18    $693F   LD       V9, #3F         ; Load 63 into V9
$D1A    $74B7   ADD      V4, #B7         ; Add 183 to V4
$D1C    $485A   SNE      V8, #5A         ; Skip if V8 != 90
$D1E    $C602   RND      V6, #02         ; V6 = random & 02
$D20    $6957   LD       V9, #57         ; Load 87 into V9
$D22    $CF80   RND      VF, #80         ; VF = random & 80
$D24    $DCBE   DRW      VC, VB, #E      ; Draw 14-byte sprite at VC, VB
$D26    $DC09   DRW      VC, V0, #9      ; Draw 9-byte sprite at VC, V0
$D28    $929B   UNKNOWN  $929B           ; Unknown 9xxx instruction
$D2A    $D4E3   DRW      V4, VE, #3      ; Draw 3-byte sprite at V4, VE
$D2C    $4BEB   SNE      VB, #EB         ; Skip if VB != 235
$D2E    $3EB6   SE       VE, #B6         ; Skip if VE == 182
$D30    $8137   SUBN     V1, V3          ; V1 = V3 - V1, VF = !borrow
$D32    $BEF2   JP       V0, $EF2        ; Jump to V0 + EF2
$D34    $159B   JP       $59B            ; Jump to 59B
$D36    $0880   SYS      $880            ; System call to 880
$D38    $4BC7   SNE      VB, #C7         ; Skip if VB != 199
$D3A    $5CE4   UNKNOWN  $5CE4           ; Unknown 5xxx instruction
$D3C    $E9FF   UNKNOWN  $E9FF           ; Unknown Exxx instruction
$D3E    $2D6C   CALL     $D6C            ; Call subroutine at D6C
$D40    $E92F   UNKNOWN  $E92F           ; Unknown Exxx instruction
$D42    $77BF   ADD      V7, #BF         ; Add 191 to V7
$D44    $F67F   UNKNOWN  F67F            ; Unknown Fxxx instruction
$D46    $FD60   UNKNOWN  FD60            ; Unknown Fxxx instruction
$D48    $583A   UNKNOWN  $583A           ; Unknown 5xxx instruction
$D4A    $528D   UNKNOWN  $528D           ; Unknown 5xxx instruction
$D4C    $DC7E   DRW      VC, V7, #E      ; Draw 14-byte sprite at VC, V7
$D4E    $3F98   SE       VF, #98         ; Skip if VF == 152
$D50    $234E   CALL     $34E            ; Call subroutine at 34E
$D52    $F832   UNKNOWN  F832            ; Unknown Fxxx instruction
$D54    $7108   ADD      V1, #08         ; Add 8 to V1
$D56    $5571   UNKNOWN  $5571           ; Unknown 5xxx instruction
$D58    $ECB9   UNKNOWN  $ECB9           ; Unknown Exxx instruction
$D5A    $DB98   DRW      VB, V9, #8      ; Draw 8-byte sprite at VB, V9
$D5C    $4F93   SNE      VF, #93         ; Skip if VF != 147
$D5E    $45D2   SNE      V5, #D2         ; Skip if V5 != 210
$D60    $1955   JP       $955            ; Jump to 955
$D62    $3FE7   SE       VF, #E7         ; Skip if VF == 231
$D64    $7621   ADD      V6, #21         ; Add 33 to V6
$D66    $05C5   SYS      $5C5            ; System call to 5C5
$D68    $F30F   UNKNOWN  F30F            ; Unknown Fxxx instruction
$D6A    $3DDE   SE       VD, #DE         ; Skip if VD == 222
$D6C    $EAA9   UNKNOWN  $EAA9           ; Unknown Exxx instruction
$D6E    $441F   SNE      V4, #1F         ; Skip if V4 != 31
$D70    $2D71   CALL     $D71            ; Call subroutine at D71
$D72    $824A   UNKNOWN  824A            ; Unknown 8xxx instruction
$D74    $A678   LD       I, $678         ; Load 678 into I
$D76    $552B   UNKNOWN  $552B           ; Unknown 5xxx instruction
$D78    $11CF   JP       $1CF            ; Jump to 1CF
$D7A    $53AB   UNKNOWN  $53AB           ; Unknown 5xxx instruction
$D7C    $91A1   UNKNOWN  $91A1           ; Unknown 9xxx instruction
$D7E    $68C5   LD       V8, #C5         ; Load 197 into V8
$D80    $4188   SNE      V1, #88         ; Skip if V1 != 136
$D82    $8F41   OR       VF, V4          ; VF |= V4
$D84    $B695   JP       V0, $695        ; Jump to V0 + 695
$D86    $063C   SYS      $63C            ; System call to 63C
$D88    $9FE1   UNKNOWN  $9FE1           ; Unknown 9xxx instruction
$D8A    $C6C6   RND      V6, #C6         ; V6 = random & C6
$D8C    $6FBF   LD       VF, #BF         ; Load 191 into VF
$D8E    $2311   CALL     $311            ; Call subroutine at 311
$D90    $4C02   SNE      VC, #02         ; Skip if VC != 2
$D92    $E121   UNKNOWN  $E121           ; Unknown Exxx instruction
$D94    $B2DC   JP       V0, $2DC        ; Jump to V0 + 2DC
$D96    $6889   LD       V8, #89         ; Load 137 into V8
$D98    $AB2E   LD       I, $B2E         ; Load B2E into I
$D9A    $8C69   UNKNOWN  8C69            ; Unknown 8xxx instruction
$D9C    $ECF9   UNKNOWN  $ECF9           ; Unknown Exxx instruction
$D9E    $7D9F   ADD      VD, #9F         ; Add 159 to VD
$DA0    $90DA   UNKNOWN  $90DA           ; Unknown 9xxx instruction
$DA2    $C4AE   RND      V4, #AE         ; V4 = random & AE
$DA4    $0A17   SYS      $A17            ; System call to A17
$DA6    $ADA7   LD       I, $DA7         ; Load DA7 into I
$DA8    $FCDE   UNKNOWN  FCDE            ; Unknown Fxxx instruction
$DAA    $FC83   UNKNOWN  FC83            ; Unknown Fxxx instruction
$DAC    $A851   LD       I, $851         ; Load 851 into I
$DAE    $300D   SE       V0, #0D         ; Skip if V0 == 13
$DB0    $3BF8   SE       VB, #F8         ; Skip if VB == 248
$DB2    $1B0D   JP       $B0D            ; Jump to B0D
$DB4    $4644   SNE      V6, #44         ; Skip if V6 != 68
$DB6    $96B3   UNKNOWN  $96B3           ; Unknown 9xxx instruction
$DB8    $0681   SYS      $681            ; System call to 681
$DBA    $D448   DRW      V4, V4, #8      ; Draw 8-byte sprite at V4, V4
$DBC    $96E6   UNKNOWN  $96E6           ; Unknown 9xxx instruction
$DBE    $84A6   SHR      V4              ; V4 >>= 1, VF = LSB
$DC0    $772B   ADD      V7, #2B         ; Add 43 to V7
$DC2    $554C   UNKNOWN  $554C           ; Unknown 5xxx instruction
$DC4    $1876   JP       $876            ; Jump to 876
$DC6    $FD7C   UNKNOWN  FD7C            ; Unknown Fxxx instruction
$DC8    $1BB9   JP       $BB9            ; Jump to BB9
$DCA    $E091   UNKNOWN  $E091           ; Unknown Exxx instruction
$DCC    $0EB2   SYS      $EB2            ; System call to EB2
$DCE    $0EE1   SYS      $EE1            ; System call to EE1
$DD0    $8A0C   UNKNOWN  8A0C            ; Unknown 8xxx instruction
$DD2    $CCBC   RND      VC, #BC         ; VC = random & BC
$DD4    $F122   UNKNOWN  F122            ; Unknown Fxxx instruction
$DD6    $A7C7   LD       I, $7C7         ; Load 7C7 into I
$DD8    $561F   UNKNOWN  $561F           ; Unknown 5xxx instruction
$DDA    $B70F   JP       V0, $70F        ; Jump to V0 + 70F
$DDC    $7AED   ADD      VA, #ED         ; Add 237 to VA
$DDE    $AF59   LD       I, $F59         ; Load F59 into I
$DE0    $089B   SYS      $89B            ; System call to 89B
$DE2    $0144   SYS      $144            ; System call to 144
$DE4    $785B   ADD      V8, #5B         ; Add 91 to V8
$DE6    $DF0C   DRW      VF, V0, #C      ; Draw 12-byte sprite at VF, V0
$DE8    $23BE   CALL     $3BE            ; Call subroutine at 3BE
$DEA    $439F   SNE      V3, #9F         ; Skip if V3 != 159
$DEC    $12C4   JP       $2C4            ; Jump to 2C4
$DEE    $C8B6   RND      V8, #B6         ; V8 = random & B6
$DF0    $13D0   JP       $3D0            ; Jump to 3D0
$DF2    $BE02   JP       V0, $E02        ; Jump to V0 + E02
$DF4    $B037   JP       V0, $037        ; Jump to V0 + 037
$DF6    $9D67   UNKNOWN  $9D67           ; Unknown 9xxx instruction
$DF8    $8C07   SUBN     VC, V0          ; VC = V0 - VC, VF = !borrow
$DFA    $8B1E   SHL      VB              ; VB <<= 1, VF = MSB
$DFC    $69A3   LD       V9, #A3         ; Load 163 into V9
$DFE    $6281   LD       V2, #81         ; Load 129 into V2
$E00    $3375   SE       V3, #75         ; Skip if V3 == 117
$E02    $2827   CALL     $827            ; Call subroutine at 827
$E04    $B856   JP       V0, $856        ; Jump to V0 + 856
$E06    $3273   SE       V2, #73         ; Skip if V2 == 115
$E08    $5DF5   UNKNOWN  $5DF5           ; Unknown 5xxx instruction
$E0A    $5DA4   UNKNOWN  $5DA4           ; Unknown 5xxx instruction
$E0C    $F240   UNKNOWN  F240            ; Unknown Fxxx instruction
$E0E    $CE44   RND      VE, #44         ; VE = random & 44
$E10    $2B88   CALL     $B88            ; Call subroutine at B88
$E12    $0EEB   SYS      $EEB            ; System call to EEB
$E14    $A24D   LD       I, $24D         ; Load 24D into I
$E16    $271E   CALL     $71E            ; Call subroutine at 71E
$E18    $288A   CALL     $88A            ; Call subroutine at 88A
$E1A    $7C7C   ADD      VC, #7C         ; Add 124 to VC
$E1C    $F1EB   UNKNOWN  F1EB            ; Unknown Fxxx instruction
$E1E    $D384   DRW      V3, V8, #4      ; Draw 4-byte sprite at V3, V8
$E20    $F9F6   UNKNOWN  F9F6            ; Unknown Fxxx instruction
$E22    $D61D   DRW      V6, V1, #D      ; Draw 13-byte sprite at V6, V1
$E24    $9D6D   UNKNOWN  $9D6D           ; Unknown 9xxx instruction
$E26    $1D0F   JP       $D0F            ; Jump to D0F
$E28    $D8EC   DRW      V8, VE, #C      ; Draw 12-byte sprite at V8, VE
$E2A    $8A44   ADD      VA, V4          ; VA += V4, VF = carry
$E2C    $8E0C   UNKNOWN  8E0C            ; Unknown 8xxx instruction
$E2E    $8808   UNKNOWN  8808            ; Unknown 8xxx instruction
$E30    $BE9A   JP       V0, $E9A        ; Jump to V0 + E9A
$E32    $081D   SYS      $81D            ; System call to 81D
$E34    $7574   ADD      V5, #74         ; Add 116 to V5
$E36    $0270   SYS      $270            ; System call to 270
$E38    $DE2D   DRW      VE, V2, #D      ; Draw 13-byte sprite at VE, V2
$E3A    $6760   LD       V7, #60         ; Load 96 into V7
$E3C    $C8C0   RND      V8, #C0         ; V8 = random & C0
$E3E    $A13E   LD       I, $13E         ; Load 13E into I
$E40    $0E14   SYS      $E14            ; System call to E14
$E42    $B73B   JP       V0, $73B        ; Jump to V0 + 73B
$E44    $E20A   UNKNOWN  $E20A           ; Unknown Exxx instruction
$E46    $B11E   JP       V0, $11E        ; Jump to V0 + 11E
$E48    $3E52   SE       VE, #52         ; Skip if VE == 82
$E4A    $CDA6   RND      VD, #A6         ; VD = random & A6
$E4C    $B9E4   JP       V0, $9E4        ; Jump to V0 + 9E4
$E4E    $63C4   LD       V3, #C4         ; Load 196 into V3
$E50    $1429   JP       $429            ; Jump to 429
$E52    $4E3E   SNE      VE, #3E         ; Skip if VE != 62
$E54    $A9FB   LD       I, $9FB         ; Load 9FB into I
$E56    $3F6E   SE       VF, #6E         ; Skip if VF == 110
$E58    $B7E5   JP       V0, $7E5        ; Jump to V0 + 7E5
$E5A    $70A7   ADD      V0, #A7         ; Add 167 to V0
$E5C    $34F3   SE       V4, #F3         ; Skip if V4 == 243
$E5E    $AA6C   LD       I, $A6C         ; Load A6C into I
$E60    $2AF7   CALL     $AF7            ; Call subroutine at AF7
$E62    $61C9   LD       V1, #C9         ; Load 201 into V1
$E64    $8296   SHR      V2              ; V2 >>= 1, VF = LSB
$E66    $6381   LD       V3, #81         ; Load 129 into V3
$E68    $2423   CALL     $423            ; Call subroutine at 423
$E6A    $5994   UNKNOWN  $5994           ; Unknown 5xxx instruction
$E6C    $B578   JP       V0, $578        ; Jump to V0 + 578
$E6E    $BB9F   JP       V0, $B9F        ; Jump to V0 + B9F
$E70    $BAA7   JP       V0, $AA7        ; Jump to V0 + AA7
$E72    $95FF   UNKNOWN  $95FF           ; Unknown 9xxx instruction
$E74    $F8D7   UNKNOWN  F8D7            ; Unknown Fxxx instruction
$E76    $1527   JP       $527            ; Jump to 527
$E78    $5E2E   UNKNOWN  $5E2E           ; Unknown 5xxx instruction
$E7A    $92C5   UNKNOWN  $92C5           ; Unknown 9xxx instruction
$E7C    $2EB9   CALL     $EB9            ; Call subroutine at EB9
$E7E    $3321   SE       V3, #21         ; Skip if V3 == 33
$E80    $9752   UNKNOWN  $9752           ; Unknown 9xxx instruction
$E82    $01AD   SYS      $1AD            ; System call to 1AD
$E84    $0ADB   SYS      $ADB            ; System call to ADB
$E86    $A1E3   LD       I, $1E3         ; Load 1E3 into I
$E88    $118C   JP       $18C            ; Jump to 18C
$E8A    $517A   UNKNOWN  $517A           ; Unknown 5xxx instruction
$E8C    $E31C   UNKNOWN  $E31C           ; Unknown Exxx instruction
$E8E    $9382   UNKNOWN  $9382           ; Unknown 9xxx instruction
$E90    $101F   JP       $01F            ; Jump to 01F
$E92    $D61C   DRW      V6, V1, #C      ; Draw 12-byte sprite at V6, V1
$E94    $D9CC   DRW      V9, VC, #C      ; Draw 12-byte sprite at V9, VC
$E96    $55AB   UNKNOWN  $55AB           ; Unknown 5xxx instruction
$E98    $5AD7   UNKNOWN  $5AD7           ; Unknown 5xxx instruction
$E9A    $43CE   SNE      V3, #CE         ; Skip if V3 != 206
$E9C    $AB7A   LD       I, $B7A         ; Load B7A into I
$E9E    $0F56   SYS      $F56            ; System call to F56
$EA0    $92D4   UNKNOWN  $92D4           ; Unknown 9xxx instruction
$EA2    $7124   ADD      V1, #24         ; Add 36 to V1
$EA4    $32E9   SE       V2, #E9         ; Skip if V2 == 233
$EA6    $724D   ADD      V2, #4D         ; Add 77 to V2
$EA8    $1197   JP       $197            ; Jump to 197
$EAA    $960C   UNKNOWN  $960C           ; Unknown 9xxx instruction
$EAC    $D0E2   DRW      V0, VE, #2      ; Draw 2-byte sprite at V0, VE
$EAE    $0BD9   SYS      $BD9            ; System call to BD9
$EB0    $358C   SE       V5, #8C         ; Skip if V5 == 140
$EB2    $0609   SYS      $609            ; System call to 609
$EB4    $AFD7   LD       I, $FD7         ; Load FD7 into I
$EB6    $84D1   OR       V4, VD          ; V4 |= VD
$EB8    $7BD2   ADD      VB, #D2         ; Add 210 to VB
$EBA    $3B18   SE       VB, #18         ; Skip if VB == 24
$EBC    $132D   JP       $32D            ; Jump to 32D
$EBE    $F908   UNKNOWN  F908            ; Unknown Fxxx instruction
$EC0    $4017   SNE      V0, #17         ; Skip if V0 != 23
$EC2    $1219   JP       $219            ; Jump to 219
$EC4    $9AC7   UNKNOWN  $9AC7           ; Unknown 9xxx instruction
$EC6    $5A97   UNKNOWN  $5A97           ; Unknown 5xxx instruction
$EC8    $A91B   LD       I, $91B         ; Load 91B into I
$ECA    $6D6E   LD       VD, #6E         ; Load 110 into VD
$ECC    $E185   UNKNOWN  $E185           ; Unknown Exxx instruction
$ECE    $1CDE   JP       $CDE            ; Jump to CDE
$ED0    $7E32   ADD      VE, #32         ; Add 50 to VE
$ED2    $2CD0   CALL     $CD0            ; Call subroutine at CD0
$ED4    $5546   UNKNOWN  $5546           ; Unknown 5xxx instruction
$ED6    $507B   UNKNOWN  $507B           ; Unknown 5xxx instruction
$ED8    $9839   UNKNOWN  $9839           ; Unknown 9xxx instruction
$EDA    $8080   LD       V0, V8          ; V0 = V8
$EDC    $E8F1   UNKNOWN  $E8F1           ; Unknown Exxx instruction
$EDE    $09D7   SYS      $9D7            ; System call to 9D7
$EE0    $0347   SYS      $347            ; System call to 347
$EE2    $C38A   RND      V3, #8A         ; V3 = random & 8A
$EE4    $6110   LD       V1, #10         ; Load 16 into V1
$EE6    $8D6D   UNKNOWN  8D6D            ; Unknown 8xxx instruction
$EE8    $158D   JP       $58D            ; Jump to 58D
$EEA    $A168   LD       I, $168         ; Load 168 into I
$EEC    $D0A5   DRW      V0, VA, #5      ; Draw 5-byte sprite at V0, VA
$EEE    $664A   LD       V6, #4A         ; Load 74 into V6
$EF0    $638D   LD       V3, #8D         ; Load 141 into V3
$EF2    $8444   ADD      V4, V4          ; V4 += V4, VF = carry
$EF4    $3104   SE       V1, #04         ; Skip if V1 == 4
$EF6    $2E57   CALL     $E57            ; Call subroutine at E57
$EF8    $0079   SYS      $079            ; System call to 079
$EFA    $E7CD   UNKNOWN  $E7CD           ; Unknown Exxx instruction
$EFC    $5AE2   UNKNOWN  $5AE2           ; Unknown 5xxx instruction
$EFE    $F323   UNKNOWN  F323            ; Unknown Fxxx instruction
$F00    $2956   CALL     $956            ; Call subroutine at 956
$F02    $E0E3   UNKNOWN  $E0E3           ; Unknown Exxx instruction
$F04    $0538   SYS      $538            ; System call to 538
$F06    $344D   SE       V4, #4D         ; Skip if V4 == 77
$F08    $E581   UNKNOWN  $E581           ; Unknown Exxx instruction
$F0A    $6C8C   LD       VC, #8C         ; Load 140 into VC
$F0C    $3689   SE       V6, #89         ; Skip if V6 == 137
$F0E    $3B19   SE       VB, #19         ; Skip if VB == 25
$F10    $3508   SE       V5, #08         ; Skip if V5 == 8
$F12    $73FC   ADD      V3, #FC         ; Add 252 to V3
$F14    $86FE   SHL      V6              ; V6 <<= 1, VF = MSB
$F16    $4F5B   SNE      VF, #5B         ; Skip if VF != 91
$F18    $1B62   JP       $B62            ; Jump to B62
$F1A    $447D   SNE      V4, #7D         ; Skip if V4 != 125
$F1C    $1259   JP       $259            ; Jump to 259
$F1E    $640D   LD       V4, #0D         ; Load 13 into V4
$F20    $63B3   LD       V3, #B3         ; Load 179 into V3
$F22    $E7D9   UNKNOWN  $E7D9           ; Unknown Exxx instruction
$F24    $50A6   UNKNOWN  $50A6           ; Unknown 5xxx instruction
$F26    $D54A   DRW      V5, V4, #A      ; Draw 10-byte sprite at V5, V4
$F28    $5324   UNKNOWN  $5324           ; Unknown 5xxx instruction
$F2A    $BADE   JP       V0, $ADE        ; Jump to V0 + ADE
$F2C    $BE72   JP       V0, $E72        ; Jump to V0 + E72
$F2E    $1B22   JP       $B22            ; Jump to B22
$F30    $9384   UNKNOWN  $9384           ; Unknown 9xxx instruction
$F32    $3989   SE       V9, #89         ; Skip if V9 == 137
$F34    $2EB9   CALL     $EB9            ; Call subroutine at EB9
$F36    $1975   JP       $975            ; Jump to 975
$F38    $972F   UNKNOWN  $972F           ; Unknown 9xxx instruction
$F3A    $3695   SE       V6, #95         ; Skip if V6 == 149
$F3C    $3675   SE       V6, #75         ; Skip if V6 == 117
$F3E    $A3FF   LD       I, $3FF         ; Load 3FF into I
$F40    $A91A   LD       I, $91A         ; Load 91A into I
$F42    $4E52   SNE      VE, #52         ; Skip if VE != 82
$F44    $8ED4   ADD      VE, VD          ; VE += VD, VF = carry
$F46    $ACCE   LD       I, $CCE         ; Load CCE into I
$F48    $E16A   UNKNOWN  $E16A           ; Unknown Exxx instruction
$F4A    $0C9F   SYS      $C9F            ; System call to C9F
$F4C    $C67E   RND      V6, #7E         ; V6 = random & 7E
$F4E    $8612   AND      V6, V1          ; V6 &= V1
$F50    $9712   UNKNOWN  $9712           ; Unknown 9xxx instruction
$F52    $543B   UNKNOWN  $543B           ; Unknown 5xxx instruction
$F54    $ECFD   UNKNOWN  $ECFD           ; Unknown Exxx instruction
$F56    $14F3   JP       $4F3            ; Jump to 4F3
$F58    $47EA   SNE      V7, #EA         ; Skip if V7 != 234
$F5A    $CB1F   RND      VB, #1F         ; VB = random & 1F
$F5C    $4FF5   SNE      VF, #F5         ; Skip if VF != 245
$F5E    $32FE   SE       V2, #FE         ; Skip if V2 == 254
$F60    $DE35   DRW      VE, V3, #5      ; Draw 5-byte sprite at VE, V3
$F62    $5BDA   UNKNOWN  $5BDA           ; Unknown 5xxx instruction
$F64    $5B21   UNKNOWN  $5B21           ; Unknown 5xxx instruction
$F66    $B5B1   JP       V0, $5B1        ; Jump to V0 + 5B1
$F68    $F829   LD       F, V8           ; I = sprite address for digit V8
$F6A    $6897   LD       V8, #97         ; Load 151 into V8
$F6C    $A34A   LD       I, $34A         ; Load 34A into I
$F6E    $EF10   UNKNOWN  $EF10           ; Unknown Exxx instruction
$F70    $631C   LD       V3, #1C         ; Load 28 into V3
$F72    $7C28   ADD      VC, #28         ; Add 40 to VC
$F74    $C743   RND      V7, #43         ; V7 = random & 43
$F76    $682C   LD       V8, #2C         ; Load 44 into V8
$F78    $CEEB   RND      VE, #EB         ; VE = random & EB
$F7A    $95F2   UNKNOWN  $95F2           ; Unknown 9xxx instruction
$F7C    $C395   RND      V3, #95         ; V3 = random & 95
$F7E    $125E   JP       $25E            ; Jump to 25E
$F80    $00E3   SYS      $0E3            ; System call to 0E3
$F82    $BCF0   JP       V0, $CF0        ; Jump to V0 + CF0
$F84    $3144   SE       V1, #44         ; Skip if V1 == 68
$F86    $6966   LD       V9, #66         ; Load 102 into V9
$F88    $8E8A   UNKNOWN  8E8A            ; Unknown 8xxx instruction
$F8A    $B9D7   JP       V0, $9D7        ; Jump to V0 + 9D7
$F8C    $A735   LD       I, $735         ; Load 735 into I
$F8E    $2E7E   CALL     $E7E            ; Call subroutine at E7E
$F90    $7957   ADD      V9, #57         ; Add 87 to V9
$F92    $F2EB   UNKNOWN  F2EB            ; Unknown Fxxx instruction
$F94    $7D75   ADD      VD, #75         ; Add 117 to VD
$F96    $6037   LD       V0, #37         ; Load 55 into V0
$F98    $A347   LD       I, $347         ; Load 347 into I
$F9A    $3634   SE       V6, #34         ; Skip if V6 == 52
$F9C    $54DF   UNKNOWN  $54DF           ; Unknown 5xxx instruction
$F9E    $132E   JP       $32E            ; Jump to 32E
$FA0    $5D80   SE       VD, V8          ; Skip if VD == V8
$FA2    $9DCF   UNKNOWN  $9DCF           ; Unknown 9xxx instruction
$FA4    $4892   SNE      V8, #92         ; Skip if V8 != 146
$FA6    $6ED5   LD       VE, #D5         ; Load 213 into VE
$FA8    $076C   SYS      $76C            ; System call to 76C
$FAA    $D331   DRW      V3, V3, #1      ; Draw 1-byte sprite at V3, V3
$FAC    $2E6C   CALL     $E6C            ; Call subroutine at E6C
$FAE    $6642   LD       V6, #42         ; Load 66 into V6
$FB0    $6981   LD       V9, #81         ; Load 129 into V9
$FB2    $EAF4   UNKNOWN  $EAF4           ; Unknown Exxx instruction
$FB4    $CF62   RND      VF, #62         ; VF = random & 62
$FB6    $81F1   OR       V1, VF          ; V1 |= VF
$FB8    $DF30   DRW      VF, V3, #0      ; Draw 0-byte sprite at VF, V3
$FBA    $1E75   JP       $E75            ; Jump to E75
$FBC    $8D38   UNKNOWN  8D38            ; Unknown 8xxx instruction
$FBE    $2D72   CALL     $D72            ; Call subroutine at D72
$FC0    $16F6   JP       $6F6            ; Jump to 6F6
$FC2    $5818   UNKNOWN  $5818           ; Unknown 5xxx instruction
$FC4    $8F69   UNKNOWN  8F69            ; Unknown 8xxx instruction
$FC6    $C4AD   RND      V4, #AD         ; V4 = random & AD
$FC8    $9034   UNKNOWN  $9034           ; Unknown 9xxx instruction
$FCA    $ED1B   UNKNOWN  $ED1B           ; Unknown Exxx instruction
$FCC    $1975   JP       $975            ; Jump to 975
$FCE    $24D0   CALL     $4D0            ; Call subroutine at 4D0
$FD0    $656C   LD       V5, #6C         ; Load 108 into V5
$FD2    $1DBD   JP       $DBD            ; Jump to DBD
$FD4    $243D   CALL     $43D            ; Call subroutine at 43D
$FD6    $0D3A   SYS      $D3A            ; System call to D3A
$FD8    $F67D   UNKNOWN  F67D            ; Unknown Fxxx instruction
$FDA    $E90B   UNKNOWN  $E90B           ; Unknown Exxx instruction
$FDC    $5E90   SE       VE, V9          ; Skip if VE == V9
$FDE    $FAC8   UNKNOWN  FAC8            ; Unknown Fxxx instruction
$FE0    $13E7   JP       $3E7            ; Jump to 3E7
$FE2    $C3C8   RND      V3, #C8         ; V3 = random & C8
$FE4    $303C   SE       V0, #3C         ; Skip if V0 == 60
$FE6    $F1CF   UNKNOWN  F1CF            ; Unknown Fxxx instruction
$FE8    $C2E7   RND      V2, #E7         ; V2 = random & E7
$FEA    $DEC4   DRW      VE, VC, #4      ; Draw 4-byte sprite at VE, VC
$FEC    $865D   UNKNOWN  865D            ; Unknown 8xxx instruction
$FEE    $EFE3   UNKNOWN  $EFE3           ; Unknown Exxx instruction
$FF0    $2677   CALL     $677            ; Call subroutine at 677
$FF2    $E119   UNKNOWN  $E119           ; Unknown Exxx instruction
$FF4    $9E84   UNKNOWN  $9E84           ; Unknown 9xxx instruction
$FF6    $1C0F   JP       $C0F            ; Jump to C0F
$FF8    $9209   UNKNOWN  $9209           ; Unknown 9xxx instruction
$FFA    $8FF8   UNKNOWN  8FF8            ; Unknown 8xxx instruction
$FFC    $861B   UNKNOWN  861B            ; Unknown 8xxx instruction
$FFE    $5896   UNKNOWN  $5896           ; Unknown 5xxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 470 (26.2%)
  JP      : 249 (13.9%)
  LD      : 248 (13.8%)
  SE      : 134 ( 7.5%)
  SNE     : 120 ( 6.7%)
  ADD     : 116 ( 6.5%)
  RND     : 113 ( 6.3%)
  CALL    : 111 ( 6.2%)
  DRW     :  97 ( 5.4%)
  SYS     :  95 ( 5.3%)
  SHL     :   9 ( 0.5%)
  SHR     :   8 ( 0.4%)
  OR      :   6 ( 0.3%)
  SUBN    :   6 ( 0.3%)
  XOR     :   4 ( 0.2%)
  SUB     :   3 ( 0.2%)
  AND     :   2 ( 0.1%)
  SKNP    :   1 ( 0.1%)

Memory Operations: 364 (20.3%)
Arithmetic Operations: 137 (7.6%)
