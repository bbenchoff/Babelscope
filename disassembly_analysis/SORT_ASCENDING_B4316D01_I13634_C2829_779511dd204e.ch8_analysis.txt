
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B4316D01_I13634_C2829_779511dd204e.ch8
ROM Size: 3584 bytes
Instructions Found: 1791

DISCOVERY INFORMATION:
Batch: 4316
Instance: 13634
Direction: ascending
Final Array: [0, 0, 9, 42, 85, 140, 166, 179]
Operations: R:0 W:1 C:231 S:5

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 133
Sort Array References:
  $200: LD I, $9F4 ; Load 9F4 into I
  $208: LD I, $2AF ; Load 2AF into I
  $21A: LD I, $D7E ; Load D7E into I
  $244: LD I, $634 ; Load 634 into I
  $250: LD I, $D01 ; Load D01 into I
  $262: LD I, $481 ; Load 481 into I
  $27A: LD I, $766 ; Load 766 into I
  $2BE: LD I, $BD9 ; Load BD9 into I
  $2C6: LD I, $AFB ; Load AFB into I
  $2E0: LD I, $2E0 ; Load 2E0 into I
  $2E4: LD I, $AC1 ; Load AC1 into I
  $306: LD I, $6B3 ; Load 6B3 into I
  $30A: LD I, $C7C ; Load C7C into I
  $30C: LD I, $AFD ; Load AFD into I
  $318: LD [I], V8 ; Store V0-V8 at I
  $328: LD I, $A95 ; Load A95 into I
  $374: LD I, $326 ; Load 326 into I
  $37A: LD I, $6A5 ; Load 6A5 into I
  $37E: LD I, $AE7 ; Load AE7 into I
  $39A: LD I, $7A9 ; Load 7A9 into I
  $3D8: LD I, $354 ; Load 354 into I
  $3E4: LD I, $986 ; Load 986 into I
  $40A: LD I, $8DF ; Load 8DF into I
  $410: LD I, $183 ; Load 183 into I
  $450: LD I, $365 ; Load 365 into I
  $45A: LD I, $8C0 ; Load 8C0 into I
  $45E: LD I, $3BF ; Load 3BF into I
  $46E: LD I, $FE8 ; Load FE8 into I
  $4A2: LD I, $425 ; Load 425 into I
  $4B6: LD I, $D04 ; Load D04 into I
  $4BA: LD I, $EBA ; Load EBA into I
  $4F4: LD I, $B10 ; Load B10 into I
  $520: LD I, $C0B ; Load C0B into I
  $52A: LD I, $B2D ; Load B2D into I
  $536: LD I, $45C ; Load 45C into I
  $574: LD I, $915 ; Load 915 into I
  $5B0: LD I, $F00 ; Load F00 into I
  $5C6: LD I, $831 ; Load 831 into I
  $5D4: LD I, $15E ; Load 15E into I
  $5D6: LD I, $B95 ; Load B95 into I
  $5DC: LD I, $617 ; Load 617 into I
  $5F0: LD I, $816 ; Load 816 into I
  $608: LD I, $F3C ; Load F3C into I
  $61E: LD I, $94C ; Load 94C into I
  $626: LD I, $37F ; Load 37F into I
  $666: LD I, $F05 ; Load F05 into I
  $6AC: LD I, $5CC ; Load 5CC into I
  $6B8: LD I, $740 ; Load 740 into I
  $6DC: LD I, $F9B ; Load F9B into I
  $6EE: LD I, $F1E ; Load F1E into I
  $716: LD [I], V0 ; Store V0-V0 at I
  $722: LD I, $9CB ; Load 9CB into I
  $78E: LD I, $960 ; Load 960 into I
  $794: LD I, $5E0 ; Load 5E0 into I
  $798: LD I, $BA3 ; Load BA3 into I
  $7BE: LD I, $265 ; Load 265 into I
  $7C4: LD I, $38A ; Load 38A into I
  $7EA: LD I, $82F ; Load 82F into I
  $7F6: LD I, $FFD ; Load FFD into I
  $7F8: LD I, $38F ; Load 38F into I
  $816: LD I, $651 ; Load 651 into I
  $824: LD I, $477 ; Load 477 into I
  $83A: LD I, $C93 ; Load C93 into I
  $83C: LD I, $608 ; Load 608 into I
  $854: LD I, $C3B ; Load C3B into I
  $858: LD I, $F49 ; Load F49 into I
  $8A8: LD I, $184 ; Load 184 into I
  $8AE: LD I, $64F ; Load 64F into I
  $8B4: LD I, $E53 ; Load E53 into I
  $8EA: LD I, $B89 ; Load B89 into I
  $904: LD I, $433 ; Load 433 into I
  $90A: LD I, $C66 ; Load C66 into I
  $922: LD I, $BBF ; Load BBF into I
  $936: LD I, $2AF ; Load 2AF into I
  $944: LD I, $BD2 ; Load BD2 into I
  $968: LD I, $E8A ; Load E8A into I
  $97E: LD I, $D22 ; Load D22 into I
  $984: LD I, $80D ; Load 80D into I
  $9AA: LD I, $926 ; Load 926 into I
  $9D0: LD I, $CCA ; Load CCA into I
  $9DE: LD I, $015 ; Load 015 into I
  $A22: LD I, $C4B ; Load C4B into I
  $A32: LD I, $553 ; Load 553 into I
  $A3A: LD I, $CF0 ; Load CF0 into I
  $A5A: LD I, $EA5 ; Load EA5 into I
  $A72: LD I, $FC5 ; Load FC5 into I
  $A82: LD I, $5B4 ; Load 5B4 into I
  $A9A: LD I, $BAB ; Load BAB into I
  $AA6: LD I, $300 ; Load 300 into I
  $AE2: LD I, $335 ; Load 335 into I
  $B02: LD I, $70C ; Load 70C into I
  $B04: LD I, $830 ; Load 830 into I
  $B06: LD I, $D09 ; Load D09 into I
  $B08: LD I, $011 ; Load 011 into I
  $B0C: LD I, $B7C ; Load B7C into I
  $B10: LD I, $BA6 ; Load BA6 into I
  $B26: LD I, $C88 ; Load C88 into I
  $B2E: LD I, $087 ; Load 087 into I
  $B5A: LD I, $F09 ; Load F09 into I
  $B5C: LD I, $591 ; Load 591 into I
  $B6C: LD I, $210 ; Load 210 into I
  $BB2: LD I, $B42 ; Load B42 into I
  $BB6: LD I, $56A ; Load 56A into I
  $BDE: LD I, $622 ; Load 622 into I
  $BF4: LD I, $064 ; Load 064 into I
  $C04: LD I, $F39 ; Load F39 into I
  $C22: LD I, $285 ; Load 285 into I
  $C4E: LD I, $709 ; Load 709 into I
  $C88: LD I, $CCB ; Load CCB into I
  $CCA: LD I, $A2F ; Load A2F into I
  $CCE: LD I, $D57 ; Load D57 into I
  $CEC: LD I, $B7D ; Load B7D into I
  $D2A: LD I, $23F ; Load 23F into I
  $D48: LD I, $3A5 ; Load 3A5 into I
  $D54: LD I, $CEE ; Load CEE into I
  $D76: LD I, $4A0 ; Load 4A0 into I
  $DA0: LD I, $24E ; Load 24E into I
  $DA4: LD I, $15D ; Load 15D into I
  $DAC: LD I, $02C ; Load 02C into I
  $DE2: LD I, $256 ; Load 256 into I
  $E24: LD I, $774 ; Load 774 into I
  $E42: LD I, $328 ; Load 328 into I
  $E58: LD I, $A55 ; Load A55 into I
  $E6E: LD I, $C2C ; Load C2C into I
  $E74: LD I, $D50 ; Load D50 into I
  $E94: LD I, $0E3 ; Load 0E3 into I
  $EAE: LD I, $3B3 ; Load 3B3 into I
  $EC2: LD I, $B98 ; Load B98 into I
  $EE0: LD I, $84E ; Load 84E into I
  $EE8: LD I, $B72 ; Load B72 into I
  $F14: LD I, $5E9 ; Load 5E9 into I
  $F34: LD I, $557 ; Load 557 into I
  $FD8: LD I, $878 ; Load 878 into I

CONTROL FLOW ANALYSIS:
Jumps: 223
Calls: 95
Branches: 278
Loops: 121
Loop Structures:
  $282 -> $069 (backward jump)
  $360 -> $29D (backward jump)
  $36A -> $023 (backward jump)
  $3F8 -> $379 (backward jump)
  $418 -> $29F (backward jump)
  $478 -> $453 (backward jump)
  $49E -> $37C (backward jump)
  $50A -> $106 (backward jump)
  $56A -> $0D2 (backward jump)
  $570 -> $522 (backward jump)
  $5B6 -> $174 (backward jump)
  $5C4 -> $112 (backward jump)
  $5E8 -> $2F9 (backward jump)
  $5EA -> $4B4 (backward jump)
  $650 -> $309 (backward jump)
  $65C -> $433 (backward jump)
  $670 -> $584 (backward jump)
  $684 -> $3F4 (backward jump)
  $692 -> $374 (backward jump)
  $6AE -> $223 (backward jump)
  $6B6 -> $3C0 (backward jump)
  $6C4 -> $57F (backward jump)
  $6C8 -> $498 (backward jump)
  $6DA -> $558 (backward jump)
  $732 -> $3F8 (backward jump)
  $74A -> $435 (backward jump)
  $750 -> $614 (backward jump)
  $78C -> $753 (backward jump)
  $79C -> $19A (backward jump)
  $7DA -> $5A6 (backward jump)
  $7F0 -> $219 (backward jump)
  $866 -> $7D4 (backward jump)
  $884 -> $133 (backward jump)
  $8D0 -> $495 (backward jump)
  $8FA -> $75D (backward jump)
  $900 -> $331 (backward jump)
  $90E -> $20D (backward jump)
  $938 -> $37D (backward jump)
  $94E -> $65F (backward jump)
  $96C -> $6D2 (backward jump)
  $980 -> $84F (backward jump)
  $994 -> $69F (backward jump)
  $9CE -> $451 (backward jump)
  $9E8 -> $558 (backward jump)
  $9EC -> $7F9 (backward jump)
  $A02 -> $674 (backward jump)
  $A10 -> $976 (backward jump)
  $A34 -> $021 (backward jump)
  $A3E -> $7C0 (backward jump)
  $A64 -> $829 (backward jump)
  $A68 -> $71D (backward jump)
  $A7E -> $18B (backward jump)
  $A80 -> $630 (backward jump)
  $A8E -> $5D8 (backward jump)
  $B00 -> $0CC (backward jump)
  $B32 -> $AF4 (backward jump)
  $B34 -> $16A (backward jump)
  $B4C -> $15F (backward jump)
  $B52 -> $62C (backward jump)
  $B7A -> $8BD (backward jump)
  $B7C -> $69F (backward jump)
  $B92 -> $743 (backward jump)
  $B94 -> $46F (backward jump)
  $BA4 -> $4FF (backward jump)
  $BC8 -> $60A (backward jump)
  $BE6 -> $52F (backward jump)
  $BF0 -> $51E (backward jump)
  $C4A -> $AD8 (backward jump)
  $C76 -> $5A2 (backward jump)
  $C78 -> $571 (backward jump)
  $C92 -> $6A6 (backward jump)
  $C96 -> $715 (backward jump)
  $CA8 -> $93B (backward jump)
  $CB6 -> $417 (backward jump)
  $CC6 -> $8EF (backward jump)
  $CD4 -> $246 (backward jump)
  $CF4 -> $991 (backward jump)
  $CFE -> $983 (backward jump)
  $D0E -> $BF4 (backward jump)
  $D18 -> $1C5 (backward jump)
  $D34 -> $3D7 (backward jump)
  $D38 -> $16D (backward jump)
  $D3E -> $A03 (backward jump)
  $D4E -> $766 (backward jump)
  $D52 -> $95C (backward jump)
  $D66 -> $A37 (backward jump)
  $D68 -> $99F (backward jump)
  $D6E -> $4FC (backward jump)
  $D72 -> $081 (backward jump)
  $D86 -> $240 (backward jump)
  $D90 -> $D1A (backward jump)
  $DA8 -> $913 (backward jump)
  $DAE -> $4EB (backward jump)
  $DDE -> $566 (backward jump)
  $DE4 -> $669 (backward jump)
  $DEE -> $754 (backward jump)
  $DF6 -> $380 (backward jump)
  $E04 -> $AD8 (backward jump)
  $E0C -> $188 (backward jump)
  $E12 -> $A58 (backward jump)
  $E4E -> $CAE (backward jump)
  $E5C -> $449 (backward jump)
  $E78 -> $D9C (backward jump)
  $E8A -> $0DC (backward jump)
  $E9C -> $A9A (backward jump)
  $EA6 -> $E0B (backward jump)
  $ECE -> $B51 (backward jump)
  $EEA -> $EDE (backward jump)
  $EF6 -> $56B (backward jump)
  $F22 -> $2AB (backward jump)
  $F2A -> $E2B (backward jump)
  $F32 -> $AD8 (backward jump)
  $F58 -> $68B (backward jump)
  $F5E -> $6E1 (backward jump)
  $F76 -> $167 (backward jump)
  $F82 -> $E18 (backward jump)
  $FB2 -> $EDA (backward jump)
  $FD2 -> $89A (backward jump)
  $FD4 -> $29F (backward jump)
  $FDE -> $F37 (backward jump)
  $FEE -> $A58 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $A9F4   LD       I, $9F4         ; Load 9F4 into I
$202    $312A   SE       V1, #2A         ; Skip if V1 == 42
$204    $8D73   XOR      VD, V7          ; VD ^= V7
$206    $7F12   ADD      VF, #12         ; Add 18 to VF
$208    $A2AF   LD       I, $2AF         ; Load 2AF into I
$20A    $C9BC   RND      V9, #BC         ; V9 = random & BC
$20C    $6CFC   LD       VC, #FC         ; Load 252 into VC
$20E    $16C0   JP       $6C0            ; Jump to 6C0
$210    $5543   UNKNOWN  $5543           ; Unknown 5xxx instruction
$212    $16CD   JP       $6CD            ; Jump to 6CD
$214    $4772   SNE      V7, #72         ; Skip if V7 != 114
$216    $60B7   LD       V0, #B7         ; Load 183 into V0
$218    $6D33   LD       VD, #33         ; Load 51 into VD
$21A    $AD7E   LD       I, $D7E         ; Load D7E into I
$21C    $2D6E   CALL     $D6E            ; Call subroutine at D6E
$21E    $7C54   ADD      VC, #54         ; Add 84 to VC
$220    $2339   CALL     $339            ; Call subroutine at 339
$222    $0652   SYS      $652            ; System call to 652
$224    $CEB3   RND      VE, #B3         ; VE = random & B3
$226    $B431   JP       V0, $431        ; Jump to V0 + 431
$228    $0DE0   SYS      $DE0            ; System call to DE0
$22A    $8245   SUB      V2, V4          ; V2 -= V4, VF = !borrow
$22C    $7BCA   ADD      VB, #CA         ; Add 202 to VB
$22E    $F1EC   UNKNOWN  F1EC            ; Unknown Fxxx instruction
$230    $67D6   LD       V7, #D6         ; Load 214 into V7
$232    $DDB0   DRW      VD, VB, #0      ; Draw 0-byte sprite at VD, VB
$234    $C46C   RND      V4, #6C         ; V4 = random & 6C
$236    $BBD5   JP       V0, $BD5        ; Jump to V0 + BD5
$238    $DF89   DRW      VF, V8, #9      ; Draw 9-byte sprite at VF, V8
$23A    $0020   SYS      $020            ; System call to 020
$23C    $5AAC   UNKNOWN  $5AAC           ; Unknown 5xxx instruction
$23E    $930D   UNKNOWN  $930D           ; Unknown 9xxx instruction
$240    $5DA2   UNKNOWN  $5DA2           ; Unknown 5xxx instruction
$242    $5C46   UNKNOWN  $5C46           ; Unknown 5xxx instruction
$244    $A634   LD       I, $634         ; Load 634 into I
$246    $B6C3   JP       V0, $6C3        ; Jump to V0 + 6C3
$248    $36D3   SE       V6, #D3         ; Skip if V6 == 211
$24A    $6FAE   LD       VF, #AE         ; Load 174 into VF
$24C    $563B   UNKNOWN  $563B           ; Unknown 5xxx instruction
$24E    $66CC   LD       V6, #CC         ; Load 204 into V6
$250    $AD01   LD       I, $D01         ; Load D01 into I
$252    $5222   UNKNOWN  $5222           ; Unknown 5xxx instruction
$254    $ED61   UNKNOWN  $ED61           ; Unknown Exxx instruction
$256    $CD56   RND      VD, #56         ; VD = random & 56
$258    $014C   SYS      $14C            ; System call to 14C
$25A    $82F2   AND      V2, VF          ; V2 &= VF
$25C    $9F06   UNKNOWN  $9F06           ; Unknown 9xxx instruction
$25E    $5A54   UNKNOWN  $5A54           ; Unknown 5xxx instruction
$260    $D14C   DRW      V1, V4, #C      ; Draw 12-byte sprite at V1, V4
$262    $A481   LD       I, $481         ; Load 481 into I
$264    $923D   UNKNOWN  $923D           ; Unknown 9xxx instruction
$266    $969F   UNKNOWN  $969F           ; Unknown 9xxx instruction
$268    $27A1   CALL     $7A1            ; Call subroutine at 7A1
$26A    $49F1   SNE      V9, #F1         ; Skip if V9 != 241
$26C    $B667   JP       V0, $667        ; Jump to V0 + 667
$26E    $1E39   JP       $E39            ; Jump to E39
$270    $3F84   SE       VF, #84         ; Skip if VF == 132
$272    $D68E   DRW      V6, V8, #E      ; Draw 14-byte sprite at V6, V8
$274    $E0B6   UNKNOWN  $E0B6           ; Unknown Exxx instruction
$276    $169B   JP       $69B            ; Jump to 69B
$278    $CD93   RND      VD, #93         ; VD = random & 93
$27A    $A766   LD       I, $766         ; Load 766 into I
$27C    $D891   DRW      V8, V9, #1      ; Draw 1-byte sprite at V8, V9
$27E    $BC7C   JP       V0, $C7C        ; Jump to V0 + C7C
$280    $6996   LD       V9, #96         ; Load 150 into V9
$282    $B069   JP       V0, $069        ; Jump to V0 + 069
$284    $CD8C   RND      VD, #8C         ; VD = random & 8C
$286    $7627   ADD      V6, #27         ; Add 39 to V6
$288    $12F4   JP       $2F4            ; Jump to 2F4
$28A    $0B34   SYS      $B34            ; System call to B34
$28C    $FD2C   UNKNOWN  FD2C            ; Unknown Fxxx instruction
$28E    $331A   SE       V3, #1A         ; Skip if V3 == 26
$290    $3A6C   SE       VA, #6C         ; Skip if VA == 108
$292    $0E77   SYS      $E77            ; System call to E77
$294    $3E62   SE       VE, #62         ; Skip if VE == 98
$296    $B6A0   JP       V0, $6A0        ; Jump to V0 + 6A0
$298    $3BD0   SE       VB, #D0         ; Skip if VB == 208
$29A    $30F8   SE       V0, #F8         ; Skip if V0 == 248
$29C    $EDEE   UNKNOWN  $EDEE           ; Unknown Exxx instruction
$29E    $53BD   UNKNOWN  $53BD           ; Unknown 5xxx instruction
$2A0    $4088   SNE      V0, #88         ; Skip if V0 != 136
$2A2    $FB36   UNKNOWN  FB36            ; Unknown Fxxx instruction
$2A4    $DA61   DRW      VA, V6, #1      ; Draw 1-byte sprite at VA, V6
$2A6    $DEB4   DRW      VE, VB, #4      ; Draw 4-byte sprite at VE, VB
$2A8    $322D   SE       V2, #2D         ; Skip if V2 == 45
$2AA    $33BE   SE       V3, #BE         ; Skip if V3 == 190
$2AC    $5668   UNKNOWN  $5668           ; Unknown 5xxx instruction
$2AE    $20C0   CALL     $0C0            ; Call subroutine at 0C0
$2B0    $6FD9   LD       VF, #D9         ; Load 217 into VF
$2B2    $6D0A   LD       VD, #0A         ; Load 10 into VD
$2B4    $4454   SNE      V4, #54         ; Skip if V4 != 84
$2B6    $7961   ADD      V9, #61         ; Add 97 to V9
$2B8    $4FBF   SNE      VF, #BF         ; Skip if VF != 191
$2BA    $BCB4   JP       V0, $CB4        ; Jump to V0 + CB4
$2BC    $9358   UNKNOWN  $9358           ; Unknown 9xxx instruction
$2BE    $ABD9   LD       I, $BD9         ; Load BD9 into I
$2C0    $4989   SNE      V9, #89         ; Skip if V9 != 137
$2C2    $3935   SE       V9, #35         ; Skip if V9 == 53
$2C4    $09C6   SYS      $9C6            ; System call to 9C6
$2C6    $AAFB   LD       I, $AFB         ; Load AFB into I
$2C8    $CCF7   RND      VC, #F7         ; VC = random & F7
$2CA    $035A   SYS      $35A            ; System call to 35A
$2CC    $5C77   UNKNOWN  $5C77           ; Unknown 5xxx instruction
$2CE    $79CA   ADD      V9, #CA         ; Add 202 to V9
$2D0    $EC89   UNKNOWN  $EC89           ; Unknown Exxx instruction
$2D2    $7D14   ADD      VD, #14         ; Add 20 to VD
$2D4    $49E6   SNE      V9, #E6         ; Skip if V9 != 230
$2D6    $B6BA   JP       V0, $6BA        ; Jump to V0 + 6BA
$2D8    $5A7D   UNKNOWN  $5A7D           ; Unknown 5xxx instruction
$2DA    $47B1   SNE      V7, #B1         ; Skip if V7 != 177
$2DC    $16F8   JP       $6F8            ; Jump to 6F8
$2DE    $F804   UNKNOWN  F804            ; Unknown Fxxx instruction
$2E0    $A2E0   LD       I, $2E0         ; Load 2E0 into I
$2E2    $FF1F   UNKNOWN  FF1F            ; Unknown Fxxx instruction
$2E4    $AAC1   LD       I, $AC1         ; Load AC1 into I
$2E6    $F8A2   UNKNOWN  F8A2            ; Unknown Fxxx instruction
$2E8    $4749   SNE      V7, #49         ; Skip if V7 != 73
$2EA    $226D   CALL     $26D            ; Call subroutine at 26D
$2EC    $1E54   JP       $E54            ; Jump to E54
$2EE    $8D2D   UNKNOWN  8D2D            ; Unknown 8xxx instruction
$2F0    $47F8   SNE      V7, #F8         ; Skip if V7 != 248
$2F2    $C332   RND      V3, #32         ; V3 = random & 32
$2F4    $5C66   UNKNOWN  $5C66           ; Unknown 5xxx instruction
$2F6    $54F8   UNKNOWN  $54F8           ; Unknown 5xxx instruction
$2F8    $7096   ADD      V0, #96         ; Add 150 to V0
$2FA    $C664   RND      V6, #64         ; V6 = random & 64
$2FC    $8B00   LD       VB, V0          ; VB = V0
$2FE    $8185   SUB      V1, V8          ; V1 -= V8, VF = !borrow
$302    $092A   SYS      $92A            ; System call to 92A
$304    $558C   UNKNOWN  $558C           ; Unknown 5xxx instruction
$306    $A6B3   LD       I, $6B3         ; Load 6B3 into I
$308    $75E3   ADD      V5, #E3         ; Add 227 to V5
$30A    $AC7C   LD       I, $C7C         ; Load C7C into I
$30C    $AAFD   LD       I, $AFD         ; Load AFD into I
$30E    $D681   DRW      V6, V8, #1      ; Draw 1-byte sprite at V6, V8
$310    $8E91   OR       VE, V9          ; VE |= V9
$312    $3265   SE       V2, #65         ; Skip if V2 == 101
$314    $F051   UNKNOWN  F051            ; Unknown Fxxx instruction
$316    $CC52   RND      VC, #52         ; VC = random & 52
$318    $F855   LD       [I], V8         ; Store V0-V8 at I
$31A    $3D47   SE       VD, #47         ; Skip if VD == 71
$31C    $29C3   CALL     $9C3            ; Call subroutine at 9C3
$31E    $15A4   JP       $5A4            ; Jump to 5A4
$320    $515F   UNKNOWN  $515F           ; Unknown 5xxx instruction
$322    $906C   UNKNOWN  $906C           ; Unknown 9xxx instruction
$324    $05F7   SYS      $5F7            ; System call to 5F7
$326    $3464   SE       V4, #64         ; Skip if V4 == 100
$328    $AA95   LD       I, $A95         ; Load A95 into I
$32A    $783A   ADD      V8, #3A         ; Add 58 to V8
$32C    $2D15   CALL     $D15            ; Call subroutine at D15
$32E    $5A85   UNKNOWN  $5A85           ; Unknown 5xxx instruction
$330    $4BC9   SNE      VB, #C9         ; Skip if VB != 201
$332    $1C15   JP       $C15            ; Jump to C15
$334    $7441   ADD      V4, #41         ; Add 65 to V4
$336    $8091   OR       V0, V9          ; V0 |= V9
$338    $C2BF   RND      V2, #BF         ; V2 = random & BF
$33A    $789E   ADD      V8, #9E         ; Add 158 to V8
$33C    $01A4   SYS      $1A4            ; System call to 1A4
$33E    $2BCA   CALL     $BCA            ; Call subroutine at BCA
$340    $191D   JP       $91D            ; Jump to 91D
$342    $D439   DRW      V4, V3, #9      ; Draw 9-byte sprite at V4, V3
$344    $4FBB   SNE      VF, #BB         ; Skip if VF != 187
$346    $C970   RND      V9, #70         ; V9 = random & 70
$348    $3255   SE       V2, #55         ; Skip if V2 == 85
$34A    $C71C   RND      V7, #1C         ; V7 = random & 1C
$34C    $45C1   SNE      V5, #C1         ; Skip if V5 != 193
$34E    $F099   UNKNOWN  F099            ; Unknown Fxxx instruction
$350    $7D6F   ADD      VD, #6F         ; Add 111 to VD
$352    $6FE4   LD       VF, #E4         ; Load 228 into VF
$354    $9F18   UNKNOWN  $9F18           ; Unknown 9xxx instruction
$356    $3C41   SE       VC, #41         ; Skip if VC == 65
$358    $DB44   DRW      VB, V4, #4      ; Draw 4-byte sprite at VB, V4
$35A    $B3A6   JP       V0, $3A6        ; Jump to V0 + 3A6
$35C    $0456   SYS      $456            ; System call to 456
$35E    $E2A2   UNKNOWN  $E2A2           ; Unknown Exxx instruction
$360    $B29D   JP       V0, $29D        ; Jump to V0 + 29D
$362    $FD9A   UNKNOWN  FD9A            ; Unknown Fxxx instruction
$364    $37A1   SE       V7, #A1         ; Skip if V7 == 161
$366    $852E   SHL      V5              ; V5 <<= 1, VF = MSB
$368    $75C5   ADD      V5, #C5         ; Add 197 to V5
$36A    $1023   JP       $023            ; Jump to 023
$36C    $678C   LD       V7, #8C         ; Load 140 into V7
$36E    $D5CC   DRW      V5, VC, #C      ; Draw 12-byte sprite at V5, VC
$370    $8049   UNKNOWN  8049            ; Unknown 8xxx instruction
$372    $53DB   UNKNOWN  $53DB           ; Unknown 5xxx instruction
$374    $A326   LD       I, $326         ; Load 326 into I
$376    $B685   JP       V0, $685        ; Jump to V0 + 685
$378    $BF21   JP       V0, $F21        ; Jump to V0 + F21
$37A    $A6A5   LD       I, $6A5         ; Load 6A5 into I
$37C    $073F   SYS      $73F            ; System call to 73F
$37E    $AAE7   LD       I, $AE7         ; Load AE7 into I
$380    $CCE8   RND      VC, #E8         ; VC = random & E8
$382    $4828   SNE      V8, #28         ; Skip if V8 != 40
$384    $3476   SE       V4, #76         ; Skip if V4 == 118
$386    $3EB6   SE       VE, #B6         ; Skip if VE == 182
$388    $94DC   UNKNOWN  $94DC           ; Unknown 9xxx instruction
$38A    $4C7A   SNE      VC, #7A         ; Skip if VC != 122
$38C    $46ED   SNE      V6, #ED         ; Skip if V6 != 237
$38E    $917A   UNKNOWN  $917A           ; Unknown 9xxx instruction
$390    $F6A1   UNKNOWN  F6A1            ; Unknown Fxxx instruction
$392    $5B7B   UNKNOWN  $5B7B           ; Unknown 5xxx instruction
$394    $E430   UNKNOWN  $E430           ; Unknown Exxx instruction
$396    $8311   OR       V3, V1          ; V3 |= V1
$398    $EE5C   UNKNOWN  $EE5C           ; Unknown Exxx instruction
$39A    $A7A9   LD       I, $7A9         ; Load 7A9 into I
$39C    $76E0   ADD      V6, #E0         ; Add 224 to V6
$39E    $65BF   LD       V5, #BF         ; Load 191 into V5
$3A0    $352B   SE       V5, #2B         ; Skip if V5 == 43
$3A2    $4A3E   SNE      VA, #3E         ; Skip if VA != 62
$3A4    $3A50   SE       VA, #50         ; Skip if VA == 80
$3A6    $9F2A   UNKNOWN  $9F2A           ; Unknown 9xxx instruction
$3A8    $F560   UNKNOWN  F560            ; Unknown Fxxx instruction
$3AA    $D65B   DRW      V6, V5, #B      ; Draw 11-byte sprite at V6, V5
$3AC    $981E   UNKNOWN  $981E           ; Unknown 9xxx instruction
$3AE    $90DA   UNKNOWN  $90DA           ; Unknown 9xxx instruction
$3B0    $B94F   JP       V0, $94F        ; Jump to V0 + 94F
$3B2    $0F80   SYS      $F80            ; System call to F80
$3B4    $ED3C   UNKNOWN  $ED3C           ; Unknown Exxx instruction
$3B6    $2BEC   CALL     $BEC            ; Call subroutine at BEC
$3B8    $FF27   UNKNOWN  FF27            ; Unknown Fxxx instruction
$3BA    $61F2   LD       V1, #F2         ; Load 242 into V1
$3BC    $4228   SNE      V2, #28         ; Skip if V2 != 40
$3BE    $BF11   JP       V0, $F11        ; Jump to V0 + F11
$3C0    $5A62   UNKNOWN  $5A62           ; Unknown 5xxx instruction
$3C2    $26D7   CALL     $6D7            ; Call subroutine at 6D7
$3C4    $3E37   SE       VE, #37         ; Skip if VE == 55
$3C6    $E77F   UNKNOWN  $E77F           ; Unknown Exxx instruction
$3C8    $62E2   LD       V2, #E2         ; Load 226 into V2
$3CA    $03C3   SYS      $3C3            ; System call to 3C3
$3CC    $7E84   ADD      VE, #84         ; Add 132 to VE
$3CE    $553A   UNKNOWN  $553A           ; Unknown 5xxx instruction
$3D0    $1ABA   JP       $ABA            ; Jump to ABA
$3D2    $8BA3   XOR      VB, VA          ; VB ^= VA
$3D4    $68E4   LD       V8, #E4         ; Load 228 into V8
$3D6    $3575   SE       V5, #75         ; Skip if V5 == 117
$3D8    $A354   LD       I, $354         ; Load 354 into I
$3DA    $9D1C   UNKNOWN  $9D1C           ; Unknown 9xxx instruction
$3DC    $000C   SYS      $00C            ; System call to 00C
$3DE    $2138   CALL     $138            ; Call subroutine at 138
$3E0    $6C4D   LD       VC, #4D         ; Load 77 into VC
$3E2    $9712   UNKNOWN  $9712           ; Unknown 9xxx instruction
$3E4    $A986   LD       I, $986         ; Load 986 into I
$3E6    $4B8C   SNE      VB, #8C         ; Skip if VB != 140
$3E8    $FB17   UNKNOWN  FB17            ; Unknown Fxxx instruction
$3EA    $BDF8   JP       V0, $DF8        ; Jump to V0 + DF8
$3EC    $D163   DRW      V1, V6, #3      ; Draw 3-byte sprite at V1, V6
$3EE    $0EE1   SYS      $EE1            ; System call to EE1
$3F0    $1865   JP       $865            ; Jump to 865
$3F2    $5090   SE       V0, V9          ; Skip if V0 == V9
$3F4    $3F07   SE       VF, #07         ; Skip if VF == 7
$3F6    $271C   CALL     $71C            ; Call subroutine at 71C
$3F8    $1379   JP       $379            ; Jump to 379
$3FA    $1BC4   JP       $BC4            ; Jump to BC4
$3FC    $0AB2   SYS      $AB2            ; System call to AB2
$3FE    $D5C7   DRW      V5, VC, #7      ; Draw 7-byte sprite at V5, VC
$400    $02EA   SYS      $2EA            ; System call to 2EA
$402    $FF4E   UNKNOWN  FF4E            ; Unknown Fxxx instruction
$404    $5E42   UNKNOWN  $5E42           ; Unknown 5xxx instruction
$406    $4C26   SNE      VC, #26         ; Skip if VC != 38
$408    $7573   ADD      V5, #73         ; Add 115 to V5
$40A    $A8DF   LD       I, $8DF         ; Load 8DF into I
$40C    $5A87   UNKNOWN  $5A87           ; Unknown 5xxx instruction
$40E    $946E   UNKNOWN  $946E           ; Unknown 9xxx instruction
$410    $A183   LD       I, $183         ; Load 183 into I
$412    $23E6   CALL     $3E6            ; Call subroutine at 3E6
$414    $23ED   CALL     $3ED            ; Call subroutine at 3ED
$416    $D97F   DRW      V9, V7, #F      ; Draw 15-byte sprite at V9, V7
$418    $129F   JP       $29F            ; Jump to 29F
$41A    $8105   SUB      V1, V0          ; V1 -= V0, VF = !borrow
$41C    $9762   UNKNOWN  $9762           ; Unknown 9xxx instruction
$41E    $FF1A   UNKNOWN  FF1A            ; Unknown Fxxx instruction
$420    $F5CB   UNKNOWN  F5CB            ; Unknown Fxxx instruction
$422    $449B   SNE      V4, #9B         ; Skip if V4 != 155
$424    $176C   JP       $76C            ; Jump to 76C
$426    $4FA0   SNE      VF, #A0         ; Skip if VF != 160
$428    $92E8   UNKNOWN  $92E8           ; Unknown 9xxx instruction
$42A    $7E7D   ADD      VE, #7D         ; Add 125 to VE
$42C    $3E77   SE       VE, #77         ; Skip if VE == 119
$42E    $735C   ADD      V3, #5C         ; Add 92 to V3
$430    $8BDA   UNKNOWN  8BDA            ; Unknown 8xxx instruction
$432    $5A08   UNKNOWN  $5A08           ; Unknown 5xxx instruction
$434    $24DC   CALL     $4DC            ; Call subroutine at 4DC
$436    $4548   SNE      V5, #48         ; Skip if V5 != 72
$438    $8690   LD       V6, V9          ; V6 = V9
$43A    $7DDE   ADD      VD, #DE         ; Add 222 to VD
$43C    $0CD5   SYS      $CD5            ; System call to CD5
$43E    $4343   SNE      V3, #43         ; Skip if V3 != 67
$440    $6EF7   LD       VE, #F7         ; Load 247 into VE
$442    $62F0   LD       V2, #F0         ; Load 240 into V2
$444    $E820   UNKNOWN  $E820           ; Unknown Exxx instruction
$446    $8E3B   UNKNOWN  8E3B            ; Unknown 8xxx instruction
$448    $845C   UNKNOWN  845C            ; Unknown 8xxx instruction
$44A    $36F5   SE       V6, #F5         ; Skip if V6 == 245
$44C    $2E69   CALL     $E69            ; Call subroutine at E69
$44E    $C808   RND      V8, #08         ; V8 = random & 08
$450    $A365   LD       I, $365         ; Load 365 into I
$452    $7BB3   ADD      VB, #B3         ; Add 179 to VB
$454    $60CA   LD       V0, #CA         ; Load 202 into V0
$456    $7848   ADD      V8, #48         ; Add 72 to V8
$458    $45D2   SNE      V5, #D2         ; Skip if V5 != 210
$45A    $A8C0   LD       I, $8C0         ; Load 8C0 into I
$45C    $9DA4   UNKNOWN  $9DA4           ; Unknown 9xxx instruction
$45E    $A3BF   LD       I, $3BF         ; Load 3BF into I
$460    $EDA9   UNKNOWN  $EDA9           ; Unknown Exxx instruction
$462    $8EDE   SHL      VE              ; VE <<= 1, VF = MSB
$464    $27AA   CALL     $7AA            ; Call subroutine at 7AA
$466    $904D   UNKNOWN  $904D           ; Unknown 9xxx instruction
$468    $1AB6   JP       $AB6            ; Jump to AB6
$46A    $04DB   SYS      $4DB            ; System call to 4DB
$46C    $2831   CALL     $831            ; Call subroutine at 831
$46E    $AFE8   LD       I, $FE8         ; Load FE8 into I
$470    $CE9F   RND      VE, #9F         ; VE = random & 9F
$472    $8545   SUB      V5, V4          ; V5 -= V4, VF = !borrow
$474    $696A   LD       V9, #6A         ; Load 106 into V9
$476    $DB78   DRW      VB, V7, #8      ; Draw 8-byte sprite at VB, V7
$478    $B453   JP       V0, $453        ; Jump to V0 + 453
$47A    $CC17   RND      VC, #17         ; VC = random & 17
$47C    $2954   CALL     $954            ; Call subroutine at 954
$47E    $8663   XOR      V6, V6          ; V6 ^= V6
$480    $C6E9   RND      V6, #E9         ; V6 = random & E9
$482    $99DC   UNKNOWN  $99DC           ; Unknown 9xxx instruction
$484    $83C8   UNKNOWN  83C8            ; Unknown 8xxx instruction
$486    $315B   SE       V1, #5B         ; Skip if V1 == 91
$488    $6B60   LD       VB, #60         ; Load 96 into VB
$48A    $044C   SYS      $44C            ; System call to 44C
$48C    $B8DD   JP       V0, $8DD        ; Jump to V0 + 8DD
$48E    $FF88   UNKNOWN  FF88            ; Unknown Fxxx instruction
$490    $CAD6   RND      VA, #D6         ; VA = random & D6
$492    $8289   UNKNOWN  8289            ; Unknown 8xxx instruction
$494    $BD9D   JP       V0, $D9D        ; Jump to V0 + D9D
$496    $6884   LD       V8, #84         ; Load 132 into V8
$498    $0946   SYS      $946            ; System call to 946
$49A    $6EDE   LD       VE, #DE         ; Load 222 into VE
$49C    $FFDE   UNKNOWN  FFDE            ; Unknown Fxxx instruction
$49E    $B37C   JP       V0, $37C        ; Jump to V0 + 37C
$4A0    $CAC9   RND      VA, #C9         ; VA = random & C9
$4A2    $A425   LD       I, $425         ; Load 425 into I
$4A4    $2C4B   CALL     $C4B            ; Call subroutine at C4B
$4A6    $CB88   RND      VB, #88         ; VB = random & 88
$4A8    $9496   UNKNOWN  $9496           ; Unknown 9xxx instruction
$4AA    $C667   RND      V6, #67         ; V6 = random & 67
$4AC    $6D0B   LD       VD, #0B         ; Load 11 into VD
$4AE    $DE9F   DRW      VE, V9, #F      ; Draw 15-byte sprite at VE, V9
$4B0    $77FB   ADD      V7, #FB         ; Add 251 to V7
$4B2    $CC61   RND      VC, #61         ; VC = random & 61
$4B4    $75F1   ADD      V5, #F1         ; Add 241 to V5
$4B6    $AD04   LD       I, $D04         ; Load D04 into I
$4B8    $D826   DRW      V8, V2, #6      ; Draw 6-byte sprite at V8, V2
$4BA    $AEBA   LD       I, $EBA         ; Load EBA into I
$4BC    $3793   SE       V7, #93         ; Skip if V7 == 147
$4BE    $E032   UNKNOWN  $E032           ; Unknown Exxx instruction
$4C0    $4D50   SNE      VD, #50         ; Skip if VD != 80
$4C2    $3896   SE       V8, #96         ; Skip if V8 == 150
$4C4    $F352   UNKNOWN  F352            ; Unknown Fxxx instruction
$4C6    $190B   JP       $90B            ; Jump to 90B
$4C8    $0750   SYS      $750            ; System call to 750
$4CA    $34EF   SE       V4, #EF         ; Skip if V4 == 239
$4CC    $3EBC   SE       VE, #BC         ; Skip if VE == 188
$4CE    $7C15   ADD      VC, #15         ; Add 21 to VC
$4D0    $E1DA   UNKNOWN  $E1DA           ; Unknown Exxx instruction
$4D2    $0E7A   SYS      $E7A            ; System call to E7A
$4D4    $ED38   UNKNOWN  $ED38           ; Unknown Exxx instruction
$4D6    $CECB   RND      VE, #CB         ; VE = random & CB
$4D8    $53A2   UNKNOWN  $53A2           ; Unknown 5xxx instruction
$4DA    $968C   UNKNOWN  $968C           ; Unknown 9xxx instruction
$4DC    $C3E5   RND      V3, #E5         ; V3 = random & E5
$4DE    $452E   SNE      V5, #2E         ; Skip if V5 != 46
$4E0    $4D99   SNE      VD, #99         ; Skip if VD != 153
$4E2    $EFB1   UNKNOWN  $EFB1           ; Unknown Exxx instruction
$4E4    $883C   UNKNOWN  883C            ; Unknown 8xxx instruction
$4E6    $9FC3   UNKNOWN  $9FC3           ; Unknown 9xxx instruction
$4E8    $7B73   ADD      VB, #73         ; Add 115 to VB
$4EA    $25F1   CALL     $5F1            ; Call subroutine at 5F1
$4EC    $28FF   CALL     $8FF            ; Call subroutine at 8FF
$4EE    $D191   DRW      V1, V9, #1      ; Draw 1-byte sprite at V1, V9
$4F0    $BC26   JP       V0, $C26        ; Jump to V0 + C26
$4F2    $DDFB   DRW      VD, VF, #B      ; Draw 11-byte sprite at VD, VF
$4F4    $AB10   LD       I, $B10         ; Load B10 into I
$4F6    $FD6B   UNKNOWN  FD6B            ; Unknown Fxxx instruction
$4F8    $E644   UNKNOWN  $E644           ; Unknown Exxx instruction
$4FA    $DC31   DRW      VC, V3, #1      ; Draw 1-byte sprite at VC, V3
$4FC    $CF2C   RND      VF, #2C         ; VF = random & 2C
$4FE    $158F   JP       $58F            ; Jump to 58F
$500    $6D00   LD       VD, #00         ; Load 0 into VD
$502    $E704   UNKNOWN  $E704           ; Unknown Exxx instruction
$504    $6B13   LD       VB, #13         ; Load 19 into VB
$506    $E7CD   UNKNOWN  $E7CD           ; Unknown Exxx instruction
$508    $D064   DRW      V0, V6, #4      ; Draw 4-byte sprite at V0, V6
$50A    $1106   JP       $106            ; Jump to 106
$50C    $FAC2   UNKNOWN  FAC2            ; Unknown Fxxx instruction
$50E    $2E1D   CALL     $E1D            ; Call subroutine at E1D
$510    $C902   RND      V9, #02         ; V9 = random & 02
$512    $FB5E   UNKNOWN  FB5E            ; Unknown Fxxx instruction
$514    $010E   SYS      $10E            ; System call to 10E
$516    $BF4D   JP       V0, $F4D        ; Jump to V0 + F4D
$518    $C694   RND      V6, #94         ; V6 = random & 94
$51A    $E7B3   UNKNOWN  $E7B3           ; Unknown Exxx instruction
$51C    $6F8D   LD       VF, #8D         ; Load 141 into VF
$51E    $53A2   UNKNOWN  $53A2           ; Unknown 5xxx instruction
$520    $AC0B   LD       I, $C0B         ; Load C0B into I
$522    $0F84   SYS      $F84            ; System call to F84
$524    $6614   LD       V6, #14         ; Load 20 into V6
$526    $6074   LD       V0, #74         ; Load 116 into V0
$528    $E684   UNKNOWN  $E684           ; Unknown Exxx instruction
$52A    $AB2D   LD       I, $B2D         ; Load B2D into I
$52C    $004D   SYS      $04D            ; System call to 04D
$52E    $E7EF   UNKNOWN  $E7EF           ; Unknown Exxx instruction
$530    $CCDF   RND      VC, #DF         ; VC = random & DF
$532    $B822   JP       V0, $822        ; Jump to V0 + 822
$534    $C5BD   RND      V5, #BD         ; V5 = random & BD
$536    $A45C   LD       I, $45C         ; Load 45C into I
$538    $E90E   UNKNOWN  $E90E           ; Unknown Exxx instruction
$53A    $7F03   ADD      VF, #03         ; Add 3 to VF
$53C    $8D1B   UNKNOWN  8D1B            ; Unknown 8xxx instruction
$53E    $C1A3   RND      V1, #A3         ; V1 = random & A3
$540    $CF83   RND      VF, #83         ; VF = random & 83
$542    $85C4   ADD      V5, VC          ; V5 += VC, VF = carry
$544    $BAD0   JP       V0, $AD0        ; Jump to V0 + AD0
$546    $BCC7   JP       V0, $CC7        ; Jump to V0 + CC7
$548    $3837   SE       V8, #37         ; Skip if V8 == 55
$54A    $EB6D   UNKNOWN  $EB6D           ; Unknown Exxx instruction
$54C    $0D27   SYS      $D27            ; System call to D27
$54E    $F9B1   UNKNOWN  F9B1            ; Unknown Fxxx instruction
$550    $66B2   LD       V6, #B2         ; Load 178 into V6
$552    $B757   JP       V0, $757        ; Jump to V0 + 757
$554    $26A1   CALL     $6A1            ; Call subroutine at 6A1
$556    $402C   SNE      V0, #2C         ; Skip if V0 != 44
$558    $07DF   SYS      $7DF            ; System call to 7DF
$55A    $15C3   JP       $5C3            ; Jump to 5C3
$55C    $5398   UNKNOWN  $5398           ; Unknown 5xxx instruction
$55E    $2ED7   CALL     $ED7            ; Call subroutine at ED7
$560    $77F1   ADD      V7, #F1         ; Add 241 to V7
$562    $DFAD   DRW      VF, VA, #D      ; Draw 13-byte sprite at VF, VA
$564    $8D63   XOR      VD, V6          ; VD ^= V6
$566    $31B7   SE       V1, #B7         ; Skip if V1 == 183
$568    $577E   UNKNOWN  $577E           ; Unknown 5xxx instruction
$56A    $10D2   JP       $0D2            ; Jump to 0D2
$56C    $71F6   ADD      V1, #F6         ; Add 246 to V1
$56E    $30DC   SE       V0, #DC         ; Skip if V0 == 220
$570    $B522   JP       V0, $522        ; Jump to V0 + 522
$572    $F102   UNKNOWN  F102            ; Unknown Fxxx instruction
$574    $A915   LD       I, $915         ; Load 915 into I
$576    $485A   SNE      V8, #5A         ; Skip if V8 != 90
$578    $4189   SNE      V1, #89         ; Skip if V1 != 137
$57A    $502D   UNKNOWN  $502D           ; Unknown 5xxx instruction
$57C    $5040   SE       V0, V4          ; Skip if V0 == V4
$57E    $CA2D   RND      VA, #2D         ; VA = random & 2D
$580    $6CF9   LD       VC, #F9         ; Load 249 into VC
$582    $48E2   SNE      V8, #E2         ; Skip if V8 != 226
$584    $C855   RND      V8, #55         ; V8 = random & 55
$586    $1A9F   JP       $A9F            ; Jump to A9F
$588    $F87E   UNKNOWN  F87E            ; Unknown Fxxx instruction
$58A    $9DAA   UNKNOWN  $9DAA           ; Unknown 9xxx instruction
$58C    $34C5   SE       V4, #C5         ; Skip if V4 == 197
$58E    $7455   ADD      V4, #55         ; Add 85 to V4
$590    $8D57   SUBN     VD, V5          ; VD = V5 - VD, VF = !borrow
$592    $79C1   ADD      V9, #C1         ; Add 193 to V9
$594    $24E2   CALL     $4E2            ; Call subroutine at 4E2
$596    $36D5   SE       V6, #D5         ; Skip if V6 == 213
$598    $314F   SE       V1, #4F         ; Skip if V1 == 79
$59A    $2726   CALL     $726            ; Call subroutine at 726
$59C    $CFDA   RND      VF, #DA         ; VF = random & DA
$59E    $65F0   LD       V5, #F0         ; Load 240 into V5
$5A0    $5795   UNKNOWN  $5795           ; Unknown 5xxx instruction
$5A2    $5166   UNKNOWN  $5166           ; Unknown 5xxx instruction
$5A4    $B8AC   JP       V0, $8AC        ; Jump to V0 + 8AC
$5A6    $1AB7   JP       $AB7            ; Jump to AB7
$5A8    $5E14   UNKNOWN  $5E14           ; Unknown 5xxx instruction
$5AA    $C30F   RND      V3, #0F         ; V3 = random & 0F
$5AC    $FA4A   UNKNOWN  FA4A            ; Unknown Fxxx instruction
$5AE    $1B28   JP       $B28            ; Jump to B28
$5B0    $AF00   LD       I, $F00         ; Load F00 into I
$5B2    $4E10   SNE      VE, #10         ; Skip if VE != 16
$5B4    $6B03   LD       VB, #03         ; Load 3 into VB
$5B6    $1174   JP       $174            ; Jump to 174
$5B8    $C960   RND      V9, #60         ; V9 = random & 60
$5BA    $F9E2   UNKNOWN  F9E2            ; Unknown Fxxx instruction
$5BC    $5110   SE       V1, V1          ; Skip if V1 == V1
$5BE    $454F   SNE      V5, #4F         ; Skip if V5 != 79
$5C0    $3368   SE       V3, #68         ; Skip if V3 == 104
$5C2    $CE53   RND      VE, #53         ; VE = random & 53
$5C4    $1112   JP       $112            ; Jump to 112
$5C6    $A831   LD       I, $831         ; Load 831 into I
$5C8    $4912   SNE      V9, #12         ; Skip if V9 != 18
$5CA    $1F85   JP       $F85            ; Jump to F85
$5CC    $21AF   CALL     $1AF            ; Call subroutine at 1AF
$5CE    $E9BB   UNKNOWN  $E9BB           ; Unknown Exxx instruction
$5D0    $4D61   SNE      VD, #61         ; Skip if VD != 97
$5D2    $DA87   DRW      VA, V8, #7      ; Draw 7-byte sprite at VA, V8
$5D4    $A15E   LD       I, $15E         ; Load 15E into I
$5D6    $AB95   LD       I, $B95         ; Load B95 into I
$5D8    $E937   UNKNOWN  $E937           ; Unknown Exxx instruction
$5DA    $879A   UNKNOWN  879A            ; Unknown 8xxx instruction
$5DC    $A617   LD       I, $617         ; Load 617 into I
$5DE    $54A5   UNKNOWN  $54A5           ; Unknown 5xxx instruction
$5E0    $E5BF   UNKNOWN  $E5BF           ; Unknown Exxx instruction
$5E2    $F977   UNKNOWN  F977            ; Unknown Fxxx instruction
$5E4    $1A8C   JP       $A8C            ; Jump to A8C
$5E6    $FB39   UNKNOWN  FB39            ; Unknown Fxxx instruction
$5E8    $B2F9   JP       V0, $2F9        ; Jump to V0 + 2F9
$5EA    $B4B4   JP       V0, $4B4        ; Jump to V0 + 4B4
$5EC    $704D   ADD      V0, #4D         ; Add 77 to V0
$5EE    $F33C   UNKNOWN  F33C            ; Unknown Fxxx instruction
$5F0    $A816   LD       I, $816         ; Load 816 into I
$5F2    $BCEE   JP       V0, $CEE        ; Jump to V0 + CEE
$5F4    $F431   UNKNOWN  F431            ; Unknown Fxxx instruction
$5F6    $34F7   SE       V4, #F7         ; Skip if V4 == 247
$5F8    $5031   UNKNOWN  $5031           ; Unknown 5xxx instruction
$5FA    $7194   ADD      V1, #94         ; Add 148 to V1
$5FC    $36B7   SE       V6, #B7         ; Skip if V6 == 183
$5FE    $4279   SNE      V2, #79         ; Skip if V2 != 121
$600    $4EB7   SNE      VE, #B7         ; Skip if VE != 183
$602    $BB18   JP       V0, $B18        ; Jump to V0 + B18
$604    $6C1F   LD       VC, #1F         ; Load 31 into VC
$606    $C8D7   RND      V8, #D7         ; V8 = random & D7
$608    $AF3C   LD       I, $F3C         ; Load F3C into I
$60A    $C464   RND      V4, #64         ; V4 = random & 64
$60C    $9A64   UNKNOWN  $9A64           ; Unknown 9xxx instruction
$60E    $CA4E   RND      VA, #4E         ; VA = random & 4E
$610    $F87F   UNKNOWN  F87F            ; Unknown Fxxx instruction
$612    $6B5E   LD       VB, #5E         ; Load 94 into VB
$614    $DC80   DRW      VC, V8, #0      ; Draw 0-byte sprite at VC, V8
$616    $8182   AND      V1, V8          ; V1 &= V8
$618    $41F1   SNE      V1, #F1         ; Skip if V1 != 241
$61A    $0DEB   SYS      $DEB            ; System call to DEB
$61C    $9C17   UNKNOWN  $9C17           ; Unknown 9xxx instruction
$61E    $A94C   LD       I, $94C         ; Load 94C into I
$620    $F782   UNKNOWN  F782            ; Unknown Fxxx instruction
$622    $D46E   DRW      V4, V6, #E      ; Draw 14-byte sprite at V4, V6
$624    $0975   SYS      $975            ; System call to 975
$626    $A37F   LD       I, $37F         ; Load 37F into I
$628    $2DB5   CALL     $DB5            ; Call subroutine at DB5
$62A    $E9E9   UNKNOWN  $E9E9           ; Unknown Exxx instruction
$62C    $E74A   UNKNOWN  $E74A           ; Unknown Exxx instruction
$62E    $DEDB   DRW      VE, VD, #B      ; Draw 11-byte sprite at VE, VD
$630    $2473   CALL     $473            ; Call subroutine at 473
$632    $D101   DRW      V1, V0, #1      ; Draw 1-byte sprite at V1, V0
$634    $E263   UNKNOWN  $E263           ; Unknown Exxx instruction
$636    $1F82   JP       $F82            ; Jump to F82
$638    $FD51   UNKNOWN  FD51            ; Unknown Fxxx instruction
$63A    $7C5F   ADD      VC, #5F         ; Add 95 to VC
$63C    $F125   UNKNOWN  F125            ; Unknown Fxxx instruction
$63E    $D036   DRW      V0, V3, #6      ; Draw 6-byte sprite at V0, V3
$640    $5129   UNKNOWN  $5129           ; Unknown 5xxx instruction
$642    $49DA   SNE      V9, #DA         ; Skip if V9 != 218
$644    $9224   UNKNOWN  $9224           ; Unknown 9xxx instruction
$646    $6854   LD       V8, #54         ; Load 84 into V8
$648    $8B8C   UNKNOWN  8B8C            ; Unknown 8xxx instruction
$64A    $7312   ADD      V3, #12         ; Add 18 to V3
$64C    $6493   LD       V4, #93         ; Load 147 into V4
$64E    $EDB6   UNKNOWN  $EDB6           ; Unknown Exxx instruction
$650    $1309   JP       $309            ; Jump to 309
$652    $B88D   JP       V0, $88D        ; Jump to V0 + 88D
$654    $0688   SYS      $688            ; System call to 688
$656    $EF2C   UNKNOWN  $EF2C           ; Unknown Exxx instruction
$658    $013E   SYS      $13E            ; System call to 13E
$65A    $688E   LD       V8, #8E         ; Load 142 into V8
$65C    $B433   JP       V0, $433        ; Jump to V0 + 433
$65E    $EE4E   UNKNOWN  $EE4E           ; Unknown Exxx instruction
$660    $282F   CALL     $82F            ; Call subroutine at 82F
$662    $1EE6   JP       $EE6            ; Jump to EE6
$664    $8FBA   UNKNOWN  8FBA            ; Unknown 8xxx instruction
$666    $AF05   LD       I, $F05         ; Load F05 into I
$668    $DD91   DRW      VD, V9, #1      ; Draw 1-byte sprite at VD, V9
$66A    $1F5D   JP       $F5D            ; Jump to F5D
$66C    $7441   ADD      V4, #41         ; Add 65 to V4
$66E    $C25A   RND      V2, #5A         ; V2 = random & 5A
$670    $1584   JP       $584            ; Jump to 584
$672    $5014   UNKNOWN  $5014           ; Unknown 5xxx instruction
$674    $9E7B   UNKNOWN  $9E7B           ; Unknown 9xxx instruction
$676    $6D61   LD       VD, #61         ; Load 97 into VD
$678    $65F0   LD       V5, #F0         ; Load 240 into V5
$67A    $DAD3   DRW      VA, VD, #3      ; Draw 3-byte sprite at VA, VD
$67C    $3E0A   SE       VE, #0A         ; Skip if VE == 10
$67E    $CA8F   RND      VA, #8F         ; VA = random & 8F
$680    $F093   UNKNOWN  F093            ; Unknown Fxxx instruction
$682    $1A82   JP       $A82            ; Jump to A82
$684    $13F4   JP       $3F4            ; Jump to 3F4
$686    $4277   SNE      V2, #77         ; Skip if V2 != 119
$688    $6BC0   LD       VB, #C0         ; Load 192 into VB
$68A    $BDAF   JP       V0, $DAF        ; Jump to V0 + DAF
$68C    $C21D   RND      V2, #1D         ; V2 = random & 1D
$68E    $3E05   SE       VE, #05         ; Skip if VE == 5
$690    $097A   SYS      $97A            ; System call to 97A
$692    $1374   JP       $374            ; Jump to 374
$694    $FD4E   UNKNOWN  FD4E            ; Unknown Fxxx instruction
$696    $3091   SE       V0, #91         ; Skip if V0 == 145
$698    $2B76   CALL     $B76            ; Call subroutine at B76
$69A    $DA66   DRW      VA, V6, #6      ; Draw 6-byte sprite at VA, V6
$69C    $1ED4   JP       $ED4            ; Jump to ED4
$69E    $4B2D   SNE      VB, #2D         ; Skip if VB != 45
$6A0    $3D3E   SE       VD, #3E         ; Skip if VD == 62
$6A2    $F6E9   UNKNOWN  F6E9            ; Unknown Fxxx instruction
$6A4    $E583   UNKNOWN  $E583           ; Unknown Exxx instruction
$6A6    $464A   SNE      V6, #4A         ; Skip if V6 != 74
$6A8    $32DC   SE       V2, #DC         ; Skip if V2 == 220
$6AA    $F734   UNKNOWN  F734            ; Unknown Fxxx instruction
$6AC    $A5CC   LD       I, $5CC         ; Load 5CC into I
$6AE    $1223   JP       $223            ; Jump to 223
$6B0    $EE75   UNKNOWN  $EE75           ; Unknown Exxx instruction
$6B2    $0FE5   SYS      $FE5            ; System call to FE5
$6B4    $C8E7   RND      V8, #E7         ; V8 = random & E7
$6B6    $B3C0   JP       V0, $3C0        ; Jump to V0 + 3C0
$6B8    $A740   LD       I, $740         ; Load 740 into I
$6BA    $3744   SE       V7, #44         ; Skip if V7 == 68
$6BC    $56E2   UNKNOWN  $56E2           ; Unknown 5xxx instruction
$6BE    $6213   LD       V2, #13         ; Load 19 into V2
$6C0    $4B6F   SNE      VB, #6F         ; Skip if VB != 111
$6C2    $C890   RND      V8, #90         ; V8 = random & 90
$6C4    $B57F   JP       V0, $57F        ; Jump to V0 + 57F
$6C6    $EA74   UNKNOWN  $EA74           ; Unknown Exxx instruction
$6C8    $B498   JP       V0, $498        ; Jump to V0 + 498
$6CA    $4465   SNE      V4, #65         ; Skip if V4 != 101
$6CC    $3B0A   SE       VB, #0A         ; Skip if VB == 10
$6CE    $539D   UNKNOWN  $539D           ; Unknown 5xxx instruction
$6D0    $9865   UNKNOWN  $9865           ; Unknown 9xxx instruction
$6D2    $7637   ADD      V6, #37         ; Add 55 to V6
$6D4    $28A3   CALL     $8A3            ; Call subroutine at 8A3
$6D6    $90D6   UNKNOWN  $90D6           ; Unknown 9xxx instruction
$6D8    $4A3F   SNE      VA, #3F         ; Skip if VA != 63
$6DA    $B558   JP       V0, $558        ; Jump to V0 + 558
$6DC    $AF9B   LD       I, $F9B         ; Load F9B into I
$6DE    $491E   SNE      V9, #1E         ; Skip if V9 != 30
$6E0    $34DA   SE       V4, #DA         ; Skip if V4 == 218
$6E2    $7833   ADD      V8, #33         ; Add 51 to V8
$6E4    $D97D   DRW      V9, V7, #D      ; Draw 13-byte sprite at V9, V7
$6E6    $0802   SYS      $802            ; System call to 802
$6E8    $2C0B   CALL     $C0B            ; Call subroutine at C0B
$6EA    $74F4   ADD      V4, #F4         ; Add 244 to V4
$6EC    $0CE8   SYS      $CE8            ; System call to CE8
$6EE    $AF1E   LD       I, $F1E         ; Load F1E into I
$6F0    $EF15   UNKNOWN  $EF15           ; Unknown Exxx instruction
$6F2    $56FC   UNKNOWN  $56FC           ; Unknown 5xxx instruction
$6F4    $3875   SE       V8, #75         ; Skip if V8 == 117
$6F6    $C8ED   RND      V8, #ED         ; V8 = random & ED
$6F8    $FE05   UNKNOWN  FE05            ; Unknown Fxxx instruction
$6FA    $2BA1   CALL     $BA1            ; Call subroutine at BA1
$6FC    $891F   UNKNOWN  891F            ; Unknown 8xxx instruction
$6FE    $BA36   JP       V0, $A36        ; Jump to V0 + A36
$700    $C1A6   RND      V1, #A6         ; V1 = random & A6
$702    $41F9   SNE      V1, #F9         ; Skip if V1 != 249
$704    $0ED5   SYS      $ED5            ; System call to ED5
$706    $E179   UNKNOWN  $E179           ; Unknown Exxx instruction
$708    $3FCB   SE       VF, #CB         ; Skip if VF == 203
$70A    $1FA9   JP       $FA9            ; Jump to FA9
$70C    $1C4D   JP       $C4D            ; Jump to C4D
$70E    $EDB6   UNKNOWN  $EDB6           ; Unknown Exxx instruction
$710    $3778   SE       V7, #78         ; Skip if V7 == 120
$712    $0F03   SYS      $F03            ; System call to F03
$714    $EF05   UNKNOWN  $EF05           ; Unknown Exxx instruction
$716    $F055   LD       [I], V0         ; Store V0-V0 at I
$718    $35AC   SE       V5, #AC         ; Skip if V5 == 172
$71A    $0DDF   SYS      $DDF            ; System call to DDF
$71C    $BBBF   JP       V0, $BBF        ; Jump to V0 + BBF
$71E    $3723   SE       V7, #23         ; Skip if V7 == 35
$720    $46F6   SNE      V6, #F6         ; Skip if V6 != 246
$722    $A9CB   LD       I, $9CB         ; Load 9CB into I
$724    $E6F5   UNKNOWN  $E6F5           ; Unknown Exxx instruction
$726    $99CE   UNKNOWN  $99CE           ; Unknown 9xxx instruction
$728    $8BDD   UNKNOWN  8BDD            ; Unknown 8xxx instruction
$72A    $4873   SNE      V8, #73         ; Skip if V8 != 115
$72C    $2C60   CALL     $C60            ; Call subroutine at C60
$72E    $FDA4   UNKNOWN  FDA4            ; Unknown Fxxx instruction
$730    $BB6F   JP       V0, $B6F        ; Jump to V0 + B6F
$732    $13F8   JP       $3F8            ; Jump to 3F8
$734    $CD98   RND      VD, #98         ; VD = random & 98
$736    $7892   ADD      V8, #92         ; Add 146 to V8
$738    $CE37   RND      VE, #37         ; VE = random & 37
$73A    $55A7   UNKNOWN  $55A7           ; Unknown 5xxx instruction
$73C    $6612   LD       V6, #12         ; Load 18 into V6
$73E    $38EB   SE       V8, #EB         ; Skip if V8 == 235
$740    $73A4   ADD      V3, #A4         ; Add 164 to V3
$742    $1D13   JP       $D13            ; Jump to D13
$744    $5BA2   UNKNOWN  $5BA2           ; Unknown 5xxx instruction
$746    $8F73   XOR      VF, V7          ; VF ^= V7
$748    $2F2A   CALL     $F2A            ; Call subroutine at F2A
$74A    $1435   JP       $435            ; Jump to 435
$74C    $42A3   SNE      V2, #A3         ; Skip if V2 != 163
$74E    $E4E6   UNKNOWN  $E4E6           ; Unknown Exxx instruction
$750    $1614   JP       $614            ; Jump to 614
$752    $E256   UNKNOWN  $E256           ; Unknown Exxx instruction
$754    $1D80   JP       $D80            ; Jump to D80
$756    $2356   CALL     $356            ; Call subroutine at 356
$758    $ED56   UNKNOWN  $ED56           ; Unknown Exxx instruction
$75A    $1FF9   JP       $FF9            ; Jump to FF9
$75C    $0FBC   SYS      $FBC            ; System call to FBC
$75E    $3EC5   SE       VE, #C5         ; Skip if VE == 197
$760    $C5C8   RND      V5, #C8         ; V5 = random & C8
$762    $9D8C   UNKNOWN  $9D8C           ; Unknown 9xxx instruction
$764    $593F   UNKNOWN  $593F           ; Unknown 5xxx instruction
$766    $1AF3   JP       $AF3            ; Jump to AF3
$768    $B8E2   JP       V0, $8E2        ; Jump to V0 + 8E2
$76A    $E0D1   UNKNOWN  $E0D1           ; Unknown Exxx instruction
$76C    $CA40   RND      VA, #40         ; VA = random & 40
$76E    $5A61   UNKNOWN  $5A61           ; Unknown 5xxx instruction
$770    $5311   UNKNOWN  $5311           ; Unknown 5xxx instruction
$772    $79B7   ADD      V9, #B7         ; Add 183 to V9
$774    $4FD1   SNE      VF, #D1         ; Skip if VF != 209
$776    $39F5   SE       V9, #F5         ; Skip if V9 == 245
$778    $8AB8   UNKNOWN  8AB8            ; Unknown 8xxx instruction
$77A    $C79B   RND      V7, #9B         ; V7 = random & 9B
$77C    $EFE9   UNKNOWN  $EFE9           ; Unknown Exxx instruction
$77E    $4EFC   SNE      VE, #FC         ; Skip if VE != 252
$780    $D826   DRW      V8, V2, #6      ; Draw 6-byte sprite at V8, V2
$782    $8008   UNKNOWN  8008            ; Unknown 8xxx instruction
$784    $5923   UNKNOWN  $5923           ; Unknown 5xxx instruction
$786    $7A5E   ADD      VA, #5E         ; Add 94 to VA
$788    $3FB1   SE       VF, #B1         ; Skip if VF == 177
$78A    $2A07   CALL     $A07            ; Call subroutine at A07
$78C    $B753   JP       V0, $753        ; Jump to V0 + 753
$78E    $A960   LD       I, $960         ; Load 960 into I
$790    $D51D   DRW      V5, V1, #D      ; Draw 13-byte sprite at V5, V1
$792    $4E26   SNE      VE, #26         ; Skip if VE != 38
$794    $A5E0   LD       I, $5E0         ; Load 5E0 into I
$796    $C0E3   RND      V0, #E3         ; V0 = random & E3
$798    $ABA3   LD       I, $BA3         ; Load BA3 into I
$79A    $FB12   UNKNOWN  FB12            ; Unknown Fxxx instruction
$79C    $B19A   JP       V0, $19A        ; Jump to V0 + 19A
$79E    $4BC3   SNE      VB, #C3         ; Skip if VB != 195
$7A0    $73A8   ADD      V3, #A8         ; Add 168 to V3
$7A2    $6267   LD       V2, #67         ; Load 103 into V2
$7A4    $482B   SNE      V8, #2B         ; Skip if V8 != 43
$7A6    $C878   RND      V8, #78         ; V8 = random & 78
$7A8    $F8FF   UNKNOWN  F8FF            ; Unknown Fxxx instruction
$7AA    $486C   SNE      V8, #6C         ; Skip if V8 != 108
$7AC    $E348   UNKNOWN  $E348           ; Unknown Exxx instruction
$7AE    $85E5   SUB      V5, VE          ; V5 -= VE, VF = !borrow
$7B0    $8989   UNKNOWN  8989            ; Unknown 8xxx instruction
$7B2    $C1BF   RND      V1, #BF         ; V1 = random & BF
$7B4    $4FF9   SNE      VF, #F9         ; Skip if VF != 249
$7B6    $71DC   ADD      V1, #DC         ; Add 220 to V1
$7B8    $59DC   UNKNOWN  $59DC           ; Unknown 5xxx instruction
$7BA    $43E7   SNE      V3, #E7         ; Skip if V3 != 231
$7BC    $F0A9   UNKNOWN  F0A9            ; Unknown Fxxx instruction
$7BE    $A265   LD       I, $265         ; Load 265 into I
$7C0    $39DC   SE       V9, #DC         ; Skip if V9 == 220
$7C2    $FC8C   UNKNOWN  FC8C            ; Unknown Fxxx instruction
$7C4    $A38A   LD       I, $38A         ; Load 38A into I
$7C6    $4984   SNE      V9, #84         ; Skip if V9 != 132
$7C8    $6A68   LD       VA, #68         ; Load 104 into VA
$7CA    $C0E6   RND      V0, #E6         ; V0 = random & E6
$7CC    $BFCC   JP       V0, $FCC        ; Jump to V0 + FCC
$7CE    $9FEA   UNKNOWN  $9FEA           ; Unknown 9xxx instruction
$7D0    $C8B5   RND      V8, #B5         ; V8 = random & B5
$7D2    $32EA   SE       V2, #EA         ; Skip if V2 == 234
$7D4    $2149   CALL     $149            ; Call subroutine at 149
$7D6    $6139   LD       V1, #39         ; Load 57 into V1
$7D8    $5E48   UNKNOWN  $5E48           ; Unknown 5xxx instruction
$7DA    $B5A6   JP       V0, $5A6        ; Jump to V0 + 5A6
$7DC    $DC1D   DRW      VC, V1, #D      ; Draw 13-byte sprite at VC, V1
$7DE    $2545   CALL     $545            ; Call subroutine at 545
$7E0    $98C9   UNKNOWN  $98C9           ; Unknown 9xxx instruction
$7E2    $0705   SYS      $705            ; System call to 705
$7E4    $2024   CALL     $024            ; Call subroutine at 024
$7E6    $D193   DRW      V1, V9, #3      ; Draw 3-byte sprite at V1, V9
$7E8    $5C2D   UNKNOWN  $5C2D           ; Unknown 5xxx instruction
$7EA    $A82F   LD       I, $82F         ; Load 82F into I
$7EC    $5D5A   UNKNOWN  $5D5A           ; Unknown 5xxx instruction
$7EE    $34AF   SE       V4, #AF         ; Skip if V4 == 175
$7F0    $B219   JP       V0, $219        ; Jump to V0 + 219
$7F2    $0D6C   SYS      $D6C            ; System call to D6C
$7F4    $0A6C   SYS      $A6C            ; System call to A6C
$7F6    $AFFD   LD       I, $FFD         ; Load FFD into I
$7F8    $A38F   LD       I, $38F         ; Load 38F into I
$7FA    $7BF5   ADD      VB, #F5         ; Add 245 to VB
$7FC    $6702   LD       V7, #02         ; Load 2 into V7
$7FE    $72D8   ADD      V2, #D8         ; Add 216 to V2
$800    $28AA   CALL     $8AA            ; Call subroutine at 8AA
$802    $771A   ADD      V7, #1A         ; Add 26 to V7
$804    $959D   UNKNOWN  $959D           ; Unknown 9xxx instruction
$806    $0772   SYS      $772            ; System call to 772
$808    $2581   CALL     $581            ; Call subroutine at 581
$80A    $64BE   LD       V4, #BE         ; Load 190 into V4
$80C    $87A2   AND      V7, VA          ; V7 &= VA
$80E    $D442   DRW      V4, V4, #2      ; Draw 2-byte sprite at V4, V4
$810    $88B5   SUB      V8, VB          ; V8 -= VB, VF = !borrow
$812    $F5B4   UNKNOWN  F5B4            ; Unknown Fxxx instruction
$814    $5C60   SE       VC, V6          ; Skip if VC == V6
$816    $A651   LD       I, $651         ; Load 651 into I
$818    $8906   SHR      V9              ; V9 >>= 1, VF = LSB
$81A    $CEE7   RND      VE, #E7         ; VE = random & E7
$81C    $88BE   SHL      V8              ; V8 <<= 1, VF = MSB
$81E    $F8D1   UNKNOWN  F8D1            ; Unknown Fxxx instruction
$820    $77E1   ADD      V7, #E1         ; Add 225 to V7
$822    $BCD8   JP       V0, $CD8        ; Jump to V0 + CD8
$824    $A477   LD       I, $477         ; Load 477 into I
$826    $D0A7   DRW      V0, VA, #7      ; Draw 7-byte sprite at V0, VA
$828    $34D8   SE       V4, #D8         ; Skip if V4 == 216
$82A    $49CE   SNE      V9, #CE         ; Skip if V9 != 206
$82C    $8D1F   UNKNOWN  8D1F            ; Unknown 8xxx instruction
$82E    $3FAC   SE       VF, #AC         ; Skip if VF == 172
$830    $455C   SNE      V5, #5C         ; Skip if V5 != 92
$832    $803C   UNKNOWN  803C            ; Unknown 8xxx instruction
$834    $94D6   UNKNOWN  $94D6           ; Unknown 9xxx instruction
$836    $D317   DRW      V3, V1, #7      ; Draw 7-byte sprite at V3, V1
$838    $7303   ADD      V3, #03         ; Add 3 to V3
$83A    $AC93   LD       I, $C93         ; Load C93 into I
$83C    $A608   LD       I, $608         ; Load 608 into I
$83E    $9BEA   UNKNOWN  $9BEA           ; Unknown 9xxx instruction
$840    $64E9   LD       V4, #E9         ; Load 233 into V4
$842    $93EF   UNKNOWN  $93EF           ; Unknown 9xxx instruction
$844    $2D79   CALL     $D79            ; Call subroutine at D79
$846    $7D76   ADD      VD, #76         ; Add 118 to VD
$848    $24D2   CALL     $4D2            ; Call subroutine at 4D2
$84A    $50F7   UNKNOWN  $50F7           ; Unknown 5xxx instruction
$84C    $36C5   SE       V6, #C5         ; Skip if V6 == 197
$84E    $C75D   RND      V7, #5D         ; V7 = random & 5D
$850    $6F41   LD       VF, #41         ; Load 65 into VF
$852    $74EB   ADD      V4, #EB         ; Add 235 to V4
$854    $AC3B   LD       I, $C3B         ; Load C3B into I
$856    $6375   LD       V3, #75         ; Load 117 into V3
$858    $AF49   LD       I, $F49         ; Load F49 into I
$85A    $35A1   SE       V5, #A1         ; Skip if V5 == 161
$85C    $C949   RND      V9, #49         ; V9 = random & 49
$85E    $B8CB   JP       V0, $8CB        ; Jump to V0 + 8CB
$860    $2DC3   CALL     $DC3            ; Call subroutine at DC3
$862    $9491   UNKNOWN  $9491           ; Unknown 9xxx instruction
$864    $0890   SYS      $890            ; System call to 890
$866    $17D4   JP       $7D4            ; Jump to 7D4
$868    $895D   UNKNOWN  895D            ; Unknown 8xxx instruction
$86A    $2A53   CALL     $A53            ; Call subroutine at A53
$86C    $2074   CALL     $074            ; Call subroutine at 074
$86E    $CD98   RND      VD, #98         ; VD = random & 98
$870    $508E   UNKNOWN  $508E           ; Unknown 5xxx instruction
$872    $8F8E   SHL      VF              ; VF <<= 1, VF = MSB
$874    $5F17   UNKNOWN  $5F17           ; Unknown 5xxx instruction
$876    $F113   UNKNOWN  F113            ; Unknown Fxxx instruction
$878    $3191   SE       V1, #91         ; Skip if V1 == 145
$87A    $8E7A   UNKNOWN  8E7A            ; Unknown 8xxx instruction
$87C    $1BCB   JP       $BCB            ; Jump to BCB
$87E    $F44E   UNKNOWN  F44E            ; Unknown Fxxx instruction
$880    $C4BE   RND      V4, #BE         ; V4 = random & BE
$882    $F9F4   UNKNOWN  F9F4            ; Unknown Fxxx instruction
$884    $1133   JP       $133            ; Jump to 133
$886    $E224   UNKNOWN  $E224           ; Unknown Exxx instruction
$888    $622C   LD       V2, #2C         ; Load 44 into V2
$88A    $04B0   SYS      $4B0            ; System call to 4B0
$88C    $C9F1   RND      V9, #F1         ; V9 = random & F1
$88E    $D745   DRW      V7, V4, #5      ; Draw 5-byte sprite at V7, V4
$890    $8486   SHR      V4              ; V4 >>= 1, VF = LSB
$892    $C08A   RND      V0, #8A         ; V0 = random & 8A
$894    $36DD   SE       V6, #DD         ; Skip if V6 == 221
$896    $B9D5   JP       V0, $9D5        ; Jump to V0 + 9D5
$898    $CAD5   RND      VA, #D5         ; VA = random & D5
$89A    $C1D9   RND      V1, #D9         ; V1 = random & D9
$89C    $F4AC   UNKNOWN  F4AC            ; Unknown Fxxx instruction
$89E    $590F   UNKNOWN  $590F           ; Unknown 5xxx instruction
$8A0    $28F1   CALL     $8F1            ; Call subroutine at 8F1
$8A2    $2C83   CALL     $C83            ; Call subroutine at C83
$8A4    $7EAC   ADD      VE, #AC         ; Add 172 to VE
$8A6    $0E0B   SYS      $E0B            ; System call to E0B
$8A8    $A184   LD       I, $184         ; Load 184 into I
$8AA    $C86B   RND      V8, #6B         ; V8 = random & 6B
$8AC    $3E3D   SE       VE, #3D         ; Skip if VE == 61
$8AE    $A64F   LD       I, $64F         ; Load 64F into I
$8B0    $709C   ADD      V0, #9C         ; Add 156 to V0
$8B2    $78F8   ADD      V8, #F8         ; Add 248 to V8
$8B4    $AE53   LD       I, $E53         ; Load E53 into I
$8B6    $063F   SYS      $63F            ; System call to 63F
$8B8    $DBEB   DRW      VB, VE, #B      ; Draw 11-byte sprite at VB, VE
$8BA    $EC17   UNKNOWN  $EC17           ; Unknown Exxx instruction
$8BC    $E6A4   UNKNOWN  $E6A4           ; Unknown Exxx instruction
$8BE    $BDB7   JP       V0, $DB7        ; Jump to V0 + DB7
$8C0    $655C   LD       V5, #5C         ; Load 92 into V5
$8C2    $5F42   UNKNOWN  $5F42           ; Unknown 5xxx instruction
$8C4    $BE3A   JP       V0, $E3A        ; Jump to V0 + E3A
$8C6    $F5BC   UNKNOWN  F5BC            ; Unknown Fxxx instruction
$8C8    $1DFD   JP       $DFD            ; Jump to DFD
$8CA    $9FB1   UNKNOWN  $9FB1           ; Unknown 9xxx instruction
$8CC    $0D02   SYS      $D02            ; System call to D02
$8CE    $59B8   UNKNOWN  $59B8           ; Unknown 5xxx instruction
$8D0    $1495   JP       $495            ; Jump to 495
$8D2    $BDB8   JP       V0, $DB8        ; Jump to V0 + DB8
$8D4    $5F0E   UNKNOWN  $5F0E           ; Unknown 5xxx instruction
$8D6    $CA01   RND      VA, #01         ; VA = random & 01
$8D8    $BDF4   JP       V0, $DF4        ; Jump to V0 + DF4
$8DA    $DB7F   DRW      VB, V7, #F      ; Draw 15-byte sprite at VB, V7
$8DC    $EC5F   UNKNOWN  $EC5F           ; Unknown Exxx instruction
$8DE    $C2E8   RND      V2, #E8         ; V2 = random & E8
$8E0    $E46F   UNKNOWN  $E46F           ; Unknown Exxx instruction
$8E2    $6080   LD       V0, #80         ; Load 128 into V0
$8E4    $9C79   UNKNOWN  $9C79           ; Unknown 9xxx instruction
$8E6    $E482   UNKNOWN  $E482           ; Unknown Exxx instruction
$8E8    $34BA   SE       V4, #BA         ; Skip if V4 == 186
$8EA    $AB89   LD       I, $B89         ; Load B89 into I
$8EC    $3730   SE       V7, #30         ; Skip if V7 == 48
$8EE    $1B6B   JP       $B6B            ; Jump to B6B
$8F0    $8449   UNKNOWN  8449            ; Unknown 8xxx instruction
$8F2    $E680   UNKNOWN  $E680           ; Unknown Exxx instruction
$8F4    $8C79   UNKNOWN  8C79            ; Unknown 8xxx instruction
$8F6    $9A4B   UNKNOWN  $9A4B           ; Unknown 9xxx instruction
$8F8    $1F7D   JP       $F7D            ; Jump to F7D
$8FA    $175D   JP       $75D            ; Jump to 75D
$8FC    $7672   ADD      V6, #72         ; Add 114 to V6
$8FE    $F76C   UNKNOWN  F76C            ; Unknown Fxxx instruction
$900    $B331   JP       V0, $331        ; Jump to V0 + 331
$902    $8F60   LD       VF, V6          ; VF = V6
$904    $A433   LD       I, $433         ; Load 433 into I
$906    $4CD3   SNE      VC, #D3         ; Skip if VC != 211
$908    $F451   UNKNOWN  F451            ; Unknown Fxxx instruction
$90A    $AC66   LD       I, $C66         ; Load C66 into I
$90C    $DECF   DRW      VE, VC, #F      ; Draw 15-byte sprite at VE, VC
$90E    $120D   JP       $20D            ; Jump to 20D
$910    $68EC   LD       V8, #EC         ; Load 236 into V8
$912    $F50F   UNKNOWN  F50F            ; Unknown Fxxx instruction
$914    $242C   CALL     $42C            ; Call subroutine at 42C
$916    $49F1   SNE      V9, #F1         ; Skip if V9 != 241
$918    $4C18   SNE      VC, #18         ; Skip if VC != 24
$91A    $0565   SYS      $565            ; System call to 565
$91C    $C2AE   RND      V2, #AE         ; V2 = random & AE
$91E    $003B   SYS      $03B            ; System call to 03B
$920    $2D13   CALL     $D13            ; Call subroutine at D13
$922    $ABBF   LD       I, $BBF         ; Load BBF into I
$924    $F5DE   UNKNOWN  F5DE            ; Unknown Fxxx instruction
$926    $BE5C   JP       V0, $E5C        ; Jump to V0 + E5C
$928    $3D89   SE       VD, #89         ; Skip if VD == 137
$92A    $5E89   UNKNOWN  $5E89           ; Unknown 5xxx instruction
$92C    $4B29   SNE      VB, #29         ; Skip if VB != 41
$92E    $7364   ADD      V3, #64         ; Add 100 to V3
$930    $0691   SYS      $691            ; System call to 691
$932    $3428   SE       V4, #28         ; Skip if V4 == 40
$934    $2A59   CALL     $A59            ; Call subroutine at A59
$936    $A2AF   LD       I, $2AF         ; Load 2AF into I
$938    $137D   JP       $37D            ; Jump to 37D
$93A    $80C6   SHR      V0              ; V0 >>= 1, VF = LSB
$93C    $C46E   RND      V4, #6E         ; V4 = random & 6E
$93E    $8785   SUB      V7, V8          ; V7 -= V8, VF = !borrow
$940    $E492   UNKNOWN  $E492           ; Unknown Exxx instruction
$942    $6644   LD       V6, #44         ; Load 68 into V6
$944    $ABD2   LD       I, $BD2         ; Load BD2 into I
$946    $874A   UNKNOWN  874A            ; Unknown 8xxx instruction
$948    $3C88   SE       VC, #88         ; Skip if VC == 136
$94A    $BD79   JP       V0, $D79        ; Jump to V0 + D79
$94C    $95F9   UNKNOWN  $95F9           ; Unknown 9xxx instruction
$94E    $165F   JP       $65F            ; Jump to 65F
$950    $CC91   RND      VC, #91         ; VC = random & 91
$952    $8522   AND      V5, V2          ; V5 &= V2
$954    $BD82   JP       V0, $D82        ; Jump to V0 + D82
$956    $C834   RND      V8, #34         ; V8 = random & 34
$958    $4D0A   SNE      VD, #0A         ; Skip if VD != 10
$95A    $0596   SYS      $596            ; System call to 596
$95C    $5C7A   UNKNOWN  $5C7A           ; Unknown 5xxx instruction
$95E    $D499   DRW      V4, V9, #9      ; Draw 9-byte sprite at V4, V9
$960    $9628   UNKNOWN  $9628           ; Unknown 9xxx instruction
$962    $CF9F   RND      VF, #9F         ; VF = random & 9F
$964    $8E60   LD       VE, V6          ; VE = V6
$966    $5FE4   UNKNOWN  $5FE4           ; Unknown 5xxx instruction
$968    $AE8A   LD       I, $E8A         ; Load E8A into I
$96A    $45CC   SNE      V5, #CC         ; Skip if V5 != 204
$96C    $16D2   JP       $6D2            ; Jump to 6D2
$96E    $E761   UNKNOWN  $E761           ; Unknown Exxx instruction
$970    $5EDD   UNKNOWN  $5EDD           ; Unknown 5xxx instruction
$972    $EC1C   UNKNOWN  $EC1C           ; Unknown Exxx instruction
$974    $4A35   SNE      VA, #35         ; Skip if VA != 53
$976    $E382   UNKNOWN  $E382           ; Unknown Exxx instruction
$978    $C8D4   RND      V8, #D4         ; V8 = random & D4
$97A    $B9B4   JP       V0, $9B4        ; Jump to V0 + 9B4
$97C    $E8F3   UNKNOWN  $E8F3           ; Unknown Exxx instruction
$97E    $AD22   LD       I, $D22         ; Load D22 into I
$980    $B84F   JP       V0, $84F        ; Jump to V0 + 84F
$982    $3CC2   SE       VC, #C2         ; Skip if VC == 194
$984    $A80D   LD       I, $80D         ; Load 80D into I
$986    $2619   CALL     $619            ; Call subroutine at 619
$988    $3EFC   SE       VE, #FC         ; Skip if VE == 252
$98A    $2EE0   CALL     $EE0            ; Call subroutine at EE0
$98C    $1A94   JP       $A94            ; Jump to A94
$98E    $EC69   UNKNOWN  $EC69           ; Unknown Exxx instruction
$990    $D5E7   DRW      V5, VE, #7      ; Draw 7-byte sprite at V5, VE
$992    $9D63   UNKNOWN  $9D63           ; Unknown 9xxx instruction
$994    $B69F   JP       V0, $69F        ; Jump to V0 + 69F
$996    $05AD   SYS      $5AD            ; System call to 5AD
$998    $C36C   RND      V3, #6C         ; V3 = random & 6C
$99A    $C512   RND      V5, #12         ; V5 = random & 12
$99C    $895C   UNKNOWN  895C            ; Unknown 8xxx instruction
$99E    $0CCB   SYS      $CCB            ; System call to CCB
$9A0    $E554   UNKNOWN  $E554           ; Unknown Exxx instruction
$9A2    $C82C   RND      V8, #2C         ; V8 = random & 2C
$9A4    $F339   UNKNOWN  F339            ; Unknown Fxxx instruction
$9A6    $F6A6   UNKNOWN  F6A6            ; Unknown Fxxx instruction
$9A8    $0364   SYS      $364            ; System call to 364
$9AA    $A926   LD       I, $926         ; Load 926 into I
$9AC    $4C98   SNE      VC, #98         ; Skip if VC != 152
$9AE    $3046   SE       V0, #46         ; Skip if V0 == 70
$9B0    $4226   SNE      V2, #26         ; Skip if V2 != 38
$9B2    $2E49   CALL     $E49            ; Call subroutine at E49
$9B4    $3D62   SE       VD, #62         ; Skip if VD == 98
$9B6    $EE1F   UNKNOWN  $EE1F           ; Unknown Exxx instruction
$9B8    $1AB8   JP       $AB8            ; Jump to AB8
$9BA    $33DC   SE       V3, #DC         ; Skip if V3 == 220
$9BC    $87BC   UNKNOWN  87BC            ; Unknown 8xxx instruction
$9BE    $E5E2   UNKNOWN  $E5E2           ; Unknown Exxx instruction
$9C0    $F046   UNKNOWN  F046            ; Unknown Fxxx instruction
$9C2    $5232   UNKNOWN  $5232           ; Unknown 5xxx instruction
$9C4    $26A7   CALL     $6A7            ; Call subroutine at 6A7
$9C6    $3927   SE       V9, #27         ; Skip if V9 == 39
$9C8    $77C8   ADD      V7, #C8         ; Add 200 to V7
$9CA    $52CC   UNKNOWN  $52CC           ; Unknown 5xxx instruction
$9CC    $2F68   CALL     $F68            ; Call subroutine at F68
$9CE    $B451   JP       V0, $451        ; Jump to V0 + 451
$9D0    $ACCA   LD       I, $CCA         ; Load CCA into I
$9D2    $D39C   DRW      V3, V9, #C      ; Draw 12-byte sprite at V3, V9
$9D4    $50B3   UNKNOWN  $50B3           ; Unknown 5xxx instruction
$9D6    $7B35   ADD      VB, #35         ; Add 53 to VB
$9D8    $DD3B   DRW      VD, V3, #B      ; Draw 11-byte sprite at VD, V3
$9DA    $71FB   ADD      V1, #FB         ; Add 251 to V1
$9DC    $5BA8   UNKNOWN  $5BA8           ; Unknown 5xxx instruction
$9DE    $A015   LD       I, $015         ; Load 015 into I
$9E0    $3ED5   SE       VE, #D5         ; Skip if VE == 213
$9E2    $D78C   DRW      V7, V8, #C      ; Draw 12-byte sprite at V7, V8
$9E4    $D960   DRW      V9, V6, #0      ; Draw 0-byte sprite at V9, V6
$9E6    $210A   CALL     $10A            ; Call subroutine at 10A
$9E8    $1558   JP       $558            ; Jump to 558
$9EA    $4695   SNE      V6, #95         ; Skip if V6 != 149
$9EC    $B7F9   JP       V0, $7F9        ; Jump to V0 + 7F9
$9EE    $D5F1   DRW      V5, VF, #1      ; Draw 1-byte sprite at V5, VF
$9F0    $38D2   SE       V8, #D2         ; Skip if V8 == 210
$9F2    $7504   ADD      V5, #04         ; Add 4 to V5
$9F4    $E07D   UNKNOWN  $E07D           ; Unknown Exxx instruction
$9F6    $3E1E   SE       VE, #1E         ; Skip if VE == 30
$9F8    $FD22   UNKNOWN  FD22            ; Unknown Fxxx instruction
$9FA    $9C4F   UNKNOWN  $9C4F           ; Unknown 9xxx instruction
$9FC    $78E3   ADD      V8, #E3         ; Add 227 to V8
$9FE    $54C5   UNKNOWN  $54C5           ; Unknown 5xxx instruction
$A00    $BF22   JP       V0, $F22        ; Jump to V0 + F22
$A02    $1674   JP       $674            ; Jump to 674
$A04    $3C65   SE       VC, #65         ; Skip if VC == 101
$A06    $3A37   SE       VA, #37         ; Skip if VA == 55
$A08    $0548   SYS      $548            ; System call to 548
$A0A    $0CBC   SYS      $CBC            ; System call to CBC
$A0C    $C21B   RND      V2, #1B         ; V2 = random & 1B
$A0E    $C4D1   RND      V4, #D1         ; V4 = random & D1
$A10    $B976   JP       V0, $976        ; Jump to V0 + 976
$A12    $E04A   UNKNOWN  $E04A           ; Unknown Exxx instruction
$A14    $26C2   CALL     $6C2            ; Call subroutine at 6C2
$A16    $41B9   SNE      V1, #B9         ; Skip if V1 != 185
$A18    $6D27   LD       VD, #27         ; Load 39 into VD
$A1A    $D6E8   DRW      V6, VE, #8      ; Draw 8-byte sprite at V6, VE
$A1C    $701F   ADD      V0, #1F         ; Add 31 to V0
$A1E    $93F5   UNKNOWN  $93F5           ; Unknown 9xxx instruction
$A20    $CA7C   RND      VA, #7C         ; VA = random & 7C
$A22    $AC4B   LD       I, $C4B         ; Load C4B into I
$A24    $EA52   UNKNOWN  $EA52           ; Unknown Exxx instruction
$A26    $EA41   UNKNOWN  $EA41           ; Unknown Exxx instruction
$A28    $4314   SNE      V3, #14         ; Skip if V3 != 20
$A2A    $7391   ADD      V3, #91         ; Add 145 to V3
$A2C    $4277   SNE      V2, #77         ; Skip if V2 != 119
$A2E    $8C82   AND      VC, V8          ; VC &= V8
$A30    $6EE8   LD       VE, #E8         ; Load 232 into VE
$A32    $A553   LD       I, $553         ; Load 553 into I
$A34    $B021   JP       V0, $021        ; Jump to V0 + 021
$A36    $544D   UNKNOWN  $544D           ; Unknown 5xxx instruction
$A38    $E589   UNKNOWN  $E589           ; Unknown Exxx instruction
$A3A    $ACF0   LD       I, $CF0         ; Load CF0 into I
$A3C    $D618   DRW      V6, V1, #8      ; Draw 8-byte sprite at V6, V1
$A3E    $17C0   JP       $7C0            ; Jump to 7C0
$A40    $9E60   SNE      VE, V6          ; Skip if VE != V6
$A42    $4D56   SNE      VD, #56         ; Skip if VD != 86
$A44    $261C   CALL     $61C            ; Call subroutine at 61C
$A46    $8C5B   UNKNOWN  8C5B            ; Unknown 8xxx instruction
$A48    $5B8E   UNKNOWN  $5B8E           ; Unknown 5xxx instruction
$A4A    $F4C8   UNKNOWN  F4C8            ; Unknown Fxxx instruction
$A4C    $67A4   LD       V7, #A4         ; Load 164 into V7
$A4E    $5D61   UNKNOWN  $5D61           ; Unknown 5xxx instruction
$A50    $9524   UNKNOWN  $9524           ; Unknown 9xxx instruction
$A52    $492A   SNE      V9, #2A         ; Skip if V9 != 42
$A54    $83AD   UNKNOWN  83AD            ; Unknown 8xxx instruction
$A56    $3DAF   SE       VD, #AF         ; Skip if VD == 175
$A58    $3102   SE       V1, #02         ; Skip if V1 == 2
$A5A    $AEA5   LD       I, $EA5         ; Load EA5 into I
$A5C    $E4C4   UNKNOWN  $E4C4           ; Unknown Exxx instruction
$A5E    $E56C   UNKNOWN  $E56C           ; Unknown Exxx instruction
$A60    $E1B2   UNKNOWN  $E1B2           ; Unknown Exxx instruction
$A62    $D8F2   DRW      V8, VF, #2      ; Draw 2-byte sprite at V8, VF
$A64    $1829   JP       $829            ; Jump to 829
$A66    $386A   SE       V8, #6A         ; Skip if V8 == 106
$A68    $B71D   JP       V0, $71D        ; Jump to V0 + 71D
$A6A    $D413   DRW      V4, V1, #3      ; Draw 3-byte sprite at V4, V1
$A6C    $FB67   UNKNOWN  FB67            ; Unknown Fxxx instruction
$A6E    $3CDE   SE       VC, #DE         ; Skip if VC == 222
$A70    $E721   UNKNOWN  $E721           ; Unknown Exxx instruction
$A72    $AFC5   LD       I, $FC5         ; Load FC5 into I
$A74    $9D7B   UNKNOWN  $9D7B           ; Unknown 9xxx instruction
$A76    $F528   UNKNOWN  F528            ; Unknown Fxxx instruction
$A78    $2313   CALL     $313            ; Call subroutine at 313
$A7A    $6412   LD       V4, #12         ; Load 18 into V4
$A7C    $F2C2   UNKNOWN  F2C2            ; Unknown Fxxx instruction
$A7E    $B18B   JP       V0, $18B        ; Jump to V0 + 18B
$A80    $1630   JP       $630            ; Jump to 630
$A82    $A5B4   LD       I, $5B4         ; Load 5B4 into I
$A84    $BAE0   JP       V0, $AE0        ; Jump to V0 + AE0
$A86    $2A39   CALL     $A39            ; Call subroutine at A39
$A88    $C22E   RND      V2, #2E         ; V2 = random & 2E
$A8A    $D2F0   DRW      V2, VF, #0      ; Draw 0-byte sprite at V2, VF
$A8C    $2202   CALL     $202            ; Call subroutine at 202
$A8E    $15D8   JP       $5D8            ; Jump to 5D8
$A90    $8107   SUBN     V1, V0          ; V1 = V0 - V1, VF = !borrow
$A92    $7181   ADD      V1, #81         ; Add 129 to V1
$A94    $4E24   SNE      VE, #24         ; Skip if VE != 36
$A96    $8008   UNKNOWN  8008            ; Unknown 8xxx instruction
$A98    $CE2A   RND      VE, #2A         ; VE = random & 2A
$A9A    $ABAB   LD       I, $BAB         ; Load BAB into I
$A9C    $5442   UNKNOWN  $5442           ; Unknown 5xxx instruction
$A9E    $3D79   SE       VD, #79         ; Skip if VD == 121
$AA0    $3B72   SE       VB, #72         ; Skip if VB == 114
$AA2    $714D   ADD      V1, #4D         ; Add 77 to V1
$AA4    $3965   SE       V9, #65         ; Skip if V9 == 101
$AA6    $A300   LD       I, $300         ; Load 300 into I
$AA8    $4E6C   SNE      VE, #6C         ; Skip if VE != 108
$AAA    $6C8E   LD       VC, #8E         ; Load 142 into VC
$AAC    $FE33   LD       B, VE           ; Store BCD of VE at I, I+1, I+2
$AAE    $C187   RND      V1, #87         ; V1 = random & 87
$AB0    $3DEC   SE       VD, #EC         ; Skip if VD == 236
$AB2    $2AAD   CALL     $AAD            ; Call subroutine at AAD
$AB4    $D14E   DRW      V1, V4, #E      ; Draw 14-byte sprite at V1, V4
$AB6    $22C4   CALL     $2C4            ; Call subroutine at 2C4
$AB8    $4870   SNE      V8, #70         ; Skip if V8 != 112
$ABA    $4DB7   SNE      VD, #B7         ; Skip if VD != 183
$ABC    $D183   DRW      V1, V8, #3      ; Draw 3-byte sprite at V1, V8
$ABE    $36C0   SE       V6, #C0         ; Skip if V6 == 192
$AC0    $5E8B   UNKNOWN  $5E8B           ; Unknown 5xxx instruction
$AC2    $614D   LD       V1, #4D         ; Load 77 into V1
$AC4    $DBC8   DRW      VB, VC, #8      ; Draw 8-byte sprite at VB, VC
$AC6    $C3A3   RND      V3, #A3         ; V3 = random & A3
$AC8    $3B65   SE       VB, #65         ; Skip if VB == 101
$ACA    $66C3   LD       V6, #C3         ; Load 195 into V6
$ACC    $7C4B   ADD      VC, #4B         ; Add 75 to VC
$ACE    $04DC   SYS      $4DC            ; System call to 4DC
$AD0    $59CE   UNKNOWN  $59CE           ; Unknown 5xxx instruction
$AD2    $9290   SNE      V2, V9          ; Skip if V2 != V9
$AD4    $6A6A   LD       VA, #6A         ; Load 106 into VA
$AD6    $FDDB   UNKNOWN  FDDB            ; Unknown Fxxx instruction
$AD8    $F881   UNKNOWN  F881            ; Unknown Fxxx instruction
$ADA    $439A   SNE      V3, #9A         ; Skip if V3 != 154
$ADC    $342B   SE       V4, #2B         ; Skip if V4 == 43
$ADE    $DD9C   DRW      VD, V9, #C      ; Draw 12-byte sprite at VD, V9
$AE0    $F5E8   UNKNOWN  F5E8            ; Unknown Fxxx instruction
$AE2    $A335   LD       I, $335         ; Load 335 into I
$AE4    $7127   ADD      V1, #27         ; Add 39 to V1
$AE6    $885A   UNKNOWN  885A            ; Unknown 8xxx instruction
$AE8    $DC7D   DRW      VC, V7, #D      ; Draw 13-byte sprite at VC, V7
$AEA    $9744   UNKNOWN  $9744           ; Unknown 9xxx instruction
$AEC    $C796   RND      V7, #96         ; V7 = random & 96
$AEE    $6272   LD       V2, #72         ; Load 114 into V2
$AF0    $5319   UNKNOWN  $5319           ; Unknown 5xxx instruction
$AF2    $9B6B   UNKNOWN  $9B6B           ; Unknown 9xxx instruction
$AF4    $9CFF   UNKNOWN  $9CFF           ; Unknown 9xxx instruction
$AF6    $3A70   SE       VA, #70         ; Skip if VA == 112
$AF8    $31C5   SE       V1, #C5         ; Skip if V1 == 197
$AFA    $BE34   JP       V0, $E34        ; Jump to V0 + E34
$AFC    $4DA6   SNE      VD, #A6         ; Skip if VD != 166
$AFE    $9A66   UNKNOWN  $9A66           ; Unknown 9xxx instruction
$B00    $10CC   JP       $0CC            ; Jump to 0CC
$B02    $A70C   LD       I, $70C         ; Load 70C into I
$B04    $A830   LD       I, $830         ; Load 830 into I
$B06    $AD09   LD       I, $D09         ; Load D09 into I
$B08    $A011   LD       I, $011         ; Load 011 into I
$B0A    $70EB   ADD      V0, #EB         ; Add 235 to V0
$B0C    $AB7C   LD       I, $B7C         ; Load B7C into I
$B0E    $EE34   UNKNOWN  $EE34           ; Unknown Exxx instruction
$B10    $ABA6   LD       I, $BA6         ; Load BA6 into I
$B12    $8D8F   UNKNOWN  8D8F            ; Unknown 8xxx instruction
$B14    $4F35   SNE      VF, #35         ; Skip if VF != 53
$B16    $FBB9   UNKNOWN  FBB9            ; Unknown Fxxx instruction
$B18    $4ED5   SNE      VE, #D5         ; Skip if VE != 213
$B1A    $8EAE   SHL      VE              ; VE <<= 1, VF = MSB
$B1C    $36BB   SE       V6, #BB         ; Skip if V6 == 187
$B1E    $3EFF   SE       VE, #FF         ; Skip if VE == 255
$B20    $8C9A   UNKNOWN  8C9A            ; Unknown 8xxx instruction
$B22    $32E1   SE       V2, #E1         ; Skip if V2 == 225
$B24    $5F21   UNKNOWN  $5F21           ; Unknown 5xxx instruction
$B26    $AC88   LD       I, $C88         ; Load C88 into I
$B28    $2ABA   CALL     $ABA            ; Call subroutine at ABA
$B2A    $D12B   DRW      V1, V2, #B      ; Draw 11-byte sprite at V1, V2
$B2C    $4A6E   SNE      VA, #6E         ; Skip if VA != 110
$B2E    $A087   LD       I, $087         ; Load 087 into I
$B30    $C174   RND      V1, #74         ; V1 = random & 74
$B32    $BAF4   JP       V0, $AF4        ; Jump to V0 + AF4
$B34    $116A   JP       $16A            ; Jump to 16A
$B36    $DA32   DRW      VA, V3, #2      ; Draw 2-byte sprite at VA, V3
$B38    $C8CD   RND      V8, #CD         ; V8 = random & CD
$B3A    $895D   UNKNOWN  895D            ; Unknown 8xxx instruction
$B3C    $C4FF   RND      V4, #FF         ; V4 = random & FF
$B3E    $87E3   XOR      V7, VE          ; V7 ^= VE
$B40    $93B7   UNKNOWN  $93B7           ; Unknown 9xxx instruction
$B42    $BF13   JP       V0, $F13        ; Jump to V0 + F13
$B44    $8389   UNKNOWN  8389            ; Unknown 8xxx instruction
$B46    $09E2   SYS      $9E2            ; System call to 9E2
$B48    $0ABA   SYS      $ABA            ; System call to ABA
$B4A    $DE20   DRW      VE, V2, #0      ; Draw 0-byte sprite at VE, V2
$B4C    $115F   JP       $15F            ; Jump to 15F
$B4E    $6DFA   LD       VD, #FA         ; Load 250 into VD
$B50    $456D   SNE      V5, #6D         ; Skip if V5 != 109
$B52    $B62C   JP       V0, $62C        ; Jump to V0 + 62C
$B54    $46BD   SNE      V6, #BD         ; Skip if V6 != 189
$B56    $E628   UNKNOWN  $E628           ; Unknown Exxx instruction
$B58    $64E9   LD       V4, #E9         ; Load 233 into V4
$B5A    $AF09   LD       I, $F09         ; Load F09 into I
$B5C    $A591   LD       I, $591         ; Load 591 into I
$B5E    $7D98   ADD      VD, #98         ; Add 152 to VD
$B60    $FC6C   UNKNOWN  FC6C            ; Unknown Fxxx instruction
$B62    $3F6D   SE       VF, #6D         ; Skip if VF == 109
$B64    $4006   SNE      V0, #06         ; Skip if V0 != 6
$B66    $F097   UNKNOWN  F097            ; Unknown Fxxx instruction
$B68    $327F   SE       V2, #7F         ; Skip if V2 == 127
$B6A    $FE31   UNKNOWN  FE31            ; Unknown Fxxx instruction
$B6C    $A210   LD       I, $210         ; Load 210 into I
$B6E    $04A0   SYS      $4A0            ; System call to 4A0
$B70    $4C74   SNE      VC, #74         ; Skip if VC != 116
$B72    $1E27   JP       $E27            ; Jump to E27
$B74    $05B6   SYS      $5B6            ; System call to 5B6
$B76    $0971   SYS      $971            ; System call to 971
$B78    $4E36   SNE      VE, #36         ; Skip if VE != 54
$B7A    $18BD   JP       $8BD            ; Jump to 8BD
$B7C    $169F   JP       $69F            ; Jump to 69F
$B7E    $45CD   SNE      V5, #CD         ; Skip if V5 != 205
$B80    $0F76   SYS      $F76            ; System call to F76
$B82    $6207   LD       V2, #07         ; Load 7 into V2
$B84    $3665   SE       V6, #65         ; Skip if V6 == 101
$B86    $1BA4   JP       $BA4            ; Jump to BA4
$B88    $C651   RND      V6, #51         ; V6 = random & 51
$B8A    $D77D   DRW      V7, V7, #D      ; Draw 13-byte sprite at V7, V7
$B8C    $59AE   UNKNOWN  $59AE           ; Unknown 5xxx instruction
$B8E    $E1D6   UNKNOWN  $E1D6           ; Unknown Exxx instruction
$B90    $0E46   SYS      $E46            ; System call to E46
$B92    $B743   JP       V0, $743        ; Jump to V0 + 743
$B94    $B46F   JP       V0, $46F        ; Jump to V0 + 46F
$B96    $9F3A   UNKNOWN  $9F3A           ; Unknown 9xxx instruction
$B98    $54C4   UNKNOWN  $54C4           ; Unknown 5xxx instruction
$B9A    $093B   SYS      $93B            ; System call to 93B
$B9C    $9F27   UNKNOWN  $9F27           ; Unknown 9xxx instruction
$B9E    $EE58   UNKNOWN  $EE58           ; Unknown Exxx instruction
$BA0    $2DDA   CALL     $DDA            ; Call subroutine at DDA
$BA2    $D5D5   DRW      V5, VD, #5      ; Draw 5-byte sprite at V5, VD
$BA4    $B4FF   JP       V0, $4FF        ; Jump to V0 + 4FF
$BA6    $01EA   SYS      $1EA            ; System call to 1EA
$BA8    $52A8   UNKNOWN  $52A8           ; Unknown 5xxx instruction
$BAA    $5F4E   UNKNOWN  $5F4E           ; Unknown 5xxx instruction
$BAC    $02EF   SYS      $2EF            ; System call to 2EF
$BAE    $6646   LD       V6, #46         ; Load 70 into V6
$BB0    $0381   SYS      $381            ; System call to 381
$BB2    $AB42   LD       I, $B42         ; Load B42 into I
$BB4    $7E57   ADD      VE, #57         ; Add 87 to VE
$BB6    $A56A   LD       I, $56A         ; Load 56A into I
$BB8    $F7C8   UNKNOWN  F7C8            ; Unknown Fxxx instruction
$BBA    $3659   SE       V6, #59         ; Skip if V6 == 89
$BBC    $4A77   SNE      VA, #77         ; Skip if VA != 119
$BBE    $E36F   UNKNOWN  $E36F           ; Unknown Exxx instruction
$BC0    $C32E   RND      V3, #2E         ; V3 = random & 2E
$BC2    $82EF   UNKNOWN  82EF            ; Unknown 8xxx instruction
$BC4    $45B5   SNE      V5, #B5         ; Skip if V5 != 181
$BC6    $09C3   SYS      $9C3            ; System call to 9C3
$BC8    $160A   JP       $60A            ; Jump to 60A
$BCA    $EB5A   UNKNOWN  $EB5A           ; Unknown Exxx instruction
$BCC    $605D   LD       V0, #5D         ; Load 93 into V0
$BCE    $2532   CALL     $532            ; Call subroutine at 532
$BD0    $F056   UNKNOWN  F056            ; Unknown Fxxx instruction
$BD2    $DA78   DRW      VA, V7, #8      ; Draw 8-byte sprite at VA, V7
$BD4    $0279   SYS      $279            ; System call to 279
$BD6    $BF05   JP       V0, $F05        ; Jump to V0 + F05
$BD8    $CD5F   RND      VD, #5F         ; VD = random & 5F
$BDA    $967C   UNKNOWN  $967C           ; Unknown 9xxx instruction
$BDC    $884E   SHL      V8              ; V8 <<= 1, VF = MSB
$BDE    $A622   LD       I, $622         ; Load 622 into I
$BE0    $32E5   SE       V2, #E5         ; Skip if V2 == 229
$BE2    $8D03   XOR      VD, V0          ; VD ^= V0
$BE4    $0C87   SYS      $C87            ; System call to C87
$BE6    $152F   JP       $52F            ; Jump to 52F
$BE8    $08FE   SYS      $8FE            ; System call to 8FE
$BEA    $02D9   SYS      $2D9            ; System call to 2D9
$BEC    $DFAA   DRW      VF, VA, #A      ; Draw 10-byte sprite at VF, VA
$BEE    $FCA9   UNKNOWN  FCA9            ; Unknown Fxxx instruction
$BF0    $151E   JP       $51E            ; Jump to 51E
$BF2    $EFF9   UNKNOWN  $EFF9           ; Unknown Exxx instruction
$BF4    $A064   LD       I, $064         ; Load 064 into I
$BF6    $F16D   UNKNOWN  F16D            ; Unknown Fxxx instruction
$BF8    $D466   DRW      V4, V6, #6      ; Draw 6-byte sprite at V4, V6
$BFA    $36FA   SE       V6, #FA         ; Skip if V6 == 250
$BFC    $29A6   CALL     $9A6            ; Call subroutine at 9A6
$BFE    $2362   CALL     $362            ; Call subroutine at 362
$C00    $7FD3   ADD      VF, #D3         ; Add 211 to VF
$C02    $1CAD   JP       $CAD            ; Jump to CAD
$C04    $AF39   LD       I, $F39         ; Load F39 into I
$C06    $CC70   RND      VC, #70         ; VC = random & 70
$C08    $95C5   UNKNOWN  $95C5           ; Unknown 9xxx instruction
$C0A    $C371   RND      V3, #71         ; V3 = random & 71
$C0C    $E19B   UNKNOWN  $E19B           ; Unknown Exxx instruction
$C0E    $73F4   ADD      V3, #F4         ; Add 244 to V3
$C10    $F5A6   UNKNOWN  F5A6            ; Unknown Fxxx instruction
$C12    $451F   SNE      V5, #1F         ; Skip if V5 != 31
$C14    $E90F   UNKNOWN  $E90F           ; Unknown Exxx instruction
$C16    $05CB   SYS      $5CB            ; System call to 5CB
$C18    $3B29   SE       VB, #29         ; Skip if VB == 41
$C1A    $D3BB   DRW      V3, VB, #B      ; Draw 11-byte sprite at V3, VB
$C1C    $516D   UNKNOWN  $516D           ; Unknown 5xxx instruction
$C1E    $85E4   ADD      V5, VE          ; V5 += VE, VF = carry
$C20    $F88D   UNKNOWN  F88D            ; Unknown Fxxx instruction
$C22    $A285   LD       I, $285         ; Load 285 into I
$C24    $6736   LD       V7, #36         ; Load 54 into V7
$C26    $E7D7   UNKNOWN  $E7D7           ; Unknown Exxx instruction
$C28    $C247   RND      V2, #47         ; V2 = random & 47
$C2A    $74FD   ADD      V4, #FD         ; Add 253 to V4
$C2C    $F386   UNKNOWN  F386            ; Unknown Fxxx instruction
$C2E    $4983   SNE      V9, #83         ; Skip if V9 != 131
$C30    $4E62   SNE      VE, #62         ; Skip if VE != 98
$C32    $57A2   UNKNOWN  $57A2           ; Unknown 5xxx instruction
$C34    $5366   UNKNOWN  $5366           ; Unknown 5xxx instruction
$C36    $E200   UNKNOWN  $E200           ; Unknown Exxx instruction
$C38    $8190   LD       V1, V9          ; V1 = V9
$C3A    $4B8B   SNE      VB, #8B         ; Skip if VB != 139
$C3C    $9008   UNKNOWN  $9008           ; Unknown 9xxx instruction
$C3E    $E33B   UNKNOWN  $E33B           ; Unknown Exxx instruction
$C40    $4289   SNE      V2, #89         ; Skip if V2 != 137
$C42    $E804   UNKNOWN  $E804           ; Unknown Exxx instruction
$C44    $F241   UNKNOWN  F241            ; Unknown Fxxx instruction
$C46    $0EE9   SYS      $EE9            ; System call to EE9
$C48    $7598   ADD      V5, #98         ; Add 152 to V5
$C4A    $1AD8   JP       $AD8            ; Jump to AD8
$C4C    $DE37   DRW      VE, V3, #7      ; Draw 7-byte sprite at VE, V3
$C4E    $A709   LD       I, $709         ; Load 709 into I
$C50    $67C6   LD       V7, #C6         ; Load 198 into V7
$C52    $E383   UNKNOWN  $E383           ; Unknown Exxx instruction
$C54    $EC0E   UNKNOWN  $EC0E           ; Unknown Exxx instruction
$C56    $E5DD   UNKNOWN  $E5DD           ; Unknown Exxx instruction
$C58    $7F86   ADD      VF, #86         ; Add 134 to VF
$C5A    $36B3   SE       V6, #B3         ; Skip if V6 == 179
$C5C    $D629   DRW      V6, V2, #9      ; Draw 9-byte sprite at V6, V2
$C5E    $9896   UNKNOWN  $9896           ; Unknown 9xxx instruction
$C60    $091C   SYS      $91C            ; System call to 91C
$C62    $75F5   ADD      V5, #F5         ; Add 245 to V5
$C64    $9B74   UNKNOWN  $9B74           ; Unknown 9xxx instruction
$C66    $C3A1   RND      V3, #A1         ; V3 = random & A1
$C68    $D36B   DRW      V3, V6, #B      ; Draw 11-byte sprite at V3, V6
$C6A    $063D   SYS      $63D            ; System call to 63D
$C6C    $746E   ADD      V4, #6E         ; Add 110 to V4
$C6E    $F3CC   UNKNOWN  F3CC            ; Unknown Fxxx instruction
$C70    $7ED7   ADD      VE, #D7         ; Add 215 to VE
$C72    $3EFD   SE       VE, #FD         ; Skip if VE == 253
$C74    $3406   SE       V4, #06         ; Skip if V4 == 6
$C76    $15A2   JP       $5A2            ; Jump to 5A2
$C78    $B571   JP       V0, $571        ; Jump to V0 + 571
$C7A    $F9E0   UNKNOWN  F9E0            ; Unknown Fxxx instruction
$C7C    $C3F7   RND      V3, #F7         ; V3 = random & F7
$C7E    $E8EE   UNKNOWN  $E8EE           ; Unknown Exxx instruction
$C80    $6ACE   LD       VA, #CE         ; Load 206 into VA
$C82    $599B   UNKNOWN  $599B           ; Unknown 5xxx instruction
$C84    $75E7   ADD      V5, #E7         ; Add 231 to V5
$C86    $31B0   SE       V1, #B0         ; Skip if V1 == 176
$C88    $ACCB   LD       I, $CCB         ; Load CCB into I
$C8A    $4A7F   SNE      VA, #7F         ; Skip if VA != 127
$C8C    $FFA5   UNKNOWN  FFA5            ; Unknown Fxxx instruction
$C8E    $55C5   UNKNOWN  $55C5           ; Unknown 5xxx instruction
$C90    $F7A7   UNKNOWN  F7A7            ; Unknown Fxxx instruction
$C92    $B6A6   JP       V0, $6A6        ; Jump to V0 + 6A6
$C94    $55AF   UNKNOWN  $55AF           ; Unknown 5xxx instruction
$C96    $1715   JP       $715            ; Jump to 715
$C98    $F65B   UNKNOWN  F65B            ; Unknown Fxxx instruction
$C9A    $4D96   SNE      VD, #96         ; Skip if VD != 150
$C9C    $C7DA   RND      V7, #DA         ; V7 = random & DA
$C9E    $8AE6   SHR      VA              ; VA >>= 1, VF = LSB
$CA0    $3545   SE       V5, #45         ; Skip if V5 == 69
$CA2    $0796   SYS      $796            ; System call to 796
$CA4    $6B58   LD       VB, #58         ; Load 88 into VB
$CA6    $2A5E   CALL     $A5E            ; Call subroutine at A5E
$CA8    $193B   JP       $93B            ; Jump to 93B
$CAA    $3448   SE       V4, #48         ; Skip if V4 == 72
$CAC    $C04E   RND      V0, #4E         ; V0 = random & 4E
$CAE    $D2E0   DRW      V2, VE, #0      ; Draw 0-byte sprite at V2, VE
$CB0    $5166   UNKNOWN  $5166           ; Unknown 5xxx instruction
$CB2    $41FE   SNE      V1, #FE         ; Skip if V1 != 254
$CB4    $9EAE   UNKNOWN  $9EAE           ; Unknown 9xxx instruction
$CB6    $B417   JP       V0, $417        ; Jump to V0 + 417
$CB8    $4AC8   SNE      VA, #C8         ; Skip if VA != 200
$CBA    $3B13   SE       VB, #13         ; Skip if VB == 19
$CBC    $1E19   JP       $E19            ; Jump to E19
$CBE    $2898   CALL     $898            ; Call subroutine at 898
$CC0    $8355   SUB      V3, V5          ; V3 -= V5, VF = !borrow
$CC2    $4362   SNE      V3, #62         ; Skip if V3 != 98
$CC4    $E53D   UNKNOWN  $E53D           ; Unknown Exxx instruction
$CC6    $B8EF   JP       V0, $8EF        ; Jump to V0 + 8EF
$CC8    $4EDA   SNE      VE, #DA         ; Skip if VE != 218
$CCA    $AA2F   LD       I, $A2F         ; Load A2F into I
$CCC    $6C25   LD       VC, #25         ; Load 37 into VC
$CCE    $AD57   LD       I, $D57         ; Load D57 into I
$CD0    $9BF4   UNKNOWN  $9BF4           ; Unknown 9xxx instruction
$CD2    $FC12   UNKNOWN  FC12            ; Unknown Fxxx instruction
$CD4    $B246   JP       V0, $246        ; Jump to V0 + 246
$CD6    $72E6   ADD      V2, #E6         ; Add 230 to V2
$CD8    $F685   UNKNOWN  F685            ; Unknown Fxxx instruction
$CDA    $CB82   RND      VB, #82         ; VB = random & 82
$CDC    $5890   SE       V8, V9          ; Skip if V8 == V9
$CDE    $0F18   SYS      $F18            ; System call to F18
$CE0    $BD82   JP       V0, $D82        ; Jump to V0 + D82
$CE2    $6005   LD       V0, #05         ; Load 5 into V0
$CE4    $8D31   OR       VD, V3          ; VD |= V3
$CE6    $202C   CALL     $02C            ; Call subroutine at 02C
$CE8    $E018   UNKNOWN  $E018           ; Unknown Exxx instruction
$CEA    $BF86   JP       V0, $F86        ; Jump to V0 + F86
$CEC    $AB7D   LD       I, $B7D         ; Load B7D into I
$CEE    $0CF6   SYS      $CF6            ; System call to CF6
$CF0    $6D42   LD       VD, #42         ; Load 66 into VD
$CF2    $0B0F   SYS      $B0F            ; System call to B0F
$CF4    $1991   JP       $991            ; Jump to 991
$CF6    $C161   RND      V1, #61         ; V1 = random & 61
$CF8    $C330   RND      V3, #30         ; V3 = random & 30
$CFA    $57F4   UNKNOWN  $57F4           ; Unknown 5xxx instruction
$CFC    $84DD   UNKNOWN  84DD            ; Unknown 8xxx instruction
$CFE    $B983   JP       V0, $983        ; Jump to V0 + 983
$D00    $84EE   SHL      V4              ; V4 <<= 1, VF = MSB
$D02    $351F   SE       V5, #1F         ; Skip if V5 == 31
$D04    $0ACF   SYS      $ACF            ; System call to ACF
$D06    $3D94   SE       VD, #94         ; Skip if VD == 148
$D08    $4A0E   SNE      VA, #0E         ; Skip if VA != 14
$D0A    $7628   ADD      V6, #28         ; Add 40 to V6
$D0C    $9438   UNKNOWN  $9438           ; Unknown 9xxx instruction
$D0E    $1BF4   JP       $BF4            ; Jump to BF4
$D10    $F7F8   UNKNOWN  F7F8            ; Unknown Fxxx instruction
$D12    $7A12   ADD      VA, #12         ; Add 18 to VA
$D14    $F67F   UNKNOWN  F67F            ; Unknown Fxxx instruction
$D16    $7DB0   ADD      VD, #B0         ; Add 176 to VD
$D18    $B1C5   JP       V0, $1C5        ; Jump to V0 + 1C5
$D1A    $4867   SNE      V8, #67         ; Skip if V8 != 103
$D1C    $5D9D   UNKNOWN  $5D9D           ; Unknown 5xxx instruction
$D1E    $E754   UNKNOWN  $E754           ; Unknown Exxx instruction
$D20    $426C   SNE      V2, #6C         ; Skip if V2 != 108
$D22    $1D5B   JP       $D5B            ; Jump to D5B
$D24    $95F6   UNKNOWN  $95F6           ; Unknown 9xxx instruction
$D26    $CFAE   RND      VF, #AE         ; VF = random & AE
$D28    $EDEC   UNKNOWN  $EDEC           ; Unknown Exxx instruction
$D2A    $A23F   LD       I, $23F         ; Load 23F into I
$D2C    $E49E   SKP      V4              ; Skip if key V4 pressed
$D2E    $3024   SE       V0, #24         ; Skip if V0 == 36
$D30    $6970   LD       V9, #70         ; Load 112 into V9
$D32    $6AF3   LD       VA, #F3         ; Load 243 into VA
$D34    $13D7   JP       $3D7            ; Jump to 3D7
$D36    $CFC0   RND      VF, #C0         ; VF = random & C0
$D38    $B16D   JP       V0, $16D        ; Jump to V0 + 16D
$D3A    $C289   RND      V2, #89         ; V2 = random & 89
$D3C    $E247   UNKNOWN  $E247           ; Unknown Exxx instruction
$D3E    $1A03   JP       $A03            ; Jump to A03
$D40    $2BDD   CALL     $BDD            ; Call subroutine at BDD
$D42    $F107   LD       V1, DT          ; V1 = delay timer
$D44    $7101   ADD      V1, #01         ; Add 1 to V1
$D46    $4E44   SNE      VE, #44         ; Skip if VE != 68
$D48    $A3A5   LD       I, $3A5         ; Load 3A5 into I
$D4A    $7086   ADD      V0, #86         ; Add 134 to V0
$D4C    $3EB2   SE       VE, #B2         ; Skip if VE == 178
$D4E    $1766   JP       $766            ; Jump to 766
$D50    $9FCE   UNKNOWN  $9FCE           ; Unknown 9xxx instruction
$D52    $195C   JP       $95C            ; Jump to 95C
$D54    $ACEE   LD       I, $CEE         ; Load CEE into I
$D56    $E3AB   UNKNOWN  $E3AB           ; Unknown Exxx instruction
$D58    $3595   SE       V5, #95         ; Skip if V5 == 149
$D5A    $F083   UNKNOWN  F083            ; Unknown Fxxx instruction
$D5C    $BDF5   JP       V0, $DF5        ; Jump to V0 + DF5
$D5E    $9EBB   UNKNOWN  $9EBB           ; Unknown 9xxx instruction
$D60    $34E6   SE       V4, #E6         ; Skip if V4 == 230
$D62    $4192   SNE      V1, #92         ; Skip if V1 != 146
$D64    $303A   SE       V0, #3A         ; Skip if V0 == 58
$D66    $BA37   JP       V0, $A37        ; Jump to V0 + A37
$D68    $B99F   JP       V0, $99F        ; Jump to V0 + 99F
$D6A    $CE79   RND      VE, #79         ; VE = random & 79
$D6C    $0FFD   SYS      $FFD            ; System call to FFD
$D6E    $B4FC   JP       V0, $4FC        ; Jump to V0 + 4FC
$D70    $8F22   AND      VF, V2          ; VF &= V2
$D72    $B081   JP       V0, $081        ; Jump to V0 + 081
$D74    $6B0E   LD       VB, #0E         ; Load 14 into VB
$D76    $A4A0   LD       I, $4A0         ; Load 4A0 into I
$D78    $D6B7   DRW      V6, VB, #7      ; Draw 7-byte sprite at V6, VB
$D7A    $BF8F   JP       V0, $F8F        ; Jump to V0 + F8F
$D7C    $FC46   UNKNOWN  FC46            ; Unknown Fxxx instruction
$D7E    $20F1   CALL     $0F1            ; Call subroutine at 0F1
$D80    $D851   DRW      V8, V5, #1      ; Draw 1-byte sprite at V8, V5
$D82    $C6A2   RND      V6, #A2         ; V6 = random & A2
$D84    $8E99   UNKNOWN  8E99            ; Unknown 8xxx instruction
$D86    $1240   JP       $240            ; Jump to 240
$D88    $94A9   UNKNOWN  $94A9           ; Unknown 9xxx instruction
$D8A    $87FA   UNKNOWN  87FA            ; Unknown 8xxx instruction
$D8C    $D5A9   DRW      V5, VA, #9      ; Draw 9-byte sprite at V5, VA
$D8E    $3493   SE       V4, #93         ; Skip if V4 == 147
$D90    $1D1A   JP       $D1A            ; Jump to D1A
$D92    $53E4   UNKNOWN  $53E4           ; Unknown 5xxx instruction
$D94    $BDDA   JP       V0, $DDA        ; Jump to V0 + DDA
$D96    $2C9D   CALL     $C9D            ; Call subroutine at C9D
$D98    $90BC   UNKNOWN  $90BC           ; Unknown 9xxx instruction
$D9A    $803F   UNKNOWN  803F            ; Unknown 8xxx instruction
$D9C    $F22D   UNKNOWN  F22D            ; Unknown Fxxx instruction
$D9E    $F6F9   UNKNOWN  F6F9            ; Unknown Fxxx instruction
$DA0    $A24E   LD       I, $24E         ; Load 24E into I
$DA2    $006B   SYS      $06B            ; System call to 06B
$DA4    $A15D   LD       I, $15D         ; Load 15D into I
$DA6    $C965   RND      V9, #65         ; V9 = random & 65
$DA8    $B913   JP       V0, $913        ; Jump to V0 + 913
$DAA    $E2C8   UNKNOWN  $E2C8           ; Unknown Exxx instruction
$DAC    $A02C   LD       I, $02C         ; Load 02C into I
$DAE    $14EB   JP       $4EB            ; Jump to 4EB
$DB0    $3DE2   SE       VD, #E2         ; Skip if VD == 226
$DB2    $0087   SYS      $087            ; System call to 087
$DB4    $5E8C   UNKNOWN  $5E8C           ; Unknown 5xxx instruction
$DB6    $C307   RND      V3, #07         ; V3 = random & 07
$DB8    $75C4   ADD      V5, #C4         ; Add 196 to V5
$DBA    $8478   UNKNOWN  8478            ; Unknown 8xxx instruction
$DBC    $D74A   DRW      V7, V4, #A      ; Draw 10-byte sprite at V7, V4
$DBE    $0C01   SYS      $C01            ; System call to C01
$DC0    $029E   SYS      $29E            ; System call to 29E
$DC2    $5A09   UNKNOWN  $5A09           ; Unknown 5xxx instruction
$DC4    $D379   DRW      V3, V7, #9      ; Draw 9-byte sprite at V3, V7
$DC6    $3B54   SE       VB, #54         ; Skip if VB == 84
$DC8    $CADE   RND      VA, #DE         ; VA = random & DE
$DCA    $33B2   SE       V3, #B2         ; Skip if V3 == 178
$DCC    $7E5F   ADD      VE, #5F         ; Add 95 to VE
$DCE    $4BB7   SNE      VB, #B7         ; Skip if VB != 183
$DD0    $364F   SE       V6, #4F         ; Skip if V6 == 79
$DD2    $E565   UNKNOWN  $E565           ; Unknown Exxx instruction
$DD4    $97F9   UNKNOWN  $97F9           ; Unknown 9xxx instruction
$DD6    $C07C   RND      V0, #7C         ; V0 = random & 7C
$DD8    $081F   SYS      $81F            ; System call to 81F
$DDA    $80B3   XOR      V0, VB          ; V0 ^= VB
$DDC    $5F4E   UNKNOWN  $5F4E           ; Unknown 5xxx instruction
$DDE    $1566   JP       $566            ; Jump to 566
$DE0    $4B4E   SNE      VB, #4E         ; Skip if VB != 78
$DE2    $A256   LD       I, $256         ; Load 256 into I
$DE4    $1669   JP       $669            ; Jump to 669
$DE6    $EB2F   UNKNOWN  $EB2F           ; Unknown Exxx instruction
$DE8    $339C   SE       V3, #9C         ; Skip if V3 == 156
$DEA    $FB97   UNKNOWN  FB97            ; Unknown Fxxx instruction
$DEC    $0469   SYS      $469            ; System call to 469
$DEE    $1754   JP       $754            ; Jump to 754
$DF0    $548D   UNKNOWN  $548D           ; Unknown 5xxx instruction
$DF2    $63D6   LD       V3, #D6         ; Load 214 into V3
$DF4    $66BA   LD       V6, #BA         ; Load 186 into V6
$DF6    $B380   JP       V0, $380        ; Jump to V0 + 380
$DF8    $4466   SNE      V4, #66         ; Skip if V4 != 102
$DFA    $486F   SNE      V8, #6F         ; Skip if V8 != 111
$DFC    $803A   UNKNOWN  803A            ; Unknown 8xxx instruction
$DFE    $695A   LD       V9, #5A         ; Load 90 into V9
$E00    $70E5   ADD      V0, #E5         ; Add 229 to V0
$E02    $DD49   DRW      VD, V4, #9      ; Draw 9-byte sprite at VD, V4
$E04    $BAD8   JP       V0, $AD8        ; Jump to V0 + AD8
$E06    $0AF8   SYS      $AF8            ; System call to AF8
$E08    $F203   UNKNOWN  F203            ; Unknown Fxxx instruction
$E0A    $CA8A   RND      VA, #8A         ; VA = random & 8A
$E0C    $B188   JP       V0, $188        ; Jump to V0 + 188
$E0E    $D993   DRW      V9, V9, #3      ; Draw 3-byte sprite at V9, V9
$E10    $0FF3   SYS      $FF3            ; System call to FF3
$E12    $1A58   JP       $A58            ; Jump to A58
$E14    $1FB0   JP       $FB0            ; Jump to FB0
$E16    $E64E   UNKNOWN  $E64E           ; Unknown Exxx instruction
$E18    $30DB   SE       V0, #DB         ; Skip if V0 == 219
$E1A    $740D   ADD      V4, #0D         ; Add 13 to V4
$E1C    $7717   ADD      V7, #17         ; Add 23 to V7
$E1E    $F6BB   UNKNOWN  F6BB            ; Unknown Fxxx instruction
$E20    $E5A1   SKNP     V5              ; Skip if key V5 not pressed
$E22    $EF96   UNKNOWN  $EF96           ; Unknown Exxx instruction
$E24    $A774   LD       I, $774         ; Load 774 into I
$E26    $E068   UNKNOWN  $E068           ; Unknown Exxx instruction
$E28    $730C   ADD      V3, #0C         ; Add 12 to V3
$E2A    $3BDF   SE       VB, #DF         ; Skip if VB == 223
$E2C    $C1DF   RND      V1, #DF         ; V1 = random & DF
$E2E    $7412   ADD      V4, #12         ; Add 18 to V4
$E30    $9525   UNKNOWN  $9525           ; Unknown 9xxx instruction
$E32    $0412   SYS      $412            ; System call to 412
$E34    $6438   LD       V4, #38         ; Load 56 into V4
$E36    $2FC9   CALL     $FC9            ; Call subroutine at FC9
$E38    $8635   SUB      V6, V3          ; V6 -= V3, VF = !borrow
$E3A    $E837   UNKNOWN  $E837           ; Unknown Exxx instruction
$E3C    $6B42   LD       VB, #42         ; Load 66 into VB
$E3E    $CE5F   RND      VE, #5F         ; VE = random & 5F
$E40    $9F9D   UNKNOWN  $9F9D           ; Unknown 9xxx instruction
$E42    $A328   LD       I, $328         ; Load 328 into I
$E44    $0982   SYS      $982            ; System call to 982
$E46    $3F07   SE       VF, #07         ; Skip if VF == 7
$E48    $70F1   ADD      V0, #F1         ; Add 241 to V0
$E4A    $47E1   SNE      V7, #E1         ; Skip if V7 != 225
$E4C    $20A3   CALL     $0A3            ; Call subroutine at 0A3
$E4E    $BCAE   JP       V0, $CAE        ; Jump to V0 + CAE
$E50    $F97D   UNKNOWN  F97D            ; Unknown Fxxx instruction
$E52    $6B3B   LD       VB, #3B         ; Load 59 into VB
$E54    $CE3B   RND      VE, #3B         ; VE = random & 3B
$E56    $5A26   UNKNOWN  $5A26           ; Unknown 5xxx instruction
$E58    $AA55   LD       I, $A55         ; Load A55 into I
$E5A    $C8DA   RND      V8, #DA         ; V8 = random & DA
$E5C    $B449   JP       V0, $449        ; Jump to V0 + 449
$E5E    $95FF   UNKNOWN  $95FF           ; Unknown 9xxx instruction
$E60    $8C6F   UNKNOWN  8C6F            ; Unknown 8xxx instruction
$E62    $ECF0   UNKNOWN  $ECF0           ; Unknown Exxx instruction
$E64    $28DE   CALL     $8DE            ; Call subroutine at 8DE
$E66    $21F7   CALL     $1F7            ; Call subroutine at 1F7
$E68    $6AC4   LD       VA, #C4         ; Load 196 into VA
$E6A    $0E9E   SYS      $E9E            ; System call to E9E
$E6C    $3AF7   SE       VA, #F7         ; Skip if VA == 247
$E6E    $AC2C   LD       I, $C2C         ; Load C2C into I
$E70    $8E9F   UNKNOWN  8E9F            ; Unknown 8xxx instruction
$E72    $1E9C   JP       $E9C            ; Jump to E9C
$E74    $AD50   LD       I, $D50         ; Load D50 into I
$E76    $7210   ADD      V2, #10         ; Add 16 to V2
$E78    $BD9C   JP       V0, $D9C        ; Jump to V0 + D9C
$E7A    $97FD   UNKNOWN  $97FD           ; Unknown 9xxx instruction
$E7C    $3339   SE       V3, #39         ; Skip if V3 == 57
$E7E    $C9A4   RND      V9, #A4         ; V9 = random & A4
$E80    $31C3   SE       V1, #C3         ; Skip if V1 == 195
$E82    $3810   SE       V8, #10         ; Skip if V8 == 16
$E84    $7769   ADD      V7, #69         ; Add 105 to V7
$E86    $9DE0   SNE      VD, VE          ; Skip if VD != VE
$E88    $D076   DRW      V0, V7, #6      ; Draw 6-byte sprite at V0, V7
$E8A    $B0DC   JP       V0, $0DC        ; Jump to V0 + 0DC
$E8C    $F640   UNKNOWN  F640            ; Unknown Fxxx instruction
$E8E    $5A9C   UNKNOWN  $5A9C           ; Unknown 5xxx instruction
$E90    $6365   LD       V3, #65         ; Load 101 into V3
$E92    $919C   UNKNOWN  $919C           ; Unknown 9xxx instruction
$E94    $A0E3   LD       I, $0E3         ; Load 0E3 into I
$E96    $2D58   CALL     $D58            ; Call subroutine at D58
$E98    $59F3   UNKNOWN  $59F3           ; Unknown 5xxx instruction
$E9A    $811D   UNKNOWN  811D            ; Unknown 8xxx instruction
$E9C    $BA9A   JP       V0, $A9A        ; Jump to V0 + A9A
$E9E    $80DA   UNKNOWN  80DA            ; Unknown 8xxx instruction
$EA0    $784D   ADD      V8, #4D         ; Add 77 to V8
$EA2    $76BA   ADD      V6, #BA         ; Add 186 to V6
$EA4    $6A5A   LD       VA, #5A         ; Load 90 into VA
$EA6    $1E0B   JP       $E0B            ; Jump to E0B
$EA8    $0309   SYS      $309            ; System call to 309
$EAA    $CBBC   RND      VB, #BC         ; VB = random & BC
$EAC    $2FCA   CALL     $FCA            ; Call subroutine at FCA
$EAE    $A3B3   LD       I, $3B3         ; Load 3B3 into I
$EB0    $4F49   SNE      VF, #49         ; Skip if VF != 73
$EB2    $EFBA   UNKNOWN  $EFBA           ; Unknown Exxx instruction
$EB4    $D358   DRW      V3, V5, #8      ; Draw 8-byte sprite at V3, V5
$EB6    $D772   DRW      V7, V7, #2      ; Draw 2-byte sprite at V7, V7
$EB8    $CA08   RND      VA, #08         ; VA = random & 08
$EBA    $2223   CALL     $223            ; Call subroutine at 223
$EBC    $C593   RND      V5, #93         ; V5 = random & 93
$EBE    $96CC   UNKNOWN  $96CC           ; Unknown 9xxx instruction
$EC0    $2C80   CALL     $C80            ; Call subroutine at C80
$EC2    $AB98   LD       I, $B98         ; Load B98 into I
$EC4    $C941   RND      V9, #41         ; V9 = random & 41
$EC6    $73C7   ADD      V3, #C7         ; Add 199 to V3
$EC8    $0149   SYS      $149            ; System call to 149
$ECA    $5FA1   UNKNOWN  $5FA1           ; Unknown 5xxx instruction
$ECC    $054D   SYS      $54D            ; System call to 54D
$ECE    $BB51   JP       V0, $B51        ; Jump to V0 + B51
$ED0    $E138   UNKNOWN  $E138           ; Unknown Exxx instruction
$ED2    $CC7F   RND      VC, #7F         ; VC = random & 7F
$ED4    $FD86   UNKNOWN  FD86            ; Unknown Fxxx instruction
$ED6    $6FB4   LD       VF, #B4         ; Load 180 into VF
$ED8    $59F2   UNKNOWN  $59F2           ; Unknown 5xxx instruction
$EDA    $8679   UNKNOWN  8679            ; Unknown 8xxx instruction
$EDC    $59FD   UNKNOWN  $59FD           ; Unknown 5xxx instruction
$EDE    $7307   ADD      V3, #07         ; Add 7 to V3
$EE0    $A84E   LD       I, $84E         ; Load 84E into I
$EE2    $7871   ADD      V8, #71         ; Add 113 to V8
$EE4    $7619   ADD      V6, #19         ; Add 25 to V6
$EE6    $C557   RND      V5, #57         ; V5 = random & 57
$EE8    $AB72   LD       I, $B72         ; Load B72 into I
$EEA    $BEDE   JP       V0, $EDE        ; Jump to V0 + EDE
$EEC    $2453   CALL     $453            ; Call subroutine at 453
$EEE    $BF34   JP       V0, $F34        ; Jump to V0 + F34
$EF0    $E307   UNKNOWN  $E307           ; Unknown Exxx instruction
$EF2    $7B36   ADD      VB, #36         ; Add 54 to VB
$EF4    $E472   UNKNOWN  $E472           ; Unknown Exxx instruction
$EF6    $B56B   JP       V0, $56B        ; Jump to V0 + 56B
$EF8    $4313   SNE      V3, #13         ; Skip if V3 != 19
$EFA    $D8E1   DRW      V8, VE, #1      ; Draw 1-byte sprite at V8, VE
$EFC    $FEFF   UNKNOWN  FEFF            ; Unknown Fxxx instruction
$EFE    $EB35   UNKNOWN  $EB35           ; Unknown Exxx instruction
$F00    $4F2F   SNE      VF, #2F         ; Skip if VF != 47
$F02    $8EFF   UNKNOWN  8EFF            ; Unknown 8xxx instruction
$F04    $27CA   CALL     $7CA            ; Call subroutine at 7CA
$F06    $C373   RND      V3, #73         ; V3 = random & 73
$F08    $BFC5   JP       V0, $FC5        ; Jump to V0 + FC5
$F0A    $94AF   UNKNOWN  $94AF           ; Unknown 9xxx instruction
$F0C    $2A24   CALL     $A24            ; Call subroutine at A24
$F0E    $7F52   ADD      VF, #52         ; Add 82 to VF
$F10    $35DF   SE       V5, #DF         ; Skip if V5 == 223
$F12    $2ED1   CALL     $ED1            ; Call subroutine at ED1
$F14    $A5E9   LD       I, $5E9         ; Load 5E9 into I
$F16    $D00E   DRW      V0, V0, #E      ; Draw 14-byte sprite at V0, V0
$F18    $7B8C   ADD      VB, #8C         ; Add 140 to VB
$F1A    $D2A8   DRW      V2, VA, #8      ; Draw 8-byte sprite at V2, VA
$F1C    $EF9D   UNKNOWN  $EF9D           ; Unknown Exxx instruction
$F1E    $52CA   UNKNOWN  $52CA           ; Unknown 5xxx instruction
$F20    $5D5D   UNKNOWN  $5D5D           ; Unknown 5xxx instruction
$F22    $12AB   JP       $2AB            ; Jump to 2AB
$F24    $6CBF   LD       VC, #BF         ; Load 191 into VC
$F26    $5A87   UNKNOWN  $5A87           ; Unknown 5xxx instruction
$F28    $E378   UNKNOWN  $E378           ; Unknown Exxx instruction
$F2A    $BE2B   JP       V0, $E2B        ; Jump to V0 + E2B
$F2C    $D485   DRW      V4, V8, #5      ; Draw 5-byte sprite at V4, V8
$F2E    $09FA   SYS      $9FA            ; System call to 9FA
$F30    $9B34   UNKNOWN  $9B34           ; Unknown 9xxx instruction
$F32    $1AD8   JP       $AD8            ; Jump to AD8
$F34    $A557   LD       I, $557         ; Load 557 into I
$F36    $0716   SYS      $716            ; System call to 716
$F38    $85E9   UNKNOWN  85E9            ; Unknown 8xxx instruction
$F3A    $21A8   CALL     $1A8            ; Call subroutine at 1A8
$F3C    $52F6   UNKNOWN  $52F6           ; Unknown 5xxx instruction
$F3E    $F367   UNKNOWN  F367            ; Unknown Fxxx instruction
$F40    $8626   SHR      V6              ; V6 >>= 1, VF = LSB
$F42    $335A   SE       V3, #5A         ; Skip if V3 == 90
$F44    $22BD   CALL     $2BD            ; Call subroutine at 2BD
$F46    $DDD2   DRW      VD, VD, #2      ; Draw 2-byte sprite at VD, VD
$F48    $0D37   SYS      $D37            ; System call to D37
$F4A    $3726   SE       V7, #26         ; Skip if V7 == 38
$F4C    $CB0E   RND      VB, #0E         ; VB = random & 0E
$F4E    $EF7F   UNKNOWN  $EF7F           ; Unknown Exxx instruction
$F50    $95C5   UNKNOWN  $95C5           ; Unknown 9xxx instruction
$F52    $C367   RND      V3, #67         ; V3 = random & 67
$F54    $D713   DRW      V7, V1, #3      ; Draw 3-byte sprite at V7, V1
$F56    $7BFA   ADD      VB, #FA         ; Add 250 to VB
$F58    $168B   JP       $68B            ; Jump to 68B
$F5A    $7DDA   ADD      VD, #DA         ; Add 218 to VD
$F5C    $9255   UNKNOWN  $9255           ; Unknown 9xxx instruction
$F5E    $B6E1   JP       V0, $6E1        ; Jump to V0 + 6E1
$F60    $0C47   SYS      $C47            ; System call to C47
$F62    $98FA   UNKNOWN  $98FA           ; Unknown 9xxx instruction
$F64    $660C   LD       V6, #0C         ; Load 12 into V6
$F66    $65F0   LD       V5, #F0         ; Load 240 into V5
$F68    $35C2   SE       V5, #C2         ; Skip if V5 == 194
$F6A    $0D2F   SYS      $D2F            ; System call to D2F
$F6C    $51BA   UNKNOWN  $51BA           ; Unknown 5xxx instruction
$F6E    $2D6B   CALL     $D6B            ; Call subroutine at D6B
$F70    $0403   SYS      $403            ; System call to 403
$F72    $49D9   SNE      V9, #D9         ; Skip if V9 != 217
$F74    $4BCA   SNE      VB, #CA         ; Skip if VB != 202
$F76    $B167   JP       V0, $167        ; Jump to V0 + 167
$F78    $EAC3   UNKNOWN  $EAC3           ; Unknown Exxx instruction
$F7A    $71A9   ADD      V1, #A9         ; Add 169 to V1
$F7C    $6FDD   LD       VF, #DD         ; Load 221 into VF
$F7E    $3BCD   SE       VB, #CD         ; Skip if VB == 205
$F80    $DB93   DRW      VB, V9, #3      ; Draw 3-byte sprite at VB, V9
$F82    $1E18   JP       $E18            ; Jump to E18
$F84    $4F68   SNE      VF, #68         ; Skip if VF != 104
$F86    $422B   SNE      V2, #2B         ; Skip if V2 != 43
$F88    $9EBC   UNKNOWN  $9EBC           ; Unknown 9xxx instruction
$F8A    $E9F9   UNKNOWN  $E9F9           ; Unknown Exxx instruction
$F8C    $2457   CALL     $457            ; Call subroutine at 457
$F8E    $02D2   SYS      $2D2            ; System call to 2D2
$F90    $6686   LD       V6, #86         ; Load 134 into V6
$F92    $D1CA   DRW      V1, VC, #A      ; Draw 10-byte sprite at V1, VC
$F94    $085C   SYS      $85C            ; System call to 85C
$F96    $D9B3   DRW      V9, VB, #3      ; Draw 3-byte sprite at V9, VB
$F98    $04DB   SYS      $4DB            ; System call to 4DB
$F9A    $955C   UNKNOWN  $955C           ; Unknown 9xxx instruction
$F9C    $C9A6   RND      V9, #A6         ; V9 = random & A6
$F9E    $C22A   RND      V2, #2A         ; V2 = random & 2A
$FA0    $75E1   ADD      V5, #E1         ; Add 225 to V5
$FA2    $37D4   SE       V7, #D4         ; Skip if V7 == 212
$FA4    $FD9A   UNKNOWN  FD9A            ; Unknown Fxxx instruction
$FA6    $4FF1   SNE      VF, #F1         ; Skip if VF != 241
$FA8    $7540   ADD      V5, #40         ; Add 64 to V5
$FAA    $C291   RND      V2, #91         ; V2 = random & 91
$FAC    $6093   LD       V0, #93         ; Load 147 into V0
$FAE    $65AF   LD       V5, #AF         ; Load 175 into V5
$FB0    $8A55   SUB      VA, V5          ; VA -= V5, VF = !borrow
$FB2    $1EDA   JP       $EDA            ; Jump to EDA
$FB4    $5754   UNKNOWN  $5754           ; Unknown 5xxx instruction
$FB6    $9DA5   UNKNOWN  $9DA5           ; Unknown 9xxx instruction
$FB8    $8663   XOR      V6, V6          ; V6 ^= V6
$FBA    $022E   SYS      $22E            ; System call to 22E
$FBC    $FB61   UNKNOWN  FB61            ; Unknown Fxxx instruction
$FBE    $F616   UNKNOWN  F616            ; Unknown Fxxx instruction
$FC0    $8D98   UNKNOWN  8D98            ; Unknown 8xxx instruction
$FC2    $69FA   LD       V9, #FA         ; Load 250 into V9
$FC4    $4732   SNE      V7, #32         ; Skip if V7 != 50
$FC6    $5446   UNKNOWN  $5446           ; Unknown 5xxx instruction
$FC8    $43F8   SNE      V3, #F8         ; Skip if V3 != 248
$FCA    $7198   ADD      V1, #98         ; Add 152 to V1
$FCC    $CD07   RND      VD, #07         ; VD = random & 07
$FCE    $5C0C   UNKNOWN  $5C0C           ; Unknown 5xxx instruction
$FD0    $71F7   ADD      V1, #F7         ; Add 247 to V1
$FD2    $B89A   JP       V0, $89A        ; Jump to V0 + 89A
$FD4    $B29F   JP       V0, $29F        ; Jump to V0 + 29F
$FD6    $E78F   UNKNOWN  $E78F           ; Unknown Exxx instruction
$FD8    $A878   LD       I, $878         ; Load 878 into I
$FDA    $D387   DRW      V3, V8, #7      ; Draw 7-byte sprite at V3, V8
$FDC    $E5F7   UNKNOWN  $E5F7           ; Unknown Exxx instruction
$FDE    $BF37   JP       V0, $F37        ; Jump to V0 + F37
$FE0    $2F41   CALL     $F41            ; Call subroutine at F41
$FE2    $6AAC   LD       VA, #AC         ; Load 172 into VA
$FE4    $4B7B   SNE      VB, #7B         ; Skip if VB != 123
$FE6    $F12A   UNKNOWN  F12A            ; Unknown Fxxx instruction
$FE8    $04B3   SYS      $4B3            ; System call to 4B3
$FEA    $6F99   LD       VF, #99         ; Load 153 into VF
$FEC    $356D   SE       V5, #6D         ; Skip if V5 == 109
$FEE    $BA58   JP       V0, $A58        ; Jump to V0 + A58
$FF0    $D333   DRW      V3, V3, #3      ; Draw 3-byte sprite at V3, V3
$FF2    $3944   SE       V9, #44         ; Skip if V9 == 68
$FF4    $8CBA   UNKNOWN  8CBA            ; Unknown 8xxx instruction
$FF6    $FEDB   UNKNOWN  FEDB            ; Unknown Fxxx instruction
$FF8    $044D   SYS      $44D            ; System call to 44D
$FFA    $5F02   UNKNOWN  $5F02           ; Unknown 5xxx instruction
$FFC    $4DF1   SNE      VD, #F1         ; Skip if VD != 241
$FFE    $6479   LD       V4, #79         ; Load 121 into V4

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 458 (25.6%)
  LD      : 241 (13.5%)
  JP      : 223 (12.5%)
  SE      : 146 ( 8.2%)
  RND     : 131 ( 7.3%)
  SNE     : 130 ( 7.3%)
  ADD     : 114 ( 6.4%)
  SYS     : 113 ( 6.3%)
  CALL    :  95 ( 5.3%)
  DRW     :  95 ( 5.3%)
  SUB     :  10 ( 0.6%)
  XOR     :   9 ( 0.5%)
  SHL     :   7 ( 0.4%)
  AND     :   6 ( 0.3%)
  SHR     :   5 ( 0.3%)
  OR      :   4 ( 0.2%)
  SUBN    :   2 ( 0.1%)
  SKP     :   1 ( 0.1%)
  SKNP    :   1 ( 0.1%)

Memory Operations: 355 (19.8%)
Arithmetic Operations: 145 (8.1%)
