
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B1516D01_I33542_C1001_ea45e46eaa2f.ch8
ROM Size: 3584 bytes
Instructions Found: 1791

DISCOVERY INFORMATION:
Batch: 1516
Instance: 33542
Direction: ascending
Final Array: [0, 0, 0, 34, 43, 59, 59, 169]
Operations: R:0 W:1 C:13 S:4

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 118
Sort Array References:
  $20C: LD I, $938 ; Load 938 into I
  $216: LD I, $A36 ; Load A36 into I
  $24C: LD I, $966 ; Load 966 into I
  $260: LD I, $CC3 ; Load CC3 into I
  $282: LD I, $679 ; Load 679 into I
  $28A: LD I, $050 ; Load 050 into I
  $28C: LD I, $5B4 ; Load 5B4 into I
  $296: LD I, $C9F ; Load C9F into I
  $2BA: LD I, $F2D ; Load F2D into I
  $2C8: LD I, $EA5 ; Load EA5 into I
  $2CA: LD I, $D42 ; Load D42 into I
  $2DA: LD I, $F86 ; Load F86 into I
  $2E0: LD I, $BCC ; Load BCC into I
  $308: LD I, $95C ; Load 95C into I
  $31E: LD I, $238 ; Load 238 into I
  $338: LD I, $119 ; Load 119 into I
  $392: LD I, $F3D ; Load F3D into I
  $39C: LD I, $76E ; Load 76E into I
  $3AC: LD I, $9E0 ; Load 9E0 into I
  $3B6: LD I, $BD5 ; Load BD5 into I
  $3CE: LD I, $507 ; Load 507 into I
  $3D6: LD I, $024 ; Load 024 into I
  $3EC: LD I, $D0F ; Load D0F into I
  $3FA: LD I, $EA9 ; Load EA9 into I
  $41C: LD I, $39A ; Load 39A into I
  $426: LD I, $89F ; Load 89F into I
  $430: LD I, $EF7 ; Load EF7 into I
  $438: LD I, $0E3 ; Load 0E3 into I
  $43E: LD I, $DE2 ; Load DE2 into I
  $450: LD I, $F76 ; Load F76 into I
  $474: LD I, $68E ; Load 68E into I
  $49C: LD I, $DBA ; Load DBA into I
  $4B6: LD I, $A90 ; Load A90 into I
  $4DA: LD I, $88C ; Load 88C into I
  $658: LD I, $320 ; Load 320 into I
  $660: LD I, $565 ; Load 565 into I
  $704: LD I, $E9D ; Load E9D into I
  $708: LD I, $D25 ; Load D25 into I
  $720: LD I, $5B6 ; Load 5B6 into I
  $726: LD I, $F49 ; Load F49 into I
  $73A: LD I, $487 ; Load 487 into I
  $740: LD I, $2A7 ; Load 2A7 into I
  $748: LD I, $F59 ; Load F59 into I
  $77A: LD I, $050 ; Load 050 into I
  $786: LD I, $80C ; Load 80C into I
  $79C: LD I, $5A2 ; Load 5A2 into I
  $7EE: LD I, $09B ; Load 09B into I
  $808: LD I, $8E8 ; Load 8E8 into I
  $8A2: LD I, $DA2 ; Load DA2 into I
  $8CE: LD I, $872 ; Load 872 into I
  $8D0: LD I, $A4A ; Load A4A into I
  $8E0: LD I, $028 ; Load 028 into I
  $930: LD I, $4F7 ; Load 4F7 into I
  $938: LD I, $07F ; Load 07F into I
  $976: LD I, $012 ; Load 012 into I
  $97E: LD I, $AD6 ; Load AD6 into I
  $984: LD I, $DF3 ; Load DF3 into I
  $98C: LD I, $FD6 ; Load FD6 into I
  $9B0: LD I, $560 ; Load 560 into I
  $9EA: LD I, $8BB ; Load 8BB into I
  $9F8: LD I, $092 ; Load 092 into I
  $A04: LD I, $219 ; Load 219 into I
  $A2A: LD I, $CBA ; Load CBA into I
  $A66: LD I, $EA9 ; Load EA9 into I
  $A9C: LD I, $582 ; Load 582 into I
  $ACC: LD I, $F6F ; Load F6F into I
  $ACE: LD I, $6B0 ; Load 6B0 into I
  $AF4: LD I, $220 ; Load 220 into I
  $B00: LD I, $0CE ; Load 0CE into I
  $B0E: LD I, $604 ; Load 604 into I
  $B1A: LD I, $26F ; Load 26F into I
  $B2A: LD I, $B2C ; Load B2C into I
  $B44: LD I, $D16 ; Load D16 into I
  $B62: LD I, $5EF ; Load 5EF into I
  $B8C: LD I, $3D4 ; Load 3D4 into I
  $B9E: LD I, $1BC ; Load 1BC into I
  $BD6: LD I, $C25 ; Load C25 into I
  $C22: LD I, $8CC ; Load 8CC into I
  $C38: LD I, $5D2 ; Load 5D2 into I
  $C4A: LD I, $865 ; Load 865 into I
  $C4C: LD VA, [I] ; Load V0-VA from I
  $C64: LD I, $924 ; Load 924 into I
  $C6A: LD I, $AE3 ; Load AE3 into I
  $C70: LD I, $A20 ; Load A20 into I
  $CB2: LD I, $722 ; Load 722 into I
  $CFC: LD I, $184 ; Load 184 into I
  $D02: LD I, $2E7 ; Load 2E7 into I
  $D14: LD I, $A02 ; Load A02 into I
  $D1E: LD I, $FDF ; Load FDF into I
  $D30: LD I, $678 ; Load 678 into I
  $D40: LD I, $7AC ; Load 7AC into I
  $D42: LD I, $D22 ; Load D22 into I
  $D48: LD I, $023 ; Load 023 into I
  $D80: LD I, $5B5 ; Load 5B5 into I
  $DE4: ADD I, VD ; I ADDRESS MANIPULATION
  $DF0: LD I, $707 ; Load 707 into I
  $DF2: LD I, $B44 ; Load B44 into I
  $DF4: LD I, $681 ; Load 681 into I
  $E10: LD I, $39B ; Load 39B into I
  $E16: LD I, $90A ; Load 90A into I
  $E1E: LD I, $FBB ; Load FBB into I
  $E4C: LD I, $99D ; Load 99D into I
  $E6A: LD I, $89E ; Load 89E into I
  $E8E: LD I, $F24 ; Load F24 into I
  $E98: LD I, $CA7 ; Load CA7 into I
  $E9E: LD I, $BDE ; Load BDE into I
  $EA6: LD I, $E54 ; Load E54 into I
  $ED8: LD I, $A1B ; Load A1B into I
  $EF8: LD I, $E33 ; Load E33 into I
  $F06: LD I, $469 ; Load 469 into I
  $F20: LD I, $A14 ; Load A14 into I
  $F2A: LD I, $701 ; Load 701 into I
  $F48: LD I, $9F1 ; Load 9F1 into I
  $F6C: LD I, $7B0 ; Load 7B0 into I
  $F9E: LD I, $FF8 ; Load FF8 into I
  $FE4: LD I, $90E ; Load 90E into I
  $FE6: LD I, $F32 ; Load F32 into I
  $FF4: LD I, $D2D ; Load D2D into I

CONTROL FLOW ANALYSIS:
Jumps: 215
Calls: 104
Branches: 262
Loops: 117
Loop Structures:
  $292 -> $23B (backward jump)
  $30C -> $259 (backward jump)
  $396 -> $336 (backward jump)
  $3BA -> $2D3 (backward jump)
  $3EA -> $35F (backward jump)
  $49E -> $2E7 (backward jump)
  $4F8 -> $0ED (backward jump)
  $5C8 -> $29E (backward jump)
  $5D6 -> $10B (backward jump)
  $5EA -> $53C (backward jump)
  $614 -> $5C6 (backward jump)
  $640 -> $3C2 (backward jump)
  $696 -> $0C4 (backward jump)
  $69C -> $082 (backward jump)
  $6F2 -> $1EA (backward jump)
  $6F4 -> $2E9 (backward jump)
  $768 -> $5B5 (backward jump)
  $77E -> $337 (backward jump)
  $7C8 -> $09A (backward jump)
  $7EA -> $627 (backward jump)
  $812 -> $1FD (backward jump)
  $838 -> $7C7 (backward jump)
  $8B6 -> $5B5 (backward jump)
  $906 -> $46A (backward jump)
  $910 -> $1D2 (backward jump)
  $946 -> $5DD (backward jump)
  $950 -> $520 (backward jump)
  $954 -> $2F5 (backward jump)
  $956 -> $4BD (backward jump)
  $96E -> $1EE (backward jump)
  $988 -> $52D (backward jump)
  $99C -> $4DE (backward jump)
  $9BE -> $628 (backward jump)
  $9D4 -> $246 (backward jump)
  $9E2 -> $201 (backward jump)
  $A18 -> $5F4 (backward jump)
  $A1E -> $9C1 (backward jump)
  $A44 -> $587 (backward jump)
  $A4A -> $60D (backward jump)
  $A54 -> $4D5 (backward jump)
  $A68 -> $3DE (backward jump)
  $A86 -> $80B (backward jump)
  $A94 -> $50F (backward jump)
  $A96 -> $88C (backward jump)
  $A98 -> $3C9 (backward jump)
  $A9A -> $0C1 (backward jump)
  $A9E -> $586 (backward jump)
  $AB8 -> $812 (backward jump)
  $AC6 -> $4EF (backward jump)
  $B1E -> $379 (backward jump)
  $B28 -> $35E (backward jump)
  $B36 -> $AEF (backward jump)
  $B78 -> $5E8 (backward jump)
  $B84 -> $1FE (backward jump)
  $B88 -> $092 (backward jump)
  $BA6 -> $599 (backward jump)
  $BB8 -> $1F0 (backward jump)
  $BC0 -> $19E (backward jump)
  $BCC -> $1DB (backward jump)
  $BDC -> $BA6 (backward jump)
  $BDE -> $80F (backward jump)
  $BEE -> $07C (backward jump)
  $C28 -> $465 (backward jump)
  $C3A -> $BA2 (backward jump)
  $C62 -> $423 (backward jump)
  $C72 -> $30B (backward jump)
  $C74 -> $AF1 (backward jump)
  $C7A -> $291 (backward jump)
  $C86 -> $42C (backward jump)
  $C92 -> $4C4 (backward jump)
  $C9C -> $A04 (backward jump)
  $CA0 -> $22D (backward jump)
  $CAE -> $9D0 (backward jump)
  $CC8 -> $39D (backward jump)
  $CEA -> $47A (backward jump)
  $D04 -> $4B2 (backward jump)
  $D0C -> $90C (backward jump)
  $D0E -> $82F (backward jump)
  $D1A -> $9F7 (backward jump)
  $D2C -> $46F (backward jump)
  $D44 -> $3DD (backward jump)
  $D7A -> $3B7 (backward jump)
  $D90 -> $61E (backward jump)
  $DA2 -> $2A7 (backward jump)
  $DC6 -> $94F (backward jump)
  $DD6 -> $DA8 (backward jump)
  $DFC -> $CE5 (backward jump)
  $E06 -> $52C (backward jump)
  $E0A -> $06C (backward jump)
  $E12 -> $84F (backward jump)
  $E24 -> $3A8 (backward jump)
  $E2E -> $2FE (backward jump)
  $E32 -> $5BC (backward jump)
  $E40 -> $820 (backward jump)
  $E78 -> $D35 (backward jump)
  $ECA -> $349 (backward jump)
  $ECE -> $670 (backward jump)
  $EEC -> $B21 (backward jump)
  $EFA -> $213 (backward jump)
  $EFE -> $75C (backward jump)
  $F02 -> $753 (backward jump)
  $F22 -> $7B6 (backward jump)
  $F30 -> $6CE (backward jump)
  $F3E -> $998 (backward jump)
  $F5C -> $036 (backward jump)
  $F6A -> $877 (backward jump)
  $F6E -> $C00 (backward jump)
  $F70 -> $399 (backward jump)
  $F74 -> $2E7 (backward jump)
  $F7A -> $249 (backward jump)
  $F8C -> $BF9 (backward jump)
  $F94 -> $646 (backward jump)
  $FA6 -> $E3B (backward jump)
  $FAE -> $AB8 (backward jump)
  $FCE -> $469 (backward jump)
  $FEC -> $21D (backward jump)
  $FEE -> $FC5 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $FD2C   UNKNOWN  FD2C            ; Unknown Fxxx instruction
$202    $0BCA   SYS      $BCA            ; System call to BCA
$204    $C131   RND      V1, #31         ; V1 = random & 31
$206    $F9BC   UNKNOWN  F9BC            ; Unknown Fxxx instruction
$208    $8A4E   SHL      VA              ; VA <<= 1, VF = MSB
$20A    $C201   RND      V2, #01         ; V2 = random & 01
$20C    $A938   LD       I, $938         ; Load 938 into I
$20E    $8E7A   UNKNOWN  8E7A            ; Unknown 8xxx instruction
$210    $0950   SYS      $950            ; System call to 950
$212    $2953   CALL     $953            ; Call subroutine at 953
$214    $4FFD   SNE      VF, #FD         ; Skip if VF != 253
$216    $AA36   LD       I, $A36         ; Load A36 into I
$218    $5D70   SE       VD, V7          ; Skip if VD == V7
$21A    $735C   ADD      V3, #5C         ; Add 92 to V3
$21C    $7C3D   ADD      VC, #3D         ; Add 61 to VC
$21E    $5B6F   UNKNOWN  $5B6F           ; Unknown 5xxx instruction
$220    $43A6   SNE      V3, #A6         ; Skip if V3 != 166
$222    $06F4   SYS      $6F4            ; System call to 6F4
$224    $19B3   JP       $9B3            ; Jump to 9B3
$226    $6977   LD       V9, #77         ; Load 119 into V9
$228    $23E0   CALL     $3E0            ; Call subroutine at 3E0
$22A    $F3AA   UNKNOWN  F3AA            ; Unknown Fxxx instruction
$22C    $DC03   DRW      VC, V0, #3      ; Draw 3-byte sprite at VC, V0
$22E    $D2E0   DRW      V2, VE, #0      ; Draw 0-byte sprite at V2, VE
$230    $4A39   SNE      VA, #39         ; Skip if VA != 57
$232    $4031   SNE      V0, #31         ; Skip if V0 != 49
$234    $44EF   SNE      V4, #EF         ; Skip if V4 != 239
$236    $4BBD   SNE      VB, #BD         ; Skip if VB != 189
$238    $DF76   DRW      VF, V7, #6      ; Draw 6-byte sprite at VF, V7
$23A    $CC18   RND      VC, #18         ; VC = random & 18
$23C    $7313   ADD      V3, #13         ; Add 19 to V3
$23E    $DFFA   DRW      VF, VF, #A      ; Draw 10-byte sprite at VF, VF
$240    $4998   SNE      V9, #98         ; Skip if V9 != 152
$242    $421F   SNE      V2, #1F         ; Skip if V2 != 31
$244    $890B   UNKNOWN  890B            ; Unknown 8xxx instruction
$246    $0D45   SYS      $D45            ; System call to D45
$248    $4A0B   SNE      VA, #0B         ; Skip if VA != 11
$24A    $7062   ADD      V0, #62         ; Add 98 to V0
$24C    $A966   LD       I, $966         ; Load 966 into I
$24E    $7E16   ADD      VE, #16         ; Add 22 to VE
$250    $CBA3   RND      VB, #A3         ; VB = random & A3
$252    $2E40   CALL     $E40            ; Call subroutine at E40
$254    $864D   UNKNOWN  864D            ; Unknown 8xxx instruction
$256    $0D2E   SYS      $D2E            ; System call to D2E
$258    $15EE   JP       $5EE            ; Jump to 5EE
$25A    $C760   RND      V7, #60         ; V7 = random & 60
$25C    $6AE8   LD       VA, #E8         ; Load 232 into VA
$25E    $981D   UNKNOWN  $981D           ; Unknown 9xxx instruction
$260    $ACC3   LD       I, $CC3         ; Load CC3 into I
$262    $57DF   UNKNOWN  $57DF           ; Unknown 5xxx instruction
$264    $28E4   CALL     $8E4            ; Call subroutine at 8E4
$266    $6708   LD       V7, #08         ; Load 8 into V7
$268    $75F0   ADD      V5, #F0         ; Add 240 to V5
$26A    $59C8   UNKNOWN  $59C8           ; Unknown 5xxx instruction
$26C    $DB2F   DRW      VB, V2, #F      ; Draw 15-byte sprite at VB, V2
$26E    $FCDB   UNKNOWN  FCDB            ; Unknown Fxxx instruction
$270    $886C   UNKNOWN  886C            ; Unknown 8xxx instruction
$272    $B52E   JP       V0, $52E        ; Jump to V0 + 52E
$274    $96D9   UNKNOWN  $96D9           ; Unknown 9xxx instruction
$276    $3C39   SE       VC, #39         ; Skip if VC == 57
$278    $58C6   UNKNOWN  $58C6           ; Unknown 5xxx instruction
$27A    $F652   UNKNOWN  F652            ; Unknown Fxxx instruction
$27C    $9D67   UNKNOWN  $9D67           ; Unknown 9xxx instruction
$27E    $25F9   CALL     $5F9            ; Call subroutine at 5F9
$280    $2245   CALL     $245            ; Call subroutine at 245
$282    $A679   LD       I, $679         ; Load 679 into I
$284    $567C   UNKNOWN  $567C           ; Unknown 5xxx instruction
$286    $D602   DRW      V6, V0, #2      ; Draw 2-byte sprite at V6, V0
$288    $FD13   UNKNOWN  FD13            ; Unknown Fxxx instruction
$28A    $A050   LD       I, $050         ; Load 050 into I
$28C    $A5B4   LD       I, $5B4         ; Load 5B4 into I
$28E    $5F2C   UNKNOWN  $5F2C           ; Unknown 5xxx instruction
$290    $8D6C   UNKNOWN  8D6C            ; Unknown 8xxx instruction
$292    $123B   JP       $23B            ; Jump to 23B
$294    $EA9E   SKP      VA              ; Skip if key VA pressed
$296    $AC9F   LD       I, $C9F         ; Load C9F into I
$298    $09A3   SYS      $9A3            ; System call to 9A3
$29A    $CF12   RND      VF, #12         ; VF = random & 12
$29C    $2550   CALL     $550            ; Call subroutine at 550
$29E    $8085   SUB      V0, V8          ; V0 -= V8, VF = !borrow
$2A0    $FEB4   UNKNOWN  FEB4            ; Unknown Fxxx instruction
$2A2    $F169   UNKNOWN  F169            ; Unknown Fxxx instruction
$2A4    $7CCA   ADD      VC, #CA         ; Add 202 to VC
$2A6    $DDBA   DRW      VD, VB, #A      ; Draw 10-byte sprite at VD, VB
$2A8    $F47E   UNKNOWN  F47E            ; Unknown Fxxx instruction
$2AA    $3AED   SE       VA, #ED         ; Skip if VA == 237
$2AC    $FC54   UNKNOWN  FC54            ; Unknown Fxxx instruction
$2AE    $D247   DRW      V2, V4, #7      ; Draw 7-byte sprite at V2, V4
$2B0    $534B   UNKNOWN  $534B           ; Unknown 5xxx instruction
$2B2    $9254   UNKNOWN  $9254           ; Unknown 9xxx instruction
$2B4    $13AE   JP       $3AE            ; Jump to 3AE
$2B6    $D604   DRW      V6, V0, #4      ; Draw 4-byte sprite at V6, V0
$2B8    $0974   SYS      $974            ; System call to 974
$2BA    $AF2D   LD       I, $F2D         ; Load F2D into I
$2BC    $4231   SNE      V2, #31         ; Skip if V2 != 49
$2BE    $525D   UNKNOWN  $525D           ; Unknown 5xxx instruction
$2C0    $B52F   JP       V0, $52F        ; Jump to V0 + 52F
$2C2    $30EB   SE       V0, #EB         ; Skip if V0 == 235
$2C4    $4B5F   SNE      VB, #5F         ; Skip if VB != 95
$2C6    $67EA   LD       V7, #EA         ; Load 234 into V7
$2C8    $AEA5   LD       I, $EA5         ; Load EA5 into I
$2CA    $AD42   LD       I, $D42         ; Load D42 into I
$2CC    $B8DD   JP       V0, $8DD        ; Jump to V0 + 8DD
$2CE    $BBBE   JP       V0, $BBE        ; Jump to V0 + BBE
$2D0    $23F4   CALL     $3F4            ; Call subroutine at 3F4
$2D2    $D9C0   DRW      V9, VC, #0      ; Draw 0-byte sprite at V9, VC
$2D4    $C5B4   RND      V5, #B4         ; V5 = random & B4
$2D6    $0A14   SYS      $A14            ; System call to A14
$2D8    $C13A   RND      V1, #3A         ; V1 = random & 3A
$2DA    $AF86   LD       I, $F86         ; Load F86 into I
$2DC    $1BFB   JP       $BFB            ; Jump to BFB
$2DE    $DD1C   DRW      VD, V1, #C      ; Draw 12-byte sprite at VD, V1
$2E0    $ABCC   LD       I, $BCC         ; Load BCC into I
$2E2    $B8B2   JP       V0, $8B2        ; Jump to V0 + 8B2
$2E4    $BF7E   JP       V0, $F7E        ; Jump to V0 + F7E
$2E6    $1A5B   JP       $A5B            ; Jump to A5B
$2E8    $88A3   XOR      V8, VA          ; V8 ^= VA
$2EA    $0DE9   SYS      $DE9            ; System call to DE9
$2EC    $C419   RND      V4, #19         ; V4 = random & 19
$2EE    $D86A   DRW      V8, V6, #A      ; Draw 10-byte sprite at V8, V6
$2F0    $B780   JP       V0, $780        ; Jump to V0 + 780
$2F2    $E3E2   UNKNOWN  $E3E2           ; Unknown Exxx instruction
$2F4    $50D4   UNKNOWN  $50D4           ; Unknown 5xxx instruction
$2F6    $18DE   JP       $8DE            ; Jump to 8DE
$2F8    $9517   UNKNOWN  $9517           ; Unknown 9xxx instruction
$2FA    $3873   SE       V8, #73         ; Skip if V8 == 115
$2FC    $1AD1   JP       $AD1            ; Jump to AD1
$2FE    $8AC6   SHR      VA              ; VA >>= 1, VF = LSB
$302    $0022   SYS      $022            ; System call to 022
$304    $2B3B   CALL     $B3B            ; Call subroutine at B3B
$306    $3BA9   SE       VB, #A9         ; Skip if VB == 169
$308    $A95C   LD       I, $95C         ; Load 95C into I
$30A    $0C3F   SYS      $C3F            ; System call to C3F
$30C    $B259   JP       V0, $259        ; Jump to V0 + 259
$30E    $174F   JP       $74F            ; Jump to 74F
$310    $BEA1   JP       V0, $EA1        ; Jump to V0 + EA1
$312    $033E   SYS      $33E            ; System call to 33E
$314    $0785   SYS      $785            ; System call to 785
$316    $D022   DRW      V0, V2, #2      ; Draw 2-byte sprite at V0, V2
$318    $3BEE   SE       VB, #EE         ; Skip if VB == 238
$31A    $F48C   UNKNOWN  F48C            ; Unknown Fxxx instruction
$31C    $C390   RND      V3, #90         ; V3 = random & 90
$31E    $A238   LD       I, $238         ; Load 238 into I
$320    $415D   SNE      V1, #5D         ; Skip if V1 != 93
$322    $952D   UNKNOWN  $952D           ; Unknown 9xxx instruction
$324    $1FD7   JP       $FD7            ; Jump to FD7
$326    $D578   DRW      V5, V7, #8      ; Draw 8-byte sprite at V5, V7
$328    $38F5   SE       V8, #F5         ; Skip if V8 == 245
$32A    $2962   CALL     $962            ; Call subroutine at 962
$32C    $1612   JP       $612            ; Jump to 612
$32E    $29E6   CALL     $9E6            ; Call subroutine at 9E6
$330    $035F   SYS      $35F            ; System call to 35F
$332    $1568   JP       $568            ; Jump to 568
$334    $CF98   RND      VF, #98         ; VF = random & 98
$336    $D74D   DRW      V7, V4, #D      ; Draw 13-byte sprite at V7, V4
$338    $A119   LD       I, $119         ; Load 119 into I
$33A    $7D2C   ADD      VD, #2C         ; Add 44 to VD
$33C    $2DA2   CALL     $DA2            ; Call subroutine at DA2
$33E    $8F66   SHR      VF              ; VF >>= 1, VF = LSB
$340    $330B   SE       V3, #0B         ; Skip if V3 == 11
$342    $5DE8   UNKNOWN  $5DE8           ; Unknown 5xxx instruction
$344    $3E61   SE       VE, #61         ; Skip if VE == 97
$346    $74D9   ADD      V4, #D9         ; Add 217 to V4
$348    $E474   UNKNOWN  $E474           ; Unknown Exxx instruction
$34A    $4E8B   SNE      VE, #8B         ; Skip if VE != 139
$34C    $B5E5   JP       V0, $5E5        ; Jump to V0 + 5E5
$34E    $5291   UNKNOWN  $5291           ; Unknown 5xxx instruction
$350    $F00C   UNKNOWN  F00C            ; Unknown Fxxx instruction
$352    $5122   UNKNOWN  $5122           ; Unknown 5xxx instruction
$354    $FE6A   UNKNOWN  FE6A            ; Unknown Fxxx instruction
$356    $58BC   UNKNOWN  $58BC           ; Unknown 5xxx instruction
$358    $9E93   UNKNOWN  $9E93           ; Unknown 9xxx instruction
$35A    $CBEA   RND      VB, #EA         ; VB = random & EA
$35C    $BCF8   JP       V0, $CF8        ; Jump to V0 + CF8
$35E    $8D5D   UNKNOWN  8D5D            ; Unknown 8xxx instruction
$360    $E0C7   UNKNOWN  $E0C7           ; Unknown Exxx instruction
$362    $0C69   SYS      $C69            ; System call to C69
$364    $1F1F   JP       $F1F            ; Jump to F1F
$366    $EF36   UNKNOWN  $EF36           ; Unknown Exxx instruction
$368    $365B   SE       V6, #5B         ; Skip if V6 == 91
$36A    $4693   SNE      V6, #93         ; Skip if V6 != 147
$36C    $6A6B   LD       VA, #6B         ; Load 107 into VA
$36E    $656E   LD       V5, #6E         ; Load 110 into V5
$370    $B3BF   JP       V0, $3BF        ; Jump to V0 + 3BF
$372    $840D   UNKNOWN  840D            ; Unknown 8xxx instruction
$374    $230E   CALL     $30E            ; Call subroutine at 30E
$376    $C359   RND      V3, #59         ; V3 = random & 59
$378    $3D41   SE       VD, #41         ; Skip if VD == 65
$37A    $FDA0   UNKNOWN  FDA0            ; Unknown Fxxx instruction
$37C    $7432   ADD      V4, #32         ; Add 50 to V4
$37E    $F7E0   UNKNOWN  F7E0            ; Unknown Fxxx instruction
$380    $4D93   SNE      VD, #93         ; Skip if VD != 147
$382    $8FDB   UNKNOWN  8FDB            ; Unknown 8xxx instruction
$384    $FCC3   UNKNOWN  FCC3            ; Unknown Fxxx instruction
$386    $F051   UNKNOWN  F051            ; Unknown Fxxx instruction
$388    $932C   UNKNOWN  $932C           ; Unknown 9xxx instruction
$38A    $774F   ADD      V7, #4F         ; Add 79 to V7
$38C    $7B0A   ADD      VB, #0A         ; Add 10 to VB
$38E    $D7DD   DRW      V7, VD, #D      ; Draw 13-byte sprite at V7, VD
$390    $CB6F   RND      VB, #6F         ; VB = random & 6F
$392    $AF3D   LD       I, $F3D         ; Load F3D into I
$394    $DAE5   DRW      VA, VE, #5      ; Draw 5-byte sprite at VA, VE
$396    $1336   JP       $336            ; Jump to 336
$398    $784B   ADD      V8, #4B         ; Add 75 to V8
$39A    $E689   UNKNOWN  $E689           ; Unknown Exxx instruction
$39C    $A76E   LD       I, $76E         ; Load 76E into I
$39E    $FE7E   UNKNOWN  FE7E            ; Unknown Fxxx instruction
$3A0    $30BD   SE       V0, #BD         ; Skip if V0 == 189
$3A2    $E7A1   SKNP     V7              ; Skip if key V7 not pressed
$3A4    $7964   ADD      V9, #64         ; Add 100 to V9
$3A6    $C332   RND      V3, #32         ; V3 = random & 32
$3A8    $EA92   UNKNOWN  $EA92           ; Unknown Exxx instruction
$3AA    $379C   SE       V7, #9C         ; Skip if V7 == 156
$3AC    $A9E0   LD       I, $9E0         ; Load 9E0 into I
$3AE    $7D06   ADD      VD, #06         ; Add 6 to VD
$3B0    $94FD   UNKNOWN  $94FD           ; Unknown 9xxx instruction
$3B2    $D5F3   DRW      V5, VF, #3      ; Draw 3-byte sprite at V5, VF
$3B4    $66F6   LD       V6, #F6         ; Load 246 into V6
$3B6    $ABD5   LD       I, $BD5         ; Load BD5 into I
$3B8    $D3BA   DRW      V3, VB, #A      ; Draw 10-byte sprite at V3, VB
$3BA    $12D3   JP       $2D3            ; Jump to 2D3
$3BC    $3650   SE       V6, #50         ; Skip if V6 == 80
$3BE    $66D1   LD       V6, #D1         ; Load 209 into V6
$3C0    $59A0   SE       V9, VA          ; Skip if V9 == VA
$3C2    $00A5   SYS      $0A5            ; System call to 0A5
$3C4    $F488   UNKNOWN  F488            ; Unknown Fxxx instruction
$3C6    $0F14   SYS      $F14            ; System call to F14
$3C8    $0415   SYS      $415            ; System call to 415
$3CA    $6C2E   LD       VC, #2E         ; Load 46 into VC
$3CC    $7016   ADD      V0, #16         ; Add 22 to V0
$3CE    $A507   LD       I, $507         ; Load 507 into I
$3D0    $344C   SE       V4, #4C         ; Skip if V4 == 76
$3D2    $6567   LD       V5, #67         ; Load 103 into V5
$3D4    $8D5C   UNKNOWN  8D5C            ; Unknown 8xxx instruction
$3D6    $A024   LD       I, $024         ; Load 024 into I
$3D8    $F5CE   UNKNOWN  F5CE            ; Unknown Fxxx instruction
$3DA    $60E9   LD       V0, #E9         ; Load 233 into V0
$3DC    $4F1C   SNE      VF, #1C         ; Skip if VF != 28
$3DE    $2EC0   CALL     $EC0            ; Call subroutine at EC0
$3E0    $DD03   DRW      VD, V0, #3      ; Draw 3-byte sprite at VD, V0
$3E2    $3AFA   SE       VA, #FA         ; Skip if VA == 250
$3E4    $E796   UNKNOWN  $E796           ; Unknown Exxx instruction
$3E6    $7FEC   ADD      VF, #EC         ; Add 236 to VF
$3E8    $1EE1   JP       $EE1            ; Jump to EE1
$3EA    $135F   JP       $35F            ; Jump to 35F
$3EC    $AD0F   LD       I, $D0F         ; Load D0F into I
$3EE    $C547   RND      V5, #47         ; V5 = random & 47
$3F0    $DA1F   DRW      VA, V1, #F      ; Draw 15-byte sprite at VA, V1
$3F2    $3910   SE       V9, #10         ; Skip if V9 == 16
$3F4    $F360   UNKNOWN  F360            ; Unknown Fxxx instruction
$3F6    $D4B4   DRW      V4, VB, #4      ; Draw 4-byte sprite at V4, VB
$3F8    $4954   SNE      V9, #54         ; Skip if V9 != 84
$3FA    $AEA9   LD       I, $EA9         ; Load EA9 into I
$3FC    $0348   SYS      $348            ; System call to 348
$3FE    $1867   JP       $867            ; Jump to 867
$400    $6A04   LD       VA, #04         ; Load 4 into VA
$402    $C00F   RND      V0, #0F         ; V0 = random & 0F
$404    $F36B   UNKNOWN  F36B            ; Unknown Fxxx instruction
$406    $03A8   SYS      $3A8            ; System call to 3A8
$408    $C175   RND      V1, #75         ; V1 = random & 75
$40A    $CD52   RND      VD, #52         ; VD = random & 52
$40C    $C336   RND      V3, #36         ; V3 = random & 36
$40E    $D61F   DRW      V6, V1, #F      ; Draw 15-byte sprite at V6, V1
$410    $0C26   SYS      $C26            ; System call to C26
$412    $DCC2   DRW      VC, VC, #2      ; Draw 2-byte sprite at VC, VC
$414    $429B   SNE      V2, #9B         ; Skip if V2 != 155
$416    $26C4   CALL     $6C4            ; Call subroutine at 6C4
$418    $6E1B   LD       VE, #1B         ; Load 27 into VE
$41A    $85BB   UNKNOWN  85BB            ; Unknown 8xxx instruction
$41C    $A39A   LD       I, $39A         ; Load 39A into I
$41E    $687A   LD       V8, #7A         ; Load 122 into V8
$420    $CE14   RND      VE, #14         ; VE = random & 14
$422    $BB55   JP       V0, $B55        ; Jump to V0 + B55
$424    $66CD   LD       V6, #CD         ; Load 205 into V6
$426    $A89F   LD       I, $89F         ; Load 89F into I
$428    $C73A   RND      V7, #3A         ; V7 = random & 3A
$42A    $DB68   DRW      VB, V6, #8      ; Draw 8-byte sprite at VB, V6
$42C    $5E7E   UNKNOWN  $5E7E           ; Unknown 5xxx instruction
$42E    $1973   JP       $973            ; Jump to 973
$430    $AEF7   LD       I, $EF7         ; Load EF7 into I
$432    $8450   LD       V4, V5          ; V4 = V5
$434    $CB95   RND      VB, #95         ; VB = random & 95
$436    $EB76   UNKNOWN  $EB76           ; Unknown Exxx instruction
$438    $A0E3   LD       I, $0E3         ; Load 0E3 into I
$43A    $F591   UNKNOWN  F591            ; Unknown Fxxx instruction
$43C    $FF39   UNKNOWN  FF39            ; Unknown Fxxx instruction
$43E    $ADE2   LD       I, $DE2         ; Load DE2 into I
$440    $4B75   SNE      VB, #75         ; Skip if VB != 117
$442    $31BB   SE       V1, #BB         ; Skip if V1 == 187
$444    $E603   UNKNOWN  $E603           ; Unknown Exxx instruction
$446    $7DC1   ADD      VD, #C1         ; Add 193 to VD
$448    $BEE3   JP       V0, $EE3        ; Jump to V0 + EE3
$44A    $FBD5   UNKNOWN  FBD5            ; Unknown Fxxx instruction
$44C    $5C5A   UNKNOWN  $5C5A           ; Unknown 5xxx instruction
$44E    $F6C3   UNKNOWN  F6C3            ; Unknown Fxxx instruction
$450    $AF76   LD       I, $F76         ; Load F76 into I
$452    $5874   UNKNOWN  $5874           ; Unknown 5xxx instruction
$454    $C834   RND      V8, #34         ; V8 = random & 34
$456    $B49F   JP       V0, $49F        ; Jump to V0 + 49F
$458    $42FF   SNE      V2, #FF         ; Skip if V2 != 255
$45A    $E864   UNKNOWN  $E864           ; Unknown Exxx instruction
$45C    $9397   UNKNOWN  $9397           ; Unknown 9xxx instruction
$45E    $6CFE   LD       VC, #FE         ; Load 254 into VC
$460    $0DF1   SYS      $DF1            ; System call to DF1
$462    $4A2D   SNE      VA, #2D         ; Skip if VA != 45
$464    $17C9   JP       $7C9            ; Jump to 7C9
$466    $05BB   SYS      $5BB            ; System call to 5BB
$468    $8A3D   UNKNOWN  8A3D            ; Unknown 8xxx instruction
$46A    $404E   SNE      V0, #4E         ; Skip if V0 != 78
$46C    $7053   ADD      V0, #53         ; Add 83 to V0
$46E    $DF3A   DRW      VF, V3, #A      ; Draw 10-byte sprite at VF, V3
$470    $995E   UNKNOWN  $995E           ; Unknown 9xxx instruction
$472    $48DF   SNE      V8, #DF         ; Skip if V8 != 223
$474    $A68E   LD       I, $68E         ; Load 68E into I
$476    $9D3B   UNKNOWN  $9D3B           ; Unknown 9xxx instruction
$478    $4767   SNE      V7, #67         ; Skip if V7 != 103
$47A    $E2C4   UNKNOWN  $E2C4           ; Unknown Exxx instruction
$47C    $F07B   UNKNOWN  F07B            ; Unknown Fxxx instruction
$47E    $EDAE   UNKNOWN  $EDAE           ; Unknown Exxx instruction
$480    $0989   SYS      $989            ; System call to 989
$482    $1B72   JP       $B72            ; Jump to B72
$484    $258F   CALL     $58F            ; Call subroutine at 58F
$486    $ECA5   UNKNOWN  $ECA5           ; Unknown Exxx instruction
$488    $C70C   RND      V7, #0C         ; V7 = random & 0C
$48A    $4F2D   SNE      VF, #2D         ; Skip if VF != 45
$48C    $0C65   SYS      $C65            ; System call to C65
$48E    $49C6   SNE      V9, #C6         ; Skip if V9 != 198
$490    $7EC7   ADD      VE, #C7         ; Add 199 to VE
$492    $36E1   SE       V6, #E1         ; Skip if V6 == 225
$494    $D046   DRW      V0, V4, #6      ; Draw 6-byte sprite at V0, V4
$496    $38FD   SE       V8, #FD         ; Skip if V8 == 253
$498    $725C   ADD      V2, #5C         ; Add 92 to V2
$49A    $F4E4   UNKNOWN  F4E4            ; Unknown Fxxx instruction
$49C    $ADBA   LD       I, $DBA         ; Load DBA into I
$49E    $12E7   JP       $2E7            ; Jump to 2E7
$4A0    $4986   SNE      V9, #86         ; Skip if V9 != 134
$4A2    $8398   UNKNOWN  8398            ; Unknown 8xxx instruction
$4A4    $D0A6   DRW      V0, VA, #6      ; Draw 6-byte sprite at V0, VA
$4A6    $59A8   UNKNOWN  $59A8           ; Unknown 5xxx instruction
$4A8    $CDB3   RND      VD, #B3         ; VD = random & B3
$4AA    $8B60   LD       VB, V6          ; VB = V6
$4AC    $1DA5   JP       $DA5            ; Jump to DA5
$4AE    $9210   SNE      V2, V1          ; Skip if V2 != V1
$4B0    $6DEF   LD       VD, #EF         ; Load 239 into VD
$4B2    $6578   LD       V5, #78         ; Load 120 into V5
$4B4    $86CB   UNKNOWN  86CB            ; Unknown 8xxx instruction
$4B6    $AA90   LD       I, $A90         ; Load A90 into I
$4B8    $E87B   UNKNOWN  $E87B           ; Unknown Exxx instruction
$4BA    $762E   ADD      V6, #2E         ; Add 46 to V6
$4BC    $DBB0   DRW      VB, VB, #0      ; Draw 0-byte sprite at VB, VB
$4BE    $9492   UNKNOWN  $9492           ; Unknown 9xxx instruction
$4C0    $4F31   SNE      VF, #31         ; Skip if VF != 49
$4C2    $FA9B   UNKNOWN  FA9B            ; Unknown Fxxx instruction
$4C4    $4D4F   SNE      VD, #4F         ; Skip if VD != 79
$4C6    $76AB   ADD      V6, #AB         ; Add 171 to V6
$4C8    $E5B4   UNKNOWN  $E5B4           ; Unknown Exxx instruction
$4CA    $7CD7   ADD      VC, #D7         ; Add 215 to VC
$4CC    $509C   UNKNOWN  $509C           ; Unknown 5xxx instruction
$4CE    $514C   UNKNOWN  $514C           ; Unknown 5xxx instruction
$4D0    $87F3   XOR      V7, VF          ; V7 ^= VF
$4D2    $BB04   JP       V0, $B04        ; Jump to V0 + B04
$4D4    $94B2   UNKNOWN  $94B2           ; Unknown 9xxx instruction
$4D6    $1536   JP       $536            ; Jump to 536
$4D8    $E54D   UNKNOWN  $E54D           ; Unknown Exxx instruction
$4DA    $A88C   LD       I, $88C         ; Load 88C into I
$4DC    $D8EB   DRW      V8, VE, #B      ; Draw 11-byte sprite at V8, VE
$4DE    $CF58   RND      VF, #58         ; VF = random & 58
$4E0    $3557   SE       V5, #57         ; Skip if V5 == 87
$4E2    $BAC1   JP       V0, $AC1        ; Jump to V0 + AC1
$4E4    $E89E   SKP      V8              ; Skip if key V8 pressed
$4E6    $6F26   LD       VF, #26         ; Load 38 into VF
$4E8    $65DB   LD       V5, #DB         ; Load 219 into V5
$4EA    $E851   UNKNOWN  $E851           ; Unknown Exxx instruction
$4EC    $9EF7   UNKNOWN  $9EF7           ; Unknown 9xxx instruction
$4EE    $24FF   CALL     $4FF            ; Call subroutine at 4FF
$4F0    $CA10   RND      VA, #10         ; VA = random & 10
$4F2    $E4C3   UNKNOWN  $E4C3           ; Unknown Exxx instruction
$4F4    $53E7   UNKNOWN  $53E7           ; Unknown 5xxx instruction
$4F6    $0095   SYS      $095            ; System call to 095
$4F8    $10ED   JP       $0ED            ; Jump to 0ED
$4FA    $6862   LD       V8, #62         ; Load 98 into V8
$4FC    $86A0   LD       V6, VA          ; V6 = VA
$4FE    $03A1   SYS      $3A1            ; System call to 3A1
$500    $29AB   CALL     $9AB            ; Call subroutine at 9AB
$502    $30AC   SE       V0, #AC         ; Skip if V0 == 172
$504    $B885   JP       V0, $885        ; Jump to V0 + 885
$506    $C745   RND      V7, #45         ; V7 = random & 45
$508    $9BB3   UNKNOWN  $9BB3           ; Unknown 9xxx instruction
$50A    $97AA   UNKNOWN  $97AA           ; Unknown 9xxx instruction
$50C    $5E37   UNKNOWN  $5E37           ; Unknown 5xxx instruction
$50E    $870F   UNKNOWN  870F            ; Unknown 8xxx instruction
$510    $F671   UNKNOWN  F671            ; Unknown Fxxx instruction
$512    $9EBD   UNKNOWN  $9EBD           ; Unknown 9xxx instruction
$514    $1FA4   JP       $FA4            ; Jump to FA4
$516    $23A5   CALL     $3A5            ; Call subroutine at 3A5
$518    $531F   UNKNOWN  $531F           ; Unknown 5xxx instruction
$51A    $C248   RND      V2, #48         ; V2 = random & 48
$51C    $1A37   JP       $A37            ; Jump to A37
$51E    $7976   ADD      V9, #76         ; Add 118 to V9
$520    $7AAF   ADD      VA, #AF         ; Add 175 to VA
$522    $ECA9   UNKNOWN  $ECA9           ; Unknown Exxx instruction
$524    $EAF1   UNKNOWN  $EAF1           ; Unknown Exxx instruction
$526    $9FCD   UNKNOWN  $9FCD           ; Unknown 9xxx instruction
$528    $2DDB   CALL     $DDB            ; Call subroutine at DDB
$52A    $82DE   SHL      V2              ; V2 <<= 1, VF = MSB
$52C    $E600   UNKNOWN  $E600           ; Unknown Exxx instruction
$52E    $EA6F   UNKNOWN  $EA6F           ; Unknown Exxx instruction
$530    $C3E7   RND      V3, #E7         ; V3 = random & E7
$532    $48BF   SNE      V8, #BF         ; Skip if V8 != 191
$534    $4FF0   SNE      VF, #F0         ; Skip if VF != 240
$536    $F829   LD       F, V8           ; I = sprite address for digit V8
$538    $08C0   SYS      $8C0            ; System call to 8C0
$53A    $5F24   UNKNOWN  $5F24           ; Unknown 5xxx instruction
$53C    $D937   DRW      V9, V3, #7      ; Draw 7-byte sprite at V9, V3
$53E    $6003   LD       V0, #03         ; Load 3 into V0
$540    $0253   SYS      $253            ; System call to 253
$542    $58E7   UNKNOWN  $58E7           ; Unknown 5xxx instruction
$544    $D4EB   DRW      V4, VE, #B      ; Draw 11-byte sprite at V4, VE
$546    $5F47   UNKNOWN  $5F47           ; Unknown 5xxx instruction
$548    $C879   RND      V8, #79         ; V8 = random & 79
$54A    $0FC8   SYS      $FC8            ; System call to FC8
$54C    $D3C1   DRW      V3, VC, #1      ; Draw 1-byte sprite at V3, VC
$54E    $6C8A   LD       VC, #8A         ; Load 138 into VC
$550    $8F4E   SHL      VF              ; VF <<= 1, VF = MSB
$552    $8B91   OR       VB, V9          ; VB |= V9
$554    $6177   LD       V1, #77         ; Load 119 into V1
$556    $B9D3   JP       V0, $9D3        ; Jump to V0 + 9D3
$558    $E6EE   UNKNOWN  $E6EE           ; Unknown Exxx instruction
$55A    $5A2D   UNKNOWN  $5A2D           ; Unknown 5xxx instruction
$55C    $2FC0   CALL     $FC0            ; Call subroutine at FC0
$55E    $893A   UNKNOWN  893A            ; Unknown 8xxx instruction
$560    $850B   UNKNOWN  850B            ; Unknown 8xxx instruction
$562    $F7A6   UNKNOWN  F7A6            ; Unknown Fxxx instruction
$564    $88EB   UNKNOWN  88EB            ; Unknown 8xxx instruction
$566    $7468   ADD      V4, #68         ; Add 104 to V4
$568    $5ADC   UNKNOWN  $5ADC           ; Unknown 5xxx instruction
$56A    $E5F2   UNKNOWN  $E5F2           ; Unknown Exxx instruction
$56C    $E9E3   UNKNOWN  $E9E3           ; Unknown Exxx instruction
$56E    $EA25   UNKNOWN  $EA25           ; Unknown Exxx instruction
$570    $7B66   ADD      VB, #66         ; Add 102 to VB
$572    $310C   SE       V1, #0C         ; Skip if V1 == 12
$574    $4BCA   SNE      VB, #CA         ; Skip if VB != 202
$576    $617B   LD       V1, #7B         ; Load 123 into V1
$578    $197B   JP       $97B            ; Jump to 97B
$57A    $D738   DRW      V7, V3, #8      ; Draw 8-byte sprite at V7, V3
$57C    $D466   DRW      V4, V6, #6      ; Draw 6-byte sprite at V4, V6
$57E    $F30E   UNKNOWN  F30E            ; Unknown Fxxx instruction
$580    $09C2   SYS      $9C2            ; System call to 9C2
$582    $7B6B   ADD      VB, #6B         ; Add 107 to VB
$584    $25F5   CALL     $5F5            ; Call subroutine at 5F5
$586    $4AEA   SNE      VA, #EA         ; Skip if VA != 234
$588    $3DBD   SE       VD, #BD         ; Skip if VD == 189
$58A    $E2D7   UNKNOWN  $E2D7           ; Unknown Exxx instruction
$58C    $6484   LD       V4, #84         ; Load 132 into V4
$58E    $4266   SNE      V2, #66         ; Skip if V2 != 102
$590    $78FC   ADD      V8, #FC         ; Add 252 to V8
$592    $7EFE   ADD      VE, #FE         ; Add 254 to VE
$594    $186B   JP       $86B            ; Jump to 86B
$596    $3C9D   SE       VC, #9D         ; Skip if VC == 157
$598    $5838   UNKNOWN  $5838           ; Unknown 5xxx instruction
$59A    $583F   UNKNOWN  $583F           ; Unknown 5xxx instruction
$59C    $1B3B   JP       $B3B            ; Jump to B3B
$59E    $8889   UNKNOWN  8889            ; Unknown 8xxx instruction
$5A0    $48B5   SNE      V8, #B5         ; Skip if V8 != 181
$5A2    $67E6   LD       V7, #E6         ; Load 230 into V7
$5A4    $60CC   LD       V0, #CC         ; Load 204 into V0
$5A6    $F44E   UNKNOWN  F44E            ; Unknown Fxxx instruction
$5A8    $7AF5   ADD      VA, #F5         ; Add 245 to VA
$5AA    $DA19   DRW      VA, V1, #9      ; Draw 9-byte sprite at VA, V1
$5AC    $0892   SYS      $892            ; System call to 892
$5AE    $0CDC   SYS      $CDC            ; System call to CDC
$5B0    $CBFD   RND      VB, #FD         ; VB = random & FD
$5B2    $FB98   UNKNOWN  FB98            ; Unknown Fxxx instruction
$5B4    $3A52   SE       VA, #52         ; Skip if VA == 82
$5B6    $4077   SNE      V0, #77         ; Skip if V0 != 119
$5B8    $5752   UNKNOWN  $5752           ; Unknown 5xxx instruction
$5BA    $03BF   SYS      $3BF            ; System call to 3BF
$5BC    $37D0   SE       V7, #D0         ; Skip if V7 == 208
$5BE    $1933   JP       $933            ; Jump to 933
$5C0    $3097   SE       V0, #97         ; Skip if V0 == 151
$5C2    $429E   SNE      V2, #9E         ; Skip if V2 != 158
$5C4    $6713   LD       V7, #13         ; Load 19 into V7
$5C6    $0D77   SYS      $D77            ; System call to D77
$5C8    $B29E   JP       V0, $29E        ; Jump to V0 + 29E
$5CA    $6FF3   LD       VF, #F3         ; Load 243 into VF
$5CC    $8C71   OR       VC, V7          ; VC |= V7
$5CE    $010F   SYS      $10F            ; System call to 10F
$5D0    $6ABA   LD       VA, #BA         ; Load 186 into VA
$5D2    $5189   UNKNOWN  $5189           ; Unknown 5xxx instruction
$5D4    $F5ED   UNKNOWN  F5ED            ; Unknown Fxxx instruction
$5D6    $110B   JP       $10B            ; Jump to 10B
$5D8    $9303   UNKNOWN  $9303           ; Unknown 9xxx instruction
$5DA    $96FD   UNKNOWN  $96FD           ; Unknown 9xxx instruction
$5DC    $CC5E   RND      VC, #5E         ; VC = random & 5E
$5DE    $85D8   UNKNOWN  85D8            ; Unknown 8xxx instruction
$5E0    $D986   DRW      V9, V8, #6      ; Draw 6-byte sprite at V9, V8
$5E2    $18B7   JP       $8B7            ; Jump to 8B7
$5E4    $640B   LD       V4, #0B         ; Load 11 into V4
$5E6    $F2E6   UNKNOWN  F2E6            ; Unknown Fxxx instruction
$5E8    $D33C   DRW      V3, V3, #C      ; Draw 12-byte sprite at V3, V3
$5EA    $153C   JP       $53C            ; Jump to 53C
$5EC    $3F5B   SE       VF, #5B         ; Skip if VF == 91
$5EE    $9435   UNKNOWN  $9435           ; Unknown 9xxx instruction
$5F0    $D08C   DRW      V0, V8, #C      ; Draw 12-byte sprite at V0, V8
$5F2    $8A81   OR       VA, V8          ; VA |= V8
$5F4    $CC74   RND      VC, #74         ; VC = random & 74
$5F6    $DCE1   DRW      VC, VE, #1      ; Draw 1-byte sprite at VC, VE
$5F8    $1AD1   JP       $AD1            ; Jump to AD1
$5FA    $B8C2   JP       V0, $8C2        ; Jump to V0 + 8C2
$5FC    $C69C   RND      V6, #9C         ; V6 = random & 9C
$5FE    $DCD9   DRW      VC, VD, #9      ; Draw 9-byte sprite at VC, VD
$600    $F27E   UNKNOWN  F27E            ; Unknown Fxxx instruction
$602    $946F   UNKNOWN  $946F           ; Unknown 9xxx instruction
$604    $81B5   SUB      V1, VB          ; V1 -= VB, VF = !borrow
$606    $018A   SYS      $18A            ; System call to 18A
$608    $684B   LD       V8, #4B         ; Load 75 into V8
$60A    $2BC8   CALL     $BC8            ; Call subroutine at BC8
$60C    $0832   SYS      $832            ; System call to 832
$60E    $6172   LD       V1, #72         ; Load 114 into V1
$610    $D8F1   DRW      V8, VF, #1      ; Draw 1-byte sprite at V8, VF
$612    $53AC   UNKNOWN  $53AC           ; Unknown 5xxx instruction
$614    $15C6   JP       $5C6            ; Jump to 5C6
$616    $1D72   JP       $D72            ; Jump to D72
$618    $E6AD   UNKNOWN  $E6AD           ; Unknown Exxx instruction
$61A    $5E21   UNKNOWN  $5E21           ; Unknown 5xxx instruction
$61C    $6FA7   LD       VF, #A7         ; Load 167 into VF
$61E    $BB32   JP       V0, $B32        ; Jump to V0 + B32
$620    $7BB8   ADD      VB, #B8         ; Add 184 to VB
$622    $5245   UNKNOWN  $5245           ; Unknown 5xxx instruction
$624    $295C   CALL     $95C            ; Call subroutine at 95C
$626    $46B5   SNE      V6, #B5         ; Skip if V6 != 181
$628    $E583   UNKNOWN  $E583           ; Unknown Exxx instruction
$62A    $9396   UNKNOWN  $9396           ; Unknown 9xxx instruction
$62C    $CB18   RND      VB, #18         ; VB = random & 18
$62E    $6C04   LD       VC, #04         ; Load 4 into VC
$630    $249C   CALL     $49C            ; Call subroutine at 49C
$632    $73FF   ADD      V3, #FF         ; Add 255 to V3
$634    $936F   UNKNOWN  $936F           ; Unknown 9xxx instruction
$636    $DA07   DRW      VA, V0, #7      ; Draw 7-byte sprite at VA, V0
$638    $04F9   SYS      $4F9            ; System call to 4F9
$63A    $1A03   JP       $A03            ; Jump to A03
$63C    $3335   SE       V3, #35         ; Skip if V3 == 53
$63E    $1F62   JP       $F62            ; Jump to F62
$640    $B3C2   JP       V0, $3C2        ; Jump to V0 + 3C2
$642    $1000   JP       $000            ; Jump to 000
$644    $8F70   LD       VF, V7          ; VF = V7
$646    $E123   UNKNOWN  $E123           ; Unknown Exxx instruction
$648    $9CF0   SNE      VC, VF          ; Skip if VC != VF
$64A    $F18B   UNKNOWN  F18B            ; Unknown Fxxx instruction
$64C    $EE80   UNKNOWN  $EE80           ; Unknown Exxx instruction
$64E    $9EB8   UNKNOWN  $9EB8           ; Unknown 9xxx instruction
$650    $479F   SNE      V7, #9F         ; Skip if V7 != 159
$652    $175E   JP       $75E            ; Jump to 75E
$654    $01C9   SYS      $1C9            ; System call to 1C9
$656    $8511   OR       V5, V1          ; V5 |= V1
$658    $A320   LD       I, $320         ; Load 320 into I
$65A    $DB2F   DRW      VB, V2, #F      ; Draw 15-byte sprite at VB, V2
$65C    $8A91   OR       VA, V9          ; VA |= V9
$65E    $4D74   SNE      VD, #74         ; Skip if VD != 116
$660    $A565   LD       I, $565         ; Load 565 into I
$662    $DCD9   DRW      VC, VD, #9      ; Draw 9-byte sprite at VC, VD
$664    $7009   ADD      V0, #09         ; Add 9 to V0
$666    $ED2C   UNKNOWN  $ED2C           ; Unknown Exxx instruction
$668    $D9CB   DRW      V9, VC, #B      ; Draw 11-byte sprite at V9, VC
$66A    $1789   JP       $789            ; Jump to 789
$66C    $3CAC   SE       VC, #AC         ; Skip if VC == 172
$66E    $4E0B   SNE      VE, #0B         ; Skip if VE != 11
$670    $5CAF   UNKNOWN  $5CAF           ; Unknown 5xxx instruction
$672    $0F1F   SYS      $F1F            ; System call to F1F
$674    $5436   UNKNOWN  $5436           ; Unknown 5xxx instruction
$676    $40D6   SNE      V0, #D6         ; Skip if V0 != 214
$678    $95E0   SNE      V5, VE          ; Skip if V5 != VE
$67A    $2CF1   CALL     $CF1            ; Call subroutine at CF1
$67C    $E9F5   UNKNOWN  $E9F5           ; Unknown Exxx instruction
$67E    $4554   SNE      V5, #54         ; Skip if V5 != 84
$680    $E20F   UNKNOWN  $E20F           ; Unknown Exxx instruction
$682    $BA6C   JP       V0, $A6C        ; Jump to V0 + A6C
$684    $812E   SHL      V1              ; V1 <<= 1, VF = MSB
$686    $381B   SE       V8, #1B         ; Skip if V8 == 27
$688    $8D55   SUB      VD, V5          ; VD -= V5, VF = !borrow
$68A    $EEE8   UNKNOWN  $EEE8           ; Unknown Exxx instruction
$68C    $BDD7   JP       V0, $DD7        ; Jump to V0 + DD7
$68E    $0A0C   SYS      $A0C            ; System call to A0C
$690    $71BD   ADD      V1, #BD         ; Add 189 to V1
$692    $E22B   UNKNOWN  $E22B           ; Unknown Exxx instruction
$694    $90C1   UNKNOWN  $90C1           ; Unknown 9xxx instruction
$696    $B0C4   JP       V0, $0C4        ; Jump to V0 + 0C4
$698    $DFF2   DRW      VF, VF, #2      ; Draw 2-byte sprite at VF, VF
$69A    $E05A   UNKNOWN  $E05A           ; Unknown Exxx instruction
$69C    $B082   JP       V0, $082        ; Jump to V0 + 082
$69E    $25D8   CALL     $5D8            ; Call subroutine at 5D8
$6A0    $C59D   RND      V5, #9D         ; V5 = random & 9D
$6A2    $D156   DRW      V1, V5, #6      ; Draw 6-byte sprite at V1, V5
$6A4    $342B   SE       V4, #2B         ; Skip if V4 == 43
$6A6    $8F73   XOR      VF, V7          ; VF ^= V7
$6A8    $05BC   SYS      $5BC            ; System call to 5BC
$6AA    $E424   UNKNOWN  $E424           ; Unknown Exxx instruction
$6AC    $FF10   UNKNOWN  FF10            ; Unknown Fxxx instruction
$6AE    $DC56   DRW      VC, V5, #6      ; Draw 6-byte sprite at VC, V5
$6B0    $CF25   RND      VF, #25         ; VF = random & 25
$6B2    $8A50   LD       VA, V5          ; VA = V5
$6B4    $3ACD   SE       VA, #CD         ; Skip if VA == 205
$6B6    $2C15   CALL     $C15            ; Call subroutine at C15
$6B8    $8D1F   UNKNOWN  8D1F            ; Unknown 8xxx instruction
$6BA    $3BFE   SE       VB, #FE         ; Skip if VB == 254
$6BC    $414F   SNE      V1, #4F         ; Skip if V1 != 79
$6BE    $7D0D   ADD      VD, #0D         ; Add 13 to VD
$6C0    $F596   UNKNOWN  F596            ; Unknown Fxxx instruction
$6C2    $240D   CALL     $40D            ; Call subroutine at 40D
$6C4    $FDFA   UNKNOWN  FDFA            ; Unknown Fxxx instruction
$6C6    $9F20   SNE      VF, V2          ; Skip if VF != V2
$6C8    $779B   ADD      V7, #9B         ; Add 155 to V7
$6CA    $87D0   LD       V7, VD          ; V7 = VD
$6CC    $40EB   SNE      V0, #EB         ; Skip if V0 != 235
$6CE    $6AB3   LD       VA, #B3         ; Load 179 into VA
$6D0    $BA85   JP       V0, $A85        ; Jump to V0 + A85
$6D2    $7F9B   ADD      VF, #9B         ; Add 155 to VF
$6D4    $3DE1   SE       VD, #E1         ; Skip if VD == 225
$6D6    $48DD   SNE      V8, #DD         ; Skip if V8 != 221
$6D8    $57F2   UNKNOWN  $57F2           ; Unknown 5xxx instruction
$6DA    $3F9B   SE       VF, #9B         ; Skip if VF == 155
$6DC    $D45C   DRW      V4, V5, #C      ; Draw 12-byte sprite at V4, V5
$6DE    $DD03   DRW      VD, V0, #3      ; Draw 3-byte sprite at VD, V0
$6E0    $1DC1   JP       $DC1            ; Jump to DC1
$6E2    $1DF5   JP       $DF5            ; Jump to DF5
$6E4    $807E   SHL      V0              ; V0 <<= 1, VF = MSB
$6E6    $8C57   SUBN     VC, V5          ; VC = V5 - VC, VF = !borrow
$6E8    $C656   RND      V6, #56         ; V6 = random & 56
$6EA    $31D8   SE       V1, #D8         ; Skip if V1 == 216
$6EC    $E2D7   UNKNOWN  $E2D7           ; Unknown Exxx instruction
$6EE    $E0F9   UNKNOWN  $E0F9           ; Unknown Exxx instruction
$6F0    $5EEE   UNKNOWN  $5EEE           ; Unknown 5xxx instruction
$6F2    $B1EA   JP       V0, $1EA        ; Jump to V0 + 1EA
$6F4    $12E9   JP       $2E9            ; Jump to 2E9
$6F6    $C983   RND      V9, #83         ; V9 = random & 83
$6F8    $56D7   UNKNOWN  $56D7           ; Unknown 5xxx instruction
$6FA    $D1BA   DRW      V1, VB, #A      ; Draw 10-byte sprite at V1, VB
$6FC    $458E   SNE      V5, #8E         ; Skip if V5 != 142
$6FE    $8862   AND      V8, V6          ; V8 &= V6
$700    $43EC   SNE      V3, #EC         ; Skip if V3 != 236
$702    $B98B   JP       V0, $98B        ; Jump to V0 + 98B
$704    $AE9D   LD       I, $E9D         ; Load E9D into I
$706    $FA93   UNKNOWN  FA93            ; Unknown Fxxx instruction
$708    $AD25   LD       I, $D25         ; Load D25 into I
$70A    $E642   UNKNOWN  $E642           ; Unknown Exxx instruction
$70C    $D7F7   DRW      V7, VF, #7      ; Draw 7-byte sprite at V7, VF
$70E    $DDA0   DRW      VD, VA, #0      ; Draw 0-byte sprite at VD, VA
$710    $FE71   UNKNOWN  FE71            ; Unknown Fxxx instruction
$712    $DF84   DRW      VF, V8, #4      ; Draw 4-byte sprite at VF, V8
$714    $4FB5   SNE      VF, #B5         ; Skip if VF != 181
$716    $FC43   UNKNOWN  FC43            ; Unknown Fxxx instruction
$718    $7A35   ADD      VA, #35         ; Add 53 to VA
$71A    $6736   LD       V7, #36         ; Load 54 into V7
$71C    $7211   ADD      V2, #11         ; Add 17 to V2
$71E    $9CDF   UNKNOWN  $9CDF           ; Unknown 9xxx instruction
$720    $A5B6   LD       I, $5B6         ; Load 5B6 into I
$722    $8560   LD       V5, V6          ; V5 = V6
$724    $7711   ADD      V7, #11         ; Add 17 to V7
$726    $AF49   LD       I, $F49         ; Load F49 into I
$728    $1AD7   JP       $AD7            ; Jump to AD7
$72A    $1F05   JP       $F05            ; Jump to F05
$72C    $7237   ADD      V2, #37         ; Add 55 to V2
$72E    $39A9   SE       V9, #A9         ; Skip if V9 == 169
$730    $D3B2   DRW      V3, VB, #2      ; Draw 2-byte sprite at V3, VB
$732    $4934   SNE      V9, #34         ; Skip if V9 != 52
$734    $C865   RND      V8, #65         ; V8 = random & 65
$736    $EDD8   UNKNOWN  $EDD8           ; Unknown Exxx instruction
$738    $9DFA   UNKNOWN  $9DFA           ; Unknown 9xxx instruction
$73A    $A487   LD       I, $487         ; Load 487 into I
$73C    $D31F   DRW      V3, V1, #F      ; Draw 15-byte sprite at V3, V1
$73E    $F204   UNKNOWN  F204            ; Unknown Fxxx instruction
$740    $A2A7   LD       I, $2A7         ; Load 2A7 into I
$742    $1FE2   JP       $FE2            ; Jump to FE2
$744    $2654   CALL     $654            ; Call subroutine at 654
$746    $FD91   UNKNOWN  FD91            ; Unknown Fxxx instruction
$748    $AF59   LD       I, $F59         ; Load F59 into I
$74A    $BFBC   JP       V0, $FBC        ; Jump to V0 + FBC
$74C    $5057   UNKNOWN  $5057           ; Unknown 5xxx instruction
$74E    $4173   SNE      V1, #73         ; Skip if V1 != 115
$750    $F0BA   UNKNOWN  F0BA            ; Unknown Fxxx instruction
$752    $2E33   CALL     $E33            ; Call subroutine at E33
$754    $BF40   JP       V0, $F40        ; Jump to V0 + F40
$756    $6C6E   LD       VC, #6E         ; Load 110 into VC
$758    $63BD   LD       V3, #BD         ; Load 189 into V3
$75A    $89A3   XOR      V9, VA          ; V9 ^= VA
$75C    $71CB   ADD      V1, #CB         ; Add 203 to V1
$75E    $876B   UNKNOWN  876B            ; Unknown 8xxx instruction
$760    $5AAB   UNKNOWN  $5AAB           ; Unknown 5xxx instruction
$762    $3B58   SE       VB, #58         ; Skip if VB == 88
$764    $1E6B   JP       $E6B            ; Jump to E6B
$766    $81D1   OR       V1, VD          ; V1 |= VD
$768    $15B5   JP       $5B5            ; Jump to 5B5
$76A    $2BE1   CALL     $BE1            ; Call subroutine at BE1
$76C    $E4F5   UNKNOWN  $E4F5           ; Unknown Exxx instruction
$76E    $860B   UNKNOWN  860B            ; Unknown 8xxx instruction
$770    $EEAB   UNKNOWN  $EEAB           ; Unknown Exxx instruction
$772    $4969   SNE      V9, #69         ; Skip if V9 != 105
$774    $6211   LD       V2, #11         ; Load 17 into V2
$776    $624F   LD       V2, #4F         ; Load 79 into V2
$778    $5407   UNKNOWN  $5407           ; Unknown 5xxx instruction
$77A    $A050   LD       I, $050         ; Load 050 into I
$77C    $4719   SNE      V7, #19         ; Skip if V7 != 25
$77E    $1337   JP       $337            ; Jump to 337
$780    $31BF   SE       V1, #BF         ; Skip if V1 == 191
$782    $2B8B   CALL     $B8B            ; Call subroutine at B8B
$784    $FA1F   UNKNOWN  FA1F            ; Unknown Fxxx instruction
$786    $A80C   LD       I, $80C         ; Load 80C into I
$788    $2560   CALL     $560            ; Call subroutine at 560
$78A    $0A1A   SYS      $A1A            ; System call to A1A
$78C    $E198   UNKNOWN  $E198           ; Unknown Exxx instruction
$78E    $6115   LD       V1, #15         ; Load 21 into V1
$790    $EEC5   UNKNOWN  $EEC5           ; Unknown Exxx instruction
$792    $DE98   DRW      VE, V9, #8      ; Draw 8-byte sprite at VE, V9
$794    $3CDC   SE       VC, #DC         ; Skip if VC == 220
$796    $41B1   SNE      V1, #B1         ; Skip if V1 != 177
$798    $8B87   SUBN     VB, V8          ; VB = V8 - VB, VF = !borrow
$79A    $4D22   SNE      VD, #22         ; Skip if VD != 34
$79C    $A5A2   LD       I, $5A2         ; Load 5A2 into I
$79E    $3B9E   SE       VB, #9E         ; Skip if VB == 158
$7A0    $7BA0   ADD      VB, #A0         ; Add 160 to VB
$7A2    $9308   UNKNOWN  $9308           ; Unknown 9xxx instruction
$7A4    $7491   ADD      V4, #91         ; Add 145 to V4
$7A6    $E087   UNKNOWN  $E087           ; Unknown Exxx instruction
$7A8    $5E7D   UNKNOWN  $5E7D           ; Unknown 5xxx instruction
$7AA    $9A20   SNE      VA, V2          ; Skip if VA != V2
$7AC    $6D8B   LD       VD, #8B         ; Load 139 into VD
$7AE    $84B4   ADD      V4, VB          ; V4 += VB, VF = carry
$7B0    $0361   SYS      $361            ; System call to 361
$7B2    $49D6   SNE      V9, #D6         ; Skip if V9 != 214
$7B4    $5EE4   UNKNOWN  $5EE4           ; Unknown 5xxx instruction
$7B6    $E449   UNKNOWN  $E449           ; Unknown Exxx instruction
$7B8    $6D51   LD       VD, #51         ; Load 81 into VD
$7BA    $3C37   SE       VC, #37         ; Skip if VC == 55
$7BC    $F9BE   UNKNOWN  F9BE            ; Unknown Fxxx instruction
$7BE    $7BA2   ADD      VB, #A2         ; Add 162 to VB
$7C0    $20B8   CALL     $0B8            ; Call subroutine at 0B8
$7C2    $F853   UNKNOWN  F853            ; Unknown Fxxx instruction
$7C4    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$7C6    $C650   RND      V6, #50         ; V6 = random & 50
$7C8    $B09A   JP       V0, $09A        ; Jump to V0 + 09A
$7CA    $C32F   RND      V3, #2F         ; V3 = random & 2F
$7CC    $2666   CALL     $666            ; Call subroutine at 666
$7CE    $5FE5   UNKNOWN  $5FE5           ; Unknown 5xxx instruction
$7D0    $45BC   SNE      V5, #BC         ; Skip if V5 != 188
$7D2    $3155   SE       V1, #55         ; Skip if V1 == 85
$7D4    $928B   UNKNOWN  $928B           ; Unknown 9xxx instruction
$7D6    $F7EB   UNKNOWN  F7EB            ; Unknown Fxxx instruction
$7D8    $F694   UNKNOWN  F694            ; Unknown Fxxx instruction
$7DA    $8D25   SUB      VD, V2          ; VD -= V2, VF = !borrow
$7DC    $2F33   CALL     $F33            ; Call subroutine at F33
$7DE    $4071   SNE      V0, #71         ; Skip if V0 != 113
$7E0    $345F   SE       V4, #5F         ; Skip if V4 == 95
$7E2    $482B   SNE      V8, #2B         ; Skip if V8 != 43
$7E4    $3843   SE       V8, #43         ; Skip if V8 == 67
$7E6    $52B2   UNKNOWN  $52B2           ; Unknown 5xxx instruction
$7E8    $54EE   UNKNOWN  $54EE           ; Unknown 5xxx instruction
$7EA    $1627   JP       $627            ; Jump to 627
$7EC    $3D8D   SE       VD, #8D         ; Skip if VD == 141
$7EE    $A09B   LD       I, $09B         ; Load 09B into I
$7F0    $70DC   ADD      V0, #DC         ; Add 220 to V0
$7F2    $DF9D   DRW      VF, V9, #D      ; Draw 13-byte sprite at VF, V9
$7F4    $6E75   LD       VE, #75         ; Load 117 into VE
$7F6    $4B41   SNE      VB, #41         ; Skip if VB != 65
$7F8    $E831   UNKNOWN  $E831           ; Unknown Exxx instruction
$7FA    $0D02   SYS      $D02            ; System call to D02
$7FC    $5917   UNKNOWN  $5917           ; Unknown 5xxx instruction
$7FE    $6FA8   LD       VF, #A8         ; Load 168 into VF
$800    $7BA1   ADD      VB, #A1         ; Add 161 to VB
$802    $5900   SE       V9, V0          ; Skip if V9 == V0
$804    $857E   SHL      V5              ; V5 <<= 1, VF = MSB
$806    $57FE   UNKNOWN  $57FE           ; Unknown 5xxx instruction
$808    $A8E8   LD       I, $8E8         ; Load 8E8 into I
$80A    $8D5A   UNKNOWN  8D5A            ; Unknown 8xxx instruction
$80C    $CC61   RND      VC, #61         ; VC = random & 61
$80E    $2F38   CALL     $F38            ; Call subroutine at F38
$810    $8ADE   SHL      VA              ; VA <<= 1, VF = MSB
$812    $B1FD   JP       V0, $1FD        ; Jump to V0 + 1FD
$814    $C12F   RND      V1, #2F         ; V1 = random & 2F
$816    $3BEA   SE       VB, #EA         ; Skip if VB == 234
$818    $F6D3   UNKNOWN  F6D3            ; Unknown Fxxx instruction
$81A    $3FB3   SE       VF, #B3         ; Skip if VF == 179
$81C    $3C26   SE       VC, #26         ; Skip if VC == 38
$81E    $8640   LD       V6, V4          ; V6 = V4
$820    $F0BA   UNKNOWN  F0BA            ; Unknown Fxxx instruction
$822    $EB05   UNKNOWN  $EB05           ; Unknown Exxx instruction
$824    $B9D2   JP       V0, $9D2        ; Jump to V0 + 9D2
$826    $FDDA   UNKNOWN  FDDA            ; Unknown Fxxx instruction
$828    $7C8B   ADD      VC, #8B         ; Add 139 to VC
$82A    $2C82   CALL     $C82            ; Call subroutine at C82
$82C    $737C   ADD      V3, #7C         ; Add 124 to V3
$82E    $C3C8   RND      V3, #C8         ; V3 = random & C8
$830    $BFBC   JP       V0, $FBC        ; Jump to V0 + FBC
$832    $8A72   AND      VA, V7          ; VA &= V7
$834    $7005   ADD      V0, #05         ; Add 5 to V0
$836    $1C2C   JP       $C2C            ; Jump to C2C
$838    $B7C7   JP       V0, $7C7        ; Jump to V0 + 7C7
$83A    $32BC   SE       V2, #BC         ; Skip if V2 == 188
$83C    $3D06   SE       VD, #06         ; Skip if VD == 6
$83E    $7D8C   ADD      VD, #8C         ; Add 140 to VD
$840    $6542   LD       V5, #42         ; Load 66 into V5
$842    $7DF9   ADD      VD, #F9         ; Add 249 to VD
$844    $3EB1   SE       VE, #B1         ; Skip if VE == 177
$846    $1BAE   JP       $BAE            ; Jump to BAE
$848    $E18B   UNKNOWN  $E18B           ; Unknown Exxx instruction
$84A    $DA52   DRW      VA, V5, #2      ; Draw 2-byte sprite at VA, V5
$84C    $6026   LD       V0, #26         ; Load 38 into V0
$84E    $D609   DRW      V6, V0, #9      ; Draw 9-byte sprite at V6, V0
$850    $51B2   UNKNOWN  $51B2           ; Unknown 5xxx instruction
$852    $D2CF   DRW      V2, VC, #F      ; Draw 15-byte sprite at V2, VC
$854    $CC9B   RND      VC, #9B         ; VC = random & 9B
$856    $EAAC   UNKNOWN  $EAAC           ; Unknown Exxx instruction
$858    $2883   CALL     $883            ; Call subroutine at 883
$85A    $608B   LD       V0, #8B         ; Load 139 into V0
$85C    $C7C3   RND      V7, #C3         ; V7 = random & C3
$85E    $450E   SNE      V5, #0E         ; Skip if V5 != 14
$860    $86E1   OR       V6, VE          ; V6 |= VE
$862    $9596   UNKNOWN  $9596           ; Unknown 9xxx instruction
$864    $E48F   UNKNOWN  $E48F           ; Unknown Exxx instruction
$866    $7F82   ADD      VF, #82         ; Add 130 to VF
$868    $0525   SYS      $525            ; System call to 525
$86A    $80FA   UNKNOWN  80FA            ; Unknown 8xxx instruction
$86C    $49C6   SNE      V9, #C6         ; Skip if V9 != 198
$86E    $3718   SE       V7, #18         ; Skip if V7 == 24
$870    $DB44   DRW      VB, V4, #4      ; Draw 4-byte sprite at VB, V4
$872    $CF0F   RND      VF, #0F         ; VF = random & 0F
$874    $C93C   RND      V9, #3C         ; V9 = random & 3C
$876    $24AE   CALL     $4AE            ; Call subroutine at 4AE
$878    $942C   UNKNOWN  $942C           ; Unknown 9xxx instruction
$87A    $4DD4   SNE      VD, #D4         ; Skip if VD != 212
$87C    $5689   UNKNOWN  $5689           ; Unknown 5xxx instruction
$87E    $5A47   UNKNOWN  $5A47           ; Unknown 5xxx instruction
$880    $E835   UNKNOWN  $E835           ; Unknown Exxx instruction
$882    $569F   UNKNOWN  $569F           ; Unknown 5xxx instruction
$884    $C852   RND      V8, #52         ; V8 = random & 52
$886    $43D3   SNE      V3, #D3         ; Skip if V3 != 211
$888    $37C6   SE       V7, #C6         ; Skip if V7 == 198
$88A    $BE02   JP       V0, $E02        ; Jump to V0 + E02
$88C    $046B   SYS      $46B            ; System call to 46B
$88E    $98DB   UNKNOWN  $98DB           ; Unknown 9xxx instruction
$890    $544B   UNKNOWN  $544B           ; Unknown 5xxx instruction
$892    $DA65   DRW      VA, V6, #5      ; Draw 5-byte sprite at VA, V6
$894    $8A14   ADD      VA, V1          ; VA += V1, VF = carry
$896    $47C4   SNE      V7, #C4         ; Skip if V7 != 196
$898    $6D1F   LD       VD, #1F         ; Load 31 into VD
$89A    $25B2   CALL     $5B2            ; Call subroutine at 5B2
$89C    $4286   SNE      V2, #86         ; Skip if V2 != 134
$89E    $0E14   SYS      $E14            ; System call to E14
$8A0    $F3F7   UNKNOWN  F3F7            ; Unknown Fxxx instruction
$8A2    $ADA2   LD       I, $DA2         ; Load DA2 into I
$8A4    $4413   SNE      V4, #13         ; Skip if V4 != 19
$8A6    $C9F2   RND      V9, #F2         ; V9 = random & F2
$8A8    $4A88   SNE      VA, #88         ; Skip if VA != 136
$8AA    $61E1   LD       V1, #E1         ; Load 225 into V1
$8AC    $BECF   JP       V0, $ECF        ; Jump to V0 + ECF
$8AE    $329C   SE       V2, #9C         ; Skip if V2 == 156
$8B0    $702F   ADD      V0, #2F         ; Add 47 to V0
$8B2    $EEB9   UNKNOWN  $EEB9           ; Unknown Exxx instruction
$8B4    $E8EF   UNKNOWN  $E8EF           ; Unknown Exxx instruction
$8B6    $15B5   JP       $5B5            ; Jump to 5B5
$8B8    $7D2D   ADD      VD, #2D         ; Add 45 to VD
$8BA    $31A3   SE       V1, #A3         ; Skip if V1 == 163
$8BC    $46ED   SNE      V6, #ED         ; Skip if V6 != 237
$8BE    $8D0C   UNKNOWN  8D0C            ; Unknown 8xxx instruction
$8C0    $41DF   SNE      V1, #DF         ; Skip if V1 != 223
$8C2    $1CB6   JP       $CB6            ; Jump to CB6
$8C4    $4574   SNE      V5, #74         ; Skip if V5 != 116
$8C6    $E475   UNKNOWN  $E475           ; Unknown Exxx instruction
$8C8    $34B7   SE       V4, #B7         ; Skip if V4 == 183
$8CA    $09B2   SYS      $9B2            ; System call to 9B2
$8CC    $8E47   SUBN     VE, V4          ; VE = V4 - VE, VF = !borrow
$8CE    $A872   LD       I, $872         ; Load 872 into I
$8D0    $AA4A   LD       I, $A4A         ; Load A4A into I
$8D2    $32D2   SE       V2, #D2         ; Skip if V2 == 210
$8D4    $9BE1   UNKNOWN  $9BE1           ; Unknown 9xxx instruction
$8D6    $4D09   SNE      VD, #09         ; Skip if VD != 9
$8D8    $E09D   UNKNOWN  $E09D           ; Unknown Exxx instruction
$8DA    $249C   CALL     $49C            ; Call subroutine at 49C
$8DC    $72B1   ADD      V2, #B1         ; Add 177 to V2
$8DE    $827E   SHL      V2              ; V2 <<= 1, VF = MSB
$8E0    $A028   LD       I, $028         ; Load 028 into I
$8E2    $91A4   UNKNOWN  $91A4           ; Unknown 9xxx instruction
$8E4    $C9DA   RND      V9, #DA         ; V9 = random & DA
$8E6    $C905   RND      V9, #05         ; V9 = random & 05
$8E8    $F030   UNKNOWN  F030            ; Unknown Fxxx instruction
$8EA    $FBD5   UNKNOWN  FBD5            ; Unknown Fxxx instruction
$8EC    $DA4B   DRW      VA, V4, #B      ; Draw 11-byte sprite at VA, V4
$8EE    $BA0F   JP       V0, $A0F        ; Jump to V0 + A0F
$8F0    $5723   UNKNOWN  $5723           ; Unknown 5xxx instruction
$8F2    $25F8   CALL     $5F8            ; Call subroutine at 5F8
$8F4    $1B83   JP       $B83            ; Jump to B83
$8F6    $3B65   SE       VB, #65         ; Skip if VB == 101
$8F8    $44E0   SNE      V4, #E0         ; Skip if V4 != 224
$8FA    $841F   UNKNOWN  841F            ; Unknown 8xxx instruction
$8FC    $85C4   ADD      V5, VC          ; V5 += VC, VF = carry
$8FE    $927B   UNKNOWN  $927B           ; Unknown 9xxx instruction
$900    $1E22   JP       $E22            ; Jump to E22
$902    $5847   UNKNOWN  $5847           ; Unknown 5xxx instruction
$904    $0031   SYS      $031            ; System call to 031
$906    $146A   JP       $46A            ; Jump to 46A
$908    $7756   ADD      V7, #56         ; Add 86 to V7
$90A    $0EFD   SYS      $EFD            ; System call to EFD
$90C    $36F8   SE       V6, #F8         ; Skip if V6 == 248
$90E    $3DE6   SE       VD, #E6         ; Skip if VD == 230
$910    $B1D2   JP       V0, $1D2        ; Jump to V0 + 1D2
$912    $DBCC   DRW      VB, VC, #C      ; Draw 12-byte sprite at VB, VC
$914    $B9BC   JP       V0, $9BC        ; Jump to V0 + 9BC
$916    $94DC   UNKNOWN  $94DC           ; Unknown 9xxx instruction
$918    $0C84   SYS      $C84            ; System call to C84
$91A    $F876   UNKNOWN  F876            ; Unknown Fxxx instruction
$91C    $CA25   RND      VA, #25         ; VA = random & 25
$91E    $C564   RND      V5, #64         ; V5 = random & 64
$920    $3613   SE       V6, #13         ; Skip if V6 == 19
$922    $C9D0   RND      V9, #D0         ; V9 = random & D0
$924    $6BA9   LD       VB, #A9         ; Load 169 into VB
$926    $5601   UNKNOWN  $5601           ; Unknown 5xxx instruction
$928    $BCC1   JP       V0, $CC1        ; Jump to V0 + CC1
$92A    $CDDB   RND      VD, #DB         ; VD = random & DB
$92C    $8AE0   LD       VA, VE          ; VA = VE
$92E    $25DB   CALL     $5DB            ; Call subroutine at 5DB
$930    $A4F7   LD       I, $4F7         ; Load 4F7 into I
$932    $E823   UNKNOWN  $E823           ; Unknown Exxx instruction
$934    $6AE4   LD       VA, #E4         ; Load 228 into VA
$936    $DB33   DRW      VB, V3, #3      ; Draw 3-byte sprite at VB, V3
$938    $A07F   LD       I, $07F         ; Load 07F into I
$93A    $BFEF   JP       V0, $FEF        ; Jump to V0 + FEF
$93C    $DB76   DRW      VB, V7, #6      ; Draw 6-byte sprite at VB, V7
$93E    $E263   UNKNOWN  $E263           ; Unknown Exxx instruction
$940    $44B0   SNE      V4, #B0         ; Skip if V4 != 176
$942    $D8B0   DRW      V8, VB, #0      ; Draw 0-byte sprite at V8, VB
$944    $3031   SE       V0, #31         ; Skip if V0 == 49
$946    $15DD   JP       $5DD            ; Jump to 5DD
$948    $DEF5   DRW      VE, VF, #5      ; Draw 5-byte sprite at VE, VF
$94A    $0AD5   SYS      $AD5            ; System call to AD5
$94C    $1D31   JP       $D31            ; Jump to D31
$94E    $2974   CALL     $974            ; Call subroutine at 974
$950    $B520   JP       V0, $520        ; Jump to V0 + 520
$952    $65C8   LD       V5, #C8         ; Load 200 into V5
$954    $12F5   JP       $2F5            ; Jump to 2F5
$956    $14BD   JP       $4BD            ; Jump to 4BD
$958    $DA47   DRW      VA, V4, #7      ; Draw 7-byte sprite at VA, V4
$95A    $C62F   RND      V6, #2F         ; V6 = random & 2F
$95C    $6BA9   LD       VB, #A9         ; Load 169 into VB
$95E    $7B37   ADD      VB, #37         ; Add 55 to VB
$960    $3077   SE       V0, #77         ; Skip if V0 == 119
$962    $425A   SNE      V2, #5A         ; Skip if V2 != 90
$964    $BC1A   JP       V0, $C1A        ; Jump to V0 + C1A
$966    $0827   SYS      $827            ; System call to 827
$968    $2726   CALL     $726            ; Call subroutine at 726
$96A    $8648   UNKNOWN  8648            ; Unknown 8xxx instruction
$96C    $7FAD   ADD      VF, #AD         ; Add 173 to VF
$96E    $11EE   JP       $1EE            ; Jump to 1EE
$970    $2D49   CALL     $D49            ; Call subroutine at D49
$972    $3027   SE       V0, #27         ; Skip if V0 == 39
$974    $1F89   JP       $F89            ; Jump to F89
$976    $A012   LD       I, $012         ; Load 012 into I
$978    $7E21   ADD      VE, #21         ; Add 33 to VE
$97A    $576D   UNKNOWN  $576D           ; Unknown 5xxx instruction
$97C    $F562   UNKNOWN  F562            ; Unknown Fxxx instruction
$97E    $AAD6   LD       I, $AD6         ; Load AD6 into I
$980    $FFDB   UNKNOWN  FFDB            ; Unknown Fxxx instruction
$982    $8872   AND      V8, V7          ; V8 &= V7
$984    $ADF3   LD       I, $DF3         ; Load DF3 into I
$986    $56C7   UNKNOWN  $56C7           ; Unknown 5xxx instruction
$988    $152D   JP       $52D            ; Jump to 52D
$98A    $7979   ADD      V9, #79         ; Add 121 to V9
$98C    $AFD6   LD       I, $FD6         ; Load FD6 into I
$98E    $9D4B   UNKNOWN  $9D4B           ; Unknown 9xxx instruction
$990    $8117   SUBN     V1, V1          ; V1 = V1 - V1, VF = !borrow
$992    $3685   SE       V6, #85         ; Skip if V6 == 133
$994    $80C4   ADD      V0, VC          ; V0 += VC, VF = carry
$996    $4332   SNE      V3, #32         ; Skip if V3 != 50
$998    $59CA   UNKNOWN  $59CA           ; Unknown 5xxx instruction
$99A    $82E9   UNKNOWN  82E9            ; Unknown 8xxx instruction
$99C    $B4DE   JP       V0, $4DE        ; Jump to V0 + 4DE
$99E    $9200   SNE      V2, V0          ; Skip if V2 != V0
$9A0    $6F57   LD       VF, #57         ; Load 87 into VF
$9A2    $43D0   SNE      V3, #D0         ; Skip if V3 != 208
$9A4    $6378   LD       V3, #78         ; Load 120 into V3
$9A6    $707E   ADD      V0, #7E         ; Add 126 to V0
$9A8    $9BEF   UNKNOWN  $9BEF           ; Unknown 9xxx instruction
$9AA    $01B0   SYS      $1B0            ; System call to 1B0
$9AC    $8159   UNKNOWN  8159            ; Unknown 8xxx instruction
$9AE    $951B   UNKNOWN  $951B           ; Unknown 9xxx instruction
$9B0    $A560   LD       I, $560         ; Load 560 into I
$9B2    $BE62   JP       V0, $E62        ; Jump to V0 + E62
$9B4    $2ABE   CALL     $ABE            ; Call subroutine at ABE
$9B6    $912D   UNKNOWN  $912D           ; Unknown 9xxx instruction
$9B8    $CAEC   RND      VA, #EC         ; VA = random & EC
$9BA    $60E1   LD       V0, #E1         ; Load 225 into V0
$9BC    $0B35   SYS      $B35            ; System call to B35
$9BE    $B628   JP       V0, $628        ; Jump to V0 + 628
$9C0    $F52D   UNKNOWN  F52D            ; Unknown Fxxx instruction
$9C2    $CC3D   RND      VC, #3D         ; VC = random & 3D
$9C4    $9FFE   UNKNOWN  $9FFE           ; Unknown 9xxx instruction
$9C6    $CF02   RND      VF, #02         ; VF = random & 02
$9C8    $9A2D   UNKNOWN  $9A2D           ; Unknown 9xxx instruction
$9CA    $45B3   SNE      V5, #B3         ; Skip if V5 != 179
$9CC    $CE7C   RND      VE, #7C         ; VE = random & 7C
$9CE    $E48D   UNKNOWN  $E48D           ; Unknown Exxx instruction
$9D0    $F7D8   UNKNOWN  F7D8            ; Unknown Fxxx instruction
$9D2    $F874   UNKNOWN  F874            ; Unknown Fxxx instruction
$9D4    $1246   JP       $246            ; Jump to 246
$9D6    $4A45   SNE      VA, #45         ; Skip if VA != 69
$9D8    $98C7   UNKNOWN  $98C7           ; Unknown 9xxx instruction
$9DA    $622A   LD       V2, #2A         ; Load 42 into V2
$9DC    $D7B4   DRW      V7, VB, #4      ; Draw 4-byte sprite at V7, VB
$9DE    $51DF   UNKNOWN  $51DF           ; Unknown 5xxx instruction
$9E0    $DD02   DRW      VD, V0, #2      ; Draw 2-byte sprite at VD, V0
$9E2    $B201   JP       V0, $201        ; Jump to V0 + 201
$9E4    $DD1F   DRW      VD, V1, #F      ; Draw 15-byte sprite at VD, V1
$9E6    $7340   ADD      V3, #40         ; Add 64 to V3
$9E8    $3300   SE       V3, #00         ; Skip if V3 == 0
$9EA    $A8BB   LD       I, $8BB         ; Load 8BB into I
$9EC    $5903   UNKNOWN  $5903           ; Unknown 5xxx instruction
$9EE    $6938   LD       V9, #38         ; Load 56 into V9
$9F0    $269E   CALL     $69E            ; Call subroutine at 69E
$9F2    $BB5D   JP       V0, $B5D        ; Jump to V0 + B5D
$9F4    $6CAE   LD       VC, #AE         ; Load 174 into VC
$9F6    $9AEE   UNKNOWN  $9AEE           ; Unknown 9xxx instruction
$9F8    $A092   LD       I, $092         ; Load 092 into I
$9FA    $C2F6   RND      V2, #F6         ; V2 = random & F6
$9FC    $27D0   CALL     $7D0            ; Call subroutine at 7D0
$9FE    $958F   UNKNOWN  $958F           ; Unknown 9xxx instruction
$A00    $8D99   UNKNOWN  8D99            ; Unknown 8xxx instruction
$A02    $5BC3   UNKNOWN  $5BC3           ; Unknown 5xxx instruction
$A04    $A219   LD       I, $219         ; Load 219 into I
$A06    $9AFD   UNKNOWN  $9AFD           ; Unknown 9xxx instruction
$A08    $C712   RND      V7, #12         ; V7 = random & 12
$A0A    $9D9B   UNKNOWN  $9D9B           ; Unknown 9xxx instruction
$A0C    $E208   UNKNOWN  $E208           ; Unknown Exxx instruction
$A0E    $F23B   UNKNOWN  F23B            ; Unknown Fxxx instruction
$A10    $44BF   SNE      V4, #BF         ; Skip if V4 != 191
$A12    $C172   RND      V1, #72         ; V1 = random & 72
$A14    $4D14   SNE      VD, #14         ; Skip if VD != 20
$A16    $222F   CALL     $22F            ; Call subroutine at 22F
$A18    $15F4   JP       $5F4            ; Jump to 5F4
$A1A    $C7AB   RND      V7, #AB         ; V7 = random & AB
$A1C    $50A8   UNKNOWN  $50A8           ; Unknown 5xxx instruction
$A1E    $19C1   JP       $9C1            ; Jump to 9C1
$A20    $468F   SNE      V6, #8F         ; Skip if V6 != 143
$A22    $0A8F   SYS      $A8F            ; System call to A8F
$A24    $2B85   CALL     $B85            ; Call subroutine at B85
$A26    $92E4   UNKNOWN  $92E4           ; Unknown 9xxx instruction
$A28    $898F   UNKNOWN  898F            ; Unknown 8xxx instruction
$A2A    $ACBA   LD       I, $CBA         ; Load CBA into I
$A2C    $FF34   UNKNOWN  FF34            ; Unknown Fxxx instruction
$A2E    $46EF   SNE      V6, #EF         ; Skip if V6 != 239
$A30    $4DFF   SNE      VD, #FF         ; Skip if VD != 255
$A32    $D980   DRW      V9, V8, #0      ; Draw 0-byte sprite at V9, V8
$A34    $0C9E   SYS      $C9E            ; System call to C9E
$A36    $4681   SNE      V6, #81         ; Skip if V6 != 129
$A38    $64FC   LD       V4, #FC         ; Load 252 into V4
$A3A    $2F87   CALL     $F87            ; Call subroutine at F87
$A3C    $3995   SE       V9, #95         ; Skip if V9 == 149
$A3E    $BA55   JP       V0, $A55        ; Jump to V0 + A55
$A40    $BE4C   JP       V0, $E4C        ; Jump to V0 + E4C
$A42    $BE7E   JP       V0, $E7E        ; Jump to V0 + E7E
$A44    $1587   JP       $587            ; Jump to 587
$A46    $6084   LD       V0, #84         ; Load 132 into V0
$A48    $D338   DRW      V3, V3, #8      ; Draw 8-byte sprite at V3, V3
$A4A    $B60D   JP       V0, $60D        ; Jump to V0 + 60D
$A4C    $44C9   SNE      V4, #C9         ; Skip if V4 != 201
$A4E    $70E8   ADD      V0, #E8         ; Add 232 to V0
$A50    $E9C0   UNKNOWN  $E9C0           ; Unknown Exxx instruction
$A52    $2234   CALL     $234            ; Call subroutine at 234
$A54    $B4D5   JP       V0, $4D5        ; Jump to V0 + 4D5
$A56    $62C3   LD       V2, #C3         ; Load 195 into V2
$A58    $2CC3   CALL     $CC3            ; Call subroutine at CC3
$A5A    $7EFF   ADD      VE, #FF         ; Add 255 to VE
$A5C    $70A3   ADD      V0, #A3         ; Add 163 to V0
$A5E    $83F1   OR       V3, VF          ; V3 |= VF
$A60    $2B74   CALL     $B74            ; Call subroutine at B74
$A62    $8773   XOR      V7, V7          ; V7 ^= V7
$A64    $25A9   CALL     $5A9            ; Call subroutine at 5A9
$A66    $AEA9   LD       I, $EA9         ; Load EA9 into I
$A68    $13DE   JP       $3DE            ; Jump to 3DE
$A6A    $6700   LD       V7, #00         ; Load 0 into V7
$A6C    $371F   SE       V7, #1F         ; Skip if V7 == 31
$A6E    $F097   UNKNOWN  F097            ; Unknown Fxxx instruction
$A70    $7CB2   ADD      VC, #B2         ; Add 178 to VC
$A72    $9877   UNKNOWN  $9877           ; Unknown 9xxx instruction
$A74    $4E9B   SNE      VE, #9B         ; Skip if VE != 155
$A76    $F1C5   UNKNOWN  F1C5            ; Unknown Fxxx instruction
$A78    $0A2B   SYS      $A2B            ; System call to A2B
$A7A    $F6FF   UNKNOWN  F6FF            ; Unknown Fxxx instruction
$A7C    $F13E   UNKNOWN  F13E            ; Unknown Fxxx instruction
$A7E    $FBA1   UNKNOWN  FBA1            ; Unknown Fxxx instruction
$A80    $3BBF   SE       VB, #BF         ; Skip if VB == 191
$A82    $C38B   RND      V3, #8B         ; V3 = random & 8B
$A84    $9734   UNKNOWN  $9734           ; Unknown 9xxx instruction
$A86    $B80B   JP       V0, $80B        ; Jump to V0 + 80B
$A88    $0E2C   SYS      $E2C            ; System call to E2C
$A8A    $E901   UNKNOWN  $E901           ; Unknown Exxx instruction
$A8C    $73C1   ADD      V3, #C1         ; Add 193 to V3
$A8E    $9C0B   UNKNOWN  $9C0B           ; Unknown 9xxx instruction
$A90    $D37F   DRW      V3, V7, #F      ; Draw 15-byte sprite at V3, V7
$A92    $E240   UNKNOWN  $E240           ; Unknown Exxx instruction
$A94    $B50F   JP       V0, $50F        ; Jump to V0 + 50F
$A96    $B88C   JP       V0, $88C        ; Jump to V0 + 88C
$A98    $B3C9   JP       V0, $3C9        ; Jump to V0 + 3C9
$A9A    $B0C1   JP       V0, $0C1        ; Jump to V0 + 0C1
$A9C    $A582   LD       I, $582         ; Load 582 into I
$A9E    $1586   JP       $586            ; Jump to 586
$AA0    $991E   UNKNOWN  $991E           ; Unknown 9xxx instruction
$AA2    $F79F   UNKNOWN  F79F            ; Unknown Fxxx instruction
$AA4    $7A70   ADD      VA, #70         ; Add 112 to VA
$AA6    $827A   UNKNOWN  827A            ; Unknown 8xxx instruction
$AA8    $5590   SE       V5, V9          ; Skip if V5 == V9
$AAA    $E674   UNKNOWN  $E674           ; Unknown Exxx instruction
$AAC    $FA5B   UNKNOWN  FA5B            ; Unknown Fxxx instruction
$AAE    $8973   XOR      V9, V7          ; V9 ^= V7
$AB0    $3902   SE       V9, #02         ; Skip if V9 == 2
$AB2    $E610   UNKNOWN  $E610           ; Unknown Exxx instruction
$AB4    $38DD   SE       V8, #DD         ; Skip if V8 == 221
$AB6    $60E0   LD       V0, #E0         ; Load 224 into V0
$AB8    $1812   JP       $812            ; Jump to 812
$ABA    $E550   UNKNOWN  $E550           ; Unknown Exxx instruction
$ABC    $C5CC   RND      V5, #CC         ; V5 = random & CC
$ABE    $3196   SE       V1, #96         ; Skip if V1 == 150
$AC0    $46CE   SNE      V6, #CE         ; Skip if V6 != 206
$AC2    $EAF6   UNKNOWN  $EAF6           ; Unknown Exxx instruction
$AC4    $C8B7   RND      V8, #B7         ; V8 = random & B7
$AC6    $14EF   JP       $4EF            ; Jump to 4EF
$AC8    $653D   LD       V5, #3D         ; Load 61 into V5
$ACA    $8175   SUB      V1, V7          ; V1 -= V7, VF = !borrow
$ACC    $AF6F   LD       I, $F6F         ; Load F6F into I
$ACE    $A6B0   LD       I, $6B0         ; Load 6B0 into I
$AD0    $7004   ADD      V0, #04         ; Add 4 to V0
$AD2    $74ED   ADD      V4, #ED         ; Add 237 to V4
$AD4    $92C0   SNE      V2, VC          ; Skip if V2 != VC
$AD6    $5108   UNKNOWN  $5108           ; Unknown 5xxx instruction
$AD8    $BDD2   JP       V0, $DD2        ; Jump to V0 + DD2
$ADA    $C230   RND      V2, #30         ; V2 = random & 30
$ADC    $0200   SYS      $200            ; System call to 200
$ADE    $040E   SYS      $40E            ; System call to 40E
$AE0    $4A91   SNE      VA, #91         ; Skip if VA != 145
$AE2    $6628   LD       V6, #28         ; Load 40 into V6
$AE4    $268D   CALL     $68D            ; Call subroutine at 68D
$AE6    $EA2A   UNKNOWN  $EA2A           ; Unknown Exxx instruction
$AE8    $0EFE   SYS      $EFE            ; System call to EFE
$AEA    $4315   SNE      V3, #15         ; Skip if V3 != 21
$AEC    $222D   CALL     $22D            ; Call subroutine at 22D
$AEE    $EF3D   UNKNOWN  $EF3D           ; Unknown Exxx instruction
$AF0    $30FE   SE       V0, #FE         ; Skip if V0 == 254
$AF2    $EFD3   UNKNOWN  $EFD3           ; Unknown Exxx instruction
$AF4    $A220   LD       I, $220         ; Load 220 into I
$AF6    $8B3C   UNKNOWN  8B3C            ; Unknown 8xxx instruction
$AF8    $8766   SHR      V7              ; V7 >>= 1, VF = LSB
$AFA    $41A5   SNE      V1, #A5         ; Skip if V1 != 165
$AFC    $2DDE   CALL     $DDE            ; Call subroutine at DDE
$AFE    $5BF5   UNKNOWN  $5BF5           ; Unknown 5xxx instruction
$B00    $A0CE   LD       I, $0CE         ; Load 0CE into I
$B02    $6E29   LD       VE, #29         ; Load 41 into VE
$B04    $28F7   CALL     $8F7            ; Call subroutine at 8F7
$B06    $D5E0   DRW      V5, VE, #0      ; Draw 0-byte sprite at V5, VE
$B08    $9554   UNKNOWN  $9554           ; Unknown 9xxx instruction
$B0A    $3CF5   SE       VC, #F5         ; Skip if VC == 245
$B0C    $0C70   SYS      $C70            ; System call to C70
$B0E    $A604   LD       I, $604         ; Load 604 into I
$B10    $1B7E   JP       $B7E            ; Jump to B7E
$B12    $8B8B   UNKNOWN  8B8B            ; Unknown 8xxx instruction
$B14    $3659   SE       V6, #59         ; Skip if V6 == 89
$B16    $7767   ADD      V7, #67         ; Add 103 to V7
$B18    $6F13   LD       VF, #13         ; Load 19 into VF
$B1A    $A26F   LD       I, $26F         ; Load 26F into I
$B1C    $C382   RND      V3, #82         ; V3 = random & 82
$B1E    $1379   JP       $379            ; Jump to 379
$B20    $96BD   UNKNOWN  $96BD           ; Unknown 9xxx instruction
$B22    $CE70   RND      VE, #70         ; VE = random & 70
$B24    $206B   CALL     $06B            ; Call subroutine at 06B
$B26    $3807   SE       V8, #07         ; Skip if V8 == 7
$B28    $135E   JP       $35E            ; Jump to 35E
$B2A    $AB2C   LD       I, $B2C         ; Load B2C into I
$B2C    $99CA   UNKNOWN  $99CA           ; Unknown 9xxx instruction
$B2E    $22D7   CALL     $2D7            ; Call subroutine at 2D7
$B30    $4AE4   SNE      VA, #E4         ; Skip if VA != 228
$B32    $8336   SHR      V3              ; V3 >>= 1, VF = LSB
$B34    $CC24   RND      VC, #24         ; VC = random & 24
$B36    $1AEF   JP       $AEF            ; Jump to AEF
$B38    $D96E   DRW      V9, V6, #E      ; Draw 14-byte sprite at V9, V6
$B3A    $5F8E   UNKNOWN  $5F8E           ; Unknown 5xxx instruction
$B3C    $ECAC   UNKNOWN  $ECAC           ; Unknown Exxx instruction
$B3E    $451A   SNE      V5, #1A         ; Skip if V5 != 26
$B40    $F8C6   UNKNOWN  F8C6            ; Unknown Fxxx instruction
$B42    $D46F   DRW      V4, V6, #F      ; Draw 15-byte sprite at V4, V6
$B44    $AD16   LD       I, $D16         ; Load D16 into I
$B46    $FD74   UNKNOWN  FD74            ; Unknown Fxxx instruction
$B48    $2A3E   CALL     $A3E            ; Call subroutine at A3E
$B4A    $FD74   UNKNOWN  FD74            ; Unknown Fxxx instruction
$B4C    $F851   UNKNOWN  F851            ; Unknown Fxxx instruction
$B4E    $9495   UNKNOWN  $9495           ; Unknown 9xxx instruction
$B50    $9179   UNKNOWN  $9179           ; Unknown 9xxx instruction
$B52    $5282   UNKNOWN  $5282           ; Unknown 5xxx instruction
$B54    $083D   SYS      $83D            ; System call to 83D
$B56    $F706   UNKNOWN  F706            ; Unknown Fxxx instruction
$B58    $5200   SE       V2, V0          ; Skip if V2 == V0
$B5A    $6086   LD       V0, #86         ; Load 134 into V0
$B5C    $7572   ADD      V5, #72         ; Add 114 to V5
$B5E    $09E7   SYS      $9E7            ; System call to 9E7
$B60    $D495   DRW      V4, V9, #5      ; Draw 5-byte sprite at V4, V9
$B62    $A5EF   LD       I, $5EF         ; Load 5EF into I
$B64    $FED8   UNKNOWN  FED8            ; Unknown Fxxx instruction
$B66    $C505   RND      V5, #05         ; V5 = random & 05
$B68    $2F32   CALL     $F32            ; Call subroutine at F32
$B6A    $6BDF   LD       VB, #DF         ; Load 223 into VB
$B6C    $DF05   DRW      VF, V0, #5      ; Draw 5-byte sprite at VF, V0
$B6E    $C943   RND      V9, #43         ; V9 = random & 43
$B70    $9798   UNKNOWN  $9798           ; Unknown 9xxx instruction
$B72    $87CF   UNKNOWN  87CF            ; Unknown 8xxx instruction
$B74    $D1DF   DRW      V1, VD, #F      ; Draw 15-byte sprite at V1, VD
$B76    $093D   SYS      $93D            ; System call to 93D
$B78    $15E8   JP       $5E8            ; Jump to 5E8
$B7A    $92FF   UNKNOWN  $92FF           ; Unknown 9xxx instruction
$B7C    $E991   UNKNOWN  $E991           ; Unknown Exxx instruction
$B7E    $2C25   CALL     $C25            ; Call subroutine at C25
$B80    $F52A   UNKNOWN  F52A            ; Unknown Fxxx instruction
$B82    $C6F0   RND      V6, #F0         ; V6 = random & F0
$B84    $11FE   JP       $1FE            ; Jump to 1FE
$B86    $881B   UNKNOWN  881B            ; Unknown 8xxx instruction
$B88    $B092   JP       V0, $092        ; Jump to V0 + 092
$B8A    $678A   LD       V7, #8A         ; Load 138 into V7
$B8C    $A3D4   LD       I, $3D4         ; Load 3D4 into I
$B8E    $3B07   SE       VB, #07         ; Skip if VB == 7
$B90    $D48B   DRW      V4, V8, #B      ; Draw 11-byte sprite at V4, V8
$B92    $6A5D   LD       VA, #5D         ; Load 93 into VA
$B94    $FFAC   UNKNOWN  FFAC            ; Unknown Fxxx instruction
$B96    $3BAA   SE       VB, #AA         ; Skip if VB == 170
$B98    $3361   SE       V3, #61         ; Skip if V3 == 97
$B9A    $8258   UNKNOWN  8258            ; Unknown 8xxx instruction
$B9C    $C332   RND      V3, #32         ; V3 = random & 32
$B9E    $A1BC   LD       I, $1BC         ; Load 1BC into I
$BA0    $50A1   UNKNOWN  $50A1           ; Unknown 5xxx instruction
$BA2    $FE12   UNKNOWN  FE12            ; Unknown Fxxx instruction
$BA4    $741A   ADD      V4, #1A         ; Add 26 to V4
$BA6    $B599   JP       V0, $599        ; Jump to V0 + 599
$BA8    $F27D   UNKNOWN  F27D            ; Unknown Fxxx instruction
$BAA    $F643   UNKNOWN  F643            ; Unknown Fxxx instruction
$BAC    $6A56   LD       VA, #56         ; Load 86 into VA
$BAE    $7CC7   ADD      VC, #C7         ; Add 199 to VC
$BB0    $FF46   UNKNOWN  FF46            ; Unknown Fxxx instruction
$BB2    $8EA6   SHR      VE              ; VE >>= 1, VF = LSB
$BB4    $EA4C   UNKNOWN  $EA4C           ; Unknown Exxx instruction
$BB6    $7646   ADD      V6, #46         ; Add 70 to V6
$BB8    $11F0   JP       $1F0            ; Jump to 1F0
$BBA    $856B   UNKNOWN  856B            ; Unknown 8xxx instruction
$BBC    $EE0D   UNKNOWN  $EE0D           ; Unknown Exxx instruction
$BBE    $F119   UNKNOWN  F119            ; Unknown Fxxx instruction
$BC0    $119E   JP       $19E            ; Jump to 19E
$BC2    $BF1A   JP       V0, $F1A        ; Jump to V0 + F1A
$BC4    $0516   SYS      $516            ; System call to 516
$BC6    $5F37   UNKNOWN  $5F37           ; Unknown 5xxx instruction
$BC8    $22B8   CALL     $2B8            ; Call subroutine at 2B8
$BCA    $3895   SE       V8, #95         ; Skip if V8 == 149
$BCC    $B1DB   JP       V0, $1DB        ; Jump to V0 + 1DB
$BCE    $0B6A   SYS      $B6A            ; System call to B6A
$BD0    $77FC   ADD      V7, #FC         ; Add 252 to V7
$BD2    $6C83   LD       VC, #83         ; Load 131 into VC
$BD4    $20E5   CALL     $0E5            ; Call subroutine at 0E5
$BD6    $AC25   LD       I, $C25         ; Load C25 into I
$BD8    $5FB5   UNKNOWN  $5FB5           ; Unknown 5xxx instruction
$BDA    $ED8E   UNKNOWN  $ED8E           ; Unknown Exxx instruction
$BDC    $1BA6   JP       $BA6            ; Jump to BA6
$BDE    $B80F   JP       V0, $80F        ; Jump to V0 + 80F
$BE0    $5034   UNKNOWN  $5034           ; Unknown 5xxx instruction
$BE2    $F4F4   UNKNOWN  F4F4            ; Unknown Fxxx instruction
$BE4    $710E   ADD      V1, #0E         ; Add 14 to V1
$BE6    $70F4   ADD      V0, #F4         ; Add 244 to V0
$BE8    $6163   LD       V1, #63         ; Load 99 into V1
$BEA    $5472   UNKNOWN  $5472           ; Unknown 5xxx instruction
$BEC    $6A8B   LD       VA, #8B         ; Load 139 into VA
$BEE    $B07C   JP       V0, $07C        ; Jump to V0 + 07C
$BF0    $9491   UNKNOWN  $9491           ; Unknown 9xxx instruction
$BF2    $1EA2   JP       $EA2            ; Jump to EA2
$BF4    $E286   UNKNOWN  $E286           ; Unknown Exxx instruction
$BF6    $D19F   DRW      V1, V9, #F      ; Draw 15-byte sprite at V1, V9
$BF8    $6F5C   LD       VF, #5C         ; Load 92 into VF
$BFA    $F799   UNKNOWN  F799            ; Unknown Fxxx instruction
$BFC    $2B80   CALL     $B80            ; Call subroutine at B80
$BFE    $79DE   ADD      V9, #DE         ; Add 222 to V9
$C00    $6FE3   LD       VF, #E3         ; Load 227 into VF
$C02    $E78B   UNKNOWN  $E78B           ; Unknown Exxx instruction
$C04    $43B7   SNE      V3, #B7         ; Skip if V3 != 183
$C06    $773B   ADD      V7, #3B         ; Add 59 to V7
$C08    $DC8F   DRW      VC, V8, #F      ; Draw 15-byte sprite at VC, V8
$C0A    $C717   RND      V7, #17         ; V7 = random & 17
$C0C    $9ECA   UNKNOWN  $9ECA           ; Unknown 9xxx instruction
$C0E    $565A   UNKNOWN  $565A           ; Unknown 5xxx instruction
$C10    $3797   SE       V7, #97         ; Skip if V7 == 151
$C12    $7D34   ADD      VD, #34         ; Add 52 to VD
$C14    $3F74   SE       VF, #74         ; Skip if VF == 116
$C16    $03E5   SYS      $3E5            ; System call to 3E5
$C18    $0F0F   SYS      $F0F            ; System call to F0F
$C1A    $F251   UNKNOWN  F251            ; Unknown Fxxx instruction
$C1C    $0D3E   SYS      $D3E            ; System call to D3E
$C1E    $361F   SE       V6, #1F         ; Skip if V6 == 31
$C20    $7031   ADD      V0, #31         ; Add 49 to V0
$C22    $A8CC   LD       I, $8CC         ; Load 8CC into I
$C24    $DFE0   DRW      VF, VE, #0      ; Draw 0-byte sprite at VF, VE
$C26    $6C54   LD       VC, #54         ; Load 84 into VC
$C28    $B465   JP       V0, $465        ; Jump to V0 + 465
$C2A    $CD4C   RND      VD, #4C         ; VD = random & 4C
$C2C    $C8B7   RND      V8, #B7         ; V8 = random & B7
$C2E    $9F24   UNKNOWN  $9F24           ; Unknown 9xxx instruction
$C30    $3B3B   SE       VB, #3B         ; Skip if VB == 59
$C32    $9161   UNKNOWN  $9161           ; Unknown 9xxx instruction
$C34    $7C79   ADD      VC, #79         ; Add 121 to VC
$C36    $0995   SYS      $995            ; System call to 995
$C38    $A5D2   LD       I, $5D2         ; Load 5D2 into I
$C3A    $BBA2   JP       V0, $BA2        ; Jump to V0 + BA2
$C3C    $CA01   RND      VA, #01         ; VA = random & 01
$C3E    $C505   RND      V5, #05         ; V5 = random & 05
$C40    $E733   UNKNOWN  $E733           ; Unknown Exxx instruction
$C42    $783A   ADD      V8, #3A         ; Add 58 to V8
$C44    $E823   UNKNOWN  $E823           ; Unknown Exxx instruction
$C46    $7AAD   ADD      VA, #AD         ; Add 173 to VA
$C48    $EE93   UNKNOWN  $EE93           ; Unknown Exxx instruction
$C4A    $A865   LD       I, $865         ; Load 865 into I
$C4C    $FA65   LD       VA, [I]         ; Load V0-VA from I
$C4E    $D83F   DRW      V8, V3, #F      ; Draw 15-byte sprite at V8, V3
$C50    $84BE   SHL      V4              ; V4 <<= 1, VF = MSB
$C52    $CB79   RND      VB, #79         ; VB = random & 79
$C54    $91C0   SNE      V1, VC          ; Skip if V1 != VC
$C56    $29A9   CALL     $9A9            ; Call subroutine at 9A9
$C58    $6B4A   LD       VB, #4A         ; Load 74 into VB
$C5A    $32D4   SE       V2, #D4         ; Skip if V2 == 212
$C5C    $4B09   SNE      VB, #09         ; Skip if VB != 9
$C5E    $0D63   SYS      $D63            ; System call to D63
$C60    $61B9   LD       V1, #B9         ; Load 185 into V1
$C62    $B423   JP       V0, $423        ; Jump to V0 + 423
$C64    $A924   LD       I, $924         ; Load 924 into I
$C66    $5E97   UNKNOWN  $5E97           ; Unknown 5xxx instruction
$C68    $9E78   UNKNOWN  $9E78           ; Unknown 9xxx instruction
$C6A    $AAE3   LD       I, $AE3         ; Load AE3 into I
$C6C    $8E00   LD       VE, V0          ; VE = V0
$C6E    $3EAB   SE       VE, #AB         ; Skip if VE == 171
$C70    $AA20   LD       I, $A20         ; Load A20 into I
$C72    $130B   JP       $30B            ; Jump to 30B
$C74    $1AF1   JP       $AF1            ; Jump to AF1
$C76    $0C60   SYS      $C60            ; System call to C60
$C78    $1EB3   JP       $EB3            ; Jump to EB3
$C7A    $1291   JP       $291            ; Jump to 291
$C7C    $9A8C   UNKNOWN  $9A8C           ; Unknown 9xxx instruction
$C7E    $6B99   LD       VB, #99         ; Load 153 into VB
$C80    $69E3   LD       V9, #E3         ; Load 227 into V9
$C82    $D79A   DRW      V7, V9, #A      ; Draw 10-byte sprite at V7, V9
$C84    $42E4   SNE      V2, #E4         ; Skip if V2 != 228
$C86    $142C   JP       $42C            ; Jump to 42C
$C88    $58A4   UNKNOWN  $58A4           ; Unknown 5xxx instruction
$C8A    $D1AA   DRW      V1, VA, #A      ; Draw 10-byte sprite at V1, VA
$C8C    $4D03   SNE      VD, #03         ; Skip if VD != 3
$C8E    $E501   UNKNOWN  $E501           ; Unknown Exxx instruction
$C90    $091F   SYS      $91F            ; System call to 91F
$C92    $B4C4   JP       V0, $4C4        ; Jump to V0 + 4C4
$C94    $4262   SNE      V2, #62         ; Skip if V2 != 98
$C96    $728D   ADD      V2, #8D         ; Add 141 to V2
$C98    $5003   UNKNOWN  $5003           ; Unknown 5xxx instruction
$C9A    $394B   SE       V9, #4B         ; Skip if V9 == 75
$C9C    $BA04   JP       V0, $A04        ; Jump to V0 + A04
$C9E    $0DA4   SYS      $DA4            ; System call to DA4
$CA0    $122D   JP       $22D            ; Jump to 22D
$CA2    $5959   UNKNOWN  $5959           ; Unknown 5xxx instruction
$CA4    $3408   SE       V4, #08         ; Skip if V4 == 8
$CA6    $7276   ADD      V2, #76         ; Add 118 to V2
$CA8    $3E14   SE       VE, #14         ; Skip if VE == 20
$CAA    $D14E   DRW      V1, V4, #E      ; Draw 14-byte sprite at V1, V4
$CAC    $8263   XOR      V2, V6          ; V2 ^= V6
$CAE    $B9D0   JP       V0, $9D0        ; Jump to V0 + 9D0
$CB0    $C677   RND      V6, #77         ; V6 = random & 77
$CB2    $A722   LD       I, $722         ; Load 722 into I
$CB4    $8824   ADD      V8, V2          ; V8 += V2, VF = carry
$CB6    $CE1B   RND      VE, #1B         ; VE = random & 1B
$CB8    $D03E   DRW      V0, V3, #E      ; Draw 14-byte sprite at V0, V3
$CBA    $2B0A   CALL     $B0A            ; Call subroutine at B0A
$CBC    $84C8   UNKNOWN  84C8            ; Unknown 8xxx instruction
$CBE    $8052   AND      V0, V5          ; V0 &= V5
$CC0    $2F61   CALL     $F61            ; Call subroutine at F61
$CC2    $53DD   UNKNOWN  $53DD           ; Unknown 5xxx instruction
$CC4    $88A1   OR       V8, VA          ; V8 |= VA
$CC6    $2C13   CALL     $C13            ; Call subroutine at C13
$CC8    $B39D   JP       V0, $39D        ; Jump to V0 + 39D
$CCA    $1CF5   JP       $CF5            ; Jump to CF5
$CCC    $4D30   SNE      VD, #30         ; Skip if VD != 48
$CCE    $8391   OR       V3, V9          ; V3 |= V9
$CD0    $23A1   CALL     $3A1            ; Call subroutine at 3A1
$CD2    $8B72   AND      VB, V7          ; VB &= V7
$CD4    $6F00   LD       VF, #00         ; Load 0 into VF
$CD6    $8EAF   UNKNOWN  8EAF            ; Unknown 8xxx instruction
$CD8    $1E3E   JP       $E3E            ; Jump to E3E
$CDA    $842E   SHL      V4              ; V4 <<= 1, VF = MSB
$CDC    $6791   LD       V7, #91         ; Load 145 into V7
$CDE    $2E5E   CALL     $E5E            ; Call subroutine at E5E
$CE0    $6818   LD       V8, #18         ; Load 24 into V8
$CE2    $7127   ADD      V1, #27         ; Add 39 to V1
$CE4    $00F7   SYS      $0F7            ; System call to 0F7
$CE6    $0FFC   SYS      $FFC            ; System call to FFC
$CE8    $CC7D   RND      VC, #7D         ; VC = random & 7D
$CEA    $B47A   JP       V0, $47A        ; Jump to V0 + 47A
$CEC    $E586   UNKNOWN  $E586           ; Unknown Exxx instruction
$CEE    $536F   UNKNOWN  $536F           ; Unknown 5xxx instruction
$CF0    $686B   LD       V8, #6B         ; Load 107 into V8
$CF2    $2465   CALL     $465            ; Call subroutine at 465
$CF4    $9CA1   UNKNOWN  $9CA1           ; Unknown 9xxx instruction
$CF6    $E0BF   UNKNOWN  $E0BF           ; Unknown Exxx instruction
$CF8    $81CE   SHL      V1              ; V1 <<= 1, VF = MSB
$CFA    $CC98   RND      VC, #98         ; VC = random & 98
$CFC    $A184   LD       I, $184         ; Load 184 into I
$CFE    $8193   XOR      V1, V9          ; V1 ^= V9
$D00    $DCF4   DRW      VC, VF, #4      ; Draw 4-byte sprite at VC, VF
$D02    $A2E7   LD       I, $2E7         ; Load 2E7 into I
$D04    $14B2   JP       $4B2            ; Jump to 4B2
$D06    $C2BB   RND      V2, #BB         ; V2 = random & BB
$D08    $0335   SYS      $335            ; System call to 335
$D0A    $850D   UNKNOWN  850D            ; Unknown 8xxx instruction
$D0C    $190C   JP       $90C            ; Jump to 90C
$D0E    $182F   JP       $82F            ; Jump to 82F
$D10    $D180   DRW      V1, V8, #0      ; Draw 0-byte sprite at V1, V8
$D12    $86E9   UNKNOWN  86E9            ; Unknown 8xxx instruction
$D14    $AA02   LD       I, $A02         ; Load A02 into I
$D16    $7F93   ADD      VF, #93         ; Add 147 to VF
$D18    $7978   ADD      V9, #78         ; Add 120 to V9
$D1A    $B9F7   JP       V0, $9F7        ; Jump to V0 + 9F7
$D1C    $798C   ADD      V9, #8C         ; Add 140 to V9
$D1E    $AFDF   LD       I, $FDF         ; Load FDF into I
$D20    $009D   SYS      $09D            ; System call to 09D
$D22    $3DA7   SE       VD, #A7         ; Skip if VD == 167
$D24    $4D3A   SNE      VD, #3A         ; Skip if VD != 58
$D26    $489D   SNE      V8, #9D         ; Skip if V8 != 157
$D28    $4185   SNE      V1, #85         ; Skip if V1 != 133
$D2A    $5DA6   UNKNOWN  $5DA6           ; Unknown 5xxx instruction
$D2C    $B46F   JP       V0, $46F        ; Jump to V0 + 46F
$D2E    $9F58   UNKNOWN  $9F58           ; Unknown 9xxx instruction
$D30    $A678   LD       I, $678         ; Load 678 into I
$D32    $5C37   UNKNOWN  $5C37           ; Unknown 5xxx instruction
$D34    $0499   SYS      $499            ; System call to 499
$D36    $0CC1   SYS      $CC1            ; System call to CC1
$D38    $59BF   UNKNOWN  $59BF           ; Unknown 5xxx instruction
$D3A    $2510   CALL     $510            ; Call subroutine at 510
$D3C    $0476   SYS      $476            ; System call to 476
$D3E    $FF35   UNKNOWN  FF35            ; Unknown Fxxx instruction
$D40    $A7AC   LD       I, $7AC         ; Load 7AC into I
$D42    $AD22   LD       I, $D22         ; Load D22 into I
$D44    $B3DD   JP       V0, $3DD        ; Jump to V0 + 3DD
$D46    $7421   ADD      V4, #21         ; Add 33 to V4
$D48    $A023   LD       I, $023         ; Load 023 into I
$D4A    $6C02   LD       VC, #02         ; Load 2 into VC
$D4C    $BDF4   JP       V0, $DF4        ; Jump to V0 + DF4
$D4E    $EC54   UNKNOWN  $EC54           ; Unknown Exxx instruction
$D50    $6396   LD       V3, #96         ; Load 150 into V3
$D52    $6D41   LD       VD, #41         ; Load 65 into VD
$D54    $28F2   CALL     $8F2            ; Call subroutine at 8F2
$D56    $3000   SE       V0, #00         ; Skip if V0 == 0
$D58    $8F59   UNKNOWN  8F59            ; Unknown 8xxx instruction
$D5A    $2B61   CALL     $B61            ; Call subroutine at B61
$D5C    $564F   UNKNOWN  $564F           ; Unknown 5xxx instruction
$D5E    $4DE1   SNE      VD, #E1         ; Skip if VD != 225
$D60    $DC28   DRW      VC, V2, #8      ; Draw 8-byte sprite at VC, V2
$D62    $3730   SE       V7, #30         ; Skip if V7 == 48
$D64    $C944   RND      V9, #44         ; V9 = random & 44
$D66    $6CA7   LD       VC, #A7         ; Load 167 into VC
$D68    $8D04   ADD      VD, V0          ; VD += V0, VF = carry
$D6A    $3E38   SE       VE, #38         ; Skip if VE == 56
$D6C    $CDCF   RND      VD, #CF         ; VD = random & CF
$D6E    $CF07   RND      VF, #07         ; VF = random & 07
$D70    $2442   CALL     $442            ; Call subroutine at 442
$D72    $7C5D   ADD      VC, #5D         ; Add 93 to VC
$D74    $D017   DRW      V0, V1, #7      ; Draw 7-byte sprite at V0, V1
$D76    $33BB   SE       V3, #BB         ; Skip if V3 == 187
$D78    $D690   DRW      V6, V9, #0      ; Draw 0-byte sprite at V6, V9
$D7A    $13B7   JP       $3B7            ; Jump to 3B7
$D7C    $8574   ADD      V5, V7          ; V5 += V7, VF = carry
$D7E    $4158   SNE      V1, #58         ; Skip if V1 != 88
$D80    $A5B5   LD       I, $5B5         ; Load 5B5 into I
$D82    $85DD   UNKNOWN  85DD            ; Unknown 8xxx instruction
$D84    $65FC   LD       V5, #FC         ; Load 252 into V5
$D86    $3472   SE       V4, #72         ; Skip if V4 == 114
$D88    $C454   RND      V4, #54         ; V4 = random & 54
$D8A    $ED8D   UNKNOWN  $ED8D           ; Unknown Exxx instruction
$D8C    $2493   CALL     $493            ; Call subroutine at 493
$D8E    $51DF   UNKNOWN  $51DF           ; Unknown 5xxx instruction
$D90    $161E   JP       $61E            ; Jump to 61E
$D92    $E407   UNKNOWN  $E407           ; Unknown Exxx instruction
$D94    $9A6C   UNKNOWN  $9A6C           ; Unknown 9xxx instruction
$D96    $858C   UNKNOWN  858C            ; Unknown 8xxx instruction
$D98    $F7F1   UNKNOWN  F7F1            ; Unknown Fxxx instruction
$D9A    $E60E   UNKNOWN  $E60E           ; Unknown Exxx instruction
$D9C    $9C8A   UNKNOWN  $9C8A           ; Unknown 9xxx instruction
$D9E    $4ECD   SNE      VE, #CD         ; Skip if VE != 205
$DA0    $553B   UNKNOWN  $553B           ; Unknown 5xxx instruction
$DA2    $B2A7   JP       V0, $2A7        ; Jump to V0 + 2A7
$DA4    $6706   LD       V7, #06         ; Load 6 into V7
$DA6    $5AD1   UNKNOWN  $5AD1           ; Unknown 5xxx instruction
$DA8    $E617   UNKNOWN  $E617           ; Unknown Exxx instruction
$DAA    $F05C   UNKNOWN  F05C            ; Unknown Fxxx instruction
$DAC    $C9F7   RND      V9, #F7         ; V9 = random & F7
$DAE    $39D6   SE       V9, #D6         ; Skip if V9 == 214
$DB0    $2E90   CALL     $E90            ; Call subroutine at E90
$DB2    $49C7   SNE      V9, #C7         ; Skip if V9 != 199
$DB4    $FE77   UNKNOWN  FE77            ; Unknown Fxxx instruction
$DB6    $605B   LD       V0, #5B         ; Load 91 into V0
$DB8    $0719   SYS      $719            ; System call to 719
$DBA    $219B   CALL     $19B            ; Call subroutine at 19B
$DBC    $38CA   SE       V8, #CA         ; Skip if V8 == 202
$DBE    $C41E   RND      V4, #1E         ; V4 = random & 1E
$DC0    $320D   SE       V2, #0D         ; Skip if V2 == 13
$DC2    $5859   UNKNOWN  $5859           ; Unknown 5xxx instruction
$DC4    $CCE0   RND      VC, #E0         ; VC = random & E0
$DC6    $B94F   JP       V0, $94F        ; Jump to V0 + 94F
$DC8    $04AA   SYS      $4AA            ; System call to 4AA
$DCA    $79E3   ADD      V9, #E3         ; Add 227 to V9
$DCC    $65D2   LD       V5, #D2         ; Load 210 into V5
$DCE    $CFE6   RND      VF, #E6         ; VF = random & E6
$DD0    $CE9F   RND      VE, #9F         ; VE = random & 9F
$DD2    $9769   UNKNOWN  $9769           ; Unknown 9xxx instruction
$DD4    $C075   RND      V0, #75         ; V0 = random & 75
$DD6    $BDA8   JP       V0, $DA8        ; Jump to V0 + DA8
$DD8    $C8FC   RND      V8, #FC         ; V8 = random & FC
$DDA    $EF9E   SKP      VF              ; Skip if key VF pressed
$DDC    $6FB4   LD       VF, #B4         ; Load 180 into VF
$DDE    $2655   CALL     $655            ; Call subroutine at 655
$DE0    $FECC   UNKNOWN  FECC            ; Unknown Fxxx instruction
$DE2    $43D3   SNE      V3, #D3         ; Skip if V3 != 211
$DE4    $FD1E   ADD      I, VD           ; I += VD
$DE6    $28DF   CALL     $8DF            ; Call subroutine at 8DF
$DE8    $5008   UNKNOWN  $5008           ; Unknown 5xxx instruction
$DEA    $D06F   DRW      V0, V6, #F      ; Draw 15-byte sprite at V0, V6
$DEC    $F009   UNKNOWN  F009            ; Unknown Fxxx instruction
$DEE    $7439   ADD      V4, #39         ; Add 57 to V4
$DF0    $A707   LD       I, $707         ; Load 707 into I
$DF2    $AB44   LD       I, $B44         ; Load B44 into I
$DF4    $A681   LD       I, $681         ; Load 681 into I
$DF6    $8D2F   UNKNOWN  8D2F            ; Unknown 8xxx instruction
$DF8    $20A8   CALL     $0A8            ; Call subroutine at 0A8
$DFA    $CF93   RND      VF, #93         ; VF = random & 93
$DFC    $1CE5   JP       $CE5            ; Jump to CE5
$DFE    $580B   UNKNOWN  $580B           ; Unknown 5xxx instruction
$E00    $8BD2   AND      VB, VD          ; VB &= VD
$E02    $7E81   ADD      VE, #81         ; Add 129 to VE
$E04    $3528   SE       V5, #28         ; Skip if V5 == 40
$E06    $152C   JP       $52C            ; Jump to 52C
$E08    $E219   UNKNOWN  $E219           ; Unknown Exxx instruction
$E0A    $106C   JP       $06C            ; Jump to 06C
$E0C    $42B2   SNE      V2, #B2         ; Skip if V2 != 178
$E0E    $919E   UNKNOWN  $919E           ; Unknown 9xxx instruction
$E10    $A39B   LD       I, $39B         ; Load 39B into I
$E12    $184F   JP       $84F            ; Jump to 84F
$E14    $ED5C   UNKNOWN  $ED5C           ; Unknown Exxx instruction
$E16    $A90A   LD       I, $90A         ; Load 90A into I
$E18    $50BC   UNKNOWN  $50BC           ; Unknown 5xxx instruction
$E1A    $7268   ADD      V2, #68         ; Add 104 to V2
$E1C    $043A   SYS      $43A            ; System call to 43A
$E1E    $AFBB   LD       I, $FBB         ; Load FBB into I
$E20    $F9ED   UNKNOWN  F9ED            ; Unknown Fxxx instruction
$E22    $95D7   UNKNOWN  $95D7           ; Unknown 9xxx instruction
$E24    $13A8   JP       $3A8            ; Jump to 3A8
$E26    $3958   SE       V9, #58         ; Skip if V9 == 88
$E28    $0299   SYS      $299            ; System call to 299
$E2A    $D616   DRW      V6, V1, #6      ; Draw 6-byte sprite at V6, V1
$E2C    $D073   DRW      V0, V7, #3      ; Draw 3-byte sprite at V0, V7
$E2E    $12FE   JP       $2FE            ; Jump to 2FE
$E30    $E336   UNKNOWN  $E336           ; Unknown Exxx instruction
$E32    $15BC   JP       $5BC            ; Jump to 5BC
$E34    $8E94   ADD      VE, V9          ; VE += V9, VF = carry
$E36    $6B2E   LD       VB, #2E         ; Load 46 into VB
$E38    $56C8   UNKNOWN  $56C8           ; Unknown 5xxx instruction
$E3A    $77A3   ADD      V7, #A3         ; Add 163 to V7
$E3C    $FA64   UNKNOWN  FA64            ; Unknown Fxxx instruction
$E3E    $E9B0   UNKNOWN  $E9B0           ; Unknown Exxx instruction
$E40    $1820   JP       $820            ; Jump to 820
$E42    $9BC3   UNKNOWN  $9BC3           ; Unknown 9xxx instruction
$E44    $33C6   SE       V3, #C6         ; Skip if V3 == 198
$E46    $0A38   SYS      $A38            ; System call to A38
$E48    $ECBF   UNKNOWN  $ECBF           ; Unknown Exxx instruction
$E4A    $E7EF   UNKNOWN  $E7EF           ; Unknown Exxx instruction
$E4C    $A99D   LD       I, $99D         ; Load 99D into I
$E4E    $0163   SYS      $163            ; System call to 163
$E50    $2ABE   CALL     $ABE            ; Call subroutine at ABE
$E52    $F6D8   UNKNOWN  F6D8            ; Unknown Fxxx instruction
$E54    $C4D6   RND      V4, #D6         ; V4 = random & D6
$E56    $1E59   JP       $E59            ; Jump to E59
$E58    $235E   CALL     $35E            ; Call subroutine at 35E
$E5A    $F4F1   UNKNOWN  F4F1            ; Unknown Fxxx instruction
$E5C    $BF72   JP       V0, $F72        ; Jump to V0 + F72
$E5E    $986A   UNKNOWN  $986A           ; Unknown 9xxx instruction
$E60    $498C   SNE      V9, #8C         ; Skip if V9 != 140
$E62    $4CE0   SNE      VC, #E0         ; Skip if VC != 224
$E64    $940D   UNKNOWN  $940D           ; Unknown 9xxx instruction
$E66    $536F   UNKNOWN  $536F           ; Unknown 5xxx instruction
$E68    $8649   UNKNOWN  8649            ; Unknown 8xxx instruction
$E6A    $A89E   LD       I, $89E         ; Load 89E into I
$E6C    $7C5B   ADD      VC, #5B         ; Add 91 to VC
$E6E    $028B   SYS      $28B            ; System call to 28B
$E70    $D2C1   DRW      V2, VC, #1      ; Draw 1-byte sprite at V2, VC
$E72    $3890   SE       V8, #90         ; Skip if V8 == 144
$E74    $42FE   SNE      V2, #FE         ; Skip if V2 != 254
$E76    $532D   UNKNOWN  $532D           ; Unknown 5xxx instruction
$E78    $1D35   JP       $D35            ; Jump to D35
$E7A    $0AF1   SYS      $AF1            ; System call to AF1
$E7C    $2218   CALL     $218            ; Call subroutine at 218
$E7E    $CAB5   RND      VA, #B5         ; VA = random & B5
$E80    $20E5   CALL     $0E5            ; Call subroutine at 0E5
$E82    $918B   UNKNOWN  $918B           ; Unknown 9xxx instruction
$E84    $4063   SNE      V0, #63         ; Skip if V0 != 99
$E86    $7406   ADD      V4, #06         ; Add 6 to V4
$E88    $FF2A   UNKNOWN  FF2A            ; Unknown Fxxx instruction
$E8A    $3858   SE       V8, #58         ; Skip if V8 == 88
$E8C    $0F7E   SYS      $F7E            ; System call to F7E
$E8E    $AF24   LD       I, $F24         ; Load F24 into I
$E90    $2F2D   CALL     $F2D            ; Call subroutine at F2D
$E92    $85EA   UNKNOWN  85EA            ; Unknown 8xxx instruction
$E94    $DF8F   DRW      VF, V8, #F      ; Draw 15-byte sprite at VF, V8
$E96    $37FE   SE       V7, #FE         ; Skip if V7 == 254
$E98    $ACA7   LD       I, $CA7         ; Load CA7 into I
$E9A    $5C57   UNKNOWN  $5C57           ; Unknown 5xxx instruction
$E9C    $25AF   CALL     $5AF            ; Call subroutine at 5AF
$E9E    $ABDE   LD       I, $BDE         ; Load BDE into I
$EA0    $DB50   DRW      VB, V5, #0      ; Draw 0-byte sprite at VB, V5
$EA2    $6479   LD       V4, #79         ; Load 121 into V4
$EA4    $CC6C   RND      VC, #6C         ; VC = random & 6C
$EA6    $AE54   LD       I, $E54         ; Load E54 into I
$EA8    $C960   RND      V9, #60         ; V9 = random & 60
$EAA    $D644   DRW      V6, V4, #4      ; Draw 4-byte sprite at V6, V4
$EAC    $D7F7   DRW      V7, VF, #7      ; Draw 7-byte sprite at V7, VF
$EAE    $2475   CALL     $475            ; Call subroutine at 475
$EB0    $4AE6   SNE      VA, #E6         ; Skip if VA != 230
$EB2    $D829   DRW      V8, V2, #9      ; Draw 9-byte sprite at V8, V2
$EB4    $3D8A   SE       VD, #8A         ; Skip if VD == 138
$EB6    $3897   SE       V8, #97         ; Skip if V8 == 151
$EB8    $0784   SYS      $784            ; System call to 784
$EBA    $9143   UNKNOWN  $9143           ; Unknown 9xxx instruction
$EBC    $5AD7   UNKNOWN  $5AD7           ; Unknown 5xxx instruction
$EBE    $65FF   LD       V5, #FF         ; Load 255 into V5
$EC0    $C62E   RND      V6, #2E         ; V6 = random & 2E
$EC2    $E4CC   UNKNOWN  $E4CC           ; Unknown Exxx instruction
$EC4    $8C6E   SHL      VC              ; VC <<= 1, VF = MSB
$EC6    $2E3A   CALL     $E3A            ; Call subroutine at E3A
$EC8    $E52D   UNKNOWN  $E52D           ; Unknown Exxx instruction
$ECA    $1349   JP       $349            ; Jump to 349
$ECC    $7876   ADD      V8, #76         ; Add 118 to V8
$ECE    $1670   JP       $670            ; Jump to 670
$ED0    $39ED   SE       V9, #ED         ; Skip if V9 == 237
$ED2    $4E90   SNE      VE, #90         ; Skip if VE != 144
$ED4    $2435   CALL     $435            ; Call subroutine at 435
$ED6    $7D3B   ADD      VD, #3B         ; Add 59 to VD
$ED8    $AA1B   LD       I, $A1B         ; Load A1B into I
$EDA    $65EC   LD       V5, #EC         ; Load 236 into V5
$EDC    $2161   CALL     $161            ; Call subroutine at 161
$EDE    $DD7B   DRW      VD, V7, #B      ; Draw 11-byte sprite at VD, V7
$EE0    $086D   SYS      $86D            ; System call to 86D
$EE2    $432C   SNE      V3, #2C         ; Skip if V3 != 44
$EE4    $5F11   UNKNOWN  $5F11           ; Unknown 5xxx instruction
$EE6    $DF3C   DRW      VF, V3, #C      ; Draw 12-byte sprite at VF, V3
$EE8    $5FB3   UNKNOWN  $5FB3           ; Unknown 5xxx instruction
$EEA    $F13E   UNKNOWN  F13E            ; Unknown Fxxx instruction
$EEC    $BB21   JP       V0, $B21        ; Jump to V0 + B21
$EEE    $C811   RND      V8, #11         ; V8 = random & 11
$EF0    $FDCE   UNKNOWN  FDCE            ; Unknown Fxxx instruction
$EF2    $E757   UNKNOWN  $E757           ; Unknown Exxx instruction
$EF4    $5175   UNKNOWN  $5175           ; Unknown 5xxx instruction
$EF6    $E8D0   UNKNOWN  $E8D0           ; Unknown Exxx instruction
$EF8    $AE33   LD       I, $E33         ; Load E33 into I
$EFA    $1213   JP       $213            ; Jump to 213
$EFC    $253D   CALL     $53D            ; Call subroutine at 53D
$EFE    $175C   JP       $75C            ; Jump to 75C
$F00    $DFBA   DRW      VF, VB, #A      ; Draw 10-byte sprite at VF, VB
$F02    $B753   JP       V0, $753        ; Jump to V0 + 753
$F04    $4662   SNE      V6, #62         ; Skip if V6 != 98
$F06    $A469   LD       I, $469         ; Load 469 into I
$F08    $0BBB   SYS      $BBB            ; System call to BBB
$F0A    $D7F8   DRW      V7, VF, #8      ; Draw 8-byte sprite at V7, VF
$F0C    $E686   UNKNOWN  $E686           ; Unknown Exxx instruction
$F0E    $FBB9   UNKNOWN  FBB9            ; Unknown Fxxx instruction
$F10    $EE65   UNKNOWN  $EE65           ; Unknown Exxx instruction
$F12    $4AD8   SNE      VA, #D8         ; Skip if VA != 216
$F14    $BFA1   JP       V0, $FA1        ; Jump to V0 + FA1
$F16    $563F   UNKNOWN  $563F           ; Unknown 5xxx instruction
$F18    $CFAB   RND      VF, #AB         ; VF = random & AB
$F1A    $E15A   UNKNOWN  $E15A           ; Unknown Exxx instruction
$F1C    $5A35   UNKNOWN  $5A35           ; Unknown 5xxx instruction
$F1E    $FAB8   UNKNOWN  FAB8            ; Unknown Fxxx instruction
$F20    $AA14   LD       I, $A14         ; Load A14 into I
$F22    $17B6   JP       $7B6            ; Jump to 7B6
$F24    $90ED   UNKNOWN  $90ED           ; Unknown 9xxx instruction
$F26    $DB56   DRW      VB, V5, #6      ; Draw 6-byte sprite at VB, V5
$F28    $4496   SNE      V4, #96         ; Skip if V4 != 150
$F2A    $A701   LD       I, $701         ; Load 701 into I
$F2C    $828C   UNKNOWN  828C            ; Unknown 8xxx instruction
$F2E    $407F   SNE      V0, #7F         ; Skip if V0 != 127
$F30    $16CE   JP       $6CE            ; Jump to 6CE
$F32    $E13D   UNKNOWN  $E13D           ; Unknown Exxx instruction
$F34    $4A2E   SNE      VA, #2E         ; Skip if VA != 46
$F36    $E60C   UNKNOWN  $E60C           ; Unknown Exxx instruction
$F38    $CE7F   RND      VE, #7F         ; VE = random & 7F
$F3A    $4868   SNE      V8, #68         ; Skip if V8 != 104
$F3C    $94B3   UNKNOWN  $94B3           ; Unknown 9xxx instruction
$F3E    $1998   JP       $998            ; Jump to 998
$F40    $DB91   DRW      VB, V9, #1      ; Draw 1-byte sprite at VB, V9
$F42    $8ECA   UNKNOWN  8ECA            ; Unknown 8xxx instruction
$F44    $3DF6   SE       VD, #F6         ; Skip if VD == 246
$F46    $6C95   LD       VC, #95         ; Load 149 into VC
$F48    $A9F1   LD       I, $9F1         ; Load 9F1 into I
$F4A    $3F0C   SE       VF, #0C         ; Skip if VF == 12
$F4C    $D91A   DRW      V9, V1, #A      ; Draw 10-byte sprite at V9, V1
$F4E    $7F8D   ADD      VF, #8D         ; Add 141 to VF
$F50    $97F1   UNKNOWN  $97F1           ; Unknown 9xxx instruction
$F52    $DC50   DRW      VC, V5, #0      ; Draw 0-byte sprite at VC, V5
$F54    $F341   UNKNOWN  F341            ; Unknown Fxxx instruction
$F56    $E970   UNKNOWN  $E970           ; Unknown Exxx instruction
$F58    $C34C   RND      V3, #4C         ; V3 = random & 4C
$F5A    $250E   CALL     $50E            ; Call subroutine at 50E
$F5C    $B036   JP       V0, $036        ; Jump to V0 + 036
$F5E    $F111   UNKNOWN  F111            ; Unknown Fxxx instruction
$F60    $594E   UNKNOWN  $594E           ; Unknown 5xxx instruction
$F62    $BFA0   JP       V0, $FA0        ; Jump to V0 + FA0
$F64    $5A95   UNKNOWN  $5A95           ; Unknown 5xxx instruction
$F66    $E0B5   UNKNOWN  $E0B5           ; Unknown Exxx instruction
$F68    $C777   RND      V7, #77         ; V7 = random & 77
$F6A    $B877   JP       V0, $877        ; Jump to V0 + 877
$F6C    $A7B0   LD       I, $7B0         ; Load 7B0 into I
$F6E    $BC00   JP       V0, $C00        ; Jump to V0 + C00
$F70    $B399   JP       V0, $399        ; Jump to V0 + 399
$F72    $8D32   AND      VD, V3          ; VD &= V3
$F74    $B2E7   JP       V0, $2E7        ; Jump to V0 + 2E7
$F76    $7870   ADD      V8, #70         ; Add 112 to V8
$F78    $2BDA   CALL     $BDA            ; Call subroutine at BDA
$F7A    $B249   JP       V0, $249        ; Jump to V0 + 249
$F7C    $FE26   UNKNOWN  FE26            ; Unknown Fxxx instruction
$F7E    $894D   UNKNOWN  894D            ; Unknown 8xxx instruction
$F80    $91EE   UNKNOWN  $91EE           ; Unknown 9xxx instruction
$F82    $4369   SNE      V3, #69         ; Skip if V3 != 105
$F84    $D6C4   DRW      V6, VC, #4      ; Draw 4-byte sprite at V6, VC
$F86    $E281   UNKNOWN  $E281           ; Unknown Exxx instruction
$F88    $1FB7   JP       $FB7            ; Jump to FB7
$F8A    $2B1C   CALL     $B1C            ; Call subroutine at B1C
$F8C    $1BF9   JP       $BF9            ; Jump to BF9
$F8E    $E8EA   UNKNOWN  $E8EA           ; Unknown Exxx instruction
$F90    $FABE   UNKNOWN  FABE            ; Unknown Fxxx instruction
$F92    $D5A1   DRW      V5, VA, #1      ; Draw 1-byte sprite at V5, VA
$F94    $1646   JP       $646            ; Jump to 646
$F96    $5189   UNKNOWN  $5189           ; Unknown 5xxx instruction
$F98    $9293   UNKNOWN  $9293           ; Unknown 9xxx instruction
$F9A    $7CE8   ADD      VC, #E8         ; Add 232 to VC
$F9C    $3039   SE       V0, #39         ; Skip if V0 == 57
$F9E    $AFF8   LD       I, $FF8         ; Load FF8 into I
$FA0    $273C   CALL     $73C            ; Call subroutine at 73C
$FA2    $72A4   ADD      V2, #A4         ; Add 164 to V2
$FA4    $3FD2   SE       VF, #D2         ; Skip if VF == 210
$FA6    $1E3B   JP       $E3B            ; Jump to E3B
$FA8    $8AF1   OR       VA, VF          ; VA |= VF
$FAA    $C99F   RND      V9, #9F         ; V9 = random & 9F
$FAC    $7603   ADD      V6, #03         ; Add 3 to V6
$FAE    $1AB8   JP       $AB8            ; Jump to AB8
$FB0    $F83D   UNKNOWN  F83D            ; Unknown Fxxx instruction
$FB2    $F66B   UNKNOWN  F66B            ; Unknown Fxxx instruction
$FB4    $4B9B   SNE      VB, #9B         ; Skip if VB != 155
$FB6    $5804   UNKNOWN  $5804           ; Unknown 5xxx instruction
$FB8    $FCB9   UNKNOWN  FCB9            ; Unknown Fxxx instruction
$FBA    $3645   SE       V6, #45         ; Skip if V6 == 69
$FBC    $6E65   LD       VE, #65         ; Load 101 into VE
$FBE    $456B   SNE      V5, #6B         ; Skip if V5 != 107
$FC0    $7B2F   ADD      VB, #2F         ; Add 47 to VB
$FC2    $7A49   ADD      VA, #49         ; Add 73 to VA
$FC4    $7975   ADD      V9, #75         ; Add 117 to V9
$FC6    $3829   SE       V8, #29         ; Skip if V8 == 41
$FC8    $EB87   UNKNOWN  $EB87           ; Unknown Exxx instruction
$FCA    $4252   SNE      V2, #52         ; Skip if V2 != 82
$FCC    $50E2   UNKNOWN  $50E2           ; Unknown 5xxx instruction
$FCE    $1469   JP       $469            ; Jump to 469
$FD0    $9AB3   UNKNOWN  $9AB3           ; Unknown 9xxx instruction
$FD2    $4D99   SNE      VD, #99         ; Skip if VD != 153
$FD4    $382D   SE       V8, #2D         ; Skip if V8 == 45
$FD6    $0817   SYS      $817            ; System call to 817
$FD8    $F38D   UNKNOWN  F38D            ; Unknown Fxxx instruction
$FDA    $0264   SYS      $264            ; System call to 264
$FDC    $495C   SNE      V9, #5C         ; Skip if V9 != 92
$FDE    $F471   UNKNOWN  F471            ; Unknown Fxxx instruction
$FE0    $423B   SNE      V2, #3B         ; Skip if V2 != 59
$FE2    $52D2   UNKNOWN  $52D2           ; Unknown 5xxx instruction
$FE4    $A90E   LD       I, $90E         ; Load 90E into I
$FE6    $AF32   LD       I, $F32         ; Load F32 into I
$FE8    $9D1D   UNKNOWN  $9D1D           ; Unknown 9xxx instruction
$FEA    $D5F7   DRW      V5, VF, #7      ; Draw 7-byte sprite at V5, VF
$FEC    $B21D   JP       V0, $21D        ; Jump to V0 + 21D
$FEE    $BFC5   JP       V0, $FC5        ; Jump to V0 + FC5
$FF0    $02AE   SYS      $2AE            ; System call to 2AE
$FF2    $F50A   LD       V5, K           ; Wait for key press, store in V5
$FF4    $AD2D   LD       I, $D2D         ; Load D2D into I
$FF6    $6B67   LD       VB, #67         ; Load 103 into VB
$FF8    $04C4   SYS      $4C4            ; System call to 4C4
$FFA    $27FB   CALL     $7FB            ; Call subroutine at 7FB
$FFC    $66E5   LD       V6, #E5         ; Load 229 into V6
$FFE    $9F58   UNKNOWN  $9F58           ; Unknown 9xxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 468 (26.1%)
  LD      : 236 (13.2%)
  JP      : 216 (12.1%)
  SNE     : 136 ( 7.6%)
  SE      : 122 ( 6.8%)
  ADD     : 122 ( 6.8%)
  DRW     : 117 ( 6.5%)
  RND     : 113 ( 6.3%)
  CALL    : 104 ( 5.8%)
  SYS     : 101 ( 5.6%)
  SHL     :  12 ( 0.7%)
  OR      :  11 ( 0.6%)
  XOR     :   8 ( 0.4%)
  AND     :   7 ( 0.4%)
  SUB     :   5 ( 0.3%)
  SHR     :   5 ( 0.3%)
  SUBN    :   4 ( 0.2%)
  SKP     :   3 ( 0.2%)
  SKNP    :   1 ( 0.1%)

Memory Operations: 358 (20.0%)
Arithmetic Operations: 157 (8.8%)
