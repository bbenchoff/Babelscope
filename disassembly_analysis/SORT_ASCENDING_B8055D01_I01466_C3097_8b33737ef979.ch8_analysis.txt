
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B8055D01_I01466_C3097_8b33737ef979.ch8
ROM Size: 3584 bytes
Instructions Found: 1782

DISCOVERY INFORMATION:
Batch: 8055
Instance: 1466
Direction: ascending
Final Array: [0, 0, 0, 0, 2, 2, 113, 180]
Operations: R:0 W:6 C:181 S:2

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 113
Sort Array References:
  $218: LD I, $5AE ; Load 5AE into I
  $268: LD I, $BE7 ; Load BE7 into I
  $26C: LD I, $017 ; Load 017 into I
  $2BA: LD I, $623 ; Load 623 into I
  $2C4: LD I, $6E0 ; Load 6E0 into I
  $2CA: LD I, $806 ; Load 806 into I
  $2DA: LD I, $FEB ; Load FEB into I
  $2DC: LD I, $237 ; Load 237 into I
  $2EE: LD I, $885 ; Load 885 into I
  $358: LD I, $D72 ; Load D72 into I
  $360: LD I, $D11 ; Load D11 into I
  $364: LD I, $B9C ; Load B9C into I
  $382: LD I, $BB3 ; Load BB3 into I
  $38C: LD I, $F94 ; Load F94 into I
  $38E: LD I, $E87 ; Load E87 into I
  $3A0: LD I, $ED5 ; Load ED5 into I
  $3B4: LD I, $5C3 ; Load 5C3 into I
  $3E4: LD I, $830 ; Load 830 into I
  $3F4: LD I, $A8B ; Load A8B into I
  $400: LD I, $139 ; Load 139 into I
  $41E: LD I, $2EE ; Load 2EE into I
  $454: LD I, $FA6 ; Load FA6 into I
  $4E6: LD I, $F38 ; Load F38 into I
  $4F2: LD I, $F28 ; Load F28 into I
  $4F6: LD I, $6B5 ; Load 6B5 into I
  $506: LD I, $304 ; Load 304 into I
  $516: LD I, $6B1 ; Load 6B1 into I
  $53E: LD I, $198 ; Load 198 into I
  $544: LD I, $EF9 ; Load EF9 into I
  $548: LD I, $7C6 ; Load 7C6 into I
  $54E: LD I, $B39 ; Load B39 into I
  $568: LD I, $4C0 ; Load 4C0 into I
  $576: LD I, $C03 ; Load C03 into I
  $578: LD I, $998 ; Load 998 into I
  $5C2: LD I, $538 ; Load 538 into I
  $5C6: LD I, $EB4 ; Load EB4 into I
  $5E4: LD I, $351 ; Load 351 into I
  $5F0: LD I, $548 ; Load 548 into I
  $602: LD I, $433 ; Load 433 into I
  $614: LD I, $3B3 ; Load 3B3 into I
  $622: LD I, $A7C ; Load A7C into I
  $632: LD I, $703 ; Load 703 into I
  $67E: LD I, $A6E ; Load A6E into I
  $6A8: LD I, $030 ; Load 030 into I
  $6E6: LD I, $C46 ; Load C46 into I
  $704: LD I, $251 ; Load 251 into I
  $72E: LD I, $99C ; Load 99C into I
  $736: LD I, $5EA ; Load 5EA into I
  $750: LD I, $280 ; Load 280 into I
  $752: LD I, $A32 ; Load A32 into I
  $75C: LD I, $8DA ; Load 8DA into I
  $768: LD I, $196 ; Load 196 into I
  $7E8: LD I, $AE9 ; Load AE9 into I
  $86C: LD I, $161 ; Load 161 into I
  $870: LD I, $E87 ; Load E87 into I
  $888: LD I, $F5B ; Load F5B into I
  $892: LD I, $CC1 ; Load CC1 into I
  $8BA: LD I, $6BB ; Load 6BB into I
  $8DA: LD I, $7EA ; Load 7EA into I
  $8F6: LD I, $ED7 ; Load ED7 into I
  $94C: LD I, $0E4 ; Load 0E4 into I
  $952: LD I, $26A ; Load 26A into I
  $956: LD I, $043 ; Load 043 into I
  $95C: LD I, $FA7 ; Load FA7 into I
  $978: LD I, $E55 ; Load E55 into I
  $9AE: LD I, $1ED ; Load 1ED into I
  $9C2: LD I, $B61 ; Load B61 into I
  $9CC: LD I, $E0B ; Load E0B into I
  $9FE: LD I, $1AE ; Load 1AE into I
  $A02: LD I, $56E ; Load 56E into I
  $A0A: LD I, $0A4 ; Load 0A4 into I
  $A1C: LD I, $486 ; Load 486 into I
  $A28: LD I, $3BC ; Load 3BC into I
  $A38: LD I, $89F ; Load 89F into I
  $A46: LD I, $EAE ; Load EAE into I
  $A4C: LD I, $3F0 ; Load 3F0 into I
  $A54: LD I, $EEA ; Load EEA into I
  $A96: LD I, $C60 ; Load C60 into I
  $AD4: LD I, $190 ; Load 190 into I
  $AFA: LD I, $378 ; Load 378 into I
  $B06: LD I, $D52 ; Load D52 into I
  $B08: LD I, $F3B ; Load F3B into I
  $B38: LD I, $C87 ; Load C87 into I
  $B3E: LD I, $3C7 ; Load 3C7 into I
  $B74: LD I, $8F1 ; Load 8F1 into I
  $C18: LD I, $0A2 ; Load 0A2 into I
  $C42: LD I, $3CA ; Load 3CA into I
  $C88: LD I, $650 ; Load 650 into I
  $CA6: LD I, $9B4 ; Load 9B4 into I
  $CB4: LD I, $88F ; Load 88F into I
  $CE4: LD I, $024 ; Load 024 into I
  $D20: LD I, $E16 ; Load E16 into I
  $D2A: LD I, $190 ; Load 190 into I
  $D44: LD I, $5B5 ; Load 5B5 into I
  $D92: LD I, $19C ; Load 19C into I
  $DD4: LD I, $6CA ; Load 6CA into I
  $E16: LD I, $54D ; Load 54D into I
  $E1C: LD I, $BDC ; Load BDC into I
  $E58: LD I, $996 ; Load 996 into I
  $E64: LD I, $8B9 ; Load 8B9 into I
  $E76: LD I, $6D0 ; Load 6D0 into I
  $E9E: LD I, $7CC ; Load 7CC into I
  $EBA: LD I, $4F7 ; Load 4F7 into I
  $EC4: LD I, $337 ; Load 337 into I
  $EF2: LD I, $FE1 ; Load FE1 into I
  $EF6: LD I, $8E5 ; Load 8E5 into I
  $EFC: LD I, $C3F ; Load C3F into I
  $F40: LD I, $D3A ; Load D3A into I
  $F64: LD I, $8F8 ; Load 8F8 into I
  $F88: LD I, $72F ; Load 72F into I
  $F9A: LD I, $2DB ; Load 2DB into I
  $FB8: LD I, $87A ; Load 87A into I
  $FBE: LD I, $CD3 ; Load CD3 into I

CONTROL FLOW ANALYSIS:
Jumps: 235
Calls: 117
Branches: 219
Loops: 124
Loop Structures:
  $266 -> $08A (backward jump)
  $2F2 -> $2C1 (backward jump)
  $310 -> $044 (backward jump)
  $3BA -> $04D (backward jump)
  $4B8 -> $1BD (backward jump)
  $546 -> $3D9 (backward jump)
  $572 -> $3B8 (backward jump)
  $5B0 -> $0CE (backward jump)
  $5BE -> $075 (backward jump)
  $5CE -> $30F (backward jump)
  $656 -> $399 (backward jump)
  $658 -> $342 (backward jump)
  $662 -> $250 (backward jump)
  $672 -> $357 (backward jump)
  $6CE -> $038 (backward jump)
  $6FE -> $565 (backward jump)
  $712 -> $163 (backward jump)
  $720 -> $07E (backward jump)
  $724 -> $118 (backward jump)
  $74E -> $2DD (backward jump)
  $776 -> $1C5 (backward jump)
  $7D0 -> $65F (backward jump)
  $7D8 -> $6A4 (backward jump)
  $7EA -> $3DC (backward jump)
  $7EC -> $13D (backward jump)
  $7FC -> $001 (backward jump)
  $802 -> $721 (backward jump)
  $824 -> $631 (backward jump)
  $852 -> $49E (backward jump)
  $88A -> $03A (backward jump)
  $8C0 -> $6AC (backward jump)
  $8C4 -> $1F3 (backward jump)
  $8EC -> $1D4 (backward jump)
  $936 -> $8D4 (backward jump)
  $938 -> $19E (backward jump)
  $968 -> $257 (backward jump)
  $96C -> $944 (backward jump)
  $97C -> $19E (backward jump)
  $9DC -> $1FE (backward jump)
  $9E4 -> $4E8 (backward jump)
  $A32 -> $35D (backward jump)
  $A42 -> $3B1 (backward jump)
  $A48 -> $51A (backward jump)
  $A50 -> $681 (backward jump)
  $A6A -> $3C2 (backward jump)
  $A98 -> $4C9 (backward jump)
  $AC0 -> $678 (backward jump)
  $ACA -> $5DD (backward jump)
  $B02 -> $945 (backward jump)
  $B1C -> $B06 (backward jump)
  $B42 -> $9E1 (backward jump)
  $B5C -> $76A (backward jump)
  $B60 -> $0F4 (backward jump)
  $B6E -> $6C5 (backward jump)
  $B94 -> $83F (backward jump)
  $B9A -> $541 (backward jump)
  $BA4 -> $A28 (backward jump)
  $BAE -> $52F (backward jump)
  $BB6 -> $BA6 (backward jump)
  $BC4 -> $44F (backward jump)
  $BE2 -> $A22 (backward jump)
  $BFA -> $6A4 (backward jump)
  $C3E -> $91A (backward jump)
  $C46 -> $3E9 (backward jump)
  $C4E -> $056 (backward jump)
  $C68 -> $60E (backward jump)
  $C76 -> $A39 (backward jump)
  $C7A -> $BBF (backward jump)
  $C8C -> $9C4 (backward jump)
  $C8E -> $49F (backward jump)
  $C9C -> $AF0 (backward jump)
  $CC0 -> $75B (backward jump)
  $CC6 -> $2AF (backward jump)
  $CD0 -> $4C6 (backward jump)
  $CDC -> $995 (backward jump)
  $CE2 -> $111 (backward jump)
  $CF2 -> $86E (backward jump)
  $CFC -> $B90 (backward jump)
  $D38 -> $79E (backward jump)
  $D40 -> $3E9 (backward jump)
  $D5A -> $D0B (backward jump)
  $D60 -> $4C4 (backward jump)
  $D98 -> $D05 (backward jump)
  $D9A -> $82E (backward jump)
  $DA6 -> $987 (backward jump)
  $DA8 -> $38D (backward jump)
  $DBA -> $199 (backward jump)
  $DCC -> $BB7 (backward jump)
  $DCE -> $B1F (backward jump)
  $DDA -> $C55 (backward jump)
  $E06 -> $5F9 (backward jump)
  $E0C -> $B59 (backward jump)
  $E2C -> $512 (backward jump)
  $E46 -> $75E (backward jump)
  $E4A -> $CEA (backward jump)
  $E84 -> $3C4 (backward jump)
  $E88 -> $D72 (backward jump)
  $E92 -> $BE7 (backward jump)
  $E9C -> $9D1 (backward jump)
  $EB2 -> $A42 (backward jump)
  $EB6 -> $DD1 (backward jump)
  $ECE -> $1C9 (backward jump)
  $ED8 -> $75F (backward jump)
  $EF8 -> $6BA (backward jump)
  $F06 -> $305 (backward jump)
  $F12 -> $337 (backward jump)
  $F1A -> $3A0 (backward jump)
  $F20 -> $D3A (backward jump)
  $F22 -> $243 (backward jump)
  $F3E -> $511 (backward jump)
  $F5E -> $440 (backward jump)
  $F66 -> $0CF (backward jump)
  $F6E -> $E2D (backward jump)
  $F90 -> $C4A (backward jump)
  $F98 -> $430 (backward jump)
  $FB2 -> $491 (backward jump)
  $FD6 -> $1D2 (backward jump)
  $FD8 -> $F9F (backward jump)
  $FDE -> $DB3 (backward jump)
  $FE4 -> $EC2 (backward jump)
  $FE8 -> $D45 (backward jump)
  $FF0 -> $D60 (backward jump)
  $FF2 -> $B1E (backward jump)
  $FF4 -> $1EE (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $F46C   UNKNOWN  F46C            ; Unknown Fxxx instruction
$202    $BB04   JP       V0, $B04        ; Jump to V0 + B04
$204    $2DCF   CALL     $DCF            ; Call subroutine at DCF
$206    $E049   UNKNOWN  $E049           ; Unknown Exxx instruction
$208    $6B99   LD       VB, #99         ; Load 153 into VB
$20A    $B8AC   JP       V0, $8AC        ; Jump to V0 + 8AC
$20C    $5BD7   UNKNOWN  $5BD7           ; Unknown 5xxx instruction
$20E    $884D   UNKNOWN  884D            ; Unknown 8xxx instruction
$210    $9CC8   UNKNOWN  $9CC8           ; Unknown 9xxx instruction
$212    $6A5C   LD       VA, #5C         ; Load 92 into VA
$214    $87EC   UNKNOWN  87EC            ; Unknown 8xxx instruction
$216    $5946   UNKNOWN  $5946           ; Unknown 5xxx instruction
$218    $A5AE   LD       I, $5AE         ; Load 5AE into I
$21A    $4551   SNE      V5, #51         ; Skip if V5 != 81
$21C    $2EF4   CALL     $EF4            ; Call subroutine at EF4
$21E    $D9DA   DRW      V9, VD, #A      ; Draw 10-byte sprite at V9, VD
$220    $26C6   CALL     $6C6            ; Call subroutine at 6C6
$222    $270C   CALL     $70C            ; Call subroutine at 70C
$224    $0F99   SYS      $F99            ; System call to F99
$226    $125C   JP       $25C            ; Jump to 25C
$228    $FF6C   UNKNOWN  FF6C            ; Unknown Fxxx instruction
$22A    $EA23   UNKNOWN  $EA23           ; Unknown Exxx instruction
$22C    $795D   ADD      V9, #5D         ; Add 93 to V9
$22E    $EB0B   UNKNOWN  $EB0B           ; Unknown Exxx instruction
$230    $DF2C   DRW      VF, V2, #C      ; Draw 12-byte sprite at VF, V2
$232    $5982   UNKNOWN  $5982           ; Unknown 5xxx instruction
$234    $DF37   DRW      VF, V3, #7      ; Draw 7-byte sprite at VF, V3
$236    $B56D   JP       V0, $56D        ; Jump to V0 + 56D
$238    $8B32   AND      VB, V3          ; VB &= V3
$23A    $B8DB   JP       V0, $8DB        ; Jump to V0 + 8DB
$23C    $8191   OR       V1, V9          ; V1 |= V9
$23E    $D251   DRW      V2, V5, #1      ; Draw 1-byte sprite at V2, V5
$240    $0B07   SYS      $B07            ; System call to B07
$242    $34EC   SE       V4, #EC         ; Skip if V4 == 236
$244    $E27F   UNKNOWN  $E27F           ; Unknown Exxx instruction
$246    $E997   UNKNOWN  $E997           ; Unknown Exxx instruction
$248    $B663   JP       V0, $663        ; Jump to V0 + 663
$24A    $C3CC   RND      V3, #CC         ; V3 = random & CC
$24C    $FC05   UNKNOWN  FC05            ; Unknown Fxxx instruction
$24E    $82EB   UNKNOWN  82EB            ; Unknown 8xxx instruction
$250    $F8CE   UNKNOWN  F8CE            ; Unknown Fxxx instruction
$252    $7ADD   ADD      VA, #DD         ; Add 221 to VA
$254    $876E   SHL      V7              ; V7 <<= 1, VF = MSB
$256    $3636   SE       V6, #36         ; Skip if V6 == 54
$258    $7D30   ADD      VD, #30         ; Add 48 to VD
$25A    $061E   SYS      $61E            ; System call to 61E
$25C    $39DC   SE       V9, #DC         ; Skip if V9 == 220
$25E    $8675   SUB      V6, V7          ; V6 -= V7, VF = !borrow
$260    $5E4F   UNKNOWN  $5E4F           ; Unknown 5xxx instruction
$262    $B7FE   JP       V0, $7FE        ; Jump to V0 + 7FE
$264    $0D3A   SYS      $D3A            ; System call to D3A
$266    $B08A   JP       V0, $08A        ; Jump to V0 + 08A
$268    $ABE7   LD       I, $BE7         ; Load BE7 into I
$26A    $4253   SNE      V2, #53         ; Skip if V2 != 83
$26C    $A017   LD       I, $017         ; Load 017 into I
$26E    $69F0   LD       V9, #F0         ; Load 240 into V9
$270    $C840   RND      V8, #40         ; V8 = random & 40
$272    $DF6E   DRW      VF, V6, #E      ; Draw 14-byte sprite at VF, V6
$274    $2E65   CALL     $E65            ; Call subroutine at E65
$276    $0DB2   SYS      $DB2            ; System call to DB2
$27A    $0200   SYS      $200            ; System call to 200
$27C    $0002   SYS      $002            ; System call to 002
$27E    $4BD4   SNE      VB, #D4         ; Skip if VB != 212
$280    $2100   CALL     $100            ; Call subroutine at 100
$282    $0002   SYS      $002            ; System call to 002
$284    $022B   SYS      $22B            ; System call to 22B
$286    $E3AE   UNKNOWN  $E3AE           ; Unknown Exxx instruction
$288    $BFC8   JP       V0, $FC8        ; Jump to V0 + FC8
$28A    $2956   CALL     $956            ; Call subroutine at 956
$28C    $18C0   JP       $8C0            ; Jump to 8C0
$28E    $762B   ADD      V6, #2B         ; Add 43 to V6
$290    $561B   UNKNOWN  $561B           ; Unknown 5xxx instruction
$292    $7B4B   ADD      VB, #4B         ; Add 75 to VB
$294    $5A02   UNKNOWN  $5A02           ; Unknown 5xxx instruction
$296    $8412   AND      V4, V1          ; V4 &= V1
$29C    $0202   SYS      $202            ; System call to 202
$29E    $6B2B   LD       VB, #2B         ; Load 43 into VB
$2A4    $0002   SYS      $002            ; System call to 002
$2A6    $E3BC   UNKNOWN  $E3BC           ; Unknown Exxx instruction
$2A8    $27CC   CALL     $7CC            ; Call subroutine at 7CC
$2AA    $8745   SUB      V7, V4          ; V7 -= V4, VF = !borrow
$2AC    $8E86   SHR      VE              ; VE >>= 1, VF = LSB
$2AE    $562D   UNKNOWN  $562D           ; Unknown 5xxx instruction
$2B0    $5901   UNKNOWN  $5901           ; Unknown 5xxx instruction
$2B2    $B4E9   JP       V0, $4E9        ; Jump to V0 + 4E9
$2B4    $5162   UNKNOWN  $5162           ; Unknown 5xxx instruction
$2B6    $2169   CALL     $169            ; Call subroutine at 169
$2B8    $42B4   SNE      V2, #B4         ; Skip if V2 != 180
$2BA    $A623   LD       I, $623         ; Load 623 into I
$2BC    $9D9A   UNKNOWN  $9D9A           ; Unknown 9xxx instruction
$2BE    $D331   DRW      V3, V3, #1      ; Draw 1-byte sprite at V3, V3
$2C0    $0CC4   SYS      $CC4            ; System call to CC4
$2C2    $8D2C   UNKNOWN  8D2C            ; Unknown 8xxx instruction
$2C4    $A6E0   LD       I, $6E0         ; Load 6E0 into I
$2C6    $78EF   ADD      V8, #EF         ; Add 239 to V8
$2C8    $C45E   RND      V4, #5E         ; V4 = random & 5E
$2CA    $A806   LD       I, $806         ; Load 806 into I
$2CC    $DCB5   DRW      VC, VB, #5      ; Draw 5-byte sprite at VC, VB
$2CE    $15C3   JP       $5C3            ; Jump to 5C3
$2D0    $5ADD   UNKNOWN  $5ADD           ; Unknown 5xxx instruction
$2D2    $45C2   SNE      V5, #C2         ; Skip if V5 != 194
$2D4    $68B8   LD       V8, #B8         ; Load 184 into V8
$2D6    $CCE2   RND      VC, #E2         ; VC = random & E2
$2D8    $6060   LD       V0, #60         ; Load 96 into V0
$2DA    $AFEB   LD       I, $FEB         ; Load FEB into I
$2DC    $A237   LD       I, $237         ; Load 237 into I
$2DE    $D542   DRW      V5, V4, #2      ; Draw 2-byte sprite at V5, V4
$2E0    $5670   SE       V6, V7          ; Skip if V6 == V7
$2E2    $3AC0   SE       VA, #C0         ; Skip if VA == 192
$2E4    $0A55   SYS      $A55            ; System call to A55
$2E6    $168D   JP       $68D            ; Jump to 68D
$2E8    $FA8E   UNKNOWN  FA8E            ; Unknown Fxxx instruction
$2EA    $78DA   ADD      V8, #DA         ; Add 218 to V8
$2EC    $5E96   UNKNOWN  $5E96           ; Unknown 5xxx instruction
$2EE    $A885   LD       I, $885         ; Load 885 into I
$2F0    $9A2D   UNKNOWN  $9A2D           ; Unknown 9xxx instruction
$2F2    $B2C1   JP       V0, $2C1        ; Jump to V0 + 2C1
$2F4    $E1A0   UNKNOWN  $E1A0           ; Unknown Exxx instruction
$2F6    $F440   UNKNOWN  F440            ; Unknown Fxxx instruction
$2FA    $0200   SYS      $200            ; System call to 200
$2FC    $0002   SYS      $002            ; System call to 002
$2FE    $9DB1   UNKNOWN  $9DB1           ; Unknown 9xxx instruction
$304    $0202   SYS      $202            ; System call to 202
$306    $71B4   ADD      V1, #B4         ; Add 180 to V1
$308    $F8EA   UNKNOWN  F8EA            ; Unknown Fxxx instruction
$30A    $32E6   SE       V2, #E6         ; Skip if V2 == 230
$30C    $7F79   ADD      VF, #79         ; Add 121 to VF
$30E    $E2BA   UNKNOWN  $E2BA           ; Unknown Exxx instruction
$310    $1044   JP       $044            ; Jump to 044
$312    $65A1   LD       V5, #A1         ; Load 161 into V5
$314    $2F6C   CALL     $F6C            ; Call subroutine at F6C
$316    $31D6   SE       V1, #D6         ; Skip if V1 == 214
$318    $8A00   LD       VA, V0          ; VA = V0
$31A    $0002   SYS      $002            ; System call to 002
$31C    $0002   SYS      $002            ; System call to 002
$31E    $DD0B   DRW      VD, V0, #B      ; Draw 11-byte sprite at VD, V0
$324    $0209   SYS      $209            ; System call to 209
$326    $D274   DRW      V2, V7, #4      ; Draw 4-byte sprite at V2, V7
$328    $49A0   SNE      V9, #A0         ; Skip if V9 != 160
$32A    $73FA   ADD      V3, #FA         ; Add 250 to V3
$32C    $C2CE   RND      V2, #CE         ; V2 = random & CE
$32E    $57C1   UNKNOWN  $57C1           ; Unknown 5xxx instruction
$330    $E6BA   UNKNOWN  $E6BA           ; Unknown Exxx instruction
$332    $C510   RND      V5, #10         ; V5 = random & 10
$334    $7572   ADD      V5, #72         ; Add 114 to V5
$336    $8AA5   SUB      VA, VA          ; VA -= VA, VF = !borrow
$338    $3EC4   SE       VE, #C4         ; Skip if VE == 196
$33A    $0D67   SYS      $D67            ; System call to D67
$33C    $ECCC   UNKNOWN  $ECCC           ; Unknown Exxx instruction
$33E    $6978   LD       V9, #78         ; Load 120 into V9
$340    $CD29   RND      VD, #29         ; VD = random & 29
$342    $DB17   DRW      VB, V1, #7      ; Draw 7-byte sprite at VB, V1
$344    $05EC   SYS      $5EC            ; System call to 5EC
$346    $25E7   CALL     $5E7            ; Call subroutine at 5E7
$348    $E497   UNKNOWN  $E497           ; Unknown Exxx instruction
$34A    $BBB9   JP       V0, $BB9        ; Jump to V0 + BB9
$34C    $E8C4   UNKNOWN  $E8C4           ; Unknown Exxx instruction
$34E    $3CAE   SE       VC, #AE         ; Skip if VC == 174
$350    $70DE   ADD      V0, #DE         ; Add 222 to V0
$352    $CC64   RND      VC, #64         ; VC = random & 64
$354    $FBB1   UNKNOWN  FBB1            ; Unknown Fxxx instruction
$356    $5C62   UNKNOWN  $5C62           ; Unknown 5xxx instruction
$358    $AD72   LD       I, $D72         ; Load D72 into I
$35A    $4D3E   SNE      VD, #3E         ; Skip if VD != 62
$35C    $F66D   UNKNOWN  F66D            ; Unknown Fxxx instruction
$35E    $4613   SNE      V6, #13         ; Skip if V6 != 19
$360    $AD11   LD       I, $D11         ; Load D11 into I
$362    $2C39   CALL     $C39            ; Call subroutine at C39
$364    $AB9C   LD       I, $B9C         ; Load B9C into I
$366    $2AC7   CALL     $AC7            ; Call subroutine at AC7
$368    $8B1E   SHL      VB              ; VB <<= 1, VF = MSB
$36A    $9DF2   UNKNOWN  $9DF2           ; Unknown 9xxx instruction
$36C    $8F49   UNKNOWN  8F49            ; Unknown 8xxx instruction
$36E    $77FA   ADD      V7, #FA         ; Add 250 to V7
$370    $6851   LD       V8, #51         ; Load 81 into V8
$372    $C2DA   RND      V2, #DA         ; V2 = random & DA
$374    $3948   SE       V9, #48         ; Skip if V9 == 72
$376    $E044   UNKNOWN  $E044           ; Unknown Exxx instruction
$378    $DF94   DRW      VF, V9, #4      ; Draw 4-byte sprite at VF, V9
$37A    $EFAF   UNKNOWN  $EFAF           ; Unknown Exxx instruction
$37C    $89B4   ADD      V9, VB          ; V9 += VB, VF = carry
$37E    $89C3   XOR      V9, VC          ; V9 ^= VC
$380    $3FA2   SE       VF, #A2         ; Skip if VF == 162
$382    $ABB3   LD       I, $BB3         ; Load BB3 into I
$384    $35FE   SE       V5, #FE         ; Skip if V5 == 254
$386    $668D   LD       V6, #8D         ; Load 141 into V6
$388    $ED85   UNKNOWN  $ED85           ; Unknown Exxx instruction
$38A    $FC3D   UNKNOWN  FC3D            ; Unknown Fxxx instruction
$38C    $AF94   LD       I, $F94         ; Load F94 into I
$38E    $AE87   LD       I, $E87         ; Load E87 into I
$390    $D35C   DRW      V3, V5, #C      ; Draw 12-byte sprite at V3, V5
$392    $17ED   JP       $7ED            ; Jump to 7ED
$394    $8141   OR       V1, V4          ; V1 |= V4
$396    $72F6   ADD      V2, #F6         ; Add 246 to V2
$398    $81D3   XOR      V1, VD          ; V1 ^= VD
$39A    $C440   RND      V4, #40         ; V4 = random & 40
$39C    $675C   LD       V7, #5C         ; Load 92 into V7
$39E    $6FE3   LD       VF, #E3         ; Load 227 into VF
$3A0    $AED5   LD       I, $ED5         ; Load ED5 into I
$3A2    $C2E2   RND      V2, #E2         ; V2 = random & E2
$3A4    $6F94   LD       VF, #94         ; Load 148 into VF
$3A6    $64F0   LD       V4, #F0         ; Load 240 into V4
$3A8    $8039   UNKNOWN  8039            ; Unknown 8xxx instruction
$3AA    $445D   SNE      V4, #5D         ; Skip if V4 != 93
$3AC    $9A33   UNKNOWN  $9A33           ; Unknown 9xxx instruction
$3AE    $00C1   SYS      $0C1            ; System call to 0C1
$3B0    $9B46   UNKNOWN  $9B46           ; Unknown 9xxx instruction
$3B2    $DD48   DRW      VD, V4, #8      ; Draw 8-byte sprite at VD, V4
$3B4    $A5C3   LD       I, $5C3         ; Load 5C3 into I
$3B6    $8BD1   OR       VB, VD          ; VB |= VD
$3B8    $2C6D   CALL     $C6D            ; Call subroutine at C6D
$3BA    $B04D   JP       V0, $04D        ; Jump to V0 + 04D
$3BC    $37FD   SE       V7, #FD         ; Skip if V7 == 253
$3BE    $0340   SYS      $340            ; System call to 340
$3C0    $C01E   RND      V0, #1E         ; V0 = random & 1E
$3C2    $6D2C   LD       VD, #2C         ; Load 44 into VD
$3C4    $906F   UNKNOWN  $906F           ; Unknown 9xxx instruction
$3C6    $0B2F   SYS      $B2F            ; System call to B2F
$3C8    $D52E   DRW      V5, V2, #E      ; Draw 14-byte sprite at V5, V2
$3CA    $1E8D   JP       $E8D            ; Jump to E8D
$3CC    $1E8C   JP       $E8C            ; Jump to E8C
$3CE    $3D69   SE       VD, #69         ; Skip if VD == 105
$3D0    $5C77   UNKNOWN  $5C77           ; Unknown 5xxx instruction
$3D2    $81B8   UNKNOWN  81B8            ; Unknown 8xxx instruction
$3D4    $0AB6   SYS      $AB6            ; System call to AB6
$3D6    $FA14   UNKNOWN  FA14            ; Unknown Fxxx instruction
$3D8    $E565   UNKNOWN  $E565           ; Unknown Exxx instruction
$3DA    $4E7E   SNE      VE, #7E         ; Skip if VE != 126
$3DC    $8A09   UNKNOWN  8A09            ; Unknown 8xxx instruction
$3DE    $F52A   UNKNOWN  F52A            ; Unknown Fxxx instruction
$3E0    $761C   ADD      V6, #1C         ; Add 28 to V6
$3E2    $BCA1   JP       V0, $CA1        ; Jump to V0 + CA1
$3E4    $A830   LD       I, $830         ; Load 830 into I
$3E6    $C4E0   RND      V4, #E0         ; V4 = random & E0
$3E8    $2B34   CALL     $B34            ; Call subroutine at B34
$3EA    $4513   SNE      V5, #13         ; Skip if V5 != 19
$3EC    $EBED   UNKNOWN  $EBED           ; Unknown Exxx instruction
$3EE    $3B33   SE       VB, #33         ; Skip if VB == 51
$3F0    $47FB   SNE      V7, #FB         ; Skip if V7 != 251
$3F2    $5025   UNKNOWN  $5025           ; Unknown 5xxx instruction
$3F4    $AA8B   LD       I, $A8B         ; Load A8B into I
$3F6    $2E89   CALL     $E89            ; Call subroutine at E89
$3F8    $61F7   LD       V1, #F7         ; Load 247 into V1
$3FA    $1B69   JP       $B69            ; Jump to B69
$3FC    $E8EE   UNKNOWN  $E8EE           ; Unknown Exxx instruction
$3FE    $C7B1   RND      V7, #B1         ; V7 = random & B1
$400    $A139   LD       I, $139         ; Load 139 into I
$402    $7AB5   ADD      VA, #B5         ; Add 181 to VA
$404    $F944   UNKNOWN  F944            ; Unknown Fxxx instruction
$406    $4ABF   SNE      VA, #BF         ; Skip if VA != 191
$408    $3662   SE       V6, #62         ; Skip if V6 == 98
$40A    $1917   JP       $917            ; Jump to 917
$40C    $28D1   CALL     $8D1            ; Call subroutine at 8D1
$40E    $CF31   RND      VF, #31         ; VF = random & 31
$410    $4A43   SNE      VA, #43         ; Skip if VA != 67
$412    $055F   SYS      $55F            ; System call to 55F
$414    $CD96   RND      VD, #96         ; VD = random & 96
$416    $E802   UNKNOWN  $E802           ; Unknown Exxx instruction
$418    $D606   DRW      V6, V0, #6      ; Draw 6-byte sprite at V6, V0
$41A    $C8F1   RND      V8, #F1         ; V8 = random & F1
$41C    $7425   ADD      V4, #25         ; Add 37 to V4
$41E    $A2EE   LD       I, $2EE         ; Load 2EE into I
$420    $7A95   ADD      VA, #95         ; Add 149 to VA
$422    $15FD   JP       $5FD            ; Jump to 5FD
$424    $8528   UNKNOWN  8528            ; Unknown 8xxx instruction
$426    $C7AF   RND      V7, #AF         ; V7 = random & AF
$428    $8053   XOR      V0, V5          ; V0 ^= V5
$42A    $B571   JP       V0, $571        ; Jump to V0 + 571
$42C    $EDDA   UNKNOWN  $EDDA           ; Unknown Exxx instruction
$42E    $DA9E   DRW      VA, V9, #E      ; Draw 14-byte sprite at VA, V9
$430    $5A38   UNKNOWN  $5A38           ; Unknown 5xxx instruction
$432    $EC34   UNKNOWN  $EC34           ; Unknown Exxx instruction
$434    $98B2   UNKNOWN  $98B2           ; Unknown 9xxx instruction
$436    $6F1D   LD       VF, #1D         ; Load 29 into VF
$438    $E0FC   UNKNOWN  $E0FC           ; Unknown Exxx instruction
$43A    $8262   AND      V2, V6          ; V2 &= V6
$43C    $C6FA   RND      V6, #FA         ; V6 = random & FA
$43E    $BABC   JP       V0, $ABC        ; Jump to V0 + ABC
$440    $2282   CALL     $282            ; Call subroutine at 282
$442    $4673   SNE      V6, #73         ; Skip if V6 != 115
$444    $4881   SNE      V8, #81         ; Skip if V8 != 129
$446    $32C7   SE       V2, #C7         ; Skip if V2 == 199
$448    $20DE   CALL     $0DE            ; Call subroutine at 0DE
$44A    $D46C   DRW      V4, V6, #C      ; Draw 12-byte sprite at V4, V6
$44C    $FEA3   UNKNOWN  FEA3            ; Unknown Fxxx instruction
$44E    $E063   UNKNOWN  $E063           ; Unknown Exxx instruction
$450    $0692   SYS      $692            ; System call to 692
$452    $29BF   CALL     $9BF            ; Call subroutine at 9BF
$454    $AFA6   LD       I, $FA6         ; Load FA6 into I
$456    $1623   JP       $623            ; Jump to 623
$458    $6059   LD       V0, #59         ; Load 89 into V0
$45A    $EC62   UNKNOWN  $EC62           ; Unknown Exxx instruction
$45C    $DF8D   DRW      VF, V8, #D      ; Draw 13-byte sprite at VF, V8
$45E    $2693   CALL     $693            ; Call subroutine at 693
$460    $158B   JP       $58B            ; Jump to 58B
$462    $607B   LD       V0, #7B         ; Load 123 into V0
$464    $4899   SNE      V8, #99         ; Skip if V8 != 153
$466    $19D4   JP       $9D4            ; Jump to 9D4
$468    $DA12   DRW      VA, V1, #2      ; Draw 2-byte sprite at VA, V1
$46A    $CA45   RND      VA, #45         ; VA = random & 45
$46C    $2334   CALL     $334            ; Call subroutine at 334
$46E    $EC36   UNKNOWN  $EC36           ; Unknown Exxx instruction
$470    $1A5D   JP       $A5D            ; Jump to A5D
$472    $F8A7   UNKNOWN  F8A7            ; Unknown Fxxx instruction
$474    $F513   UNKNOWN  F513            ; Unknown Fxxx instruction
$476    $9681   UNKNOWN  $9681           ; Unknown 9xxx instruction
$478    $70A9   ADD      V0, #A9         ; Add 169 to V0
$47A    $D059   DRW      V0, V5, #9      ; Draw 9-byte sprite at V0, V5
$47C    $D572   DRW      V5, V7, #2      ; Draw 2-byte sprite at V5, V7
$47E    $4E5E   SNE      VE, #5E         ; Skip if VE != 94
$480    $8AAB   UNKNOWN  8AAB            ; Unknown 8xxx instruction
$482    $3F27   SE       VF, #27         ; Skip if VF == 39
$484    $6DA1   LD       VD, #A1         ; Load 161 into VD
$486    $5D27   UNKNOWN  $5D27           ; Unknown 5xxx instruction
$488    $D6D8   DRW      V6, VD, #8      ; Draw 8-byte sprite at V6, VD
$48A    $C2A5   RND      V2, #A5         ; V2 = random & A5
$48C    $C2D5   RND      V2, #D5         ; V2 = random & D5
$48E    $F7A7   UNKNOWN  F7A7            ; Unknown Fxxx instruction
$490    $5D50   SE       VD, V5          ; Skip if VD == V5
$492    $9F0E   UNKNOWN  $9F0E           ; Unknown 9xxx instruction
$494    $C41B   RND      V4, #1B         ; V4 = random & 1B
$496    $C0A9   RND      V0, #A9         ; V0 = random & A9
$498    $D6F9   DRW      V6, VF, #9      ; Draw 9-byte sprite at V6, VF
$49A    $4FFA   SNE      VF, #FA         ; Skip if VF != 250
$49C    $967A   UNKNOWN  $967A           ; Unknown 9xxx instruction
$49E    $F8D3   UNKNOWN  F8D3            ; Unknown Fxxx instruction
$4A0    $865B   UNKNOWN  865B            ; Unknown 8xxx instruction
$4A2    $CD1A   RND      VD, #1A         ; VD = random & 1A
$4A4    $5DEE   UNKNOWN  $5DEE           ; Unknown 5xxx instruction
$4A6    $D925   DRW      V9, V2, #5      ; Draw 5-byte sprite at V9, V2
$4A8    $2019   CALL     $019            ; Call subroutine at 019
$4AA    $2C32   CALL     $C32            ; Call subroutine at C32
$4AC    $2031   CALL     $031            ; Call subroutine at 031
$4AE    $CC6B   RND      VC, #6B         ; VC = random & 6B
$4B0    $1C15   JP       $C15            ; Jump to C15
$4B2    $46BA   SNE      V6, #BA         ; Skip if V6 != 186
$4B4    $DC7C   DRW      VC, V7, #C      ; Draw 12-byte sprite at VC, V7
$4B6    $C483   RND      V4, #83         ; V4 = random & 83
$4B8    $11BD   JP       $1BD            ; Jump to 1BD
$4BA    $6BE4   LD       VB, #E4         ; Load 228 into VB
$4BC    $1E83   JP       $E83            ; Jump to E83
$4BE    $8F94   ADD      VF, V9          ; VF += V9, VF = carry
$4C0    $07BE   SYS      $7BE            ; System call to 7BE
$4C2    $0991   SYS      $991            ; System call to 991
$4C4    $2450   CALL     $450            ; Call subroutine at 450
$4C6    $1704   JP       $704            ; Jump to 704
$4C8    $E6B2   UNKNOWN  $E6B2           ; Unknown Exxx instruction
$4CA    $D555   DRW      V5, V5, #5      ; Draw 5-byte sprite at V5, V5
$4CC    $0AC4   SYS      $AC4            ; System call to AC4
$4CE    $BD9A   JP       V0, $D9A        ; Jump to V0 + D9A
$4D0    $1DB7   JP       $DB7            ; Jump to DB7
$4D2    $BAB1   JP       V0, $AB1        ; Jump to V0 + AB1
$4D4    $CEFC   RND      VE, #FC         ; VE = random & FC
$4D6    $8901   OR       V9, V0          ; V9 |= V0
$4D8    $17F9   JP       $7F9            ; Jump to 7F9
$4DA    $B974   JP       V0, $974        ; Jump to V0 + 974
$4DC    $49A6   SNE      V9, #A6         ; Skip if V9 != 166
$4DE    $C8E6   RND      V8, #E6         ; V8 = random & E6
$4E0    $EDFE   UNKNOWN  $EDFE           ; Unknown Exxx instruction
$4E2    $5067   UNKNOWN  $5067           ; Unknown 5xxx instruction
$4E4    $6DB7   LD       VD, #B7         ; Load 183 into VD
$4E6    $AF38   LD       I, $F38         ; Load F38 into I
$4E8    $C2F5   RND      V2, #F5         ; V2 = random & F5
$4EA    $83F2   AND      V3, VF          ; V3 &= VF
$4EC    $8516   SHR      V5              ; V5 >>= 1, VF = LSB
$4EE    $EE62   UNKNOWN  $EE62           ; Unknown Exxx instruction
$4F0    $0C85   SYS      $C85            ; System call to C85
$4F2    $AF28   LD       I, $F28         ; Load F28 into I
$4F4    $972B   UNKNOWN  $972B           ; Unknown 9xxx instruction
$4F6    $A6B5   LD       I, $6B5         ; Load 6B5 into I
$4F8    $7D07   ADD      VD, #07         ; Add 7 to VD
$4FA    $D6B6   DRW      V6, VB, #6      ; Draw 6-byte sprite at V6, VB
$4FC    $754A   ADD      V5, #4A         ; Add 74 to V5
$4FE    $0F96   SYS      $F96            ; System call to F96
$500    $CC05   RND      VC, #05         ; VC = random & 05
$502    $DB1D   DRW      VB, V1, #D      ; Draw 13-byte sprite at VB, V1
$504    $4D1C   SNE      VD, #1C         ; Skip if VD != 28
$506    $A304   LD       I, $304         ; Load 304 into I
$508    $41AC   SNE      V1, #AC         ; Skip if V1 != 172
$50A    $0D85   SYS      $D85            ; System call to D85
$50C    $361D   SE       V6, #1D         ; Skip if V6 == 29
$50E    $BEA2   JP       V0, $EA2        ; Jump to V0 + EA2
$510    $7819   ADD      V8, #19         ; Add 25 to V8
$512    $8028   UNKNOWN  8028            ; Unknown 8xxx instruction
$514    $8EE6   SHR      VE              ; VE >>= 1, VF = LSB
$516    $A6B1   LD       I, $6B1         ; Load 6B1 into I
$518    $0BEA   SYS      $BEA            ; System call to BEA
$51A    $97A1   UNKNOWN  $97A1           ; Unknown 9xxx instruction
$51C    $29A5   CALL     $9A5            ; Call subroutine at 9A5
$51E    $B64D   JP       V0, $64D        ; Jump to V0 + 64D
$520    $BB9D   JP       V0, $B9D        ; Jump to V0 + B9D
$522    $87B3   XOR      V7, VB          ; V7 ^= VB
$524    $D04F   DRW      V0, V4, #F      ; Draw 15-byte sprite at V0, V4
$526    $7F87   ADD      VF, #87         ; Add 135 to VF
$528    $0891   SYS      $891            ; System call to 891
$52A    $D891   DRW      V8, V9, #1      ; Draw 1-byte sprite at V8, V9
$52C    $9F16   UNKNOWN  $9F16           ; Unknown 9xxx instruction
$52E    $5073   UNKNOWN  $5073           ; Unknown 5xxx instruction
$530    $7E1F   ADD      VE, #1F         ; Add 31 to VE
$532    $176B   JP       $76B            ; Jump to 76B
$534    $BBA2   JP       V0, $BA2        ; Jump to V0 + BA2
$536    $BE5D   JP       V0, $E5D        ; Jump to V0 + E5D
$538    $880D   UNKNOWN  880D            ; Unknown 8xxx instruction
$53A    $E664   UNKNOWN  $E664           ; Unknown Exxx instruction
$53C    $9E1D   UNKNOWN  $9E1D           ; Unknown 9xxx instruction
$53E    $A198   LD       I, $198         ; Load 198 into I
$540    $7071   ADD      V0, #71         ; Add 113 to V0
$542    $8160   LD       V1, V6          ; V1 = V6
$544    $AEF9   LD       I, $EF9         ; Load EF9 into I
$546    $B3D9   JP       V0, $3D9        ; Jump to V0 + 3D9
$548    $A7C6   LD       I, $7C6         ; Load 7C6 into I
$54A    $73B4   ADD      V3, #B4         ; Add 180 to V3
$54C    $2515   CALL     $515            ; Call subroutine at 515
$54E    $AB39   LD       I, $B39         ; Load B39 into I
$550    $CAAF   RND      VA, #AF         ; VA = random & AF
$552    $9943   UNKNOWN  $9943           ; Unknown 9xxx instruction
$554    $9F93   UNKNOWN  $9F93           ; Unknown 9xxx instruction
$556    $DD7B   DRW      VD, V7, #B      ; Draw 11-byte sprite at VD, V7
$558    $3A70   SE       VA, #70         ; Skip if VA == 112
$55A    $16D7   JP       $6D7            ; Jump to 6D7
$55C    $F138   UNKNOWN  F138            ; Unknown Fxxx instruction
$55E    $925F   UNKNOWN  $925F           ; Unknown 9xxx instruction
$560    $8837   SUBN     V8, V3          ; V8 = V3 - V8, VF = !borrow
$562    $BF07   JP       V0, $F07        ; Jump to V0 + F07
$564    $52D0   SE       V2, VD          ; Skip if V2 == VD
$566    $B5C8   JP       V0, $5C8        ; Jump to V0 + 5C8
$568    $A4C0   LD       I, $4C0         ; Load 4C0 into I
$56A    $61B4   LD       V1, #B4         ; Load 180 into V1
$56C    $89DD   UNKNOWN  89DD            ; Unknown 8xxx instruction
$56E    $8DE1   OR       VD, VE          ; VD |= VE
$570    $40EA   SNE      V0, #EA         ; Skip if V0 != 234
$572    $B3B8   JP       V0, $3B8        ; Jump to V0 + 3B8
$574    $EB7B   UNKNOWN  $EB7B           ; Unknown Exxx instruction
$576    $AC03   LD       I, $C03         ; Load C03 into I
$578    $A998   LD       I, $998         ; Load 998 into I
$57A    $1653   JP       $653            ; Jump to 653
$57C    $C1EE   RND      V1, #EE         ; V1 = random & EE
$57E    $CB7C   RND      VB, #7C         ; VB = random & 7C
$580    $25BC   CALL     $5BC            ; Call subroutine at 5BC
$582    $6ADB   LD       VA, #DB         ; Load 219 into VA
$584    $D269   DRW      V2, V6, #9      ; Draw 9-byte sprite at V2, V6
$586    $F587   UNKNOWN  F587            ; Unknown Fxxx instruction
$588    $480F   SNE      V8, #0F         ; Skip if V8 != 15
$58A    $DDE7   DRW      VD, VE, #7      ; Draw 7-byte sprite at VD, VE
$58C    $5657   UNKNOWN  $5657           ; Unknown 5xxx instruction
$58E    $BC1F   JP       V0, $C1F        ; Jump to V0 + C1F
$590    $259A   CALL     $59A            ; Call subroutine at 59A
$592    $41BA   SNE      V1, #BA         ; Skip if V1 != 186
$594    $60FA   LD       V0, #FA         ; Load 250 into V0
$596    $1635   JP       $635            ; Jump to 635
$598    $7DA0   ADD      VD, #A0         ; Add 160 to VD
$59A    $001F   SYS      $01F            ; System call to 01F
$59C    $D338   DRW      V3, V3, #8      ; Draw 8-byte sprite at V3, V3
$59E    $715B   ADD      V1, #5B         ; Add 91 to V1
$5A0    $DA6A   DRW      VA, V6, #A      ; Draw 10-byte sprite at VA, V6
$5A2    $C710   RND      V7, #10         ; V7 = random & 10
$5A4    $D9E1   DRW      V9, VE, #1      ; Draw 1-byte sprite at V9, VE
$5A6    $28D4   CALL     $8D4            ; Call subroutine at 8D4
$5A8    $673C   LD       V7, #3C         ; Load 60 into V7
$5AA    $8F47   SUBN     VF, V4          ; VF = V4 - VF, VF = !borrow
$5AC    $49CB   SNE      V9, #CB         ; Skip if V9 != 203
$5AE    $D096   DRW      V0, V9, #6      ; Draw 6-byte sprite at V0, V9
$5B0    $B0CE   JP       V0, $0CE        ; Jump to V0 + 0CE
$5B2    $3C58   SE       VC, #58         ; Skip if VC == 88
$5B4    $69EB   LD       V9, #EB         ; Load 235 into V9
$5B6    $67B2   LD       V7, #B2         ; Load 178 into V7
$5B8    $8219   UNKNOWN  8219            ; Unknown 8xxx instruction
$5BA    $F538   UNKNOWN  F538            ; Unknown Fxxx instruction
$5BC    $4363   SNE      V3, #63         ; Skip if V3 != 99
$5BE    $B075   JP       V0, $075        ; Jump to V0 + 075
$5C0    $E3E4   UNKNOWN  $E3E4           ; Unknown Exxx instruction
$5C2    $A538   LD       I, $538         ; Load 538 into I
$5C4    $2ED0   CALL     $ED0            ; Call subroutine at ED0
$5C6    $AEB4   LD       I, $EB4         ; Load EB4 into I
$5C8    $2425   CALL     $425            ; Call subroutine at 425
$5CA    $67BA   LD       V7, #BA         ; Load 186 into V7
$5CC    $C66B   RND      V6, #6B         ; V6 = random & 6B
$5CE    $B30F   JP       V0, $30F        ; Jump to V0 + 30F
$5D0    $D681   DRW      V6, V8, #1      ; Draw 1-byte sprite at V6, V8
$5D2    $0C94   SYS      $C94            ; System call to C94
$5D4    $B9B1   JP       V0, $9B1        ; Jump to V0 + 9B1
$5D6    $BE12   JP       V0, $E12        ; Jump to V0 + E12
$5D8    $E817   UNKNOWN  $E817           ; Unknown Exxx instruction
$5DA    $9ACA   UNKNOWN  $9ACA           ; Unknown 9xxx instruction
$5DC    $45C0   SNE      V5, #C0         ; Skip if V5 != 192
$5DE    $00B5   SYS      $0B5            ; System call to 0B5
$5E0    $C14E   RND      V1, #4E         ; V1 = random & 4E
$5E2    $0D4E   SYS      $D4E            ; System call to D4E
$5E4    $A351   LD       I, $351         ; Load 351 into I
$5E6    $09EA   SYS      $9EA            ; System call to 9EA
$5E8    $391B   SE       V9, #1B         ; Skip if V9 == 27
$5EA    $253B   CALL     $53B            ; Call subroutine at 53B
$5EC    $8F30   LD       VF, V3          ; VF = V3
$5EE    $B727   JP       V0, $727        ; Jump to V0 + 727
$5F0    $A548   LD       I, $548         ; Load 548 into I
$5F2    $0374   SYS      $374            ; System call to 374
$5F4    $7F8C   ADD      VF, #8C         ; Add 140 to VF
$5F6    $7804   ADD      V8, #04         ; Add 4 to V8
$5F8    $EA5F   UNKNOWN  $EA5F           ; Unknown Exxx instruction
$5FA    $D61F   DRW      V6, V1, #F      ; Draw 15-byte sprite at V6, V1
$5FC    $9954   UNKNOWN  $9954           ; Unknown 9xxx instruction
$5FE    $EC02   UNKNOWN  $EC02           ; Unknown Exxx instruction
$600    $C22D   RND      V2, #2D         ; V2 = random & 2D
$602    $A433   LD       I, $433         ; Load 433 into I
$604    $49E9   SNE      V9, #E9         ; Skip if V9 != 233
$606    $581B   UNKNOWN  $581B           ; Unknown 5xxx instruction
$608    $4D1F   SNE      VD, #1F         ; Skip if VD != 31
$60A    $390C   SE       V9, #0C         ; Skip if V9 == 12
$60C    $FABE   UNKNOWN  FABE            ; Unknown Fxxx instruction
$60E    $0C6B   SYS      $C6B            ; System call to C6B
$610    $362A   SE       V6, #2A         ; Skip if V6 == 42
$612    $0104   SYS      $104            ; System call to 104
$614    $A3B3   LD       I, $3B3         ; Load 3B3 into I
$616    $559F   UNKNOWN  $559F           ; Unknown 5xxx instruction
$618    $03BE   SYS      $3BE            ; System call to 3BE
$61A    $EB48   UNKNOWN  $EB48           ; Unknown Exxx instruction
$61C    $E7DF   UNKNOWN  $E7DF           ; Unknown Exxx instruction
$61E    $7FCE   ADD      VF, #CE         ; Add 206 to VF
$620    $D1D1   DRW      V1, VD, #1      ; Draw 1-byte sprite at V1, VD
$622    $AA7C   LD       I, $A7C         ; Load A7C into I
$624    $30C2   SE       V0, #C2         ; Skip if V0 == 194
$626    $44C3   SNE      V4, #C3         ; Skip if V4 != 195
$628    $EBEC   UNKNOWN  $EBEC           ; Unknown Exxx instruction
$62A    $7BF8   ADD      VB, #F8         ; Add 248 to VB
$62C    $8FFC   UNKNOWN  8FFC            ; Unknown 8xxx instruction
$62E    $24A6   CALL     $4A6            ; Call subroutine at 4A6
$630    $C4DC   RND      V4, #DC         ; V4 = random & DC
$632    $A703   LD       I, $703         ; Load 703 into I
$634    $ED65   UNKNOWN  $ED65           ; Unknown Exxx instruction
$636    $2B57   CALL     $B57            ; Call subroutine at B57
$638    $EF8F   UNKNOWN  $EF8F           ; Unknown Exxx instruction
$63A    $FE12   UNKNOWN  FE12            ; Unknown Fxxx instruction
$63C    $BF25   JP       V0, $F25        ; Jump to V0 + F25
$63E    $BDA0   JP       V0, $DA0        ; Jump to V0 + DA0
$640    $9897   UNKNOWN  $9897           ; Unknown 9xxx instruction
$642    $8062   AND      V0, V6          ; V0 &= V6
$644    $2A3C   CALL     $A3C            ; Call subroutine at A3C
$646    $7919   ADD      V9, #19         ; Add 25 to V9
$648    $96A4   UNKNOWN  $96A4           ; Unknown 9xxx instruction
$64A    $936F   UNKNOWN  $936F           ; Unknown 9xxx instruction
$64C    $93C3   UNKNOWN  $93C3           ; Unknown 9xxx instruction
$64E    $5E55   UNKNOWN  $5E55           ; Unknown 5xxx instruction
$650    $DBF8   DRW      VB, VF, #8      ; Draw 8-byte sprite at VB, VF
$652    $B839   JP       V0, $839        ; Jump to V0 + 839
$654    $F6C9   UNKNOWN  F6C9            ; Unknown Fxxx instruction
$656    $1399   JP       $399            ; Jump to 399
$658    $B342   JP       V0, $342        ; Jump to V0 + 342
$65A    $8355   SUB      V3, V5          ; V3 -= V5, VF = !borrow
$65C    $99E1   UNKNOWN  $99E1           ; Unknown 9xxx instruction
$65E    $7B9A   ADD      VB, #9A         ; Add 154 to VB
$660    $6EBF   LD       VE, #BF         ; Load 191 into VE
$662    $B250   JP       V0, $250        ; Jump to V0 + 250
$664    $7983   ADD      V9, #83         ; Add 131 to V9
$666    $558B   UNKNOWN  $558B           ; Unknown 5xxx instruction
$668    $DB52   DRW      VB, V5, #2      ; Draw 2-byte sprite at VB, V5
$66A    $750D   ADD      V5, #0D         ; Add 13 to V5
$66C    $7A78   ADD      VA, #78         ; Add 120 to VA
$66E    $484E   SNE      V8, #4E         ; Skip if V8 != 78
$670    $F5AA   UNKNOWN  F5AA            ; Unknown Fxxx instruction
$672    $1357   JP       $357            ; Jump to 357
$674    $0D85   SYS      $D85            ; System call to D85
$676    $6D0B   LD       VD, #0B         ; Load 11 into VD
$678    $DF3C   DRW      VF, V3, #C      ; Draw 12-byte sprite at VF, V3
$67A    $71A5   ADD      V1, #A5         ; Add 165 to V1
$67C    $5887   UNKNOWN  $5887           ; Unknown 5xxx instruction
$67E    $AA6E   LD       I, $A6E         ; Load A6E into I
$680    $B728   JP       V0, $728        ; Jump to V0 + 728
$682    $CDE0   RND      VD, #E0         ; VD = random & E0
$684    $839C   UNKNOWN  839C            ; Unknown 8xxx instruction
$686    $908D   UNKNOWN  $908D           ; Unknown 9xxx instruction
$688    $ECDC   UNKNOWN  $ECDC           ; Unknown Exxx instruction
$68A    $5A2B   UNKNOWN  $5A2B           ; Unknown 5xxx instruction
$68C    $EAE1   UNKNOWN  $EAE1           ; Unknown Exxx instruction
$68E    $E265   UNKNOWN  $E265           ; Unknown Exxx instruction
$690    $2653   CALL     $653            ; Call subroutine at 653
$692    $C85C   RND      V8, #5C         ; V8 = random & 5C
$694    $8BCC   UNKNOWN  8BCC            ; Unknown 8xxx instruction
$696    $1B80   JP       $B80            ; Jump to B80
$698    $2F27   CALL     $F27            ; Call subroutine at F27
$69A    $F0CF   UNKNOWN  F0CF            ; Unknown Fxxx instruction
$69C    $235D   CALL     $35D            ; Call subroutine at 35D
$69E    $E97B   UNKNOWN  $E97B           ; Unknown Exxx instruction
$6A0    $4A43   SNE      VA, #43         ; Skip if VA != 67
$6A2    $82C5   SUB      V2, VC          ; V2 -= VC, VF = !borrow
$6A4    $4C51   SNE      VC, #51         ; Skip if VC != 81
$6A6    $D579   DRW      V5, V7, #9      ; Draw 9-byte sprite at V5, V7
$6A8    $A030   LD       I, $030         ; Load 030 into I
$6AA    $3799   SE       V7, #99         ; Skip if V7 == 153
$6AC    $3DB7   SE       VD, #B7         ; Skip if VD == 183
$6AE    $3FE9   SE       VF, #E9         ; Skip if VF == 233
$6B0    $E6BA   UNKNOWN  $E6BA           ; Unknown Exxx instruction
$6B2    $2337   CALL     $337            ; Call subroutine at 337
$6B4    $5541   UNKNOWN  $5541           ; Unknown 5xxx instruction
$6B6    $1EE2   JP       $EE2            ; Jump to EE2
$6B8    $4114   SNE      V1, #14         ; Skip if V1 != 20
$6BA    $9A1A   UNKNOWN  $9A1A           ; Unknown 9xxx instruction
$6BC    $4F4C   SNE      VF, #4C         ; Skip if VF != 76
$6BE    $81A3   XOR      V1, VA          ; V1 ^= VA
$6C0    $C9E5   RND      V9, #E5         ; V9 = random & E5
$6C2    $1CB7   JP       $CB7            ; Jump to CB7
$6C4    $52C3   UNKNOWN  $52C3           ; Unknown 5xxx instruction
$6C6    $DC0E   DRW      VC, V0, #E      ; Draw 14-byte sprite at VC, V0
$6C8    $809F   UNKNOWN  809F            ; Unknown 8xxx instruction
$6CA    $0C8A   SYS      $C8A            ; System call to C8A
$6CC    $F431   UNKNOWN  F431            ; Unknown Fxxx instruction
$6CE    $B038   JP       V0, $038        ; Jump to V0 + 038
$6D0    $0B76   SYS      $B76            ; System call to B76
$6D2    $E376   UNKNOWN  $E376           ; Unknown Exxx instruction
$6D4    $694C   LD       V9, #4C         ; Load 76 into V9
$6D6    $BA3E   JP       V0, $A3E        ; Jump to V0 + A3E
$6D8    $EA7E   UNKNOWN  $EA7E           ; Unknown Exxx instruction
$6DA    $D1B4   DRW      V1, VB, #4      ; Draw 4-byte sprite at V1, VB
$6DC    $6A09   LD       VA, #09         ; Load 9 into VA
$6DE    $B75D   JP       V0, $75D        ; Jump to V0 + 75D
$6E0    $D9AF   DRW      V9, VA, #F      ; Draw 15-byte sprite at V9, VA
$6E2    $EC97   UNKNOWN  $EC97           ; Unknown Exxx instruction
$6E4    $5E37   UNKNOWN  $5E37           ; Unknown 5xxx instruction
$6E6    $AC46   LD       I, $C46         ; Load C46 into I
$6E8    $CE40   RND      VE, #40         ; VE = random & 40
$6EA    $638B   LD       V3, #8B         ; Load 139 into V3
$6EC    $991F   UNKNOWN  $991F           ; Unknown 9xxx instruction
$6EE    $9B25   UNKNOWN  $9B25           ; Unknown 9xxx instruction
$6F0    $56B1   UNKNOWN  $56B1           ; Unknown 5xxx instruction
$6F2    $5223   UNKNOWN  $5223           ; Unknown 5xxx instruction
$6F4    $2D99   CALL     $D99            ; Call subroutine at D99
$6F6    $60E0   LD       V0, #E0         ; Load 224 into V0
$6F8    $823B   UNKNOWN  823B            ; Unknown 8xxx instruction
$6FA    $E3A1   SKNP     V3              ; Skip if key V3 not pressed
$6FC    $18A8   JP       $8A8            ; Jump to 8A8
$6FE    $B565   JP       V0, $565        ; Jump to V0 + 565
$700    $0131   SYS      $131            ; System call to 131
$702    $CAF0   RND      VA, #F0         ; VA = random & F0
$704    $A251   LD       I, $251         ; Load 251 into I
$706    $D89D   DRW      V8, V9, #D      ; Draw 13-byte sprite at V8, V9
$708    $BC78   JP       V0, $C78        ; Jump to V0 + C78
$70A    $275B   CALL     $75B            ; Call subroutine at 75B
$70C    $8C8E   SHL      VC              ; VC <<= 1, VF = MSB
$70E    $D648   DRW      V6, V4, #8      ; Draw 8-byte sprite at V6, V4
$710    $C4BD   RND      V4, #BD         ; V4 = random & BD
$712    $B163   JP       V0, $163        ; Jump to V0 + 163
$714    $F414   UNKNOWN  F414            ; Unknown Fxxx instruction
$716    $62EF   LD       V2, #EF         ; Load 239 into V2
$718    $5EC1   UNKNOWN  $5EC1           ; Unknown 5xxx instruction
$71A    $D3A7   DRW      V3, VA, #7      ; Draw 7-byte sprite at V3, VA
$71C    $6F20   LD       VF, #20         ; Load 32 into VF
$71E    $33DA   SE       V3, #DA         ; Skip if V3 == 218
$720    $B07E   JP       V0, $07E        ; Jump to V0 + 07E
$722    $31FC   SE       V1, #FC         ; Skip if V1 == 252
$724    $1118   JP       $118            ; Jump to 118
$726    $3D77   SE       VD, #77         ; Skip if VD == 119
$728    $9AF1   UNKNOWN  $9AF1           ; Unknown 9xxx instruction
$72A    $6387   LD       V3, #87         ; Load 135 into V3
$72C    $6A02   LD       VA, #02         ; Load 2 into VA
$72E    $A99C   LD       I, $99C         ; Load 99C into I
$730    $2C13   CALL     $C13            ; Call subroutine at C13
$732    $1C59   JP       $C59            ; Jump to C59
$734    $595A   UNKNOWN  $595A           ; Unknown 5xxx instruction
$736    $A5EA   LD       I, $5EA         ; Load 5EA into I
$738    $593F   UNKNOWN  $593F           ; Unknown 5xxx instruction
$73A    $B95D   JP       V0, $95D        ; Jump to V0 + 95D
$73C    $3356   SE       V3, #56         ; Skip if V3 == 86
$73E    $C722   RND      V7, #22         ; V7 = random & 22
$740    $2B58   CALL     $B58            ; Call subroutine at B58
$742    $2181   CALL     $181            ; Call subroutine at 181
$744    $04AC   SYS      $4AC            ; System call to 4AC
$746    $0DE6   SYS      $DE6            ; System call to DE6
$748    $EDB5   UNKNOWN  $EDB5           ; Unknown Exxx instruction
$74A    $0674   SYS      $674            ; System call to 674
$74C    $5428   UNKNOWN  $5428           ; Unknown 5xxx instruction
$74E    $B2DD   JP       V0, $2DD        ; Jump to V0 + 2DD
$750    $A280   LD       I, $280         ; Load 280 into I
$752    $AA32   LD       I, $A32         ; Load A32 into I
$754    $BDDE   JP       V0, $DDE        ; Jump to V0 + DDE
$756    $998E   UNKNOWN  $998E           ; Unknown 9xxx instruction
$758    $74D6   ADD      V4, #D6         ; Add 214 to V4
$75A    $FAC7   UNKNOWN  FAC7            ; Unknown Fxxx instruction
$75C    $A8DA   LD       I, $8DA         ; Load 8DA into I
$75E    $93EA   UNKNOWN  $93EA           ; Unknown 9xxx instruction
$760    $0A31   SYS      $A31            ; System call to A31
$762    $7F3A   ADD      VF, #3A         ; Add 58 to VF
$764    $44D4   SNE      V4, #D4         ; Skip if V4 != 212
$766    $268D   CALL     $68D            ; Call subroutine at 68D
$768    $A196   LD       I, $196         ; Load 196 into I
$76A    $250C   CALL     $50C            ; Call subroutine at 50C
$76C    $8B25   SUB      VB, V2          ; VB -= V2, VF = !borrow
$76E    $FBBF   UNKNOWN  FBBF            ; Unknown Fxxx instruction
$770    $E525   UNKNOWN  $E525           ; Unknown Exxx instruction
$772    $2DE9   CALL     $DE9            ; Call subroutine at DE9
$774    $7A3B   ADD      VA, #3B         ; Add 59 to VA
$776    $11C5   JP       $1C5            ; Jump to 1C5
$778    $7FB4   ADD      VF, #B4         ; Add 180 to VF
$77A    $08C4   SYS      $8C4            ; System call to 8C4
$77C    $C05C   RND      V0, #5C         ; V0 = random & 5C
$77E    $0830   SYS      $830            ; System call to 830
$780    $EED9   UNKNOWN  $EED9           ; Unknown Exxx instruction
$782    $BF5C   JP       V0, $F5C        ; Jump to V0 + F5C
$784    $3E43   SE       VE, #43         ; Skip if VE == 67
$786    $F3F0   UNKNOWN  F3F0            ; Unknown Fxxx instruction
$788    $FDB4   UNKNOWN  FDB4            ; Unknown Fxxx instruction
$78A    $DF3A   DRW      VF, V3, #A      ; Draw 10-byte sprite at VF, V3
$78C    $6CDF   LD       VC, #DF         ; Load 223 into VC
$78E    $305E   SE       V0, #5E         ; Skip if V0 == 94
$790    $F0B3   UNKNOWN  F0B3            ; Unknown Fxxx instruction
$792    $9215   UNKNOWN  $9215           ; Unknown 9xxx instruction
$794    $EAC2   UNKNOWN  $EAC2           ; Unknown Exxx instruction
$796    $31BF   SE       V1, #BF         ; Skip if V1 == 191
$798    $9775   UNKNOWN  $9775           ; Unknown 9xxx instruction
$79A    $1F25   JP       $F25            ; Jump to F25
$79C    $0B6B   SYS      $B6B            ; System call to B6B
$79E    $C57E   RND      V5, #7E         ; V5 = random & 7E
$7A0    $C69E   RND      V6, #9E         ; V6 = random & 9E
$7A2    $8EAC   UNKNOWN  8EAC            ; Unknown 8xxx instruction
$7A4    $C2E8   RND      V2, #E8         ; V2 = random & E8
$7A6    $9A31   UNKNOWN  $9A31           ; Unknown 9xxx instruction
$7A8    $941C   UNKNOWN  $941C           ; Unknown 9xxx instruction
$7AA    $3118   SE       V1, #18         ; Skip if V1 == 24
$7AC    $2173   CALL     $173            ; Call subroutine at 173
$7AE    $E096   UNKNOWN  $E096           ; Unknown Exxx instruction
$7B0    $5C14   UNKNOWN  $5C14           ; Unknown 5xxx instruction
$7B2    $0635   SYS      $635            ; System call to 635
$7B4    $3C15   SE       VC, #15         ; Skip if VC == 21
$7B6    $C582   RND      V5, #82         ; V5 = random & 82
$7B8    $0241   SYS      $241            ; System call to 241
$7BA    $67DA   LD       V7, #DA         ; Load 218 into V7
$7BC    $32FD   SE       V2, #FD         ; Skip if V2 == 253
$7BE    $C0B0   RND      V0, #B0         ; V0 = random & B0
$7C0    $24EF   CALL     $4EF            ; Call subroutine at 4EF
$7C2    $D122   DRW      V1, V2, #2      ; Draw 2-byte sprite at V1, V2
$7C4    $6A63   LD       VA, #63         ; Load 99 into VA
$7C6    $1BE8   JP       $BE8            ; Jump to BE8
$7C8    $87FC   UNKNOWN  87FC            ; Unknown 8xxx instruction
$7CA    $257B   CALL     $57B            ; Call subroutine at 57B
$7CC    $39C4   SE       V9, #C4         ; Skip if V9 == 196
$7CE    $2321   CALL     $321            ; Call subroutine at 321
$7D0    $165F   JP       $65F            ; Jump to 65F
$7D2    $8DA2   AND      VD, VA          ; VD &= VA
$7D4    $93C1   UNKNOWN  $93C1           ; Unknown 9xxx instruction
$7D6    $470A   SNE      V7, #0A         ; Skip if V7 != 10
$7D8    $16A4   JP       $6A4            ; Jump to 6A4
$7DA    $3EA4   SE       VE, #A4         ; Skip if VE == 164
$7DC    $44F3   SNE      V4, #F3         ; Skip if V4 != 243
$7DE    $1EB7   JP       $EB7            ; Jump to EB7
$7E0    $1A9E   JP       $A9E            ; Jump to A9E
$7E2    $9115   UNKNOWN  $9115           ; Unknown 9xxx instruction
$7E4    $6D90   LD       VD, #90         ; Load 144 into VD
$7E6    $79D5   ADD      V9, #D5         ; Add 213 to V9
$7E8    $AAE9   LD       I, $AE9         ; Load AE9 into I
$7EA    $13DC   JP       $3DC            ; Jump to 3DC
$7EC    $B13D   JP       V0, $13D        ; Jump to V0 + 13D
$7EE    $9013   UNKNOWN  $9013           ; Unknown 9xxx instruction
$7F0    $2EB8   CALL     $EB8            ; Call subroutine at EB8
$7F2    $E301   UNKNOWN  $E301           ; Unknown Exxx instruction
$7F4    $99FD   UNKNOWN  $99FD           ; Unknown 9xxx instruction
$7F6    $6F92   LD       VF, #92         ; Load 146 into VF
$7F8    $EBAA   UNKNOWN  $EBAA           ; Unknown Exxx instruction
$7FA    $451B   SNE      V5, #1B         ; Skip if V5 != 27
$7FC    $B001   JP       V0, $001        ; Jump to V0 + 001
$7FE    $4EEE   SNE      VE, #EE         ; Skip if VE != 238
$800    $2C13   CALL     $C13            ; Call subroutine at C13
$802    $1721   JP       $721            ; Jump to 721
$804    $8BF5   SUB      VB, VF          ; VB -= VF, VF = !borrow
$806    $8E31   OR       VE, V3          ; VE |= V3
$808    $F2BB   UNKNOWN  F2BB            ; Unknown Fxxx instruction
$80A    $F5E3   UNKNOWN  F5E3            ; Unknown Fxxx instruction
$80C    $0642   SYS      $642            ; System call to 642
$80E    $36DC   SE       V6, #DC         ; Skip if V6 == 220
$810    $23FD   CALL     $3FD            ; Call subroutine at 3FD
$812    $48AF   SNE      V8, #AF         ; Skip if V8 != 175
$814    $4FD4   SNE      VF, #D4         ; Skip if VF != 212
$816    $9CFA   UNKNOWN  $9CFA           ; Unknown 9xxx instruction
$818    $F325   UNKNOWN  F325            ; Unknown Fxxx instruction
$81A    $C26F   RND      V2, #6F         ; V2 = random & 6F
$81C    $FDDF   UNKNOWN  FDDF            ; Unknown Fxxx instruction
$81E    $CB5B   RND      VB, #5B         ; VB = random & 5B
$820    $01AA   SYS      $1AA            ; System call to 1AA
$822    $02E4   SYS      $2E4            ; System call to 2E4
$824    $B631   JP       V0, $631        ; Jump to V0 + 631
$826    $047A   SYS      $47A            ; System call to 47A
$828    $4089   SNE      V0, #89         ; Skip if V0 != 137
$82A    $CEBF   RND      VE, #BF         ; VE = random & BF
$82C    $E79A   UNKNOWN  $E79A           ; Unknown Exxx instruction
$82E    $70AA   ADD      V0, #AA         ; Add 170 to V0
$830    $E9B7   UNKNOWN  $E9B7           ; Unknown Exxx instruction
$832    $350A   SE       V5, #0A         ; Skip if V5 == 10
$834    $F72D   UNKNOWN  F72D            ; Unknown Fxxx instruction
$836    $0FA9   SYS      $FA9            ; System call to FA9
$838    $EE97   UNKNOWN  $EE97           ; Unknown Exxx instruction
$83A    $F7F7   UNKNOWN  F7F7            ; Unknown Fxxx instruction
$83C    $92DF   UNKNOWN  $92DF           ; Unknown 9xxx instruction
$83E    $F6BA   UNKNOWN  F6BA            ; Unknown Fxxx instruction
$840    $5CFD   UNKNOWN  $5CFD           ; Unknown 5xxx instruction
$842    $9D2D   UNKNOWN  $9D2D           ; Unknown 9xxx instruction
$844    $1B6B   JP       $B6B            ; Jump to B6B
$846    $94A4   UNKNOWN  $94A4           ; Unknown 9xxx instruction
$848    $034A   SYS      $34A            ; System call to 34A
$84A    $DA3C   DRW      VA, V3, #C      ; Draw 12-byte sprite at VA, V3
$84C    $9743   UNKNOWN  $9743           ; Unknown 9xxx instruction
$84E    $59D1   UNKNOWN  $59D1           ; Unknown 5xxx instruction
$850    $4335   SNE      V3, #35         ; Skip if V3 != 53
$852    $B49E   JP       V0, $49E        ; Jump to V0 + 49E
$854    $5FA3   UNKNOWN  $5FA3           ; Unknown 5xxx instruction
$856    $627F   LD       V2, #7F         ; Load 127 into V2
$858    $C6C0   RND      V6, #C0         ; V6 = random & C0
$85A    $39E8   SE       V9, #E8         ; Skip if V9 == 232
$85C    $653D   LD       V5, #3D         ; Load 61 into V5
$85E    $7DE2   ADD      VD, #E2         ; Add 226 to VD
$860    $EB2B   UNKNOWN  $EB2B           ; Unknown Exxx instruction
$862    $FD73   UNKNOWN  FD73            ; Unknown Fxxx instruction
$864    $6B25   LD       VB, #25         ; Load 37 into VB
$866    $855C   UNKNOWN  855C            ; Unknown 8xxx instruction
$868    $F67D   UNKNOWN  F67D            ; Unknown Fxxx instruction
$86A    $ECDD   UNKNOWN  $ECDD           ; Unknown Exxx instruction
$86C    $A161   LD       I, $161         ; Load 161 into I
$86E    $6849   LD       V8, #49         ; Load 73 into V8
$870    $AE87   LD       I, $E87         ; Load E87 into I
$872    $9F96   UNKNOWN  $9F96           ; Unknown 9xxx instruction
$874    $5E3F   UNKNOWN  $5E3F           ; Unknown 5xxx instruction
$876    $F18A   UNKNOWN  F18A            ; Unknown Fxxx instruction
$878    $9364   UNKNOWN  $9364           ; Unknown 9xxx instruction
$87A    $7E7A   ADD      VE, #7A         ; Add 122 to VE
$87C    $1BE3   JP       $BE3            ; Jump to BE3
$87E    $31A6   SE       V1, #A6         ; Skip if V1 == 166
$880    $FD03   UNKNOWN  FD03            ; Unknown Fxxx instruction
$882    $3A9B   SE       VA, #9B         ; Skip if VA == 155
$884    $3A37   SE       VA, #37         ; Skip if VA == 55
$886    $C315   RND      V3, #15         ; V3 = random & 15
$888    $AF5B   LD       I, $F5B         ; Load F5B into I
$88A    $B03A   JP       V0, $03A        ; Jump to V0 + 03A
$88C    $C1CB   RND      V1, #CB         ; V1 = random & CB
$88E    $BC9D   JP       V0, $C9D        ; Jump to V0 + C9D
$890    $2292   CALL     $292            ; Call subroutine at 292
$892    $ACC1   LD       I, $CC1         ; Load CC1 into I
$894    $9904   UNKNOWN  $9904           ; Unknown 9xxx instruction
$896    $CCD6   RND      VC, #D6         ; VC = random & D6
$898    $99DD   UNKNOWN  $99DD           ; Unknown 9xxx instruction
$89A    $F2A3   UNKNOWN  F2A3            ; Unknown Fxxx instruction
$89C    $97F7   UNKNOWN  $97F7           ; Unknown 9xxx instruction
$89E    $9FFB   UNKNOWN  $9FFB           ; Unknown 9xxx instruction
$8A0    $4E69   SNE      VE, #69         ; Skip if VE != 105
$8A2    $356B   SE       V5, #6B         ; Skip if V5 == 107
$8A4    $F400   UNKNOWN  F400            ; Unknown Fxxx instruction
$8A6    $2EB9   CALL     $EB9            ; Call subroutine at EB9
$8A8    $3B77   SE       VB, #77         ; Skip if VB == 119
$8AA    $DC9B   DRW      VC, V9, #B      ; Draw 11-byte sprite at VC, V9
$8AC    $9D13   UNKNOWN  $9D13           ; Unknown 9xxx instruction
$8AE    $CD88   RND      VD, #88         ; VD = random & 88
$8B0    $7257   ADD      V2, #57         ; Add 87 to V2
$8B2    $98C5   UNKNOWN  $98C5           ; Unknown 9xxx instruction
$8B4    $EEA2   UNKNOWN  $EEA2           ; Unknown Exxx instruction
$8B6    $676E   LD       V7, #6E         ; Load 110 into V7
$8B8    $1E80   JP       $E80            ; Jump to E80
$8BA    $A6BB   LD       I, $6BB         ; Load 6BB into I
$8BC    $9553   UNKNOWN  $9553           ; Unknown 9xxx instruction
$8BE    $E132   UNKNOWN  $E132           ; Unknown Exxx instruction
$8C0    $16AC   JP       $6AC            ; Jump to 6AC
$8C2    $5C45   UNKNOWN  $5C45           ; Unknown 5xxx instruction
$8C4    $B1F3   JP       V0, $1F3        ; Jump to V0 + 1F3
$8C6    $BE1C   JP       V0, $E1C        ; Jump to V0 + E1C
$8C8    $91BA   UNKNOWN  $91BA           ; Unknown 9xxx instruction
$8CA    $54AD   UNKNOWN  $54AD           ; Unknown 5xxx instruction
$8CC    $72C4   ADD      V2, #C4         ; Add 196 to V2
$8CE    $8841   OR       V8, V4          ; V8 |= V4
$8D0    $F972   UNKNOWN  F972            ; Unknown Fxxx instruction
$8D2    $8E28   UNKNOWN  8E28            ; Unknown 8xxx instruction
$8D4    $E174   UNKNOWN  $E174           ; Unknown Exxx instruction
$8D6    $C329   RND      V3, #29         ; V3 = random & 29
$8D8    $BBD3   JP       V0, $BD3        ; Jump to V0 + BD3
$8DA    $A7EA   LD       I, $7EA         ; Load 7EA into I
$8DC    $6609   LD       V6, #09         ; Load 9 into V6
$8DE    $9E61   UNKNOWN  $9E61           ; Unknown 9xxx instruction
$8E0    $9E9C   UNKNOWN  $9E9C           ; Unknown 9xxx instruction
$8E2    $03C4   SYS      $3C4            ; System call to 3C4
$8E4    $C60B   RND      V6, #0B         ; V6 = random & 0B
$8E6    $205C   CALL     $05C            ; Call subroutine at 05C
$8E8    $634E   LD       V3, #4E         ; Load 78 into V3
$8EA    $FCF8   UNKNOWN  FCF8            ; Unknown Fxxx instruction
$8EC    $11D4   JP       $1D4            ; Jump to 1D4
$8EE    $1C05   JP       $C05            ; Jump to C05
$8F0    $307A   SE       V0, #7A         ; Skip if V0 == 122
$8F2    $BE33   JP       V0, $E33        ; Jump to V0 + E33
$8F4    $9AA1   UNKNOWN  $9AA1           ; Unknown 9xxx instruction
$8F6    $AED7   LD       I, $ED7         ; Load ED7 into I
$8F8    $EB9E   SKP      VB              ; Skip if key VB pressed
$8FA    $D44D   DRW      V4, V4, #D      ; Draw 13-byte sprite at V4, V4
$8FC    $D151   DRW      V1, V5, #1      ; Draw 1-byte sprite at V1, V5
$8FE    $234A   CALL     $34A            ; Call subroutine at 34A
$900    $3380   SE       V3, #80         ; Skip if V3 == 128
$902    $5B5B   UNKNOWN  $5B5B           ; Unknown 5xxx instruction
$904    $8854   ADD      V8, V5          ; V8 += V5, VF = carry
$906    $9753   UNKNOWN  $9753           ; Unknown 9xxx instruction
$908    $2258   CALL     $258            ; Call subroutine at 258
$90A    $6492   LD       V4, #92         ; Load 146 into V4
$90C    $2020   CALL     $020            ; Call subroutine at 020
$90E    $F836   UNKNOWN  F836            ; Unknown Fxxx instruction
$910    $D75A   DRW      V7, V5, #A      ; Draw 10-byte sprite at V7, V5
$912    $6F63   LD       VF, #63         ; Load 99 into VF
$914    $D0FF   DRW      V0, VF, #F      ; Draw 15-byte sprite at V0, VF
$916    $FA80   UNKNOWN  FA80            ; Unknown Fxxx instruction
$918    $8AB7   SUBN     VA, VB          ; VA = VB - VA, VF = !borrow
$91A    $BED2   JP       V0, $ED2        ; Jump to V0 + ED2
$91C    $670F   LD       V7, #0F         ; Load 15 into V7
$91E    $F3B5   UNKNOWN  F3B5            ; Unknown Fxxx instruction
$920    $30D1   SE       V0, #D1         ; Skip if V0 == 209
$922    $74AA   ADD      V4, #AA         ; Add 170 to V4
$924    $21AE   CALL     $1AE            ; Call subroutine at 1AE
$926    $4D2D   SNE      VD, #2D         ; Skip if VD != 45
$928    $D18D   DRW      V1, V8, #D      ; Draw 13-byte sprite at V1, V8
$92A    $7B26   ADD      VB, #26         ; Add 38 to VB
$92C    $F36F   UNKNOWN  F36F            ; Unknown Fxxx instruction
$92E    $48AB   SNE      V8, #AB         ; Skip if V8 != 171
$930    $BFE7   JP       V0, $FE7        ; Jump to V0 + FE7
$932    $623A   LD       V2, #3A         ; Load 58 into V2
$934    $2BCB   CALL     $BCB            ; Call subroutine at BCB
$936    $18D4   JP       $8D4            ; Jump to 8D4
$938    $119E   JP       $19E            ; Jump to 19E
$93A    $DC0A   DRW      VC, V0, #A      ; Draw 10-byte sprite at VC, V0
$93C    $DA54   DRW      VA, V5, #4      ; Draw 4-byte sprite at VA, V5
$93E    $C27B   RND      V2, #7B         ; V2 = random & 7B
$940    $F45F   UNKNOWN  F45F            ; Unknown Fxxx instruction
$942    $E955   UNKNOWN  $E955           ; Unknown Exxx instruction
$944    $BE9E   JP       V0, $E9E        ; Jump to V0 + E9E
$946    $4560   SNE      V5, #60         ; Skip if V5 != 96
$948    $8B29   UNKNOWN  8B29            ; Unknown 8xxx instruction
$94A    $1A78   JP       $A78            ; Jump to A78
$94C    $A0E4   LD       I, $0E4         ; Load 0E4 into I
$94E    $2DC6   CALL     $DC6            ; Call subroutine at DC6
$950    $866A   UNKNOWN  866A            ; Unknown 8xxx instruction
$952    $A26A   LD       I, $26A         ; Load 26A into I
$954    $1D42   JP       $D42            ; Jump to D42
$956    $A043   LD       I, $043         ; Load 043 into I
$958    $D93C   DRW      V9, V3, #C      ; Draw 12-byte sprite at V9, V3
$95A    $47F5   SNE      V7, #F5         ; Skip if V7 != 245
$95C    $AFA7   LD       I, $FA7         ; Load FA7 into I
$95E    $1D86   JP       $D86            ; Jump to D86
$960    $ED70   UNKNOWN  $ED70           ; Unknown Exxx instruction
$962    $38F8   SE       V8, #F8         ; Skip if V8 == 248
$964    $9F68   UNKNOWN  $9F68           ; Unknown 9xxx instruction
$966    $F01A   UNKNOWN  F01A            ; Unknown Fxxx instruction
$968    $1257   JP       $257            ; Jump to 257
$96A    $7A03   ADD      VA, #03         ; Add 3 to VA
$96C    $1944   JP       $944            ; Jump to 944
$96E    $D296   DRW      V2, V9, #6      ; Draw 6-byte sprite at V2, V9
$970    $BA7C   JP       V0, $A7C        ; Jump to V0 + A7C
$972    $BC0B   JP       V0, $C0B        ; Jump to V0 + C0B
$974    $5007   UNKNOWN  $5007           ; Unknown 5xxx instruction
$976    $FADA   UNKNOWN  FADA            ; Unknown Fxxx instruction
$978    $AE55   LD       I, $E55         ; Load E55 into I
$97A    $7E3C   ADD      VE, #3C         ; Add 60 to VE
$97C    $119E   JP       $19E            ; Jump to 19E
$97E    $8CD1   OR       VC, VD          ; VC |= VD
$980    $0F38   SYS      $F38            ; System call to F38
$982    $9A07   UNKNOWN  $9A07           ; Unknown 9xxx instruction
$984    $26BF   CALL     $6BF            ; Call subroutine at 6BF
$986    $4D9B   SNE      VD, #9B         ; Skip if VD != 155
$988    $21A2   CALL     $1A2            ; Call subroutine at 1A2
$98A    $8F8D   UNKNOWN  8F8D            ; Unknown 8xxx instruction
$98C    $F6B4   UNKNOWN  F6B4            ; Unknown Fxxx instruction
$98E    $9CB0   SNE      VC, VB          ; Skip if VC != VB
$990    $3D00   SE       VD, #00         ; Skip if VD == 0
$992    $0F33   SYS      $F33            ; System call to F33
$994    $5DA5   UNKNOWN  $5DA5           ; Unknown 5xxx instruction
$996    $E9F4   UNKNOWN  $E9F4           ; Unknown Exxx instruction
$998    $7058   ADD      V0, #58         ; Add 88 to V0
$99A    $D29A   DRW      V2, V9, #A      ; Draw 10-byte sprite at V2, V9
$99C    $2E05   CALL     $E05            ; Call subroutine at E05
$99E    $95B0   SNE      V5, VB          ; Skip if V5 != VB
$9A0    $9810   SNE      V8, V1          ; Skip if V8 != V1
$9A2    $89F0   LD       V9, VF          ; V9 = VF
$9A4    $01DF   SYS      $1DF            ; System call to 1DF
$9A6    $BB90   JP       V0, $B90        ; Jump to V0 + B90
$9A8    $37F4   SE       V7, #F4         ; Skip if V7 == 244
$9AA    $CF9A   RND      VF, #9A         ; VF = random & 9A
$9AC    $7556   ADD      V5, #56         ; Add 86 to V5
$9AE    $A1ED   LD       I, $1ED         ; Load 1ED into I
$9B0    $022B   SYS      $22B            ; System call to 22B
$9B2    $4718   SNE      V7, #18         ; Skip if V7 != 24
$9B4    $987F   UNKNOWN  $987F           ; Unknown 9xxx instruction
$9B6    $5192   UNKNOWN  $5192           ; Unknown 5xxx instruction
$9B8    $F275   UNKNOWN  F275            ; Unknown Fxxx instruction
$9BA    $74E7   ADD      V4, #E7         ; Add 231 to V4
$9BC    $0B9A   SYS      $B9A            ; System call to B9A
$9BE    $2883   CALL     $883            ; Call subroutine at 883
$9C0    $89FE   SHL      V9              ; V9 <<= 1, VF = MSB
$9C2    $AB61   LD       I, $B61         ; Load B61 into I
$9C4    $6508   LD       V5, #08         ; Load 8 into V5
$9C6    $4E38   SNE      VE, #38         ; Skip if VE != 56
$9C8    $485D   SNE      V8, #5D         ; Skip if V8 != 93
$9CA    $6FC3   LD       VF, #C3         ; Load 195 into VF
$9CC    $AE0B   LD       I, $E0B         ; Load E0B into I
$9CE    $0262   SYS      $262            ; System call to 262
$9D0    $3D65   SE       VD, #65         ; Skip if VD == 101
$9D2    $EE5C   UNKNOWN  $EE5C           ; Unknown Exxx instruction
$9D4    $676E   LD       V7, #6E         ; Load 110 into V7
$9D6    $D232   DRW      V2, V3, #2      ; Draw 2-byte sprite at V2, V3
$9D8    $9F21   UNKNOWN  $9F21           ; Unknown 9xxx instruction
$9DA    $255E   CALL     $55E            ; Call subroutine at 55E
$9DC    $B1FE   JP       V0, $1FE        ; Jump to V0 + 1FE
$9DE    $286B   CALL     $86B            ; Call subroutine at 86B
$9E0    $019F   SYS      $19F            ; System call to 19F
$9E2    $9BCE   UNKNOWN  $9BCE           ; Unknown 9xxx instruction
$9E4    $B4E8   JP       V0, $4E8        ; Jump to V0 + 4E8
$9E6    $DFAE   DRW      VF, VA, #E      ; Draw 14-byte sprite at VF, VA
$9E8    $3799   SE       V7, #99         ; Skip if V7 == 153
$9EA    $9832   UNKNOWN  $9832           ; Unknown 9xxx instruction
$9EC    $D273   DRW      V2, V7, #3      ; Draw 3-byte sprite at V2, V7
$9EE    $51EF   UNKNOWN  $51EF           ; Unknown 5xxx instruction
$9F0    $827D   UNKNOWN  827D            ; Unknown 8xxx instruction
$9F2    $376C   SE       V7, #6C         ; Skip if V7 == 108
$9F4    $C975   RND      V9, #75         ; V9 = random & 75
$9F6    $ECF9   UNKNOWN  $ECF9           ; Unknown Exxx instruction
$9F8    $8076   SHR      V0              ; V0 >>= 1, VF = LSB
$9FA    $8C2C   UNKNOWN  8C2C            ; Unknown 8xxx instruction
$9FC    $7FCD   ADD      VF, #CD         ; Add 205 to VF
$9FE    $A1AE   LD       I, $1AE         ; Load 1AE into I
$A00    $0713   SYS      $713            ; System call to 713
$A02    $A56E   LD       I, $56E         ; Load 56E into I
$A04    $E805   UNKNOWN  $E805           ; Unknown Exxx instruction
$A06    $69C6   LD       V9, #C6         ; Load 198 into V9
$A08    $BD2B   JP       V0, $D2B        ; Jump to V0 + D2B
$A0A    $A0A4   LD       I, $0A4         ; Load 0A4 into I
$A0C    $5D6B   UNKNOWN  $5D6B           ; Unknown 5xxx instruction
$A0E    $4269   SNE      V2, #69         ; Skip if V2 != 105
$A10    $BCF5   JP       V0, $CF5        ; Jump to V0 + CF5
$A12    $5E40   SE       VE, V4          ; Skip if VE == V4
$A14    $4065   SNE      V0, #65         ; Skip if V0 != 101
$A16    $663D   LD       V6, #3D         ; Load 61 into V6
$A18    $C57C   RND      V5, #7C         ; V5 = random & 7C
$A1A    $6443   LD       V4, #43         ; Load 67 into V4
$A1C    $A486   LD       I, $486         ; Load 486 into I
$A1E    $720D   ADD      V2, #0D         ; Add 13 to V2
$A20    $5459   UNKNOWN  $5459           ; Unknown 5xxx instruction
$A22    $760C   ADD      V6, #0C         ; Add 12 to V6
$A24    $5524   UNKNOWN  $5524           ; Unknown 5xxx instruction
$A26    $7121   ADD      V1, #21         ; Add 33 to V1
$A28    $A3BC   LD       I, $3BC         ; Load 3BC into I
$A2A    $E480   UNKNOWN  $E480           ; Unknown Exxx instruction
$A2C    $C043   RND      V0, #43         ; V0 = random & 43
$A2E    $8FC8   UNKNOWN  8FC8            ; Unknown 8xxx instruction
$A30    $E44E   UNKNOWN  $E44E           ; Unknown Exxx instruction
$A32    $B35D   JP       V0, $35D        ; Jump to V0 + 35D
$A34    $25F9   CALL     $5F9            ; Call subroutine at 5F9
$A36    $87E4   ADD      V7, VE          ; V7 += VE, VF = carry
$A38    $A89F   LD       I, $89F         ; Load 89F into I
$A3A    $CAC7   RND      VA, #C7         ; VA = random & C7
$A3C    $5BEC   UNKNOWN  $5BEC           ; Unknown 5xxx instruction
$A3E    $3C8B   SE       VC, #8B         ; Skip if VC == 139
$A40    $9E39   UNKNOWN  $9E39           ; Unknown 9xxx instruction
$A42    $13B1   JP       $3B1            ; Jump to 3B1
$A44    $2480   CALL     $480            ; Call subroutine at 480
$A46    $AEAE   LD       I, $EAE         ; Load EAE into I
$A48    $151A   JP       $51A            ; Jump to 51A
$A4A    $F621   UNKNOWN  F621            ; Unknown Fxxx instruction
$A4C    $A3F0   LD       I, $3F0         ; Load 3F0 into I
$A4E    $6967   LD       V9, #67         ; Load 103 into V9
$A50    $1681   JP       $681            ; Jump to 681
$A52    $45CF   SNE      V5, #CF         ; Skip if V5 != 207
$A54    $AEEA   LD       I, $EEA         ; Load EEA into I
$A56    $E8AA   UNKNOWN  $E8AA           ; Unknown Exxx instruction
$A58    $6862   LD       V8, #62         ; Load 98 into V8
$A5A    $04B0   SYS      $4B0            ; System call to 4B0
$A5C    $5412   UNKNOWN  $5412           ; Unknown 5xxx instruction
$A5E    $E989   UNKNOWN  $E989           ; Unknown Exxx instruction
$A60    $2F87   CALL     $F87            ; Call subroutine at F87
$A62    $FA50   UNKNOWN  FA50            ; Unknown Fxxx instruction
$A64    $3165   SE       V1, #65         ; Skip if V1 == 101
$A66    $8741   OR       V7, V4          ; V7 |= V4
$A68    $1E1B   JP       $E1B            ; Jump to E1B
$A6A    $B3C2   JP       V0, $3C2        ; Jump to V0 + 3C2
$A6C    $989B   UNKNOWN  $989B           ; Unknown 9xxx instruction
$A6E    $070A   SYS      $70A            ; System call to 70A
$A70    $2268   CALL     $268            ; Call subroutine at 268
$A72    $4254   SNE      V2, #54         ; Skip if V2 != 84
$A74    $389C   SE       V8, #9C         ; Skip if V8 == 156
$A76    $298B   CALL     $98B            ; Call subroutine at 98B
$A78    $FE2A   UNKNOWN  FE2A            ; Unknown Fxxx instruction
$A7A    $70CA   ADD      V0, #CA         ; Add 202 to V0
$A7C    $26DA   CALL     $6DA            ; Call subroutine at 6DA
$A7E    $9DDF   UNKNOWN  $9DDF           ; Unknown 9xxx instruction
$A80    $7AC8   ADD      VA, #C8         ; Add 200 to VA
$A82    $6A20   LD       VA, #20         ; Load 32 into VA
$A84    $30F5   SE       V0, #F5         ; Skip if V0 == 245
$A86    $05CD   SYS      $5CD            ; System call to 5CD
$A88    $5D2A   UNKNOWN  $5D2A           ; Unknown 5xxx instruction
$A8A    $83AA   UNKNOWN  83AA            ; Unknown 8xxx instruction
$A8C    $1F3B   JP       $F3B            ; Jump to F3B
$A8E    $1D00   JP       $D00            ; Jump to D00
$A90    $CF68   RND      VF, #68         ; VF = random & 68
$A92    $9C66   UNKNOWN  $9C66           ; Unknown 9xxx instruction
$A94    $67D0   LD       V7, #D0         ; Load 208 into V7
$A96    $AC60   LD       I, $C60         ; Load C60 into I
$A98    $B4C9   JP       V0, $4C9        ; Jump to V0 + 4C9
$A9A    $2989   CALL     $989            ; Call subroutine at 989
$A9C    $6B5E   LD       VB, #5E         ; Load 94 into VB
$A9E    $1C07   JP       $C07            ; Jump to C07
$AA0    $4B09   SNE      VB, #09         ; Skip if VB != 9
$AA2    $83FF   UNKNOWN  83FF            ; Unknown 8xxx instruction
$AA4    $8749   UNKNOWN  8749            ; Unknown 8xxx instruction
$AA6    $FBBA   UNKNOWN  FBBA            ; Unknown Fxxx instruction
$AA8    $2B90   CALL     $B90            ; Call subroutine at B90
$AAA    $843C   UNKNOWN  843C            ; Unknown 8xxx instruction
$AAC    $55BA   UNKNOWN  $55BA           ; Unknown 5xxx instruction
$AAE    $4535   SNE      V5, #35         ; Skip if V5 != 53
$AB0    $EA34   UNKNOWN  $EA34           ; Unknown Exxx instruction
$AB2    $2E9A   CALL     $E9A            ; Call subroutine at E9A
$AB4    $648B   LD       V4, #8B         ; Load 139 into V4
$AB6    $4E88   SNE      VE, #88         ; Skip if VE != 136
$AB8    $81E1   OR       V1, VE          ; V1 |= VE
$ABA    $7912   ADD      V9, #12         ; Add 18 to V9
$ABC    $008C   SYS      $08C            ; System call to 08C
$ABE    $39D9   SE       V9, #D9         ; Skip if V9 == 217
$AC0    $1678   JP       $678            ; Jump to 678
$AC2    $8606   SHR      V6              ; V6 >>= 1, VF = LSB
$AC4    $7107   ADD      V1, #07         ; Add 7 to V1
$AC6    $0D64   SYS      $D64            ; System call to D64
$AC8    $1DCC   JP       $DCC            ; Jump to DCC
$ACA    $15DD   JP       $5DD            ; Jump to 5DD
$ACC    $CB54   RND      VB, #54         ; VB = random & 54
$ACE    $DACB   DRW      VA, VC, #B      ; Draw 11-byte sprite at VA, VC
$AD0    $0A91   SYS      $A91            ; System call to A91
$AD2    $949E   UNKNOWN  $949E           ; Unknown 9xxx instruction
$AD4    $A190   LD       I, $190         ; Load 190 into I
$AD6    $C914   RND      V9, #14         ; V9 = random & 14
$AD8    $E299   UNKNOWN  $E299           ; Unknown Exxx instruction
$ADA    $6277   LD       V2, #77         ; Load 119 into V2
$ADC    $01ED   SYS      $1ED            ; System call to 1ED
$ADE    $869F   UNKNOWN  869F            ; Unknown 8xxx instruction
$AE0    $003F   SYS      $03F            ; System call to 03F
$AE2    $85D8   UNKNOWN  85D8            ; Unknown 8xxx instruction
$AE4    $64DC   LD       V4, #DC         ; Load 220 into V4
$AE6    $E56E   UNKNOWN  $E56E           ; Unknown Exxx instruction
$AE8    $2126   CALL     $126            ; Call subroutine at 126
$AEA    $3B61   SE       VB, #61         ; Skip if VB == 97
$AEC    $D6AE   DRW      V6, VA, #E      ; Draw 14-byte sprite at V6, VA
$AEE    $2DBE   CALL     $DBE            ; Call subroutine at DBE
$AF0    $EA52   UNKNOWN  $EA52           ; Unknown Exxx instruction
$AF2    $7170   ADD      V1, #70         ; Add 112 to V1
$AF4    $7685   ADD      V6, #85         ; Add 133 to V6
$AF6    $8B77   SUBN     VB, V7          ; VB = V7 - VB, VF = !borrow
$AF8    $4B47   SNE      VB, #47         ; Skip if VB != 71
$AFA    $A378   LD       I, $378         ; Load 378 into I
$AFC    $5AFF   UNKNOWN  $5AFF           ; Unknown 5xxx instruction
$AFE    $08CC   SYS      $8CC            ; System call to 8CC
$B00    $6537   LD       V5, #37         ; Load 55 into V5
$B02    $B945   JP       V0, $945        ; Jump to V0 + 945
$B04    $3177   SE       V1, #77         ; Skip if V1 == 119
$B06    $AD52   LD       I, $D52         ; Load D52 into I
$B08    $AF3B   LD       I, $F3B         ; Load F3B into I
$B0A    $D75F   DRW      V7, V5, #F      ; Draw 15-byte sprite at V7, V5
$B0C    $D1DB   DRW      V1, VD, #B      ; Draw 11-byte sprite at V1, VD
$B0E    $33F6   SE       V3, #F6         ; Skip if V3 == 246
$B10    $1C34   JP       $C34            ; Jump to C34
$B12    $D508   DRW      V5, V0, #8      ; Draw 8-byte sprite at V5, V0
$B14    $C074   RND      V0, #74         ; V0 = random & 74
$B16    $D212   DRW      V2, V1, #2      ; Draw 2-byte sprite at V2, V1
$B18    $51EF   UNKNOWN  $51EF           ; Unknown 5xxx instruction
$B1A    $F0BA   UNKNOWN  F0BA            ; Unknown Fxxx instruction
$B1C    $BB06   JP       V0, $B06        ; Jump to V0 + B06
$B1E    $77DB   ADD      V7, #DB         ; Add 219 to V7
$B20    $DC1D   DRW      VC, V1, #D      ; Draw 13-byte sprite at VC, V1
$B22    $42F1   SNE      V2, #F1         ; Skip if V2 != 241
$B24    $FF7B   UNKNOWN  FF7B            ; Unknown Fxxx instruction
$B26    $8F5B   UNKNOWN  8F5B            ; Unknown 8xxx instruction
$B28    $FCCB   UNKNOWN  FCCB            ; Unknown Fxxx instruction
$B2A    $5BCD   UNKNOWN  $5BCD           ; Unknown 5xxx instruction
$B2C    $9F5D   UNKNOWN  $9F5D           ; Unknown 9xxx instruction
$B2E    $5791   UNKNOWN  $5791           ; Unknown 5xxx instruction
$B30    $BBBF   JP       V0, $BBF        ; Jump to V0 + BBF
$B32    $BB44   JP       V0, $B44        ; Jump to V0 + B44
$B34    $FDA9   UNKNOWN  FDA9            ; Unknown Fxxx instruction
$B36    $DA23   DRW      VA, V2, #3      ; Draw 3-byte sprite at VA, V2
$B38    $AC87   LD       I, $C87         ; Load C87 into I
$B3A    $5928   UNKNOWN  $5928           ; Unknown 5xxx instruction
$B3C    $2283   CALL     $283            ; Call subroutine at 283
$B3E    $A3C7   LD       I, $3C7         ; Load 3C7 into I
$B40    $0316   SYS      $316            ; System call to 316
$B42    $B9E1   JP       V0, $9E1        ; Jump to V0 + 9E1
$B44    $6FB0   LD       VF, #B0         ; Load 176 into VF
$B46    $53E0   SE       V3, VE          ; Skip if V3 == VE
$B48    $0C96   SYS      $C96            ; System call to C96
$B4A    $4FE6   SNE      VF, #E6         ; Skip if VF != 230
$B4C    $26D4   CALL     $6D4            ; Call subroutine at 6D4
$B4E    $4EB1   SNE      VE, #B1         ; Skip if VE != 177
$B50    $00EA   SYS      $0EA            ; System call to 0EA
$B52    $FCC9   UNKNOWN  FCC9            ; Unknown Fxxx instruction
$B54    $9B5B   UNKNOWN  $9B5B           ; Unknown 9xxx instruction
$B56    $7868   ADD      V8, #68         ; Add 104 to V8
$B58    $3438   SE       V4, #38         ; Skip if V4 == 56
$B5A    $854C   UNKNOWN  854C            ; Unknown 8xxx instruction
$B5C    $176A   JP       $76A            ; Jump to 76A
$B5E    $5A00   SE       VA, V0          ; Skip if VA == V0
$B60    $B0F4   JP       V0, $0F4        ; Jump to V0 + 0F4
$B62    $8E62   AND      VE, V6          ; VE &= V6
$B64    $D2E0   DRW      V2, VE, #0      ; Draw 0-byte sprite at V2, VE
$B66    $8D7B   UNKNOWN  8D7B            ; Unknown 8xxx instruction
$B68    $F3A0   UNKNOWN  F3A0            ; Unknown Fxxx instruction
$B6A    $74FC   ADD      V4, #FC         ; Add 252 to V4
$B6C    $3BBD   SE       VB, #BD         ; Skip if VB == 189
$B6E    $16C5   JP       $6C5            ; Jump to 6C5
$B70    $C9DC   RND      V9, #DC         ; V9 = random & DC
$B72    $91FD   UNKNOWN  $91FD           ; Unknown 9xxx instruction
$B74    $A8F1   LD       I, $8F1         ; Load 8F1 into I
$B76    $BD6A   JP       V0, $D6A        ; Jump to V0 + D6A
$B78    $939F   UNKNOWN  $939F           ; Unknown 9xxx instruction
$B7A    $DB5B   DRW      VB, V5, #B      ; Draw 11-byte sprite at VB, V5
$B7C    $E8A1   SKNP     V8              ; Skip if key V8 not pressed
$B7E    $38B3   SE       V8, #B3         ; Skip if V8 == 179
$B80    $2CAE   CALL     $CAE            ; Call subroutine at CAE
$B82    $C308   RND      V3, #08         ; V3 = random & 08
$B84    $D109   DRW      V1, V0, #9      ; Draw 9-byte sprite at V1, V0
$B86    $78EC   ADD      V8, #EC         ; Add 236 to V8
$B88    $F553   UNKNOWN  F553            ; Unknown Fxxx instruction
$B8A    $72B0   ADD      V2, #B0         ; Add 176 to V2
$B8C    $2611   CALL     $611            ; Call subroutine at 611
$B8E    $C144   RND      V1, #44         ; V1 = random & 44
$B90    $60F8   LD       V0, #F8         ; Load 248 into V0
$B92    $071B   SYS      $71B            ; System call to 71B
$B94    $B83F   JP       V0, $83F        ; Jump to V0 + 83F
$B96    $BF0D   JP       V0, $F0D        ; Jump to V0 + F0D
$B98    $0A20   SYS      $A20            ; System call to A20
$B9A    $1541   JP       $541            ; Jump to 541
$B9C    $E128   UNKNOWN  $E128           ; Unknown Exxx instruction
$B9E    $DBD0   DRW      VB, VD, #0      ; Draw 0-byte sprite at VB, VD
$BA0    $03D0   SYS      $3D0            ; System call to 3D0
$BA2    $C550   RND      V5, #50         ; V5 = random & 50
$BA4    $BA28   JP       V0, $A28        ; Jump to V0 + A28
$BA6    $2EE9   CALL     $EE9            ; Call subroutine at EE9
$BA8    $9F17   UNKNOWN  $9F17           ; Unknown 9xxx instruction
$BAA    $C79C   RND      V7, #9C         ; V7 = random & 9C
$BAC    $985F   UNKNOWN  $985F           ; Unknown 9xxx instruction
$BAE    $152F   JP       $52F            ; Jump to 52F
$BB0    $F06A   UNKNOWN  F06A            ; Unknown Fxxx instruction
$BB2    $4E67   SNE      VE, #67         ; Skip if VE != 103
$BB4    $D992   DRW      V9, V9, #2      ; Draw 2-byte sprite at V9, V9
$BB6    $BBA6   JP       V0, $BA6        ; Jump to V0 + BA6
$BB8    $C5E7   RND      V5, #E7         ; V5 = random & E7
$BBA    $38C5   SE       V8, #C5         ; Skip if V8 == 197
$BBC    $C820   RND      V8, #20         ; V8 = random & 20
$BBE    $C91A   RND      V9, #1A         ; V9 = random & 1A
$BC0    $1D4F   JP       $D4F            ; Jump to D4F
$BC2    $81E7   SUBN     V1, VE          ; V1 = VE - V1, VF = !borrow
$BC4    $144F   JP       $44F            ; Jump to 44F
$BC6    $3776   SE       V7, #76         ; Skip if V7 == 118
$BC8    $8A53   XOR      VA, V5          ; VA ^= V5
$BCA    $1D14   JP       $D14            ; Jump to D14
$BCC    $E909   UNKNOWN  $E909           ; Unknown Exxx instruction
$BCE    $4A59   SNE      VA, #59         ; Skip if VA != 89
$BD0    $6003   LD       V0, #03         ; Load 3 into V0
$BD2    $E362   UNKNOWN  $E362           ; Unknown Exxx instruction
$BD4    $D8CA   DRW      V8, VC, #A      ; Draw 10-byte sprite at V8, VC
$BD6    $8BA3   XOR      VB, VA          ; VB ^= VA
$BD8    $E68A   UNKNOWN  $E68A           ; Unknown Exxx instruction
$BDA    $39CB   SE       V9, #CB         ; Skip if V9 == 203
$BDC    $6074   LD       V0, #74         ; Load 116 into V0
$BDE    $E58D   UNKNOWN  $E58D           ; Unknown Exxx instruction
$BE0    $9D65   UNKNOWN  $9D65           ; Unknown 9xxx instruction
$BE2    $BA22   JP       V0, $A22        ; Jump to V0 + A22
$BE4    $4B26   SNE      VB, #26         ; Skip if VB != 38
$BE6    $4BA1   SNE      VB, #A1         ; Skip if VB != 161
$BE8    $4F48   SNE      VF, #48         ; Skip if VF != 72
$BEA    $980C   UNKNOWN  $980C           ; Unknown 9xxx instruction
$BEC    $81F7   SUBN     V1, VF          ; V1 = VF - V1, VF = !borrow
$BEE    $8BA2   AND      VB, VA          ; VB &= VA
$BF0    $7808   ADD      V8, #08         ; Add 8 to V8
$BF2    $60F1   LD       V0, #F1         ; Load 241 into V0
$BF4    $1EFC   JP       $EFC            ; Jump to EFC
$BF6    $3374   SE       V3, #74         ; Skip if V3 == 116
$BF8    $4200   SNE      V2, #00         ; Skip if V2 != 0
$BFA    $B6A4   JP       V0, $6A4        ; Jump to V0 + 6A4
$BFC    $1CCE   JP       $CCE            ; Jump to CCE
$BFE    $EFF7   UNKNOWN  $EFF7           ; Unknown Exxx instruction
$C00    $C5D8   RND      V5, #D8         ; V5 = random & D8
$C02    $CAD7   RND      VA, #D7         ; VA = random & D7
$C04    $3004   SE       V0, #04         ; Skip if V0 == 4
$C06    $8D6D   UNKNOWN  8D6D            ; Unknown 8xxx instruction
$C08    $7A27   ADD      VA, #27         ; Add 39 to VA
$C0A    $2445   CALL     $445            ; Call subroutine at 445
$C0C    $F4DD   UNKNOWN  F4DD            ; Unknown Fxxx instruction
$C0E    $4B81   SNE      VB, #81         ; Skip if VB != 129
$C10    $3773   SE       V7, #73         ; Skip if V7 == 115
$C12    $78BB   ADD      V8, #BB         ; Add 187 to V8
$C14    $79AF   ADD      V9, #AF         ; Add 175 to V9
$C16    $D846   DRW      V8, V4, #6      ; Draw 6-byte sprite at V8, V4
$C18    $A0A2   LD       I, $0A2         ; Load 0A2 into I
$C1A    $9C37   UNKNOWN  $9C37           ; Unknown 9xxx instruction
$C1C    $832E   SHL      V3              ; V3 <<= 1, VF = MSB
$C1E    $8868   UNKNOWN  8868            ; Unknown 8xxx instruction
$C20    $3602   SE       V6, #02         ; Skip if V6 == 2
$C22    $BCD8   JP       V0, $CD8        ; Jump to V0 + CD8
$C24    $740D   ADD      V4, #0D         ; Add 13 to V4
$C26    $4243   SNE      V2, #43         ; Skip if V2 != 67
$C28    $544C   UNKNOWN  $544C           ; Unknown 5xxx instruction
$C2A    $4743   SNE      V7, #43         ; Skip if V7 != 67
$C2C    $2036   CALL     $036            ; Call subroutine at 036
$C2E    $263D   CALL     $63D            ; Call subroutine at 63D
$C30    $1C9C   JP       $C9C            ; Jump to C9C
$C32    $D5AD   DRW      V5, VA, #D      ; Draw 13-byte sprite at V5, VA
$C34    $3210   SE       V2, #10         ; Skip if V2 == 16
$C36    $6FD0   LD       VF, #D0         ; Load 208 into VF
$C38    $42B4   SNE      V2, #B4         ; Skip if V2 != 180
$C3A    $CF21   RND      VF, #21         ; VF = random & 21
$C3C    $8D98   UNKNOWN  8D98            ; Unknown 8xxx instruction
$C3E    $B91A   JP       V0, $91A        ; Jump to V0 + 91A
$C40    $CA4D   RND      VA, #4D         ; VA = random & 4D
$C42    $A3CA   LD       I, $3CA         ; Load 3CA into I
$C44    $5B7C   UNKNOWN  $5B7C           ; Unknown 5xxx instruction
$C46    $B3E9   JP       V0, $3E9        ; Jump to V0 + 3E9
$C48    $74FE   ADD      V4, #FE         ; Add 254 to V4
$C4A    $674F   LD       V7, #4F         ; Load 79 into V7
$C4C    $9F4D   UNKNOWN  $9F4D           ; Unknown 9xxx instruction
$C4E    $B056   JP       V0, $056        ; Jump to V0 + 056
$C50    $DC09   DRW      VC, V0, #9      ; Draw 9-byte sprite at VC, V0
$C52    $EF0A   UNKNOWN  $EF0A           ; Unknown Exxx instruction
$C54    $FB50   UNKNOWN  FB50            ; Unknown Fxxx instruction
$C56    $674C   LD       V7, #4C         ; Load 76 into V7
$C58    $0E8B   SYS      $E8B            ; System call to E8B
$C5A    $6C89   LD       VC, #89         ; Load 137 into VC
$C5C    $260A   CALL     $60A            ; Call subroutine at 60A
$C5E    $56FF   UNKNOWN  $56FF           ; Unknown 5xxx instruction
$C60    $5321   UNKNOWN  $5321           ; Unknown 5xxx instruction
$C62    $CB0F   RND      VB, #0F         ; VB = random & 0F
$C64    $2B09   CALL     $B09            ; Call subroutine at B09
$C66    $6FCE   LD       VF, #CE         ; Load 206 into VF
$C68    $B60E   JP       V0, $60E        ; Jump to V0 + 60E
$C6A    $855F   UNKNOWN  855F            ; Unknown 8xxx instruction
$C6C    $D7E5   DRW      V7, VE, #5      ; Draw 5-byte sprite at V7, VE
$C6E    $C650   RND      V6, #50         ; V6 = random & 50
$C70    $E510   UNKNOWN  $E510           ; Unknown Exxx instruction
$C72    $1EC6   JP       $EC6            ; Jump to EC6
$C74    $3BC3   SE       VB, #C3         ; Skip if VB == 195
$C76    $1A39   JP       $A39            ; Jump to A39
$C78    $8584   ADD      V5, V8          ; V5 += V8, VF = carry
$C7A    $BBBF   JP       V0, $BBF        ; Jump to V0 + BBF
$C7C    $8B89   UNKNOWN  8B89            ; Unknown 8xxx instruction
$C7E    $FBD2   UNKNOWN  FBD2            ; Unknown Fxxx instruction
$C80    $0341   SYS      $341            ; System call to 341
$C82    $4326   SNE      V3, #26         ; Skip if V3 != 38
$C84    $723C   ADD      V2, #3C         ; Add 60 to V2
$C86    $893A   UNKNOWN  893A            ; Unknown 8xxx instruction
$C88    $A650   LD       I, $650         ; Load 650 into I
$C8A    $4434   SNE      V4, #34         ; Skip if V4 != 52
$C8C    $B9C4   JP       V0, $9C4        ; Jump to V0 + 9C4
$C8E    $B49F   JP       V0, $49F        ; Jump to V0 + 49F
$C90    $D591   DRW      V5, V9, #1      ; Draw 1-byte sprite at V5, V9
$C92    $F395   UNKNOWN  F395            ; Unknown Fxxx instruction
$C94    $DBE8   DRW      VB, VE, #8      ; Draw 8-byte sprite at VB, VE
$C96    $1ED0   JP       $ED0            ; Jump to ED0
$C98    $3E9C   SE       VE, #9C         ; Skip if VE == 156
$C9A    $C517   RND      V5, #17         ; V5 = random & 17
$C9C    $1AF0   JP       $AF0            ; Jump to AF0
$C9E    $849C   UNKNOWN  849C            ; Unknown 8xxx instruction
$CA0    $23AC   CALL     $3AC            ; Call subroutine at 3AC
$CA2    $D78F   DRW      V7, V8, #F      ; Draw 15-byte sprite at V7, V8
$CA4    $0E96   SYS      $E96            ; System call to E96
$CA6    $A9B4   LD       I, $9B4         ; Load 9B4 into I
$CA8    $F9D0   UNKNOWN  F9D0            ; Unknown Fxxx instruction
$CAA    $FFD9   UNKNOWN  FFD9            ; Unknown Fxxx instruction
$CAC    $803B   UNKNOWN  803B            ; Unknown 8xxx instruction
$CAE    $3F6C   SE       VF, #6C         ; Skip if VF == 108
$CB0    $E0B3   UNKNOWN  $E0B3           ; Unknown Exxx instruction
$CB2    $6617   LD       V6, #17         ; Load 23 into V6
$CB4    $A88F   LD       I, $88F         ; Load 88F into I
$CB6    $99C9   UNKNOWN  $99C9           ; Unknown 9xxx instruction
$CB8    $F8F5   UNKNOWN  F8F5            ; Unknown Fxxx instruction
$CBA    $82CA   UNKNOWN  82CA            ; Unknown 8xxx instruction
$CBC    $7764   ADD      V7, #64         ; Add 100 to V7
$CBE    $003C   SYS      $03C            ; System call to 03C
$CC0    $B75B   JP       V0, $75B        ; Jump to V0 + 75B
$CC2    $342C   SE       V4, #2C         ; Skip if V4 == 44
$CC4    $C341   RND      V3, #41         ; V3 = random & 41
$CC6    $12AF   JP       $2AF            ; Jump to 2AF
$CC8    $3C89   SE       VC, #89         ; Skip if VC == 137
$CCA    $7083   ADD      V0, #83         ; Add 131 to V0
$CCC    $7AC0   ADD      VA, #C0         ; Add 192 to VA
$CCE    $9FC1   UNKNOWN  $9FC1           ; Unknown 9xxx instruction
$CD0    $B4C6   JP       V0, $4C6        ; Jump to V0 + 4C6
$CD2    $3C69   SE       VC, #69         ; Skip if VC == 105
$CD4    $810C   UNKNOWN  810C            ; Unknown 8xxx instruction
$CD6    $87BC   UNKNOWN  87BC            ; Unknown 8xxx instruction
$CD8    $4E99   SNE      VE, #99         ; Skip if VE != 153
$CDA    $F89A   UNKNOWN  F89A            ; Unknown Fxxx instruction
$CDC    $B995   JP       V0, $995        ; Jump to V0 + 995
$CDE    $D0E2   DRW      V0, VE, #2      ; Draw 2-byte sprite at V0, VE
$CE0    $6AFA   LD       VA, #FA         ; Load 250 into VA
$CE2    $B111   JP       V0, $111        ; Jump to V0 + 111
$CE4    $A024   LD       I, $024         ; Load 024 into I
$CE6    $D16A   DRW      V1, V6, #A      ; Draw 10-byte sprite at V1, V6
$CE8    $DBD3   DRW      VB, VD, #3      ; Draw 3-byte sprite at VB, VD
$CEA    $773B   ADD      V7, #3B         ; Add 59 to V7
$CEC    $CFA5   RND      VF, #A5         ; VF = random & A5
$CEE    $4B25   SNE      VB, #25         ; Skip if VB != 37
$CF0    $25B2   CALL     $5B2            ; Call subroutine at 5B2
$CF2    $B86E   JP       V0, $86E        ; Jump to V0 + 86E
$CF4    $7863   ADD      V8, #63         ; Add 99 to V8
$CF6    $3155   SE       V1, #55         ; Skip if V1 == 85
$CF8    $BE04   JP       V0, $E04        ; Jump to V0 + E04
$CFA    $C55B   RND      V5, #5B         ; V5 = random & 5B
$CFC    $1B90   JP       $B90            ; Jump to B90
$CFE    $E02D   UNKNOWN  $E02D           ; Unknown Exxx instruction
$D00    $8D95   SUB      VD, V9          ; VD -= V9, VF = !borrow
$D02    $548C   UNKNOWN  $548C           ; Unknown 5xxx instruction
$D04    $DE36   DRW      VE, V3, #6      ; Draw 6-byte sprite at VE, V3
$D06    $C613   RND      V6, #13         ; V6 = random & 13
$D08    $DF91   DRW      VF, V9, #1      ; Draw 1-byte sprite at VF, V9
$D0A    $2F9B   CALL     $F9B            ; Call subroutine at F9B
$D0C    $9ADF   UNKNOWN  $9ADF           ; Unknown 9xxx instruction
$D0E    $F746   UNKNOWN  F746            ; Unknown Fxxx instruction
$D10    $4AA8   SNE      VA, #A8         ; Skip if VA != 168
$D12    $3EEE   SE       VE, #EE         ; Skip if VE == 238
$D14    $5E33   UNKNOWN  $5E33           ; Unknown 5xxx instruction
$D16    $2517   CALL     $517            ; Call subroutine at 517
$D18    $8F48   UNKNOWN  8F48            ; Unknown 8xxx instruction
$D1A    $0EAF   SYS      $EAF            ; System call to EAF
$D1C    $44A5   SNE      V4, #A5         ; Skip if V4 != 165
$D1E    $0D05   SYS      $D05            ; System call to D05
$D20    $AE16   LD       I, $E16         ; Load E16 into I
$D22    $D6E8   DRW      V6, VE, #8      ; Draw 8-byte sprite at V6, VE
$D24    $4F77   SNE      VF, #77         ; Skip if VF != 119
$D26    $5859   UNKNOWN  $5859           ; Unknown 5xxx instruction
$D28    $4736   SNE      V7, #36         ; Skip if V7 != 54
$D2A    $A190   LD       I, $190         ; Load 190 into I
$D2C    $F8BB   UNKNOWN  F8BB            ; Unknown Fxxx instruction
$D2E    $8FAC   UNKNOWN  8FAC            ; Unknown 8xxx instruction
$D30    $EE21   UNKNOWN  $EE21           ; Unknown Exxx instruction
$D32    $87A3   XOR      V7, VA          ; V7 ^= VA
$D34    $422A   SNE      V2, #2A         ; Skip if V2 != 42
$D36    $4986   SNE      V9, #86         ; Skip if V9 != 134
$D38    $B79E   JP       V0, $79E        ; Jump to V0 + 79E
$D3A    $6C9E   LD       VC, #9E         ; Load 158 into VC
$D3C    $29DB   CALL     $9DB            ; Call subroutine at 9DB
$D3E    $4883   SNE      V8, #83         ; Skip if V8 != 131
$D40    $13E9   JP       $3E9            ; Jump to 3E9
$D42    $89EF   UNKNOWN  89EF            ; Unknown 8xxx instruction
$D44    $A5B5   LD       I, $5B5         ; Load 5B5 into I
$D46    $DCA0   DRW      VC, VA, #0      ; Draw 0-byte sprite at VC, VA
$D48    $627B   LD       V2, #7B         ; Load 123 into V2
$D4A    $51F6   UNKNOWN  $51F6           ; Unknown 5xxx instruction
$D4C    $74AD   ADD      V4, #AD         ; Add 173 to V4
$D4E    $E00B   UNKNOWN  $E00B           ; Unknown Exxx instruction
$D50    $742F   ADD      V4, #2F         ; Add 47 to V4
$D52    $9064   UNKNOWN  $9064           ; Unknown 9xxx instruction
$D54    $35E5   SE       V5, #E5         ; Skip if V5 == 229
$D56    $C604   RND      V6, #04         ; V6 = random & 04
$D58    $5ED2   UNKNOWN  $5ED2           ; Unknown 5xxx instruction
$D5A    $BD0B   JP       V0, $D0B        ; Jump to V0 + D0B
$D5C    $E5EF   UNKNOWN  $E5EF           ; Unknown Exxx instruction
$D5E    $6FCD   LD       VF, #CD         ; Load 205 into VF
$D60    $B4C4   JP       V0, $4C4        ; Jump to V0 + 4C4
$D62    $4E25   SNE      VE, #25         ; Skip if VE != 37
$D64    $2F3B   CALL     $F3B            ; Call subroutine at F3B
$D66    $83D0   LD       V3, VD          ; V3 = VD
$D68    $7A03   ADD      VA, #03         ; Add 3 to VA
$D6A    $89D3   XOR      V9, VD          ; V9 ^= VD
$D6C    $9EF5   UNKNOWN  $9EF5           ; Unknown 9xxx instruction
$D6E    $C294   RND      V2, #94         ; V2 = random & 94
$D70    $0BA0   SYS      $BA0            ; System call to BA0
$D72    $71ED   ADD      V1, #ED         ; Add 237 to V1
$D74    $237A   CALL     $37A            ; Call subroutine at 37A
$D76    $4433   SNE      V4, #33         ; Skip if V4 != 51
$D78    $6112   LD       V1, #12         ; Load 18 into V1
$D7A    $8121   OR       V1, V2          ; V1 |= V2
$D7C    $9A6B   UNKNOWN  $9A6B           ; Unknown 9xxx instruction
$D7E    $C9B9   RND      V9, #B9         ; V9 = random & B9
$D80    $82CC   UNKNOWN  82CC            ; Unknown 8xxx instruction
$D82    $FEE3   UNKNOWN  FEE3            ; Unknown Fxxx instruction
$D84    $CB37   RND      VB, #37         ; VB = random & 37
$D86    $DC20   DRW      VC, V2, #0      ; Draw 0-byte sprite at VC, V2
$D88    $6B3E   LD       VB, #3E         ; Load 62 into VB
$D8A    $9157   UNKNOWN  $9157           ; Unknown 9xxx instruction
$D8C    $9360   SNE      V3, V6          ; Skip if V3 != V6
$D8E    $9426   UNKNOWN  $9426           ; Unknown 9xxx instruction
$D90    $8503   XOR      V5, V0          ; V5 ^= V0
$D92    $A19C   LD       I, $19C         ; Load 19C into I
$D94    $88A3   XOR      V8, VA          ; V8 ^= VA
$D96    $534D   UNKNOWN  $534D           ; Unknown 5xxx instruction
$D98    $BD05   JP       V0, $D05        ; Jump to V0 + D05
$D9A    $182E   JP       $82E            ; Jump to 82E
$D9C    $9816   UNKNOWN  $9816           ; Unknown 9xxx instruction
$D9E    $57B2   UNKNOWN  $57B2           ; Unknown 5xxx instruction
$DA0    $5609   UNKNOWN  $5609           ; Unknown 5xxx instruction
$DA2    $D799   DRW      V7, V9, #9      ; Draw 9-byte sprite at V7, V9
$DA4    $E440   UNKNOWN  $E440           ; Unknown Exxx instruction
$DA6    $B987   JP       V0, $987        ; Jump to V0 + 987
$DA8    $B38D   JP       V0, $38D        ; Jump to V0 + 38D
$DAA    $D708   DRW      V7, V0, #8      ; Draw 8-byte sprite at V7, V0
$DAC    $7415   ADD      V4, #15         ; Add 21 to V4
$DAE    $62C6   LD       V2, #C6         ; Load 198 into V2
$DB0    $BF0C   JP       V0, $F0C        ; Jump to V0 + F0C
$DB2    $CB18   RND      VB, #18         ; VB = random & 18
$DB4    $0211   SYS      $211            ; System call to 211
$DB6    $CAD2   RND      VA, #D2         ; VA = random & D2
$DB8    $D297   DRW      V2, V9, #7      ; Draw 7-byte sprite at V2, V9
$DBA    $B199   JP       V0, $199        ; Jump to V0 + 199
$DBC    $4869   SNE      V8, #69         ; Skip if V8 != 105
$DBE    $C38B   RND      V3, #8B         ; V3 = random & 8B
$DC0    $D174   DRW      V1, V7, #4      ; Draw 4-byte sprite at V1, V7
$DC2    $7637   ADD      V6, #37         ; Add 55 to V6
$DC4    $008D   SYS      $08D            ; System call to 08D
$DC6    $BE36   JP       V0, $E36        ; Jump to V0 + E36
$DC8    $7AB6   ADD      VA, #B6         ; Add 182 to VA
$DCA    $6C65   LD       VC, #65         ; Load 101 into VC
$DCC    $1BB7   JP       $BB7            ; Jump to BB7
$DCE    $1B1F   JP       $B1F            ; Jump to B1F
$DD0    $7CD6   ADD      VC, #D6         ; Add 214 to VC
$DD2    $6F8D   LD       VF, #8D         ; Load 141 into VF
$DD4    $A6CA   LD       I, $6CA         ; Load 6CA into I
$DD6    $D9FD   DRW      V9, VF, #D      ; Draw 13-byte sprite at V9, VF
$DD8    $7331   ADD      V3, #31         ; Add 49 to V3
$DDA    $BC55   JP       V0, $C55        ; Jump to V0 + C55
$DDC    $9DF0   SNE      VD, VF          ; Skip if VD != VF
$DDE    $4A2B   SNE      VA, #2B         ; Skip if VA != 43
$DE0    $9A0F   UNKNOWN  $9A0F           ; Unknown 9xxx instruction
$DE2    $848D   UNKNOWN  848D            ; Unknown 8xxx instruction
$DE4    $8B68   UNKNOWN  8B68            ; Unknown 8xxx instruction
$DE6    $CF99   RND      VF, #99         ; VF = random & 99
$DE8    $CBE1   RND      VB, #E1         ; VB = random & E1
$DEA    $3E48   SE       VE, #48         ; Skip if VE == 72
$DEC    $D760   DRW      V7, V6, #0      ; Draw 0-byte sprite at V7, V6
$DEE    $F46A   UNKNOWN  F46A            ; Unknown Fxxx instruction
$DF0    $29F9   CALL     $9F9            ; Call subroutine at 9F9
$DF2    $DD74   DRW      VD, V7, #4      ; Draw 4-byte sprite at VD, V7
$DF4    $E077   UNKNOWN  $E077           ; Unknown Exxx instruction
$DF6    $523D   UNKNOWN  $523D           ; Unknown 5xxx instruction
$DF8    $70A4   ADD      V0, #A4         ; Add 164 to V0
$DFA    $487B   SNE      V8, #7B         ; Skip if V8 != 123
$DFC    $9902   UNKNOWN  $9902           ; Unknown 9xxx instruction
$DFE    $C32A   RND      V3, #2A         ; V3 = random & 2A
$E00    $9A47   UNKNOWN  $9A47           ; Unknown 9xxx instruction
$E02    $8FD6   SHR      VF              ; VF >>= 1, VF = LSB
$E04    $9CF0   SNE      VC, VF          ; Skip if VC != VF
$E06    $15F9   JP       $5F9            ; Jump to 5F9
$E08    $D749   DRW      V7, V4, #9      ; Draw 9-byte sprite at V7, V4
$E0A    $2306   CALL     $306            ; Call subroutine at 306
$E0C    $BB59   JP       V0, $B59        ; Jump to V0 + B59
$E0E    $9618   UNKNOWN  $9618           ; Unknown 9xxx instruction
$E10    $D6F1   DRW      V6, VF, #1      ; Draw 1-byte sprite at V6, VF
$E12    $4580   SNE      V5, #80         ; Skip if V5 != 128
$E14    $C268   RND      V2, #68         ; V2 = random & 68
$E16    $A54D   LD       I, $54D         ; Load 54D into I
$E18    $5276   UNKNOWN  $5276           ; Unknown 5xxx instruction
$E1A    $5BC1   UNKNOWN  $5BC1           ; Unknown 5xxx instruction
$E1C    $ABDC   LD       I, $BDC         ; Load BDC into I
$E1E    $639D   LD       V3, #9D         ; Load 157 into V3
$E20    $5A0B   UNKNOWN  $5A0B           ; Unknown 5xxx instruction
$E22    $2027   CALL     $027            ; Call subroutine at 027
$E24    $2F18   CALL     $F18            ; Call subroutine at F18
$E26    $5A83   UNKNOWN  $5A83           ; Unknown 5xxx instruction
$E28    $8C8D   UNKNOWN  8C8D            ; Unknown 8xxx instruction
$E2A    $2554   CALL     $554            ; Call subroutine at 554
$E2C    $B512   JP       V0, $512        ; Jump to V0 + 512
$E2E    $39CE   SE       V9, #CE         ; Skip if V9 == 206
$E30    $F42E   UNKNOWN  F42E            ; Unknown Fxxx instruction
$E32    $2A0D   CALL     $A0D            ; Call subroutine at A0D
$E34    $98B4   UNKNOWN  $98B4           ; Unknown 9xxx instruction
$E36    $3702   SE       V7, #02         ; Skip if V7 == 2
$E38    $7D73   ADD      VD, #73         ; Add 115 to VD
$E3A    $73DE   ADD      V3, #DE         ; Add 222 to V3
$E3C    $DBC9   DRW      VB, VC, #9      ; Draw 9-byte sprite at VB, VC
$E3E    $05F8   SYS      $5F8            ; System call to 5F8
$E40    $85D5   SUB      V5, VD          ; V5 -= VD, VF = !borrow
$E42    $C529   RND      V5, #29         ; V5 = random & 29
$E44    $83C8   UNKNOWN  83C8            ; Unknown 8xxx instruction
$E46    $175E   JP       $75E            ; Jump to 75E
$E48    $724E   ADD      V2, #4E         ; Add 78 to V2
$E4A    $BCEA   JP       V0, $CEA        ; Jump to V0 + CEA
$E4C    $6D74   LD       VD, #74         ; Load 116 into VD
$E4E    $68F7   LD       V8, #F7         ; Load 247 into V8
$E50    $D96A   DRW      V9, V6, #A      ; Draw 10-byte sprite at V9, V6
$E52    $4599   SNE      V5, #99         ; Skip if V5 != 153
$E54    $7D40   ADD      VD, #40         ; Add 64 to VD
$E56    $5F95   UNKNOWN  $5F95           ; Unknown 5xxx instruction
$E58    $A996   LD       I, $996         ; Load 996 into I
$E5A    $C989   RND      V9, #89         ; V9 = random & 89
$E5C    $CAC6   RND      VA, #C6         ; VA = random & C6
$E5E    $2A00   CALL     $A00            ; Call subroutine at A00
$E60    $98AB   UNKNOWN  $98AB           ; Unknown 9xxx instruction
$E62    $D9A9   DRW      V9, VA, #9      ; Draw 9-byte sprite at V9, VA
$E64    $A8B9   LD       I, $8B9         ; Load 8B9 into I
$E66    $D60A   DRW      V6, V0, #A      ; Draw 10-byte sprite at V6, V0
$E68    $D208   DRW      V2, V0, #8      ; Draw 8-byte sprite at V2, V0
$E6A    $04E5   SYS      $4E5            ; System call to 4E5
$E6C    $2F1E   CALL     $F1E            ; Call subroutine at F1E
$E6E    $6600   LD       V6, #00         ; Load 0 into V6
$E70    $66FB   LD       V6, #FB         ; Load 251 into V6
$E72    $48EA   SNE      V8, #EA         ; Skip if V8 != 234
$E74    $E9B2   UNKNOWN  $E9B2           ; Unknown Exxx instruction
$E76    $A6D0   LD       I, $6D0         ; Load 6D0 into I
$E78    $6864   LD       V8, #64         ; Load 100 into V8
$E7A    $1F48   JP       $F48            ; Jump to F48
$E7C    $9102   UNKNOWN  $9102           ; Unknown 9xxx instruction
$E7E    $83FD   UNKNOWN  83FD            ; Unknown 8xxx instruction
$E80    $FFDB   UNKNOWN  FFDB            ; Unknown Fxxx instruction
$E82    $8912   AND      V9, V1          ; V9 &= V1
$E84    $B3C4   JP       V0, $3C4        ; Jump to V0 + 3C4
$E86    $F2C4   UNKNOWN  F2C4            ; Unknown Fxxx instruction
$E88    $BD72   JP       V0, $D72        ; Jump to V0 + D72
$E8A    $C655   RND      V6, #55         ; V6 = random & 55
$E8C    $CB17   RND      VB, #17         ; VB = random & 17
$E8E    $9A6F   UNKNOWN  $9A6F           ; Unknown 9xxx instruction
$E90    $C8C6   RND      V8, #C6         ; V8 = random & C6
$E92    $BBE7   JP       V0, $BE7        ; Jump to V0 + BE7
$E94    $0546   SYS      $546            ; System call to 546
$E96    $D8AB   DRW      V8, VA, #B      ; Draw 11-byte sprite at V8, VA
$E98    $0128   SYS      $128            ; System call to 128
$E9A    $FD1D   UNKNOWN  FD1D            ; Unknown Fxxx instruction
$E9C    $19D1   JP       $9D1            ; Jump to 9D1
$E9E    $A7CC   LD       I, $7CC         ; Load 7CC into I
$EA0    $C8D0   RND      V8, #D0         ; V8 = random & D0
$EA2    $8838   UNKNOWN  8838            ; Unknown 8xxx instruction
$EA4    $FF9F   UNKNOWN  FF9F            ; Unknown Fxxx instruction
$EA6    $32DC   SE       V2, #DC         ; Skip if V2 == 220
$EA8    $D0DD   DRW      V0, VD, #D      ; Draw 13-byte sprite at V0, VD
$EAA    $C89C   RND      V8, #9C         ; V8 = random & 9C
$EAC    $9457   UNKNOWN  $9457           ; Unknown 9xxx instruction
$EAE    $5DDB   UNKNOWN  $5DDB           ; Unknown 5xxx instruction
$EB0    $7147   ADD      V1, #47         ; Add 71 to V1
$EB2    $BA42   JP       V0, $A42        ; Jump to V0 + A42
$EB4    $DAF0   DRW      VA, VF, #0      ; Draw 0-byte sprite at VA, VF
$EB6    $BDD1   JP       V0, $DD1        ; Jump to V0 + DD1
$EB8    $66D2   LD       V6, #D2         ; Load 210 into V6
$EBA    $A4F7   LD       I, $4F7         ; Load 4F7 into I
$EBC    $D5A5   DRW      V5, VA, #5      ; Draw 5-byte sprite at V5, VA
$EBE    $432A   SNE      V3, #2A         ; Skip if V3 != 42
$EC0    $700A   ADD      V0, #0A         ; Add 10 to V0
$EC2    $9693   UNKNOWN  $9693           ; Unknown 9xxx instruction
$EC4    $A337   LD       I, $337         ; Load 337 into I
$EC6    $F6B7   UNKNOWN  F6B7            ; Unknown Fxxx instruction
$EC8    $28FC   CALL     $8FC            ; Call subroutine at 8FC
$ECA    $D6B2   DRW      V6, VB, #2      ; Draw 2-byte sprite at V6, VB
$ECC    $E7E6   UNKNOWN  $E7E6           ; Unknown Exxx instruction
$ECE    $B1C9   JP       V0, $1C9        ; Jump to V0 + 1C9
$ED0    $0CC8   SYS      $CC8            ; System call to CC8
$ED2    $D3E4   DRW      V3, VE, #4      ; Draw 4-byte sprite at V3, VE
$ED4    $F8A1   UNKNOWN  F8A1            ; Unknown Fxxx instruction
$ED6    $6617   LD       V6, #17         ; Load 23 into V6
$ED8    $175F   JP       $75F            ; Jump to 75F
$EDA    $C380   RND      V3, #80         ; V3 = random & 80
$EDC    $7551   ADD      V5, #51         ; Add 81 to V5
$EDE    $9D6D   UNKNOWN  $9D6D           ; Unknown 9xxx instruction
$EE0    $5560   SE       V5, V6          ; Skip if V5 == V6
$EE2    $2DBF   CALL     $DBF            ; Call subroutine at DBF
$EE4    $9FE3   UNKNOWN  $9FE3           ; Unknown 9xxx instruction
$EE6    $59C8   UNKNOWN  $59C8           ; Unknown 5xxx instruction
$EE8    $38EC   SE       V8, #EC         ; Skip if V8 == 236
$EEA    $E060   UNKNOWN  $E060           ; Unknown Exxx instruction
$EEC    $70A5   ADD      V0, #A5         ; Add 165 to V0
$EEE    $66EF   LD       V6, #EF         ; Load 239 into V6
$EF0    $5CAB   UNKNOWN  $5CAB           ; Unknown 5xxx instruction
$EF2    $AFE1   LD       I, $FE1         ; Load FE1 into I
$EF4    $4EDC   SNE      VE, #DC         ; Skip if VE != 220
$EF6    $A8E5   LD       I, $8E5         ; Load 8E5 into I
$EF8    $B6BA   JP       V0, $6BA        ; Jump to V0 + 6BA
$EFA    $38D7   SE       V8, #D7         ; Skip if V8 == 215
$EFC    $AC3F   LD       I, $C3F         ; Load C3F into I
$EFE    $DF25   DRW      VF, V2, #5      ; Draw 5-byte sprite at VF, V2
$F00    $99E0   SNE      V9, VE          ; Skip if V9 != VE
$F02    $3C0C   SE       VC, #0C         ; Skip if VC == 12
$F04    $CB6A   RND      VB, #6A         ; VB = random & 6A
$F06    $B305   JP       V0, $305        ; Jump to V0 + 305
$F08    $52D3   UNKNOWN  $52D3           ; Unknown 5xxx instruction
$F0A    $5C8A   UNKNOWN  $5C8A           ; Unknown 5xxx instruction
$F0C    $334F   SE       V3, #4F         ; Skip if V3 == 79
$F0E    $2982   CALL     $982            ; Call subroutine at 982
$F10    $F0EC   UNKNOWN  F0EC            ; Unknown Fxxx instruction
$F12    $1337   JP       $337            ; Jump to 337
$F14    $EC66   UNKNOWN  $EC66           ; Unknown Exxx instruction
$F16    $77D7   ADD      V7, #D7         ; Add 215 to V7
$F18    $D888   DRW      V8, V8, #8      ; Draw 8-byte sprite at V8, V8
$F1A    $13A0   JP       $3A0            ; Jump to 3A0
$F1C    $97AA   UNKNOWN  $97AA           ; Unknown 9xxx instruction
$F1E    $5994   UNKNOWN  $5994           ; Unknown 5xxx instruction
$F20    $BD3A   JP       V0, $D3A        ; Jump to V0 + D3A
$F22    $1243   JP       $243            ; Jump to 243
$F24    $8A84   ADD      VA, V8          ; VA += V8, VF = carry
$F26    $38EC   SE       V8, #EC         ; Skip if V8 == 236
$F28    $002C   SYS      $02C            ; System call to 02C
$F2A    $5814   UNKNOWN  $5814           ; Unknown 5xxx instruction
$F2C    $40E1   SNE      V0, #E1         ; Skip if V0 != 225
$F2E    $F4B0   UNKNOWN  F4B0            ; Unknown Fxxx instruction
$F30    $69C9   LD       V9, #C9         ; Load 201 into V9
$F32    $9528   UNKNOWN  $9528           ; Unknown 9xxx instruction
$F34    $5A31   UNKNOWN  $5A31           ; Unknown 5xxx instruction
$F36    $56DA   UNKNOWN  $56DA           ; Unknown 5xxx instruction
$F38    $CB9C   RND      VB, #9C         ; VB = random & 9C
$F3A    $4AE2   SNE      VA, #E2         ; Skip if VA != 226
$F3C    $E7EC   UNKNOWN  $E7EC           ; Unknown Exxx instruction
$F3E    $B511   JP       V0, $511        ; Jump to V0 + 511
$F40    $AD3A   LD       I, $D3A         ; Load D3A into I
$F42    $99FB   UNKNOWN  $99FB           ; Unknown 9xxx instruction
$F44    $656E   LD       V5, #6E         ; Load 110 into V5
$F46    $6F7F   LD       VF, #7F         ; Load 127 into VF
$F48    $C16D   RND      V1, #6D         ; V1 = random & 6D
$F4A    $6687   LD       V6, #87         ; Load 135 into V6
$F4C    $5FB8   UNKNOWN  $5FB8           ; Unknown 5xxx instruction
$F4E    $6F89   LD       VF, #89         ; Load 137 into VF
$F50    $9993   UNKNOWN  $9993           ; Unknown 9xxx instruction
$F52    $D1FF   DRW      V1, VF, #F      ; Draw 15-byte sprite at V1, VF
$F54    $708D   ADD      V0, #8D         ; Add 141 to V0
$F56    $2459   CALL     $459            ; Call subroutine at 459
$F58    $CA0D   RND      VA, #0D         ; VA = random & 0D
$F5A    $DBD4   DRW      VB, VD, #4      ; Draw 4-byte sprite at VB, VD
$F5C    $DF12   DRW      VF, V1, #2      ; Draw 2-byte sprite at VF, V1
$F5E    $B440   JP       V0, $440        ; Jump to V0 + 440
$F60    $DE5D   DRW      VE, V5, #D      ; Draw 13-byte sprite at VE, V5
$F62    $28BE   CALL     $8BE            ; Call subroutine at 8BE
$F64    $A8F8   LD       I, $8F8         ; Load 8F8 into I
$F66    $10CF   JP       $0CF            ; Jump to 0CF
$F68    $6EF0   LD       VE, #F0         ; Load 240 into VE
$F6A    $7ADA   ADD      VA, #DA         ; Add 218 to VA
$F6C    $6131   LD       V1, #31         ; Load 49 into V1
$F6E    $BE2D   JP       V0, $E2D        ; Jump to V0 + E2D
$F70    $4933   SNE      V9, #33         ; Skip if V9 != 51
$F72    $7C95   ADD      VC, #95         ; Add 149 to VC
$F74    $5835   UNKNOWN  $5835           ; Unknown 5xxx instruction
$F76    $C987   RND      V9, #87         ; V9 = random & 87
$F78    $C910   RND      V9, #10         ; V9 = random & 10
$F7A    $D271   DRW      V2, V7, #1      ; Draw 1-byte sprite at V2, V7
$F7C    $4020   SNE      V0, #20         ; Skip if V0 != 32
$F7E    $BF9B   JP       V0, $F9B        ; Jump to V0 + F9B
$F80    $3ECD   SE       VE, #CD         ; Skip if VE == 205
$F82    $2CBB   CALL     $CBB            ; Call subroutine at CBB
$F84    $7A22   ADD      VA, #22         ; Add 34 to VA
$F86    $2505   CALL     $505            ; Call subroutine at 505
$F88    $A72F   LD       I, $72F         ; Load 72F into I
$F8A    $206F   CALL     $06F            ; Call subroutine at 06F
$F8C    $E853   UNKNOWN  $E853           ; Unknown Exxx instruction
$F8E    $9002   UNKNOWN  $9002           ; Unknown 9xxx instruction
$F90    $1C4A   JP       $C4A            ; Jump to C4A
$F92    $D7EF   DRW      V7, VE, #F      ; Draw 15-byte sprite at V7, VE
$F94    $37DB   SE       V7, #DB         ; Skip if V7 == 219
$F96    $F006   UNKNOWN  F006            ; Unknown Fxxx instruction
$F98    $B430   JP       V0, $430        ; Jump to V0 + 430
$F9A    $A2DB   LD       I, $2DB         ; Load 2DB into I
$F9C    $5D3B   UNKNOWN  $5D3B           ; Unknown 5xxx instruction
$F9E    $0A9A   SYS      $A9A            ; System call to A9A
$FA0    $D31D   DRW      V3, V1, #D      ; Draw 13-byte sprite at V3, V1
$FA2    $DFD1   DRW      VF, VD, #1      ; Draw 1-byte sprite at VF, VD
$FA4    $32E5   SE       V2, #E5         ; Skip if V2 == 229
$FA6    $82E5   SUB      V2, VE          ; V2 -= VE, VF = !borrow
$FA8    $4DA9   SNE      VD, #A9         ; Skip if VD != 169
$FAA    $E22B   UNKNOWN  $E22B           ; Unknown Exxx instruction
$FAC    $DFD5   DRW      VF, VD, #5      ; Draw 5-byte sprite at VF, VD
$FAE    $8BA2   AND      VB, VA          ; VB &= VA
$FB0    $D4A2   DRW      V4, VA, #2      ; Draw 2-byte sprite at V4, VA
$FB2    $B491   JP       V0, $491        ; Jump to V0 + 491
$FB4    $BFC9   JP       V0, $FC9        ; Jump to V0 + FC9
$FB6    $C235   RND      V2, #35         ; V2 = random & 35
$FB8    $A87A   LD       I, $87A         ; Load 87A into I
$FBA    $42B6   SNE      V2, #B6         ; Skip if V2 != 182
$FBC    $DF9C   DRW      VF, V9, #C      ; Draw 12-byte sprite at VF, V9
$FBE    $ACD3   LD       I, $CD3         ; Load CD3 into I
$FC0    $97F2   UNKNOWN  $97F2           ; Unknown 9xxx instruction
$FC2    $81EC   UNKNOWN  81EC            ; Unknown 8xxx instruction
$FC4    $71BE   ADD      V1, #BE         ; Add 190 to V1
$FC6    $DF7B   DRW      VF, V7, #B      ; Draw 11-byte sprite at VF, V7
$FC8    $00AC   SYS      $0AC            ; System call to 0AC
$FCA    $C6C7   RND      V6, #C7         ; V6 = random & C7
$FCC    $7422   ADD      V4, #22         ; Add 34 to V4
$FCE    $6E4C   LD       VE, #4C         ; Load 76 into VE
$FD0    $2777   CALL     $777            ; Call subroutine at 777
$FD2    $F2C9   UNKNOWN  F2C9            ; Unknown Fxxx instruction
$FD4    $C218   RND      V2, #18         ; V2 = random & 18
$FD6    $B1D2   JP       V0, $1D2        ; Jump to V0 + 1D2
$FD8    $BF9F   JP       V0, $F9F        ; Jump to V0 + F9F
$FDA    $E84F   UNKNOWN  $E84F           ; Unknown Exxx instruction
$FDC    $E4AF   UNKNOWN  $E4AF           ; Unknown Exxx instruction
$FDE    $1DB3   JP       $DB3            ; Jump to DB3
$FE0    $48B6   SNE      V8, #B6         ; Skip if V8 != 182
$FE2    $5AD1   UNKNOWN  $5AD1           ; Unknown 5xxx instruction
$FE4    $BEC2   JP       V0, $EC2        ; Jump to V0 + EC2
$FE6    $73E4   ADD      V3, #E4         ; Add 228 to V3
$FE8    $BD45   JP       V0, $D45        ; Jump to V0 + D45
$FEA    $3687   SE       V6, #87         ; Skip if V6 == 135
$FEC    $7B29   ADD      VB, #29         ; Add 41 to VB
$FEE    $C3F7   RND      V3, #F7         ; V3 = random & F7
$FF0    $1D60   JP       $D60            ; Jump to D60
$FF2    $1B1E   JP       $B1E            ; Jump to B1E
$FF4    $11EE   JP       $1EE            ; Jump to 1EE
$FF6    $77DC   ADD      V7, #DC         ; Add 220 to V7
$FF8    $3B53   SE       VB, #53         ; Skip if VB == 83
$FFA    $C9FF   RND      V9, #FF         ; V9 = random & FF
$FFC    $2847   CALL     $847            ; Call subroutine at 847
$FFE    $DDBF   DRW      VD, VB, #F      ; Draw 15-byte sprite at VD, VB

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 453 (25.4%)
  JP      : 235 (13.2%)
  LD      : 225 (12.6%)
  DRW     : 132 ( 7.4%)
  RND     : 122 ( 6.8%)
  CALL    : 117 ( 6.6%)
  ADD     : 116 ( 6.5%)
  SNE     : 111 ( 6.2%)
  SE      : 105 ( 5.9%)
  SYS     : 104 ( 5.8%)
  OR      :  11 ( 0.6%)
  XOR     :  11 ( 0.6%)
  AND     :  10 ( 0.6%)
  SUB     :  10 ( 0.6%)
  SHR     :   6 ( 0.3%)
  SUBN    :   6 ( 0.3%)
  SHL     :   5 ( 0.3%)
  SKNP    :   2 ( 0.1%)
  SKP     :   1 ( 0.1%)

Memory Operations: 341 (19.1%)
Arithmetic Operations: 164 (9.2%)
