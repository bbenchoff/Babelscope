
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B1059D01_I36172_C4810_96e516e1e32a.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 1059
Instance: 36172
Direction: descending
Final Array: [234, 187, 144, 96, 94, 77, 14, 4]
Operations: R:2 W:0 C:13 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 115
Sort Array References:
  $20A: LD I, $7D7 ; Load 7D7 into I
  $25A: LD I, $4F3 ; Load 4F3 into I
  $268: LD I, $AFA ; Load AFA into I
  $292: LD I, $871 ; Load 871 into I
  $29A: LD I, $60A ; Load 60A into I
  $2A6: LD I, $4CA ; Load 4CA into I
  $2C4: LD I, $650 ; Load 650 into I
  $2CA: LD I, $31A ; Load 31A into I
  $314: LD I, $89A ; Load 89A into I
  $322: LD I, $85E ; Load 85E into I
  $358: LD I, $B8E ; Load B8E into I
  $364: LD I, $7F6 ; Load 7F6 into I
  $37A: LD I, $3B5 ; Load 3B5 into I
  $39C: LD I, $C3B ; Load C3B into I
  $3A4: LD I, $A33 ; Load A33 into I
  $3B0: LD I, $343 ; Load 343 into I
  $3C2: LD I, $5C3 ; Load 5C3 into I
  $3EC: LD I, $F83 ; Load F83 into I
  $426: LD I, $DFE ; Load DFE into I
  $444: LD I, $782 ; Load 782 into I
  $46C: LD I, $DC9 ; Load DC9 into I
  $46E: LD I, $23B ; Load 23B into I
  $47E: LD I, $45D ; Load 45D into I
  $492: LD I, $C6C ; Load C6C into I
  $498: LD I, $A10 ; Load A10 into I
  $4AE: LD I, $5E6 ; Load 5E6 into I
  $4E2: LD I, $6D8 ; Load 6D8 into I
  $506: LD I, $1A0 ; Load 1A0 into I
  $51E: LD I, $D27 ; Load D27 into I
  $52E: LD I, $C74 ; Load C74 into I
  $534: LD I, $C28 ; Load C28 into I
  $556: LD I, $DE5 ; Load DE5 into I
  $55E: LD I, $24E ; Load 24E into I
  $57C: LD I, $771 ; Load 771 into I
  $57E: LD I, $37E ; Load 37E into I
  $582: LD I, $81A ; Load 81A into I
  $5C6: LD I, $A38 ; Load A38 into I
  $5F2: LD I, $466 ; Load 466 into I
  $5F8: LD I, $ECB ; Load ECB into I
  $66C: LD I, $89E ; Load 89E into I
  $67C: LD I, $4AC ; Load 4AC into I
  $686: LD I, $2E5 ; Load 2E5 into I
  $6E0: LD I, $50C ; Load 50C into I
  $706: LD I, $42B ; Load 42B into I
  $720: LD I, $5D9 ; Load 5D9 into I
  $754: LD I, $6A7 ; Load 6A7 into I
  $794: LD I, $9CA ; Load 9CA into I
  $7D8: LD I, $CC3 ; Load CC3 into I
  $804: LD I, $3BD ; Load 3BD into I
  $816: LD I, $2E2 ; Load 2E2 into I
  $82C: LD V5, [I] ; Load V0-V5 from I
  $83C: LD I, $57B ; Load 57B into I
  $872: LD I, $4B2 ; Load 4B2 into I
  $8D0: LD I, $B34 ; Load B34 into I
  $936: LD I, $428 ; Load 428 into I
  $944: LD I, $B6E ; Load B6E into I
  $954: LD I, $39B ; Load 39B into I
  $982: LD I, $73C ; Load 73C into I
  $986: LD I, $107 ; Load 107 into I
  $990: LD I, $B67 ; Load B67 into I
  $9C8: LD I, $A9C ; Load A9C into I
  $9CA: LD I, $95C ; Load 95C into I
  $A08: LD I, $6A1 ; Load 6A1 into I
  $A16: LD I, $F7C ; Load F7C into I
  $A30: LD I, $7A5 ; Load 7A5 into I
  $A5E: LD I, $CD3 ; Load CD3 into I
  $A60: LD I, $841 ; Load 841 into I
  $A8A: LD I, $A5C ; Load A5C into I
  $A96: LD I, $374 ; Load 374 into I
  $AA2: LD I, $62B ; Load 62B into I
  $AA8: LD I, $D5A ; Load D5A into I
  $AAC: LD I, $1A7 ; Load 1A7 into I
  $AB6: LD I, $09A ; Load 09A into I
  $AD0: LD I, $031 ; Load 031 into I
  $AEA: LD I, $552 ; Load 552 into I
  $AF8: LD I, $0F6 ; Load 0F6 into I
  $B06: LD I, $9AE ; Load 9AE into I
  $B6C: LD I, $C56 ; Load C56 into I
  $BA2: LD I, $841 ; Load 841 into I
  $BB2: LD I, $AF6 ; Load AF6 into I
  $BCC: LD I, $E07 ; Load E07 into I
  $BE8: LD I, $641 ; Load 641 into I
  $BF6: LD I, $74E ; Load 74E into I
  $C18: LD I, $F4E ; Load F4E into I
  $C26: LD I, $8DE ; Load 8DE into I
  $C72: LD I, $139 ; Load 139 into I
  $C7E: LD I, $60B ; Load 60B into I
  $C96: LD I, $BBB ; Load BBB into I
  $CA2: LD I, $636 ; Load 636 into I
  $CAE: LD I, $531 ; Load 531 into I
  $CEE: LD I, $25B ; Load 25B into I
  $CF0: LD I, $5A8 ; Load 5A8 into I
  $D54: LD I, $8C8 ; Load 8C8 into I
  $D6A: LD I, $9B6 ; Load 9B6 into I
  $D6C: LD I, $3C9 ; Load 3C9 into I
  $D84: LD I, $125 ; Load 125 into I
  $D86: LD I, $E32 ; Load E32 into I
  $DF0: LD I, $828 ; Load 828 into I
  $DF6: LD I, $119 ; Load 119 into I
  $DFA: LD I, $9EB ; Load 9EB into I
  $DFC: LD I, $753 ; Load 753 into I
  $E1A: LD I, $45A ; Load 45A into I
  $E6C: LD I, $A06 ; Load A06 into I
  $E70: LD I, $B08 ; Load B08 into I
  $E72: LD I, $D3A ; Load D3A into I
  $E88: LD I, $BF4 ; Load BF4 into I
  $EA6: LD I, $A9D ; Load A9D into I
  $EB0: LD I, $945 ; Load 945 into I
  $F4A: LD I, $A16 ; Load A16 into I
  $F58: LD I, $5AA ; Load 5AA into I
  $F5A: LD I, $692 ; Load 692 into I
  $F6E: LD I, $731 ; Load 731 into I
  $FA2: LD V0, [I] ; Load V0-V0 from I
  $FDA: LD I, $0F1 ; Load 0F1 into I
  $FE0: LD I, $C0F ; Load C0F into I

CONTROL FLOW ANALYSIS:
Jumps: 186
Calls: 101
Branches: 249
Loops: 107
Loop Structures:
  $220 -> $003 (backward jump)
  $26C -> $0E7 (backward jump)
  $28A -> $031 (backward jump)
  $2F8 -> $2AD (backward jump)
  $362 -> $0CE (backward jump)
  $370 -> $283 (backward jump)
  $3D2 -> $28B (backward jump)
  $42C -> $08E (backward jump)
  $4D4 -> $43C (backward jump)
  $50A -> $129 (backward jump)
  $50C -> $455 (backward jump)
  $52C -> $239 (backward jump)
  $538 -> $033 (backward jump)
  $544 -> $1B2 (backward jump)
  $546 -> $4E5 (backward jump)
  $5F0 -> $04A (backward jump)
  $5FE -> $590 (backward jump)
  $650 -> $3EA (backward jump)
  $658 -> $1D5 (backward jump)
  $68E -> $012 (backward jump)
  $696 -> $5C8 (backward jump)
  $6A0 -> $632 (backward jump)
  $6DA -> $26E (backward jump)
  $6DC -> $241 (backward jump)
  $6EA -> $50E (backward jump)
  $714 -> $481 (backward jump)
  $746 -> $5D0 (backward jump)
  $770 -> $014 (backward jump)
  $7AC -> $23A (backward jump)
  $7D0 -> $7A0 (backward jump)
  $814 -> $071 (backward jump)
  $830 -> $20B (backward jump)
  $832 -> $7ED (backward jump)
  $848 -> $66A (backward jump)
  $860 -> $282 (backward jump)
  $880 -> $76B (backward jump)
  $8AA -> $687 (backward jump)
  $8C4 -> $5D1 (backward jump)
  $8CC -> $5EC (backward jump)
  $8E0 -> $4CC (backward jump)
  $8E4 -> $618 (backward jump)
  $910 -> $381 (backward jump)
  $930 -> $631 (backward jump)
  $964 -> $463 (backward jump)
  $A3A -> $2F5 (backward jump)
  $A68 -> $8E4 (backward jump)
  $A80 -> $7E7 (backward jump)
  $A90 -> $416 (backward jump)
  $AA4 -> $002 (backward jump)
  $AA6 -> $032 (backward jump)
  $AAA -> $9ED (backward jump)
  $B18 -> $4D9 (backward jump)
  $B28 -> $343 (backward jump)
  $B3E -> $393 (backward jump)
  $BB4 -> $A18 (backward jump)
  $BD4 -> $B42 (backward jump)
  $BE4 -> $61C (backward jump)
  $BEE -> $40A (backward jump)
  $C0A -> $8AB (backward jump)
  $C10 -> $9A1 (backward jump)
  $C1A -> $996 (backward jump)
  $C36 -> $39E (backward jump)
  $C50 -> $7CB (backward jump)
  $C60 -> $231 (backward jump)
  $C74 -> $C0E (backward jump)
  $C9E -> $1B1 (backward jump)
  $CB8 -> $A83 (backward jump)
  $CEC -> $BA3 (backward jump)
  $CF4 -> $748 (backward jump)
  $D34 -> $0C7 (backward jump)
  $D42 -> $B36 (backward jump)
  $D56 -> $7CC (backward jump)
  $D58 -> $AE8 (backward jump)
  $D66 -> $8F1 (backward jump)
  $D74 -> $334 (backward jump)
  $D8C -> $63B (backward jump)
  $DAA -> $B22 (backward jump)
  $DAC -> $02F (backward jump)
  $DB6 -> $944 (backward jump)
  $DCA -> $6E6 (backward jump)
  $DD8 -> $23D (backward jump)
  $E22 -> $86A (backward jump)
  $E34 -> $7C1 (backward jump)
  $E38 -> $73F (backward jump)
  $E40 -> $096 (backward jump)
  $E54 -> $3AF (backward jump)
  $E84 -> $5B7 (backward jump)
  $EA0 -> $E37 (backward jump)
  $EB4 -> $B94 (backward jump)
  $EBA -> $D44 (backward jump)
  $EC0 -> $BED (backward jump)
  $ECC -> $1F7 (backward jump)
  $EF2 -> $860 (backward jump)
  $F12 -> $4B0 (backward jump)
  $F34 -> $ECE (backward jump)
  $F38 -> $CB6 (backward jump)
  $F4C -> $7D2 (backward jump)
  $F4E -> $311 (backward jump)
  $F7C -> $75B (backward jump)
  $F8A -> $E0D (backward jump)
  $F98 -> $678 (backward jump)
  $F9A -> $986 (backward jump)
  $FAC -> $50C (backward jump)
  $FBC -> $A68 (backward jump)
  $FC6 -> $508 (backward jump)
  $FE8 -> $035 (backward jump)
  $FEA -> $F79 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $8D1D   UNKNOWN  8D1D            ; Unknown 8xxx instruction
$202    $C5CB   RND      V5, #CB         ; V5 = random & CB
$204    $9BBD   UNKNOWN  $9BBD           ; Unknown 9xxx instruction
$206    $3166   SE       V1, #66         ; Skip if V1 == 102
$208    $066A   SYS      $66A            ; System call to 66A
$20A    $A7D7   LD       I, $7D7         ; Load 7D7 into I
$20C    $78D1   ADD      V8, #D1         ; Add 209 to V8
$20E    $4397   SNE      V3, #97         ; Skip if V3 != 151
$210    $0740   SYS      $740            ; System call to 740
$212    $9081   UNKNOWN  $9081           ; Unknown 9xxx instruction
$214    $2D46   CALL     $D46            ; Call subroutine at D46
$216    $CB6C   RND      VB, #6C         ; VB = random & 6C
$218    $1CEE   JP       $CEE            ; Jump to CEE
$21A    $CC3C   RND      VC, #3C         ; VC = random & 3C
$21C    $6879   LD       V8, #79         ; Load 121 into V8
$21E    $B442   JP       V0, $442        ; Jump to V0 + 442
$220    $B003   JP       V0, $003        ; Jump to V0 + 003
$222    $6128   LD       V1, #28         ; Load 40 into V1
$224    $E7E5   UNKNOWN  $E7E5           ; Unknown Exxx instruction
$226    $8E25   SUB      VE, V2          ; VE -= V2, VF = !borrow
$228    $F7D9   UNKNOWN  F7D9            ; Unknown Fxxx instruction
$22A    $8479   UNKNOWN  8479            ; Unknown 8xxx instruction
$22C    $90DB   UNKNOWN  $90DB           ; Unknown 9xxx instruction
$22E    $F1CA   UNKNOWN  F1CA            ; Unknown Fxxx instruction
$230    $45EB   SNE      V5, #EB         ; Skip if V5 != 235
$232    $4A29   SNE      VA, #29         ; Skip if VA != 41
$234    $392E   SE       V9, #2E         ; Skip if V9 == 46
$236    $F150   UNKNOWN  F150            ; Unknown Fxxx instruction
$238    $4D0C   SNE      VD, #0C         ; Skip if VD != 12
$23A    $2397   CALL     $397            ; Call subroutine at 397
$23C    $84F9   UNKNOWN  84F9            ; Unknown 8xxx instruction
$23E    $7333   ADD      V3, #33         ; Add 51 to V3
$240    $815B   UNKNOWN  815B            ; Unknown 8xxx instruction
$242    $42EC   SNE      V2, #EC         ; Skip if V2 != 236
$244    $871E   SHL      V7              ; V7 <<= 1, VF = MSB
$246    $EF4D   UNKNOWN  $EF4D           ; Unknown Exxx instruction
$248    $0A41   SYS      $A41            ; System call to A41
$24A    $4398   SNE      V3, #98         ; Skip if V3 != 152
$24C    $8AAE   SHL      VA              ; VA <<= 1, VF = MSB
$24E    $7603   ADD      V6, #03         ; Add 3 to V6
$250    $B312   JP       V0, $312        ; Jump to V0 + 312
$252    $7EB1   ADD      VE, #B1         ; Add 177 to VE
$254    $29BA   CALL     $9BA            ; Call subroutine at 9BA
$256    $CE0F   RND      VE, #0F         ; VE = random & 0F
$258    $F321   UNKNOWN  F321            ; Unknown Fxxx instruction
$25A    $A4F3   LD       I, $4F3         ; Load 4F3 into I
$25C    $3AC7   SE       VA, #C7         ; Skip if VA == 199
$25E    $E47C   UNKNOWN  $E47C           ; Unknown Exxx instruction
$260    $1A00   JP       $A00            ; Jump to A00
$262    $C94E   RND      V9, #4E         ; V9 = random & 4E
$264    $87D1   OR       V7, VD          ; V7 |= VD
$266    $3EA4   SE       VE, #A4         ; Skip if VE == 164
$268    $AAFA   LD       I, $AFA         ; Load AFA into I
$26A    $CB8F   RND      VB, #8F         ; VB = random & 8F
$26C    $B0E7   JP       V0, $0E7        ; Jump to V0 + 0E7
$26E    $8607   SUBN     V6, V0          ; V6 = V0 - V6, VF = !borrow
$270    $B9B8   JP       V0, $9B8        ; Jump to V0 + 9B8
$272    $6024   LD       V0, #24         ; Load 36 into V0
$274    $F981   UNKNOWN  F981            ; Unknown Fxxx instruction
$276    $E8C8   UNKNOWN  $E8C8           ; Unknown Exxx instruction
$278    $B94A   JP       V0, $94A        ; Jump to V0 + 94A
$27A    $7280   ADD      V2, #80         ; Add 128 to V2
$27C    $D970   DRW      V9, V7, #0      ; Draw 0-byte sprite at V9, V7
$27E    $B464   JP       V0, $464        ; Jump to V0 + 464
$280    $7C64   ADD      VC, #64         ; Add 100 to VC
$282    $7AA0   ADD      VA, #A0         ; Add 160 to VA
$284    $9CD9   UNKNOWN  $9CD9           ; Unknown 9xxx instruction
$286    $F701   UNKNOWN  F701            ; Unknown Fxxx instruction
$288    $7D69   ADD      VD, #69         ; Add 105 to VD
$28A    $1031   JP       $031            ; Jump to 031
$28C    $012A   SYS      $12A            ; System call to 12A
$28E    $1C1E   JP       $C1E            ; Jump to C1E
$290    $D513   DRW      V5, V1, #3      ; Draw 3-byte sprite at V5, V1
$292    $A871   LD       I, $871         ; Load 871 into I
$294    $34C4   SE       V4, #C4         ; Skip if V4 == 196
$296    $FD26   UNKNOWN  FD26            ; Unknown Fxxx instruction
$298    $8076   SHR      V0              ; V0 >>= 1, VF = LSB
$29A    $A60A   LD       I, $60A         ; Load 60A into I
$29C    $7273   ADD      V2, #73         ; Add 115 to V2
$29E    $FDC4   UNKNOWN  FDC4            ; Unknown Fxxx instruction
$2A0    $B3F3   JP       V0, $3F3        ; Jump to V0 + 3F3
$2A2    $7A5E   ADD      VA, #5E         ; Add 94 to VA
$2A4    $0B06   SYS      $B06            ; System call to B06
$2A6    $A4CA   LD       I, $4CA         ; Load 4CA into I
$2A8    $69FB   LD       V9, #FB         ; Load 251 into V9
$2AA    $494D   SNE      V9, #4D         ; Skip if V9 != 77
$2AC    $2AF4   CALL     $AF4            ; Call subroutine at AF4
$2AE    $DC3C   DRW      VC, V3, #C      ; Draw 12-byte sprite at VC, V3
$2B0    $3C89   SE       VC, #89         ; Skip if VC == 137
$2B2    $08EC   SYS      $8EC            ; System call to 8EC
$2B4    $77C8   ADD      V7, #C8         ; Add 200 to V7
$2B6    $69FD   LD       V9, #FD         ; Load 253 into V9
$2B8    $B55E   JP       V0, $55E        ; Jump to V0 + 55E
$2BA    $E267   UNKNOWN  $E267           ; Unknown Exxx instruction
$2BC    $F19F   UNKNOWN  F19F            ; Unknown Fxxx instruction
$2BE    $4A8B   SNE      VA, #8B         ; Skip if VA != 139
$2C0    $3AD3   SE       VA, #D3         ; Skip if VA == 211
$2C2    $6452   LD       V4, #52         ; Load 82 into V4
$2C4    $A650   LD       I, $650         ; Load 650 into I
$2C6    $995D   UNKNOWN  $995D           ; Unknown 9xxx instruction
$2C8    $1B04   JP       $B04            ; Jump to B04
$2CA    $A31A   LD       I, $31A         ; Load 31A into I
$2CC    $0C51   SYS      $C51            ; System call to C51
$2CE    $FEB3   UNKNOWN  FEB3            ; Unknown Fxxx instruction
$2D0    $924A   UNKNOWN  $924A           ; Unknown 9xxx instruction
$2D2    $0D45   SYS      $D45            ; System call to D45
$2D4    $541D   UNKNOWN  $541D           ; Unknown 5xxx instruction
$2D6    $9596   UNKNOWN  $9596           ; Unknown 9xxx instruction
$2D8    $35E3   SE       V5, #E3         ; Skip if V5 == 227
$2DA    $E4F9   UNKNOWN  $E4F9           ; Unknown Exxx instruction
$2DC    $5CE1   UNKNOWN  $5CE1           ; Unknown 5xxx instruction
$2DE    $C4F1   RND      V4, #F1         ; V4 = random & F1
$2E0    $29F6   CALL     $9F6            ; Call subroutine at 9F6
$2E2    $2B21   CALL     $B21            ; Call subroutine at B21
$2E4    $40F3   SNE      V0, #F3         ; Skip if V0 != 243
$2E6    $1EC6   JP       $EC6            ; Jump to EC6
$2E8    $FD4E   UNKNOWN  FD4E            ; Unknown Fxxx instruction
$2EA    $875B   UNKNOWN  875B            ; Unknown 8xxx instruction
$2EC    $BAD9   JP       V0, $AD9        ; Jump to V0 + AD9
$2EE    $4BC7   SNE      VB, #C7         ; Skip if VB != 199
$2F0    $57C5   UNKNOWN  $57C5           ; Unknown 5xxx instruction
$2F2    $3EE8   SE       VE, #E8         ; Skip if VE == 232
$2F4    $8AE0   LD       VA, VE          ; VA = VE
$2F6    $600D   LD       V0, #0D         ; Load 13 into V0
$2F8    $12AD   JP       $2AD            ; Jump to 2AD
$2FA    $966C   UNKNOWN  $966C           ; Unknown 9xxx instruction
$2FC    $613C   LD       V1, #3C         ; Load 60 into V1
$2FE    $8EFE   SHL      VE              ; VE <<= 1, VF = MSB
$300    $EABB   UNKNOWN  $EABB           ; Unknown Exxx instruction
$302    $9060   SNE      V0, V6          ; Skip if V0 != V6
$304    $5E4D   UNKNOWN  $5E4D           ; Unknown 5xxx instruction
$306    $0E04   SYS      $E04            ; System call to E04
$308    $4713   SNE      V7, #13         ; Skip if V7 != 19
$30A    $9FBD   UNKNOWN  $9FBD           ; Unknown 9xxx instruction
$30C    $3C8A   SE       VC, #8A         ; Skip if VC == 138
$30E    $B353   JP       V0, $353        ; Jump to V0 + 353
$310    $2D52   CALL     $D52            ; Call subroutine at D52
$312    $2C3B   CALL     $C3B            ; Call subroutine at C3B
$314    $A89A   LD       I, $89A         ; Load 89A into I
$316    $71EA   ADD      V1, #EA         ; Add 234 to V1
$318    $4679   SNE      V6, #79         ; Skip if V6 != 121
$31A    $43FF   SNE      V3, #FF         ; Skip if V3 != 255
$31C    $E580   UNKNOWN  $E580           ; Unknown Exxx instruction
$31E    $936E   UNKNOWN  $936E           ; Unknown 9xxx instruction
$320    $88ED   UNKNOWN  88ED            ; Unknown 8xxx instruction
$322    $A85E   LD       I, $85E         ; Load 85E into I
$324    $B6F3   JP       V0, $6F3        ; Jump to V0 + 6F3
$326    $92B9   UNKNOWN  $92B9           ; Unknown 9xxx instruction
$328    $8502   AND      V5, V0          ; V5 &= V0
$32A    $976D   UNKNOWN  $976D           ; Unknown 9xxx instruction
$32C    $94BA   UNKNOWN  $94BA           ; Unknown 9xxx instruction
$32E    $0C06   SYS      $C06            ; System call to C06
$330    $EB28   UNKNOWN  $EB28           ; Unknown Exxx instruction
$332    $2963   CALL     $963            ; Call subroutine at 963
$334    $959D   UNKNOWN  $959D           ; Unknown 9xxx instruction
$336    $D1A5   DRW      V1, VA, #5      ; Draw 5-byte sprite at V1, VA
$338    $88BA   UNKNOWN  88BA            ; Unknown 8xxx instruction
$33A    $960E   UNKNOWN  $960E           ; Unknown 9xxx instruction
$33C    $9F0F   UNKNOWN  $9F0F           ; Unknown 9xxx instruction
$33E    $B3F5   JP       V0, $3F5        ; Jump to V0 + 3F5
$340    $9F40   SNE      VF, V4          ; Skip if VF != V4
$342    $0FEA   SYS      $FEA            ; System call to FEA
$344    $1624   JP       $624            ; Jump to 624
$346    $F721   UNKNOWN  F721            ; Unknown Fxxx instruction
$348    $694A   LD       V9, #4A         ; Load 74 into V9
$34A    $9FD1   UNKNOWN  $9FD1           ; Unknown 9xxx instruction
$34C    $596D   UNKNOWN  $596D           ; Unknown 5xxx instruction
$34E    $3F64   SE       VF, #64         ; Skip if VF == 100
$350    $B98D   JP       V0, $98D        ; Jump to V0 + 98D
$352    $3799   SE       V7, #99         ; Skip if V7 == 153
$354    $B83A   JP       V0, $83A        ; Jump to V0 + 83A
$356    $D05F   DRW      V0, V5, #F      ; Draw 15-byte sprite at V0, V5
$358    $AB8E   LD       I, $B8E         ; Load B8E into I
$35A    $172A   JP       $72A            ; Jump to 72A
$35C    $F4D0   UNKNOWN  F4D0            ; Unknown Fxxx instruction
$35E    $B421   JP       V0, $421        ; Jump to V0 + 421
$360    $9B1F   UNKNOWN  $9B1F           ; Unknown 9xxx instruction
$362    $B0CE   JP       V0, $0CE        ; Jump to V0 + 0CE
$364    $A7F6   LD       I, $7F6         ; Load 7F6 into I
$366    $99E3   UNKNOWN  $99E3           ; Unknown 9xxx instruction
$368    $2B23   CALL     $B23            ; Call subroutine at B23
$36A    $1F14   JP       $F14            ; Jump to F14
$36C    $D7C4   DRW      V7, VC, #4      ; Draw 4-byte sprite at V7, VC
$36E    $F9D2   UNKNOWN  F9D2            ; Unknown Fxxx instruction
$370    $B283   JP       V0, $283        ; Jump to V0 + 283
$372    $3F53   SE       VF, #53         ; Skip if VF == 83
$374    $403F   SNE      V0, #3F         ; Skip if V0 != 63
$376    $D454   DRW      V4, V5, #4      ; Draw 4-byte sprite at V4, V5
$378    $DAD6   DRW      VA, VD, #6      ; Draw 6-byte sprite at VA, VD
$37A    $A3B5   LD       I, $3B5         ; Load 3B5 into I
$37C    $9295   UNKNOWN  $9295           ; Unknown 9xxx instruction
$37E    $C9C0   RND      V9, #C0         ; V9 = random & C0
$380    $9289   UNKNOWN  $9289           ; Unknown 9xxx instruction
$382    $875F   UNKNOWN  875F            ; Unknown 8xxx instruction
$384    $CC6D   RND      VC, #6D         ; VC = random & 6D
$386    $D90C   DRW      V9, V0, #C      ; Draw 12-byte sprite at V9, V0
$388    $6767   LD       V7, #67         ; Load 103 into V7
$38A    $0237   SYS      $237            ; System call to 237
$38C    $34DE   SE       V4, #DE         ; Skip if V4 == 222
$38E    $9BB4   UNKNOWN  $9BB4           ; Unknown 9xxx instruction
$390    $8E1D   UNKNOWN  8E1D            ; Unknown 8xxx instruction
$392    $3A07   SE       VA, #07         ; Skip if VA == 7
$394    $68F8   LD       V8, #F8         ; Load 248 into V8
$396    $3A45   SE       VA, #45         ; Skip if VA == 69
$398    $E1CC   UNKNOWN  $E1CC           ; Unknown Exxx instruction
$39A    $534C   UNKNOWN  $534C           ; Unknown 5xxx instruction
$39C    $AC3B   LD       I, $C3B         ; Load C3B into I
$39E    $F386   UNKNOWN  F386            ; Unknown Fxxx instruction
$3A0    $69AE   LD       V9, #AE         ; Load 174 into V9
$3A2    $3565   SE       V5, #65         ; Skip if V5 == 101
$3A4    $AA33   LD       I, $A33         ; Load A33 into I
$3A6    $9B42   UNKNOWN  $9B42           ; Unknown 9xxx instruction
$3A8    $6392   LD       V3, #92         ; Load 146 into V3
$3AA    $87A9   UNKNOWN  87A9            ; Unknown 8xxx instruction
$3AC    $CD24   RND      VD, #24         ; VD = random & 24
$3AE    $9951   UNKNOWN  $9951           ; Unknown 9xxx instruction
$3B0    $A343   LD       I, $343         ; Load 343 into I
$3B2    $7FA3   ADD      VF, #A3         ; Add 163 to VF
$3B4    $5E4A   UNKNOWN  $5E4A           ; Unknown 5xxx instruction
$3B6    $FD2E   UNKNOWN  FD2E            ; Unknown Fxxx instruction
$3B8    $8DE2   AND      VD, VE          ; VD &= VE
$3BA    $717F   ADD      V1, #7F         ; Add 127 to V1
$3BC    $363F   SE       V6, #3F         ; Skip if V6 == 63
$3BE    $E79D   UNKNOWN  $E79D           ; Unknown Exxx instruction
$3C0    $4BA8   SNE      VB, #A8         ; Skip if VB != 168
$3C2    $A5C3   LD       I, $5C3         ; Load 5C3 into I
$3C4    $2158   CALL     $158            ; Call subroutine at 158
$3C6    $0CA0   SYS      $CA0            ; System call to CA0
$3C8    $56D1   UNKNOWN  $56D1           ; Unknown 5xxx instruction
$3CA    $DCC3   DRW      VC, VC, #3      ; Draw 3-byte sprite at VC, VC
$3CC    $2A2B   CALL     $A2B            ; Call subroutine at A2B
$3CE    $4CC8   SNE      VC, #C8         ; Skip if VC != 200
$3D0    $E74E   UNKNOWN  $E74E           ; Unknown Exxx instruction
$3D2    $128B   JP       $28B            ; Jump to 28B
$3D4    $BE96   JP       V0, $E96        ; Jump to V0 + E96
$3D6    $C30F   RND      V3, #0F         ; V3 = random & 0F
$3D8    $E7B0   UNKNOWN  $E7B0           ; Unknown Exxx instruction
$3DA    $1BFC   JP       $BFC            ; Jump to BFC
$3DC    $E17D   UNKNOWN  $E17D           ; Unknown Exxx instruction
$3DE    $54DF   UNKNOWN  $54DF           ; Unknown 5xxx instruction
$3E0    $CA70   RND      VA, #70         ; VA = random & 70
$3E2    $991B   UNKNOWN  $991B           ; Unknown 9xxx instruction
$3E4    $169D   JP       $69D            ; Jump to 69D
$3E6    $9D1A   UNKNOWN  $9D1A           ; Unknown 9xxx instruction
$3E8    $6E2C   LD       VE, #2C         ; Load 44 into VE
$3EA    $C7E1   RND      V7, #E1         ; V7 = random & E1
$3EC    $AF83   LD       I, $F83         ; Load F83 into I
$3EE    $82A4   ADD      V2, VA          ; V2 += VA, VF = carry
$3F0    $3E01   SE       VE, #01         ; Skip if VE == 1
$3F2    $3D78   SE       VD, #78         ; Skip if VD == 120
$3F4    $5641   UNKNOWN  $5641           ; Unknown 5xxx instruction
$3F6    $9B73   UNKNOWN  $9B73           ; Unknown 9xxx instruction
$3F8    $0100   SYS      $100            ; System call to 100
$3FA    $7205   ADD      V2, #05         ; Add 5 to V2
$3FC    $33A0   SE       V3, #A0         ; Skip if V3 == 160
$3FE    $9E4B   UNKNOWN  $9E4B           ; Unknown 9xxx instruction
$400    $261A   CALL     $61A            ; Call subroutine at 61A
$402    $3FDF   SE       VF, #DF         ; Skip if VF == 223
$404    $3B8C   SE       VB, #8C         ; Skip if VB == 140
$406    $F9CC   UNKNOWN  F9CC            ; Unknown Fxxx instruction
$408    $9023   UNKNOWN  $9023           ; Unknown 9xxx instruction
$40A    $34BD   SE       V4, #BD         ; Skip if V4 == 189
$40C    $4642   SNE      V6, #42         ; Skip if V6 != 66
$40E    $66ED   LD       V6, #ED         ; Load 237 into V6
$410    $6DA0   LD       VD, #A0         ; Load 160 into VD
$412    $9823   UNKNOWN  $9823           ; Unknown 9xxx instruction
$414    $32A7   SE       V2, #A7         ; Skip if V2 == 167
$416    $406C   SNE      V0, #6C         ; Skip if V0 != 108
$418    $7F45   ADD      VF, #45         ; Add 69 to VF
$41A    $0B86   SYS      $B86            ; System call to B86
$41C    $C524   RND      V5, #24         ; V5 = random & 24
$41E    $5A6A   UNKNOWN  $5A6A           ; Unknown 5xxx instruction
$420    $3C27   SE       VC, #27         ; Skip if VC == 39
$422    $8122   AND      V1, V2          ; V1 &= V2
$424    $2776   CALL     $776            ; Call subroutine at 776
$426    $ADFE   LD       I, $DFE         ; Load DFE into I
$428    $F441   UNKNOWN  F441            ; Unknown Fxxx instruction
$42A    $7041   ADD      V0, #41         ; Add 65 to V0
$42C    $B08E   JP       V0, $08E        ; Jump to V0 + 08E
$42E    $9168   UNKNOWN  $9168           ; Unknown 9xxx instruction
$430    $27B0   CALL     $7B0            ; Call subroutine at 7B0
$432    $9570   SNE      V5, V7          ; Skip if V5 != V7
$434    $7291   ADD      V2, #91         ; Add 145 to V2
$436    $03DA   SYS      $3DA            ; System call to 3DA
$438    $5385   UNKNOWN  $5385           ; Unknown 5xxx instruction
$43A    $089F   SYS      $89F            ; System call to 89F
$43C    $2CC5   CALL     $CC5            ; Call subroutine at CC5
$43E    $FD3D   UNKNOWN  FD3D            ; Unknown Fxxx instruction
$440    $0E4D   SYS      $E4D            ; System call to E4D
$442    $8C3B   UNKNOWN  8C3B            ; Unknown 8xxx instruction
$444    $A782   LD       I, $782         ; Load 782 into I
$446    $495B   SNE      V9, #5B         ; Skip if V9 != 91
$448    $4BDE   SNE      VB, #DE         ; Skip if VB != 222
$44A    $CCB6   RND      VC, #B6         ; VC = random & B6
$44C    $3045   SE       V0, #45         ; Skip if V0 == 69
$44E    $31E1   SE       V1, #E1         ; Skip if V1 == 225
$450    $293E   CALL     $93E            ; Call subroutine at 93E
$452    $0F6A   SYS      $F6A            ; System call to F6A
$454    $33F7   SE       V3, #F7         ; Skip if V3 == 247
$456    $EB31   UNKNOWN  $EB31           ; Unknown Exxx instruction
$458    $98C7   UNKNOWN  $98C7           ; Unknown 9xxx instruction
$45A    $2CB0   CALL     $CB0            ; Call subroutine at CB0
$45C    $5564   UNKNOWN  $5564           ; Unknown 5xxx instruction
$45E    $0F40   SYS      $F40            ; System call to F40
$460    $4A2F   SNE      VA, #2F         ; Skip if VA != 47
$462    $6A77   LD       VA, #77         ; Load 119 into VA
$464    $FD2B   UNKNOWN  FD2B            ; Unknown Fxxx instruction
$466    $9542   UNKNOWN  $9542           ; Unknown 9xxx instruction
$468    $D89F   DRW      V8, V9, #F      ; Draw 15-byte sprite at V8, V9
$46A    $F364   UNKNOWN  F364            ; Unknown Fxxx instruction
$46C    $ADC9   LD       I, $DC9         ; Load DC9 into I
$46E    $A23B   LD       I, $23B         ; Load 23B into I
$470    $391B   SE       V9, #1B         ; Skip if V9 == 27
$472    $320A   SE       V2, #0A         ; Skip if V2 == 10
$474    $4F5B   SNE      VF, #5B         ; Skip if VF != 91
$476    $D896   DRW      V8, V9, #6      ; Draw 6-byte sprite at V8, V9
$478    $0175   SYS      $175            ; System call to 175
$47A    $67D0   LD       V7, #D0         ; Load 208 into V7
$47C    $4997   SNE      V9, #97         ; Skip if V9 != 151
$47E    $A45D   LD       I, $45D         ; Load 45D into I
$480    $2604   CALL     $604            ; Call subroutine at 604
$482    $51FA   UNKNOWN  $51FA           ; Unknown 5xxx instruction
$484    $E10F   UNKNOWN  $E10F           ; Unknown Exxx instruction
$486    $2C1E   CALL     $C1E            ; Call subroutine at C1E
$488    $DA3F   DRW      VA, V3, #F      ; Draw 15-byte sprite at VA, V3
$48A    $6131   LD       V1, #31         ; Load 49 into V1
$48C    $F4E4   UNKNOWN  F4E4            ; Unknown Fxxx instruction
$48E    $57FE   UNKNOWN  $57FE           ; Unknown 5xxx instruction
$490    $81CE   SHL      V1              ; V1 <<= 1, VF = MSB
$492    $AC6C   LD       I, $C6C         ; Load C6C into I
$494    $0FAC   SYS      $FAC            ; System call to FAC
$496    $0492   SYS      $492            ; System call to 492
$498    $AA10   LD       I, $A10         ; Load A10 into I
$49A    $BAC0   JP       V0, $AC0        ; Jump to V0 + AC0
$49C    $0A85   SYS      $A85            ; System call to A85
$49E    $7F5E   ADD      VF, #5E         ; Add 94 to VF
$4A0    $CC0E   RND      VC, #0E         ; VC = random & 0E
$4A2    $654D   LD       V5, #4D         ; Load 77 into V5
$4A4    $8B32   AND      VB, V3          ; VB &= V3
$4A6    $9563   UNKNOWN  $9563           ; Unknown 9xxx instruction
$4A8    $F1C5   UNKNOWN  F1C5            ; Unknown Fxxx instruction
$4AA    $EF70   UNKNOWN  $EF70           ; Unknown Exxx instruction
$4AC    $DFEF   DRW      VF, VE, #F      ; Draw 15-byte sprite at VF, VE
$4AE    $A5E6   LD       I, $5E6         ; Load 5E6 into I
$4B0    $6409   LD       V4, #09         ; Load 9 into V4
$4B2    $3117   SE       V1, #17         ; Skip if V1 == 23
$4B4    $5BDE   UNKNOWN  $5BDE           ; Unknown 5xxx instruction
$4B6    $4609   SNE      V6, #09         ; Skip if V6 != 9
$4B8    $C5C1   RND      V5, #C1         ; V5 = random & C1
$4BA    $8A6F   UNKNOWN  8A6F            ; Unknown 8xxx instruction
$4BC    $F8D8   UNKNOWN  F8D8            ; Unknown Fxxx instruction
$4BE    $730B   ADD      V3, #0B         ; Add 11 to V3
$4C0    $02F6   SYS      $2F6            ; System call to 2F6
$4C2    $EAC8   UNKNOWN  $EAC8           ; Unknown Exxx instruction
$4C4    $9F52   UNKNOWN  $9F52           ; Unknown 9xxx instruction
$4C6    $F4CE   UNKNOWN  F4CE            ; Unknown Fxxx instruction
$4C8    $29EB   CALL     $9EB            ; Call subroutine at 9EB
$4CA    $6A23   LD       VA, #23         ; Load 35 into VA
$4CC    $C90E   RND      V9, #0E         ; V9 = random & 0E
$4CE    $5D02   UNKNOWN  $5D02           ; Unknown 5xxx instruction
$4D0    $D869   DRW      V8, V6, #9      ; Draw 9-byte sprite at V8, V6
$4D2    $7CA3   ADD      VC, #A3         ; Add 163 to VC
$4D4    $143C   JP       $43C            ; Jump to 43C
$4D6    $5755   UNKNOWN  $5755           ; Unknown 5xxx instruction
$4D8    $D018   DRW      V0, V1, #8      ; Draw 8-byte sprite at V0, V1
$4DA    $5BE8   UNKNOWN  $5BE8           ; Unknown 5xxx instruction
$4DC    $E2F1   UNKNOWN  $E2F1           ; Unknown Exxx instruction
$4DE    $7BAD   ADD      VB, #AD         ; Add 173 to VB
$4E0    $9699   UNKNOWN  $9699           ; Unknown 9xxx instruction
$4E2    $A6D8   LD       I, $6D8         ; Load 6D8 into I
$4E4    $34E3   SE       V4, #E3         ; Skip if V4 == 227
$4E6    $F1AF   UNKNOWN  F1AF            ; Unknown Fxxx instruction
$4E8    $B987   JP       V0, $987        ; Jump to V0 + 987
$4EA    $827F   UNKNOWN  827F            ; Unknown 8xxx instruction
$4EC    $52FB   UNKNOWN  $52FB           ; Unknown 5xxx instruction
$4EE    $8B0C   UNKNOWN  8B0C            ; Unknown 8xxx instruction
$4F0    $9960   SNE      V9, V6          ; Skip if V9 != V6
$4F2    $D493   DRW      V4, V9, #3      ; Draw 3-byte sprite at V4, V9
$4F4    $DFED   DRW      VF, VE, #D      ; Draw 13-byte sprite at VF, VE
$4F6    $E3DD   UNKNOWN  $E3DD           ; Unknown Exxx instruction
$4F8    $BC54   JP       V0, $C54        ; Jump to V0 + C54
$4FA    $0175   SYS      $175            ; System call to 175
$4FC    $ECFF   UNKNOWN  $ECFF           ; Unknown Exxx instruction
$4FE    $236B   CALL     $36B            ; Call subroutine at 36B
$500    $5CE1   UNKNOWN  $5CE1           ; Unknown 5xxx instruction
$502    $1872   JP       $872            ; Jump to 872
$504    $6448   LD       V4, #48         ; Load 72 into V4
$506    $A1A0   LD       I, $1A0         ; Load 1A0 into I
$508    $3099   SE       V0, #99         ; Skip if V0 == 153
$50A    $B129   JP       V0, $129        ; Jump to V0 + 129
$50C    $B455   JP       V0, $455        ; Jump to V0 + 455
$50E    $6632   LD       V6, #32         ; Load 50 into V6
$510    $FF82   UNKNOWN  FF82            ; Unknown Fxxx instruction
$512    $E570   UNKNOWN  $E570           ; Unknown Exxx instruction
$514    $8F32   AND      VF, V3          ; VF &= V3
$516    $E468   UNKNOWN  $E468           ; Unknown Exxx instruction
$518    $28E6   CALL     $8E6            ; Call subroutine at 8E6
$51A    $6EF5   LD       VE, #F5         ; Load 245 into VE
$51C    $9895   UNKNOWN  $9895           ; Unknown 9xxx instruction
$51E    $AD27   LD       I, $D27         ; Load D27 into I
$520    $99DD   UNKNOWN  $99DD           ; Unknown 9xxx instruction
$522    $9F00   SNE      VF, V0          ; Skip if VF != V0
$524    $E68A   UNKNOWN  $E68A           ; Unknown Exxx instruction
$526    $4181   SNE      V1, #81         ; Skip if V1 != 129
$528    $7455   ADD      V4, #55         ; Add 85 to V4
$52A    $55A2   UNKNOWN  $55A2           ; Unknown 5xxx instruction
$52C    $B239   JP       V0, $239        ; Jump to V0 + 239
$52E    $AC74   LD       I, $C74         ; Load C74 into I
$530    $C121   RND      V1, #21         ; V1 = random & 21
$532    $267D   CALL     $67D            ; Call subroutine at 67D
$534    $AC28   LD       I, $C28         ; Load C28 into I
$536    $8CD6   SHR      VC              ; VC >>= 1, VF = LSB
$538    $B033   JP       V0, $033        ; Jump to V0 + 033
$53A    $DD68   DRW      VD, V6, #8      ; Draw 8-byte sprite at VD, V6
$53C    $D193   DRW      V1, V9, #3      ; Draw 3-byte sprite at V1, V9
$53E    $D1A3   DRW      V1, VA, #3      ; Draw 3-byte sprite at V1, VA
$540    $953A   UNKNOWN  $953A           ; Unknown 9xxx instruction
$542    $2B32   CALL     $B32            ; Call subroutine at B32
$544    $B1B2   JP       V0, $1B2        ; Jump to V0 + 1B2
$546    $B4E5   JP       V0, $4E5        ; Jump to V0 + 4E5
$548    $C196   RND      V1, #96         ; V1 = random & 96
$54A    $8C73   XOR      VC, V7          ; VC ^= V7
$54C    $75FF   ADD      V5, #FF         ; Add 255 to V5
$54E    $78CB   ADD      V8, #CB         ; Add 203 to V8
$550    $6AA7   LD       VA, #A7         ; Load 167 into VA
$552    $27E3   CALL     $7E3            ; Call subroutine at 7E3
$554    $5B2E   UNKNOWN  $5B2E           ; Unknown 5xxx instruction
$556    $ADE5   LD       I, $DE5         ; Load DE5 into I
$558    $8B95   SUB      VB, V9          ; VB -= V9, VF = !borrow
$55A    $CE90   RND      VE, #90         ; VE = random & 90
$55C    $3D5A   SE       VD, #5A         ; Skip if VD == 90
$55E    $A24E   LD       I, $24E         ; Load 24E into I
$560    $51BE   UNKNOWN  $51BE           ; Unknown 5xxx instruction
$562    $E4DA   UNKNOWN  $E4DA           ; Unknown Exxx instruction
$564    $D685   DRW      V6, V8, #5      ; Draw 5-byte sprite at V6, V8
$566    $0175   SYS      $175            ; System call to 175
$568    $773A   ADD      V7, #3A         ; Add 58 to V7
$56A    $8210   LD       V2, V1          ; V2 = V1
$56C    $CD85   RND      VD, #85         ; VD = random & 85
$56E    $DFD4   DRW      VF, VD, #4      ; Draw 4-byte sprite at VF, VD
$570    $88DA   UNKNOWN  88DA            ; Unknown 8xxx instruction
$572    $E4C4   UNKNOWN  $E4C4           ; Unknown Exxx instruction
$574    $3B9F   SE       VB, #9F         ; Skip if VB == 159
$576    $38C3   SE       V8, #C3         ; Skip if V8 == 195
$578    $C34F   RND      V3, #4F         ; V3 = random & 4F
$57A    $9A39   UNKNOWN  $9A39           ; Unknown 9xxx instruction
$57C    $A771   LD       I, $771         ; Load 771 into I
$57E    $A37E   LD       I, $37E         ; Load 37E into I
$580    $79C0   ADD      V9, #C0         ; Add 192 to V9
$582    $A81A   LD       I, $81A         ; Load 81A into I
$584    $BF1C   JP       V0, $F1C        ; Jump to V0 + F1C
$586    $952A   UNKNOWN  $952A           ; Unknown 9xxx instruction
$588    $4335   SNE      V3, #35         ; Skip if V3 != 53
$58A    $B8B5   JP       V0, $8B5        ; Jump to V0 + 8B5
$58C    $7AB4   ADD      VA, #B4         ; Add 180 to VA
$58E    $DA9E   DRW      VA, V9, #E      ; Draw 14-byte sprite at VA, V9
$590    $5C86   UNKNOWN  $5C86           ; Unknown 5xxx instruction
$592    $6D22   LD       VD, #22         ; Load 34 into VD
$594    $8094   ADD      V0, V9          ; V0 += V9, VF = carry
$596    $C7BD   RND      V7, #BD         ; V7 = random & BD
$598    $C331   RND      V3, #31         ; V3 = random & 31
$59A    $9B03   UNKNOWN  $9B03           ; Unknown 9xxx instruction
$59C    $3CA4   SE       VC, #A4         ; Skip if VC == 164
$59E    $E9F6   UNKNOWN  $E9F6           ; Unknown Exxx instruction
$5A0    $7AE4   ADD      VA, #E4         ; Add 228 to VA
$5A2    $CA1A   RND      VA, #1A         ; VA = random & 1A
$5A4    $42EF   SNE      V2, #EF         ; Skip if V2 != 239
$5A6    $378F   SE       V7, #8F         ; Skip if V7 == 143
$5A8    $71AF   ADD      V1, #AF         ; Add 175 to V1
$5AA    $3A9C   SE       VA, #9C         ; Skip if VA == 156
$5AC    $D2B3   DRW      V2, VB, #3      ; Draw 3-byte sprite at V2, VB
$5AE    $8AAA   UNKNOWN  8AAA            ; Unknown 8xxx instruction
$5B0    $D674   DRW      V6, V7, #4      ; Draw 4-byte sprite at V6, V7
$5B2    $EB4F   UNKNOWN  $EB4F           ; Unknown Exxx instruction
$5B4    $6AB5   LD       VA, #B5         ; Load 181 into VA
$5B6    $282A   CALL     $82A            ; Call subroutine at 82A
$5B8    $81F8   UNKNOWN  81F8            ; Unknown 8xxx instruction
$5BA    $813D   UNKNOWN  813D            ; Unknown 8xxx instruction
$5BC    $8D9B   UNKNOWN  8D9B            ; Unknown 8xxx instruction
$5BE    $DF52   DRW      VF, V5, #2      ; Draw 2-byte sprite at VF, V5
$5C0    $9EC7   UNKNOWN  $9EC7           ; Unknown 9xxx instruction
$5C2    $7386   ADD      V3, #86         ; Add 134 to V3
$5C4    $23B9   CALL     $3B9            ; Call subroutine at 3B9
$5C6    $AA38   LD       I, $A38         ; Load A38 into I
$5C8    $50F1   UNKNOWN  $50F1           ; Unknown 5xxx instruction
$5CA    $0342   SYS      $342            ; System call to 342
$5CC    $733D   ADD      V3, #3D         ; Add 61 to V3
$5CE    $FCBB   UNKNOWN  FCBB            ; Unknown Fxxx instruction
$5D0    $9D02   UNKNOWN  $9D02           ; Unknown 9xxx instruction
$5D2    $9A6F   UNKNOWN  $9A6F           ; Unknown 9xxx instruction
$5D4    $3381   SE       V3, #81         ; Skip if V3 == 129
$5D6    $719C   ADD      V1, #9C         ; Add 156 to V1
$5D8    $2A69   CALL     $A69            ; Call subroutine at A69
$5DA    $0084   SYS      $084            ; System call to 084
$5DC    $3105   SE       V1, #05         ; Skip if V1 == 5
$5DE    $E9CC   UNKNOWN  $E9CC           ; Unknown Exxx instruction
$5E0    $DDDA   DRW      VD, VD, #A      ; Draw 10-byte sprite at VD, VD
$5E2    $3106   SE       V1, #06         ; Skip if V1 == 6
$5E4    $3A7B   SE       VA, #7B         ; Skip if VA == 123
$5E6    $09E9   SYS      $9E9            ; System call to 9E9
$5E8    $6B0D   LD       VB, #0D         ; Load 13 into VB
$5EA    $546B   UNKNOWN  $546B           ; Unknown 5xxx instruction
$5EC    $84E8   UNKNOWN  84E8            ; Unknown 8xxx instruction
$5EE    $7880   ADD      V8, #80         ; Add 128 to V8
$5F0    $104A   JP       $04A            ; Jump to 04A
$5F2    $A466   LD       I, $466         ; Load 466 into I
$5F4    $837B   UNKNOWN  837B            ; Unknown 8xxx instruction
$5F6    $5C23   UNKNOWN  $5C23           ; Unknown 5xxx instruction
$5F8    $AECB   LD       I, $ECB         ; Load ECB into I
$5FA    $8EBF   UNKNOWN  8EBF            ; Unknown 8xxx instruction
$5FC    $DE06   DRW      VE, V0, #6      ; Draw 6-byte sprite at VE, V0
$5FE    $1590   JP       $590            ; Jump to 590
$600    $5675   UNKNOWN  $5675           ; Unknown 5xxx instruction
$602    $F77A   UNKNOWN  F77A            ; Unknown Fxxx instruction
$604    $50AD   UNKNOWN  $50AD           ; Unknown 5xxx instruction
$606    $17B6   JP       $7B6            ; Jump to 7B6
$608    $763F   ADD      V6, #3F         ; Add 63 to V6
$60A    $0549   SYS      $549            ; System call to 549
$60C    $EDE0   UNKNOWN  $EDE0           ; Unknown Exxx instruction
$60E    $EE72   UNKNOWN  $EE72           ; Unknown Exxx instruction
$610    $E842   UNKNOWN  $E842           ; Unknown Exxx instruction
$612    $4394   SNE      V3, #94         ; Skip if V3 != 148
$614    $91D9   UNKNOWN  $91D9           ; Unknown 9xxx instruction
$616    $7DCA   ADD      VD, #CA         ; Add 202 to VD
$618    $EEBA   UNKNOWN  $EEBA           ; Unknown Exxx instruction
$61A    $20B4   CALL     $0B4            ; Call subroutine at 0B4
$61C    $810A   UNKNOWN  810A            ; Unknown 8xxx instruction
$61E    $F6D7   UNKNOWN  F6D7            ; Unknown Fxxx instruction
$620    $E89F   UNKNOWN  $E89F           ; Unknown Exxx instruction
$622    $BC60   JP       V0, $C60        ; Jump to V0 + C60
$624    $6610   LD       V6, #10         ; Load 16 into V6
$626    $E480   UNKNOWN  $E480           ; Unknown Exxx instruction
$628    $BCA0   JP       V0, $CA0        ; Jump to V0 + CA0
$62A    $E3A8   UNKNOWN  $E3A8           ; Unknown Exxx instruction
$62C    $9D94   UNKNOWN  $9D94           ; Unknown 9xxx instruction
$62E    $6433   LD       V4, #33         ; Load 51 into V4
$630    $8B98   UNKNOWN  8B98            ; Unknown 8xxx instruction
$632    $ECAF   UNKNOWN  $ECAF           ; Unknown Exxx instruction
$634    $82F1   OR       V2, VF          ; V2 |= VF
$636    $49E7   SNE      V9, #E7         ; Skip if V9 != 231
$638    $6E1A   LD       VE, #1A         ; Load 26 into VE
$63A    $E43A   UNKNOWN  $E43A           ; Unknown Exxx instruction
$63C    $4236   SNE      V2, #36         ; Skip if V2 != 54
$63E    $39ED   SE       V9, #ED         ; Skip if V9 == 237
$640    $3B87   SE       VB, #87         ; Skip if VB == 135
$642    $D696   DRW      V6, V9, #6      ; Draw 6-byte sprite at V6, V9
$644    $3EE2   SE       VE, #E2         ; Skip if VE == 226
$646    $285D   CALL     $85D            ; Call subroutine at 85D
$648    $6B38   LD       VB, #38         ; Load 56 into VB
$64A    $5DA6   UNKNOWN  $5DA6           ; Unknown 5xxx instruction
$64C    $C96C   RND      V9, #6C         ; V9 = random & 6C
$64E    $19F1   JP       $9F1            ; Jump to 9F1
$650    $B3EA   JP       V0, $3EA        ; Jump to V0 + 3EA
$652    $09D7   SYS      $9D7            ; System call to 9D7
$654    $501D   UNKNOWN  $501D           ; Unknown 5xxx instruction
$656    $2E5A   CALL     $E5A            ; Call subroutine at E5A
$658    $11D5   JP       $1D5            ; Jump to 1D5
$65A    $D025   DRW      V0, V2, #5      ; Draw 5-byte sprite at V0, V2
$65C    $D36F   DRW      V3, V6, #F      ; Draw 15-byte sprite at V3, V6
$65E    $C506   RND      V5, #06         ; V5 = random & 06
$660    $6D4A   LD       VD, #4A         ; Load 74 into VD
$662    $47DC   SNE      V7, #DC         ; Skip if V7 != 220
$664    $BC74   JP       V0, $C74        ; Jump to V0 + C74
$666    $3886   SE       V8, #86         ; Skip if V8 == 134
$668    $929C   UNKNOWN  $929C           ; Unknown 9xxx instruction
$66A    $E44B   UNKNOWN  $E44B           ; Unknown Exxx instruction
$66C    $A89E   LD       I, $89E         ; Load 89E into I
$66E    $D029   DRW      V0, V2, #9      ; Draw 9-byte sprite at V0, V2
$670    $D18B   DRW      V1, V8, #B      ; Draw 11-byte sprite at V1, V8
$672    $4331   SNE      V3, #31         ; Skip if V3 != 49
$674    $1A1B   JP       $A1B            ; Jump to A1B
$676    $5730   SE       V7, V3          ; Skip if V7 == V3
$678    $CE20   RND      VE, #20         ; VE = random & 20
$67A    $397C   SE       V9, #7C         ; Skip if V9 == 124
$67C    $A4AC   LD       I, $4AC         ; Load 4AC into I
$67E    $CE14   RND      VE, #14         ; VE = random & 14
$680    $4CA3   SNE      VC, #A3         ; Skip if VC != 163
$682    $38B6   SE       V8, #B6         ; Skip if V8 == 182
$684    $797C   ADD      V9, #7C         ; Add 124 to V9
$686    $A2E5   LD       I, $2E5         ; Load 2E5 into I
$688    $FD83   UNKNOWN  FD83            ; Unknown Fxxx instruction
$68A    $5A29   UNKNOWN  $5A29           ; Unknown 5xxx instruction
$68C    $F278   UNKNOWN  F278            ; Unknown Fxxx instruction
$68E    $B012   JP       V0, $012        ; Jump to V0 + 012
$690    $1B2E   JP       $B2E            ; Jump to B2E
$692    $E106   UNKNOWN  $E106           ; Unknown Exxx instruction
$694    $EE22   UNKNOWN  $EE22           ; Unknown Exxx instruction
$696    $B5C8   JP       V0, $5C8        ; Jump to V0 + 5C8
$698    $6945   LD       V9, #45         ; Load 69 into V9
$69A    $8E2C   UNKNOWN  8E2C            ; Unknown 8xxx instruction
$69C    $BE7C   JP       V0, $E7C        ; Jump to V0 + E7C
$69E    $6EBD   LD       VE, #BD         ; Load 189 into VE
$6A0    $B632   JP       V0, $632        ; Jump to V0 + 632
$6A2    $BCB8   JP       V0, $CB8        ; Jump to V0 + CB8
$6A4    $7CF6   ADD      VC, #F6         ; Add 246 to VC
$6A6    $CBE7   RND      VB, #E7         ; VB = random & E7
$6A8    $4147   SNE      V1, #47         ; Skip if V1 != 71
$6AA    $0F11   SYS      $F11            ; System call to F11
$6AC    $4347   SNE      V3, #47         ; Skip if V3 != 71
$6AE    $51D0   SE       V1, VD          ; Skip if V1 == VD
$6B0    $1D52   JP       $D52            ; Jump to D52
$6B2    $8C14   ADD      VC, V1          ; VC += V1, VF = carry
$6B4    $F6A0   UNKNOWN  F6A0            ; Unknown Fxxx instruction
$6B6    $F8C8   UNKNOWN  F8C8            ; Unknown Fxxx instruction
$6B8    $F5FA   UNKNOWN  F5FA            ; Unknown Fxxx instruction
$6BA    $0ACC   SYS      $ACC            ; System call to ACC
$6BC    $098A   SYS      $98A            ; System call to 98A
$6BE    $0E64   SYS      $E64            ; System call to E64
$6C0    $E79D   UNKNOWN  $E79D           ; Unknown Exxx instruction
$6C2    $C4C6   RND      V4, #C6         ; V4 = random & C6
$6C4    $8A38   UNKNOWN  8A38            ; Unknown 8xxx instruction
$6C6    $C7F3   RND      V7, #F3         ; V7 = random & F3
$6C8    $2144   CALL     $144            ; Call subroutine at 144
$6CA    $F98F   UNKNOWN  F98F            ; Unknown Fxxx instruction
$6CC    $D7BB   DRW      V7, VB, #B      ; Draw 11-byte sprite at V7, VB
$6CE    $E851   UNKNOWN  $E851           ; Unknown Exxx instruction
$6D0    $3079   SE       V0, #79         ; Skip if V0 == 121
$6D2    $BC84   JP       V0, $C84        ; Jump to V0 + C84
$6D4    $C6D5   RND      V6, #D5         ; V6 = random & D5
$6D6    $C376   RND      V3, #76         ; V3 = random & 76
$6D8    $9C64   UNKNOWN  $9C64           ; Unknown 9xxx instruction
$6DA    $126E   JP       $26E            ; Jump to 26E
$6DC    $1241   JP       $241            ; Jump to 241
$6DE    $D3C8   DRW      V3, VC, #8      ; Draw 8-byte sprite at V3, VC
$6E0    $A50C   LD       I, $50C         ; Load 50C into I
$6E2    $778C   ADD      V7, #8C         ; Add 140 to V7
$6E4    $C2B3   RND      V2, #B3         ; V2 = random & B3
$6E6    $5EC9   UNKNOWN  $5EC9           ; Unknown 5xxx instruction
$6E8    $C881   RND      V8, #81         ; V8 = random & 81
$6EA    $150E   JP       $50E            ; Jump to 50E
$6EC    $D804   DRW      V8, V0, #4      ; Draw 4-byte sprite at V8, V0
$6EE    $EFE2   UNKNOWN  $EFE2           ; Unknown Exxx instruction
$6F0    $D6C2   DRW      V6, VC, #2      ; Draw 2-byte sprite at V6, VC
$6F2    $5796   UNKNOWN  $5796           ; Unknown 5xxx instruction
$6F4    $8294   ADD      V2, V9          ; V2 += V9, VF = carry
$6F6    $FCE4   UNKNOWN  FCE4            ; Unknown Fxxx instruction
$6F8    $DB3F   DRW      VB, V3, #F      ; Draw 15-byte sprite at VB, V3
$6FA    $1BB8   JP       $BB8            ; Jump to BB8
$6FC    $DCD7   DRW      VC, VD, #7      ; Draw 7-byte sprite at VC, VD
$6FE    $2E51   CALL     $E51            ; Call subroutine at E51
$700    $7688   ADD      V6, #88         ; Add 136 to V6
$702    $61EF   LD       V1, #EF         ; Load 239 into V1
$704    $B94A   JP       V0, $94A        ; Jump to V0 + 94A
$706    $A42B   LD       I, $42B         ; Load 42B into I
$708    $BE6D   JP       V0, $E6D        ; Jump to V0 + E6D
$70A    $E62C   UNKNOWN  $E62C           ; Unknown Exxx instruction
$70C    $95A5   UNKNOWN  $95A5           ; Unknown 9xxx instruction
$70E    $8324   ADD      V3, V2          ; V3 += V2, VF = carry
$710    $394F   SE       V9, #4F         ; Skip if V9 == 79
$712    $3D8E   SE       VD, #8E         ; Skip if VD == 142
$714    $1481   JP       $481            ; Jump to 481
$716    $4C18   SNE      VC, #18         ; Skip if VC != 24
$718    $9968   UNKNOWN  $9968           ; Unknown 9xxx instruction
$71A    $F0CA   UNKNOWN  F0CA            ; Unknown Fxxx instruction
$71C    $8ABF   UNKNOWN  8ABF            ; Unknown 8xxx instruction
$71E    $558E   UNKNOWN  $558E           ; Unknown 5xxx instruction
$720    $A5D9   LD       I, $5D9         ; Load 5D9 into I
$722    $6137   LD       V1, #37         ; Load 55 into V1
$724    $DEF3   DRW      VE, VF, #3      ; Draw 3-byte sprite at VE, VF
$726    $18D8   JP       $8D8            ; Jump to 8D8
$728    $8E5B   UNKNOWN  8E5B            ; Unknown 8xxx instruction
$72A    $E07A   UNKNOWN  $E07A           ; Unknown Exxx instruction
$72C    $D2E2   DRW      V2, VE, #2      ; Draw 2-byte sprite at V2, VE
$72E    $6B7B   LD       VB, #7B         ; Load 123 into VB
$730    $5E1A   UNKNOWN  $5E1A           ; Unknown 5xxx instruction
$732    $B827   JP       V0, $827        ; Jump to V0 + 827
$734    $3042   SE       V0, #42         ; Skip if V0 == 66
$736    $23AA   CALL     $3AA            ; Call subroutine at 3AA
$738    $FE6F   UNKNOWN  FE6F            ; Unknown Fxxx instruction
$73A    $9D46   UNKNOWN  $9D46           ; Unknown 9xxx instruction
$73C    $D888   DRW      V8, V8, #8      ; Draw 8-byte sprite at V8, V8
$73E    $B86E   JP       V0, $86E        ; Jump to V0 + 86E
$740    $35B2   SE       V5, #B2         ; Skip if V5 == 178
$742    $4842   SNE      V8, #42         ; Skip if V8 != 66
$744    $2FE3   CALL     $FE3            ; Call subroutine at FE3
$746    $B5D0   JP       V0, $5D0        ; Jump to V0 + 5D0
$748    $47DC   SNE      V7, #DC         ; Skip if V7 != 220
$74A    $D4C7   DRW      V4, VC, #7      ; Draw 7-byte sprite at V4, VC
$74C    $2E76   CALL     $E76            ; Call subroutine at E76
$74E    $64A8   LD       V4, #A8         ; Load 168 into V4
$750    $71FF   ADD      V1, #FF         ; Add 255 to V1
$752    $9D8A   UNKNOWN  $9D8A           ; Unknown 9xxx instruction
$754    $A6A7   LD       I, $6A7         ; Load 6A7 into I
$756    $E734   UNKNOWN  $E734           ; Unknown Exxx instruction
$758    $8C9A   UNKNOWN  8C9A            ; Unknown 8xxx instruction
$75A    $0486   SYS      $486            ; System call to 486
$75C    $CAC3   RND      VA, #C3         ; VA = random & C3
$75E    $8BD0   LD       VB, VD          ; VB = VD
$760    $3FAD   SE       VF, #AD         ; Skip if VF == 173
$762    $EF6F   UNKNOWN  $EF6F           ; Unknown Exxx instruction
$764    $C711   RND      V7, #11         ; V7 = random & 11
$766    $ED3B   UNKNOWN  $ED3B           ; Unknown Exxx instruction
$768    $0A36   SYS      $A36            ; System call to A36
$76A    $E3B1   UNKNOWN  $E3B1           ; Unknown Exxx instruction
$76C    $577F   UNKNOWN  $577F           ; Unknown 5xxx instruction
$76E    $4E6C   SNE      VE, #6C         ; Skip if VE != 108
$770    $B014   JP       V0, $014        ; Jump to V0 + 014
$772    $2398   CALL     $398            ; Call subroutine at 398
$774    $9203   UNKNOWN  $9203           ; Unknown 9xxx instruction
$776    $EFC5   UNKNOWN  $EFC5           ; Unknown Exxx instruction
$778    $F02D   UNKNOWN  F02D            ; Unknown Fxxx instruction
$77A    $D30C   DRW      V3, V0, #C      ; Draw 12-byte sprite at V3, V0
$77C    $C978   RND      V9, #78         ; V9 = random & 78
$77E    $E38C   UNKNOWN  $E38C           ; Unknown Exxx instruction
$780    $5809   UNKNOWN  $5809           ; Unknown 5xxx instruction
$782    $3355   SE       V3, #55         ; Skip if V3 == 85
$784    $6144   LD       V1, #44         ; Load 68 into V1
$786    $0467   SYS      $467            ; System call to 467
$788    $FE09   UNKNOWN  FE09            ; Unknown Fxxx instruction
$78A    $0DB5   SYS      $DB5            ; System call to DB5
$78C    $08CF   SYS      $8CF            ; System call to 8CF
$78E    $3A4B   SE       VA, #4B         ; Skip if VA == 75
$790    $D707   DRW      V7, V0, #7      ; Draw 7-byte sprite at V7, V0
$792    $5855   UNKNOWN  $5855           ; Unknown 5xxx instruction
$794    $A9CA   LD       I, $9CA         ; Load 9CA into I
$796    $7F64   ADD      VF, #64         ; Add 100 to VF
$798    $497C   SNE      V9, #7C         ; Skip if V9 != 124
$79A    $064A   SYS      $64A            ; System call to 64A
$79C    $CD2C   RND      VD, #2C         ; VD = random & 2C
$79E    $1BF6   JP       $BF6            ; Jump to BF6
$7A0    $6AB3   LD       VA, #B3         ; Load 179 into VA
$7A2    $2ACC   CALL     $ACC            ; Call subroutine at ACC
$7A4    $9418   UNKNOWN  $9418           ; Unknown 9xxx instruction
$7A6    $3544   SE       V5, #44         ; Skip if V5 == 68
$7A8    $8E76   SHR      VE              ; VE >>= 1, VF = LSB
$7AA    $8099   UNKNOWN  8099            ; Unknown 8xxx instruction
$7AC    $B23A   JP       V0, $23A        ; Jump to V0 + 23A
$7AE    $6068   LD       V0, #68         ; Load 104 into V0
$7B0    $70D9   ADD      V0, #D9         ; Add 217 to V0
$7B2    $5999   UNKNOWN  $5999           ; Unknown 5xxx instruction
$7B4    $E0CB   UNKNOWN  $E0CB           ; Unknown Exxx instruction
$7B6    $BC03   JP       V0, $C03        ; Jump to V0 + C03
$7B8    $6F77   LD       VF, #77         ; Load 119 into VF
$7BA    $67D9   LD       V7, #D9         ; Load 217 into V7
$7BC    $98B4   UNKNOWN  $98B4           ; Unknown 9xxx instruction
$7BE    $7556   ADD      V5, #56         ; Add 86 to V5
$7C0    $5C1B   UNKNOWN  $5C1B           ; Unknown 5xxx instruction
$7C2    $FCB5   UNKNOWN  FCB5            ; Unknown Fxxx instruction
$7C4    $2E53   CALL     $E53            ; Call subroutine at E53
$7C6    $6167   LD       V1, #67         ; Load 103 into V1
$7C8    $665B   LD       V6, #5B         ; Load 91 into V6
$7CA    $D109   DRW      V1, V0, #9      ; Draw 9-byte sprite at V1, V0
$7CC    $94B7   UNKNOWN  $94B7           ; Unknown 9xxx instruction
$7CE    $6E12   LD       VE, #12         ; Load 18 into VE
$7D0    $17A0   JP       $7A0            ; Jump to 7A0
$7D2    $695D   LD       V9, #5D         ; Load 93 into V9
$7D4    $95CA   UNKNOWN  $95CA           ; Unknown 9xxx instruction
$7D6    $69DA   LD       V9, #DA         ; Load 218 into V9
$7D8    $ACC3   LD       I, $CC3         ; Load CC3 into I
$7DA    $045C   SYS      $45C            ; System call to 45C
$7DC    $9F74   UNKNOWN  $9F74           ; Unknown 9xxx instruction
$7DE    $7599   ADD      V5, #99         ; Add 153 to V5
$7E0    $3025   SE       V0, #25         ; Skip if V0 == 37
$7E2    $5562   UNKNOWN  $5562           ; Unknown 5xxx instruction
$7E4    $7BF8   ADD      VB, #F8         ; Add 248 to VB
$7E6    $5B17   UNKNOWN  $5B17           ; Unknown 5xxx instruction
$7E8    $8EA6   SHR      VE              ; VE >>= 1, VF = LSB
$7EA    $D18A   DRW      V1, V8, #A      ; Draw 10-byte sprite at V1, V8
$7EC    $9DEB   UNKNOWN  $9DEB           ; Unknown 9xxx instruction
$7EE    $EDBF   UNKNOWN  $EDBF           ; Unknown Exxx instruction
$7F0    $6F89   LD       VF, #89         ; Load 137 into VF
$7F2    $F039   UNKNOWN  F039            ; Unknown Fxxx instruction
$7F4    $4CCA   SNE      VC, #CA         ; Skip if VC != 202
$7F6    $5927   UNKNOWN  $5927           ; Unknown 5xxx instruction
$7F8    $F703   UNKNOWN  F703            ; Unknown Fxxx instruction
$7FA    $1D4F   JP       $D4F            ; Jump to D4F
$7FC    $C0BD   RND      V0, #BD         ; V0 = random & BD
$7FE    $7666   ADD      V6, #66         ; Add 102 to V6
$800    $7E29   ADD      VE, #29         ; Add 41 to VE
$802    $026C   SYS      $26C            ; System call to 26C
$804    $A3BD   LD       I, $3BD         ; Load 3BD into I
$806    $F54B   UNKNOWN  F54B            ; Unknown Fxxx instruction
$808    $902F   UNKNOWN  $902F           ; Unknown 9xxx instruction
$80A    $0A04   SYS      $A04            ; System call to A04
$80C    $6217   LD       V2, #17         ; Load 23 into V2
$80E    $1D8B   JP       $D8B            ; Jump to D8B
$810    $79FC   ADD      V9, #FC         ; Add 252 to V9
$812    $CABE   RND      VA, #BE         ; VA = random & BE
$814    $B071   JP       V0, $071        ; Jump to V0 + 071
$816    $A2E2   LD       I, $2E2         ; Load 2E2 into I
$818    $0288   SYS      $288            ; System call to 288
$81A    $0CD6   SYS      $CD6            ; System call to CD6
$81C    $9838   UNKNOWN  $9838           ; Unknown 9xxx instruction
$81E    $84ED   UNKNOWN  84ED            ; Unknown 8xxx instruction
$820    $82CC   UNKNOWN  82CC            ; Unknown 8xxx instruction
$822    $1AE0   JP       $AE0            ; Jump to AE0
$824    $FA81   UNKNOWN  FA81            ; Unknown Fxxx instruction
$826    $8E2D   UNKNOWN  8E2D            ; Unknown 8xxx instruction
$828    $DA8E   DRW      VA, V8, #E      ; Draw 14-byte sprite at VA, V8
$82A    $8DEA   UNKNOWN  8DEA            ; Unknown 8xxx instruction
$82C    $F565   LD       V5, [I]         ; Load V0-V5 from I
$82E    $DA91   DRW      VA, V9, #1      ; Draw 1-byte sprite at VA, V9
$830    $B20B   JP       V0, $20B        ; Jump to V0 + 20B
$832    $17ED   JP       $7ED            ; Jump to 7ED
$834    $D775   DRW      V7, V7, #5      ; Draw 5-byte sprite at V7, V7
$836    $9405   UNKNOWN  $9405           ; Unknown 9xxx instruction
$838    $745D   ADD      V4, #5D         ; Add 93 to V4
$83A    $D916   DRW      V9, V1, #6      ; Draw 6-byte sprite at V9, V1
$83C    $A57B   LD       I, $57B         ; Load 57B into I
$83E    $99A2   UNKNOWN  $99A2           ; Unknown 9xxx instruction
$840    $3C32   SE       VC, #32         ; Skip if VC == 50
$842    $E641   UNKNOWN  $E641           ; Unknown Exxx instruction
$844    $0993   SYS      $993            ; System call to 993
$846    $BD0E   JP       V0, $D0E        ; Jump to V0 + D0E
$848    $166A   JP       $66A            ; Jump to 66A
$84A    $430F   SNE      V3, #0F         ; Skip if V3 != 15
$84C    $BD52   JP       V0, $D52        ; Jump to V0 + D52
$84E    $4C3C   SNE      VC, #3C         ; Skip if VC != 60
$850    $EB73   UNKNOWN  $EB73           ; Unknown Exxx instruction
$852    $BFF1   JP       V0, $FF1        ; Jump to V0 + FF1
$854    $48B7   SNE      V8, #B7         ; Skip if V8 != 183
$856    $4C01   SNE      VC, #01         ; Skip if VC != 1
$858    $C3B6   RND      V3, #B6         ; V3 = random & B6
$85A    $BB98   JP       V0, $B98        ; Jump to V0 + B98
$85C    $7FAF   ADD      VF, #AF         ; Add 175 to VF
$85E    $90C5   UNKNOWN  $90C5           ; Unknown 9xxx instruction
$860    $1282   JP       $282            ; Jump to 282
$862    $DF89   DRW      VF, V8, #9      ; Draw 9-byte sprite at VF, V8
$864    $77D8   ADD      V7, #D8         ; Add 216 to V7
$866    $4257   SNE      V2, #57         ; Skip if V2 != 87
$868    $968C   UNKNOWN  $968C           ; Unknown 9xxx instruction
$86A    $C8A8   RND      V8, #A8         ; V8 = random & A8
$86C    $4A2F   SNE      VA, #2F         ; Skip if VA != 47
$86E    $5DA3   UNKNOWN  $5DA3           ; Unknown 5xxx instruction
$870    $37A2   SE       V7, #A2         ; Skip if V7 == 162
$872    $A4B2   LD       I, $4B2         ; Load 4B2 into I
$874    $4435   SNE      V4, #35         ; Skip if V4 != 53
$876    $4D1E   SNE      VD, #1E         ; Skip if VD != 30
$878    $FC9D   UNKNOWN  FC9D            ; Unknown Fxxx instruction
$87A    $52F2   UNKNOWN  $52F2           ; Unknown 5xxx instruction
$87C    $5A07   UNKNOWN  $5A07           ; Unknown 5xxx instruction
$87E    $8C35   SUB      VC, V3          ; VC -= V3, VF = !borrow
$880    $176B   JP       $76B            ; Jump to 76B
$882    $8698   UNKNOWN  8698            ; Unknown 8xxx instruction
$884    $0B36   SYS      $B36            ; System call to B36
$886    $0049   SYS      $049            ; System call to 049
$888    $DA46   DRW      VA, V4, #6      ; Draw 6-byte sprite at VA, V4
$88A    $8E35   SUB      VE, V3          ; VE -= V3, VF = !borrow
$88C    $1ABD   JP       $ABD            ; Jump to ABD
$88E    $F7D8   UNKNOWN  F7D8            ; Unknown Fxxx instruction
$890    $5A51   UNKNOWN  $5A51           ; Unknown 5xxx instruction
$892    $7499   ADD      V4, #99         ; Add 153 to V4
$894    $67DD   LD       V7, #DD         ; Load 221 into V7
$896    $926E   UNKNOWN  $926E           ; Unknown 9xxx instruction
$898    $1FAC   JP       $FAC            ; Jump to FAC
$89A    $70E5   ADD      V0, #E5         ; Add 229 to V0
$89C    $8762   AND      V7, V6          ; V7 &= V6
$89E    $2ADF   CALL     $ADF            ; Call subroutine at ADF
$8A0    $7211   ADD      V2, #11         ; Add 17 to V2
$8A2    $DABF   DRW      VA, VB, #F      ; Draw 15-byte sprite at VA, VB
$8A4    $3C7D   SE       VC, #7D         ; Skip if VC == 125
$8A6    $E2F8   UNKNOWN  $E2F8           ; Unknown Exxx instruction
$8A8    $9C57   UNKNOWN  $9C57           ; Unknown 9xxx instruction
$8AA    $1687   JP       $687            ; Jump to 687
$8AC    $E9EE   UNKNOWN  $E9EE           ; Unknown Exxx instruction
$8AE    $8FE3   XOR      VF, VE          ; VF ^= VE
$8B0    $C867   RND      V8, #67         ; V8 = random & 67
$8B2    $065C   SYS      $65C            ; System call to 65C
$8B4    $BE63   JP       V0, $E63        ; Jump to V0 + E63
$8B6    $9EA2   UNKNOWN  $9EA2           ; Unknown 9xxx instruction
$8B8    $6F5C   LD       VF, #5C         ; Load 92 into VF
$8BA    $28BF   CALL     $8BF            ; Call subroutine at 8BF
$8BC    $34A5   SE       V4, #A5         ; Skip if V4 == 165
$8BE    $9040   SNE      V0, V4          ; Skip if V0 != V4
$8C0    $E74B   UNKNOWN  $E74B           ; Unknown Exxx instruction
$8C2    $D71F   DRW      V7, V1, #F      ; Draw 15-byte sprite at V7, V1
$8C4    $B5D1   JP       V0, $5D1        ; Jump to V0 + 5D1
$8C6    $7DCD   ADD      VD, #CD         ; Add 205 to VD
$8C8    $4BF0   SNE      VB, #F0         ; Skip if VB != 240
$8CA    $06EC   SYS      $6EC            ; System call to 6EC
$8CC    $B5EC   JP       V0, $5EC        ; Jump to V0 + 5EC
$8CE    $6340   LD       V3, #40         ; Load 64 into V3
$8D0    $AB34   LD       I, $B34         ; Load B34 into I
$8D2    $8148   UNKNOWN  8148            ; Unknown 8xxx instruction
$8D4    $9DC3   UNKNOWN  $9DC3           ; Unknown 9xxx instruction
$8D6    $E47A   UNKNOWN  $E47A           ; Unknown Exxx instruction
$8D8    $D63C   DRW      V6, V3, #C      ; Draw 12-byte sprite at V6, V3
$8DA    $9543   UNKNOWN  $9543           ; Unknown 9xxx instruction
$8DC    $BB31   JP       V0, $B31        ; Jump to V0 + B31
$8DE    $800B   UNKNOWN  800B            ; Unknown 8xxx instruction
$8E0    $B4CC   JP       V0, $4CC        ; Jump to V0 + 4CC
$8E2    $DA15   DRW      VA, V1, #5      ; Draw 5-byte sprite at VA, V1
$8E4    $1618   JP       $618            ; Jump to 618
$8E6    $3780   SE       V7, #80         ; Skip if V7 == 128
$8E8    $0314   SYS      $314            ; System call to 314
$8EA    $F70E   UNKNOWN  F70E            ; Unknown Fxxx instruction
$8EC    $4284   SNE      V2, #84         ; Skip if V2 != 132
$8EE    $CCA3   RND      VC, #A3         ; VC = random & A3
$8F0    $3C76   SE       VC, #76         ; Skip if VC == 118
$8F2    $241B   CALL     $41B            ; Call subroutine at 41B
$8F4    $F5B7   UNKNOWN  F5B7            ; Unknown Fxxx instruction
$8F6    $70FB   ADD      V0, #FB         ; Add 251 to V0
$8F8    $4742   SNE      V7, #42         ; Skip if V7 != 66
$8FA    $3A50   SE       VA, #50         ; Skip if VA == 80
$8FC    $D61A   DRW      V6, V1, #A      ; Draw 10-byte sprite at V6, V1
$8FE    $CB3F   RND      VB, #3F         ; VB = random & 3F
$900    $CA95   RND      VA, #95         ; VA = random & 95
$902    $7568   ADD      V5, #68         ; Add 104 to V5
$904    $4649   SNE      V6, #49         ; Skip if V6 != 73
$906    $F117   UNKNOWN  F117            ; Unknown Fxxx instruction
$908    $9994   UNKNOWN  $9994           ; Unknown 9xxx instruction
$90A    $D129   DRW      V1, V2, #9      ; Draw 9-byte sprite at V1, V2
$90C    $F7B2   UNKNOWN  F7B2            ; Unknown Fxxx instruction
$90E    $B9AD   JP       V0, $9AD        ; Jump to V0 + 9AD
$910    $B381   JP       V0, $381        ; Jump to V0 + 381
$912    $CF19   RND      VF, #19         ; VF = random & 19
$914    $C927   RND      V9, #27         ; V9 = random & 27
$916    $271A   CALL     $71A            ; Call subroutine at 71A
$918    $6ADA   LD       VA, #DA         ; Load 218 into VA
$91A    $0708   SYS      $708            ; System call to 708
$91C    $9D75   UNKNOWN  $9D75           ; Unknown 9xxx instruction
$91E    $FDD5   UNKNOWN  FDD5            ; Unknown Fxxx instruction
$920    $635E   LD       V3, #5E         ; Load 94 into V3
$922    $D218   DRW      V2, V1, #8      ; Draw 8-byte sprite at V2, V1
$924    $3944   SE       V9, #44         ; Skip if V9 == 68
$926    $34CD   SE       V4, #CD         ; Skip if V4 == 205
$928    $8D61   OR       VD, V6          ; VD |= V6
$92A    $CEA4   RND      VE, #A4         ; VE = random & A4
$92C    $5BC3   UNKNOWN  $5BC3           ; Unknown 5xxx instruction
$92E    $30A8   SE       V0, #A8         ; Skip if V0 == 168
$930    $B631   JP       V0, $631        ; Jump to V0 + 631
$932    $EBE7   UNKNOWN  $EBE7           ; Unknown Exxx instruction
$934    $F857   UNKNOWN  F857            ; Unknown Fxxx instruction
$936    $A428   LD       I, $428         ; Load 428 into I
$938    $D872   DRW      V8, V7, #2      ; Draw 2-byte sprite at V8, V7
$93A    $D3F6   DRW      V3, VF, #6      ; Draw 6-byte sprite at V3, VF
$93C    $F201   UNKNOWN  F201            ; Unknown Fxxx instruction
$93E    $C922   RND      V9, #22         ; V9 = random & 22
$940    $E99D   UNKNOWN  $E99D           ; Unknown Exxx instruction
$942    $0F2A   SYS      $F2A            ; System call to F2A
$944    $AB6E   LD       I, $B6E         ; Load B6E into I
$946    $0A31   SYS      $A31            ; System call to A31
$948    $8F51   OR       VF, V5          ; VF |= V5
$94A    $3600   SE       V6, #00         ; Skip if V6 == 0
$94C    $BC00   JP       V0, $C00        ; Jump to V0 + C00
$94E    $0A06   SYS      $A06            ; System call to A06
$950    $BDC6   JP       V0, $DC6        ; Jump to V0 + DC6
$952    $F12B   UNKNOWN  F12B            ; Unknown Fxxx instruction
$954    $A39B   LD       I, $39B         ; Load 39B into I
$956    $2922   CALL     $922            ; Call subroutine at 922
$958    $7B3A   ADD      VB, #3A         ; Add 58 to VB
$95A    $31DF   SE       V1, #DF         ; Skip if V1 == 223
$95C    $6639   LD       V6, #39         ; Load 57 into V6
$95E    $CE9D   RND      VE, #9D         ; VE = random & 9D
$960    $2482   CALL     $482            ; Call subroutine at 482
$962    $6E85   LD       VE, #85         ; Load 133 into VE
$964    $B463   JP       V0, $463        ; Jump to V0 + 463
$966    $2193   CALL     $193            ; Call subroutine at 193
$968    $D797   DRW      V7, V9, #7      ; Draw 7-byte sprite at V7, V9
$96A    $3970   SE       V9, #70         ; Skip if V9 == 112
$96C    $FD1F   UNKNOWN  FD1F            ; Unknown Fxxx instruction
$96E    $BF18   JP       V0, $F18        ; Jump to V0 + F18
$970    $1B2E   JP       $B2E            ; Jump to B2E
$972    $DA51   DRW      VA, V5, #1      ; Draw 1-byte sprite at VA, V5
$974    $7701   ADD      V7, #01         ; Add 1 to V7
$976    $8C34   ADD      VC, V3          ; VC += V3, VF = carry
$978    $E66F   UNKNOWN  $E66F           ; Unknown Exxx instruction
$97A    $4E36   SNE      VE, #36         ; Skip if VE != 54
$97C    $2E33   CALL     $E33            ; Call subroutine at E33
$97E    $DCDE   DRW      VC, VD, #E      ; Draw 14-byte sprite at VC, VD
$980    $2EBF   CALL     $EBF            ; Call subroutine at EBF
$982    $A73C   LD       I, $73C         ; Load 73C into I
$984    $587C   UNKNOWN  $587C           ; Unknown 5xxx instruction
$986    $A107   LD       I, $107         ; Load 107 into I
$988    $9A10   SNE      VA, V1          ; Skip if VA != V1
$98A    $7962   ADD      V9, #62         ; Add 98 to V9
$98C    $2F63   CALL     $F63            ; Call subroutine at F63
$98E    $1F5A   JP       $F5A            ; Jump to F5A
$990    $AB67   LD       I, $B67         ; Load B67 into I
$992    $897F   UNKNOWN  897F            ; Unknown 8xxx instruction
$994    $5592   UNKNOWN  $5592           ; Unknown 5xxx instruction
$996    $207B   CALL     $07B            ; Call subroutine at 07B
$998    $CE4F   RND      VE, #4F         ; VE = random & 4F
$99A    $412C   SNE      V1, #2C         ; Skip if V1 != 44
$99C    $F6F6   UNKNOWN  F6F6            ; Unknown Fxxx instruction
$99E    $246B   CALL     $46B            ; Call subroutine at 46B
$9A0    $E437   UNKNOWN  $E437           ; Unknown Exxx instruction
$9A2    $45E9   SNE      V5, #E9         ; Skip if V5 != 233
$9A4    $023C   SYS      $23C            ; System call to 23C
$9A6    $94BC   UNKNOWN  $94BC           ; Unknown 9xxx instruction
$9A8    $4B5D   SNE      VB, #5D         ; Skip if VB != 93
$9AA    $3135   SE       V1, #35         ; Skip if V1 == 53
$9AC    $7450   ADD      V4, #50         ; Add 80 to V4
$9AE    $28CA   CALL     $8CA            ; Call subroutine at 8CA
$9B0    $E413   UNKNOWN  $E413           ; Unknown Exxx instruction
$9B2    $3DA7   SE       VD, #A7         ; Skip if VD == 167
$9B4    $9E59   UNKNOWN  $9E59           ; Unknown 9xxx instruction
$9B6    $8273   XOR      V2, V7          ; V2 ^= V7
$9B8    $CB78   RND      VB, #78         ; VB = random & 78
$9BA    $F8A0   UNKNOWN  F8A0            ; Unknown Fxxx instruction
$9BC    $6094   LD       V0, #94         ; Load 148 into V0
$9BE    $69C4   LD       V9, #C4         ; Load 196 into V9
$9C0    $8375   SUB      V3, V7          ; V3 -= V7, VF = !borrow
$9C2    $6FB2   LD       VF, #B2         ; Load 178 into VF
$9C4    $C119   RND      V1, #19         ; V1 = random & 19
$9C6    $0F91   SYS      $F91            ; System call to F91
$9C8    $AA9C   LD       I, $A9C         ; Load A9C into I
$9CA    $A95C   LD       I, $95C         ; Load 95C into I
$9CC    $42EB   SNE      V2, #EB         ; Skip if V2 != 235
$9CE    $4801   SNE      V8, #01         ; Skip if V8 != 1
$9D0    $FF6C   UNKNOWN  FF6C            ; Unknown Fxxx instruction
$9D2    $E205   UNKNOWN  $E205           ; Unknown Exxx instruction
$9D4    $C75C   RND      V7, #5C         ; V7 = random & 5C
$9D6    $5F8A   UNKNOWN  $5F8A           ; Unknown 5xxx instruction
$9D8    $8425   SUB      V4, V2          ; V4 -= V2, VF = !borrow
$9DA    $5D9C   UNKNOWN  $5D9C           ; Unknown 5xxx instruction
$9DC    $4A99   SNE      VA, #99         ; Skip if VA != 153
$9DE    $29F4   CALL     $9F4            ; Call subroutine at 9F4
$9E0    $C374   RND      V3, #74         ; V3 = random & 74
$9E2    $7905   ADD      V9, #05         ; Add 5 to V9
$9E4    $6E9E   LD       VE, #9E         ; Load 158 into VE
$9E6    $50DE   UNKNOWN  $50DE           ; Unknown 5xxx instruction
$9E8    $DCCD   DRW      VC, VC, #D      ; Draw 13-byte sprite at VC, VC
$9EA    $EED3   UNKNOWN  $EED3           ; Unknown Exxx instruction
$9EC    $9491   UNKNOWN  $9491           ; Unknown 9xxx instruction
$9EE    $C19D   RND      V1, #9D         ; V1 = random & 9D
$9F0    $77B8   ADD      V7, #B8         ; Add 184 to V7
$9F2    $9325   UNKNOWN  $9325           ; Unknown 9xxx instruction
$9F4    $61AA   LD       V1, #AA         ; Load 170 into V1
$9F6    $54C5   UNKNOWN  $54C5           ; Unknown 5xxx instruction
$9F8    $2044   CALL     $044            ; Call subroutine at 044
$9FA    $D9C8   DRW      V9, VC, #8      ; Draw 8-byte sprite at V9, VC
$9FC    $876D   UNKNOWN  876D            ; Unknown 8xxx instruction
$9FE    $D850   DRW      V8, V5, #0      ; Draw 0-byte sprite at V8, V5
$A00    $497B   SNE      V9, #7B         ; Skip if V9 != 123
$A02    $FB35   UNKNOWN  FB35            ; Unknown Fxxx instruction
$A04    $DAF1   DRW      VA, VF, #1      ; Draw 1-byte sprite at VA, VF
$A06    $6CCA   LD       VC, #CA         ; Load 202 into VC
$A08    $A6A1   LD       I, $6A1         ; Load 6A1 into I
$A0A    $9146   UNKNOWN  $9146           ; Unknown 9xxx instruction
$A0C    $D9C4   DRW      V9, VC, #4      ; Draw 4-byte sprite at V9, VC
$A0E    $F73B   UNKNOWN  F73B            ; Unknown Fxxx instruction
$A10    $810A   UNKNOWN  810A            ; Unknown 8xxx instruction
$A12    $9470   SNE      V4, V7          ; Skip if V4 != V7
$A14    $C160   RND      V1, #60         ; V1 = random & 60
$A16    $AF7C   LD       I, $F7C         ; Load F7C into I
$A18    $68D8   LD       V8, #D8         ; Load 216 into V8
$A1A    $9A24   UNKNOWN  $9A24           ; Unknown 9xxx instruction
$A1C    $5F60   SE       VF, V6          ; Skip if VF == V6
$A1E    $BAFD   JP       V0, $AFD        ; Jump to V0 + AFD
$A20    $EAE3   UNKNOWN  $EAE3           ; Unknown Exxx instruction
$A22    $7D87   ADD      VD, #87         ; Add 135 to VD
$A24    $099E   SYS      $99E            ; System call to 99E
$A26    $76DF   ADD      V6, #DF         ; Add 223 to V6
$A28    $2EAC   CALL     $EAC            ; Call subroutine at EAC
$A2A    $5B1B   UNKNOWN  $5B1B           ; Unknown 5xxx instruction
$A2C    $571C   UNKNOWN  $571C           ; Unknown 5xxx instruction
$A2E    $3202   SE       V2, #02         ; Skip if V2 == 2
$A30    $A7A5   LD       I, $7A5         ; Load 7A5 into I
$A32    $CFF2   RND      VF, #F2         ; VF = random & F2
$A34    $FEEA   UNKNOWN  FEEA            ; Unknown Fxxx instruction
$A36    $E223   UNKNOWN  $E223           ; Unknown Exxx instruction
$A38    $0767   SYS      $767            ; System call to 767
$A3A    $12F5   JP       $2F5            ; Jump to 2F5
$A3C    $EFCD   UNKNOWN  $EFCD           ; Unknown Exxx instruction
$A3E    $7415   ADD      V4, #15         ; Add 21 to V4
$A40    $3D1B   SE       VD, #1B         ; Skip if VD == 27
$A42    $C992   RND      V9, #92         ; V9 = random & 92
$A44    $D2B8   DRW      V2, VB, #8      ; Draw 8-byte sprite at V2, VB
$A46    $356C   SE       V5, #6C         ; Skip if V5 == 108
$A48    $8004   ADD      V0, V0          ; V0 += V0, VF = carry
$A4A    $67F4   LD       V7, #F4         ; Load 244 into V7
$A4C    $8208   UNKNOWN  8208            ; Unknown 8xxx instruction
$A4E    $7C3B   ADD      VC, #3B         ; Add 59 to VC
$A50    $7694   ADD      V6, #94         ; Add 148 to V6
$A52    $CCF0   RND      VC, #F0         ; VC = random & F0
$A54    $7E6D   ADD      VE, #6D         ; Add 109 to VE
$A56    $5ED2   UNKNOWN  $5ED2           ; Unknown 5xxx instruction
$A58    $0C1C   SYS      $C1C            ; System call to C1C
$A5A    $09B7   SYS      $9B7            ; System call to 9B7
$A5C    $EFE9   UNKNOWN  $EFE9           ; Unknown Exxx instruction
$A5E    $ACD3   LD       I, $CD3         ; Load CD3 into I
$A60    $A841   LD       I, $841         ; Load 841 into I
$A62    $9378   UNKNOWN  $9378           ; Unknown 9xxx instruction
$A64    $EAC5   UNKNOWN  $EAC5           ; Unknown Exxx instruction
$A66    $913F   UNKNOWN  $913F           ; Unknown 9xxx instruction
$A68    $18E4   JP       $8E4            ; Jump to 8E4
$A6A    $757B   ADD      V5, #7B         ; Add 123 to V5
$A6C    $1E87   JP       $E87            ; Jump to E87
$A6E    $7C8E   ADD      VC, #8E         ; Add 142 to VC
$A70    $6572   LD       V5, #72         ; Load 114 into V5
$A72    $728A   ADD      V2, #8A         ; Add 138 to V2
$A74    $FCB3   UNKNOWN  FCB3            ; Unknown Fxxx instruction
$A76    $7F0D   ADD      VF, #0D         ; Add 13 to VF
$A78    $4EA5   SNE      VE, #A5         ; Skip if VE != 165
$A7A    $6EF3   LD       VE, #F3         ; Load 243 into VE
$A7C    $016A   SYS      $16A            ; System call to 16A
$A7E    $9730   SNE      V7, V3          ; Skip if V7 != V3
$A80    $17E7   JP       $7E7            ; Jump to 7E7
$A82    $E406   UNKNOWN  $E406           ; Unknown Exxx instruction
$A84    $61E9   LD       V1, #E9         ; Load 233 into V1
$A86    $4946   SNE      V9, #46         ; Skip if V9 != 70
$A88    $D439   DRW      V4, V3, #9      ; Draw 9-byte sprite at V4, V3
$A8A    $AA5C   LD       I, $A5C         ; Load A5C into I
$A8C    $6895   LD       V8, #95         ; Load 149 into V8
$A8E    $30F6   SE       V0, #F6         ; Skip if V0 == 246
$A90    $1416   JP       $416            ; Jump to 416
$A92    $4A0A   SNE      VA, #0A         ; Skip if VA != 10
$A94    $5D55   UNKNOWN  $5D55           ; Unknown 5xxx instruction
$A96    $A374   LD       I, $374         ; Load 374 into I
$A98    $5926   UNKNOWN  $5926           ; Unknown 5xxx instruction
$A9A    $9350   SNE      V3, V5          ; Skip if V3 != V5
$A9C    $08CA   SYS      $8CA            ; System call to 8CA
$A9E    $E5D4   UNKNOWN  $E5D4           ; Unknown Exxx instruction
$AA0    $652D   LD       V5, #2D         ; Load 45 into V5
$AA2    $A62B   LD       I, $62B         ; Load 62B into I
$AA4    $1002   JP       $002            ; Jump to 002
$AA6    $B032   JP       V0, $032        ; Jump to V0 + 032
$AA8    $AD5A   LD       I, $D5A         ; Load D5A into I
$AAA    $B9ED   JP       V0, $9ED        ; Jump to V0 + 9ED
$AAC    $A1A7   LD       I, $1A7         ; Load 1A7 into I
$AAE    $4BC9   SNE      VB, #C9         ; Skip if VB != 201
$AB0    $0500   SYS      $500            ; System call to 500
$AB2    $2281   CALL     $281            ; Call subroutine at 281
$AB4    $627F   LD       V2, #7F         ; Load 127 into V2
$AB6    $A09A   LD       I, $09A         ; Load 09A into I
$AB8    $BBAD   JP       V0, $BAD        ; Jump to V0 + BAD
$ABA    $48EE   SNE      V8, #EE         ; Skip if V8 != 238
$ABC    $9BEA   UNKNOWN  $9BEA           ; Unknown 9xxx instruction
$ABE    $F31D   UNKNOWN  F31D            ; Unknown Fxxx instruction
$AC0    $775A   ADD      V7, #5A         ; Add 90 to V7
$AC2    $28D4   CALL     $8D4            ; Call subroutine at 8D4
$AC4    $D4B8   DRW      V4, VB, #8      ; Draw 8-byte sprite at V4, VB
$AC6    $983F   UNKNOWN  $983F           ; Unknown 9xxx instruction
$AC8    $64A0   LD       V4, #A0         ; Load 160 into V4
$ACA    $43E6   SNE      V3, #E6         ; Skip if V3 != 230
$ACC    $FA40   UNKNOWN  FA40            ; Unknown Fxxx instruction
$ACE    $6CF8   LD       VC, #F8         ; Load 248 into VC
$AD0    $A031   LD       I, $031         ; Load 031 into I
$AD2    $4201   SNE      V2, #01         ; Skip if V2 != 1
$AD4    $CA77   RND      VA, #77         ; VA = random & 77
$AD6    $028B   SYS      $28B            ; System call to 28B
$AD8    $9953   UNKNOWN  $9953           ; Unknown 9xxx instruction
$ADA    $8064   ADD      V0, V6          ; V0 += V6, VF = carry
$ADC    $E5A0   UNKNOWN  $E5A0           ; Unknown Exxx instruction
$ADE    $D690   DRW      V6, V9, #0      ; Draw 0-byte sprite at V6, V9
$AE0    $9AF7   UNKNOWN  $9AF7           ; Unknown 9xxx instruction
$AE2    $459F   SNE      V5, #9F         ; Skip if V5 != 159
$AE4    $7E91   ADD      VE, #91         ; Add 145 to VE
$AE6    $9CB4   UNKNOWN  $9CB4           ; Unknown 9xxx instruction
$AE8    $E6FA   UNKNOWN  $E6FA           ; Unknown Exxx instruction
$AEA    $A552   LD       I, $552         ; Load 552 into I
$AEC    $E076   UNKNOWN  $E076           ; Unknown Exxx instruction
$AEE    $3E6A   SE       VE, #6A         ; Skip if VE == 106
$AF0    $9F97   UNKNOWN  $9F97           ; Unknown 9xxx instruction
$AF2    $3F4A   SE       VF, #4A         ; Skip if VF == 74
$AF4    $287E   CALL     $87E            ; Call subroutine at 87E
$AF6    $E33B   UNKNOWN  $E33B           ; Unknown Exxx instruction
$AF8    $A0F6   LD       I, $0F6         ; Load 0F6 into I
$AFA    $69EF   LD       V9, #EF         ; Load 239 into V9
$AFC    $9FFE   UNKNOWN  $9FFE           ; Unknown 9xxx instruction
$AFE    $E61E   UNKNOWN  $E61E           ; Unknown Exxx instruction
$B00    $9985   UNKNOWN  $9985           ; Unknown 9xxx instruction
$B02    $66BD   LD       V6, #BD         ; Load 189 into V6
$B04    $7524   ADD      V5, #24         ; Add 36 to V5
$B06    $A9AE   LD       I, $9AE         ; Load 9AE into I
$B08    $CC4A   RND      VC, #4A         ; VC = random & 4A
$B0A    $75A9   ADD      V5, #A9         ; Add 169 to V5
$B0C    $891E   SHL      V9              ; V9 <<= 1, VF = MSB
$B0E    $FCB7   UNKNOWN  FCB7            ; Unknown Fxxx instruction
$B10    $1F5D   JP       $F5D            ; Jump to F5D
$B12    $7452   ADD      V4, #52         ; Add 82 to V4
$B14    $2D7D   CALL     $D7D            ; Call subroutine at D7D
$B16    $7829   ADD      V8, #29         ; Add 41 to V8
$B18    $14D9   JP       $4D9            ; Jump to 4D9
$B1A    $08A7   SYS      $8A7            ; System call to 8A7
$B1C    $FDDF   UNKNOWN  FDDF            ; Unknown Fxxx instruction
$B1E    $FB5A   UNKNOWN  FB5A            ; Unknown Fxxx instruction
$B20    $E78C   UNKNOWN  $E78C           ; Unknown Exxx instruction
$B22    $F767   UNKNOWN  F767            ; Unknown Fxxx instruction
$B24    $EFF6   UNKNOWN  $EFF6           ; Unknown Exxx instruction
$B26    $DB93   DRW      VB, V9, #3      ; Draw 3-byte sprite at VB, V9
$B28    $B343   JP       V0, $343        ; Jump to V0 + 343
$B2A    $8245   SUB      V2, V4          ; V2 -= V4, VF = !borrow
$B2C    $4525   SNE      V5, #25         ; Skip if V5 != 37
$B2E    $5ACC   UNKNOWN  $5ACC           ; Unknown 5xxx instruction
$B30    $6180   LD       V1, #80         ; Load 128 into V1
$B32    $FC39   UNKNOWN  FC39            ; Unknown Fxxx instruction
$B34    $6A29   LD       VA, #29         ; Load 41 into VA
$B36    $2388   CALL     $388            ; Call subroutine at 388
$B38    $5495   UNKNOWN  $5495           ; Unknown 5xxx instruction
$B3A    $0B67   SYS      $B67            ; System call to B67
$B3C    $2611   CALL     $611            ; Call subroutine at 611
$B3E    $1393   JP       $393            ; Jump to 393
$B40    $BD56   JP       V0, $D56        ; Jump to V0 + D56
$B42    $7247   ADD      V2, #47         ; Add 71 to V2
$B44    $3CEB   SE       VC, #EB         ; Skip if VC == 235
$B46    $51C0   SE       V1, VC          ; Skip if V1 == VC
$B48    $99E9   UNKNOWN  $99E9           ; Unknown 9xxx instruction
$B4A    $1B4E   JP       $B4E            ; Jump to B4E
$B4C    $892F   UNKNOWN  892F            ; Unknown 8xxx instruction
$B4E    $C466   RND      V4, #66         ; V4 = random & 66
$B50    $6792   LD       V7, #92         ; Load 146 into V7
$B52    $971D   UNKNOWN  $971D           ; Unknown 9xxx instruction
$B54    $387A   SE       V8, #7A         ; Skip if V8 == 122
$B56    $BFC0   JP       V0, $FC0        ; Jump to V0 + FC0
$B58    $02AE   SYS      $2AE            ; System call to 2AE
$B5A    $2C8D   CALL     $C8D            ; Call subroutine at C8D
$B5C    $8647   SUBN     V6, V4          ; V6 = V4 - V6, VF = !borrow
$B5E    $C69A   RND      V6, #9A         ; V6 = random & 9A
$B60    $4585   SNE      V5, #85         ; Skip if V5 != 133
$B62    $99AD   UNKNOWN  $99AD           ; Unknown 9xxx instruction
$B64    $401C   SNE      V0, #1C         ; Skip if V0 != 28
$B66    $C340   RND      V3, #40         ; V3 = random & 40
$B68    $775F   ADD      V7, #5F         ; Add 95 to V7
$B6A    $3409   SE       V4, #09         ; Skip if V4 == 9
$B6C    $AC56   LD       I, $C56         ; Load C56 into I
$B6E    $EB20   UNKNOWN  $EB20           ; Unknown Exxx instruction
$B70    $026F   SYS      $26F            ; System call to 26F
$B72    $640C   LD       V4, #0C         ; Load 12 into V4
$B74    $5CDA   UNKNOWN  $5CDA           ; Unknown 5xxx instruction
$B76    $D990   DRW      V9, V9, #0      ; Draw 0-byte sprite at V9, V9
$B78    $4EED   SNE      VE, #ED         ; Skip if VE != 237
$B7A    $E418   UNKNOWN  $E418           ; Unknown Exxx instruction
$B7C    $FF00   UNKNOWN  FF00            ; Unknown Fxxx instruction
$B7E    $7EC7   ADD      VE, #C7         ; Add 199 to VE
$B80    $8138   UNKNOWN  8138            ; Unknown 8xxx instruction
$B82    $0256   SYS      $256            ; System call to 256
$B84    $7840   ADD      V8, #40         ; Add 64 to V8
$B86    $EFA7   UNKNOWN  $EFA7           ; Unknown Exxx instruction
$B88    $CFC3   RND      VF, #C3         ; VF = random & C3
$B8A    $C395   RND      V3, #95         ; V3 = random & 95
$B8C    $DB9E   DRW      VB, V9, #E      ; Draw 14-byte sprite at VB, V9
$B8E    $8E94   ADD      VE, V9          ; VE += V9, VF = carry
$B90    $5871   UNKNOWN  $5871           ; Unknown 5xxx instruction
$B92    $4739   SNE      V7, #39         ; Skip if V7 != 57
$B94    $4E85   SNE      VE, #85         ; Skip if VE != 133
$B96    $0191   SYS      $191            ; System call to 191
$B98    $451A   SNE      V5, #1A         ; Skip if V5 != 26
$B9A    $6894   LD       V8, #94         ; Load 148 into V8
$B9C    $248C   CALL     $48C            ; Call subroutine at 48C
$B9E    $3FFB   SE       VF, #FB         ; Skip if VF == 251
$BA0    $CE1E   RND      VE, #1E         ; VE = random & 1E
$BA2    $A841   LD       I, $841         ; Load 841 into I
$BA4    $5569   UNKNOWN  $5569           ; Unknown 5xxx instruction
$BA6    $D0E1   DRW      V0, VE, #1      ; Draw 1-byte sprite at V0, VE
$BA8    $09B5   SYS      $9B5            ; System call to 9B5
$BAA    $7771   ADD      V7, #71         ; Add 113 to V7
$BAC    $4271   SNE      V2, #71         ; Skip if V2 != 113
$BAE    $5A0A   UNKNOWN  $5A0A           ; Unknown 5xxx instruction
$BB0    $F9B8   UNKNOWN  F9B8            ; Unknown Fxxx instruction
$BB2    $AAF6   LD       I, $AF6         ; Load AF6 into I
$BB4    $BA18   JP       V0, $A18        ; Jump to V0 + A18
$BB6    $E346   UNKNOWN  $E346           ; Unknown Exxx instruction
$BB8    $F1CB   UNKNOWN  F1CB            ; Unknown Fxxx instruction
$BBA    $8EFB   UNKNOWN  8EFB            ; Unknown 8xxx instruction
$BBC    $BC02   JP       V0, $C02        ; Jump to V0 + C02
$BBE    $0FF6   SYS      $FF6            ; System call to FF6
$BC0    $3D36   SE       VD, #36         ; Skip if VD == 54
$BC2    $4A2D   SNE      VA, #2D         ; Skip if VA != 45
$BC4    $D01C   DRW      V0, V1, #C      ; Draw 12-byte sprite at V0, V1
$BC6    $401E   SNE      V0, #1E         ; Skip if V0 != 30
$BC8    $C678   RND      V6, #78         ; V6 = random & 78
$BCA    $573C   UNKNOWN  $573C           ; Unknown 5xxx instruction
$BCC    $AE07   LD       I, $E07         ; Load E07 into I
$BCE    $D3B8   DRW      V3, VB, #8      ; Draw 8-byte sprite at V3, VB
$BD0    $F926   UNKNOWN  F926            ; Unknown Fxxx instruction
$BD2    $960A   UNKNOWN  $960A           ; Unknown 9xxx instruction
$BD4    $1B42   JP       $B42            ; Jump to B42
$BD6    $1FC4   JP       $FC4            ; Jump to FC4
$BD8    $789D   ADD      V8, #9D         ; Add 157 to V8
$BDA    $CE21   RND      VE, #21         ; VE = random & 21
$BDC    $5F7D   UNKNOWN  $5F7D           ; Unknown 5xxx instruction
$BDE    $48CD   SNE      V8, #CD         ; Skip if V8 != 205
$BE0    $3136   SE       V1, #36         ; Skip if V1 == 54
$BE2    $69E5   LD       V9, #E5         ; Load 229 into V9
$BE4    $B61C   JP       V0, $61C        ; Jump to V0 + 61C
$BE6    $564A   UNKNOWN  $564A           ; Unknown 5xxx instruction
$BE8    $A641   LD       I, $641         ; Load 641 into I
$BEA    $F0A9   UNKNOWN  F0A9            ; Unknown Fxxx instruction
$BEC    $947B   UNKNOWN  $947B           ; Unknown 9xxx instruction
$BEE    $140A   JP       $40A            ; Jump to 40A
$BF0    $825C   UNKNOWN  825C            ; Unknown 8xxx instruction
$BF2    $08FE   SYS      $8FE            ; System call to 8FE
$BF4    $093C   SYS      $93C            ; System call to 93C
$BF6    $A74E   LD       I, $74E         ; Load 74E into I
$BF8    $C0B4   RND      V0, #B4         ; V0 = random & B4
$BFA    $DBBC   DRW      VB, VB, #C      ; Draw 12-byte sprite at VB, VB
$BFC    $06E2   SYS      $6E2            ; System call to 6E2
$BFE    $3B57   SE       VB, #57         ; Skip if VB == 87
$C00    $0EBB   SYS      $EBB            ; System call to EBB
$C02    $F1D0   UNKNOWN  F1D0            ; Unknown Fxxx instruction
$C04    $7679   ADD      V6, #79         ; Add 121 to V6
$C06    $4B1D   SNE      VB, #1D         ; Skip if VB != 29
$C08    $0365   SYS      $365            ; System call to 365
$C0A    $B8AB   JP       V0, $8AB        ; Jump to V0 + 8AB
$C0C    $6077   LD       V0, #77         ; Load 119 into V0
$C0E    $E8C7   UNKNOWN  $E8C7           ; Unknown Exxx instruction
$C10    $19A1   JP       $9A1            ; Jump to 9A1
$C12    $399E   SE       V9, #9E         ; Skip if V9 == 158
$C14    $6969   LD       V9, #69         ; Load 105 into V9
$C16    $6850   LD       V8, #50         ; Load 80 into V8
$C18    $AF4E   LD       I, $F4E         ; Load F4E into I
$C1A    $1996   JP       $996            ; Jump to 996
$C1C    $C109   RND      V1, #09         ; V1 = random & 09
$C1E    $720D   ADD      V2, #0D         ; Add 13 to V2
$C20    $C21F   RND      V2, #1F         ; V2 = random & 1F
$C22    $9F9B   UNKNOWN  $9F9B           ; Unknown 9xxx instruction
$C24    $C4FC   RND      V4, #FC         ; V4 = random & FC
$C26    $A8DE   LD       I, $8DE         ; Load 8DE into I
$C28    $488E   SNE      V8, #8E         ; Skip if V8 != 142
$C2A    $7B0D   ADD      VB, #0D         ; Add 13 to VB
$C2C    $9FE4   UNKNOWN  $9FE4           ; Unknown 9xxx instruction
$C2E    $0548   SYS      $548            ; System call to 548
$C30    $4DC9   SNE      VD, #C9         ; Skip if VD != 201
$C32    $84BF   UNKNOWN  84BF            ; Unknown 8xxx instruction
$C34    $E28E   UNKNOWN  $E28E           ; Unknown Exxx instruction
$C36    $B39E   JP       V0, $39E        ; Jump to V0 + 39E
$C38    $ED4F   UNKNOWN  $ED4F           ; Unknown Exxx instruction
$C3A    $9648   UNKNOWN  $9648           ; Unknown 9xxx instruction
$C3C    $51FC   UNKNOWN  $51FC           ; Unknown 5xxx instruction
$C3E    $297A   CALL     $97A            ; Call subroutine at 97A
$C40    $0212   SYS      $212            ; System call to 212
$C42    $E61E   UNKNOWN  $E61E           ; Unknown Exxx instruction
$C44    $5953   UNKNOWN  $5953           ; Unknown 5xxx instruction
$C46    $4F87   SNE      VF, #87         ; Skip if VF != 135
$C48    $E589   UNKNOWN  $E589           ; Unknown Exxx instruction
$C4A    $EFD5   UNKNOWN  $EFD5           ; Unknown Exxx instruction
$C4C    $F739   UNKNOWN  F739            ; Unknown Fxxx instruction
$C4E    $8A5F   UNKNOWN  8A5F            ; Unknown 8xxx instruction
$C50    $B7CB   JP       V0, $7CB        ; Jump to V0 + 7CB
$C52    $9CD8   UNKNOWN  $9CD8           ; Unknown 9xxx instruction
$C54    $3E91   SE       VE, #91         ; Skip if VE == 145
$C56    $625F   LD       V2, #5F         ; Load 95 into V2
$C58    $E7CE   UNKNOWN  $E7CE           ; Unknown Exxx instruction
$C5A    $FA5A   UNKNOWN  FA5A            ; Unknown Fxxx instruction
$C5C    $729A   ADD      V2, #9A         ; Add 154 to V2
$C5E    $7B32   ADD      VB, #32         ; Add 50 to VB
$C60    $1231   JP       $231            ; Jump to 231
$C62    $C10E   RND      V1, #0E         ; V1 = random & 0E
$C64    $BEC7   JP       V0, $EC7        ; Jump to V0 + EC7
$C66    $68E8   LD       V8, #E8         ; Load 232 into V8
$C68    $D1D1   DRW      V1, VD, #1      ; Draw 1-byte sprite at V1, VD
$C6A    $89B1   OR       V9, VB          ; V9 |= VB
$C6C    $49B0   SNE      V9, #B0         ; Skip if V9 != 176
$C6E    $2F70   CALL     $F70            ; Call subroutine at F70
$C70    $8C76   SHR      VC              ; VC >>= 1, VF = LSB
$C72    $A139   LD       I, $139         ; Load 139 into I
$C74    $BC0E   JP       V0, $C0E        ; Jump to V0 + C0E
$C76    $4661   SNE      V6, #61         ; Skip if V6 != 97
$C78    $6BEA   LD       VB, #EA         ; Load 234 into VB
$C7A    $5293   UNKNOWN  $5293           ; Unknown 5xxx instruction
$C7C    $E46C   UNKNOWN  $E46C           ; Unknown Exxx instruction
$C7E    $A60B   LD       I, $60B         ; Load 60B into I
$C80    $648C   LD       V4, #8C         ; Load 140 into V4
$C82    $2A1A   CALL     $A1A            ; Call subroutine at A1A
$C84    $E2A6   UNKNOWN  $E2A6           ; Unknown Exxx instruction
$C86    $BCB4   JP       V0, $CB4        ; Jump to V0 + CB4
$C88    $9D77   UNKNOWN  $9D77           ; Unknown 9xxx instruction
$C8A    $0E47   SYS      $E47            ; System call to E47
$C8C    $DDB2   DRW      VD, VB, #2      ; Draw 2-byte sprite at VD, VB
$C8E    $9408   UNKNOWN  $9408           ; Unknown 9xxx instruction
$C90    $20E7   CALL     $0E7            ; Call subroutine at 0E7
$C92    $6AE4   LD       VA, #E4         ; Load 228 into VA
$C94    $733C   ADD      V3, #3C         ; Add 60 to V3
$C96    $ABBB   LD       I, $BBB         ; Load BBB into I
$C98    $91DE   UNKNOWN  $91DE           ; Unknown 9xxx instruction
$C9A    $2306   CALL     $306            ; Call subroutine at 306
$C9C    $2A66   CALL     $A66            ; Call subroutine at A66
$C9E    $B1B1   JP       V0, $1B1        ; Jump to V0 + 1B1
$CA0    $7E4D   ADD      VE, #4D         ; Add 77 to VE
$CA2    $A636   LD       I, $636         ; Load 636 into I
$CA4    $E6E0   UNKNOWN  $E6E0           ; Unknown Exxx instruction
$CA6    $8E30   LD       VE, V3          ; VE = V3
$CA8    $61FB   LD       V1, #FB         ; Load 251 into V1
$CAA    $CE3C   RND      VE, #3C         ; VE = random & 3C
$CAC    $550E   UNKNOWN  $550E           ; Unknown 5xxx instruction
$CAE    $A531   LD       I, $531         ; Load 531 into I
$CB0    $6F19   LD       VF, #19         ; Load 25 into VF
$CB2    $8EC7   SUBN     VE, VC          ; VE = VC - VE, VF = !borrow
$CB4    $04E1   SYS      $4E1            ; System call to 4E1
$CB6    $4424   SNE      V4, #24         ; Skip if V4 != 36
$CB8    $1A83   JP       $A83            ; Jump to A83
$CBA    $FB1C   UNKNOWN  FB1C            ; Unknown Fxxx instruction
$CBC    $C1C1   RND      V1, #C1         ; V1 = random & C1
$CBE    $3E51   SE       VE, #51         ; Skip if VE == 81
$CC0    $511D   UNKNOWN  $511D           ; Unknown 5xxx instruction
$CC2    $E7C7   UNKNOWN  $E7C7           ; Unknown Exxx instruction
$CC4    $F667   UNKNOWN  F667            ; Unknown Fxxx instruction
$CC6    $2BA4   CALL     $BA4            ; Call subroutine at BA4
$CC8    $391D   SE       V9, #1D         ; Skip if V9 == 29
$CCA    $7FCC   ADD      VF, #CC         ; Add 204 to VF
$CCC    $08DD   SYS      $8DD            ; System call to 8DD
$CCE    $D55D   DRW      V5, V5, #D      ; Draw 13-byte sprite at V5, V5
$CD0    $35A5   SE       V5, #A5         ; Skip if V5 == 165
$CD2    $6FD4   LD       VF, #D4         ; Load 212 into VF
$CD4    $C264   RND      V2, #64         ; V2 = random & 64
$CD6    $214D   CALL     $14D            ; Call subroutine at 14D
$CD8    $317E   SE       V1, #7E         ; Skip if V1 == 126
$CDA    $F562   UNKNOWN  F562            ; Unknown Fxxx instruction
$CDC    $5B80   SE       VB, V8          ; Skip if VB == V8
$CDE    $DF1A   DRW      VF, V1, #A      ; Draw 10-byte sprite at VF, V1
$CE0    $7892   ADD      V8, #92         ; Add 146 to V8
$CE2    $5140   SE       V1, V4          ; Skip if V1 == V4
$CE4    $F1C6   UNKNOWN  F1C6            ; Unknown Fxxx instruction
$CE6    $FE5D   UNKNOWN  FE5D            ; Unknown Fxxx instruction
$CE8    $961A   UNKNOWN  $961A           ; Unknown 9xxx instruction
$CEA    $58E0   SE       V8, VE          ; Skip if V8 == VE
$CEC    $1BA3   JP       $BA3            ; Jump to BA3
$CEE    $A25B   LD       I, $25B         ; Load 25B into I
$CF0    $A5A8   LD       I, $5A8         ; Load 5A8 into I
$CF2    $8895   SUB      V8, V9          ; V8 -= V9, VF = !borrow
$CF4    $B748   JP       V0, $748        ; Jump to V0 + 748
$CF6    $6211   LD       V2, #11         ; Load 17 into V2
$CF8    $EF8D   UNKNOWN  $EF8D           ; Unknown Exxx instruction
$CFA    $C755   RND      V7, #55         ; V7 = random & 55
$CFC    $4E76   SNE      VE, #76         ; Skip if VE != 118
$CFE    $8C15   SUB      VC, V1          ; VC -= V1, VF = !borrow
$D00    $0EA9   SYS      $EA9            ; System call to EA9
$D02    $C62E   RND      V6, #2E         ; V6 = random & 2E
$D04    $9A3C   UNKNOWN  $9A3C           ; Unknown 9xxx instruction
$D06    $8112   AND      V1, V1          ; V1 &= V1
$D08    $2083   CALL     $083            ; Call subroutine at 083
$D0A    $6E4E   LD       VE, #4E         ; Load 78 into VE
$D0C    $DC7B   DRW      VC, V7, #B      ; Draw 11-byte sprite at VC, V7
$D0E    $8B4B   UNKNOWN  8B4B            ; Unknown 8xxx instruction
$D10    $30A1   SE       V0, #A1         ; Skip if V0 == 161
$D12    $45E3   SNE      V5, #E3         ; Skip if V5 != 227
$D14    $4DE9   SNE      VD, #E9         ; Skip if VD != 233
$D16    $EBE5   UNKNOWN  $EBE5           ; Unknown Exxx instruction
$D18    $3A6E   SE       VA, #6E         ; Skip if VA == 110
$D1A    $72F4   ADD      V2, #F4         ; Add 244 to V2
$D1C    $79DE   ADD      V9, #DE         ; Add 222 to V9
$D1E    $F1F0   UNKNOWN  F1F0            ; Unknown Fxxx instruction
$D20    $82A6   SHR      V2              ; V2 >>= 1, VF = LSB
$D22    $2AE1   CALL     $AE1            ; Call subroutine at AE1
$D24    $036F   SYS      $36F            ; System call to 36F
$D26    $5563   UNKNOWN  $5563           ; Unknown 5xxx instruction
$D28    $91A6   UNKNOWN  $91A6           ; Unknown 9xxx instruction
$D2A    $9409   UNKNOWN  $9409           ; Unknown 9xxx instruction
$D2C    $0EC4   SYS      $EC4            ; System call to EC4
$D2E    $F48B   UNKNOWN  F48B            ; Unknown Fxxx instruction
$D30    $EB46   UNKNOWN  $EB46           ; Unknown Exxx instruction
$D32    $80D8   UNKNOWN  80D8            ; Unknown 8xxx instruction
$D34    $10C7   JP       $0C7            ; Jump to 0C7
$D36    $7081   ADD      V0, #81         ; Add 129 to V0
$D38    $9A8F   UNKNOWN  $9A8F           ; Unknown 9xxx instruction
$D3A    $227C   CALL     $27C            ; Call subroutine at 27C
$D3C    $87DD   UNKNOWN  87DD            ; Unknown 8xxx instruction
$D3E    $2A8E   CALL     $A8E            ; Call subroutine at A8E
$D40    $C1E8   RND      V1, #E8         ; V1 = random & E8
$D42    $BB36   JP       V0, $B36        ; Jump to V0 + B36
$D44    $9F30   SNE      VF, V3          ; Skip if VF != V3
$D46    $9702   UNKNOWN  $9702           ; Unknown 9xxx instruction
$D48    $E813   UNKNOWN  $E813           ; Unknown Exxx instruction
$D4A    $4902   SNE      V9, #02         ; Skip if V9 != 2
$D4C    $61FE   LD       V1, #FE         ; Load 254 into V1
$D4E    $1DDE   JP       $DDE            ; Jump to DDE
$D50    $74F3   ADD      V4, #F3         ; Add 243 to V4
$D52    $9C6B   UNKNOWN  $9C6B           ; Unknown 9xxx instruction
$D54    $A8C8   LD       I, $8C8         ; Load 8C8 into I
$D56    $B7CC   JP       V0, $7CC        ; Jump to V0 + 7CC
$D58    $1AE8   JP       $AE8            ; Jump to AE8
$D5A    $256E   CALL     $56E            ; Call subroutine at 56E
$D5C    $7DAC   ADD      VD, #AC         ; Add 172 to VD
$D5E    $E1D4   UNKNOWN  $E1D4           ; Unknown Exxx instruction
$D60    $2727   CALL     $727            ; Call subroutine at 727
$D62    $FC34   UNKNOWN  FC34            ; Unknown Fxxx instruction
$D64    $26B6   CALL     $6B6            ; Call subroutine at 6B6
$D66    $18F1   JP       $8F1            ; Jump to 8F1
$D68    $416B   SNE      V1, #6B         ; Skip if V1 != 107
$D6A    $A9B6   LD       I, $9B6         ; Load 9B6 into I
$D6C    $A3C9   LD       I, $3C9         ; Load 3C9 into I
$D6E    $0CB0   SYS      $CB0            ; System call to CB0
$D70    $3F94   SE       VF, #94         ; Skip if VF == 148
$D72    $8189   UNKNOWN  8189            ; Unknown 8xxx instruction
$D74    $1334   JP       $334            ; Jump to 334
$D76    $7561   ADD      V5, #61         ; Add 97 to V5
$D78    $831D   UNKNOWN  831D            ; Unknown 8xxx instruction
$D7A    $877B   UNKNOWN  877B            ; Unknown 8xxx instruction
$D7C    $C458   RND      V4, #58         ; V4 = random & 58
$D7E    $4346   SNE      V3, #46         ; Skip if V3 != 70
$D80    $0E3A   SYS      $E3A            ; System call to E3A
$D82    $CE70   RND      VE, #70         ; VE = random & 70
$D84    $A125   LD       I, $125         ; Load 125 into I
$D86    $AE32   LD       I, $E32         ; Load E32 into I
$D88    $59BD   UNKNOWN  $59BD           ; Unknown 5xxx instruction
$D8A    $9418   UNKNOWN  $9418           ; Unknown 9xxx instruction
$D8C    $163B   JP       $63B            ; Jump to 63B
$D8E    $D400   DRW      V4, V0, #0      ; Draw 0-byte sprite at V4, V0
$D90    $71F5   ADD      V1, #F5         ; Add 245 to V1
$D92    $9ADE   UNKNOWN  $9ADE           ; Unknown 9xxx instruction
$D94    $9324   UNKNOWN  $9324           ; Unknown 9xxx instruction
$D96    $0790   SYS      $790            ; System call to 790
$D98    $5A22   UNKNOWN  $5A22           ; Unknown 5xxx instruction
$D9A    $ED20   UNKNOWN  $ED20           ; Unknown Exxx instruction
$D9C    $9F58   UNKNOWN  $9F58           ; Unknown 9xxx instruction
$D9E    $5C82   UNKNOWN  $5C82           ; Unknown 5xxx instruction
$DA0    $6965   LD       V9, #65         ; Load 101 into V9
$DA2    $55EC   UNKNOWN  $55EC           ; Unknown 5xxx instruction
$DA4    $03C8   SYS      $3C8            ; System call to 3C8
$DA6    $2337   CALL     $337            ; Call subroutine at 337
$DA8    $3A1C   SE       VA, #1C         ; Skip if VA == 28
$DAA    $BB22   JP       V0, $B22        ; Jump to V0 + B22
$DAC    $B02F   JP       V0, $02F        ; Jump to V0 + 02F
$DAE    $EA37   UNKNOWN  $EA37           ; Unknown Exxx instruction
$DB0    $6013   LD       V0, #13         ; Load 19 into V0
$DB2    $3F60   SE       VF, #60         ; Skip if VF == 96
$DB4    $CFC9   RND      VF, #C9         ; VF = random & C9
$DB6    $B944   JP       V0, $944        ; Jump to V0 + 944
$DB8    $E5E7   UNKNOWN  $E5E7           ; Unknown Exxx instruction
$DBA    $F7B8   UNKNOWN  F7B8            ; Unknown Fxxx instruction
$DBC    $275F   CALL     $75F            ; Call subroutine at 75F
$DBE    $0B44   SYS      $B44            ; System call to B44
$DC0    $6251   LD       V2, #51         ; Load 81 into V2
$DC2    $F2D5   UNKNOWN  F2D5            ; Unknown Fxxx instruction
$DC4    $63B2   LD       V3, #B2         ; Load 178 into V3
$DC6    $E9C2   UNKNOWN  $E9C2           ; Unknown Exxx instruction
$DC8    $7ACF   ADD      VA, #CF         ; Add 207 to VA
$DCA    $16E6   JP       $6E6            ; Jump to 6E6
$DCC    $6040   LD       V0, #40         ; Load 64 into V0
$DCE    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$DD0    $6647   LD       V6, #47         ; Load 71 into V6
$DD2    $9C3C   UNKNOWN  $9C3C           ; Unknown 9xxx instruction
$DD4    $907C   UNKNOWN  $907C           ; Unknown 9xxx instruction
$DD6    $24FB   CALL     $4FB            ; Call subroutine at 4FB
$DD8    $B23D   JP       V0, $23D        ; Jump to V0 + 23D
$DDA    $F988   UNKNOWN  F988            ; Unknown Fxxx instruction
$DDC    $078B   SYS      $78B            ; System call to 78B
$DDE    $5CF7   UNKNOWN  $5CF7           ; Unknown 5xxx instruction
$DE0    $7838   ADD      V8, #38         ; Add 56 to V8
$DE2    $D0BA   DRW      V0, VB, #A      ; Draw 10-byte sprite at V0, VB
$DE4    $2721   CALL     $721            ; Call subroutine at 721
$DE6    $667E   LD       V6, #7E         ; Load 126 into V6
$DE8    $4DF1   SNE      VD, #F1         ; Skip if VD != 241
$DEA    $659C   LD       V5, #9C         ; Load 156 into V5
$DEC    $4203   SNE      V2, #03         ; Skip if V2 != 3
$DEE    $D3F8   DRW      V3, VF, #8      ; Draw 8-byte sprite at V3, VF
$DF0    $A828   LD       I, $828         ; Load 828 into I
$DF2    $DD54   DRW      VD, V5, #4      ; Draw 4-byte sprite at VD, V5
$DF4    $CB1D   RND      VB, #1D         ; VB = random & 1D
$DF6    $A119   LD       I, $119         ; Load 119 into I
$DF8    $4C1C   SNE      VC, #1C         ; Skip if VC != 28
$DFA    $A9EB   LD       I, $9EB         ; Load 9EB into I
$DFC    $A753   LD       I, $753         ; Load 753 into I
$DFE    $2C7A   CALL     $C7A            ; Call subroutine at C7A
$E00    $6D70   LD       VD, #70         ; Load 112 into VD
$E02    $2A3D   CALL     $A3D            ; Call subroutine at A3D
$E04    $0FF5   SYS      $FF5            ; System call to FF5
$E06    $2F74   CALL     $F74            ; Call subroutine at F74
$E08    $67D7   LD       V7, #D7         ; Load 215 into V7
$E0A    $52A6   UNKNOWN  $52A6           ; Unknown 5xxx instruction
$E0C    $EB71   UNKNOWN  $EB71           ; Unknown Exxx instruction
$E0E    $8CBD   UNKNOWN  8CBD            ; Unknown 8xxx instruction
$E10    $CDC8   RND      VD, #C8         ; VD = random & C8
$E12    $E6C7   UNKNOWN  $E6C7           ; Unknown Exxx instruction
$E14    $C5A3   RND      V5, #A3         ; V5 = random & A3
$E16    $8023   XOR      V0, V2          ; V0 ^= V2
$E18    $0A2D   SYS      $A2D            ; System call to A2D
$E1A    $A45A   LD       I, $45A         ; Load 45A into I
$E1C    $95EF   UNKNOWN  $95EF           ; Unknown 9xxx instruction
$E1E    $C7E3   RND      V7, #E3         ; V7 = random & E3
$E20    $5AE6   UNKNOWN  $5AE6           ; Unknown 5xxx instruction
$E22    $B86A   JP       V0, $86A        ; Jump to V0 + 86A
$E24    $27ED   CALL     $7ED            ; Call subroutine at 7ED
$E26    $4960   SNE      V9, #60         ; Skip if V9 != 96
$E28    $9A44   UNKNOWN  $9A44           ; Unknown 9xxx instruction
$E2A    $9929   UNKNOWN  $9929           ; Unknown 9xxx instruction
$E2C    $F5D0   UNKNOWN  F5D0            ; Unknown Fxxx instruction
$E2E    $E098   UNKNOWN  $E098           ; Unknown Exxx instruction
$E30    $8081   OR       V0, V8          ; V0 |= V8
$E32    $8F5E   SHL      VF              ; VF <<= 1, VF = MSB
$E34    $17C1   JP       $7C1            ; Jump to 7C1
$E36    $8259   UNKNOWN  8259            ; Unknown 8xxx instruction
$E38    $173F   JP       $73F            ; Jump to 73F
$E3A    $4476   SNE      V4, #76         ; Skip if V4 != 118
$E3C    $5EF2   UNKNOWN  $5EF2           ; Unknown 5xxx instruction
$E3E    $C59B   RND      V5, #9B         ; V5 = random & 9B
$E40    $1096   JP       $096            ; Jump to 096
$E42    $C464   RND      V4, #64         ; V4 = random & 64
$E44    $EF54   UNKNOWN  $EF54           ; Unknown Exxx instruction
$E46    $F268   UNKNOWN  F268            ; Unknown Fxxx instruction
$E48    $2383   CALL     $383            ; Call subroutine at 383
$E4A    $DE0C   DRW      VE, V0, #C      ; Draw 12-byte sprite at VE, V0
$E4C    $E74C   UNKNOWN  $E74C           ; Unknown Exxx instruction
$E4E    $C879   RND      V8, #79         ; V8 = random & 79
$E50    $E048   UNKNOWN  $E048           ; Unknown Exxx instruction
$E52    $666C   LD       V6, #6C         ; Load 108 into V6
$E54    $B3AF   JP       V0, $3AF        ; Jump to V0 + 3AF
$E56    $DF31   DRW      VF, V3, #1      ; Draw 1-byte sprite at VF, V3
$E58    $3CEE   SE       VC, #EE         ; Skip if VC == 238
$E5A    $89A7   SUBN     V9, VA          ; V9 = VA - V9, VF = !borrow
$E5C    $261D   CALL     $61D            ; Call subroutine at 61D
$E5E    $3A8B   SE       VA, #8B         ; Skip if VA == 139
$E60    $406D   SNE      V0, #6D         ; Skip if V0 != 109
$E62    $48A5   SNE      V8, #A5         ; Skip if V8 != 165
$E64    $7B04   ADD      VB, #04         ; Add 4 to VB
$E66    $CE9E   RND      VE, #9E         ; VE = random & 9E
$E68    $0CAC   SYS      $CAC            ; System call to CAC
$E6A    $0556   SYS      $556            ; System call to 556
$E6C    $AA06   LD       I, $A06         ; Load A06 into I
$E6E    $01D2   SYS      $1D2            ; System call to 1D2
$E70    $AB08   LD       I, $B08         ; Load B08 into I
$E72    $AD3A   LD       I, $D3A         ; Load D3A into I
$E74    $D807   DRW      V8, V0, #7      ; Draw 7-byte sprite at V8, V0
$E76    $2C94   CALL     $C94            ; Call subroutine at C94
$E78    $8167   SUBN     V1, V6          ; V1 = V6 - V1, VF = !borrow
$E7A    $083D   SYS      $83D            ; System call to 83D
$E7C    $4046   SNE      V0, #46         ; Skip if V0 != 70
$E7E    $2574   CALL     $574            ; Call subroutine at 574
$E80    $932C   UNKNOWN  $932C           ; Unknown 9xxx instruction
$E82    $5EB0   SE       VE, VB          ; Skip if VE == VB
$E84    $15B7   JP       $5B7            ; Jump to 5B7
$E86    $C260   RND      V2, #60         ; V2 = random & 60
$E88    $ABF4   LD       I, $BF4         ; Load BF4 into I
$E8A    $C80F   RND      V8, #0F         ; V8 = random & 0F
$E8C    $8BE2   AND      VB, VE          ; VB &= VE
$E8E    $DEC6   DRW      VE, VC, #6      ; Draw 6-byte sprite at VE, VC
$E90    $EB0A   UNKNOWN  $EB0A           ; Unknown Exxx instruction
$E92    $50D2   UNKNOWN  $50D2           ; Unknown 5xxx instruction
$E94    $3E8B   SE       VE, #8B         ; Skip if VE == 139
$E96    $85D2   AND      V5, VD          ; V5 &= VD
$E98    $2C0E   CALL     $C0E            ; Call subroutine at C0E
$E9A    $77A0   ADD      V7, #A0         ; Add 160 to V7
$E9C    $9CCF   UNKNOWN  $9CCF           ; Unknown 9xxx instruction
$E9E    $009D   SYS      $09D            ; System call to 09D
$EA0    $BE37   JP       V0, $E37        ; Jump to V0 + E37
$EA2    $6C67   LD       VC, #67         ; Load 103 into VC
$EA4    $0F36   SYS      $F36            ; System call to F36
$EA6    $AA9D   LD       I, $A9D         ; Load A9D into I
$EA8    $36DA   SE       V6, #DA         ; Skip if V6 == 218
$EAA    $DC04   DRW      VC, V0, #4      ; Draw 4-byte sprite at VC, V0
$EAC    $843B   UNKNOWN  843B            ; Unknown 8xxx instruction
$EAE    $CC31   RND      VC, #31         ; VC = random & 31
$EB0    $A945   LD       I, $945         ; Load 945 into I
$EB2    $5553   UNKNOWN  $5553           ; Unknown 5xxx instruction
$EB4    $BB94   JP       V0, $B94        ; Jump to V0 + B94
$EB6    $D86E   DRW      V8, V6, #E      ; Draw 14-byte sprite at V8, V6
$EB8    $3CB9   SE       VC, #B9         ; Skip if VC == 185
$EBA    $1D44   JP       $D44            ; Jump to D44
$EBC    $8C62   AND      VC, V6          ; VC &= V6
$EBE    $E473   UNKNOWN  $E473           ; Unknown Exxx instruction
$EC0    $1BED   JP       $BED            ; Jump to BED
$EC2    $3966   SE       V9, #66         ; Skip if V9 == 102
$EC4    $8823   XOR      V8, V2          ; V8 ^= V2
$EC6    $C671   RND      V6, #71         ; V6 = random & 71
$EC8    $54C8   UNKNOWN  $54C8           ; Unknown 5xxx instruction
$ECA    $EDFA   UNKNOWN  $EDFA           ; Unknown Exxx instruction
$ECC    $B1F7   JP       V0, $1F7        ; Jump to V0 + 1F7
$ECE    $3131   SE       V1, #31         ; Skip if V1 == 49
$ED0    $F5EE   UNKNOWN  F5EE            ; Unknown Fxxx instruction
$ED2    $3C80   SE       VC, #80         ; Skip if VC == 128
$ED4    $6742   LD       V7, #42         ; Load 66 into V7
$ED6    $5E52   UNKNOWN  $5E52           ; Unknown 5xxx instruction
$ED8    $CA3E   RND      VA, #3E         ; VA = random & 3E
$EDA    $D1D4   DRW      V1, VD, #4      ; Draw 4-byte sprite at V1, VD
$EDC    $642B   LD       V4, #2B         ; Load 43 into V4
$EDE    $DFA1   DRW      VF, VA, #1      ; Draw 1-byte sprite at VF, VA
$EE0    $5DD0   SE       VD, VD          ; Skip if VD == VD
$EE2    $5E8E   UNKNOWN  $5E8E           ; Unknown 5xxx instruction
$EE4    $6E45   LD       VE, #45         ; Load 69 into VE
$EE6    $48FA   SNE      V8, #FA         ; Skip if V8 != 250
$EE8    $7870   ADD      V8, #70         ; Add 112 to V8
$EEA    $F0B0   UNKNOWN  F0B0            ; Unknown Fxxx instruction
$EEC    $710A   ADD      V1, #0A         ; Add 10 to V1
$EEE    $981C   UNKNOWN  $981C           ; Unknown 9xxx instruction
$EF0    $C1EB   RND      V1, #EB         ; V1 = random & EB
$EF2    $1860   JP       $860            ; Jump to 860
$EF4    $FAD0   UNKNOWN  FAD0            ; Unknown Fxxx instruction
$EF6    $54A0   SE       V4, VA          ; Skip if V4 == VA
$EF8    $7D42   ADD      VD, #42         ; Add 66 to VD
$EFA    $E998   UNKNOWN  $E998           ; Unknown Exxx instruction
$EFC    $F516   UNKNOWN  F516            ; Unknown Fxxx instruction
$EFE    $481C   SNE      V8, #1C         ; Skip if V8 != 28
$F00    $CB13   RND      VB, #13         ; VB = random & 13
$F02    $7B47   ADD      VB, #47         ; Add 71 to VB
$F04    $8378   UNKNOWN  8378            ; Unknown 8xxx instruction
$F06    $4F6F   SNE      VF, #6F         ; Skip if VF != 111
$F08    $35E4   SE       V5, #E4         ; Skip if V5 == 228
$F0A    $3A96   SE       VA, #96         ; Skip if VA == 150
$F0C    $7F37   ADD      VF, #37         ; Add 55 to VF
$F0E    $66BA   LD       V6, #BA         ; Load 186 into V6
$F10    $9284   UNKNOWN  $9284           ; Unknown 9xxx instruction
$F12    $14B0   JP       $4B0            ; Jump to 4B0
$F14    $4FE5   SNE      VF, #E5         ; Skip if VF != 229
$F16    $8136   SHR      V1              ; V1 >>= 1, VF = LSB
$F18    $3C93   SE       VC, #93         ; Skip if VC == 147
$F1A    $5353   UNKNOWN  $5353           ; Unknown 5xxx instruction
$F1C    $0E71   SYS      $E71            ; System call to E71
$F1E    $230A   CALL     $30A            ; Call subroutine at 30A
$F20    $4F5D   SNE      VF, #5D         ; Skip if VF != 93
$F22    $2442   CALL     $442            ; Call subroutine at 442
$F24    $4398   SNE      V3, #98         ; Skip if V3 != 152
$F26    $6FDD   LD       VF, #DD         ; Load 221 into VF
$F28    $7846   ADD      V8, #46         ; Add 70 to V8
$F2A    $31CF   SE       V1, #CF         ; Skip if V1 == 207
$F2C    $987A   UNKNOWN  $987A           ; Unknown 9xxx instruction
$F2E    $FFFB   UNKNOWN  FFFB            ; Unknown Fxxx instruction
$F30    $9067   UNKNOWN  $9067           ; Unknown 9xxx instruction
$F32    $2627   CALL     $627            ; Call subroutine at 627
$F34    $1ECE   JP       $ECE            ; Jump to ECE
$F36    $951D   UNKNOWN  $951D           ; Unknown 9xxx instruction
$F38    $1CB6   JP       $CB6            ; Jump to CB6
$F3A    $0CE4   SYS      $CE4            ; System call to CE4
$F3C    $7A7E   ADD      VA, #7E         ; Add 126 to VA
$F3E    $C3B3   RND      V3, #B3         ; V3 = random & B3
$F40    $55D3   UNKNOWN  $55D3           ; Unknown 5xxx instruction
$F42    $7428   ADD      V4, #28         ; Add 40 to V4
$F44    $4C99   SNE      VC, #99         ; Skip if VC != 153
$F46    $4BE5   SNE      VB, #E5         ; Skip if VB != 229
$F48    $0382   SYS      $382            ; System call to 382
$F4A    $AA16   LD       I, $A16         ; Load A16 into I
$F4C    $17D2   JP       $7D2            ; Jump to 7D2
$F4E    $B311   JP       V0, $311        ; Jump to V0 + 311
$F50    $E208   UNKNOWN  $E208           ; Unknown Exxx instruction
$F52    $0FCB   SYS      $FCB            ; System call to FCB
$F54    $E185   UNKNOWN  $E185           ; Unknown Exxx instruction
$F56    $6120   LD       V1, #20         ; Load 32 into V1
$F58    $A5AA   LD       I, $5AA         ; Load 5AA into I
$F5A    $A692   LD       I, $692         ; Load 692 into I
$F5C    $65CA   LD       V5, #CA         ; Load 202 into V5
$F5E    $9B7E   UNKNOWN  $9B7E           ; Unknown 9xxx instruction
$F60    $720E   ADD      V2, #0E         ; Add 14 to V2
$F62    $88EF   UNKNOWN  88EF            ; Unknown 8xxx instruction
$F64    $EC8F   UNKNOWN  $EC8F           ; Unknown Exxx instruction
$F66    $3175   SE       V1, #75         ; Skip if V1 == 117
$F68    $75EA   ADD      V5, #EA         ; Add 234 to V5
$F6A    $322E   SE       V2, #2E         ; Skip if V2 == 46
$F6C    $599C   UNKNOWN  $599C           ; Unknown 5xxx instruction
$F6E    $A731   LD       I, $731         ; Load 731 into I
$F70    $7CDA   ADD      VC, #DA         ; Add 218 to VC
$F72    $DBC3   DRW      VB, VC, #3      ; Draw 3-byte sprite at VB, VC
$F74    $98D9   UNKNOWN  $98D9           ; Unknown 9xxx instruction
$F76    $5215   UNKNOWN  $5215           ; Unknown 5xxx instruction
$F78    $6744   LD       V7, #44         ; Load 68 into V7
$F7A    $C975   RND      V9, #75         ; V9 = random & 75
$F7C    $B75B   JP       V0, $75B        ; Jump to V0 + 75B
$F7E    $98BA   UNKNOWN  $98BA           ; Unknown 9xxx instruction
$F80    $CC25   RND      VC, #25         ; VC = random & 25
$F82    $CD4C   RND      VD, #4C         ; VD = random & 4C
$F84    $50A6   UNKNOWN  $50A6           ; Unknown 5xxx instruction
$F86    $7C20   ADD      VC, #20         ; Add 32 to VC
$F88    $4842   SNE      V8, #42         ; Skip if V8 != 66
$F8A    $1E0D   JP       $E0D            ; Jump to E0D
$F8C    $2479   CALL     $479            ; Call subroutine at 479
$F8E    $2B06   CALL     $B06            ; Call subroutine at B06
$F90    $D548   DRW      V5, V4, #8      ; Draw 8-byte sprite at V5, V4
$F92    $9ED7   UNKNOWN  $9ED7           ; Unknown 9xxx instruction
$F94    $601F   LD       V0, #1F         ; Load 31 into V0
$F96    $6E9B   LD       VE, #9B         ; Load 155 into VE
$F98    $1678   JP       $678            ; Jump to 678
$F9A    $1986   JP       $986            ; Jump to 986
$F9C    $CE91   RND      VE, #91         ; VE = random & 91
$F9E    $2F90   CALL     $F90            ; Call subroutine at F90
$FA0    $7269   ADD      V2, #69         ; Add 105 to V2
$FA2    $F065   LD       V0, [I]         ; Load V0-V0 from I
$FA4    $4008   SNE      V0, #08         ; Skip if V0 != 8
$FA6    $80F6   SHR      V0              ; V0 >>= 1, VF = LSB
$FA8    $E256   UNKNOWN  $E256           ; Unknown Exxx instruction
$FAA    $84C3   XOR      V4, VC          ; V4 ^= VC
$FAC    $150C   JP       $50C            ; Jump to 50C
$FAE    $F432   UNKNOWN  F432            ; Unknown Fxxx instruction
$FB0    $2D64   CALL     $D64            ; Call subroutine at D64
$FB2    $60FE   LD       V0, #FE         ; Load 254 into V0
$FB4    $F151   UNKNOWN  F151            ; Unknown Fxxx instruction
$FB6    $FD2B   UNKNOWN  FD2B            ; Unknown Fxxx instruction
$FB8    $C8AF   RND      V8, #AF         ; V8 = random & AF
$FBA    $C922   RND      V9, #22         ; V9 = random & 22
$FBC    $1A68   JP       $A68            ; Jump to A68
$FBE    $0BB0   SYS      $BB0            ; System call to BB0
$FC0    $F4F8   UNKNOWN  F4F8            ; Unknown Fxxx instruction
$FC2    $2B89   CALL     $B89            ; Call subroutine at B89
$FC4    $3D42   SE       VD, #42         ; Skip if VD == 66
$FC6    $B508   JP       V0, $508        ; Jump to V0 + 508
$FC8    $9FA6   UNKNOWN  $9FA6           ; Unknown 9xxx instruction
$FCA    $C828   RND      V8, #28         ; V8 = random & 28
$FCC    $F8F3   UNKNOWN  F8F3            ; Unknown Fxxx instruction
$FCE    $3610   SE       V6, #10         ; Skip if V6 == 16
$FD0    $5526   UNKNOWN  $5526           ; Unknown 5xxx instruction
$FD2    $0783   SYS      $783            ; System call to 783
$FD4    $F44D   UNKNOWN  F44D            ; Unknown Fxxx instruction
$FD6    $8126   SHR      V1              ; V1 >>= 1, VF = LSB
$FD8    $6EE7   LD       VE, #E7         ; Load 231 into VE
$FDA    $A0F1   LD       I, $0F1         ; Load 0F1 into I
$FDC    $DF48   DRW      VF, V4, #8      ; Draw 8-byte sprite at VF, V4
$FDE    $6259   LD       V2, #59         ; Load 89 into V2
$FE0    $AC0F   LD       I, $C0F         ; Load C0F into I
$FE2    $7360   ADD      V3, #60         ; Add 96 to V3
$FE4    $88D2   AND      V8, VD          ; V8 &= VD
$FE6    $54E6   UNKNOWN  $54E6           ; Unknown 5xxx instruction
$FE8    $B035   JP       V0, $035        ; Jump to V0 + 035
$FEA    $BF79   JP       V0, $F79        ; Jump to V0 + F79
$FEC    $D649   DRW      V6, V4, #9      ; Draw 9-byte sprite at V6, V4
$FEE    $7ABD   ADD      VA, #BD         ; Add 189 to VA
$FF0    $E41A   UNKNOWN  $E41A           ; Unknown Exxx instruction
$FF2    $656E   LD       V5, #6E         ; Load 110 into V5
$FF4    $E80B   UNKNOWN  $E80B           ; Unknown Exxx instruction
$FF6    $3E14   SE       VE, #14         ; Skip if VE == 20
$FF8    $23E1   CALL     $3E1            ; Call subroutine at 3E1
$FFA    $9212   UNKNOWN  $9212           ; Unknown 9xxx instruction
$FFC    $DF30   DRW      VF, V3, #0      ; Draw 0-byte sprite at VF, V3
$FFE    $4DC6   SNE      VD, #C6         ; Skip if VD != 198

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 509 (28.4%)
  LD      : 242 (13.5%)
  JP      : 186 (10.4%)
  ADD     : 130 ( 7.3%)
  SE      : 126 ( 7.0%)
  SNE     : 123 ( 6.9%)
  RND     : 111 ( 6.2%)
  SYS     : 108 ( 6.0%)
  DRW     : 104 ( 5.8%)
  CALL    : 101 ( 5.6%)
  AND     :  11 ( 0.6%)
  SUB     :   9 ( 0.5%)
  SHR     :   9 ( 0.5%)
  SHL     :   6 ( 0.3%)
  OR      :   6 ( 0.3%)
  XOR     :   6 ( 0.3%)
  SUBN    :   5 ( 0.3%)

Memory Operations: 372 (20.8%)
Arithmetic Operations: 167 (9.3%)
