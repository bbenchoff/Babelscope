
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B5771D01_I23874_C1001_8ccd0ce71e14.ch8
ROM Size: 3584 bytes
Instructions Found: 1791

DISCOVERY INFORMATION:
Batch: 5771
Instance: 23874
Direction: ascending
Final Array: [0, 0, 0, 117, 157, 176, 234, 239]
Operations: R:0 W:1 C:82 S:1

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 104
Sort Array References:
  $20C: LD I, $FF5 ; Load FF5 into I
  $22C: LD I, $BEA ; Load BEA into I
  $24C: LD I, $74D ; Load 74D into I
  $260: LD I, $D79 ; Load D79 into I
  $26A: LD I, $78D ; Load 78D into I
  $27E: LD I, $FB2 ; Load FB2 into I
  $280: LD I, $DCB ; Load DCB into I
  $2AE: LD I, $C5A ; Load C5A into I
  $2B0: LD I, $F98 ; Load F98 into I
  $2E0: LD I, $4B5 ; Load 4B5 into I
  $310: LD I, $81A ; Load 81A into I
  $316: LD I, $D07 ; Load D07 into I
  $32E: LD I, $817 ; Load 817 into I
  $36C: LD I, $FEA ; Load FEA into I
  $39A: LD I, $BB5 ; Load BB5 into I
  $3A2: LD I, $2C6 ; Load 2C6 into I
  $3BA: LD I, $FAF ; Load FAF into I
  $3C4: LD I, $0A5 ; Load 0A5 into I
  $3E0: LD I, $8C1 ; Load 8C1 into I
  $3E6: LD I, $4BA ; Load 4BA into I
  $402: LD I, $BE0 ; Load BE0 into I
  $426: LD I, $CFC ; Load CFC into I
  $4B6: LD I, $581 ; Load 581 into I
  $4BC: LD I, $72D ; Load 72D into I
  $4C6: LD I, $61C ; Load 61C into I
  $4E8: LD I, $352 ; Load 352 into I
  $50C: LD I, $209 ; Load 209 into I
  $53E: LD I, $BF2 ; Load BF2 into I
  $540: LD I, $3D7 ; Load 3D7 into I
  $54E: LD I, $F32 ; Load F32 into I
  $566: LD I, $543 ; Load 543 into I
  $56C: LD I, $421 ; Load 421 into I
  $580: LD I, $5A6 ; Load 5A6 into I
  $5A4: LD I, $300 ; Load 300 into I
  $5CE: LD I, $39B ; Load 39B into I
  $5EC: LD I, $FBD ; Load FBD into I
  $644: LD I, $98E ; Load 98E into I
  $668: LD I, $021 ; Load 021 into I
  $6A4: LD I, $F47 ; Load F47 into I
  $6CA: LD I, $5A7 ; Load 5A7 into I
  $794: LD I, $F12 ; Load F12 into I
  $7C8: LD I, $F4A ; Load F4A into I
  $7F2: LD I, $8C9 ; Load 8C9 into I
  $828: LD I, $8EC ; Load 8EC into I
  $82C: LD I, $9D5 ; Load 9D5 into I
  $832: LD I, $D68 ; Load D68 into I
  $84A: LD I, $E71 ; Load E71 into I
  $876: LD I, $F53 ; Load F53 into I
  $88C: LD I, $DE9 ; Load DE9 into I
  $890: LD I, $ED0 ; Load ED0 into I
  $894: LD I, $EC8 ; Load EC8 into I
  $8BE: LD I, $D6B ; Load D6B into I
  $8FA: LD I, $7F4 ; Load 7F4 into I
  $942: LD I, $003 ; Load 003 into I
  $976: LD I, $6F8 ; Load 6F8 into I
  $9A4: LD I, $033 ; Load 033 into I
  $9C0: LD I, $29F ; Load 29F into I
  $9CA: LD I, $30E ; Load 30E into I
  $9CE: LD I, $A07 ; Load A07 into I
  $9DC: LD I, $9AB ; Load 9AB into I
  $9EC: LD I, $5C5 ; Load 5C5 into I
  $9FC: LD I, $650 ; Load 650 into I
  $A10: LD I, $14A ; Load 14A into I
  $A58: LD I, $C98 ; Load C98 into I
  $A7E: LD I, $DE9 ; Load DE9 into I
  $ABE: LD I, $838 ; Load 838 into I
  $AFA: LD I, $DAC ; Load DAC into I
  $B3C: LD I, $485 ; Load 485 into I
  $B5C: LD I, $609 ; Load 609 into I
  $B7E: LD I, $83D ; Load 83D into I
  $B8A: LD I, $7D0 ; Load 7D0 into I
  $BA4: LD I, $DE5 ; Load DE5 into I
  $BA6: LD I, $330 ; Load 330 into I
  $C5C: LD I, $C8C ; Load C8C into I
  $C68: LD I, $4C0 ; Load 4C0 into I
  $C74: LD I, $876 ; Load 876 into I
  $CCC: LD I, $80F ; Load 80F into I
  $CDC: LD I, $9EC ; Load 9EC into I
  $CE6: LD I, $D93 ; Load D93 into I
  $CFA: LD I, $59D ; Load 59D into I
  $D4C: LD V4, [I] ; Load V0-V4 from I
  $D52: LD I, $288 ; Load 288 into I
  $D6A: LD I, $99C ; Load 99C into I
  $DC6: LD I, $2C8 ; Load 2C8 into I
  $DD4: LD I, $EA6 ; Load EA6 into I
  $DE4: LD I, $219 ; Load 219 into I
  $E1E: LD I, $F4F ; Load F4F into I
  $E3E: LD I, $31F ; Load 31F into I
  $E64: LD I, $773 ; Load 773 into I
  $E68: LD I, $D89 ; Load D89 into I
  $E76: LD I, $574 ; Load 574 into I
  $EA6: LD I, $99F ; Load 99F into I
  $EC4: LD I, $91C ; Load 91C into I
  $ECE: LD I, $F5A ; Load F5A into I
  $EFC: LD I, $EB5 ; Load EB5 into I
  $F00: LD I, $89B ; Load 89B into I
  $F32: LD I, $CB8 ; Load CB8 into I
  $F44: LD I, $7E4 ; Load 7E4 into I
  $F54: LD I, $A3D ; Load A3D into I
  $F60: LD I, $01E ; Load 01E into I
  $F74: LD I, $056 ; Load 056 into I
  $F7A: LD I, $AE0 ; Load AE0 into I
  $F90: LD I, $038 ; Load 038 into I
  $FBA: LD I, $E2D ; Load E2D into I

CONTROL FLOW ANALYSIS:
Jumps: 229
Calls: 124
Branches: 231
Loops: 121
Loop Structures:
  $35C -> $33B (backward jump)
  $378 -> $0CC (backward jump)
  $3D6 -> $388 (backward jump)
  $3F2 -> $01C (backward jump)
  $412 -> $141 (backward jump)
  $4A8 -> $35D (backward jump)
  $55E -> $1E5 (backward jump)
  $5AC -> $389 (backward jump)
  $5B8 -> $46A (backward jump)
  $5BA -> $3E1 (backward jump)
  $5CC -> $0BB (backward jump)
  $5E6 -> $276 (backward jump)
  $626 -> $519 (backward jump)
  $64C -> $2B8 (backward jump)
  $682 -> $184 (backward jump)
  $6B2 -> $199 (backward jump)
  $6B4 -> $4E6 (backward jump)
  $6C0 -> $4E6 (backward jump)
  $6D4 -> $2D0 (backward jump)
  $6F4 -> $4D8 (backward jump)
  $70C -> $556 (backward jump)
  $724 -> $316 (backward jump)
  $72A -> $0AA (backward jump)
  $730 -> $312 (backward jump)
  $744 -> $403 (backward jump)
  $784 -> $3EA (backward jump)
  $79A -> $0BC (backward jump)
  $7D8 -> $097 (backward jump)
  $7EC -> $3E9 (backward jump)
  $7F6 -> $7A3 (backward jump)
  $80C -> $10C (backward jump)
  $846 -> $374 (backward jump)
  $856 -> $3BB (backward jump)
  $88E -> $4DD (backward jump)
  $8C2 -> $0CD (backward jump)
  $8EC -> $6ED (backward jump)
  $8EE -> $654 (backward jump)
  $928 -> $5C1 (backward jump)
  $92E -> $909 (backward jump)
  $98A -> $93D (backward jump)
  $9B2 -> $1A6 (backward jump)
  $9D8 -> $6B7 (backward jump)
  $9DE -> $56A (backward jump)
  $9E0 -> $898 (backward jump)
  $A02 -> $912 (backward jump)
  $A18 -> $9C5 (backward jump)
  $A26 -> $704 (backward jump)
  $A6A -> $9C9 (backward jump)
  $A92 -> $8BA (backward jump)
  $A9C -> $890 (backward jump)
  $AC4 -> $247 (backward jump)
  $B00 -> $798 (backward jump)
  $B16 -> $443 (backward jump)
  $B18 -> $12E (backward jump)
  $B26 -> $36F (backward jump)
  $B4E -> $7C3 (backward jump)
  $B86 -> $803 (backward jump)
  $B94 -> $AAE (backward jump)
  $BD2 -> $055 (backward jump)
  $C02 -> $2C6 (backward jump)
  $C3E -> $70D (backward jump)
  $C70 -> $3B5 (backward jump)
  $C7A -> $011 (backward jump)
  $C80 -> $B6C (backward jump)
  $C8A -> $A0C (backward jump)
  $C8E -> $AE1 (backward jump)
  $CB2 -> $22E (backward jump)
  $CBE -> $73B (backward jump)
  $CC0 -> $881 (backward jump)
  $CD4 -> $628 (backward jump)
  $CD8 -> $0EE (backward jump)
  $CDA -> $998 (backward jump)
  $CE0 -> $3C0 (backward jump)
  $CEE -> $183 (backward jump)
  $CF4 -> $36C (backward jump)
  $D1E -> $496 (backward jump)
  $D22 -> $63F (backward jump)
  $D38 -> $ADD (backward jump)
  $D3A -> $CFE (backward jump)
  $D40 -> $389 (backward jump)
  $D5A -> $BB8 (backward jump)
  $D64 -> $17F (backward jump)
  $D68 -> $493 (backward jump)
  $DB0 -> $2D0 (backward jump)
  $DB8 -> $396 (backward jump)
  $DC2 -> $ACF (backward jump)
  $E1C -> $433 (backward jump)
  $E3A -> $644 (backward jump)
  $E44 -> $C2A (backward jump)
  $E46 -> $296 (backward jump)
  $E52 -> $C8C (backward jump)
  $E8C -> $DAD (backward jump)
  $E92 -> $302 (backward jump)
  $EB4 -> $872 (backward jump)
  $ED8 -> $BCF (backward jump)
  $EDC -> $A44 (backward jump)
  $EE2 -> $738 (backward jump)
  $EE8 -> $AFB (backward jump)
  $EFE -> $5C3 (backward jump)
  $F0A -> $BB3 (backward jump)
  $F14 -> $081 (backward jump)
  $F16 -> $356 (backward jump)
  $F20 -> $3D6 (backward jump)
  $F28 -> $9D0 (backward jump)
  $F36 -> $260 (backward jump)
  $F3A -> $2B6 (backward jump)
  $F4A -> $C3B (backward jump)
  $F56 -> $5B0 (backward jump)
  $F5E -> $0D8 (backward jump)
  $F64 -> $6EB (backward jump)
  $F68 -> $87F (backward jump)
  $F7C -> $5E2 (backward jump)
  $F7E -> $C3E (backward jump)
  $F9C -> $57F (backward jump)
  $FA4 -> $C10 (backward jump)
  $FAC -> $950 (backward jump)
  $FB6 -> $656 (backward jump)
  $FC8 -> $791 (backward jump)
  $FCA -> $5E5 (backward jump)
  $FE8 -> $43D (backward jump)
  $FFE -> $3B0 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $7ABB   ADD      VA, #BB         ; Add 187 to VA
$202    $F495   UNKNOWN  F495            ; Unknown Fxxx instruction
$204    $B721   JP       V0, $721        ; Jump to V0 + 721
$206    $EEE8   UNKNOWN  $EEE8           ; Unknown Exxx instruction
$208    $F54F   UNKNOWN  F54F            ; Unknown Fxxx instruction
$20A    $37E6   SE       V7, #E6         ; Skip if V7 == 230
$20C    $AFF5   LD       I, $FF5         ; Load FF5 into I
$20E    $F13F   UNKNOWN  F13F            ; Unknown Fxxx instruction
$210    $007F   SYS      $07F            ; System call to 07F
$212    $2622   CALL     $622            ; Call subroutine at 622
$214    $33F3   SE       V3, #F3         ; Skip if V3 == 243
$216    $C11B   RND      V1, #1B         ; V1 = random & 1B
$218    $FAEA   UNKNOWN  FAEA            ; Unknown Fxxx instruction
$21A    $2221   CALL     $221            ; Call subroutine at 221
$21C    $2B82   CALL     $B82            ; Call subroutine at B82
$21E    $8C96   SHR      VC              ; VC >>= 1, VF = LSB
$220    $DB20   DRW      VB, V2, #0      ; Draw 0-byte sprite at VB, V2
$222    $879C   UNKNOWN  879C            ; Unknown 8xxx instruction
$224    $700B   ADD      V0, #0B         ; Add 11 to V0
$226    $080D   SYS      $80D            ; System call to 80D
$228    $913D   UNKNOWN  $913D           ; Unknown 9xxx instruction
$22A    $08B9   SYS      $8B9            ; System call to 8B9
$22C    $ABEA   LD       I, $BEA         ; Load BEA into I
$22E    $588B   UNKNOWN  $588B           ; Unknown 5xxx instruction
$230    $550A   UNKNOWN  $550A           ; Unknown 5xxx instruction
$232    $F9CB   UNKNOWN  F9CB            ; Unknown Fxxx instruction
$234    $76DC   ADD      V6, #DC         ; Add 220 to V6
$236    $B605   JP       V0, $605        ; Jump to V0 + 605
$238    $3881   SE       V8, #81         ; Skip if V8 == 129
$23A    $1912   JP       $912            ; Jump to 912
$23C    $3901   SE       V9, #01         ; Skip if V9 == 1
$23E    $3F52   SE       VF, #52         ; Skip if VF == 82
$240    $82D4   ADD      V2, VD          ; V2 += VD, VF = carry
$242    $438B   SNE      V3, #8B         ; Skip if V3 != 139
$244    $3069   SE       V0, #69         ; Skip if V0 == 105
$246    $95AD   UNKNOWN  $95AD           ; Unknown 9xxx instruction
$248    $6612   LD       V6, #12         ; Load 18 into V6
$24A    $7843   ADD      V8, #43         ; Add 67 to V8
$24C    $A74D   LD       I, $74D         ; Load 74D into I
$24E    $53DA   UNKNOWN  $53DA           ; Unknown 5xxx instruction
$250    $596C   UNKNOWN  $596C           ; Unknown 5xxx instruction
$252    $B728   JP       V0, $728        ; Jump to V0 + 728
$254    $9729   UNKNOWN  $9729           ; Unknown 9xxx instruction
$256    $B2FF   JP       V0, $2FF        ; Jump to V0 + 2FF
$258    $3511   SE       V5, #11         ; Skip if V5 == 17
$25A    $5272   UNKNOWN  $5272           ; Unknown 5xxx instruction
$25C    $0A10   SYS      $A10            ; System call to A10
$25E    $DC84   DRW      VC, V8, #4      ; Draw 4-byte sprite at VC, V8
$260    $AD79   LD       I, $D79         ; Load D79 into I
$262    $01D0   SYS      $1D0            ; System call to 1D0
$264    $8C28   UNKNOWN  8C28            ; Unknown 8xxx instruction
$266    $6FE6   LD       VF, #E6         ; Load 230 into VF
$268    $38B5   SE       V8, #B5         ; Skip if V8 == 181
$26A    $A78D   LD       I, $78D         ; Load 78D into I
$26C    $DF2C   DRW      VF, V2, #C      ; Draw 12-byte sprite at VF, V2
$26E    $E17E   UNKNOWN  $E17E           ; Unknown Exxx instruction
$270    $CC3A   RND      VC, #3A         ; VC = random & 3A
$272    $F195   UNKNOWN  F195            ; Unknown Fxxx instruction
$274    $C0F7   RND      V0, #F7         ; V0 = random & F7
$276    $F3FC   UNKNOWN  F3FC            ; Unknown Fxxx instruction
$278    $4536   SNE      V5, #36         ; Skip if V5 != 54
$27A    $C04C   RND      V0, #4C         ; V0 = random & 4C
$27C    $6AF4   LD       VA, #F4         ; Load 244 into VA
$27E    $AFB2   LD       I, $FB2         ; Load FB2 into I
$280    $ADCB   LD       I, $DCB         ; Load DCB into I
$282    $80C3   XOR      V0, VC          ; V0 ^= VC
$284    $48CA   SNE      V8, #CA         ; Skip if V8 != 202
$286    $C303   RND      V3, #03         ; V3 = random & 03
$288    $E17B   UNKNOWN  $E17B           ; Unknown Exxx instruction
$28A    $99B0   SNE      V9, VB          ; Skip if V9 != VB
$28C    $4CE2   SNE      VC, #E2         ; Skip if VC != 226
$28E    $3855   SE       V8, #55         ; Skip if V8 == 85
$290    $031B   SYS      $31B            ; System call to 31B
$292    $C21D   RND      V2, #1D         ; V2 = random & 1D
$294    $215B   CALL     $15B            ; Call subroutine at 15B
$296    $1911   JP       $911            ; Jump to 911
$298    $9AEB   UNKNOWN  $9AEB           ; Unknown 9xxx instruction
$29A    $23E8   CALL     $3E8            ; Call subroutine at 3E8
$29C    $C287   RND      V2, #87         ; V2 = random & 87
$29E    $86DD   UNKNOWN  86DD            ; Unknown 8xxx instruction
$2A0    $552D   UNKNOWN  $552D           ; Unknown 5xxx instruction
$2A2    $FAD8   UNKNOWN  FAD8            ; Unknown Fxxx instruction
$2A4    $9B43   UNKNOWN  $9B43           ; Unknown 9xxx instruction
$2A6    $C15A   RND      V1, #5A         ; V1 = random & 5A
$2A8    $63D1   LD       V3, #D1         ; Load 209 into V3
$2AA    $1614   JP       $614            ; Jump to 614
$2AC    $540F   UNKNOWN  $540F           ; Unknown 5xxx instruction
$2AE    $AC5A   LD       I, $C5A         ; Load C5A into I
$2B0    $AF98   LD       I, $F98         ; Load F98 into I
$2B2    $7844   ADD      V8, #44         ; Add 68 to V8
$2B4    $CB78   RND      VB, #78         ; VB = random & 78
$2B6    $5298   UNKNOWN  $5298           ; Unknown 5xxx instruction
$2B8    $00C3   SYS      $0C3            ; System call to 0C3
$2BA    $EE63   UNKNOWN  $EE63           ; Unknown Exxx instruction
$2BC    $B41A   JP       V0, $41A        ; Jump to V0 + 41A
$2BE    $BCDF   JP       V0, $CDF        ; Jump to V0 + CDF
$2C0    $7034   ADD      V0, #34         ; Add 52 to V0
$2C2    $8D74   ADD      VD, V7          ; VD += V7, VF = carry
$2C4    $5100   SE       V1, V0          ; Skip if V1 == V0
$2C6    $3D4C   SE       VD, #4C         ; Skip if VD == 76
$2C8    $1DEF   JP       $DEF            ; Jump to DEF
$2CA    $936E   UNKNOWN  $936E           ; Unknown 9xxx instruction
$2CC    $3467   SE       V4, #67         ; Skip if V4 == 103
$2CE    $E18D   UNKNOWN  $E18D           ; Unknown Exxx instruction
$2D0    $855E   SHL      V5              ; V5 <<= 1, VF = MSB
$2D2    $E9B6   UNKNOWN  $E9B6           ; Unknown Exxx instruction
$2D4    $D627   DRW      V6, V2, #7      ; Draw 7-byte sprite at V6, V2
$2D6    $5AA6   UNKNOWN  $5AA6           ; Unknown 5xxx instruction
$2D8    $F5CB   UNKNOWN  F5CB            ; Unknown Fxxx instruction
$2DA    $C3BE   RND      V3, #BE         ; V3 = random & BE
$2DC    $2A86   CALL     $A86            ; Call subroutine at A86
$2DE    $9956   UNKNOWN  $9956           ; Unknown 9xxx instruction
$2E0    $A4B5   LD       I, $4B5         ; Load 4B5 into I
$2E2    $751C   ADD      V5, #1C         ; Add 28 to V5
$2E4    $B2FF   JP       V0, $2FF        ; Jump to V0 + 2FF
$2E6    $622E   LD       V2, #2E         ; Load 46 into V2
$2E8    $1A77   JP       $A77            ; Jump to A77
$2EA    $59B7   UNKNOWN  $59B7           ; Unknown 5xxx instruction
$2EC    $9957   UNKNOWN  $9957           ; Unknown 9xxx instruction
$2EE    $7C6C   ADD      VC, #6C         ; Add 108 to VC
$2F0    $951A   UNKNOWN  $951A           ; Unknown 9xxx instruction
$2F2    $3F16   SE       VF, #16         ; Skip if VF == 22
$2F4    $E136   UNKNOWN  $E136           ; Unknown Exxx instruction
$2F6    $6712   LD       V7, #12         ; Load 18 into V7
$2F8    $23B4   CALL     $3B4            ; Call subroutine at 3B4
$2FA    $BD45   JP       V0, $D45        ; Jump to V0 + D45
$2FC    $3916   SE       V9, #16         ; Skip if V9 == 22
$2FE    $5DC2   UNKNOWN  $5DC2           ; Unknown 5xxx instruction
$302    $0075   SYS      $075            ; System call to 075
$304    $9DB0   SNE      VD, VB          ; Skip if VD != VB
$306    $EAEF   UNKNOWN  $EAEF           ; Unknown Exxx instruction
$308    $0A91   SYS      $A91            ; System call to A91
$30A    $607A   LD       V0, #7A         ; Load 122 into V0
$30C    $E11B   UNKNOWN  $E11B           ; Unknown Exxx instruction
$30E    $2435   CALL     $435            ; Call subroutine at 435
$310    $A81A   LD       I, $81A         ; Load 81A into I
$312    $6AB1   LD       VA, #B1         ; Load 177 into VA
$314    $71F6   ADD      V1, #F6         ; Add 246 to V1
$316    $AD07   LD       I, $D07         ; Load D07 into I
$318    $0DF9   SYS      $DF9            ; System call to DF9
$31A    $53E6   UNKNOWN  $53E6           ; Unknown 5xxx instruction
$31C    $4057   SNE      V0, #57         ; Skip if V0 != 87
$31E    $9FD0   SNE      VF, VD          ; Skip if VF != VD
$320    $2B72   CALL     $B72            ; Call subroutine at B72
$322    $C8C6   RND      V8, #C6         ; V8 = random & C6
$324    $5A12   UNKNOWN  $5A12           ; Unknown 5xxx instruction
$326    $601D   LD       V0, #1D         ; Load 29 into V0
$328    $257E   CALL     $57E            ; Call subroutine at 57E
$32A    $E49E   SKP      V4              ; Skip if key V4 pressed
$32C    $8D21   OR       VD, V2          ; VD |= V2
$32E    $A817   LD       I, $817         ; Load 817 into I
$330    $C004   RND      V0, #04         ; V0 = random & 04
$332    $F1C3   UNKNOWN  F1C3            ; Unknown Fxxx instruction
$334    $224A   CALL     $24A            ; Call subroutine at 24A
$336    $7EE8   ADD      VE, #E8         ; Add 232 to VE
$338    $EF18   UNKNOWN  $EF18           ; Unknown Exxx instruction
$33A    $F3F6   UNKNOWN  F3F6            ; Unknown Fxxx instruction
$33C    $24C4   CALL     $4C4            ; Call subroutine at 4C4
$33E    $BA9C   JP       V0, $A9C        ; Jump to V0 + A9C
$340    $7774   ADD      V7, #74         ; Add 116 to V7
$342    $8F17   SUBN     VF, V1          ; VF = V1 - VF, VF = !borrow
$344    $B9AE   JP       V0, $9AE        ; Jump to V0 + 9AE
$346    $F34F   UNKNOWN  F34F            ; Unknown Fxxx instruction
$348    $EFE9   UNKNOWN  $EFE9           ; Unknown Exxx instruction
$34A    $4573   SNE      V5, #73         ; Skip if V5 != 115
$34C    $C03F   RND      V0, #3F         ; V0 = random & 3F
$34E    $5B2A   UNKNOWN  $5B2A           ; Unknown 5xxx instruction
$350    $2B9D   CALL     $B9D            ; Call subroutine at B9D
$352    $7347   ADD      V3, #47         ; Add 71 to V3
$354    $BEA6   JP       V0, $EA6        ; Jump to V0 + EA6
$356    $1EDC   JP       $EDC            ; Jump to EDC
$358    $8BDA   UNKNOWN  8BDA            ; Unknown 8xxx instruction
$35A    $0C8B   SYS      $C8B            ; System call to C8B
$35C    $B33B   JP       V0, $33B        ; Jump to V0 + 33B
$35E    $1A83   JP       $A83            ; Jump to A83
$360    $D209   DRW      V2, V0, #9      ; Draw 9-byte sprite at V2, V0
$362    $58C4   UNKNOWN  $58C4           ; Unknown 5xxx instruction
$364    $785A   ADD      V8, #5A         ; Add 90 to V8
$366    $5BAC   UNKNOWN  $5BAC           ; Unknown 5xxx instruction
$368    $1E0C   JP       $E0C            ; Jump to E0C
$36A    $2EB2   CALL     $EB2            ; Call subroutine at EB2
$36C    $AFEA   LD       I, $FEA         ; Load FEA into I
$36E    $BDAA   JP       V0, $DAA        ; Jump to V0 + DAA
$370    $44E0   SNE      V4, #E0         ; Skip if V4 != 224
$372    $BF41   JP       V0, $F41        ; Jump to V0 + F41
$374    $7214   ADD      V2, #14         ; Add 20 to V2
$376    $991A   UNKNOWN  $991A           ; Unknown 9xxx instruction
$378    $10CC   JP       $0CC            ; Jump to 0CC
$37A    $16FE   JP       $6FE            ; Jump to 6FE
$37C    $ED24   UNKNOWN  $ED24           ; Unknown Exxx instruction
$37E    $4FBF   SNE      VF, #BF         ; Skip if VF != 191
$380    $E476   UNKNOWN  $E476           ; Unknown Exxx instruction
$382    $1AD6   JP       $AD6            ; Jump to AD6
$384    $6FEB   LD       VF, #EB         ; Load 235 into VF
$386    $55EA   UNKNOWN  $55EA           ; Unknown 5xxx instruction
$388    $4CB4   SNE      VC, #B4         ; Skip if VC != 180
$38A    $36AA   SE       V6, #AA         ; Skip if V6 == 170
$38C    $6C33   LD       VC, #33         ; Load 51 into VC
$38E    $BE10   JP       V0, $E10        ; Jump to V0 + E10
$390    $873D   UNKNOWN  873D            ; Unknown 8xxx instruction
$392    $C32D   RND      V3, #2D         ; V3 = random & 2D
$394    $4B14   SNE      VB, #14         ; Skip if VB != 20
$396    $15A9   JP       $5A9            ; Jump to 5A9
$398    $7644   ADD      V6, #44         ; Add 68 to V6
$39A    $ABB5   LD       I, $BB5         ; Load BB5 into I
$39C    $1407   JP       $407            ; Jump to 407
$39E    $DC1E   DRW      VC, V1, #E      ; Draw 14-byte sprite at VC, V1
$3A0    $FEED   UNKNOWN  FEED            ; Unknown Fxxx instruction
$3A2    $A2C6   LD       I, $2C6         ; Load 2C6 into I
$3A4    $8AAA   UNKNOWN  8AAA            ; Unknown 8xxx instruction
$3A6    $32EA   SE       V2, #EA         ; Skip if V2 == 234
$3A8    $0374   SYS      $374            ; System call to 374
$3AA    $00B3   SYS      $0B3            ; System call to 0B3
$3AC    $F03E   UNKNOWN  F03E            ; Unknown Fxxx instruction
$3AE    $1646   JP       $646            ; Jump to 646
$3B0    $D5B7   DRW      V5, VB, #7      ; Draw 7-byte sprite at V5, VB
$3B2    $E18B   UNKNOWN  $E18B           ; Unknown Exxx instruction
$3B4    $9862   UNKNOWN  $9862           ; Unknown 9xxx instruction
$3B6    $1B61   JP       $B61            ; Jump to B61
$3B8    $E0D2   UNKNOWN  $E0D2           ; Unknown Exxx instruction
$3BA    $AFAF   LD       I, $FAF         ; Load FAF into I
$3BC    $BF9A   JP       V0, $F9A        ; Jump to V0 + F9A
$3BE    $4A18   SNE      VA, #18         ; Skip if VA != 24
$3C0    $EC96   UNKNOWN  $EC96           ; Unknown Exxx instruction
$3C2    $C27A   RND      V2, #7A         ; V2 = random & 7A
$3C4    $A0A5   LD       I, $0A5         ; Load 0A5 into I
$3C6    $22BD   CALL     $2BD            ; Call subroutine at 2BD
$3C8    $758C   ADD      V5, #8C         ; Add 140 to V5
$3CA    $2A0D   CALL     $A0D            ; Call subroutine at A0D
$3CC    $0A6D   SYS      $A6D            ; System call to A6D
$3CE    $3A91   SE       VA, #91         ; Skip if VA == 145
$3D0    $8A0A   UNKNOWN  8A0A            ; Unknown 8xxx instruction
$3D2    $E92E   UNKNOWN  $E92E           ; Unknown Exxx instruction
$3D4    $33FF   SE       V3, #FF         ; Skip if V3 == 255
$3D6    $B388   JP       V0, $388        ; Jump to V0 + 388
$3D8    $154B   JP       $54B            ; Jump to 54B
$3DA    $22BD   CALL     $2BD            ; Call subroutine at 2BD
$3DC    $F3E3   UNKNOWN  F3E3            ; Unknown Fxxx instruction
$3DE    $62A4   LD       V2, #A4         ; Load 164 into V2
$3E0    $A8C1   LD       I, $8C1         ; Load 8C1 into I
$3E2    $4E39   SNE      VE, #39         ; Skip if VE != 57
$3E4    $DD39   DRW      VD, V3, #9      ; Draw 9-byte sprite at VD, V3
$3E6    $A4BA   LD       I, $4BA         ; Load 4BA into I
$3E8    $3040   SE       V0, #40         ; Skip if V0 == 64
$3EA    $7E66   ADD      VE, #66         ; Add 102 to VE
$3EC    $F825   UNKNOWN  F825            ; Unknown Fxxx instruction
$3EE    $68B1   LD       V8, #B1         ; Load 177 into V8
$3F0    $2483   CALL     $483            ; Call subroutine at 483
$3F2    $101C   JP       $01C            ; Jump to 01C
$3F4    $3DB2   SE       VD, #B2         ; Skip if VD == 178
$3F6    $CAC4   RND      VA, #C4         ; VA = random & C4
$3F8    $BEF8   JP       V0, $EF8        ; Jump to V0 + EF8
$3FA    $1583   JP       $583            ; Jump to 583
$3FC    $0A96   SYS      $A96            ; System call to A96
$3FE    $178F   JP       $78F            ; Jump to 78F
$400    $FEF8   UNKNOWN  FEF8            ; Unknown Fxxx instruction
$402    $ABE0   LD       I, $BE0         ; Load BE0 into I
$404    $B805   JP       V0, $805        ; Jump to V0 + 805
$406    $27C6   CALL     $7C6            ; Call subroutine at 7C6
$408    $794F   ADD      V9, #4F         ; Add 79 to V9
$40A    $6697   LD       V6, #97         ; Load 151 into V6
$40C    $6E64   LD       VE, #64         ; Load 100 into VE
$40E    $FCC7   UNKNOWN  FCC7            ; Unknown Fxxx instruction
$410    $B484   JP       V0, $484        ; Jump to V0 + 484
$412    $B141   JP       V0, $141        ; Jump to V0 + 141
$414    $1AB4   JP       $AB4            ; Jump to AB4
$416    $7C27   ADD      VC, #27         ; Add 39 to VC
$418    $2A29   CALL     $A29            ; Call subroutine at A29
$41A    $81D6   SHR      V1              ; V1 >>= 1, VF = LSB
$41C    $774E   ADD      V7, #4E         ; Add 78 to V7
$41E    $3B8E   SE       VB, #8E         ; Skip if VB == 142
$420    $3AA6   SE       VA, #A6         ; Skip if VA == 166
$422    $26E9   CALL     $6E9            ; Call subroutine at 6E9
$424    $CE61   RND      VE, #61         ; VE = random & 61
$426    $ACFC   LD       I, $CFC         ; Load CFC into I
$428    $599B   UNKNOWN  $599B           ; Unknown 5xxx instruction
$42A    $2E28   CALL     $E28            ; Call subroutine at E28
$42C    $4871   SNE      V8, #71         ; Skip if V8 != 113
$42E    $4337   SNE      V3, #37         ; Skip if V3 != 55
$430    $240D   CALL     $40D            ; Call subroutine at 40D
$432    $6089   LD       V0, #89         ; Load 137 into V0
$434    $5864   UNKNOWN  $5864           ; Unknown 5xxx instruction
$436    $0784   SYS      $784            ; System call to 784
$438    $5C19   UNKNOWN  $5C19           ; Unknown 5xxx instruction
$43A    $ED0C   UNKNOWN  $ED0C           ; Unknown Exxx instruction
$43C    $7F58   ADD      VF, #58         ; Add 88 to VF
$43E    $6C5A   LD       VC, #5A         ; Load 90 into VC
$440    $5689   UNKNOWN  $5689           ; Unknown 5xxx instruction
$442    $167A   JP       $67A            ; Jump to 67A
$444    $1F77   JP       $F77            ; Jump to F77
$446    $E014   UNKNOWN  $E014           ; Unknown Exxx instruction
$448    $7BCF   ADD      VB, #CF         ; Add 207 to VB
$44A    $9BD8   UNKNOWN  $9BD8           ; Unknown 9xxx instruction
$44C    $4805   SNE      V8, #05         ; Skip if V8 != 5
$44E    $0817   SYS      $817            ; System call to 817
$450    $D147   DRW      V1, V4, #7      ; Draw 7-byte sprite at V1, V4
$452    $EFC9   UNKNOWN  $EFC9           ; Unknown Exxx instruction
$454    $0244   SYS      $244            ; System call to 244
$456    $D124   DRW      V1, V2, #4      ; Draw 4-byte sprite at V1, V2
$458    $2060   CALL     $060            ; Call subroutine at 060
$45A    $7507   ADD      V5, #07         ; Add 7 to V5
$45C    $D81A   DRW      V8, V1, #A      ; Draw 10-byte sprite at V8, V1
$45E    $BF26   JP       V0, $F26        ; Jump to V0 + F26
$460    $8D23   XOR      VD, V2          ; VD ^= V2
$462    $97B2   UNKNOWN  $97B2           ; Unknown 9xxx instruction
$464    $D8A4   DRW      V8, VA, #4      ; Draw 4-byte sprite at V8, VA
$466    $9E22   UNKNOWN  $9E22           ; Unknown 9xxx instruction
$468    $7DA8   ADD      VD, #A8         ; Add 168 to VD
$46A    $0EEB   SYS      $EEB            ; System call to EEB
$46C    $3E0D   SE       VE, #0D         ; Skip if VE == 13
$46E    $7682   ADD      V6, #82         ; Add 130 to V6
$470    $DDFE   DRW      VD, VF, #E      ; Draw 14-byte sprite at VD, VF
$472    $7A13   ADD      VA, #13         ; Add 19 to VA
$474    $E1F8   UNKNOWN  $E1F8           ; Unknown Exxx instruction
$476    $E70B   UNKNOWN  $E70B           ; Unknown Exxx instruction
$478    $6956   LD       V9, #56         ; Load 86 into V9
$47A    $3DEB   SE       VD, #EB         ; Skip if VD == 235
$47C    $4908   SNE      V9, #08         ; Skip if V9 != 8
$47E    $23CE   CALL     $3CE            ; Call subroutine at 3CE
$480    $6151   LD       V1, #51         ; Load 81 into V1
$482    $39D1   SE       V9, #D1         ; Skip if V9 == 209
$484    $8B55   SUB      VB, V5          ; VB -= V5, VF = !borrow
$486    $8890   LD       V8, V9          ; V8 = V9
$488    $04F2   SYS      $4F2            ; System call to 4F2
$48A    $68C5   LD       V8, #C5         ; Load 197 into V8
$48C    $FC08   UNKNOWN  FC08            ; Unknown Fxxx instruction
$48E    $6EBB   LD       VE, #BB         ; Load 187 into VE
$490    $EC36   UNKNOWN  $EC36           ; Unknown Exxx instruction
$492    $FCF6   UNKNOWN  FCF6            ; Unknown Fxxx instruction
$494    $6345   LD       V3, #45         ; Load 69 into V3
$496    $3D7C   SE       VD, #7C         ; Skip if VD == 124
$498    $F6FE   UNKNOWN  F6FE            ; Unknown Fxxx instruction
$49A    $F88A   UNKNOWN  F88A            ; Unknown Fxxx instruction
$49C    $EC71   UNKNOWN  $EC71           ; Unknown Exxx instruction
$49E    $8013   XOR      V0, V1          ; V0 ^= V1
$4A0    $2898   CALL     $898            ; Call subroutine at 898
$4A2    $4C13   SNE      VC, #13         ; Skip if VC != 19
$4A4    $1B5B   JP       $B5B            ; Jump to B5B
$4A6    $8D47   SUBN     VD, V4          ; VD = V4 - VD, VF = !borrow
$4A8    $B35D   JP       V0, $35D        ; Jump to V0 + 35D
$4AA    $D75E   DRW      V7, V5, #E      ; Draw 14-byte sprite at V7, V5
$4AC    $70EA   ADD      V0, #EA         ; Add 234 to V0
$4AE    $F94F   UNKNOWN  F94F            ; Unknown Fxxx instruction
$4B0    $8181   OR       V1, V8          ; V1 |= V8
$4B2    $274B   CALL     $74B            ; Call subroutine at 74B
$4B4    $6B60   LD       VB, #60         ; Load 96 into VB
$4B6    $A581   LD       I, $581         ; Load 581 into I
$4B8    $7314   ADD      V3, #14         ; Add 20 to V3
$4BA    $D8A9   DRW      V8, VA, #9      ; Draw 9-byte sprite at V8, VA
$4BC    $A72D   LD       I, $72D         ; Load 72D into I
$4BE    $87B9   UNKNOWN  87B9            ; Unknown 8xxx instruction
$4C0    $88C9   UNKNOWN  88C9            ; Unknown 8xxx instruction
$4C2    $8E4C   UNKNOWN  8E4C            ; Unknown 8xxx instruction
$4C4    $6D98   LD       VD, #98         ; Load 152 into VD
$4C6    $A61C   LD       I, $61C         ; Load 61C into I
$4C8    $E44F   UNKNOWN  $E44F           ; Unknown Exxx instruction
$4CA    $9536   UNKNOWN  $9536           ; Unknown 9xxx instruction
$4CC    $57C7   UNKNOWN  $57C7           ; Unknown 5xxx instruction
$4CE    $2818   CALL     $818            ; Call subroutine at 818
$4D0    $099F   SYS      $99F            ; System call to 99F
$4D2    $40FF   SNE      V0, #FF         ; Skip if V0 != 255
$4D4    $2A10   CALL     $A10            ; Call subroutine at A10
$4D6    $B519   JP       V0, $519        ; Jump to V0 + 519
$4D8    $BF80   JP       V0, $F80        ; Jump to V0 + F80
$4DA    $0761   SYS      $761            ; System call to 761
$4DC    $6633   LD       V6, #33         ; Load 51 into V6
$4DE    $0DAC   SYS      $DAC            ; System call to DAC
$4E0    $62C6   LD       V2, #C6         ; Load 198 into V2
$4E2    $8845   SUB      V8, V4          ; V8 -= V4, VF = !borrow
$4E4    $0809   SYS      $809            ; System call to 809
$4E6    $989B   UNKNOWN  $989B           ; Unknown 9xxx instruction
$4E8    $A352   LD       I, $352         ; Load 352 into I
$4EA    $FA15   LD       DT, VA          ; Delay timer = VA
$4EC    $58DA   UNKNOWN  $58DA           ; Unknown 5xxx instruction
$4EE    $4FE7   SNE      VF, #E7         ; Skip if VF != 231
$4F0    $91F1   UNKNOWN  $91F1           ; Unknown 9xxx instruction
$4F2    $7842   ADD      V8, #42         ; Add 66 to V8
$4F4    $67D2   LD       V7, #D2         ; Load 210 into V7
$4F6    $5C0A   UNKNOWN  $5C0A           ; Unknown 5xxx instruction
$4F8    $DC55   DRW      VC, V5, #5      ; Draw 5-byte sprite at VC, V5
$4FA    $7023   ADD      V0, #23         ; Add 35 to V0
$4FC    $3874   SE       V8, #74         ; Skip if V8 == 116
$4FE    $6BC2   LD       VB, #C2         ; Load 194 into VB
$500    $DEA7   DRW      VE, VA, #7      ; Draw 7-byte sprite at VE, VA
$502    $E9D7   UNKNOWN  $E9D7           ; Unknown Exxx instruction
$504    $7F09   ADD      VF, #09         ; Add 9 to VF
$506    $DF46   DRW      VF, V4, #6      ; Draw 6-byte sprite at VF, V4
$508    $630D   LD       V3, #0D         ; Load 13 into V3
$50A    $BEE0   JP       V0, $EE0        ; Jump to V0 + EE0
$50C    $A209   LD       I, $209         ; Load 209 into I
$50E    $49C7   SNE      V9, #C7         ; Skip if V9 != 199
$510    $46C3   SNE      V6, #C3         ; Skip if V6 != 195
$512    $6177   LD       V1, #77         ; Load 119 into V1
$514    $5159   UNKNOWN  $5159           ; Unknown 5xxx instruction
$516    $4892   SNE      V8, #92         ; Skip if V8 != 146
$518    $47D2   SNE      V7, #D2         ; Skip if V7 != 210
$51A    $8772   AND      V7, V7          ; V7 &= V7
$51C    $5C45   UNKNOWN  $5C45           ; Unknown 5xxx instruction
$51E    $72E2   ADD      V2, #E2         ; Add 226 to V2
$520    $D0A6   DRW      V0, VA, #6      ; Draw 6-byte sprite at V0, VA
$522    $6E53   LD       VE, #53         ; Load 83 into VE
$524    $277D   CALL     $77D            ; Call subroutine at 77D
$526    $401F   SNE      V0, #1F         ; Skip if V0 != 31
$528    $9AFE   UNKNOWN  $9AFE           ; Unknown 9xxx instruction
$52A    $BD9A   JP       V0, $D9A        ; Jump to V0 + D9A
$52C    $29B3   CALL     $9B3            ; Call subroutine at 9B3
$52E    $7D25   ADD      VD, #25         ; Add 37 to VD
$530    $3465   SE       V4, #65         ; Skip if V4 == 101
$532    $670E   LD       V7, #0E         ; Load 14 into V7
$534    $2501   CALL     $501            ; Call subroutine at 501
$536    $6805   LD       V8, #05         ; Load 5 into V8
$538    $06DB   SYS      $6DB            ; System call to 6DB
$53A    $7639   ADD      V6, #39         ; Add 57 to V6
$53C    $3EA1   SE       VE, #A1         ; Skip if VE == 161
$53E    $ABF2   LD       I, $BF2         ; Load BF2 into I
$540    $A3D7   LD       I, $3D7         ; Load 3D7 into I
$542    $D016   DRW      V0, V1, #6      ; Draw 6-byte sprite at V0, V1
$544    $0C20   SYS      $C20            ; System call to C20
$546    $9D18   UNKNOWN  $9D18           ; Unknown 9xxx instruction
$548    $15EB   JP       $5EB            ; Jump to 5EB
$54A    $B5EA   JP       V0, $5EA        ; Jump to V0 + 5EA
$54C    $3986   SE       V9, #86         ; Skip if V9 == 134
$54E    $AF32   LD       I, $F32         ; Load F32 into I
$550    $2339   CALL     $339            ; Call subroutine at 339
$552    $718C   ADD      V1, #8C         ; Add 140 to V1
$554    $6036   LD       V0, #36         ; Load 54 into V0
$556    $49B4   SNE      V9, #B4         ; Skip if V9 != 180
$558    $DB7A   DRW      VB, V7, #A      ; Draw 10-byte sprite at VB, V7
$55A    $0422   SYS      $422            ; System call to 422
$55C    $EE76   UNKNOWN  $EE76           ; Unknown Exxx instruction
$55E    $11E5   JP       $1E5            ; Jump to 1E5
$560    $BFC0   JP       V0, $FC0        ; Jump to V0 + FC0
$562    $D6BE   DRW      V6, VB, #E      ; Draw 14-byte sprite at V6, VB
$564    $E0D3   UNKNOWN  $E0D3           ; Unknown Exxx instruction
$566    $A543   LD       I, $543         ; Load 543 into I
$568    $F0AC   UNKNOWN  F0AC            ; Unknown Fxxx instruction
$56A    $9C1D   UNKNOWN  $9C1D           ; Unknown 9xxx instruction
$56C    $A421   LD       I, $421         ; Load 421 into I
$56E    $08BB   SYS      $8BB            ; System call to 8BB
$570    $F968   UNKNOWN  F968            ; Unknown Fxxx instruction
$572    $3723   SE       V7, #23         ; Skip if V7 == 35
$574    $9EC9   UNKNOWN  $9EC9           ; Unknown 9xxx instruction
$576    $067D   SYS      $67D            ; System call to 67D
$578    $9158   UNKNOWN  $9158           ; Unknown 9xxx instruction
$57A    $4ADD   SNE      VA, #DD         ; Skip if VA != 221
$57C    $F654   UNKNOWN  F654            ; Unknown Fxxx instruction
$57E    $FE0B   UNKNOWN  FE0B            ; Unknown Fxxx instruction
$580    $A5A6   LD       I, $5A6         ; Load 5A6 into I
$582    $431D   SNE      V3, #1D         ; Skip if V3 != 29
$584    $3BB3   SE       VB, #B3         ; Skip if VB == 179
$586    $0500   SYS      $500            ; System call to 500
$588    $18F0   JP       $8F0            ; Jump to 8F0
$58A    $F673   UNKNOWN  F673            ; Unknown Fxxx instruction
$58C    $C804   RND      V8, #04         ; V8 = random & 04
$58E    $7FBB   ADD      VF, #BB         ; Add 187 to VF
$590    $8CE8   UNKNOWN  8CE8            ; Unknown 8xxx instruction
$592    $8FB8   UNKNOWN  8FB8            ; Unknown 8xxx instruction
$594    $E3D4   UNKNOWN  $E3D4           ; Unknown Exxx instruction
$596    $87F8   UNKNOWN  87F8            ; Unknown 8xxx instruction
$598    $C3F8   RND      V3, #F8         ; V3 = random & F8
$59A    $5701   UNKNOWN  $5701           ; Unknown 5xxx instruction
$59C    $506F   UNKNOWN  $506F           ; Unknown 5xxx instruction
$59E    $C425   RND      V4, #25         ; V4 = random & 25
$5A0    $E5DF   UNKNOWN  $E5DF           ; Unknown Exxx instruction
$5A2    $3E5A   SE       VE, #5A         ; Skip if VE == 90
$5A4    $A300   LD       I, $300         ; Load 300 into I
$5A6    $FF33   LD       B, VF           ; Store BCD of VF at I, I+1, I+2
$5A8    $989C   UNKNOWN  $989C           ; Unknown 9xxx instruction
$5AA    $796A   ADD      V9, #6A         ; Add 106 to V9
$5AC    $1389   JP       $389            ; Jump to 389
$5AE    $59FB   UNKNOWN  $59FB           ; Unknown 5xxx instruction
$5B0    $C555   RND      V5, #55         ; V5 = random & 55
$5B2    $5437   UNKNOWN  $5437           ; Unknown 5xxx instruction
$5B4    $6B55   LD       VB, #55         ; Load 85 into VB
$5B6    $42E7   SNE      V2, #E7         ; Skip if V2 != 231
$5B8    $146A   JP       $46A            ; Jump to 46A
$5BA    $13E1   JP       $3E1            ; Jump to 3E1
$5BC    $038D   SYS      $38D            ; System call to 38D
$5BE    $194E   JP       $94E            ; Jump to 94E
$5C0    $50E8   UNKNOWN  $50E8           ; Unknown 5xxx instruction
$5C2    $EADB   UNKNOWN  $EADB           ; Unknown Exxx instruction
$5C4    $35EE   SE       V5, #EE         ; Skip if V5 == 238
$5C6    $B853   JP       V0, $853        ; Jump to V0 + 853
$5C8    $41E9   SNE      V1, #E9         ; Skip if V1 != 233
$5CA    $5768   UNKNOWN  $5768           ; Unknown 5xxx instruction
$5CC    $10BB   JP       $0BB            ; Jump to 0BB
$5CE    $A39B   LD       I, $39B         ; Load 39B into I
$5D0    $F2A7   UNKNOWN  F2A7            ; Unknown Fxxx instruction
$5D2    $6004   LD       V0, #04         ; Load 4 into V0
$5D4    $E5E1   UNKNOWN  $E5E1           ; Unknown Exxx instruction
$5D6    $0F13   SYS      $F13            ; System call to F13
$5D8    $D6E8   DRW      V6, VE, #8      ; Draw 8-byte sprite at V6, VE
$5DA    $EC7E   UNKNOWN  $EC7E           ; Unknown Exxx instruction
$5DC    $E2FA   UNKNOWN  $E2FA           ; Unknown Exxx instruction
$5DE    $C4AB   RND      V4, #AB         ; V4 = random & AB
$5E0    $E827   UNKNOWN  $E827           ; Unknown Exxx instruction
$5E2    $3BBB   SE       VB, #BB         ; Skip if VB == 187
$5E4    $91AF   UNKNOWN  $91AF           ; Unknown 9xxx instruction
$5E6    $1276   JP       $276            ; Jump to 276
$5E8    $7BA0   ADD      VB, #A0         ; Add 160 to VB
$5EA    $C39D   RND      V3, #9D         ; V3 = random & 9D
$5EC    $AFBD   LD       I, $FBD         ; Load FBD into I
$5EE    $3008   SE       V0, #08         ; Skip if V0 == 8
$5F0    $B771   JP       V0, $771        ; Jump to V0 + 771
$5F2    $2688   CALL     $688            ; Call subroutine at 688
$5F4    $F63A   UNKNOWN  F63A            ; Unknown Fxxx instruction
$5F6    $3AC1   SE       VA, #C1         ; Skip if VA == 193
$5F8    $2E37   CALL     $E37            ; Call subroutine at E37
$5FA    $2AA7   CALL     $AA7            ; Call subroutine at AA7
$5FC    $7EF4   ADD      VE, #F4         ; Add 244 to VE
$5FE    $71D7   ADD      V1, #D7         ; Add 215 to V1
$600    $BDFC   JP       V0, $DFC        ; Jump to V0 + DFC
$602    $CCE1   RND      VC, #E1         ; VC = random & E1
$604    $3C93   SE       VC, #93         ; Skip if VC == 147
$606    $599A   UNKNOWN  $599A           ; Unknown 5xxx instruction
$608    $C79E   RND      V7, #9E         ; V7 = random & 9E
$60A    $1DCB   JP       $DCB            ; Jump to DCB
$60C    $C0D9   RND      V0, #D9         ; V0 = random & D9
$60E    $0BC6   SYS      $BC6            ; System call to BC6
$610    $D342   DRW      V3, V4, #2      ; Draw 2-byte sprite at V3, V4
$612    $D762   DRW      V7, V6, #2      ; Draw 2-byte sprite at V7, V6
$614    $EBB6   UNKNOWN  $EBB6           ; Unknown Exxx instruction
$616    $02B8   SYS      $2B8            ; System call to 2B8
$618    $1B3A   JP       $B3A            ; Jump to B3A
$61A    $210F   CALL     $10F            ; Call subroutine at 10F
$61C    $7EFE   ADD      VE, #FE         ; Add 254 to VE
$61E    $2EA2   CALL     $EA2            ; Call subroutine at EA2
$620    $1D44   JP       $D44            ; Jump to D44
$622    $FCD5   UNKNOWN  FCD5            ; Unknown Fxxx instruction
$624    $0A0D   SYS      $A0D            ; System call to A0D
$626    $1519   JP       $519            ; Jump to 519
$628    $873C   UNKNOWN  873C            ; Unknown 8xxx instruction
$62A    $8CEA   UNKNOWN  8CEA            ; Unknown 8xxx instruction
$62C    $7D27   ADD      VD, #27         ; Add 39 to VD
$62E    $0DAC   SYS      $DAC            ; System call to DAC
$630    $17EB   JP       $7EB            ; Jump to 7EB
$632    $0EFA   SYS      $EFA            ; System call to EFA
$634    $0182   SYS      $182            ; System call to 182
$636    $59CB   UNKNOWN  $59CB           ; Unknown 5xxx instruction
$638    $4DAE   SNE      VD, #AE         ; Skip if VD != 174
$63A    $B81C   JP       V0, $81C        ; Jump to V0 + 81C
$63C    $5895   UNKNOWN  $5895           ; Unknown 5xxx instruction
$63E    $C9A5   RND      V9, #A5         ; V9 = random & A5
$640    $9381   UNKNOWN  $9381           ; Unknown 9xxx instruction
$642    $5B21   UNKNOWN  $5B21           ; Unknown 5xxx instruction
$644    $A98E   LD       I, $98E         ; Load 98E into I
$646    $1729   JP       $729            ; Jump to 729
$648    $7103   ADD      V1, #03         ; Add 3 to V1
$64A    $668D   LD       V6, #8D         ; Load 141 into V6
$64C    $12B8   JP       $2B8            ; Jump to 2B8
$64E    $E03B   UNKNOWN  $E03B           ; Unknown Exxx instruction
$650    $4FB0   SNE      VF, #B0         ; Skip if VF != 176
$652    $BE31   JP       V0, $E31        ; Jump to V0 + E31
$654    $88DD   UNKNOWN  88DD            ; Unknown 8xxx instruction
$656    $3B7C   SE       VB, #7C         ; Skip if VB == 124
$658    $D265   DRW      V2, V6, #5      ; Draw 5-byte sprite at V2, V6
$65A    $28DA   CALL     $8DA            ; Call subroutine at 8DA
$65C    $EFA7   UNKNOWN  $EFA7           ; Unknown Exxx instruction
$65E    $8BF9   UNKNOWN  8BF9            ; Unknown 8xxx instruction
$660    $5D7B   UNKNOWN  $5D7B           ; Unknown 5xxx instruction
$662    $62EC   LD       V2, #EC         ; Load 236 into V2
$664    $1C09   JP       $C09            ; Jump to C09
$666    $67B9   LD       V7, #B9         ; Load 185 into V7
$668    $A021   LD       I, $021         ; Load 021 into I
$66A    $3D90   SE       VD, #90         ; Skip if VD == 144
$66C    $E496   UNKNOWN  $E496           ; Unknown Exxx instruction
$66E    $20C9   CALL     $0C9            ; Call subroutine at 0C9
$670    $2B1E   CALL     $B1E            ; Call subroutine at B1E
$672    $D408   DRW      V4, V0, #8      ; Draw 8-byte sprite at V4, V0
$674    $2441   CALL     $441            ; Call subroutine at 441
$676    $909A   UNKNOWN  $909A           ; Unknown 9xxx instruction
$678    $C29B   RND      V2, #9B         ; V2 = random & 9B
$67A    $2078   CALL     $078            ; Call subroutine at 078
$67C    $5FAE   UNKNOWN  $5FAE           ; Unknown 5xxx instruction
$67E    $283A   CALL     $83A            ; Call subroutine at 83A
$680    $31F8   SE       V1, #F8         ; Skip if V1 == 248
$682    $B184   JP       V0, $184        ; Jump to V0 + 184
$684    $6A5E   LD       VA, #5E         ; Load 94 into VA
$686    $1BB3   JP       $BB3            ; Jump to BB3
$688    $9144   UNKNOWN  $9144           ; Unknown 9xxx instruction
$68A    $490B   SNE      V9, #0B         ; Skip if V9 != 11
$68C    $9E14   UNKNOWN  $9E14           ; Unknown 9xxx instruction
$68E    $63B4   LD       V3, #B4         ; Load 180 into V3
$690    $9FE6   UNKNOWN  $9FE6           ; Unknown 9xxx instruction
$692    $8402   AND      V4, V0          ; V4 &= V0
$694    $4525   SNE      V5, #25         ; Skip if V5 != 37
$696    $4BE3   SNE      VB, #E3         ; Skip if VB != 227
$698    $C089   RND      V0, #89         ; V0 = random & 89
$69A    $0E58   SYS      $E58            ; System call to E58
$69C    $D5D5   DRW      V5, VD, #5      ; Draw 5-byte sprite at V5, VD
$69E    $DA53   DRW      VA, V5, #3      ; Draw 3-byte sprite at VA, V5
$6A0    $F87C   UNKNOWN  F87C            ; Unknown Fxxx instruction
$6A2    $4119   SNE      V1, #19         ; Skip if V1 != 25
$6A4    $AF47   LD       I, $F47         ; Load F47 into I
$6A6    $5074   UNKNOWN  $5074           ; Unknown 5xxx instruction
$6A8    $7ACA   ADD      VA, #CA         ; Add 202 to VA
$6AA    $D74B   DRW      V7, V4, #B      ; Draw 11-byte sprite at V7, V4
$6AC    $1C73   JP       $C73            ; Jump to C73
$6AE    $0905   SYS      $905            ; System call to 905
$6B0    $CFD6   RND      VF, #D6         ; VF = random & D6
$6B2    $B199   JP       V0, $199        ; Jump to V0 + 199
$6B4    $14E6   JP       $4E6            ; Jump to 4E6
$6B6    $E63E   UNKNOWN  $E63E           ; Unknown Exxx instruction
$6B8    $19C0   JP       $9C0            ; Jump to 9C0
$6BA    $04A9   SYS      $4A9            ; System call to 4A9
$6BC    $5824   UNKNOWN  $5824           ; Unknown 5xxx instruction
$6BE    $6563   LD       V5, #63         ; Load 99 into V5
$6C0    $B4E6   JP       V0, $4E6        ; Jump to V0 + 4E6
$6C2    $DB26   DRW      VB, V2, #6      ; Draw 6-byte sprite at VB, V2
$6C4    $88DB   UNKNOWN  88DB            ; Unknown 8xxx instruction
$6C6    $2C73   CALL     $C73            ; Call subroutine at C73
$6C8    $301E   SE       V0, #1E         ; Skip if V0 == 30
$6CA    $A5A7   LD       I, $5A7         ; Load 5A7 into I
$6CC    $9F29   UNKNOWN  $9F29           ; Unknown 9xxx instruction
$6CE    $BB94   JP       V0, $B94        ; Jump to V0 + B94
$6D0    $6437   LD       V4, #37         ; Load 55 into V4
$6D2    $F74C   UNKNOWN  F74C            ; Unknown Fxxx instruction
$6D4    $12D0   JP       $2D0            ; Jump to 2D0
$6D6    $F24D   UNKNOWN  F24D            ; Unknown Fxxx instruction
$6D8    $0B41   SYS      $B41            ; System call to B41
$6DA    $FB73   UNKNOWN  FB73            ; Unknown Fxxx instruction
$6DC    $9FA6   UNKNOWN  $9FA6           ; Unknown 9xxx instruction
$6DE    $947E   UNKNOWN  $947E           ; Unknown 9xxx instruction
$6E0    $17BC   JP       $7BC            ; Jump to 7BC
$6E2    $5F6E   UNKNOWN  $5F6E           ; Unknown 5xxx instruction
$6E4    $2BCD   CALL     $BCD            ; Call subroutine at BCD
$6E6    $03FD   SYS      $3FD            ; System call to 3FD
$6E8    $2F6E   CALL     $F6E            ; Call subroutine at F6E
$6EA    $EE42   UNKNOWN  $EE42           ; Unknown Exxx instruction
$6EC    $5F6D   UNKNOWN  $5F6D           ; Unknown 5xxx instruction
$6EE    $8035   SUB      V0, V3          ; V0 -= V3, VF = !borrow
$6F0    $4B94   SNE      VB, #94         ; Skip if VB != 148
$6F2    $68ED   LD       V8, #ED         ; Load 237 into V8
$6F4    $14D8   JP       $4D8            ; Jump to 4D8
$6F6    $2D03   CALL     $D03            ; Call subroutine at D03
$6F8    $47FF   SNE      V7, #FF         ; Skip if V7 != 255
$6FA    $84B1   OR       V4, VB          ; V4 |= VB
$6FC    $7A7B   ADD      VA, #7B         ; Add 123 to VA
$6FE    $398F   SE       V9, #8F         ; Skip if V9 == 143
$700    $5551   UNKNOWN  $5551           ; Unknown 5xxx instruction
$702    $D5C7   DRW      V5, VC, #7      ; Draw 7-byte sprite at V5, VC
$704    $3364   SE       V3, #64         ; Skip if V3 == 100
$706    $2DDE   CALL     $DDE            ; Call subroutine at DDE
$708    $BA3F   JP       V0, $A3F        ; Jump to V0 + A3F
$70A    $9EAF   UNKNOWN  $9EAF           ; Unknown 9xxx instruction
$70C    $B556   JP       V0, $556        ; Jump to V0 + 556
$70E    $5B7E   UNKNOWN  $5B7E           ; Unknown 5xxx instruction
$710    $8DCA   UNKNOWN  8DCA            ; Unknown 8xxx instruction
$712    $3C62   SE       VC, #62         ; Skip if VC == 98
$714    $F412   UNKNOWN  F412            ; Unknown Fxxx instruction
$716    $7457   ADD      V4, #57         ; Add 87 to V4
$718    $9FD6   UNKNOWN  $9FD6           ; Unknown 9xxx instruction
$71A    $2043   CALL     $043            ; Call subroutine at 043
$71C    $97D3   UNKNOWN  $97D3           ; Unknown 9xxx instruction
$71E    $4566   SNE      V5, #66         ; Skip if V5 != 102
$720    $93DC   UNKNOWN  $93DC           ; Unknown 9xxx instruction
$722    $1815   JP       $815            ; Jump to 815
$724    $B316   JP       V0, $316        ; Jump to V0 + 316
$726    $E867   UNKNOWN  $E867           ; Unknown Exxx instruction
$728    $0BAF   SYS      $BAF            ; System call to BAF
$72A    $B0AA   JP       V0, $0AA        ; Jump to V0 + 0AA
$72C    $5A4C   UNKNOWN  $5A4C           ; Unknown 5xxx instruction
$72E    $FE9A   UNKNOWN  FE9A            ; Unknown Fxxx instruction
$730    $1312   JP       $312            ; Jump to 312
$732    $F3E9   UNKNOWN  F3E9            ; Unknown Fxxx instruction
$734    $049D   SYS      $49D            ; System call to 49D
$736    $E462   UNKNOWN  $E462           ; Unknown Exxx instruction
$738    $67D1   LD       V7, #D1         ; Load 209 into V7
$73A    $34AB   SE       V4, #AB         ; Skip if V4 == 171
$73C    $5786   UNKNOWN  $5786           ; Unknown 5xxx instruction
$73E    $D2B4   DRW      V2, VB, #4      ; Draw 4-byte sprite at V2, VB
$740    $D2F9   DRW      V2, VF, #9      ; Draw 9-byte sprite at V2, VF
$742    $969B   UNKNOWN  $969B           ; Unknown 9xxx instruction
$744    $B403   JP       V0, $403        ; Jump to V0 + 403
$746    $C040   RND      V0, #40         ; V0 = random & 40
$748    $8093   XOR      V0, V9          ; V0 ^= V9
$74A    $822E   SHL      V2              ; V2 <<= 1, VF = MSB
$74C    $04AD   SYS      $4AD            ; System call to 4AD
$74E    $BE6B   JP       V0, $E6B        ; Jump to V0 + E6B
$750    $5D16   UNKNOWN  $5D16           ; Unknown 5xxx instruction
$752    $2A62   CALL     $A62            ; Call subroutine at A62
$754    $F351   UNKNOWN  F351            ; Unknown Fxxx instruction
$756    $2AD7   CALL     $AD7            ; Call subroutine at AD7
$758    $DDEC   DRW      VD, VE, #C      ; Draw 12-byte sprite at VD, VE
$75A    $8CBC   UNKNOWN  8CBC            ; Unknown 8xxx instruction
$75C    $2645   CALL     $645            ; Call subroutine at 645
$75E    $4451   SNE      V4, #51         ; Skip if V4 != 81
$760    $9CE0   SNE      VC, VE          ; Skip if VC != VE
$762    $606F   LD       V0, #6F         ; Load 111 into V0
$764    $C0E3   RND      V0, #E3         ; V0 = random & E3
$766    $1FE9   JP       $FE9            ; Jump to FE9
$768    $C3DB   RND      V3, #DB         ; V3 = random & DB
$76A    $0E6A   SYS      $E6A            ; System call to E6A
$76C    $6042   LD       V0, #42         ; Load 66 into V0
$76E    $B9A3   JP       V0, $9A3        ; Jump to V0 + 9A3
$770    $E991   UNKNOWN  $E991           ; Unknown Exxx instruction
$772    $41A2   SNE      V1, #A2         ; Skip if V1 != 162
$774    $D588   DRW      V5, V8, #8      ; Draw 8-byte sprite at V5, V8
$776    $50C8   UNKNOWN  $50C8           ; Unknown 5xxx instruction
$778    $87CE   SHL      V7              ; V7 <<= 1, VF = MSB
$77A    $EFEA   UNKNOWN  $EFEA           ; Unknown Exxx instruction
$77C    $58A5   UNKNOWN  $58A5           ; Unknown 5xxx instruction
$77E    $5423   UNKNOWN  $5423           ; Unknown 5xxx instruction
$780    $694D   LD       V9, #4D         ; Load 77 into V9
$782    $C7A0   RND      V7, #A0         ; V7 = random & A0
$784    $B3EA   JP       V0, $3EA        ; Jump to V0 + 3EA
$786    $244A   CALL     $44A            ; Call subroutine at 44A
$788    $09F0   SYS      $9F0            ; System call to 9F0
$78A    $320D   SE       V2, #0D         ; Skip if V2 == 13
$78C    $3AE4   SE       VA, #E4         ; Skip if VA == 228
$78E    $7FEA   ADD      VF, #EA         ; Add 234 to VF
$790    $28AE   CALL     $8AE            ; Call subroutine at 8AE
$792    $B8B4   JP       V0, $8B4        ; Jump to V0 + 8B4
$794    $AF12   LD       I, $F12         ; Load F12 into I
$796    $8C29   UNKNOWN  8C29            ; Unknown 8xxx instruction
$798    $0D0B   SYS      $D0B            ; System call to D0B
$79A    $B0BC   JP       V0, $0BC        ; Jump to V0 + 0BC
$79C    $7EB0   ADD      VE, #B0         ; Add 176 to VE
$79E    $E4F2   UNKNOWN  $E4F2           ; Unknown Exxx instruction
$7A0    $0B89   SYS      $B89            ; System call to B89
$7A2    $8880   LD       V8, V8          ; V8 = V8
$7A4    $0882   SYS      $882            ; System call to 882
$7A6    $4C52   SNE      VC, #52         ; Skip if VC != 82
$7A8    $CBC9   RND      VB, #C9         ; VB = random & C9
$7AA    $EA54   UNKNOWN  $EA54           ; Unknown Exxx instruction
$7AC    $2742   CALL     $742            ; Call subroutine at 742
$7AE    $8869   UNKNOWN  8869            ; Unknown 8xxx instruction
$7B0    $8BD0   LD       VB, VD          ; VB = VD
$7B2    $CCAA   RND      VC, #AA         ; VC = random & AA
$7B4    $3959   SE       V9, #59         ; Skip if V9 == 89
$7B6    $D9FE   DRW      V9, VF, #E      ; Draw 14-byte sprite at V9, VF
$7B8    $1C68   JP       $C68            ; Jump to C68
$7BA    $E206   UNKNOWN  $E206           ; Unknown Exxx instruction
$7BC    $BF3B   JP       V0, $F3B        ; Jump to V0 + F3B
$7BE    $702F   ADD      V0, #2F         ; Add 47 to V0
$7C0    $99C0   SNE      V9, VC          ; Skip if V9 != VC
$7C2    $CF46   RND      VF, #46         ; VF = random & 46
$7C4    $593E   UNKNOWN  $593E           ; Unknown 5xxx instruction
$7C6    $9F4E   UNKNOWN  $9F4E           ; Unknown 9xxx instruction
$7C8    $AF4A   LD       I, $F4A         ; Load F4A into I
$7CA    $0076   SYS      $076            ; System call to 076
$7CC    $FBD6   UNKNOWN  FBD6            ; Unknown Fxxx instruction
$7CE    $9AA4   UNKNOWN  $9AA4           ; Unknown 9xxx instruction
$7D0    $D1F5   DRW      V1, VF, #5      ; Draw 5-byte sprite at V1, VF
$7D2    $DD6B   DRW      VD, V6, #B      ; Draw 11-byte sprite at VD, V6
$7D4    $B915   JP       V0, $915        ; Jump to V0 + 915
$7D6    $5FB8   UNKNOWN  $5FB8           ; Unknown 5xxx instruction
$7D8    $B097   JP       V0, $097        ; Jump to V0 + 097
$7DA    $266C   CALL     $66C            ; Call subroutine at 66C
$7DC    $D70A   DRW      V7, V0, #A      ; Draw 10-byte sprite at V7, V0
$7DE    $32EF   SE       V2, #EF         ; Skip if V2 == 239
$7E0    $5ABB   UNKNOWN  $5ABB           ; Unknown 5xxx instruction
$7E2    $5EC6   UNKNOWN  $5EC6           ; Unknown 5xxx instruction
$7E4    $66C6   LD       V6, #C6         ; Load 198 into V6
$7E6    $84F1   OR       V4, VF          ; V4 |= VF
$7E8    $17FC   JP       $7FC            ; Jump to 7FC
$7EA    $BBD6   JP       V0, $BD6        ; Jump to V0 + BD6
$7EC    $13E9   JP       $3E9            ; Jump to 3E9
$7EE    $99E8   UNKNOWN  $99E8           ; Unknown 9xxx instruction
$7F0    $F57E   UNKNOWN  F57E            ; Unknown Fxxx instruction
$7F2    $A8C9   LD       I, $8C9         ; Load 8C9 into I
$7F4    $C4E3   RND      V4, #E3         ; V4 = random & E3
$7F6    $B7A3   JP       V0, $7A3        ; Jump to V0 + 7A3
$7F8    $0698   SYS      $698            ; System call to 698
$7FA    $7BE0   ADD      VB, #E0         ; Add 224 to VB
$7FC    $20A3   CALL     $0A3            ; Call subroutine at 0A3
$7FE    $EB85   UNKNOWN  $EB85           ; Unknown Exxx instruction
$800    $7566   ADD      V5, #66         ; Add 102 to V5
$802    $0407   SYS      $407            ; System call to 407
$804    $D701   DRW      V7, V0, #1      ; Draw 1-byte sprite at V7, V0
$806    $96E4   UNKNOWN  $96E4           ; Unknown 9xxx instruction
$808    $2646   CALL     $646            ; Call subroutine at 646
$80A    $44B7   SNE      V4, #B7         ; Skip if V4 != 183
$80C    $B10C   JP       V0, $10C        ; Jump to V0 + 10C
$80E    $4B89   SNE      VB, #89         ; Skip if VB != 137
$810    $8C9F   UNKNOWN  8C9F            ; Unknown 8xxx instruction
$812    $F619   UNKNOWN  F619            ; Unknown Fxxx instruction
$814    $F363   UNKNOWN  F363            ; Unknown Fxxx instruction
$816    $E45D   UNKNOWN  $E45D           ; Unknown Exxx instruction
$818    $66F8   LD       V6, #F8         ; Load 248 into V6
$81A    $B89D   JP       V0, $89D        ; Jump to V0 + 89D
$81C    $3964   SE       V9, #64         ; Skip if V9 == 100
$81E    $4EBA   SNE      VE, #BA         ; Skip if VE != 186
$820    $9E52   UNKNOWN  $9E52           ; Unknown 9xxx instruction
$822    $DC23   DRW      VC, V2, #3      ; Draw 3-byte sprite at VC, V2
$824    $47A3   SNE      V7, #A3         ; Skip if V7 != 163
$826    $003D   SYS      $03D            ; System call to 03D
$828    $A8EC   LD       I, $8EC         ; Load 8EC into I
$82A    $286F   CALL     $86F            ; Call subroutine at 86F
$82C    $A9D5   LD       I, $9D5         ; Load 9D5 into I
$82E    $E512   UNKNOWN  $E512           ; Unknown Exxx instruction
$830    $86F2   AND      V6, VF          ; V6 &= VF
$832    $AD68   LD       I, $D68         ; Load D68 into I
$834    $54FC   UNKNOWN  $54FC           ; Unknown 5xxx instruction
$836    $4D87   SNE      VD, #87         ; Skip if VD != 135
$838    $009D   SYS      $09D            ; System call to 09D
$83A    $908E   UNKNOWN  $908E           ; Unknown 9xxx instruction
$83C    $F04F   UNKNOWN  F04F            ; Unknown Fxxx instruction
$83E    $CBB3   RND      VB, #B3         ; VB = random & B3
$840    $D344   DRW      V3, V4, #4      ; Draw 4-byte sprite at V3, V4
$842    $85CB   UNKNOWN  85CB            ; Unknown 8xxx instruction
$844    $923C   UNKNOWN  $923C           ; Unknown 9xxx instruction
$846    $1374   JP       $374            ; Jump to 374
$848    $CA88   RND      VA, #88         ; VA = random & 88
$84A    $AE71   LD       I, $E71         ; Load E71 into I
$84C    $2FB1   CALL     $FB1            ; Call subroutine at FB1
$84E    $C7CF   RND      V7, #CF         ; V7 = random & CF
$850    $8064   ADD      V0, V6          ; V0 += V6, VF = carry
$852    $9A3E   UNKNOWN  $9A3E           ; Unknown 9xxx instruction
$854    $70EE   ADD      V0, #EE         ; Add 238 to V0
$856    $13BB   JP       $3BB            ; Jump to 3BB
$858    $D45A   DRW      V4, V5, #A      ; Draw 10-byte sprite at V4, V5
$85A    $64DA   LD       V4, #DA         ; Load 218 into V4
$85C    $4DB4   SNE      VD, #B4         ; Skip if VD != 180
$85E    $88D1   OR       V8, VD          ; V8 |= VD
$860    $D965   DRW      V9, V6, #5      ; Draw 5-byte sprite at V9, V6
$862    $694B   LD       V9, #4B         ; Load 75 into V9
$864    $D950   DRW      V9, V5, #0      ; Draw 0-byte sprite at V9, V5
$866    $9BE4   UNKNOWN  $9BE4           ; Unknown 9xxx instruction
$868    $D2CE   DRW      V2, VC, #E      ; Draw 14-byte sprite at V2, VC
$86A    $276D   CALL     $76D            ; Call subroutine at 76D
$86C    $E5F9   UNKNOWN  $E5F9           ; Unknown Exxx instruction
$86E    $46FF   SNE      V6, #FF         ; Skip if V6 != 255
$870    $1E1F   JP       $E1F            ; Jump to E1F
$872    $3B6F   SE       VB, #6F         ; Skip if VB == 111
$874    $D69D   DRW      V6, V9, #D      ; Draw 13-byte sprite at V6, V9
$876    $AF53   LD       I, $F53         ; Load F53 into I
$878    $769D   ADD      V6, #9D         ; Add 157 to V6
$87A    $E3B8   UNKNOWN  $E3B8           ; Unknown Exxx instruction
$87C    $9DEE   UNKNOWN  $9DEE           ; Unknown 9xxx instruction
$87E    $48A4   SNE      V8, #A4         ; Skip if V8 != 164
$880    $F1F1   UNKNOWN  F1F1            ; Unknown Fxxx instruction
$882    $8340   LD       V3, V4          ; V3 = V4
$884    $18F8   JP       $8F8            ; Jump to 8F8
$886    $8F2A   UNKNOWN  8F2A            ; Unknown 8xxx instruction
$888    $9F3E   UNKNOWN  $9F3E           ; Unknown 9xxx instruction
$88A    $9555   UNKNOWN  $9555           ; Unknown 9xxx instruction
$88C    $ADE9   LD       I, $DE9         ; Load DE9 into I
$88E    $B4DD   JP       V0, $4DD        ; Jump to V0 + 4DD
$890    $AED0   LD       I, $ED0         ; Load ED0 into I
$892    $0E16   SYS      $E16            ; System call to E16
$894    $AEC8   LD       I, $EC8         ; Load EC8 into I
$896    $9BAF   UNKNOWN  $9BAF           ; Unknown 9xxx instruction
$898    $D9AF   DRW      V9, VA, #F      ; Draw 15-byte sprite at V9, VA
$89A    $567F   UNKNOWN  $567F           ; Unknown 5xxx instruction
$89C    $4222   SNE      V2, #22         ; Skip if V2 != 34
$89E    $70C6   ADD      V0, #C6         ; Add 198 to V0
$8A0    $5FD2   UNKNOWN  $5FD2           ; Unknown 5xxx instruction
$8A2    $8D3C   UNKNOWN  8D3C            ; Unknown 8xxx instruction
$8A4    $D1C4   DRW      V1, VC, #4      ; Draw 4-byte sprite at V1, VC
$8A6    $BF4D   JP       V0, $F4D        ; Jump to V0 + F4D
$8A8    $55C9   UNKNOWN  $55C9           ; Unknown 5xxx instruction
$8AA    $79FD   ADD      V9, #FD         ; Add 253 to V9
$8AC    $1F08   JP       $F08            ; Jump to F08
$8AE    $FB2C   UNKNOWN  FB2C            ; Unknown Fxxx instruction
$8B0    $5FDB   UNKNOWN  $5FDB           ; Unknown 5xxx instruction
$8B2    $ECDF   UNKNOWN  $ECDF           ; Unknown Exxx instruction
$8B4    $0F43   SYS      $F43            ; System call to F43
$8B6    $E59F   UNKNOWN  $E59F           ; Unknown Exxx instruction
$8B8    $CC2D   RND      VC, #2D         ; VC = random & 2D
$8BA    $6AA0   LD       VA, #A0         ; Load 160 into VA
$8BC    $8E53   XOR      VE, V5          ; VE ^= V5
$8BE    $AD6B   LD       I, $D6B         ; Load D6B into I
$8C0    $73AD   ADD      V3, #AD         ; Add 173 to V3
$8C2    $10CD   JP       $0CD            ; Jump to 0CD
$8C4    $9564   UNKNOWN  $9564           ; Unknown 9xxx instruction
$8C6    $F8C0   UNKNOWN  F8C0            ; Unknown Fxxx instruction
$8C8    $6AF3   LD       VA, #F3         ; Load 243 into VA
$8CA    $507A   UNKNOWN  $507A           ; Unknown 5xxx instruction
$8CC    $8CC0   LD       VC, VC          ; VC = VC
$8CE    $24A5   CALL     $4A5            ; Call subroutine at 4A5
$8D0    $1B99   JP       $B99            ; Jump to B99
$8D2    $F86A   UNKNOWN  F86A            ; Unknown Fxxx instruction
$8D4    $8094   ADD      V0, V9          ; V0 += V9, VF = carry
$8D6    $2CE6   CALL     $CE6            ; Call subroutine at CE6
$8D8    $C1EC   RND      V1, #EC         ; V1 = random & EC
$8DA    $2F06   CALL     $F06            ; Call subroutine at F06
$8DC    $3C51   SE       VC, #51         ; Skip if VC == 81
$8DE    $9E17   UNKNOWN  $9E17           ; Unknown 9xxx instruction
$8E0    $28D3   CALL     $8D3            ; Call subroutine at 8D3
$8E2    $D522   DRW      V5, V2, #2      ; Draw 2-byte sprite at V5, V2
$8E4    $F962   UNKNOWN  F962            ; Unknown Fxxx instruction
$8E6    $7106   ADD      V1, #06         ; Add 6 to V1
$8E8    $8A5E   SHL      VA              ; VA <<= 1, VF = MSB
$8EA    $CD05   RND      VD, #05         ; VD = random & 05
$8EC    $16ED   JP       $6ED            ; Jump to 6ED
$8EE    $1654   JP       $654            ; Jump to 654
$8F0    $F8A9   UNKNOWN  F8A9            ; Unknown Fxxx instruction
$8F2    $2E76   CALL     $E76            ; Call subroutine at E76
$8F4    $D8E8   DRW      V8, VE, #8      ; Draw 8-byte sprite at V8, VE
$8F6    $BE80   JP       V0, $E80        ; Jump to V0 + E80
$8F8    $3722   SE       V7, #22         ; Skip if V7 == 34
$8FA    $A7F4   LD       I, $7F4         ; Load 7F4 into I
$8FC    $342C   SE       V4, #2C         ; Skip if V4 == 44
$8FE    $C239   RND      V2, #39         ; V2 = random & 39
$900    $77B0   ADD      V7, #B0         ; Add 176 to V7
$902    $0E58   SYS      $E58            ; System call to E58
$904    $CFC2   RND      VF, #C2         ; VF = random & C2
$906    $DD13   DRW      VD, V1, #3      ; Draw 3-byte sprite at VD, V1
$908    $5555   UNKNOWN  $5555           ; Unknown 5xxx instruction
$90A    $3AEC   SE       VA, #EC         ; Skip if VA == 236
$90C    $5D7A   UNKNOWN  $5D7A           ; Unknown 5xxx instruction
$90E    $632D   LD       V3, #2D         ; Load 45 into V3
$910    $2830   CALL     $830            ; Call subroutine at 830
$912    $3140   SE       V1, #40         ; Skip if V1 == 64
$914    $DCBD   DRW      VC, VB, #D      ; Draw 13-byte sprite at VC, VB
$916    $6DF3   LD       VD, #F3         ; Load 243 into VD
$918    $C362   RND      V3, #62         ; V3 = random & 62
$91A    $F2ED   UNKNOWN  F2ED            ; Unknown Fxxx instruction
$91C    $728F   ADD      V2, #8F         ; Add 143 to V2
$91E    $5EA0   SE       VE, VA          ; Skip if VE == VA
$920    $7248   ADD      V2, #48         ; Add 72 to V2
$922    $F941   UNKNOWN  F941            ; Unknown Fxxx instruction
$924    $4FD3   SNE      VF, #D3         ; Skip if VF != 211
$926    $D9A1   DRW      V9, VA, #1      ; Draw 1-byte sprite at V9, VA
$928    $15C1   JP       $5C1            ; Jump to 5C1
$92A    $5B72   UNKNOWN  $5B72           ; Unknown 5xxx instruction
$92C    $960A   UNKNOWN  $960A           ; Unknown 9xxx instruction
$92E    $1909   JP       $909            ; Jump to 909
$930    $385A   SE       V8, #5A         ; Skip if V8 == 90
$932    $06C5   SYS      $6C5            ; System call to 6C5
$934    $2ACF   CALL     $ACF            ; Call subroutine at ACF
$936    $C134   RND      V1, #34         ; V1 = random & 34
$938    $DF69   DRW      VF, V6, #9      ; Draw 9-byte sprite at VF, V6
$93A    $8CF1   OR       VC, VF          ; VC |= VF
$93C    $538E   UNKNOWN  $538E           ; Unknown 5xxx instruction
$93E    $82B4   ADD      V2, VB          ; V2 += VB, VF = carry
$940    $C444   RND      V4, #44         ; V4 = random & 44
$942    $A003   LD       I, $003         ; Load 003 into I
$944    $F02D   UNKNOWN  F02D            ; Unknown Fxxx instruction
$946    $86F9   UNKNOWN  86F9            ; Unknown 8xxx instruction
$948    $241F   CALL     $41F            ; Call subroutine at 41F
$94A    $C0EB   RND      V0, #EB         ; V0 = random & EB
$94C    $8963   XOR      V9, V6          ; V9 ^= V6
$94E    $5775   UNKNOWN  $5775           ; Unknown 5xxx instruction
$950    $8B58   UNKNOWN  8B58            ; Unknown 8xxx instruction
$952    $26ED   CALL     $6ED            ; Call subroutine at 6ED
$954    $6190   LD       V1, #90         ; Load 144 into V1
$956    $74AB   ADD      V4, #AB         ; Add 171 to V4
$958    $FE41   UNKNOWN  FE41            ; Unknown Fxxx instruction
$95A    $093D   SYS      $93D            ; System call to 93D
$95C    $E015   UNKNOWN  $E015           ; Unknown Exxx instruction
$95E    $EF71   UNKNOWN  $EF71           ; Unknown Exxx instruction
$960    $5097   UNKNOWN  $5097           ; Unknown 5xxx instruction
$962    $7665   ADD      V6, #65         ; Add 101 to V6
$964    $83A2   AND      V3, VA          ; V3 &= VA
$966    $49CB   SNE      V9, #CB         ; Skip if V9 != 203
$968    $355B   SE       V5, #5B         ; Skip if V5 == 91
$96A    $6746   LD       V7, #46         ; Load 70 into V7
$96C    $C22B   RND      V2, #2B         ; V2 = random & 2B
$96E    $5478   UNKNOWN  $5478           ; Unknown 5xxx instruction
$970    $E9C4   UNKNOWN  $E9C4           ; Unknown Exxx instruction
$972    $07EF   SYS      $7EF            ; System call to 7EF
$974    $3DE2   SE       VD, #E2         ; Skip if VD == 226
$976    $A6F8   LD       I, $6F8         ; Load 6F8 into I
$978    $CA2B   RND      VA, #2B         ; VA = random & 2B
$97A    $838E   SHL      V3              ; V3 <<= 1, VF = MSB
$97C    $EBF6   UNKNOWN  $EBF6           ; Unknown Exxx instruction
$97E    $3E4B   SE       VE, #4B         ; Skip if VE == 75
$980    $5732   UNKNOWN  $5732           ; Unknown 5xxx instruction
$982    $438B   SNE      V3, #8B         ; Skip if V3 != 139
$984    $C94F   RND      V9, #4F         ; V9 = random & 4F
$986    $8CAC   UNKNOWN  8CAC            ; Unknown 8xxx instruction
$988    $3F16   SE       VF, #16         ; Skip if VF == 22
$98A    $193D   JP       $93D            ; Jump to 93D
$98C    $E573   UNKNOWN  $E573           ; Unknown Exxx instruction
$98E    $005D   SYS      $05D            ; System call to 05D
$990    $4FB7   SNE      VF, #B7         ; Skip if VF != 183
$992    $E35E   UNKNOWN  $E35E           ; Unknown Exxx instruction
$994    $03E4   SYS      $3E4            ; System call to 3E4
$996    $7027   ADD      V0, #27         ; Add 39 to V0
$998    $8024   ADD      V0, V2          ; V0 += V2, VF = carry
$99A    $93C6   UNKNOWN  $93C6           ; Unknown 9xxx instruction
$99C    $0502   SYS      $502            ; System call to 502
$99E    $8210   LD       V2, V1          ; V2 = V1
$9A0    $2F3B   CALL     $F3B            ; Call subroutine at F3B
$9A2    $D958   DRW      V9, V5, #8      ; Draw 8-byte sprite at V9, V5
$9A4    $A033   LD       I, $033         ; Load 033 into I
$9A6    $0567   SYS      $567            ; System call to 567
$9A8    $8D5F   UNKNOWN  8D5F            ; Unknown 8xxx instruction
$9AA    $6EA6   LD       VE, #A6         ; Load 166 into VE
$9AC    $FD8E   UNKNOWN  FD8E            ; Unknown Fxxx instruction
$9AE    $CC86   RND      VC, #86         ; VC = random & 86
$9B0    $99FB   UNKNOWN  $99FB           ; Unknown 9xxx instruction
$9B2    $11A6   JP       $1A6            ; Jump to 1A6
$9B4    $0167   SYS      $167            ; System call to 167
$9B6    $C867   RND      V8, #67         ; V8 = random & 67
$9B8    $F27A   UNKNOWN  F27A            ; Unknown Fxxx instruction
$9BA    $65C7   LD       V5, #C7         ; Load 199 into V5
$9BC    $44AE   SNE      V4, #AE         ; Skip if V4 != 174
$9BE    $E08B   UNKNOWN  $E08B           ; Unknown Exxx instruction
$9C0    $A29F   LD       I, $29F         ; Load 29F into I
$9C2    $FA89   UNKNOWN  FA89            ; Unknown Fxxx instruction
$9C4    $5B22   UNKNOWN  $5B22           ; Unknown 5xxx instruction
$9C6    $2947   CALL     $947            ; Call subroutine at 947
$9C8    $C2E0   RND      V2, #E0         ; V2 = random & E0
$9CA    $A30E   LD       I, $30E         ; Load 30E into I
$9CC    $E5BE   UNKNOWN  $E5BE           ; Unknown Exxx instruction
$9CE    $AA07   LD       I, $A07         ; Load A07 into I
$9D0    $8AF3   XOR      VA, VF          ; VA ^= VF
$9D2    $C45A   RND      V4, #5A         ; V4 = random & 5A
$9D4    $27E3   CALL     $7E3            ; Call subroutine at 7E3
$9D6    $0880   SYS      $880            ; System call to 880
$9D8    $16B7   JP       $6B7            ; Jump to 6B7
$9DA    $9920   SNE      V9, V2          ; Skip if V9 != V2
$9DC    $A9AB   LD       I, $9AB         ; Load 9AB into I
$9DE    $B56A   JP       V0, $56A        ; Jump to V0 + 56A
$9E0    $1898   JP       $898            ; Jump to 898
$9E2    $DE3D   DRW      VE, V3, #D      ; Draw 13-byte sprite at VE, V3
$9E4    $FB47   UNKNOWN  FB47            ; Unknown Fxxx instruction
$9E6    $7B2A   ADD      VB, #2A         ; Add 42 to VB
$9E8    $C1E1   RND      V1, #E1         ; V1 = random & E1
$9EA    $5610   SE       V6, V1          ; Skip if V6 == V1
$9EC    $A5C5   LD       I, $5C5         ; Load 5C5 into I
$9EE    $8573   XOR      V5, V7          ; V5 ^= V7
$9F0    $4C50   SNE      VC, #50         ; Skip if VC != 80
$9F2    $78FF   ADD      V8, #FF         ; Add 255 to V8
$9F4    $4FA3   SNE      VF, #A3         ; Skip if VF != 163
$9F6    $FA5C   UNKNOWN  FA5C            ; Unknown Fxxx instruction
$9F8    $464F   SNE      V6, #4F         ; Skip if V6 != 79
$9FA    $0BD5   SYS      $BD5            ; System call to BD5
$9FC    $A650   LD       I, $650         ; Load 650 into I
$9FE    $C8CC   RND      V8, #CC         ; V8 = random & CC
$A00    $D280   DRW      V2, V8, #0      ; Draw 0-byte sprite at V2, V8
$A02    $1912   JP       $912            ; Jump to 912
$A04    $85CC   UNKNOWN  85CC            ; Unknown 8xxx instruction
$A06    $434D   SNE      V3, #4D         ; Skip if V3 != 77
$A08    $724E   ADD      V2, #4E         ; Add 78 to V2
$A0A    $6269   LD       V2, #69         ; Load 105 into V2
$A0C    $7D6B   ADD      VD, #6B         ; Add 107 to VD
$A0E    $0D56   SYS      $D56            ; System call to D56
$A10    $A14A   LD       I, $14A         ; Load 14A into I
$A12    $2FAD   CALL     $FAD            ; Call subroutine at FAD
$A14    $59B2   UNKNOWN  $59B2           ; Unknown 5xxx instruction
$A16    $C7D5   RND      V7, #D5         ; V7 = random & D5
$A18    $19C5   JP       $9C5            ; Jump to 9C5
$A1A    $657E   LD       V5, #7E         ; Load 126 into V5
$A1C    $567A   UNKNOWN  $567A           ; Unknown 5xxx instruction
$A1E    $E482   UNKNOWN  $E482           ; Unknown Exxx instruction
$A20    $217F   CALL     $17F            ; Call subroutine at 17F
$A22    $2713   CALL     $713            ; Call subroutine at 713
$A24    $4B93   SNE      VB, #93         ; Skip if VB != 147
$A26    $1704   JP       $704            ; Jump to 704
$A28    $7E4D   ADD      VE, #4D         ; Add 77 to VE
$A2A    $BD63   JP       V0, $D63        ; Jump to V0 + D63
$A2C    $0CD0   SYS      $CD0            ; System call to CD0
$A2E    $F735   UNKNOWN  F735            ; Unknown Fxxx instruction
$A30    $653F   LD       V5, #3F         ; Load 63 into V5
$A32    $2F42   CALL     $F42            ; Call subroutine at F42
$A34    $DB94   DRW      VB, V9, #4      ; Draw 4-byte sprite at VB, V9
$A36    $679F   LD       V7, #9F         ; Load 159 into V7
$A38    $CCBE   RND      VC, #BE         ; VC = random & BE
$A3A    $DE21   DRW      VE, V2, #1      ; Draw 1-byte sprite at VE, V2
$A3C    $BC63   JP       V0, $C63        ; Jump to V0 + C63
$A3E    $D150   DRW      V1, V5, #0      ; Draw 0-byte sprite at V1, V5
$A40    $D5D8   DRW      V5, VD, #8      ; Draw 8-byte sprite at V5, VD
$A42    $2805   CALL     $805            ; Call subroutine at 805
$A44    $C9FC   RND      V9, #FC         ; V9 = random & FC
$A46    $DC2D   DRW      VC, V2, #D      ; Draw 13-byte sprite at VC, V2
$A48    $71E3   ADD      V1, #E3         ; Add 227 to V1
$A4A    $6421   LD       V4, #21         ; Load 33 into V4
$A4C    $52D1   UNKNOWN  $52D1           ; Unknown 5xxx instruction
$A4E    $FE57   UNKNOWN  FE57            ; Unknown Fxxx instruction
$A50    $BE3A   JP       V0, $E3A        ; Jump to V0 + E3A
$A52    $F639   UNKNOWN  F639            ; Unknown Fxxx instruction
$A54    $92A1   UNKNOWN  $92A1           ; Unknown 9xxx instruction
$A56    $04E6   SYS      $4E6            ; System call to 4E6
$A58    $AC98   LD       I, $C98         ; Load C98 into I
$A5A    $3EE0   SE       VE, #E0         ; Skip if VE == 224
$A5C    $C6CC   RND      V6, #CC         ; V6 = random & CC
$A5E    $004E   SYS      $04E            ; System call to 04E
$A60    $0171   SYS      $171            ; System call to 171
$A62    $E7EE   UNKNOWN  $E7EE           ; Unknown Exxx instruction
$A64    $CF5A   RND      VF, #5A         ; VF = random & 5A
$A66    $43FF   SNE      V3, #FF         ; Skip if V3 != 255
$A68    $2965   CALL     $965            ; Call subroutine at 965
$A6A    $B9C9   JP       V0, $9C9        ; Jump to V0 + 9C9
$A6C    $89C4   ADD      V9, VC          ; V9 += VC, VF = carry
$A6E    $D43D   DRW      V4, V3, #D      ; Draw 13-byte sprite at V4, V3
$A70    $E89C   UNKNOWN  $E89C           ; Unknown Exxx instruction
$A72    $5909   UNKNOWN  $5909           ; Unknown 5xxx instruction
$A74    $39F3   SE       V9, #F3         ; Skip if V9 == 243
$A76    $570D   UNKNOWN  $570D           ; Unknown 5xxx instruction
$A78    $E1E6   UNKNOWN  $E1E6           ; Unknown Exxx instruction
$A7A    $0AB1   SYS      $AB1            ; System call to AB1
$A7C    $28E9   CALL     $8E9            ; Call subroutine at 8E9
$A7E    $ADE9   LD       I, $DE9         ; Load DE9 into I
$A80    $888D   UNKNOWN  888D            ; Unknown 8xxx instruction
$A82    $7504   ADD      V5, #04         ; Add 4 to V5
$A84    $7DBC   ADD      VD, #BC         ; Add 188 to VD
$A86    $C7D9   RND      V7, #D9         ; V7 = random & D9
$A88    $830D   UNKNOWN  830D            ; Unknown 8xxx instruction
$A8A    $521F   UNKNOWN  $521F           ; Unknown 5xxx instruction
$A8C    $EF6C   UNKNOWN  $EF6C           ; Unknown Exxx instruction
$A8E    $6121   LD       V1, #21         ; Load 33 into V1
$A90    $DC2B   DRW      VC, V2, #B      ; Draw 11-byte sprite at VC, V2
$A92    $B8BA   JP       V0, $8BA        ; Jump to V0 + 8BA
$A94    $6020   LD       V0, #20         ; Load 32 into V0
$A96    $CADA   RND      VA, #DA         ; VA = random & DA
$A98    $3116   SE       V1, #16         ; Skip if V1 == 22
$A9A    $E944   UNKNOWN  $E944           ; Unknown Exxx instruction
$A9C    $B890   JP       V0, $890        ; Jump to V0 + 890
$A9E    $FF4A   UNKNOWN  FF4A            ; Unknown Fxxx instruction
$AA0    $0ACE   SYS      $ACE            ; System call to ACE
$AA2    $D4A3   DRW      V4, VA, #3      ; Draw 3-byte sprite at V4, VA
$AA4    $9B4D   UNKNOWN  $9B4D           ; Unknown 9xxx instruction
$AA6    $3D09   SE       VD, #09         ; Skip if VD == 9
$AA8    $2B8B   CALL     $B8B            ; Call subroutine at B8B
$AAA    $C119   RND      V1, #19         ; V1 = random & 19
$AAC    $5454   UNKNOWN  $5454           ; Unknown 5xxx instruction
$AAE    $FDA6   UNKNOWN  FDA6            ; Unknown Fxxx instruction
$AB0    $5999   UNKNOWN  $5999           ; Unknown 5xxx instruction
$AB2    $5E50   SE       VE, V5          ; Skip if VE == V5
$AB4    $BC02   JP       V0, $C02        ; Jump to V0 + C02
$AB6    $6758   LD       V7, #58         ; Load 88 into V7
$AB8    $928A   UNKNOWN  $928A           ; Unknown 9xxx instruction
$ABA    $3836   SE       V8, #36         ; Skip if V8 == 54
$ABC    $3CAC   SE       VC, #AC         ; Skip if VC == 172
$ABE    $A838   LD       I, $838         ; Load 838 into I
$AC0    $FC88   UNKNOWN  FC88            ; Unknown Fxxx instruction
$AC2    $3853   SE       V8, #53         ; Skip if V8 == 83
$AC4    $B247   JP       V0, $247        ; Jump to V0 + 247
$AC6    $8CCE   SHL      VC              ; VC <<= 1, VF = MSB
$AC8    $752D   ADD      V5, #2D         ; Add 45 to V5
$ACA    $7E96   ADD      VE, #96         ; Add 150 to VE
$ACC    $6E73   LD       VE, #73         ; Load 115 into VE
$ACE    $0B48   SYS      $B48            ; System call to B48
$AD0    $4905   SNE      V9, #05         ; Skip if V9 != 5
$AD2    $E1EA   UNKNOWN  $E1EA           ; Unknown Exxx instruction
$AD4    $3621   SE       V6, #21         ; Skip if V6 == 33
$AD6    $7BC1   ADD      VB, #C1         ; Add 193 to VB
$AD8    $BE96   JP       V0, $E96        ; Jump to V0 + E96
$ADA    $C5B2   RND      V5, #B2         ; V5 = random & B2
$ADC    $BD7D   JP       V0, $D7D        ; Jump to V0 + D7D
$ADE    $0B0B   SYS      $B0B            ; System call to B0B
$AE0    $4137   SNE      V1, #37         ; Skip if V1 != 55
$AE2    $1CEE   JP       $CEE            ; Jump to CEE
$AE4    $9DC1   UNKNOWN  $9DC1           ; Unknown 9xxx instruction
$AE6    $5519   UNKNOWN  $5519           ; Unknown 5xxx instruction
$AE8    $9F61   UNKNOWN  $9F61           ; Unknown 9xxx instruction
$AEA    $5790   SE       V7, V9          ; Skip if V7 == V9
$AEC    $9C42   UNKNOWN  $9C42           ; Unknown 9xxx instruction
$AEE    $5DD8   UNKNOWN  $5DD8           ; Unknown 5xxx instruction
$AF0    $365D   SE       V6, #5D         ; Skip if V6 == 93
$AF2    $3F0C   SE       VF, #0C         ; Skip if VF == 12
$AF4    $26F5   CALL     $6F5            ; Call subroutine at 6F5
$AF6    $C789   RND      V7, #89         ; V7 = random & 89
$AF8    $45D8   SNE      V5, #D8         ; Skip if V5 != 216
$AFA    $ADAC   LD       I, $DAC         ; Load DAC into I
$AFC    $4C6B   SNE      VC, #6B         ; Skip if VC != 107
$AFE    $5E8D   UNKNOWN  $5E8D           ; Unknown 5xxx instruction
$B00    $1798   JP       $798            ; Jump to 798
$B02    $64A6   LD       V4, #A6         ; Load 166 into V4
$B04    $6770   LD       V7, #70         ; Load 112 into V7
$B06    $4177   SNE      V1, #77         ; Skip if V1 != 119
$B08    $8355   SUB      V3, V5          ; V3 -= V5, VF = !borrow
$B0A    $D51B   DRW      V5, V1, #B      ; Draw 11-byte sprite at V5, V1
$B0C    $0AFB   SYS      $AFB            ; System call to AFB
$B0E    $518C   UNKNOWN  $518C           ; Unknown 5xxx instruction
$B10    $7927   ADD      V9, #27         ; Add 39 to V9
$B12    $4509   SNE      V5, #09         ; Skip if V5 != 9
$B14    $2171   CALL     $171            ; Call subroutine at 171
$B16    $1443   JP       $443            ; Jump to 443
$B18    $B12E   JP       V0, $12E        ; Jump to V0 + 12E
$B1A    $21D1   CALL     $1D1            ; Call subroutine at 1D1
$B1C    $D2EE   DRW      V2, VE, #E      ; Draw 14-byte sprite at V2, VE
$B1E    $6CDC   LD       VC, #DC         ; Load 220 into VC
$B20    $2061   CALL     $061            ; Call subroutine at 061
$B22    $D256   DRW      V2, V5, #6      ; Draw 6-byte sprite at V2, V5
$B24    $C58C   RND      V5, #8C         ; V5 = random & 8C
$B26    $B36F   JP       V0, $36F        ; Jump to V0 + 36F
$B28    $8D0B   UNKNOWN  8D0B            ; Unknown 8xxx instruction
$B2A    $032E   SYS      $32E            ; System call to 32E
$B2C    $E03F   UNKNOWN  $E03F           ; Unknown Exxx instruction
$B2E    $034F   SYS      $34F            ; System call to 34F
$B30    $2B06   CALL     $B06            ; Call subroutine at B06
$B32    $079E   SYS      $79E            ; System call to 79E
$B34    $844E   SHL      V4              ; V4 <<= 1, VF = MSB
$B36    $255D   CALL     $55D            ; Call subroutine at 55D
$B38    $6171   LD       V1, #71         ; Load 113 into V1
$B3A    $065B   SYS      $65B            ; System call to 65B
$B3C    $A485   LD       I, $485         ; Load 485 into I
$B3E    $6FB2   LD       VF, #B2         ; Load 178 into VF
$B40    $3E64   SE       VE, #64         ; Skip if VE == 100
$B42    $7FB2   ADD      VF, #B2         ; Add 178 to VF
$B44    $D1EB   DRW      V1, VE, #B      ; Draw 11-byte sprite at V1, VE
$B46    $0F83   SYS      $F83            ; System call to F83
$B48    $34AF   SE       V4, #AF         ; Skip if V4 == 175
$B4A    $1B96   JP       $B96            ; Jump to B96
$B4C    $4014   SNE      V0, #14         ; Skip if V0 != 20
$B4E    $17C3   JP       $7C3            ; Jump to 7C3
$B50    $FBC4   UNKNOWN  FBC4            ; Unknown Fxxx instruction
$B52    $37B0   SE       V7, #B0         ; Skip if V7 == 176
$B54    $4FB7   SNE      VF, #B7         ; Skip if VF != 183
$B56    $3CEF   SE       VC, #EF         ; Skip if VC == 239
$B58    $303B   SE       V0, #3B         ; Skip if V0 == 59
$B5A    $018C   SYS      $18C            ; System call to 18C
$B5C    $A609   LD       I, $609         ; Load 609 into I
$B5E    $E1C9   UNKNOWN  $E1C9           ; Unknown Exxx instruction
$B60    $5213   UNKNOWN  $5213           ; Unknown 5xxx instruction
$B62    $CBC9   RND      VB, #C9         ; VB = random & C9
$B64    $E024   UNKNOWN  $E024           ; Unknown Exxx instruction
$B66    $7C0C   ADD      VC, #0C         ; Add 12 to VC
$B68    $4CEE   SNE      VC, #EE         ; Skip if VC != 238
$B6A    $8782   AND      V7, V8          ; V7 &= V8
$B6C    $696E   LD       V9, #6E         ; Load 110 into V9
$B6E    $D1AA   DRW      V1, VA, #A      ; Draw 10-byte sprite at V1, VA
$B70    $4B2F   SNE      VB, #2F         ; Skip if VB != 47
$B72    $604A   LD       V0, #4A         ; Load 74 into V0
$B74    $BBF2   JP       V0, $BF2        ; Jump to V0 + BF2
$B76    $FEC0   UNKNOWN  FEC0            ; Unknown Fxxx instruction
$B78    $230E   CALL     $30E            ; Call subroutine at 30E
$B7A    $41E9   SNE      V1, #E9         ; Skip if V1 != 233
$B7C    $8E2D   UNKNOWN  8E2D            ; Unknown 8xxx instruction
$B7E    $A83D   LD       I, $83D         ; Load 83D into I
$B80    $4B83   SNE      VB, #83         ; Skip if VB != 131
$B82    $338E   SE       V3, #8E         ; Skip if V3 == 142
$B84    $2314   CALL     $314            ; Call subroutine at 314
$B86    $B803   JP       V0, $803        ; Jump to V0 + 803
$B88    $D801   DRW      V8, V0, #1      ; Draw 1-byte sprite at V8, V0
$B8A    $A7D0   LD       I, $7D0         ; Load 7D0 into I
$B8C    $8E60   LD       VE, V6          ; VE = V6
$B8E    $2ED4   CALL     $ED4            ; Call subroutine at ED4
$B90    $495B   SNE      V9, #5B         ; Skip if V9 != 91
$B92    $BF76   JP       V0, $F76        ; Jump to V0 + F76
$B94    $1AAE   JP       $AAE            ; Jump to AAE
$B96    $306F   SE       V0, #6F         ; Skip if V0 == 111
$B98    $EB8C   UNKNOWN  $EB8C           ; Unknown Exxx instruction
$B9A    $D61E   DRW      V6, V1, #E      ; Draw 14-byte sprite at V6, V1
$B9C    $DD39   DRW      VD, V3, #9      ; Draw 9-byte sprite at VD, V3
$B9E    $596E   UNKNOWN  $596E           ; Unknown 5xxx instruction
$BA0    $87A5   SUB      V7, VA          ; V7 -= VA, VF = !borrow
$BA2    $D73C   DRW      V7, V3, #C      ; Draw 12-byte sprite at V7, V3
$BA4    $ADE5   LD       I, $DE5         ; Load DE5 into I
$BA6    $A330   LD       I, $330         ; Load 330 into I
$BA8    $1E19   JP       $E19            ; Jump to E19
$BAA    $6E9B   LD       VE, #9B         ; Load 155 into VE
$BAC    $FCE1   UNKNOWN  FCE1            ; Unknown Fxxx instruction
$BAE    $9F2A   UNKNOWN  $9F2A           ; Unknown 9xxx instruction
$BB0    $D70B   DRW      V7, V0, #B      ; Draw 11-byte sprite at V7, V0
$BB2    $DCA2   DRW      VC, VA, #2      ; Draw 2-byte sprite at VC, VA
$BB4    $F8E4   UNKNOWN  F8E4            ; Unknown Fxxx instruction
$BB6    $D5C7   DRW      V5, VC, #7      ; Draw 7-byte sprite at V5, VC
$BB8    $8ED8   UNKNOWN  8ED8            ; Unknown 8xxx instruction
$BBA    $5957   UNKNOWN  $5957           ; Unknown 5xxx instruction
$BBC    $25E2   CALL     $5E2            ; Call subroutine at 5E2
$BBE    $4978   SNE      V9, #78         ; Skip if V9 != 120
$BC0    $C45A   RND      V4, #5A         ; V4 = random & 5A
$BC2    $3BF3   SE       VB, #F3         ; Skip if VB == 243
$BC4    $9B52   UNKNOWN  $9B52           ; Unknown 9xxx instruction
$BC6    $77FB   ADD      V7, #FB         ; Add 251 to V7
$BC8    $BC72   JP       V0, $C72        ; Jump to V0 + C72
$BCA    $CACE   RND      VA, #CE         ; VA = random & CE
$BCC    $0AAE   SYS      $AAE            ; System call to AAE
$BCE    $3C37   SE       VC, #37         ; Skip if VC == 55
$BD0    $CC0C   RND      VC, #0C         ; VC = random & 0C
$BD2    $1055   JP       $055            ; Jump to 055
$BD4    $F4AF   UNKNOWN  F4AF            ; Unknown Fxxx instruction
$BD6    $3E17   SE       VE, #17         ; Skip if VE == 23
$BD8    $F679   UNKNOWN  F679            ; Unknown Fxxx instruction
$BDA    $6C4A   LD       VC, #4A         ; Load 74 into VC
$BDC    $F7B4   UNKNOWN  F7B4            ; Unknown Fxxx instruction
$BDE    $9E83   UNKNOWN  $9E83           ; Unknown 9xxx instruction
$BE0    $0B44   SYS      $B44            ; System call to B44
$BE2    $D47D   DRW      V4, V7, #D      ; Draw 13-byte sprite at V4, V7
$BE4    $F392   UNKNOWN  F392            ; Unknown Fxxx instruction
$BE6    $8B89   UNKNOWN  8B89            ; Unknown 8xxx instruction
$BE8    $4027   SNE      V0, #27         ; Skip if V0 != 39
$BEA    $2435   CALL     $435            ; Call subroutine at 435
$BEC    $FD26   UNKNOWN  FD26            ; Unknown Fxxx instruction
$BEE    $FF84   UNKNOWN  FF84            ; Unknown Fxxx instruction
$BF0    $FFF0   UNKNOWN  FFF0            ; Unknown Fxxx instruction
$BF2    $4C42   SNE      VC, #42         ; Skip if VC != 66
$BF4    $F43B   UNKNOWN  F43B            ; Unknown Fxxx instruction
$BF6    $BF16   JP       V0, $F16        ; Jump to V0 + F16
$BF8    $0079   SYS      $079            ; System call to 079
$BFA    $D786   DRW      V7, V8, #6      ; Draw 6-byte sprite at V7, V8
$BFC    $1E73   JP       $E73            ; Jump to E73
$BFE    $851E   SHL      V5              ; V5 <<= 1, VF = MSB
$C00    $6A02   LD       VA, #02         ; Load 2 into VA
$C02    $12C6   JP       $2C6            ; Jump to 2C6
$C04    $CAA3   RND      VA, #A3         ; VA = random & A3
$C06    $1DEB   JP       $DEB            ; Jump to DEB
$C08    $08F4   SYS      $8F4            ; System call to 8F4
$C0A    $22C5   CALL     $2C5            ; Call subroutine at 2C5
$C0C    $90FC   UNKNOWN  $90FC           ; Unknown 9xxx instruction
$C0E    $C494   RND      V4, #94         ; V4 = random & 94
$C10    $9D0C   UNKNOWN  $9D0C           ; Unknown 9xxx instruction
$C12    $5C8A   UNKNOWN  $5C8A           ; Unknown 5xxx instruction
$C14    $5743   UNKNOWN  $5743           ; Unknown 5xxx instruction
$C16    $246C   CALL     $46C            ; Call subroutine at 46C
$C18    $6679   LD       V6, #79         ; Load 121 into V6
$C1A    $8639   UNKNOWN  8639            ; Unknown 8xxx instruction
$C1C    $74D5   ADD      V4, #D5         ; Add 213 to V4
$C1E    $F342   UNKNOWN  F342            ; Unknown Fxxx instruction
$C20    $4196   SNE      V1, #96         ; Skip if V1 != 150
$C22    $012D   SYS      $12D            ; System call to 12D
$C24    $847D   UNKNOWN  847D            ; Unknown 8xxx instruction
$C26    $EBA7   UNKNOWN  $EBA7           ; Unknown Exxx instruction
$C28    $4B9D   SNE      VB, #9D         ; Skip if VB != 157
$C2A    $D282   DRW      V2, V8, #2      ; Draw 2-byte sprite at V2, V8
$C2C    $9C40   SNE      VC, V4          ; Skip if VC != V4
$C2E    $4485   SNE      V4, #85         ; Skip if V4 != 133
$C30    $886C   UNKNOWN  886C            ; Unknown 8xxx instruction
$C32    $7408   ADD      V4, #08         ; Add 8 to V4
$C34    $1F4E   JP       $F4E            ; Jump to F4E
$C36    $E567   UNKNOWN  $E567           ; Unknown Exxx instruction
$C38    $EE7B   UNKNOWN  $EE7B           ; Unknown Exxx instruction
$C3A    $50C6   UNKNOWN  $50C6           ; Unknown 5xxx instruction
$C3C    $20FF   CALL     $0FF            ; Call subroutine at 0FF
$C3E    $170D   JP       $70D            ; Jump to 70D
$C40    $3B07   SE       VB, #07         ; Skip if VB == 7
$C42    $EECA   UNKNOWN  $EECA           ; Unknown Exxx instruction
$C44    $5C51   UNKNOWN  $5C51           ; Unknown 5xxx instruction
$C46    $5DA7   UNKNOWN  $5DA7           ; Unknown 5xxx instruction
$C48    $3D46   SE       VD, #46         ; Skip if VD == 70
$C4A    $C633   RND      V6, #33         ; V6 = random & 33
$C4C    $EE90   UNKNOWN  $EE90           ; Unknown Exxx instruction
$C4E    $80C4   ADD      V0, VC          ; V0 += VC, VF = carry
$C50    $2946   CALL     $946            ; Call subroutine at 946
$C52    $0630   SYS      $630            ; System call to 630
$C54    $BEDF   JP       V0, $EDF        ; Jump to V0 + EDF
$C56    $7529   ADD      V5, #29         ; Add 41 to V5
$C58    $7B65   ADD      VB, #65         ; Add 101 to VB
$C5A    $8F49   UNKNOWN  8F49            ; Unknown 8xxx instruction
$C5C    $AC8C   LD       I, $C8C         ; Load C8C into I
$C5E    $8175   SUB      V1, V7          ; V1 -= V7, VF = !borrow
$C60    $CE98   RND      VE, #98         ; VE = random & 98
$C62    $0119   SYS      $119            ; System call to 119
$C64    $3347   SE       V3, #47         ; Skip if V3 == 71
$C66    $25B5   CALL     $5B5            ; Call subroutine at 5B5
$C68    $A4C0   LD       I, $4C0         ; Load 4C0 into I
$C6A    $9B58   UNKNOWN  $9B58           ; Unknown 9xxx instruction
$C6C    $6BC0   LD       VB, #C0         ; Load 192 into VB
$C6E    $2E50   CALL     $E50            ; Call subroutine at E50
$C70    $13B5   JP       $3B5            ; Jump to 3B5
$C72    $50DC   UNKNOWN  $50DC           ; Unknown 5xxx instruction
$C74    $A876   LD       I, $876         ; Load 876 into I
$C76    $716B   ADD      V1, #6B         ; Add 107 to V1
$C78    $C12C   RND      V1, #2C         ; V1 = random & 2C
$C7A    $B011   JP       V0, $011        ; Jump to V0 + 011
$C7C    $6DF3   LD       VD, #F3         ; Load 243 into VD
$C7E    $328D   SE       V2, #8D         ; Skip if V2 == 141
$C80    $1B6C   JP       $B6C            ; Jump to B6C
$C82    $263A   CALL     $63A            ; Call subroutine at 63A
$C84    $000D   SYS      $00D            ; System call to 00D
$C86    $2A7C   CALL     $A7C            ; Call subroutine at A7C
$C88    $0876   SYS      $876            ; System call to 876
$C8A    $1A0C   JP       $A0C            ; Jump to A0C
$C8C    $5A3B   UNKNOWN  $5A3B           ; Unknown 5xxx instruction
$C8E    $BAE1   JP       V0, $AE1        ; Jump to V0 + AE1
$C90    $C17D   RND      V1, #7D         ; V1 = random & 7D
$C92    $D180   DRW      V1, V8, #0      ; Draw 0-byte sprite at V1, V8
$C94    $5408   UNKNOWN  $5408           ; Unknown 5xxx instruction
$C96    $DA7A   DRW      VA, V7, #A      ; Draw 10-byte sprite at VA, V7
$C98    $1EB4   JP       $EB4            ; Jump to EB4
$C9A    $C08A   RND      V0, #8A         ; V0 = random & 8A
$C9C    $CAAD   RND      VA, #AD         ; VA = random & AD
$C9E    $2F31   CALL     $F31            ; Call subroutine at F31
$CA0    $9151   UNKNOWN  $9151           ; Unknown 9xxx instruction
$CA2    $745E   ADD      V4, #5E         ; Add 94 to V4
$CA4    $029C   SYS      $29C            ; System call to 29C
$CA6    $51E6   UNKNOWN  $51E6           ; Unknown 5xxx instruction
$CA8    $F2BB   UNKNOWN  F2BB            ; Unknown Fxxx instruction
$CAA    $9A1A   UNKNOWN  $9A1A           ; Unknown 9xxx instruction
$CAC    $6FEA   LD       VF, #EA         ; Load 234 into VF
$CAE    $EFBA   UNKNOWN  $EFBA           ; Unknown Exxx instruction
$CB0    $3ECE   SE       VE, #CE         ; Skip if VE == 206
$CB2    $122E   JP       $22E            ; Jump to 22E
$CB4    $4B91   SNE      VB, #91         ; Skip if VB != 145
$CB6    $EC7B   UNKNOWN  $EC7B           ; Unknown Exxx instruction
$CB8    $D6D0   DRW      V6, VD, #0      ; Draw 0-byte sprite at V6, VD
$CBA    $7ACC   ADD      VA, #CC         ; Add 204 to VA
$CBC    $4E7E   SNE      VE, #7E         ; Skip if VE != 126
$CBE    $173B   JP       $73B            ; Jump to 73B
$CC0    $1881   JP       $881            ; Jump to 881
$CC2    $36AC   SE       V6, #AC         ; Skip if V6 == 172
$CC4    $9254   UNKNOWN  $9254           ; Unknown 9xxx instruction
$CC6    $D3FB   DRW      V3, VF, #B      ; Draw 11-byte sprite at V3, VF
$CC8    $6601   LD       V6, #01         ; Load 1 into V6
$CCA    $DD15   DRW      VD, V1, #5      ; Draw 5-byte sprite at VD, V1
$CCC    $A80F   LD       I, $80F         ; Load 80F into I
$CCE    $F718   LD       ST, V7          ; Sound timer = V7
$CD0    $77CB   ADD      V7, #CB         ; Add 203 to V7
$CD2    $3463   SE       V4, #63         ; Skip if V4 == 99
$CD4    $1628   JP       $628            ; Jump to 628
$CD6    $7D71   ADD      VD, #71         ; Add 113 to VD
$CD8    $B0EE   JP       V0, $0EE        ; Jump to V0 + 0EE
$CDA    $1998   JP       $998            ; Jump to 998
$CDC    $A9EC   LD       I, $9EC         ; Load 9EC into I
$CDE    $3BD4   SE       VB, #D4         ; Skip if VB == 212
$CE0    $13C0   JP       $3C0            ; Jump to 3C0
$CE2    $4E96   SNE      VE, #96         ; Skip if VE != 150
$CE4    $36A9   SE       V6, #A9         ; Skip if V6 == 169
$CE6    $AD93   LD       I, $D93         ; Load D93 into I
$CE8    $D7D9   DRW      V7, VD, #9      ; Draw 9-byte sprite at V7, VD
$CEA    $C82A   RND      V8, #2A         ; V8 = random & 2A
$CEC    $37E5   SE       V7, #E5         ; Skip if V7 == 229
$CEE    $1183   JP       $183            ; Jump to 183
$CF0    $86D8   UNKNOWN  86D8            ; Unknown 8xxx instruction
$CF2    $CA3E   RND      VA, #3E         ; VA = random & 3E
$CF4    $136C   JP       $36C            ; Jump to 36C
$CF6    $BF80   JP       V0, $F80        ; Jump to V0 + F80
$CF8    $DD90   DRW      VD, V9, #0      ; Draw 0-byte sprite at VD, V9
$CFA    $A59D   LD       I, $59D         ; Load 59D into I
$CFC    $D809   DRW      V8, V0, #9      ; Draw 9-byte sprite at V8, V0
$CFE    $D473   DRW      V4, V7, #3      ; Draw 3-byte sprite at V4, V7
$D00    $EDC3   UNKNOWN  $EDC3           ; Unknown Exxx instruction
$D02    $F675   UNKNOWN  F675            ; Unknown Fxxx instruction
$D04    $E637   UNKNOWN  $E637           ; Unknown Exxx instruction
$D06    $0359   SYS      $359            ; System call to 359
$D08    $65EF   LD       V5, #EF         ; Load 239 into V5
$D0A    $4E14   SNE      VE, #14         ; Skip if VE != 20
$D0C    $2C4B   CALL     $C4B            ; Call subroutine at C4B
$D0E    $DD9B   DRW      VD, V9, #B      ; Draw 11-byte sprite at VD, V9
$D10    $F936   UNKNOWN  F936            ; Unknown Fxxx instruction
$D12    $7C8D   ADD      VC, #8D         ; Add 141 to VC
$D14    $8A6F   UNKNOWN  8A6F            ; Unknown 8xxx instruction
$D16    $D690   DRW      V6, V9, #0      ; Draw 0-byte sprite at V6, V9
$D18    $ED60   UNKNOWN  $ED60           ; Unknown Exxx instruction
$D1A    $0DD0   SYS      $DD0            ; System call to DD0
$D1C    $3D37   SE       VD, #37         ; Skip if VD == 55
$D1E    $B496   JP       V0, $496        ; Jump to V0 + 496
$D20    $7D59   ADD      VD, #59         ; Add 89 to VD
$D22    $B63F   JP       V0, $63F        ; Jump to V0 + 63F
$D24    $E4FF   UNKNOWN  $E4FF           ; Unknown Exxx instruction
$D26    $9D30   SNE      VD, V3          ; Skip if VD != V3
$D28    $F06D   UNKNOWN  F06D            ; Unknown Fxxx instruction
$D2A    $2C1A   CALL     $C1A            ; Call subroutine at C1A
$D2C    $F793   UNKNOWN  F793            ; Unknown Fxxx instruction
$D2E    $90AA   UNKNOWN  $90AA           ; Unknown 9xxx instruction
$D30    $C6D9   RND      V6, #D9         ; V6 = random & D9
$D32    $E8E9   UNKNOWN  $E8E9           ; Unknown Exxx instruction
$D34    $5C39   UNKNOWN  $5C39           ; Unknown 5xxx instruction
$D36    $F82C   UNKNOWN  F82C            ; Unknown Fxxx instruction
$D38    $1ADD   JP       $ADD            ; Jump to ADD
$D3A    $BCFE   JP       V0, $CFE        ; Jump to V0 + CFE
$D3C    $84DD   UNKNOWN  84DD            ; Unknown 8xxx instruction
$D3E    $02E4   SYS      $2E4            ; System call to 2E4
$D40    $1389   JP       $389            ; Jump to 389
$D42    $7E90   ADD      VE, #90         ; Add 144 to VE
$D44    $8BEC   UNKNOWN  8BEC            ; Unknown 8xxx instruction
$D46    $067D   SYS      $67D            ; System call to 67D
$D48    $E926   UNKNOWN  $E926           ; Unknown Exxx instruction
$D4A    $C52C   RND      V5, #2C         ; V5 = random & 2C
$D4C    $F465   LD       V4, [I]         ; Load V0-V4 from I
$D4E    $796D   ADD      V9, #6D         ; Add 109 to V9
$D50    $680C   LD       V8, #0C         ; Load 12 into V8
$D52    $A288   LD       I, $288         ; Load 288 into I
$D54    $82B4   ADD      V2, VB          ; V2 += VB, VF = carry
$D56    $3947   SE       V9, #47         ; Skip if V9 == 71
$D58    $3D2B   SE       VD, #2B         ; Skip if VD == 43
$D5A    $BBB8   JP       V0, $BB8        ; Jump to V0 + BB8
$D5C    $57D1   UNKNOWN  $57D1           ; Unknown 5xxx instruction
$D5E    $92B4   UNKNOWN  $92B4           ; Unknown 9xxx instruction
$D60    $BFCA   JP       V0, $FCA        ; Jump to V0 + FCA
$D62    $8DDB   UNKNOWN  8DDB            ; Unknown 8xxx instruction
$D64    $117F   JP       $17F            ; Jump to 17F
$D66    $3EC1   SE       VE, #C1         ; Skip if VE == 193
$D68    $B493   JP       V0, $493        ; Jump to V0 + 493
$D6A    $A99C   LD       I, $99C         ; Load 99C into I
$D6C    $F262   UNKNOWN  F262            ; Unknown Fxxx instruction
$D6E    $26A6   CALL     $6A6            ; Call subroutine at 6A6
$D70    $6A91   LD       VA, #91         ; Load 145 into VA
$D72    $E89F   UNKNOWN  $E89F           ; Unknown Exxx instruction
$D74    $22D1   CALL     $2D1            ; Call subroutine at 2D1
$D76    $F8DD   UNKNOWN  F8DD            ; Unknown Fxxx instruction
$D78    $203C   CALL     $03C            ; Call subroutine at 03C
$D7A    $F89B   UNKNOWN  F89B            ; Unknown Fxxx instruction
$D7C    $9C42   UNKNOWN  $9C42           ; Unknown 9xxx instruction
$D7E    $3E12   SE       VE, #12         ; Skip if VE == 18
$D80    $0840   SYS      $840            ; System call to 840
$D82    $9C97   UNKNOWN  $9C97           ; Unknown 9xxx instruction
$D84    $EF2A   UNKNOWN  $EF2A           ; Unknown Exxx instruction
$D86    $D416   DRW      V4, V1, #6      ; Draw 6-byte sprite at V4, V1
$D88    $450A   SNE      V5, #0A         ; Skip if V5 != 10
$D8A    $86E6   SHR      V6              ; V6 >>= 1, VF = LSB
$D8C    $0943   SYS      $943            ; System call to 943
$D8E    $09C5   SYS      $9C5            ; System call to 9C5
$D90    $5A44   UNKNOWN  $5A44           ; Unknown 5xxx instruction
$D92    $5BB4   UNKNOWN  $5BB4           ; Unknown 5xxx instruction
$D94    $8D93   XOR      VD, V9          ; VD ^= V9
$D96    $8D9A   UNKNOWN  8D9A            ; Unknown 8xxx instruction
$D98    $8B13   XOR      VB, V1          ; VB ^= V1
$D9A    $4160   SNE      V1, #60         ; Skip if V1 != 96
$D9C    $591D   UNKNOWN  $591D           ; Unknown 5xxx instruction
$D9E    $3E49   SE       VE, #49         ; Skip if VE == 73
$DA0    $2E9A   CALL     $E9A            ; Call subroutine at E9A
$DA2    $CB84   RND      VB, #84         ; VB = random & 84
$DA4    $9B80   SNE      VB, V8          ; Skip if VB != V8
$DA6    $F02B   UNKNOWN  F02B            ; Unknown Fxxx instruction
$DA8    $DC7E   DRW      VC, V7, #E      ; Draw 14-byte sprite at VC, V7
$DAA    $53C4   UNKNOWN  $53C4           ; Unknown 5xxx instruction
$DAC    $2F32   CALL     $F32            ; Call subroutine at F32
$DAE    $4794   SNE      V7, #94         ; Skip if V7 != 148
$DB0    $12D0   JP       $2D0            ; Jump to 2D0
$DB2    $7CE9   ADD      VC, #E9         ; Add 233 to VC
$DB4    $7019   ADD      V0, #19         ; Add 25 to V0
$DB6    $3580   SE       V5, #80         ; Skip if V5 == 128
$DB8    $1396   JP       $396            ; Jump to 396
$DBA    $0DA7   SYS      $DA7            ; System call to DA7
$DBC    $904E   UNKNOWN  $904E           ; Unknown 9xxx instruction
$DBE    $D7EC   DRW      V7, VE, #C      ; Draw 12-byte sprite at V7, VE
$DC0    $890F   UNKNOWN  890F            ; Unknown 8xxx instruction
$DC2    $BACF   JP       V0, $ACF        ; Jump to V0 + ACF
$DC4    $249F   CALL     $49F            ; Call subroutine at 49F
$DC6    $A2C8   LD       I, $2C8         ; Load 2C8 into I
$DC8    $CC0E   RND      VC, #0E         ; VC = random & 0E
$DCA    $44A5   SNE      V4, #A5         ; Skip if V4 != 165
$DCC    $C9D8   RND      V9, #D8         ; V9 = random & D8
$DCE    $6F1F   LD       VF, #1F         ; Load 31 into VF
$DD0    $49DA   SNE      V9, #DA         ; Skip if V9 != 218
$DD2    $2657   CALL     $657            ; Call subroutine at 657
$DD4    $AEA6   LD       I, $EA6         ; Load EA6 into I
$DD6    $61FB   LD       V1, #FB         ; Load 251 into V1
$DD8    $716A   ADD      V1, #6A         ; Add 106 to V1
$DDA    $2672   CALL     $672            ; Call subroutine at 672
$DDC    $2FFF   CALL     $FFF            ; Call subroutine at FFF
$DDE    $91B5   UNKNOWN  $91B5           ; Unknown 9xxx instruction
$DE0    $F9D7   UNKNOWN  F9D7            ; Unknown Fxxx instruction
$DE2    $82B7   SUBN     V2, VB          ; V2 = VB - V2, VF = !borrow
$DE4    $A219   LD       I, $219         ; Load 219 into I
$DE6    $D1FA   DRW      V1, VF, #A      ; Draw 10-byte sprite at V1, VF
$DE8    $3E16   SE       VE, #16         ; Skip if VE == 22
$DEA    $CD9D   RND      VD, #9D         ; VD = random & 9D
$DEC    $8F19   UNKNOWN  8F19            ; Unknown 8xxx instruction
$DEE    $6D04   LD       VD, #04         ; Load 4 into VD
$DF0    $6D0D   LD       VD, #0D         ; Load 13 into VD
$DF2    $C5CE   RND      V5, #CE         ; V5 = random & CE
$DF4    $7071   ADD      V0, #71         ; Add 113 to V0
$DF6    $5BC3   UNKNOWN  $5BC3           ; Unknown 5xxx instruction
$DF8    $711D   ADD      V1, #1D         ; Add 29 to V1
$DFA    $2F4A   CALL     $F4A            ; Call subroutine at F4A
$DFC    $CE88   RND      VE, #88         ; VE = random & 88
$DFE    $8F64   ADD      VF, V6          ; VF += V6, VF = carry
$E00    $C22E   RND      V2, #2E         ; V2 = random & 2E
$E02    $3EC5   SE       VE, #C5         ; Skip if VE == 197
$E04    $0672   SYS      $672            ; System call to 672
$E06    $90D5   UNKNOWN  $90D5           ; Unknown 9xxx instruction
$E08    $5A10   SE       VA, V1          ; Skip if VA == V1
$E0A    $F701   UNKNOWN  F701            ; Unknown Fxxx instruction
$E0C    $9439   UNKNOWN  $9439           ; Unknown 9xxx instruction
$E0E    $BFCB   JP       V0, $FCB        ; Jump to V0 + FCB
$E10    $4AE9   SNE      VA, #E9         ; Skip if VA != 233
$E12    $2EA4   CALL     $EA4            ; Call subroutine at EA4
$E14    $7B14   ADD      VB, #14         ; Add 20 to VB
$E16    $976F   UNKNOWN  $976F           ; Unknown 9xxx instruction
$E18    $E950   UNKNOWN  $E950           ; Unknown Exxx instruction
$E1A    $45FC   SNE      V5, #FC         ; Skip if V5 != 252
$E1C    $B433   JP       V0, $433        ; Jump to V0 + 433
$E1E    $AF4F   LD       I, $F4F         ; Load F4F into I
$E20    $E8CB   UNKNOWN  $E8CB           ; Unknown Exxx instruction
$E22    $D5A9   DRW      V5, VA, #9      ; Draw 9-byte sprite at V5, VA
$E24    $F7D1   UNKNOWN  F7D1            ; Unknown Fxxx instruction
$E26    $4EE6   SNE      VE, #E6         ; Skip if VE != 230
$E28    $E305   UNKNOWN  $E305           ; Unknown Exxx instruction
$E2A    $0937   SYS      $937            ; System call to 937
$E2C    $5BD1   UNKNOWN  $5BD1           ; Unknown 5xxx instruction
$E2E    $F15B   UNKNOWN  F15B            ; Unknown Fxxx instruction
$E30    $C761   RND      V7, #61         ; V7 = random & 61
$E32    $7F72   ADD      VF, #72         ; Add 114 to VF
$E34    $6666   LD       V6, #66         ; Load 102 into V6
$E36    $5539   UNKNOWN  $5539           ; Unknown 5xxx instruction
$E38    $CC67   RND      VC, #67         ; VC = random & 67
$E3A    $1644   JP       $644            ; Jump to 644
$E3C    $917B   UNKNOWN  $917B           ; Unknown 9xxx instruction
$E3E    $A31F   LD       I, $31F         ; Load 31F into I
$E40    $D575   DRW      V5, V7, #5      ; Draw 5-byte sprite at V5, V7
$E42    $0234   SYS      $234            ; System call to 234
$E44    $1C2A   JP       $C2A            ; Jump to C2A
$E46    $B296   JP       V0, $296        ; Jump to V0 + 296
$E48    $BFE2   JP       V0, $FE2        ; Jump to V0 + FE2
$E4A    $D7D6   DRW      V7, VD, #6      ; Draw 6-byte sprite at V7, VD
$E4C    $5E48   UNKNOWN  $5E48           ; Unknown 5xxx instruction
$E4E    $3831   SE       V8, #31         ; Skip if V8 == 49
$E50    $9B0F   UNKNOWN  $9B0F           ; Unknown 9xxx instruction
$E52    $1C8C   JP       $C8C            ; Jump to C8C
$E54    $BEA6   JP       V0, $EA6        ; Jump to V0 + EA6
$E56    $7367   ADD      V3, #67         ; Add 103 to V3
$E58    $5DC3   UNKNOWN  $5DC3           ; Unknown 5xxx instruction
$E5A    $4AF5   SNE      VA, #F5         ; Skip if VA != 245
$E5C    $09E4   SYS      $9E4            ; System call to 9E4
$E5E    $C4CB   RND      V4, #CB         ; V4 = random & CB
$E60    $76C6   ADD      V6, #C6         ; Add 198 to V6
$E62    $ED06   UNKNOWN  $ED06           ; Unknown Exxx instruction
$E64    $A773   LD       I, $773         ; Load 773 into I
$E66    $6C76   LD       VC, #76         ; Load 118 into VC
$E68    $AD89   LD       I, $D89         ; Load D89 into I
$E6A    $895F   UNKNOWN  895F            ; Unknown 8xxx instruction
$E6C    $D0CF   DRW      V0, VC, #F      ; Draw 15-byte sprite at V0, VC
$E6E    $959B   UNKNOWN  $959B           ; Unknown 9xxx instruction
$E70    $E150   UNKNOWN  $E150           ; Unknown Exxx instruction
$E72    $D163   DRW      V1, V6, #3      ; Draw 3-byte sprite at V1, V6
$E74    $C0AF   RND      V0, #AF         ; V0 = random & AF
$E76    $A574   LD       I, $574         ; Load 574 into I
$E78    $2AE9   CALL     $AE9            ; Call subroutine at AE9
$E7A    $FE2D   UNKNOWN  FE2D            ; Unknown Fxxx instruction
$E7C    $D12D   DRW      V1, V2, #D      ; Draw 13-byte sprite at V1, V2
$E7E    $FE7F   UNKNOWN  FE7F            ; Unknown Fxxx instruction
$E80    $C3F2   RND      V3, #F2         ; V3 = random & F2
$E82    $8D19   UNKNOWN  8D19            ; Unknown 8xxx instruction
$E84    $3E48   SE       VE, #48         ; Skip if VE == 72
$E86    $389D   SE       V8, #9D         ; Skip if V8 == 157
$E88    $3D0B   SE       VD, #0B         ; Skip if VD == 11
$E8A    $F2EA   UNKNOWN  F2EA            ; Unknown Fxxx instruction
$E8C    $1DAD   JP       $DAD            ; Jump to DAD
$E8E    $2E13   CALL     $E13            ; Call subroutine at E13
$E90    $DE50   DRW      VE, V5, #0      ; Draw 0-byte sprite at VE, V5
$E92    $B302   JP       V0, $302        ; Jump to V0 + 302
$E94    $74DE   ADD      V4, #DE         ; Add 222 to V4
$E96    $DF57   DRW      VF, V5, #7      ; Draw 7-byte sprite at VF, V5
$E98    $F3A2   UNKNOWN  F3A2            ; Unknown Fxxx instruction
$E9A    $5A5D   UNKNOWN  $5A5D           ; Unknown 5xxx instruction
$E9C    $2FE7   CALL     $FE7            ; Call subroutine at FE7
$E9E    $9198   UNKNOWN  $9198           ; Unknown 9xxx instruction
$EA0    $8B5A   UNKNOWN  8B5A            ; Unknown 8xxx instruction
$EA2    $D31D   DRW      V3, V1, #D      ; Draw 13-byte sprite at V3, V1
$EA4    $6C32   LD       VC, #32         ; Load 50 into VC
$EA6    $A99F   LD       I, $99F         ; Load 99F into I
$EA8    $D2CD   DRW      V2, VC, #D      ; Draw 13-byte sprite at V2, VC
$EAA    $02DB   SYS      $2DB            ; System call to 2DB
$EAC    $CE2F   RND      VE, #2F         ; VE = random & 2F
$EAE    $2A36   CALL     $A36            ; Call subroutine at A36
$EB0    $5573   UNKNOWN  $5573           ; Unknown 5xxx instruction
$EB2    $3532   SE       V5, #32         ; Skip if V5 == 50
$EB4    $B872   JP       V0, $872        ; Jump to V0 + 872
$EB6    $6097   LD       V0, #97         ; Load 151 into V0
$EB8    $94EB   UNKNOWN  $94EB           ; Unknown 9xxx instruction
$EBA    $230D   CALL     $30D            ; Call subroutine at 30D
$EBC    $E525   UNKNOWN  $E525           ; Unknown Exxx instruction
$EBE    $4D3B   SNE      VD, #3B         ; Skip if VD != 59
$EC0    $FFAB   UNKNOWN  FFAB            ; Unknown Fxxx instruction
$EC2    $4836   SNE      V8, #36         ; Skip if V8 != 54
$EC4    $A91C   LD       I, $91C         ; Load 91C into I
$EC6    $40C4   SNE      V0, #C4         ; Skip if V0 != 196
$EC8    $EB5E   UNKNOWN  $EB5E           ; Unknown Exxx instruction
$ECA    $BF46   JP       V0, $F46        ; Jump to V0 + F46
$ECC    $FB8A   UNKNOWN  FB8A            ; Unknown Fxxx instruction
$ECE    $AF5A   LD       I, $F5A         ; Load F5A into I
$ED0    $6569   LD       V5, #69         ; Load 105 into V5
$ED2    $21ED   CALL     $1ED            ; Call subroutine at 1ED
$ED4    $6670   LD       V6, #70         ; Load 112 into V6
$ED6    $3B1C   SE       VB, #1C         ; Skip if VB == 28
$ED8    $1BCF   JP       $BCF            ; Jump to BCF
$EDA    $588E   UNKNOWN  $588E           ; Unknown 5xxx instruction
$EDC    $BA44   JP       V0, $A44        ; Jump to V0 + A44
$EDE    $0F5C   SYS      $F5C            ; System call to F5C
$EE0    $02AE   SYS      $2AE            ; System call to 2AE
$EE2    $B738   JP       V0, $738        ; Jump to V0 + 738
$EE4    $F938   UNKNOWN  F938            ; Unknown Fxxx instruction
$EE6    $E3C4   UNKNOWN  $E3C4           ; Unknown Exxx instruction
$EE8    $BAFB   JP       V0, $AFB        ; Jump to V0 + AFB
$EEA    $799B   ADD      V9, #9B         ; Add 155 to V9
$EEC    $D78F   DRW      V7, V8, #F      ; Draw 15-byte sprite at V7, V8
$EEE    $9796   UNKNOWN  $9796           ; Unknown 9xxx instruction
$EF0    $E0D2   UNKNOWN  $E0D2           ; Unknown Exxx instruction
$EF2    $22F9   CALL     $2F9            ; Call subroutine at 2F9
$EF4    $8B02   AND      VB, V0          ; VB &= V0
$EF6    $CEDF   RND      VE, #DF         ; VE = random & DF
$EF8    $8761   OR       V7, V6          ; V7 |= V6
$EFA    $5F49   UNKNOWN  $5F49           ; Unknown 5xxx instruction
$EFC    $AEB5   LD       I, $EB5         ; Load EB5 into I
$EFE    $B5C3   JP       V0, $5C3        ; Jump to V0 + 5C3
$F00    $A89B   LD       I, $89B         ; Load 89B into I
$F02    $F7B9   UNKNOWN  F7B9            ; Unknown Fxxx instruction
$F04    $20AA   CALL     $0AA            ; Call subroutine at 0AA
$F06    $E092   UNKNOWN  $E092           ; Unknown Exxx instruction
$F08    $9F30   SNE      VF, V3          ; Skip if VF != V3
$F0A    $BBB3   JP       V0, $BB3        ; Jump to V0 + BB3
$F0C    $80D1   OR       V0, VD          ; V0 |= VD
$F0E    $4197   SNE      V1, #97         ; Skip if V1 != 151
$F10    $85D7   SUBN     V5, VD          ; V5 = VD - V5, VF = !borrow
$F12    $7E56   ADD      VE, #56         ; Add 86 to VE
$F14    $1081   JP       $081            ; Jump to 081
$F16    $B356   JP       V0, $356        ; Jump to V0 + 356
$F18    $0C1A   SYS      $C1A            ; System call to C1A
$F1A    $1F61   JP       $F61            ; Jump to F61
$F1C    $704D   ADD      V0, #4D         ; Add 77 to V0
$F1E    $745A   ADD      V4, #5A         ; Add 90 to V4
$F20    $13D6   JP       $3D6            ; Jump to 3D6
$F22    $FF8F   UNKNOWN  FF8F            ; Unknown Fxxx instruction
$F24    $92D2   UNKNOWN  $92D2           ; Unknown 9xxx instruction
$F26    $9336   UNKNOWN  $9336           ; Unknown 9xxx instruction
$F28    $19D0   JP       $9D0            ; Jump to 9D0
$F2A    $9380   SNE      V3, V8          ; Skip if V3 != V8
$F2C    $7A89   ADD      VA, #89         ; Add 137 to VA
$F2E    $44AC   SNE      V4, #AC         ; Skip if V4 != 172
$F30    $F96C   UNKNOWN  F96C            ; Unknown Fxxx instruction
$F32    $ACB8   LD       I, $CB8         ; Load CB8 into I
$F34    $3BB3   SE       VB, #B3         ; Skip if VB == 179
$F36    $B260   JP       V0, $260        ; Jump to V0 + 260
$F38    $C88A   RND      V8, #8A         ; V8 = random & 8A
$F3A    $12B6   JP       $2B6            ; Jump to 2B6
$F3C    $6C51   LD       VC, #51         ; Load 81 into VC
$F3E    $46B7   SNE      V6, #B7         ; Skip if V6 != 183
$F40    $DA85   DRW      VA, V8, #5      ; Draw 5-byte sprite at VA, V8
$F42    $79C1   ADD      V9, #C1         ; Add 193 to V9
$F44    $A7E4   LD       I, $7E4         ; Load 7E4 into I
$F46    $D377   DRW      V3, V7, #7      ; Draw 7-byte sprite at V3, V7
$F48    $6A29   LD       VA, #29         ; Load 41 into VA
$F4A    $1C3B   JP       $C3B            ; Jump to C3B
$F4C    $FDBE   UNKNOWN  FDBE            ; Unknown Fxxx instruction
$F4E    $804C   UNKNOWN  804C            ; Unknown 8xxx instruction
$F50    $C588   RND      V5, #88         ; V5 = random & 88
$F52    $F985   UNKNOWN  F985            ; Unknown Fxxx instruction
$F54    $AA3D   LD       I, $A3D         ; Load A3D into I
$F56    $15B0   JP       $5B0            ; Jump to 5B0
$F58    $F03E   UNKNOWN  F03E            ; Unknown Fxxx instruction
$F5A    $711B   ADD      V1, #1B         ; Add 27 to V1
$F5C    $9D15   UNKNOWN  $9D15           ; Unknown 9xxx instruction
$F5E    $10D8   JP       $0D8            ; Jump to 0D8
$F60    $A01E   LD       I, $01E         ; Load 01E into I
$F62    $E09A   UNKNOWN  $E09A           ; Unknown Exxx instruction
$F64    $B6EB   JP       V0, $6EB        ; Jump to V0 + 6EB
$F66    $3455   SE       V4, #55         ; Skip if V4 == 85
$F68    $B87F   JP       V0, $87F        ; Jump to V0 + 87F
$F6A    $4D5F   SNE      VD, #5F         ; Skip if VD != 95
$F6C    $7170   ADD      V1, #70         ; Add 112 to V1
$F6E    $8459   UNKNOWN  8459            ; Unknown 8xxx instruction
$F70    $032C   SYS      $32C            ; System call to 32C
$F72    $F10E   UNKNOWN  F10E            ; Unknown Fxxx instruction
$F74    $A056   LD       I, $056         ; Load 056 into I
$F76    $CB47   RND      VB, #47         ; VB = random & 47
$F78    $DB86   DRW      VB, V8, #6      ; Draw 6-byte sprite at VB, V8
$F7A    $AAE0   LD       I, $AE0         ; Load AE0 into I
$F7C    $B5E2   JP       V0, $5E2        ; Jump to V0 + 5E2
$F7E    $1C3E   JP       $C3E            ; Jump to C3E
$F80    $F068   UNKNOWN  F068            ; Unknown Fxxx instruction
$F82    $6042   LD       V0, #42         ; Load 66 into V0
$F84    $07F6   SYS      $7F6            ; System call to 7F6
$F86    $3597   SE       V5, #97         ; Skip if V5 == 151
$F88    $C6FD   RND      V6, #FD         ; V6 = random & FD
$F8A    $C9F0   RND      V9, #F0         ; V9 = random & F0
$F8C    $4AC0   SNE      VA, #C0         ; Skip if VA != 192
$F8E    $718F   ADD      V1, #8F         ; Add 143 to V1
$F90    $A038   LD       I, $038         ; Load 038 into I
$F92    $ED3B   UNKNOWN  $ED3B           ; Unknown Exxx instruction
$F94    $F49D   UNKNOWN  F49D            ; Unknown Fxxx instruction
$F96    $4BE8   SNE      VB, #E8         ; Skip if VB != 232
$F98    $FAC4   UNKNOWN  FAC4            ; Unknown Fxxx instruction
$F9A    $DE99   DRW      VE, V9, #9      ; Draw 9-byte sprite at VE, V9
$F9C    $157F   JP       $57F            ; Jump to 57F
$F9E    $D534   DRW      V5, V3, #4      ; Draw 4-byte sprite at V5, V3
$FA0    $8E68   UNKNOWN  8E68            ; Unknown 8xxx instruction
$FA2    $0951   SYS      $951            ; System call to 951
$FA4    $1C10   JP       $C10            ; Jump to C10
$FA6    $658A   LD       V5, #8A         ; Load 138 into V5
$FA8    $D86F   DRW      V8, V6, #F      ; Draw 15-byte sprite at V8, V6
$FAA    $C1E2   RND      V1, #E2         ; V1 = random & E2
$FAC    $1950   JP       $950            ; Jump to 950
$FAE    $FAA3   UNKNOWN  FAA3            ; Unknown Fxxx instruction
$FB0    $FA3D   UNKNOWN  FA3D            ; Unknown Fxxx instruction
$FB2    $CCA7   RND      VC, #A7         ; VC = random & A7
$FB4    $8E08   UNKNOWN  8E08            ; Unknown 8xxx instruction
$FB6    $1656   JP       $656            ; Jump to 656
$FB8    $9CAD   UNKNOWN  $9CAD           ; Unknown 9xxx instruction
$FBA    $AE2D   LD       I, $E2D         ; Load E2D into I
$FBC    $9902   UNKNOWN  $9902           ; Unknown 9xxx instruction
$FBE    $E129   UNKNOWN  $E129           ; Unknown Exxx instruction
$FC0    $EE11   UNKNOWN  $EE11           ; Unknown Exxx instruction
$FC2    $CBB7   RND      VB, #B7         ; VB = random & B7
$FC4    $89DD   UNKNOWN  89DD            ; Unknown 8xxx instruction
$FC6    $2ABC   CALL     $ABC            ; Call subroutine at ABC
$FC8    $B791   JP       V0, $791        ; Jump to V0 + 791
$FCA    $15E5   JP       $5E5            ; Jump to 5E5
$FCC    $9E8D   UNKNOWN  $9E8D           ; Unknown 9xxx instruction
$FCE    $94A0   SNE      V4, VA          ; Skip if V4 != VA
$FD0    $4B12   SNE      VB, #12         ; Skip if VB != 18
$FD2    $9246   UNKNOWN  $9246           ; Unknown 9xxx instruction
$FD4    $FC9F   UNKNOWN  FC9F            ; Unknown Fxxx instruction
$FD6    $D21E   DRW      V2, V1, #E      ; Draw 14-byte sprite at V2, V1
$FD8    $5C85   UNKNOWN  $5C85           ; Unknown 5xxx instruction
$FDA    $D846   DRW      V8, V4, #6      ; Draw 6-byte sprite at V8, V4
$FDC    $CA45   RND      VA, #45         ; VA = random & 45
$FDE    $7045   ADD      V0, #45         ; Add 69 to V0
$FE0    $C39B   RND      V3, #9B         ; V3 = random & 9B
$FE2    $6F30   LD       VF, #30         ; Load 48 into VF
$FE4    $71B1   ADD      V1, #B1         ; Add 177 to V1
$FE6    $CB96   RND      VB, #96         ; VB = random & 96
$FE8    $143D   JP       $43D            ; Jump to 43D
$FEA    $F024   UNKNOWN  F024            ; Unknown Fxxx instruction
$FEC    $97DC   UNKNOWN  $97DC           ; Unknown 9xxx instruction
$FEE    $DC47   DRW      VC, V4, #7      ; Draw 7-byte sprite at VC, V4
$FF0    $5197   UNKNOWN  $5197           ; Unknown 5xxx instruction
$FF2    $C418   RND      V4, #18         ; V4 = random & 18
$FF4    $F293   UNKNOWN  F293            ; Unknown Fxxx instruction
$FF6    $0C65   SYS      $C65            ; System call to C65
$FF8    $8681   OR       V6, V8          ; V6 |= V8
$FFA    $8CB4   ADD      VC, VB          ; VC += VB, VF = carry
$FFC    $8FE8   UNKNOWN  8FE8            ; Unknown 8xxx instruction
$FFE    $13B0   JP       $3B0            ; Jump to 3B0

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 478 (26.7%)
  JP      : 229 (12.8%)
  LD      : 216 (12.1%)
  CALL    : 124 ( 6.9%)
  ADD     : 123 ( 6.9%)
  DRW     : 117 ( 6.5%)
  SE      : 115 ( 6.4%)
  SYS     : 115 ( 6.4%)
  SNE     : 115 ( 6.4%)
  RND     : 112 ( 6.3%)
  XOR     :  10 ( 0.6%)
  OR      :   9 ( 0.5%)
  SHL     :   8 ( 0.4%)
  SUB     :   6 ( 0.3%)
  AND     :   6 ( 0.3%)
  SUBN    :   4 ( 0.2%)
  SHR     :   3 ( 0.2%)
  SKP     :   1 ( 0.1%)

Memory Operations: 339 (18.9%)
Arithmetic Operations: 158 (8.8%)
