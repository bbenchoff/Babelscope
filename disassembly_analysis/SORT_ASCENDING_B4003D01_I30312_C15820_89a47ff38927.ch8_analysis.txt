
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B4003D01_I30312_C15820_89a47ff38927.ch8
ROM Size: 3584 bytes
Instructions Found: 1791

DISCOVERY INFORMATION:
Batch: 4003
Instance: 30312
Direction: ascending
Final Array: [0, 0, 9, 59, 83, 190, 210, 220]
Operations: R:0 W:1 C:1448 S:207

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 116
Sort Array References:
  $202: LD I, $696 ; Load 696 into I
  $240: LD I, $A37 ; Load A37 into I
  $24E: LD I, $164 ; Load 164 into I
  $25E: LD I, $8B8 ; Load 8B8 into I
  $276: LD I, $D87 ; Load D87 into I
  $278: LD I, $93F ; Load 93F into I
  $282: LD I, $ECA ; Load ECA into I
  $296: LD I, $615 ; Load 615 into I
  $2A0: LD I, $6DC ; Load 6DC into I
  $2A4: LD I, $789 ; Load 789 into I
  $2AA: LD I, $FDF ; Load FDF into I
  $2BC: LD I, $41D ; Load 41D into I
  $30E: LD I, $B86 ; Load B86 into I
  $328: LD I, $2D6 ; Load 2D6 into I
  $338: LD I, $EE7 ; Load EE7 into I
  $36E: LD I, $14B ; Load 14B into I
  $38C: LD I, $915 ; Load 915 into I
  $38E: LD I, $52D ; Load 52D into I
  $39A: LD I, $E05 ; Load E05 into I
  $3A2: LD I, $B1F ; Load B1F into I
  $3CC: LD I, $656 ; Load 656 into I
  $43A: LD I, $C4E ; Load C4E into I
  $442: ADD I, V9 ; I ADDRESS MANIPULATION
  $4BE: LD I, $D85 ; Load D85 into I
  $4F6: LD I, $E25 ; Load E25 into I
  $4F8: LD I, $07B ; Load 07B into I
  $522: LD I, $263 ; Load 263 into I
  $534: LD I, $BAB ; Load BAB into I
  $554: LD I, $5C6 ; Load 5C6 into I
  $55C: LD I, $8C5 ; Load 8C5 into I
  $57A: LD I, $4F4 ; Load 4F4 into I
  $598: LD I, $448 ; Load 448 into I
  $5CE: LD I, $E7B ; Load E7B into I
  $5D8: LD I, $EEE ; Load EEE into I
  $5EE: LD I, $133 ; Load 133 into I
  $60A: LD I, $CD6 ; Load CD6 into I
  $61E: LD I, $841 ; Load 841 into I
  $622: LD I, $DEF ; Load DEF into I
  $656: LD I, $101 ; Load 101 into I
  $6B0: LD I, $C4A ; Load C4A into I
  $6CA: LD I, $83F ; Load 83F into I
  $6CE: LD I, $4B4 ; Load 4B4 into I
  $6EC: LD I, $E23 ; Load E23 into I
  $726: LD I, $2EC ; Load 2EC into I
  $736: LD I, $30A ; Load 30A into I
  $77C: LD I, $836 ; Load 836 into I
  $792: LD I, $973 ; Load 973 into I
  $79A: LD I, $AB5 ; Load AB5 into I
  $7BA: LD I, $D9B ; Load D9B into I
  $80C: LD I, $D78 ; Load D78 into I
  $83E: LD I, $AA0 ; Load AA0 into I
  $864: LD I, $E1A ; Load E1A into I
  $868: LD I, $059 ; Load 059 into I
  $8A0: LD I, $F3F ; Load F3F into I
  $8A8: LD I, $280 ; Load 280 into I
  $8D0: LD I, $FF2 ; Load FF2 into I
  $910: LD I, $75D ; Load 75D into I
  $952: LD I, $AE0 ; Load AE0 into I
  $96A: LD I, $2D2 ; Load 2D2 into I
  $96C: LD I, $09D ; Load 09D into I
  $96E: LD I, $60E ; Load 60E into I
  $98E: LD I, $B89 ; Load B89 into I
  $9DC: LD I, $BC1 ; Load BC1 into I
  $A1C: LD I, $374 ; Load 374 into I
  $A34: LD I, $DA3 ; Load DA3 into I
  $AA8: LD I, $56C ; Load 56C into I
  $AC6: LD I, $86E ; Load 86E into I
  $AC8: LD I, $552 ; Load 552 into I
  $ADA: LD I, $18B ; Load 18B into I
  $AF6: LD I, $FEA ; Load FEA into I
  $B08: LD I, $830 ; Load 830 into I
  $B14: LD I, $FB2 ; Load FB2 into I
  $B18: LD I, $63C ; Load 63C into I
  $B1A: LD I, $2C9 ; Load 2C9 into I
  $B50: LD I, $1CF ; Load 1CF into I
  $B6A: LD I, $51F ; Load 51F into I
  $B7A: LD I, $199 ; Load 199 into I
  $BAE: LD I, $639 ; Load 639 into I
  $BB8: LD I, $9BB ; Load 9BB into I
  $BC8: LD I, $ECD ; Load ECD into I
  $BF6: LD I, $174 ; Load 174 into I
  $C2A: LD I, $788 ; Load 788 into I
  $C3C: LD I, $66A ; Load 66A into I
  $C4C: LD I, $D96 ; Load D96 into I
  $C56: LD I, $B85 ; Load B85 into I
  $C60: LD I, $307 ; Load 307 into I
  $C68: LD I, $AC5 ; Load AC5 into I
  $C82: LD I, $4C3 ; Load 4C3 into I
  $C84: LD I, $3EC ; Load 3EC into I
  $C9A: LD I, $889 ; Load 889 into I
  $CAE: LD I, $186 ; Load 186 into I
  $D12: LD I, $773 ; Load 773 into I
  $D30: LD I, $150 ; Load 150 into I
  $D3C: LD I, $073 ; Load 073 into I
  $D7C: LD I, $88D ; Load 88D into I
  $D86: LD I, $B0C ; Load B0C into I
  $E18: LD I, $772 ; Load 772 into I
  $E22: LD I, $AF9 ; Load AF9 into I
  $E8A: LD I, $0C6 ; Load 0C6 into I
  $E9C: LD I, $E50 ; Load E50 into I
  $E9E: LD I, $50F ; Load 50F into I
  $ED4: LD I, $DF1 ; Load DF1 into I
  $EE2: LD I, $D18 ; Load D18 into I
  $EF0: LD I, $C47 ; Load C47 into I
  $EF6: LD I, $38B ; Load 38B into I
  $F28: LD I, $610 ; Load 610 into I
  $F48: LD I, $8BD ; Load 8BD into I
  $F4E: LD I, $FE4 ; Load FE4 into I
  $F50: LD I, $499 ; Load 499 into I
  $F5C: LD I, $67F ; Load 67F into I
  $F72: LD I, $8DE ; Load 8DE into I
  $FB2: LD I, $762 ; Load 762 into I
  $FBC: LD I, $FC8 ; Load FC8 into I
  $FCA: LD I, $510 ; Load 510 into I
  $FD2: LD I, $E88 ; Load E88 into I
  $FF6: LD I, $0FD ; Load 0FD into I

CONTROL FLOW ANALYSIS:
Jumps: 238
Calls: 119
Branches: 234
Loops: 132
Loop Structures:
  $200 -> $1A6 (backward jump)
  $258 -> $07D (backward jump)
  $274 -> $03C (backward jump)
  $366 -> $298 (backward jump)
  $396 -> $29D (backward jump)
  $398 -> $38D (backward jump)
  $42E -> $336 (backward jump)
  $4C0 -> $30C (backward jump)
  $566 -> $105 (backward jump)
  $574 -> $2D4 (backward jump)
  $58A -> $482 (backward jump)
  $5A0 -> $521 (backward jump)
  $5DA -> $3B5 (backward jump)
  $630 -> $028 (backward jump)
  $636 -> $42A (backward jump)
  $63A -> $569 (backward jump)
  $64C -> $382 (backward jump)
  $6B2 -> $66E (backward jump)
  $6BC -> $11F (backward jump)
  $6C4 -> $10D (backward jump)
  $6FC -> $2B4 (backward jump)
  $732 -> $5C0 (backward jump)
  $734 -> $368 (backward jump)
  $758 -> $0C9 (backward jump)
  $764 -> $35E (backward jump)
  $774 -> $52B (backward jump)
  $782 -> $6BB (backward jump)
  $788 -> $357 (backward jump)
  $79C -> $774 (backward jump)
  $7C8 -> $7C5 (backward jump)
  $7CA -> $101 (backward jump)
  $81E -> $037 (backward jump)
  $85A -> $1B2 (backward jump)
  $87E -> $5E8 (backward jump)
  $888 -> $6AC (backward jump)
  $8B6 -> $363 (backward jump)
  $8BE -> $547 (backward jump)
  $8E8 -> $5FF (backward jump)
  $8EA -> $037 (backward jump)
  $908 -> $1A9 (backward jump)
  $958 -> $105 (backward jump)
  $960 -> $0C2 (backward jump)
  $976 -> $43C (backward jump)
  $978 -> $1C2 (backward jump)
  $984 -> $516 (backward jump)
  $998 -> $88A (backward jump)
  $99E -> $152 (backward jump)
  $9A8 -> $355 (backward jump)
  $9BA -> $0E4 (backward jump)
  $9D2 -> $899 (backward jump)
  $9E0 -> $8FF (backward jump)
  $9F2 -> $3F0 (backward jump)
  $9F4 -> $58D (backward jump)
  $A0E -> $9A4 (backward jump)
  $A38 -> $268 (backward jump)
  $A46 -> $5C3 (backward jump)
  $A5C -> $9A5 (backward jump)
  $A62 -> $85F (backward jump)
  $A76 -> $2AA (backward jump)
  $A7C -> $6F7 (backward jump)
  $A9C -> $5C8 (backward jump)
  $AA6 -> $524 (backward jump)
  $AB6 -> $3A3 (backward jump)
  $AEA -> $5B6 (backward jump)
  $AEE -> $764 (backward jump)
  $B3A -> $15A (backward jump)
  $B44 -> $7AC (backward jump)
  $B56 -> $AB7 (backward jump)
  $B5A -> $A6A (backward jump)
  $B5E -> $9C5 (backward jump)
  $B62 -> $840 (backward jump)
  $B70 -> $505 (backward jump)
  $B74 -> $B61 (backward jump)
  $B84 -> $166 (backward jump)
  $B92 -> $3F5 (backward jump)
  $BA6 -> $0CB (backward jump)
  $BD2 -> $2FC (backward jump)
  $BE0 -> $808 (backward jump)
  $BE2 -> $1E6 (backward jump)
  $BE4 -> $AF1 (backward jump)
  $BE8 -> $93E (backward jump)
  $BEA -> $2FD (backward jump)
  $BF0 -> $602 (backward jump)
  $C02 -> $122 (backward jump)
  $C1A -> $1F9 (backward jump)
  $C2E -> $52A (backward jump)
  $C44 -> $118 (backward jump)
  $C80 -> $6FC (backward jump)
  $C94 -> $08C (backward jump)
  $CC4 -> $51B (backward jump)
  $CE6 -> $A2C (backward jump)
  $CE8 -> $62A (backward jump)
  $CEE -> $774 (backward jump)
  $D0A -> $313 (backward jump)
  $D1A -> $0B6 (backward jump)
  $D2A -> $038 (backward jump)
  $D44 -> $66E (backward jump)
  $D58 -> $0BC (backward jump)
  $D84 -> $B18 (backward jump)
  $D9E -> $7F2 (backward jump)
  $DA8 -> $834 (backward jump)
  $DBA -> $4FD (backward jump)
  $DC4 -> $D43 (backward jump)
  $DC6 -> $5B5 (backward jump)
  $DC8 -> $319 (backward jump)
  $DCC -> $94C (backward jump)
  $DD6 -> $C4D (backward jump)
  $DE6 -> $898 (backward jump)
  $DF2 -> $605 (backward jump)
  $E08 -> $635 (backward jump)
  $E0A -> $A8F (backward jump)
  $E42 -> $666 (backward jump)
  $E44 -> $7D4 (backward jump)
  $E4C -> $33B (backward jump)
  $E94 -> $288 (backward jump)
  $EB4 -> $2F4 (backward jump)
  $ED6 -> $97F (backward jump)
  $EF4 -> $E0B (backward jump)
  $EFE -> $E6D (backward jump)
  $F1E -> $153 (backward jump)
  $F30 -> $029 (backward jump)
  $F40 -> $753 (backward jump)
  $F66 -> $E98 (backward jump)
  $F6E -> $155 (backward jump)
  $F74 -> $D19 (backward jump)
  $F9C -> $D5E (backward jump)
  $FC4 -> $CC6 (backward jump)
  $FC6 -> $4FB (backward jump)
  $FCC -> $EBA (backward jump)
  $FDC -> $257 (backward jump)
  $FEE -> $861 (backward jump)
  $FF0 -> $670 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $11A6   JP       $1A6            ; Jump to 1A6
$202    $A696   LD       I, $696         ; Load 696 into I
$204    $5DAA   UNKNOWN  $5DAA           ; Unknown 5xxx instruction
$206    $847E   SHL      V4              ; V4 <<= 1, VF = MSB
$208    $50DD   UNKNOWN  $50DD           ; Unknown 5xxx instruction
$20A    $F346   UNKNOWN  F346            ; Unknown Fxxx instruction
$20C    $6E6E   LD       VE, #6E         ; Load 110 into VE
$20E    $E633   UNKNOWN  $E633           ; Unknown Exxx instruction
$210    $079D   SYS      $79D            ; System call to 79D
$212    $0B74   SYS      $B74            ; System call to B74
$214    $CF81   RND      VF, #81         ; VF = random & 81
$216    $4032   SNE      V0, #32         ; Skip if V0 != 50
$218    $0E53   SYS      $E53            ; System call to E53
$21A    $2E55   CALL     $E55            ; Call subroutine at E55
$21C    $9F62   UNKNOWN  $9F62           ; Unknown 9xxx instruction
$21E    $41FC   SNE      V1, #FC         ; Skip if V1 != 252
$220    $F369   UNKNOWN  F369            ; Unknown Fxxx instruction
$222    $2E3D   CALL     $E3D            ; Call subroutine at E3D
$224    $3E35   SE       VE, #35         ; Skip if VE == 53
$226    $3C81   SE       VC, #81         ; Skip if VC == 129
$228    $593E   UNKNOWN  $593E           ; Unknown 5xxx instruction
$22A    $2427   CALL     $427            ; Call subroutine at 427
$22C    $E0FE   UNKNOWN  $E0FE           ; Unknown Exxx instruction
$22E    $4556   SNE      V5, #56         ; Skip if V5 != 86
$230    $2C40   CALL     $C40            ; Call subroutine at C40
$232    $1E3B   JP       $E3B            ; Jump to E3B
$234    $8A4E   SHL      VA              ; VA <<= 1, VF = MSB
$236    $2195   CALL     $195            ; Call subroutine at 195
$238    $1C24   JP       $C24            ; Jump to C24
$23A    $CD10   RND      VD, #10         ; VD = random & 10
$23C    $BEFC   JP       V0, $EFC        ; Jump to V0 + EFC
$23E    $E364   UNKNOWN  $E364           ; Unknown Exxx instruction
$240    $AA37   LD       I, $A37         ; Load A37 into I
$242    $5CAA   UNKNOWN  $5CAA           ; Unknown 5xxx instruction
$244    $C22B   RND      V2, #2B         ; V2 = random & 2B
$246    $EC12   UNKNOWN  $EC12           ; Unknown Exxx instruction
$248    $D561   DRW      V5, V6, #1      ; Draw 1-byte sprite at V5, V6
$24A    $D9C0   DRW      V9, VC, #0      ; Draw 0-byte sprite at V9, VC
$24C    $B302   JP       V0, $302        ; Jump to V0 + 302
$24E    $A164   LD       I, $164         ; Load 164 into I
$250    $1275   JP       $275            ; Jump to 275
$252    $CEFD   RND      VE, #FD         ; VE = random & FD
$254    $69B0   LD       V9, #B0         ; Load 176 into V9
$256    $EA00   UNKNOWN  $EA00           ; Unknown Exxx instruction
$258    $107D   JP       $07D            ; Jump to 07D
$25A    $5BFF   UNKNOWN  $5BFF           ; Unknown 5xxx instruction
$25C    $E55B   UNKNOWN  $E55B           ; Unknown Exxx instruction
$25E    $A8B8   LD       I, $8B8         ; Load 8B8 into I
$260    $2B11   CALL     $B11            ; Call subroutine at B11
$262    $F9E4   UNKNOWN  F9E4            ; Unknown Fxxx instruction
$264    $49B7   SNE      V9, #B7         ; Skip if V9 != 183
$266    $2F0B   CALL     $F0B            ; Call subroutine at F0B
$268    $810E   SHL      V1              ; V1 <<= 1, VF = MSB
$26A    $B66A   JP       V0, $66A        ; Jump to V0 + 66A
$26C    $D93D   DRW      V9, V3, #D      ; Draw 13-byte sprite at V9, V3
$26E    $E571   UNKNOWN  $E571           ; Unknown Exxx instruction
$270    $C2A6   RND      V2, #A6         ; V2 = random & A6
$272    $5499   UNKNOWN  $5499           ; Unknown 5xxx instruction
$274    $B03C   JP       V0, $03C        ; Jump to V0 + 03C
$276    $AD87   LD       I, $D87         ; Load D87 into I
$278    $A93F   LD       I, $93F         ; Load 93F into I
$27A    $465C   SNE      V6, #5C         ; Skip if V6 != 92
$27C    $BC2E   JP       V0, $C2E        ; Jump to V0 + C2E
$27E    $8C7C   UNKNOWN  8C7C            ; Unknown 8xxx instruction
$280    $6A8D   LD       VA, #8D         ; Load 141 into VA
$282    $AECA   LD       I, $ECA         ; Load ECA into I
$284    $7448   ADD      V4, #48         ; Add 72 to V4
$286    $B471   JP       V0, $471        ; Jump to V0 + 471
$288    $1343   JP       $343            ; Jump to 343
$28A    $0D87   SYS      $D87            ; System call to D87
$28C    $D505   DRW      V5, V0, #5      ; Draw 5-byte sprite at V5, V0
$28E    $838B   UNKNOWN  838B            ; Unknown 8xxx instruction
$290    $C454   RND      V4, #54         ; V4 = random & 54
$292    $3B83   SE       VB, #83         ; Skip if VB == 131
$294    $B4A8   JP       V0, $4A8        ; Jump to V0 + 4A8
$296    $A615   LD       I, $615         ; Load 615 into I
$298    $C160   RND      V1, #60         ; V1 = random & 60
$29A    $9CBB   UNKNOWN  $9CBB           ; Unknown 9xxx instruction
$29C    $C7D3   RND      V7, #D3         ; V7 = random & D3
$29E    $74BB   ADD      V4, #BB         ; Add 187 to V4
$2A0    $A6DC   LD       I, $6DC         ; Load 6DC into I
$2A2    $8472   AND      V4, V7          ; V4 &= V7
$2A4    $A789   LD       I, $789         ; Load 789 into I
$2A6    $8D6F   UNKNOWN  8D6F            ; Unknown 8xxx instruction
$2A8    $7E35   ADD      VE, #35         ; Add 53 to VE
$2AA    $AFDF   LD       I, $FDF         ; Load FDF into I
$2AC    $6518   LD       V5, #18         ; Load 24 into V5
$2AE    $67DC   LD       V7, #DC         ; Load 220 into V7
$2B0    $BC66   JP       V0, $C66        ; Jump to V0 + C66
$2B2    $D298   DRW      V2, V9, #8      ; Draw 8-byte sprite at V2, V9
$2B4    $F029   LD       F, V0           ; I = sprite address for digit V0
$2B6    $07D7   SYS      $7D7            ; System call to 7D7
$2B8    $981B   UNKNOWN  $981B           ; Unknown 9xxx instruction
$2BA    $74AE   ADD      V4, #AE         ; Add 174 to V4
$2BC    $A41D   LD       I, $41D         ; Load 41D into I
$2BE    $9975   UNKNOWN  $9975           ; Unknown 9xxx instruction
$2C0    $7414   ADD      V4, #14         ; Add 20 to V4
$2C2    $0C16   SYS      $C16            ; System call to C16
$2C4    $31EC   SE       V1, #EC         ; Skip if V1 == 236
$2C6    $8FFB   UNKNOWN  8FFB            ; Unknown 8xxx instruction
$2C8    $573D   UNKNOWN  $573D           ; Unknown 5xxx instruction
$2CA    $90CF   UNKNOWN  $90CF           ; Unknown 9xxx instruction
$2CC    $57DF   UNKNOWN  $57DF           ; Unknown 5xxx instruction
$2CE    $D9D2   DRW      V9, VD, #2      ; Draw 2-byte sprite at V9, VD
$2D0    $26DD   CALL     $6DD            ; Call subroutine at 6DD
$2D2    $DC07   DRW      VC, V0, #7      ; Draw 7-byte sprite at VC, V0
$2D4    $447E   SNE      V4, #7E         ; Skip if V4 != 126
$2D6    $E136   UNKNOWN  $E136           ; Unknown Exxx instruction
$2D8    $C836   RND      V8, #36         ; V8 = random & 36
$2DA    $4748   SNE      V7, #48         ; Skip if V7 != 72
$2DC    $ECB1   UNKNOWN  $ECB1           ; Unknown Exxx instruction
$2DE    $53DC   UNKNOWN  $53DC           ; Unknown 5xxx instruction
$2E0    $C84C   RND      V8, #4C         ; V8 = random & 4C
$2E2    $FF33   LD       B, VF           ; Store BCD of VF at I, I+1, I+2
$2E4    $60D3   LD       V0, #D3         ; Load 211 into V0
$2E6    $C6B0   RND      V6, #B0         ; V6 = random & B0
$2E8    $2933   CALL     $933            ; Call subroutine at 933
$2EA    $980A   UNKNOWN  $980A           ; Unknown 9xxx instruction
$2EC    $0220   SYS      $220            ; System call to 220
$2EE    $3DF7   SE       VD, #F7         ; Skip if VD == 247
$2F0    $B581   JP       V0, $581        ; Jump to V0 + 581
$2F2    $2921   CALL     $921            ; Call subroutine at 921
$2F4    $09B7   SYS      $9B7            ; System call to 9B7
$2F6    $D79E   DRW      V7, V9, #E      ; Draw 14-byte sprite at V7, V9
$2F8    $46C1   SNE      V6, #C1         ; Skip if V6 != 193
$2FA    $8EA2   AND      VE, VA          ; VE &= VA
$2FC    $1613   JP       $613            ; Jump to 613
$2FE    $8B39   UNKNOWN  8B39            ; Unknown 8xxx instruction
$302    $093B   SYS      $93B            ; System call to 93B
$304    $53BE   UNKNOWN  $53BE           ; Unknown 5xxx instruction
$306    $D2DC   DRW      V2, VD, #C      ; Draw 12-byte sprite at V2, VD
$308    $EE37   UNKNOWN  $EE37           ; Unknown Exxx instruction
$30A    $7BD4   ADD      VB, #D4         ; Add 212 to VB
$30C    $8FF4   ADD      VF, VF          ; VF += VF, VF = carry
$30E    $AB86   LD       I, $B86         ; Load B86 into I
$310    $536A   UNKNOWN  $536A           ; Unknown 5xxx instruction
$312    $159D   JP       $59D            ; Jump to 59D
$314    $EC56   UNKNOWN  $EC56           ; Unknown Exxx instruction
$316    $5CE6   UNKNOWN  $5CE6           ; Unknown 5xxx instruction
$318    $D91B   DRW      V9, V1, #B      ; Draw 11-byte sprite at V9, V1
$31A    $9F14   UNKNOWN  $9F14           ; Unknown 9xxx instruction
$31C    $B768   JP       V0, $768        ; Jump to V0 + 768
$31E    $86AD   UNKNOWN  86AD            ; Unknown 8xxx instruction
$320    $531B   UNKNOWN  $531B           ; Unknown 5xxx instruction
$322    $26F3   CALL     $6F3            ; Call subroutine at 6F3
$324    $89FD   UNKNOWN  89FD            ; Unknown 8xxx instruction
$326    $C150   RND      V1, #50         ; V1 = random & 50
$328    $A2D6   LD       I, $2D6         ; Load 2D6 into I
$32A    $DCE9   DRW      VC, VE, #9      ; Draw 9-byte sprite at VC, VE
$32C    $178B   JP       $78B            ; Jump to 78B
$32E    $3FBD   SE       VF, #BD         ; Skip if VF == 189
$330    $F96A   UNKNOWN  F96A            ; Unknown Fxxx instruction
$332    $F5FC   UNKNOWN  F5FC            ; Unknown Fxxx instruction
$334    $FF37   UNKNOWN  FF37            ; Unknown Fxxx instruction
$336    $8931   OR       V9, V3          ; V9 |= V3
$338    $AEE7   LD       I, $EE7         ; Load EE7 into I
$33A    $5E58   UNKNOWN  $5E58           ; Unknown 5xxx instruction
$33C    $559F   UNKNOWN  $559F           ; Unknown 5xxx instruction
$33E    $F64A   UNKNOWN  F64A            ; Unknown Fxxx instruction
$340    $8EFB   UNKNOWN  8EFB            ; Unknown 8xxx instruction
$342    $B3E2   JP       V0, $3E2        ; Jump to V0 + 3E2
$344    $1B02   JP       $B02            ; Jump to B02
$346    $5403   UNKNOWN  $5403           ; Unknown 5xxx instruction
$348    $2CDA   CALL     $CDA            ; Call subroutine at CDA
$34A    $1476   JP       $476            ; Jump to 476
$34C    $D23F   DRW      V2, V3, #F      ; Draw 15-byte sprite at V2, V3
$34E    $B5E8   JP       V0, $5E8        ; Jump to V0 + 5E8
$350    $E190   UNKNOWN  $E190           ; Unknown Exxx instruction
$352    $1888   JP       $888            ; Jump to 888
$354    $6A8F   LD       VA, #8F         ; Load 143 into VA
$356    $9A06   UNKNOWN  $9A06           ; Unknown 9xxx instruction
$358    $9C88   UNKNOWN  $9C88           ; Unknown 9xxx instruction
$35A    $3671   SE       V6, #71         ; Skip if V6 == 113
$35C    $178B   JP       $78B            ; Jump to 78B
$35E    $2107   CALL     $107            ; Call subroutine at 107
$360    $02F3   SYS      $2F3            ; System call to 2F3
$362    $FB8A   UNKNOWN  FB8A            ; Unknown Fxxx instruction
$364    $3BD8   SE       VB, #D8         ; Skip if VB == 216
$366    $1298   JP       $298            ; Jump to 298
$368    $612F   LD       V1, #2F         ; Load 47 into V1
$36A    $CAC9   RND      VA, #C9         ; VA = random & C9
$36C    $F69B   UNKNOWN  F69B            ; Unknown Fxxx instruction
$36E    $A14B   LD       I, $14B         ; Load 14B into I
$370    $8A5C   UNKNOWN  8A5C            ; Unknown 8xxx instruction
$372    $E042   UNKNOWN  $E042           ; Unknown Exxx instruction
$374    $2AD2   CALL     $AD2            ; Call subroutine at AD2
$376    $D0B3   DRW      V0, VB, #3      ; Draw 3-byte sprite at V0, VB
$378    $02D5   SYS      $2D5            ; System call to 2D5
$37A    $847D   UNKNOWN  847D            ; Unknown 8xxx instruction
$37C    $2310   CALL     $310            ; Call subroutine at 310
$37E    $71E0   ADD      V1, #E0         ; Add 224 to V1
$380    $3DB4   SE       VD, #B4         ; Skip if VD == 180
$382    $D0D8   DRW      V0, VD, #8      ; Draw 8-byte sprite at V0, VD
$384    $E055   UNKNOWN  $E055           ; Unknown Exxx instruction
$386    $4B70   SNE      VB, #70         ; Skip if VB != 112
$388    $97B1   UNKNOWN  $97B1           ; Unknown 9xxx instruction
$38A    $0E53   SYS      $E53            ; System call to E53
$38C    $A915   LD       I, $915         ; Load 915 into I
$38E    $A52D   LD       I, $52D         ; Load 52D into I
$390    $F254   UNKNOWN  F254            ; Unknown Fxxx instruction
$392    $BFDA   JP       V0, $FDA        ; Jump to V0 + FDA
$394    $4C6E   SNE      VC, #6E         ; Skip if VC != 110
$396    $B29D   JP       V0, $29D        ; Jump to V0 + 29D
$398    $138D   JP       $38D            ; Jump to 38D
$39A    $AE05   LD       I, $E05         ; Load E05 into I
$39C    $FCA9   UNKNOWN  FCA9            ; Unknown Fxxx instruction
$39E    $EFB6   UNKNOWN  $EFB6           ; Unknown Exxx instruction
$3A0    $EE96   UNKNOWN  $EE96           ; Unknown Exxx instruction
$3A2    $AB1F   LD       I, $B1F         ; Load B1F into I
$3A4    $F9ED   UNKNOWN  F9ED            ; Unknown Fxxx instruction
$3A6    $8812   AND      V8, V1          ; V8 &= V1
$3A8    $ECDA   UNKNOWN  $ECDA           ; Unknown Exxx instruction
$3AA    $8165   SUB      V1, V6          ; V1 -= V6, VF = !borrow
$3AC    $57E0   SE       V7, VE          ; Skip if V7 == VE
$3AE    $83D9   UNKNOWN  83D9            ; Unknown 8xxx instruction
$3B0    $6F3F   LD       VF, #3F         ; Load 63 into VF
$3B2    $1C20   JP       $C20            ; Jump to C20
$3B4    $BF17   JP       V0, $F17        ; Jump to V0 + F17
$3B6    $D340   DRW      V3, V4, #0      ; Draw 0-byte sprite at V3, V4
$3B8    $BC4D   JP       V0, $C4D        ; Jump to V0 + C4D
$3BA    $B996   JP       V0, $996        ; Jump to V0 + 996
$3BC    $8031   OR       V0, V3          ; V0 |= V3
$3BE    $D74C   DRW      V7, V4, #C      ; Draw 12-byte sprite at V7, V4
$3C0    $9822   UNKNOWN  $9822           ; Unknown 9xxx instruction
$3C2    $1F7D   JP       $F7D            ; Jump to F7D
$3C4    $9277   UNKNOWN  $9277           ; Unknown 9xxx instruction
$3C6    $672C   LD       V7, #2C         ; Load 44 into V7
$3C8    $8A6B   UNKNOWN  8A6B            ; Unknown 8xxx instruction
$3CA    $F88D   UNKNOWN  F88D            ; Unknown Fxxx instruction
$3CC    $A656   LD       I, $656         ; Load 656 into I
$3CE    $882F   UNKNOWN  882F            ; Unknown 8xxx instruction
$3D0    $F5C6   UNKNOWN  F5C6            ; Unknown Fxxx instruction
$3D2    $C73A   RND      V7, #3A         ; V7 = random & 3A
$3D4    $BF71   JP       V0, $F71        ; Jump to V0 + F71
$3D6    $EF50   UNKNOWN  $EF50           ; Unknown Exxx instruction
$3D8    $9B5E   UNKNOWN  $9B5E           ; Unknown 9xxx instruction
$3DA    $3F59   SE       VF, #59         ; Skip if VF == 89
$3DC    $C11E   RND      V1, #1E         ; V1 = random & 1E
$3DE    $7D76   ADD      VD, #76         ; Add 118 to VD
$3E0    $7010   ADD      V0, #10         ; Add 16 to V0
$3E2    $4963   SNE      V9, #63         ; Skip if V9 != 99
$3E4    $F98E   UNKNOWN  F98E            ; Unknown Fxxx instruction
$3E6    $367B   SE       V6, #7B         ; Skip if V6 == 123
$3E8    $FB15   LD       DT, VB          ; Delay timer = VB
$3EA    $551A   UNKNOWN  $551A           ; Unknown 5xxx instruction
$3EC    $1635   JP       $635            ; Jump to 635
$3EE    $807C   UNKNOWN  807C            ; Unknown 8xxx instruction
$3F0    $7C44   ADD      VC, #44         ; Add 68 to VC
$3F2    $64DB   LD       V4, #DB         ; Load 219 into V4
$3F4    $B70B   JP       V0, $70B        ; Jump to V0 + 70B
$3F6    $E686   UNKNOWN  $E686           ; Unknown Exxx instruction
$3F8    $8601   OR       V6, V0          ; V6 |= V0
$3FA    $678B   LD       V7, #8B         ; Load 139 into V7
$3FC    $E839   UNKNOWN  $E839           ; Unknown Exxx instruction
$3FE    $5F7A   UNKNOWN  $5F7A           ; Unknown 5xxx instruction
$400    $E357   UNKNOWN  $E357           ; Unknown Exxx instruction
$402    $7E1B   ADD      VE, #1B         ; Add 27 to VE
$404    $917E   UNKNOWN  $917E           ; Unknown 9xxx instruction
$406    $F63B   UNKNOWN  F63B            ; Unknown Fxxx instruction
$408    $4452   SNE      V4, #52         ; Skip if V4 != 82
$40A    $F99D   UNKNOWN  F99D            ; Unknown Fxxx instruction
$40C    $89B5   SUB      V9, VB          ; V9 -= VB, VF = !borrow
$40E    $7410   ADD      V4, #10         ; Add 16 to V4
$410    $E460   UNKNOWN  $E460           ; Unknown Exxx instruction
$412    $C1BC   RND      V1, #BC         ; V1 = random & BC
$414    $613D   LD       V1, #3D         ; Load 61 into V1
$416    $D9D6   DRW      V9, VD, #6      ; Draw 6-byte sprite at V9, VD
$418    $6433   LD       V4, #33         ; Load 51 into V4
$41A    $0DF1   SYS      $DF1            ; System call to DF1
$41C    $0EA0   SYS      $EA0            ; System call to EA0
$41E    $ED89   UNKNOWN  $ED89           ; Unknown Exxx instruction
$420    $B519   JP       V0, $519        ; Jump to V0 + 519
$422    $8A04   ADD      VA, V0          ; VA += V0, VF = carry
$424    $BD76   JP       V0, $D76        ; Jump to V0 + D76
$426    $FE46   UNKNOWN  FE46            ; Unknown Fxxx instruction
$428    $05D2   SYS      $5D2            ; System call to 5D2
$42A    $60E8   LD       V0, #E8         ; Load 232 into V0
$42C    $356C   SE       V5, #6C         ; Skip if V5 == 108
$42E    $1336   JP       $336            ; Jump to 336
$430    $DE17   DRW      VE, V1, #7      ; Draw 7-byte sprite at VE, V1
$432    $8C72   AND      VC, V7          ; VC &= V7
$434    $75FD   ADD      V5, #FD         ; Add 253 to V5
$436    $5033   UNKNOWN  $5033           ; Unknown 5xxx instruction
$438    $BE2D   JP       V0, $E2D        ; Jump to V0 + E2D
$43A    $AC4E   LD       I, $C4E         ; Load C4E into I
$43C    $EBDB   UNKNOWN  $EBDB           ; Unknown Exxx instruction
$43E    $B64B   JP       V0, $64B        ; Jump to V0 + 64B
$440    $EC00   UNKNOWN  $EC00           ; Unknown Exxx instruction
$442    $F91E   ADD      I, V9           ; I += V9
$444    $988F   UNKNOWN  $988F           ; Unknown 9xxx instruction
$446    $E756   UNKNOWN  $E756           ; Unknown Exxx instruction
$448    $CEB5   RND      VE, #B5         ; VE = random & B5
$44A    $2D61   CALL     $D61            ; Call subroutine at D61
$44C    $1D38   JP       $D38            ; Jump to D38
$44E    $EEE2   UNKNOWN  $EEE2           ; Unknown Exxx instruction
$450    $1AD6   JP       $AD6            ; Jump to AD6
$452    $C675   RND      V6, #75         ; V6 = random & 75
$454    $B7BC   JP       V0, $7BC        ; Jump to V0 + 7BC
$456    $DE97   DRW      VE, V9, #7      ; Draw 7-byte sprite at VE, V9
$458    $4F7F   SNE      VF, #7F         ; Skip if VF != 127
$45A    $86F1   OR       V6, VF          ; V6 |= VF
$45C    $B5C9   JP       V0, $5C9        ; Jump to V0 + 5C9
$45E    $0B85   SYS      $B85            ; System call to B85
$460    $84DF   UNKNOWN  84DF            ; Unknown 8xxx instruction
$462    $6BD7   LD       VB, #D7         ; Load 215 into VB
$464    $4FA3   SNE      VF, #A3         ; Skip if VF != 163
$466    $1843   JP       $843            ; Jump to 843
$468    $40E1   SNE      V0, #E1         ; Skip if V0 != 225
$46A    $52F1   UNKNOWN  $52F1           ; Unknown 5xxx instruction
$46C    $C130   RND      V1, #30         ; V1 = random & 30
$46E    $E14E   UNKNOWN  $E14E           ; Unknown Exxx instruction
$470    $19E6   JP       $9E6            ; Jump to 9E6
$472    $5D6E   UNKNOWN  $5D6E           ; Unknown 5xxx instruction
$474    $0B94   SYS      $B94            ; System call to B94
$476    $DC32   DRW      VC, V3, #2      ; Draw 2-byte sprite at VC, V3
$478    $F347   UNKNOWN  F347            ; Unknown Fxxx instruction
$47A    $DBE1   DRW      VB, VE, #1      ; Draw 1-byte sprite at VB, VE
$47C    $6409   LD       V4, #09         ; Load 9 into V4
$47E    $1CB3   JP       $CB3            ; Jump to CB3
$480    $251B   CALL     $51B            ; Call subroutine at 51B
$482    $804F   UNKNOWN  804F            ; Unknown 8xxx instruction
$484    $1B7C   JP       $B7C            ; Jump to B7C
$486    $8C77   SUBN     VC, V7          ; VC = V7 - VC, VF = !borrow
$488    $FD24   UNKNOWN  FD24            ; Unknown Fxxx instruction
$48A    $3D24   SE       VD, #24         ; Skip if VD == 36
$48C    $1DA0   JP       $DA0            ; Jump to DA0
$48E    $F56B   UNKNOWN  F56B            ; Unknown Fxxx instruction
$490    $0B14   SYS      $B14            ; System call to B14
$492    $2FE2   CALL     $FE2            ; Call subroutine at FE2
$494    $991E   UNKNOWN  $991E           ; Unknown 9xxx instruction
$496    $923B   UNKNOWN  $923B           ; Unknown 9xxx instruction
$498    $8CB6   SHR      VC              ; VC >>= 1, VF = LSB
$49A    $23E4   CALL     $3E4            ; Call subroutine at 3E4
$49C    $F8A5   UNKNOWN  F8A5            ; Unknown Fxxx instruction
$49E    $1E83   JP       $E83            ; Jump to E83
$4A0    $22E7   CALL     $2E7            ; Call subroutine at 2E7
$4A2    $F8FC   UNKNOWN  F8FC            ; Unknown Fxxx instruction
$4A4    $E56D   UNKNOWN  $E56D           ; Unknown Exxx instruction
$4A6    $5172   UNKNOWN  $5172           ; Unknown 5xxx instruction
$4A8    $D3F1   DRW      V3, VF, #1      ; Draw 1-byte sprite at V3, VF
$4AA    $068B   SYS      $68B            ; System call to 68B
$4AC    $ECF8   UNKNOWN  $ECF8           ; Unknown Exxx instruction
$4AE    $8FF3   XOR      VF, VF          ; VF ^= VF
$4B0    $F710   UNKNOWN  F710            ; Unknown Fxxx instruction
$4B2    $316B   SE       V1, #6B         ; Skip if V1 == 107
$4B4    $4ABB   SNE      VA, #BB         ; Skip if VA != 187
$4B6    $C63A   RND      V6, #3A         ; V6 = random & 3A
$4B8    $C4F0   RND      V4, #F0         ; V4 = random & F0
$4BA    $6D13   LD       VD, #13         ; Load 19 into VD
$4BC    $9E01   UNKNOWN  $9E01           ; Unknown 9xxx instruction
$4BE    $AD85   LD       I, $D85         ; Load D85 into I
$4C0    $130C   JP       $30C            ; Jump to 30C
$4C2    $3D58   SE       VD, #58         ; Skip if VD == 88
$4C4    $FC47   UNKNOWN  FC47            ; Unknown Fxxx instruction
$4C6    $D598   DRW      V5, V9, #8      ; Draw 8-byte sprite at V5, V9
$4C8    $3303   SE       V3, #03         ; Skip if V3 == 3
$4CA    $6B60   LD       VB, #60         ; Load 96 into VB
$4CC    $0334   SYS      $334            ; System call to 334
$4CE    $70D9   ADD      V0, #D9         ; Add 217 to V0
$4D0    $E868   UNKNOWN  $E868           ; Unknown Exxx instruction
$4D2    $3852   SE       V8, #52         ; Skip if V8 == 82
$4D4    $D200   DRW      V2, V0, #0      ; Draw 0-byte sprite at V2, V0
$4D6    $3F10   SE       VF, #10         ; Skip if VF == 16
$4D8    $E361   UNKNOWN  $E361           ; Unknown Exxx instruction
$4DA    $001E   SYS      $01E            ; System call to 01E
$4DC    $3F36   SE       VF, #36         ; Skip if VF == 54
$4DE    $4689   SNE      V6, #89         ; Skip if V6 != 137
$4E0    $00A8   SYS      $0A8            ; System call to 0A8
$4E2    $844F   UNKNOWN  844F            ; Unknown 8xxx instruction
$4E4    $0E05   SYS      $E05            ; System call to E05
$4E6    $EB8C   UNKNOWN  $EB8C           ; Unknown Exxx instruction
$4E8    $0487   SYS      $487            ; System call to 487
$4EA    $DF38   DRW      VF, V3, #8      ; Draw 8-byte sprite at VF, V3
$4EC    $56DE   UNKNOWN  $56DE           ; Unknown 5xxx instruction
$4EE    $C729   RND      V7, #29         ; V7 = random & 29
$4F0    $61B0   LD       V1, #B0         ; Load 176 into V1
$4F2    $F379   UNKNOWN  F379            ; Unknown Fxxx instruction
$4F4    $1957   JP       $957            ; Jump to 957
$4F6    $AE25   LD       I, $E25         ; Load E25 into I
$4F8    $A07B   LD       I, $07B         ; Load 07B into I
$4FA    $63B2   LD       V3, #B2         ; Load 178 into V3
$4FC    $98D9   UNKNOWN  $98D9           ; Unknown 9xxx instruction
$4FE    $3883   SE       V8, #83         ; Skip if V8 == 131
$500    $D67F   DRW      V6, V7, #F      ; Draw 15-byte sprite at V6, V7
$502    $7DA6   ADD      VD, #A6         ; Add 166 to VD
$504    $4C01   SNE      VC, #01         ; Skip if VC != 1
$506    $3187   SE       V1, #87         ; Skip if V1 == 135
$508    $CE71   RND      VE, #71         ; VE = random & 71
$50A    $08CB   SYS      $8CB            ; System call to 8CB
$50C    $1732   JP       $732            ; Jump to 732
$50E    $F011   UNKNOWN  F011            ; Unknown Fxxx instruction
$510    $E0A8   UNKNOWN  $E0A8           ; Unknown Exxx instruction
$512    $C136   RND      V1, #36         ; V1 = random & 36
$514    $3F8B   SE       VF, #8B         ; Skip if VF == 139
$516    $97E1   UNKNOWN  $97E1           ; Unknown 9xxx instruction
$518    $0951   SYS      $951            ; System call to 951
$51A    $D13F   DRW      V1, V3, #F      ; Draw 15-byte sprite at V1, V3
$51C    $8E59   UNKNOWN  8E59            ; Unknown 8xxx instruction
$51E    $7C3C   ADD      VC, #3C         ; Add 60 to VC
$520    $E3AE   UNKNOWN  $E3AE           ; Unknown Exxx instruction
$522    $A263   LD       I, $263         ; Load 263 into I
$524    $457E   SNE      V5, #7E         ; Skip if V5 != 126
$526    $CA01   RND      VA, #01         ; VA = random & 01
$528    $D06D   DRW      V0, V6, #D      ; Draw 13-byte sprite at V0, V6
$52A    $3A1A   SE       VA, #1A         ; Skip if VA == 26
$52C    $B839   JP       V0, $839        ; Jump to V0 + 839
$52E    $3870   SE       V8, #70         ; Skip if V8 == 112
$530    $54FC   UNKNOWN  $54FC           ; Unknown 5xxx instruction
$532    $29AD   CALL     $9AD            ; Call subroutine at 9AD
$534    $ABAB   LD       I, $BAB         ; Load BAB into I
$536    $BB45   JP       V0, $B45        ; Jump to V0 + B45
$538    $6FF6   LD       VF, #F6         ; Load 246 into VF
$53A    $1A63   JP       $A63            ; Jump to A63
$53C    $598F   UNKNOWN  $598F           ; Unknown 5xxx instruction
$53E    $1906   JP       $906            ; Jump to 906
$540    $DA94   DRW      VA, V9, #4      ; Draw 4-byte sprite at VA, V9
$542    $7CB6   ADD      VC, #B6         ; Add 182 to VC
$544    $EDAE   UNKNOWN  $EDAE           ; Unknown Exxx instruction
$546    $0FE9   SYS      $FE9            ; System call to FE9
$548    $987F   UNKNOWN  $987F           ; Unknown 9xxx instruction
$54A    $EE10   UNKNOWN  $EE10           ; Unknown Exxx instruction
$54C    $817F   UNKNOWN  817F            ; Unknown 8xxx instruction
$54E    $7858   ADD      V8, #58         ; Add 88 to V8
$550    $73BF   ADD      V3, #BF         ; Add 191 to V3
$552    $8952   AND      V9, V5          ; V9 &= V5
$554    $A5C6   LD       I, $5C6         ; Load 5C6 into I
$556    $C38D   RND      V3, #8D         ; V3 = random & 8D
$558    $31AB   SE       V1, #AB         ; Skip if V1 == 171
$55A    $97A2   UNKNOWN  $97A2           ; Unknown 9xxx instruction
$55C    $A8C5   LD       I, $8C5         ; Load 8C5 into I
$55E    $BCBA   JP       V0, $CBA        ; Jump to V0 + CBA
$560    $D7BB   DRW      V7, VB, #B      ; Draw 11-byte sprite at V7, VB
$562    $B9B9   JP       V0, $9B9        ; Jump to V0 + 9B9
$564    $20B4   CALL     $0B4            ; Call subroutine at 0B4
$566    $1105   JP       $105            ; Jump to 105
$568    $6A79   LD       VA, #79         ; Load 121 into VA
$56A    $492D   SNE      V9, #2D         ; Skip if V9 != 45
$56C    $6369   LD       V3, #69         ; Load 105 into V3
$56E    $5219   UNKNOWN  $5219           ; Unknown 5xxx instruction
$570    $3022   SE       V0, #22         ; Skip if V0 == 34
$572    $5962   UNKNOWN  $5962           ; Unknown 5xxx instruction
$574    $12D4   JP       $2D4            ; Jump to 2D4
$576    $6E59   LD       VE, #59         ; Load 89 into VE
$578    $824D   UNKNOWN  824D            ; Unknown 8xxx instruction
$57A    $A4F4   LD       I, $4F4         ; Load 4F4 into I
$57C    $2BE1   CALL     $BE1            ; Call subroutine at BE1
$57E    $FB3A   UNKNOWN  FB3A            ; Unknown Fxxx instruction
$580    $7C70   ADD      VC, #70         ; Add 112 to VC
$582    $22DA   CALL     $2DA            ; Call subroutine at 2DA
$584    $3A4B   SE       VA, #4B         ; Skip if VA == 75
$586    $9734   UNKNOWN  $9734           ; Unknown 9xxx instruction
$588    $3A31   SE       VA, #31         ; Skip if VA == 49
$58A    $B482   JP       V0, $482        ; Jump to V0 + 482
$58C    $912A   UNKNOWN  $912A           ; Unknown 9xxx instruction
$58E    $C5E6   RND      V5, #E6         ; V5 = random & E6
$590    $774B   ADD      V7, #4B         ; Add 75 to V7
$592    $222E   CALL     $22E            ; Call subroutine at 22E
$594    $F662   UNKNOWN  F662            ; Unknown Fxxx instruction
$596    $BF7B   JP       V0, $F7B        ; Jump to V0 + F7B
$598    $A448   LD       I, $448         ; Load 448 into I
$59A    $8EE9   UNKNOWN  8EE9            ; Unknown 8xxx instruction
$59C    $3BC2   SE       VB, #C2         ; Skip if VB == 194
$59E    $E1E2   UNKNOWN  $E1E2           ; Unknown Exxx instruction
$5A0    $B521   JP       V0, $521        ; Jump to V0 + 521
$5A2    $8992   AND      V9, V9          ; V9 &= V9
$5A4    $22D6   CALL     $2D6            ; Call subroutine at 2D6
$5A6    $8604   ADD      V6, V0          ; V6 += V0, VF = carry
$5A8    $7804   ADD      V8, #04         ; Add 4 to V8
$5AA    $C517   RND      V5, #17         ; V5 = random & 17
$5AC    $F05E   UNKNOWN  F05E            ; Unknown Fxxx instruction
$5AE    $71BE   ADD      V1, #BE         ; Add 190 to V1
$5B0    $9D39   UNKNOWN  $9D39           ; Unknown 9xxx instruction
$5B2    $EAE3   UNKNOWN  $EAE3           ; Unknown Exxx instruction
$5B4    $97FD   UNKNOWN  $97FD           ; Unknown 9xxx instruction
$5B6    $0572   SYS      $572            ; System call to 572
$5B8    $CDB8   RND      VD, #B8         ; VD = random & B8
$5BA    $B74F   JP       V0, $74F        ; Jump to V0 + 74F
$5BC    $4011   SNE      V0, #11         ; Skip if V0 != 17
$5BE    $B7F1   JP       V0, $7F1        ; Jump to V0 + 7F1
$5C0    $D476   DRW      V4, V7, #6      ; Draw 6-byte sprite at V4, V7
$5C2    $D786   DRW      V7, V8, #6      ; Draw 6-byte sprite at V7, V8
$5C4    $5428   UNKNOWN  $5428           ; Unknown 5xxx instruction
$5C6    $59C8   UNKNOWN  $59C8           ; Unknown 5xxx instruction
$5C8    $9CBF   UNKNOWN  $9CBF           ; Unknown 9xxx instruction
$5CA    $E627   UNKNOWN  $E627           ; Unknown Exxx instruction
$5CC    $5223   UNKNOWN  $5223           ; Unknown 5xxx instruction
$5CE    $AE7B   LD       I, $E7B         ; Load E7B into I
$5D0    $9E0B   UNKNOWN  $9E0B           ; Unknown 9xxx instruction
$5D2    $8914   ADD      V9, V1          ; V9 += V1, VF = carry
$5D4    $2040   CALL     $040            ; Call subroutine at 040
$5D6    $5388   UNKNOWN  $5388           ; Unknown 5xxx instruction
$5D8    $AEEE   LD       I, $EEE         ; Load EEE into I
$5DA    $13B5   JP       $3B5            ; Jump to 3B5
$5DC    $F834   UNKNOWN  F834            ; Unknown Fxxx instruction
$5DE    $B71B   JP       V0, $71B        ; Jump to V0 + 71B
$5E0    $959B   UNKNOWN  $959B           ; Unknown 9xxx instruction
$5E2    $8950   LD       V9, V5          ; V9 = V5
$5E4    $D0C8   DRW      V0, VC, #8      ; Draw 8-byte sprite at V0, VC
$5E6    $371A   SE       V7, #1A         ; Skip if V7 == 26
$5E8    $EE05   UNKNOWN  $EE05           ; Unknown Exxx instruction
$5EA    $22D9   CALL     $2D9            ; Call subroutine at 2D9
$5EC    $870C   UNKNOWN  870C            ; Unknown 8xxx instruction
$5EE    $A133   LD       I, $133         ; Load 133 into I
$5F0    $C21F   RND      V2, #1F         ; V2 = random & 1F
$5F2    $3BFC   SE       VB, #FC         ; Skip if VB == 252
$5F4    $4EC7   SNE      VE, #C7         ; Skip if VE != 199
$5F6    $1C8F   JP       $C8F            ; Jump to C8F
$5F8    $9640   SNE      V6, V4          ; Skip if V6 != V4
$5FA    $EFA9   UNKNOWN  $EFA9           ; Unknown Exxx instruction
$5FC    $8AFE   SHL      VA              ; VA <<= 1, VF = MSB
$5FE    $BDAE   JP       V0, $DAE        ; Jump to V0 + DAE
$600    $D843   DRW      V8, V4, #3      ; Draw 3-byte sprite at V8, V4
$602    $8ABB   UNKNOWN  8ABB            ; Unknown 8xxx instruction
$604    $5B50   SE       VB, V5          ; Skip if VB == V5
$606    $FCA6   UNKNOWN  FCA6            ; Unknown Fxxx instruction
$608    $C87B   RND      V8, #7B         ; V8 = random & 7B
$60A    $ACD6   LD       I, $CD6         ; Load CD6 into I
$60C    $6E89   LD       VE, #89         ; Load 137 into VE
$60E    $C144   RND      V1, #44         ; V1 = random & 44
$610    $0157   SYS      $157            ; System call to 157
$612    $04CB   SYS      $4CB            ; System call to 4CB
$614    $6621   LD       V6, #21         ; Load 33 into V6
$616    $332B   SE       V3, #2B         ; Skip if V3 == 43
$618    $E213   UNKNOWN  $E213           ; Unknown Exxx instruction
$61A    $92E7   UNKNOWN  $92E7           ; Unknown 9xxx instruction
$61C    $5788   UNKNOWN  $5788           ; Unknown 5xxx instruction
$61E    $A841   LD       I, $841         ; Load 841 into I
$620    $CD2B   RND      VD, #2B         ; VD = random & 2B
$622    $ADEF   LD       I, $DEF         ; Load DEF into I
$624    $1B0F   JP       $B0F            ; Jump to B0F
$626    $9EA7   UNKNOWN  $9EA7           ; Unknown 9xxx instruction
$628    $8AD0   LD       VA, VD          ; VA = VD
$62A    $FF69   UNKNOWN  FF69            ; Unknown Fxxx instruction
$62C    $7C74   ADD      VC, #74         ; Add 116 to VC
$62E    $D18A   DRW      V1, V8, #A      ; Draw 10-byte sprite at V1, V8
$630    $B028   JP       V0, $028        ; Jump to V0 + 028
$632    $DEC6   DRW      VE, VC, #6      ; Draw 6-byte sprite at VE, VC
$634    $C950   RND      V9, #50         ; V9 = random & 50
$636    $142A   JP       $42A            ; Jump to 42A
$638    $643A   LD       V4, #3A         ; Load 58 into V4
$63A    $1569   JP       $569            ; Jump to 569
$63C    $F76B   UNKNOWN  F76B            ; Unknown Fxxx instruction
$63E    $016B   SYS      $16B            ; System call to 16B
$640    $27F9   CALL     $7F9            ; Call subroutine at 7F9
$642    $5209   UNKNOWN  $5209           ; Unknown 5xxx instruction
$644    $C16A   RND      V1, #6A         ; V1 = random & 6A
$646    $2AD6   CALL     $AD6            ; Call subroutine at AD6
$648    $7648   ADD      V6, #48         ; Add 72 to V6
$64A    $ED85   UNKNOWN  $ED85           ; Unknown Exxx instruction
$64C    $1382   JP       $382            ; Jump to 382
$64E    $799D   ADD      V9, #9D         ; Add 157 to V9
$650    $E702   UNKNOWN  $E702           ; Unknown Exxx instruction
$652    $7793   ADD      V7, #93         ; Add 147 to V7
$654    $3B92   SE       VB, #92         ; Skip if VB == 146
$656    $A101   LD       I, $101         ; Load 101 into I
$658    $CC78   RND      VC, #78         ; VC = random & 78
$65A    $C241   RND      V2, #41         ; V2 = random & 41
$65C    $4B44   SNE      VB, #44         ; Skip if VB != 68
$65E    $579B   UNKNOWN  $579B           ; Unknown 5xxx instruction
$660    $7958   ADD      V9, #58         ; Add 88 to V9
$662    $3ED7   SE       VE, #D7         ; Skip if VE == 215
$664    $5409   UNKNOWN  $5409           ; Unknown 5xxx instruction
$666    $C29A   RND      V2, #9A         ; V2 = random & 9A
$668    $BBC4   JP       V0, $BC4        ; Jump to V0 + BC4
$66A    $0631   SYS      $631            ; System call to 631
$66C    $423F   SNE      V2, #3F         ; Skip if V2 != 63
$66E    $D7C6   DRW      V7, VC, #6      ; Draw 6-byte sprite at V7, VC
$670    $4D8B   SNE      VD, #8B         ; Skip if VD != 139
$672    $28F1   CALL     $8F1            ; Call subroutine at 8F1
$674    $EA3C   UNKNOWN  $EA3C           ; Unknown Exxx instruction
$676    $F98F   UNKNOWN  F98F            ; Unknown Fxxx instruction
$678    $F17C   UNKNOWN  F17C            ; Unknown Fxxx instruction
$67A    $BEFE   JP       V0, $EFE        ; Jump to V0 + EFE
$67C    $81AE   SHL      V1              ; V1 <<= 1, VF = MSB
$67E    $61BC   LD       V1, #BC         ; Load 188 into V1
$680    $671D   LD       V7, #1D         ; Load 29 into V7
$682    $F8FE   UNKNOWN  F8FE            ; Unknown Fxxx instruction
$684    $FCC0   UNKNOWN  FCC0            ; Unknown Fxxx instruction
$686    $D0B0   DRW      V0, VB, #0      ; Draw 0-byte sprite at V0, VB
$688    $8E9A   UNKNOWN  8E9A            ; Unknown 8xxx instruction
$68A    $8A86   SHR      VA              ; VA >>= 1, VF = LSB
$68C    $7E2C   ADD      VE, #2C         ; Add 44 to VE
$68E    $8202   AND      V2, V0          ; V2 &= V0
$690    $E9ED   UNKNOWN  $E9ED           ; Unknown Exxx instruction
$692    $3009   SE       V0, #09         ; Skip if V0 == 9
$694    $6341   LD       V3, #41         ; Load 65 into V3
$696    $DB15   DRW      VB, V1, #5      ; Draw 5-byte sprite at VB, V1
$698    $BA01   JP       V0, $A01        ; Jump to V0 + A01
$69A    $C4D7   RND      V4, #D7         ; V4 = random & D7
$69C    $DBF7   DRW      VB, VF, #7      ; Draw 7-byte sprite at VB, VF
$69E    $447E   SNE      V4, #7E         ; Skip if V4 != 126
$6A0    $23B1   CALL     $3B1            ; Call subroutine at 3B1
$6A2    $76A4   ADD      V6, #A4         ; Add 164 to V6
$6A4    $81AA   UNKNOWN  81AA            ; Unknown 8xxx instruction
$6A6    $4AB1   SNE      VA, #B1         ; Skip if VA != 177
$6A8    $EBCA   UNKNOWN  $EBCA           ; Unknown Exxx instruction
$6AA    $0C81   SYS      $C81            ; System call to C81
$6AC    $3B81   SE       VB, #81         ; Skip if VB == 129
$6AE    $EA12   UNKNOWN  $EA12           ; Unknown Exxx instruction
$6B0    $AC4A   LD       I, $C4A         ; Load C4A into I
$6B2    $166E   JP       $66E            ; Jump to 66E
$6B4    $EC2E   UNKNOWN  $EC2E           ; Unknown Exxx instruction
$6B6    $51C4   UNKNOWN  $51C4           ; Unknown 5xxx instruction
$6B8    $FA4A   UNKNOWN  FA4A            ; Unknown Fxxx instruction
$6BA    $89F6   SHR      V9              ; V9 >>= 1, VF = LSB
$6BC    $111F   JP       $11F            ; Jump to 11F
$6BE    $9816   UNKNOWN  $9816           ; Unknown 9xxx instruction
$6C0    $73F1   ADD      V3, #F1         ; Add 241 to V3
$6C2    $56BC   UNKNOWN  $56BC           ; Unknown 5xxx instruction
$6C4    $110D   JP       $10D            ; Jump to 10D
$6C6    $2AC6   CALL     $AC6            ; Call subroutine at AC6
$6C8    $1D97   JP       $D97            ; Jump to D97
$6CA    $A83F   LD       I, $83F         ; Load 83F into I
$6CC    $943D   UNKNOWN  $943D           ; Unknown 9xxx instruction
$6CE    $A4B4   LD       I, $4B4         ; Load 4B4 into I
$6D0    $1702   JP       $702            ; Jump to 702
$6D2    $D80B   DRW      V8, V0, #B      ; Draw 11-byte sprite at V8, V0
$6D4    $61EA   LD       V1, #EA         ; Load 234 into V1
$6D6    $35B8   SE       V5, #B8         ; Skip if V5 == 184
$6D8    $E4A2   UNKNOWN  $E4A2           ; Unknown Exxx instruction
$6DA    $69F0   LD       V9, #F0         ; Load 240 into V9
$6DC    $7C00   ADD      VC, #00         ; Add 0 to VC
$6DE    $32FE   SE       V2, #FE         ; Skip if V2 == 254
$6E0    $4A7B   SNE      VA, #7B         ; Skip if VA != 123
$6E2    $226E   CALL     $26E            ; Call subroutine at 26E
$6E4    $BF6C   JP       V0, $F6C        ; Jump to V0 + F6C
$6E6    $717F   ADD      V1, #7F         ; Add 127 to V1
$6E8    $8ABC   UNKNOWN  8ABC            ; Unknown 8xxx instruction
$6EA    $03FD   SYS      $3FD            ; System call to 3FD
$6EC    $AE23   LD       I, $E23         ; Load E23 into I
$6EE    $5DF8   UNKNOWN  $5DF8           ; Unknown 5xxx instruction
$6F0    $D792   DRW      V7, V9, #2      ; Draw 2-byte sprite at V7, V9
$6F2    $681A   LD       V8, #1A         ; Load 26 into V8
$6F4    $582C   UNKNOWN  $582C           ; Unknown 5xxx instruction
$6F6    $F20B   UNKNOWN  F20B            ; Unknown Fxxx instruction
$6F8    $DFD8   DRW      VF, VD, #8      ; Draw 8-byte sprite at VF, VD
$6FA    $29E0   CALL     $9E0            ; Call subroutine at 9E0
$6FC    $12B4   JP       $2B4            ; Jump to 2B4
$6FE    $5B52   UNKNOWN  $5B52           ; Unknown 5xxx instruction
$700    $729B   ADD      V2, #9B         ; Add 155 to V2
$702    $4E67   SNE      VE, #67         ; Skip if VE != 103
$704    $6664   LD       V6, #64         ; Load 100 into V6
$706    $E2D2   UNKNOWN  $E2D2           ; Unknown Exxx instruction
$708    $827D   UNKNOWN  827D            ; Unknown 8xxx instruction
$70A    $4214   SNE      V2, #14         ; Skip if V2 != 20
$70C    $FCA7   UNKNOWN  FCA7            ; Unknown Fxxx instruction
$70E    $0036   SYS      $036            ; System call to 036
$710    $53EC   UNKNOWN  $53EC           ; Unknown 5xxx instruction
$712    $24AD   CALL     $4AD            ; Call subroutine at 4AD
$714    $938D   UNKNOWN  $938D           ; Unknown 9xxx instruction
$716    $6488   LD       V4, #88         ; Load 136 into V4
$718    $5D37   UNKNOWN  $5D37           ; Unknown 5xxx instruction
$71A    $801F   UNKNOWN  801F            ; Unknown 8xxx instruction
$71C    $02A5   SYS      $2A5            ; System call to 2A5
$71E    $CFD3   RND      VF, #D3         ; VF = random & D3
$720    $E648   UNKNOWN  $E648           ; Unknown Exxx instruction
$722    $3F1B   SE       VF, #1B         ; Skip if VF == 27
$724    $B797   JP       V0, $797        ; Jump to V0 + 797
$726    $A2EC   LD       I, $2EC         ; Load 2EC into I
$728    $46E6   SNE      V6, #E6         ; Skip if V6 != 230
$72A    $2D22   CALL     $D22            ; Call subroutine at D22
$72C    $ED65   UNKNOWN  $ED65           ; Unknown Exxx instruction
$72E    $1D44   JP       $D44            ; Jump to D44
$730    $407A   SNE      V0, #7A         ; Skip if V0 != 122
$732    $B5C0   JP       V0, $5C0        ; Jump to V0 + 5C0
$734    $B368   JP       V0, $368        ; Jump to V0 + 368
$736    $A30A   LD       I, $30A         ; Load 30A into I
$738    $D7E7   DRW      V7, VE, #7      ; Draw 7-byte sprite at V7, VE
$73A    $3AE2   SE       VA, #E2         ; Skip if VA == 226
$73C    $4413   SNE      V4, #13         ; Skip if V4 != 19
$73E    $2E4C   CALL     $E4C            ; Call subroutine at E4C
$740    $0FDA   SYS      $FDA            ; System call to FDA
$742    $6063   LD       V0, #63         ; Load 99 into V0
$744    $4902   SNE      V9, #02         ; Skip if V9 != 2
$746    $F6AD   UNKNOWN  F6AD            ; Unknown Fxxx instruction
$748    $933F   UNKNOWN  $933F           ; Unknown 9xxx instruction
$74A    $F55E   UNKNOWN  F55E            ; Unknown Fxxx instruction
$74C    $E769   UNKNOWN  $E769           ; Unknown Exxx instruction
$74E    $2953   CALL     $953            ; Call subroutine at 953
$750    $8C20   LD       VC, V2          ; VC = V2
$752    $93CE   UNKNOWN  $93CE           ; Unknown 9xxx instruction
$754    $7A12   ADD      VA, #12         ; Add 18 to VA
$756    $84AA   UNKNOWN  84AA            ; Unknown 8xxx instruction
$758    $B0C9   JP       V0, $0C9        ; Jump to V0 + 0C9
$75A    $EB3F   UNKNOWN  $EB3F           ; Unknown Exxx instruction
$75C    $1E17   JP       $E17            ; Jump to E17
$75E    $445E   SNE      V4, #5E         ; Skip if V4 != 94
$760    $D701   DRW      V7, V0, #1      ; Draw 1-byte sprite at V7, V0
$762    $7C29   ADD      VC, #29         ; Add 41 to VC
$764    $135E   JP       $35E            ; Jump to 35E
$766    $F035   UNKNOWN  F035            ; Unknown Fxxx instruction
$768    $41C7   SNE      V1, #C7         ; Skip if V1 != 199
$76A    $2E1F   CALL     $E1F            ; Call subroutine at E1F
$76C    $DE0F   DRW      VE, V0, #F      ; Draw 15-byte sprite at VE, V0
$76E    $19D4   JP       $9D4            ; Jump to 9D4
$770    $34DD   SE       V4, #DD         ; Skip if V4 == 221
$772    $355B   SE       V5, #5B         ; Skip if V5 == 91
$774    $152B   JP       $52B            ; Jump to 52B
$776    $F603   UNKNOWN  F603            ; Unknown Fxxx instruction
$778    $E9E3   UNKNOWN  $E9E3           ; Unknown Exxx instruction
$77A    $4B16   SNE      VB, #16         ; Skip if VB != 22
$77C    $A836   LD       I, $836         ; Load 836 into I
$77E    $344F   SE       V4, #4F         ; Skip if V4 == 79
$780    $E3FD   UNKNOWN  $E3FD           ; Unknown Exxx instruction
$782    $16BB   JP       $6BB            ; Jump to 6BB
$784    $BA6E   JP       V0, $A6E        ; Jump to V0 + A6E
$786    $3C34   SE       VC, #34         ; Skip if VC == 52
$788    $B357   JP       V0, $357        ; Jump to V0 + 357
$78A    $560C   UNKNOWN  $560C           ; Unknown 5xxx instruction
$78C    $681A   LD       V8, #1A         ; Load 26 into V8
$78E    $7A10   ADD      VA, #10         ; Add 16 to VA
$790    $F945   UNKNOWN  F945            ; Unknown Fxxx instruction
$792    $A973   LD       I, $973         ; Load 973 into I
$794    $6FAC   LD       VF, #AC         ; Load 172 into VF
$796    $F125   UNKNOWN  F125            ; Unknown Fxxx instruction
$798    $348B   SE       V4, #8B         ; Skip if V4 == 139
$79A    $AAB5   LD       I, $AB5         ; Load AB5 into I
$79C    $B774   JP       V0, $774        ; Jump to V0 + 774
$79E    $543E   UNKNOWN  $543E           ; Unknown 5xxx instruction
$7A0    $2688   CALL     $688            ; Call subroutine at 688
$7A2    $7115   ADD      V1, #15         ; Add 21 to V1
$7A4    $8D75   SUB      VD, V7          ; VD -= V7, VF = !borrow
$7A6    $88AB   UNKNOWN  88AB            ; Unknown 8xxx instruction
$7A8    $21AC   CALL     $1AC            ; Call subroutine at 1AC
$7AA    $C3F9   RND      V3, #F9         ; V3 = random & F9
$7AC    $464E   SNE      V6, #4E         ; Skip if V6 != 78
$7AE    $F35A   UNKNOWN  F35A            ; Unknown Fxxx instruction
$7B0    $07E4   SYS      $7E4            ; System call to 7E4
$7B2    $8B20   LD       VB, V2          ; VB = V2
$7B4    $EE6D   UNKNOWN  $EE6D           ; Unknown Exxx instruction
$7B6    $49AD   SNE      V9, #AD         ; Skip if V9 != 173
$7B8    $19FB   JP       $9FB            ; Jump to 9FB
$7BA    $AD9B   LD       I, $D9B         ; Load D9B into I
$7BC    $0C92   SYS      $C92            ; System call to C92
$7BE    $2943   CALL     $943            ; Call subroutine at 943
$7C0    $25F1   CALL     $5F1            ; Call subroutine at 5F1
$7C2    $9240   SNE      V2, V4          ; Skip if V2 != V4
$7C4    $2DDD   CALL     $DDD            ; Call subroutine at DDD
$7C6    $0C5D   SYS      $C5D            ; System call to C5D
$7C8    $17C5   JP       $7C5            ; Jump to 7C5
$7CA    $B101   JP       V0, $101        ; Jump to V0 + 101
$7CC    $92C6   UNKNOWN  $92C6           ; Unknown 9xxx instruction
$7CE    $983D   UNKNOWN  $983D           ; Unknown 9xxx instruction
$7D0    $D208   DRW      V2, V0, #8      ; Draw 8-byte sprite at V2, V0
$7D2    $BBDF   JP       V0, $BDF        ; Jump to V0 + BDF
$7D4    $64D1   LD       V4, #D1         ; Load 209 into V4
$7D6    $F54E   UNKNOWN  F54E            ; Unknown Fxxx instruction
$7D8    $410B   SNE      V1, #0B         ; Skip if V1 != 11
$7DA    $01D4   SYS      $1D4            ; System call to 1D4
$7DC    $90A5   UNKNOWN  $90A5           ; Unknown 9xxx instruction
$7DE    $44D5   SNE      V4, #D5         ; Skip if V4 != 213
$7E0    $4A0A   SNE      VA, #0A         ; Skip if VA != 10
$7E2    $C28D   RND      V2, #8D         ; V2 = random & 8D
$7E4    $5740   SE       V7, V4          ; Skip if V7 == V4
$7E6    $EF7F   UNKNOWN  $EF7F           ; Unknown Exxx instruction
$7E8    $5C27   UNKNOWN  $5C27           ; Unknown 5xxx instruction
$7EA    $C03C   RND      V0, #3C         ; V0 = random & 3C
$7EC    $D963   DRW      V9, V6, #3      ; Draw 3-byte sprite at V9, V6
$7EE    $3B87   SE       VB, #87         ; Skip if VB == 135
$7F0    $84A1   OR       V4, VA          ; V4 |= VA
$7F2    $2F14   CALL     $F14            ; Call subroutine at F14
$7F4    $5CD9   UNKNOWN  $5CD9           ; Unknown 5xxx instruction
$7F6    $2FD9   CALL     $FD9            ; Call subroutine at FD9
$7F8    $E45A   UNKNOWN  $E45A           ; Unknown Exxx instruction
$7FA    $FFA7   UNKNOWN  FFA7            ; Unknown Fxxx instruction
$7FC    $99CB   UNKNOWN  $99CB           ; Unknown 9xxx instruction
$7FE    $0890   SYS      $890            ; System call to 890
$800    $4C92   SNE      VC, #92         ; Skip if VC != 146
$802    $F113   UNKNOWN  F113            ; Unknown Fxxx instruction
$804    $2336   CALL     $336            ; Call subroutine at 336
$806    $BB4D   JP       V0, $B4D        ; Jump to V0 + B4D
$808    $07C2   SYS      $7C2            ; System call to 7C2
$80A    $3950   SE       V9, #50         ; Skip if V9 == 80
$80C    $AD78   LD       I, $D78         ; Load D78 into I
$80E    $6696   LD       V6, #96         ; Load 150 into V6
$810    $8583   XOR      V5, V8          ; V5 ^= V8
$812    $68F3   LD       V8, #F3         ; Load 243 into V8
$814    $0C72   SYS      $C72            ; System call to C72
$816    $84B6   SHR      V4              ; V4 >>= 1, VF = LSB
$818    $E57C   UNKNOWN  $E57C           ; Unknown Exxx instruction
$81A    $4028   SNE      V0, #28         ; Skip if V0 != 40
$81C    $491B   SNE      V9, #1B         ; Skip if V9 != 27
$81E    $1037   JP       $037            ; Jump to 037
$820    $9046   UNKNOWN  $9046           ; Unknown 9xxx instruction
$822    $849B   UNKNOWN  849B            ; Unknown 8xxx instruction
$824    $8DF4   ADD      VD, VF          ; VD += VF, VF = carry
$826    $72E2   ADD      V2, #E2         ; Add 226 to V2
$828    $9827   UNKNOWN  $9827           ; Unknown 9xxx instruction
$82A    $08A3   SYS      $8A3            ; System call to 8A3
$82C    $5D68   UNKNOWN  $5D68           ; Unknown 5xxx instruction
$82E    $9F1E   UNKNOWN  $9F1E           ; Unknown 9xxx instruction
$830    $5BEE   UNKNOWN  $5BEE           ; Unknown 5xxx instruction
$832    $1B08   JP       $B08            ; Jump to B08
$834    $06CD   SYS      $6CD            ; System call to 6CD
$836    $283B   CALL     $83B            ; Call subroutine at 83B
$838    $D1CA   DRW      V1, VC, #A      ; Draw 10-byte sprite at V1, VC
$83A    $E820   UNKNOWN  $E820           ; Unknown Exxx instruction
$83C    $D59E   DRW      V5, V9, #E      ; Draw 14-byte sprite at V5, V9
$83E    $AAA0   LD       I, $AA0         ; Load AA0 into I
$840    $CF1E   RND      VF, #1E         ; VF = random & 1E
$842    $4585   SNE      V5, #85         ; Skip if V5 != 133
$844    $6BF6   LD       VB, #F6         ; Load 246 into VB
$846    $54F3   UNKNOWN  $54F3           ; Unknown 5xxx instruction
$848    $C532   RND      V5, #32         ; V5 = random & 32
$84A    $3739   SE       V7, #39         ; Skip if V7 == 57
$84C    $0F54   SYS      $F54            ; System call to F54
$84E    $F0A9   UNKNOWN  F0A9            ; Unknown Fxxx instruction
$850    $282C   CALL     $82C            ; Call subroutine at 82C
$852    $F1EF   UNKNOWN  F1EF            ; Unknown Fxxx instruction
$854    $C1C4   RND      V1, #C4         ; V1 = random & C4
$856    $F034   UNKNOWN  F034            ; Unknown Fxxx instruction
$858    $F4B4   UNKNOWN  F4B4            ; Unknown Fxxx instruction
$85A    $11B2   JP       $1B2            ; Jump to 1B2
$85C    $4B78   SNE      VB, #78         ; Skip if VB != 120
$85E    $DDFE   DRW      VD, VF, #E      ; Draw 14-byte sprite at VD, VF
$860    $8583   XOR      V5, V8          ; V5 ^= V8
$862    $7DED   ADD      VD, #ED         ; Add 237 to VD
$864    $AE1A   LD       I, $E1A         ; Load E1A into I
$866    $8F59   UNKNOWN  8F59            ; Unknown 8xxx instruction
$868    $A059   LD       I, $059         ; Load 059 into I
$86A    $2B42   CALL     $B42            ; Call subroutine at B42
$86C    $5892   UNKNOWN  $5892           ; Unknown 5xxx instruction
$86E    $1934   JP       $934            ; Jump to 934
$870    $750D   ADD      V5, #0D         ; Add 13 to V5
$872    $768C   ADD      V6, #8C         ; Add 140 to V6
$874    $7B91   ADD      VB, #91         ; Add 145 to VB
$876    $D478   DRW      V4, V7, #8      ; Draw 8-byte sprite at V4, V7
$878    $9985   UNKNOWN  $9985           ; Unknown 9xxx instruction
$87A    $9E56   UNKNOWN  $9E56           ; Unknown 9xxx instruction
$87C    $0967   SYS      $967            ; System call to 967
$87E    $15E8   JP       $5E8            ; Jump to 5E8
$880    $391C   SE       V9, #1C         ; Skip if V9 == 28
$882    $36F9   SE       V6, #F9         ; Skip if V6 == 249
$884    $EE5A   UNKNOWN  $EE5A           ; Unknown Exxx instruction
$886    $5690   SE       V6, V9          ; Skip if V6 == V9
$888    $16AC   JP       $6AC            ; Jump to 6AC
$88A    $2D60   CALL     $D60            ; Call subroutine at D60
$88C    $257B   CALL     $57B            ; Call subroutine at 57B
$88E    $D8D0   DRW      V8, VD, #0      ; Draw 0-byte sprite at V8, VD
$890    $5B3A   UNKNOWN  $5B3A           ; Unknown 5xxx instruction
$892    $76B9   ADD      V6, #B9         ; Add 185 to V6
$894    $0862   SYS      $862            ; System call to 862
$896    $8E17   SUBN     VE, V1          ; VE = V1 - VE, VF = !borrow
$898    $7738   ADD      V7, #38         ; Add 56 to V7
$89A    $86B0   LD       V6, VB          ; V6 = VB
$89C    $79FE   ADD      V9, #FE         ; Add 254 to V9
$89E    $9954   UNKNOWN  $9954           ; Unknown 9xxx instruction
$8A0    $AF3F   LD       I, $F3F         ; Load F3F into I
$8A2    $1A8F   JP       $A8F            ; Jump to A8F
$8A4    $0F87   SYS      $F87            ; System call to F87
$8A6    $CD98   RND      VD, #98         ; VD = random & 98
$8A8    $A280   LD       I, $280         ; Load 280 into I
$8AA    $910F   UNKNOWN  $910F           ; Unknown 9xxx instruction
$8AC    $48DF   SNE      V8, #DF         ; Skip if V8 != 223
$8AE    $231E   CALL     $31E            ; Call subroutine at 31E
$8B0    $39E7   SE       V9, #E7         ; Skip if V9 == 231
$8B2    $CF56   RND      VF, #56         ; VF = random & 56
$8B4    $90EF   UNKNOWN  $90EF           ; Unknown 9xxx instruction
$8B6    $B363   JP       V0, $363        ; Jump to V0 + 363
$8B8    $E7D3   UNKNOWN  $E7D3           ; Unknown Exxx instruction
$8BA    $2A40   CALL     $A40            ; Call subroutine at A40
$8BC    $0624   SYS      $624            ; System call to 624
$8BE    $1547   JP       $547            ; Jump to 547
$8C0    $0F43   SYS      $F43            ; System call to F43
$8C2    $DC2B   DRW      VC, V2, #B      ; Draw 11-byte sprite at VC, V2
$8C4    $CAEA   RND      VA, #EA         ; VA = random & EA
$8C6    $6B2D   LD       VB, #2D         ; Load 45 into VB
$8C8    $7E99   ADD      VE, #99         ; Add 153 to VE
$8CA    $ED60   UNKNOWN  $ED60           ; Unknown Exxx instruction
$8CC    $8772   AND      V7, V7          ; V7 &= V7
$8CE    $8B1C   UNKNOWN  8B1C            ; Unknown 8xxx instruction
$8D0    $AFF2   LD       I, $FF2         ; Load FF2 into I
$8D2    $3CC3   SE       VC, #C3         ; Skip if VC == 195
$8D4    $8EF2   AND      VE, VF          ; VE &= VF
$8D6    $DA6D   DRW      VA, V6, #D      ; Draw 13-byte sprite at VA, V6
$8D8    $805F   UNKNOWN  805F            ; Unknown 8xxx instruction
$8DA    $D635   DRW      V6, V3, #5      ; Draw 5-byte sprite at V6, V3
$8DC    $3AC7   SE       VA, #C7         ; Skip if VA == 199
$8DE    $E514   UNKNOWN  $E514           ; Unknown Exxx instruction
$8E0    $9723   UNKNOWN  $9723           ; Unknown 9xxx instruction
$8E2    $E5BC   UNKNOWN  $E5BC           ; Unknown Exxx instruction
$8E4    $FB75   UNKNOWN  FB75            ; Unknown Fxxx instruction
$8E6    $32BD   SE       V2, #BD         ; Skip if V2 == 189
$8E8    $15FF   JP       $5FF            ; Jump to 5FF
$8EA    $1037   JP       $037            ; Jump to 037
$8EC    $5C61   UNKNOWN  $5C61           ; Unknown 5xxx instruction
$8EE    $6D0A   LD       VD, #0A         ; Load 10 into VD
$8F0    $8701   OR       V7, V0          ; V7 |= V0
$8F2    $908C   UNKNOWN  $908C           ; Unknown 9xxx instruction
$8F4    $8808   UNKNOWN  8808            ; Unknown 8xxx instruction
$8F6    $8D5F   UNKNOWN  8D5F            ; Unknown 8xxx instruction
$8F8    $1E7F   JP       $E7F            ; Jump to E7F
$8FA    $93B6   UNKNOWN  $93B6           ; Unknown 9xxx instruction
$8FC    $99B8   UNKNOWN  $99B8           ; Unknown 9xxx instruction
$8FE    $95DA   UNKNOWN  $95DA           ; Unknown 9xxx instruction
$900    $25B5   CALL     $5B5            ; Call subroutine at 5B5
$902    $24D5   CALL     $4D5            ; Call subroutine at 4D5
$904    $6B69   LD       VB, #69         ; Load 105 into VB
$906    $9188   UNKNOWN  $9188           ; Unknown 9xxx instruction
$908    $B1A9   JP       V0, $1A9        ; Jump to V0 + 1A9
$90A    $5D00   SE       VD, V0          ; Skip if VD == V0
$90C    $F5A5   UNKNOWN  F5A5            ; Unknown Fxxx instruction
$90E    $2AC2   CALL     $AC2            ; Call subroutine at AC2
$910    $A75D   LD       I, $75D         ; Load 75D into I
$912    $F715   LD       DT, V7          ; Delay timer = V7
$914    $892A   UNKNOWN  892A            ; Unknown 8xxx instruction
$916    $DD93   DRW      VD, V9, #3      ; Draw 3-byte sprite at VD, V9
$918    $C37E   RND      V3, #7E         ; V3 = random & 7E
$91A    $2D43   CALL     $D43            ; Call subroutine at D43
$91C    $BC2B   JP       V0, $C2B        ; Jump to V0 + C2B
$91E    $DCAF   DRW      VC, VA, #F      ; Draw 15-byte sprite at VC, VA
$920    $04E2   SYS      $4E2            ; System call to 4E2
$922    $E3B8   UNKNOWN  $E3B8           ; Unknown Exxx instruction
$924    $283A   CALL     $83A            ; Call subroutine at 83A
$926    $FF62   UNKNOWN  FF62            ; Unknown Fxxx instruction
$928    $3D3D   SE       VD, #3D         ; Skip if VD == 61
$92A    $7F16   ADD      VF, #16         ; Add 22 to VF
$92C    $73C3   ADD      V3, #C3         ; Add 195 to V3
$92E    $E828   UNKNOWN  $E828           ; Unknown Exxx instruction
$930    $90CC   UNKNOWN  $90CC           ; Unknown 9xxx instruction
$932    $8203   XOR      V2, V0          ; V2 ^= V0
$934    $60D4   LD       V0, #D4         ; Load 212 into V0
$936    $F2F8   UNKNOWN  F2F8            ; Unknown Fxxx instruction
$938    $00DE   SYS      $0DE            ; System call to 0DE
$93A    $B986   JP       V0, $986        ; Jump to V0 + 986
$93C    $8671   OR       V6, V7          ; V6 |= V7
$93E    $6107   LD       V1, #07         ; Load 7 into V1
$940    $75CA   ADD      V5, #CA         ; Add 202 to V5
$942    $F5C4   UNKNOWN  F5C4            ; Unknown Fxxx instruction
$944    $2F6C   CALL     $F6C            ; Call subroutine at F6C
$946    $0C49   SYS      $C49            ; System call to C49
$948    $48D3   SNE      V8, #D3         ; Skip if V8 != 211
$94A    $72B4   ADD      V2, #B4         ; Add 180 to V2
$94C    $2ED0   CALL     $ED0            ; Call subroutine at ED0
$94E    $5DD1   UNKNOWN  $5DD1           ; Unknown 5xxx instruction
$950    $4C2A   SNE      VC, #2A         ; Skip if VC != 42
$952    $AAE0   LD       I, $AE0         ; Load AE0 into I
$954    $F679   UNKNOWN  F679            ; Unknown Fxxx instruction
$956    $2D1B   CALL     $D1B            ; Call subroutine at D1B
$958    $B105   JP       V0, $105        ; Jump to V0 + 105
$95A    $E3FB   UNKNOWN  $E3FB           ; Unknown Exxx instruction
$95C    $1B97   JP       $B97            ; Jump to B97
$95E    $0F31   SYS      $F31            ; System call to F31
$960    $10C2   JP       $0C2            ; Jump to 0C2
$962    $9922   UNKNOWN  $9922           ; Unknown 9xxx instruction
$964    $64BE   LD       V4, #BE         ; Load 190 into V4
$966    $6DBA   LD       VD, #BA         ; Load 186 into VD
$968    $6D14   LD       VD, #14         ; Load 20 into VD
$96A    $A2D2   LD       I, $2D2         ; Load 2D2 into I
$96C    $A09D   LD       I, $09D         ; Load 09D into I
$96E    $A60E   LD       I, $60E         ; Load 60E into I
$970    $6383   LD       V3, #83         ; Load 131 into V3
$972    $7CD5   ADD      VC, #D5         ; Add 213 to VC
$974    $32CB   SE       V2, #CB         ; Skip if V2 == 203
$976    $143C   JP       $43C            ; Jump to 43C
$978    $B1C2   JP       V0, $1C2        ; Jump to V0 + 1C2
$97A    $38B5   SE       V8, #B5         ; Skip if V8 == 181
$97C    $9B4E   UNKNOWN  $9B4E           ; Unknown 9xxx instruction
$97E    $FC6A   UNKNOWN  FC6A            ; Unknown Fxxx instruction
$980    $0D76   SYS      $D76            ; System call to D76
$982    $C859   RND      V8, #59         ; V8 = random & 59
$984    $1516   JP       $516            ; Jump to 516
$986    $FBFA   UNKNOWN  FBFA            ; Unknown Fxxx instruction
$988    $C235   RND      V2, #35         ; V2 = random & 35
$98A    $DC2B   DRW      VC, V2, #B      ; Draw 11-byte sprite at VC, V2
$98C    $93B3   UNKNOWN  $93B3           ; Unknown 9xxx instruction
$98E    $AB89   LD       I, $B89         ; Load B89 into I
$990    $4B5D   SNE      VB, #5D         ; Skip if VB != 93
$992    $88F4   ADD      V8, VF          ; V8 += VF, VF = carry
$994    $1F6C   JP       $F6C            ; Jump to F6C
$996    $E5B1   UNKNOWN  $E5B1           ; Unknown Exxx instruction
$998    $188A   JP       $88A            ; Jump to 88A
$99A    $79C1   ADD      V9, #C1         ; Add 193 to V9
$99C    $5BF0   SE       VB, VF          ; Skip if VB == VF
$99E    $B152   JP       V0, $152        ; Jump to V0 + 152
$9A0    $98C4   UNKNOWN  $98C4           ; Unknown 9xxx instruction
$9A2    $2F15   CALL     $F15            ; Call subroutine at F15
$9A4    $D326   DRW      V3, V2, #6      ; Draw 6-byte sprite at V3, V2
$9A6    $832D   UNKNOWN  832D            ; Unknown 8xxx instruction
$9A8    $1355   JP       $355            ; Jump to 355
$9AA    $DE66   DRW      VE, V6, #6      ; Draw 6-byte sprite at VE, V6
$9AC    $F801   UNKNOWN  F801            ; Unknown Fxxx instruction
$9AE    $4477   SNE      V4, #77         ; Skip if V4 != 119
$9B0    $D28A   DRW      V2, V8, #A      ; Draw 10-byte sprite at V2, V8
$9B2    $EDC0   UNKNOWN  $EDC0           ; Unknown Exxx instruction
$9B4    $53C2   UNKNOWN  $53C2           ; Unknown 5xxx instruction
$9B6    $DBC0   DRW      VB, VC, #0      ; Draw 0-byte sprite at VB, VC
$9B8    $1EB0   JP       $EB0            ; Jump to EB0
$9BA    $10E4   JP       $0E4            ; Jump to 0E4
$9BC    $9626   UNKNOWN  $9626           ; Unknown 9xxx instruction
$9BE    $38F6   SE       V8, #F6         ; Skip if V8 == 246
$9C0    $66C3   LD       V6, #C3         ; Load 195 into V6
$9C2    $7D76   ADD      VD, #76         ; Add 118 to VD
$9C4    $5B7A   UNKNOWN  $5B7A           ; Unknown 5xxx instruction
$9C6    $32F6   SE       V2, #F6         ; Skip if V2 == 246
$9C8    $D812   DRW      V8, V1, #2      ; Draw 2-byte sprite at V8, V1
$9CA    $DA33   DRW      VA, V3, #3      ; Draw 3-byte sprite at VA, V3
$9CC    $2AAD   CALL     $AAD            ; Call subroutine at AAD
$9CE    $D6DA   DRW      V6, VD, #A      ; Draw 10-byte sprite at V6, VD
$9D0    $7AD0   ADD      VA, #D0         ; Add 208 to VA
$9D2    $B899   JP       V0, $899        ; Jump to V0 + 899
$9D4    $6B60   LD       VB, #60         ; Load 96 into VB
$9D6    $60C7   LD       V0, #C7         ; Load 199 into V0
$9D8    $2918   CALL     $918            ; Call subroutine at 918
$9DA    $4626   SNE      V6, #26         ; Skip if V6 != 38
$9DC    $ABC1   LD       I, $BC1         ; Load BC1 into I
$9DE    $63FA   LD       V3, #FA         ; Load 250 into V3
$9E0    $18FF   JP       $8FF            ; Jump to 8FF
$9E2    $C427   RND      V4, #27         ; V4 = random & 27
$9E4    $99C3   UNKNOWN  $99C3           ; Unknown 9xxx instruction
$9E6    $2137   CALL     $137            ; Call subroutine at 137
$9E8    $1C89   JP       $C89            ; Jump to C89
$9EA    $4C03   SNE      VC, #03         ; Skip if VC != 3
$9EC    $1A76   JP       $A76            ; Jump to A76
$9EE    $82E6   SHR      V2              ; V2 >>= 1, VF = LSB
$9F0    $E04B   UNKNOWN  $E04B           ; Unknown Exxx instruction
$9F2    $13F0   JP       $3F0            ; Jump to 3F0
$9F4    $158D   JP       $58D            ; Jump to 58D
$9F6    $5560   SE       V5, V6          ; Skip if V5 == V6
$9F8    $D849   DRW      V8, V4, #9      ; Draw 9-byte sprite at V8, V4
$9FA    $383F   SE       V8, #3F         ; Skip if V8 == 63
$9FC    $93CC   UNKNOWN  $93CC           ; Unknown 9xxx instruction
$9FE    $F59B   UNKNOWN  F59B            ; Unknown Fxxx instruction
$A00    $4563   SNE      V5, #63         ; Skip if V5 != 99
$A02    $FAFC   UNKNOWN  FAFC            ; Unknown Fxxx instruction
$A04    $E25E   UNKNOWN  $E25E           ; Unknown Exxx instruction
$A06    $C445   RND      V4, #45         ; V4 = random & 45
$A08    $5279   UNKNOWN  $5279           ; Unknown 5xxx instruction
$A0A    $C97E   RND      V9, #7E         ; V9 = random & 7E
$A0C    $63EA   LD       V3, #EA         ; Load 234 into V3
$A0E    $19A4   JP       $9A4            ; Jump to 9A4
$A10    $D9F7   DRW      V9, VF, #7      ; Draw 7-byte sprite at V9, VF
$A12    $27C8   CALL     $7C8            ; Call subroutine at 7C8
$A14    $42F9   SNE      V2, #F9         ; Skip if V2 != 249
$A16    $DF11   DRW      VF, V1, #1      ; Draw 1-byte sprite at VF, V1
$A18    $2FE0   CALL     $FE0            ; Call subroutine at FE0
$A1A    $D553   DRW      V5, V5, #3      ; Draw 3-byte sprite at V5, V5
$A1C    $A374   LD       I, $374         ; Load 374 into I
$A1E    $09C5   SYS      $9C5            ; System call to 9C5
$A20    $87C1   OR       V7, VC          ; V7 |= VC
$A22    $E70C   UNKNOWN  $E70C           ; Unknown Exxx instruction
$A24    $71E7   ADD      V1, #E7         ; Add 231 to V1
$A26    $1FDB   JP       $FDB            ; Jump to FDB
$A28    $226D   CALL     $26D            ; Call subroutine at 26D
$A2A    $518F   UNKNOWN  $518F           ; Unknown 5xxx instruction
$A2C    $45D8   SNE      V5, #D8         ; Skip if V5 != 216
$A2E    $D66D   DRW      V6, V6, #D      ; Draw 13-byte sprite at V6, V6
$A30    $4FCF   SNE      VF, #CF         ; Skip if VF != 207
$A32    $BA50   JP       V0, $A50        ; Jump to V0 + A50
$A34    $ADA3   LD       I, $DA3         ; Load DA3 into I
$A36    $2243   CALL     $243            ; Call subroutine at 243
$A38    $B268   JP       V0, $268        ; Jump to V0 + 268
$A3A    $E76A   UNKNOWN  $E76A           ; Unknown Exxx instruction
$A3C    $0C01   SYS      $C01            ; System call to C01
$A3E    $7B68   ADD      VB, #68         ; Add 104 to VB
$A40    $88D5   SUB      V8, VD          ; V8 -= VD, VF = !borrow
$A42    $390A   SE       V9, #0A         ; Skip if V9 == 10
$A44    $CAD9   RND      VA, #D9         ; VA = random & D9
$A46    $B5C3   JP       V0, $5C3        ; Jump to V0 + 5C3
$A48    $77D7   ADD      V7, #D7         ; Add 215 to V7
$A4A    $7308   ADD      V3, #08         ; Add 8 to V3
$A4C    $E166   UNKNOWN  $E166           ; Unknown Exxx instruction
$A4E    $5ECF   UNKNOWN  $5ECF           ; Unknown 5xxx instruction
$A50    $7B44   ADD      VB, #44         ; Add 68 to VB
$A52    $FA2D   UNKNOWN  FA2D            ; Unknown Fxxx instruction
$A54    $FBA5   UNKNOWN  FBA5            ; Unknown Fxxx instruction
$A56    $9F19   UNKNOWN  $9F19           ; Unknown 9xxx instruction
$A58    $0AC6   SYS      $AC6            ; System call to AC6
$A5A    $67D0   LD       V7, #D0         ; Load 208 into V7
$A5C    $19A5   JP       $9A5            ; Jump to 9A5
$A5E    $62C0   LD       V2, #C0         ; Load 192 into V2
$A60    $E6AF   UNKNOWN  $E6AF           ; Unknown Exxx instruction
$A62    $185F   JP       $85F            ; Jump to 85F
$A64    $DBAC   DRW      VB, VA, #C      ; Draw 12-byte sprite at VB, VA
$A66    $8D52   AND      VD, V5          ; VD &= V5
$A68    $2075   CALL     $075            ; Call subroutine at 075
$A6A    $D945   DRW      V9, V4, #5      ; Draw 5-byte sprite at V9, V4
$A6C    $76B0   ADD      V6, #B0         ; Add 176 to V6
$A6E    $55B6   UNKNOWN  $55B6           ; Unknown 5xxx instruction
$A70    $4385   SNE      V3, #85         ; Skip if V3 != 133
$A72    $3E52   SE       VE, #52         ; Skip if VE == 82
$A74    $C044   RND      V0, #44         ; V0 = random & 44
$A76    $B2AA   JP       V0, $2AA        ; Jump to V0 + 2AA
$A78    $40BB   SNE      V0, #BB         ; Skip if V0 != 187
$A7A    $F77A   UNKNOWN  F77A            ; Unknown Fxxx instruction
$A7C    $16F7   JP       $6F7            ; Jump to 6F7
$A7E    $C869   RND      V8, #69         ; V8 = random & 69
$A80    $8871   OR       V8, V7          ; V8 |= V7
$A82    $D27C   DRW      V2, V7, #C      ; Draw 12-byte sprite at V2, V7
$A84    $2477   CALL     $477            ; Call subroutine at 477
$A86    $CACE   RND      VA, #CE         ; VA = random & CE
$A88    $88D4   ADD      V8, VD          ; V8 += VD, VF = carry
$A8A    $BEEB   JP       V0, $EEB        ; Jump to V0 + EEB
$A8C    $4C8F   SNE      VC, #8F         ; Skip if VC != 143
$A8E    $BFE2   JP       V0, $FE2        ; Jump to V0 + FE2
$A90    $0E15   SYS      $E15            ; System call to E15
$A92    $62D1   LD       V2, #D1         ; Load 209 into V2
$A94    $0566   SYS      $566            ; System call to 566
$A96    $2205   CALL     $205            ; Call subroutine at 205
$A98    $8B48   UNKNOWN  8B48            ; Unknown 8xxx instruction
$A9A    $3C94   SE       VC, #94         ; Skip if VC == 148
$A9C    $B5C8   JP       V0, $5C8        ; Jump to V0 + 5C8
$A9E    $8C76   SHR      VC              ; VC >>= 1, VF = LSB
$AA0    $4E8C   SNE      VE, #8C         ; Skip if VE != 140
$AA2    $05D9   SYS      $5D9            ; System call to 5D9
$AA4    $409E   SNE      V0, #9E         ; Skip if V0 != 158
$AA6    $1524   JP       $524            ; Jump to 524
$AA8    $A56C   LD       I, $56C         ; Load 56C into I
$AAA    $BD68   JP       V0, $D68        ; Jump to V0 + D68
$AAC    $D871   DRW      V8, V7, #1      ; Draw 1-byte sprite at V8, V7
$AAE    $2151   CALL     $151            ; Call subroutine at 151
$AB0    $1D4B   JP       $D4B            ; Jump to D4B
$AB2    $0E4F   SYS      $E4F            ; System call to E4F
$AB4    $54A7   UNKNOWN  $54A7           ; Unknown 5xxx instruction
$AB6    $13A3   JP       $3A3            ; Jump to 3A3
$AB8    $BDD2   JP       V0, $DD2        ; Jump to V0 + DD2
$ABA    $9B14   UNKNOWN  $9B14           ; Unknown 9xxx instruction
$ABC    $6DFF   LD       VD, #FF         ; Load 255 into VD
$ABE    $CE3A   RND      VE, #3A         ; VE = random & 3A
$AC0    $49DC   SNE      V9, #DC         ; Skip if V9 != 220
$AC2    $793F   ADD      V9, #3F         ; Add 63 to V9
$AC4    $402E   SNE      V0, #2E         ; Skip if V0 != 46
$AC6    $A86E   LD       I, $86E         ; Load 86E into I
$AC8    $A552   LD       I, $552         ; Load 552 into I
$ACA    $FB60   UNKNOWN  FB60            ; Unknown Fxxx instruction
$ACC    $70E3   ADD      V0, #E3         ; Add 227 to V0
$ACE    $CED1   RND      VE, #D1         ; VE = random & D1
$AD0    $3922   SE       V9, #22         ; Skip if V9 == 34
$AD2    $0091   SYS      $091            ; System call to 091
$AD4    $07E7   SYS      $7E7            ; System call to 7E7
$AD6    $2055   CALL     $055            ; Call subroutine at 055
$AD8    $3E4F   SE       VE, #4F         ; Skip if VE == 79
$ADA    $A18B   LD       I, $18B         ; Load 18B into I
$ADC    $4E50   SNE      VE, #50         ; Skip if VE != 80
$ADE    $E370   UNKNOWN  $E370           ; Unknown Exxx instruction
$AE0    $464B   SNE      V6, #4B         ; Skip if V6 != 75
$AE2    $4A94   SNE      VA, #94         ; Skip if VA != 148
$AE4    $328F   SE       V2, #8F         ; Skip if V2 == 143
$AE6    $FB3D   UNKNOWN  FB3D            ; Unknown Fxxx instruction
$AE8    $6AA0   LD       VA, #A0         ; Load 160 into VA
$AEA    $15B6   JP       $5B6            ; Jump to 5B6
$AEC    $2A39   CALL     $A39            ; Call subroutine at A39
$AEE    $B764   JP       V0, $764        ; Jump to V0 + 764
$AF0    $EE88   UNKNOWN  $EE88           ; Unknown Exxx instruction
$AF2    $E82F   UNKNOWN  $E82F           ; Unknown Exxx instruction
$AF4    $CEAE   RND      VE, #AE         ; VE = random & AE
$AF6    $AFEA   LD       I, $FEA         ; Load FEA into I
$AF8    $7A72   ADD      VA, #72         ; Add 114 to VA
$AFA    $ED57   UNKNOWN  $ED57           ; Unknown Exxx instruction
$AFC    $FF52   UNKNOWN  FF52            ; Unknown Fxxx instruction
$AFE    $1EB4   JP       $EB4            ; Jump to EB4
$B00    $BF88   JP       V0, $F88        ; Jump to V0 + F88
$B02    $9593   UNKNOWN  $9593           ; Unknown 9xxx instruction
$B04    $941D   UNKNOWN  $941D           ; Unknown 9xxx instruction
$B06    $9F4E   UNKNOWN  $9F4E           ; Unknown 9xxx instruction
$B08    $A830   LD       I, $830         ; Load 830 into I
$B0A    $0400   SYS      $400            ; System call to 400
$B0C    $3716   SE       V7, #16         ; Skip if V7 == 22
$B0E    $447F   SNE      V4, #7F         ; Skip if V4 != 127
$B10    $3B1F   SE       VB, #1F         ; Skip if VB == 31
$B12    $502E   UNKNOWN  $502E           ; Unknown 5xxx instruction
$B14    $AFB2   LD       I, $FB2         ; Load FB2 into I
$B16    $5ECE   UNKNOWN  $5ECE           ; Unknown 5xxx instruction
$B18    $A63C   LD       I, $63C         ; Load 63C into I
$B1A    $A2C9   LD       I, $2C9         ; Load 2C9 into I
$B1C    $4ADF   SNE      VA, #DF         ; Skip if VA != 223
$B1E    $8AB8   UNKNOWN  8AB8            ; Unknown 8xxx instruction
$B20    $5795   UNKNOWN  $5795           ; Unknown 5xxx instruction
$B22    $DE17   DRW      VE, V1, #7      ; Draw 7-byte sprite at VE, V1
$B24    $280D   CALL     $80D            ; Call subroutine at 80D
$B26    $0935   SYS      $935            ; System call to 935
$B28    $6A23   LD       VA, #23         ; Load 35 into VA
$B2A    $1B5A   JP       $B5A            ; Jump to B5A
$B2C    $615F   LD       V1, #5F         ; Load 95 into V1
$B2E    $E61D   UNKNOWN  $E61D           ; Unknown Exxx instruction
$B30    $5915   UNKNOWN  $5915           ; Unknown 5xxx instruction
$B32    $D51B   DRW      V5, V1, #B      ; Draw 11-byte sprite at V5, V1
$B34    $89D5   SUB      V9, VD          ; V9 -= VD, VF = !borrow
$B36    $E3E1   UNKNOWN  $E3E1           ; Unknown Exxx instruction
$B38    $EC28   UNKNOWN  $EC28           ; Unknown Exxx instruction
$B3A    $B15A   JP       V0, $15A        ; Jump to V0 + 15A
$B3C    $08B6   SYS      $8B6            ; System call to 8B6
$B3E    $5FAA   UNKNOWN  $5FAA           ; Unknown 5xxx instruction
$B40    $315F   SE       V1, #5F         ; Skip if V1 == 95
$B42    $3C2E   SE       VC, #2E         ; Skip if VC == 46
$B44    $B7AC   JP       V0, $7AC        ; Jump to V0 + 7AC
$B46    $8CEF   UNKNOWN  8CEF            ; Unknown 8xxx instruction
$B48    $94B6   UNKNOWN  $94B6           ; Unknown 9xxx instruction
$B4A    $6BFE   LD       VB, #FE         ; Load 254 into VB
$B4C    $780D   ADD      V8, #0D         ; Add 13 to V8
$B4E    $23FB   CALL     $3FB            ; Call subroutine at 3FB
$B50    $A1CF   LD       I, $1CF         ; Load 1CF into I
$B52    $F1D0   UNKNOWN  F1D0            ; Unknown Fxxx instruction
$B54    $3802   SE       V8, #02         ; Skip if V8 == 2
$B56    $1AB7   JP       $AB7            ; Jump to AB7
$B58    $6A17   LD       VA, #17         ; Load 23 into VA
$B5A    $1A6A   JP       $A6A            ; Jump to A6A
$B5C    $E2F2   UNKNOWN  $E2F2           ; Unknown Exxx instruction
$B5E    $19C5   JP       $9C5            ; Jump to 9C5
$B60    $E8C7   UNKNOWN  $E8C7           ; Unknown Exxx instruction
$B62    $B840   JP       V0, $840        ; Jump to V0 + 840
$B64    $E181   UNKNOWN  $E181           ; Unknown Exxx instruction
$B66    $410F   SNE      V1, #0F         ; Skip if V1 != 15
$B68    $D0B8   DRW      V0, VB, #8      ; Draw 8-byte sprite at V0, VB
$B6A    $A51F   LD       I, $51F         ; Load 51F into I
$B6C    $6B33   LD       VB, #33         ; Load 51 into VB
$B6E    $6B3D   LD       VB, #3D         ; Load 61 into VB
$B70    $1505   JP       $505            ; Jump to 505
$B72    $97AD   UNKNOWN  $97AD           ; Unknown 9xxx instruction
$B74    $BB61   JP       V0, $B61        ; Jump to V0 + B61
$B76    $5D62   UNKNOWN  $5D62           ; Unknown 5xxx instruction
$B78    $0BC8   SYS      $BC8            ; System call to BC8
$B7A    $A199   LD       I, $199         ; Load 199 into I
$B7C    $522F   UNKNOWN  $522F           ; Unknown 5xxx instruction
$B7E    $9500   SNE      V5, V0          ; Skip if V5 != V0
$B80    $3DEE   SE       VD, #EE         ; Skip if VD == 238
$B82    $91D2   UNKNOWN  $91D2           ; Unknown 9xxx instruction
$B84    $1166   JP       $166            ; Jump to 166
$B86    $9892   UNKNOWN  $9892           ; Unknown 9xxx instruction
$B88    $031E   SYS      $31E            ; System call to 31E
$B8A    $7086   ADD      V0, #86         ; Add 134 to V0
$B8C    $3C2E   SE       VC, #2E         ; Skip if VC == 46
$B8E    $E6F6   UNKNOWN  $E6F6           ; Unknown Exxx instruction
$B90    $60DB   LD       V0, #DB         ; Load 219 into V0
$B92    $13F5   JP       $3F5            ; Jump to 3F5
$B94    $4A0E   SNE      VA, #0E         ; Skip if VA != 14
$B96    $23AC   CALL     $3AC            ; Call subroutine at 3AC
$B98    $D77D   DRW      V7, V7, #D      ; Draw 13-byte sprite at V7, V7
$B9A    $D884   DRW      V8, V8, #4      ; Draw 4-byte sprite at V8, V8
$B9C    $814C   UNKNOWN  814C            ; Unknown 8xxx instruction
$B9E    $7B5F   ADD      VB, #5F         ; Add 95 to VB
$BA0    $512D   UNKNOWN  $512D           ; Unknown 5xxx instruction
$BA2    $6D5F   LD       VD, #5F         ; Load 95 into VD
$BA4    $0161   SYS      $161            ; System call to 161
$BA6    $10CB   JP       $0CB            ; Jump to 0CB
$BA8    $8789   UNKNOWN  8789            ; Unknown 8xxx instruction
$BAA    $F062   UNKNOWN  F062            ; Unknown Fxxx instruction
$BAC    $8975   SUB      V9, V7          ; V9 -= V7, VF = !borrow
$BAE    $A639   LD       I, $639         ; Load 639 into I
$BB0    $2548   CALL     $548            ; Call subroutine at 548
$BB2    $1BC2   JP       $BC2            ; Jump to BC2
$BB4    $4A2F   SNE      VA, #2F         ; Skip if VA != 47
$BB6    $CF46   RND      VF, #46         ; VF = random & 46
$BB8    $A9BB   LD       I, $9BB         ; Load 9BB into I
$BBA    $2074   CALL     $074            ; Call subroutine at 074
$BBC    $D9CF   DRW      V9, VC, #F      ; Draw 15-byte sprite at V9, VC
$BBE    $2488   CALL     $488            ; Call subroutine at 488
$BC0    $359B   SE       V5, #9B         ; Skip if V5 == 155
$BC2    $DFE3   DRW      VF, VE, #3      ; Draw 3-byte sprite at VF, VE
$BC4    $D89F   DRW      V8, V9, #F      ; Draw 15-byte sprite at V8, V9
$BC6    $C74E   RND      V7, #4E         ; V7 = random & 4E
$BC8    $AECD   LD       I, $ECD         ; Load ECD into I
$BCA    $2A57   CALL     $A57            ; Call subroutine at A57
$BCC    $591F   UNKNOWN  $591F           ; Unknown 5xxx instruction
$BCE    $C96B   RND      V9, #6B         ; V9 = random & 6B
$BD0    $E02E   UNKNOWN  $E02E           ; Unknown Exxx instruction
$BD2    $12FC   JP       $2FC            ; Jump to 2FC
$BD4    $3354   SE       V3, #54         ; Skip if V3 == 84
$BD6    $E453   UNKNOWN  $E453           ; Unknown Exxx instruction
$BD8    $761F   ADD      V6, #1F         ; Add 31 to V6
$BDA    $9A01   UNKNOWN  $9A01           ; Unknown 9xxx instruction
$BDC    $C257   RND      V2, #57         ; V2 = random & 57
$BDE    $3A44   SE       VA, #44         ; Skip if VA == 68
$BE0    $B808   JP       V0, $808        ; Jump to V0 + 808
$BE2    $B1E6   JP       V0, $1E6        ; Jump to V0 + 1E6
$BE4    $BAF1   JP       V0, $AF1        ; Jump to V0 + AF1
$BE6    $6BB6   LD       VB, #B6         ; Load 182 into VB
$BE8    $193E   JP       $93E            ; Jump to 93E
$BEA    $12FD   JP       $2FD            ; Jump to 2FD
$BEC    $1E7C   JP       $E7C            ; Jump to E7C
$BEE    $D193   DRW      V1, V9, #3      ; Draw 3-byte sprite at V1, V9
$BF0    $1602   JP       $602            ; Jump to 602
$BF2    $D9EE   DRW      V9, VE, #E      ; Draw 14-byte sprite at V9, VE
$BF4    $1F2F   JP       $F2F            ; Jump to F2F
$BF6    $A174   LD       I, $174         ; Load 174 into I
$BF8    $37D7   SE       V7, #D7         ; Skip if V7 == 215
$BFA    $77AB   ADD      V7, #AB         ; Add 171 to V7
$BFC    $6017   LD       V0, #17         ; Load 23 into V0
$BFE    $07BA   SYS      $7BA            ; System call to 7BA
$C00    $FA78   UNKNOWN  FA78            ; Unknown Fxxx instruction
$C02    $B122   JP       V0, $122        ; Jump to V0 + 122
$C04    $DA98   DRW      VA, V9, #8      ; Draw 8-byte sprite at VA, V9
$C06    $856A   UNKNOWN  856A            ; Unknown 8xxx instruction
$C08    $2016   CALL     $016            ; Call subroutine at 016
$C0A    $40A0   SNE      V0, #A0         ; Skip if V0 != 160
$C0C    $48FD   SNE      V8, #FD         ; Skip if V8 != 253
$C0E    $F0C8   UNKNOWN  F0C8            ; Unknown Fxxx instruction
$C10    $CA26   RND      VA, #26         ; VA = random & 26
$C12    $BF61   JP       V0, $F61        ; Jump to V0 + F61
$C14    $376B   SE       V7, #6B         ; Skip if V7 == 107
$C16    $7534   ADD      V5, #34         ; Add 52 to V5
$C18    $4E67   SNE      VE, #67         ; Skip if VE != 103
$C1A    $11F9   JP       $1F9            ; Jump to 1F9
$C1C    $F1F2   UNKNOWN  F1F2            ; Unknown Fxxx instruction
$C1E    $4CF0   SNE      VC, #F0         ; Skip if VC != 240
$C20    $E1BE   UNKNOWN  $E1BE           ; Unknown Exxx instruction
$C22    $FA11   UNKNOWN  FA11            ; Unknown Fxxx instruction
$C24    $4497   SNE      V4, #97         ; Skip if V4 != 151
$C26    $7878   ADD      V8, #78         ; Add 120 to V8
$C28    $7276   ADD      V2, #76         ; Add 118 to V2
$C2A    $A788   LD       I, $788         ; Load 788 into I
$C2C    $9463   UNKNOWN  $9463           ; Unknown 9xxx instruction
$C2E    $B52A   JP       V0, $52A        ; Jump to V0 + 52A
$C30    $4C3A   SNE      VC, #3A         ; Skip if VC != 58
$C32    $9442   UNKNOWN  $9442           ; Unknown 9xxx instruction
$C34    $C867   RND      V8, #67         ; V8 = random & 67
$C36    $7A0B   ADD      VA, #0B         ; Add 11 to VA
$C38    $CDE9   RND      VD, #E9         ; VD = random & E9
$C3A    $4104   SNE      V1, #04         ; Skip if V1 != 4
$C3C    $A66A   LD       I, $66A         ; Load 66A into I
$C3E    $54D4   UNKNOWN  $54D4           ; Unknown 5xxx instruction
$C40    $89C9   UNKNOWN  89C9            ; Unknown 8xxx instruction
$C42    $7D2C   ADD      VD, #2C         ; Add 44 to VD
$C44    $B118   JP       V0, $118        ; Jump to V0 + 118
$C46    $5B76   UNKNOWN  $5B76           ; Unknown 5xxx instruction
$C48    $3E15   SE       VE, #15         ; Skip if VE == 21
$C4A    $2069   CALL     $069            ; Call subroutine at 069
$C4C    $AD96   LD       I, $D96         ; Load D96 into I
$C4E    $9337   UNKNOWN  $9337           ; Unknown 9xxx instruction
$C50    $702B   ADD      V0, #2B         ; Add 43 to V0
$C52    $4512   SNE      V5, #12         ; Skip if V5 != 18
$C54    $28D1   CALL     $8D1            ; Call subroutine at 8D1
$C56    $AB85   LD       I, $B85         ; Load B85 into I
$C58    $3A57   SE       VA, #57         ; Skip if VA == 87
$C5A    $E535   UNKNOWN  $E535           ; Unknown Exxx instruction
$C5C    $82FF   UNKNOWN  82FF            ; Unknown 8xxx instruction
$C5E    $6A6F   LD       VA, #6F         ; Load 111 into VA
$C60    $A307   LD       I, $307         ; Load 307 into I
$C62    $7500   ADD      V5, #00         ; Add 0 to V5
$C64    $4BFA   SNE      VB, #FA         ; Skip if VB != 250
$C66    $8157   SUBN     V1, V5          ; V1 = V5 - V1, VF = !borrow
$C68    $AAC5   LD       I, $AC5         ; Load AC5 into I
$C6A    $4DF3   SNE      VD, #F3         ; Skip if VD != 243
$C6C    $0BC0   SYS      $BC0            ; System call to BC0
$C6E    $9EBC   UNKNOWN  $9EBC           ; Unknown 9xxx instruction
$C70    $3D9D   SE       VD, #9D         ; Skip if VD == 157
$C72    $896B   UNKNOWN  896B            ; Unknown 8xxx instruction
$C74    $83F1   OR       V3, VF          ; V3 |= VF
$C76    $978A   UNKNOWN  $978A           ; Unknown 9xxx instruction
$C78    $0488   SYS      $488            ; System call to 488
$C7A    $0EEE   SYS      $EEE            ; System call to EEE
$C7C    $72D6   ADD      V2, #D6         ; Add 214 to V2
$C7E    $5168   UNKNOWN  $5168           ; Unknown 5xxx instruction
$C80    $B6FC   JP       V0, $6FC        ; Jump to V0 + 6FC
$C82    $A4C3   LD       I, $4C3         ; Load 4C3 into I
$C84    $A3EC   LD       I, $3EC         ; Load 3EC into I
$C86    $D6B4   DRW      V6, VB, #4      ; Draw 4-byte sprite at V6, VB
$C88    $71EB   ADD      V1, #EB         ; Add 235 to V1
$C8A    $25AD   CALL     $5AD            ; Call subroutine at 5AD
$C8C    $8664   ADD      V6, V6          ; V6 += V6, VF = carry
$C8E    $E349   UNKNOWN  $E349           ; Unknown Exxx instruction
$C90    $290F   CALL     $90F            ; Call subroutine at 90F
$C92    $0EA1   SYS      $EA1            ; System call to EA1
$C94    $108C   JP       $08C            ; Jump to 08C
$C96    $0A68   SYS      $A68            ; System call to A68
$C98    $D977   DRW      V9, V7, #7      ; Draw 7-byte sprite at V9, V7
$C9A    $A889   LD       I, $889         ; Load 889 into I
$C9C    $D051   DRW      V0, V5, #1      ; Draw 1-byte sprite at V0, V5
$C9E    $6E9E   LD       VE, #9E         ; Load 158 into VE
$CA0    $F680   UNKNOWN  F680            ; Unknown Fxxx instruction
$CA2    $6AEB   LD       VA, #EB         ; Load 235 into VA
$CA4    $3500   SE       V5, #00         ; Skip if V5 == 0
$CA6    $536A   UNKNOWN  $536A           ; Unknown 5xxx instruction
$CA8    $2465   CALL     $465            ; Call subroutine at 465
$CAA    $484F   SNE      V8, #4F         ; Skip if V8 != 79
$CAC    $25BB   CALL     $5BB            ; Call subroutine at 5BB
$CAE    $A186   LD       I, $186         ; Load 186 into I
$CB0    $71E1   ADD      V1, #E1         ; Add 225 to V1
$CB2    $9A26   UNKNOWN  $9A26           ; Unknown 9xxx instruction
$CB4    $BFE9   JP       V0, $FE9        ; Jump to V0 + FE9
$CB6    $6CDE   LD       VC, #DE         ; Load 222 into VC
$CB8    $DC1C   DRW      VC, V1, #C      ; Draw 12-byte sprite at VC, V1
$CBA    $1F4F   JP       $F4F            ; Jump to F4F
$CBC    $BCC0   JP       V0, $CC0        ; Jump to V0 + CC0
$CBE    $677B   LD       V7, #7B         ; Load 123 into V7
$CC0    $DE1A   DRW      VE, V1, #A      ; Draw 10-byte sprite at VE, V1
$CC2    $292E   CALL     $92E            ; Call subroutine at 92E
$CC4    $B51B   JP       V0, $51B        ; Jump to V0 + 51B
$CC6    $31B9   SE       V1, #B9         ; Skip if V1 == 185
$CC8    $3FC3   SE       VF, #C3         ; Skip if VF == 195
$CCA    $7D20   ADD      VD, #20         ; Add 32 to VD
$CCC    $9BD6   UNKNOWN  $9BD6           ; Unknown 9xxx instruction
$CCE    $9953   UNKNOWN  $9953           ; Unknown 9xxx instruction
$CD0    $CE68   RND      VE, #68         ; VE = random & 68
$CD2    $2184   CALL     $184            ; Call subroutine at 184
$CD4    $FE11   UNKNOWN  FE11            ; Unknown Fxxx instruction
$CD6    $EB19   UNKNOWN  $EB19           ; Unknown Exxx instruction
$CD8    $D86B   DRW      V8, V6, #B      ; Draw 11-byte sprite at V8, V6
$CDA    $67F2   LD       V7, #F2         ; Load 242 into V7
$CDC    $D4DD   DRW      V4, VD, #D      ; Draw 13-byte sprite at V4, VD
$CDE    $5B53   UNKNOWN  $5B53           ; Unknown 5xxx instruction
$CE0    $9C8F   UNKNOWN  $9C8F           ; Unknown 9xxx instruction
$CE2    $FDD7   UNKNOWN  FDD7            ; Unknown Fxxx instruction
$CE4    $E1E7   UNKNOWN  $E1E7           ; Unknown Exxx instruction
$CE6    $BA2C   JP       V0, $A2C        ; Jump to V0 + A2C
$CE8    $162A   JP       $62A            ; Jump to 62A
$CEA    $78C8   ADD      V8, #C8         ; Add 200 to V8
$CEC    $5A94   UNKNOWN  $5A94           ; Unknown 5xxx instruction
$CEE    $B774   JP       V0, $774        ; Jump to V0 + 774
$CF0    $E6A4   UNKNOWN  $E6A4           ; Unknown Exxx instruction
$CF2    $40BA   SNE      V0, #BA         ; Skip if V0 != 186
$CF4    $6311   LD       V3, #11         ; Load 17 into V3
$CF6    $9613   UNKNOWN  $9613           ; Unknown 9xxx instruction
$CF8    $0F8A   SYS      $F8A            ; System call to F8A
$CFA    $2AC0   CALL     $AC0            ; Call subroutine at AC0
$CFC    $EE21   UNKNOWN  $EE21           ; Unknown Exxx instruction
$CFE    $E7E2   UNKNOWN  $E7E2           ; Unknown Exxx instruction
$D00    $0EF8   SYS      $EF8            ; System call to EF8
$D02    $DA5A   DRW      VA, V5, #A      ; Draw 10-byte sprite at VA, V5
$D04    $8D5E   SHL      VD              ; VD <<= 1, VF = MSB
$D06    $4417   SNE      V4, #17         ; Skip if V4 != 23
$D08    $4178   SNE      V1, #78         ; Skip if V1 != 120
$D0A    $1313   JP       $313            ; Jump to 313
$D0C    $6381   LD       V3, #81         ; Load 129 into V3
$D0E    $D25E   DRW      V2, V5, #E      ; Draw 14-byte sprite at V2, V5
$D10    $4BCD   SNE      VB, #CD         ; Skip if VB != 205
$D12    $A773   LD       I, $773         ; Load 773 into I
$D14    $4F66   SNE      VF, #66         ; Skip if VF != 102
$D16    $37C2   SE       V7, #C2         ; Skip if V7 == 194
$D18    $2463   CALL     $463            ; Call subroutine at 463
$D1A    $B0B6   JP       V0, $0B6        ; Jump to V0 + 0B6
$D1C    $9C80   SNE      VC, V8          ; Skip if VC != V8
$D1E    $FC41   UNKNOWN  FC41            ; Unknown Fxxx instruction
$D20    $8B26   SHR      VB              ; VB >>= 1, VF = LSB
$D22    $F543   UNKNOWN  F543            ; Unknown Fxxx instruction
$D24    $6C42   LD       VC, #42         ; Load 66 into VC
$D26    $CAD8   RND      VA, #D8         ; VA = random & D8
$D28    $004E   SYS      $04E            ; System call to 04E
$D2A    $B038   JP       V0, $038        ; Jump to V0 + 038
$D2C    $64FE   LD       V4, #FE         ; Load 254 into V4
$D2E    $0826   SYS      $826            ; System call to 826
$D30    $A150   LD       I, $150         ; Load 150 into I
$D32    $4B07   SNE      VB, #07         ; Skip if VB != 7
$D34    $78C6   ADD      V8, #C6         ; Add 198 to V8
$D36    $322F   SE       V2, #2F         ; Skip if V2 == 47
$D38    $5A54   UNKNOWN  $5A54           ; Unknown 5xxx instruction
$D3A    $F659   UNKNOWN  F659            ; Unknown Fxxx instruction
$D3C    $A073   LD       I, $073         ; Load 073 into I
$D3E    $2D76   CALL     $D76            ; Call subroutine at D76
$D40    $5B28   UNKNOWN  $5B28           ; Unknown 5xxx instruction
$D42    $91A1   UNKNOWN  $91A1           ; Unknown 9xxx instruction
$D44    $B66E   JP       V0, $66E        ; Jump to V0 + 66E
$D46    $865B   UNKNOWN  865B            ; Unknown 8xxx instruction
$D48    $6A99   LD       VA, #99         ; Load 153 into VA
$D4A    $4420   SNE      V4, #20         ; Skip if V4 != 32
$D4C    $81E9   UNKNOWN  81E9            ; Unknown 8xxx instruction
$D4E    $E1A7   UNKNOWN  $E1A7           ; Unknown Exxx instruction
$D50    $1FC3   JP       $FC3            ; Jump to FC3
$D52    $7C61   ADD      VC, #61         ; Add 97 to VC
$D54    $FE75   UNKNOWN  FE75            ; Unknown Fxxx instruction
$D56    $2DEA   CALL     $DEA            ; Call subroutine at DEA
$D58    $B0BC   JP       V0, $0BC        ; Jump to V0 + 0BC
$D5A    $514F   UNKNOWN  $514F           ; Unknown 5xxx instruction
$D5C    $0F23   SYS      $F23            ; System call to F23
$D5E    $C1B9   RND      V1, #B9         ; V1 = random & B9
$D60    $C8A6   RND      V8, #A6         ; V8 = random & A6
$D62    $5BF7   UNKNOWN  $5BF7           ; Unknown 5xxx instruction
$D64    $7011   ADD      V0, #11         ; Add 17 to V0
$D66    $2F67   CALL     $F67            ; Call subroutine at F67
$D68    $5FAB   UNKNOWN  $5FAB           ; Unknown 5xxx instruction
$D6A    $80E7   SUBN     V0, VE          ; V0 = VE - V0, VF = !borrow
$D6C    $EF0C   UNKNOWN  $EF0C           ; Unknown Exxx instruction
$D6E    $70C3   ADD      V0, #C3         ; Add 195 to V0
$D70    $0AA6   SYS      $AA6            ; System call to AA6
$D72    $FD5D   UNKNOWN  FD5D            ; Unknown Fxxx instruction
$D74    $642E   LD       V4, #2E         ; Load 46 into V4
$D76    $781A   ADD      V8, #1A         ; Add 26 to V8
$D78    $932A   UNKNOWN  $932A           ; Unknown 9xxx instruction
$D7A    $FD24   UNKNOWN  FD24            ; Unknown Fxxx instruction
$D7C    $A88D   LD       I, $88D         ; Load 88D into I
$D7E    $CFBF   RND      VF, #BF         ; VF = random & BF
$D80    $92FF   UNKNOWN  $92FF           ; Unknown 9xxx instruction
$D82    $3ADD   SE       VA, #DD         ; Skip if VA == 221
$D84    $1B18   JP       $B18            ; Jump to B18
$D86    $AB0C   LD       I, $B0C         ; Load B0C into I
$D88    $4C97   SNE      VC, #97         ; Skip if VC != 151
$D8A    $0385   SYS      $385            ; System call to 385
$D8C    $F930   UNKNOWN  F930            ; Unknown Fxxx instruction
$D8E    $74B8   ADD      V4, #B8         ; Add 184 to V4
$D90    $07DF   SYS      $7DF            ; System call to 7DF
$D92    $D793   DRW      V7, V9, #3      ; Draw 3-byte sprite at V7, V9
$D94    $9A51   UNKNOWN  $9A51           ; Unknown 9xxx instruction
$D96    $6970   LD       V9, #70         ; Load 112 into V9
$D98    $626E   LD       V2, #6E         ; Load 110 into V2
$D9A    $228C   CALL     $28C            ; Call subroutine at 28C
$D9C    $3775   SE       V7, #75         ; Skip if V7 == 117
$D9E    $17F2   JP       $7F2            ; Jump to 7F2
$DA0    $8403   XOR      V4, V0          ; V4 ^= V0
$DA2    $8731   OR       V7, V3          ; V7 |= V3
$DA4    $DA6D   DRW      VA, V6, #D      ; Draw 13-byte sprite at VA, V6
$DA6    $E2C0   UNKNOWN  $E2C0           ; Unknown Exxx instruction
$DA8    $1834   JP       $834            ; Jump to 834
$DAA    $DF44   DRW      VF, V4, #4      ; Draw 4-byte sprite at VF, V4
$DAC    $E40F   UNKNOWN  $E40F           ; Unknown Exxx instruction
$DAE    $83C8   UNKNOWN  83C8            ; Unknown 8xxx instruction
$DB0    $4A8B   SNE      VA, #8B         ; Skip if VA != 139
$DB2    $C7C0   RND      V7, #C0         ; V7 = random & C0
$DB4    $7D8A   ADD      VD, #8A         ; Add 138 to VD
$DB6    $335B   SE       V3, #5B         ; Skip if V3 == 91
$DB8    $8C3A   UNKNOWN  8C3A            ; Unknown 8xxx instruction
$DBA    $B4FD   JP       V0, $4FD        ; Jump to V0 + 4FD
$DBC    $0493   SYS      $493            ; System call to 493
$DBE    $78FB   ADD      V8, #FB         ; Add 251 to V8
$DC0    $6BF5   LD       VB, #F5         ; Load 245 into VB
$DC2    $E4E6   UNKNOWN  $E4E6           ; Unknown Exxx instruction
$DC4    $BD43   JP       V0, $D43        ; Jump to V0 + D43
$DC6    $15B5   JP       $5B5            ; Jump to 5B5
$DC8    $1319   JP       $319            ; Jump to 319
$DCA    $CF1B   RND      VF, #1B         ; VF = random & 1B
$DCC    $B94C   JP       V0, $94C        ; Jump to V0 + 94C
$DCE    $D871   DRW      V8, V7, #1      ; Draw 1-byte sprite at V8, V7
$DD0    $EDD5   UNKNOWN  $EDD5           ; Unknown Exxx instruction
$DD2    $5916   UNKNOWN  $5916           ; Unknown 5xxx instruction
$DD4    $D7F0   DRW      V7, VF, #0      ; Draw 0-byte sprite at V7, VF
$DD6    $BC4D   JP       V0, $C4D        ; Jump to V0 + C4D
$DD8    $D0F5   DRW      V0, VF, #5      ; Draw 5-byte sprite at V0, VF
$DDA    $3874   SE       V8, #74         ; Skip if V8 == 116
$DDC    $3D52   SE       VD, #52         ; Skip if VD == 82
$DDE    $9506   UNKNOWN  $9506           ; Unknown 9xxx instruction
$DE0    $4FAF   SNE      VF, #AF         ; Skip if VF != 175
$DE2    $92A2   UNKNOWN  $92A2           ; Unknown 9xxx instruction
$DE4    $63F3   LD       V3, #F3         ; Load 243 into V3
$DE6    $B898   JP       V0, $898        ; Jump to V0 + 898
$DE8    $EC1B   UNKNOWN  $EC1B           ; Unknown Exxx instruction
$DEA    $F03F   UNKNOWN  F03F            ; Unknown Fxxx instruction
$DEC    $FE14   UNKNOWN  FE14            ; Unknown Fxxx instruction
$DEE    $F13E   UNKNOWN  F13E            ; Unknown Fxxx instruction
$DF0    $24F0   CALL     $4F0            ; Call subroutine at 4F0
$DF2    $1605   JP       $605            ; Jump to 605
$DF4    $3C16   SE       VC, #16         ; Skip if VC == 22
$DF6    $33C0   SE       V3, #C0         ; Skip if V3 == 192
$DF8    $2E2F   CALL     $E2F            ; Call subroutine at E2F
$DFA    $C1BA   RND      V1, #BA         ; V1 = random & BA
$DFC    $03DD   SYS      $3DD            ; System call to 3DD
$DFE    $3BB4   SE       VB, #B4         ; Skip if VB == 180
$E00    $68BE   LD       V8, #BE         ; Load 190 into V8
$E02    $4D83   SNE      VD, #83         ; Skip if VD != 131
$E04    $434D   SNE      V3, #4D         ; Skip if V3 != 77
$E06    $999B   UNKNOWN  $999B           ; Unknown 9xxx instruction
$E08    $1635   JP       $635            ; Jump to 635
$E0A    $1A8F   JP       $A8F            ; Jump to A8F
$E0C    $CBEE   RND      VB, #EE         ; VB = random & EE
$E0E    $3723   SE       V7, #23         ; Skip if V7 == 35
$E10    $29F5   CALL     $9F5            ; Call subroutine at 9F5
$E12    $D446   DRW      V4, V4, #6      ; Draw 6-byte sprite at V4, V4
$E14    $3481   SE       V4, #81         ; Skip if V4 == 129
$E16    $5CCB   UNKNOWN  $5CCB           ; Unknown 5xxx instruction
$E18    $A772   LD       I, $772         ; Load 772 into I
$E1A    $9F70   SNE      VF, V7          ; Skip if VF != V7
$E1C    $4B15   SNE      VB, #15         ; Skip if VB != 21
$E1E    $7C05   ADD      VC, #05         ; Add 5 to VC
$E20    $0640   SYS      $640            ; System call to 640
$E22    $AAF9   LD       I, $AF9         ; Load AF9 into I
$E24    $9C71   UNKNOWN  $9C71           ; Unknown 9xxx instruction
$E26    $DE49   DRW      VE, V4, #9      ; Draw 9-byte sprite at VE, V4
$E28    $9E6B   UNKNOWN  $9E6B           ; Unknown 9xxx instruction
$E2A    $2C88   CALL     $C88            ; Call subroutine at C88
$E2C    $8BBD   UNKNOWN  8BBD            ; Unknown 8xxx instruction
$E2E    $241F   CALL     $41F            ; Call subroutine at 41F
$E30    $CD74   RND      VD, #74         ; VD = random & 74
$E32    $3016   SE       V0, #16         ; Skip if V0 == 22
$E34    $23F2   CALL     $3F2            ; Call subroutine at 3F2
$E36    $8EC5   SUB      VE, VC          ; VE -= VC, VF = !borrow
$E38    $4B81   SNE      VB, #81         ; Skip if VB != 129
$E3A    $0AF6   SYS      $AF6            ; System call to AF6
$E3C    $F681   UNKNOWN  F681            ; Unknown Fxxx instruction
$E3E    $CFAB   RND      VF, #AB         ; VF = random & AB
$E40    $73D0   ADD      V3, #D0         ; Add 208 to V3
$E42    $1666   JP       $666            ; Jump to 666
$E44    $B7D4   JP       V0, $7D4        ; Jump to V0 + 7D4
$E46    $718D   ADD      V1, #8D         ; Add 141 to V1
$E48    $4928   SNE      V9, #28         ; Skip if V9 != 40
$E4A    $97E3   UNKNOWN  $97E3           ; Unknown 9xxx instruction
$E4C    $133B   JP       $33B            ; Jump to 33B
$E4E    $F0CF   UNKNOWN  F0CF            ; Unknown Fxxx instruction
$E50    $5015   UNKNOWN  $5015           ; Unknown 5xxx instruction
$E52    $C966   RND      V9, #66         ; V9 = random & 66
$E54    $247E   CALL     $47E            ; Call subroutine at 47E
$E56    $DDD3   DRW      VD, VD, #3      ; Draw 3-byte sprite at VD, VD
$E58    $6BDC   LD       VB, #DC         ; Load 220 into VB
$E5A    $0585   SYS      $585            ; System call to 585
$E5C    $6FD3   LD       VF, #D3         ; Load 211 into VF
$E5E    $53B0   SE       V3, VB          ; Skip if V3 == VB
$E60    $233C   CALL     $33C            ; Call subroutine at 33C
$E62    $9AB8   UNKNOWN  $9AB8           ; Unknown 9xxx instruction
$E64    $9945   UNKNOWN  $9945           ; Unknown 9xxx instruction
$E66    $9D77   UNKNOWN  $9D77           ; Unknown 9xxx instruction
$E68    $9E0B   UNKNOWN  $9E0B           ; Unknown 9xxx instruction
$E6A    $08A8   SYS      $8A8            ; System call to 8A8
$E6C    $384A   SE       V8, #4A         ; Skip if V8 == 74
$E6E    $F680   UNKNOWN  F680            ; Unknown Fxxx instruction
$E70    $2858   CALL     $858            ; Call subroutine at 858
$E72    $980E   UNKNOWN  $980E           ; Unknown 9xxx instruction
$E74    $7C92   ADD      VC, #92         ; Add 146 to VC
$E76    $35E4   SE       V5, #E4         ; Skip if V5 == 228
$E78    $6977   LD       V9, #77         ; Load 119 into V9
$E7A    $1EB0   JP       $EB0            ; Jump to EB0
$E7C    $DE87   DRW      VE, V8, #7      ; Draw 7-byte sprite at VE, V8
$E7E    $F695   UNKNOWN  F695            ; Unknown Fxxx instruction
$E80    $8A01   OR       VA, V0          ; VA |= V0
$E82    $24D5   CALL     $4D5            ; Call subroutine at 4D5
$E84    $89C6   SHR      V9              ; V9 >>= 1, VF = LSB
$E86    $F3A6   UNKNOWN  F3A6            ; Unknown Fxxx instruction
$E88    $7BB6   ADD      VB, #B6         ; Add 182 to VB
$E8A    $A0C6   LD       I, $0C6         ; Load 0C6 into I
$E8C    $E655   UNKNOWN  $E655           ; Unknown Exxx instruction
$E8E    $535D   UNKNOWN  $535D           ; Unknown 5xxx instruction
$E90    $906A   UNKNOWN  $906A           ; Unknown 9xxx instruction
$E92    $E2BB   UNKNOWN  $E2BB           ; Unknown Exxx instruction
$E94    $1288   JP       $288            ; Jump to 288
$E96    $3C23   SE       VC, #23         ; Skip if VC == 35
$E98    $8F73   XOR      VF, V7          ; VF ^= V7
$E9A    $76D5   ADD      V6, #D5         ; Add 213 to V6
$E9C    $AE50   LD       I, $E50         ; Load E50 into I
$E9E    $A50F   LD       I, $50F         ; Load 50F into I
$EA0    $9A2A   UNKNOWN  $9A2A           ; Unknown 9xxx instruction
$EA2    $E689   UNKNOWN  $E689           ; Unknown Exxx instruction
$EA4    $0627   SYS      $627            ; System call to 627
$EA6    $F154   UNKNOWN  F154            ; Unknown Fxxx instruction
$EA8    $1F77   JP       $F77            ; Jump to F77
$EAA    $4E33   SNE      VE, #33         ; Skip if VE != 51
$EAC    $D419   DRW      V4, V1, #9      ; Draw 9-byte sprite at V4, V1
$EAE    $F9B8   UNKNOWN  F9B8            ; Unknown Fxxx instruction
$EB0    $C6F5   RND      V6, #F5         ; V6 = random & F5
$EB2    $0544   SYS      $544            ; System call to 544
$EB4    $12F4   JP       $2F4            ; Jump to 2F4
$EB6    $8F91   OR       VF, V9          ; VF |= V9
$EB8    $3F9C   SE       VF, #9C         ; Skip if VF == 156
$EBA    $901D   UNKNOWN  $901D           ; Unknown 9xxx instruction
$EBC    $5AD4   UNKNOWN  $5AD4           ; Unknown 5xxx instruction
$EBE    $6769   LD       V7, #69         ; Load 105 into V7
$EC0    $4636   SNE      V6, #36         ; Skip if V6 != 54
$EC2    $C8FF   RND      V8, #FF         ; V8 = random & FF
$EC4    $29CB   CALL     $9CB            ; Call subroutine at 9CB
$EC6    $F4B2   UNKNOWN  F4B2            ; Unknown Fxxx instruction
$EC8    $5DEE   UNKNOWN  $5DEE           ; Unknown 5xxx instruction
$ECA    $C769   RND      V7, #69         ; V7 = random & 69
$ECC    $43DF   SNE      V3, #DF         ; Skip if V3 != 223
$ECE    $6062   LD       V0, #62         ; Load 98 into V0
$ED0    $84F0   LD       V4, VF          ; V4 = VF
$ED2    $695A   LD       V9, #5A         ; Load 90 into V9
$ED4    $ADF1   LD       I, $DF1         ; Load DF1 into I
$ED6    $B97F   JP       V0, $97F        ; Jump to V0 + 97F
$ED8    $0D8A   SYS      $D8A            ; System call to D8A
$EDA    $03A2   SYS      $3A2            ; System call to 3A2
$EDC    $71D0   ADD      V1, #D0         ; Add 208 to V1
$EDE    $EFCF   UNKNOWN  $EFCF           ; Unknown Exxx instruction
$EE0    $C8C6   RND      V8, #C6         ; V8 = random & C6
$EE2    $AD18   LD       I, $D18         ; Load D18 into I
$EE4    $F9C1   UNKNOWN  F9C1            ; Unknown Fxxx instruction
$EE6    $28BB   CALL     $8BB            ; Call subroutine at 8BB
$EE8    $3D6C   SE       VD, #6C         ; Skip if VD == 108
$EEA    $81DF   UNKNOWN  81DF            ; Unknown 8xxx instruction
$EEC    $8364   ADD      V3, V6          ; V3 += V6, VF = carry
$EEE    $2887   CALL     $887            ; Call subroutine at 887
$EF0    $AC47   LD       I, $C47         ; Load C47 into I
$EF2    $DD0A   DRW      VD, V0, #A      ; Draw 10-byte sprite at VD, V0
$EF4    $1E0B   JP       $E0B            ; Jump to E0B
$EF6    $A38B   LD       I, $38B         ; Load 38B into I
$EF8    $DE92   DRW      VE, V9, #2      ; Draw 2-byte sprite at VE, V9
$EFA    $9A7C   UNKNOWN  $9A7C           ; Unknown 9xxx instruction
$EFC    $F45A   UNKNOWN  F45A            ; Unknown Fxxx instruction
$EFE    $BE6D   JP       V0, $E6D        ; Jump to V0 + E6D
$F00    $D128   DRW      V1, V2, #8      ; Draw 8-byte sprite at V1, V2
$F02    $53B7   UNKNOWN  $53B7           ; Unknown 5xxx instruction
$F04    $82F4   ADD      V2, VF          ; V2 += VF, VF = carry
$F06    $FD24   UNKNOWN  FD24            ; Unknown Fxxx instruction
$F08    $424E   SNE      V2, #4E         ; Skip if V2 != 78
$F0A    $2F85   CALL     $F85            ; Call subroutine at F85
$F0C    $2338   CALL     $338            ; Call subroutine at 338
$F0E    $3D1A   SE       VD, #1A         ; Skip if VD == 26
$F10    $2094   CALL     $094            ; Call subroutine at 094
$F12    $3DBD   SE       VD, #BD         ; Skip if VD == 189
$F14    $FE33   LD       B, VE           ; Store BCD of VE at I, I+1, I+2
$F16    $F007   LD       V0, DT          ; V0 = delay timer
$F18    $D844   DRW      V8, V4, #4      ; Draw 4-byte sprite at V8, V4
$F1A    $0F70   SYS      $F70            ; System call to F70
$F1C    $58FB   UNKNOWN  $58FB           ; Unknown 5xxx instruction
$F1E    $B153   JP       V0, $153        ; Jump to V0 + 153
$F20    $7CCC   ADD      VC, #CC         ; Add 204 to VC
$F22    $3BF7   SE       VB, #F7         ; Skip if VB == 247
$F24    $C0F3   RND      V0, #F3         ; V0 = random & F3
$F26    $C7B9   RND      V7, #B9         ; V7 = random & B9
$F28    $A610   LD       I, $610         ; Load 610 into I
$F2A    $4168   SNE      V1, #68         ; Skip if V1 != 104
$F2C    $F3D1   UNKNOWN  F3D1            ; Unknown Fxxx instruction
$F2E    $06B6   SYS      $6B6            ; System call to 6B6
$F30    $1029   JP       $029            ; Jump to 029
$F32    $779C   ADD      V7, #9C         ; Add 156 to V7
$F34    $1FB8   JP       $FB8            ; Jump to FB8
$F36    $0FA2   SYS      $FA2            ; System call to FA2
$F38    $C7C3   RND      V7, #C3         ; V7 = random & C3
$F3A    $CFC1   RND      VF, #C1         ; VF = random & C1
$F3C    $CD44   RND      VD, #44         ; VD = random & 44
$F3E    $9B4F   UNKNOWN  $9B4F           ; Unknown 9xxx instruction
$F40    $1753   JP       $753            ; Jump to 753
$F42    $FE54   UNKNOWN  FE54            ; Unknown Fxxx instruction
$F44    $C416   RND      V4, #16         ; V4 = random & 16
$F46    $5145   UNKNOWN  $5145           ; Unknown 5xxx instruction
$F48    $A8BD   LD       I, $8BD         ; Load 8BD into I
$F4A    $5359   UNKNOWN  $5359           ; Unknown 5xxx instruction
$F4C    $7659   ADD      V6, #59         ; Add 89 to V6
$F4E    $AFE4   LD       I, $FE4         ; Load FE4 into I
$F50    $A499   LD       I, $499         ; Load 499 into I
$F52    $0649   SYS      $649            ; System call to 649
$F54    $CE9A   RND      VE, #9A         ; VE = random & 9A
$F56    $FB05   UNKNOWN  FB05            ; Unknown Fxxx instruction
$F58    $F474   UNKNOWN  F474            ; Unknown Fxxx instruction
$F5A    $E818   UNKNOWN  $E818           ; Unknown Exxx instruction
$F5C    $A67F   LD       I, $67F         ; Load 67F into I
$F5E    $F7DB   UNKNOWN  F7DB            ; Unknown Fxxx instruction
$F60    $934B   UNKNOWN  $934B           ; Unknown 9xxx instruction
$F62    $0296   SYS      $296            ; System call to 296
$F64    $7684   ADD      V6, #84         ; Add 132 to V6
$F66    $1E98   JP       $E98            ; Jump to E98
$F68    $931B   UNKNOWN  $931B           ; Unknown 9xxx instruction
$F6A    $7A77   ADD      VA, #77         ; Add 119 to VA
$F6C    $F71D   UNKNOWN  F71D            ; Unknown Fxxx instruction
$F6E    $1155   JP       $155            ; Jump to 155
$F70    $9FE3   UNKNOWN  $9FE3           ; Unknown 9xxx instruction
$F72    $A8DE   LD       I, $8DE         ; Load 8DE into I
$F74    $1D19   JP       $D19            ; Jump to D19
$F76    $EFA2   UNKNOWN  $EFA2           ; Unknown Exxx instruction
$F78    $71CD   ADD      V1, #CD         ; Add 205 to V1
$F7A    $C730   RND      V7, #30         ; V7 = random & 30
$F7C    $C587   RND      V5, #87         ; V5 = random & 87
$F7E    $C4E6   RND      V4, #E6         ; V4 = random & E6
$F80    $451C   SNE      V5, #1C         ; Skip if V5 != 28
$F82    $C742   RND      V7, #42         ; V7 = random & 42
$F84    $2F2C   CALL     $F2C            ; Call subroutine at F2C
$F86    $8AA0   LD       VA, VA          ; VA = VA
$F88    $CBFE   RND      VB, #FE         ; VB = random & FE
$F8A    $8F94   ADD      VF, V9          ; VF += V9, VF = carry
$F8C    $3E98   SE       VE, #98         ; Skip if VE == 152
$F8E    $FEF4   UNKNOWN  FEF4            ; Unknown Fxxx instruction
$F90    $81D5   SUB      V1, VD          ; V1 -= VD, VF = !borrow
$F92    $239F   CALL     $39F            ; Call subroutine at 39F
$F94    $9EB7   UNKNOWN  $9EB7           ; Unknown 9xxx instruction
$F96    $4AB0   SNE      VA, #B0         ; Skip if VA != 176
$F98    $6DEF   LD       VD, #EF         ; Load 239 into VD
$F9A    $7154   ADD      V1, #54         ; Add 84 to V1
$F9C    $1D5E   JP       $D5E            ; Jump to D5E
$F9E    $749E   ADD      V4, #9E         ; Add 158 to V4
$FA0    $3118   SE       V1, #18         ; Skip if V1 == 24
$FA2    $770A   ADD      V7, #0A         ; Add 10 to V7
$FA4    $09AF   SYS      $9AF            ; System call to 9AF
$FA6    $39AC   SE       V9, #AC         ; Skip if V9 == 172
$FA8    $2581   CALL     $581            ; Call subroutine at 581
$FAA    $5A0C   UNKNOWN  $5A0C           ; Unknown 5xxx instruction
$FAC    $0760   SYS      $760            ; System call to 760
$FAE    $3FED   SE       VF, #ED         ; Skip if VF == 237
$FB0    $5E9B   UNKNOWN  $5E9B           ; Unknown 5xxx instruction
$FB2    $A762   LD       I, $762         ; Load 762 into I
$FB4    $D2EC   DRW      V2, VE, #C      ; Draw 12-byte sprite at V2, VE
$FB6    $4968   SNE      V9, #68         ; Skip if V9 != 104
$FB8    $C3BE   RND      V3, #BE         ; V3 = random & BE
$FBA    $8BEE   SHL      VB              ; VB <<= 1, VF = MSB
$FBC    $AFC8   LD       I, $FC8         ; Load FC8 into I
$FBE    $3F6D   SE       VF, #6D         ; Skip if VF == 109
$FC0    $2DB9   CALL     $DB9            ; Call subroutine at DB9
$FC2    $F6A1   UNKNOWN  F6A1            ; Unknown Fxxx instruction
$FC4    $BCC6   JP       V0, $CC6        ; Jump to V0 + CC6
$FC6    $14FB   JP       $4FB            ; Jump to 4FB
$FC8    $84AF   UNKNOWN  84AF            ; Unknown 8xxx instruction
$FCA    $A510   LD       I, $510         ; Load 510 into I
$FCC    $BEBA   JP       V0, $EBA        ; Jump to V0 + EBA
$FCE    $DABC   DRW      VA, VB, #C      ; Draw 12-byte sprite at VA, VB
$FD0    $9ED7   UNKNOWN  $9ED7           ; Unknown 9xxx instruction
$FD2    $AE88   LD       I, $E88         ; Load E88 into I
$FD4    $E966   UNKNOWN  $E966           ; Unknown Exxx instruction
$FD6    $C7B6   RND      V7, #B6         ; V7 = random & B6
$FD8    $0F50   SYS      $F50            ; System call to F50
$FDA    $0B5D   SYS      $B5D            ; System call to B5D
$FDC    $1257   JP       $257            ; Jump to 257
$FDE    $7299   ADD      V2, #99         ; Add 153 to V2
$FE0    $C20B   RND      V2, #0B         ; V2 = random & 0B
$FE2    $04F2   SYS      $4F2            ; System call to 4F2
$FE4    $CB36   RND      VB, #36         ; VB = random & 36
$FE6    $7CD2   ADD      VC, #D2         ; Add 210 to VC
$FE8    $3F50   SE       VF, #50         ; Skip if VF == 80
$FEA    $3CD2   SE       VC, #D2         ; Skip if VC == 210
$FEC    $9ED5   UNKNOWN  $9ED5           ; Unknown 9xxx instruction
$FEE    $B861   JP       V0, $861        ; Jump to V0 + 861
$FF0    $B670   JP       V0, $670        ; Jump to V0 + 670
$FF2    $421A   SNE      V2, #1A         ; Skip if V2 != 26
$FF4    $D7BA   DRW      V7, VB, #A      ; Draw 10-byte sprite at V7, VB
$FF6    $A0FD   LD       I, $0FD         ; Load 0FD into I
$FF8    $C551   RND      V5, #51         ; V5 = random & 51
$FFA    $E080   UNKNOWN  $E080           ; Unknown Exxx instruction
$FFC    $4DFE   SNE      VD, #FE         ; Skip if VD != 254
$FFE    $6336   LD       V3, #36         ; Load 54 into V3

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 479 (26.7%)
  JP      : 238 (13.3%)
  LD      : 225 (12.6%)
  SE      : 120 ( 6.7%)
  CALL    : 119 ( 6.6%)
  ADD     : 119 ( 6.6%)
  SNE     : 114 ( 6.4%)
  DRW     : 113 ( 6.3%)
  SYS     : 106 ( 5.9%)
  RND     : 102 ( 5.7%)
  OR      :  13 ( 0.7%)
  AND     :  10 ( 0.6%)
  SUB     :   8 ( 0.4%)
  SHR     :   8 ( 0.4%)
  SHL     :   7 ( 0.4%)
  XOR     :   6 ( 0.3%)
  SUBN    :   4 ( 0.2%)

Memory Operations: 344 (19.2%)
Arithmetic Operations: 160 (8.9%)
