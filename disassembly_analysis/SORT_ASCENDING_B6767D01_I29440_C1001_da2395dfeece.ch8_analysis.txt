
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B6767D01_I29440_C1001_da2395dfeece.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 6767
Instance: 29440
Direction: ascending
Final Array: [0, 2, 3, 19, 22, 37, 95, 188]
Operations: R:0 W:28 C:50 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 99
Sort Array References:
  $20A: LD I, $565 ; Load 565 into I
  $20C: LD I, $3F5 ; Load 3F5 into I
  $23A: LD I, $FBA ; Load FBA into I
  $272: LD I, $E4B ; Load E4B into I
  $2A2: LD I, $10F ; Load 10F into I
  $2A8: LD I, $BFB ; Load BFB into I
  $2B4: LD I, $85C ; Load 85C into I
  $2B8: LD I, $77B ; Load 77B into I
  $2D4: LD I, $426 ; Load 426 into I
  $2F8: LD I, $57B ; Load 57B into I
  $358: LD I, $F1D ; Load F1D into I
  $376: LD I, $A33 ; Load A33 into I
  $380: LD I, $5B6 ; Load 5B6 into I
  $390: LD I, $1DF ; Load 1DF into I
  $392: LD I, $773 ; Load 773 into I
  $3B8: LD I, $AD4 ; Load AD4 into I
  $3E0: LD I, $1E4 ; Load 1E4 into I
  $40C: LD I, $789 ; Load 789 into I
  $426: LD I, $733 ; Load 733 into I
  $432: LD I, $C6C ; Load C6C into I
  $438: LD I, $094 ; Load 094 into I
  $466: LD I, $81A ; Load 81A into I
  $49C: LD I, $D1D ; Load D1D into I
  $59A: LD I, $14A ; Load 14A into I
  $5D2: LD I, $846 ; Load 846 into I
  $5EC: LD I, $3ED ; Load 3ED into I
  $64A: LD I, $0C7 ; Load 0C7 into I
  $77A: LD I, $FEB ; Load FEB into I
  $77E: LD I, $4C8 ; Load 4C8 into I
  $798: LD I, $0EC ; Load 0EC into I
  $7CE: LD I, $111 ; Load 111 into I
  $81E: LD I, $547 ; Load 547 into I
  $826: LD I, $8E6 ; Load 8E6 into I
  $844: LD I, $892 ; Load 892 into I
  $85A: LD I, $11E ; Load 11E into I
  $874: LD I, $A4C ; Load A4C into I
  $88A: LD I, $2C5 ; Load 2C5 into I
  $8B8: LD I, $D33 ; Load D33 into I
  $8D8: LD I, $066 ; Load 066 into I
  $8DE: LD I, $405 ; Load 405 into I
  $8FA: LD I, $11B ; Load 11B into I
  $932: LD I, $4B1 ; Load 4B1 into I
  $93C: LD I, $FB0 ; Load FB0 into I
  $956: LD I, $FDA ; Load FDA into I
  $95C: LD I, $55A ; Load 55A into I
  $97E: LD I, $4E7 ; Load 4E7 into I
  $984: LD I, $CB1 ; Load CB1 into I
  $994: LD I, $159 ; Load 159 into I
  $9B2: LD I, $3FE ; Load 3FE into I
  $9B6: LD I, $B02 ; Load B02 into I
  $9C2: LD I, $CE5 ; Load CE5 into I
  $9CE: LD I, $438 ; Load 438 into I
  $A00: LD I, $FAA ; Load FAA into I
  $A04: LD I, $7BD ; Load 7BD into I
  $A10: LD I, $456 ; Load 456 into I
  $A16: LD I, $DF4 ; Load DF4 into I
  $A2A: LD I, $49C ; Load 49C into I
  $A36: LD I, $0AB ; Load 0AB into I
  $A90: LD I, $FC6 ; Load FC6 into I
  $A92: LD I, $C0B ; Load C0B into I
  $A9A: LD I, $DD8 ; Load DD8 into I
  $AAA: LD I, $C76 ; Load C76 into I
  $AB4: LD I, $4C9 ; Load 4C9 into I
  $AEE: LD I, $B6A ; Load B6A into I
  $B2A: LD I, $233 ; Load 233 into I
  $B32: LD I, $89F ; Load 89F into I
  $B38: LD I, $1B9 ; Load 1B9 into I
  $B40: LD I, $250 ; Load 250 into I
  $B4A: LD I, $44F ; Load 44F into I
  $B52: LD I, $510 ; Load 510 into I
  $B5C: LD I, $815 ; Load 815 into I
  $B6A: LD I, $FD0 ; Load FD0 into I
  $B76: LD I, $566 ; Load 566 into I
  $C24: LD I, $070 ; Load 070 into I
  $C3E: LD I, $803 ; Load 803 into I
  $C4A: LD I, $9D0 ; Load 9D0 into I
  $C5A: LD I, $1D9 ; Load 1D9 into I
  $C66: LD I, $BE5 ; Load BE5 into I
  $C92: LD I, $F1D ; Load F1D into I
  $CD6: LD I, $F06 ; Load F06 into I
  $CF2: LD I, $7B4 ; Load 7B4 into I
  $D2A: LD I, $B36 ; Load B36 into I
  $D32: LD I, $A3F ; Load A3F into I
  $D42: LD I, $2EE ; Load 2EE into I
  $D6C: LD I, $91E ; Load 91E into I
  $D70: LD I, $D68 ; Load D68 into I
  $DC4: LD I, $18D ; Load 18D into I
  $DF2: LD I, $343 ; Load 343 into I
  $E1C: LD I, $56C ; Load 56C into I
  $E52: LD I, $25B ; Load 25B into I
  $E5C: LD I, $3A4 ; Load 3A4 into I
  $E78: LD I, $436 ; Load 436 into I
  $F08: LD I, $291 ; Load 291 into I
  $F4A: LD I, $3CD ; Load 3CD into I
  $F74: LD I, $45D ; Load 45D into I
  $F9A: LD I, $B71 ; Load B71 into I
  $FA2: LD I, $883 ; Load 883 into I
  $FB0: LD I, $598 ; Load 598 into I
  $FEC: LD I, $C04 ; Load C04 into I

CONTROL FLOW ANALYSIS:
Jumps: 243
Calls: 106
Branches: 242
Loops: 129
Loop Structures:
  $2DA -> $149 (backward jump)
  $32E -> $0AF (backward jump)
  $336 -> $158 (backward jump)
  $34E -> $141 (backward jump)
  $41A -> $3D0 (backward jump)
  $49A -> $27F (backward jump)
  $4B8 -> $3F4 (backward jump)
  $4C8 -> $27A (backward jump)
  $548 -> $3CF (backward jump)
  $54C -> $50B (backward jump)
  $56C -> $25E (backward jump)
  $596 -> $1FC (backward jump)
  $64C -> $586 (backward jump)
  $650 -> $577 (backward jump)
  $672 -> $5EF (backward jump)
  $67C -> $3C8 (backward jump)
  $6A0 -> $1B7 (backward jump)
  $6AA -> $65E (backward jump)
  $6BE -> $61A (backward jump)
  $6C0 -> $00B (backward jump)
  $6F2 -> $17D (backward jump)
  $724 -> $0C2 (backward jump)
  $768 -> $0CE (backward jump)
  $76C -> $1A6 (backward jump)
  $770 -> $5DB (backward jump)
  $784 -> $42C (backward jump)
  $79A -> $2C2 (backward jump)
  $79E -> $48C (backward jump)
  $7B6 -> $1DB (backward jump)
  $7C6 -> $087 (backward jump)
  $7CA -> $726 (backward jump)
  $7DC -> $172 (backward jump)
  $816 -> $737 (backward jump)
  $83C -> $3E9 (backward jump)
  $86A -> $258 (backward jump)
  $86C -> $539 (backward jump)
  $876 -> $866 (backward jump)
  $878 -> $20E (backward jump)
  $88E -> $15B (backward jump)
  $896 -> $7AA (backward jump)
  $8D2 -> $19E (backward jump)
  $8DC -> $237 (backward jump)
  $8E0 -> $47B (backward jump)
  $8E2 -> $309 (backward jump)
  $8FE -> $4CA (backward jump)
  $908 -> $66F (backward jump)
  $924 -> $513 (backward jump)
  $944 -> $49F (backward jump)
  $948 -> $286 (backward jump)
  $954 -> $328 (backward jump)
  $964 -> $1D4 (backward jump)
  $982 -> $87E (backward jump)
  $988 -> $54C (backward jump)
  $9BE -> $695 (backward jump)
  $9E0 -> $6A9 (backward jump)
  $9F0 -> $15B (backward jump)
  $A28 -> $2CF (backward jump)
  $A54 -> $002 (backward jump)
  $A5A -> $4E5 (backward jump)
  $A62 -> $2DB (backward jump)
  $A84 -> $0B7 (backward jump)
  $AAC -> $6B2 (backward jump)
  $AC0 -> $315 (backward jump)
  $AD4 -> $62E (backward jump)
  $AF6 -> $995 (backward jump)
  $B62 -> $908 (backward jump)
  $B80 -> $60F (backward jump)
  $B8A -> $7A4 (backward jump)
  $B90 -> $B66 (backward jump)
  $BA8 -> $829 (backward jump)
  $BC4 -> $5EB (backward jump)
  $C0A -> $4DD (backward jump)
  $C14 -> $98E (backward jump)
  $C26 -> $6F4 (backward jump)
  $C2C -> $4C8 (backward jump)
  $C34 -> $447 (backward jump)
  $C3C -> $82B (backward jump)
  $C52 -> $764 (backward jump)
  $C68 -> $0CE (backward jump)
  $C6E -> $13E (backward jump)
  $C82 -> $5C8 (backward jump)
  $C8A -> $7E6 (backward jump)
  $CD4 -> $180 (backward jump)
  $CE4 -> $0B8 (backward jump)
  $D0C -> $628 (backward jump)
  $D30 -> $6AF (backward jump)
  $D5C -> $20C (backward jump)
  $D82 -> $A18 (backward jump)
  $D84 -> $4C2 (backward jump)
  $D98 -> $BC9 (backward jump)
  $DB6 -> $978 (backward jump)
  $DBE -> $1AB (backward jump)
  $DC0 -> $287 (backward jump)
  $DE0 -> $231 (backward jump)
  $DFC -> $82E (backward jump)
  $E04 -> $B30 (backward jump)
  $E0C -> $DB9 (backward jump)
  $E18 -> $87D (backward jump)
  $E20 -> $4C0 (backward jump)
  $E38 -> $C6C (backward jump)
  $E40 -> $84B (backward jump)
  $E44 -> $C30 (backward jump)
  $E60 -> $540 (backward jump)
  $E6C -> $894 (backward jump)
  $EA2 -> $A96 (backward jump)
  $EA4 -> $842 (backward jump)
  $EB6 -> $77B (backward jump)
  $EBE -> $9FC (backward jump)
  $ED8 -> $905 (backward jump)
  $EE2 -> $D6D (backward jump)
  $EE4 -> $57D (backward jump)
  $EE6 -> $68F (backward jump)
  $EF0 -> $DA5 (backward jump)
  $EF2 -> $B54 (backward jump)
  $EF4 -> $64F (backward jump)
  $F10 -> $6D6 (backward jump)
  $F18 -> $B24 (backward jump)
  $F1E -> $492 (backward jump)
  $F2C -> $323 (backward jump)
  $F46 -> $87D (backward jump)
  $F58 -> $144 (backward jump)
  $F66 -> $217 (backward jump)
  $F94 -> $B3D (backward jump)
  $F9C -> $080 (backward jump)
  $FAC -> $F81 (backward jump)
  $FB4 -> $440 (backward jump)
  $FD8 -> $132 (backward jump)
  $FDE -> $B3E (backward jump)
  $FE8 -> $20D (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $C730   RND      V7, #30         ; V7 = random & 30
$202    $5EEF   UNKNOWN  $5EEF           ; Unknown 5xxx instruction
$204    $68E5   LD       V8, #E5         ; Load 229 into V8
$206    $EFA8   UNKNOWN  $EFA8           ; Unknown Exxx instruction
$208    $B5A7   JP       V0, $5A7        ; Jump to V0 + 5A7
$20A    $A565   LD       I, $565         ; Load 565 into I
$20C    $A3F5   LD       I, $3F5         ; Load 3F5 into I
$20E    $F49B   UNKNOWN  F49B            ; Unknown Fxxx instruction
$210    $856B   UNKNOWN  856B            ; Unknown 8xxx instruction
$212    $6505   LD       V5, #05         ; Load 5 into V5
$214    $5E8A   UNKNOWN  $5E8A           ; Unknown 5xxx instruction
$216    $2289   CALL     $289            ; Call subroutine at 289
$218    $6A05   LD       VA, #05         ; Load 5 into VA
$21A    $CEBD   RND      VE, #BD         ; VE = random & BD
$21C    $41EF   SNE      V1, #EF         ; Skip if V1 != 239
$21E    $D70A   DRW      V7, V0, #A      ; Draw 10-byte sprite at V7, V0
$220    $3BA7   SE       VB, #A7         ; Skip if VB == 167
$222    $905A   UNKNOWN  $905A           ; Unknown 9xxx instruction
$224    $7A36   ADD      VA, #36         ; Add 54 to VA
$226    $B2B7   JP       V0, $2B7        ; Jump to V0 + 2B7
$228    $3DDB   SE       VD, #DB         ; Skip if VD == 219
$22A    $E519   UNKNOWN  $E519           ; Unknown Exxx instruction
$22C    $889B   UNKNOWN  889B            ; Unknown 8xxx instruction
$22E    $6763   LD       V7, #63         ; Load 99 into V7
$230    $5455   UNKNOWN  $5455           ; Unknown 5xxx instruction
$232    $73E6   ADD      V3, #E6         ; Add 230 to V3
$234    $E2A0   UNKNOWN  $E2A0           ; Unknown Exxx instruction
$236    $07C4   SYS      $7C4            ; System call to 7C4
$238    $3FFB   SE       VF, #FB         ; Skip if VF == 251
$23A    $AFBA   LD       I, $FBA         ; Load FBA into I
$23C    $E002   UNKNOWN  $E002           ; Unknown Exxx instruction
$23E    $6D4A   LD       VD, #4A         ; Load 74 into VD
$240    $600B   LD       V0, #0B         ; Load 11 into V0
$242    $D4CD   DRW      V4, VC, #D      ; Draw 13-byte sprite at V4, VC
$244    $49E2   SNE      V9, #E2         ; Skip if V9 != 226
$246    $5E0F   UNKNOWN  $5E0F           ; Unknown 5xxx instruction
$248    $2785   CALL     $785            ; Call subroutine at 785
$24A    $E314   UNKNOWN  $E314           ; Unknown Exxx instruction
$24C    $3D82   SE       VD, #82         ; Skip if VD == 130
$24E    $D968   DRW      V9, V6, #8      ; Draw 8-byte sprite at V9, V6
$250    $E934   UNKNOWN  $E934           ; Unknown Exxx instruction
$252    $9542   UNKNOWN  $9542           ; Unknown 9xxx instruction
$254    $412A   SNE      V1, #2A         ; Skip if V1 != 42
$256    $766D   ADD      V6, #6D         ; Add 109 to V6
$258    $1E07   JP       $E07            ; Jump to E07
$25A    $B7EB   JP       V0, $7EB        ; Jump to V0 + 7EB
$25C    $6986   LD       V9, #86         ; Load 134 into V9
$25E    $97C8   UNKNOWN  $97C8           ; Unknown 9xxx instruction
$260    $76F6   ADD      V6, #F6         ; Add 246 to V6
$262    $2706   CALL     $706            ; Call subroutine at 706
$264    $7BED   ADD      VB, #ED         ; Add 237 to VB
$266    $7C92   ADD      VC, #92         ; Add 146 to VC
$268    $914A   UNKNOWN  $914A           ; Unknown 9xxx instruction
$26A    $74C2   ADD      V4, #C2         ; Add 194 to V4
$26C    $66C1   LD       V6, #C1         ; Load 193 into V6
$26E    $406E   SNE      V0, #6E         ; Skip if V0 != 110
$270    $490C   SNE      V9, #0C         ; Skip if V9 != 12
$272    $AE4B   LD       I, $E4B         ; Load E4B into I
$274    $4BEA   SNE      VB, #EA         ; Skip if VB != 234
$276    $6ADD   LD       VA, #DD         ; Load 221 into VA
$278    $CC1C   RND      VC, #1C         ; VC = random & 1C
$27A    $C9AB   RND      V9, #AB         ; V9 = random & AB
$27C    $0A10   SYS      $A10            ; System call to A10
$27E    $91FB   UNKNOWN  $91FB           ; Unknown 9xxx instruction
$280    $06AD   SYS      $6AD            ; System call to 6AD
$282    $0E36   SYS      $E36            ; System call to E36
$284    $D32F   DRW      V3, V2, #F      ; Draw 15-byte sprite at V3, V2
$286    $50E9   UNKNOWN  $50E9           ; Unknown 5xxx instruction
$288    $8708   UNKNOWN  8708            ; Unknown 8xxx instruction
$28A    $39EB   SE       V9, #EB         ; Skip if V9 == 235
$28C    $2C18   CALL     $C18            ; Call subroutine at C18
$28E    $EF53   UNKNOWN  $EF53           ; Unknown Exxx instruction
$290    $BE6A   JP       V0, $E6A        ; Jump to V0 + E6A
$292    $7715   ADD      V7, #15         ; Add 21 to V7
$294    $D512   DRW      V5, V1, #2      ; Draw 2-byte sprite at V5, V1
$296    $BE72   JP       V0, $E72        ; Jump to V0 + E72
$298    $E127   UNKNOWN  $E127           ; Unknown Exxx instruction
$29A    $DAA1   DRW      VA, VA, #1      ; Draw 1-byte sprite at VA, VA
$29C    $5021   UNKNOWN  $5021           ; Unknown 5xxx instruction
$29E    $3A2B   SE       VA, #2B         ; Skip if VA == 43
$2A0    $FB3C   UNKNOWN  FB3C            ; Unknown Fxxx instruction
$2A2    $A10F   LD       I, $10F         ; Load 10F into I
$2A4    $BE7D   JP       V0, $E7D        ; Jump to V0 + E7D
$2A6    $0AFE   SYS      $AFE            ; System call to AFE
$2A8    $ABFB   LD       I, $BFB         ; Load BFB into I
$2AA    $D1C0   DRW      V1, VC, #0      ; Draw 0-byte sprite at V1, VC
$2AC    $B430   JP       V0, $430        ; Jump to V0 + 430
$2AE    $4872   SNE      V8, #72         ; Skip if V8 != 114
$2B0    $D0AA   DRW      V0, VA, #A      ; Draw 10-byte sprite at V0, VA
$2B2    $8359   UNKNOWN  8359            ; Unknown 8xxx instruction
$2B4    $A85C   LD       I, $85C         ; Load 85C into I
$2B6    $8A83   XOR      VA, V8          ; VA ^= V8
$2B8    $A77B   LD       I, $77B         ; Load 77B into I
$2BA    $CFC3   RND      VF, #C3         ; VF = random & C3
$2BC    $34EE   SE       V4, #EE         ; Skip if V4 == 238
$2BE    $1F88   JP       $F88            ; Jump to F88
$2C0    $B6AF   JP       V0, $6AF        ; Jump to V0 + 6AF
$2C2    $5E6E   UNKNOWN  $5E6E           ; Unknown 5xxx instruction
$2C4    $84CD   UNKNOWN  84CD            ; Unknown 8xxx instruction
$2C6    $D07B   DRW      V0, V7, #B      ; Draw 11-byte sprite at V0, V7
$2C8    $521F   UNKNOWN  $521F           ; Unknown 5xxx instruction
$2CA    $C4CB   RND      V4, #CB         ; V4 = random & CB
$2CC    $8564   ADD      V5, V6          ; V5 += V6, VF = carry
$2CE    $2693   CALL     $693            ; Call subroutine at 693
$2D0    $B3CF   JP       V0, $3CF        ; Jump to V0 + 3CF
$2D2    $923F   UNKNOWN  $923F           ; Unknown 9xxx instruction
$2D4    $A426   LD       I, $426         ; Load 426 into I
$2D6    $53CA   UNKNOWN  $53CA           ; Unknown 5xxx instruction
$2D8    $00B2   SYS      $0B2            ; System call to 0B2
$2DA    $B149   JP       V0, $149        ; Jump to V0 + 149
$2DC    $0A8D   SYS      $A8D            ; System call to A8D
$2DE    $8506   SHR      V5              ; V5 >>= 1, VF = LSB
$2E0    $2C2D   CALL     $C2D            ; Call subroutine at C2D
$2E2    $FA42   UNKNOWN  FA42            ; Unknown Fxxx instruction
$2E4    $3C59   SE       VC, #59         ; Skip if VC == 89
$2E6    $B6FF   JP       V0, $6FF        ; Jump to V0 + 6FF
$2E8    $CDEF   RND      VD, #EF         ; VD = random & EF
$2EA    $CCB7   RND      VC, #B7         ; VC = random & B7
$2EC    $6EA7   LD       VE, #A7         ; Load 167 into VE
$2EE    $6AFA   LD       VA, #FA         ; Load 250 into VA
$2F0    $068C   SYS      $68C            ; System call to 68C
$2F2    $26F5   CALL     $6F5            ; Call subroutine at 6F5
$2F4    $E726   UNKNOWN  $E726           ; Unknown Exxx instruction
$2F6    $CD8B   RND      VD, #8B         ; VD = random & 8B
$2F8    $A57B   LD       I, $57B         ; Load 57B into I
$2FA    $29EE   CALL     $9EE            ; Call subroutine at 9EE
$2FC    $9B09   UNKNOWN  $9B09           ; Unknown 9xxx instruction
$2FE    $5A63   UNKNOWN  $5A63           ; Unknown 5xxx instruction
$300    $0002   SYS      $002            ; System call to 002
$302    $0313   SYS      $313            ; System call to 313
$304    $1625   JP       $625            ; Jump to 625
$306    $5FBC   UNKNOWN  $5FBC           ; Unknown 5xxx instruction
$308    $9219   UNKNOWN  $9219           ; Unknown 9xxx instruction
$30A    $83C3   XOR      V3, VC          ; V3 ^= VC
$30C    $D594   DRW      V5, V9, #4      ; Draw 4-byte sprite at V5, V9
$30E    $838F   UNKNOWN  838F            ; Unknown 8xxx instruction
$310    $DC05   DRW      VC, V0, #5      ; Draw 5-byte sprite at VC, V0
$312    $B669   JP       V0, $669        ; Jump to V0 + 669
$314    $D541   DRW      V5, V4, #1      ; Draw 1-byte sprite at V5, V4
$316    $7877   ADD      V8, #77         ; Add 119 to V8
$318    $C720   RND      V7, #20         ; V7 = random & 20
$31A    $2D40   CALL     $D40            ; Call subroutine at D40
$31C    $8132   AND      V1, V3          ; V1 &= V3
$31E    $71D4   ADD      V1, #D4         ; Add 212 to V1
$320    $D89C   DRW      V8, V9, #C      ; Draw 12-byte sprite at V8, V9
$322    $667B   LD       V6, #7B         ; Load 123 into V6
$324    $6084   LD       V0, #84         ; Load 132 into V0
$326    $BCFA   JP       V0, $CFA        ; Jump to V0 + CFA
$328    $4D9C   SNE      VD, #9C         ; Skip if VD != 156
$32A    $6C9F   LD       VC, #9F         ; Load 159 into VC
$32C    $F988   UNKNOWN  F988            ; Unknown Fxxx instruction
$32E    $B0AF   JP       V0, $0AF        ; Jump to V0 + 0AF
$330    $BC01   JP       V0, $C01        ; Jump to V0 + C01
$332    $2C01   CALL     $C01            ; Call subroutine at C01
$334    $DB1A   DRW      VB, V1, #A      ; Draw 10-byte sprite at VB, V1
$336    $B158   JP       V0, $158        ; Jump to V0 + 158
$338    $E053   UNKNOWN  $E053           ; Unknown Exxx instruction
$33A    $DF9F   DRW      VF, V9, #F      ; Draw 15-byte sprite at VF, V9
$33C    $6697   LD       V6, #97         ; Load 151 into V6
$33E    $465B   SNE      V6, #5B         ; Skip if V6 != 91
$340    $031D   SYS      $31D            ; System call to 31D
$342    $B9DB   JP       V0, $9DB        ; Jump to V0 + 9DB
$344    $DB97   DRW      VB, V9, #7      ; Draw 7-byte sprite at VB, V9
$346    $0D5B   SYS      $D5B            ; System call to D5B
$348    $4C60   SNE      VC, #60         ; Skip if VC != 96
$34A    $C067   RND      V0, #67         ; V0 = random & 67
$34C    $6D7C   LD       VD, #7C         ; Load 124 into VD
$34E    $B141   JP       V0, $141        ; Jump to V0 + 141
$350    $1661   JP       $661            ; Jump to 661
$352    $7161   ADD      V1, #61         ; Add 97 to V1
$354    $2DC2   CALL     $DC2            ; Call subroutine at DC2
$356    $7CEE   ADD      VC, #EE         ; Add 238 to VC
$358    $AF1D   LD       I, $F1D         ; Load F1D into I
$35A    $D9DA   DRW      V9, VD, #A      ; Draw 10-byte sprite at V9, VD
$35C    $671B   LD       V7, #1B         ; Load 27 into V7
$35E    $CF7E   RND      VF, #7E         ; VF = random & 7E
$360    $9A61   UNKNOWN  $9A61           ; Unknown 9xxx instruction
$362    $7F7A   ADD      VF, #7A         ; Add 122 to VF
$364    $6B18   LD       VB, #18         ; Load 24 into VB
$366    $5239   UNKNOWN  $5239           ; Unknown 5xxx instruction
$368    $9CE6   UNKNOWN  $9CE6           ; Unknown 9xxx instruction
$36A    $03E6   SYS      $3E6            ; System call to 3E6
$36C    $3D38   SE       VD, #38         ; Skip if VD == 56
$36E    $871D   UNKNOWN  871D            ; Unknown 8xxx instruction
$370    $0ADB   SYS      $ADB            ; System call to ADB
$372    $B6C4   JP       V0, $6C4        ; Jump to V0 + 6C4
$374    $0A4D   SYS      $A4D            ; System call to A4D
$376    $AA33   LD       I, $A33         ; Load A33 into I
$378    $D37D   DRW      V3, V7, #D      ; Draw 13-byte sprite at V3, V7
$37A    $C189   RND      V1, #89         ; V1 = random & 89
$37C    $7F51   ADD      VF, #51         ; Add 81 to VF
$37E    $EFBF   UNKNOWN  $EFBF           ; Unknown Exxx instruction
$380    $A5B6   LD       I, $5B6         ; Load 5B6 into I
$382    $BBB6   JP       V0, $BB6        ; Jump to V0 + BB6
$384    $EC3A   UNKNOWN  $EC3A           ; Unknown Exxx instruction
$386    $4A48   SNE      VA, #48         ; Skip if VA != 72
$388    $3AB9   SE       VA, #B9         ; Skip if VA == 185
$38A    $06F9   SYS      $6F9            ; System call to 6F9
$38C    $C974   RND      V9, #74         ; V9 = random & 74
$38E    $8330   LD       V3, V3          ; V3 = V3
$390    $A1DF   LD       I, $1DF         ; Load 1DF into I
$392    $A773   LD       I, $773         ; Load 773 into I
$394    $140E   JP       $40E            ; Jump to 40E
$396    $F34E   UNKNOWN  F34E            ; Unknown Fxxx instruction
$398    $919E   UNKNOWN  $919E           ; Unknown 9xxx instruction
$39A    $822D   UNKNOWN  822D            ; Unknown 8xxx instruction
$39C    $720A   ADD      V2, #0A         ; Add 10 to V2
$39E    $0CAD   SYS      $CAD            ; System call to CAD
$3A0    $EE4D   UNKNOWN  $EE4D           ; Unknown Exxx instruction
$3A2    $E5D4   UNKNOWN  $E5D4           ; Unknown Exxx instruction
$3A4    $7470   ADD      V4, #70         ; Add 112 to V4
$3A6    $3448   SE       V4, #48         ; Skip if V4 == 72
$3A8    $C277   RND      V2, #77         ; V2 = random & 77
$3AA    $2DC7   CALL     $DC7            ; Call subroutine at DC7
$3AC    $CEE7   RND      VE, #E7         ; VE = random & E7
$3AE    $C218   RND      V2, #18         ; V2 = random & 18
$3B0    $D8E9   DRW      V8, VE, #9      ; Draw 9-byte sprite at V8, VE
$3B2    $5A3A   UNKNOWN  $5A3A           ; Unknown 5xxx instruction
$3B4    $3B71   SE       VB, #71         ; Skip if VB == 113
$3B6    $14F2   JP       $4F2            ; Jump to 4F2
$3B8    $AAD4   LD       I, $AD4         ; Load AD4 into I
$3BA    $1FC0   JP       $FC0            ; Jump to FC0
$3BC    $F28E   UNKNOWN  F28E            ; Unknown Fxxx instruction
$3BE    $066F   SYS      $66F            ; System call to 66F
$3C0    $8D28   UNKNOWN  8D28            ; Unknown 8xxx instruction
$3C2    $498D   SNE      V9, #8D         ; Skip if V9 != 141
$3C4    $0562   SYS      $562            ; System call to 562
$3C6    $47D9   SNE      V7, #D9         ; Skip if V7 != 217
$3C8    $6E36   LD       VE, #36         ; Load 54 into VE
$3CA    $7145   ADD      V1, #45         ; Add 69 to V1
$3CC    $079B   SYS      $79B            ; System call to 79B
$3CE    $8E9B   UNKNOWN  8E9B            ; Unknown 8xxx instruction
$3D0    $9F28   UNKNOWN  $9F28           ; Unknown 9xxx instruction
$3D2    $33AA   SE       V3, #AA         ; Skip if V3 == 170
$3D4    $361C   SE       V6, #1C         ; Skip if V6 == 28
$3D6    $4E3A   SNE      VE, #3A         ; Skip if VE != 58
$3D8    $0240   SYS      $240            ; System call to 240
$3DA    $7F10   ADD      VF, #10         ; Add 16 to VF
$3DC    $D4DA   DRW      V4, VD, #A      ; Draw 10-byte sprite at V4, VD
$3DE    $85DF   UNKNOWN  85DF            ; Unknown 8xxx instruction
$3E0    $A1E4   LD       I, $1E4         ; Load 1E4 into I
$3E2    $932C   UNKNOWN  $932C           ; Unknown 9xxx instruction
$3E4    $6D80   LD       VD, #80         ; Load 128 into VD
$3E6    $05AC   SYS      $5AC            ; System call to 5AC
$3E8    $CB1E   RND      VB, #1E         ; VB = random & 1E
$3EA    $4BCD   SNE      VB, #CD         ; Skip if VB != 205
$3EC    $F80D   UNKNOWN  F80D            ; Unknown Fxxx instruction
$3EE    $49C2   SNE      V9, #C2         ; Skip if V9 != 194
$3F0    $8CB3   XOR      VC, VB          ; VC ^= VB
$3F2    $3D80   SE       VD, #80         ; Skip if VD == 128
$3F4    $3178   SE       V1, #78         ; Skip if V1 == 120
$3F6    $D892   DRW      V8, V9, #2      ; Draw 2-byte sprite at V8, V9
$3F8    $1730   JP       $730            ; Jump to 730
$3FA    $DA79   DRW      VA, V7, #9      ; Draw 9-byte sprite at VA, V7
$3FC    $0C51   SYS      $C51            ; System call to C51
$3FE    $3DD0   SE       VD, #D0         ; Skip if VD == 208
$400    $C510   RND      V5, #10         ; V5 = random & 10
$402    $CFC4   RND      VF, #C4         ; VF = random & C4
$404    $6CCD   LD       VC, #CD         ; Load 205 into VC
$406    $35E6   SE       V5, #E6         ; Skip if V5 == 230
$408    $7347   ADD      V3, #47         ; Add 71 to V3
$40A    $B96A   JP       V0, $96A        ; Jump to V0 + 96A
$40C    $A789   LD       I, $789         ; Load 789 into I
$40E    $6A05   LD       VA, #05         ; Load 5 into VA
$410    $3990   SE       V9, #90         ; Skip if V9 == 144
$412    $50A9   UNKNOWN  $50A9           ; Unknown 5xxx instruction
$414    $816B   UNKNOWN  816B            ; Unknown 8xxx instruction
$416    $2AC7   CALL     $AC7            ; Call subroutine at AC7
$418    $C2AA   RND      V2, #AA         ; V2 = random & AA
$41A    $B3D0   JP       V0, $3D0        ; Jump to V0 + 3D0
$41C    $5D7C   UNKNOWN  $5D7C           ; Unknown 5xxx instruction
$41E    $0B7C   SYS      $B7C            ; System call to B7C
$420    $5E6A   UNKNOWN  $5E6A           ; Unknown 5xxx instruction
$422    $90D2   UNKNOWN  $90D2           ; Unknown 9xxx instruction
$424    $02E9   SYS      $2E9            ; System call to 2E9
$426    $A733   LD       I, $733         ; Load 733 into I
$428    $9097   UNKNOWN  $9097           ; Unknown 9xxx instruction
$42A    $067D   SYS      $67D            ; System call to 67D
$42C    $1FCF   JP       $FCF            ; Jump to FCF
$42E    $3C7C   SE       VC, #7C         ; Skip if VC == 124
$430    $1DF2   JP       $DF2            ; Jump to DF2
$432    $AC6C   LD       I, $C6C         ; Load C6C into I
$434    $24F5   CALL     $4F5            ; Call subroutine at 4F5
$436    $F2E5   UNKNOWN  F2E5            ; Unknown Fxxx instruction
$438    $A094   LD       I, $094         ; Load 094 into I
$43A    $78CE   ADD      V8, #CE         ; Add 206 to V8
$43C    $0A92   SYS      $A92            ; System call to A92
$43E    $8061   OR       V0, V6          ; V0 |= V6
$440    $C1E1   RND      V1, #E1         ; V1 = random & E1
$442    $637C   LD       V3, #7C         ; Load 124 into V3
$444    $BCD0   JP       V0, $CD0        ; Jump to V0 + CD0
$446    $1C05   JP       $C05            ; Jump to C05
$448    $C751   RND      V7, #51         ; V7 = random & 51
$44A    $027B   SYS      $27B            ; System call to 27B
$44C    $41EA   SNE      V1, #EA         ; Skip if V1 != 234
$44E    $09A7   SYS      $9A7            ; System call to 9A7
$450    $D916   DRW      V9, V1, #6      ; Draw 6-byte sprite at V9, V1
$452    $0199   SYS      $199            ; System call to 199
$454    $308D   SE       V0, #8D         ; Skip if V0 == 141
$456    $C216   RND      V2, #16         ; V2 = random & 16
$458    $5D9C   UNKNOWN  $5D9C           ; Unknown 5xxx instruction
$45A    $8102   AND      V1, V0          ; V1 &= V0
$45C    $17AF   JP       $7AF            ; Jump to 7AF
$45E    $925F   UNKNOWN  $925F           ; Unknown 9xxx instruction
$460    $9383   UNKNOWN  $9383           ; Unknown 9xxx instruction
$462    $4CD9   SNE      VC, #D9         ; Skip if VC != 217
$464    $2826   CALL     $826            ; Call subroutine at 826
$466    $A81A   LD       I, $81A         ; Load 81A into I
$468    $CA7B   RND      VA, #7B         ; VA = random & 7B
$46A    $F4E4   UNKNOWN  F4E4            ; Unknown Fxxx instruction
$46C    $846A   UNKNOWN  846A            ; Unknown 8xxx instruction
$46E    $2008   CALL     $008            ; Call subroutine at 008
$470    $58FE   UNKNOWN  $58FE           ; Unknown 5xxx instruction
$472    $4CE2   SNE      VC, #E2         ; Skip if VC != 226
$474    $3D58   SE       VD, #58         ; Skip if VD == 88
$476    $8A3F   UNKNOWN  8A3F            ; Unknown 8xxx instruction
$478    $FC19   UNKNOWN  FC19            ; Unknown Fxxx instruction
$47A    $5D5F   UNKNOWN  $5D5F           ; Unknown 5xxx instruction
$47C    $20EB   CALL     $0EB            ; Call subroutine at 0EB
$47E    $32AA   SE       V2, #AA         ; Skip if V2 == 170
$480    $2622   CALL     $622            ; Call subroutine at 622
$482    $7C6F   ADD      VC, #6F         ; Add 111 to VC
$484    $2EF2   CALL     $EF2            ; Call subroutine at EF2
$486    $215A   CALL     $15A            ; Call subroutine at 15A
$488    $0872   SYS      $872            ; System call to 872
$48A    $94B1   UNKNOWN  $94B1           ; Unknown 9xxx instruction
$48C    $1ACF   JP       $ACF            ; Jump to ACF
$48E    $1DA5   JP       $DA5            ; Jump to DA5
$490    $8C43   XOR      VC, V4          ; VC ^= V4
$492    $5588   UNKNOWN  $5588           ; Unknown 5xxx instruction
$494    $B9AF   JP       V0, $9AF        ; Jump to V0 + 9AF
$496    $C6D0   RND      V6, #D0         ; V6 = random & D0
$498    $41E6   SNE      V1, #E6         ; Skip if V1 != 230
$49A    $127F   JP       $27F            ; Jump to 27F
$49C    $AD1D   LD       I, $D1D         ; Load D1D into I
$49E    $ED49   UNKNOWN  $ED49           ; Unknown Exxx instruction
$4A0    $0A2F   SYS      $A2F            ; System call to A2F
$4A2    $E645   UNKNOWN  $E645           ; Unknown Exxx instruction
$4A4    $487F   SNE      V8, #7F         ; Skip if V8 != 127
$4A6    $1651   JP       $651            ; Jump to 651
$4A8    $730D   ADD      V3, #0D         ; Add 13 to V3
$4AA    $1867   JP       $867            ; Jump to 867
$4AC    $F227   UNKNOWN  F227            ; Unknown Fxxx instruction
$4AE    $F6C5   UNKNOWN  F6C5            ; Unknown Fxxx instruction
$4B0    $F058   UNKNOWN  F058            ; Unknown Fxxx instruction
$4B2    $BC44   JP       V0, $C44        ; Jump to V0 + C44
$4B4    $DE7E   DRW      VE, V7, #E      ; Draw 14-byte sprite at VE, V7
$4B6    $D6B0   DRW      V6, VB, #0      ; Draw 0-byte sprite at V6, VB
$4B8    $13F4   JP       $3F4            ; Jump to 3F4
$4BA    $99F0   SNE      V9, VF          ; Skip if V9 != VF
$4BC    $43FD   SNE      V3, #FD         ; Skip if V3 != 253
$4BE    $6730   LD       V7, #30         ; Load 48 into V7
$4C0    $3D8E   SE       VD, #8E         ; Skip if VD == 142
$4C2    $95F9   UNKNOWN  $95F9           ; Unknown 9xxx instruction
$4C4    $1C11   JP       $C11            ; Jump to C11
$4C6    $3921   SE       V9, #21         ; Skip if V9 == 33
$4C8    $127A   JP       $27A            ; Jump to 27A
$4CA    $6311   LD       V3, #11         ; Load 17 into V3
$4CC    $84EF   UNKNOWN  84EF            ; Unknown 8xxx instruction
$4CE    $F008   UNKNOWN  F008            ; Unknown Fxxx instruction
$4D0    $0E2D   SYS      $E2D            ; System call to E2D
$4D2    $5096   UNKNOWN  $5096           ; Unknown 5xxx instruction
$4D4    $6D84   LD       VD, #84         ; Load 132 into VD
$4D6    $742A   ADD      V4, #2A         ; Add 42 to V4
$4D8    $7F1C   ADD      VF, #1C         ; Add 28 to VF
$4DA    $6BA1   LD       VB, #A1         ; Load 161 into VB
$4DC    $53FC   UNKNOWN  $53FC           ; Unknown 5xxx instruction
$4DE    $273B   CALL     $73B            ; Call subroutine at 73B
$4E0    $B596   JP       V0, $596        ; Jump to V0 + 596
$4E2    $87E4   ADD      V7, VE          ; V7 += VE, VF = carry
$4E4    $27A4   CALL     $7A4            ; Call subroutine at 7A4
$4E6    $6E6E   LD       VE, #6E         ; Load 110 into VE
$4E8    $DDE4   DRW      VD, VE, #4      ; Draw 4-byte sprite at VD, VE
$4EA    $B6DA   JP       V0, $6DA        ; Jump to V0 + 6DA
$4EC    $FDF6   UNKNOWN  FDF6            ; Unknown Fxxx instruction
$4EE    $8A64   ADD      VA, V6          ; VA += V6, VF = carry
$4F0    $3CCC   SE       VC, #CC         ; Skip if VC == 204
$4F2    $0DC3   SYS      $DC3            ; System call to DC3
$4F4    $0F0D   SYS      $F0D            ; System call to F0D
$4F6    $193F   JP       $93F            ; Jump to 93F
$4F8    $017A   SYS      $17A            ; System call to 17A
$4FA    $C595   RND      V5, #95         ; V5 = random & 95
$4FC    $43F5   SNE      V3, #F5         ; Skip if V3 != 245
$4FE    $F0A1   UNKNOWN  F0A1            ; Unknown Fxxx instruction
$500    $8994   ADD      V9, V9          ; V9 += V9, VF = carry
$502    $CAE4   RND      VA, #E4         ; VA = random & E4
$504    $8948   UNKNOWN  8948            ; Unknown 8xxx instruction
$506    $5BE7   UNKNOWN  $5BE7           ; Unknown 5xxx instruction
$508    $19E6   JP       $9E6            ; Jump to 9E6
$50A    $C681   RND      V6, #81         ; V6 = random & 81
$50C    $E26E   UNKNOWN  $E26E           ; Unknown Exxx instruction
$50E    $8519   UNKNOWN  8519            ; Unknown 8xxx instruction
$510    $6CF8   LD       VC, #F8         ; Load 248 into VC
$512    $D070   DRW      V0, V7, #0      ; Draw 0-byte sprite at V0, V7
$514    $9C4E   UNKNOWN  $9C4E           ; Unknown 9xxx instruction
$516    $6FF0   LD       VF, #F0         ; Load 240 into VF
$518    $04A2   SYS      $4A2            ; System call to 4A2
$51A    $20C2   CALL     $0C2            ; Call subroutine at 0C2
$51C    $F96C   UNKNOWN  F96C            ; Unknown Fxxx instruction
$51E    $553D   UNKNOWN  $553D           ; Unknown 5xxx instruction
$520    $5FB5   UNKNOWN  $5FB5           ; Unknown 5xxx instruction
$522    $C852   RND      V8, #52         ; V8 = random & 52
$524    $63AF   LD       V3, #AF         ; Load 175 into V3
$526    $1FCE   JP       $FCE            ; Jump to FCE
$528    $F1A3   UNKNOWN  F1A3            ; Unknown Fxxx instruction
$52A    $E9BC   UNKNOWN  $E9BC           ; Unknown Exxx instruction
$52C    $99A5   UNKNOWN  $99A5           ; Unknown 9xxx instruction
$52E    $F788   UNKNOWN  F788            ; Unknown Fxxx instruction
$530    $6990   LD       V9, #90         ; Load 144 into V9
$532    $9141   UNKNOWN  $9141           ; Unknown 9xxx instruction
$534    $BE99   JP       V0, $E99        ; Jump to V0 + E99
$536    $ED47   UNKNOWN  $ED47           ; Unknown Exxx instruction
$538    $043A   SYS      $43A            ; System call to 43A
$53A    $5395   UNKNOWN  $5395           ; Unknown 5xxx instruction
$53C    $3C56   SE       VC, #56         ; Skip if VC == 86
$53E    $CAA4   RND      VA, #A4         ; VA = random & A4
$540    $53AE   UNKNOWN  $53AE           ; Unknown 5xxx instruction
$542    $30F0   SE       V0, #F0         ; Skip if V0 == 240
$544    $93AD   UNKNOWN  $93AD           ; Unknown 9xxx instruction
$546    $C5B5   RND      V5, #B5         ; V5 = random & B5
$548    $13CF   JP       $3CF            ; Jump to 3CF
$54A    $4869   SNE      V8, #69         ; Skip if V8 != 105
$54C    $B50B   JP       V0, $50B        ; Jump to V0 + 50B
$54E    $6797   LD       V7, #97         ; Load 151 into V7
$550    $D35F   DRW      V3, V5, #F      ; Draw 15-byte sprite at V3, V5
$552    $BB71   JP       V0, $B71        ; Jump to V0 + B71
$554    $9FB9   UNKNOWN  $9FB9           ; Unknown 9xxx instruction
$556    $E643   UNKNOWN  $E643           ; Unknown Exxx instruction
$558    $4AE5   SNE      VA, #E5         ; Skip if VA != 229
$55A    $357C   SE       V5, #7C         ; Skip if V5 == 124
$55C    $3C00   SE       VC, #00         ; Skip if VC == 0
$55E    $7543   ADD      V5, #43         ; Add 67 to V5
$560    $4F1B   SNE      VF, #1B         ; Skip if VF != 27
$562    $940A   UNKNOWN  $940A           ; Unknown 9xxx instruction
$564    $156F   JP       $56F            ; Jump to 56F
$566    $ED9D   UNKNOWN  $ED9D           ; Unknown Exxx instruction
$568    $6C2B   LD       VC, #2B         ; Load 43 into VC
$56A    $5861   UNKNOWN  $5861           ; Unknown 5xxx instruction
$56C    $125E   JP       $25E            ; Jump to 25E
$56E    $773A   ADD      V7, #3A         ; Add 58 to V7
$570    $9652   UNKNOWN  $9652           ; Unknown 9xxx instruction
$572    $9D88   UNKNOWN  $9D88           ; Unknown 9xxx instruction
$574    $3F23   SE       VF, #23         ; Skip if VF == 35
$576    $0A05   SYS      $A05            ; System call to A05
$578    $41FF   SNE      V1, #FF         ; Skip if V1 != 255
$57A    $912B   UNKNOWN  $912B           ; Unknown 9xxx instruction
$57C    $36A3   SE       V6, #A3         ; Skip if V6 == 163
$57E    $E2CD   UNKNOWN  $E2CD           ; Unknown Exxx instruction
$580    $BBCF   JP       V0, $BCF        ; Jump to V0 + BCF
$582    $0F17   SYS      $F17            ; System call to F17
$584    $8E67   SUBN     VE, V6          ; VE = V6 - VE, VF = !borrow
$586    $8825   SUB      V8, V2          ; V8 -= V2, VF = !borrow
$588    $5D8D   UNKNOWN  $5D8D           ; Unknown 5xxx instruction
$58A    $805B   UNKNOWN  805B            ; Unknown 8xxx instruction
$58C    $490E   SNE      V9, #0E         ; Skip if V9 != 14
$58E    $3852   SE       V8, #52         ; Skip if V8 == 82
$590    $402E   SNE      V0, #2E         ; Skip if V0 != 46
$592    $6296   LD       V2, #96         ; Load 150 into V2
$594    $BB80   JP       V0, $B80        ; Jump to V0 + B80
$596    $B1FC   JP       V0, $1FC        ; Jump to V0 + 1FC
$598    $BB2F   JP       V0, $B2F        ; Jump to V0 + B2F
$59A    $A14A   LD       I, $14A         ; Load 14A into I
$59C    $B87F   JP       V0, $87F        ; Jump to V0 + 87F
$59E    $9790   SNE      V7, V9          ; Skip if V7 != V9
$5A0    $DF54   DRW      VF, V5, #4      ; Draw 4-byte sprite at VF, V5
$5A2    $20CB   CALL     $0CB            ; Call subroutine at 0CB
$5A4    $5B61   UNKNOWN  $5B61           ; Unknown 5xxx instruction
$5A6    $9D38   UNKNOWN  $9D38           ; Unknown 9xxx instruction
$5A8    $3214   SE       V2, #14         ; Skip if V2 == 20
$5AA    $1B1C   JP       $B1C            ; Jump to B1C
$5AC    $9476   UNKNOWN  $9476           ; Unknown 9xxx instruction
$5AE    $B9A3   JP       V0, $9A3        ; Jump to V0 + 9A3
$5B0    $2B2B   CALL     $B2B            ; Call subroutine at B2B
$5B2    $FB22   UNKNOWN  FB22            ; Unknown Fxxx instruction
$5B4    $30E1   SE       V0, #E1         ; Skip if V0 == 225
$5B6    $B6D5   JP       V0, $6D5        ; Jump to V0 + 6D5
$5B8    $FC1B   UNKNOWN  FC1B            ; Unknown Fxxx instruction
$5BA    $8C01   OR       VC, V0          ; VC |= V0
$5BC    $49C8   SNE      V9, #C8         ; Skip if V9 != 200
$5BE    $552B   UNKNOWN  $552B           ; Unknown 5xxx instruction
$5C0    $365C   SE       V6, #5C         ; Skip if V6 == 92
$5C2    $E359   UNKNOWN  $E359           ; Unknown Exxx instruction
$5C4    $EB9F   UNKNOWN  $EB9F           ; Unknown Exxx instruction
$5C6    $46C3   SNE      V6, #C3         ; Skip if V6 != 195
$5C8    $2EB6   CALL     $EB6            ; Call subroutine at EB6
$5CA    $CDA6   RND      VD, #A6         ; VD = random & A6
$5CC    $3C19   SE       VC, #19         ; Skip if VC == 25
$5CE    $E345   UNKNOWN  $E345           ; Unknown Exxx instruction
$5D0    $73B7   ADD      V3, #B7         ; Add 183 to V3
$5D2    $A846   LD       I, $846         ; Load 846 into I
$5D4    $E38D   UNKNOWN  $E38D           ; Unknown Exxx instruction
$5D6    $7648   ADD      V6, #48         ; Add 72 to V6
$5D8    $6E7F   LD       VE, #7F         ; Load 127 into VE
$5DA    $E21A   UNKNOWN  $E21A           ; Unknown Exxx instruction
$5DC    $538B   UNKNOWN  $538B           ; Unknown 5xxx instruction
$5DE    $311E   SE       V1, #1E         ; Skip if V1 == 30
$5E0    $400A   SNE      V0, #0A         ; Skip if V0 != 10
$5E2    $6A48   LD       VA, #48         ; Load 72 into VA
$5E4    $08B8   SYS      $8B8            ; System call to 8B8
$5E6    $D0CA   DRW      V0, VC, #A      ; Draw 10-byte sprite at V0, VC
$5E8    $CDAA   RND      VD, #AA         ; VD = random & AA
$5EA    $9446   UNKNOWN  $9446           ; Unknown 9xxx instruction
$5EC    $A3ED   LD       I, $3ED         ; Load 3ED into I
$5EE    $7248   ADD      V2, #48         ; Add 72 to V2
$5F0    $BBCA   JP       V0, $BCA        ; Jump to V0 + BCA
$5F2    $BA2F   JP       V0, $A2F        ; Jump to V0 + A2F
$5F4    $8545   SUB      V5, V4          ; V5 -= V4, VF = !borrow
$5F6    $D67B   DRW      V6, V7, #B      ; Draw 11-byte sprite at V6, V7
$5F8    $9629   UNKNOWN  $9629           ; Unknown 9xxx instruction
$5FA    $9AA3   UNKNOWN  $9AA3           ; Unknown 9xxx instruction
$5FC    $3653   SE       V6, #53         ; Skip if V6 == 83
$5FE    $9324   UNKNOWN  $9324           ; Unknown 9xxx instruction
$600    $65A8   LD       V5, #A8         ; Load 168 into V5
$602    $7733   ADD      V7, #33         ; Add 51 to V7
$604    $7DA6   ADD      VD, #A6         ; Add 166 to VD
$606    $B72F   JP       V0, $72F        ; Jump to V0 + 72F
$608    $1E73   JP       $E73            ; Jump to E73
$60A    $999A   UNKNOWN  $999A           ; Unknown 9xxx instruction
$60C    $0660   SYS      $660            ; System call to 660
$60E    $9FA4   UNKNOWN  $9FA4           ; Unknown 9xxx instruction
$610    $3050   SE       V0, #50         ; Skip if V0 == 80
$612    $F6FC   UNKNOWN  F6FC            ; Unknown Fxxx instruction
$614    $0BD1   SYS      $BD1            ; System call to BD1
$616    $5937   UNKNOWN  $5937           ; Unknown 5xxx instruction
$618    $0F04   SYS      $F04            ; System call to F04
$61A    $4537   SNE      V5, #37         ; Skip if V5 != 55
$61C    $0923   SYS      $923            ; System call to 923
$61E    $208F   CALL     $08F            ; Call subroutine at 08F
$620    $32B5   SE       V2, #B5         ; Skip if V2 == 181
$622    $BC21   JP       V0, $C21        ; Jump to V0 + C21
$624    $ECF4   UNKNOWN  $ECF4           ; Unknown Exxx instruction
$626    $6B95   LD       VB, #95         ; Load 149 into VB
$628    $6D00   LD       VD, #00         ; Load 0 into VD
$62A    $C3B4   RND      V3, #B4         ; V3 = random & B4
$62C    $076C   SYS      $76C            ; System call to 76C
$62E    $E18B   UNKNOWN  $E18B           ; Unknown Exxx instruction
$630    $0C13   SYS      $C13            ; System call to C13
$632    $D857   DRW      V8, V5, #7      ; Draw 7-byte sprite at V8, V5
$634    $0E0B   SYS      $E0B            ; System call to E0B
$636    $BF07   JP       V0, $F07        ; Jump to V0 + F07
$638    $26AF   CALL     $6AF            ; Call subroutine at 6AF
$63A    $BE85   JP       V0, $E85        ; Jump to V0 + E85
$63C    $37EC   SE       V7, #EC         ; Skip if V7 == 236
$63E    $4EC7   SNE      VE, #C7         ; Skip if VE != 199
$640    $9BFA   UNKNOWN  $9BFA           ; Unknown 9xxx instruction
$642    $F7C5   UNKNOWN  F7C5            ; Unknown Fxxx instruction
$644    $688F   LD       V8, #8F         ; Load 143 into V8
$646    $52A5   UNKNOWN  $52A5           ; Unknown 5xxx instruction
$648    $BD83   JP       V0, $D83        ; Jump to V0 + D83
$64A    $A0C7   LD       I, $0C7         ; Load 0C7 into I
$64C    $B586   JP       V0, $586        ; Jump to V0 + 586
$64E    $F938   UNKNOWN  F938            ; Unknown Fxxx instruction
$650    $1577   JP       $577            ; Jump to 577
$652    $95A7   UNKNOWN  $95A7           ; Unknown 9xxx instruction
$654    $C7F5   RND      V7, #F5         ; V7 = random & F5
$656    $1D1C   JP       $D1C            ; Jump to D1C
$658    $6D01   LD       VD, #01         ; Load 1 into VD
$65A    $CA35   RND      VA, #35         ; VA = random & 35
$65C    $2563   CALL     $563            ; Call subroutine at 563
$65E    $00DD   SYS      $0DD            ; System call to 0DD
$660    $9E8D   UNKNOWN  $9E8D           ; Unknown 9xxx instruction
$662    $71CD   ADD      V1, #CD         ; Add 205 to V1
$664    $2C03   CALL     $C03            ; Call subroutine at C03
$666    $CEA4   RND      VE, #A4         ; VE = random & A4
$668    $BB91   JP       V0, $B91        ; Jump to V0 + B91
$66A    $834A   UNKNOWN  834A            ; Unknown 8xxx instruction
$66C    $4DC6   SNE      VD, #C6         ; Skip if VD != 198
$66E    $CAD1   RND      VA, #D1         ; VA = random & D1
$670    $7C6B   ADD      VC, #6B         ; Add 107 to VC
$672    $15EF   JP       $5EF            ; Jump to 5EF
$674    $7BC8   ADD      VB, #C8         ; Add 200 to VB
$676    $FF58   UNKNOWN  FF58            ; Unknown Fxxx instruction
$678    $51E7   UNKNOWN  $51E7           ; Unknown 5xxx instruction
$67A    $68C9   LD       V8, #C9         ; Load 201 into V8
$67C    $B3C8   JP       V0, $3C8        ; Jump to V0 + 3C8
$67E    $9B8B   UNKNOWN  $9B8B           ; Unknown 9xxx instruction
$680    $E601   UNKNOWN  $E601           ; Unknown Exxx instruction
$682    $9242   UNKNOWN  $9242           ; Unknown 9xxx instruction
$684    $84D4   ADD      V4, VD          ; V4 += VD, VF = carry
$686    $7241   ADD      V2, #41         ; Add 65 to V2
$688    $2DE3   CALL     $DE3            ; Call subroutine at DE3
$68A    $0307   SYS      $307            ; System call to 307
$68C    $C469   RND      V4, #69         ; V4 = random & 69
$68E    $8FF6   SHR      VF              ; VF >>= 1, VF = LSB
$690    $6D91   LD       VD, #91         ; Load 145 into VD
$692    $1D94   JP       $D94            ; Jump to D94
$694    $BA87   JP       V0, $A87        ; Jump to V0 + A87
$696    $5EF0   SE       VE, VF          ; Skip if VE == VF
$698    $540B   UNKNOWN  $540B           ; Unknown 5xxx instruction
$69A    $72FE   ADD      V2, #FE         ; Add 254 to V2
$69C    $75EB   ADD      V5, #EB         ; Add 235 to V5
$69E    $6D23   LD       VD, #23         ; Load 35 into VD
$6A0    $B1B7   JP       V0, $1B7        ; Jump to V0 + 1B7
$6A2    $2CB3   CALL     $CB3            ; Call subroutine at CB3
$6A4    $7B81   ADD      VB, #81         ; Add 129 to VB
$6A6    $71F0   ADD      V1, #F0         ; Add 240 to V1
$6A8    $6E13   LD       VE, #13         ; Load 19 into VE
$6AA    $165E   JP       $65E            ; Jump to 65E
$6AC    $0E21   SYS      $E21            ; System call to E21
$6AE    $398A   SE       V9, #8A         ; Skip if V9 == 138
$6B0    $D47B   DRW      V4, V7, #B      ; Draw 11-byte sprite at V4, V7
$6B2    $7DE2   ADD      VD, #E2         ; Add 226 to VD
$6B4    $EDC3   UNKNOWN  $EDC3           ; Unknown Exxx instruction
$6B6    $61B7   LD       V1, #B7         ; Load 183 into V1
$6B8    $F9E5   UNKNOWN  F9E5            ; Unknown Fxxx instruction
$6BA    $BB65   JP       V0, $B65        ; Jump to V0 + B65
$6BC    $632F   LD       V3, #2F         ; Load 47 into V3
$6BE    $B61A   JP       V0, $61A        ; Jump to V0 + 61A
$6C0    $100B   JP       $00B            ; Jump to 00B
$6C2    $CAC4   RND      VA, #C4         ; VA = random & C4
$6C4    $E5D7   UNKNOWN  $E5D7           ; Unknown Exxx instruction
$6C6    $5C50   SE       VC, V5          ; Skip if VC == V5
$6C8    $5644   UNKNOWN  $5644           ; Unknown 5xxx instruction
$6CA    $EFCF   UNKNOWN  $EFCF           ; Unknown Exxx instruction
$6CC    $C0DB   RND      V0, #DB         ; V0 = random & DB
$6CE    $5508   UNKNOWN  $5508           ; Unknown 5xxx instruction
$6D0    $513B   UNKNOWN  $513B           ; Unknown 5xxx instruction
$6D2    $069F   SYS      $69F            ; System call to 69F
$6D4    $DD60   DRW      VD, V6, #0      ; Draw 0-byte sprite at VD, V6
$6D6    $286C   CALL     $86C            ; Call subroutine at 86C
$6D8    $21E3   CALL     $1E3            ; Call subroutine at 1E3
$6DA    $8AC1   OR       VA, VC          ; VA |= VC
$6DC    $BD42   JP       V0, $D42        ; Jump to V0 + D42
$6DE    $545C   UNKNOWN  $545C           ; Unknown 5xxx instruction
$6E0    $D47B   DRW      V4, V7, #B      ; Draw 11-byte sprite at V4, V7
$6E2    $4505   SNE      V5, #05         ; Skip if V5 != 5
$6E4    $0F3D   SYS      $F3D            ; System call to F3D
$6E6    $879B   UNKNOWN  879B            ; Unknown 8xxx instruction
$6E8    $E2A3   UNKNOWN  $E2A3           ; Unknown Exxx instruction
$6EA    $2F1F   CALL     $F1F            ; Call subroutine at F1F
$6EC    $28D6   CALL     $8D6            ; Call subroutine at 8D6
$6EE    $FECA   UNKNOWN  FECA            ; Unknown Fxxx instruction
$6F0    $8005   SUB      V0, V0          ; V0 -= V0, VF = !borrow
$6F2    $117D   JP       $17D            ; Jump to 17D
$6F4    $EE0B   UNKNOWN  $EE0B           ; Unknown Exxx instruction
$6F6    $7247   ADD      V2, #47         ; Add 71 to V2
$6F8    $3519   SE       V5, #19         ; Skip if V5 == 25
$6FA    $1D6D   JP       $D6D            ; Jump to D6D
$6FC    $39C4   SE       V9, #C4         ; Skip if V9 == 196
$6FE    $E76B   UNKNOWN  $E76B           ; Unknown Exxx instruction
$700    $6E4E   LD       VE, #4E         ; Load 78 into VE
$702    $31B0   SE       V1, #B0         ; Skip if V1 == 176
$704    $6AE0   LD       VA, #E0         ; Load 224 into VA
$706    $39EF   SE       V9, #EF         ; Skip if V9 == 239
$708    $D0DF   DRW      V0, VD, #F      ; Draw 15-byte sprite at V0, VD
$70A    $BFC6   JP       V0, $FC6        ; Jump to V0 + FC6
$70C    $CD25   RND      VD, #25         ; VD = random & 25
$70E    $B99C   JP       V0, $99C        ; Jump to V0 + 99C
$710    $4421   SNE      V4, #21         ; Skip if V4 != 33
$712    $3727   SE       V7, #27         ; Skip if V7 == 39
$714    $6F17   LD       VF, #17         ; Load 23 into VF
$716    $8526   SHR      V5              ; V5 >>= 1, VF = LSB
$718    $3341   SE       V3, #41         ; Skip if V3 == 65
$71A    $18B1   JP       $8B1            ; Jump to 8B1
$71C    $351D   SE       V5, #1D         ; Skip if V5 == 29
$71E    $C3F2   RND      V3, #F2         ; V3 = random & F2
$720    $2AE2   CALL     $AE2            ; Call subroutine at AE2
$722    $8F14   ADD      VF, V1          ; VF += V1, VF = carry
$724    $B0C2   JP       V0, $0C2        ; Jump to V0 + 0C2
$726    $4A26   SNE      VA, #26         ; Skip if VA != 38
$728    $7363   ADD      V3, #63         ; Add 99 to V3
$72A    $422E   SNE      V2, #2E         ; Skip if V2 != 46
$72C    $359E   SE       V5, #9E         ; Skip if V5 == 158
$72E    $55D2   UNKNOWN  $55D2           ; Unknown 5xxx instruction
$730    $D29D   DRW      V2, V9, #D      ; Draw 13-byte sprite at V2, V9
$732    $8AB5   SUB      VA, VB          ; VA -= VB, VF = !borrow
$734    $F60B   UNKNOWN  F60B            ; Unknown Fxxx instruction
$736    $568C   UNKNOWN  $568C           ; Unknown 5xxx instruction
$738    $43BF   SNE      V3, #BF         ; Skip if V3 != 191
$73A    $9326   UNKNOWN  $9326           ; Unknown 9xxx instruction
$73C    $D75D   DRW      V7, V5, #D      ; Draw 13-byte sprite at V7, V5
$73E    $FD04   UNKNOWN  FD04            ; Unknown Fxxx instruction
$740    $EA4C   UNKNOWN  $EA4C           ; Unknown Exxx instruction
$742    $1900   JP       $900            ; Jump to 900
$744    $84A3   XOR      V4, VA          ; V4 ^= VA
$746    $48A1   SNE      V8, #A1         ; Skip if V8 != 161
$748    $5543   UNKNOWN  $5543           ; Unknown 5xxx instruction
$74A    $FCC0   UNKNOWN  FCC0            ; Unknown Fxxx instruction
$74C    $BD34   JP       V0, $D34        ; Jump to V0 + D34
$74E    $963B   UNKNOWN  $963B           ; Unknown 9xxx instruction
$750    $000D   SYS      $00D            ; System call to 00D
$752    $00C1   SYS      $0C1            ; System call to 0C1
$754    $3B3F   SE       VB, #3F         ; Skip if VB == 63
$756    $DF3E   DRW      VF, V3, #E      ; Draw 14-byte sprite at VF, V3
$758    $F136   UNKNOWN  F136            ; Unknown Fxxx instruction
$75A    $BC55   JP       V0, $C55        ; Jump to V0 + C55
$75C    $D126   DRW      V1, V2, #6      ; Draw 6-byte sprite at V1, V2
$75E    $C310   RND      V3, #10         ; V3 = random & 10
$760    $18FB   JP       $8FB            ; Jump to 8FB
$762    $5EDD   UNKNOWN  $5EDD           ; Unknown 5xxx instruction
$764    $5ED8   UNKNOWN  $5ED8           ; Unknown 5xxx instruction
$766    $DC64   DRW      VC, V6, #4      ; Draw 4-byte sprite at VC, V6
$768    $B0CE   JP       V0, $0CE        ; Jump to V0 + 0CE
$76A    $45A5   SNE      V5, #A5         ; Skip if V5 != 165
$76C    $B1A6   JP       V0, $1A6        ; Jump to V0 + 1A6
$76E    $44CD   SNE      V4, #CD         ; Skip if V4 != 205
$770    $15DB   JP       $5DB            ; Jump to 5DB
$772    $1A9E   JP       $A9E            ; Jump to A9E
$774    $E00D   UNKNOWN  $E00D           ; Unknown Exxx instruction
$776    $E6C5   UNKNOWN  $E6C5           ; Unknown Exxx instruction
$778    $E141   UNKNOWN  $E141           ; Unknown Exxx instruction
$77A    $AFEB   LD       I, $FEB         ; Load FEB into I
$77C    $D0D9   DRW      V0, VD, #9      ; Draw 9-byte sprite at V0, VD
$77E    $A4C8   LD       I, $4C8         ; Load 4C8 into I
$780    $972C   UNKNOWN  $972C           ; Unknown 9xxx instruction
$782    $1B0F   JP       $B0F            ; Jump to B0F
$784    $B42C   JP       V0, $42C        ; Jump to V0 + 42C
$786    $3331   SE       V3, #31         ; Skip if V3 == 49
$788    $C80A   RND      V8, #0A         ; V8 = random & 0A
$78A    $D807   DRW      V8, V0, #7      ; Draw 7-byte sprite at V8, V0
$78C    $C171   RND      V1, #71         ; V1 = random & 71
$78E    $917B   UNKNOWN  $917B           ; Unknown 9xxx instruction
$790    $3CED   SE       VC, #ED         ; Skip if VC == 237
$792    $1D05   JP       $D05            ; Jump to D05
$794    $D65E   DRW      V6, V5, #E      ; Draw 14-byte sprite at V6, V5
$796    $9096   UNKNOWN  $9096           ; Unknown 9xxx instruction
$798    $A0EC   LD       I, $0EC         ; Load 0EC into I
$79A    $B2C2   JP       V0, $2C2        ; Jump to V0 + 2C2
$79C    $4BB5   SNE      VB, #B5         ; Skip if VB != 181
$79E    $148C   JP       $48C            ; Jump to 48C
$7A0    $0F1D   SYS      $F1D            ; System call to F1D
$7A2    $6A30   LD       VA, #30         ; Load 48 into VA
$7A4    $EA5B   UNKNOWN  $EA5B           ; Unknown Exxx instruction
$7A6    $F951   UNKNOWN  F951            ; Unknown Fxxx instruction
$7A8    $3C3A   SE       VC, #3A         ; Skip if VC == 58
$7AA    $2D91   CALL     $D91            ; Call subroutine at D91
$7AC    $9939   UNKNOWN  $9939           ; Unknown 9xxx instruction
$7AE    $828E   SHL      V2              ; V2 <<= 1, VF = MSB
$7B0    $0305   SYS      $305            ; System call to 305
$7B2    $2F8F   CALL     $F8F            ; Call subroutine at F8F
$7B4    $7390   ADD      V3, #90         ; Add 144 to V3
$7B6    $B1DB   JP       V0, $1DB        ; Jump to V0 + 1DB
$7B8    $E2EF   UNKNOWN  $E2EF           ; Unknown Exxx instruction
$7BA    $E791   UNKNOWN  $E791           ; Unknown Exxx instruction
$7BC    $7557   ADD      V5, #57         ; Add 87 to V5
$7BE    $CAD4   RND      VA, #D4         ; VA = random & D4
$7C0    $38DE   SE       V8, #DE         ; Skip if V8 == 222
$7C2    $7100   ADD      V1, #00         ; Add 0 to V1
$7C4    $CC21   RND      VC, #21         ; VC = random & 21
$7C6    $B087   JP       V0, $087        ; Jump to V0 + 087
$7C8    $24DE   CALL     $4DE            ; Call subroutine at 4DE
$7CA    $1726   JP       $726            ; Jump to 726
$7CC    $0506   SYS      $506            ; System call to 506
$7CE    $A111   LD       I, $111         ; Load 111 into I
$7D0    $2EF1   CALL     $EF1            ; Call subroutine at EF1
$7D2    $654E   LD       V5, #4E         ; Load 78 into V5
$7D4    $3725   SE       V7, #25         ; Skip if V7 == 37
$7D6    $F497   UNKNOWN  F497            ; Unknown Fxxx instruction
$7D8    $5BF7   UNKNOWN  $5BF7           ; Unknown 5xxx instruction
$7DA    $6262   LD       V2, #62         ; Load 98 into V2
$7DC    $B172   JP       V0, $172        ; Jump to V0 + 172
$7DE    $DC60   DRW      VC, V6, #0      ; Draw 0-byte sprite at VC, V6
$7E0    $FFB9   UNKNOWN  FFB9            ; Unknown Fxxx instruction
$7E2    $1939   JP       $939            ; Jump to 939
$7E4    $4AF6   SNE      VA, #F6         ; Skip if VA != 246
$7E6    $D5AB   DRW      V5, VA, #B      ; Draw 11-byte sprite at V5, VA
$7E8    $9271   UNKNOWN  $9271           ; Unknown 9xxx instruction
$7EA    $2D6A   CALL     $D6A            ; Call subroutine at D6A
$7EC    $7E39   ADD      VE, #39         ; Add 57 to VE
$7EE    $4904   SNE      V9, #04         ; Skip if V9 != 4
$7F0    $EC62   UNKNOWN  $EC62           ; Unknown Exxx instruction
$7F2    $349C   SE       V4, #9C         ; Skip if V4 == 156
$7F4    $89C4   ADD      V9, VC          ; V9 += VC, VF = carry
$7F6    $75BB   ADD      V5, #BB         ; Add 187 to V5
$7F8    $49E0   SNE      V9, #E0         ; Skip if V9 != 224
$7FA    $4AB6   SNE      VA, #B6         ; Skip if VA != 182
$7FC    $78CE   ADD      V8, #CE         ; Add 206 to V8
$7FE    $1A39   JP       $A39            ; Jump to A39
$800    $632E   LD       V3, #2E         ; Load 46 into V3
$802    $380B   SE       V8, #0B         ; Skip if V8 == 11
$804    $5388   UNKNOWN  $5388           ; Unknown 5xxx instruction
$806    $7ECA   ADD      VE, #CA         ; Add 202 to VE
$808    $B94C   JP       V0, $94C        ; Jump to V0 + 94C
$80A    $DDB6   DRW      VD, VB, #6      ; Draw 6-byte sprite at VD, VB
$80C    $903F   UNKNOWN  $903F           ; Unknown 9xxx instruction
$80E    $BD34   JP       V0, $D34        ; Jump to V0 + D34
$810    $ECD7   UNKNOWN  $ECD7           ; Unknown Exxx instruction
$812    $4F8F   SNE      VF, #8F         ; Skip if VF != 143
$814    $5C59   UNKNOWN  $5C59           ; Unknown 5xxx instruction
$816    $B737   JP       V0, $737        ; Jump to V0 + 737
$818    $535B   UNKNOWN  $535B           ; Unknown 5xxx instruction
$81A    $5E14   UNKNOWN  $5E14           ; Unknown 5xxx instruction
$81C    $080C   SYS      $80C            ; System call to 80C
$81E    $A547   LD       I, $547         ; Load 547 into I
$820    $8A03   XOR      VA, V0          ; VA ^= V0
$822    $4DFB   SNE      VD, #FB         ; Skip if VD != 251
$824    $D16C   DRW      V1, V6, #C      ; Draw 12-byte sprite at V1, V6
$826    $A8E6   LD       I, $8E6         ; Load 8E6 into I
$828    $BC8C   JP       V0, $C8C        ; Jump to V0 + C8C
$82A    $26D4   CALL     $6D4            ; Call subroutine at 6D4
$82C    $0F09   SYS      $F09            ; System call to F09
$82E    $4026   SNE      V0, #26         ; Skip if V0 != 38
$830    $62DE   LD       V2, #DE         ; Load 222 into V2
$832    $5313   UNKNOWN  $5313           ; Unknown 5xxx instruction
$834    $CA8D   RND      VA, #8D         ; VA = random & 8D
$836    $86D4   ADD      V6, VD          ; V6 += VD, VF = carry
$838    $053E   SYS      $53E            ; System call to 53E
$83A    $892D   UNKNOWN  892D            ; Unknown 8xxx instruction
$83C    $13E9   JP       $3E9            ; Jump to 3E9
$83E    $E99A   UNKNOWN  $E99A           ; Unknown Exxx instruction
$840    $40F7   SNE      V0, #F7         ; Skip if V0 != 247
$842    $977B   UNKNOWN  $977B           ; Unknown 9xxx instruction
$844    $A892   LD       I, $892         ; Load 892 into I
$846    $2B83   CALL     $B83            ; Call subroutine at B83
$848    $BBD4   JP       V0, $BD4        ; Jump to V0 + BD4
$84A    $5B86   UNKNOWN  $5B86           ; Unknown 5xxx instruction
$84C    $6D7A   LD       VD, #7A         ; Load 122 into VD
$84E    $4D1F   SNE      VD, #1F         ; Skip if VD != 31
$850    $4EE5   SNE      VE, #E5         ; Skip if VE != 229
$852    $5EA2   UNKNOWN  $5EA2           ; Unknown 5xxx instruction
$854    $979D   UNKNOWN  $979D           ; Unknown 9xxx instruction
$856    $5437   UNKNOWN  $5437           ; Unknown 5xxx instruction
$858    $DA45   DRW      VA, V4, #5      ; Draw 5-byte sprite at VA, V4
$85A    $A11E   LD       I, $11E         ; Load 11E into I
$85C    $06E8   SYS      $6E8            ; System call to 6E8
$85E    $6776   LD       V7, #76         ; Load 118 into V7
$860    $5CA1   UNKNOWN  $5CA1           ; Unknown 5xxx instruction
$862    $9510   SNE      V5, V1          ; Skip if V5 != V1
$864    $9514   UNKNOWN  $9514           ; Unknown 9xxx instruction
$866    $C135   RND      V1, #35         ; V1 = random & 35
$868    $4456   SNE      V4, #56         ; Skip if V4 != 86
$86A    $1258   JP       $258            ; Jump to 258
$86C    $B539   JP       V0, $539        ; Jump to V0 + 539
$86E    $53FB   UNKNOWN  $53FB           ; Unknown 5xxx instruction
$870    $5244   UNKNOWN  $5244           ; Unknown 5xxx instruction
$872    $1C92   JP       $C92            ; Jump to C92
$874    $AA4C   LD       I, $A4C         ; Load A4C into I
$876    $B866   JP       V0, $866        ; Jump to V0 + 866
$878    $B20E   JP       V0, $20E        ; Jump to V0 + 20E
$87A    $23A2   CALL     $3A2            ; Call subroutine at 3A2
$87C    $6C55   LD       VC, #55         ; Load 85 into VC
$87E    $8687   SUBN     V6, V8          ; V6 = V8 - V6, VF = !borrow
$880    $D06E   DRW      V0, V6, #E      ; Draw 14-byte sprite at V0, V6
$882    $BC5F   JP       V0, $C5F        ; Jump to V0 + C5F
$884    $E5A6   UNKNOWN  $E5A6           ; Unknown Exxx instruction
$886    $D34A   DRW      V3, V4, #A      ; Draw 10-byte sprite at V3, V4
$888    $C8D6   RND      V8, #D6         ; V8 = random & D6
$88A    $A2C5   LD       I, $2C5         ; Load 2C5 into I
$88C    $8216   SHR      V2              ; V2 >>= 1, VF = LSB
$88E    $B15B   JP       V0, $15B        ; Jump to V0 + 15B
$890    $2A43   CALL     $A43            ; Call subroutine at A43
$892    $19A2   JP       $9A2            ; Jump to 9A2
$894    $9EB6   UNKNOWN  $9EB6           ; Unknown 9xxx instruction
$896    $B7AA   JP       V0, $7AA        ; Jump to V0 + 7AA
$898    $CB1F   RND      VB, #1F         ; VB = random & 1F
$89A    $9D2E   UNKNOWN  $9D2E           ; Unknown 9xxx instruction
$89C    $3BB4   SE       VB, #B4         ; Skip if VB == 180
$89E    $9245   UNKNOWN  $9245           ; Unknown 9xxx instruction
$8A0    $3EC7   SE       VE, #C7         ; Skip if VE == 199
$8A2    $31A2   SE       V1, #A2         ; Skip if V1 == 162
$8A4    $57E3   UNKNOWN  $57E3           ; Unknown 5xxx instruction
$8A6    $73C7   ADD      V3, #C7         ; Add 199 to V3
$8A8    $DBFE   DRW      VB, VF, #E      ; Draw 14-byte sprite at VB, VF
$8AA    $D397   DRW      V3, V9, #7      ; Draw 7-byte sprite at V3, V9
$8AC    $1DA6   JP       $DA6            ; Jump to DA6
$8AE    $EA10   UNKNOWN  $EA10           ; Unknown Exxx instruction
$8B0    $747B   ADD      V4, #7B         ; Add 123 to V4
$8B2    $8735   SUB      V7, V3          ; V7 -= V3, VF = !borrow
$8B4    $9619   UNKNOWN  $9619           ; Unknown 9xxx instruction
$8B6    $E808   UNKNOWN  $E808           ; Unknown Exxx instruction
$8B8    $AD33   LD       I, $D33         ; Load D33 into I
$8BA    $9B7D   UNKNOWN  $9B7D           ; Unknown 9xxx instruction
$8BC    $8562   AND      V5, V6          ; V5 &= V6
$8BE    $F1B3   UNKNOWN  F1B3            ; Unknown Fxxx instruction
$8C0    $7E01   ADD      VE, #01         ; Add 1 to VE
$8C2    $675A   LD       V7, #5A         ; Load 90 into V7
$8C4    $DC2E   DRW      VC, V2, #E      ; Draw 14-byte sprite at VC, V2
$8C6    $CE01   RND      VE, #01         ; VE = random & 01
$8C8    $ED51   UNKNOWN  $ED51           ; Unknown Exxx instruction
$8CA    $F51A   UNKNOWN  F51A            ; Unknown Fxxx instruction
$8CC    $97DE   UNKNOWN  $97DE           ; Unknown 9xxx instruction
$8CE    $4DA2   SNE      VD, #A2         ; Skip if VD != 162
$8D0    $7FCF   ADD      VF, #CF         ; Add 207 to VF
$8D2    $119E   JP       $19E            ; Jump to 19E
$8D4    $F1DB   UNKNOWN  F1DB            ; Unknown Fxxx instruction
$8D6    $F9AC   UNKNOWN  F9AC            ; Unknown Fxxx instruction
$8D8    $A066   LD       I, $066         ; Load 066 into I
$8DA    $60B5   LD       V0, #B5         ; Load 181 into V0
$8DC    $B237   JP       V0, $237        ; Jump to V0 + 237
$8DE    $A405   LD       I, $405         ; Load 405 into I
$8E0    $B47B   JP       V0, $47B        ; Jump to V0 + 47B
$8E2    $B309   JP       V0, $309        ; Jump to V0 + 309
$8E4    $6015   LD       V0, #15         ; Load 21 into V0
$8E6    $426C   SNE      V2, #6C         ; Skip if V2 != 108
$8E8    $0D51   SYS      $D51            ; System call to D51
$8EA    $97C6   UNKNOWN  $97C6           ; Unknown 9xxx instruction
$8EC    $E5F0   UNKNOWN  $E5F0           ; Unknown Exxx instruction
$8EE    $9FFF   UNKNOWN  $9FFF           ; Unknown 9xxx instruction
$8F0    $3BC9   SE       VB, #C9         ; Skip if VB == 201
$8F2    $24BB   CALL     $4BB            ; Call subroutine at 4BB
$8F4    $F3D4   UNKNOWN  F3D4            ; Unknown Fxxx instruction
$8F6    $E889   UNKNOWN  $E889           ; Unknown Exxx instruction
$8F8    $0216   SYS      $216            ; System call to 216
$8FA    $A11B   LD       I, $11B         ; Load 11B into I
$8FC    $66B3   LD       V6, #B3         ; Load 179 into V6
$8FE    $B4CA   JP       V0, $4CA        ; Jump to V0 + 4CA
$900    $32F0   SE       V2, #F0         ; Skip if V2 == 240
$902    $C8BD   RND      V8, #BD         ; V8 = random & BD
$904    $2A96   CALL     $A96            ; Call subroutine at A96
$906    $0F56   SYS      $F56            ; System call to F56
$908    $B66F   JP       V0, $66F        ; Jump to V0 + 66F
$90A    $F7CA   UNKNOWN  F7CA            ; Unknown Fxxx instruction
$90C    $BDCF   JP       V0, $DCF        ; Jump to V0 + DCF
$90E    $F270   UNKNOWN  F270            ; Unknown Fxxx instruction
$910    $4E93   SNE      VE, #93         ; Skip if VE != 147
$912    $9D07   UNKNOWN  $9D07           ; Unknown 9xxx instruction
$914    $6E3C   LD       VE, #3C         ; Load 60 into VE
$916    $D225   DRW      V2, V2, #5      ; Draw 5-byte sprite at V2, V2
$918    $76C0   ADD      V6, #C0         ; Add 192 to V6
$91A    $8AA2   AND      VA, VA          ; VA &= VA
$91C    $8975   SUB      V9, V7          ; V9 -= V7, VF = !borrow
$91E    $2F87   CALL     $F87            ; Call subroutine at F87
$920    $5F05   UNKNOWN  $5F05           ; Unknown 5xxx instruction
$922    $6505   LD       V5, #05         ; Load 5 into V5
$924    $B513   JP       V0, $513        ; Jump to V0 + 513
$926    $6DB4   LD       VD, #B4         ; Load 180 into VD
$928    $7790   ADD      V7, #90         ; Add 144 to V7
$92A    $01D9   SYS      $1D9            ; System call to 1D9
$92C    $C5F5   RND      V5, #F5         ; V5 = random & F5
$92E    $89C2   AND      V9, VC          ; V9 &= VC
$930    $1FAD   JP       $FAD            ; Jump to FAD
$932    $A4B1   LD       I, $4B1         ; Load 4B1 into I
$934    $9E1A   UNKNOWN  $9E1A           ; Unknown 9xxx instruction
$936    $1AF5   JP       $AF5            ; Jump to AF5
$938    $6886   LD       V8, #86         ; Load 134 into V8
$93A    $BF2F   JP       V0, $F2F        ; Jump to V0 + F2F
$93C    $AFB0   LD       I, $FB0         ; Load FB0 into I
$93E    $09F5   SYS      $9F5            ; System call to 9F5
$940    $CE3A   RND      VE, #3A         ; VE = random & 3A
$942    $74DA   ADD      V4, #DA         ; Add 218 to V4
$944    $149F   JP       $49F            ; Jump to 49F
$946    $F4F3   UNKNOWN  F4F3            ; Unknown Fxxx instruction
$948    $1286   JP       $286            ; Jump to 286
$94A    $83C4   ADD      V3, VC          ; V3 += VC, VF = carry
$94C    $85B9   UNKNOWN  85B9            ; Unknown 8xxx instruction
$94E    $45D1   SNE      V5, #D1         ; Skip if V5 != 209
$950    $D09C   DRW      V0, V9, #C      ; Draw 12-byte sprite at V0, V9
$952    $8732   AND      V7, V3          ; V7 &= V3
$954    $B328   JP       V0, $328        ; Jump to V0 + 328
$956    $AFDA   LD       I, $FDA         ; Load FDA into I
$958    $FA25   UNKNOWN  FA25            ; Unknown Fxxx instruction
$95A    $DFE2   DRW      VF, VE, #2      ; Draw 2-byte sprite at VF, VE
$95C    $A55A   LD       I, $55A         ; Load 55A into I
$95E    $7C3C   ADD      VC, #3C         ; Add 60 to VC
$960    $0FF4   SYS      $FF4            ; System call to FF4
$962    $9C9D   UNKNOWN  $9C9D           ; Unknown 9xxx instruction
$964    $11D4   JP       $1D4            ; Jump to 1D4
$966    $9F53   UNKNOWN  $9F53           ; Unknown 9xxx instruction
$968    $7934   ADD      V9, #34         ; Add 52 to V9
$96A    $5300   SE       V3, V0          ; Skip if V3 == V0
$96C    $68FD   LD       V8, #FD         ; Load 253 into V8
$96E    $6A18   LD       VA, #18         ; Load 24 into VA
$970    $8B78   UNKNOWN  8B78            ; Unknown 8xxx instruction
$972    $EF0D   UNKNOWN  $EF0D           ; Unknown Exxx instruction
$974    $766C   ADD      V6, #6C         ; Add 108 to V6
$976    $3EC6   SE       VE, #C6         ; Skip if VE == 198
$978    $8C22   AND      VC, V2          ; VC &= V2
$97A    $DE58   DRW      VE, V5, #8      ; Draw 8-byte sprite at VE, V5
$97C    $EA1C   UNKNOWN  $EA1C           ; Unknown Exxx instruction
$97E    $A4E7   LD       I, $4E7         ; Load 4E7 into I
$980    $EF62   UNKNOWN  $EF62           ; Unknown Exxx instruction
$982    $187E   JP       $87E            ; Jump to 87E
$984    $ACB1   LD       I, $CB1         ; Load CB1 into I
$986    $4F0D   SNE      VF, #0D         ; Skip if VF != 13
$988    $154C   JP       $54C            ; Jump to 54C
$98A    $0EC5   SYS      $EC5            ; System call to EC5
$98C    $F94B   UNKNOWN  F94B            ; Unknown Fxxx instruction
$98E    $FF14   UNKNOWN  FF14            ; Unknown Fxxx instruction
$990    $BF27   JP       V0, $F27        ; Jump to V0 + F27
$992    $BE4F   JP       V0, $E4F        ; Jump to V0 + E4F
$994    $A159   LD       I, $159         ; Load 159 into I
$996    $D324   DRW      V3, V2, #4      ; Draw 4-byte sprite at V3, V2
$998    $6349   LD       V3, #49         ; Load 73 into V3
$99A    $FD8C   UNKNOWN  FD8C            ; Unknown Fxxx instruction
$99C    $8F50   LD       VF, V5          ; VF = V5
$99E    $9945   UNKNOWN  $9945           ; Unknown 9xxx instruction
$9A0    $F6B1   UNKNOWN  F6B1            ; Unknown Fxxx instruction
$9A2    $E5FF   UNKNOWN  $E5FF           ; Unknown Exxx instruction
$9A4    $8AE0   LD       VA, VE          ; VA = VE
$9A6    $3A42   SE       VA, #42         ; Skip if VA == 66
$9A8    $297D   CALL     $97D            ; Call subroutine at 97D
$9AA    $EC79   UNKNOWN  $EC79           ; Unknown Exxx instruction
$9AC    $0C15   SYS      $C15            ; System call to C15
$9AE    $28CB   CALL     $8CB            ; Call subroutine at 8CB
$9B0    $9493   UNKNOWN  $9493           ; Unknown 9xxx instruction
$9B2    $A3FE   LD       I, $3FE         ; Load 3FE into I
$9B4    $8225   SUB      V2, V2          ; V2 -= V2, VF = !borrow
$9B6    $AB02   LD       I, $B02         ; Load B02 into I
$9B8    $C42A   RND      V4, #2A         ; V4 = random & 2A
$9BA    $29DD   CALL     $9DD            ; Call subroutine at 9DD
$9BC    $EAC1   UNKNOWN  $EAC1           ; Unknown Exxx instruction
$9BE    $1695   JP       $695            ; Jump to 695
$9C0    $4F7C   SNE      VF, #7C         ; Skip if VF != 124
$9C2    $ACE5   LD       I, $CE5         ; Load CE5 into I
$9C4    $E45B   UNKNOWN  $E45B           ; Unknown Exxx instruction
$9C6    $7F32   ADD      VF, #32         ; Add 50 to VF
$9C8    $91C0   SNE      V1, VC          ; Skip if V1 != VC
$9CA    $D587   DRW      V5, V8, #7      ; Draw 7-byte sprite at V5, V8
$9CC    $2875   CALL     $875            ; Call subroutine at 875
$9CE    $A438   LD       I, $438         ; Load 438 into I
$9D0    $D685   DRW      V6, V8, #5      ; Draw 5-byte sprite at V6, V8
$9D2    $73AE   ADD      V3, #AE         ; Add 174 to V3
$9D4    $751F   ADD      V5, #1F         ; Add 31 to V5
$9D6    $481C   SNE      V8, #1C         ; Skip if V8 != 28
$9D8    $4365   SNE      V3, #65         ; Skip if V3 != 101
$9DA    $8925   SUB      V9, V2          ; V9 -= V2, VF = !borrow
$9DC    $D347   DRW      V3, V4, #7      ; Draw 7-byte sprite at V3, V4
$9DE    $CEFE   RND      VE, #FE         ; VE = random & FE
$9E0    $B6A9   JP       V0, $6A9        ; Jump to V0 + 6A9
$9E2    $EB92   UNKNOWN  $EB92           ; Unknown Exxx instruction
$9E4    $2A80   CALL     $A80            ; Call subroutine at A80
$9E6    $69BA   LD       V9, #BA         ; Load 186 into V9
$9E8    $0741   SYS      $741            ; System call to 741
$9EA    $07F8   SYS      $7F8            ; System call to 7F8
$9EC    $CD88   RND      VD, #88         ; VD = random & 88
$9EE    $E53D   UNKNOWN  $E53D           ; Unknown Exxx instruction
$9F0    $B15B   JP       V0, $15B        ; Jump to V0 + 15B
$9F2    $0B01   SYS      $B01            ; System call to B01
$9F4    $D89E   DRW      V8, V9, #E      ; Draw 14-byte sprite at V8, V9
$9F6    $8651   OR       V6, V5          ; V6 |= V5
$9F8    $0C2D   SYS      $C2D            ; System call to C2D
$9FA    $2753   CALL     $753            ; Call subroutine at 753
$9FC    $52BA   UNKNOWN  $52BA           ; Unknown 5xxx instruction
$9FE    $32B2   SE       V2, #B2         ; Skip if V2 == 178
$A00    $AFAA   LD       I, $FAA         ; Load FAA into I
$A02    $2467   CALL     $467            ; Call subroutine at 467
$A04    $A7BD   LD       I, $7BD         ; Load 7BD into I
$A06    $3E67   SE       VE, #67         ; Skip if VE == 103
$A08    $2439   CALL     $439            ; Call subroutine at 439
$A0A    $DBAC   DRW      VB, VA, #C      ; Draw 12-byte sprite at VB, VA
$A0C    $ECE5   UNKNOWN  $ECE5           ; Unknown Exxx instruction
$A0E    $082E   SYS      $82E            ; System call to 82E
$A10    $A456   LD       I, $456         ; Load 456 into I
$A12    $56ED   UNKNOWN  $56ED           ; Unknown 5xxx instruction
$A14    $8721   OR       V7, V2          ; V7 |= V2
$A16    $ADF4   LD       I, $DF4         ; Load DF4 into I
$A18    $8524   ADD      V5, V2          ; V5 += V2, VF = carry
$A1A    $4D9D   SNE      VD, #9D         ; Skip if VD != 157
$A1C    $E1EC   UNKNOWN  $E1EC           ; Unknown Exxx instruction
$A1E    $D72B   DRW      V7, V2, #B      ; Draw 11-byte sprite at V7, V2
$A20    $45C8   SNE      V5, #C8         ; Skip if V5 != 200
$A22    $7FD3   ADD      VF, #D3         ; Add 211 to VF
$A24    $3594   SE       V5, #94         ; Skip if V5 == 148
$A26    $3239   SE       V2, #39         ; Skip if V2 == 57
$A28    $12CF   JP       $2CF            ; Jump to 2CF
$A2A    $A49C   LD       I, $49C         ; Load 49C into I
$A2C    $32EE   SE       V2, #EE         ; Skip if V2 == 238
$A2E    $CCE0   RND      VC, #E0         ; VC = random & E0
$A30    $EDF2   UNKNOWN  $EDF2           ; Unknown Exxx instruction
$A32    $C2FD   RND      V2, #FD         ; V2 = random & FD
$A34    $FB4F   UNKNOWN  FB4F            ; Unknown Fxxx instruction
$A36    $A0AB   LD       I, $0AB         ; Load 0AB into I
$A38    $1BB6   JP       $BB6            ; Jump to BB6
$A3A    $D7AA   DRW      V7, VA, #A      ; Draw 10-byte sprite at V7, VA
$A3C    $46FF   SNE      V6, #FF         ; Skip if V6 != 255
$A3E    $E2E4   UNKNOWN  $E2E4           ; Unknown Exxx instruction
$A40    $D1D8   DRW      V1, VD, #8      ; Draw 8-byte sprite at V1, VD
$A42    $D686   DRW      V6, V8, #6      ; Draw 6-byte sprite at V6, V8
$A44    $0C4C   SYS      $C4C            ; System call to C4C
$A46    $26F0   CALL     $6F0            ; Call subroutine at 6F0
$A48    $8DB1   OR       VD, VB          ; VD |= VB
$A4A    $748D   ADD      V4, #8D         ; Add 141 to V4
$A4C    $9D5F   UNKNOWN  $9D5F           ; Unknown 9xxx instruction
$A4E    $BC9D   JP       V0, $C9D        ; Jump to V0 + C9D
$A50    $3685   SE       V6, #85         ; Skip if V6 == 133
$A52    $E13C   UNKNOWN  $E13C           ; Unknown Exxx instruction
$A54    $B002   JP       V0, $002        ; Jump to V0 + 002
$A56    $7232   ADD      V2, #32         ; Add 50 to V2
$A58    $5E06   UNKNOWN  $5E06           ; Unknown 5xxx instruction
$A5A    $B4E5   JP       V0, $4E5        ; Jump to V0 + 4E5
$A5C    $7E00   ADD      VE, #00         ; Add 0 to VE
$A5E    $47B2   SNE      V7, #B2         ; Skip if V7 != 178
$A60    $2EB5   CALL     $EB5            ; Call subroutine at EB5
$A62    $12DB   JP       $2DB            ; Jump to 2DB
$A64    $EE01   UNKNOWN  $EE01           ; Unknown Exxx instruction
$A66    $883B   UNKNOWN  883B            ; Unknown 8xxx instruction
$A68    $3E70   SE       VE, #70         ; Skip if VE == 112
$A6A    $6B06   LD       VB, #06         ; Load 6 into VB
$A6C    $2F57   CALL     $F57            ; Call subroutine at F57
$A6E    $E0B5   UNKNOWN  $E0B5           ; Unknown Exxx instruction
$A70    $2B07   CALL     $B07            ; Call subroutine at B07
$A72    $1F35   JP       $F35            ; Jump to F35
$A74    $BDE5   JP       V0, $DE5        ; Jump to V0 + DE5
$A76    $6EF4   LD       VE, #F4         ; Load 244 into VE
$A78    $5AD1   UNKNOWN  $5AD1           ; Unknown 5xxx instruction
$A7A    $C163   RND      V1, #63         ; V1 = random & 63
$A7C    $9B05   UNKNOWN  $9B05           ; Unknown 9xxx instruction
$A7E    $C05D   RND      V0, #5D         ; V0 = random & 5D
$A80    $3765   SE       V7, #65         ; Skip if V7 == 101
$A82    $41E7   SNE      V1, #E7         ; Skip if V1 != 231
$A84    $10B7   JP       $0B7            ; Jump to 0B7
$A86    $4D71   SNE      VD, #71         ; Skip if VD != 113
$A88    $56BF   UNKNOWN  $56BF           ; Unknown 5xxx instruction
$A8A    $4E52   SNE      VE, #52         ; Skip if VE != 82
$A8C    $6D77   LD       VD, #77         ; Load 119 into VD
$A8E    $465B   SNE      V6, #5B         ; Skip if V6 != 91
$A90    $AFC6   LD       I, $FC6         ; Load FC6 into I
$A92    $AC0B   LD       I, $C0B         ; Load C0B into I
$A94    $366F   SE       V6, #6F         ; Skip if V6 == 111
$A96    $1EB8   JP       $EB8            ; Jump to EB8
$A98    $33FB   SE       V3, #FB         ; Skip if V3 == 251
$A9A    $ADD8   LD       I, $DD8         ; Load DD8 into I
$A9C    $0C7D   SYS      $C7D            ; System call to C7D
$A9E    $ECC7   UNKNOWN  $ECC7           ; Unknown Exxx instruction
$AA0    $F2CB   UNKNOWN  F2CB            ; Unknown Fxxx instruction
$AA2    $4130   SNE      V1, #30         ; Skip if V1 != 48
$AA4    $BEC0   JP       V0, $EC0        ; Jump to V0 + EC0
$AA6    $5040   SE       V0, V4          ; Skip if V0 == V4
$AA8    $D4BC   DRW      V4, VB, #C      ; Draw 12-byte sprite at V4, VB
$AAA    $AC76   LD       I, $C76         ; Load C76 into I
$AAC    $16B2   JP       $6B2            ; Jump to 6B2
$AAE    $D251   DRW      V2, V5, #1      ; Draw 1-byte sprite at V2, V5
$AB0    $71B1   ADD      V1, #B1         ; Add 177 to V1
$AB2    $0522   SYS      $522            ; System call to 522
$AB4    $A4C9   LD       I, $4C9         ; Load 4C9 into I
$AB6    $86F6   SHR      V6              ; V6 >>= 1, VF = LSB
$AB8    $5902   UNKNOWN  $5902           ; Unknown 5xxx instruction
$ABA    $7BED   ADD      VB, #ED         ; Add 237 to VB
$ABC    $78A7   ADD      V8, #A7         ; Add 167 to V8
$ABE    $62A5   LD       V2, #A5         ; Load 165 into V2
$AC0    $1315   JP       $315            ; Jump to 315
$AC2    $8A4A   UNKNOWN  8A4A            ; Unknown 8xxx instruction
$AC4    $35FC   SE       V5, #FC         ; Skip if V5 == 252
$AC6    $FC00   UNKNOWN  FC00            ; Unknown Fxxx instruction
$AC8    $6EAD   LD       VE, #AD         ; Load 173 into VE
$ACA    $37E9   SE       V7, #E9         ; Skip if V7 == 233
$ACC    $6454   LD       V4, #54         ; Load 84 into V4
$ACE    $21D4   CALL     $1D4            ; Call subroutine at 1D4
$AD0    $0C01   SYS      $C01            ; System call to C01
$AD2    $1B45   JP       $B45            ; Jump to B45
$AD4    $162E   JP       $62E            ; Jump to 62E
$AD6    $4374   SNE      V3, #74         ; Skip if V3 != 116
$AD8    $CF22   RND      VF, #22         ; VF = random & 22
$ADA    $309D   SE       V0, #9D         ; Skip if V0 == 157
$ADC    $E695   UNKNOWN  $E695           ; Unknown Exxx instruction
$ADE    $5719   UNKNOWN  $5719           ; Unknown 5xxx instruction
$AE0    $E179   UNKNOWN  $E179           ; Unknown Exxx instruction
$AE2    $823A   UNKNOWN  823A            ; Unknown 8xxx instruction
$AE4    $96CC   UNKNOWN  $96CC           ; Unknown 9xxx instruction
$AE6    $953D   UNKNOWN  $953D           ; Unknown 9xxx instruction
$AE8    $F653   UNKNOWN  F653            ; Unknown Fxxx instruction
$AEA    $2D77   CALL     $D77            ; Call subroutine at D77
$AEC    $00FF   SYS      $0FF            ; System call to 0FF
$AEE    $AB6A   LD       I, $B6A         ; Load B6A into I
$AF0    $6145   LD       V1, #45         ; Load 69 into V1
$AF2    $0F3C   SYS      $F3C            ; System call to F3C
$AF4    $D0AB   DRW      V0, VA, #B      ; Draw 11-byte sprite at V0, VA
$AF6    $1995   JP       $995            ; Jump to 995
$AF8    $0D6A   SYS      $D6A            ; System call to D6A
$AFA    $244F   CALL     $44F            ; Call subroutine at 44F
$AFC    $26E8   CALL     $6E8            ; Call subroutine at 6E8
$AFE    $2CF0   CALL     $CF0            ; Call subroutine at CF0
$B00    $9249   UNKNOWN  $9249           ; Unknown 9xxx instruction
$B02    $941F   UNKNOWN  $941F           ; Unknown 9xxx instruction
$B04    $E734   UNKNOWN  $E734           ; Unknown Exxx instruction
$B06    $50A5   UNKNOWN  $50A5           ; Unknown 5xxx instruction
$B08    $6134   LD       V1, #34         ; Load 52 into V1
$B0A    $BD6B   JP       V0, $D6B        ; Jump to V0 + D6B
$B0C    $7142   ADD      V1, #42         ; Add 66 to V1
$B0E    $CC66   RND      VC, #66         ; VC = random & 66
$B10    $FE62   UNKNOWN  FE62            ; Unknown Fxxx instruction
$B12    $1D20   JP       $D20            ; Jump to D20
$B14    $DCC3   DRW      VC, VC, #3      ; Draw 3-byte sprite at VC, VC
$B16    $EB69   UNKNOWN  $EB69           ; Unknown Exxx instruction
$B18    $35C9   SE       V5, #C9         ; Skip if V5 == 201
$B1A    $6F60   LD       VF, #60         ; Load 96 into VF
$B1C    $6B22   LD       VB, #22         ; Load 34 into VB
$B1E    $C2FF   RND      V2, #FF         ; V2 = random & FF
$B20    $2E95   CALL     $E95            ; Call subroutine at E95
$B22    $E998   UNKNOWN  $E998           ; Unknown Exxx instruction
$B24    $3F7A   SE       VF, #7A         ; Skip if VF == 122
$B26    $41A6   SNE      V1, #A6         ; Skip if V1 != 166
$B28    $5360   SE       V3, V6          ; Skip if V3 == V6
$B2A    $A233   LD       I, $233         ; Load 233 into I
$B2C    $629B   LD       V2, #9B         ; Load 155 into V2
$B2E    $3E22   SE       VE, #22         ; Skip if VE == 34
$B30    $E603   UNKNOWN  $E603           ; Unknown Exxx instruction
$B32    $A89F   LD       I, $89F         ; Load 89F into I
$B34    $BB61   JP       V0, $B61        ; Jump to V0 + B61
$B36    $D01B   DRW      V0, V1, #B      ; Draw 11-byte sprite at V0, V1
$B38    $A1B9   LD       I, $1B9         ; Load 1B9 into I
$B3A    $6F7B   LD       VF, #7B         ; Load 123 into VF
$B3C    $7891   ADD      V8, #91         ; Add 145 to V8
$B3E    $EB4E   UNKNOWN  $EB4E           ; Unknown Exxx instruction
$B40    $A250   LD       I, $250         ; Load 250 into I
$B42    $7304   ADD      V3, #04         ; Add 4 to V3
$B44    $6CFA   LD       VC, #FA         ; Load 250 into VC
$B46    $7A3F   ADD      VA, #3F         ; Add 63 to VA
$B48    $9AA2   UNKNOWN  $9AA2           ; Unknown 9xxx instruction
$B4A    $A44F   LD       I, $44F         ; Load 44F into I
$B4C    $DF83   DRW      VF, V8, #3      ; Draw 3-byte sprite at VF, V8
$B4E    $25A0   CALL     $5A0            ; Call subroutine at 5A0
$B50    $74AD   ADD      V4, #AD         ; Add 173 to V4
$B52    $A510   LD       I, $510         ; Load 510 into I
$B54    $933D   UNKNOWN  $933D           ; Unknown 9xxx instruction
$B56    $7868   ADD      V8, #68         ; Add 104 to V8
$B58    $08F9   SYS      $8F9            ; System call to 8F9
$B5A    $9D33   UNKNOWN  $9D33           ; Unknown 9xxx instruction
$B5C    $A815   LD       I, $815         ; Load 815 into I
$B5E    $EF17   UNKNOWN  $EF17           ; Unknown Exxx instruction
$B60    $3FBB   SE       VF, #BB         ; Skip if VF == 187
$B62    $B908   JP       V0, $908        ; Jump to V0 + 908
$B64    $E293   UNKNOWN  $E293           ; Unknown Exxx instruction
$B66    $01DB   SYS      $1DB            ; System call to 1DB
$B68    $5511   UNKNOWN  $5511           ; Unknown 5xxx instruction
$B6A    $AFD0   LD       I, $FD0         ; Load FD0 into I
$B6C    $4245   SNE      V2, #45         ; Skip if V2 != 69
$B6E    $FEF9   UNKNOWN  FEF9            ; Unknown Fxxx instruction
$B70    $738A   ADD      V3, #8A         ; Add 138 to V3
$B72    $4EE6   SNE      VE, #E6         ; Skip if VE != 230
$B74    $5A7E   UNKNOWN  $5A7E           ; Unknown 5xxx instruction
$B76    $A566   LD       I, $566         ; Load 566 into I
$B78    $46D6   SNE      V6, #D6         ; Skip if V6 != 214
$B7A    $F86D   UNKNOWN  F86D            ; Unknown Fxxx instruction
$B7C    $E68F   UNKNOWN  $E68F           ; Unknown Exxx instruction
$B7E    $359F   SE       V5, #9F         ; Skip if V5 == 159
$B80    $B60F   JP       V0, $60F        ; Jump to V0 + 60F
$B82    $5864   UNKNOWN  $5864           ; Unknown 5xxx instruction
$B84    $9155   UNKNOWN  $9155           ; Unknown 9xxx instruction
$B86    $87D4   ADD      V7, VD          ; V7 += VD, VF = carry
$B88    $59C2   UNKNOWN  $59C2           ; Unknown 5xxx instruction
$B8A    $17A4   JP       $7A4            ; Jump to 7A4
$B8C    $C09F   RND      V0, #9F         ; V0 = random & 9F
$B8E    $6E37   LD       VE, #37         ; Load 55 into VE
$B90    $1B66   JP       $B66            ; Jump to B66
$B92    $5236   UNKNOWN  $5236           ; Unknown 5xxx instruction
$B94    $4297   SNE      V2, #97         ; Skip if V2 != 151
$B96    $5B56   UNKNOWN  $5B56           ; Unknown 5xxx instruction
$B98    $CCC9   RND      VC, #C9         ; VC = random & C9
$B9A    $C922   RND      V9, #22         ; V9 = random & 22
$B9C    $6489   LD       V4, #89         ; Load 137 into V4
$B9E    $888B   UNKNOWN  888B            ; Unknown 8xxx instruction
$BA0    $F959   UNKNOWN  F959            ; Unknown Fxxx instruction
$BA2    $7CB6   ADD      VC, #B6         ; Add 182 to VC
$BA4    $D49E   DRW      V4, V9, #E      ; Draw 14-byte sprite at V4, V9
$BA6    $8D91   OR       VD, V9          ; VD |= V9
$BA8    $B829   JP       V0, $829        ; Jump to V0 + 829
$BAA    $F368   UNKNOWN  F368            ; Unknown Fxxx instruction
$BAC    $4802   SNE      V8, #02         ; Skip if V8 != 2
$BAE    $FA3B   UNKNOWN  FA3B            ; Unknown Fxxx instruction
$BB0    $2B72   CALL     $B72            ; Call subroutine at B72
$BB2    $3519   SE       V5, #19         ; Skip if V5 == 25
$BB4    $72FD   ADD      V2, #FD         ; Add 253 to V2
$BB6    $CC22   RND      VC, #22         ; VC = random & 22
$BB8    $0A2C   SYS      $A2C            ; System call to A2C
$BBA    $D96E   DRW      V9, V6, #E      ; Draw 14-byte sprite at V9, V6
$BBC    $0BA8   SYS      $BA8            ; System call to BA8
$BBE    $7FDD   ADD      VF, #DD         ; Add 221 to VF
$BC0    $58E8   UNKNOWN  $58E8           ; Unknown 5xxx instruction
$BC2    $80EC   UNKNOWN  80EC            ; Unknown 8xxx instruction
$BC4    $15EB   JP       $5EB            ; Jump to 5EB
$BC6    $E003   UNKNOWN  $E003           ; Unknown Exxx instruction
$BC8    $8B8D   UNKNOWN  8B8D            ; Unknown 8xxx instruction
$BCA    $3F30   SE       VF, #30         ; Skip if VF == 48
$BCC    $0FC3   SYS      $FC3            ; System call to FC3
$BCE    $2335   CALL     $335            ; Call subroutine at 335
$BD0    $D966   DRW      V9, V6, #6      ; Draw 6-byte sprite at V9, V6
$BD2    $31F9   SE       V1, #F9         ; Skip if V1 == 249
$BD4    $1D90   JP       $D90            ; Jump to D90
$BD6    $2398   CALL     $398            ; Call subroutine at 398
$BD8    $BFAA   JP       V0, $FAA        ; Jump to V0 + FAA
$BDA    $4B06   SNE      VB, #06         ; Skip if VB != 6
$BDC    $9E50   SNE      VE, V5          ; Skip if VE != V5
$BDE    $47C9   SNE      V7, #C9         ; Skip if V7 != 201
$BE0    $0E33   SYS      $E33            ; System call to E33
$BE2    $CA46   RND      VA, #46         ; VA = random & 46
$BE4    $3190   SE       V1, #90         ; Skip if V1 == 144
$BE6    $21AD   CALL     $1AD            ; Call subroutine at 1AD
$BE8    $6640   LD       V6, #40         ; Load 64 into V6
$BEA    $3BC0   SE       VB, #C0         ; Skip if VB == 192
$BEC    $8777   SUBN     V7, V7          ; V7 = V7 - V7, VF = !borrow
$BEE    $D5AF   DRW      V5, VA, #F      ; Draw 15-byte sprite at V5, VA
$BF0    $0B05   SYS      $B05            ; System call to B05
$BF2    $EBCF   UNKNOWN  $EBCF           ; Unknown Exxx instruction
$BF4    $42FE   SNE      V2, #FE         ; Skip if V2 != 254
$BF6    $F642   UNKNOWN  F642            ; Unknown Fxxx instruction
$BF8    $0EAA   SYS      $EAA            ; System call to EAA
$BFA    $0512   SYS      $512            ; System call to 512
$BFC    $3512   SE       V5, #12         ; Skip if V5 == 18
$BFE    $40BC   SNE      V0, #BC         ; Skip if V0 != 188
$C00    $0858   SYS      $858            ; System call to 858
$C02    $E3B0   UNKNOWN  $E3B0           ; Unknown Exxx instruction
$C04    $576D   UNKNOWN  $576D           ; Unknown 5xxx instruction
$C06    $5512   UNKNOWN  $5512           ; Unknown 5xxx instruction
$C08    $50B3   UNKNOWN  $50B3           ; Unknown 5xxx instruction
$C0A    $14DD   JP       $4DD            ; Jump to 4DD
$C0C    $6B6C   LD       VB, #6C         ; Load 108 into VB
$C0E    $0D50   SYS      $D50            ; System call to D50
$C10    $C95F   RND      V9, #5F         ; V9 = random & 5F
$C12    $C405   RND      V4, #05         ; V4 = random & 05
$C14    $B98E   JP       V0, $98E        ; Jump to V0 + 98E
$C16    $46BD   SNE      V6, #BD         ; Skip if V6 != 189
$C18    $CC28   RND      VC, #28         ; VC = random & 28
$C1A    $3547   SE       V5, #47         ; Skip if V5 == 71
$C1C    $6F54   LD       VF, #54         ; Load 84 into VF
$C1E    $4770   SNE      V7, #70         ; Skip if V7 != 112
$C20    $EAB4   UNKNOWN  $EAB4           ; Unknown Exxx instruction
$C22    $5ECE   UNKNOWN  $5ECE           ; Unknown 5xxx instruction
$C24    $A070   LD       I, $070         ; Load 070 into I
$C26    $B6F4   JP       V0, $6F4        ; Jump to V0 + 6F4
$C28    $5C67   UNKNOWN  $5C67           ; Unknown 5xxx instruction
$C2A    $4993   SNE      V9, #93         ; Skip if V9 != 147
$C2C    $14C8   JP       $4C8            ; Jump to 4C8
$C2E    $2A16   CALL     $A16            ; Call subroutine at A16
$C30    $6791   LD       V7, #91         ; Load 145 into V7
$C32    $25B5   CALL     $5B5            ; Call subroutine at 5B5
$C34    $B447   JP       V0, $447        ; Jump to V0 + 447
$C36    $5C28   UNKNOWN  $5C28           ; Unknown 5xxx instruction
$C38    $C9E1   RND      V9, #E1         ; V9 = random & E1
$C3A    $FB84   UNKNOWN  FB84            ; Unknown Fxxx instruction
$C3C    $B82B   JP       V0, $82B        ; Jump to V0 + 82B
$C3E    $A803   LD       I, $803         ; Load 803 into I
$C40    $98D3   UNKNOWN  $98D3           ; Unknown 9xxx instruction
$C42    $FB5A   UNKNOWN  FB5A            ; Unknown Fxxx instruction
$C44    $5453   UNKNOWN  $5453           ; Unknown 5xxx instruction
$C46    $5627   UNKNOWN  $5627           ; Unknown 5xxx instruction
$C48    $FE4C   UNKNOWN  FE4C            ; Unknown Fxxx instruction
$C4A    $A9D0   LD       I, $9D0         ; Load 9D0 into I
$C4C    $4767   SNE      V7, #67         ; Skip if V7 != 103
$C4E    $3EC6   SE       VE, #C6         ; Skip if VE == 198
$C50    $476F   SNE      V7, #6F         ; Skip if V7 != 111
$C52    $B764   JP       V0, $764        ; Jump to V0 + 764
$C54    $D8B5   DRW      V8, VB, #5      ; Draw 5-byte sprite at V8, VB
$C56    $DA85   DRW      VA, V8, #5      ; Draw 5-byte sprite at VA, V8
$C58    $7026   ADD      V0, #26         ; Add 38 to V0
$C5A    $A1D9   LD       I, $1D9         ; Load 1D9 into I
$C5C    $4D00   SNE      VD, #00         ; Skip if VD != 0
$C5E    $D172   DRW      V1, V7, #2      ; Draw 2-byte sprite at V1, V7
$C60    $D179   DRW      V1, V7, #9      ; Draw 9-byte sprite at V1, V7
$C62    $9AAF   UNKNOWN  $9AAF           ; Unknown 9xxx instruction
$C64    $F3EF   UNKNOWN  F3EF            ; Unknown Fxxx instruction
$C66    $ABE5   LD       I, $BE5         ; Load BE5 into I
$C68    $10CE   JP       $0CE            ; Jump to 0CE
$C6A    $1CF2   JP       $CF2            ; Jump to CF2
$C6C    $46FB   SNE      V6, #FB         ; Skip if V6 != 251
$C6E    $B13E   JP       V0, $13E        ; Jump to V0 + 13E
$C70    $7F03   ADD      VF, #03         ; Add 3 to VF
$C72    $FACC   UNKNOWN  FACC            ; Unknown Fxxx instruction
$C74    $7EE0   ADD      VE, #E0         ; Add 224 to VE
$C76    $8371   OR       V3, V7          ; V3 |= V7
$C78    $8A44   ADD      VA, V4          ; VA += V4, VF = carry
$C7A    $F1B2   UNKNOWN  F1B2            ; Unknown Fxxx instruction
$C7C    $D6FE   DRW      V6, VF, #E      ; Draw 14-byte sprite at V6, VF
$C7E    $D8A0   DRW      V8, VA, #0      ; Draw 0-byte sprite at V8, VA
$C80    $E382   UNKNOWN  $E382           ; Unknown Exxx instruction
$C82    $B5C8   JP       V0, $5C8        ; Jump to V0 + 5C8
$C84    $6E38   LD       VE, #38         ; Load 56 into VE
$C86    $58E5   UNKNOWN  $58E5           ; Unknown 5xxx instruction
$C88    $9967   UNKNOWN  $9967           ; Unknown 9xxx instruction
$C8A    $17E6   JP       $7E6            ; Jump to 7E6
$C8C    $0493   SYS      $493            ; System call to 493
$C8E    $967B   UNKNOWN  $967B           ; Unknown 9xxx instruction
$C90    $F7A7   UNKNOWN  F7A7            ; Unknown Fxxx instruction
$C92    $AF1D   LD       I, $F1D         ; Load F1D into I
$C94    $DCB7   DRW      VC, VB, #7      ; Draw 7-byte sprite at VC, VB
$C96    $9B22   UNKNOWN  $9B22           ; Unknown 9xxx instruction
$C98    $EEFC   UNKNOWN  $EEFC           ; Unknown Exxx instruction
$C9A    $F9C5   UNKNOWN  F9C5            ; Unknown Fxxx instruction
$C9C    $9B19   UNKNOWN  $9B19           ; Unknown 9xxx instruction
$C9E    $1E8A   JP       $E8A            ; Jump to E8A
$CA0    $5A30   SE       VA, V3          ; Skip if VA == V3
$CA2    $2497   CALL     $497            ; Call subroutine at 497
$CA4    $F27A   UNKNOWN  F27A            ; Unknown Fxxx instruction
$CA6    $CE57   RND      VE, #57         ; VE = random & 57
$CA8    $E276   UNKNOWN  $E276           ; Unknown Exxx instruction
$CAA    $8DB2   AND      VD, VB          ; VD &= VB
$CAC    $0A9B   SYS      $A9B            ; System call to A9B
$CAE    $291D   CALL     $91D            ; Call subroutine at 91D
$CB0    $EDB2   UNKNOWN  $EDB2           ; Unknown Exxx instruction
$CB2    $6C12   LD       VC, #12         ; Load 18 into VC
$CB4    $1DFB   JP       $DFB            ; Jump to DFB
$CB6    $3458   SE       V4, #58         ; Skip if V4 == 88
$CB8    $DDFF   DRW      VD, VF, #F      ; Draw 15-byte sprite at VD, VF
$CBA    $9D6F   UNKNOWN  $9D6F           ; Unknown 9xxx instruction
$CBC    $7605   ADD      V6, #05         ; Add 5 to V6
$CBE    $EAC9   UNKNOWN  $EAC9           ; Unknown Exxx instruction
$CC0    $2A70   CALL     $A70            ; Call subroutine at A70
$CC2    $5903   UNKNOWN  $5903           ; Unknown 5xxx instruction
$CC4    $E5A6   UNKNOWN  $E5A6           ; Unknown Exxx instruction
$CC6    $83FD   UNKNOWN  83FD            ; Unknown 8xxx instruction
$CC8    $8A26   SHR      VA              ; VA >>= 1, VF = LSB
$CCA    $842E   SHL      V4              ; V4 <<= 1, VF = MSB
$CCC    $9C81   UNKNOWN  $9C81           ; Unknown 9xxx instruction
$CCE    $ECAA   UNKNOWN  $ECAA           ; Unknown Exxx instruction
$CD0    $BF4E   JP       V0, $F4E        ; Jump to V0 + F4E
$CD2    $8D5A   UNKNOWN  8D5A            ; Unknown 8xxx instruction
$CD4    $B180   JP       V0, $180        ; Jump to V0 + 180
$CD6    $AF06   LD       I, $F06         ; Load F06 into I
$CD8    $060A   SYS      $60A            ; System call to 60A
$CDA    $6AB0   LD       VA, #B0         ; Load 176 into VA
$CDC    $5FB7   UNKNOWN  $5FB7           ; Unknown 5xxx instruction
$CDE    $4953   SNE      V9, #53         ; Skip if V9 != 83
$CE0    $44B4   SNE      V4, #B4         ; Skip if V4 != 180
$CE2    $F529   LD       F, V5           ; I = sprite address for digit V5
$CE4    $B0B8   JP       V0, $0B8        ; Jump to V0 + 0B8
$CE6    $8036   SHR      V0              ; V0 >>= 1, VF = LSB
$CE8    $7BBD   ADD      VB, #BD         ; Add 189 to VB
$CEA    $DD49   DRW      VD, V4, #9      ; Draw 9-byte sprite at VD, V4
$CEC    $60B6   LD       V0, #B6         ; Load 182 into V0
$CEE    $3456   SE       V4, #56         ; Skip if V4 == 86
$CF0    $FE6B   UNKNOWN  FE6B            ; Unknown Fxxx instruction
$CF2    $A7B4   LD       I, $7B4         ; Load 7B4 into I
$CF4    $F4A9   UNKNOWN  F4A9            ; Unknown Fxxx instruction
$CF6    $9826   UNKNOWN  $9826           ; Unknown 9xxx instruction
$CF8    $94D3   UNKNOWN  $94D3           ; Unknown 9xxx instruction
$CFA    $C911   RND      V9, #11         ; V9 = random & 11
$CFC    $429F   SNE      V2, #9F         ; Skip if V2 != 159
$CFE    $F81D   UNKNOWN  F81D            ; Unknown Fxxx instruction
$D00    $80E4   ADD      V0, VE          ; V0 += VE, VF = carry
$D02    $55FE   UNKNOWN  $55FE           ; Unknown 5xxx instruction
$D04    $D88E   DRW      V8, V8, #E      ; Draw 14-byte sprite at V8, V8
$D06    $DF80   DRW      VF, V8, #0      ; Draw 0-byte sprite at VF, V8
$D08    $4A60   SNE      VA, #60         ; Skip if VA != 96
$D0A    $8BCC   UNKNOWN  8BCC            ; Unknown 8xxx instruction
$D0C    $B628   JP       V0, $628        ; Jump to V0 + 628
$D0E    $59E4   UNKNOWN  $59E4           ; Unknown 5xxx instruction
$D10    $C334   RND      V3, #34         ; V3 = random & 34
$D12    $D1C5   DRW      V1, VC, #5      ; Draw 5-byte sprite at V1, VC
$D14    $D120   DRW      V1, V2, #0      ; Draw 0-byte sprite at V1, V2
$D16    $85D4   ADD      V5, VD          ; V5 += VD, VF = carry
$D18    $21F2   CALL     $1F2            ; Call subroutine at 1F2
$D1A    $7E9D   ADD      VE, #9D         ; Add 157 to VE
$D1C    $5D8A   UNKNOWN  $5D8A           ; Unknown 5xxx instruction
$D1E    $4C38   SNE      VC, #38         ; Skip if VC != 56
$D20    $5570   SE       V5, V7          ; Skip if V5 == V7
$D22    $DD29   DRW      VD, V2, #9      ; Draw 9-byte sprite at VD, V2
$D24    $EE3C   UNKNOWN  $EE3C           ; Unknown Exxx instruction
$D26    $DD16   DRW      VD, V1, #6      ; Draw 6-byte sprite at VD, V1
$D28    $3BA1   SE       VB, #A1         ; Skip if VB == 161
$D2A    $AB36   LD       I, $B36         ; Load B36 into I
$D2C    $2C6C   CALL     $C6C            ; Call subroutine at C6C
$D2E    $67AB   LD       V7, #AB         ; Load 171 into V7
$D30    $B6AF   JP       V0, $6AF        ; Jump to V0 + 6AF
$D32    $AA3F   LD       I, $A3F         ; Load A3F into I
$D34    $CDB5   RND      VD, #B5         ; VD = random & B5
$D36    $914B   UNKNOWN  $914B           ; Unknown 9xxx instruction
$D38    $D900   DRW      V9, V0, #0      ; Draw 0-byte sprite at V9, V0
$D3A    $914F   UNKNOWN  $914F           ; Unknown 9xxx instruction
$D3C    $6828   LD       V8, #28         ; Load 40 into V8
$D3E    $334F   SE       V3, #4F         ; Skip if V3 == 79
$D40    $4E14   SNE      VE, #14         ; Skip if VE != 20
$D42    $A2EE   LD       I, $2EE         ; Load 2EE into I
$D44    $FE00   UNKNOWN  FE00            ; Unknown Fxxx instruction
$D46    $61B1   LD       V1, #B1         ; Load 177 into V1
$D48    $3F89   SE       VF, #89         ; Skip if VF == 137
$D4A    $49C0   SNE      V9, #C0         ; Skip if V9 != 192
$D4C    $ECEF   UNKNOWN  $ECEF           ; Unknown Exxx instruction
$D4E    $CA50   RND      VA, #50         ; VA = random & 50
$D50    $FF77   UNKNOWN  FF77            ; Unknown Fxxx instruction
$D52    $4774   SNE      V7, #74         ; Skip if V7 != 116
$D54    $0ABF   SYS      $ABF            ; System call to ABF
$D56    $2E7F   CALL     $E7F            ; Call subroutine at E7F
$D58    $64C1   LD       V4, #C1         ; Load 193 into V4
$D5A    $C0D7   RND      V0, #D7         ; V0 = random & D7
$D5C    $B20C   JP       V0, $20C        ; Jump to V0 + 20C
$D5E    $1EA3   JP       $EA3            ; Jump to EA3
$D60    $68FD   LD       V8, #FD         ; Load 253 into V8
$D62    $F77F   UNKNOWN  F77F            ; Unknown Fxxx instruction
$D64    $5A5E   UNKNOWN  $5A5E           ; Unknown 5xxx instruction
$D66    $301F   SE       V0, #1F         ; Skip if V0 == 31
$D68    $DA47   DRW      VA, V4, #7      ; Draw 7-byte sprite at VA, V4
$D6A    $E467   UNKNOWN  $E467           ; Unknown Exxx instruction
$D6C    $A91E   LD       I, $91E         ; Load 91E into I
$D6E    $6269   LD       V2, #69         ; Load 105 into V2
$D70    $AD68   LD       I, $D68         ; Load D68 into I
$D72    $45C4   SNE      V5, #C4         ; Skip if V5 != 196
$D74    $68DA   LD       V8, #DA         ; Load 218 into V8
$D76    $53F7   UNKNOWN  $53F7           ; Unknown 5xxx instruction
$D78    $F6C3   UNKNOWN  F6C3            ; Unknown Fxxx instruction
$D7A    $9B0A   UNKNOWN  $9B0A           ; Unknown 9xxx instruction
$D7C    $2FAA   CALL     $FAA            ; Call subroutine at FAA
$D7E    $2548   CALL     $548            ; Call subroutine at 548
$D80    $1E9A   JP       $E9A            ; Jump to E9A
$D82    $1A18   JP       $A18            ; Jump to A18
$D84    $B4C2   JP       V0, $4C2        ; Jump to V0 + 4C2
$D86    $6914   LD       V9, #14         ; Load 20 into V9
$D88    $9858   UNKNOWN  $9858           ; Unknown 9xxx instruction
$D8A    $042B   SYS      $42B            ; System call to 42B
$D8C    $C89B   RND      V8, #9B         ; V8 = random & 9B
$D8E    $FD58   UNKNOWN  FD58            ; Unknown Fxxx instruction
$D90    $6FF2   LD       VF, #F2         ; Load 242 into VF
$D92    $23F5   CALL     $3F5            ; Call subroutine at 3F5
$D94    $05FA   SYS      $5FA            ; System call to 5FA
$D96    $072A   SYS      $72A            ; System call to 72A
$D98    $BBC9   JP       V0, $BC9        ; Jump to V0 + BC9
$D9A    $0BE8   SYS      $BE8            ; System call to BE8
$D9C    $8697   SUBN     V6, V9          ; V6 = V9 - V6, VF = !borrow
$D9E    $729F   ADD      V2, #9F         ; Add 159 to V2
$DA0    $1E9D   JP       $E9D            ; Jump to E9D
$DA2    $75D9   ADD      V5, #D9         ; Add 217 to V5
$DA4    $5F6F   UNKNOWN  $5F6F           ; Unknown 5xxx instruction
$DA6    $CCC4   RND      VC, #C4         ; VC = random & C4
$DA8    $014E   SYS      $14E            ; System call to 14E
$DAA    $E9CE   UNKNOWN  $E9CE           ; Unknown Exxx instruction
$DAC    $293C   CALL     $93C            ; Call subroutine at 93C
$DAE    $01B4   SYS      $1B4            ; System call to 1B4
$DB0    $62D1   LD       V2, #D1         ; Load 209 into V2
$DB2    $CEDB   RND      VE, #DB         ; VE = random & DB
$DB4    $4ED8   SNE      VE, #D8         ; Skip if VE != 216
$DB6    $B978   JP       V0, $978        ; Jump to V0 + 978
$DB8    $67B4   LD       V7, #B4         ; Load 180 into V7
$DBA    $DE42   DRW      VE, V4, #2      ; Draw 2-byte sprite at VE, V4
$DBC    $3206   SE       V2, #06         ; Skip if V2 == 6
$DBE    $B1AB   JP       V0, $1AB        ; Jump to V0 + 1AB
$DC0    $B287   JP       V0, $287        ; Jump to V0 + 287
$DC2    $3783   SE       V7, #83         ; Skip if V7 == 131
$DC4    $A18D   LD       I, $18D         ; Load 18D into I
$DC6    $C12F   RND      V1, #2F         ; V1 = random & 2F
$DC8    $EB86   UNKNOWN  $EB86           ; Unknown Exxx instruction
$DCA    $4DC5   SNE      VD, #C5         ; Skip if VD != 197
$DCC    $9898   UNKNOWN  $9898           ; Unknown 9xxx instruction
$DCE    $28EA   CALL     $8EA            ; Call subroutine at 8EA
$DD0    $9E29   UNKNOWN  $9E29           ; Unknown 9xxx instruction
$DD2    $DFAD   DRW      VF, VA, #D      ; Draw 13-byte sprite at VF, VA
$DD4    $81A2   AND      V1, VA          ; V1 &= VA
$DD6    $266C   CALL     $66C            ; Call subroutine at 66C
$DD8    $E4A8   UNKNOWN  $E4A8           ; Unknown Exxx instruction
$DDA    $343E   SE       V4, #3E         ; Skip if V4 == 62
$DDC    $6184   LD       V1, #84         ; Load 132 into V1
$DDE    $09F4   SYS      $9F4            ; System call to 9F4
$DE0    $B231   JP       V0, $231        ; Jump to V0 + 231
$DE2    $702A   ADD      V0, #2A         ; Add 42 to V0
$DE4    $C9AF   RND      V9, #AF         ; V9 = random & AF
$DE6    $F214   UNKNOWN  F214            ; Unknown Fxxx instruction
$DE8    $56CC   UNKNOWN  $56CC           ; Unknown 5xxx instruction
$DEA    $D59B   DRW      V5, V9, #B      ; Draw 11-byte sprite at V5, V9
$DEC    $FBA4   UNKNOWN  FBA4            ; Unknown Fxxx instruction
$DEE    $8909   UNKNOWN  8909            ; Unknown 8xxx instruction
$DF0    $83A5   SUB      V3, VA          ; V3 -= VA, VF = !borrow
$DF2    $A343   LD       I, $343         ; Load 343 into I
$DF4    $8978   UNKNOWN  8978            ; Unknown 8xxx instruction
$DF6    $62E2   LD       V2, #E2         ; Load 226 into V2
$DF8    $7D1A   ADD      VD, #1A         ; Add 26 to VD
$DFA    $6F12   LD       VF, #12         ; Load 18 into VF
$DFC    $B82E   JP       V0, $82E        ; Jump to V0 + 82E
$DFE    $D5F5   DRW      V5, VF, #5      ; Draw 5-byte sprite at V5, VF
$E00    $1EA1   JP       $EA1            ; Jump to EA1
$E02    $6CCE   LD       VC, #CE         ; Load 206 into VC
$E04    $1B30   JP       $B30            ; Jump to B30
$E06    $465D   SNE      V6, #5D         ; Skip if V6 != 93
$E08    $2A2F   CALL     $A2F            ; Call subroutine at A2F
$E0A    $0561   SYS      $561            ; System call to 561
$E0C    $BDB9   JP       V0, $DB9        ; Jump to V0 + DB9
$E0E    $EC2E   UNKNOWN  $EC2E           ; Unknown Exxx instruction
$E10    $92B2   UNKNOWN  $92B2           ; Unknown 9xxx instruction
$E12    $2C3E   CALL     $C3E            ; Call subroutine at C3E
$E14    $55FC   UNKNOWN  $55FC           ; Unknown 5xxx instruction
$E16    $82BE   SHL      V2              ; V2 <<= 1, VF = MSB
$E18    $B87D   JP       V0, $87D        ; Jump to V0 + 87D
$E1A    $E496   UNKNOWN  $E496           ; Unknown Exxx instruction
$E1C    $A56C   LD       I, $56C         ; Load 56C into I
$E1E    $01DE   SYS      $1DE            ; System call to 1DE
$E20    $14C0   JP       $4C0            ; Jump to 4C0
$E22    $D391   DRW      V3, V9, #1      ; Draw 1-byte sprite at V3, V9
$E24    $97BE   UNKNOWN  $97BE           ; Unknown 9xxx instruction
$E26    $7C78   ADD      VC, #78         ; Add 120 to VC
$E28    $7518   ADD      V5, #18         ; Add 24 to V5
$E2A    $F4D7   UNKNOWN  F4D7            ; Unknown Fxxx instruction
$E2C    $5A99   UNKNOWN  $5A99           ; Unknown 5xxx instruction
$E2E    $F820   UNKNOWN  F820            ; Unknown Fxxx instruction
$E30    $9083   UNKNOWN  $9083           ; Unknown 9xxx instruction
$E32    $FC1B   UNKNOWN  FC1B            ; Unknown Fxxx instruction
$E34    $E64A   UNKNOWN  $E64A           ; Unknown Exxx instruction
$E36    $42A4   SNE      V2, #A4         ; Skip if V2 != 164
$E38    $BC6C   JP       V0, $C6C        ; Jump to V0 + C6C
$E3A    $7ED9   ADD      VE, #D9         ; Add 217 to VE
$E3C    $6EC7   LD       VE, #C7         ; Load 199 into VE
$E3E    $5883   UNKNOWN  $5883           ; Unknown 5xxx instruction
$E40    $B84B   JP       V0, $84B        ; Jump to V0 + 84B
$E42    $64BD   LD       V4, #BD         ; Load 189 into V4
$E44    $1C30   JP       $C30            ; Jump to C30
$E46    $C009   RND      V0, #09         ; V0 = random & 09
$E48    $5817   UNKNOWN  $5817           ; Unknown 5xxx instruction
$E4A    $C4C1   RND      V4, #C1         ; V4 = random & C1
$E4C    $723E   ADD      V2, #3E         ; Add 62 to V2
$E4E    $7A10   ADD      VA, #10         ; Add 16 to VA
$E50    $6C31   LD       VC, #31         ; Load 49 into VC
$E52    $A25B   LD       I, $25B         ; Load 25B into I
$E54    $283A   CALL     $83A            ; Call subroutine at 83A
$E56    $D0EE   DRW      V0, VE, #E      ; Draw 14-byte sprite at V0, VE
$E58    $4B32   SNE      VB, #32         ; Skip if VB != 50
$E5A    $C88E   RND      V8, #8E         ; V8 = random & 8E
$E5C    $A3A4   LD       I, $3A4         ; Load 3A4 into I
$E5E    $046E   SYS      $46E            ; System call to 46E
$E60    $B540   JP       V0, $540        ; Jump to V0 + 540
$E62    $8F45   SUB      VF, V4          ; VF -= V4, VF = !borrow
$E64    $5F95   UNKNOWN  $5F95           ; Unknown 5xxx instruction
$E66    $7824   ADD      V8, #24         ; Add 36 to V8
$E68    $5907   UNKNOWN  $5907           ; Unknown 5xxx instruction
$E6A    $9600   SNE      V6, V0          ; Skip if V6 != V0
$E6C    $1894   JP       $894            ; Jump to 894
$E6E    $39AB   SE       V9, #AB         ; Skip if V9 == 171
$E70    $370A   SE       V7, #0A         ; Skip if V7 == 10
$E72    $95C3   UNKNOWN  $95C3           ; Unknown 9xxx instruction
$E74    $5319   UNKNOWN  $5319           ; Unknown 5xxx instruction
$E76    $CD06   RND      VD, #06         ; VD = random & 06
$E78    $A436   LD       I, $436         ; Load 436 into I
$E7A    $6F09   LD       VF, #09         ; Load 9 into VF
$E7C    $E26A   UNKNOWN  $E26A           ; Unknown Exxx instruction
$E7E    $6209   LD       V2, #09         ; Load 9 into V2
$E80    $0F82   SYS      $F82            ; System call to F82
$E82    $4525   SNE      V5, #25         ; Skip if V5 != 37
$E84    $3509   SE       V5, #09         ; Skip if V5 == 9
$E86    $DDA7   DRW      VD, VA, #7      ; Draw 7-byte sprite at VD, VA
$E88    $9E5D   UNKNOWN  $9E5D           ; Unknown 9xxx instruction
$E8A    $D631   DRW      V6, V3, #1      ; Draw 1-byte sprite at V6, V3
$E8C    $00A0   SYS      $0A0            ; System call to 0A0
$E8E    $E4EC   UNKNOWN  $E4EC           ; Unknown Exxx instruction
$E90    $05D7   SYS      $5D7            ; System call to 5D7
$E92    $8FA8   UNKNOWN  8FA8            ; Unknown 8xxx instruction
$E94    $2FF6   CALL     $FF6            ; Call subroutine at FF6
$E96    $2713   CALL     $713            ; Call subroutine at 713
$E98    $C42B   RND      V4, #2B         ; V4 = random & 2B
$E9A    $72BD   ADD      V2, #BD         ; Add 189 to V2
$E9C    $3C64   SE       VC, #64         ; Skip if VC == 100
$E9E    $F32B   UNKNOWN  F32B            ; Unknown Fxxx instruction
$EA0    $D69D   DRW      V6, V9, #D      ; Draw 13-byte sprite at V6, V9
$EA2    $1A96   JP       $A96            ; Jump to A96
$EA4    $B842   JP       V0, $842        ; Jump to V0 + 842
$EA6    $1EBB   JP       $EBB            ; Jump to EBB
$EA8    $2A6A   CALL     $A6A            ; Call subroutine at A6A
$EAA    $C731   RND      V7, #31         ; V7 = random & 31
$EAC    $8675   SUB      V6, V7          ; V6 -= V7, VF = !borrow
$EAE    $8FEA   UNKNOWN  8FEA            ; Unknown 8xxx instruction
$EB0    $FB0B   UNKNOWN  FB0B            ; Unknown Fxxx instruction
$EB2    $4C3F   SNE      VC, #3F         ; Skip if VC != 63
$EB4    $8E54   ADD      VE, V5          ; VE += V5, VF = carry
$EB6    $177B   JP       $77B            ; Jump to 77B
$EB8    $7F66   ADD      VF, #66         ; Add 102 to VF
$EBA    $F733   LD       B, V7           ; Store BCD of V7 at I, I+1, I+2
$EBC    $FA68   UNKNOWN  FA68            ; Unknown Fxxx instruction
$EBE    $B9FC   JP       V0, $9FC        ; Jump to V0 + 9FC
$EC0    $2325   CALL     $325            ; Call subroutine at 325
$EC2    $D6B6   DRW      V6, VB, #6      ; Draw 6-byte sprite at V6, VB
$EC4    $0A9B   SYS      $A9B            ; System call to A9B
$EC6    $9C76   UNKNOWN  $9C76           ; Unknown 9xxx instruction
$EC8    $D1D7   DRW      V1, VD, #7      ; Draw 7-byte sprite at V1, VD
$ECA    $545E   UNKNOWN  $545E           ; Unknown 5xxx instruction
$ECC    $F21D   UNKNOWN  F21D            ; Unknown Fxxx instruction
$ECE    $D132   DRW      V1, V3, #2      ; Draw 2-byte sprite at V1, V3
$ED0    $313D   SE       V1, #3D         ; Skip if V1 == 61
$ED2    $FCD4   UNKNOWN  FCD4            ; Unknown Fxxx instruction
$ED4    $8501   OR       V5, V0          ; V5 |= V0
$ED6    $DA5A   DRW      VA, V5, #A      ; Draw 10-byte sprite at VA, V5
$ED8    $B905   JP       V0, $905        ; Jump to V0 + 905
$EDA    $E587   UNKNOWN  $E587           ; Unknown Exxx instruction
$EDC    $DA2A   DRW      VA, V2, #A      ; Draw 10-byte sprite at VA, V2
$EDE    $C355   RND      V3, #55         ; V3 = random & 55
$EE0    $05C0   SYS      $5C0            ; System call to 5C0
$EE2    $BD6D   JP       V0, $D6D        ; Jump to V0 + D6D
$EE4    $B57D   JP       V0, $57D        ; Jump to V0 + 57D
$EE6    $B68F   JP       V0, $68F        ; Jump to V0 + 68F
$EE8    $8195   SUB      V1, V9          ; V1 -= V9, VF = !borrow
$EEA    $92CE   UNKNOWN  $92CE           ; Unknown 9xxx instruction
$EEC    $3743   SE       V7, #43         ; Skip if V7 == 67
$EEE    $2998   CALL     $998            ; Call subroutine at 998
$EF0    $BDA5   JP       V0, $DA5        ; Jump to V0 + DA5
$EF2    $BB54   JP       V0, $B54        ; Jump to V0 + B54
$EF4    $164F   JP       $64F            ; Jump to 64F
$EF6    $D58B   DRW      V5, V8, #B      ; Draw 11-byte sprite at V5, V8
$EF8    $CD73   RND      VD, #73         ; VD = random & 73
$EFA    $CB30   RND      VB, #30         ; VB = random & 30
$EFC    $7F22   ADD      VF, #22         ; Add 34 to VF
$EFE    $2914   CALL     $914            ; Call subroutine at 914
$F00    $6C41   LD       VC, #41         ; Load 65 into VC
$F02    $F458   UNKNOWN  F458            ; Unknown Fxxx instruction
$F04    $FF2C   UNKNOWN  FF2C            ; Unknown Fxxx instruction
$F06    $4877   SNE      V8, #77         ; Skip if V8 != 119
$F08    $A291   LD       I, $291         ; Load 291 into I
$F0A    $55A3   UNKNOWN  $55A3           ; Unknown 5xxx instruction
$F0C    $3701   SE       V7, #01         ; Skip if V7 == 1
$F0E    $8D4E   SHL      VD              ; VD <<= 1, VF = MSB
$F10    $16D6   JP       $6D6            ; Jump to 6D6
$F12    $C509   RND      V5, #09         ; V5 = random & 09
$F14    $D882   DRW      V8, V8, #2      ; Draw 2-byte sprite at V8, V8
$F16    $D14F   DRW      V1, V4, #F      ; Draw 15-byte sprite at V1, V4
$F18    $1B24   JP       $B24            ; Jump to B24
$F1A    $E2C6   UNKNOWN  $E2C6           ; Unknown Exxx instruction
$F1C    $5522   UNKNOWN  $5522           ; Unknown 5xxx instruction
$F1E    $B492   JP       V0, $492        ; Jump to V0 + 492
$F20    $2974   CALL     $974            ; Call subroutine at 974
$F22    $3662   SE       V6, #62         ; Skip if V6 == 98
$F24    $EAA9   UNKNOWN  $EAA9           ; Unknown Exxx instruction
$F26    $3F06   SE       VF, #06         ; Skip if VF == 6
$F28    $8AC7   SUBN     VA, VC          ; VA = VC - VA, VF = !borrow
$F2A    $E16B   UNKNOWN  $E16B           ; Unknown Exxx instruction
$F2C    $B323   JP       V0, $323        ; Jump to V0 + 323
$F2E    $7417   ADD      V4, #17         ; Add 23 to V4
$F30    $310C   SE       V1, #0C         ; Skip if V1 == 12
$F32    $2167   CALL     $167            ; Call subroutine at 167
$F34    $7848   ADD      V8, #48         ; Add 72 to V8
$F36    $2D06   CALL     $D06            ; Call subroutine at D06
$F38    $71A1   ADD      V1, #A1         ; Add 161 to V1
$F3A    $F8DF   UNKNOWN  F8DF            ; Unknown Fxxx instruction
$F3C    $D620   DRW      V6, V2, #0      ; Draw 0-byte sprite at V6, V2
$F3E    $423E   SNE      V2, #3E         ; Skip if V2 != 62
$F40    $F9EC   UNKNOWN  F9EC            ; Unknown Fxxx instruction
$F42    $E793   UNKNOWN  $E793           ; Unknown Exxx instruction
$F44    $DFE9   DRW      VF, VE, #9      ; Draw 9-byte sprite at VF, VE
$F46    $187D   JP       $87D            ; Jump to 87D
$F48    $5134   UNKNOWN  $5134           ; Unknown 5xxx instruction
$F4A    $A3CD   LD       I, $3CD         ; Load 3CD into I
$F4C    $D651   DRW      V6, V5, #1      ; Draw 1-byte sprite at V6, V5
$F4E    $00AF   SYS      $0AF            ; System call to 0AF
$F50    $2D73   CALL     $D73            ; Call subroutine at D73
$F52    $74AA   ADD      V4, #AA         ; Add 170 to V4
$F54    $99E9   UNKNOWN  $99E9           ; Unknown 9xxx instruction
$F56    $8CC8   UNKNOWN  8CC8            ; Unknown 8xxx instruction
$F58    $1144   JP       $144            ; Jump to 144
$F5A    $7F9F   ADD      VF, #9F         ; Add 159 to VF
$F5C    $2AE1   CALL     $AE1            ; Call subroutine at AE1
$F5E    $2793   CALL     $793            ; Call subroutine at 793
$F60    $DAAB   DRW      VA, VA, #B      ; Draw 11-byte sprite at VA, VA
$F62    $7A29   ADD      VA, #29         ; Add 41 to VA
$F64    $FB93   UNKNOWN  FB93            ; Unknown Fxxx instruction
$F66    $B217   JP       V0, $217        ; Jump to V0 + 217
$F68    $8A6B   UNKNOWN  8A6B            ; Unknown 8xxx instruction
$F6A    $75B8   ADD      V5, #B8         ; Add 184 to V5
$F6C    $8628   UNKNOWN  8628            ; Unknown 8xxx instruction
$F6E    $DA3F   DRW      VA, V3, #F      ; Draw 15-byte sprite at VA, V3
$F70    $6D6A   LD       VD, #6A         ; Load 106 into VD
$F72    $402F   SNE      V0, #2F         ; Skip if V0 != 47
$F74    $A45D   LD       I, $45D         ; Load 45D into I
$F76    $885A   UNKNOWN  885A            ; Unknown 8xxx instruction
$F78    $76F3   ADD      V6, #F3         ; Add 243 to V6
$F7A    $C495   RND      V4, #95         ; V4 = random & 95
$F7C    $FCD0   UNKNOWN  FCD0            ; Unknown Fxxx instruction
$F7E    $338D   SE       V3, #8D         ; Skip if V3 == 141
$F80    $F9BF   UNKNOWN  F9BF            ; Unknown Fxxx instruction
$F82    $F7FB   UNKNOWN  F7FB            ; Unknown Fxxx instruction
$F84    $C335   RND      V3, #35         ; V3 = random & 35
$F86    $46C8   SNE      V6, #C8         ; Skip if V6 != 200
$F88    $0250   SYS      $250            ; System call to 250
$F8A    $3D70   SE       VD, #70         ; Skip if VD == 112
$F8C    $8A92   AND      VA, V9          ; VA &= V9
$F8E    $43D8   SNE      V3, #D8         ; Skip if V3 != 216
$F90    $DBFD   DRW      VB, VF, #D      ; Draw 13-byte sprite at VB, VF
$F92    $831A   UNKNOWN  831A            ; Unknown 8xxx instruction
$F94    $1B3D   JP       $B3D            ; Jump to B3D
$F96    $2531   CALL     $531            ; Call subroutine at 531
$F98    $CD7E   RND      VD, #7E         ; VD = random & 7E
$F9A    $AB71   LD       I, $B71         ; Load B71 into I
$F9C    $1080   JP       $080            ; Jump to 080
$F9E    $56BC   UNKNOWN  $56BC           ; Unknown 5xxx instruction
$FA0    $DBAA   DRW      VB, VA, #A      ; Draw 10-byte sprite at VB, VA
$FA2    $A883   LD       I, $883         ; Load 883 into I
$FA4    $39C0   SE       V9, #C0         ; Skip if V9 == 192
$FA6    $2BE4   CALL     $BE4            ; Call subroutine at BE4
$FA8    $7E89   ADD      VE, #89         ; Add 137 to VE
$FAA    $0605   SYS      $605            ; System call to 605
$FAC    $BF81   JP       V0, $F81        ; Jump to V0 + F81
$FAE    $006A   SYS      $06A            ; System call to 06A
$FB0    $A598   LD       I, $598         ; Load 598 into I
$FB2    $92D4   UNKNOWN  $92D4           ; Unknown 9xxx instruction
$FB4    $1440   JP       $440            ; Jump to 440
$FB6    $3710   SE       V7, #10         ; Skip if V7 == 16
$FB8    $DD1F   DRW      VD, V1, #F      ; Draw 15-byte sprite at VD, V1
$FBA    $0592   SYS      $592            ; System call to 592
$FBC    $96A5   UNKNOWN  $96A5           ; Unknown 9xxx instruction
$FBE    $F130   UNKNOWN  F130            ; Unknown Fxxx instruction
$FC0    $CEA5   RND      VE, #A5         ; VE = random & A5
$FC2    $2C4A   CALL     $C4A            ; Call subroutine at C4A
$FC4    $F24C   UNKNOWN  F24C            ; Unknown Fxxx instruction
$FC6    $E1FD   UNKNOWN  $E1FD           ; Unknown Exxx instruction
$FC8    $08A1   SYS      $8A1            ; System call to 8A1
$FCA    $0BFA   SYS      $BFA            ; System call to BFA
$FCC    $5087   UNKNOWN  $5087           ; Unknown 5xxx instruction
$FCE    $67AC   LD       V7, #AC         ; Load 172 into V7
$FD0    $0571   SYS      $571            ; System call to 571
$FD2    $6B66   LD       VB, #66         ; Load 102 into VB
$FD4    $2C1E   CALL     $C1E            ; Call subroutine at C1E
$FD6    $F492   UNKNOWN  F492            ; Unknown Fxxx instruction
$FD8    $B132   JP       V0, $132        ; Jump to V0 + 132
$FDA    $F2E2   UNKNOWN  F2E2            ; Unknown Fxxx instruction
$FDC    $01B0   SYS      $1B0            ; System call to 1B0
$FDE    $BB3E   JP       V0, $B3E        ; Jump to V0 + B3E
$FE0    $3E0A   SE       VE, #0A         ; Skip if VE == 10
$FE2    $6888   LD       V8, #88         ; Load 136 into V8
$FE4    $2E31   CALL     $E31            ; Call subroutine at E31
$FE6    $6293   LD       V2, #93         ; Load 147 into V2
$FE8    $B20D   JP       V0, $20D        ; Jump to V0 + 20D
$FEA    $5A20   SE       VA, V2          ; Skip if VA == V2
$FEC    $AC04   LD       I, $C04         ; Load C04 into I
$FEE    $D85D   DRW      V8, V5, #D      ; Draw 13-byte sprite at V8, V5
$FF0    $4BA4   SNE      VB, #A4         ; Skip if VB != 164
$FF2    $8158   UNKNOWN  8158            ; Unknown 8xxx instruction
$FF4    $0EBC   SYS      $EBC            ; System call to EBC
$FF6    $7DB2   ADD      VD, #B2         ; Add 178 to VD
$FF8    $FCC7   UNKNOWN  FCC7            ; Unknown Fxxx instruction
$FFA    $5DF5   UNKNOWN  $5DF5           ; Unknown 5xxx instruction
$FFC    $7598   ADD      V5, #98         ; Add 152 to V5
$FFE    $6D07   LD       VD, #07         ; Load 7 into VD

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 455 (25.4%)
  JP      : 243 (13.6%)
  LD      : 225 (12.6%)
  SE      : 124 ( 6.9%)
  ADD     : 124 ( 6.9%)
  SYS     : 122 ( 6.8%)
  DRW     : 121 ( 6.8%)
  SNE     : 118 ( 6.6%)
  CALL    : 106 ( 5.9%)
  RND     : 101 ( 5.6%)
  SUB     :  12 ( 0.7%)
  AND     :  10 ( 0.6%)
  OR      :   9 ( 0.5%)
  SHR     :   7 ( 0.4%)
  XOR     :   6 ( 0.3%)
  SUBN    :   5 ( 0.3%)
  SHL     :   4 ( 0.2%)

Memory Operations: 349 (19.5%)
Arithmetic Operations: 166 (9.3%)
