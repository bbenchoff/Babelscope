
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B6999D01_I12664_C1001_f5e6caac1fd8.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 6999
Instance: 12664
Direction: ascending
Final Array: [0, 1, 6, 86, 89, 153, 198, 212]
Operations: R:0 W:11 C:19 S:12

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 108
Sort Array References:
  $212: LD I, $2B2 ; Load 2B2 into I
  $230: LD I, $9AA ; Load 9AA into I
  $234: LD I, $38D ; Load 38D into I
  $254: LD I, $FCA ; Load FCA into I
  $286: LD I, $C7D ; Load C7D into I
  $288: LD I, $4D5 ; Load 4D5 into I
  $2A8: LD I, $FA3 ; Load FA3 into I
  $2D4: LD I, $9FC ; Load 9FC into I
  $2DE: LD I, $848 ; Load 848 into I
  $30A: LD I, $8C3 ; Load 8C3 into I
  $324: LD I, $406 ; Load 406 into I
  $360: LD I, $4DC ; Load 4DC into I
  $364: LD I, $1EC ; Load 1EC into I
  $368: LD I, $5A9 ; Load 5A9 into I
  $38E: LD I, $0FF ; Load 0FF into I
  $3A4: LD I, $68C ; Load 68C into I
  $3AC: LD I, $B11 ; Load B11 into I
  $3AE: LD I, $1EB ; Load 1EB into I
  $3EA: LD I, $F0C ; Load F0C into I
  $44A: LD I, $CD0 ; Load CD0 into I
  $48A: LD I, $ADB ; Load ADB into I
  $4FE: LD I, $80F ; Load 80F into I
  $502: LD I, $5FF ; Load 5FF into I
  $534: LD I, $B4C ; Load B4C into I
  $56E: LD I, $A2F ; Load A2F into I
  $594: LD I, $FB1 ; Load FB1 into I
  $604: LD I, $2A5 ; Load 2A5 into I
  $640: LD I, $BDA ; Load BDA into I
  $642: LD I, $248 ; Load 248 into I
  $65A: LD I, $C84 ; Load C84 into I
  $666: LD I, $B66 ; Load B66 into I
  $67E: LD I, $1ED ; Load 1ED into I
  $686: LD I, $93F ; Load 93F into I
  $698: LD I, $A29 ; Load A29 into I
  $6A2: LD I, $D6B ; Load D6B into I
  $6CA: LD I, $979 ; Load 979 into I
  $6D0: LD I, $37A ; Load 37A into I
  $6F2: LD I, $02D ; Load 02D into I
  $6FC: LD I, $3FC ; Load 3FC into I
  $70C: LD I, $53D ; Load 53D into I
  $750: LD I, $CEE ; Load CEE into I
  $78E: LD I, $B18 ; Load B18 into I
  $7DA: LD I, $8C0 ; Load 8C0 into I
  $800: LD I, $D1F ; Load D1F into I
  $856: LD I, $67F ; Load 67F into I
  $868: LD I, $9B0 ; Load 9B0 into I
  $87A: LD I, $2C8 ; Load 2C8 into I
  $894: LD I, $0B2 ; Load 0B2 into I
  $89E: LD I, $2F8 ; Load 2F8 into I
  $8DE: LD I, $FF7 ; Load FF7 into I
  $910: LD I, $39A ; Load 39A into I
  $940: LD I, $236 ; Load 236 into I
  $944: LD I, $676 ; Load 676 into I
  $974: LD I, $8C9 ; Load 8C9 into I
  $980: LD I, $038 ; Load 038 into I
  $9A0: LD I, $CAF ; Load CAF into I
  $9B6: LD I, $946 ; Load 946 into I
  $9C4: LD I, $C0C ; Load C0C into I
  $9D4: LD I, $E96 ; Load E96 into I
  $9F4: LD I, $E42 ; Load E42 into I
  $A02: LD I, $068 ; Load 068 into I
  $A56: LD I, $74A ; Load 74A into I
  $A66: LD I, $A96 ; Load A96 into I
  $AAC: LD I, $9DC ; Load 9DC into I
  $AC2: LD I, $E92 ; Load E92 into I
  $AEA: LD I, $FAF ; Load FAF into I
  $AEC: LD I, $5BA ; Load 5BA into I
  $B1A: LD I, $5D4 ; Load 5D4 into I
  $B6E: LD I, $FD4 ; Load FD4 into I
  $B8C: LD I, $DA4 ; Load DA4 into I
  $B94: LD I, $99A ; Load 99A into I
  $BA4: LD I, $A49 ; Load A49 into I
  $BAA: ADD I, V6 ; I ADDRESS MANIPULATION
  $BCA: LD I, $808 ; Load 808 into I
  $BD2: LD I, $841 ; Load 841 into I
  $BE4: LD I, $D33 ; Load D33 into I
  $C0E: LD I, $B41 ; Load B41 into I
  $C40: LD I, $ECF ; Load ECF into I
  $C6A: LD I, $F82 ; Load F82 into I
  $C8C: LD I, $CEE ; Load CEE into I
  $C90: LD I, $D50 ; Load D50 into I
  $CB6: LD I, $B64 ; Load B64 into I
  $CEE: LD I, $014 ; Load 014 into I
  $D06: LD I, $C33 ; Load C33 into I
  $D08: LD I, $32D ; Load 32D into I
  $D28: LD I, $273 ; Load 273 into I
  $D66: LD I, $9DC ; Load 9DC into I
  $D6C: LD I, $11C ; Load 11C into I
  $D98: LD I, $829 ; Load 829 into I
  $DA6: LD I, $0AB ; Load 0AB into I
  $DAC: LD I, $6ED ; Load 6ED into I
  $DB0: LD I, $5B1 ; Load 5B1 into I
  $E12: LD I, $C3B ; Load C3B into I
  $E20: LD I, $CFE ; Load CFE into I
  $E42: LD I, $171 ; Load 171 into I
  $E4E: LD I, $4D3 ; Load 4D3 into I
  $E50: LD I, $A48 ; Load A48 into I
  $EE2: LD I, $EE3 ; Load EE3 into I
  $F22: LD I, $C15 ; Load C15 into I
  $F42: LD I, $B25 ; Load B25 into I
  $F70: LD I, $3DF ; Load 3DF into I
  $F78: LD I, $2E9 ; Load 2E9 into I
  $F82: LD I, $D25 ; Load D25 into I
  $F86: LD I, $73F ; Load 73F into I
  $F8C: LD I, $10E ; Load 10E into I
  $F9C: LD I, $BAE ; Load BAE into I
  $FA6: LD I, $DF6 ; Load DF6 into I
  $FF4: LD I, $62B ; Load 62B into I

CONTROL FLOW ANALYSIS:
Jumps: 216
Calls: 120
Branches: 237
Loops: 119
Loop Structures:
  $296 -> $009 (backward jump)
  $2FC -> $0CC (backward jump)
  $320 -> $0EF (backward jump)
  $366 -> $2A0 (backward jump)
  $36C -> $036 (backward jump)
  $42E -> $061 (backward jump)
  $44C -> $0B1 (backward jump)
  $510 -> $443 (backward jump)
  $596 -> $313 (backward jump)
  $5AA -> $550 (backward jump)
  $5DE -> $368 (backward jump)
  $620 -> $39E (backward jump)
  $628 -> $3B9 (backward jump)
  $62A -> $1C9 (backward jump)
  $648 -> $596 (backward jump)
  $670 -> $306 (backward jump)
  $68A -> $008 (backward jump)
  $6A4 -> $340 (backward jump)
  $6B6 -> $177 (backward jump)
  $71C -> $1E6 (backward jump)
  $726 -> $1D8 (backward jump)
  $75E -> $3EB (backward jump)
  $762 -> $198 (backward jump)
  $774 -> $156 (backward jump)
  $776 -> $4D1 (backward jump)
  $77A -> $651 (backward jump)
  $78A -> $39F (backward jump)
  $7BC -> $516 (backward jump)
  $7CE -> $16B (backward jump)
  $7E0 -> $26C (backward jump)
  $7F0 -> $169 (backward jump)
  $824 -> $590 (backward jump)
  $8AA -> $6BD (backward jump)
  $8BA -> $5F2 (backward jump)
  $8D4 -> $5A9 (backward jump)
  $8F8 -> $0E3 (backward jump)
  $90C -> $6DF (backward jump)
  $95C -> $75D (backward jump)
  $972 -> $0C6 (backward jump)
  $984 -> $2C7 (backward jump)
  $996 -> $03C (backward jump)
  $99A -> $277 (backward jump)
  $99E -> $873 (backward jump)
  $9AC -> $217 (backward jump)
  $9BC -> $7B4 (backward jump)
  $9CA -> $687 (backward jump)
  $9EA -> $421 (backward jump)
  $9FC -> $357 (backward jump)
  $A06 -> $697 (backward jump)
  $A2C -> $30A (backward jump)
  $A2E -> $0F7 (backward jump)
  $A3C -> $935 (backward jump)
  $A6C -> $32F (backward jump)
  $ABC -> $1CC (backward jump)
  $ACA -> $42A (backward jump)
  $ADC -> $55B (backward jump)
  $AFA -> $8D6 (backward jump)
  $B26 -> $591 (backward jump)
  $B2A -> $736 (backward jump)
  $B2E -> $9CE (backward jump)
  $B4E -> $A0F (backward jump)
  $B74 -> $B64 (backward jump)
  $B90 -> $A3F (backward jump)
  $BBE -> $0E1 (backward jump)
  $BC8 -> $3F8 (backward jump)
  $BCC -> $988 (backward jump)
  $BCE -> $79F (backward jump)
  $BEE -> $A15 (backward jump)
  $BF8 -> $9C3 (backward jump)
  $C16 -> $3DD (backward jump)
  $C38 -> $5CF (backward jump)
  $C3A -> $9C3 (backward jump)
  $C46 -> $9A0 (backward jump)
  $C60 -> $8CB (backward jump)
  $C72 -> $975 (backward jump)
  $C82 -> $954 (backward jump)
  $CAA -> $3CE (backward jump)
  $CC0 -> $60E (backward jump)
  $CC4 -> $012 (backward jump)
  $CE2 -> $C1F (backward jump)
  $D18 -> $9CA (backward jump)
  $D1E -> $B35 (backward jump)
  $D56 -> $170 (backward jump)
  $D5C -> $6D2 (backward jump)
  $D68 -> $C60 (backward jump)
  $D82 -> $B4F (backward jump)
  $D8A -> $3C2 (backward jump)
  $DA0 -> $B9A (backward jump)
  $DB4 -> $95D (backward jump)
  $DBA -> $D0B (backward jump)
  $DBE -> $8F3 (backward jump)
  $DE2 -> $69B (backward jump)
  $DF2 -> $1F5 (backward jump)
  $E0A -> $5C9 (backward jump)
  $E0E -> $CB8 (backward jump)
  $E2A -> $A9F (backward jump)
  $E34 -> $74E (backward jump)
  $E44 -> $5EB (backward jump)
  $E48 -> $A4C (backward jump)
  $E58 -> $7A5 (backward jump)
  $E6E -> $33E (backward jump)
  $E7A -> $276 (backward jump)
  $EA4 -> $311 (backward jump)
  $EAC -> $133 (backward jump)
  $EBE -> $19F (backward jump)
  $F06 -> $ABD (backward jump)
  $F0C -> $2F9 (backward jump)
  $F20 -> $DEE (backward jump)
  $F2C -> $5DE (backward jump)
  $F34 -> $D78 (backward jump)
  $F3E -> $107 (backward jump)
  $F48 -> $B70 (backward jump)
  $F6E -> $AF6 (backward jump)
  $F90 -> $B31 (backward jump)
  $FAC -> $374 (backward jump)
  $FB6 -> $EDE (backward jump)
  $FBE -> $BA7 (backward jump)
  $FDA -> $53A (backward jump)
  $FFC -> $2BF (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $C046   RND      V0, #46         ; V0 = random & 46
$202    $33B3   SE       V3, #B3         ; Skip if V3 == 179
$204    $F6BF   UNKNOWN  F6BF            ; Unknown Fxxx instruction
$206    $83E5   SUB      V3, VE          ; V3 -= VE, VF = !borrow
$208    $6CF5   LD       VC, #F5         ; Load 245 into VC
$20A    $FFB8   UNKNOWN  FFB8            ; Unknown Fxxx instruction
$20C    $C661   RND      V6, #61         ; V6 = random & 61
$20E    $52AF   UNKNOWN  $52AF           ; Unknown 5xxx instruction
$210    $1DF9   JP       $DF9            ; Jump to DF9
$212    $A2B2   LD       I, $2B2         ; Load 2B2 into I
$214    $4238   SNE      V2, #38         ; Skip if V2 != 56
$216    $36AE   SE       V6, #AE         ; Skip if V6 == 174
$218    $9F83   UNKNOWN  $9F83           ; Unknown 9xxx instruction
$21A    $BC25   JP       V0, $C25        ; Jump to V0 + C25
$21C    $1DC6   JP       $DC6            ; Jump to DC6
$21E    $9544   UNKNOWN  $9544           ; Unknown 9xxx instruction
$220    $B3DF   JP       V0, $3DF        ; Jump to V0 + 3DF
$222    $E3A3   UNKNOWN  $E3A3           ; Unknown Exxx instruction
$224    $85CC   UNKNOWN  85CC            ; Unknown 8xxx instruction
$226    $CA4F   RND      VA, #4F         ; VA = random & 4F
$228    $7F43   ADD      VF, #43         ; Add 67 to VF
$22A    $3DD3   SE       VD, #D3         ; Skip if VD == 211
$22C    $4D61   SNE      VD, #61         ; Skip if VD != 97
$22E    $2B1C   CALL     $B1C            ; Call subroutine at B1C
$230    $A9AA   LD       I, $9AA         ; Load 9AA into I
$232    $6BC1   LD       VB, #C1         ; Load 193 into VB
$234    $A38D   LD       I, $38D         ; Load 38D into I
$236    $5EA6   UNKNOWN  $5EA6           ; Unknown 5xxx instruction
$238    $EF49   UNKNOWN  $EF49           ; Unknown Exxx instruction
$23A    $E385   UNKNOWN  $E385           ; Unknown Exxx instruction
$23C    $FFF8   UNKNOWN  FFF8            ; Unknown Fxxx instruction
$23E    $0DEB   SYS      $DEB            ; System call to DEB
$240    $711B   ADD      V1, #1B         ; Add 27 to V1
$242    $C95D   RND      V9, #5D         ; V9 = random & 5D
$244    $49FB   SNE      V9, #FB         ; Skip if V9 != 251
$246    $D44C   DRW      V4, V4, #C      ; Draw 12-byte sprite at V4, V4
$248    $25B4   CALL     $5B4            ; Call subroutine at 5B4
$24A    $6FC5   LD       VF, #C5         ; Load 197 into VF
$24C    $F307   LD       V3, DT          ; V3 = delay timer
$24E    $3203   SE       V2, #03         ; Skip if V2 == 3
$250    $E2D7   UNKNOWN  $E2D7           ; Unknown Exxx instruction
$252    $281A   CALL     $81A            ; Call subroutine at 81A
$254    $AFCA   LD       I, $FCA         ; Load FCA into I
$256    $95C6   UNKNOWN  $95C6           ; Unknown 9xxx instruction
$258    $9E98   UNKNOWN  $9E98           ; Unknown 9xxx instruction
$25A    $80B9   UNKNOWN  80B9            ; Unknown 8xxx instruction
$25C    $488B   SNE      V8, #8B         ; Skip if V8 != 139
$25E    $CD53   RND      VD, #53         ; VD = random & 53
$260    $D898   DRW      V8, V9, #8      ; Draw 8-byte sprite at V8, V9
$262    $9D8C   UNKNOWN  $9D8C           ; Unknown 9xxx instruction
$264    $9FF8   UNKNOWN  $9FF8           ; Unknown 9xxx instruction
$266    $0D9B   SYS      $D9B            ; System call to D9B
$268    $027F   SYS      $27F            ; System call to 27F
$26A    $FDBA   UNKNOWN  FDBA            ; Unknown Fxxx instruction
$26C    $C86E   RND      V8, #6E         ; V8 = random & 6E
$26E    $48D4   SNE      V8, #D4         ; Skip if V8 != 212
$270    $33C0   SE       V3, #C0         ; Skip if V3 == 192
$272    $E3B6   UNKNOWN  $E3B6           ; Unknown Exxx instruction
$274    $06E8   SYS      $6E8            ; System call to 6E8
$276    $6CFD   LD       VC, #FD         ; Load 253 into VC
$278    $43C2   SNE      V3, #C2         ; Skip if V3 != 194
$27A    $C8B3   RND      V8, #B3         ; V8 = random & B3
$27C    $2DBE   CALL     $DBE            ; Call subroutine at DBE
$27E    $3356   SE       V3, #56         ; Skip if V3 == 86
$280    $E2B5   UNKNOWN  $E2B5           ; Unknown Exxx instruction
$282    $3A48   SE       VA, #48         ; Skip if VA == 72
$284    $6B2F   LD       VB, #2F         ; Load 47 into VB
$286    $AC7D   LD       I, $C7D         ; Load C7D into I
$288    $A4D5   LD       I, $4D5         ; Load 4D5 into I
$28A    $B8AC   JP       V0, $8AC        ; Jump to V0 + 8AC
$28C    $73BC   ADD      V3, #BC         ; Add 188 to V3
$28E    $BD24   JP       V0, $D24        ; Jump to V0 + D24
$290    $2143   CALL     $143            ; Call subroutine at 143
$292    $183D   JP       $83D            ; Jump to 83D
$294    $ECA3   UNKNOWN  $ECA3           ; Unknown Exxx instruction
$296    $1009   JP       $009            ; Jump to 009
$298    $4A2A   SNE      VA, #2A         ; Skip if VA != 42
$29A    $8CA0   LD       VC, VA          ; VC = VA
$29C    $8733   XOR      V7, V3          ; V7 ^= V3
$29E    $38C8   SE       V8, #C8         ; Skip if V8 == 200
$2A0    $489B   SNE      V8, #9B         ; Skip if V8 != 155
$2A2    $6B0C   LD       VB, #0C         ; Load 12 into VB
$2A4    $E229   UNKNOWN  $E229           ; Unknown Exxx instruction
$2A6    $9E9B   UNKNOWN  $9E9B           ; Unknown 9xxx instruction
$2A8    $AFA3   LD       I, $FA3         ; Load FA3 into I
$2AA    $4690   SNE      V6, #90         ; Skip if V6 != 144
$2AC    $0EEC   SYS      $EEC            ; System call to EEC
$2AE    $46BD   SNE      V6, #BD         ; Skip if V6 != 189
$2B0    $C443   RND      V4, #43         ; V4 = random & 43
$2B2    $0EC6   SYS      $EC6            ; System call to EC6
$2B4    $C9C2   RND      V9, #C2         ; V9 = random & C2
$2B6    $1635   JP       $635            ; Jump to 635
$2B8    $861F   UNKNOWN  861F            ; Unknown 8xxx instruction
$2BA    $7CAA   ADD      VC, #AA         ; Add 170 to VC
$2BC    $17CA   JP       $7CA            ; Jump to 7CA
$2BE    $4AEC   SNE      VA, #EC         ; Skip if VA != 236
$2C0    $2CF1   CALL     $CF1            ; Call subroutine at CF1
$2C2    $4394   SNE      V3, #94         ; Skip if V3 != 148
$2C4    $BE62   JP       V0, $E62        ; Jump to V0 + E62
$2C6    $FD24   UNKNOWN  FD24            ; Unknown Fxxx instruction
$2C8    $9EF6   UNKNOWN  $9EF6           ; Unknown 9xxx instruction
$2CA    $6CF1   LD       VC, #F1         ; Load 241 into VC
$2CC    $93EB   UNKNOWN  $93EB           ; Unknown 9xxx instruction
$2CE    $1CC0   JP       $CC0            ; Jump to CC0
$2D0    $CF7F   RND      VF, #7F         ; VF = random & 7F
$2D2    $1FD3   JP       $FD3            ; Jump to FD3
$2D4    $A9FC   LD       I, $9FC         ; Load 9FC into I
$2D6    $F493   UNKNOWN  F493            ; Unknown Fxxx instruction
$2D8    $E5C5   UNKNOWN  $E5C5           ; Unknown Exxx instruction
$2DA    $BD37   JP       V0, $D37        ; Jump to V0 + D37
$2DC    $194E   JP       $94E            ; Jump to 94E
$2DE    $A848   LD       I, $848         ; Load 848 into I
$2E0    $CB8B   RND      VB, #8B         ; VB = random & 8B
$2E2    $9A4F   UNKNOWN  $9A4F           ; Unknown 9xxx instruction
$2E4    $B9B2   JP       V0, $9B2        ; Jump to V0 + 9B2
$2E6    $53C8   UNKNOWN  $53C8           ; Unknown 5xxx instruction
$2E8    $279B   CALL     $79B            ; Call subroutine at 79B
$2EA    $D7F6   DRW      V7, VF, #6      ; Draw 6-byte sprite at V7, VF
$2EC    $4740   SNE      V7, #40         ; Skip if V7 != 64
$2EE    $40A3   SNE      V0, #A3         ; Skip if V0 != 163
$2F0    $B6EB   JP       V0, $6EB        ; Jump to V0 + 6EB
$2F2    $FA96   UNKNOWN  FA96            ; Unknown Fxxx instruction
$2F4    $7846   ADD      V8, #46         ; Add 70 to V8
$2F6    $9873   UNKNOWN  $9873           ; Unknown 9xxx instruction
$2F8    $490E   SNE      V9, #0E         ; Skip if V9 != 14
$2FA    $E66D   UNKNOWN  $E66D           ; Unknown Exxx instruction
$2FC    $B0CC   JP       V0, $0CC        ; Jump to V0 + 0CC
$2FE    $736D   ADD      V3, #6D         ; Add 109 to V3
$300    $0001   SYS      $001            ; System call to 001
$302    $0656   SYS      $656            ; System call to 656
$304    $5999   UNKNOWN  $5999           ; Unknown 5xxx instruction
$306    $C6D4   RND      V6, #D4         ; V6 = random & D4
$308    $860E   SHL      V6              ; V6 <<= 1, VF = MSB
$30A    $A8C3   LD       I, $8C3         ; Load 8C3 into I
$30C    $9628   UNKNOWN  $9628           ; Unknown 9xxx instruction
$30E    $547B   UNKNOWN  $547B           ; Unknown 5xxx instruction
$310    $7E3A   ADD      VE, #3A         ; Add 58 to VE
$312    $EC70   UNKNOWN  $EC70           ; Unknown Exxx instruction
$314    $2286   CALL     $286            ; Call subroutine at 286
$316    $EAF5   UNKNOWN  $EAF5           ; Unknown Exxx instruction
$318    $9E28   UNKNOWN  $9E28           ; Unknown 9xxx instruction
$31A    $26EE   CALL     $6EE            ; Call subroutine at 6EE
$31C    $8AD4   ADD      VA, VD          ; VA += VD, VF = carry
$31E    $8672   AND      V6, V7          ; V6 &= V7
$320    $B0EF   JP       V0, $0EF        ; Jump to V0 + 0EF
$322    $9F97   UNKNOWN  $9F97           ; Unknown 9xxx instruction
$324    $A406   LD       I, $406         ; Load 406 into I
$326    $EB07   UNKNOWN  $EB07           ; Unknown Exxx instruction
$328    $23E8   CALL     $3E8            ; Call subroutine at 3E8
$32A    $EA18   UNKNOWN  $EA18           ; Unknown Exxx instruction
$32C    $DB48   DRW      VB, V4, #8      ; Draw 8-byte sprite at VB, V4
$32E    $FA66   UNKNOWN  FA66            ; Unknown Fxxx instruction
$330    $E28F   UNKNOWN  $E28F           ; Unknown Exxx instruction
$332    $3842   SE       V8, #42         ; Skip if V8 == 66
$334    $7BF6   ADD      VB, #F6         ; Add 246 to VB
$336    $9CA1   UNKNOWN  $9CA1           ; Unknown 9xxx instruction
$338    $EC24   UNKNOWN  $EC24           ; Unknown Exxx instruction
$33A    $290C   CALL     $90C            ; Call subroutine at 90C
$33C    $DBC8   DRW      VB, VC, #8      ; Draw 8-byte sprite at VB, VC
$33E    $EB07   UNKNOWN  $EB07           ; Unknown Exxx instruction
$340    $387A   SE       V8, #7A         ; Skip if V8 == 122
$342    $6721   LD       V7, #21         ; Load 33 into V7
$344    $7433   ADD      V4, #33         ; Add 51 to V4
$346    $C9EC   RND      V9, #EC         ; V9 = random & EC
$348    $04E5   SYS      $4E5            ; System call to 4E5
$34A    $89D0   LD       V9, VD          ; V9 = VD
$34C    $77B6   ADD      V7, #B6         ; Add 182 to V7
$34E    $D883   DRW      V8, V8, #3      ; Draw 3-byte sprite at V8, V8
$350    $1DD8   JP       $DD8            ; Jump to DD8
$352    $7F85   ADD      VF, #85         ; Add 133 to VF
$354    $EF13   UNKNOWN  $EF13           ; Unknown Exxx instruction
$356    $46C6   SNE      V6, #C6         ; Skip if V6 != 198
$358    $CDAC   RND      VD, #AC         ; VD = random & AC
$35A    $7002   ADD      V0, #02         ; Add 2 to V0
$35C    $D604   DRW      V6, V0, #4      ; Draw 4-byte sprite at V6, V0
$35E    $6EB2   LD       VE, #B2         ; Load 178 into VE
$360    $A4DC   LD       I, $4DC         ; Load 4DC into I
$362    $C63B   RND      V6, #3B         ; V6 = random & 3B
$364    $A1EC   LD       I, $1EC         ; Load 1EC into I
$366    $12A0   JP       $2A0            ; Jump to 2A0
$368    $A5A9   LD       I, $5A9         ; Load 5A9 into I
$36A    $CDBF   RND      VD, #BF         ; VD = random & BF
$36C    $B036   JP       V0, $036        ; Jump to V0 + 036
$36E    $8195   SUB      V1, V9          ; V1 -= V9, VF = !borrow
$370    $9476   UNKNOWN  $9476           ; Unknown 9xxx instruction
$372    $8D43   XOR      VD, V4          ; VD ^= V4
$374    $1E79   JP       $E79            ; Jump to E79
$376    $E667   UNKNOWN  $E667           ; Unknown Exxx instruction
$378    $7C4C   ADD      VC, #4C         ; Add 76 to VC
$37A    $3374   SE       V3, #74         ; Skip if V3 == 116
$37C    $4678   SNE      V6, #78         ; Skip if V6 != 120
$37E    $4DFE   SNE      VD, #FE         ; Skip if VD != 254
$380    $D4B9   DRW      V4, VB, #9      ; Draw 9-byte sprite at V4, VB
$382    $29D9   CALL     $9D9            ; Call subroutine at 9D9
$384    $9786   UNKNOWN  $9786           ; Unknown 9xxx instruction
$386    $8B91   OR       VB, V9          ; VB |= V9
$388    $ED9A   UNKNOWN  $ED9A           ; Unknown Exxx instruction
$38A    $C944   RND      V9, #44         ; V9 = random & 44
$38C    $FBF6   UNKNOWN  FBF6            ; Unknown Fxxx instruction
$38E    $A0FF   LD       I, $0FF         ; Load 0FF into I
$390    $630C   LD       V3, #0C         ; Load 12 into V3
$392    $46BC   SNE      V6, #BC         ; Skip if V6 != 188
$394    $2790   CALL     $790            ; Call subroutine at 790
$396    $2B8E   CALL     $B8E            ; Call subroutine at B8E
$398    $4F8F   SNE      VF, #8F         ; Skip if VF != 143
$39A    $38BB   SE       V8, #BB         ; Skip if V8 == 187
$39C    $5788   UNKNOWN  $5788           ; Unknown 5xxx instruction
$39E    $1F23   JP       $F23            ; Jump to F23
$3A0    $F9A9   UNKNOWN  F9A9            ; Unknown Fxxx instruction
$3A2    $17EA   JP       $7EA            ; Jump to 7EA
$3A4    $A68C   LD       I, $68C         ; Load 68C into I
$3A6    $0907   SYS      $907            ; System call to 907
$3A8    $D609   DRW      V6, V0, #9      ; Draw 9-byte sprite at V6, V0
$3AA    $280F   CALL     $80F            ; Call subroutine at 80F
$3AC    $AB11   LD       I, $B11         ; Load B11 into I
$3AE    $A1EB   LD       I, $1EB         ; Load 1EB into I
$3B0    $1B65   JP       $B65            ; Jump to B65
$3B2    $2311   CALL     $311            ; Call subroutine at 311
$3B4    $6573   LD       V5, #73         ; Load 115 into V5
$3B6    $03DC   SYS      $3DC            ; System call to 3DC
$3B8    $7756   ADD      V7, #56         ; Add 86 to V7
$3BA    $7369   ADD      V3, #69         ; Add 105 to V3
$3BC    $B65F   JP       V0, $65F        ; Jump to V0 + 65F
$3BE    $5392   UNKNOWN  $5392           ; Unknown 5xxx instruction
$3C0    $EF7E   UNKNOWN  $EF7E           ; Unknown Exxx instruction
$3C2    $E884   UNKNOWN  $E884           ; Unknown Exxx instruction
$3C4    $D35D   DRW      V3, V5, #D      ; Draw 13-byte sprite at V3, V5
$3C6    $1608   JP       $608            ; Jump to 608
$3C8    $2FBD   CALL     $FBD            ; Call subroutine at FBD
$3CA    $0BB1   SYS      $BB1            ; System call to BB1
$3CC    $4147   SNE      V1, #47         ; Skip if V1 != 71
$3CE    $9595   UNKNOWN  $9595           ; Unknown 9xxx instruction
$3D0    $DD9E   DRW      VD, V9, #E      ; Draw 14-byte sprite at VD, V9
$3D2    $8FBA   UNKNOWN  8FBA            ; Unknown 8xxx instruction
$3D4    $8E37   SUBN     VE, V3          ; VE = V3 - VE, VF = !borrow
$3D6    $7684   ADD      V6, #84         ; Add 132 to V6
$3D8    $C551   RND      V5, #51         ; V5 = random & 51
$3DA    $D305   DRW      V3, V0, #5      ; Draw 5-byte sprite at V3, V0
$3DC    $39D1   SE       V9, #D1         ; Skip if V9 == 209
$3DE    $6284   LD       V2, #84         ; Load 132 into V2
$3E0    $909F   UNKNOWN  $909F           ; Unknown 9xxx instruction
$3E2    $80AC   UNKNOWN  80AC            ; Unknown 8xxx instruction
$3E4    $9B02   UNKNOWN  $9B02           ; Unknown 9xxx instruction
$3E6    $9E38   UNKNOWN  $9E38           ; Unknown 9xxx instruction
$3E8    $45F3   SNE      V5, #F3         ; Skip if V5 != 243
$3EA    $AF0C   LD       I, $F0C         ; Load F0C into I
$3EC    $4BCD   SNE      VB, #CD         ; Skip if VB != 205
$3EE    $8547   SUBN     V5, V4          ; V5 = V4 - V5, VF = !borrow
$3F0    $B538   JP       V0, $538        ; Jump to V0 + 538
$3F2    $F74E   UNKNOWN  F74E            ; Unknown Fxxx instruction
$3F4    $9451   UNKNOWN  $9451           ; Unknown 9xxx instruction
$3F6    $3394   SE       V3, #94         ; Skip if V3 == 148
$3F8    $D776   DRW      V7, V7, #6      ; Draw 6-byte sprite at V7, V7
$3FA    $8BC4   ADD      VB, VC          ; VB += VC, VF = carry
$3FC    $8100   LD       V1, V0          ; V1 = V0
$3FE    $2059   CALL     $059            ; Call subroutine at 059
$400    $EF5E   UNKNOWN  $EF5E           ; Unknown Exxx instruction
$402    $3E1B   SE       VE, #1B         ; Skip if VE == 27
$404    $D7D8   DRW      V7, VD, #8      ; Draw 8-byte sprite at V7, VD
$406    $3945   SE       V9, #45         ; Skip if V9 == 69
$408    $D312   DRW      V3, V1, #2      ; Draw 2-byte sprite at V3, V1
$40A    $E512   UNKNOWN  $E512           ; Unknown Exxx instruction
$40C    $F297   UNKNOWN  F297            ; Unknown Fxxx instruction
$40E    $956E   UNKNOWN  $956E           ; Unknown 9xxx instruction
$410    $F561   UNKNOWN  F561            ; Unknown Fxxx instruction
$412    $CFF7   RND      VF, #F7         ; VF = random & F7
$414    $3E3A   SE       VE, #3A         ; Skip if VE == 58
$416    $F6AB   UNKNOWN  F6AB            ; Unknown Fxxx instruction
$418    $1E27   JP       $E27            ; Jump to E27
$41A    $1EF7   JP       $EF7            ; Jump to EF7
$41C    $4978   SNE      V9, #78         ; Skip if V9 != 120
$41E    $ED5E   UNKNOWN  $ED5E           ; Unknown Exxx instruction
$420    $E0C6   UNKNOWN  $E0C6           ; Unknown Exxx instruction
$422    $C9DE   RND      V9, #DE         ; V9 = random & DE
$424    $4913   SNE      V9, #13         ; Skip if V9 != 19
$426    $7066   ADD      V0, #66         ; Add 102 to V0
$428    $2BE4   CALL     $BE4            ; Call subroutine at BE4
$42A    $E984   UNKNOWN  $E984           ; Unknown Exxx instruction
$42C    $870E   SHL      V7              ; V7 <<= 1, VF = MSB
$42E    $1061   JP       $061            ; Jump to 061
$430    $72E3   ADD      V2, #E3         ; Add 227 to V2
$432    $C3FE   RND      V3, #FE         ; V3 = random & FE
$434    $3139   SE       V1, #39         ; Skip if V1 == 57
$436    $2E23   CALL     $E23            ; Call subroutine at E23
$438    $052E   SYS      $52E            ; System call to 52E
$43A    $00D7   SYS      $0D7            ; System call to 0D7
$43C    $8646   SHR      V6              ; V6 >>= 1, VF = LSB
$43E    $85CC   UNKNOWN  85CC            ; Unknown 8xxx instruction
$440    $2376   CALL     $376            ; Call subroutine at 376
$442    $9B95   UNKNOWN  $9B95           ; Unknown 9xxx instruction
$444    $DE86   DRW      VE, V8, #6      ; Draw 6-byte sprite at VE, V8
$446    $F500   UNKNOWN  F500            ; Unknown Fxxx instruction
$448    $E6B0   UNKNOWN  $E6B0           ; Unknown Exxx instruction
$44A    $ACD0   LD       I, $CD0         ; Load CD0 into I
$44C    $10B1   JP       $0B1            ; Jump to 0B1
$44E    $90CC   UNKNOWN  $90CC           ; Unknown 9xxx instruction
$450    $1BB6   JP       $BB6            ; Jump to BB6
$452    $9D38   UNKNOWN  $9D38           ; Unknown 9xxx instruction
$454    $C4C9   RND      V4, #C9         ; V4 = random & C9
$456    $318C   SE       V1, #8C         ; Skip if V1 == 140
$458    $3107   SE       V1, #07         ; Skip if V1 == 7
$45A    $E3AD   UNKNOWN  $E3AD           ; Unknown Exxx instruction
$45C    $3130   SE       V1, #30         ; Skip if V1 == 48
$45E    $C0C5   RND      V0, #C5         ; V0 = random & C5
$460    $9E4A   UNKNOWN  $9E4A           ; Unknown 9xxx instruction
$462    $489C   SNE      V8, #9C         ; Skip if V8 != 156
$464    $7228   ADD      V2, #28         ; Add 40 to V2
$466    $5663   UNKNOWN  $5663           ; Unknown 5xxx instruction
$468    $2930   CALL     $930            ; Call subroutine at 930
$46A    $D763   DRW      V7, V6, #3      ; Draw 3-byte sprite at V7, V6
$46C    $81E6   SHR      V1              ; V1 >>= 1, VF = LSB
$46E    $9118   UNKNOWN  $9118           ; Unknown 9xxx instruction
$470    $2446   CALL     $446            ; Call subroutine at 446
$472    $9139   UNKNOWN  $9139           ; Unknown 9xxx instruction
$474    $F58D   UNKNOWN  F58D            ; Unknown Fxxx instruction
$476    $486D   SNE      V8, #6D         ; Skip if V8 != 109
$478    $F4CC   UNKNOWN  F4CC            ; Unknown Fxxx instruction
$47A    $CE6C   RND      VE, #6C         ; VE = random & 6C
$47C    $F956   UNKNOWN  F956            ; Unknown Fxxx instruction
$47E    $2353   CALL     $353            ; Call subroutine at 353
$480    $D83D   DRW      V8, V3, #D      ; Draw 13-byte sprite at V8, V3
$482    $59A9   UNKNOWN  $59A9           ; Unknown 5xxx instruction
$484    $69C7   LD       V9, #C7         ; Load 199 into V9
$486    $18C7   JP       $8C7            ; Jump to 8C7
$488    $8D3D   UNKNOWN  8D3D            ; Unknown 8xxx instruction
$48A    $AADB   LD       I, $ADB         ; Load ADB into I
$48C    $E52E   UNKNOWN  $E52E           ; Unknown Exxx instruction
$48E    $6F22   LD       VF, #22         ; Load 34 into VF
$490    $DC38   DRW      VC, V3, #8      ; Draw 8-byte sprite at VC, V3
$492    $0870   SYS      $870            ; System call to 870
$494    $0842   SYS      $842            ; System call to 842
$496    $F09D   UNKNOWN  F09D            ; Unknown Fxxx instruction
$498    $2E98   CALL     $E98            ; Call subroutine at E98
$49A    $BB22   JP       V0, $B22        ; Jump to V0 + B22
$49C    $71E7   ADD      V1, #E7         ; Add 231 to V1
$49E    $68A7   LD       V8, #A7         ; Load 167 into V8
$4A0    $1D32   JP       $D32            ; Jump to D32
$4A2    $8CFF   UNKNOWN  8CFF            ; Unknown 8xxx instruction
$4A4    $CD61   RND      VD, #61         ; VD = random & 61
$4A6    $5DAF   UNKNOWN  $5DAF           ; Unknown 5xxx instruction
$4A8    $2B7A   CALL     $B7A            ; Call subroutine at B7A
$4AA    $71A5   ADD      V1, #A5         ; Add 165 to V1
$4AC    $1581   JP       $581            ; Jump to 581
$4AE    $0A6E   SYS      $A6E            ; System call to A6E
$4B0    $9D75   UNKNOWN  $9D75           ; Unknown 9xxx instruction
$4B2    $842E   SHL      V4              ; V4 <<= 1, VF = MSB
$4B4    $8F29   UNKNOWN  8F29            ; Unknown 8xxx instruction
$4B6    $9BDB   UNKNOWN  $9BDB           ; Unknown 9xxx instruction
$4B8    $8DC7   SUBN     VD, VC          ; VD = VC - VD, VF = !borrow
$4BA    $3E6B   SE       VE, #6B         ; Skip if VE == 107
$4BC    $6F3C   LD       VF, #3C         ; Load 60 into VF
$4BE    $0AF8   SYS      $AF8            ; System call to AF8
$4C0    $15DC   JP       $5DC            ; Jump to 5DC
$4C2    $C0DC   RND      V0, #DC         ; V0 = random & DC
$4C4    $56AE   UNKNOWN  $56AE           ; Unknown 5xxx instruction
$4C6    $F7F2   UNKNOWN  F7F2            ; Unknown Fxxx instruction
$4C8    $C192   RND      V1, #92         ; V1 = random & 92
$4CA    $FC47   UNKNOWN  FC47            ; Unknown Fxxx instruction
$4CC    $C65F   RND      V6, #5F         ; V6 = random & 5F
$4CE    $2065   CALL     $065            ; Call subroutine at 065
$4D0    $85C6   SHR      V5              ; V5 >>= 1, VF = LSB
$4D2    $FEBE   UNKNOWN  FEBE            ; Unknown Fxxx instruction
$4D4    $9931   UNKNOWN  $9931           ; Unknown 9xxx instruction
$4D6    $177B   JP       $77B            ; Jump to 77B
$4D8    $7020   ADD      V0, #20         ; Add 32 to V0
$4DA    $98BE   UNKNOWN  $98BE           ; Unknown 9xxx instruction
$4DC    $9507   UNKNOWN  $9507           ; Unknown 9xxx instruction
$4DE    $EE26   UNKNOWN  $EE26           ; Unknown Exxx instruction
$4E0    $7A4D   ADD      VA, #4D         ; Add 77 to VA
$4E2    $9180   SNE      V1, V8          ; Skip if V1 != V8
$4E4    $E6BC   UNKNOWN  $E6BC           ; Unknown Exxx instruction
$4E6    $58AD   UNKNOWN  $58AD           ; Unknown 5xxx instruction
$4E8    $5AE2   UNKNOWN  $5AE2           ; Unknown 5xxx instruction
$4EA    $55EA   UNKNOWN  $55EA           ; Unknown 5xxx instruction
$4EC    $C836   RND      V8, #36         ; V8 = random & 36
$4EE    $731E   ADD      V3, #1E         ; Add 30 to V3
$4F0    $07FA   SYS      $7FA            ; System call to 7FA
$4F2    $5FE4   UNKNOWN  $5FE4           ; Unknown 5xxx instruction
$4F4    $05D5   SYS      $5D5            ; System call to 5D5
$4F6    $EDD4   UNKNOWN  $EDD4           ; Unknown Exxx instruction
$4F8    $862A   UNKNOWN  862A            ; Unknown 8xxx instruction
$4FA    $0E19   SYS      $E19            ; System call to E19
$4FC    $ECEC   UNKNOWN  $ECEC           ; Unknown Exxx instruction
$4FE    $A80F   LD       I, $80F         ; Load 80F into I
$500    $5945   UNKNOWN  $5945           ; Unknown 5xxx instruction
$502    $A5FF   LD       I, $5FF         ; Load 5FF into I
$504    $DB62   DRW      VB, V6, #2      ; Draw 2-byte sprite at VB, V6
$506    $315A   SE       V1, #5A         ; Skip if V1 == 90
$508    $BE87   JP       V0, $E87        ; Jump to V0 + E87
$50A    $FC66   UNKNOWN  FC66            ; Unknown Fxxx instruction
$50C    $3673   SE       V6, #73         ; Skip if V6 == 115
$50E    $EE46   UNKNOWN  $EE46           ; Unknown Exxx instruction
$510    $B443   JP       V0, $443        ; Jump to V0 + 443
$512    $29EF   CALL     $9EF            ; Call subroutine at 9EF
$514    $2FD3   CALL     $FD3            ; Call subroutine at FD3
$516    $F7EA   UNKNOWN  F7EA            ; Unknown Fxxx instruction
$518    $2A30   CALL     $A30            ; Call subroutine at A30
$51A    $57A2   UNKNOWN  $57A2           ; Unknown 5xxx instruction
$51C    $2F23   CALL     $F23            ; Call subroutine at F23
$51E    $1DF6   JP       $DF6            ; Jump to DF6
$520    $F3D1   UNKNOWN  F3D1            ; Unknown Fxxx instruction
$522    $EF3B   UNKNOWN  $EF3B           ; Unknown Exxx instruction
$524    $8FD2   AND      VF, VD          ; VF &= VD
$526    $DA81   DRW      VA, V8, #1      ; Draw 1-byte sprite at VA, V8
$528    $9F18   UNKNOWN  $9F18           ; Unknown 9xxx instruction
$52A    $C40A   RND      V4, #0A         ; V4 = random & 0A
$52C    $2DA8   CALL     $DA8            ; Call subroutine at DA8
$52E    $C279   RND      V2, #79         ; V2 = random & 79
$530    $FAFC   UNKNOWN  FAFC            ; Unknown Fxxx instruction
$532    $6711   LD       V7, #11         ; Load 17 into V7
$534    $AB4C   LD       I, $B4C         ; Load B4C into I
$536    $1E54   JP       $E54            ; Jump to E54
$538    $D554   DRW      V5, V5, #4      ; Draw 4-byte sprite at V5, V5
$53A    $0456   SYS      $456            ; System call to 456
$53C    $E30C   UNKNOWN  $E30C           ; Unknown Exxx instruction
$53E    $63A7   LD       V3, #A7         ; Load 167 into V3
$540    $45E2   SNE      V5, #E2         ; Skip if V5 != 226
$542    $1DD1   JP       $DD1            ; Jump to DD1
$544    $E350   UNKNOWN  $E350           ; Unknown Exxx instruction
$546    $F19C   UNKNOWN  F19C            ; Unknown Fxxx instruction
$548    $5030   SE       V0, V3          ; Skip if V0 == V3
$54A    $2DD6   CALL     $DD6            ; Call subroutine at DD6
$54C    $2474   CALL     $474            ; Call subroutine at 474
$54E    $79EF   ADD      V9, #EF         ; Add 239 to V9
$550    $DB99   DRW      VB, V9, #9      ; Draw 9-byte sprite at VB, V9
$552    $F713   UNKNOWN  F713            ; Unknown Fxxx instruction
$554    $3EF3   SE       VE, #F3         ; Skip if VE == 243
$556    $8F56   SHR      VF              ; VF >>= 1, VF = LSB
$558    $5445   UNKNOWN  $5445           ; Unknown 5xxx instruction
$55A    $805F   UNKNOWN  805F            ; Unknown 8xxx instruction
$55C    $3287   SE       V2, #87         ; Skip if V2 == 135
$55E    $2F49   CALL     $F49            ; Call subroutine at F49
$560    $4AB4   SNE      VA, #B4         ; Skip if VA != 180
$562    $5DCB   UNKNOWN  $5DCB           ; Unknown 5xxx instruction
$564    $02E8   SYS      $2E8            ; System call to 2E8
$566    $8DCD   UNKNOWN  8DCD            ; Unknown 8xxx instruction
$568    $4529   SNE      V5, #29         ; Skip if V5 != 41
$56A    $6888   LD       V8, #88         ; Load 136 into V8
$56C    $BA5B   JP       V0, $A5B        ; Jump to V0 + A5B
$56E    $AA2F   LD       I, $A2F         ; Load A2F into I
$570    $2F87   CALL     $F87            ; Call subroutine at F87
$572    $3134   SE       V1, #34         ; Skip if V1 == 52
$574    $BA5B   JP       V0, $A5B        ; Jump to V0 + A5B
$576    $2AE1   CALL     $AE1            ; Call subroutine at AE1
$578    $E499   UNKNOWN  $E499           ; Unknown Exxx instruction
$57A    $67E1   LD       V7, #E1         ; Load 225 into V7
$57C    $DB33   DRW      VB, V3, #3      ; Draw 3-byte sprite at VB, V3
$57E    $5630   SE       V6, V3          ; Skip if V6 == V3
$580    $781F   ADD      V8, #1F         ; Add 31 to V8
$582    $95DD   UNKNOWN  $95DD           ; Unknown 9xxx instruction
$584    $0891   SYS      $891            ; System call to 891
$586    $5969   UNKNOWN  $5969           ; Unknown 5xxx instruction
$588    $6E5A   LD       VE, #5A         ; Load 90 into VE
$58A    $EE5C   UNKNOWN  $EE5C           ; Unknown Exxx instruction
$58C    $931C   UNKNOWN  $931C           ; Unknown 9xxx instruction
$58E    $F8DF   UNKNOWN  F8DF            ; Unknown Fxxx instruction
$590    $F208   UNKNOWN  F208            ; Unknown Fxxx instruction
$592    $FD3F   UNKNOWN  FD3F            ; Unknown Fxxx instruction
$594    $AFB1   LD       I, $FB1         ; Load FB1 into I
$596    $1313   JP       $313            ; Jump to 313
$598    $D9F2   DRW      V9, VF, #2      ; Draw 2-byte sprite at V9, VF
$59A    $029F   SYS      $29F            ; System call to 29F
$59C    $965F   UNKNOWN  $965F           ; Unknown 9xxx instruction
$59E    $583E   UNKNOWN  $583E           ; Unknown 5xxx instruction
$5A0    $1C9A   JP       $C9A            ; Jump to C9A
$5A2    $F8A4   UNKNOWN  F8A4            ; Unknown Fxxx instruction
$5A4    $041A   SYS      $41A            ; System call to 41A
$5A6    $0B8B   SYS      $B8B            ; System call to B8B
$5A8    $C39F   RND      V3, #9F         ; V3 = random & 9F
$5AA    $1550   JP       $550            ; Jump to 550
$5AC    $3517   SE       V5, #17         ; Skip if V5 == 23
$5AE    $80BB   UNKNOWN  80BB            ; Unknown 8xxx instruction
$5B0    $F9D4   UNKNOWN  F9D4            ; Unknown Fxxx instruction
$5B2    $92AE   UNKNOWN  $92AE           ; Unknown 9xxx instruction
$5B4    $9063   UNKNOWN  $9063           ; Unknown 9xxx instruction
$5B6    $36C8   SE       V6, #C8         ; Skip if V6 == 200
$5B8    $DC40   DRW      VC, V4, #0      ; Draw 0-byte sprite at VC, V4
$5BA    $EF85   UNKNOWN  $EF85           ; Unknown Exxx instruction
$5BC    $CC06   RND      VC, #06         ; VC = random & 06
$5BE    $530D   UNKNOWN  $530D           ; Unknown 5xxx instruction
$5C0    $88DD   UNKNOWN  88DD            ; Unknown 8xxx instruction
$5C2    $C95F   RND      V9, #5F         ; V9 = random & 5F
$5C4    $EAE7   UNKNOWN  $EAE7           ; Unknown Exxx instruction
$5C6    $1A3B   JP       $A3B            ; Jump to A3B
$5C8    $1688   JP       $688            ; Jump to 688
$5CA    $CBB2   RND      VB, #B2         ; VB = random & B2
$5CC    $C32A   RND      V3, #2A         ; V3 = random & 2A
$5CE    $4C53   SNE      VC, #53         ; Skip if VC != 83
$5D0    $7249   ADD      V2, #49         ; Add 73 to V2
$5D2    $66AB   LD       V6, #AB         ; Load 171 into V6
$5D4    $E33E   UNKNOWN  $E33E           ; Unknown Exxx instruction
$5D6    $15F3   JP       $5F3            ; Jump to 5F3
$5D8    $1AAD   JP       $AAD            ; Jump to AAD
$5DA    $5747   UNKNOWN  $5747           ; Unknown 5xxx instruction
$5DC    $4897   SNE      V8, #97         ; Skip if V8 != 151
$5DE    $B368   JP       V0, $368        ; Jump to V0 + 368
$5E0    $9FDE   UNKNOWN  $9FDE           ; Unknown 9xxx instruction
$5E2    $D9C3   DRW      V9, VC, #3      ; Draw 3-byte sprite at V9, VC
$5E4    $1993   JP       $993            ; Jump to 993
$5E6    $85BF   UNKNOWN  85BF            ; Unknown 8xxx instruction
$5E8    $9995   UNKNOWN  $9995           ; Unknown 9xxx instruction
$5EA    $9286   UNKNOWN  $9286           ; Unknown 9xxx instruction
$5EC    $8C61   OR       VC, V6          ; VC |= V6
$5EE    $2F1B   CALL     $F1B            ; Call subroutine at F1B
$5F0    $3FC1   SE       VF, #C1         ; Skip if VF == 193
$5F2    $900B   UNKNOWN  $900B           ; Unknown 9xxx instruction
$5F4    $CAEA   RND      VA, #EA         ; VA = random & EA
$5F6    $DAF5   DRW      VA, VF, #5      ; Draw 5-byte sprite at VA, VF
$5F8    $5B69   UNKNOWN  $5B69           ; Unknown 5xxx instruction
$5FA    $FFE7   UNKNOWN  FFE7            ; Unknown Fxxx instruction
$5FC    $98DB   UNKNOWN  $98DB           ; Unknown 9xxx instruction
$5FE    $0D16   SYS      $D16            ; System call to D16
$600    $79D2   ADD      V9, #D2         ; Add 210 to V9
$602    $CE0B   RND      VE, #0B         ; VE = random & 0B
$604    $A2A5   LD       I, $2A5         ; Load 2A5 into I
$606    $8A98   UNKNOWN  8A98            ; Unknown 8xxx instruction
$608    $8B0E   SHL      VB              ; VB <<= 1, VF = MSB
$60A    $C1BB   RND      V1, #BB         ; V1 = random & BB
$60C    $1A3C   JP       $A3C            ; Jump to A3C
$60E    $598F   UNKNOWN  $598F           ; Unknown 5xxx instruction
$610    $63F5   LD       V3, #F5         ; Load 245 into V3
$612    $F456   UNKNOWN  F456            ; Unknown Fxxx instruction
$614    $030E   SYS      $30E            ; System call to 30E
$616    $C26D   RND      V2, #6D         ; V2 = random & 6D
$618    $647A   LD       V4, #7A         ; Load 122 into V4
$61A    $3B3E   SE       VB, #3E         ; Skip if VB == 62
$61C    $DDD0   DRW      VD, VD, #0      ; Draw 0-byte sprite at VD, VD
$61E    $5874   UNKNOWN  $5874           ; Unknown 5xxx instruction
$620    $139E   JP       $39E            ; Jump to 39E
$622    $3956   SE       V9, #56         ; Skip if V9 == 86
$624    $75C6   ADD      V5, #C6         ; Add 198 to V5
$626    $7DE0   ADD      VD, #E0         ; Add 224 to VD
$628    $13B9   JP       $3B9            ; Jump to 3B9
$62A    $B1C9   JP       V0, $1C9        ; Jump to V0 + 1C9
$62C    $EAB0   UNKNOWN  $EAB0           ; Unknown Exxx instruction
$62E    $70DE   ADD      V0, #DE         ; Add 222 to V0
$630    $7C97   ADD      VC, #97         ; Add 151 to VC
$632    $9228   UNKNOWN  $9228           ; Unknown 9xxx instruction
$634    $33F7   SE       V3, #F7         ; Skip if V3 == 247
$636    $0391   SYS      $391            ; System call to 391
$638    $36B3   SE       V6, #B3         ; Skip if V6 == 179
$63A    $92A5   UNKNOWN  $92A5           ; Unknown 9xxx instruction
$63C    $7198   ADD      V1, #98         ; Add 152 to V1
$63E    $689D   LD       V8, #9D         ; Load 157 into V8
$640    $ABDA   LD       I, $BDA         ; Load BDA into I
$642    $A248   LD       I, $248         ; Load 248 into I
$644    $BD10   JP       V0, $D10        ; Jump to V0 + D10
$646    $054A   SYS      $54A            ; System call to 54A
$648    $B596   JP       V0, $596        ; Jump to V0 + 596
$64A    $1E2B   JP       $E2B            ; Jump to E2B
$64C    $6156   LD       V1, #56         ; Load 86 into V1
$64E    $4D0E   SNE      VD, #0E         ; Skip if VD != 14
$650    $1DFB   JP       $DFB            ; Jump to DFB
$652    $7C1A   ADD      VC, #1A         ; Add 26 to VC
$654    $9C2B   UNKNOWN  $9C2B           ; Unknown 9xxx instruction
$656    $2986   CALL     $986            ; Call subroutine at 986
$658    $D12A   DRW      V1, V2, #A      ; Draw 10-byte sprite at V1, V2
$65A    $AC84   LD       I, $C84         ; Load C84 into I
$65C    $34BB   SE       V4, #BB         ; Skip if V4 == 187
$65E    $B69D   JP       V0, $69D        ; Jump to V0 + 69D
$660    $BCC1   JP       V0, $CC1        ; Jump to V0 + CC1
$662    $CD48   RND      VD, #48         ; VD = random & 48
$664    $EAF2   UNKNOWN  $EAF2           ; Unknown Exxx instruction
$666    $AB66   LD       I, $B66         ; Load B66 into I
$668    $E2CF   UNKNOWN  $E2CF           ; Unknown Exxx instruction
$66A    $728B   ADD      V2, #8B         ; Add 139 to V2
$66C    $E1C0   UNKNOWN  $E1C0           ; Unknown Exxx instruction
$66E    $03B1   SYS      $3B1            ; System call to 3B1
$670    $1306   JP       $306            ; Jump to 306
$672    $BE74   JP       V0, $E74        ; Jump to V0 + E74
$674    $C9E5   RND      V9, #E5         ; V9 = random & E5
$676    $8EEB   UNKNOWN  8EEB            ; Unknown 8xxx instruction
$678    $5A69   UNKNOWN  $5A69           ; Unknown 5xxx instruction
$67A    $95BD   UNKNOWN  $95BD           ; Unknown 9xxx instruction
$67C    $6463   LD       V4, #63         ; Load 99 into V4
$67E    $A1ED   LD       I, $1ED         ; Load 1ED into I
$680    $FD10   UNKNOWN  FD10            ; Unknown Fxxx instruction
$682    $8D61   OR       VD, V6          ; VD |= V6
$684    $782D   ADD      V8, #2D         ; Add 45 to V8
$686    $A93F   LD       I, $93F         ; Load 93F into I
$688    $D0E9   DRW      V0, VE, #9      ; Draw 9-byte sprite at V0, VE
$68A    $B008   JP       V0, $008        ; Jump to V0 + 008
$68C    $4951   SNE      V9, #51         ; Skip if V9 != 81
$68E    $D40D   DRW      V4, V0, #D      ; Draw 13-byte sprite at V4, V0
$690    $3A0D   SE       VA, #0D         ; Skip if VA == 13
$692    $407F   SNE      V0, #7F         ; Skip if V0 != 127
$694    $7015   ADD      V0, #15         ; Add 21 to V0
$696    $4642   SNE      V6, #42         ; Skip if V6 != 66
$698    $AA29   LD       I, $A29         ; Load A29 into I
$69A    $9EB1   UNKNOWN  $9EB1           ; Unknown 9xxx instruction
$69C    $88B1   OR       V8, VB          ; V8 |= VB
$69E    $02C6   SYS      $2C6            ; System call to 2C6
$6A0    $3012   SE       V0, #12         ; Skip if V0 == 18
$6A2    $AD6B   LD       I, $D6B         ; Load D6B into I
$6A4    $1340   JP       $340            ; Jump to 340
$6A6    $DAC5   DRW      VA, VC, #5      ; Draw 5-byte sprite at VA, VC
$6A8    $6B5A   LD       VB, #5A         ; Load 90 into VB
$6AA    $1B61   JP       $B61            ; Jump to B61
$6AC    $8743   XOR      V7, V4          ; V7 ^= V4
$6AE    $7D1A   ADD      VD, #1A         ; Add 26 to VD
$6B0    $026C   SYS      $26C            ; System call to 26C
$6B2    $3A49   SE       VA, #49         ; Skip if VA == 73
$6B4    $8A4B   UNKNOWN  8A4B            ; Unknown 8xxx instruction
$6B6    $B177   JP       V0, $177        ; Jump to V0 + 177
$6B8    $4A24   SNE      VA, #24         ; Skip if VA != 36
$6BA    $609C   LD       V0, #9C         ; Load 156 into V0
$6BC    $6151   LD       V1, #51         ; Load 81 into V1
$6BE    $9863   UNKNOWN  $9863           ; Unknown 9xxx instruction
$6C0    $5888   UNKNOWN  $5888           ; Unknown 5xxx instruction
$6C2    $DA87   DRW      VA, V8, #7      ; Draw 7-byte sprite at VA, V8
$6C4    $829B   UNKNOWN  829B            ; Unknown 8xxx instruction
$6C6    $47F3   SNE      V7, #F3         ; Skip if V7 != 243
$6C8    $6EB3   LD       VE, #B3         ; Load 179 into VE
$6CA    $A979   LD       I, $979         ; Load 979 into I
$6CC    $64F2   LD       V4, #F2         ; Load 242 into V4
$6CE    $882E   SHL      V8              ; V8 <<= 1, VF = MSB
$6D0    $A37A   LD       I, $37A         ; Load 37A into I
$6D2    $9745   UNKNOWN  $9745           ; Unknown 9xxx instruction
$6D4    $F599   UNKNOWN  F599            ; Unknown Fxxx instruction
$6D6    $DC64   DRW      VC, V6, #4      ; Draw 4-byte sprite at VC, V6
$6D8    $4F3A   SNE      VF, #3A         ; Skip if VF != 58
$6DA    $0632   SYS      $632            ; System call to 632
$6DC    $84EE   SHL      V4              ; V4 <<= 1, VF = MSB
$6DE    $8428   UNKNOWN  8428            ; Unknown 8xxx instruction
$6E0    $3B02   SE       VB, #02         ; Skip if VB == 2
$6E2    $D7D4   DRW      V7, VD, #4      ; Draw 4-byte sprite at V7, VD
$6E4    $2838   CALL     $838            ; Call subroutine at 838
$6E6    $4DEF   SNE      VD, #EF         ; Skip if VD != 239
$6E8    $0F16   SYS      $F16            ; System call to F16
$6EA    $773B   ADD      V7, #3B         ; Add 59 to V7
$6EC    $63E8   LD       V3, #E8         ; Load 232 into V3
$6EE    $6F8F   LD       VF, #8F         ; Load 143 into VF
$6F0    $FE30   UNKNOWN  FE30            ; Unknown Fxxx instruction
$6F2    $A02D   LD       I, $02D         ; Load 02D into I
$6F4    $885B   UNKNOWN  885B            ; Unknown 8xxx instruction
$6F6    $4127   SNE      V1, #27         ; Skip if V1 != 39
$6F8    $E8FA   UNKNOWN  $E8FA           ; Unknown Exxx instruction
$6FA    $917A   UNKNOWN  $917A           ; Unknown 9xxx instruction
$6FC    $A3FC   LD       I, $3FC         ; Load 3FC into I
$6FE    $5135   UNKNOWN  $5135           ; Unknown 5xxx instruction
$700    $57CC   UNKNOWN  $57CC           ; Unknown 5xxx instruction
$702    $5006   UNKNOWN  $5006           ; Unknown 5xxx instruction
$704    $E387   UNKNOWN  $E387           ; Unknown Exxx instruction
$706    $E800   UNKNOWN  $E800           ; Unknown Exxx instruction
$708    $9DA5   UNKNOWN  $9DA5           ; Unknown 9xxx instruction
$70A    $DBEF   DRW      VB, VE, #F      ; Draw 15-byte sprite at VB, VE
$70C    $A53D   LD       I, $53D         ; Load 53D into I
$70E    $03ED   SYS      $3ED            ; System call to 3ED
$710    $9A92   UNKNOWN  $9A92           ; Unknown 9xxx instruction
$712    $2D0B   CALL     $D0B            ; Call subroutine at D0B
$714    $F7FF   UNKNOWN  F7FF            ; Unknown Fxxx instruction
$716    $47D7   SNE      V7, #D7         ; Skip if V7 != 215
$718    $7F2F   ADD      VF, #2F         ; Add 47 to VF
$71A    $8334   ADD      V3, V3          ; V3 += V3, VF = carry
$71C    $11E6   JP       $1E6            ; Jump to 1E6
$71E    $F339   UNKNOWN  F339            ; Unknown Fxxx instruction
$720    $9817   UNKNOWN  $9817           ; Unknown 9xxx instruction
$722    $277F   CALL     $77F            ; Call subroutine at 77F
$724    $1769   JP       $769            ; Jump to 769
$726    $11D8   JP       $1D8            ; Jump to 1D8
$728    $E899   UNKNOWN  $E899           ; Unknown Exxx instruction
$72A    $2840   CALL     $840            ; Call subroutine at 840
$72C    $7508   ADD      V5, #08         ; Add 8 to V5
$72E    $8BFC   UNKNOWN  8BFC            ; Unknown 8xxx instruction
$730    $F773   UNKNOWN  F773            ; Unknown Fxxx instruction
$732    $2770   CALL     $770            ; Call subroutine at 770
$734    $C1A4   RND      V1, #A4         ; V1 = random & A4
$736    $E0DF   UNKNOWN  $E0DF           ; Unknown Exxx instruction
$738    $42C3   SNE      V2, #C3         ; Skip if V2 != 195
$73A    $7B76   ADD      VB, #76         ; Add 118 to VB
$73C    $588A   UNKNOWN  $588A           ; Unknown 5xxx instruction
$73E    $C239   RND      V2, #39         ; V2 = random & 39
$740    $4383   SNE      V3, #83         ; Skip if V3 != 131
$742    $9ACB   UNKNOWN  $9ACB           ; Unknown 9xxx instruction
$744    $26EB   CALL     $6EB            ; Call subroutine at 6EB
$746    $FD67   UNKNOWN  FD67            ; Unknown Fxxx instruction
$748    $6A85   LD       VA, #85         ; Load 133 into VA
$74A    $2FA7   CALL     $FA7            ; Call subroutine at FA7
$74C    $3CDE   SE       VC, #DE         ; Skip if VC == 222
$74E    $9711   UNKNOWN  $9711           ; Unknown 9xxx instruction
$750    $ACEE   LD       I, $CEE         ; Load CEE into I
$752    $DCF4   DRW      VC, VF, #4      ; Draw 4-byte sprite at VC, VF
$754    $97E5   UNKNOWN  $97E5           ; Unknown 9xxx instruction
$756    $2CCD   CALL     $CCD            ; Call subroutine at CCD
$758    $5747   UNKNOWN  $5747           ; Unknown 5xxx instruction
$75A    $0A86   SYS      $A86            ; System call to A86
$75C    $E39B   UNKNOWN  $E39B           ; Unknown Exxx instruction
$75E    $B3EB   JP       V0, $3EB        ; Jump to V0 + 3EB
$760    $5EAB   UNKNOWN  $5EAB           ; Unknown 5xxx instruction
$762    $B198   JP       V0, $198        ; Jump to V0 + 198
$764    $540A   UNKNOWN  $540A           ; Unknown 5xxx instruction
$766    $D937   DRW      V9, V3, #7      ; Draw 7-byte sprite at V9, V3
$768    $07F4   SYS      $7F4            ; System call to 7F4
$76A    $02A8   SYS      $2A8            ; System call to 2A8
$76C    $381E   SE       V8, #1E         ; Skip if V8 == 30
$76E    $50AF   UNKNOWN  $50AF           ; Unknown 5xxx instruction
$770    $CA49   RND      VA, #49         ; VA = random & 49
$772    $2372   CALL     $372            ; Call subroutine at 372
$774    $B156   JP       V0, $156        ; Jump to V0 + 156
$776    $B4D1   JP       V0, $4D1        ; Jump to V0 + 4D1
$778    $9C72   UNKNOWN  $9C72           ; Unknown 9xxx instruction
$77A    $1651   JP       $651            ; Jump to 651
$77C    $C0F2   RND      V0, #F2         ; V0 = random & F2
$77E    $8DD1   OR       VD, VD          ; VD |= VD
$780    $F517   UNKNOWN  F517            ; Unknown Fxxx instruction
$782    $88FD   UNKNOWN  88FD            ; Unknown 8xxx instruction
$784    $1CEF   JP       $CEF            ; Jump to CEF
$786    $8241   OR       V2, V4          ; V2 |= V4
$788    $8116   SHR      V1              ; V1 >>= 1, VF = LSB
$78A    $139F   JP       $39F            ; Jump to 39F
$78C    $84A5   SUB      V4, VA          ; V4 -= VA, VF = !borrow
$78E    $AB18   LD       I, $B18         ; Load B18 into I
$790    $35E9   SE       V5, #E9         ; Skip if V5 == 233
$792    $0BC5   SYS      $BC5            ; System call to BC5
$794    $7076   ADD      V0, #76         ; Add 118 to V0
$796    $1DEA   JP       $DEA            ; Jump to DEA
$798    $0904   SYS      $904            ; System call to 904
$79A    $69E0   LD       V9, #E0         ; Load 224 into V9
$79C    $7843   ADD      V8, #43         ; Add 67 to V8
$79E    $F372   UNKNOWN  F372            ; Unknown Fxxx instruction
$7A0    $CA61   RND      VA, #61         ; VA = random & 61
$7A2    $CA32   RND      VA, #32         ; VA = random & 32
$7A4    $9753   UNKNOWN  $9753           ; Unknown 9xxx instruction
$7A6    $7C89   ADD      VC, #89         ; Add 137 to VC
$7A8    $94EE   UNKNOWN  $94EE           ; Unknown 9xxx instruction
$7AA    $92B8   UNKNOWN  $92B8           ; Unknown 9xxx instruction
$7AC    $5A84   UNKNOWN  $5A84           ; Unknown 5xxx instruction
$7AE    $F5F2   UNKNOWN  F5F2            ; Unknown Fxxx instruction
$7B0    $72D4   ADD      V2, #D4         ; Add 212 to V2
$7B2    $747C   ADD      V4, #7C         ; Add 124 to V4
$7B4    $2E79   CALL     $E79            ; Call subroutine at E79
$7B6    $75C7   ADD      V5, #C7         ; Add 199 to V5
$7B8    $9C36   UNKNOWN  $9C36           ; Unknown 9xxx instruction
$7BA    $1A43   JP       $A43            ; Jump to A43
$7BC    $1516   JP       $516            ; Jump to 516
$7BE    $7614   ADD      V6, #14         ; Add 20 to V6
$7C0    $2E80   CALL     $E80            ; Call subroutine at E80
$7C2    $4F63   SNE      VF, #63         ; Skip if VF != 99
$7C4    $E846   UNKNOWN  $E846           ; Unknown Exxx instruction
$7C6    $EBBB   UNKNOWN  $EBBB           ; Unknown Exxx instruction
$7C8    $ECCB   UNKNOWN  $ECCB           ; Unknown Exxx instruction
$7CA    $003B   SYS      $03B            ; System call to 03B
$7CC    $92E9   UNKNOWN  $92E9           ; Unknown 9xxx instruction
$7CE    $116B   JP       $16B            ; Jump to 16B
$7D0    $CF8E   RND      VF, #8E         ; VF = random & 8E
$7D2    $38A0   SE       V8, #A0         ; Skip if V8 == 160
$7D4    $CF95   RND      VF, #95         ; VF = random & 95
$7D6    $1941   JP       $941            ; Jump to 941
$7D8    $D662   DRW      V6, V6, #2      ; Draw 2-byte sprite at V6, V6
$7DA    $A8C0   LD       I, $8C0         ; Load 8C0 into I
$7DC    $BA4B   JP       V0, $A4B        ; Jump to V0 + A4B
$7DE    $2D93   CALL     $D93            ; Call subroutine at D93
$7E0    $B26C   JP       V0, $26C        ; Jump to V0 + 26C
$7E2    $8621   OR       V6, V2          ; V6 |= V2
$7E4    $8B36   SHR      VB              ; VB >>= 1, VF = LSB
$7E6    $55F3   UNKNOWN  $55F3           ; Unknown 5xxx instruction
$7E8    $5CF0   SE       VC, VF          ; Skip if VC == VF
$7EA    $D47F   DRW      V4, V7, #F      ; Draw 15-byte sprite at V4, V7
$7EC    $6ACD   LD       VA, #CD         ; Load 205 into VA
$7EE    $7EAF   ADD      VE, #AF         ; Add 175 to VE
$7F0    $1169   JP       $169            ; Jump to 169
$7F2    $92CE   UNKNOWN  $92CE           ; Unknown 9xxx instruction
$7F4    $8CA1   OR       VC, VA          ; VC |= VA
$7F6    $E8A9   UNKNOWN  $E8A9           ; Unknown Exxx instruction
$7F8    $F968   UNKNOWN  F968            ; Unknown Fxxx instruction
$7FA    $D1AD   DRW      V1, VA, #D      ; Draw 13-byte sprite at V1, VA
$7FC    $28B2   CALL     $8B2            ; Call subroutine at 8B2
$7FE    $5AC6   UNKNOWN  $5AC6           ; Unknown 5xxx instruction
$800    $AD1F   LD       I, $D1F         ; Load D1F into I
$802    $7764   ADD      V7, #64         ; Add 100 to V7
$804    $34E7   SE       V4, #E7         ; Skip if V4 == 231
$806    $7C83   ADD      VC, #83         ; Add 131 to VC
$808    $9680   SNE      V6, V8          ; Skip if V6 != V8
$80A    $D3E3   DRW      V3, VE, #3      ; Draw 3-byte sprite at V3, VE
$80C    $1EF4   JP       $EF4            ; Jump to EF4
$80E    $55DE   UNKNOWN  $55DE           ; Unknown 5xxx instruction
$810    $4802   SNE      V8, #02         ; Skip if V8 != 2
$812    $8D7C   UNKNOWN  8D7C            ; Unknown 8xxx instruction
$814    $F05A   UNKNOWN  F05A            ; Unknown Fxxx instruction
$816    $3CFA   SE       VC, #FA         ; Skip if VC == 250
$818    $604E   LD       V0, #4E         ; Load 78 into V0
$81A    $88FD   UNKNOWN  88FD            ; Unknown 8xxx instruction
$81C    $78AE   ADD      V8, #AE         ; Add 174 to V8
$81E    $1965   JP       $965            ; Jump to 965
$820    $EADC   UNKNOWN  $EADC           ; Unknown Exxx instruction
$822    $2D38   CALL     $D38            ; Call subroutine at D38
$824    $1590   JP       $590            ; Jump to 590
$826    $4B89   SNE      VB, #89         ; Skip if VB != 137
$828    $BBD3   JP       V0, $BD3        ; Jump to V0 + BD3
$82A    $19A0   JP       $9A0            ; Jump to 9A0
$82C    $B94B   JP       V0, $94B        ; Jump to V0 + 94B
$82E    $03DB   SYS      $3DB            ; System call to 3DB
$830    $5C09   UNKNOWN  $5C09           ; Unknown 5xxx instruction
$832    $B99F   JP       V0, $99F        ; Jump to V0 + 99F
$834    $8E75   SUB      VE, V7          ; VE -= V7, VF = !borrow
$836    $1BBA   JP       $BBA            ; Jump to BBA
$838    $542E   UNKNOWN  $542E           ; Unknown 5xxx instruction
$83A    $873F   UNKNOWN  873F            ; Unknown 8xxx instruction
$83C    $44B4   SNE      V4, #B4         ; Skip if V4 != 180
$83E    $F5EA   UNKNOWN  F5EA            ; Unknown Fxxx instruction
$840    $58B9   UNKNOWN  $58B9           ; Unknown 5xxx instruction
$842    $0592   SYS      $592            ; System call to 592
$844    $9F9C   UNKNOWN  $9F9C           ; Unknown 9xxx instruction
$846    $9E72   UNKNOWN  $9E72           ; Unknown 9xxx instruction
$848    $9C06   UNKNOWN  $9C06           ; Unknown 9xxx instruction
$84A    $57B6   UNKNOWN  $57B6           ; Unknown 5xxx instruction
$84C    $7285   ADD      V2, #85         ; Add 133 to V2
$84E    $6E66   LD       VE, #66         ; Load 102 into VE
$850    $7953   ADD      V9, #53         ; Add 83 to V9
$852    $C4EC   RND      V4, #EC         ; V4 = random & EC
$854    $C692   RND      V6, #92         ; V6 = random & 92
$856    $A67F   LD       I, $67F         ; Load 67F into I
$858    $D3FE   DRW      V3, VF, #E      ; Draw 14-byte sprite at V3, VF
$85A    $18E8   JP       $8E8            ; Jump to 8E8
$85C    $0DD2   SYS      $DD2            ; System call to DD2
$85E    $45C0   SNE      V5, #C0         ; Skip if V5 != 192
$860    $9F53   UNKNOWN  $9F53           ; Unknown 9xxx instruction
$862    $0C12   SYS      $C12            ; System call to C12
$864    $9842   UNKNOWN  $9842           ; Unknown 9xxx instruction
$866    $5679   UNKNOWN  $5679           ; Unknown 5xxx instruction
$868    $A9B0   LD       I, $9B0         ; Load 9B0 into I
$86A    $D701   DRW      V7, V0, #1      ; Draw 1-byte sprite at V7, V0
$86C    $4407   SNE      V4, #07         ; Skip if V4 != 7
$86E    $2022   CALL     $022            ; Call subroutine at 022
$870    $478D   SNE      V7, #8D         ; Skip if V7 != 141
$872    $6A43   LD       VA, #43         ; Load 67 into VA
$874    $D209   DRW      V2, V0, #9      ; Draw 9-byte sprite at V2, V0
$876    $CE31   RND      VE, #31         ; VE = random & 31
$878    $D629   DRW      V6, V2, #9      ; Draw 9-byte sprite at V6, V2
$87A    $A2C8   LD       I, $2C8         ; Load 2C8 into I
$87C    $4709   SNE      V7, #09         ; Skip if V7 != 9
$87E    $CCEC   RND      VC, #EC         ; VC = random & EC
$880    $6E86   LD       VE, #86         ; Load 134 into VE
$882    $1C52   JP       $C52            ; Jump to C52
$884    $E622   UNKNOWN  $E622           ; Unknown Exxx instruction
$886    $769E   ADD      V6, #9E         ; Add 158 to V6
$888    $3408   SE       V4, #08         ; Skip if V4 == 8
$88A    $949B   UNKNOWN  $949B           ; Unknown 9xxx instruction
$88C    $D274   DRW      V2, V7, #4      ; Draw 4-byte sprite at V2, V7
$88E    $DAF3   DRW      VA, VF, #3      ; Draw 3-byte sprite at VA, VF
$890    $844D   UNKNOWN  844D            ; Unknown 8xxx instruction
$892    $D430   DRW      V4, V3, #0      ; Draw 0-byte sprite at V4, V3
$894    $A0B2   LD       I, $0B2         ; Load 0B2 into I
$896    $1A88   JP       $A88            ; Jump to A88
$898    $8201   OR       V2, V0          ; V2 |= V0
$89A    $2A4B   CALL     $A4B            ; Call subroutine at A4B
$89C    $8EBC   UNKNOWN  8EBC            ; Unknown 8xxx instruction
$89E    $A2F8   LD       I, $2F8         ; Load 2F8 into I
$8A0    $55A4   UNKNOWN  $55A4           ; Unknown 5xxx instruction
$8A2    $D2A6   DRW      V2, VA, #6      ; Draw 6-byte sprite at V2, VA
$8A4    $673F   LD       V7, #3F         ; Load 63 into V7
$8A6    $5640   SE       V6, V4          ; Skip if V6 == V4
$8A8    $C438   RND      V4, #38         ; V4 = random & 38
$8AA    $16BD   JP       $6BD            ; Jump to 6BD
$8AC    $8F02   AND      VF, V0          ; VF &= V0
$8AE    $66A3   LD       V6, #A3         ; Load 163 into V6
$8B0    $FF78   UNKNOWN  FF78            ; Unknown Fxxx instruction
$8B2    $5564   UNKNOWN  $5564           ; Unknown 5xxx instruction
$8B4    $9B51   UNKNOWN  $9B51           ; Unknown 9xxx instruction
$8B6    $9725   UNKNOWN  $9725           ; Unknown 9xxx instruction
$8B8    $4164   SNE      V1, #64         ; Skip if V1 != 100
$8BA    $B5F2   JP       V0, $5F2        ; Jump to V0 + 5F2
$8BC    $514C   UNKNOWN  $514C           ; Unknown 5xxx instruction
$8BE    $0527   SYS      $527            ; System call to 527
$8C0    $2D7A   CALL     $D7A            ; Call subroutine at D7A
$8C2    $0214   SYS      $214            ; System call to 214
$8C4    $7322   ADD      V3, #22         ; Add 34 to V3
$8C6    $1DB8   JP       $DB8            ; Jump to DB8
$8C8    $CD1D   RND      VD, #1D         ; VD = random & 1D
$8CA    $4E11   SNE      VE, #11         ; Skip if VE != 17
$8CC    $7510   ADD      V5, #10         ; Add 16 to V5
$8CE    $8707   SUBN     V7, V0          ; V7 = V0 - V7, VF = !borrow
$8D0    $C723   RND      V7, #23         ; V7 = random & 23
$8D2    $0D88   SYS      $D88            ; System call to D88
$8D4    $B5A9   JP       V0, $5A9        ; Jump to V0 + 5A9
$8D6    $D076   DRW      V0, V7, #6      ; Draw 6-byte sprite at V0, V7
$8D8    $901B   UNKNOWN  $901B           ; Unknown 9xxx instruction
$8DA    $7D8F   ADD      VD, #8F         ; Add 143 to VD
$8DC    $EDD5   UNKNOWN  $EDD5           ; Unknown Exxx instruction
$8DE    $AFF7   LD       I, $FF7         ; Load FF7 into I
$8E0    $8D64   ADD      VD, V6          ; VD += V6, VF = carry
$8E2    $EF87   UNKNOWN  $EF87           ; Unknown Exxx instruction
$8E4    $3953   SE       V9, #53         ; Skip if V9 == 83
$8E6    $6CBF   LD       VC, #BF         ; Load 191 into VC
$8E8    $2297   CALL     $297            ; Call subroutine at 297
$8EA    $E5FB   UNKNOWN  $E5FB           ; Unknown Exxx instruction
$8EC    $E97A   UNKNOWN  $E97A           ; Unknown Exxx instruction
$8EE    $CC37   RND      VC, #37         ; VC = random & 37
$8F0    $35D7   SE       V5, #D7         ; Skip if V5 == 215
$8F2    $304D   SE       V0, #4D         ; Skip if V0 == 77
$8F4    $F07D   UNKNOWN  F07D            ; Unknown Fxxx instruction
$8F6    $69BC   LD       V9, #BC         ; Load 188 into V9
$8F8    $10E3   JP       $0E3            ; Jump to 0E3
$8FA    $3141   SE       V1, #41         ; Skip if V1 == 65
$8FC    $19AF   JP       $9AF            ; Jump to 9AF
$8FE    $FC02   UNKNOWN  FC02            ; Unknown Fxxx instruction
$900    $8322   AND      V3, V2          ; V3 &= V2
$902    $EB1E   UNKNOWN  $EB1E           ; Unknown Exxx instruction
$904    $0587   SYS      $587            ; System call to 587
$906    $7C14   ADD      VC, #14         ; Add 20 to VC
$908    $DC45   DRW      VC, V4, #5      ; Draw 5-byte sprite at VC, V4
$90A    $8EF8   UNKNOWN  8EF8            ; Unknown 8xxx instruction
$90C    $16DF   JP       $6DF            ; Jump to 6DF
$90E    $4178   SNE      V1, #78         ; Skip if V1 != 120
$910    $A39A   LD       I, $39A         ; Load 39A into I
$912    $5154   UNKNOWN  $5154           ; Unknown 5xxx instruction
$914    $E43B   UNKNOWN  $E43B           ; Unknown Exxx instruction
$916    $68C0   LD       V8, #C0         ; Load 192 into V8
$918    $8DCC   UNKNOWN  8DCC            ; Unknown 8xxx instruction
$91A    $D6FA   DRW      V6, VF, #A      ; Draw 10-byte sprite at V6, VF
$91C    $7CDC   ADD      VC, #DC         ; Add 220 to VC
$91E    $2E65   CALL     $E65            ; Call subroutine at E65
$920    $BBA2   JP       V0, $BA2        ; Jump to V0 + BA2
$922    $7107   ADD      V1, #07         ; Add 7 to V1
$924    $EF51   UNKNOWN  $EF51           ; Unknown Exxx instruction
$926    $1DFE   JP       $DFE            ; Jump to DFE
$928    $72DB   ADD      V2, #DB         ; Add 219 to V2
$92A    $9A01   UNKNOWN  $9A01           ; Unknown 9xxx instruction
$92C    $DB30   DRW      VB, V3, #0      ; Draw 0-byte sprite at VB, V3
$92E    $7AD6   ADD      VA, #D6         ; Add 214 to VA
$930    $992C   UNKNOWN  $992C           ; Unknown 9xxx instruction
$932    $2843   CALL     $843            ; Call subroutine at 843
$934    $204E   CALL     $04E            ; Call subroutine at 04E
$936    $3C2F   SE       VC, #2F         ; Skip if VC == 47
$938    $F198   UNKNOWN  F198            ; Unknown Fxxx instruction
$93A    $DBDE   DRW      VB, VD, #E      ; Draw 14-byte sprite at VB, VD
$93C    $9849   UNKNOWN  $9849           ; Unknown 9xxx instruction
$93E    $FD56   UNKNOWN  FD56            ; Unknown Fxxx instruction
$940    $A236   LD       I, $236         ; Load 236 into I
$942    $5D3B   UNKNOWN  $5D3B           ; Unknown 5xxx instruction
$944    $A676   LD       I, $676         ; Load 676 into I
$946    $4674   SNE      V6, #74         ; Skip if V6 != 116
$948    $592C   UNKNOWN  $592C           ; Unknown 5xxx instruction
$94A    $6ADB   LD       VA, #DB         ; Load 219 into VA
$94C    $65B1   LD       V5, #B1         ; Load 177 into V5
$94E    $7C36   ADD      VC, #36         ; Add 54 to VC
$950    $7091   ADD      V0, #91         ; Add 145 to V0
$952    $9102   UNKNOWN  $9102           ; Unknown 9xxx instruction
$954    $0761   SYS      $761            ; System call to 761
$956    $40A7   SNE      V0, #A7         ; Skip if V0 != 167
$958    $59D2   UNKNOWN  $59D2           ; Unknown 5xxx instruction
$95A    $4B59   SNE      VB, #59         ; Skip if VB != 89
$95C    $B75D   JP       V0, $75D        ; Jump to V0 + 75D
$95E    $205D   CALL     $05D            ; Call subroutine at 05D
$960    $2C21   CALL     $C21            ; Call subroutine at C21
$962    $5C10   SE       VC, V1          ; Skip if VC == V1
$964    $6164   LD       V1, #64         ; Load 100 into V1
$966    $4743   SNE      V7, #43         ; Skip if V7 != 67
$968    $CEBE   RND      VE, #BE         ; VE = random & BE
$96A    $3AEA   SE       VA, #EA         ; Skip if VA == 234
$96C    $2C64   CALL     $C64            ; Call subroutine at C64
$96E    $9D17   UNKNOWN  $9D17           ; Unknown 9xxx instruction
$970    $8D2E   SHL      VD              ; VD <<= 1, VF = MSB
$972    $B0C6   JP       V0, $0C6        ; Jump to V0 + 0C6
$974    $A8C9   LD       I, $8C9         ; Load 8C9 into I
$976    $99EB   UNKNOWN  $99EB           ; Unknown 9xxx instruction
$978    $35C5   SE       V5, #C5         ; Skip if V5 == 197
$97A    $005F   SYS      $05F            ; System call to 05F
$97C    $5D08   UNKNOWN  $5D08           ; Unknown 5xxx instruction
$97E    $FCC2   UNKNOWN  FCC2            ; Unknown Fxxx instruction
$980    $A038   LD       I, $038         ; Load 038 into I
$982    $874B   UNKNOWN  874B            ; Unknown 8xxx instruction
$984    $B2C7   JP       V0, $2C7        ; Jump to V0 + 2C7
$986    $3CBA   SE       VC, #BA         ; Skip if VC == 186
$988    $92EC   UNKNOWN  $92EC           ; Unknown 9xxx instruction
$98A    $9EEA   UNKNOWN  $9EEA           ; Unknown 9xxx instruction
$98C    $BD7D   JP       V0, $D7D        ; Jump to V0 + D7D
$98E    $067D   SYS      $67D            ; System call to 67D
$990    $2823   CALL     $823            ; Call subroutine at 823
$992    $FCAA   UNKNOWN  FCAA            ; Unknown Fxxx instruction
$994    $5E6B   UNKNOWN  $5E6B           ; Unknown 5xxx instruction
$996    $B03C   JP       V0, $03C        ; Jump to V0 + 03C
$998    $3109   SE       V1, #09         ; Skip if V1 == 9
$99A    $1277   JP       $277            ; Jump to 277
$99C    $02F7   SYS      $2F7            ; System call to 2F7
$99E    $1873   JP       $873            ; Jump to 873
$9A0    $ACAF   LD       I, $CAF         ; Load CAF into I
$9A2    $BDB1   JP       V0, $DB1        ; Jump to V0 + DB1
$9A4    $3028   SE       V0, #28         ; Skip if V0 == 40
$9A6    $FFAC   UNKNOWN  FFAC            ; Unknown Fxxx instruction
$9A8    $F43A   UNKNOWN  F43A            ; Unknown Fxxx instruction
$9AA    $1E08   JP       $E08            ; Jump to E08
$9AC    $1217   JP       $217            ; Jump to 217
$9AE    $4688   SNE      V6, #88         ; Skip if V6 != 136
$9B0    $9889   UNKNOWN  $9889           ; Unknown 9xxx instruction
$9B2    $787C   ADD      V8, #7C         ; Add 124 to V8
$9B4    $6C7D   LD       VC, #7D         ; Load 125 into VC
$9B6    $A946   LD       I, $946         ; Load 946 into I
$9B8    $C93B   RND      V9, #3B         ; V9 = random & 3B
$9BA    $E893   UNKNOWN  $E893           ; Unknown Exxx instruction
$9BC    $17B4   JP       $7B4            ; Jump to 7B4
$9BE    $DFBA   DRW      VF, VB, #A      ; Draw 10-byte sprite at VF, VB
$9C0    $6C20   LD       VC, #20         ; Load 32 into VC
$9C2    $8E11   OR       VE, V1          ; VE |= V1
$9C4    $AC0C   LD       I, $C0C         ; Load C0C into I
$9C6    $67EB   LD       V7, #EB         ; Load 235 into V7
$9C8    $7067   ADD      V0, #67         ; Add 103 to V0
$9CA    $1687   JP       $687            ; Jump to 687
$9CC    $C897   RND      V8, #97         ; V8 = random & 97
$9CE    $8324   ADD      V3, V2          ; V3 += V2, VF = carry
$9D0    $FE45   UNKNOWN  FE45            ; Unknown Fxxx instruction
$9D2    $24D6   CALL     $4D6            ; Call subroutine at 4D6
$9D4    $AE96   LD       I, $E96         ; Load E96 into I
$9D6    $6BAA   LD       VB, #AA         ; Load 170 into VB
$9D8    $2725   CALL     $725            ; Call subroutine at 725
$9DA    $935D   UNKNOWN  $935D           ; Unknown 9xxx instruction
$9DC    $64C1   LD       V4, #C1         ; Load 193 into V4
$9DE    $4864   SNE      V8, #64         ; Skip if V8 != 100
$9E0    $3E08   SE       VE, #08         ; Skip if VE == 8
$9E2    $773D   ADD      V7, #3D         ; Add 61 to V7
$9E4    $0164   SYS      $164            ; System call to 164
$9E6    $8165   SUB      V1, V6          ; V1 -= V6, VF = !borrow
$9E8    $0E2D   SYS      $E2D            ; System call to E2D
$9EA    $B421   JP       V0, $421        ; Jump to V0 + 421
$9EC    $2CB8   CALL     $CB8            ; Call subroutine at CB8
$9EE    $88CE   SHL      V8              ; V8 <<= 1, VF = MSB
$9F0    $997A   UNKNOWN  $997A           ; Unknown 9xxx instruction
$9F2    $9C14   UNKNOWN  $9C14           ; Unknown 9xxx instruction
$9F4    $AE42   LD       I, $E42         ; Load E42 into I
$9F6    $BF48   JP       V0, $F48        ; Jump to V0 + F48
$9F8    $DF60   DRW      VF, V6, #0      ; Draw 0-byte sprite at VF, V6
$9FA    $66D7   LD       V6, #D7         ; Load 215 into V6
$9FC    $1357   JP       $357            ; Jump to 357
$9FE    $9067   UNKNOWN  $9067           ; Unknown 9xxx instruction
$A00    $0546   SYS      $546            ; System call to 546
$A02    $A068   LD       I, $068         ; Load 068 into I
$A04    $9863   UNKNOWN  $9863           ; Unknown 9xxx instruction
$A06    $1697   JP       $697            ; Jump to 697
$A08    $EC6D   UNKNOWN  $EC6D           ; Unknown Exxx instruction
$A0A    $E41C   UNKNOWN  $E41C           ; Unknown Exxx instruction
$A0C    $26B9   CALL     $6B9            ; Call subroutine at 6B9
$A0E    $6DD1   LD       VD, #D1         ; Load 209 into VD
$A10    $252B   CALL     $52B            ; Call subroutine at 52B
$A12    $C0A3   RND      V0, #A3         ; V0 = random & A3
$A14    $C823   RND      V8, #23         ; V8 = random & 23
$A16    $E54F   UNKNOWN  $E54F           ; Unknown Exxx instruction
$A18    $C630   RND      V6, #30         ; V6 = random & 30
$A1A    $1AE6   JP       $AE6            ; Jump to AE6
$A1C    $7621   ADD      V6, #21         ; Add 33 to V6
$A1E    $E75B   UNKNOWN  $E75B           ; Unknown Exxx instruction
$A20    $8F4F   UNKNOWN  8F4F            ; Unknown 8xxx instruction
$A22    $246F   CALL     $46F            ; Call subroutine at 46F
$A24    $60EC   LD       V0, #EC         ; Load 236 into V0
$A26    $7641   ADD      V6, #41         ; Add 65 to V6
$A28    $CE39   RND      VE, #39         ; VE = random & 39
$A2A    $27CB   CALL     $7CB            ; Call subroutine at 7CB
$A2C    $B30A   JP       V0, $30A        ; Jump to V0 + 30A
$A2E    $10F7   JP       $0F7            ; Jump to 0F7
$A30    $DB42   DRW      VB, V4, #2      ; Draw 2-byte sprite at VB, V4
$A32    $0E56   SYS      $E56            ; System call to E56
$A34    $8F1F   UNKNOWN  8F1F            ; Unknown 8xxx instruction
$A36    $699D   LD       V9, #9D         ; Load 157 into V9
$A38    $71FB   ADD      V1, #FB         ; Add 251 to V1
$A3A    $609D   LD       V0, #9D         ; Load 157 into V0
$A3C    $1935   JP       $935            ; Jump to 935
$A3E    $1CF8   JP       $CF8            ; Jump to CF8
$A40    $0A65   SYS      $A65            ; System call to A65
$A42    $1E51   JP       $E51            ; Jump to E51
$A44    $D5B0   DRW      V5, VB, #0      ; Draw 0-byte sprite at V5, VB
$A46    $CC6A   RND      VC, #6A         ; VC = random & 6A
$A48    $C331   RND      V3, #31         ; V3 = random & 31
$A4A    $729C   ADD      V2, #9C         ; Add 156 to V2
$A4C    $088E   SYS      $88E            ; System call to 88E
$A4E    $3D95   SE       VD, #95         ; Skip if VD == 149
$A50    $1EC3   JP       $EC3            ; Jump to EC3
$A52    $BE6F   JP       V0, $E6F        ; Jump to V0 + E6F
$A54    $3B22   SE       VB, #22         ; Skip if VB == 34
$A56    $A74A   LD       I, $74A         ; Load 74A into I
$A58    $8922   AND      V9, V2          ; V9 &= V2
$A5A    $1B80   JP       $B80            ; Jump to B80
$A5C    $FAFF   UNKNOWN  FAFF            ; Unknown Fxxx instruction
$A5E    $24BB   CALL     $4BB            ; Call subroutine at 4BB
$A60    $4D3D   SNE      VD, #3D         ; Skip if VD != 61
$A62    $5D7A   UNKNOWN  $5D7A           ; Unknown 5xxx instruction
$A64    $0C54   SYS      $C54            ; System call to C54
$A66    $AA96   LD       I, $A96         ; Load A96 into I
$A68    $C9B1   RND      V9, #B1         ; V9 = random & B1
$A6A    $07B8   SYS      $7B8            ; System call to 7B8
$A6C    $B32F   JP       V0, $32F        ; Jump to V0 + 32F
$A6E    $CCB0   RND      VC, #B0         ; VC = random & B0
$A70    $3AC5   SE       VA, #C5         ; Skip if VA == 197
$A72    $9A08   UNKNOWN  $9A08           ; Unknown 9xxx instruction
$A74    $CCA3   RND      VC, #A3         ; VC = random & A3
$A76    $D075   DRW      V0, V7, #5      ; Draw 5-byte sprite at V0, V7
$A78    $2C3A   CALL     $C3A            ; Call subroutine at C3A
$A7A    $67D7   LD       V7, #D7         ; Load 215 into V7
$A7C    $6041   LD       V0, #41         ; Load 65 into V0
$A7E    $8469   UNKNOWN  8469            ; Unknown 8xxx instruction
$A80    $F9E6   UNKNOWN  F9E6            ; Unknown Fxxx instruction
$A82    $2E6C   CALL     $E6C            ; Call subroutine at E6C
$A84    $C543   RND      V5, #43         ; V5 = random & 43
$A86    $F00C   UNKNOWN  F00C            ; Unknown Fxxx instruction
$A88    $9E85   UNKNOWN  $9E85           ; Unknown 9xxx instruction
$A8A    $2761   CALL     $761            ; Call subroutine at 761
$A8C    $0F42   SYS      $F42            ; System call to F42
$A8E    $65F9   LD       V5, #F9         ; Load 249 into V5
$A90    $2174   CALL     $174            ; Call subroutine at 174
$A92    $51D1   UNKNOWN  $51D1           ; Unknown 5xxx instruction
$A94    $69AD   LD       V9, #AD         ; Load 173 into V9
$A96    $64C7   LD       V4, #C7         ; Load 199 into V4
$A98    $D0F4   DRW      V0, VF, #4      ; Draw 4-byte sprite at V0, VF
$A9A    $3D2C   SE       VD, #2C         ; Skip if VD == 44
$A9C    $1FEC   JP       $FEC            ; Jump to FEC
$A9E    $6A7D   LD       VA, #7D         ; Load 125 into VA
$AA0    $D2AB   DRW      V2, VA, #B      ; Draw 11-byte sprite at V2, VA
$AA2    $5B33   UNKNOWN  $5B33           ; Unknown 5xxx instruction
$AA4    $40F8   SNE      V0, #F8         ; Skip if V0 != 248
$AA6    $0C6E   SYS      $C6E            ; System call to C6E
$AA8    $567F   UNKNOWN  $567F           ; Unknown 5xxx instruction
$AAA    $90D3   UNKNOWN  $90D3           ; Unknown 9xxx instruction
$AAC    $A9DC   LD       I, $9DC         ; Load 9DC into I
$AAE    $5E93   UNKNOWN  $5E93           ; Unknown 5xxx instruction
$AB0    $E983   UNKNOWN  $E983           ; Unknown Exxx instruction
$AB2    $35C1   SE       V5, #C1         ; Skip if V5 == 193
$AB4    $CD96   RND      VD, #96         ; VD = random & 96
$AB6    $9FFE   UNKNOWN  $9FFE           ; Unknown 9xxx instruction
$AB8    $92E8   UNKNOWN  $92E8           ; Unknown 9xxx instruction
$ABA    $2D5F   CALL     $D5F            ; Call subroutine at D5F
$ABC    $B1CC   JP       V0, $1CC        ; Jump to V0 + 1CC
$ABE    $4B4C   SNE      VB, #4C         ; Skip if VB != 76
$AC0    $74A8   ADD      V4, #A8         ; Add 168 to V4
$AC2    $AE92   LD       I, $E92         ; Load E92 into I
$AC4    $6A5A   LD       VA, #5A         ; Load 90 into VA
$AC6    $E8D5   UNKNOWN  $E8D5           ; Unknown Exxx instruction
$AC8    $1CDB   JP       $CDB            ; Jump to CDB
$ACA    $B42A   JP       V0, $42A        ; Jump to V0 + 42A
$ACC    $CE32   RND      VE, #32         ; VE = random & 32
$ACE    $1F29   JP       $F29            ; Jump to F29
$AD0    $9FDF   UNKNOWN  $9FDF           ; Unknown 9xxx instruction
$AD2    $8020   LD       V0, V2          ; V0 = V2
$AD4    $2626   CALL     $626            ; Call subroutine at 626
$AD6    $9577   UNKNOWN  $9577           ; Unknown 9xxx instruction
$AD8    $4CE0   SNE      VC, #E0         ; Skip if VC != 224
$ADA    $6B65   LD       VB, #65         ; Load 101 into VB
$ADC    $155B   JP       $55B            ; Jump to 55B
$ADE    $7C93   ADD      VC, #93         ; Add 147 to VC
$AE0    $C9C3   RND      V9, #C3         ; V9 = random & C3
$AE2    $DCF5   DRW      VC, VF, #5      ; Draw 5-byte sprite at VC, VF
$AE4    $6BE0   LD       VB, #E0         ; Load 224 into VB
$AE6    $4D83   SNE      VD, #83         ; Skip if VD != 131
$AE8    $E3EA   UNKNOWN  $E3EA           ; Unknown Exxx instruction
$AEA    $AFAF   LD       I, $FAF         ; Load FAF into I
$AEC    $A5BA   LD       I, $5BA         ; Load 5BA into I
$AEE    $3C0C   SE       VC, #0C         ; Skip if VC == 12
$AF0    $9573   UNKNOWN  $9573           ; Unknown 9xxx instruction
$AF2    $C090   RND      V0, #90         ; V0 = random & 90
$AF4    $8D01   OR       VD, V0          ; VD |= V0
$AF6    $85A1   OR       V5, VA          ; V5 |= VA
$AF8    $6208   LD       V2, #08         ; Load 8 into V2
$AFA    $B8D6   JP       V0, $8D6        ; Jump to V0 + 8D6
$AFC    $C127   RND      V1, #27         ; V1 = random & 27
$AFE    $2A1B   CALL     $A1B            ; Call subroutine at A1B
$B00    $2D8D   CALL     $D8D            ; Call subroutine at D8D
$B02    $2FE8   CALL     $FE8            ; Call subroutine at FE8
$B04    $EEA2   UNKNOWN  $EEA2           ; Unknown Exxx instruction
$B06    $F4DA   UNKNOWN  F4DA            ; Unknown Fxxx instruction
$B08    $872B   UNKNOWN  872B            ; Unknown 8xxx instruction
$B0A    $23B6   CALL     $3B6            ; Call subroutine at 3B6
$B0C    $592E   UNKNOWN  $592E           ; Unknown 5xxx instruction
$B0E    $DDEE   DRW      VD, VE, #E      ; Draw 14-byte sprite at VD, VE
$B10    $9787   UNKNOWN  $9787           ; Unknown 9xxx instruction
$B12    $979A   UNKNOWN  $979A           ; Unknown 9xxx instruction
$B14    $8C5D   UNKNOWN  8C5D            ; Unknown 8xxx instruction
$B16    $44F9   SNE      V4, #F9         ; Skip if V4 != 249
$B18    $5613   UNKNOWN  $5613           ; Unknown 5xxx instruction
$B1A    $A5D4   LD       I, $5D4         ; Load 5D4 into I
$B1C    $53E0   SE       V3, VE          ; Skip if V3 == VE
$B1E    $1E7E   JP       $E7E            ; Jump to E7E
$B20    $516E   UNKNOWN  $516E           ; Unknown 5xxx instruction
$B22    $7EB7   ADD      VE, #B7         ; Add 183 to VE
$B24    $EC8C   UNKNOWN  $EC8C           ; Unknown Exxx instruction
$B26    $B591   JP       V0, $591        ; Jump to V0 + 591
$B28    $4644   SNE      V6, #44         ; Skip if V6 != 68
$B2A    $1736   JP       $736            ; Jump to 736
$B2C    $6C77   LD       VC, #77         ; Load 119 into VC
$B2E    $B9CE   JP       V0, $9CE        ; Jump to V0 + 9CE
$B30    $E231   UNKNOWN  $E231           ; Unknown Exxx instruction
$B32    $87CD   UNKNOWN  87CD            ; Unknown 8xxx instruction
$B34    $8140   LD       V1, V4          ; V1 = V4
$B36    $7435   ADD      V4, #35         ; Add 53 to V4
$B38    $1F29   JP       $F29            ; Jump to F29
$B3A    $3756   SE       V7, #56         ; Skip if V7 == 86
$B3C    $56FF   UNKNOWN  $56FF           ; Unknown 5xxx instruction
$B3E    $853F   UNKNOWN  853F            ; Unknown 8xxx instruction
$B40    $9C00   SNE      VC, V0          ; Skip if VC != V0
$B42    $0106   SYS      $106            ; System call to 106
$B44    $5A5E   UNKNOWN  $5A5E           ; Unknown 5xxx instruction
$B46    $0F27   SYS      $F27            ; System call to F27
$B48    $7701   ADD      V7, #01         ; Add 1 to V7
$B4A    $39FC   SE       V9, #FC         ; Skip if V9 == 252
$B4C    $D60D   DRW      V6, V0, #D      ; Draw 13-byte sprite at V6, V0
$B4E    $1A0F   JP       $A0F            ; Jump to A0F
$B50    $C0ED   RND      V0, #ED         ; V0 = random & ED
$B52    $9172   UNKNOWN  $9172           ; Unknown 9xxx instruction
$B54    $5B59   UNKNOWN  $5B59           ; Unknown 5xxx instruction
$B56    $0DBB   SYS      $DBB            ; System call to DBB
$B58    $F0B1   UNKNOWN  F0B1            ; Unknown Fxxx instruction
$B5A    $6D18   LD       VD, #18         ; Load 24 into VD
$B5C    $041A   SYS      $41A            ; System call to 41A
$B5E    $FD76   UNKNOWN  FD76            ; Unknown Fxxx instruction
$B60    $3230   SE       V2, #30         ; Skip if V2 == 48
$B62    $E0E3   UNKNOWN  $E0E3           ; Unknown Exxx instruction
$B64    $937E   UNKNOWN  $937E           ; Unknown 9xxx instruction
$B66    $403A   SNE      V0, #3A         ; Skip if V0 != 58
$B68    $0DD9   SYS      $DD9            ; System call to DD9
$B6A    $6E4A   LD       VE, #4A         ; Load 74 into VE
$B6C    $C504   RND      V5, #04         ; V5 = random & 04
$B6E    $AFD4   LD       I, $FD4         ; Load FD4 into I
$B70    $4BCE   SNE      VB, #CE         ; Skip if VB != 206
$B72    $06D7   SYS      $6D7            ; System call to 6D7
$B74    $BB64   JP       V0, $B64        ; Jump to V0 + B64
$B76    $7B0C   ADD      VB, #0C         ; Add 12 to VB
$B78    $4D52   SNE      VD, #52         ; Skip if VD != 82
$B7A    $C5A3   RND      V5, #A3         ; V5 = random & A3
$B7C    $71D9   ADD      V1, #D9         ; Add 217 to V1
$B7E    $C9F4   RND      V9, #F4         ; V9 = random & F4
$B80    $FFE0   UNKNOWN  FFE0            ; Unknown Fxxx instruction
$B82    $4C0A   SNE      VC, #0A         ; Skip if VC != 10
$B84    $594D   UNKNOWN  $594D           ; Unknown 5xxx instruction
$B86    $1BE3   JP       $BE3            ; Jump to BE3
$B88    $0025   SYS      $025            ; System call to 025
$B8A    $826F   UNKNOWN  826F            ; Unknown 8xxx instruction
$B8C    $ADA4   LD       I, $DA4         ; Load DA4 into I
$B8E    $3CD1   SE       VC, #D1         ; Skip if VC == 209
$B90    $1A3F   JP       $A3F            ; Jump to A3F
$B92    $E528   UNKNOWN  $E528           ; Unknown Exxx instruction
$B94    $A99A   LD       I, $99A         ; Load 99A into I
$B96    $DF13   DRW      VF, V1, #3      ; Draw 3-byte sprite at VF, V1
$B98    $397D   SE       V9, #7D         ; Skip if V9 == 125
$B9A    $01F4   SYS      $1F4            ; System call to 1F4
$B9C    $312E   SE       V1, #2E         ; Skip if V1 == 46
$B9E    $D1E2   DRW      V1, VE, #2      ; Draw 2-byte sprite at V1, VE
$BA0    $5F25   UNKNOWN  $5F25           ; Unknown 5xxx instruction
$BA2    $2552   CALL     $552            ; Call subroutine at 552
$BA4    $AA49   LD       I, $A49         ; Load A49 into I
$BA6    $8EC2   AND      VE, VC          ; VE &= VC
$BA8    $8D2D   UNKNOWN  8D2D            ; Unknown 8xxx instruction
$BAA    $F61E   ADD      I, V6           ; I += V6
$BAC    $EF8E   UNKNOWN  $EF8E           ; Unknown Exxx instruction
$BAE    $FA4D   UNKNOWN  FA4D            ; Unknown Fxxx instruction
$BB0    $7FFC   ADD      VF, #FC         ; Add 252 to VF
$BB2    $65DA   LD       V5, #DA         ; Load 218 into V5
$BB4    $72B7   ADD      V2, #B7         ; Add 183 to V2
$BB6    $2878   CALL     $878            ; Call subroutine at 878
$BB8    $66A3   LD       V6, #A3         ; Load 163 into V6
$BBA    $2842   CALL     $842            ; Call subroutine at 842
$BBC    $0BC8   SYS      $BC8            ; System call to BC8
$BBE    $10E1   JP       $0E1            ; Jump to 0E1
$BC0    $F02B   UNKNOWN  F02B            ; Unknown Fxxx instruction
$BC2    $F6A1   UNKNOWN  F6A1            ; Unknown Fxxx instruction
$BC4    $71F4   ADD      V1, #F4         ; Add 244 to V1
$BC6    $F05A   UNKNOWN  F05A            ; Unknown Fxxx instruction
$BC8    $B3F8   JP       V0, $3F8        ; Jump to V0 + 3F8
$BCA    $A808   LD       I, $808         ; Load 808 into I
$BCC    $B988   JP       V0, $988        ; Jump to V0 + 988
$BCE    $B79F   JP       V0, $79F        ; Jump to V0 + 79F
$BD0    $0605   SYS      $605            ; System call to 605
$BD2    $A841   LD       I, $841         ; Load 841 into I
$BD4    $F251   UNKNOWN  F251            ; Unknown Fxxx instruction
$BD6    $303C   SE       V0, #3C         ; Skip if V0 == 60
$BD8    $FED1   UNKNOWN  FED1            ; Unknown Fxxx instruction
$BDA    $C3D3   RND      V3, #D3         ; V3 = random & D3
$BDC    $7AFF   ADD      VA, #FF         ; Add 255 to VA
$BDE    $4F05   SNE      VF, #05         ; Skip if VF != 5
$BE0    $0D54   SYS      $D54            ; System call to D54
$BE2    $BDAF   JP       V0, $DAF        ; Jump to V0 + DAF
$BE4    $AD33   LD       I, $D33         ; Load D33 into I
$BE6    $D754   DRW      V7, V5, #4      ; Draw 4-byte sprite at V7, V5
$BE8    $88D9   UNKNOWN  88D9            ; Unknown 8xxx instruction
$BEA    $60AA   LD       V0, #AA         ; Load 170 into V0
$BEC    $4FAE   SNE      VF, #AE         ; Skip if VF != 174
$BEE    $BA15   JP       V0, $A15        ; Jump to V0 + A15
$BF0    $CBB3   RND      VB, #B3         ; VB = random & B3
$BF2    $9EEE   UNKNOWN  $9EEE           ; Unknown 9xxx instruction
$BF4    $C723   RND      V7, #23         ; V7 = random & 23
$BF6    $59D2   UNKNOWN  $59D2           ; Unknown 5xxx instruction
$BF8    $19C3   JP       $9C3            ; Jump to 9C3
$BFA    $C271   RND      V2, #71         ; V2 = random & 71
$BFC    $3FE2   SE       VF, #E2         ; Skip if VF == 226
$BFE    $5590   SE       V5, V9          ; Skip if V5 == V9
$C00    $8252   AND      V2, V5          ; V2 &= V5
$C02    $0CC7   SYS      $CC7            ; System call to CC7
$C04    $2DAD   CALL     $DAD            ; Call subroutine at DAD
$C06    $80F2   AND      V0, VF          ; V0 &= VF
$C08    $4876   SNE      V8, #76         ; Skip if V8 != 118
$C0A    $0E18   SYS      $E18            ; System call to E18
$C0C    $94E4   UNKNOWN  $94E4           ; Unknown 9xxx instruction
$C0E    $AB41   LD       I, $B41         ; Load B41 into I
$C10    $39FC   SE       V9, #FC         ; Skip if V9 == 252
$C12    $9D55   UNKNOWN  $9D55           ; Unknown 9xxx instruction
$C14    $C132   RND      V1, #32         ; V1 = random & 32
$C16    $B3DD   JP       V0, $3DD        ; Jump to V0 + 3DD
$C18    $3C7F   SE       VC, #7F         ; Skip if VC == 127
$C1A    $3D21   SE       VD, #21         ; Skip if VD == 33
$C1C    $EAC8   UNKNOWN  $EAC8           ; Unknown Exxx instruction
$C1E    $319A   SE       V1, #9A         ; Skip if V1 == 154
$C20    $74C1   ADD      V4, #C1         ; Add 193 to V4
$C22    $C96D   RND      V9, #6D         ; V9 = random & 6D
$C24    $375B   SE       V7, #5B         ; Skip if V7 == 91
$C26    $3598   SE       V5, #98         ; Skip if V5 == 152
$C28    $0DD0   SYS      $DD0            ; System call to DD0
$C2A    $5789   UNKNOWN  $5789           ; Unknown 5xxx instruction
$C2C    $EBC4   UNKNOWN  $EBC4           ; Unknown Exxx instruction
$C2E    $045F   SYS      $45F            ; System call to 45F
$C30    $C522   RND      V5, #22         ; V5 = random & 22
$C32    $3437   SE       V4, #37         ; Skip if V4 == 55
$C34    $5BFC   UNKNOWN  $5BFC           ; Unknown 5xxx instruction
$C36    $F5CC   UNKNOWN  F5CC            ; Unknown Fxxx instruction
$C38    $15CF   JP       $5CF            ; Jump to 5CF
$C3A    $19C3   JP       $9C3            ; Jump to 9C3
$C3C    $32F4   SE       V2, #F4         ; Skip if V2 == 244
$C3E    $2175   CALL     $175            ; Call subroutine at 175
$C40    $AECF   LD       I, $ECF         ; Load ECF into I
$C42    $E7E4   UNKNOWN  $E7E4           ; Unknown Exxx instruction
$C44    $BCE4   JP       V0, $CE4        ; Jump to V0 + CE4
$C46    $19A0   JP       $9A0            ; Jump to 9A0
$C48    $8A1A   UNKNOWN  8A1A            ; Unknown 8xxx instruction
$C4A    $CBDB   RND      VB, #DB         ; VB = random & DB
$C4C    $F8D4   UNKNOWN  F8D4            ; Unknown Fxxx instruction
$C4E    $78E4   ADD      V8, #E4         ; Add 228 to V8
$C50    $5283   UNKNOWN  $5283           ; Unknown 5xxx instruction
$C52    $6C14   LD       VC, #14         ; Load 20 into VC
$C54    $9E67   UNKNOWN  $9E67           ; Unknown 9xxx instruction
$C56    $BF0F   JP       V0, $F0F        ; Jump to V0 + F0F
$C58    $CC57   RND      VC, #57         ; VC = random & 57
$C5A    $FC66   UNKNOWN  FC66            ; Unknown Fxxx instruction
$C5C    $4922   SNE      V9, #22         ; Skip if V9 != 34
$C5E    $8224   ADD      V2, V2          ; V2 += V2, VF = carry
$C60    $B8CB   JP       V0, $8CB        ; Jump to V0 + 8CB
$C62    $E59B   UNKNOWN  $E59B           ; Unknown Exxx instruction
$C64    $866B   UNKNOWN  866B            ; Unknown 8xxx instruction
$C66    $F42A   UNKNOWN  F42A            ; Unknown Fxxx instruction
$C68    $04F9   SYS      $4F9            ; System call to 4F9
$C6A    $AF82   LD       I, $F82         ; Load F82 into I
$C6C    $F04F   UNKNOWN  F04F            ; Unknown Fxxx instruction
$C6E    $F35C   UNKNOWN  F35C            ; Unknown Fxxx instruction
$C70    $DC35   DRW      VC, V3, #5      ; Draw 5-byte sprite at VC, V3
$C72    $B975   JP       V0, $975        ; Jump to V0 + 975
$C74    $3455   SE       V4, #55         ; Skip if V4 == 85
$C76    $2217   CALL     $217            ; Call subroutine at 217
$C78    $6BA6   LD       VB, #A6         ; Load 166 into VB
$C7A    $83FB   UNKNOWN  83FB            ; Unknown 8xxx instruction
$C7C    $3BEC   SE       VB, #EC         ; Skip if VB == 236
$C7E    $7AC0   ADD      VA, #C0         ; Add 192 to VA
$C80    $DDEE   DRW      VD, VE, #E      ; Draw 14-byte sprite at VD, VE
$C82    $B954   JP       V0, $954        ; Jump to V0 + 954
$C84    $4198   SNE      V1, #98         ; Skip if V1 != 152
$C86    $C388   RND      V3, #88         ; V3 = random & 88
$C88    $773E   ADD      V7, #3E         ; Add 62 to V7
$C8A    $4C9B   SNE      VC, #9B         ; Skip if VC != 155
$C8C    $ACEE   LD       I, $CEE         ; Load CEE into I
$C8E    $D4A4   DRW      V4, VA, #4      ; Draw 4-byte sprite at V4, VA
$C90    $AD50   LD       I, $D50         ; Load D50 into I
$C92    $7616   ADD      V6, #16         ; Add 22 to V6
$C94    $362E   SE       V6, #2E         ; Skip if V6 == 46
$C96    $9FB8   UNKNOWN  $9FB8           ; Unknown 9xxx instruction
$C98    $CF27   RND      VF, #27         ; VF = random & 27
$C9A    $0A8A   SYS      $A8A            ; System call to A8A
$C9C    $8D7E   SHL      VD              ; VD <<= 1, VF = MSB
$C9E    $972F   UNKNOWN  $972F           ; Unknown 9xxx instruction
$CA0    $2E04   CALL     $E04            ; Call subroutine at E04
$CA2    $7087   ADD      V0, #87         ; Add 135 to V0
$CA4    $9741   UNKNOWN  $9741           ; Unknown 9xxx instruction
$CA6    $D443   DRW      V4, V4, #3      ; Draw 3-byte sprite at V4, V4
$CA8    $3087   SE       V0, #87         ; Skip if V0 == 135
$CAA    $B3CE   JP       V0, $3CE        ; Jump to V0 + 3CE
$CAC    $922B   UNKNOWN  $922B           ; Unknown 9xxx instruction
$CAE    $C5E7   RND      V5, #E7         ; V5 = random & E7
$CB0    $FDE8   UNKNOWN  FDE8            ; Unknown Fxxx instruction
$CB2    $E3FB   UNKNOWN  $E3FB           ; Unknown Exxx instruction
$CB4    $E1D4   UNKNOWN  $E1D4           ; Unknown Exxx instruction
$CB6    $AB64   LD       I, $B64         ; Load B64 into I
$CB8    $8962   AND      V9, V6          ; V9 &= V6
$CBA    $04B7   SYS      $4B7            ; System call to 4B7
$CBC    $3575   SE       V5, #75         ; Skip if V5 == 117
$CBE    $BF4F   JP       V0, $F4F        ; Jump to V0 + F4F
$CC0    $B60E   JP       V0, $60E        ; Jump to V0 + 60E
$CC2    $6686   LD       V6, #86         ; Load 134 into V6
$CC4    $1012   JP       $012            ; Jump to 012
$CC6    $91B4   UNKNOWN  $91B4           ; Unknown 9xxx instruction
$CC8    $27BF   CALL     $7BF            ; Call subroutine at 7BF
$CCA    $ECE7   UNKNOWN  $ECE7           ; Unknown Exxx instruction
$CCC    $26EF   CALL     $6EF            ; Call subroutine at 6EF
$CCE    $514F   UNKNOWN  $514F           ; Unknown 5xxx instruction
$CD0    $885D   UNKNOWN  885D            ; Unknown 8xxx instruction
$CD2    $1FF5   JP       $FF5            ; Jump to FF5
$CD4    $9CA1   UNKNOWN  $9CA1           ; Unknown 9xxx instruction
$CD6    $74C4   ADD      V4, #C4         ; Add 196 to V4
$CD8    $44C4   SNE      V4, #C4         ; Skip if V4 != 196
$CDA    $DF93   DRW      VF, V9, #3      ; Draw 3-byte sprite at VF, V9
$CDC    $29CF   CALL     $9CF            ; Call subroutine at 9CF
$CDE    $CF00   RND      VF, #00         ; VF = random & 00
$CE0    $66A1   LD       V6, #A1         ; Load 161 into V6
$CE2    $BC1F   JP       V0, $C1F        ; Jump to V0 + C1F
$CE4    $9A8C   UNKNOWN  $9A8C           ; Unknown 9xxx instruction
$CE6    $9892   UNKNOWN  $9892           ; Unknown 9xxx instruction
$CE8    $FA33   LD       B, VA           ; Store BCD of VA at I, I+1, I+2
$CEA    $243A   CALL     $43A            ; Call subroutine at 43A
$CEC    $6069   LD       V0, #69         ; Load 105 into V0
$CEE    $A014   LD       I, $014         ; Load 014 into I
$CF0    $0757   SYS      $757            ; System call to 757
$CF2    $BDD9   JP       V0, $DD9        ; Jump to V0 + DD9
$CF4    $455E   SNE      V5, #5E         ; Skip if V5 != 94
$CF6    $DE63   DRW      VE, V6, #3      ; Draw 3-byte sprite at VE, V6
$CF8    $C0DF   RND      V0, #DF         ; V0 = random & DF
$CFA    $F4B1   UNKNOWN  F4B1            ; Unknown Fxxx instruction
$CFC    $8BF2   AND      VB, VF          ; VB &= VF
$CFE    $2E91   CALL     $E91            ; Call subroutine at E91
$D00    $782E   ADD      V8, #2E         ; Add 46 to V8
$D02    $6748   LD       V7, #48         ; Load 72 into V7
$D04    $429B   SNE      V2, #9B         ; Skip if V2 != 155
$D06    $AC33   LD       I, $C33         ; Load C33 into I
$D08    $A32D   LD       I, $32D         ; Load 32D into I
$D0A    $6044   LD       V0, #44         ; Load 68 into V0
$D0C    $3F17   SE       VF, #17         ; Skip if VF == 23
$D0E    $C7F3   RND      V7, #F3         ; V7 = random & F3
$D10    $9AE7   UNKNOWN  $9AE7           ; Unknown 9xxx instruction
$D12    $5FA7   UNKNOWN  $5FA7           ; Unknown 5xxx instruction
$D14    $2B67   CALL     $B67            ; Call subroutine at B67
$D16    $31F3   SE       V1, #F3         ; Skip if V1 == 243
$D18    $19CA   JP       $9CA            ; Jump to 9CA
$D1A    $8C57   SUBN     VC, V5          ; VC = V5 - VC, VF = !borrow
$D1C    $7429   ADD      V4, #29         ; Add 41 to V4
$D1E    $1B35   JP       $B35            ; Jump to B35
$D20    $940E   UNKNOWN  $940E           ; Unknown 9xxx instruction
$D22    $2663   CALL     $663            ; Call subroutine at 663
$D24    $D9B5   DRW      V9, VB, #5      ; Draw 5-byte sprite at V9, VB
$D26    $E7AA   UNKNOWN  $E7AA           ; Unknown Exxx instruction
$D28    $A273   LD       I, $273         ; Load 273 into I
$D2A    $3C49   SE       VC, #49         ; Skip if VC == 73
$D2C    $684C   LD       V8, #4C         ; Load 76 into V8
$D2E    $2AE3   CALL     $AE3            ; Call subroutine at AE3
$D30    $0B87   SYS      $B87            ; System call to B87
$D32    $3014   SE       V0, #14         ; Skip if V0 == 20
$D34    $BF13   JP       V0, $F13        ; Jump to V0 + F13
$D36    $4186   SNE      V1, #86         ; Skip if V1 != 134
$D38    $4BF1   SNE      VB, #F1         ; Skip if VB != 241
$D3A    $2C12   CALL     $C12            ; Call subroutine at C12
$D3C    $E1DD   UNKNOWN  $E1DD           ; Unknown Exxx instruction
$D3E    $4E8F   SNE      VE, #8F         ; Skip if VE != 143
$D40    $0F69   SYS      $F69            ; System call to F69
$D42    $911A   UNKNOWN  $911A           ; Unknown 9xxx instruction
$D44    $9ECC   UNKNOWN  $9ECC           ; Unknown 9xxx instruction
$D46    $6C10   LD       VC, #10         ; Load 16 into VC
$D48    $D99F   DRW      V9, V9, #F      ; Draw 15-byte sprite at V9, V9
$D4A    $7A8E   ADD      VA, #8E         ; Add 142 to VA
$D4C    $C47C   RND      V4, #7C         ; V4 = random & 7C
$D4E    $446A   SNE      V4, #6A         ; Skip if V4 != 106
$D50    $0184   SYS      $184            ; System call to 184
$D52    $D5DC   DRW      V5, VD, #C      ; Draw 12-byte sprite at V5, VD
$D54    $82BB   UNKNOWN  82BB            ; Unknown 8xxx instruction
$D56    $1170   JP       $170            ; Jump to 170
$D58    $394B   SE       V9, #4B         ; Skip if V9 == 75
$D5A    $8D38   UNKNOWN  8D38            ; Unknown 8xxx instruction
$D5C    $B6D2   JP       V0, $6D2        ; Jump to V0 + 6D2
$D5E    $73F0   ADD      V3, #F0         ; Add 240 to V3
$D60    $59B3   UNKNOWN  $59B3           ; Unknown 5xxx instruction
$D62    $9D4F   UNKNOWN  $9D4F           ; Unknown 9xxx instruction
$D64    $3BE2   SE       VB, #E2         ; Skip if VB == 226
$D66    $A9DC   LD       I, $9DC         ; Load 9DC into I
$D68    $BC60   JP       V0, $C60        ; Jump to V0 + C60
$D6A    $27D6   CALL     $7D6            ; Call subroutine at 7D6
$D6C    $A11C   LD       I, $11C         ; Load 11C into I
$D6E    $3359   SE       V3, #59         ; Skip if V3 == 89
$D70    $365B   SE       V6, #5B         ; Skip if V6 == 91
$D72    $96E6   UNKNOWN  $96E6           ; Unknown 9xxx instruction
$D74    $978B   UNKNOWN  $978B           ; Unknown 9xxx instruction
$D76    $5940   SE       V9, V4          ; Skip if V9 == V4
$D78    $1DCD   JP       $DCD            ; Jump to DCD
$D7A    $5D7D   UNKNOWN  $5D7D           ; Unknown 5xxx instruction
$D7C    $53E9   UNKNOWN  $53E9           ; Unknown 5xxx instruction
$D7E    $4A19   SNE      VA, #19         ; Skip if VA != 25
$D80    $2161   CALL     $161            ; Call subroutine at 161
$D82    $1B4F   JP       $B4F            ; Jump to B4F
$D84    $3BB1   SE       VB, #B1         ; Skip if VB == 177
$D86    $5669   UNKNOWN  $5669           ; Unknown 5xxx instruction
$D88    $84EA   UNKNOWN  84EA            ; Unknown 8xxx instruction
$D8A    $B3C2   JP       V0, $3C2        ; Jump to V0 + 3C2
$D8C    $567A   UNKNOWN  $567A           ; Unknown 5xxx instruction
$D8E    $CEED   RND      VE, #ED         ; VE = random & ED
$D90    $8BB3   XOR      VB, VB          ; VB ^= VB
$D92    $5017   UNKNOWN  $5017           ; Unknown 5xxx instruction
$D94    $36D6   SE       V6, #D6         ; Skip if V6 == 214
$D96    $4E48   SNE      VE, #48         ; Skip if VE != 72
$D98    $A829   LD       I, $829         ; Load 829 into I
$D9A    $74F9   ADD      V4, #F9         ; Add 249 to V4
$D9C    $6B20   LD       VB, #20         ; Load 32 into VB
$D9E    $6BBC   LD       VB, #BC         ; Load 188 into VB
$DA0    $1B9A   JP       $B9A            ; Jump to B9A
$DA2    $FDCA   UNKNOWN  FDCA            ; Unknown Fxxx instruction
$DA4    $4C6C   SNE      VC, #6C         ; Skip if VC != 108
$DA6    $A0AB   LD       I, $0AB         ; Load 0AB into I
$DA8    $76DA   ADD      V6, #DA         ; Add 218 to V6
$DAA    $23F1   CALL     $3F1            ; Call subroutine at 3F1
$DAC    $A6ED   LD       I, $6ED         ; Load 6ED into I
$DAE    $0D5D   SYS      $D5D            ; System call to D5D
$DB0    $A5B1   LD       I, $5B1         ; Load 5B1 into I
$DB2    $8BCE   SHL      VB              ; VB <<= 1, VF = MSB
$DB4    $B95D   JP       V0, $95D        ; Jump to V0 + 95D
$DB6    $4FC3   SNE      VF, #C3         ; Skip if VF != 195
$DB8    $6ADA   LD       VA, #DA         ; Load 218 into VA
$DBA    $BD0B   JP       V0, $D0B        ; Jump to V0 + D0B
$DBC    $78FE   ADD      V8, #FE         ; Add 254 to V8
$DBE    $B8F3   JP       V0, $8F3        ; Jump to V0 + 8F3
$DC0    $9C6A   UNKNOWN  $9C6A           ; Unknown 9xxx instruction
$DC2    $DDB1   DRW      VD, VB, #1      ; Draw 1-byte sprite at VD, VB
$DC4    $8E43   XOR      VE, V4          ; VE ^= V4
$DC6    $5F05   UNKNOWN  $5F05           ; Unknown 5xxx instruction
$DC8    $4F8A   SNE      VF, #8A         ; Skip if VF != 138
$DCA    $97FF   UNKNOWN  $97FF           ; Unknown 9xxx instruction
$DCC    $D164   DRW      V1, V6, #4      ; Draw 4-byte sprite at V1, V6
$DCE    $8B43   XOR      VB, V4          ; VB ^= V4
$DD0    $FDC0   UNKNOWN  FDC0            ; Unknown Fxxx instruction
$DD2    $FA7B   UNKNOWN  FA7B            ; Unknown Fxxx instruction
$DD4    $7EC7   ADD      VE, #C7         ; Add 199 to VE
$DD6    $0B4C   SYS      $B4C            ; System call to B4C
$DD8    $CB3F   RND      VB, #3F         ; VB = random & 3F
$DDA    $3A24   SE       VA, #24         ; Skip if VA == 36
$DDC    $279C   CALL     $79C            ; Call subroutine at 79C
$DDE    $5F7C   UNKNOWN  $5F7C           ; Unknown 5xxx instruction
$DE0    $39B2   SE       V9, #B2         ; Skip if V9 == 178
$DE2    $B69B   JP       V0, $69B        ; Jump to V0 + 69B
$DE4    $6FB3   LD       VF, #B3         ; Load 179 into VF
$DE6    $854D   UNKNOWN  854D            ; Unknown 8xxx instruction
$DE8    $27E4   CALL     $7E4            ; Call subroutine at 7E4
$DEA    $352A   SE       V5, #2A         ; Skip if V5 == 42
$DEC    $5ECE   UNKNOWN  $5ECE           ; Unknown 5xxx instruction
$DEE    $C549   RND      V5, #49         ; V5 = random & 49
$DF0    $8860   LD       V8, V6          ; V8 = V6
$DF2    $11F5   JP       $1F5            ; Jump to 1F5
$DF4    $E8F4   UNKNOWN  $E8F4           ; Unknown Exxx instruction
$DF6    $50DA   UNKNOWN  $50DA           ; Unknown 5xxx instruction
$DF8    $328C   SE       V2, #8C         ; Skip if V2 == 140
$DFA    $2658   CALL     $658            ; Call subroutine at 658
$DFC    $D5C6   DRW      V5, VC, #6      ; Draw 6-byte sprite at V5, VC
$DFE    $5D04   UNKNOWN  $5D04           ; Unknown 5xxx instruction
$E00    $5F5D   UNKNOWN  $5F5D           ; Unknown 5xxx instruction
$E02    $E6BA   UNKNOWN  $E6BA           ; Unknown Exxx instruction
$E04    $FBDD   UNKNOWN  FBDD            ; Unknown Fxxx instruction
$E06    $48FF   SNE      V8, #FF         ; Skip if V8 != 255
$E08    $D43E   DRW      V4, V3, #E      ; Draw 14-byte sprite at V4, V3
$E0A    $15C9   JP       $5C9            ; Jump to 5C9
$E0C    $4028   SNE      V0, #28         ; Skip if V0 != 40
$E0E    $BCB8   JP       V0, $CB8        ; Jump to V0 + CB8
$E10    $E68B   UNKNOWN  $E68B           ; Unknown Exxx instruction
$E12    $AC3B   LD       I, $C3B         ; Load C3B into I
$E14    $368C   SE       V6, #8C         ; Skip if V6 == 140
$E16    $4129   SNE      V1, #29         ; Skip if V1 != 41
$E18    $8401   OR       V4, V0          ; V4 |= V0
$E1A    $2BF4   CALL     $BF4            ; Call subroutine at BF4
$E1C    $2F90   CALL     $F90            ; Call subroutine at F90
$E1E    $E427   UNKNOWN  $E427           ; Unknown Exxx instruction
$E20    $ACFE   LD       I, $CFE         ; Load CFE into I
$E22    $46FA   SNE      V6, #FA         ; Skip if V6 != 250
$E24    $4AD0   SNE      VA, #D0         ; Skip if VA != 208
$E26    $5FC6   UNKNOWN  $5FC6           ; Unknown 5xxx instruction
$E28    $D2B3   DRW      V2, VB, #3      ; Draw 3-byte sprite at V2, VB
$E2A    $BA9F   JP       V0, $A9F        ; Jump to V0 + A9F
$E2C    $7740   ADD      V7, #40         ; Add 64 to V7
$E2E    $4987   SNE      V9, #87         ; Skip if V9 != 135
$E30    $7106   ADD      V1, #06         ; Add 6 to V1
$E32    $FA6E   UNKNOWN  FA6E            ; Unknown Fxxx instruction
$E34    $B74E   JP       V0, $74E        ; Jump to V0 + 74E
$E36    $8B1B   UNKNOWN  8B1B            ; Unknown 8xxx instruction
$E38    $9929   UNKNOWN  $9929           ; Unknown 9xxx instruction
$E3A    $296E   CALL     $96E            ; Call subroutine at 96E
$E3C    $CEBD   RND      VE, #BD         ; VE = random & BD
$E3E    $40E3   SNE      V0, #E3         ; Skip if V0 != 227
$E40    $6525   LD       V5, #25         ; Load 37 into V5
$E42    $A171   LD       I, $171         ; Load 171 into I
$E44    $15EB   JP       $5EB            ; Jump to 5EB
$E46    $D943   DRW      V9, V4, #3      ; Draw 3-byte sprite at V9, V4
$E48    $BA4C   JP       V0, $A4C        ; Jump to V0 + A4C
$E4A    $4068   SNE      V0, #68         ; Skip if V0 != 104
$E4C    $F6D9   UNKNOWN  F6D9            ; Unknown Fxxx instruction
$E4E    $A4D3   LD       I, $4D3         ; Load 4D3 into I
$E50    $AA48   LD       I, $A48         ; Load A48 into I
$E52    $E950   UNKNOWN  $E950           ; Unknown Exxx instruction
$E54    $C21C   RND      V2, #1C         ; V2 = random & 1C
$E56    $81B0   LD       V1, VB          ; V1 = VB
$E58    $B7A5   JP       V0, $7A5        ; Jump to V0 + 7A5
$E5A    $02E1   SYS      $2E1            ; System call to 2E1
$E5C    $63E9   LD       V3, #E9         ; Load 233 into V3
$E5E    $5F5E   UNKNOWN  $5F5E           ; Unknown 5xxx instruction
$E60    $76E2   ADD      V6, #E2         ; Add 226 to V6
$E62    $360F   SE       V6, #0F         ; Skip if V6 == 15
$E64    $C986   RND      V9, #86         ; V9 = random & 86
$E66    $90AF   UNKNOWN  $90AF           ; Unknown 9xxx instruction
$E68    $51B3   UNKNOWN  $51B3           ; Unknown 5xxx instruction
$E6A    $7658   ADD      V6, #58         ; Add 88 to V6
$E6C    $8CCD   UNKNOWN  8CCD            ; Unknown 8xxx instruction
$E6E    $133E   JP       $33E            ; Jump to 33E
$E70    $C227   RND      V2, #27         ; V2 = random & 27
$E72    $E15F   UNKNOWN  $E15F           ; Unknown Exxx instruction
$E74    $8976   SHR      V9              ; V9 >>= 1, VF = LSB
$E76    $23E7   CALL     $3E7            ; Call subroutine at 3E7
$E78    $87CE   SHL      V7              ; V7 <<= 1, VF = MSB
$E7A    $B276   JP       V0, $276        ; Jump to V0 + 276
$E7C    $8D85   SUB      VD, V8          ; VD -= V8, VF = !borrow
$E7E    $201F   CALL     $01F            ; Call subroutine at 01F
$E80    $788D   ADD      V8, #8D         ; Add 141 to V8
$E82    $0E31   SYS      $E31            ; System call to E31
$E84    $709B   ADD      V0, #9B         ; Add 155 to V0
$E86    $7A9D   ADD      VA, #9D         ; Add 157 to VA
$E88    $F51B   UNKNOWN  F51B            ; Unknown Fxxx instruction
$E8A    $3443   SE       V4, #43         ; Skip if V4 == 67
$E8C    $0535   SYS      $535            ; System call to 535
$E8E    $5B3C   UNKNOWN  $5B3C           ; Unknown 5xxx instruction
$E90    $7941   ADD      V9, #41         ; Add 65 to V9
$E92    $ECE5   UNKNOWN  $ECE5           ; Unknown Exxx instruction
$E94    $FE7F   UNKNOWN  FE7F            ; Unknown Fxxx instruction
$E96    $EDF6   UNKNOWN  $EDF6           ; Unknown Exxx instruction
$E98    $9ED0   SNE      VE, VD          ; Skip if VE != VD
$E9A    $5FDE   UNKNOWN  $5FDE           ; Unknown 5xxx instruction
$E9C    $C135   RND      V1, #35         ; V1 = random & 35
$E9E    $3A05   SE       VA, #05         ; Skip if VA == 5
$EA0    $7C89   ADD      VC, #89         ; Add 137 to VC
$EA2    $9E98   UNKNOWN  $9E98           ; Unknown 9xxx instruction
$EA4    $B311   JP       V0, $311        ; Jump to V0 + 311
$EA6    $6814   LD       V8, #14         ; Load 20 into V8
$EA8    $73B8   ADD      V3, #B8         ; Add 184 to V3
$EAA    $23D1   CALL     $3D1            ; Call subroutine at 3D1
$EAC    $B133   JP       V0, $133        ; Jump to V0 + 133
$EAE    $6A21   LD       VA, #21         ; Load 33 into VA
$EB0    $5252   UNKNOWN  $5252           ; Unknown 5xxx instruction
$EB2    $D8CB   DRW      V8, VC, #B      ; Draw 11-byte sprite at V8, VC
$EB4    $C190   RND      V1, #90         ; V1 = random & 90
$EB6    $6707   LD       V7, #07         ; Load 7 into V7
$EB8    $0B19   SYS      $B19            ; System call to B19
$EBA    $E58C   UNKNOWN  $E58C           ; Unknown Exxx instruction
$EBC    $8DB9   UNKNOWN  8DB9            ; Unknown 8xxx instruction
$EBE    $119F   JP       $19F            ; Jump to 19F
$EC0    $DE44   DRW      VE, V4, #4      ; Draw 4-byte sprite at VE, V4
$EC2    $59E7   UNKNOWN  $59E7           ; Unknown 5xxx instruction
$EC4    $F820   UNKNOWN  F820            ; Unknown Fxxx instruction
$EC6    $79F6   ADD      V9, #F6         ; Add 246 to V9
$EC8    $E93D   UNKNOWN  $E93D           ; Unknown Exxx instruction
$ECA    $3C58   SE       VC, #58         ; Skip if VC == 88
$ECC    $E2C2   UNKNOWN  $E2C2           ; Unknown Exxx instruction
$ECE    $FE74   UNKNOWN  FE74            ; Unknown Fxxx instruction
$ED0    $F59F   UNKNOWN  F59F            ; Unknown Fxxx instruction
$ED2    $C0FE   RND      V0, #FE         ; V0 = random & FE
$ED4    $8A83   XOR      VA, V8          ; VA ^= V8
$ED6    $3FFB   SE       VF, #FB         ; Skip if VF == 251
$ED8    $63F0   LD       V3, #F0         ; Load 240 into V3
$EDA    $264B   CALL     $64B            ; Call subroutine at 64B
$EDC    $FB7A   UNKNOWN  FB7A            ; Unknown Fxxx instruction
$EDE    $7991   ADD      V9, #91         ; Add 145 to V9
$EE0    $372F   SE       V7, #2F         ; Skip if V7 == 47
$EE2    $AEE3   LD       I, $EE3         ; Load EE3 into I
$EE4    $0004   SYS      $004            ; System call to 004
$EE6    $6E4B   LD       VE, #4B         ; Load 75 into VE
$EE8    $C0CB   RND      V0, #CB         ; V0 = random & CB
$EEA    $861A   UNKNOWN  861A            ; Unknown 8xxx instruction
$EEC    $2E2E   CALL     $E2E            ; Call subroutine at E2E
$EEE    $C1B0   RND      V1, #B0         ; V1 = random & B0
$EF0    $D3AA   DRW      V3, VA, #A      ; Draw 10-byte sprite at V3, VA
$EF2    $4272   SNE      V2, #72         ; Skip if V2 != 114
$EF4    $6A17   LD       VA, #17         ; Load 23 into VA
$EF6    $9DAA   UNKNOWN  $9DAA           ; Unknown 9xxx instruction
$EF8    $3B51   SE       VB, #51         ; Skip if VB == 81
$EFA    $CF0A   RND      VF, #0A         ; VF = random & 0A
$EFC    $74A8   ADD      V4, #A8         ; Add 168 to V4
$EFE    $D13A   DRW      V1, V3, #A      ; Draw 10-byte sprite at V1, V3
$F00    $4A86   SNE      VA, #86         ; Skip if VA != 134
$F02    $202E   CALL     $02E            ; Call subroutine at 02E
$F04    $4263   SNE      V2, #63         ; Skip if V2 != 99
$F06    $BABD   JP       V0, $ABD        ; Jump to V0 + ABD
$F08    $5861   UNKNOWN  $5861           ; Unknown 5xxx instruction
$F0A    $42A5   SNE      V2, #A5         ; Skip if V2 != 165
$F0C    $12F9   JP       $2F9            ; Jump to 2F9
$F0E    $E5CB   UNKNOWN  $E5CB           ; Unknown Exxx instruction
$F10    $4E3A   SNE      VE, #3A         ; Skip if VE != 58
$F12    $0EF7   SYS      $EF7            ; System call to EF7
$F14    $E9B4   UNKNOWN  $E9B4           ; Unknown Exxx instruction
$F16    $3BBB   SE       VB, #BB         ; Skip if VB == 187
$F18    $D75D   DRW      V7, V5, #D      ; Draw 13-byte sprite at V7, V5
$F1A    $F424   UNKNOWN  F424            ; Unknown Fxxx instruction
$F1C    $47AF   SNE      V7, #AF         ; Skip if V7 != 175
$F1E    $73E8   ADD      V3, #E8         ; Add 232 to V3
$F20    $1DEE   JP       $DEE            ; Jump to DEE
$F22    $AC15   LD       I, $C15         ; Load C15 into I
$F24    $4144   SNE      V1, #44         ; Skip if V1 != 68
$F26    $7F08   ADD      VF, #08         ; Add 8 to VF
$F28    $C16E   RND      V1, #6E         ; V1 = random & 6E
$F2A    $EC8E   UNKNOWN  $EC8E           ; Unknown Exxx instruction
$F2C    $15DE   JP       $5DE            ; Jump to 5DE
$F2E    $5B0F   UNKNOWN  $5B0F           ; Unknown 5xxx instruction
$F30    $6AB4   LD       VA, #B4         ; Load 180 into VA
$F32    $8BB9   UNKNOWN  8BB9            ; Unknown 8xxx instruction
$F34    $1D78   JP       $D78            ; Jump to D78
$F36    $0439   SYS      $439            ; System call to 439
$F38    $F321   UNKNOWN  F321            ; Unknown Fxxx instruction
$F3A    $4801   SNE      V8, #01         ; Skip if V8 != 1
$F3C    $FC29   LD       F, VC           ; I = sprite address for digit VC
$F3E    $B107   JP       V0, $107        ; Jump to V0 + 107
$F40    $5633   UNKNOWN  $5633           ; Unknown 5xxx instruction
$F42    $AB25   LD       I, $B25         ; Load B25 into I
$F44    $EC57   UNKNOWN  $EC57           ; Unknown Exxx instruction
$F46    $8CD2   AND      VC, VD          ; VC &= VD
$F48    $1B70   JP       $B70            ; Jump to B70
$F4A    $CFB2   RND      VF, #B2         ; VF = random & B2
$F4C    $2FE1   CALL     $FE1            ; Call subroutine at FE1
$F4E    $8E30   LD       VE, V3          ; VE = V3
$F50    $E1A2   UNKNOWN  $E1A2           ; Unknown Exxx instruction
$F52    $652D   LD       V5, #2D         ; Load 45 into V5
$F54    $3FBF   SE       VF, #BF         ; Skip if VF == 191
$F56    $CB00   RND      VB, #00         ; VB = random & 00
$F58    $2251   CALL     $251            ; Call subroutine at 251
$F5A    $FB79   UNKNOWN  FB79            ; Unknown Fxxx instruction
$F5C    $07EB   SYS      $7EB            ; System call to 7EB
$F5E    $5385   UNKNOWN  $5385           ; Unknown 5xxx instruction
$F60    $5914   UNKNOWN  $5914           ; Unknown 5xxx instruction
$F62    $6A82   LD       VA, #82         ; Load 130 into VA
$F64    $0158   SYS      $158            ; System call to 158
$F66    $49F2   SNE      V9, #F2         ; Skip if V9 != 242
$F68    $D624   DRW      V6, V2, #4      ; Draw 4-byte sprite at V6, V2
$F6A    $D14D   DRW      V1, V4, #D      ; Draw 13-byte sprite at V1, V4
$F6C    $654C   LD       V5, #4C         ; Load 76 into V5
$F6E    $BAF6   JP       V0, $AF6        ; Jump to V0 + AF6
$F70    $A3DF   LD       I, $3DF         ; Load 3DF into I
$F72    $0B03   SYS      $B03            ; System call to B03
$F74    $264B   CALL     $64B            ; Call subroutine at 64B
$F76    $2B37   CALL     $B37            ; Call subroutine at B37
$F78    $A2E9   LD       I, $2E9         ; Load 2E9 into I
$F7A    $579B   UNKNOWN  $579B           ; Unknown 5xxx instruction
$F7C    $6729   LD       V7, #29         ; Load 41 into V7
$F7E    $FB3A   UNKNOWN  FB3A            ; Unknown Fxxx instruction
$F80    $6F06   LD       VF, #06         ; Load 6 into VF
$F82    $AD25   LD       I, $D25         ; Load D25 into I
$F84    $86D1   OR       V6, VD          ; V6 |= VD
$F86    $A73F   LD       I, $73F         ; Load 73F into I
$F88    $3227   SE       V2, #27         ; Skip if V2 == 39
$F8A    $0B52   SYS      $B52            ; System call to B52
$F8C    $A10E   LD       I, $10E         ; Load 10E into I
$F8E    $4141   SNE      V1, #41         ; Skip if V1 != 65
$F90    $BB31   JP       V0, $B31        ; Jump to V0 + B31
$F92    $6BAB   LD       VB, #AB         ; Load 171 into VB
$F94    $CEA7   RND      VE, #A7         ; VE = random & A7
$F96    $218C   CALL     $18C            ; Call subroutine at 18C
$F98    $39E3   SE       V9, #E3         ; Skip if V9 == 227
$F9A    $F9CF   UNKNOWN  F9CF            ; Unknown Fxxx instruction
$F9C    $ABAE   LD       I, $BAE         ; Load BAE into I
$F9E    $37A0   SE       V7, #A0         ; Skip if V7 == 160
$FA0    $FA89   UNKNOWN  FA89            ; Unknown Fxxx instruction
$FA2    $7284   ADD      V2, #84         ; Add 132 to V2
$FA4    $905D   UNKNOWN  $905D           ; Unknown 9xxx instruction
$FA6    $ADF6   LD       I, $DF6         ; Load DF6 into I
$FA8    $63C4   LD       V3, #C4         ; Load 196 into V3
$FAA    $C31B   RND      V3, #1B         ; V3 = random & 1B
$FAC    $1374   JP       $374            ; Jump to 374
$FAE    $C6A1   RND      V6, #A1         ; V6 = random & A1
$FB0    $9418   UNKNOWN  $9418           ; Unknown 9xxx instruction
$FB2    $6541   LD       V5, #41         ; Load 65 into V5
$FB4    $93FE   UNKNOWN  $93FE           ; Unknown 9xxx instruction
$FB6    $1EDE   JP       $EDE            ; Jump to EDE
$FB8    $5324   UNKNOWN  $5324           ; Unknown 5xxx instruction
$FBA    $D0DE   DRW      V0, VD, #E      ; Draw 14-byte sprite at V0, VD
$FBC    $FBEF   UNKNOWN  FBEF            ; Unknown Fxxx instruction
$FBE    $BBA7   JP       V0, $BA7        ; Jump to V0 + BA7
$FC0    $0AE3   SYS      $AE3            ; System call to AE3
$FC2    $326E   SE       V2, #6E         ; Skip if V2 == 110
$FC4    $8E81   OR       VE, V8          ; VE |= V8
$FC6    $5F35   UNKNOWN  $5F35           ; Unknown 5xxx instruction
$FC8    $C644   RND      V6, #44         ; V6 = random & 44
$FCA    $6104   LD       V1, #04         ; Load 4 into V1
$FCC    $24CF   CALL     $4CF            ; Call subroutine at 4CF
$FCE    $D384   DRW      V3, V8, #4      ; Draw 4-byte sprite at V3, V8
$FD0    $671B   LD       V7, #1B         ; Load 27 into V7
$FD2    $8E6C   UNKNOWN  8E6C            ; Unknown 8xxx instruction
$FD4    $70C5   ADD      V0, #C5         ; Add 197 to V0
$FD6    $9472   UNKNOWN  $9472           ; Unknown 9xxx instruction
$FD8    $3744   SE       V7, #44         ; Skip if V7 == 68
$FDA    $B53A   JP       V0, $53A        ; Jump to V0 + 53A
$FDC    $08DA   SYS      $8DA            ; System call to 8DA
$FDE    $CDA5   RND      VD, #A5         ; VD = random & A5
$FE0    $0560   SYS      $560            ; System call to 560
$FE2    $8979   UNKNOWN  8979            ; Unknown 8xxx instruction
$FE4    $6D0C   LD       VD, #0C         ; Load 12 into VD
$FE6    $2F74   CALL     $F74            ; Call subroutine at F74
$FE8    $40EF   SNE      V0, #EF         ; Skip if V0 != 239
$FEA    $53A8   UNKNOWN  $53A8           ; Unknown 5xxx instruction
$FEC    $5EE1   UNKNOWN  $5EE1           ; Unknown 5xxx instruction
$FEE    $DD4F   DRW      VD, V4, #F      ; Draw 15-byte sprite at VD, V4
$FF0    $0494   SYS      $494            ; System call to 494
$FF2    $473D   SNE      V7, #3D         ; Skip if V7 != 61
$FF4    $A62B   LD       I, $62B         ; Load 62B into I
$FF6    $6D86   LD       VD, #86         ; Load 134 into VD
$FF8    $41DF   SNE      V1, #DF         ; Skip if V1 != 223
$FFA    $D42F   DRW      V4, V2, #F      ; Draw 15-byte sprite at V4, V2
$FFC    $12BF   JP       $2BF            ; Jump to 2BF
$FFE    $4B4F   SNE      VB, #4F         ; Skip if VB != 79

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 491 (27.4%)
  LD      : 227 (12.7%)
  JP      : 216 (12.1%)
  ADD     : 123 ( 6.9%)
  SE      : 121 ( 6.8%)
  CALL    : 120 ( 6.7%)
  RND     : 117 ( 6.5%)
  SNE     : 116 ( 6.5%)
  SYS     : 104 ( 5.8%)
  DRW     :  95 ( 5.3%)
  OR      :  15 ( 0.8%)
  SHL     :  11 ( 0.6%)
  AND     :  11 ( 0.6%)
  XOR     :   7 ( 0.4%)
  SHR     :   7 ( 0.4%)
  SUB     :   6 ( 0.3%)
  SUBN    :   5 ( 0.3%)

Memory Operations: 350 (19.5%)
Arithmetic Operations: 167 (9.3%)
