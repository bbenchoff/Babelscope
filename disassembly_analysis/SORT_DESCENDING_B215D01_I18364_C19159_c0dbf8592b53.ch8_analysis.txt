
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B215D01_I18364_C19159_c0dbf8592b53.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 215
Instance: 18364
Direction: descending
Final Array: [169, 169, 169, 169, 169, 169, 108, 105]
Operations: R:0 W:6 C:223 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 212
Sort Array References:
  $224: LD I, $8AA ; Load 8AA into I
  $22A: LD I, $9A9 ; Load 9A9 into I
  $22C: LD I, $9A9 ; Load 9A9 into I
  $22E: LD I, $9A9 ; Load 9A9 into I
  $230: LD I, $9A9 ; Load 9A9 into I
  $232: LD I, $9A9 ; Load 9A9 into I
  $234: LD I, $9A9 ; Load 9A9 into I
  $236: LD I, $9A9 ; Load 9A9 into I
  $238: LD I, $9A9 ; Load 9A9 into I
  $23A: LD I, $9A9 ; Load 9A9 into I
  $23C: LD I, $9A9 ; Load 9A9 into I
  $23E: LD I, $9A9 ; Load 9A9 into I
  $240: LD I, $9A9 ; Load 9A9 into I
  $242: LD I, $9A9 ; Load 9A9 into I
  $244: LD I, $9A9 ; Load 9A9 into I
  $246: LD I, $9A9 ; Load 9A9 into I
  $248: LD I, $9A9 ; Load 9A9 into I
  $24A: LD I, $9A9 ; Load 9A9 into I
  $24C: LD I, $9A9 ; Load 9A9 into I
  $24E: LD I, $9A9 ; Load 9A9 into I
  $250: LD I, $9A9 ; Load 9A9 into I
  $252: LD I, $9A9 ; Load 9A9 into I
  $254: LD I, $9A9 ; Load 9A9 into I
  $256: LD I, $9A9 ; Load 9A9 into I
  $258: LD I, $9A9 ; Load 9A9 into I
  $25A: LD I, $9A9 ; Load 9A9 into I
  $25C: LD I, $9A9 ; Load 9A9 into I
  $25E: LD I, $9A9 ; Load 9A9 into I
  $260: LD I, $9A9 ; Load 9A9 into I
  $262: LD I, $9A9 ; Load 9A9 into I
  $264: LD I, $9A9 ; Load 9A9 into I
  $266: LD I, $9A9 ; Load 9A9 into I
  $268: LD I, $9A9 ; Load 9A9 into I
  $26A: LD I, $9A9 ; Load 9A9 into I
  $26C: LD I, $9A9 ; Load 9A9 into I
  $26E: LD I, $9A9 ; Load 9A9 into I
  $270: LD I, $9A9 ; Load 9A9 into I
  $272: LD I, $9A9 ; Load 9A9 into I
  $274: LD I, $9A9 ; Load 9A9 into I
  $276: LD I, $9A9 ; Load 9A9 into I
  $278: LD I, $9A9 ; Load 9A9 into I
  $27A: LD I, $9A9 ; Load 9A9 into I
  $27C: LD I, $9A9 ; Load 9A9 into I
  $27E: LD I, $9A9 ; Load 9A9 into I
  $280: LD I, $9A9 ; Load 9A9 into I
  $282: LD I, $9A9 ; Load 9A9 into I
  $284: LD I, $9A9 ; Load 9A9 into I
  $286: LD I, $9A9 ; Load 9A9 into I
  $288: LD I, $9A9 ; Load 9A9 into I
  $28A: LD I, $9A9 ; Load 9A9 into I
  $28C: LD I, $9A9 ; Load 9A9 into I
  $28E: LD I, $9A9 ; Load 9A9 into I
  $290: LD I, $9A9 ; Load 9A9 into I
  $292: LD I, $9A9 ; Load 9A9 into I
  $294: LD I, $9A9 ; Load 9A9 into I
  $296: LD I, $9A9 ; Load 9A9 into I
  $298: LD I, $9A9 ; Load 9A9 into I
  $29A: LD I, $9A9 ; Load 9A9 into I
  $29C: LD I, $9A9 ; Load 9A9 into I
  $29E: LD I, $9A9 ; Load 9A9 into I
  $2A0: LD I, $9A9 ; Load 9A9 into I
  $2A2: LD I, $9A9 ; Load 9A9 into I
  $2A4: LD I, $9A9 ; Load 9A9 into I
  $2A6: LD I, $9A9 ; Load 9A9 into I
  $2A8: LD I, $9A9 ; Load 9A9 into I
  $2AA: LD I, $9A9 ; Load 9A9 into I
  $2AC: LD I, $9A9 ; Load 9A9 into I
  $2AE: LD I, $9A9 ; Load 9A9 into I
  $2B0: LD I, $9A9 ; Load 9A9 into I
  $2B2: LD I, $9A9 ; Load 9A9 into I
  $2B4: LD I, $9A9 ; Load 9A9 into I
  $2B6: LD I, $9A9 ; Load 9A9 into I
  $2B8: LD I, $9A9 ; Load 9A9 into I
  $2BA: LD I, $9A9 ; Load 9A9 into I
  $2BC: LD I, $9A9 ; Load 9A9 into I
  $2BE: LD I, $9A9 ; Load 9A9 into I
  $2C0: LD I, $9A9 ; Load 9A9 into I
  $2C2: LD I, $9A9 ; Load 9A9 into I
  $2C4: LD I, $9A9 ; Load 9A9 into I
  $2C6: LD I, $9A9 ; Load 9A9 into I
  $2C8: LD I, $9A9 ; Load 9A9 into I
  $2CA: LD I, $9A9 ; Load 9A9 into I
  $2CC: LD I, $9A9 ; Load 9A9 into I
  $2CE: LD I, $9A9 ; Load 9A9 into I
  $2D0: LD I, $9A9 ; Load 9A9 into I
  $2D2: LD I, $9A9 ; Load 9A9 into I
  $2D4: LD I, $9A9 ; Load 9A9 into I
  $2D6: LD I, $9A9 ; Load 9A9 into I
  $2D8: LD I, $9A9 ; Load 9A9 into I
  $2DA: LD I, $9A9 ; Load 9A9 into I
  $2DC: LD I, $9A9 ; Load 9A9 into I
  $2DE: LD I, $9A9 ; Load 9A9 into I
  $2E0: LD I, $9A9 ; Load 9A9 into I
  $2E2: LD I, $9A9 ; Load 9A9 into I
  $2E4: LD I, $9A9 ; Load 9A9 into I
  $2E6: LD I, $9A9 ; Load 9A9 into I
  $2E8: LD I, $9A9 ; Load 9A9 into I
  $2EA: LD I, $9A9 ; Load 9A9 into I
  $2EC: LD I, $9A9 ; Load 9A9 into I
  $2EE: LD I, $9A9 ; Load 9A9 into I
  $2F0: LD I, $9A9 ; Load 9A9 into I
  $2F2: LD I, $9A9 ; Load 9A9 into I
  $2F4: LD I, $9A9 ; Load 9A9 into I
  $2F6: LD I, $9A9 ; Load 9A9 into I
  $2F8: LD I, $9A9 ; Load 9A9 into I
  $2FA: LD I, $9A9 ; Load 9A9 into I
  $2FC: LD I, $9A9 ; Load 9A9 into I
  $2FE: LD I, $9A9 ; Load 9A9 into I
  $300: LD I, $9A9 ; Load 9A9 into I
  $302: LD I, $9A9 ; Load 9A9 into I
  $304: LD I, $9A9 ; Load 9A9 into I
  $342: LD I, $FCB ; Load FCB into I
  $372: LD I, $B98 ; Load B98 into I
  $37E: LD I, $49D ; Load 49D into I
  $390: LD I, $32A ; Load 32A into I
  $3A8: LD I, $283 ; Load 283 into I
  $3B2: LD I, $453 ; Load 453 into I
  $3C2: LD I, $C9A ; Load C9A into I
  $402: LD I, $634 ; Load 634 into I
  $41C: LD I, $84D ; Load 84D into I
  $48A: LD I, $A1A ; Load A1A into I
  $4A8: LD I, $6EA ; Load 6EA into I
  $4B0: LD I, $6DB ; Load 6DB into I
  $4C2: LD I, $B7F ; Load B7F into I
  $4FC: LD I, $9AE ; Load 9AE into I
  $52A: LD I, $FBE ; Load FBE into I
  $532: LD I, $542 ; Load 542 into I
  $534: LD I, $4F0 ; Load 4F0 into I
  $582: LD I, $AAB ; Load AAB into I
  $584: LD I, $88A ; Load 88A into I
  $5A2: LD I, $B61 ; Load B61 into I
  $5DA: LD I, $D64 ; Load D64 into I
  $5F4: LD I, $F59 ; Load F59 into I
  $5F8: LD I, $843 ; Load 843 into I
  $602: LD I, $1F9 ; Load 1F9 into I
  $65C: LD I, $529 ; Load 529 into I
  $676: LD I, $5BF ; Load 5BF into I
  $67C: LD I, $953 ; Load 953 into I
  $6AE: LD I, $290 ; Load 290 into I
  $6BE: LD I, $000 ; Load 000 into I
  $6D4: LD I, $693 ; Load 693 into I
  $6F6: LD I, $531 ; Load 531 into I
  $732: LD I, $229 ; Load 229 into I
  $746: LD I, $61B ; Load 61B into I
  $74C: LD I, $E99 ; Load E99 into I
  $772: LD I, $0D0 ; Load 0D0 into I
  $782: LD [I], V0 ; Store V0-V0 at I
  $79E: LD I, $7C8 ; Load 7C8 into I
  $7D8: LD I, $0DF ; Load 0DF into I
  $7DA: LD I, $805 ; Load 805 into I
  $7FE: LD I, $719 ; Load 719 into I
  $814: LD I, $602 ; Load 602 into I
  $83A: LD I, $F3E ; Load F3E into I
  $844: LD I, $C44 ; Load C44 into I
  $86E: LD I, $B1E ; Load B1E into I
  $882: LD I, $282 ; Load 282 into I
  $888: LD I, $64A ; Load 64A into I
  $89A: LD I, $369 ; Load 369 into I
  $8AE: LD I, $751 ; Load 751 into I
  $8D6: LD I, $341 ; Load 341 into I
  $8F4: LD [I], V5 ; Store V0-V5 at I
  $8FC: LD I, $207 ; Load 207 into I
  $902: LD I, $FDC ; Load FDC into I
  $910: LD I, $7C3 ; Load 7C3 into I
  $918: LD I, $A69 ; Load A69 into I
  $936: LD I, $B15 ; Load B15 into I
  $94C: LD I, $E5B ; Load E5B into I
  $9B0: LD I, $2FA ; Load 2FA into I
  $9C6: LD I, $8DA ; Load 8DA into I
  $9FE: LD I, $AC7 ; Load AC7 into I
  $A02: LD I, $5F2 ; Load 5F2 into I
  $A4E: LD I, $403 ; Load 403 into I
  $AAC: LD I, $BFD ; Load BFD into I
  $AB0: LD I, $22B ; Load 22B into I
  $AB4: LD I, $49A ; Load 49A into I
  $ABE: LD I, $3E7 ; Load 3E7 into I
  $AC2: LD I, $CC7 ; Load CC7 into I
  $AC8: LD I, $BC8 ; Load BC8 into I
  $AEC: LD I, $26D ; Load 26D into I
  $B08: LD I, $280 ; Load 280 into I
  $B9C: LD [I], V5 ; Store V0-V5 at I
  $BB8: LD I, $B43 ; Load B43 into I
  $BDE: LD I, $DFD ; Load DFD into I
  $BF0: LD I, $CDC ; Load CDC into I
  $C5C: LD I, $A78 ; Load A78 into I
  $C6A: LD I, $1BB ; Load 1BB into I
  $C74: LD I, $3C4 ; Load 3C4 into I
  $C94: LD I, $DA2 ; Load DA2 into I
  $CAA: LD I, $E70 ; Load E70 into I
  $D2E: LD I, $39B ; Load 39B into I
  $D44: LD I, $2B3 ; Load 2B3 into I
  $D64: LD I, $CB6 ; Load CB6 into I
  $D8C: LD I, $D0B ; Load D0B into I
  $E02: LD I, $1B2 ; Load 1B2 into I
  $E52: LD I, $76B ; Load 76B into I
  $E58: LD I, $1F3 ; Load 1F3 into I
  $E5A: LD I, $AEB ; Load AEB into I
  $E6C: LD I, $1A3 ; Load 1A3 into I
  $E74: LD I, $452 ; Load 452 into I
  $E7A: LD I, $9CF ; Load 9CF into I
  $E7E: LD I, $4E2 ; Load 4E2 into I
  $E9C: LD I, $E44 ; Load E44 into I
  $EAE: LD I, $EB2 ; Load EB2 into I
  $EC6: LD I, $FBC ; Load FBC into I
  $EDE: LD I, $78B ; Load 78B into I
  $EFC: LD I, $5BE ; Load 5BE into I
  $F0C: LD I, $EA2 ; Load EA2 into I
  $F22: LD I, $54C ; Load 54C into I
  $F3E: LD I, $540 ; Load 540 into I
  $F40: LD I, $B71 ; Load B71 into I
  $FAC: LD I, $B91 ; Load B91 into I
  $FF6: LD I, $A62 ; Load A62 into I

CONTROL FLOW ANALYSIS:
Jumps: 201
Calls: 98
Branches: 247
Loops: 120
Loop Structures:
  $370 -> $00A (backward jump)
  $3EC -> $02F (backward jump)
  $458 -> $107 (backward jump)
  $476 -> $0C3 (backward jump)
  $4BC -> $393 (backward jump)
  $506 -> $062 (backward jump)
  $508 -> $16B (backward jump)
  $55E -> $31A (backward jump)
  $568 -> $1BB (backward jump)
  $56E -> $40F (backward jump)
  $588 -> $1D2 (backward jump)
  $5E2 -> $05F (backward jump)
  $5F6 -> $56D (backward jump)
  $628 -> $430 (backward jump)
  $63A -> $4B9 (backward jump)
  $69C -> $3C0 (backward jump)
  $6C8 -> $040 (backward jump)
  $6E2 -> $143 (backward jump)
  $73C -> $305 (backward jump)
  $742 -> $174 (backward jump)
  $76A -> $07A (backward jump)
  $76E -> $320 (backward jump)
  $780 -> $519 (backward jump)
  $78A -> $5A9 (backward jump)
  $816 -> $034 (backward jump)
  $81A -> $7CC (backward jump)
  $84E -> $0B4 (backward jump)
  $890 -> $54A (backward jump)
  $8AA -> $57E (backward jump)
  $8B6 -> $49F (backward jump)
  $8C4 -> $2CC (backward jump)
  $8DA -> $766 (backward jump)
  $8FA -> $4A3 (backward jump)
  $904 -> $2BD (backward jump)
  $908 -> $8C9 (backward jump)
  $924 -> $36B (backward jump)
  $93A -> $91D (backward jump)
  $952 -> $43E (backward jump)
  $972 -> $470 (backward jump)
  $97A -> $8FD (backward jump)
  $98C -> $85A (backward jump)
  $9B8 -> $886 (backward jump)
  $9E2 -> $085 (backward jump)
  $9F2 -> $48E (backward jump)
  $A38 -> $732 (backward jump)
  $A3C -> $80C (backward jump)
  $A4C -> $992 (backward jump)
  $A52 -> $005 (backward jump)
  $A70 -> $4EA (backward jump)
  $A7C -> $3A5 (backward jump)
  $A8E -> $239 (backward jump)
  $A94 -> $871 (backward jump)
  $A9C -> $A6D (backward jump)
  $B36 -> $230 (backward jump)
  $B44 -> $A88 (backward jump)
  $B60 -> $198 (backward jump)
  $B64 -> $743 (backward jump)
  $B66 -> $A4B (backward jump)
  $B88 -> $649 (backward jump)
  $B94 -> $569 (backward jump)
  $BBC -> $305 (backward jump)
  $BD0 -> $120 (backward jump)
  $BE6 -> $009 (backward jump)
  $C04 -> $63C (backward jump)
  $C10 -> $ACE (backward jump)
  $C30 -> $A05 (backward jump)
  $C58 -> $6B7 (backward jump)
  $C80 -> $AF8 (backward jump)
  $C90 -> $A0B (backward jump)
  $C98 -> $183 (backward jump)
  $CB2 -> $6A0 (backward jump)
  $CB6 -> $07B (backward jump)
  $CC6 -> $86B (backward jump)
  $CDE -> $919 (backward jump)
  $CE6 -> $4F2 (backward jump)
  $CEA -> $67E (backward jump)
  $D0A -> $45F (backward jump)
  $D16 -> $93F (backward jump)
  $D60 -> $45E (backward jump)
  $D66 -> $971 (backward jump)
  $D88 -> $D45 (backward jump)
  $D92 -> $6C1 (backward jump)
  $D96 -> $1E1 (backward jump)
  $D9C -> $2D3 (backward jump)
  $DA0 -> $402 (backward jump)
  $DA2 -> $1E4 (backward jump)
  $DDA -> $D6D (backward jump)
  $DE8 -> $C60 (backward jump)
  $DF6 -> $ABC (backward jump)
  $DF8 -> $31F (backward jump)
  $E14 -> $A73 (backward jump)
  $E30 -> $945 (backward jump)
  $E38 -> $D63 (backward jump)
  $E3C -> $0A5 (backward jump)
  $E54 -> $59B (backward jump)
  $E68 -> $8C7 (backward jump)
  $E6E -> $D8D (backward jump)
  $E80 -> $529 (backward jump)
  $E8A -> $5C8 (backward jump)
  $E9E -> $AE7 (backward jump)
  $EB8 -> $0D8 (backward jump)
  $EBE -> $B9E (backward jump)
  $ECC -> $434 (backward jump)
  $ECE -> $BAB (backward jump)
  $ED0 -> $060 (backward jump)
  $EE4 -> $1B1 (backward jump)
  $EF0 -> $819 (backward jump)
  $F16 -> $14E (backward jump)
  $F1A -> $A84 (backward jump)
  $F32 -> $319 (backward jump)
  $F4E -> $679 (backward jump)
  $F64 -> $EBA (backward jump)
  $F7C -> $723 (backward jump)
  $F84 -> $276 (backward jump)
  $F86 -> $B1E (backward jump)
  $FBA -> $7B4 (backward jump)
  $FD0 -> $2CA (backward jump)
  $FD4 -> $2EA (backward jump)
  $FDA -> $13D (backward jump)
  $FDE -> $E7C (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $8C3A   UNKNOWN  8C3A            ; Unknown 8xxx instruction
$202    $09A9   SYS      $9A9            ; System call to 9A9
$204    $DA86   DRW      VA, V8, #6      ; Draw 6-byte sprite at VA, V8
$206    $0640   SYS      $640            ; System call to 640
$208    $0779   SYS      $779            ; System call to 779
$20A    $7DFB   ADD      VD, #FB         ; Add 251 to VD
$20C    $5799   UNKNOWN  $5799           ; Unknown 5xxx instruction
$20E    $2C93   CALL     $C93            ; Call subroutine at C93
$210    $9774   UNKNOWN  $9774           ; Unknown 9xxx instruction
$212    $0530   SYS      $530            ; System call to 530
$214    $BE90   JP       V0, $E90        ; Jump to V0 + E90
$216    $1820   JP       $820            ; Jump to 820
$218    $32E0   SE       V2, #E0         ; Skip if V2 == 224
$21A    $EEB5   UNKNOWN  $EEB5           ; Unknown Exxx instruction
$21C    $ECCB   UNKNOWN  $ECCB           ; Unknown Exxx instruction
$21E    $6B37   LD       VB, #37         ; Load 55 into VB
$220    $5DC5   UNKNOWN  $5DC5           ; Unknown 5xxx instruction
$222    $9138   UNKNOWN  $9138           ; Unknown 9xxx instruction
$224    $A8AA   LD       I, $8AA         ; Load 8AA into I
$226    $DFE6   DRW      VF, VE, #6      ; Draw 6-byte sprite at VF, VE
$228    $B8A9   JP       V0, $8A9        ; Jump to V0 + 8A9
$22A    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$22C    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$22E    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$230    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$232    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$234    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$236    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$238    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$23A    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$23C    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$23E    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$240    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$242    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$244    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$246    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$248    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$24A    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$24C    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$24E    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$250    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$252    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$254    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$256    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$258    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$25A    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$25C    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$25E    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$260    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$262    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$264    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$266    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$268    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$26A    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$26C    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$26E    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$270    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$272    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$274    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$276    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$278    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$27A    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$27C    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$27E    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$280    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$282    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$284    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$286    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$288    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$28A    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$28C    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$28E    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$290    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$292    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$294    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$296    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$298    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$29A    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$29C    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$29E    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2A0    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2A2    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2A4    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2A6    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2A8    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2AA    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2AC    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2AE    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2B0    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2B2    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2B4    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2B6    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2B8    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2BA    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2BC    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2BE    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2C0    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2C2    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2C4    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2C6    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2C8    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2CA    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2CC    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2CE    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2D0    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2D2    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2D4    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2D6    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2D8    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2DA    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2DC    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2DE    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2E0    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2E2    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2E4    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2E6    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2E8    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2EA    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2EC    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2EE    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2F0    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2F2    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2F4    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2F6    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2F8    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2FA    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2FC    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2FE    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$300    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$302    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$304    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$306    $6C69   LD       VC, #69         ; Load 105 into VC
$308    $2D32   CALL     $D32            ; Call subroutine at D32
$30A    $C535   RND      V5, #35         ; V5 = random & 35
$30C    $94B1   UNKNOWN  $94B1           ; Unknown 9xxx instruction
$30E    $3C48   SE       VC, #48         ; Skip if VC == 72
$310    $FB69   UNKNOWN  FB69            ; Unknown Fxxx instruction
$312    $9F50   SNE      VF, V5          ; Skip if VF != V5
$314    $D134   DRW      V1, V3, #4      ; Draw 4-byte sprite at V1, V3
$316    $381B   SE       V8, #1B         ; Skip if V8 == 27
$318    $610F   LD       V1, #0F         ; Load 15 into V1
$31A    $09E8   SYS      $9E8            ; System call to 9E8
$31C    $4BCD   SNE      VB, #CD         ; Skip if VB != 205
$31E    $3633   SE       V6, #33         ; Skip if V6 == 51
$320    $4CAD   SNE      VC, #AD         ; Skip if VC != 173
$322    $EABD   UNKNOWN  $EABD           ; Unknown Exxx instruction
$324    $3CF9   SE       VC, #F9         ; Skip if VC == 249
$326    $F258   UNKNOWN  F258            ; Unknown Fxxx instruction
$328    $CF01   RND      VF, #01         ; VF = random & 01
$32A    $88D0   LD       V8, VD          ; V8 = VD
$32C    $C1EE   RND      V1, #EE         ; V1 = random & EE
$32E    $507E   UNKNOWN  $507E           ; Unknown 5xxx instruction
$330    $38D7   SE       V8, #D7         ; Skip if V8 == 215
$332    $09E8   SYS      $9E8            ; System call to 9E8
$334    $04C4   SYS      $4C4            ; System call to 4C4
$336    $D460   DRW      V4, V6, #0      ; Draw 0-byte sprite at V4, V6
$338    $E679   UNKNOWN  $E679           ; Unknown Exxx instruction
$33A    $C956   RND      V9, #56         ; V9 = random & 56
$33C    $F813   UNKNOWN  F813            ; Unknown Fxxx instruction
$33E    $C40C   RND      V4, #0C         ; V4 = random & 0C
$340    $6012   LD       V0, #12         ; Load 18 into V0
$342    $AFCB   LD       I, $FCB         ; Load FCB into I
$344    $E2EA   UNKNOWN  $E2EA           ; Unknown Exxx instruction
$346    $56E5   UNKNOWN  $56E5           ; Unknown 5xxx instruction
$348    $D831   DRW      V8, V3, #1      ; Draw 1-byte sprite at V8, V3
$34A    $77C8   ADD      V7, #C8         ; Add 200 to V7
$34C    $96A6   UNKNOWN  $96A6           ; Unknown 9xxx instruction
$34E    $5E6B   UNKNOWN  $5E6B           ; Unknown 5xxx instruction
$350    $85DF   UNKNOWN  85DF            ; Unknown 8xxx instruction
$352    $7894   ADD      V8, #94         ; Add 148 to V8
$354    $64D2   LD       V4, #D2         ; Load 210 into V4
$356    $F66C   UNKNOWN  F66C            ; Unknown Fxxx instruction
$358    $C40D   RND      V4, #0D         ; V4 = random & 0D
$35A    $4538   SNE      V5, #38         ; Skip if V5 != 56
$35C    $9763   UNKNOWN  $9763           ; Unknown 9xxx instruction
$35E    $0F91   SYS      $F91            ; System call to F91
$360    $F0B4   UNKNOWN  F0B4            ; Unknown Fxxx instruction
$362    $B7B5   JP       V0, $7B5        ; Jump to V0 + 7B5
$364    $7009   ADD      V0, #09         ; Add 9 to V0
$366    $9944   UNKNOWN  $9944           ; Unknown 9xxx instruction
$368    $B6A5   JP       V0, $6A5        ; Jump to V0 + 6A5
$36A    $79AB   ADD      V9, #AB         ; Add 171 to V9
$36C    $4BBE   SNE      VB, #BE         ; Skip if VB != 190
$36E    $50D7   UNKNOWN  $50D7           ; Unknown 5xxx instruction
$370    $B00A   JP       V0, $00A        ; Jump to V0 + 00A
$372    $AB98   LD       I, $B98         ; Load B98 into I
$374    $50A3   UNKNOWN  $50A3           ; Unknown 5xxx instruction
$376    $868E   SHL      V6              ; V6 <<= 1, VF = MSB
$378    $4C1A   SNE      VC, #1A         ; Skip if VC != 26
$37A    $CFD2   RND      VF, #D2         ; VF = random & D2
$37C    $80B7   SUBN     V0, VB          ; V0 = VB - V0, VF = !borrow
$37E    $A49D   LD       I, $49D         ; Load 49D into I
$380    $73EE   ADD      V3, #EE         ; Add 238 to V3
$382    $0E63   SYS      $E63            ; System call to E63
$384    $394A   SE       V9, #4A         ; Skip if V9 == 74
$386    $387E   SE       V8, #7E         ; Skip if V8 == 126
$388    $0996   SYS      $996            ; System call to 996
$38A    $25B6   CALL     $5B6            ; Call subroutine at 5B6
$38C    $D3D9   DRW      V3, VD, #9      ; Draw 9-byte sprite at V3, VD
$38E    $856E   SHL      V5              ; V5 <<= 1, VF = MSB
$390    $A32A   LD       I, $32A         ; Load 32A into I
$392    $8519   UNKNOWN  8519            ; Unknown 8xxx instruction
$394    $4A48   SNE      VA, #48         ; Skip if VA != 72
$396    $9480   SNE      V4, V8          ; Skip if V4 != V8
$398    $83FF   UNKNOWN  83FF            ; Unknown 8xxx instruction
$39A    $0EB7   SYS      $EB7            ; System call to EB7
$39C    $E05B   UNKNOWN  $E05B           ; Unknown Exxx instruction
$39E    $2FED   CALL     $FED            ; Call subroutine at FED
$3A0    $DDC8   DRW      VD, VC, #8      ; Draw 8-byte sprite at VD, VC
$3A2    $E6D6   UNKNOWN  $E6D6           ; Unknown Exxx instruction
$3A4    $D227   DRW      V2, V2, #7      ; Draw 7-byte sprite at V2, V2
$3A6    $D4D7   DRW      V4, VD, #7      ; Draw 7-byte sprite at V4, VD
$3A8    $A283   LD       I, $283         ; Load 283 into I
$3AA    $FAF4   UNKNOWN  FAF4            ; Unknown Fxxx instruction
$3AC    $9D07   UNKNOWN  $9D07           ; Unknown 9xxx instruction
$3AE    $537A   UNKNOWN  $537A           ; Unknown 5xxx instruction
$3B0    $1B90   JP       $B90            ; Jump to B90
$3B2    $A453   LD       I, $453         ; Load 453 into I
$3B4    $4C3F   SNE      VC, #3F         ; Skip if VC != 63
$3B6    $DAF4   DRW      VA, VF, #4      ; Draw 4-byte sprite at VA, VF
$3B8    $9349   UNKNOWN  $9349           ; Unknown 9xxx instruction
$3BA    $7526   ADD      V5, #26         ; Add 38 to V5
$3BC    $DD5C   DRW      VD, V5, #C      ; Draw 12-byte sprite at VD, V5
$3BE    $9C48   UNKNOWN  $9C48           ; Unknown 9xxx instruction
$3C0    $7C18   ADD      VC, #18         ; Add 24 to VC
$3C2    $AC9A   LD       I, $C9A         ; Load C9A into I
$3C4    $B8D5   JP       V0, $8D5        ; Jump to V0 + 8D5
$3C6    $B3DA   JP       V0, $3DA        ; Jump to V0 + 3DA
$3C8    $419D   SNE      V1, #9D         ; Skip if V1 != 157
$3CA    $6D5F   LD       VD, #5F         ; Load 95 into VD
$3CC    $689B   LD       V8, #9B         ; Load 155 into V8
$3CE    $40B5   SNE      V0, #B5         ; Skip if V0 != 181
$3D0    $752B   ADD      V5, #2B         ; Add 43 to V5
$3D2    $46B6   SNE      V6, #B6         ; Skip if V6 != 182
$3D4    $CADF   RND      VA, #DF         ; VA = random & DF
$3D6    $DF8A   DRW      VF, V8, #A      ; Draw 10-byte sprite at VF, V8
$3D8    $7254   ADD      V2, #54         ; Add 84 to V2
$3DA    $4D4A   SNE      VD, #4A         ; Skip if VD != 74
$3DC    $89AA   UNKNOWN  89AA            ; Unknown 8xxx instruction
$3DE    $600F   LD       V0, #0F         ; Load 15 into V0
$3E0    $9D85   UNKNOWN  $9D85           ; Unknown 9xxx instruction
$3E2    $4336   SNE      V3, #36         ; Skip if V3 != 54
$3E4    $6AE6   LD       VA, #E6         ; Load 230 into VA
$3E6    $624D   LD       V2, #4D         ; Load 77 into V2
$3E8    $81B0   LD       V1, VB          ; V1 = VB
$3EA    $E520   UNKNOWN  $E520           ; Unknown Exxx instruction
$3EC    $B02F   JP       V0, $02F        ; Jump to V0 + 02F
$3EE    $CE49   RND      VE, #49         ; VE = random & 49
$3F0    $5DB1   UNKNOWN  $5DB1           ; Unknown 5xxx instruction
$3F2    $6227   LD       V2, #27         ; Load 39 into V2
$3F4    $7831   ADD      V8, #31         ; Add 49 to V8
$3F6    $B800   JP       V0, $800        ; Jump to V0 + 800
$3F8    $C3DE   RND      V3, #DE         ; V3 = random & DE
$3FA    $E563   UNKNOWN  $E563           ; Unknown Exxx instruction
$3FC    $DC7D   DRW      VC, V7, #D      ; Draw 13-byte sprite at VC, V7
$3FE    $8FB0   LD       VF, VB          ; VF = VB
$400    $01C9   SYS      $1C9            ; System call to 1C9
$402    $A634   LD       I, $634         ; Load 634 into I
$404    $ED3E   UNKNOWN  $ED3E           ; Unknown Exxx instruction
$406    $70EC   ADD      V0, #EC         ; Add 236 to V0
$408    $0A7C   SYS      $A7C            ; System call to A7C
$40A    $0147   SYS      $147            ; System call to 147
$40C    $FE72   UNKNOWN  FE72            ; Unknown Fxxx instruction
$40E    $6986   LD       V9, #86         ; Load 134 into V9
$410    $B690   JP       V0, $690        ; Jump to V0 + 690
$412    $7EAA   ADD      VE, #AA         ; Add 170 to VE
$414    $46CC   SNE      V6, #CC         ; Skip if V6 != 204
$416    $BA52   JP       V0, $A52        ; Jump to V0 + A52
$418    $1FB3   JP       $FB3            ; Jump to FB3
$41A    $FD62   UNKNOWN  FD62            ; Unknown Fxxx instruction
$41C    $A84D   LD       I, $84D         ; Load 84D into I
$41E    $F186   UNKNOWN  F186            ; Unknown Fxxx instruction
$420    $F44B   UNKNOWN  F44B            ; Unknown Fxxx instruction
$422    $EFC6   UNKNOWN  $EFC6           ; Unknown Exxx instruction
$424    $901E   UNKNOWN  $901E           ; Unknown 9xxx instruction
$426    $16AA   JP       $6AA            ; Jump to 6AA
$428    $D53D   DRW      V5, V3, #D      ; Draw 13-byte sprite at V5, V3
$42A    $4911   SNE      V9, #11         ; Skip if V9 != 17
$42C    $FC5C   UNKNOWN  FC5C            ; Unknown Fxxx instruction
$42E    $5FA0   SE       VF, VA          ; Skip if VF == VA
$430    $7A58   ADD      VA, #58         ; Add 88 to VA
$432    $7986   ADD      V9, #86         ; Add 134 to V9
$434    $6BBB   LD       VB, #BB         ; Load 187 into VB
$436    $FD6F   UNKNOWN  FD6F            ; Unknown Fxxx instruction
$438    $05C6   SYS      $5C6            ; System call to 5C6
$43A    $BF49   JP       V0, $F49        ; Jump to V0 + F49
$43C    $2DF4   CALL     $DF4            ; Call subroutine at DF4
$43E    $2E12   CALL     $E12            ; Call subroutine at E12
$440    $1F3A   JP       $F3A            ; Jump to F3A
$442    $9B5B   UNKNOWN  $9B5B           ; Unknown 9xxx instruction
$444    $C0C9   RND      V0, #C9         ; V0 = random & C9
$446    $993D   UNKNOWN  $993D           ; Unknown 9xxx instruction
$448    $68D6   LD       V8, #D6         ; Load 214 into V8
$44A    $2A85   CALL     $A85            ; Call subroutine at A85
$44C    $2B7D   CALL     $B7D            ; Call subroutine at B7D
$44E    $9723   UNKNOWN  $9723           ; Unknown 9xxx instruction
$450    $4441   SNE      V4, #41         ; Skip if V4 != 65
$452    $7312   ADD      V3, #12         ; Add 18 to V3
$454    $39A1   SE       V9, #A1         ; Skip if V9 == 161
$456    $C830   RND      V8, #30         ; V8 = random & 30
$458    $1107   JP       $107            ; Jump to 107
$45A    $B935   JP       V0, $935        ; Jump to V0 + 935
$45C    $5B6E   UNKNOWN  $5B6E           ; Unknown 5xxx instruction
$45E    $BA98   JP       V0, $A98        ; Jump to V0 + A98
$460    $5E25   UNKNOWN  $5E25           ; Unknown 5xxx instruction
$462    $2673   CALL     $673            ; Call subroutine at 673
$464    $1BF8   JP       $BF8            ; Jump to BF8
$466    $4552   SNE      V5, #52         ; Skip if V5 != 82
$468    $6884   LD       V8, #84         ; Load 132 into V8
$46A    $C71F   RND      V7, #1F         ; V7 = random & 1F
$46C    $7B8D   ADD      VB, #8D         ; Add 141 to VB
$46E    $4423   SNE      V4, #23         ; Skip if V4 != 35
$470    $F275   UNKNOWN  F275            ; Unknown Fxxx instruction
$472    $7B5E   ADD      VB, #5E         ; Add 94 to VB
$474    $99F1   UNKNOWN  $99F1           ; Unknown 9xxx instruction
$476    $10C3   JP       $0C3            ; Jump to 0C3
$478    $2FC8   CALL     $FC8            ; Call subroutine at FC8
$47A    $C61E   RND      V6, #1E         ; V6 = random & 1E
$47C    $05E9   SYS      $5E9            ; System call to 5E9
$47E    $F85D   UNKNOWN  F85D            ; Unknown Fxxx instruction
$480    $D2A9   DRW      V2, VA, #9      ; Draw 9-byte sprite at V2, VA
$482    $36BD   SE       V6, #BD         ; Skip if V6 == 189
$484    $D5B7   DRW      V5, VB, #7      ; Draw 7-byte sprite at V5, VB
$486    $8EE2   AND      VE, VE          ; VE &= VE
$488    $2A3F   CALL     $A3F            ; Call subroutine at A3F
$48A    $AA1A   LD       I, $A1A         ; Load A1A into I
$48C    $716D   ADD      V1, #6D         ; Add 109 to V1
$48E    $035C   SYS      $35C            ; System call to 35C
$490    $B70B   JP       V0, $70B        ; Jump to V0 + 70B
$492    $7053   ADD      V0, #53         ; Add 83 to V0
$494    $6BB9   LD       VB, #B9         ; Load 185 into VB
$496    $1CDC   JP       $CDC            ; Jump to CDC
$498    $0084   SYS      $084            ; System call to 084
$49A    $F023   UNKNOWN  F023            ; Unknown Fxxx instruction
$49C    $7BB0   ADD      VB, #B0         ; Add 176 to VB
$49E    $F981   UNKNOWN  F981            ; Unknown Fxxx instruction
$4A0    $5E04   UNKNOWN  $5E04           ; Unknown 5xxx instruction
$4A2    $021E   SYS      $21E            ; System call to 21E
$4A4    $9076   UNKNOWN  $9076           ; Unknown 9xxx instruction
$4A6    $EF8F   UNKNOWN  $EF8F           ; Unknown Exxx instruction
$4A8    $A6EA   LD       I, $6EA         ; Load 6EA into I
$4AA    $2691   CALL     $691            ; Call subroutine at 691
$4AC    $C4F5   RND      V4, #F5         ; V4 = random & F5
$4AE    $5E11   UNKNOWN  $5E11           ; Unknown 5xxx instruction
$4B0    $A6DB   LD       I, $6DB         ; Load 6DB into I
$4B2    $7062   ADD      V0, #62         ; Add 98 to V0
$4B4    $742F   ADD      V4, #2F         ; Add 47 to V4
$4B6    $09E8   SYS      $9E8            ; System call to 9E8
$4B8    $46CB   SNE      V6, #CB         ; Skip if V6 != 203
$4BA    $D6B9   DRW      V6, VB, #9      ; Draw 9-byte sprite at V6, VB
$4BC    $B393   JP       V0, $393        ; Jump to V0 + 393
$4BE    $76E7   ADD      V6, #E7         ; Add 231 to V6
$4C0    $53A7   UNKNOWN  $53A7           ; Unknown 5xxx instruction
$4C2    $AB7F   LD       I, $B7F         ; Load B7F into I
$4C4    $2B0C   CALL     $B0C            ; Call subroutine at B0C
$4C6    $3D90   SE       VD, #90         ; Skip if VD == 144
$4C8    $154F   JP       $54F            ; Jump to 54F
$4CA    $808B   UNKNOWN  808B            ; Unknown 8xxx instruction
$4CC    $840A   UNKNOWN  840A            ; Unknown 8xxx instruction
$4CE    $32C4   SE       V2, #C4         ; Skip if V2 == 196
$4D0    $7385   ADD      V3, #85         ; Add 133 to V3
$4D2    $1882   JP       $882            ; Jump to 882
$4D4    $0990   SYS      $990            ; System call to 990
$4D6    $BCB4   JP       V0, $CB4        ; Jump to V0 + CB4
$4D8    $86B8   UNKNOWN  86B8            ; Unknown 8xxx instruction
$4DA    $8F14   ADD      VF, V1          ; VF += V1, VF = carry
$4DC    $7745   ADD      V7, #45         ; Add 69 to V7
$4DE    $0498   SYS      $498            ; System call to 498
$4E0    $485F   SNE      V8, #5F         ; Skip if V8 != 95
$4E2    $CBCA   RND      VB, #CA         ; VB = random & CA
$4E4    $B763   JP       V0, $763        ; Jump to V0 + 763
$4E6    $2443   CALL     $443            ; Call subroutine at 443
$4E8    $9F1E   UNKNOWN  $9F1E           ; Unknown 9xxx instruction
$4EA    $2827   CALL     $827            ; Call subroutine at 827
$4EC    $4370   SNE      V3, #70         ; Skip if V3 != 112
$4EE    $F767   UNKNOWN  F767            ; Unknown Fxxx instruction
$4F0    $DB61   DRW      VB, V6, #1      ; Draw 1-byte sprite at VB, V6
$4F2    $0ACB   SYS      $ACB            ; System call to ACB
$4F4    $2278   CALL     $278            ; Call subroutine at 278
$4F6    $7CF8   ADD      VC, #F8         ; Add 248 to VC
$4F8    $CDD1   RND      VD, #D1         ; VD = random & D1
$4FA    $842B   UNKNOWN  842B            ; Unknown 8xxx instruction
$4FC    $A9AE   LD       I, $9AE         ; Load 9AE into I
$4FE    $DAFA   DRW      VA, VF, #A      ; Draw 10-byte sprite at VA, VF
$500    $0B36   SYS      $B36            ; System call to B36
$502    $5EAD   UNKNOWN  $5EAD           ; Unknown 5xxx instruction
$504    $3762   SE       V7, #62         ; Skip if V7 == 98
$506    $1062   JP       $062            ; Jump to 062
$508    $B16B   JP       V0, $16B        ; Jump to V0 + 16B
$50A    $7C9E   ADD      VC, #9E         ; Add 158 to VC
$50C    $7074   ADD      V0, #74         ; Add 116 to V0
$50E    $0BEC   SYS      $BEC            ; System call to BEC
$510    $6D0C   LD       VD, #0C         ; Load 12 into VD
$512    $BB3E   JP       V0, $B3E        ; Jump to V0 + B3E
$514    $5335   UNKNOWN  $5335           ; Unknown 5xxx instruction
$516    $44E3   SNE      V4, #E3         ; Skip if V4 != 227
$518    $3C33   SE       VC, #33         ; Skip if VC == 51
$51A    $8095   SUB      V0, V9          ; V0 -= V9, VF = !borrow
$51C    $8035   SUB      V0, V3          ; V0 -= V3, VF = !borrow
$51E    $966D   UNKNOWN  $966D           ; Unknown 9xxx instruction
$520    $E34E   UNKNOWN  $E34E           ; Unknown Exxx instruction
$522    $C10B   RND      V1, #0B         ; V1 = random & 0B
$524    $1814   JP       $814            ; Jump to 814
$526    $7ECB   ADD      VE, #CB         ; Add 203 to VE
$528    $D9B6   DRW      V9, VB, #6      ; Draw 6-byte sprite at V9, VB
$52A    $AFBE   LD       I, $FBE         ; Load FBE into I
$52C    $914D   UNKNOWN  $914D           ; Unknown 9xxx instruction
$52E    $2631   CALL     $631            ; Call subroutine at 631
$530    $5BCA   UNKNOWN  $5BCA           ; Unknown 5xxx instruction
$532    $A542   LD       I, $542         ; Load 542 into I
$534    $A4F0   LD       I, $4F0         ; Load 4F0 into I
$536    $BF6C   JP       V0, $F6C        ; Jump to V0 + F6C
$538    $3DB5   SE       VD, #B5         ; Skip if VD == 181
$53A    $5367   UNKNOWN  $5367           ; Unknown 5xxx instruction
$53C    $153E   JP       $53E            ; Jump to 53E
$53E    $4B93   SNE      VB, #93         ; Skip if VB != 147
$540    $6756   LD       V7, #56         ; Load 86 into V7
$542    $8005   SUB      V0, V0          ; V0 -= V0, VF = !borrow
$544    $DDDE   DRW      VD, VD, #E      ; Draw 14-byte sprite at VD, VD
$546    $82C1   OR       V2, VC          ; V2 |= VC
$548    $8198   UNKNOWN  8198            ; Unknown 8xxx instruction
$54A    $9269   UNKNOWN  $9269           ; Unknown 9xxx instruction
$54C    $C4A4   RND      V4, #A4         ; V4 = random & A4
$54E    $3D84   SE       VD, #84         ; Skip if VD == 132
$550    $4A80   SNE      VA, #80         ; Skip if VA != 128
$552    $C018   RND      V0, #18         ; V0 = random & 18
$554    $935B   UNKNOWN  $935B           ; Unknown 9xxx instruction
$556    $6D55   LD       VD, #55         ; Load 85 into VD
$558    $50F7   UNKNOWN  $50F7           ; Unknown 5xxx instruction
$55A    $9930   SNE      V9, V3          ; Skip if V9 != V3
$55C    $1C03   JP       $C03            ; Jump to C03
$55E    $B31A   JP       V0, $31A        ; Jump to V0 + 31A
$560    $E6A9   UNKNOWN  $E6A9           ; Unknown Exxx instruction
$562    $3B21   SE       VB, #21         ; Skip if VB == 33
$564    $2294   CALL     $294            ; Call subroutine at 294
$566    $DBF9   DRW      VB, VF, #9      ; Draw 9-byte sprite at VB, VF
$568    $B1BB   JP       V0, $1BB        ; Jump to V0 + 1BB
$56A    $578D   UNKNOWN  $578D           ; Unknown 5xxx instruction
$56C    $403A   SNE      V0, #3A         ; Skip if V0 != 58
$56E    $140F   JP       $40F            ; Jump to 40F
$570    $57D0   SE       V7, VD          ; Skip if V7 == VD
$572    $F389   UNKNOWN  F389            ; Unknown Fxxx instruction
$574    $9EEE   UNKNOWN  $9EEE           ; Unknown 9xxx instruction
$576    $F53B   UNKNOWN  F53B            ; Unknown Fxxx instruction
$578    $0DA4   SYS      $DA4            ; System call to DA4
$57A    $4F74   SNE      VF, #74         ; Skip if VF != 116
$57C    $F907   LD       V9, DT          ; V9 = delay timer
$57E    $D32A   DRW      V3, V2, #A      ; Draw 10-byte sprite at V3, V2
$580    $D09F   DRW      V0, V9, #F      ; Draw 15-byte sprite at V0, V9
$582    $AAAB   LD       I, $AAB         ; Load AAB into I
$584    $A88A   LD       I, $88A         ; Load 88A into I
$586    $F899   UNKNOWN  F899            ; Unknown Fxxx instruction
$588    $11D2   JP       $1D2            ; Jump to 1D2
$58A    $6C49   LD       VC, #49         ; Load 73 into VC
$58C    $9D9C   UNKNOWN  $9D9C           ; Unknown 9xxx instruction
$58E    $FBE9   UNKNOWN  FBE9            ; Unknown Fxxx instruction
$590    $6CE8   LD       VC, #E8         ; Load 232 into VC
$592    $8D37   SUBN     VD, V3          ; VD = V3 - VD, VF = !borrow
$594    $50C0   SE       V0, VC          ; Skip if V0 == VC
$596    $7DC0   ADD      VD, #C0         ; Add 192 to VD
$598    $3316   SE       V3, #16         ; Skip if V3 == 22
$59A    $58AA   UNKNOWN  $58AA           ; Unknown 5xxx instruction
$59C    $87FA   UNKNOWN  87FA            ; Unknown 8xxx instruction
$59E    $0B0B   SYS      $B0B            ; System call to B0B
$5A0    $FA74   UNKNOWN  FA74            ; Unknown Fxxx instruction
$5A2    $AB61   LD       I, $B61         ; Load B61 into I
$5A4    $8A99   UNKNOWN  8A99            ; Unknown 8xxx instruction
$5A6    $C04F   RND      V0, #4F         ; V0 = random & 4F
$5A8    $E997   UNKNOWN  $E997           ; Unknown Exxx instruction
$5AA    $6CEF   LD       VC, #EF         ; Load 239 into VC
$5AC    $4BB0   SNE      VB, #B0         ; Skip if VB != 176
$5AE    $DB4E   DRW      VB, V4, #E      ; Draw 14-byte sprite at VB, V4
$5B0    $FE75   UNKNOWN  FE75            ; Unknown Fxxx instruction
$5B2    $8085   SUB      V0, V8          ; V0 -= V8, VF = !borrow
$5B4    $E9D3   UNKNOWN  $E9D3           ; Unknown Exxx instruction
$5B6    $2C01   CALL     $C01            ; Call subroutine at C01
$5B8    $9BCB   UNKNOWN  $9BCB           ; Unknown 9xxx instruction
$5BA    $C294   RND      V2, #94         ; V2 = random & 94
$5BC    $B795   JP       V0, $795        ; Jump to V0 + 795
$5BE    $D200   DRW      V2, V0, #0      ; Draw 0-byte sprite at V2, V0
$5C0    $7930   ADD      V9, #30         ; Add 48 to V9
$5C2    $FA18   LD       ST, VA          ; Sound timer = VA
$5C4    $FB16   UNKNOWN  FB16            ; Unknown Fxxx instruction
$5C6    $DD75   DRW      VD, V7, #5      ; Draw 5-byte sprite at VD, V7
$5C8    $24B5   CALL     $4B5            ; Call subroutine at 4B5
$5CA    $DA20   DRW      VA, V2, #0      ; Draw 0-byte sprite at VA, V2
$5CC    $0BFD   SYS      $BFD            ; System call to BFD
$5CE    $19AD   JP       $9AD            ; Jump to 9AD
$5D0    $D216   DRW      V2, V1, #6      ; Draw 6-byte sprite at V2, V1
$5D2    $5BA1   UNKNOWN  $5BA1           ; Unknown 5xxx instruction
$5D4    $1FAF   JP       $FAF            ; Jump to FAF
$5D6    $DA3C   DRW      VA, V3, #C      ; Draw 12-byte sprite at VA, V3
$5D8    $4080   SNE      V0, #80         ; Skip if V0 != 128
$5DA    $AD64   LD       I, $D64         ; Load D64 into I
$5DC    $1700   JP       $700            ; Jump to 700
$5DE    $2AFD   CALL     $AFD            ; Call subroutine at AFD
$5E0    $5F6C   UNKNOWN  $5F6C           ; Unknown 5xxx instruction
$5E2    $B05F   JP       V0, $05F        ; Jump to V0 + 05F
$5E4    $3FD4   SE       VF, #D4         ; Skip if VF == 212
$5E6    $995E   UNKNOWN  $995E           ; Unknown 9xxx instruction
$5E8    $EE6E   UNKNOWN  $EE6E           ; Unknown Exxx instruction
$5EA    $B832   JP       V0, $832        ; Jump to V0 + 832
$5EC    $F05B   UNKNOWN  F05B            ; Unknown Fxxx instruction
$5EE    $F848   UNKNOWN  F848            ; Unknown Fxxx instruction
$5F0    $42C6   SNE      V2, #C6         ; Skip if V2 != 198
$5F2    $02E8   SYS      $2E8            ; System call to 2E8
$5F4    $AF59   LD       I, $F59         ; Load F59 into I
$5F6    $B56D   JP       V0, $56D        ; Jump to V0 + 56D
$5F8    $A843   LD       I, $843         ; Load 843 into I
$5FA    $89D5   SUB      V9, VD          ; V9 -= VD, VF = !borrow
$5FC    $C77E   RND      V7, #7E         ; V7 = random & 7E
$5FE    $0BDB   SYS      $BDB            ; System call to BDB
$600    $4962   SNE      V9, #62         ; Skip if V9 != 98
$602    $A1F9   LD       I, $1F9         ; Load 1F9 into I
$604    $E49F   UNKNOWN  $E49F           ; Unknown Exxx instruction
$606    $3D4A   SE       VD, #4A         ; Skip if VD == 74
$608    $DBB3   DRW      VB, VB, #3      ; Draw 3-byte sprite at VB, VB
$60A    $325E   SE       V2, #5E         ; Skip if V2 == 94
$60C    $5177   UNKNOWN  $5177           ; Unknown 5xxx instruction
$60E    $F783   UNKNOWN  F783            ; Unknown Fxxx instruction
$610    $65F6   LD       V5, #F6         ; Load 246 into V5
$612    $2AB6   CALL     $AB6            ; Call subroutine at AB6
$614    $579B   UNKNOWN  $579B           ; Unknown 5xxx instruction
$616    $9BBD   UNKNOWN  $9BBD           ; Unknown 9xxx instruction
$618    $38D2   SE       V8, #D2         ; Skip if V8 == 210
$61A    $518C   UNKNOWN  $518C           ; Unknown 5xxx instruction
$61C    $7A09   ADD      VA, #09         ; Add 9 to VA
$61E    $2633   CALL     $633            ; Call subroutine at 633
$620    $5F99   UNKNOWN  $5F99           ; Unknown 5xxx instruction
$622    $E626   UNKNOWN  $E626           ; Unknown Exxx instruction
$624    $E53C   UNKNOWN  $E53C           ; Unknown Exxx instruction
$626    $D4F0   DRW      V4, VF, #0      ; Draw 0-byte sprite at V4, VF
$628    $B430   JP       V0, $430        ; Jump to V0 + 430
$62A    $C68D   RND      V6, #8D         ; V6 = random & 8D
$62C    $0B66   SYS      $B66            ; System call to B66
$62E    $D990   DRW      V9, V9, #0      ; Draw 0-byte sprite at V9, V9
$630    $9814   UNKNOWN  $9814           ; Unknown 9xxx instruction
$632    $5B2F   UNKNOWN  $5B2F           ; Unknown 5xxx instruction
$634    $2876   CALL     $876            ; Call subroutine at 876
$636    $8E52   AND      VE, V5          ; VE &= V5
$638    $BC95   JP       V0, $C95        ; Jump to V0 + C95
$63A    $B4B9   JP       V0, $4B9        ; Jump to V0 + 4B9
$63C    $1BC7   JP       $BC7            ; Jump to BC7
$63E    $58B0   SE       V8, VB          ; Skip if V8 == VB
$640    $8F2A   UNKNOWN  8F2A            ; Unknown 8xxx instruction
$642    $B847   JP       V0, $847        ; Jump to V0 + 847
$644    $F137   UNKNOWN  F137            ; Unknown Fxxx instruction
$646    $6286   LD       V2, #86         ; Load 134 into V2
$648    $8592   AND      V5, V9          ; V5 &= V9
$64A    $0967   SYS      $967            ; System call to 967
$64C    $1A09   JP       $A09            ; Jump to A09
$64E    $819D   UNKNOWN  819D            ; Unknown 8xxx instruction
$650    $9D08   UNKNOWN  $9D08           ; Unknown 9xxx instruction
$652    $C8F2   RND      V8, #F2         ; V8 = random & F2
$654    $6A04   LD       VA, #04         ; Load 4 into VA
$656    $4EF9   SNE      VE, #F9         ; Skip if VE != 249
$658    $B72D   JP       V0, $72D        ; Jump to V0 + 72D
$65A    $09B3   SYS      $9B3            ; System call to 9B3
$65C    $A529   LD       I, $529         ; Load 529 into I
$65E    $05B1   SYS      $5B1            ; System call to 5B1
$660    $863C   UNKNOWN  863C            ; Unknown 8xxx instruction
$662    $47DF   SNE      V7, #DF         ; Skip if V7 != 223
$664    $4E0E   SNE      VE, #0E         ; Skip if VE != 14
$666    $9D4F   UNKNOWN  $9D4F           ; Unknown 9xxx instruction
$668    $CE4D   RND      VE, #4D         ; VE = random & 4D
$66A    $FA3E   UNKNOWN  FA3E            ; Unknown Fxxx instruction
$66C    $3500   SE       V5, #00         ; Skip if V5 == 0
$66E    $C188   RND      V1, #88         ; V1 = random & 88
$670    $0CBA   SYS      $CBA            ; System call to CBA
$672    $3685   SE       V6, #85         ; Skip if V6 == 133
$674    $2FAD   CALL     $FAD            ; Call subroutine at FAD
$676    $A5BF   LD       I, $5BF         ; Load 5BF into I
$678    $9B80   SNE      VB, V8          ; Skip if VB != V8
$67A    $DFA9   DRW      VF, VA, #9      ; Draw 9-byte sprite at VF, VA
$67C    $A953   LD       I, $953         ; Load 953 into I
$67E    $3B28   SE       VB, #28         ; Skip if VB == 40
$680    $BF2A   JP       V0, $F2A        ; Jump to V0 + F2A
$682    $BB1F   JP       V0, $B1F        ; Jump to V0 + B1F
$684    $898B   UNKNOWN  898B            ; Unknown 8xxx instruction
$686    $9720   SNE      V7, V2          ; Skip if V7 != V2
$688    $4FF2   SNE      VF, #F2         ; Skip if VF != 242
$68A    $394E   SE       V9, #4E         ; Skip if V9 == 78
$68C    $3B10   SE       VB, #10         ; Skip if VB == 16
$68E    $C1FE   RND      V1, #FE         ; V1 = random & FE
$690    $3E03   SE       VE, #03         ; Skip if VE == 3
$692    $CDC7   RND      VD, #C7         ; VD = random & C7
$694    $9669   UNKNOWN  $9669           ; Unknown 9xxx instruction
$696    $8380   LD       V3, V8          ; V3 = V8
$698    $094A   SYS      $94A            ; System call to 94A
$69A    $F2C8   UNKNOWN  F2C8            ; Unknown Fxxx instruction
$69C    $B3C0   JP       V0, $3C0        ; Jump to V0 + 3C0
$69E    $CA44   RND      VA, #44         ; VA = random & 44
$6A0    $3EAC   SE       VE, #AC         ; Skip if VE == 172
$6A2    $7CA2   ADD      VC, #A2         ; Add 162 to VC
$6A4    $C4CE   RND      V4, #CE         ; V4 = random & CE
$6A6    $202D   CALL     $02D            ; Call subroutine at 02D
$6A8    $48D2   SNE      V8, #D2         ; Skip if V8 != 210
$6AA    $CDC0   RND      VD, #C0         ; VD = random & C0
$6AC    $803D   UNKNOWN  803D            ; Unknown 8xxx instruction
$6AE    $A290   LD       I, $290         ; Load 290 into I
$6B0    $B7FE   JP       V0, $7FE        ; Jump to V0 + 7FE
$6B2    $62E8   LD       V2, #E8         ; Load 232 into V2
$6B4    $7277   ADD      V2, #77         ; Add 119 to V2
$6B6    $72C4   ADD      V2, #C4         ; Add 196 to V2
$6B8    $33AC   SE       V3, #AC         ; Skip if V3 == 172
$6BA    $F4EB   UNKNOWN  F4EB            ; Unknown Fxxx instruction
$6BC    $E6DF   UNKNOWN  $E6DF           ; Unknown Exxx instruction
$6BE    $A000   LD       I, $000         ; Load 000 into I
$6C0    $61B6   LD       V1, #B6         ; Load 182 into V1
$6C2    $F475   UNKNOWN  F475            ; Unknown Fxxx instruction
$6C4    $0569   SYS      $569            ; System call to 569
$6C6    $4344   SNE      V3, #44         ; Skip if V3 != 68
$6C8    $1040   JP       $040            ; Jump to 040
$6CA    $735B   ADD      V3, #5B         ; Add 91 to V3
$6CC    $06B6   SYS      $6B6            ; System call to 6B6
$6CE    $9A48   UNKNOWN  $9A48           ; Unknown 9xxx instruction
$6D0    $52A0   SE       V2, VA          ; Skip if V2 == VA
$6D2    $2E08   CALL     $E08            ; Call subroutine at E08
$6D4    $A693   LD       I, $693         ; Load 693 into I
$6D6    $BA1E   JP       V0, $A1E        ; Jump to V0 + A1E
$6D8    $2E49   CALL     $E49            ; Call subroutine at E49
$6DA    $F10D   UNKNOWN  F10D            ; Unknown Fxxx instruction
$6DC    $CFE1   RND      VF, #E1         ; VF = random & E1
$6DE    $F0AB   UNKNOWN  F0AB            ; Unknown Fxxx instruction
$6E0    $3198   SE       V1, #98         ; Skip if V1 == 152
$6E2    $1143   JP       $143            ; Jump to 143
$6E4    $3D0D   SE       VD, #0D         ; Skip if VD == 13
$6E6    $D1E9   DRW      V1, VE, #9      ; Draw 9-byte sprite at V1, VE
$6E8    $E2B7   UNKNOWN  $E2B7           ; Unknown Exxx instruction
$6EA    $29B4   CALL     $9B4            ; Call subroutine at 9B4
$6EC    $1AEA   JP       $AEA            ; Jump to AEA
$6EE    $C4D4   RND      V4, #D4         ; V4 = random & D4
$6F0    $B953   JP       V0, $953        ; Jump to V0 + 953
$6F2    $4EF2   SNE      VE, #F2         ; Skip if VE != 242
$6F4    $ED1C   UNKNOWN  $ED1C           ; Unknown Exxx instruction
$6F6    $A531   LD       I, $531         ; Load 531 into I
$6F8    $07E8   SYS      $7E8            ; System call to 7E8
$6FA    $FA36   UNKNOWN  FA36            ; Unknown Fxxx instruction
$6FC    $E67C   UNKNOWN  $E67C           ; Unknown Exxx instruction
$6FE    $C6EB   RND      V6, #EB         ; V6 = random & EB
$700    $38AB   SE       V8, #AB         ; Skip if V8 == 171
$702    $F529   LD       F, V5           ; I = sprite address for digit V5
$704    $E75A   UNKNOWN  $E75A           ; Unknown Exxx instruction
$706    $C5E4   RND      V5, #E4         ; V5 = random & E4
$708    $76F1   ADD      V6, #F1         ; Add 241 to V6
$70A    $7231   ADD      V2, #31         ; Add 49 to V2
$70C    $6C53   LD       VC, #53         ; Load 83 into VC
$70E    $E3AA   UNKNOWN  $E3AA           ; Unknown Exxx instruction
$710    $4D22   SNE      VD, #22         ; Skip if VD != 34
$712    $FFE5   UNKNOWN  FFE5            ; Unknown Fxxx instruction
$714    $78D6   ADD      V8, #D6         ; Add 214 to V8
$716    $9A3F   UNKNOWN  $9A3F           ; Unknown 9xxx instruction
$718    $64F5   LD       V4, #F5         ; Load 245 into V4
$71A    $2364   CALL     $364            ; Call subroutine at 364
$71C    $F989   UNKNOWN  F989            ; Unknown Fxxx instruction
$71E    $387D   SE       V8, #7D         ; Skip if V8 == 125
$720    $0931   SYS      $931            ; System call to 931
$722    $5928   UNKNOWN  $5928           ; Unknown 5xxx instruction
$724    $C789   RND      V7, #89         ; V7 = random & 89
$726    $98DF   UNKNOWN  $98DF           ; Unknown 9xxx instruction
$728    $370C   SE       V7, #0C         ; Skip if V7 == 12
$72A    $6CD4   LD       VC, #D4         ; Load 212 into VC
$72C    $614B   LD       V1, #4B         ; Load 75 into V1
$72E    $71F5   ADD      V1, #F5         ; Add 245 to V1
$730    $9776   UNKNOWN  $9776           ; Unknown 9xxx instruction
$732    $A229   LD       I, $229         ; Load 229 into I
$734    $9AA6   UNKNOWN  $9AA6           ; Unknown 9xxx instruction
$736    $C97A   RND      V9, #7A         ; V9 = random & 7A
$738    $95EF   UNKNOWN  $95EF           ; Unknown 9xxx instruction
$73A    $E2ED   UNKNOWN  $E2ED           ; Unknown Exxx instruction
$73C    $1305   JP       $305            ; Jump to 305
$73E    $6632   LD       V6, #32         ; Load 50 into V6
$740    $0633   SYS      $633            ; System call to 633
$742    $1174   JP       $174            ; Jump to 174
$744    $74BA   ADD      V4, #BA         ; Add 186 to V4
$746    $A61B   LD       I, $61B         ; Load 61B into I
$748    $C64C   RND      V6, #4C         ; V6 = random & 4C
$74A    $04DB   SYS      $4DB            ; System call to 4DB
$74C    $AE99   LD       I, $E99         ; Load E99 into I
$74E    $9813   UNKNOWN  $9813           ; Unknown 9xxx instruction
$750    $EF64   UNKNOWN  $EF64           ; Unknown Exxx instruction
$752    $6510   LD       V5, #10         ; Load 16 into V5
$754    $DFCF   DRW      VF, VC, #F      ; Draw 15-byte sprite at VF, VC
$756    $98A1   UNKNOWN  $98A1           ; Unknown 9xxx instruction
$758    $5384   UNKNOWN  $5384           ; Unknown 5xxx instruction
$75A    $7F03   ADD      VF, #03         ; Add 3 to VF
$75C    $B902   JP       V0, $902        ; Jump to V0 + 902
$75E    $CA99   RND      VA, #99         ; VA = random & 99
$760    $FA46   UNKNOWN  FA46            ; Unknown Fxxx instruction
$762    $315B   SE       V1, #5B         ; Skip if V1 == 91
$764    $8339   UNKNOWN  8339            ; Unknown 8xxx instruction
$766    $755E   ADD      V5, #5E         ; Add 94 to V5
$768    $47B1   SNE      V7, #B1         ; Skip if V7 != 177
$76A    $B07A   JP       V0, $07A        ; Jump to V0 + 07A
$76C    $0588   SYS      $588            ; System call to 588
$76E    $1320   JP       $320            ; Jump to 320
$770    $31A5   SE       V1, #A5         ; Skip if V1 == 165
$772    $A0D0   LD       I, $0D0         ; Load 0D0 into I
$774    $8561   OR       V5, V6          ; V5 |= V6
$776    $D811   DRW      V8, V1, #1      ; Draw 1-byte sprite at V8, V1
$778    $9B2D   UNKNOWN  $9B2D           ; Unknown 9xxx instruction
$77A    $DE70   DRW      VE, V7, #0      ; Draw 0-byte sprite at VE, V7
$77C    $DA6C   DRW      VA, V6, #C      ; Draw 12-byte sprite at VA, V6
$77E    $8FF0   LD       VF, VF          ; VF = VF
$780    $B519   JP       V0, $519        ; Jump to V0 + 519
$782    $F055   LD       [I], V0         ; Store V0-V0 at I
$784    $87EE   SHL      V7              ; V7 <<= 1, VF = MSB
$786    $73D5   ADD      V3, #D5         ; Add 213 to V3
$788    $570B   UNKNOWN  $570B           ; Unknown 5xxx instruction
$78A    $15A9   JP       $5A9            ; Jump to 5A9
$78C    $EB31   UNKNOWN  $EB31           ; Unknown Exxx instruction
$78E    $226A   CALL     $26A            ; Call subroutine at 26A
$790    $9BCC   UNKNOWN  $9BCC           ; Unknown 9xxx instruction
$792    $E8E0   UNKNOWN  $E8E0           ; Unknown Exxx instruction
$794    $4435   SNE      V4, #35         ; Skip if V4 != 53
$796    $4EC6   SNE      VE, #C6         ; Skip if VE != 198
$798    $64F1   LD       V4, #F1         ; Load 241 into V4
$79A    $FEA3   UNKNOWN  FEA3            ; Unknown Fxxx instruction
$79C    $FF11   UNKNOWN  FF11            ; Unknown Fxxx instruction
$79E    $A7C8   LD       I, $7C8         ; Load 7C8 into I
$7A0    $1B36   JP       $B36            ; Jump to B36
$7A2    $F580   UNKNOWN  F580            ; Unknown Fxxx instruction
$7A4    $C2A7   RND      V2, #A7         ; V2 = random & A7
$7A6    $EE64   UNKNOWN  $EE64           ; Unknown Exxx instruction
$7A8    $693C   LD       V9, #3C         ; Load 60 into V9
$7AA    $C11A   RND      V1, #1A         ; V1 = random & 1A
$7AC    $47A9   SNE      V7, #A9         ; Skip if V7 != 169
$7AE    $F1B2   UNKNOWN  F1B2            ; Unknown Fxxx instruction
$7B0    $4D2A   SNE      VD, #2A         ; Skip if VD != 42
$7B2    $5D5C   UNKNOWN  $5D5C           ; Unknown 5xxx instruction
$7B4    $8D2C   UNKNOWN  8D2C            ; Unknown 8xxx instruction
$7B6    $D415   DRW      V4, V1, #5      ; Draw 5-byte sprite at V4, V1
$7B8    $86C3   XOR      V6, VC          ; V6 ^= VC
$7BA    $70BA   ADD      V0, #BA         ; Add 186 to V0
$7BC    $86F6   SHR      V6              ; V6 >>= 1, VF = LSB
$7BE    $0A3D   SYS      $A3D            ; System call to A3D
$7C0    $2F3F   CALL     $F3F            ; Call subroutine at F3F
$7C2    $2D35   CALL     $D35            ; Call subroutine at D35
$7C4    $0E44   SYS      $E44            ; System call to E44
$7C6    $D3D6   DRW      V3, VD, #6      ; Draw 6-byte sprite at V3, VD
$7C8    $4DA9   SNE      VD, #A9         ; Skip if VD != 169
$7CA    $EA55   UNKNOWN  $EA55           ; Unknown Exxx instruction
$7CC    $4501   SNE      V5, #01         ; Skip if V5 != 1
$7CE    $6C21   LD       VC, #21         ; Load 33 into VC
$7D0    $91B7   UNKNOWN  $91B7           ; Unknown 9xxx instruction
$7D2    $6161   LD       V1, #61         ; Load 97 into V1
$7D4    $7C2B   ADD      VC, #2B         ; Add 43 to VC
$7D6    $D3A9   DRW      V3, VA, #9      ; Draw 9-byte sprite at V3, VA
$7D8    $A0DF   LD       I, $0DF         ; Load 0DF into I
$7DA    $A805   LD       I, $805         ; Load 805 into I
$7DC    $1A76   JP       $A76            ; Jump to A76
$7DE    $4BDC   SNE      VB, #DC         ; Skip if VB != 220
$7E0    $42C5   SNE      V2, #C5         ; Skip if V2 != 197
$7E2    $0806   SYS      $806            ; System call to 806
$7E4    $EFB9   UNKNOWN  $EFB9           ; Unknown Exxx instruction
$7E6    $344D   SE       V4, #4D         ; Skip if V4 == 77
$7E8    $C068   RND      V0, #68         ; V0 = random & 68
$7EA    $8593   XOR      V5, V9          ; V5 ^= V9
$7EC    $9ECF   UNKNOWN  $9ECF           ; Unknown 9xxx instruction
$7EE    $01D3   SYS      $1D3            ; System call to 1D3
$7F0    $2EB1   CALL     $EB1            ; Call subroutine at EB1
$7F2    $F9C8   UNKNOWN  F9C8            ; Unknown Fxxx instruction
$7F4    $C3CB   RND      V3, #CB         ; V3 = random & CB
$7F6    $7D41   ADD      VD, #41         ; Add 65 to VD
$7F8    $4269   SNE      V2, #69         ; Skip if V2 != 105
$7FA    $DCD7   DRW      VC, VD, #7      ; Draw 7-byte sprite at VC, VD
$7FC    $D289   DRW      V2, V8, #9      ; Draw 9-byte sprite at V2, V8
$7FE    $A719   LD       I, $719         ; Load 719 into I
$800    $F033   LD       B, V0           ; Store BCD of V0 at I, I+1, I+2
$802    $F16E   UNKNOWN  F16E            ; Unknown Fxxx instruction
$804    $DC1E   DRW      VC, V1, #E      ; Draw 14-byte sprite at VC, V1
$806    $18A4   JP       $8A4            ; Jump to 8A4
$808    $D343   DRW      V3, V4, #3      ; Draw 3-byte sprite at V3, V4
$80A    $03E8   SYS      $3E8            ; System call to 3E8
$80C    $E903   UNKNOWN  $E903           ; Unknown Exxx instruction
$80E    $8621   OR       V6, V2          ; V6 |= V2
$810    $D549   DRW      V5, V4, #9      ; Draw 9-byte sprite at V5, V4
$812    $9C72   UNKNOWN  $9C72           ; Unknown 9xxx instruction
$814    $A602   LD       I, $602         ; Load 602 into I
$816    $B034   JP       V0, $034        ; Jump to V0 + 034
$818    $0B4F   SYS      $B4F            ; System call to B4F
$81A    $17CC   JP       $7CC            ; Jump to 7CC
$81C    $329F   SE       V2, #9F         ; Skip if V2 == 159
$81E    $FFA6   UNKNOWN  FFA6            ; Unknown Fxxx instruction
$820    $6603   LD       V6, #03         ; Load 3 into V6
$822    $1A35   JP       $A35            ; Jump to A35
$824    $671E   LD       V7, #1E         ; Load 30 into V7
$826    $B94B   JP       V0, $94B        ; Jump to V0 + 94B
$828    $EC53   UNKNOWN  $EC53           ; Unknown Exxx instruction
$82A    $4F66   SNE      VF, #66         ; Skip if VF != 102
$82C    $ED81   UNKNOWN  $ED81           ; Unknown Exxx instruction
$82E    $1895   JP       $895            ; Jump to 895
$830    $62C2   LD       V2, #C2         ; Load 194 into V2
$832    $E6C2   UNKNOWN  $E6C2           ; Unknown Exxx instruction
$834    $0DCA   SYS      $DCA            ; System call to DCA
$836    $0D9D   SYS      $D9D            ; System call to D9D
$838    $2E9C   CALL     $E9C            ; Call subroutine at E9C
$83A    $AF3E   LD       I, $F3E         ; Load F3E into I
$83C    $BD9E   JP       V0, $D9E        ; Jump to V0 + D9E
$83E    $0319   SYS      $319            ; System call to 319
$840    $4C1C   SNE      VC, #1C         ; Skip if VC != 28
$842    $4F84   SNE      VF, #84         ; Skip if VF != 132
$844    $AC44   LD       I, $C44         ; Load C44 into I
$846    $2230   CALL     $230            ; Call subroutine at 230
$848    $2410   CALL     $410            ; Call subroutine at 410
$84A    $84F8   UNKNOWN  84F8            ; Unknown 8xxx instruction
$84C    $6DC4   LD       VD, #C4         ; Load 196 into VD
$84E    $B0B4   JP       V0, $0B4        ; Jump to V0 + 0B4
$850    $46C1   SNE      V6, #C1         ; Skip if V6 != 193
$852    $9020   SNE      V0, V2          ; Skip if V0 != V2
$854    $F25F   UNKNOWN  F25F            ; Unknown Fxxx instruction
$856    $4689   SNE      V6, #89         ; Skip if V6 != 137
$858    $3A7D   SE       VA, #7D         ; Skip if VA == 125
$85A    $03D4   SYS      $3D4            ; System call to 3D4
$85C    $FA8D   UNKNOWN  FA8D            ; Unknown Fxxx instruction
$85E    $BBCC   JP       V0, $BCC        ; Jump to V0 + BCC
$860    $FFB4   UNKNOWN  FFB4            ; Unknown Fxxx instruction
$862    $349C   SE       V4, #9C         ; Skip if V4 == 156
$864    $2B52   CALL     $B52            ; Call subroutine at B52
$866    $6831   LD       V8, #31         ; Load 49 into V8
$868    $E59B   UNKNOWN  $E59B           ; Unknown Exxx instruction
$86A    $9763   UNKNOWN  $9763           ; Unknown 9xxx instruction
$86C    $EB0A   UNKNOWN  $EB0A           ; Unknown Exxx instruction
$86E    $AB1E   LD       I, $B1E         ; Load B1E into I
$870    $67D3   LD       V7, #D3         ; Load 211 into V7
$872    $8D83   XOR      VD, V8          ; VD ^= V8
$874    $0F79   SYS      $F79            ; System call to F79
$876    $4157   SNE      V1, #57         ; Skip if V1 != 87
$878    $3DDF   SE       VD, #DF         ; Skip if VD == 223
$87A    $F1E9   UNKNOWN  F1E9            ; Unknown Fxxx instruction
$87C    $58B4   UNKNOWN  $58B4           ; Unknown 5xxx instruction
$87E    $E32E   UNKNOWN  $E32E           ; Unknown Exxx instruction
$880    $2C94   CALL     $C94            ; Call subroutine at C94
$882    $A282   LD       I, $282         ; Load 282 into I
$884    $2ECE   CALL     $ECE            ; Call subroutine at ECE
$886    $412E   SNE      V1, #2E         ; Skip if V1 != 46
$888    $A64A   LD       I, $64A         ; Load 64A into I
$88A    $6C31   LD       VC, #31         ; Load 49 into VC
$88C    $00C2   SYS      $0C2            ; System call to 0C2
$88E    $3EAF   SE       VE, #AF         ; Skip if VE == 175
$890    $154A   JP       $54A            ; Jump to 54A
$892    $39D5   SE       V9, #D5         ; Skip if V9 == 213
$894    $C1BC   RND      V1, #BC         ; V1 = random & BC
$896    $1F9F   JP       $F9F            ; Jump to F9F
$898    $8CB4   ADD      VC, VB          ; VC += VB, VF = carry
$89A    $A369   LD       I, $369         ; Load 369 into I
$89C    $64CD   LD       V4, #CD         ; Load 205 into V4
$89E    $4126   SNE      V1, #26         ; Skip if V1 != 38
$8A0    $753D   ADD      V5, #3D         ; Add 61 to V5
$8A2    $2081   CALL     $081            ; Call subroutine at 081
$8A4    $2385   CALL     $385            ; Call subroutine at 385
$8A6    $09A0   SYS      $9A0            ; System call to 9A0
$8A8    $227A   CALL     $27A            ; Call subroutine at 27A
$8AA    $157E   JP       $57E            ; Jump to 57E
$8AC    $D4B3   DRW      V4, VB, #3      ; Draw 3-byte sprite at V4, VB
$8AE    $A751   LD       I, $751         ; Load 751 into I
$8B0    $40E6   SNE      V0, #E6         ; Skip if V0 != 230
$8B2    $D1F7   DRW      V1, VF, #7      ; Draw 7-byte sprite at V1, VF
$8B4    $1CFC   JP       $CFC            ; Jump to CFC
$8B6    $149F   JP       $49F            ; Jump to 49F
$8B8    $37EF   SE       V7, #EF         ; Skip if V7 == 239
$8BA    $E289   UNKNOWN  $E289           ; Unknown Exxx instruction
$8BC    $4AB1   SNE      VA, #B1         ; Skip if VA != 177
$8BE    $8C6B   UNKNOWN  8C6B            ; Unknown 8xxx instruction
$8C0    $81DA   UNKNOWN  81DA            ; Unknown 8xxx instruction
$8C2    $C99B   RND      V9, #9B         ; V9 = random & 9B
$8C4    $12CC   JP       $2CC            ; Jump to 2CC
$8C6    $92DB   UNKNOWN  $92DB           ; Unknown 9xxx instruction
$8C8    $D4B1   DRW      V4, VB, #1      ; Draw 1-byte sprite at V4, VB
$8CA    $3D13   SE       VD, #13         ; Skip if VD == 19
$8CC    $9AEE   UNKNOWN  $9AEE           ; Unknown 9xxx instruction
$8CE    $F55C   UNKNOWN  F55C            ; Unknown Fxxx instruction
$8D0    $93DD   UNKNOWN  $93DD           ; Unknown 9xxx instruction
$8D2    $E065   UNKNOWN  $E065           ; Unknown Exxx instruction
$8D4    $CD97   RND      VD, #97         ; VD = random & 97
$8D6    $A341   LD       I, $341         ; Load 341 into I
$8D8    $FE05   UNKNOWN  FE05            ; Unknown Fxxx instruction
$8DA    $B766   JP       V0, $766        ; Jump to V0 + 766
$8DC    $2D6F   CALL     $D6F            ; Call subroutine at D6F
$8DE    $661E   LD       V6, #1E         ; Load 30 into V6
$8E0    $4438   SNE      V4, #38         ; Skip if V4 != 56
$8E2    $9462   UNKNOWN  $9462           ; Unknown 9xxx instruction
$8E4    $92EC   UNKNOWN  $92EC           ; Unknown 9xxx instruction
$8E6    $19BD   JP       $9BD            ; Jump to 9BD
$8E8    $3A4A   SE       VA, #4A         ; Skip if VA == 74
$8EA    $738D   ADD      V3, #8D         ; Add 141 to V3
$8EC    $3BC6   SE       VB, #C6         ; Skip if VB == 198
$8EE    $D764   DRW      V7, V6, #4      ; Draw 4-byte sprite at V7, V6
$8F0    $45AF   SNE      V5, #AF         ; Skip if V5 != 175
$8F2    $41B5   SNE      V1, #B5         ; Skip if V1 != 181
$8F4    $F555   LD       [I], V5         ; Store V0-V5 at I
$8F6    $882D   UNKNOWN  882D            ; Unknown 8xxx instruction
$8F8    $2424   CALL     $424            ; Call subroutine at 424
$8FA    $B4A3   JP       V0, $4A3        ; Jump to V0 + 4A3
$8FC    $A207   LD       I, $207         ; Load 207 into I
$8FE    $2F5A   CALL     $F5A            ; Call subroutine at F5A
$900    $75F3   ADD      V5, #F3         ; Add 243 to V5
$902    $AFDC   LD       I, $FDC         ; Load FDC into I
$904    $B2BD   JP       V0, $2BD        ; Jump to V0 + 2BD
$906    $2B23   CALL     $B23            ; Call subroutine at B23
$908    $18C9   JP       $8C9            ; Jump to 8C9
$90A    $CD3D   RND      VD, #3D         ; VD = random & 3D
$90C    $4756   SNE      V7, #56         ; Skip if V7 != 86
$90E    $4BAB   SNE      VB, #AB         ; Skip if VB != 171
$910    $A7C3   LD       I, $7C3         ; Load 7C3 into I
$912    $496F   SNE      V9, #6F         ; Skip if V9 != 111
$914    $613A   LD       V1, #3A         ; Load 58 into V1
$916    $706F   ADD      V0, #6F         ; Add 111 to V0
$918    $AA69   LD       I, $A69         ; Load A69 into I
$91A    $4975   SNE      V9, #75         ; Skip if V9 != 117
$91C    $582F   UNKNOWN  $582F           ; Unknown 5xxx instruction
$91E    $D67F   DRW      V6, V7, #F      ; Draw 15-byte sprite at V6, V7
$920    $78C0   ADD      V8, #C0         ; Add 192 to V8
$922    $35DA   SE       V5, #DA         ; Skip if V5 == 218
$924    $B36B   JP       V0, $36B        ; Jump to V0 + 36B
$926    $5B15   UNKNOWN  $5B15           ; Unknown 5xxx instruction
$928    $75B5   ADD      V5, #B5         ; Add 181 to V5
$92A    $E0DD   UNKNOWN  $E0DD           ; Unknown Exxx instruction
$92C    $0837   SYS      $837            ; System call to 837
$92E    $BFED   JP       V0, $FED        ; Jump to V0 + FED
$930    $304C   SE       V0, #4C         ; Skip if V0 == 76
$932    $76BD   ADD      V6, #BD         ; Add 189 to V6
$934    $8F4D   UNKNOWN  8F4D            ; Unknown 8xxx instruction
$936    $AB15   LD       I, $B15         ; Load B15 into I
$938    $E061   UNKNOWN  $E061           ; Unknown Exxx instruction
$93A    $191D   JP       $91D            ; Jump to 91D
$93C    $044D   SYS      $44D            ; System call to 44D
$93E    $CBC0   RND      VB, #C0         ; VB = random & C0
$940    $DC0D   DRW      VC, V0, #D      ; Draw 13-byte sprite at VC, V0
$942    $084F   SYS      $84F            ; System call to 84F
$944    $D24C   DRW      V2, V4, #C      ; Draw 12-byte sprite at V2, V4
$946    $6887   LD       V8, #87         ; Load 135 into V8
$948    $83C2   AND      V3, VC          ; V3 &= VC
$94A    $8277   SUBN     V2, V7          ; V2 = V7 - V2, VF = !borrow
$94C    $AE5B   LD       I, $E5B         ; Load E5B into I
$94E    $71E7   ADD      V1, #E7         ; Add 231 to V1
$950    $99D4   UNKNOWN  $99D4           ; Unknown 9xxx instruction
$952    $B43E   JP       V0, $43E        ; Jump to V0 + 43E
$954    $C60E   RND      V6, #0E         ; V6 = random & 0E
$956    $0C45   SYS      $C45            ; System call to C45
$958    $6419   LD       V4, #19         ; Load 25 into V4
$95A    $D322   DRW      V3, V2, #2      ; Draw 2-byte sprite at V3, V2
$95C    $77E2   ADD      V7, #E2         ; Add 226 to V7
$95E    $27C5   CALL     $7C5            ; Call subroutine at 7C5
$960    $BCDB   JP       V0, $CDB        ; Jump to V0 + CDB
$962    $F827   UNKNOWN  F827            ; Unknown Fxxx instruction
$964    $EF62   UNKNOWN  $EF62           ; Unknown Exxx instruction
$966    $D1C2   DRW      V1, VC, #2      ; Draw 2-byte sprite at V1, VC
$968    $E78D   UNKNOWN  $E78D           ; Unknown Exxx instruction
$96A    $49EA   SNE      V9, #EA         ; Skip if V9 != 234
$96C    $BBC2   JP       V0, $BC2        ; Jump to V0 + BC2
$96E    $19CE   JP       $9CE            ; Jump to 9CE
$970    $599B   UNKNOWN  $599B           ; Unknown 5xxx instruction
$972    $1470   JP       $470            ; Jump to 470
$974    $E3F9   UNKNOWN  $E3F9           ; Unknown Exxx instruction
$976    $FB30   UNKNOWN  FB30            ; Unknown Fxxx instruction
$978    $5238   UNKNOWN  $5238           ; Unknown 5xxx instruction
$97A    $B8FD   JP       V0, $8FD        ; Jump to V0 + 8FD
$97C    $9A2A   UNKNOWN  $9A2A           ; Unknown 9xxx instruction
$97E    $F94D   UNKNOWN  F94D            ; Unknown Fxxx instruction
$980    $4104   SNE      V1, #04         ; Skip if V1 != 4
$982    $76D7   ADD      V6, #D7         ; Add 215 to V6
$984    $2595   CALL     $595            ; Call subroutine at 595
$986    $E840   UNKNOWN  $E840           ; Unknown Exxx instruction
$988    $F384   UNKNOWN  F384            ; Unknown Fxxx instruction
$98A    $6411   LD       V4, #11         ; Load 17 into V4
$98C    $185A   JP       $85A            ; Jump to 85A
$98E    $5442   UNKNOWN  $5442           ; Unknown 5xxx instruction
$990    $9A32   UNKNOWN  $9A32           ; Unknown 9xxx instruction
$992    $23A6   CALL     $3A6            ; Call subroutine at 3A6
$994    $9829   UNKNOWN  $9829           ; Unknown 9xxx instruction
$996    $3359   SE       V3, #59         ; Skip if V3 == 89
$998    $EB16   UNKNOWN  $EB16           ; Unknown Exxx instruction
$99A    $0C2B   SYS      $C2B            ; System call to C2B
$99C    $D86A   DRW      V8, V6, #A      ; Draw 10-byte sprite at V8, V6
$99E    $9761   UNKNOWN  $9761           ; Unknown 9xxx instruction
$9A0    $C5D5   RND      V5, #D5         ; V5 = random & D5
$9A2    $0D2F   SYS      $D2F            ; System call to D2F
$9A4    $D1E0   DRW      V1, VE, #0      ; Draw 0-byte sprite at V1, VE
$9A6    $19EF   JP       $9EF            ; Jump to 9EF
$9A8    $97CB   UNKNOWN  $97CB           ; Unknown 9xxx instruction
$9AA    $2311   CALL     $311            ; Call subroutine at 311
$9AC    $94C5   UNKNOWN  $94C5           ; Unknown 9xxx instruction
$9AE    $CF19   RND      VF, #19         ; VF = random & 19
$9B0    $A2FA   LD       I, $2FA         ; Load 2FA into I
$9B2    $4194   SNE      V1, #94         ; Skip if V1 != 148
$9B4    $3DD2   SE       VD, #D2         ; Skip if VD == 210
$9B6    $CEF6   RND      VE, #F6         ; VE = random & F6
$9B8    $B886   JP       V0, $886        ; Jump to V0 + 886
$9BA    $42F2   SNE      V2, #F2         ; Skip if V2 != 242
$9BC    $49DB   SNE      V9, #DB         ; Skip if V9 != 219
$9BE    $3E9C   SE       VE, #9C         ; Skip if VE == 156
$9C0    $BFF4   JP       V0, $FF4        ; Jump to V0 + FF4
$9C2    $3F37   SE       VF, #37         ; Skip if VF == 55
$9C4    $53C2   UNKNOWN  $53C2           ; Unknown 5xxx instruction
$9C6    $A8DA   LD       I, $8DA         ; Load 8DA into I
$9C8    $5317   UNKNOWN  $5317           ; Unknown 5xxx instruction
$9CA    $827F   UNKNOWN  827F            ; Unknown 8xxx instruction
$9CC    $4AC1   SNE      VA, #C1         ; Skip if VA != 193
$9CE    $1ABA   JP       $ABA            ; Jump to ABA
$9D0    $C0AF   RND      V0, #AF         ; V0 = random & AF
$9D2    $9CF2   UNKNOWN  $9CF2           ; Unknown 9xxx instruction
$9D4    $7CF6   ADD      VC, #F6         ; Add 246 to VC
$9D6    $4EF0   SNE      VE, #F0         ; Skip if VE != 240
$9D8    $5DED   UNKNOWN  $5DED           ; Unknown 5xxx instruction
$9DA    $DF9D   DRW      VF, V9, #D      ; Draw 13-byte sprite at VF, V9
$9DC    $3676   SE       V6, #76         ; Skip if V6 == 118
$9DE    $1BB5   JP       $BB5            ; Jump to BB5
$9E0    $C52B   RND      V5, #2B         ; V5 = random & 2B
$9E2    $B085   JP       V0, $085        ; Jump to V0 + 085
$9E4    $62CB   LD       V2, #CB         ; Load 203 into V2
$9E6    $7735   ADD      V7, #35         ; Add 53 to V7
$9E8    $3FCA   SE       VF, #CA         ; Skip if VF == 202
$9EA    $00F7   SYS      $0F7            ; System call to 0F7
$9EC    $324B   SE       V2, #4B         ; Skip if V2 == 75
$9EE    $05A2   SYS      $5A2            ; System call to 5A2
$9F0    $F626   UNKNOWN  F626            ; Unknown Fxxx instruction
$9F2    $148E   JP       $48E            ; Jump to 48E
$9F4    $BAC6   JP       V0, $AC6        ; Jump to V0 + AC6
$9F6    $89D4   ADD      V9, VD          ; V9 += VD, VF = carry
$9F8    $9AD0   SNE      VA, VD          ; Skip if VA != VD
$9FA    $C091   RND      V0, #91         ; V0 = random & 91
$9FC    $E6AA   UNKNOWN  $E6AA           ; Unknown Exxx instruction
$9FE    $AAC7   LD       I, $AC7         ; Load AC7 into I
$A00    $9117   UNKNOWN  $9117           ; Unknown 9xxx instruction
$A02    $A5F2   LD       I, $5F2         ; Load 5F2 into I
$A04    $27E3   CALL     $7E3            ; Call subroutine at 7E3
$A06    $C331   RND      V3, #31         ; V3 = random & 31
$A08    $9873   UNKNOWN  $9873           ; Unknown 9xxx instruction
$A0A    $025E   SYS      $25E            ; System call to 25E
$A0C    $90ED   UNKNOWN  $90ED           ; Unknown 9xxx instruction
$A0E    $7D8D   ADD      VD, #8D         ; Add 141 to VD
$A10    $365B   SE       V6, #5B         ; Skip if V6 == 91
$A12    $DB86   DRW      VB, V8, #6      ; Draw 6-byte sprite at VB, V8
$A14    $385C   SE       V8, #5C         ; Skip if V8 == 92
$A16    $FAF0   UNKNOWN  FAF0            ; Unknown Fxxx instruction
$A18    $32E7   SE       V2, #E7         ; Skip if V2 == 231
$A1A    $3C09   SE       VC, #09         ; Skip if VC == 9
$A1C    $BDD4   JP       V0, $DD4        ; Jump to V0 + DD4
$A1E    $8FFB   UNKNOWN  8FFB            ; Unknown 8xxx instruction
$A20    $591B   UNKNOWN  $591B           ; Unknown 5xxx instruction
$A22    $7446   ADD      V4, #46         ; Add 70 to V4
$A24    $8352   AND      V3, V5          ; V3 &= V5
$A26    $C538   RND      V5, #38         ; V5 = random & 38
$A28    $7727   ADD      V7, #27         ; Add 39 to V7
$A2A    $CEA4   RND      VE, #A4         ; VE = random & A4
$A2C    $7B2F   ADD      VB, #2F         ; Add 47 to VB
$A2E    $6304   LD       V3, #04         ; Load 4 into V3
$A30    $4BCB   SNE      VB, #CB         ; Skip if VB != 203
$A32    $77D8   ADD      V7, #D8         ; Add 216 to V7
$A34    $8B17   SUBN     VB, V1          ; VB = V1 - VB, VF = !borrow
$A36    $E3AA   UNKNOWN  $E3AA           ; Unknown Exxx instruction
$A38    $B732   JP       V0, $732        ; Jump to V0 + 732
$A3A    $9530   SNE      V5, V3          ; Skip if V5 != V3
$A3C    $180C   JP       $80C            ; Jump to 80C
$A3E    $D606   DRW      V6, V0, #6      ; Draw 6-byte sprite at V6, V0
$A40    $1E57   JP       $E57            ; Jump to E57
$A42    $D72D   DRW      V7, V2, #D      ; Draw 13-byte sprite at V7, V2
$A44    $56B1   UNKNOWN  $56B1           ; Unknown 5xxx instruction
$A46    $891C   UNKNOWN  891C            ; Unknown 8xxx instruction
$A48    $4EA0   SNE      VE, #A0         ; Skip if VE != 160
$A4A    $0899   SYS      $899            ; System call to 899
$A4C    $B992   JP       V0, $992        ; Jump to V0 + 992
$A4E    $A403   LD       I, $403         ; Load 403 into I
$A50    $0D79   SYS      $D79            ; System call to D79
$A52    $B005   JP       V0, $005        ; Jump to V0 + 005
$A54    $FB63   UNKNOWN  FB63            ; Unknown Fxxx instruction
$A56    $4018   SNE      V0, #18         ; Skip if V0 != 24
$A58    $0D5A   SYS      $D5A            ; System call to D5A
$A5A    $34D4   SE       V4, #D4         ; Skip if V4 == 212
$A5C    $475D   SNE      V7, #5D         ; Skip if V7 != 93
$A5E    $1BA4   JP       $BA4            ; Jump to BA4
$A60    $6154   LD       V1, #54         ; Load 84 into V1
$A62    $DE71   DRW      VE, V7, #1      ; Draw 1-byte sprite at VE, V7
$A64    $3A7B   SE       VA, #7B         ; Skip if VA == 123
$A66    $D1AB   DRW      V1, VA, #B      ; Draw 11-byte sprite at V1, VA
$A68    $8544   ADD      V5, V4          ; V5 += V4, VF = carry
$A6A    $4153   SNE      V1, #53         ; Skip if V1 != 83
$A6C    $5DED   UNKNOWN  $5DED           ; Unknown 5xxx instruction
$A6E    $EF4F   UNKNOWN  $EF4F           ; Unknown Exxx instruction
$A70    $14EA   JP       $4EA            ; Jump to 4EA
$A72    $D259   DRW      V2, V5, #9      ; Draw 9-byte sprite at V2, V5
$A74    $0D18   SYS      $D18            ; System call to D18
$A76    $D8BD   DRW      V8, VB, #D      ; Draw 13-byte sprite at V8, VB
$A78    $BAFC   JP       V0, $AFC        ; Jump to V0 + AFC
$A7A    $3C51   SE       VC, #51         ; Skip if VC == 81
$A7C    $13A5   JP       $3A5            ; Jump to 3A5
$A7E    $0BDE   SYS      $BDE            ; System call to BDE
$A80    $6732   LD       V7, #32         ; Load 50 into V7
$A82    $FC49   UNKNOWN  FC49            ; Unknown Fxxx instruction
$A84    $0A27   SYS      $A27            ; System call to A27
$A86    $26DE   CALL     $6DE            ; Call subroutine at 6DE
$A88    $86E4   ADD      V6, VE          ; V6 += VE, VF = carry
$A8A    $5A08   UNKNOWN  $5A08           ; Unknown 5xxx instruction
$A8C    $25D3   CALL     $5D3            ; Call subroutine at 5D3
$A8E    $1239   JP       $239            ; Jump to 239
$A90    $E1E3   UNKNOWN  $E1E3           ; Unknown Exxx instruction
$A92    $4197   SNE      V1, #97         ; Skip if V1 != 151
$A94    $B871   JP       V0, $871        ; Jump to V0 + 871
$A96    $E31E   UNKNOWN  $E31E           ; Unknown Exxx instruction
$A98    $567A   UNKNOWN  $567A           ; Unknown 5xxx instruction
$A9A    $378F   SE       V7, #8F         ; Skip if V7 == 143
$A9C    $1A6D   JP       $A6D            ; Jump to A6D
$A9E    $C8A2   RND      V8, #A2         ; V8 = random & A2
$AA0    $2FB3   CALL     $FB3            ; Call subroutine at FB3
$AA2    $DD63   DRW      VD, V6, #3      ; Draw 3-byte sprite at VD, V6
$AA4    $2883   CALL     $883            ; Call subroutine at 883
$AA6    $9D10   SNE      VD, V1          ; Skip if VD != V1
$AA8    $084B   SYS      $84B            ; System call to 84B
$AAA    $DD61   DRW      VD, V6, #1      ; Draw 1-byte sprite at VD, V6
$AAC    $ABFD   LD       I, $BFD         ; Load BFD into I
$AAE    $DB85   DRW      VB, V8, #5      ; Draw 5-byte sprite at VB, V8
$AB0    $A22B   LD       I, $22B         ; Load 22B into I
$AB2    $6F26   LD       VF, #26         ; Load 38 into VF
$AB4    $A49A   LD       I, $49A         ; Load 49A into I
$AB6    $CCAB   RND      VC, #AB         ; VC = random & AB
$AB8    $F336   UNKNOWN  F336            ; Unknown Fxxx instruction
$ABA    $D62C   DRW      V6, V2, #C      ; Draw 12-byte sprite at V6, V2
$ABC    $6058   LD       V0, #58         ; Load 88 into V0
$ABE    $A3E7   LD       I, $3E7         ; Load 3E7 into I
$AC0    $4BBC   SNE      VB, #BC         ; Skip if VB != 188
$AC2    $ACC7   LD       I, $CC7         ; Load CC7 into I
$AC4    $2369   CALL     $369            ; Call subroutine at 369
$AC6    $CF4C   RND      VF, #4C         ; VF = random & 4C
$AC8    $ABC8   LD       I, $BC8         ; Load BC8 into I
$ACA    $420D   SNE      V2, #0D         ; Skip if V2 != 13
$ACC    $42EE   SNE      V2, #EE         ; Skip if V2 != 238
$ACE    $1D38   JP       $D38            ; Jump to D38
$AD0    $F609   UNKNOWN  F609            ; Unknown Fxxx instruction
$AD2    $8B02   AND      VB, V0          ; VB &= V0
$AD4    $4B5C   SNE      VB, #5C         ; Skip if VB != 92
$AD6    $9951   UNKNOWN  $9951           ; Unknown 9xxx instruction
$AD8    $F087   UNKNOWN  F087            ; Unknown Fxxx instruction
$ADA    $3EF9   SE       VE, #F9         ; Skip if VE == 249
$ADC    $EEE6   UNKNOWN  $EEE6           ; Unknown Exxx instruction
$ADE    $D9BE   DRW      V9, VB, #E      ; Draw 14-byte sprite at V9, VB
$AE0    $58F5   UNKNOWN  $58F5           ; Unknown 5xxx instruction
$AE2    $BE2E   JP       V0, $E2E        ; Jump to V0 + E2E
$AE4    $400D   SNE      V0, #0D         ; Skip if V0 != 13
$AE6    $8396   SHR      V3              ; V3 >>= 1, VF = LSB
$AE8    $D7B8   DRW      V7, VB, #8      ; Draw 8-byte sprite at V7, VB
$AEA    $D400   DRW      V4, V0, #0      ; Draw 0-byte sprite at V4, V0
$AEC    $A26D   LD       I, $26D         ; Load 26D into I
$AEE    $3845   SE       V8, #45         ; Skip if V8 == 69
$AF0    $099B   SYS      $99B            ; System call to 99B
$AF2    $E239   UNKNOWN  $E239           ; Unknown Exxx instruction
$AF4    $0E90   SYS      $E90            ; System call to E90
$AF6    $2D55   CALL     $D55            ; Call subroutine at D55
$AF8    $249D   CALL     $49D            ; Call subroutine at 49D
$AFA    $39EF   SE       V9, #EF         ; Skip if V9 == 239
$AFC    $7B79   ADD      VB, #79         ; Add 121 to VB
$AFE    $1F92   JP       $F92            ; Jump to F92
$B00    $DEDA   DRW      VE, VD, #A      ; Draw 10-byte sprite at VE, VD
$B02    $9BEB   UNKNOWN  $9BEB           ; Unknown 9xxx instruction
$B04    $D966   DRW      V9, V6, #6      ; Draw 6-byte sprite at V9, V6
$B06    $F99B   UNKNOWN  F99B            ; Unknown Fxxx instruction
$B08    $A280   LD       I, $280         ; Load 280 into I
$B0A    $62BA   LD       V2, #BA         ; Load 186 into V2
$B0C    $EE4B   UNKNOWN  $EE4B           ; Unknown Exxx instruction
$B0E    $24EF   CALL     $4EF            ; Call subroutine at 4EF
$B10    $257A   CALL     $57A            ; Call subroutine at 57A
$B12    $FB8F   UNKNOWN  FB8F            ; Unknown Fxxx instruction
$B14    $EF83   UNKNOWN  $EF83           ; Unknown Exxx instruction
$B16    $3E2E   SE       VE, #2E         ; Skip if VE == 46
$B18    $3583   SE       V5, #83         ; Skip if V5 == 131
$B1A    $5105   UNKNOWN  $5105           ; Unknown 5xxx instruction
$B1C    $FAF4   UNKNOWN  FAF4            ; Unknown Fxxx instruction
$B1E    $43E3   SNE      V3, #E3         ; Skip if V3 != 227
$B20    $CCB7   RND      VC, #B7         ; VC = random & B7
$B22    $446F   SNE      V4, #6F         ; Skip if V4 != 111
$B24    $031A   SYS      $31A            ; System call to 31A
$B26    $4F99   SNE      VF, #99         ; Skip if VF != 153
$B28    $E5E4   UNKNOWN  $E5E4           ; Unknown Exxx instruction
$B2A    $6FF9   LD       VF, #F9         ; Load 249 into VF
$B2C    $E3D1   UNKNOWN  $E3D1           ; Unknown Exxx instruction
$B2E    $0EA3   SYS      $EA3            ; System call to EA3
$B30    $44DC   SNE      V4, #DC         ; Skip if V4 != 220
$B32    $574A   UNKNOWN  $574A           ; Unknown 5xxx instruction
$B34    $640F   LD       V4, #0F         ; Load 15 into V4
$B36    $1230   JP       $230            ; Jump to 230
$B38    $6D16   LD       VD, #16         ; Load 22 into VD
$B3A    $1DB1   JP       $DB1            ; Jump to DB1
$B3C    $39E4   SE       V9, #E4         ; Skip if V9 == 228
$B3E    $CAB2   RND      VA, #B2         ; VA = random & B2
$B40    $68F7   LD       V8, #F7         ; Load 247 into V8
$B42    $E477   UNKNOWN  $E477           ; Unknown Exxx instruction
$B44    $BA88   JP       V0, $A88        ; Jump to V0 + A88
$B46    $BBD1   JP       V0, $BD1        ; Jump to V0 + BD1
$B48    $8486   SHR      V4              ; V4 >>= 1, VF = LSB
$B4A    $83F5   SUB      V3, VF          ; V3 -= VF, VF = !borrow
$B4C    $8AAE   SHL      VA              ; VA <<= 1, VF = MSB
$B4E    $600F   LD       V0, #0F         ; Load 15 into V0
$B50    $49F7   SNE      V9, #F7         ; Skip if V9 != 247
$B52    $E60D   UNKNOWN  $E60D           ; Unknown Exxx instruction
$B54    $4804   SNE      V8, #04         ; Skip if V8 != 4
$B56    $061D   SYS      $61D            ; System call to 61D
$B58    $9E78   UNKNOWN  $9E78           ; Unknown 9xxx instruction
$B5A    $E846   UNKNOWN  $E846           ; Unknown Exxx instruction
$B5C    $EB61   UNKNOWN  $EB61           ; Unknown Exxx instruction
$B5E    $41BB   SNE      V1, #BB         ; Skip if V1 != 187
$B60    $B198   JP       V0, $198        ; Jump to V0 + 198
$B62    $67F5   LD       V7, #F5         ; Load 245 into V7
$B64    $1743   JP       $743            ; Jump to 743
$B66    $1A4B   JP       $A4B            ; Jump to A4B
$B68    $6F33   LD       VF, #33         ; Load 51 into VF
$B6A    $59A0   SE       V9, VA          ; Skip if V9 == VA
$B6C    $EBFE   UNKNOWN  $EBFE           ; Unknown Exxx instruction
$B6E    $73C0   ADD      V3, #C0         ; Add 192 to V3
$B70    $63EA   LD       V3, #EA         ; Load 234 into V3
$B72    $1F87   JP       $F87            ; Jump to F87
$B74    $230F   CALL     $30F            ; Call subroutine at 30F
$B76    $0A3C   SYS      $A3C            ; System call to A3C
$B78    $390D   SE       V9, #0D         ; Skip if V9 == 13
$B7A    $0B16   SYS      $B16            ; System call to B16
$B7C    $F113   UNKNOWN  F113            ; Unknown Fxxx instruction
$B7E    $D76F   DRW      V7, V6, #F      ; Draw 15-byte sprite at V7, V6
$B80    $E28D   UNKNOWN  $E28D           ; Unknown Exxx instruction
$B82    $7C77   ADD      VC, #77         ; Add 119 to VC
$B84    $98C6   UNKNOWN  $98C6           ; Unknown 9xxx instruction
$B86    $72E4   ADD      V2, #E4         ; Add 228 to V2
$B88    $B649   JP       V0, $649        ; Jump to V0 + 649
$B8A    $E3BB   UNKNOWN  $E3BB           ; Unknown Exxx instruction
$B8C    $C341   RND      V3, #41         ; V3 = random & 41
$B8E    $CF20   RND      VF, #20         ; VF = random & 20
$B90    $D013   DRW      V0, V1, #3      ; Draw 3-byte sprite at V0, V1
$B92    $0A73   SYS      $A73            ; System call to A73
$B94    $1569   JP       $569            ; Jump to 569
$B96    $7285   ADD      V2, #85         ; Add 133 to V2
$B98    $DFBC   DRW      VF, VB, #C      ; Draw 12-byte sprite at VF, VB
$B9A    $030A   SYS      $30A            ; System call to 30A
$B9C    $F555   LD       [I], V5         ; Store V0-V5 at I
$B9E    $D377   DRW      V3, V7, #7      ; Draw 7-byte sprite at V3, V7
$BA0    $F56E   UNKNOWN  F56E            ; Unknown Fxxx instruction
$BA2    $2E3E   CALL     $E3E            ; Call subroutine at E3E
$BA4    $01C6   SYS      $1C6            ; System call to 1C6
$BA6    $7A01   ADD      VA, #01         ; Add 1 to VA
$BA8    $445F   SNE      V4, #5F         ; Skip if V4 != 95
$BAA    $21DA   CALL     $1DA            ; Call subroutine at 1DA
$BAC    $C2AC   RND      V2, #AC         ; V2 = random & AC
$BAE    $E47B   UNKNOWN  $E47B           ; Unknown Exxx instruction
$BB0    $EAFA   UNKNOWN  $EAFA           ; Unknown Exxx instruction
$BB2    $480A   SNE      V8, #0A         ; Skip if V8 != 10
$BB4    $C6CB   RND      V6, #CB         ; V6 = random & CB
$BB6    $07FB   SYS      $7FB            ; System call to 7FB
$BB8    $AB43   LD       I, $B43         ; Load B43 into I
$BBA    $BF15   JP       V0, $F15        ; Jump to V0 + F15
$BBC    $1305   JP       $305            ; Jump to 305
$BBE    $6527   LD       V5, #27         ; Load 39 into V5
$BC0    $D986   DRW      V9, V8, #6      ; Draw 6-byte sprite at V9, V8
$BC2    $4796   SNE      V7, #96         ; Skip if V7 != 150
$BC4    $80BA   UNKNOWN  80BA            ; Unknown 8xxx instruction
$BC6    $66C2   LD       V6, #C2         ; Load 194 into V6
$BC8    $BFC5   JP       V0, $FC5        ; Jump to V0 + FC5
$BCA    $F5C9   UNKNOWN  F5C9            ; Unknown Fxxx instruction
$BCC    $DFA5   DRW      VF, VA, #5      ; Draw 5-byte sprite at VF, VA
$BCE    $C6F5   RND      V6, #F5         ; V6 = random & F5
$BD0    $1120   JP       $120            ; Jump to 120
$BD2    $7886   ADD      V8, #86         ; Add 134 to V8
$BD4    $022F   SYS      $22F            ; System call to 22F
$BD6    $4FC6   SNE      VF, #C6         ; Skip if VF != 198
$BD8    $7930   ADD      V9, #30         ; Add 48 to V9
$BDA    $4B08   SNE      VB, #08         ; Skip if VB != 8
$BDC    $C3F7   RND      V3, #F7         ; V3 = random & F7
$BDE    $ADFD   LD       I, $DFD         ; Load DFD into I
$BE0    $3917   SE       V9, #17         ; Skip if V9 == 23
$BE2    $79B5   ADD      V9, #B5         ; Add 181 to V9
$BE4    $ED89   UNKNOWN  $ED89           ; Unknown Exxx instruction
$BE6    $1009   JP       $009            ; Jump to 009
$BE8    $5B73   UNKNOWN  $5B73           ; Unknown 5xxx instruction
$BEA    $53FD   UNKNOWN  $53FD           ; Unknown 5xxx instruction
$BEC    $917A   UNKNOWN  $917A           ; Unknown 9xxx instruction
$BEE    $339A   SE       V3, #9A         ; Skip if V3 == 154
$BF0    $ACDC   LD       I, $CDC         ; Load CDC into I
$BF2    $99EF   UNKNOWN  $99EF           ; Unknown 9xxx instruction
$BF4    $33B9   SE       V3, #B9         ; Skip if V3 == 185
$BF6    $83ED   UNKNOWN  83ED            ; Unknown 8xxx instruction
$BF8    $3E41   SE       VE, #41         ; Skip if VE == 65
$BFA    $3C5C   SE       VC, #5C         ; Skip if VC == 92
$BFC    $F0EB   UNKNOWN  F0EB            ; Unknown Fxxx instruction
$BFE    $760B   ADD      V6, #0B         ; Add 11 to V6
$C00    $9C83   UNKNOWN  $9C83           ; Unknown 9xxx instruction
$C02    $C347   RND      V3, #47         ; V3 = random & 47
$C04    $163C   JP       $63C            ; Jump to 63C
$C06    $9597   UNKNOWN  $9597           ; Unknown 9xxx instruction
$C08    $99DD   UNKNOWN  $99DD           ; Unknown 9xxx instruction
$C0A    $5099   UNKNOWN  $5099           ; Unknown 5xxx instruction
$C0C    $7F1F   ADD      VF, #1F         ; Add 31 to VF
$C0E    $3956   SE       V9, #56         ; Skip if V9 == 86
$C10    $BACE   JP       V0, $ACE        ; Jump to V0 + ACE
$C12    $4E1B   SNE      VE, #1B         ; Skip if VE != 27
$C14    $CC08   RND      VC, #08         ; VC = random & 08
$C16    $318E   SE       V1, #8E         ; Skip if V1 == 142
$C18    $89EE   SHL      V9              ; V9 <<= 1, VF = MSB
$C1A    $D60D   DRW      V6, V0, #D      ; Draw 13-byte sprite at V6, V0
$C1C    $3939   SE       V9, #39         ; Skip if V9 == 57
$C1E    $4F6D   SNE      VF, #6D         ; Skip if VF != 109
$C20    $55FB   UNKNOWN  $55FB           ; Unknown 5xxx instruction
$C22    $CDA2   RND      VD, #A2         ; VD = random & A2
$C24    $2287   CALL     $287            ; Call subroutine at 287
$C26    $2258   CALL     $258            ; Call subroutine at 258
$C28    $1DE6   JP       $DE6            ; Jump to DE6
$C2A    $48A7   SNE      V8, #A7         ; Skip if V8 != 167
$C2C    $6F3D   LD       VF, #3D         ; Load 61 into VF
$C2E    $9AE8   UNKNOWN  $9AE8           ; Unknown 9xxx instruction
$C30    $1A05   JP       $A05            ; Jump to A05
$C32    $21D7   CALL     $1D7            ; Call subroutine at 1D7
$C34    $6EE4   LD       VE, #E4         ; Load 228 into VE
$C36    $6893   LD       V8, #93         ; Load 147 into V8
$C38    $6842   LD       V8, #42         ; Load 66 into V8
$C3A    $C3E1   RND      V3, #E1         ; V3 = random & E1
$C3C    $9B8F   UNKNOWN  $9B8F           ; Unknown 9xxx instruction
$C3E    $D99D   DRW      V9, V9, #D      ; Draw 13-byte sprite at V9, V9
$C40    $26B9   CALL     $6B9            ; Call subroutine at 6B9
$C42    $F03E   UNKNOWN  F03E            ; Unknown Fxxx instruction
$C44    $6CCB   LD       VC, #CB         ; Load 203 into VC
$C46    $8AF7   SUBN     VA, VF          ; VA = VF - VA, VF = !borrow
$C48    $6021   LD       V0, #21         ; Load 33 into V0
$C4A    $6C17   LD       VC, #17         ; Load 23 into VC
$C4C    $0463   SYS      $463            ; System call to 463
$C4E    $E8A9   UNKNOWN  $E8A9           ; Unknown Exxx instruction
$C50    $90C2   UNKNOWN  $90C2           ; Unknown 9xxx instruction
$C52    $0609   SYS      $609            ; System call to 609
$C54    $E6F8   UNKNOWN  $E6F8           ; Unknown Exxx instruction
$C56    $D7CC   DRW      V7, VC, #C      ; Draw 12-byte sprite at V7, VC
$C58    $B6B7   JP       V0, $6B7        ; Jump to V0 + 6B7
$C5A    $4347   SNE      V3, #47         ; Skip if V3 != 71
$C5C    $AA78   LD       I, $A78         ; Load A78 into I
$C5E    $5F79   UNKNOWN  $5F79           ; Unknown 5xxx instruction
$C60    $FB1C   UNKNOWN  FB1C            ; Unknown Fxxx instruction
$C62    $FFEE   UNKNOWN  FFEE            ; Unknown Fxxx instruction
$C64    $F20B   UNKNOWN  F20B            ; Unknown Fxxx instruction
$C66    $62AE   LD       V2, #AE         ; Load 174 into V2
$C68    $D676   DRW      V6, V7, #6      ; Draw 6-byte sprite at V6, V7
$C6A    $A1BB   LD       I, $1BB         ; Load 1BB into I
$C6C    $9D24   UNKNOWN  $9D24           ; Unknown 9xxx instruction
$C6E    $947C   UNKNOWN  $947C           ; Unknown 9xxx instruction
$C70    $01CC   SYS      $1CC            ; System call to 1CC
$C72    $5287   UNKNOWN  $5287           ; Unknown 5xxx instruction
$C74    $A3C4   LD       I, $3C4         ; Load 3C4 into I
$C76    $25C5   CALL     $5C5            ; Call subroutine at 5C5
$C78    $EFAB   UNKNOWN  $EFAB           ; Unknown Exxx instruction
$C7A    $0854   SYS      $854            ; System call to 854
$C7C    $8395   SUB      V3, V9          ; V3 -= V9, VF = !borrow
$C7E    $C7BD   RND      V7, #BD         ; V7 = random & BD
$C80    $1AF8   JP       $AF8            ; Jump to AF8
$C82    $6304   LD       V3, #04         ; Load 4 into V3
$C84    $7947   ADD      V9, #47         ; Add 71 to V9
$C86    $BFD1   JP       V0, $FD1        ; Jump to V0 + FD1
$C88    $ED9B   UNKNOWN  $ED9B           ; Unknown Exxx instruction
$C8A    $EAF6   UNKNOWN  $EAF6           ; Unknown Exxx instruction
$C8C    $30B9   SE       V0, #B9         ; Skip if V0 == 185
$C8E    $99CF   UNKNOWN  $99CF           ; Unknown 9xxx instruction
$C90    $BA0B   JP       V0, $A0B        ; Jump to V0 + A0B
$C92    $65A3   LD       V5, #A3         ; Load 163 into V5
$C94    $ADA2   LD       I, $DA2         ; Load DA2 into I
$C96    $FD54   UNKNOWN  FD54            ; Unknown Fxxx instruction
$C98    $B183   JP       V0, $183        ; Jump to V0 + 183
$C9A    $252D   CALL     $52D            ; Call subroutine at 52D
$C9C    $0DC0   SYS      $DC0            ; System call to DC0
$C9E    $E726   UNKNOWN  $E726           ; Unknown Exxx instruction
$CA0    $083E   SYS      $83E            ; System call to 83E
$CA2    $EBA7   UNKNOWN  $EBA7           ; Unknown Exxx instruction
$CA4    $4292   SNE      V2, #92         ; Skip if V2 != 146
$CA6    $08F5   SYS      $8F5            ; System call to 8F5
$CA8    $5B5F   UNKNOWN  $5B5F           ; Unknown 5xxx instruction
$CAA    $AE70   LD       I, $E70         ; Load E70 into I
$CAC    $508E   UNKNOWN  $508E           ; Unknown 5xxx instruction
$CAE    $28C7   CALL     $8C7            ; Call subroutine at 8C7
$CB0    $8DEA   UNKNOWN  8DEA            ; Unknown 8xxx instruction
$CB2    $B6A0   JP       V0, $6A0        ; Jump to V0 + 6A0
$CB4    $9156   UNKNOWN  $9156           ; Unknown 9xxx instruction
$CB6    $B07B   JP       V0, $07B        ; Jump to V0 + 07B
$CB8    $8C25   SUB      VC, V2          ; VC -= V2, VF = !borrow
$CBA    $5FCA   UNKNOWN  $5FCA           ; Unknown 5xxx instruction
$CBC    $FAB4   UNKNOWN  FAB4            ; Unknown Fxxx instruction
$CBE    $C726   RND      V7, #26         ; V7 = random & 26
$CC0    $5804   UNKNOWN  $5804           ; Unknown 5xxx instruction
$CC2    $E38F   UNKNOWN  $E38F           ; Unknown Exxx instruction
$CC4    $8753   XOR      V7, V5          ; V7 ^= V5
$CC6    $186B   JP       $86B            ; Jump to 86B
$CC8    $8714   ADD      V7, V1          ; V7 += V1, VF = carry
$CCA    $693F   LD       V9, #3F         ; Load 63 into V9
$CCC    $7EC0   ADD      VE, #C0         ; Add 192 to VE
$CCE    $3CE5   SE       VC, #E5         ; Skip if VC == 229
$CD0    $3801   SE       V8, #01         ; Skip if V8 == 1
$CD2    $6A94   LD       VA, #94         ; Load 148 into VA
$CD4    $0266   SYS      $266            ; System call to 266
$CD6    $826F   UNKNOWN  826F            ; Unknown 8xxx instruction
$CD8    $EEA0   UNKNOWN  $EEA0           ; Unknown Exxx instruction
$CDA    $04E5   SYS      $4E5            ; System call to 4E5
$CDC    $7CA2   ADD      VC, #A2         ; Add 162 to VC
$CDE    $1919   JP       $919            ; Jump to 919
$CE0    $45BC   SNE      V5, #BC         ; Skip if V5 != 188
$CE2    $0198   SYS      $198            ; System call to 198
$CE4    $72A0   ADD      V2, #A0         ; Add 160 to V2
$CE6    $14F2   JP       $4F2            ; Jump to 4F2
$CE8    $5DA7   UNKNOWN  $5DA7           ; Unknown 5xxx instruction
$CEA    $167E   JP       $67E            ; Jump to 67E
$CEC    $8677   SUBN     V6, V7          ; V6 = V7 - V6, VF = !borrow
$CEE    $F04C   UNKNOWN  F04C            ; Unknown Fxxx instruction
$CF0    $4BF6   SNE      VB, #F6         ; Skip if VB != 246
$CF2    $99B7   UNKNOWN  $99B7           ; Unknown 9xxx instruction
$CF4    $DFA2   DRW      VF, VA, #2      ; Draw 2-byte sprite at VF, VA
$CF6    $ED76   UNKNOWN  $ED76           ; Unknown Exxx instruction
$CF8    $26DB   CALL     $6DB            ; Call subroutine at 6DB
$CFA    $2018   CALL     $018            ; Call subroutine at 018
$CFC    $02F3   SYS      $2F3            ; System call to 2F3
$CFE    $3EB0   SE       VE, #B0         ; Skip if VE == 176
$D00    $3312   SE       V3, #12         ; Skip if V3 == 18
$D02    $0F9D   SYS      $F9D            ; System call to F9D
$D04    $ED6D   UNKNOWN  $ED6D           ; Unknown Exxx instruction
$D06    $80CC   UNKNOWN  80CC            ; Unknown 8xxx instruction
$D08    $64E7   LD       V4, #E7         ; Load 231 into V4
$D0A    $B45F   JP       V0, $45F        ; Jump to V0 + 45F
$D0C    $2B6D   CALL     $B6D            ; Call subroutine at B6D
$D0E    $2341   CALL     $341            ; Call subroutine at 341
$D10    $4F43   SNE      VF, #43         ; Skip if VF != 67
$D12    $94C3   UNKNOWN  $94C3           ; Unknown 9xxx instruction
$D14    $5B2E   UNKNOWN  $5B2E           ; Unknown 5xxx instruction
$D16    $193F   JP       $93F            ; Jump to 93F
$D18    $F86E   UNKNOWN  F86E            ; Unknown Fxxx instruction
$D1A    $3618   SE       V6, #18         ; Skip if V6 == 24
$D1C    $9F99   UNKNOWN  $9F99           ; Unknown 9xxx instruction
$D1E    $C0CB   RND      V0, #CB         ; V0 = random & CB
$D20    $FC05   UNKNOWN  FC05            ; Unknown Fxxx instruction
$D22    $5BEB   UNKNOWN  $5BEB           ; Unknown 5xxx instruction
$D24    $4151   SNE      V1, #51         ; Skip if V1 != 81
$D26    $CAA3   RND      VA, #A3         ; VA = random & A3
$D28    $D9C1   DRW      V9, VC, #1      ; Draw 1-byte sprite at V9, VC
$D2A    $FB9D   UNKNOWN  FB9D            ; Unknown Fxxx instruction
$D2C    $5AAF   UNKNOWN  $5AAF           ; Unknown 5xxx instruction
$D2E    $A39B   LD       I, $39B         ; Load 39B into I
$D30    $6C2A   LD       VC, #2A         ; Load 42 into VC
$D32    $4A9A   SNE      VA, #9A         ; Skip if VA != 154
$D34    $3895   SE       V8, #95         ; Skip if V8 == 149
$D36    $9F9B   UNKNOWN  $9F9B           ; Unknown 9xxx instruction
$D38    $5710   SE       V7, V1          ; Skip if V7 == V1
$D3A    $321B   SE       V2, #1B         ; Skip if V2 == 27
$D3C    $0A06   SYS      $A06            ; System call to A06
$D3E    $4650   SNE      V6, #50         ; Skip if V6 != 80
$D40    $4AC2   SNE      VA, #C2         ; Skip if VA != 194
$D42    $D213   DRW      V2, V1, #3      ; Draw 3-byte sprite at V2, V1
$D44    $A2B3   LD       I, $2B3         ; Load 2B3 into I
$D46    $F534   UNKNOWN  F534            ; Unknown Fxxx instruction
$D48    $6A1C   LD       VA, #1C         ; Load 28 into VA
$D4A    $4BFD   SNE      VB, #FD         ; Skip if VB != 253
$D4C    $EF97   UNKNOWN  $EF97           ; Unknown Exxx instruction
$D4E    $CEC4   RND      VE, #C4         ; VE = random & C4
$D50    $0A3C   SYS      $A3C            ; System call to A3C
$D52    $DA58   DRW      VA, V5, #8      ; Draw 8-byte sprite at VA, V5
$D54    $37D5   SE       V7, #D5         ; Skip if V7 == 213
$D56    $F27C   UNKNOWN  F27C            ; Unknown Fxxx instruction
$D58    $299A   CALL     $99A            ; Call subroutine at 99A
$D5A    $C944   RND      V9, #44         ; V9 = random & 44
$D5C    $23F7   CALL     $3F7            ; Call subroutine at 3F7
$D5E    $F2C7   UNKNOWN  F2C7            ; Unknown Fxxx instruction
$D60    $B45E   JP       V0, $45E        ; Jump to V0 + 45E
$D62    $2A1A   CALL     $A1A            ; Call subroutine at A1A
$D64    $ACB6   LD       I, $CB6         ; Load CB6 into I
$D66    $1971   JP       $971            ; Jump to 971
$D68    $67D4   LD       V7, #D4         ; Load 212 into V7
$D6A    $933A   UNKNOWN  $933A           ; Unknown 9xxx instruction
$D6C    $E952   UNKNOWN  $E952           ; Unknown Exxx instruction
$D6E    $4134   SNE      V1, #34         ; Skip if V1 != 52
$D70    $9AF9   UNKNOWN  $9AF9           ; Unknown 9xxx instruction
$D72    $48A8   SNE      V8, #A8         ; Skip if V8 != 168
$D74    $216C   CALL     $16C            ; Call subroutine at 16C
$D76    $796F   ADD      V9, #6F         ; Add 111 to V9
$D78    $F937   UNKNOWN  F937            ; Unknown Fxxx instruction
$D7A    $0C0F   SYS      $C0F            ; System call to C0F
$D7C    $4D0B   SNE      VD, #0B         ; Skip if VD != 11
$D7E    $EE58   UNKNOWN  $EE58           ; Unknown Exxx instruction
$D80    $DCFD   DRW      VC, VF, #D      ; Draw 13-byte sprite at VC, VF
$D82    $259D   CALL     $59D            ; Call subroutine at 59D
$D84    $67D3   LD       V7, #D3         ; Load 211 into V7
$D86    $9CCC   UNKNOWN  $9CCC           ; Unknown 9xxx instruction
$D88    $BD45   JP       V0, $D45        ; Jump to V0 + D45
$D8A    $F9F1   UNKNOWN  F9F1            ; Unknown Fxxx instruction
$D8C    $AD0B   LD       I, $D0B         ; Load D0B into I
$D8E    $3EE3   SE       VE, #E3         ; Skip if VE == 227
$D90    $09AF   SYS      $9AF            ; System call to 9AF
$D92    $B6C1   JP       V0, $6C1        ; Jump to V0 + 6C1
$D94    $0DF1   SYS      $DF1            ; System call to DF1
$D96    $B1E1   JP       V0, $1E1        ; Jump to V0 + 1E1
$D98    $55B6   UNKNOWN  $55B6           ; Unknown 5xxx instruction
$D9A    $2F97   CALL     $F97            ; Call subroutine at F97
$D9C    $12D3   JP       $2D3            ; Jump to 2D3
$D9E    $20F8   CALL     $0F8            ; Call subroutine at 0F8
$DA0    $B402   JP       V0, $402        ; Jump to V0 + 402
$DA2    $B1E4   JP       V0, $1E4        ; Jump to V0 + 1E4
$DA4    $CAEC   RND      VA, #EC         ; VA = random & EC
$DA6    $FAC4   UNKNOWN  FAC4            ; Unknown Fxxx instruction
$DA8    $9D46   UNKNOWN  $9D46           ; Unknown 9xxx instruction
$DAA    $6FDA   LD       VF, #DA         ; Load 218 into VF
$DAC    $750C   ADD      V5, #0C         ; Add 12 to V5
$DAE    $26D6   CALL     $6D6            ; Call subroutine at 6D6
$DB0    $CEEA   RND      VE, #EA         ; VE = random & EA
$DB2    $D03F   DRW      V0, V3, #F      ; Draw 15-byte sprite at V0, V3
$DB4    $D28D   DRW      V2, V8, #D      ; Draw 13-byte sprite at V2, V8
$DB6    $7B5B   ADD      VB, #5B         ; Add 91 to VB
$DB8    $2957   CALL     $957            ; Call subroutine at 957
$DBA    $DD24   DRW      VD, V2, #4      ; Draw 4-byte sprite at VD, V2
$DBC    $6091   LD       V0, #91         ; Load 145 into V0
$DBE    $D5AD   DRW      V5, VA, #D      ; Draw 13-byte sprite at V5, VA
$DC0    $6800   LD       V8, #00         ; Load 0 into V8
$DC2    $525B   UNKNOWN  $525B           ; Unknown 5xxx instruction
$DC4    $87E1   OR       V7, VE          ; V7 |= VE
$DC6    $EE39   UNKNOWN  $EE39           ; Unknown Exxx instruction
$DC8    $D367   DRW      V3, V6, #7      ; Draw 7-byte sprite at V3, V6
$DCA    $606A   LD       V0, #6A         ; Load 106 into V0
$DCC    $BFE6   JP       V0, $FE6        ; Jump to V0 + FE6
$DCE    $04EB   SYS      $4EB            ; System call to 4EB
$DD0    $F15F   UNKNOWN  F15F            ; Unknown Fxxx instruction
$DD2    $93DC   UNKNOWN  $93DC           ; Unknown 9xxx instruction
$DD4    $C2E9   RND      V2, #E9         ; V2 = random & E9
$DD6    $CE91   RND      VE, #91         ; VE = random & 91
$DD8    $FC42   UNKNOWN  FC42            ; Unknown Fxxx instruction
$DDA    $1D6D   JP       $D6D            ; Jump to D6D
$DDC    $3057   SE       V0, #57         ; Skip if V0 == 87
$DDE    $7F37   ADD      VF, #37         ; Add 55 to VF
$DE0    $EB0F   UNKNOWN  $EB0F           ; Unknown Exxx instruction
$DE2    $2DEF   CALL     $DEF            ; Call subroutine at DEF
$DE4    $EEB4   UNKNOWN  $EEB4           ; Unknown Exxx instruction
$DE6    $7EC4   ADD      VE, #C4         ; Add 196 to VE
$DE8    $BC60   JP       V0, $C60        ; Jump to V0 + C60
$DEA    $CFB6   RND      VF, #B6         ; VF = random & B6
$DEC    $7F56   ADD      VF, #56         ; Add 86 to VF
$DEE    $2EFA   CALL     $EFA            ; Call subroutine at EFA
$DF0    $EC3F   UNKNOWN  $EC3F           ; Unknown Exxx instruction
$DF2    $EDA2   UNKNOWN  $EDA2           ; Unknown Exxx instruction
$DF4    $660E   LD       V6, #0E         ; Load 14 into V6
$DF6    $1ABC   JP       $ABC            ; Jump to ABC
$DF8    $B31F   JP       V0, $31F        ; Jump to V0 + 31F
$DFA    $98F2   UNKNOWN  $98F2           ; Unknown 9xxx instruction
$DFC    $EB8F   UNKNOWN  $EB8F           ; Unknown Exxx instruction
$DFE    $53D0   SE       V3, VD          ; Skip if V3 == VD
$E00    $3CD8   SE       VC, #D8         ; Skip if VC == 216
$E02    $A1B2   LD       I, $1B2         ; Load 1B2 into I
$E04    $76C9   ADD      V6, #C9         ; Add 201 to V6
$E06    $DEAF   DRW      VE, VA, #F      ; Draw 15-byte sprite at VE, VA
$E08    $9859   UNKNOWN  $9859           ; Unknown 9xxx instruction
$E0A    $EC76   UNKNOWN  $EC76           ; Unknown Exxx instruction
$E0C    $624A   LD       V2, #4A         ; Load 74 into V2
$E0E    $C619   RND      V6, #19         ; V6 = random & 19
$E10    $4342   SNE      V3, #42         ; Skip if V3 != 66
$E12    $ED27   UNKNOWN  $ED27           ; Unknown Exxx instruction
$E14    $1A73   JP       $A73            ; Jump to A73
$E16    $C549   RND      V5, #49         ; V5 = random & 49
$E18    $048C   SYS      $48C            ; System call to 48C
$E1A    $EFB7   UNKNOWN  $EFB7           ; Unknown Exxx instruction
$E1C    $E6F6   UNKNOWN  $E6F6           ; Unknown Exxx instruction
$E1E    $3FD8   SE       VF, #D8         ; Skip if VF == 216
$E20    $C4BA   RND      V4, #BA         ; V4 = random & BA
$E22    $52E6   UNKNOWN  $52E6           ; Unknown 5xxx instruction
$E24    $56F3   UNKNOWN  $56F3           ; Unknown 5xxx instruction
$E26    $D7C9   DRW      V7, VC, #9      ; Draw 9-byte sprite at V7, VC
$E28    $7CD7   ADD      VC, #D7         ; Add 215 to VC
$E2A    $3528   SE       V5, #28         ; Skip if V5 == 40
$E2C    $D441   DRW      V4, V4, #1      ; Draw 1-byte sprite at V4, V4
$E2E    $0C35   SYS      $C35            ; System call to C35
$E30    $1945   JP       $945            ; Jump to 945
$E32    $7ED3   ADD      VE, #D3         ; Add 211 to VE
$E34    $CA49   RND      VA, #49         ; VA = random & 49
$E36    $D632   DRW      V6, V3, #2      ; Draw 2-byte sprite at V6, V3
$E38    $BD63   JP       V0, $D63        ; Jump to V0 + D63
$E3A    $3D24   SE       VD, #24         ; Skip if VD == 36
$E3C    $B0A5   JP       V0, $0A5        ; Jump to V0 + 0A5
$E3E    $29D1   CALL     $9D1            ; Call subroutine at 9D1
$E40    $0B24   SYS      $B24            ; System call to B24
$E42    $9C6F   UNKNOWN  $9C6F           ; Unknown 9xxx instruction
$E44    $45B2   SNE      V5, #B2         ; Skip if V5 != 178
$E46    $D97C   DRW      V9, V7, #C      ; Draw 12-byte sprite at V9, V7
$E48    $E90E   UNKNOWN  $E90E           ; Unknown Exxx instruction
$E4A    $4677   SNE      V6, #77         ; Skip if V6 != 119
$E4C    $6288   LD       V2, #88         ; Load 136 into V2
$E4E    $0FE1   SYS      $FE1            ; System call to FE1
$E50    $EE0E   UNKNOWN  $EE0E           ; Unknown Exxx instruction
$E52    $A76B   LD       I, $76B         ; Load 76B into I
$E54    $B59B   JP       V0, $59B        ; Jump to V0 + 59B
$E56    $F038   UNKNOWN  F038            ; Unknown Fxxx instruction
$E58    $A1F3   LD       I, $1F3         ; Load 1F3 into I
$E5A    $AAEB   LD       I, $AEB         ; Load AEB into I
$E5C    $8330   LD       V3, V3          ; V3 = V3
$E5E    $EDDB   UNKNOWN  $EDDB           ; Unknown Exxx instruction
$E60    $C9ED   RND      V9, #ED         ; V9 = random & ED
$E62    $2931   CALL     $931            ; Call subroutine at 931
$E64    $8CEA   UNKNOWN  8CEA            ; Unknown 8xxx instruction
$E66    $00FA   SYS      $0FA            ; System call to 0FA
$E68    $B8C7   JP       V0, $8C7        ; Jump to V0 + 8C7
$E6A    $3CC1   SE       VC, #C1         ; Skip if VC == 193
$E6C    $A1A3   LD       I, $1A3         ; Load 1A3 into I
$E6E    $BD8D   JP       V0, $D8D        ; Jump to V0 + D8D
$E70    $D551   DRW      V5, V5, #1      ; Draw 1-byte sprite at V5, V5
$E72    $F3F5   UNKNOWN  F3F5            ; Unknown Fxxx instruction
$E74    $A452   LD       I, $452         ; Load 452 into I
$E76    $DE82   DRW      VE, V8, #2      ; Draw 2-byte sprite at VE, V8
$E78    $61FB   LD       V1, #FB         ; Load 251 into V1
$E7A    $A9CF   LD       I, $9CF         ; Load 9CF into I
$E7C    $DAD4   DRW      VA, VD, #4      ; Draw 4-byte sprite at VA, VD
$E7E    $A4E2   LD       I, $4E2         ; Load 4E2 into I
$E80    $B529   JP       V0, $529        ; Jump to V0 + 529
$E82    $8AC9   UNKNOWN  8AC9            ; Unknown 8xxx instruction
$E84    $FD06   UNKNOWN  FD06            ; Unknown Fxxx instruction
$E86    $8DFC   UNKNOWN  8DFC            ; Unknown 8xxx instruction
$E88    $D621   DRW      V6, V2, #1      ; Draw 1-byte sprite at V6, V2
$E8A    $15C8   JP       $5C8            ; Jump to 5C8
$E8C    $853D   UNKNOWN  853D            ; Unknown 8xxx instruction
$E8E    $0AB8   SYS      $AB8            ; System call to AB8
$E90    $5A29   UNKNOWN  $5A29           ; Unknown 5xxx instruction
$E92    $85DB   UNKNOWN  85DB            ; Unknown 8xxx instruction
$E94    $66AA   LD       V6, #AA         ; Load 170 into V6
$E96    $E034   UNKNOWN  $E034           ; Unknown Exxx instruction
$E98    $34FB   SE       V4, #FB         ; Skip if V4 == 251
$E9A    $485E   SNE      V8, #5E         ; Skip if V8 != 94
$E9C    $AE44   LD       I, $E44         ; Load E44 into I
$E9E    $BAE7   JP       V0, $AE7        ; Jump to V0 + AE7
$EA0    $097A   SYS      $97A            ; System call to 97A
$EA2    $FB62   UNKNOWN  FB62            ; Unknown Fxxx instruction
$EA4    $7C46   ADD      VC, #46         ; Add 70 to VC
$EA6    $849C   UNKNOWN  849C            ; Unknown 8xxx instruction
$EA8    $3BB9   SE       VB, #B9         ; Skip if VB == 185
$EAA    $98A1   UNKNOWN  $98A1           ; Unknown 9xxx instruction
$EAC    $654C   LD       V5, #4C         ; Load 76 into V5
$EAE    $AEB2   LD       I, $EB2         ; Load EB2 into I
$EB0    $FDC1   UNKNOWN  FDC1            ; Unknown Fxxx instruction
$EB2    $5AA7   UNKNOWN  $5AA7           ; Unknown 5xxx instruction
$EB4    $F583   UNKNOWN  F583            ; Unknown Fxxx instruction
$EB6    $D759   DRW      V7, V5, #9      ; Draw 9-byte sprite at V7, V5
$EB8    $B0D8   JP       V0, $0D8        ; Jump to V0 + 0D8
$EBA    $47F2   SNE      V7, #F2         ; Skip if V7 != 242
$EBC    $726B   ADD      V2, #6B         ; Add 107 to V2
$EBE    $BB9E   JP       V0, $B9E        ; Jump to V0 + B9E
$EC0    $D599   DRW      V5, V9, #9      ; Draw 9-byte sprite at V5, V9
$EC2    $6F68   LD       VF, #68         ; Load 104 into VF
$EC4    $E86B   UNKNOWN  $E86B           ; Unknown Exxx instruction
$EC6    $AFBC   LD       I, $FBC         ; Load FBC into I
$EC8    $E1F7   UNKNOWN  $E1F7           ; Unknown Exxx instruction
$ECA    $4B87   SNE      VB, #87         ; Skip if VB != 135
$ECC    $B434   JP       V0, $434        ; Jump to V0 + 434
$ECE    $1BAB   JP       $BAB            ; Jump to BAB
$ED0    $B060   JP       V0, $060        ; Jump to V0 + 060
$ED2    $64B6   LD       V4, #B6         ; Load 182 into V4
$ED4    $7786   ADD      V7, #86         ; Add 134 to V7
$ED6    $FA24   UNKNOWN  FA24            ; Unknown Fxxx instruction
$ED8    $78E9   ADD      V8, #E9         ; Add 233 to V8
$EDA    $849D   UNKNOWN  849D            ; Unknown 8xxx instruction
$EDC    $FD00   UNKNOWN  FD00            ; Unknown Fxxx instruction
$EDE    $A78B   LD       I, $78B         ; Load 78B into I
$EE0    $FAA9   UNKNOWN  FAA9            ; Unknown Fxxx instruction
$EE2    $D079   DRW      V0, V7, #9      ; Draw 9-byte sprite at V0, V7
$EE4    $11B1   JP       $1B1            ; Jump to 1B1
$EE6    $8DA7   SUBN     VD, VA          ; VD = VA - VD, VF = !borrow
$EE8    $200A   CALL     $00A            ; Call subroutine at 00A
$EEA    $4988   SNE      V9, #88         ; Skip if V9 != 136
$EEC    $422D   SNE      V2, #2D         ; Skip if V2 != 45
$EEE    $E93A   UNKNOWN  $E93A           ; Unknown Exxx instruction
$EF0    $B819   JP       V0, $819        ; Jump to V0 + 819
$EF2    $83D2   AND      V3, VD          ; V3 &= VD
$EF4    $6731   LD       V7, #31         ; Load 49 into V7
$EF6    $503A   UNKNOWN  $503A           ; Unknown 5xxx instruction
$EF8    $FCFD   UNKNOWN  FCFD            ; Unknown Fxxx instruction
$EFA    $21B1   CALL     $1B1            ; Call subroutine at 1B1
$EFC    $A5BE   LD       I, $5BE         ; Load 5BE into I
$EFE    $422B   SNE      V2, #2B         ; Skip if V2 != 43
$F00    $0AA5   SYS      $AA5            ; System call to AA5
$F02    $D184   DRW      V1, V8, #4      ; Draw 4-byte sprite at V1, V8
$F04    $0E17   SYS      $E17            ; System call to E17
$F06    $9D5E   UNKNOWN  $9D5E           ; Unknown 9xxx instruction
$F08    $CD7B   RND      VD, #7B         ; VD = random & 7B
$F0A    $9B30   SNE      VB, V3          ; Skip if VB != V3
$F0C    $AEA2   LD       I, $EA2         ; Load EA2 into I
$F0E    $3B08   SE       VB, #08         ; Skip if VB == 8
$F10    $239A   CALL     $39A            ; Call subroutine at 39A
$F12    $D902   DRW      V9, V0, #2      ; Draw 2-byte sprite at V9, V0
$F14    $CA99   RND      VA, #99         ; VA = random & 99
$F16    $114E   JP       $14E            ; Jump to 14E
$F18    $EE96   UNKNOWN  $EE96           ; Unknown Exxx instruction
$F1A    $BA84   JP       V0, $A84        ; Jump to V0 + A84
$F1C    $CEC3   RND      VE, #C3         ; VE = random & C3
$F1E    $936E   UNKNOWN  $936E           ; Unknown 9xxx instruction
$F20    $C863   RND      V8, #63         ; V8 = random & 63
$F22    $A54C   LD       I, $54C         ; Load 54C into I
$F24    $F476   UNKNOWN  F476            ; Unknown Fxxx instruction
$F26    $F49C   UNKNOWN  F49C            ; Unknown Fxxx instruction
$F28    $D137   DRW      V1, V3, #7      ; Draw 7-byte sprite at V1, V3
$F2A    $D2A3   DRW      V2, VA, #3      ; Draw 3-byte sprite at V2, VA
$F2C    $0F6F   SYS      $F6F            ; System call to F6F
$F2E    $E1D0   UNKNOWN  $E1D0           ; Unknown Exxx instruction
$F30    $01A2   SYS      $1A2            ; System call to 1A2
$F32    $B319   JP       V0, $319        ; Jump to V0 + 319
$F34    $9995   UNKNOWN  $9995           ; Unknown 9xxx instruction
$F36    $D5CE   DRW      V5, VC, #E      ; Draw 14-byte sprite at V5, VC
$F38    $2BED   CALL     $BED            ; Call subroutine at BED
$F3A    $63F6   LD       V3, #F6         ; Load 246 into V3
$F3C    $2BCE   CALL     $BCE            ; Call subroutine at BCE
$F3E    $A540   LD       I, $540         ; Load 540 into I
$F40    $AB71   LD       I, $B71         ; Load B71 into I
$F42    $5196   UNKNOWN  $5196           ; Unknown 5xxx instruction
$F44    $057E   SYS      $57E            ; System call to 57E
$F46    $3F30   SE       VF, #30         ; Skip if VF == 48
$F48    $90B2   UNKNOWN  $90B2           ; Unknown 9xxx instruction
$F4A    $FC97   UNKNOWN  FC97            ; Unknown Fxxx instruction
$F4C    $F46E   UNKNOWN  F46E            ; Unknown Fxxx instruction
$F4E    $B679   JP       V0, $679        ; Jump to V0 + 679
$F50    $4B75   SNE      VB, #75         ; Skip if VB != 117
$F52    $23D1   CALL     $3D1            ; Call subroutine at 3D1
$F54    $0C4B   SYS      $C4B            ; System call to C4B
$F56    $94BB   UNKNOWN  $94BB           ; Unknown 9xxx instruction
$F58    $827B   UNKNOWN  827B            ; Unknown 8xxx instruction
$F5A    $FE3E   UNKNOWN  FE3E            ; Unknown Fxxx instruction
$F5C    $0A85   SYS      $A85            ; System call to A85
$F5E    $EF83   UNKNOWN  $EF83           ; Unknown Exxx instruction
$F60    $E37D   UNKNOWN  $E37D           ; Unknown Exxx instruction
$F62    $6FAB   LD       VF, #AB         ; Load 171 into VF
$F64    $BEBA   JP       V0, $EBA        ; Jump to V0 + EBA
$F66    $8286   SHR      V2              ; V2 >>= 1, VF = LSB
$F68    $4378   SNE      V3, #78         ; Skip if V3 != 120
$F6A    $FFD6   UNKNOWN  FFD6            ; Unknown Fxxx instruction
$F6C    $C439   RND      V4, #39         ; V4 = random & 39
$F6E    $374D   SE       V7, #4D         ; Skip if V7 == 77
$F70    $CD42   RND      VD, #42         ; VD = random & 42
$F72    $FE9B   UNKNOWN  FE9B            ; Unknown Fxxx instruction
$F74    $740A   ADD      V4, #0A         ; Add 10 to V4
$F76    $2EC1   CALL     $EC1            ; Call subroutine at EC1
$F78    $9FFE   UNKNOWN  $9FFE           ; Unknown 9xxx instruction
$F7A    $5D4A   UNKNOWN  $5D4A           ; Unknown 5xxx instruction
$F7C    $B723   JP       V0, $723        ; Jump to V0 + 723
$F7E    $9BEB   UNKNOWN  $9BEB           ; Unknown 9xxx instruction
$F80    $CF4E   RND      VF, #4E         ; VF = random & 4E
$F82    $3EE2   SE       VE, #E2         ; Skip if VE == 226
$F84    $B276   JP       V0, $276        ; Jump to V0 + 276
$F86    $1B1E   JP       $B1E            ; Jump to B1E
$F88    $4894   SNE      V8, #94         ; Skip if V8 != 148
$F8A    $545D   UNKNOWN  $545D           ; Unknown 5xxx instruction
$F8C    $4B26   SNE      VB, #26         ; Skip if VB != 38
$F8E    $770B   ADD      V7, #0B         ; Add 11 to V7
$F90    $9502   UNKNOWN  $9502           ; Unknown 9xxx instruction
$F92    $88B5   SUB      V8, VB          ; V8 -= VB, VF = !borrow
$F94    $4DAD   SNE      VD, #AD         ; Skip if VD != 173
$F96    $6950   LD       V9, #50         ; Load 80 into V9
$F98    $5E3A   UNKNOWN  $5E3A           ; Unknown 5xxx instruction
$F9A    $7175   ADD      V1, #75         ; Add 117 to V1
$F9C    $F15F   UNKNOWN  F15F            ; Unknown Fxxx instruction
$F9E    $FCE0   UNKNOWN  FCE0            ; Unknown Fxxx instruction
$FA0    $DDC3   DRW      VD, VC, #3      ; Draw 3-byte sprite at VD, VC
$FA2    $8B80   LD       VB, V8          ; VB = V8
$FA4    $F778   UNKNOWN  F778            ; Unknown Fxxx instruction
$FA6    $53DC   UNKNOWN  $53DC           ; Unknown 5xxx instruction
$FA8    $D248   DRW      V2, V4, #8      ; Draw 8-byte sprite at V2, V4
$FAA    $D1C9   DRW      V1, VC, #9      ; Draw 9-byte sprite at V1, VC
$FAC    $AB91   LD       I, $B91         ; Load B91 into I
$FAE    $8A8C   UNKNOWN  8A8C            ; Unknown 8xxx instruction
$FB0    $D8E7   DRW      V8, VE, #7      ; Draw 7-byte sprite at V8, VE
$FB2    $EC6E   UNKNOWN  $EC6E           ; Unknown Exxx instruction
$FB4    $9FCC   UNKNOWN  $9FCC           ; Unknown 9xxx instruction
$FB6    $C33D   RND      V3, #3D         ; V3 = random & 3D
$FB8    $636A   LD       V3, #6A         ; Load 106 into V3
$FBA    $17B4   JP       $7B4            ; Jump to 7B4
$FBC    $7E15   ADD      VE, #15         ; Add 21 to VE
$FBE    $7730   ADD      V7, #30         ; Add 48 to V7
$FC0    $DB6E   DRW      VB, V6, #E      ; Draw 14-byte sprite at VB, V6
$FC2    $90A6   UNKNOWN  $90A6           ; Unknown 9xxx instruction
$FC4    $0F59   SYS      $F59            ; System call to F59
$FC6    $8084   ADD      V0, V8          ; V0 += V8, VF = carry
$FC8    $4570   SNE      V5, #70         ; Skip if V5 != 112
$FCA    $2D52   CALL     $D52            ; Call subroutine at D52
$FCC    $9510   SNE      V5, V1          ; Skip if V5 != V1
$FCE    $4366   SNE      V3, #66         ; Skip if V3 != 102
$FD0    $B2CA   JP       V0, $2CA        ; Jump to V0 + 2CA
$FD2    $7045   ADD      V0, #45         ; Add 69 to V0
$FD4    $B2EA   JP       V0, $2EA        ; Jump to V0 + 2EA
$FD6    $CC49   RND      VC, #49         ; VC = random & 49
$FD8    $23F0   CALL     $3F0            ; Call subroutine at 3F0
$FDA    $113D   JP       $13D            ; Jump to 13D
$FDC    $23C0   CALL     $3C0            ; Call subroutine at 3C0
$FDE    $BE7C   JP       V0, $E7C        ; Jump to V0 + E7C
$FE0    $D946   DRW      V9, V4, #6      ; Draw 6-byte sprite at V9, V4
$FE2    $66B4   LD       V6, #B4         ; Load 180 into V6
$FE4    $C0CE   RND      V0, #CE         ; V0 = random & CE
$FE6    $93DB   UNKNOWN  $93DB           ; Unknown 9xxx instruction
$FE8    $06A8   SYS      $6A8            ; System call to 6A8
$FEA    $9291   UNKNOWN  $9291           ; Unknown 9xxx instruction
$FEC    $DD91   DRW      VD, V9, #1      ; Draw 1-byte sprite at VD, V9
$FEE    $7BCE   ADD      VB, #CE         ; Add 206 to VB
$FF0    $62A1   LD       V2, #A1         ; Load 161 into V2
$FF2    $7834   ADD      V8, #34         ; Add 52 to V8
$FF4    $DEF5   DRW      VE, VF, #5      ; Draw 5-byte sprite at VE, VF
$FF6    $AA62   LD       I, $A62         ; Load A62 into I
$FF8    $97E9   UNKNOWN  $97E9           ; Unknown 9xxx instruction
$FFA    $8842   AND      V8, V4          ; V8 &= V4
$FFC    $DC6D   DRW      VC, V6, #D      ; Draw 13-byte sprite at VC, V6
$FFE    $F610   UNKNOWN  F610            ; Unknown Fxxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 432 (24.1%)
  LD      : 326 (18.2%)
  JP      : 201 (11.2%)
  SNE     : 137 ( 7.6%)
  DRW     : 121 ( 6.8%)
  SYS     : 118 ( 6.6%)
  SE      : 110 ( 6.1%)
  ADD     : 108 ( 6.0%)
  RND     : 100 ( 5.6%)
  CALL    :  98 ( 5.5%)
  SUB     :   9 ( 0.5%)
  AND     :   8 ( 0.4%)
  SUBN    :   7 ( 0.4%)
  SHL     :   5 ( 0.3%)
  OR      :   4 ( 0.2%)
  XOR     :   4 ( 0.2%)
  SHR     :   4 ( 0.2%)

Memory Operations: 434 (24.2%)
Arithmetic Operations: 140 (7.8%)
