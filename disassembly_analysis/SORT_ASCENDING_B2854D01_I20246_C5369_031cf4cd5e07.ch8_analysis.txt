
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B2854D01_I20246_C5369_031cf4cd5e07.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 2854
Instance: 20246
Direction: ascending
Final Array: [45, 73, 101, 129, 157, 185, 213, 241]
Operations: R:0 W:8 C:598 S:5

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 98
Sort Array References:
  $22A: LD I, $6D3 ; Load 6D3 into I
  $23E: LD I, $25E ; Load 25E into I
  $244: LD I, $93A ; Load 93A into I
  $260: LD I, $DC9 ; Load DC9 into I
  $272: LD I, $5C1 ; Load 5C1 into I
  $2A0: LD I, $DC9 ; Load DC9 into I
  $2B2: LD I, $5C1 ; Load 5C1 into I
  $2E0: LD I, $DC9 ; Load DC9 into I
  $2F2: LD I, $5C1 ; Load 5C1 into I
  $330: LD I, $DBB ; Load DBB into I
  $41C: LD I, $FD6 ; Load FD6 into I
  $432: LD I, $6B2 ; Load 6B2 into I
  $43C: LD I, $A26 ; Load A26 into I
  $482: LD I, $5FE ; Load 5FE into I
  $4A4: LD I, $E5D ; Load E5D into I
  $4B0: LD I, $6DE ; Load 6DE into I
  $4B4: LD I, $BDC ; Load BDC into I
  $4D0: LD I, $454 ; Load 454 into I
  $4DC: LD I, $840 ; Load 840 into I
  $512: LD I, $328 ; Load 328 into I
  $56A: LD I, $EB3 ; Load EB3 into I
  $57C: LD I, $482 ; Load 482 into I
  $5AE: LD I, $45F ; Load 45F into I
  $5B2: LD I, $C01 ; Load C01 into I
  $5BE: LD I, $787 ; Load 787 into I
  $5DC: LD I, $7CA ; Load 7CA into I
  $63C: LD I, $937 ; Load 937 into I
  $648: LD I, $DC1 ; Load DC1 into I
  $650: LD I, $F2F ; Load F2F into I
  $6B8: LD I, $6E4 ; Load 6E4 into I
  $6C8: LD I, $F2D ; Load F2D into I
  $71E: LD I, $F92 ; Load F92 into I
  $746: LD I, $ED3 ; Load ED3 into I
  $770: LD I, $161 ; Load 161 into I
  $7C0: LD I, $ECC ; Load ECC into I
  $7C2: LD I, $92C ; Load 92C into I
  $7C4: LD I, $A59 ; Load A59 into I
  $7DA: LD I, $6DF ; Load 6DF into I
  $7E0: LD I, $6FB ; Load 6FB into I
  $800: LD I, $CCE ; Load CCE into I
  $820: LD I, $6AC ; Load 6AC into I
  $826: LD I, $798 ; Load 798 into I
  $830: LD I, $BF6 ; Load BF6 into I
  $832: LD I, $C93 ; Load C93 into I
  $882: LD I, $2B3 ; Load 2B3 into I
  $8B6: LD I, $E12 ; Load E12 into I
  $8C4: LD I, $310 ; Load 310 into I
  $8DE: LD I, $1DE ; Load 1DE into I
  $922: LD I, $387 ; Load 387 into I
  $926: LD I, $342 ; Load 342 into I
  $936: LD I, $0A9 ; Load 0A9 into I
  $9B4: LD I, $5FF ; Load 5FF into I
  $9B8: LD I, $72C ; Load 72C into I
  $9F4: LD I, $B22 ; Load B22 into I
  $A38: LD I, $F62 ; Load F62 into I
  $A8A: LD I, $3F3 ; Load 3F3 into I
  $AA8: LD I, $655 ; Load 655 into I
  $AD8: LD I, $765 ; Load 765 into I
  $AF8: LD I, $B0D ; Load B0D into I
  $B5C: LD I, $EBC ; Load EBC into I
  $BB0: LD I, $08D ; Load 08D into I
  $BD6: LD I, $AFE ; Load AFE into I
  $C0A: LD I, $BFF ; Load BFF into I
  $C26: LD I, $2FD ; Load 2FD into I
  $C28: LD I, $125 ; Load 125 into I
  $C4A: LD I, $705 ; Load 705 into I
  $C54: LD I, $DC0 ; Load DC0 into I
  $C90: LD I, $3B3 ; Load 3B3 into I
  $CC6: LD I, $6CD ; Load 6CD into I
  $CCE: LD I, $0A2 ; Load 0A2 into I
  $CFC: LD I, $B81 ; Load B81 into I
  $D16: LD I, $EE2 ; Load EE2 into I
  $D24: LD I, $925 ; Load 925 into I
  $D5C: LD I, $89D ; Load 89D into I
  $D6A: LD I, $FFE ; Load FFE into I
  $D84: LD I, $F3A ; Load F3A into I
  $D94: LD I, $B99 ; Load B99 into I
  $DC2: LD I, $F05 ; Load F05 into I
  $DC4: LD I, $8E4 ; Load 8E4 into I
  $DD8: LD I, $1C7 ; Load 1C7 into I
  $DE4: LD I, $5AD ; Load 5AD into I
  $DFE: LD I, $93E ; Load 93E into I
  $E0E: LD I, $4E8 ; Load 4E8 into I
  $E1E: LD I, $D39 ; Load D39 into I
  $ECC: LD I, $E02 ; Load E02 into I
  $ED8: LD I, $E94 ; Load E94 into I
  $EDA: LD I, $0B1 ; Load 0B1 into I
  $EEA: LD I, $447 ; Load 447 into I
  $F16: LD I, $7D8 ; Load 7D8 into I
  $F1C: LD I, $CA3 ; Load CA3 into I
  $F30: LD I, $2A4 ; Load 2A4 into I
  $F38: LD I, $342 ; Load 342 into I
  $F40: LD I, $3A8 ; Load 3A8 into I
  $F48: LD I, $637 ; Load 637 into I
  $F60: LD I, $C2B ; Load C2B into I
  $F72: LD I, $1F9 ; Load 1F9 into I
  $F8A: LD I, $D1D ; Load D1D into I
  $FDE: LD I, $1D7 ; Load 1D7 into I

CONTROL FLOW ANALYSIS:
Jumps: 218
Calls: 105
Branches: 238
Loops: 125
Loop Structures:
  $212 -> $102 (backward jump)
  $384 -> $05B (backward jump)
  $390 -> $098 (backward jump)
  $3A8 -> $394 (backward jump)
  $3BA -> $05A (backward jump)
  $3E6 -> $2A1 (backward jump)
  $42C -> $211 (backward jump)
  $4AA -> $0A0 (backward jump)
  $4AC -> $41F (backward jump)
  $5A2 -> $312 (backward jump)
  $5DA -> $2E2 (backward jump)
  $5F6 -> $209 (backward jump)
  $640 -> $193 (backward jump)
  $656 -> $233 (backward jump)
  $666 -> $48E (backward jump)
  $66E -> $0A2 (backward jump)
  $68C -> $580 (backward jump)
  $692 -> $4C4 (backward jump)
  $694 -> $473 (backward jump)
  $69A -> $40E (backward jump)
  $6B0 -> $4FB (backward jump)
  $6F6 -> $17F (backward jump)
  $726 -> $096 (backward jump)
  $742 -> $2F2 (backward jump)
  $74A -> $03B (backward jump)
  $75C -> $07E (backward jump)
  $760 -> $381 (backward jump)
  $76E -> $02D (backward jump)
  $776 -> $693 (backward jump)
  $7BA -> $207 (backward jump)
  $7CE -> $0BE (backward jump)
  $7DC -> $5FC (backward jump)
  $7FC -> $3C9 (backward jump)
  $81C -> $44F (backward jump)
  $81E -> $519 (backward jump)
  $828 -> $159 (backward jump)
  $834 -> $217 (backward jump)
  $872 -> $6A0 (backward jump)
  $878 -> $191 (backward jump)
  $87C -> $2E6 (backward jump)
  $880 -> $86D (backward jump)
  $8BC -> $610 (backward jump)
  $8C0 -> $5CE (backward jump)
  $924 -> $238 (backward jump)
  $954 -> $197 (backward jump)
  $956 -> $483 (backward jump)
  $958 -> $729 (backward jump)
  $95E -> $3F2 (backward jump)
  $97C -> $6F6 (backward jump)
  $9A4 -> $2A5 (backward jump)
  $9C0 -> $652 (backward jump)
  $9D2 -> $712 (backward jump)
  $9EA -> $4BB (backward jump)
  $A04 -> $89E (backward jump)
  $A18 -> $7E2 (backward jump)
  $A1C -> $587 (backward jump)
  $A3E -> $74E (backward jump)
  $A46 -> $070 (backward jump)
  $A4E -> $5CD (backward jump)
  $A56 -> $870 (backward jump)
  $A5E -> $333 (backward jump)
  $A88 -> $9E4 (backward jump)
  $A92 -> $286 (backward jump)
  $AC0 -> $363 (backward jump)
  $AE2 -> $611 (backward jump)
  $B0A -> $761 (backward jump)
  $B22 -> $A4D (backward jump)
  $B2C -> $2DE (backward jump)
  $B48 -> $7BC (backward jump)
  $B66 -> $42A (backward jump)
  $B6C -> $825 (backward jump)
  $B72 -> $123 (backward jump)
  $BA6 -> $1F7 (backward jump)
  $BF0 -> $0DB (backward jump)
  $BFE -> $78B (backward jump)
  $C14 -> $303 (backward jump)
  $C20 -> $225 (backward jump)
  $C22 -> $6E0 (backward jump)
  $C34 -> $99E (backward jump)
  $C5A -> $80C (backward jump)
  $C64 -> $320 (backward jump)
  $C66 -> $225 (backward jump)
  $C7A -> $156 (backward jump)
  $C86 -> $A75 (backward jump)
  $C92 -> $7A9 (backward jump)
  $CAA -> $C34 (backward jump)
  $CBC -> $A67 (backward jump)
  $CC2 -> $A6C (backward jump)
  $CD4 -> $BAD (backward jump)
  $CE2 -> $365 (backward jump)
  $D00 -> $ACA (backward jump)
  $D1A -> $03E (backward jump)
  $D20 -> $019 (backward jump)
  $D44 -> $4C9 (backward jump)
  $D9C -> $5B8 (backward jump)
  $DA2 -> $7CA (backward jump)
  $DD4 -> $AD4 (backward jump)
  $DDA -> $8EC (backward jump)
  $DE6 -> $579 (backward jump)
  $E02 -> $5A3 (backward jump)
  $E04 -> $DD1 (backward jump)
  $E30 -> $9CB (backward jump)
  $E38 -> $68F (backward jump)
  $E7E -> $B51 (backward jump)
  $EC2 -> $2F3 (backward jump)
  $EC8 -> $A8C (backward jump)
  $EE6 -> $E93 (backward jump)
  $EEC -> $468 (backward jump)
  $EEE -> $5EB (backward jump)
  $F06 -> $559 (backward jump)
  $F26 -> $8B7 (backward jump)
  $F34 -> $8A6 (backward jump)
  $F54 -> $305 (backward jump)
  $F64 -> $97F (backward jump)
  $F7A -> $490 (backward jump)
  $F80 -> $0D1 (backward jump)
  $F94 -> $B77 (backward jump)
  $FB4 -> $F0F (backward jump)
  $FBC -> $A1C (backward jump)
  $FBE -> $E61 (backward jump)
  $FD8 -> $F3F (backward jump)
  $FE2 -> $D12 (backward jump)
  $FE4 -> $A12 (backward jump)
  $FEA -> $C39 (backward jump)
  $FF8 -> $21E (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $BA51   JP       V0, $A51        ; Jump to V0 + A51
$202    $20FE   CALL     $0FE            ; Call subroutine at 0FE
$204    $8263   XOR      V2, V6          ; V2 ^= V6
$206    $D918   DRW      V9, V1, #8      ; Draw 8-byte sprite at V9, V1
$208    $4873   SNE      V8, #73         ; Skip if V8 != 115
$20A    $EC62   UNKNOWN  $EC62           ; Unknown Exxx instruction
$20C    $B3BC   JP       V0, $3BC        ; Jump to V0 + 3BC
$20E    $1C43   JP       $C43            ; Jump to C43
$210    $ED53   UNKNOWN  $ED53           ; Unknown Exxx instruction
$212    $B102   JP       V0, $102        ; Jump to V0 + 102
$214    $6D07   LD       VD, #07         ; Load 7 into VD
$216    $0EE4   SYS      $EE4            ; System call to EE4
$218    $26D0   CALL     $6D0            ; Call subroutine at 6D0
$21A    $93BA   UNKNOWN  $93BA           ; Unknown 9xxx instruction
$21C    $17AC   JP       $7AC            ; Jump to 7AC
$21E    $E5C8   UNKNOWN  $E5C8           ; Unknown Exxx instruction
$220    $5E62   UNKNOWN  $5E62           ; Unknown 5xxx instruction
$222    $74B9   ADD      V4, #B9         ; Add 185 to V4
$224    $9E2F   UNKNOWN  $9E2F           ; Unknown 9xxx instruction
$226    $FADD   UNKNOWN  FADD            ; Unknown Fxxx instruction
$228    $B24C   JP       V0, $24C        ; Jump to V0 + 24C
$22A    $A6D3   LD       I, $6D3         ; Load 6D3 into I
$22C    $B3DF   JP       V0, $3DF        ; Jump to V0 + 3DF
$22E    $EC31   UNKNOWN  $EC31           ; Unknown Exxx instruction
$230    $E4D7   UNKNOWN  $E4D7           ; Unknown Exxx instruction
$232    $E7CF   UNKNOWN  $E7CF           ; Unknown Exxx instruction
$234    $3217   SE       V2, #17         ; Skip if V2 == 23
$236    $6A5D   LD       VA, #5D         ; Load 93 into VA
$238    $F23F   UNKNOWN  F23F            ; Unknown Fxxx instruction
$23A    $5BBB   UNKNOWN  $5BBB           ; Unknown 5xxx instruction
$23C    $3A5E   SE       VA, #5E         ; Skip if VA == 94
$23E    $A25E   LD       I, $25E         ; Load 25E into I
$240    $C54E   RND      V5, #4E         ; V5 = random & 4E
$242    $BE42   JP       V0, $E42        ; Jump to V0 + E42
$244    $A93A   LD       I, $93A         ; Load 93A into I
$246    $EC02   UNKNOWN  $EC02           ; Unknown Exxx instruction
$248    $DBB9   DRW      VB, VB, #9      ; Draw 9-byte sprite at VB, VB
$24A    $8AA6   SHR      VA              ; VA >>= 1, VF = LSB
$24C    $29FA   CALL     $9FA            ; Call subroutine at 9FA
$24E    $464F   SNE      V6, #4F         ; Skip if V6 != 79
$250    $6772   LD       V7, #72         ; Load 114 into V7
$252    $3580   SE       V5, #80         ; Skip if V5 == 128
$254    $7C80   ADD      VC, #80         ; Add 128 to VC
$256    $297B   CALL     $97B            ; Call subroutine at 97B
$258    $0F65   SYS      $F65            ; System call to F65
$25A    $ED0E   UNKNOWN  $ED0E           ; Unknown Exxx instruction
$25C    $76A6   ADD      V6, #A6         ; Add 166 to V6
$25E    $7591   ADD      V5, #91         ; Add 145 to V5
$260    $ADC9   LD       I, $DC9         ; Load DC9 into I
$262    $E501   UNKNOWN  $E501           ; Unknown Exxx instruction
$264    $1D39   JP       $D39            ; Jump to D39
$266    $5571   UNKNOWN  $5571           ; Unknown 5xxx instruction
$268    $8DA9   UNKNOWN  8DA9            ; Unknown 8xxx instruction
$26A    $C5E1   RND      V5, #E1         ; V5 = random & E1
$26C    $FD19   UNKNOWN  FD19            ; Unknown Fxxx instruction
$26E    $3551   SE       V5, #51         ; Skip if V5 == 81
$270    $6D89   LD       VD, #89         ; Load 137 into VD
$272    $A5C1   LD       I, $5C1         ; Load 5C1 into I
$274    $DDF9   DRW      VD, VF, #9      ; Draw 9-byte sprite at VD, VF
$276    $1531   JP       $531            ; Jump to 531
$278    $4D69   SNE      VD, #69         ; Skip if VD != 105
$27A    $85A1   OR       V5, VA          ; V5 |= VA
$27C    $BDD9   JP       V0, $DD9        ; Jump to V0 + DD9
$27E    $F511   UNKNOWN  F511            ; Unknown Fxxx instruction
$280    $2D49   CALL     $D49            ; Call subroutine at D49
$282    $6581   LD       V5, #81         ; Load 129 into V5
$284    $9DB9   UNKNOWN  $9DB9           ; Unknown 9xxx instruction
$286    $D5F1   DRW      V5, VF, #1      ; Draw 1-byte sprite at V5, VF
$288    $0D29   SYS      $D29            ; System call to D29
$28A    $4561   SNE      V5, #61         ; Skip if V5 != 97
$28C    $7D99   ADD      VD, #99         ; Add 153 to VD
$28E    $B5D1   JP       V0, $5D1        ; Jump to V0 + 5D1
$290    $ED09   UNKNOWN  $ED09           ; Unknown Exxx instruction
$292    $2541   CALL     $541            ; Call subroutine at 541
$294    $5D79   UNKNOWN  $5D79           ; Unknown 5xxx instruction
$296    $95B1   UNKNOWN  $95B1           ; Unknown 9xxx instruction
$298    $CDE9   RND      VD, #E9         ; VD = random & E9
$29A    $0521   SYS      $521            ; System call to 521
$29C    $3D59   SE       VD, #59         ; Skip if VD == 89
$29E    $7591   ADD      V5, #91         ; Add 145 to V5
$2A0    $ADC9   LD       I, $DC9         ; Load DC9 into I
$2A2    $E501   UNKNOWN  $E501           ; Unknown Exxx instruction
$2A4    $1D39   JP       $D39            ; Jump to D39
$2A6    $5571   UNKNOWN  $5571           ; Unknown 5xxx instruction
$2A8    $8DA9   UNKNOWN  8DA9            ; Unknown 8xxx instruction
$2AA    $C5E1   RND      V5, #E1         ; V5 = random & E1
$2AC    $FD19   UNKNOWN  FD19            ; Unknown Fxxx instruction
$2AE    $3551   SE       V5, #51         ; Skip if V5 == 81
$2B0    $6D89   LD       VD, #89         ; Load 137 into VD
$2B2    $A5C1   LD       I, $5C1         ; Load 5C1 into I
$2B4    $DDF9   DRW      VD, VF, #9      ; Draw 9-byte sprite at VD, VF
$2B6    $1531   JP       $531            ; Jump to 531
$2B8    $4D69   SNE      VD, #69         ; Skip if VD != 105
$2BA    $85A1   OR       V5, VA          ; V5 |= VA
$2BC    $BDD9   JP       V0, $DD9        ; Jump to V0 + DD9
$2BE    $F511   UNKNOWN  F511            ; Unknown Fxxx instruction
$2C0    $2D49   CALL     $D49            ; Call subroutine at D49
$2C2    $6581   LD       V5, #81         ; Load 129 into V5
$2C4    $9DB9   UNKNOWN  $9DB9           ; Unknown 9xxx instruction
$2C6    $D5F1   DRW      V5, VF, #1      ; Draw 1-byte sprite at V5, VF
$2C8    $0D29   SYS      $D29            ; System call to D29
$2CA    $4561   SNE      V5, #61         ; Skip if V5 != 97
$2CC    $7D99   ADD      VD, #99         ; Add 153 to VD
$2CE    $B5D1   JP       V0, $5D1        ; Jump to V0 + 5D1
$2D0    $ED09   UNKNOWN  $ED09           ; Unknown Exxx instruction
$2D2    $2541   CALL     $541            ; Call subroutine at 541
$2D4    $5D79   UNKNOWN  $5D79           ; Unknown 5xxx instruction
$2D6    $95B1   UNKNOWN  $95B1           ; Unknown 9xxx instruction
$2D8    $CDE9   RND      VD, #E9         ; VD = random & E9
$2DA    $0521   SYS      $521            ; System call to 521
$2DC    $3D59   SE       VD, #59         ; Skip if VD == 89
$2DE    $7591   ADD      V5, #91         ; Add 145 to V5
$2E0    $ADC9   LD       I, $DC9         ; Load DC9 into I
$2E2    $E501   UNKNOWN  $E501           ; Unknown Exxx instruction
$2E4    $1D39   JP       $D39            ; Jump to D39
$2E6    $5571   UNKNOWN  $5571           ; Unknown 5xxx instruction
$2E8    $8DA9   UNKNOWN  8DA9            ; Unknown 8xxx instruction
$2EA    $C5E1   RND      V5, #E1         ; V5 = random & E1
$2EC    $FD19   UNKNOWN  FD19            ; Unknown Fxxx instruction
$2EE    $3551   SE       V5, #51         ; Skip if V5 == 81
$2F0    $6D89   LD       VD, #89         ; Load 137 into VD
$2F2    $A5C1   LD       I, $5C1         ; Load 5C1 into I
$2F4    $DDF9   DRW      VD, VF, #9      ; Draw 9-byte sprite at VD, VF
$2F6    $1531   JP       $531            ; Jump to 531
$2F8    $4D69   SNE      VD, #69         ; Skip if VD != 105
$2FA    $85A1   OR       V5, VA          ; V5 |= VA
$2FC    $BDD9   JP       V0, $DD9        ; Jump to V0 + DD9
$2FE    $F511   UNKNOWN  F511            ; Unknown Fxxx instruction
$300    $2D49   CALL     $D49            ; Call subroutine at D49
$302    $6581   LD       V5, #81         ; Load 129 into V5
$304    $9DB9   UNKNOWN  $9DB9           ; Unknown 9xxx instruction
$306    $D5F1   DRW      V5, VF, #1      ; Draw 1-byte sprite at V5, VF
$308    $0D29   SYS      $D29            ; System call to D29
$30A    $4561   SNE      V5, #61         ; Skip if V5 != 97
$30C    $7D99   ADD      VD, #99         ; Add 153 to VD
$30E    $B5D1   JP       V0, $5D1        ; Jump to V0 + 5D1
$310    $ED09   UNKNOWN  $ED09           ; Unknown Exxx instruction
$312    $2541   CALL     $541            ; Call subroutine at 541
$314    $5D2C   UNKNOWN  $5D2C           ; Unknown 5xxx instruction
$316    $2A19   CALL     $A19            ; Call subroutine at A19
$318    $9A98   UNKNOWN  $9A98           ; Unknown 9xxx instruction
$31A    $BAA2   JP       V0, $AA2        ; Jump to V0 + AA2
$31C    $31E4   SE       V1, #E4         ; Skip if V1 == 228
$31E    $4113   SNE      V1, #13         ; Skip if V1 != 19
$320    $1D09   JP       $D09            ; Jump to D09
$322    $7B93   ADD      VB, #93         ; Add 147 to VB
$324    $FEA6   UNKNOWN  FEA6            ; Unknown Fxxx instruction
$326    $411A   SNE      V1, #1A         ; Skip if V1 != 26
$328    $60F8   LD       V0, #F8         ; Load 248 into V0
$32A    $6837   LD       V8, #37         ; Load 55 into V8
$32C    $27DC   CALL     $7DC            ; Call subroutine at 7DC
$32E    $0B9B   SYS      $B9B            ; System call to B9B
$330    $ADBB   LD       I, $DBB         ; Load DBB into I
$332    $5014   UNKNOWN  $5014           ; Unknown 5xxx instruction
$334    $B672   JP       V0, $672        ; Jump to V0 + 672
$336    $8D81   OR       VD, V8          ; VD |= V8
$338    $1F7D   JP       $F7D            ; Jump to F7D
$33A    $CC54   RND      VC, #54         ; VC = random & 54
$33C    $9DE5   UNKNOWN  $9DE5           ; Unknown 9xxx instruction
$33E    $B886   JP       V0, $886        ; Jump to V0 + 886
$340    $3A83   SE       VA, #83         ; Skip if VA == 131
$342    $06C8   SYS      $6C8            ; System call to 6C8
$344    $F026   UNKNOWN  F026            ; Unknown Fxxx instruction
$346    $DC80   DRW      VC, V8, #0      ; Draw 0-byte sprite at VC, V8
$348    $8573   XOR      V5, V7          ; V5 ^= V7
$34A    $B8AC   JP       V0, $8AC        ; Jump to V0 + 8AC
$34C    $4E24   SNE      VE, #24         ; Skip if VE != 36
$34E    $FBED   UNKNOWN  FBED            ; Unknown Fxxx instruction
$350    $474B   SNE      V7, #4B         ; Skip if V7 != 75
$352    $DA6D   DRW      VA, V6, #D      ; Draw 13-byte sprite at VA, V6
$354    $5B62   UNKNOWN  $5B62           ; Unknown 5xxx instruction
$356    $9B1A   UNKNOWN  $9B1A           ; Unknown 9xxx instruction
$358    $1A0E   JP       $A0E            ; Jump to A0E
$35A    $F2B6   UNKNOWN  F2B6            ; Unknown Fxxx instruction
$35C    $7D6B   ADD      VD, #6B         ; Add 107 to VD
$35E    $D308   DRW      V3, V0, #8      ; Draw 8-byte sprite at V3, V0
$360    $C478   RND      V4, #78         ; V4 = random & 78
$362    $340C   SE       V4, #0C         ; Skip if V4 == 12
$364    $F7A0   UNKNOWN  F7A0            ; Unknown Fxxx instruction
$366    $5590   SE       V5, V9          ; Skip if V5 == V9
$368    $F062   UNKNOWN  F062            ; Unknown Fxxx instruction
$36A    $FC48   UNKNOWN  FC48            ; Unknown Fxxx instruction
$36C    $FAF0   UNKNOWN  FAF0            ; Unknown Fxxx instruction
$36E    $3128   SE       V1, #28         ; Skip if V1 == 40
$370    $C697   RND      V6, #97         ; V6 = random & 97
$372    $6562   LD       V5, #62         ; Load 98 into V5
$374    $2E55   CALL     $E55            ; Call subroutine at E55
$376    $1F68   JP       $F68            ; Jump to F68
$378    $F0E3   UNKNOWN  F0E3            ; Unknown Fxxx instruction
$37A    $1696   JP       $696            ; Jump to 696
$37C    $069A   SYS      $69A            ; System call to 69A
$37E    $6C6B   LD       VC, #6B         ; Load 107 into VC
$380    $C48A   RND      V4, #8A         ; V4 = random & 8A
$382    $139D   JP       $39D            ; Jump to 39D
$384    $B05B   JP       V0, $05B        ; Jump to V0 + 05B
$386    $95B8   UNKNOWN  $95B8           ; Unknown 9xxx instruction
$388    $3A7C   SE       VA, #7C         ; Skip if VA == 124
$38A    $C174   RND      V1, #74         ; V1 = random & 74
$38C    $D401   DRW      V4, V0, #1      ; Draw 1-byte sprite at V4, V0
$38E    $E75E   UNKNOWN  $E75E           ; Unknown Exxx instruction
$390    $1098   JP       $098            ; Jump to 098
$392    $6185   LD       V1, #85         ; Load 133 into V1
$394    $BE84   JP       V0, $E84        ; Jump to V0 + E84
$396    $4B52   SNE      VB, #52         ; Skip if VB != 82
$398    $BDB8   JP       V0, $DB8        ; Jump to V0 + DB8
$39A    $E61B   UNKNOWN  $E61B           ; Unknown Exxx instruction
$39C    $666A   LD       V6, #6A         ; Load 106 into V6
$39E    $E96C   UNKNOWN  $E96C           ; Unknown Exxx instruction
$3A0    $711A   ADD      V1, #1A         ; Add 26 to V1
$3A2    $32DB   SE       V2, #DB         ; Skip if V2 == 219
$3A4    $43B4   SNE      V3, #B4         ; Skip if V3 != 180
$3A6    $F24B   UNKNOWN  F24B            ; Unknown Fxxx instruction
$3A8    $1394   JP       $394            ; Jump to 394
$3AA    $BF64   JP       V0, $F64        ; Jump to V0 + F64
$3AC    $8365   SUB      V3, V6          ; V3 -= V6, VF = !borrow
$3AE    $5C3D   UNKNOWN  $5C3D           ; Unknown 5xxx instruction
$3B0    $4565   SNE      V5, #65         ; Skip if V5 != 101
$3B2    $449E   SNE      V4, #9E         ; Skip if V4 != 158
$3B4    $CC88   RND      VC, #88         ; VC = random & 88
$3B6    $1FF1   JP       $FF1            ; Jump to FF1
$3B8    $FBA8   UNKNOWN  FBA8            ; Unknown Fxxx instruction
$3BA    $105A   JP       $05A            ; Jump to 05A
$3BC    $D8F3   DRW      V8, VF, #3      ; Draw 3-byte sprite at V8, VF
$3BE    $DD2E   DRW      VD, V2, #E      ; Draw 14-byte sprite at VD, V2
$3C0    $0F35   SYS      $F35            ; System call to F35
$3C2    $41B4   SNE      V1, #B4         ; Skip if V1 != 180
$3C4    $F293   UNKNOWN  F293            ; Unknown Fxxx instruction
$3C6    $505A   UNKNOWN  $505A           ; Unknown 5xxx instruction
$3C8    $3FE9   SE       VF, #E9         ; Skip if VF == 233
$3CA    $034A   SYS      $34A            ; System call to 34A
$3CC    $E0E1   UNKNOWN  $E0E1           ; Unknown Exxx instruction
$3CE    $F4BD   UNKNOWN  F4BD            ; Unknown Fxxx instruction
$3D0    $3366   SE       V3, #66         ; Skip if V3 == 102
$3D2    $E506   UNKNOWN  $E506           ; Unknown Exxx instruction
$3D4    $535C   UNKNOWN  $535C           ; Unknown 5xxx instruction
$3D6    $0DFA   SYS      $DFA            ; System call to DFA
$3D8    $CA35   RND      VA, #35         ; VA = random & 35
$3DA    $920C   UNKNOWN  $920C           ; Unknown 9xxx instruction
$3DC    $F441   UNKNOWN  F441            ; Unknown Fxxx instruction
$3DE    $264E   CALL     $64E            ; Call subroutine at 64E
$3E0    $FFD8   UNKNOWN  FFD8            ; Unknown Fxxx instruction
$3E2    $6DFF   LD       VD, #FF         ; Load 255 into VD
$3E4    $4D18   SNE      VD, #18         ; Skip if VD != 24
$3E6    $B2A1   JP       V0, $2A1        ; Jump to V0 + 2A1
$3E8    $5104   UNKNOWN  $5104           ; Unknown 5xxx instruction
$3EA    $63FA   LD       V3, #FA         ; Load 250 into V3
$3EC    $6651   LD       V6, #51         ; Load 81 into V6
$3EE    $4B34   SNE      VB, #34         ; Skip if VB != 52
$3F0    $9F78   UNKNOWN  $9F78           ; Unknown 9xxx instruction
$3F2    $66F7   LD       V6, #F7         ; Load 247 into V6
$3F4    $E68B   UNKNOWN  $E68B           ; Unknown Exxx instruction
$3F6    $30F5   SE       V0, #F5         ; Skip if V0 == 245
$3F8    $F5E7   UNKNOWN  F5E7            ; Unknown Fxxx instruction
$3FA    $78E5   ADD      V8, #E5         ; Add 229 to V8
$3FC    $8C56   SHR      VC              ; VC >>= 1, VF = LSB
$3FE    $43C6   SNE      V3, #C6         ; Skip if V3 != 198
$400    $3A43   SE       VA, #43         ; Skip if VA == 67
$402    $5E03   UNKNOWN  $5E03           ; Unknown 5xxx instruction
$404    $34E2   SE       V4, #E2         ; Skip if V4 == 226
$406    $09CB   SYS      $9CB            ; System call to 9CB
$408    $0D63   SYS      $D63            ; System call to D63
$40A    $8559   UNKNOWN  8559            ; Unknown 8xxx instruction
$40C    $5B55   UNKNOWN  $5B55           ; Unknown 5xxx instruction
$40E    $CF58   RND      VF, #58         ; VF = random & 58
$410    $C8D8   RND      V8, #D8         ; V8 = random & D8
$412    $649C   LD       V4, #9C         ; Load 156 into V4
$414    $3B6B   SE       VB, #6B         ; Skip if VB == 107
$416    $EAE9   UNKNOWN  $EAE9           ; Unknown Exxx instruction
$418    $6A56   LD       VA, #56         ; Load 86 into VA
$41A    $5376   UNKNOWN  $5376           ; Unknown 5xxx instruction
$41C    $AFD6   LD       I, $FD6         ; Load FD6 into I
$41E    $9DDD   UNKNOWN  $9DDD           ; Unknown 9xxx instruction
$420    $2088   CALL     $088            ; Call subroutine at 088
$422    $738E   ADD      V3, #8E         ; Add 142 to V3
$424    $89C7   SUBN     V9, VC          ; V9 = VC - V9, VF = !borrow
$426    $54F7   UNKNOWN  $54F7           ; Unknown 5xxx instruction
$428    $2BD5   CALL     $BD5            ; Call subroutine at BD5
$42A    $EFB6   UNKNOWN  $EFB6           ; Unknown Exxx instruction
$42C    $B211   JP       V0, $211        ; Jump to V0 + 211
$42E    $DF61   DRW      VF, V6, #1      ; Draw 1-byte sprite at VF, V6
$430    $D727   DRW      V7, V2, #7      ; Draw 7-byte sprite at V7, V2
$432    $A6B2   LD       I, $6B2         ; Load 6B2 into I
$434    $BF4B   JP       V0, $F4B        ; Jump to V0 + F4B
$436    $8738   UNKNOWN  8738            ; Unknown 8xxx instruction
$438    $F66B   UNKNOWN  F66B            ; Unknown Fxxx instruction
$43A    $9D5A   UNKNOWN  $9D5A           ; Unknown 9xxx instruction
$43C    $AA26   LD       I, $A26         ; Load A26 into I
$43E    $8829   UNKNOWN  8829            ; Unknown 8xxx instruction
$440    $65C1   LD       V5, #C1         ; Load 193 into V5
$442    $08D9   SYS      $8D9            ; System call to 8D9
$444    $02EF   SYS      $2EF            ; System call to 2EF
$446    $C344   RND      V3, #44         ; V3 = random & 44
$448    $BC59   JP       V0, $C59        ; Jump to V0 + C59
$44A    $F295   UNKNOWN  F295            ; Unknown Fxxx instruction
$44C    $0510   SYS      $510            ; System call to 510
$44E    $D4DD   DRW      V4, VD, #D      ; Draw 13-byte sprite at V4, VD
$450    $92AE   UNKNOWN  $92AE           ; Unknown 9xxx instruction
$452    $EAD6   UNKNOWN  $EAD6           ; Unknown Exxx instruction
$454    $3020   SE       V0, #20         ; Skip if V0 == 32
$456    $E077   UNKNOWN  $E077           ; Unknown Exxx instruction
$458    $3F3D   SE       VF, #3D         ; Skip if VF == 61
$45A    $6858   LD       V8, #58         ; Load 88 into V8
$45C    $5D86   UNKNOWN  $5D86           ; Unknown 5xxx instruction
$45E    $0F45   SYS      $F45            ; System call to F45
$460    $6751   LD       V7, #51         ; Load 81 into V7
$462    $6E08   LD       VE, #08         ; Load 8 into VE
$464    $363C   SE       V6, #3C         ; Skip if V6 == 60
$466    $FC4E   UNKNOWN  FC4E            ; Unknown Fxxx instruction
$468    $9024   UNKNOWN  $9024           ; Unknown 9xxx instruction
$46A    $355E   SE       V5, #5E         ; Skip if V5 == 94
$46C    $C2A6   RND      V2, #A6         ; V2 = random & A6
$46E    $B495   JP       V0, $495        ; Jump to V0 + 495
$470    $2E2D   CALL     $E2D            ; Call subroutine at E2D
$472    $9D5D   UNKNOWN  $9D5D           ; Unknown 9xxx instruction
$474    $CCB7   RND      VC, #B7         ; VC = random & B7
$476    $7172   ADD      V1, #72         ; Add 114 to V1
$478    $6848   LD       V8, #48         ; Load 72 into V8
$47A    $DBAA   DRW      VB, VA, #A      ; Draw 10-byte sprite at VB, VA
$47C    $6190   LD       V1, #90         ; Load 144 into V1
$47E    $0CAA   SYS      $CAA            ; System call to CAA
$480    $1B2E   JP       $B2E            ; Jump to B2E
$482    $A5FE   LD       I, $5FE         ; Load 5FE into I
$484    $F045   UNKNOWN  F045            ; Unknown Fxxx instruction
$486    $9FDB   UNKNOWN  $9FDB           ; Unknown 9xxx instruction
$488    $D631   DRW      V6, V3, #1      ; Draw 1-byte sprite at V6, V3
$48A    $FF32   UNKNOWN  FF32            ; Unknown Fxxx instruction
$48C    $C8A8   RND      V8, #A8         ; V8 = random & A8
$48E    $2CAF   CALL     $CAF            ; Call subroutine at CAF
$490    $EC6D   UNKNOWN  $EC6D           ; Unknown Exxx instruction
$492    $2CED   CALL     $CED            ; Call subroutine at CED
$494    $3BF1   SE       VB, #F1         ; Skip if VB == 241
$496    $CA1D   RND      VA, #1D         ; VA = random & 1D
$498    $82F1   OR       V2, VF          ; V2 |= VF
$49A    $45E6   SNE      V5, #E6         ; Skip if V5 != 230
$49C    $654B   LD       V5, #4B         ; Load 75 into V5
$49E    $B80B   JP       V0, $80B        ; Jump to V0 + 80B
$4A0    $F8E1   UNKNOWN  F8E1            ; Unknown Fxxx instruction
$4A2    $28C6   CALL     $8C6            ; Call subroutine at 8C6
$4A4    $AE5D   LD       I, $E5D         ; Load E5D into I
$4A6    $E346   UNKNOWN  $E346           ; Unknown Exxx instruction
$4A8    $0FFA   SYS      $FFA            ; System call to FFA
$4AA    $10A0   JP       $0A0            ; Jump to 0A0
$4AC    $141F   JP       $41F            ; Jump to 41F
$4AE    $B852   JP       V0, $852        ; Jump to V0 + 852
$4B0    $A6DE   LD       I, $6DE         ; Load 6DE into I
$4B2    $0FC0   SYS      $FC0            ; System call to FC0
$4B4    $ABDC   LD       I, $BDC         ; Load BDC into I
$4B6    $C043   RND      V0, #43         ; V0 = random & 43
$4B8    $DED8   DRW      VE, VD, #8      ; Draw 8-byte sprite at VE, VD
$4BA    $7657   ADD      V6, #57         ; Add 87 to V6
$4BC    $8730   LD       V7, V3          ; V7 = V3
$4BE    $709A   ADD      V0, #9A         ; Add 154 to V0
$4C0    $28A2   CALL     $8A2            ; Call subroutine at 8A2
$4C2    $629E   LD       V2, #9E         ; Load 158 into V2
$4C4    $E276   UNKNOWN  $E276           ; Unknown Exxx instruction
$4C6    $C6FD   RND      V6, #FD         ; V6 = random & FD
$4C8    $01D3   SYS      $1D3            ; System call to 1D3
$4CA    $7E9D   ADD      VE, #9D         ; Add 157 to VE
$4CC    $9ECE   UNKNOWN  $9ECE           ; Unknown 9xxx instruction
$4CE    $316D   SE       V1, #6D         ; Skip if V1 == 109
$4D0    $A454   LD       I, $454         ; Load 454 into I
$4D2    $01BB   SYS      $1BB            ; System call to 1BB
$4D4    $26D3   CALL     $6D3            ; Call subroutine at 6D3
$4D6    $56B2   UNKNOWN  $56B2           ; Unknown 5xxx instruction
$4D8    $5212   UNKNOWN  $5212           ; Unknown 5xxx instruction
$4DA    $00EC   SYS      $0EC            ; System call to 0EC
$4DC    $A840   LD       I, $840         ; Load 840 into I
$4DE    $709D   ADD      V0, #9D         ; Add 157 to V0
$4E0    $7A8E   ADD      VA, #8E         ; Add 142 to VA
$4E2    $FE4A   UNKNOWN  FE4A            ; Unknown Fxxx instruction
$4E4    $3854   SE       V8, #54         ; Skip if V8 == 84
$4E6    $5EA9   UNKNOWN  $5EA9           ; Unknown 5xxx instruction
$4E8    $3B81   SE       VB, #81         ; Skip if VB == 129
$4EA    $03EB   SYS      $3EB            ; System call to 3EB
$4EC    $BB7E   JP       V0, $B7E        ; Jump to V0 + B7E
$4EE    $7D0B   ADD      VD, #0B         ; Add 11 to VD
$4F0    $946F   UNKNOWN  $946F           ; Unknown 9xxx instruction
$4F2    $FCFE   UNKNOWN  FCFE            ; Unknown Fxxx instruction
$4F4    $2E29   CALL     $E29            ; Call subroutine at E29
$4F6    $F0F0   UNKNOWN  F0F0            ; Unknown Fxxx instruction
$4F8    $6360   LD       V3, #60         ; Load 96 into V3
$4FA    $8E7A   UNKNOWN  8E7A            ; Unknown 8xxx instruction
$4FC    $4ED2   SNE      VE, #D2         ; Skip if VE != 210
$4FE    $BEDA   JP       V0, $EDA        ; Jump to V0 + EDA
$500    $3B76   SE       VB, #76         ; Skip if VB == 118
$502    $18C1   JP       $8C1            ; Jump to 8C1
$504    $5BFF   UNKNOWN  $5BFF           ; Unknown 5xxx instruction
$506    $57DE   UNKNOWN  $57DE           ; Unknown 5xxx instruction
$508    $CEFE   RND      VE, #FE         ; VE = random & FE
$50A    $6F3A   LD       VF, #3A         ; Load 58 into VF
$50C    $2B83   CALL     $B83            ; Call subroutine at B83
$50E    $6B48   LD       VB, #48         ; Load 72 into VB
$510    $5C88   UNKNOWN  $5C88           ; Unknown 5xxx instruction
$512    $A328   LD       I, $328         ; Load 328 into I
$514    $E7A7   UNKNOWN  $E7A7           ; Unknown Exxx instruction
$516    $8307   SUBN     V3, V0          ; V3 = V0 - V3, VF = !borrow
$518    $3ABB   SE       VA, #BB         ; Skip if VA == 187
$51A    $D726   DRW      V7, V2, #6      ; Draw 6-byte sprite at V7, V2
$51C    $E12F   UNKNOWN  $E12F           ; Unknown Exxx instruction
$51E    $EDED   UNKNOWN  $EDED           ; Unknown Exxx instruction
$520    $C181   RND      V1, #81         ; V1 = random & 81
$522    $CA19   RND      VA, #19         ; VA = random & 19
$524    $F83B   UNKNOWN  F83B            ; Unknown Fxxx instruction
$526    $8886   SHR      V8              ; V8 >>= 1, VF = LSB
$528    $FBA3   UNKNOWN  FBA3            ; Unknown Fxxx instruction
$52A    $43BF   SNE      V3, #BF         ; Skip if V3 != 191
$52C    $FF68   UNKNOWN  FF68            ; Unknown Fxxx instruction
$52E    $5A2E   UNKNOWN  $5A2E           ; Unknown 5xxx instruction
$530    $CB78   RND      VB, #78         ; VB = random & 78
$532    $E707   UNKNOWN  $E707           ; Unknown Exxx instruction
$534    $0A12   SYS      $A12            ; System call to A12
$536    $EF66   UNKNOWN  $EF66           ; Unknown Exxx instruction
$538    $8B16   SHR      VB              ; VB >>= 1, VF = LSB
$53A    $543C   UNKNOWN  $543C           ; Unknown 5xxx instruction
$53C    $3CBE   SE       VC, #BE         ; Skip if VC == 190
$53E    $8A22   AND      VA, V2          ; VA &= V2
$540    $3755   SE       V7, #55         ; Skip if V7 == 85
$542    $2FAD   CALL     $FAD            ; Call subroutine at FAD
$544    $91D3   UNKNOWN  $91D3           ; Unknown 9xxx instruction
$546    $E4FA   UNKNOWN  $E4FA           ; Unknown Exxx instruction
$548    $4753   SNE      V7, #53         ; Skip if V7 != 83
$54A    $9FF3   UNKNOWN  $9FF3           ; Unknown 9xxx instruction
$54C    $DE5D   DRW      VE, V5, #D      ; Draw 13-byte sprite at VE, V5
$54E    $F68B   UNKNOWN  F68B            ; Unknown Fxxx instruction
$550    $7D12   ADD      VD, #12         ; Add 18 to VD
$552    $1D45   JP       $D45            ; Jump to D45
$554    $BC5D   JP       V0, $C5D        ; Jump to V0 + C5D
$556    $43F0   SNE      V3, #F0         ; Skip if V3 != 240
$558    $55DC   UNKNOWN  $55DC           ; Unknown 5xxx instruction
$55A    $C06A   RND      V0, #6A         ; V0 = random & 6A
$55C    $9C45   UNKNOWN  $9C45           ; Unknown 9xxx instruction
$55E    $E9AF   UNKNOWN  $E9AF           ; Unknown Exxx instruction
$560    $6F3E   LD       VF, #3E         ; Load 62 into VF
$562    $D54D   DRW      V5, V4, #D      ; Draw 13-byte sprite at V5, V4
$564    $8990   LD       V9, V9          ; V9 = V9
$566    $E659   UNKNOWN  $E659           ; Unknown Exxx instruction
$568    $062D   SYS      $62D            ; System call to 62D
$56A    $AEB3   LD       I, $EB3         ; Load EB3 into I
$56C    $8997   SUBN     V9, V9          ; V9 = V9 - V9, VF = !borrow
$56E    $30EB   SE       V0, #EB         ; Skip if V0 == 235
$570    $7BFC   ADD      VB, #FC         ; Add 252 to VB
$572    $EA2D   UNKNOWN  $EA2D           ; Unknown Exxx instruction
$574    $0262   SYS      $262            ; System call to 262
$576    $D745   DRW      V7, V4, #5      ; Draw 5-byte sprite at V7, V4
$578    $FA19   UNKNOWN  FA19            ; Unknown Fxxx instruction
$57A    $FA39   UNKNOWN  FA39            ; Unknown Fxxx instruction
$57C    $A482   LD       I, $482         ; Load 482 into I
$57E    $02B1   SYS      $2B1            ; System call to 2B1
$580    $34F2   SE       V4, #F2         ; Skip if V4 == 242
$582    $ED5A   UNKNOWN  $ED5A           ; Unknown Exxx instruction
$584    $29DB   CALL     $9DB            ; Call subroutine at 9DB
$586    $82C3   XOR      V2, VC          ; V2 ^= VC
$588    $7892   ADD      V8, #92         ; Add 146 to V8
$58A    $5D80   SE       VD, V8          ; Skip if VD == V8
$58C    $35BB   SE       V5, #BB         ; Skip if V5 == 187
$58E    $E9E7   UNKNOWN  $E9E7           ; Unknown Exxx instruction
$590    $4D1F   SNE      VD, #1F         ; Skip if VD != 31
$592    $E05F   UNKNOWN  $E05F           ; Unknown Exxx instruction
$594    $00FB   SYS      $0FB            ; System call to 0FB
$596    $D0DB   DRW      V0, VD, #B      ; Draw 11-byte sprite at V0, VD
$598    $4607   SNE      V6, #07         ; Skip if V6 != 7
$59A    $9ADA   UNKNOWN  $9ADA           ; Unknown 9xxx instruction
$59C    $E5C8   UNKNOWN  $E5C8           ; Unknown Exxx instruction
$59E    $B84F   JP       V0, $84F        ; Jump to V0 + 84F
$5A0    $8FDB   UNKNOWN  8FDB            ; Unknown 8xxx instruction
$5A2    $B312   JP       V0, $312        ; Jump to V0 + 312
$5A4    $5EAA   UNKNOWN  $5EAA           ; Unknown 5xxx instruction
$5A6    $396B   SE       V9, #6B         ; Skip if V9 == 107
$5A8    $F021   UNKNOWN  F021            ; Unknown Fxxx instruction
$5AA    $461D   SNE      V6, #1D         ; Skip if V6 != 29
$5AC    $F682   UNKNOWN  F682            ; Unknown Fxxx instruction
$5AE    $A45F   LD       I, $45F         ; Load 45F into I
$5B0    $940B   UNKNOWN  $940B           ; Unknown 9xxx instruction
$5B2    $AC01   LD       I, $C01         ; Load C01 into I
$5B4    $6193   LD       V1, #93         ; Load 147 into V1
$5B6    $0242   SYS      $242            ; System call to 242
$5B8    $52D2   UNKNOWN  $52D2           ; Unknown 5xxx instruction
$5BA    $9882   UNKNOWN  $9882           ; Unknown 9xxx instruction
$5BC    $75D2   ADD      V5, #D2         ; Add 210 to V5
$5BE    $A787   LD       I, $787         ; Load 787 into I
$5C0    $E668   UNKNOWN  $E668           ; Unknown Exxx instruction
$5C2    $DEF4   DRW      VE, VF, #4      ; Draw 4-byte sprite at VE, VF
$5C4    $C5DA   RND      V5, #DA         ; V5 = random & DA
$5C6    $4328   SNE      V3, #28         ; Skip if V3 != 40
$5C8    $C35A   RND      V3, #5A         ; V3 = random & 5A
$5CA    $7FF1   ADD      VF, #F1         ; Add 241 to VF
$5CC    $557A   UNKNOWN  $557A           ; Unknown 5xxx instruction
$5CE    $E9BC   UNKNOWN  $E9BC           ; Unknown Exxx instruction
$5D0    $48E7   SNE      V8, #E7         ; Skip if V8 != 231
$5D2    $9BD5   UNKNOWN  $9BD5           ; Unknown 9xxx instruction
$5D4    $2D1F   CALL     $D1F            ; Call subroutine at D1F
$5D6    $0483   SYS      $483            ; System call to 483
$5D8    $C706   RND      V7, #06         ; V7 = random & 06
$5DA    $12E2   JP       $2E2            ; Jump to 2E2
$5DC    $A7CA   LD       I, $7CA         ; Load 7CA into I
$5DE    $7C0E   ADD      VC, #0E         ; Add 14 to VC
$5E0    $90F0   SNE      V0, VF          ; Skip if V0 != VF
$5E2    $86ED   UNKNOWN  86ED            ; Unknown 8xxx instruction
$5E4    $650E   LD       V5, #0E         ; Load 14 into V5
$5E6    $819F   UNKNOWN  819F            ; Unknown 8xxx instruction
$5E8    $1A64   JP       $A64            ; Jump to A64
$5EA    $0A3E   SYS      $A3E            ; System call to A3E
$5EC    $FCD9   UNKNOWN  FCD9            ; Unknown Fxxx instruction
$5EE    $5932   UNKNOWN  $5932           ; Unknown 5xxx instruction
$5F0    $72C5   ADD      V2, #C5         ; Add 197 to V2
$5F2    $8725   SUB      V7, V2          ; V7 -= V2, VF = !borrow
$5F4    $FB45   UNKNOWN  FB45            ; Unknown Fxxx instruction
$5F6    $1209   JP       $209            ; Jump to 209
$5F8    $28B5   CALL     $8B5            ; Call subroutine at 8B5
$5FA    $6AFA   LD       VA, #FA         ; Load 250 into VA
$5FC    $305A   SE       V0, #5A         ; Skip if V0 == 90
$5FE    $9DE4   UNKNOWN  $9DE4           ; Unknown 9xxx instruction
$600    $DDC7   DRW      VD, VC, #7      ; Draw 7-byte sprite at VD, VC
$602    $05C5   SYS      $5C5            ; System call to 5C5
$604    $C205   RND      V2, #05         ; V2 = random & 05
$606    $5051   UNKNOWN  $5051           ; Unknown 5xxx instruction
$608    $19A8   JP       $9A8            ; Jump to 9A8
$60A    $379D   SE       V7, #9D         ; Skip if V7 == 157
$60C    $1805   JP       $805            ; Jump to 805
$60E    $EDED   UNKNOWN  $EDED           ; Unknown Exxx instruction
$610    $679A   LD       V7, #9A         ; Load 154 into V7
$612    $8533   XOR      V5, V3          ; V5 ^= V3
$614    $E92C   UNKNOWN  $E92C           ; Unknown Exxx instruction
$616    $6AD8   LD       VA, #D8         ; Load 216 into VA
$618    $8047   SUBN     V0, V4          ; V0 = V4 - V0, VF = !borrow
$61A    $DC38   DRW      VC, V3, #8      ; Draw 8-byte sprite at VC, V3
$61C    $EE4B   UNKNOWN  $EE4B           ; Unknown Exxx instruction
$61E    $01BF   SYS      $1BF            ; System call to 1BF
$620    $0C89   SYS      $C89            ; System call to C89
$622    $4DB6   SNE      VD, #B6         ; Skip if VD != 182
$624    $4E63   SNE      VE, #63         ; Skip if VE != 99
$626    $9E5E   UNKNOWN  $9E5E           ; Unknown 9xxx instruction
$628    $CD6B   RND      VD, #6B         ; VD = random & 6B
$62A    $BF15   JP       V0, $F15        ; Jump to V0 + F15
$62C    $16C5   JP       $6C5            ; Jump to 6C5
$62E    $6BE8   LD       VB, #E8         ; Load 232 into VB
$630    $206B   CALL     $06B            ; Call subroutine at 06B
$632    $5BC3   UNKNOWN  $5BC3           ; Unknown 5xxx instruction
$634    $4590   SNE      V5, #90         ; Skip if V5 != 144
$636    $4A6C   SNE      VA, #6C         ; Skip if VA != 108
$638    $C6C3   RND      V6, #C3         ; V6 = random & C3
$63A    $ED1A   UNKNOWN  $ED1A           ; Unknown Exxx instruction
$63C    $A937   LD       I, $937         ; Load 937 into I
$63E    $C762   RND      V7, #62         ; V7 = random & 62
$640    $1193   JP       $193            ; Jump to 193
$642    $29DB   CALL     $9DB            ; Call subroutine at 9DB
$644    $C522   RND      V5, #22         ; V5 = random & 22
$646    $4E5A   SNE      VE, #5A         ; Skip if VE != 90
$648    $ADC1   LD       I, $DC1         ; Load DC1 into I
$64A    $5ED5   UNKNOWN  $5ED5           ; Unknown 5xxx instruction
$64C    $0CC1   SYS      $CC1            ; System call to CC1
$64E    $DB7F   DRW      VB, V7, #F      ; Draw 15-byte sprite at VB, V7
$650    $AF2F   LD       I, $F2F         ; Load F2F into I
$652    $3B20   SE       VB, #20         ; Skip if VB == 32
$654    $0609   SYS      $609            ; System call to 609
$656    $1233   JP       $233            ; Jump to 233
$658    $BAF6   JP       V0, $AF6        ; Jump to V0 + AF6
$65A    $7372   ADD      V3, #72         ; Add 114 to V3
$65C    $957D   UNKNOWN  $957D           ; Unknown 9xxx instruction
$65E    $DAB2   DRW      VA, VB, #2      ; Draw 2-byte sprite at VA, VB
$660    $81B4   ADD      V1, VB          ; V1 += VB, VF = carry
$662    $5A73   UNKNOWN  $5A73           ; Unknown 5xxx instruction
$664    $2637   CALL     $637            ; Call subroutine at 637
$666    $B48E   JP       V0, $48E        ; Jump to V0 + 48E
$668    $5476   UNKNOWN  $5476           ; Unknown 5xxx instruction
$66A    $5773   UNKNOWN  $5773           ; Unknown 5xxx instruction
$66C    $C9E4   RND      V9, #E4         ; V9 = random & E4
$66E    $B0A2   JP       V0, $0A2        ; Jump to V0 + 0A2
$670    $E5E0   UNKNOWN  $E5E0           ; Unknown Exxx instruction
$672    $8461   OR       V4, V6          ; V4 |= V6
$674    $D5DE   DRW      V5, VD, #E      ; Draw 14-byte sprite at V5, VD
$676    $3746   SE       V7, #46         ; Skip if V7 == 70
$678    $3711   SE       V7, #11         ; Skip if V7 == 17
$67A    $1830   JP       $830            ; Jump to 830
$67C    $0B49   SYS      $B49            ; System call to B49
$67E    $0448   SYS      $448            ; System call to 448
$680    $934C   UNKNOWN  $934C           ; Unknown 9xxx instruction
$682    $E83B   UNKNOWN  $E83B           ; Unknown Exxx instruction
$684    $E529   UNKNOWN  $E529           ; Unknown Exxx instruction
$686    $CCF9   RND      VC, #F9         ; VC = random & F9
$688    $3A18   SE       VA, #18         ; Skip if VA == 24
$68A    $CC9C   RND      VC, #9C         ; VC = random & 9C
$68C    $1580   JP       $580            ; Jump to 580
$68E    $CDC3   RND      VD, #C3         ; VD = random & C3
$690    $7161   ADD      V1, #61         ; Add 97 to V1
$692    $14C4   JP       $4C4            ; Jump to 4C4
$694    $1473   JP       $473            ; Jump to 473
$696    $0184   SYS      $184            ; System call to 184
$698    $0F83   SYS      $F83            ; System call to F83
$69A    $140E   JP       $40E            ; Jump to 40E
$69C    $F5E9   UNKNOWN  F5E9            ; Unknown Fxxx instruction
$69E    $71C2   ADD      V1, #C2         ; Add 194 to V1
$6A0    $2A25   CALL     $A25            ; Call subroutine at A25
$6A2    $84DC   UNKNOWN  84DC            ; Unknown 8xxx instruction
$6A4    $5461   UNKNOWN  $5461           ; Unknown 5xxx instruction
$6A6    $E816   UNKNOWN  $E816           ; Unknown Exxx instruction
$6A8    $7A4B   ADD      VA, #4B         ; Add 75 to VA
$6AA    $0E8C   SYS      $E8C            ; System call to E8C
$6AC    $8797   SUBN     V7, V9          ; V7 = V9 - V7, VF = !borrow
$6AE    $5A9D   UNKNOWN  $5A9D           ; Unknown 5xxx instruction
$6B0    $14FB   JP       $4FB            ; Jump to 4FB
$6B2    $28B4   CALL     $8B4            ; Call subroutine at 8B4
$6B4    $BEA5   JP       V0, $EA5        ; Jump to V0 + EA5
$6B6    $F8D7   UNKNOWN  F8D7            ; Unknown Fxxx instruction
$6B8    $A6E4   LD       I, $6E4         ; Load 6E4 into I
$6BA    $5B44   UNKNOWN  $5B44           ; Unknown 5xxx instruction
$6BC    $BC3D   JP       V0, $C3D        ; Jump to V0 + C3D
$6BE    $E70F   UNKNOWN  $E70F           ; Unknown Exxx instruction
$6C0    $0A5E   SYS      $A5E            ; System call to A5E
$6C2    $D37D   DRW      V3, V7, #D      ; Draw 13-byte sprite at V3, V7
$6C4    $2577   CALL     $577            ; Call subroutine at 577
$6C6    $7FE4   ADD      VF, #E4         ; Add 228 to VF
$6C8    $AF2D   LD       I, $F2D         ; Load F2D into I
$6CA    $D48D   DRW      V4, V8, #D      ; Draw 13-byte sprite at V4, V8
$6CC    $693A   LD       V9, #3A         ; Load 58 into V9
$6CE    $95E3   UNKNOWN  $95E3           ; Unknown 9xxx instruction
$6D0    $02A8   SYS      $2A8            ; System call to 2A8
$6D2    $74B2   ADD      V4, #B2         ; Add 178 to V4
$6D4    $7D57   ADD      VD, #57         ; Add 87 to VD
$6D6    $360A   SE       V6, #0A         ; Skip if V6 == 10
$6D8    $26CA   CALL     $6CA            ; Call subroutine at 6CA
$6DA    $DC31   DRW      VC, V3, #1      ; Draw 1-byte sprite at VC, V3
$6DC    $F04D   UNKNOWN  F04D            ; Unknown Fxxx instruction
$6DE    $ECAF   UNKNOWN  $ECAF           ; Unknown Exxx instruction
$6E0    $46B3   SNE      V6, #B3         ; Skip if V6 != 179
$6E2    $0FEE   SYS      $FEE            ; System call to FEE
$6E4    $62BB   LD       V2, #BB         ; Load 187 into V2
$6E6    $3BFC   SE       VB, #FC         ; Skip if VB == 252
$6E8    $9E98   UNKNOWN  $9E98           ; Unknown 9xxx instruction
$6EA    $4DD3   SNE      VD, #D3         ; Skip if VD != 211
$6EC    $F3DF   UNKNOWN  F3DF            ; Unknown Fxxx instruction
$6EE    $008D   SYS      $08D            ; System call to 08D
$6F0    $D353   DRW      V3, V5, #3      ; Draw 3-byte sprite at V3, V5
$6F2    $DDEB   DRW      VD, VE, #B      ; Draw 11-byte sprite at VD, VE
$6F4    $FBFC   UNKNOWN  FBFC            ; Unknown Fxxx instruction
$6F6    $117F   JP       $17F            ; Jump to 17F
$6F8    $0622   SYS      $622            ; System call to 622
$6FA    $BC97   JP       V0, $C97        ; Jump to V0 + C97
$6FC    $88C8   UNKNOWN  88C8            ; Unknown 8xxx instruction
$6FE    $29BD   CALL     $9BD            ; Call subroutine at 9BD
$700    $C0CC   RND      V0, #CC         ; V0 = random & CC
$702    $29CF   CALL     $9CF            ; Call subroutine at 9CF
$704    $E883   UNKNOWN  $E883           ; Unknown Exxx instruction
$706    $9974   UNKNOWN  $9974           ; Unknown 9xxx instruction
$708    $E557   UNKNOWN  $E557           ; Unknown Exxx instruction
$70A    $3D2B   SE       VD, #2B         ; Skip if VD == 43
$70C    $E64E   UNKNOWN  $E64E           ; Unknown Exxx instruction
$70E    $18B0   JP       $8B0            ; Jump to 8B0
$710    $4D5C   SNE      VD, #5C         ; Skip if VD != 92
$712    $8066   SHR      V0              ; V0 >>= 1, VF = LSB
$714    $2C78   CALL     $C78            ; Call subroutine at C78
$716    $E5A7   UNKNOWN  $E5A7           ; Unknown Exxx instruction
$718    $760B   ADD      V6, #0B         ; Add 11 to V6
$71A    $DB01   DRW      VB, V0, #1      ; Draw 1-byte sprite at VB, V0
$71C    $715C   ADD      V1, #5C         ; Add 92 to V1
$71E    $AF92   LD       I, $F92         ; Load F92 into I
$720    $33B7   SE       V3, #B7         ; Skip if V3 == 183
$722    $E29F   UNKNOWN  $E29F           ; Unknown Exxx instruction
$724    $2613   CALL     $613            ; Call subroutine at 613
$726    $B096   JP       V0, $096        ; Jump to V0 + 096
$728    $DF3A   DRW      VF, V3, #A      ; Draw 10-byte sprite at VF, V3
$72A    $8F2D   UNKNOWN  8F2D            ; Unknown 8xxx instruction
$72C    $2091   CALL     $091            ; Call subroutine at 091
$72E    $256C   CALL     $56C            ; Call subroutine at 56C
$730    $F67D   UNKNOWN  F67D            ; Unknown Fxxx instruction
$732    $F8C5   UNKNOWN  F8C5            ; Unknown Fxxx instruction
$734    $DE3E   DRW      VE, V3, #E      ; Draw 14-byte sprite at VE, V3
$736    $65B0   LD       V5, #B0         ; Load 176 into V5
$738    $50D6   UNKNOWN  $50D6           ; Unknown 5xxx instruction
$73A    $5642   UNKNOWN  $5642           ; Unknown 5xxx instruction
$73C    $2CC8   CALL     $CC8            ; Call subroutine at CC8
$73E    $81B4   ADD      V1, VB          ; V1 += VB, VF = carry
$740    $E43F   UNKNOWN  $E43F           ; Unknown Exxx instruction
$742    $12F2   JP       $2F2            ; Jump to 2F2
$744    $2CE5   CALL     $CE5            ; Call subroutine at CE5
$746    $AED3   LD       I, $ED3         ; Load ED3 into I
$748    $6E8D   LD       VE, #8D         ; Load 141 into VE
$74A    $103B   JP       $03B            ; Jump to 03B
$74C    $9A12   UNKNOWN  $9A12           ; Unknown 9xxx instruction
$74E    $51EC   UNKNOWN  $51EC           ; Unknown 5xxx instruction
$750    $9309   UNKNOWN  $9309           ; Unknown 9xxx instruction
$752    $0C58   SYS      $C58            ; System call to C58
$754    $DF66   DRW      VF, V6, #6      ; Draw 6-byte sprite at VF, V6
$756    $8616   SHR      V6              ; V6 >>= 1, VF = LSB
$758    $4E52   SNE      VE, #52         ; Skip if VE != 82
$75A    $BEC6   JP       V0, $EC6        ; Jump to V0 + EC6
$75C    $107E   JP       $07E            ; Jump to 07E
$75E    $202F   CALL     $02F            ; Call subroutine at 02F
$760    $1381   JP       $381            ; Jump to 381
$762    $8F2E   SHL      VF              ; VF <<= 1, VF = MSB
$764    $FF84   UNKNOWN  FF84            ; Unknown Fxxx instruction
$766    $EDD3   UNKNOWN  $EDD3           ; Unknown Exxx instruction
$768    $6CF8   LD       VC, #F8         ; Load 248 into VC
$76A    $7DDA   ADD      VD, #DA         ; Add 218 to VD
$76C    $0828   SYS      $828            ; System call to 828
$76E    $102D   JP       $02D            ; Jump to 02D
$770    $A161   LD       I, $161         ; Load 161 into I
$772    $396D   SE       V9, #6D         ; Skip if V9 == 109
$774    $0196   SYS      $196            ; System call to 196
$776    $B693   JP       V0, $693        ; Jump to V0 + 693
$778    $F24C   UNKNOWN  F24C            ; Unknown Fxxx instruction
$77A    $C496   RND      V4, #96         ; V4 = random & 96
$77C    $5944   UNKNOWN  $5944           ; Unknown 5xxx instruction
$77E    $0327   SYS      $327            ; System call to 327
$780    $897A   UNKNOWN  897A            ; Unknown 8xxx instruction
$782    $44F4   SNE      V4, #F4         ; Skip if V4 != 244
$784    $5B08   UNKNOWN  $5B08           ; Unknown 5xxx instruction
$786    $72A0   ADD      V2, #A0         ; Add 160 to V2
$788    $592E   UNKNOWN  $592E           ; Unknown 5xxx instruction
$78A    $6AB0   LD       VA, #B0         ; Load 176 into VA
$78C    $6A6E   LD       VA, #6E         ; Load 110 into VA
$78E    $9C40   SNE      VC, V4          ; Skip if VC != V4
$790    $0527   SYS      $527            ; System call to 527
$792    $279A   CALL     $79A            ; Call subroutine at 79A
$794    $62B0   LD       V2, #B0         ; Load 176 into V2
$796    $9A17   UNKNOWN  $9A17           ; Unknown 9xxx instruction
$798    $528C   UNKNOWN  $528C           ; Unknown 5xxx instruction
$79A    $5B99   UNKNOWN  $5B99           ; Unknown 5xxx instruction
$79C    $CFCE   RND      VF, #CE         ; VF = random & CE
$79E    $31AD   SE       V1, #AD         ; Skip if V1 == 173
$7A0    $D8D9   DRW      V8, VD, #9      ; Draw 9-byte sprite at V8, VD
$7A2    $E8D5   UNKNOWN  $E8D5           ; Unknown Exxx instruction
$7A4    $F702   UNKNOWN  F702            ; Unknown Fxxx instruction
$7A6    $DF3B   DRW      VF, V3, #B      ; Draw 11-byte sprite at VF, V3
$7A8    $D1EB   DRW      V1, VE, #B      ; Draw 11-byte sprite at V1, VE
$7AA    $DB46   DRW      VB, V4, #6      ; Draw 6-byte sprite at VB, V4
$7AC    $2E60   CALL     $E60            ; Call subroutine at E60
$7AE    $3C67   SE       VC, #67         ; Skip if VC == 103
$7B0    $2936   CALL     $936            ; Call subroutine at 936
$7B2    $CF9E   RND      VF, #9E         ; VF = random & 9E
$7B4    $343B   SE       V4, #3B         ; Skip if V4 == 59
$7B6    $D73E   DRW      V7, V3, #E      ; Draw 14-byte sprite at V7, V3
$7B8    $E5E0   UNKNOWN  $E5E0           ; Unknown Exxx instruction
$7BA    $1207   JP       $207            ; Jump to 207
$7BC    $8F08   UNKNOWN  8F08            ; Unknown 8xxx instruction
$7BE    $C559   RND      V5, #59         ; V5 = random & 59
$7C0    $AECC   LD       I, $ECC         ; Load ECC into I
$7C2    $A92C   LD       I, $92C         ; Load 92C into I
$7C4    $AA59   LD       I, $A59         ; Load A59 into I
$7C6    $1D9D   JP       $D9D            ; Jump to D9D
$7C8    $CFF5   RND      VF, #F5         ; VF = random & F5
$7CA    $C1ED   RND      V1, #ED         ; V1 = random & ED
$7CC    $3524   SE       V5, #24         ; Skip if V5 == 36
$7CE    $B0BE   JP       V0, $0BE        ; Jump to V0 + 0BE
$7D0    $C8BC   RND      V8, #BC         ; V8 = random & BC
$7D2    $D055   DRW      V0, V5, #5      ; Draw 5-byte sprite at V0, V5
$7D4    $E36A   UNKNOWN  $E36A           ; Unknown Exxx instruction
$7D6    $6D90   LD       VD, #90         ; Load 144 into VD
$7D8    $77C7   ADD      V7, #C7         ; Add 199 to V7
$7DA    $A6DF   LD       I, $6DF         ; Load 6DF into I
$7DC    $15FC   JP       $5FC            ; Jump to 5FC
$7DE    $51CD   UNKNOWN  $51CD           ; Unknown 5xxx instruction
$7E0    $A6FB   LD       I, $6FB         ; Load 6FB into I
$7E2    $1DAA   JP       $DAA            ; Jump to DAA
$7E4    $26D5   CALL     $6D5            ; Call subroutine at 6D5
$7E6    $9ECD   UNKNOWN  $9ECD           ; Unknown 9xxx instruction
$7E8    $4A22   SNE      VA, #22         ; Skip if VA != 34
$7EA    $4387   SNE      V3, #87         ; Skip if V3 != 135
$7EC    $8043   XOR      V0, V4          ; V0 ^= V4
$7EE    $9406   UNKNOWN  $9406           ; Unknown 9xxx instruction
$7F0    $C9A5   RND      V9, #A5         ; V9 = random & A5
$7F2    $5E67   UNKNOWN  $5E67           ; Unknown 5xxx instruction
$7F4    $8AFC   UNKNOWN  8AFC            ; Unknown 8xxx instruction
$7F6    $0E0C   SYS      $E0C            ; System call to E0C
$7F8    $E02F   UNKNOWN  $E02F           ; Unknown Exxx instruction
$7FA    $83D6   SHR      V3              ; V3 >>= 1, VF = LSB
$7FC    $B3C9   JP       V0, $3C9        ; Jump to V0 + 3C9
$7FE    $7709   ADD      V7, #09         ; Add 9 to V7
$800    $ACCE   LD       I, $CCE         ; Load CCE into I
$802    $0C0D   SYS      $C0D            ; System call to C0D
$804    $8730   LD       V7, V3          ; V7 = V3
$806    $0BD6   SYS      $BD6            ; System call to BD6
$808    $82DA   UNKNOWN  82DA            ; Unknown 8xxx instruction
$80A    $6A31   LD       VA, #31         ; Load 49 into VA
$80C    $4547   SNE      V5, #47         ; Skip if V5 != 71
$80E    $84CA   UNKNOWN  84CA            ; Unknown 8xxx instruction
$810    $8259   UNKNOWN  8259            ; Unknown 8xxx instruction
$812    $439F   SNE      V3, #9F         ; Skip if V3 != 159
$814    $4DFC   SNE      VD, #FC         ; Skip if VD != 252
$816    $546D   UNKNOWN  $546D           ; Unknown 5xxx instruction
$818    $9089   UNKNOWN  $9089           ; Unknown 9xxx instruction
$81A    $E530   UNKNOWN  $E530           ; Unknown Exxx instruction
$81C    $144F   JP       $44F            ; Jump to 44F
$81E    $B519   JP       V0, $519        ; Jump to V0 + 519
$820    $A6AC   LD       I, $6AC         ; Load 6AC into I
$822    $087A   SYS      $87A            ; System call to 87A
$824    $08BB   SYS      $8BB            ; System call to 8BB
$826    $A798   LD       I, $798         ; Load 798 into I
$828    $1159   JP       $159            ; Jump to 159
$82A    $8AE1   OR       VA, VE          ; VA |= VE
$82C    $EBCF   UNKNOWN  $EBCF           ; Unknown Exxx instruction
$82E    $58A7   UNKNOWN  $58A7           ; Unknown 5xxx instruction
$830    $ABF6   LD       I, $BF6         ; Load BF6 into I
$832    $AC93   LD       I, $C93         ; Load C93 into I
$834    $1217   JP       $217            ; Jump to 217
$836    $F405   UNKNOWN  F405            ; Unknown Fxxx instruction
$838    $F469   UNKNOWN  F469            ; Unknown Fxxx instruction
$83A    $BA80   JP       V0, $A80        ; Jump to V0 + A80
$83C    $78B0   ADD      V8, #B0         ; Add 176 to V8
$83E    $5E9A   UNKNOWN  $5E9A           ; Unknown 5xxx instruction
$840    $E13A   UNKNOWN  $E13A           ; Unknown Exxx instruction
$842    $E26E   UNKNOWN  $E26E           ; Unknown Exxx instruction
$844    $C069   RND      V0, #69         ; V0 = random & 69
$846    $B95A   JP       V0, $95A        ; Jump to V0 + 95A
$848    $8B1D   UNKNOWN  8B1D            ; Unknown 8xxx instruction
$84A    $7AF2   ADD      VA, #F2         ; Add 242 to VA
$84C    $6A27   LD       VA, #27         ; Load 39 into VA
$84E    $FDF8   UNKNOWN  FDF8            ; Unknown Fxxx instruction
$850    $B890   JP       V0, $890        ; Jump to V0 + 890
$852    $62B2   LD       V2, #B2         ; Load 178 into V2
$854    $C94C   RND      V9, #4C         ; V9 = random & 4C
$856    $8CA5   SUB      VC, VA          ; VC -= VA, VF = !borrow
$858    $BD91   JP       V0, $D91        ; Jump to V0 + D91
$85A    $D6FF   DRW      V6, VF, #F      ; Draw 15-byte sprite at V6, VF
$85C    $6800   LD       V8, #00         ; Load 0 into V8
$85E    $3C3C   SE       VC, #3C         ; Skip if VC == 60
$860    $76B0   ADD      V6, #B0         ; Add 176 to V6
$862    $B977   JP       V0, $977        ; Jump to V0 + 977
$864    $EF7B   UNKNOWN  $EF7B           ; Unknown Exxx instruction
$866    $DA59   DRW      VA, V5, #9      ; Draw 9-byte sprite at VA, V5
$868    $5F4E   UNKNOWN  $5F4E           ; Unknown 5xxx instruction
$86A    $81D4   ADD      V1, VD          ; V1 += VD, VF = carry
$86C    $81F8   UNKNOWN  81F8            ; Unknown 8xxx instruction
$86E    $9782   UNKNOWN  $9782           ; Unknown 9xxx instruction
$870    $BAC7   JP       V0, $AC7        ; Jump to V0 + AC7
$872    $16A0   JP       $6A0            ; Jump to 6A0
$874    $8C0B   UNKNOWN  8C0B            ; Unknown 8xxx instruction
$876    $D033   DRW      V0, V3, #3      ; Draw 3-byte sprite at V0, V3
$878    $1191   JP       $191            ; Jump to 191
$87A    $4898   SNE      V8, #98         ; Skip if V8 != 152
$87C    $12E6   JP       $2E6            ; Jump to 2E6
$87E    $76A5   ADD      V6, #A5         ; Add 165 to V6
$880    $186D   JP       $86D            ; Jump to 86D
$882    $A2B3   LD       I, $2B3         ; Load 2B3 into I
$884    $C00C   RND      V0, #0C         ; V0 = random & 0C
$886    $3D57   SE       VD, #57         ; Skip if VD == 87
$888    $3117   SE       V1, #17         ; Skip if V1 == 23
$88A    $4B0F   SNE      VB, #0F         ; Skip if VB != 15
$88C    $633B   LD       V3, #3B         ; Load 59 into V3
$88E    $E983   UNKNOWN  $E983           ; Unknown Exxx instruction
$890    $3438   SE       V4, #38         ; Skip if V4 == 56
$892    $6F77   LD       VF, #77         ; Load 119 into VF
$894    $CCC0   RND      VC, #C0         ; VC = random & C0
$896    $71CE   ADD      V1, #CE         ; Add 206 to V1
$898    $4950   SNE      V9, #50         ; Skip if V9 != 80
$89A    $0D56   SYS      $D56            ; System call to D56
$89C    $7F0F   ADD      VF, #0F         ; Add 15 to VF
$89E    $0700   SYS      $700            ; System call to 700
$8A0    $3278   SE       V2, #78         ; Skip if V2 == 120
$8A2    $7A00   ADD      VA, #00         ; Add 0 to VA
$8A4    $8ED1   OR       VE, VD          ; VE |= VD
$8A6    $D794   DRW      V7, V9, #4      ; Draw 4-byte sprite at V7, V9
$8A8    $C465   RND      V4, #65         ; V4 = random & 65
$8AA    $8AB4   ADD      VA, VB          ; VA += VB, VF = carry
$8AC    $92A6   UNKNOWN  $92A6           ; Unknown 9xxx instruction
$8AE    $8869   UNKNOWN  8869            ; Unknown 8xxx instruction
$8B0    $83C7   SUBN     V3, VC          ; V3 = VC - V3, VF = !borrow
$8B2    $5F27   UNKNOWN  $5F27           ; Unknown 5xxx instruction
$8B4    $3D2A   SE       VD, #2A         ; Skip if VD == 42
$8B6    $AE12   LD       I, $E12         ; Load E12 into I
$8B8    $8C2D   UNKNOWN  8C2D            ; Unknown 8xxx instruction
$8BA    $BB0F   JP       V0, $B0F        ; Jump to V0 + B0F
$8BC    $1610   JP       $610            ; Jump to 610
$8BE    $2BFC   CALL     $BFC            ; Call subroutine at BFC
$8C0    $15CE   JP       $5CE            ; Jump to 5CE
$8C2    $372E   SE       V7, #2E         ; Skip if V7 == 46
$8C4    $A310   LD       I, $310         ; Load 310 into I
$8C6    $2C23   CALL     $C23            ; Call subroutine at C23
$8C8    $3DBD   SE       VD, #BD         ; Skip if VD == 189
$8CA    $2AD7   CALL     $AD7            ; Call subroutine at AD7
$8CC    $38EA   SE       V8, #EA         ; Skip if V8 == 234
$8CE    $7DBD   ADD      VD, #BD         ; Add 189 to VD
$8D0    $866D   UNKNOWN  866D            ; Unknown 8xxx instruction
$8D2    $DE32   DRW      VE, V3, #2      ; Draw 2-byte sprite at VE, V3
$8D4    $7E01   ADD      VE, #01         ; Add 1 to VE
$8D6    $902B   UNKNOWN  $902B           ; Unknown 9xxx instruction
$8D8    $009A   SYS      $09A            ; System call to 09A
$8DA    $EDC8   UNKNOWN  $EDC8           ; Unknown Exxx instruction
$8DC    $0F06   SYS      $F06            ; System call to F06
$8DE    $A1DE   LD       I, $1DE         ; Load 1DE into I
$8E0    $05FF   SYS      $5FF            ; System call to 5FF
$8E2    $675D   LD       V7, #5D         ; Load 93 into V7
$8E4    $6CC7   LD       VC, #C7         ; Load 199 into VC
$8E6    $D90F   DRW      V9, V0, #F      ; Draw 15-byte sprite at V9, V0
$8E8    $E45B   UNKNOWN  $E45B           ; Unknown Exxx instruction
$8EA    $4437   SNE      V4, #37         ; Skip if V4 != 55
$8EC    $37B2   SE       V7, #B2         ; Skip if V7 == 178
$8EE    $DCD9   DRW      VC, VD, #9      ; Draw 9-byte sprite at VC, VD
$8F0    $DFA7   DRW      VF, VA, #7      ; Draw 7-byte sprite at VF, VA
$8F2    $F562   UNKNOWN  F562            ; Unknown Fxxx instruction
$8F4    $2C38   CALL     $C38            ; Call subroutine at C38
$8F6    $027F   SYS      $27F            ; System call to 27F
$8F8    $3F0B   SE       VF, #0B         ; Skip if VF == 11
$8FA    $BB78   JP       V0, $B78        ; Jump to V0 + B78
$8FC    $0622   SYS      $622            ; System call to 622
$8FE    $D014   DRW      V0, V1, #4      ; Draw 4-byte sprite at V0, V1
$900    $E8B8   UNKNOWN  $E8B8           ; Unknown Exxx instruction
$902    $ED34   UNKNOWN  $ED34           ; Unknown Exxx instruction
$904    $91D8   UNKNOWN  $91D8           ; Unknown 9xxx instruction
$906    $3C96   SE       VC, #96         ; Skip if VC == 150
$908    $6558   LD       V5, #58         ; Load 88 into V5
$90A    $55FF   UNKNOWN  $55FF           ; Unknown 5xxx instruction
$90C    $4309   SNE      V3, #09         ; Skip if V3 != 9
$90E    $CAA7   RND      VA, #A7         ; VA = random & A7
$910    $DDAA   DRW      VD, VA, #A      ; Draw 10-byte sprite at VD, VA
$912    $C910   RND      V9, #10         ; V9 = random & 10
$914    $890D   UNKNOWN  890D            ; Unknown 8xxx instruction
$916    $8BF6   SHR      VB              ; VB >>= 1, VF = LSB
$918    $4716   SNE      V7, #16         ; Skip if V7 != 22
$91A    $EE5A   UNKNOWN  $EE5A           ; Unknown Exxx instruction
$91C    $CFF5   RND      VF, #F5         ; VF = random & F5
$91E    $EFBB   UNKNOWN  $EFBB           ; Unknown Exxx instruction
$920    $531E   UNKNOWN  $531E           ; Unknown 5xxx instruction
$922    $A387   LD       I, $387         ; Load 387 into I
$924    $1238   JP       $238            ; Jump to 238
$926    $A342   LD       I, $342         ; Load 342 into I
$928    $D80F   DRW      V8, V0, #F      ; Draw 15-byte sprite at V8, V0
$92A    $8711   OR       V7, V1          ; V7 |= V1
$92C    $EDA2   UNKNOWN  $EDA2           ; Unknown Exxx instruction
$92E    $FF4F   UNKNOWN  FF4F            ; Unknown Fxxx instruction
$930    $3060   SE       V0, #60         ; Skip if V0 == 96
$932    $05CE   SYS      $5CE            ; System call to 5CE
$934    $E904   UNKNOWN  $E904           ; Unknown Exxx instruction
$936    $A0A9   LD       I, $0A9         ; Load 0A9 into I
$938    $679A   LD       V7, #9A         ; Load 154 into V7
$93A    $EB34   UNKNOWN  $EB34           ; Unknown Exxx instruction
$93C    $2500   CALL     $500            ; Call subroutine at 500
$93E    $752F   ADD      V5, #2F         ; Add 47 to V5
$940    $6EE2   LD       VE, #E2         ; Load 226 into VE
$942    $DBDB   DRW      VB, VD, #B      ; Draw 11-byte sprite at VB, VD
$944    $C144   RND      V1, #44         ; V1 = random & 44
$946    $D777   DRW      V7, V7, #7      ; Draw 7-byte sprite at V7, V7
$948    $2111   CALL     $111            ; Call subroutine at 111
$94A    $71C9   ADD      V1, #C9         ; Add 201 to V1
$94C    $F084   UNKNOWN  F084            ; Unknown Fxxx instruction
$94E    $FD7A   UNKNOWN  FD7A            ; Unknown Fxxx instruction
$950    $91BB   UNKNOWN  $91BB           ; Unknown 9xxx instruction
$952    $5449   UNKNOWN  $5449           ; Unknown 5xxx instruction
$954    $B197   JP       V0, $197        ; Jump to V0 + 197
$956    $B483   JP       V0, $483        ; Jump to V0 + 483
$958    $1729   JP       $729            ; Jump to 729
$95A    $84B2   AND      V4, VB          ; V4 &= VB
$95C    $1A7A   JP       $A7A            ; Jump to A7A
$95E    $13F2   JP       $3F2            ; Jump to 3F2
$960    $EAFB   UNKNOWN  $EAFB           ; Unknown Exxx instruction
$962    $4F8B   SNE      VF, #8B         ; Skip if VF != 139
$964    $E858   UNKNOWN  $E858           ; Unknown Exxx instruction
$966    $DED0   DRW      VE, VD, #0      ; Draw 0-byte sprite at VE, VD
$968    $1BD1   JP       $BD1            ; Jump to BD1
$96A    $DC15   DRW      VC, V1, #5      ; Draw 5-byte sprite at VC, V1
$96C    $F4FB   UNKNOWN  F4FB            ; Unknown Fxxx instruction
$96E    $970C   UNKNOWN  $970C           ; Unknown 9xxx instruction
$970    $9832   UNKNOWN  $9832           ; Unknown 9xxx instruction
$972    $D6E5   DRW      V6, VE, #5      ; Draw 5-byte sprite at V6, VE
$974    $F528   UNKNOWN  F528            ; Unknown Fxxx instruction
$976    $4018   SNE      V0, #18         ; Skip if V0 != 24
$978    $31A3   SE       V1, #A3         ; Skip if V1 == 163
$97A    $E8CC   UNKNOWN  $E8CC           ; Unknown Exxx instruction
$97C    $B6F6   JP       V0, $6F6        ; Jump to V0 + 6F6
$97E    $BDE0   JP       V0, $DE0        ; Jump to V0 + DE0
$980    $3DFF   SE       VD, #FF         ; Skip if VD == 255
$982    $7906   ADD      V9, #06         ; Add 6 to V9
$984    $58AB   UNKNOWN  $58AB           ; Unknown 5xxx instruction
$986    $4A21   SNE      VA, #21         ; Skip if VA != 33
$988    $4463   SNE      V4, #63         ; Skip if V4 != 99
$98A    $968B   UNKNOWN  $968B           ; Unknown 9xxx instruction
$98C    $BC11   JP       V0, $C11        ; Jump to V0 + C11
$98E    $7567   ADD      V5, #67         ; Add 103 to V5
$990    $4B3B   SNE      VB, #3B         ; Skip if VB != 59
$992    $1BC0   JP       $BC0            ; Jump to BC0
$994    $6859   LD       V8, #59         ; Load 89 into V8
$996    $853F   UNKNOWN  853F            ; Unknown 8xxx instruction
$998    $B9B7   JP       V0, $9B7        ; Jump to V0 + 9B7
$99A    $C600   RND      V6, #00         ; V6 = random & 00
$99C    $DDB1   DRW      VD, VB, #1      ; Draw 1-byte sprite at VD, VB
$99E    $F626   UNKNOWN  F626            ; Unknown Fxxx instruction
$9A0    $2B55   CALL     $B55            ; Call subroutine at B55
$9A2    $397B   SE       V9, #7B         ; Skip if V9 == 123
$9A4    $12A5   JP       $2A5            ; Jump to 2A5
$9A6    $C6FC   RND      V6, #FC         ; V6 = random & FC
$9A8    $E408   UNKNOWN  $E408           ; Unknown Exxx instruction
$9AA    $FD01   UNKNOWN  FD01            ; Unknown Fxxx instruction
$9AC    $4FF5   SNE      VF, #F5         ; Skip if VF != 245
$9AE    $261E   CALL     $61E            ; Call subroutine at 61E
$9B0    $5A59   UNKNOWN  $5A59           ; Unknown 5xxx instruction
$9B2    $0F34   SYS      $F34            ; System call to F34
$9B4    $A5FF   LD       I, $5FF         ; Load 5FF into I
$9B6    $9965   UNKNOWN  $9965           ; Unknown 9xxx instruction
$9B8    $A72C   LD       I, $72C         ; Load 72C into I
$9BA    $FF3E   UNKNOWN  FF3E            ; Unknown Fxxx instruction
$9BC    $9FD7   UNKNOWN  $9FD7           ; Unknown 9xxx instruction
$9BE    $4C84   SNE      VC, #84         ; Skip if VC != 132
$9C0    $1652   JP       $652            ; Jump to 652
$9C2    $9D79   UNKNOWN  $9D79           ; Unknown 9xxx instruction
$9C4    $EE95   UNKNOWN  $EE95           ; Unknown Exxx instruction
$9C6    $5917   UNKNOWN  $5917           ; Unknown 5xxx instruction
$9C8    $E3A7   UNKNOWN  $E3A7           ; Unknown Exxx instruction
$9CA    $C7EB   RND      V7, #EB         ; V7 = random & EB
$9CC    $DB69   DRW      VB, V6, #9      ; Draw 9-byte sprite at VB, V6
$9CE    $4540   SNE      V5, #40         ; Skip if V5 != 64
$9D0    $063E   SYS      $63E            ; System call to 63E
$9D2    $1712   JP       $712            ; Jump to 712
$9D4    $366A   SE       V6, #6A         ; Skip if V6 == 106
$9D6    $0595   SYS      $595            ; System call to 595
$9D8    $2C2B   CALL     $C2B            ; Call subroutine at C2B
$9DA    $E4D7   UNKNOWN  $E4D7           ; Unknown Exxx instruction
$9DC    $6C48   LD       VC, #48         ; Load 72 into VC
$9DE    $EF2E   UNKNOWN  $EF2E           ; Unknown Exxx instruction
$9E0    $DF12   DRW      VF, V1, #2      ; Draw 2-byte sprite at VF, V1
$9E2    $7A24   ADD      VA, #24         ; Add 36 to VA
$9E4    $649C   LD       V4, #9C         ; Load 156 into V4
$9E6    $CE41   RND      VE, #41         ; VE = random & 41
$9E8    $701C   ADD      V0, #1C         ; Add 28 to V0
$9EA    $B4BB   JP       V0, $4BB        ; Jump to V0 + 4BB
$9EC    $5321   UNKNOWN  $5321           ; Unknown 5xxx instruction
$9EE    $840F   UNKNOWN  840F            ; Unknown 8xxx instruction
$9F0    $1B10   JP       $B10            ; Jump to B10
$9F2    $C258   RND      V2, #58         ; V2 = random & 58
$9F4    $AB22   LD       I, $B22         ; Load B22 into I
$9F6    $34FA   SE       V4, #FA         ; Skip if V4 == 250
$9F8    $BCC2   JP       V0, $CC2        ; Jump to V0 + CC2
$9FA    $92FE   UNKNOWN  $92FE           ; Unknown 9xxx instruction
$9FC    $4B21   SNE      VB, #21         ; Skip if VB != 33
$9FE    $F16F   UNKNOWN  F16F            ; Unknown Fxxx instruction
$A00    $4824   SNE      V8, #24         ; Skip if V8 != 36
$A02    $FDFD   UNKNOWN  FDFD            ; Unknown Fxxx instruction
$A04    $B89E   JP       V0, $89E        ; Jump to V0 + 89E
$A06    $1E4E   JP       $E4E            ; Jump to E4E
$A08    $2623   CALL     $623            ; Call subroutine at 623
$A0A    $970B   UNKNOWN  $970B           ; Unknown 9xxx instruction
$A0C    $4F1C   SNE      VF, #1C         ; Skip if VF != 28
$A0E    $D68E   DRW      V6, V8, #E      ; Draw 14-byte sprite at V6, V8
$A10    $59E5   UNKNOWN  $59E5           ; Unknown 5xxx instruction
$A12    $9533   UNKNOWN  $9533           ; Unknown 9xxx instruction
$A14    $F42D   UNKNOWN  F42D            ; Unknown Fxxx instruction
$A16    $6A37   LD       VA, #37         ; Load 55 into VA
$A18    $B7E2   JP       V0, $7E2        ; Jump to V0 + 7E2
$A1A    $0C46   SYS      $C46            ; System call to C46
$A1C    $1587   JP       $587            ; Jump to 587
$A1E    $2D87   CALL     $D87            ; Call subroutine at D87
$A20    $0060   SYS      $060            ; System call to 060
$A22    $E55C   UNKNOWN  $E55C           ; Unknown Exxx instruction
$A24    $BB12   JP       V0, $B12        ; Jump to V0 + B12
$A26    $51FA   UNKNOWN  $51FA           ; Unknown 5xxx instruction
$A28    $7704   ADD      V7, #04         ; Add 4 to V7
$A2A    $79DB   ADD      V9, #DB         ; Add 219 to V9
$A2C    $95B3   UNKNOWN  $95B3           ; Unknown 9xxx instruction
$A2E    $78C8   ADD      V8, #C8         ; Add 200 to V8
$A30    $065C   SYS      $65C            ; System call to 65C
$A32    $5B7A   UNKNOWN  $5B7A           ; Unknown 5xxx instruction
$A34    $013B   SYS      $13B            ; System call to 13B
$A36    $7353   ADD      V3, #53         ; Add 83 to V3
$A38    $AF62   LD       I, $F62         ; Load F62 into I
$A3A    $647F   LD       V4, #7F         ; Load 127 into V4
$A3C    $2229   CALL     $229            ; Call subroutine at 229
$A3E    $B74E   JP       V0, $74E        ; Jump to V0 + 74E
$A40    $421A   SNE      V2, #1A         ; Skip if V2 != 26
$A42    $5E13   UNKNOWN  $5E13           ; Unknown 5xxx instruction
$A44    $7F85   ADD      VF, #85         ; Add 133 to VF
$A46    $B070   JP       V0, $070        ; Jump to V0 + 070
$A48    $213C   CALL     $13C            ; Call subroutine at 13C
$A4A    $0DF0   SYS      $DF0            ; System call to DF0
$A4C    $225A   CALL     $25A            ; Call subroutine at 25A
$A4E    $B5CD   JP       V0, $5CD        ; Jump to V0 + 5CD
$A50    $48F3   SNE      V8, #F3         ; Skip if V8 != 243
$A52    $E118   UNKNOWN  $E118           ; Unknown Exxx instruction
$A54    $FA6B   UNKNOWN  FA6B            ; Unknown Fxxx instruction
$A56    $1870   JP       $870            ; Jump to 870
$A58    $62F1   LD       V2, #F1         ; Load 241 into V2
$A5A    $22DB   CALL     $2DB            ; Call subroutine at 2DB
$A5C    $D8EE   DRW      V8, VE, #E      ; Draw 14-byte sprite at V8, VE
$A5E    $B333   JP       V0, $333        ; Jump to V0 + 333
$A60    $8BDA   UNKNOWN  8BDA            ; Unknown 8xxx instruction
$A62    $303D   SE       V0, #3D         ; Skip if V0 == 61
$A64    $651D   LD       V5, #1D         ; Load 29 into V5
$A66    $4E6E   SNE      VE, #6E         ; Skip if VE != 110
$A68    $E820   UNKNOWN  $E820           ; Unknown Exxx instruction
$A6A    $CC2B   RND      VC, #2B         ; VC = random & 2B
$A6C    $3B8F   SE       VB, #8F         ; Skip if VB == 143
$A6E    $4025   SNE      V0, #25         ; Skip if V0 != 37
$A70    $6C0A   LD       VC, #0A         ; Load 10 into VC
$A72    $BC47   JP       V0, $C47        ; Jump to V0 + C47
$A74    $9A94   UNKNOWN  $9A94           ; Unknown 9xxx instruction
$A76    $909B   UNKNOWN  $909B           ; Unknown 9xxx instruction
$A78    $3CBF   SE       VC, #BF         ; Skip if VC == 191
$A7A    $8B96   SHR      VB              ; VB >>= 1, VF = LSB
$A7C    $3868   SE       V8, #68         ; Skip if V8 == 104
$A7E    $4385   SNE      V3, #85         ; Skip if V3 != 133
$A80    $0BD5   SYS      $BD5            ; System call to BD5
$A82    $7E96   ADD      VE, #96         ; Add 150 to VE
$A84    $861D   UNKNOWN  861D            ; Unknown 8xxx instruction
$A86    $CEE6   RND      VE, #E6         ; VE = random & E6
$A88    $B9E4   JP       V0, $9E4        ; Jump to V0 + 9E4
$A8A    $A3F3   LD       I, $3F3         ; Load 3F3 into I
$A8C    $02AD   SYS      $2AD            ; System call to 2AD
$A8E    $3FC7   SE       VF, #C7         ; Skip if VF == 199
$A90    $F407   LD       V4, DT          ; V4 = delay timer
$A92    $B286   JP       V0, $286        ; Jump to V0 + 286
$A94    $8A49   UNKNOWN  8A49            ; Unknown 8xxx instruction
$A96    $266B   CALL     $66B            ; Call subroutine at 66B
$A98    $9D97   UNKNOWN  $9D97           ; Unknown 9xxx instruction
$A9A    $504C   UNKNOWN  $504C           ; Unknown 5xxx instruction
$A9C    $EC09   UNKNOWN  $EC09           ; Unknown Exxx instruction
$A9E    $F00A   LD       V0, K           ; Wait for key press, store in V0
$AA0    $5F17   UNKNOWN  $5F17           ; Unknown 5xxx instruction
$AA2    $D579   DRW      V5, V7, #9      ; Draw 9-byte sprite at V5, V7
$AA4    $8EA3   XOR      VE, VA          ; VE ^= VA
$AA6    $6589   LD       V5, #89         ; Load 137 into V5
$AA8    $A655   LD       I, $655         ; Load 655 into I
$AAA    $42FD   SNE      V2, #FD         ; Skip if V2 != 253
$AAC    $5ABF   UNKNOWN  $5ABF           ; Unknown 5xxx instruction
$AAE    $BB56   JP       V0, $B56        ; Jump to V0 + B56
$AB0    $D044   DRW      V0, V4, #4      ; Draw 4-byte sprite at V0, V4
$AB2    $9B05   UNKNOWN  $9B05           ; Unknown 9xxx instruction
$AB4    $8294   ADD      V2, V9          ; V2 += V9, VF = carry
$AB6    $1BE4   JP       $BE4            ; Jump to BE4
$AB8    $C405   RND      V4, #05         ; V4 = random & 05
$ABA    $DBE1   DRW      VB, VE, #1      ; Draw 1-byte sprite at VB, VE
$ABC    $EDEC   UNKNOWN  $EDEC           ; Unknown Exxx instruction
$ABE    $4E42   SNE      VE, #42         ; Skip if VE != 66
$AC0    $1363   JP       $363            ; Jump to 363
$AC2    $2111   CALL     $111            ; Call subroutine at 111
$AC4    $CBC3   RND      VB, #C3         ; VB = random & C3
$AC6    $5560   SE       V5, V6          ; Skip if V5 == V6
$AC8    $5D2E   UNKNOWN  $5D2E           ; Unknown 5xxx instruction
$ACA    $4512   SNE      V5, #12         ; Skip if V5 != 18
$ACC    $681B   LD       V8, #1B         ; Load 27 into V8
$ACE    $0CCE   SYS      $CCE            ; System call to CCE
$AD0    $BBA1   JP       V0, $BA1        ; Jump to V0 + BA1
$AD2    $48A7   SNE      V8, #A7         ; Skip if V8 != 167
$AD4    $523D   UNKNOWN  $523D           ; Unknown 5xxx instruction
$AD6    $916B   UNKNOWN  $916B           ; Unknown 9xxx instruction
$AD8    $A765   LD       I, $765         ; Load 765 into I
$ADA    $5F7F   UNKNOWN  $5F7F           ; Unknown 5xxx instruction
$ADC    $6349   LD       V3, #49         ; Load 73 into V3
$ADE    $90FF   UNKNOWN  $90FF           ; Unknown 9xxx instruction
$AE0    $6790   LD       V7, #90         ; Load 144 into V7
$AE2    $B611   JP       V0, $611        ; Jump to V0 + 611
$AE4    $DAE0   DRW      VA, VE, #0      ; Draw 0-byte sprite at VA, VE
$AE6    $DD00   DRW      VD, V0, #0      ; Draw 0-byte sprite at VD, V0
$AE8    $DED3   DRW      VE, VD, #3      ; Draw 3-byte sprite at VE, VD
$AEA    $8294   ADD      V2, V9          ; V2 += V9, VF = carry
$AEC    $BC53   JP       V0, $C53        ; Jump to V0 + C53
$AEE    $252C   CALL     $52C            ; Call subroutine at 52C
$AF0    $8046   SHR      V0              ; V0 >>= 1, VF = LSB
$AF2    $FA67   UNKNOWN  FA67            ; Unknown Fxxx instruction
$AF4    $9450   SNE      V4, V5          ; Skip if V4 != V5
$AF6    $BE1B   JP       V0, $E1B        ; Jump to V0 + E1B
$AF8    $AB0D   LD       I, $B0D         ; Load B0D into I
$AFA    $96E0   SNE      V6, VE          ; Skip if V6 != VE
$AFC    $3B7E   SE       VB, #7E         ; Skip if VB == 126
$AFE    $8CDC   UNKNOWN  8CDC            ; Unknown 8xxx instruction
$B00    $52D4   UNKNOWN  $52D4           ; Unknown 5xxx instruction
$B02    $F402   UNKNOWN  F402            ; Unknown Fxxx instruction
$B04    $3F7E   SE       VF, #7E         ; Skip if VF == 126
$B06    $F49B   UNKNOWN  F49B            ; Unknown Fxxx instruction
$B08    $3B80   SE       VB, #80         ; Skip if VB == 128
$B0A    $B761   JP       V0, $761        ; Jump to V0 + 761
$B0C    $08E7   SYS      $8E7            ; System call to 8E7
$B0E    $C5D1   RND      V5, #D1         ; V5 = random & D1
$B10    $52BD   UNKNOWN  $52BD           ; Unknown 5xxx instruction
$B12    $C725   RND      V7, #25         ; V7 = random & 25
$B14    $9DAE   UNKNOWN  $9DAE           ; Unknown 9xxx instruction
$B16    $D902   DRW      V9, V0, #2      ; Draw 2-byte sprite at V9, V0
$B18    $D025   DRW      V0, V2, #5      ; Draw 5-byte sprite at V0, V2
$B1A    $1D89   JP       $D89            ; Jump to D89
$B1C    $C4E5   RND      V4, #E5         ; V4 = random & E5
$B1E    $EB89   UNKNOWN  $EB89           ; Unknown Exxx instruction
$B20    $363D   SE       V6, #3D         ; Skip if V6 == 61
$B22    $1A4D   JP       $A4D            ; Jump to A4D
$B24    $EF93   UNKNOWN  $EF93           ; Unknown Exxx instruction
$B26    $262C   CALL     $62C            ; Call subroutine at 62C
$B28    $C0A8   RND      V0, #A8         ; V0 = random & A8
$B2A    $C867   RND      V8, #67         ; V8 = random & 67
$B2C    $12DE   JP       $2DE            ; Jump to 2DE
$B2E    $3A34   SE       VA, #34         ; Skip if VA == 52
$B30    $26A9   CALL     $6A9            ; Call subroutine at 6A9
$B32    $6F19   LD       VF, #19         ; Load 25 into VF
$B34    $66F1   LD       V6, #F1         ; Load 241 into V6
$B36    $4EA4   SNE      VE, #A4         ; Skip if VE != 164
$B38    $9618   UNKNOWN  $9618           ; Unknown 9xxx instruction
$B3A    $6D5F   LD       VD, #5F         ; Load 95 into VD
$B3C    $CC9F   RND      VC, #9F         ; VC = random & 9F
$B3E    $8428   UNKNOWN  8428            ; Unknown 8xxx instruction
$B40    $898B   UNKNOWN  898B            ; Unknown 8xxx instruction
$B42    $77B0   ADD      V7, #B0         ; Add 176 to V7
$B44    $DBCB   DRW      VB, VC, #B      ; Draw 11-byte sprite at VB, VC
$B46    $0969   SYS      $969            ; System call to 969
$B48    $17BC   JP       $7BC            ; Jump to 7BC
$B4A    $27AD   CALL     $7AD            ; Call subroutine at 7AD
$B4C    $F770   UNKNOWN  F770            ; Unknown Fxxx instruction
$B4E    $02A1   SYS      $2A1            ; System call to 2A1
$B50    $5270   SE       V2, V7          ; Skip if V2 == V7
$B52    $2426   CALL     $426            ; Call subroutine at 426
$B54    $658F   LD       V5, #8F         ; Load 143 into V5
$B56    $830E   SHL      V3              ; V3 <<= 1, VF = MSB
$B58    $DCEC   DRW      VC, VE, #C      ; Draw 12-byte sprite at VC, VE
$B5A    $C660   RND      V6, #60         ; V6 = random & 60
$B5C    $AEBC   LD       I, $EBC         ; Load EBC into I
$B5E    $F8AB   UNKNOWN  F8AB            ; Unknown Fxxx instruction
$B60    $8535   SUB      V5, V3          ; V5 -= V3, VF = !borrow
$B62    $0733   SYS      $733            ; System call to 733
$B64    $D4BB   DRW      V4, VB, #B      ; Draw 11-byte sprite at V4, VB
$B66    $142A   JP       $42A            ; Jump to 42A
$B68    $F4A0   UNKNOWN  F4A0            ; Unknown Fxxx instruction
$B6A    $5B5A   UNKNOWN  $5B5A           ; Unknown 5xxx instruction
$B6C    $B825   JP       V0, $825        ; Jump to V0 + 825
$B6E    $F06A   UNKNOWN  F06A            ; Unknown Fxxx instruction
$B70    $9BCF   UNKNOWN  $9BCF           ; Unknown 9xxx instruction
$B72    $1123   JP       $123            ; Jump to 123
$B74    $2FE5   CALL     $FE5            ; Call subroutine at FE5
$B76    $49AC   SNE      V9, #AC         ; Skip if V9 != 172
$B78    $2931   CALL     $931            ; Call subroutine at 931
$B7A    $37A7   SE       V7, #A7         ; Skip if V7 == 167
$B7C    $265F   CALL     $65F            ; Call subroutine at 65F
$B7E    $84EC   UNKNOWN  84EC            ; Unknown 8xxx instruction
$B80    $2ACC   CALL     $ACC            ; Call subroutine at ACC
$B82    $6995   LD       V9, #95         ; Load 149 into V9
$B84    $6A9A   LD       VA, #9A         ; Load 154 into VA
$B86    $BEC6   JP       V0, $EC6        ; Jump to V0 + EC6
$B88    $48B2   SNE      V8, #B2         ; Skip if V8 != 178
$B8A    $0397   SYS      $397            ; System call to 397
$B8C    $607B   LD       V0, #7B         ; Load 123 into V0
$B8E    $E546   UNKNOWN  $E546           ; Unknown Exxx instruction
$B90    $0F2E   SYS      $F2E            ; System call to F2E
$B92    $CD03   RND      VD, #03         ; VD = random & 03
$B94    $249B   CALL     $49B            ; Call subroutine at 49B
$B96    $8EC1   OR       VE, VC          ; VE |= VC
$B98    $8C9D   UNKNOWN  8C9D            ; Unknown 8xxx instruction
$B9A    $7059   ADD      V0, #59         ; Add 89 to V0
$B9C    $3D4A   SE       VD, #4A         ; Skip if VD == 74
$B9E    $D129   DRW      V1, V2, #9      ; Draw 9-byte sprite at V1, V2
$BA0    $D1A9   DRW      V1, VA, #9      ; Draw 9-byte sprite at V1, VA
$BA2    $9B53   UNKNOWN  $9B53           ; Unknown 9xxx instruction
$BA4    $8860   LD       V8, V6          ; V8 = V6
$BA6    $11F7   JP       $1F7            ; Jump to 1F7
$BA8    $DF96   DRW      VF, V9, #6      ; Draw 6-byte sprite at VF, V9
$BAA    $4D98   SNE      VD, #98         ; Skip if VD != 152
$BAC    $9977   UNKNOWN  $9977           ; Unknown 9xxx instruction
$BAE    $876B   UNKNOWN  876B            ; Unknown 8xxx instruction
$BB0    $A08D   LD       I, $08D         ; Load 08D into I
$BB2    $6965   LD       V9, #65         ; Load 101 into V9
$BB4    $E858   UNKNOWN  $E858           ; Unknown Exxx instruction
$BB6    $5F0A   UNKNOWN  $5F0A           ; Unknown 5xxx instruction
$BB8    $07F7   SYS      $7F7            ; System call to 7F7
$BBA    $F6ED   UNKNOWN  F6ED            ; Unknown Fxxx instruction
$BBC    $8A6D   UNKNOWN  8A6D            ; Unknown 8xxx instruction
$BBE    $3703   SE       V7, #03         ; Skip if V7 == 3
$BC0    $593C   UNKNOWN  $593C           ; Unknown 5xxx instruction
$BC2    $932D   UNKNOWN  $932D           ; Unknown 9xxx instruction
$BC4    $7296   ADD      V2, #96         ; Add 150 to V2
$BC6    $EE02   UNKNOWN  $EE02           ; Unknown Exxx instruction
$BC8    $CD08   RND      VD, #08         ; VD = random & 08
$BCA    $D60B   DRW      V6, V0, #B      ; Draw 11-byte sprite at V6, V0
$BCC    $7E7A   ADD      VE, #7A         ; Add 122 to VE
$BCE    $8853   XOR      V8, V5          ; V8 ^= V5
$BD0    $E70D   UNKNOWN  $E70D           ; Unknown Exxx instruction
$BD2    $8F39   UNKNOWN  8F39            ; Unknown 8xxx instruction
$BD4    $44D6   SNE      V4, #D6         ; Skip if V4 != 214
$BD6    $AAFE   LD       I, $AFE         ; Load AFE into I
$BD8    $01AF   SYS      $1AF            ; System call to 1AF
$BDA    $623E   LD       V2, #3E         ; Load 62 into V2
$BDC    $DC3B   DRW      VC, V3, #B      ; Draw 11-byte sprite at VC, V3
$BDE    $0D1F   SYS      $D1F            ; System call to D1F
$BE0    $20CC   CALL     $0CC            ; Call subroutine at 0CC
$BE2    $0191   SYS      $191            ; System call to 191
$BE4    $FF54   UNKNOWN  FF54            ; Unknown Fxxx instruction
$BE6    $DEAD   DRW      VE, VA, #D      ; Draw 13-byte sprite at VE, VA
$BE8    $7224   ADD      V2, #24         ; Add 36 to V2
$BEA    $567A   UNKNOWN  $567A           ; Unknown 5xxx instruction
$BEC    $FE27   UNKNOWN  FE27            ; Unknown Fxxx instruction
$BEE    $CD28   RND      VD, #28         ; VD = random & 28
$BF0    $B0DB   JP       V0, $0DB        ; Jump to V0 + 0DB
$BF2    $70E8   ADD      V0, #E8         ; Add 232 to V0
$BF4    $7C83   ADD      VC, #83         ; Add 131 to VC
$BF6    $4A43   SNE      VA, #43         ; Skip if VA != 67
$BF8    $3624   SE       V6, #24         ; Skip if V6 == 36
$BFA    $959F   UNKNOWN  $959F           ; Unknown 9xxx instruction
$BFC    $E23C   UNKNOWN  $E23C           ; Unknown Exxx instruction
$BFE    $B78B   JP       V0, $78B        ; Jump to V0 + 78B
$C00    $CA3D   RND      VA, #3D         ; VA = random & 3D
$C02    $7849   ADD      V8, #49         ; Add 73 to V8
$C04    $8BF5   SUB      VB, VF          ; VB -= VF, VF = !borrow
$C06    $3E75   SE       VE, #75         ; Skip if VE == 117
$C08    $1E2D   JP       $E2D            ; Jump to E2D
$C0A    $ABFF   LD       I, $BFF         ; Load BFF into I
$C0C    $84AB   UNKNOWN  84AB            ; Unknown 8xxx instruction
$C0E    $FF92   UNKNOWN  FF92            ; Unknown Fxxx instruction
$C10    $C9A7   RND      V9, #A7         ; V9 = random & A7
$C12    $8CA4   ADD      VC, VA          ; VC += VA, VF = carry
$C14    $B303   JP       V0, $303        ; Jump to V0 + 303
$C16    $9CBA   UNKNOWN  $9CBA           ; Unknown 9xxx instruction
$C18    $21D3   CALL     $1D3            ; Call subroutine at 1D3
$C1A    $6F5E   LD       VF, #5E         ; Load 94 into VF
$C1C    $8CFA   UNKNOWN  8CFA            ; Unknown 8xxx instruction
$C1E    $0791   SYS      $791            ; System call to 791
$C20    $B225   JP       V0, $225        ; Jump to V0 + 225
$C22    $16E0   JP       $6E0            ; Jump to 6E0
$C24    $C21F   RND      V2, #1F         ; V2 = random & 1F
$C26    $A2FD   LD       I, $2FD         ; Load 2FD into I
$C28    $A125   LD       I, $125         ; Load 125 into I
$C2A    $72D5   ADD      V2, #D5         ; Add 213 to V2
$C2C    $ECCB   UNKNOWN  $ECCB           ; Unknown Exxx instruction
$C2E    $7972   ADD      V9, #72         ; Add 114 to V9
$C30    $8FE0   LD       VF, VE          ; VF = VE
$C32    $9604   UNKNOWN  $9604           ; Unknown 9xxx instruction
$C34    $B99E   JP       V0, $99E        ; Jump to V0 + 99E
$C36    $9ED5   UNKNOWN  $9ED5           ; Unknown 9xxx instruction
$C38    $BCBF   JP       V0, $CBF        ; Jump to V0 + CBF
$C3A    $E334   UNKNOWN  $E334           ; Unknown Exxx instruction
$C3C    $8F87   SUBN     VF, V8          ; VF = V8 - VF, VF = !borrow
$C3E    $8CDC   UNKNOWN  8CDC            ; Unknown 8xxx instruction
$C40    $3809   SE       V8, #09         ; Skip if V8 == 9
$C42    $66AD   LD       V6, #AD         ; Load 173 into V6
$C44    $083E   SYS      $83E            ; System call to 83E
$C46    $D312   DRW      V3, V1, #2      ; Draw 2-byte sprite at V3, V1
$C48    $0D22   SYS      $D22            ; System call to D22
$C4A    $A705   LD       I, $705         ; Load 705 into I
$C4C    $648E   LD       V4, #8E         ; Load 142 into V4
$C4E    $F932   UNKNOWN  F932            ; Unknown Fxxx instruction
$C50    $23B1   CALL     $3B1            ; Call subroutine at 3B1
$C52    $72EF   ADD      V2, #EF         ; Add 239 to V2
$C54    $ADC0   LD       I, $DC0         ; Load DC0 into I
$C56    $1CB3   JP       $CB3            ; Jump to CB3
$C58    $4322   SNE      V3, #22         ; Skip if V3 != 34
$C5A    $B80C   JP       V0, $80C        ; Jump to V0 + 80C
$C5C    $1E1C   JP       $E1C            ; Jump to E1C
$C5E    $4246   SNE      V2, #46         ; Skip if V2 != 70
$C60    $01C1   SYS      $1C1            ; System call to 1C1
$C62    $6D54   LD       VD, #54         ; Load 84 into VD
$C64    $B320   JP       V0, $320        ; Jump to V0 + 320
$C66    $1225   JP       $225            ; Jump to 225
$C68    $C137   RND      V1, #37         ; V1 = random & 37
$C6A    $63FF   LD       V3, #FF         ; Load 255 into V3
$C6C    $297A   CALL     $97A            ; Call subroutine at 97A
$C6E    $0635   SYS      $635            ; System call to 635
$C70    $C3F2   RND      V3, #F2         ; V3 = random & F2
$C72    $0479   SYS      $479            ; System call to 479
$C74    $F404   UNKNOWN  F404            ; Unknown Fxxx instruction
$C76    $F622   UNKNOWN  F622            ; Unknown Fxxx instruction
$C78    $D0F0   DRW      V0, VF, #0      ; Draw 0-byte sprite at V0, VF
$C7A    $B156   JP       V0, $156        ; Jump to V0 + 156
$C7C    $D053   DRW      V0, V5, #3      ; Draw 3-byte sprite at V0, V5
$C7E    $FA49   UNKNOWN  FA49            ; Unknown Fxxx instruction
$C80    $C211   RND      V2, #11         ; V2 = random & 11
$C82    $C7AE   RND      V7, #AE         ; V7 = random & AE
$C84    $EAD3   UNKNOWN  $EAD3           ; Unknown Exxx instruction
$C86    $BA75   JP       V0, $A75        ; Jump to V0 + A75
$C88    $72B4   ADD      V2, #B4         ; Add 180 to V2
$C8A    $4923   SNE      V9, #23         ; Skip if V9 != 35
$C8C    $E75A   UNKNOWN  $E75A           ; Unknown Exxx instruction
$C8E    $D117   DRW      V1, V1, #7      ; Draw 7-byte sprite at V1, V1
$C90    $A3B3   LD       I, $3B3         ; Load 3B3 into I
$C92    $B7A9   JP       V0, $7A9        ; Jump to V0 + 7A9
$C94    $3F3E   SE       VF, #3E         ; Skip if VF == 62
$C96    $D353   DRW      V3, V5, #3      ; Draw 3-byte sprite at V3, V5
$C98    $7FB4   ADD      VF, #B4         ; Add 180 to VF
$C9A    $8476   SHR      V4              ; V4 >>= 1, VF = LSB
$C9C    $78BC   ADD      V8, #BC         ; Add 188 to V8
$C9E    $774E   ADD      V7, #4E         ; Add 78 to V7
$CA0    $C910   RND      V9, #10         ; V9 = random & 10
$CA2    $6B2B   LD       VB, #2B         ; Load 43 into VB
$CA4    $2B34   CALL     $B34            ; Call subroutine at B34
$CA6    $8AD1   OR       VA, VD          ; VA |= VD
$CA8    $EF7C   UNKNOWN  $EF7C           ; Unknown Exxx instruction
$CAA    $1C34   JP       $C34            ; Jump to C34
$CAC    $D875   DRW      V8, V7, #5      ; Draw 5-byte sprite at V8, V7
$CAE    $D24B   DRW      V2, V4, #B      ; Draw 11-byte sprite at V2, V4
$CB0    $6F76   LD       VF, #76         ; Load 118 into VF
$CB2    $9851   UNKNOWN  $9851           ; Unknown 9xxx instruction
$CB4    $4625   SNE      V6, #25         ; Skip if V6 != 37
$CB6    $F0AE   UNKNOWN  F0AE            ; Unknown Fxxx instruction
$CB8    $FC42   UNKNOWN  FC42            ; Unknown Fxxx instruction
$CBA    $F647   UNKNOWN  F647            ; Unknown Fxxx instruction
$CBC    $1A67   JP       $A67            ; Jump to A67
$CBE    $CF8F   RND      VF, #8F         ; VF = random & 8F
$CC0    $C94C   RND      V9, #4C         ; V9 = random & 4C
$CC2    $BA6C   JP       V0, $A6C        ; Jump to V0 + A6C
$CC4    $5BC8   UNKNOWN  $5BC8           ; Unknown 5xxx instruction
$CC6    $A6CD   LD       I, $6CD         ; Load 6CD into I
$CC8    $3328   SE       V3, #28         ; Skip if V3 == 40
$CCA    $8F0B   UNKNOWN  8F0B            ; Unknown 8xxx instruction
$CCC    $C279   RND      V2, #79         ; V2 = random & 79
$CCE    $A0A2   LD       I, $0A2         ; Load 0A2 into I
$CD0    $7B6D   ADD      VB, #6D         ; Add 109 to VB
$CD2    $9F8D   UNKNOWN  $9F8D           ; Unknown 9xxx instruction
$CD4    $1BAD   JP       $BAD            ; Jump to BAD
$CD6    $7117   ADD      V1, #17         ; Add 23 to V1
$CD8    $37AC   SE       V7, #AC         ; Skip if V7 == 172
$CDA    $08BA   SYS      $8BA            ; System call to 8BA
$CDC    $4483   SNE      V4, #83         ; Skip if V4 != 131
$CDE    $4F9E   SNE      VF, #9E         ; Skip if VF != 158
$CE0    $4200   SNE      V2, #00         ; Skip if V2 != 0
$CE2    $B365   JP       V0, $365        ; Jump to V0 + 365
$CE4    $9143   UNKNOWN  $9143           ; Unknown 9xxx instruction
$CE6    $C3D4   RND      V3, #D4         ; V3 = random & D4
$CE8    $D204   DRW      V2, V0, #4      ; Draw 4-byte sprite at V2, V0
$CEA    $9BFA   UNKNOWN  $9BFA           ; Unknown 9xxx instruction
$CEC    $F82E   UNKNOWN  F82E            ; Unknown Fxxx instruction
$CEE    $34EA   SE       V4, #EA         ; Skip if V4 == 234
$CF0    $8BBF   UNKNOWN  8BBF            ; Unknown 8xxx instruction
$CF2    $915B   UNKNOWN  $915B           ; Unknown 9xxx instruction
$CF4    $6358   LD       V3, #58         ; Load 88 into V3
$CF6    $91A0   SNE      V1, VA          ; Skip if V1 != VA
$CF8    $694E   LD       V9, #4E         ; Load 78 into V9
$CFA    $4B1B   SNE      VB, #1B         ; Skip if VB != 27
$CFC    $AB81   LD       I, $B81         ; Load B81 into I
$CFE    $D96D   DRW      V9, V6, #D      ; Draw 13-byte sprite at V9, V6
$D00    $1ACA   JP       $ACA            ; Jump to ACA
$D02    $E86E   UNKNOWN  $E86E           ; Unknown Exxx instruction
$D04    $F6A2   UNKNOWN  F6A2            ; Unknown Fxxx instruction
$D06    $6EBD   LD       VE, #BD         ; Load 189 into VE
$D08    $CA65   RND      VA, #65         ; VA = random & 65
$D0A    $7D47   ADD      VD, #47         ; Add 71 to VD
$D0C    $6D6C   LD       VD, #6C         ; Load 108 into VD
$D0E    $2332   CALL     $332            ; Call subroutine at 332
$D10    $8EEC   UNKNOWN  8EEC            ; Unknown 8xxx instruction
$D12    $235F   CALL     $35F            ; Call subroutine at 35F
$D14    $0CAF   SYS      $CAF            ; System call to CAF
$D16    $AEE2   LD       I, $EE2         ; Load EE2 into I
$D18    $F125   UNKNOWN  F125            ; Unknown Fxxx instruction
$D1A    $B03E   JP       V0, $03E        ; Jump to V0 + 03E
$D1C    $C0B3   RND      V0, #B3         ; V0 = random & B3
$D1E    $6D5C   LD       VD, #5C         ; Load 92 into VD
$D20    $1019   JP       $019            ; Jump to 019
$D22    $EE56   UNKNOWN  $EE56           ; Unknown Exxx instruction
$D24    $A925   LD       I, $925         ; Load 925 into I
$D26    $28D4   CALL     $8D4            ; Call subroutine at 8D4
$D28    $C84A   RND      V8, #4A         ; V8 = random & 4A
$D2A    $3085   SE       V0, #85         ; Skip if V0 == 133
$D2C    $8045   SUB      V0, V4          ; V0 -= V4, VF = !borrow
$D2E    $2F7C   CALL     $F7C            ; Call subroutine at F7C
$D30    $E797   UNKNOWN  $E797           ; Unknown Exxx instruction
$D32    $D5DB   DRW      V5, VD, #B      ; Draw 11-byte sprite at V5, VD
$D34    $FFBB   UNKNOWN  FFBB            ; Unknown Fxxx instruction
$D36    $7CFF   ADD      VC, #FF         ; Add 255 to VC
$D38    $7987   ADD      V9, #87         ; Add 135 to V9
$D3A    $4FA1   SNE      VF, #A1         ; Skip if VF != 161
$D3C    $9F2F   UNKNOWN  $9F2F           ; Unknown 9xxx instruction
$D3E    $D842   DRW      V8, V4, #2      ; Draw 2-byte sprite at V8, V4
$D40    $9247   UNKNOWN  $9247           ; Unknown 9xxx instruction
$D42    $856D   UNKNOWN  856D            ; Unknown 8xxx instruction
$D44    $14C9   JP       $4C9            ; Jump to 4C9
$D46    $34D3   SE       V4, #D3         ; Skip if V4 == 211
$D48    $7E7D   ADD      VE, #7D         ; Add 125 to VE
$D4A    $D0F5   DRW      V0, VF, #5      ; Draw 5-byte sprite at V0, VF
$D4C    $D31F   DRW      V3, V1, #F      ; Draw 15-byte sprite at V3, V1
$D4E    $0504   SYS      $504            ; System call to 504
$D50    $2399   CALL     $399            ; Call subroutine at 399
$D52    $FACB   UNKNOWN  FACB            ; Unknown Fxxx instruction
$D54    $FE0D   UNKNOWN  FE0D            ; Unknown Fxxx instruction
$D56    $C206   RND      V2, #06         ; V2 = random & 06
$D58    $BE1D   JP       V0, $E1D        ; Jump to V0 + E1D
$D5A    $4DAD   SNE      VD, #AD         ; Skip if VD != 173
$D5C    $A89D   LD       I, $89D         ; Load 89D into I
$D5E    $F895   UNKNOWN  F895            ; Unknown Fxxx instruction
$D60    $7558   ADD      V5, #58         ; Add 88 to V5
$D62    $6DDC   LD       VD, #DC         ; Load 220 into VD
$D64    $EF78   UNKNOWN  $EF78           ; Unknown Exxx instruction
$D66    $E641   UNKNOWN  $E641           ; Unknown Exxx instruction
$D68    $7884   ADD      V8, #84         ; Add 132 to V8
$D6A    $AFFE   LD       I, $FFE         ; Load FFE into I
$D6C    $DA6B   DRW      VA, V6, #B      ; Draw 11-byte sprite at VA, V6
$D6E    $29CC   CALL     $9CC            ; Call subroutine at 9CC
$D70    $496F   SNE      V9, #6F         ; Skip if V9 != 111
$D72    $4D5E   SNE      VD, #5E         ; Skip if VD != 94
$D74    $9188   UNKNOWN  $9188           ; Unknown 9xxx instruction
$D76    $4614   SNE      V6, #14         ; Skip if V6 != 20
$D78    $1DF5   JP       $DF5            ; Jump to DF5
$D7A    $2D2D   CALL     $D2D            ; Call subroutine at D2D
$D7C    $4903   SNE      V9, #03         ; Skip if V9 != 3
$D7E    $D08F   DRW      V0, V8, #F      ; Draw 15-byte sprite at V0, V8
$D80    $31D0   SE       V1, #D0         ; Skip if V1 == 208
$D82    $370B   SE       V7, #0B         ; Skip if V7 == 11
$D84    $AF3A   LD       I, $F3A         ; Load F3A into I
$D86    $5582   UNKNOWN  $5582           ; Unknown 5xxx instruction
$D88    $D445   DRW      V4, V4, #5      ; Draw 5-byte sprite at V4, V4
$D8A    $9BBA   UNKNOWN  $9BBA           ; Unknown 9xxx instruction
$D8C    $5954   UNKNOWN  $5954           ; Unknown 5xxx instruction
$D8E    $673C   LD       V7, #3C         ; Load 60 into V7
$D90    $EE85   UNKNOWN  $EE85           ; Unknown Exxx instruction
$D92    $685D   LD       V8, #5D         ; Load 93 into V8
$D94    $AB99   LD       I, $B99         ; Load B99 into I
$D96    $D27F   DRW      V2, V7, #F      ; Draw 15-byte sprite at V2, V7
$D98    $45CC   SNE      V5, #CC         ; Skip if V5 != 204
$D9A    $2CE1   CALL     $CE1            ; Call subroutine at CE1
$D9C    $15B8   JP       $5B8            ; Jump to 5B8
$D9E    $7C5E   ADD      VC, #5E         ; Add 94 to VC
$DA0    $919E   UNKNOWN  $919E           ; Unknown 9xxx instruction
$DA2    $17CA   JP       $7CA            ; Jump to 7CA
$DA4    $F00A   LD       V0, K           ; Wait for key press, store in V0
$DA6    $097B   SYS      $97B            ; System call to 97B
$DA8    $2821   CALL     $821            ; Call subroutine at 821
$DAA    $72CD   ADD      V2, #CD         ; Add 205 to V2
$DAC    $ED42   UNKNOWN  $ED42           ; Unknown Exxx instruction
$DAE    $F65E   UNKNOWN  F65E            ; Unknown Fxxx instruction
$DB0    $3AF9   SE       VA, #F9         ; Skip if VA == 249
$DB2    $4197   SNE      V1, #97         ; Skip if V1 != 151
$DB4    $3608   SE       V6, #08         ; Skip if V6 == 8
$DB6    $78CA   ADD      V8, #CA         ; Add 202 to V8
$DB8    $6F05   LD       VF, #05         ; Load 5 into VF
$DBA    $4956   SNE      V9, #56         ; Skip if V9 != 86
$DBC    $487F   SNE      V8, #7F         ; Skip if V8 != 127
$DBE    $0E2B   SYS      $E2B            ; System call to E2B
$DC0    $56E5   UNKNOWN  $56E5           ; Unknown 5xxx instruction
$DC2    $AF05   LD       I, $F05         ; Load F05 into I
$DC4    $A8E4   LD       I, $8E4         ; Load 8E4 into I
$DC6    $6358   LD       V3, #58         ; Load 88 into V3
$DC8    $8F24   ADD      VF, V2          ; VF += V2, VF = carry
$DCA    $6E89   LD       VE, #89         ; Load 137 into VE
$DCC    $4C2D   SNE      VC, #2D         ; Skip if VC != 45
$DCE    $0A7E   SYS      $A7E            ; System call to A7E
$DD0    $9D37   UNKNOWN  $9D37           ; Unknown 9xxx instruction
$DD2    $3A3F   SE       VA, #3F         ; Skip if VA == 63
$DD4    $1AD4   JP       $AD4            ; Jump to AD4
$DD6    $6605   LD       V6, #05         ; Load 5 into V6
$DD8    $A1C7   LD       I, $1C7         ; Load 1C7 into I
$DDA    $B8EC   JP       V0, $8EC        ; Jump to V0 + 8EC
$DDC    $C1A8   RND      V1, #A8         ; V1 = random & A8
$DDE    $E329   UNKNOWN  $E329           ; Unknown Exxx instruction
$DE0    $2976   CALL     $976            ; Call subroutine at 976
$DE2    $2FDD   CALL     $FDD            ; Call subroutine at FDD
$DE4    $A5AD   LD       I, $5AD         ; Load 5AD into I
$DE6    $B579   JP       V0, $579        ; Jump to V0 + 579
$DE8    $08D8   SYS      $8D8            ; System call to 8D8
$DEA    $C045   RND      V0, #45         ; V0 = random & 45
$DEC    $6B19   LD       VB, #19         ; Load 25 into VB
$DEE    $0E1F   SYS      $E1F            ; System call to E1F
$DF0    $9A99   UNKNOWN  $9A99           ; Unknown 9xxx instruction
$DF2    $8C79   UNKNOWN  8C79            ; Unknown 8xxx instruction
$DF4    $024C   SYS      $24C            ; System call to 24C
$DF6    $270A   CALL     $70A            ; Call subroutine at 70A
$DF8    $27A3   CALL     $7A3            ; Call subroutine at 7A3
$DFA    $00B0   SYS      $0B0            ; System call to 0B0
$DFC    $33E5   SE       V3, #E5         ; Skip if V3 == 229
$DFE    $A93E   LD       I, $93E         ; Load 93E into I
$E00    $1F61   JP       $F61            ; Jump to F61
$E02    $15A3   JP       $5A3            ; Jump to 5A3
$E04    $1DD1   JP       $DD1            ; Jump to DD1
$E06    $3884   SE       V8, #84         ; Skip if V8 == 132
$E08    $E8B4   UNKNOWN  $E8B4           ; Unknown Exxx instruction
$E0A    $DE64   DRW      VE, V6, #4      ; Draw 4-byte sprite at VE, V6
$E0C    $E4DD   UNKNOWN  $E4DD           ; Unknown Exxx instruction
$E0E    $A4E8   LD       I, $4E8         ; Load 4E8 into I
$E10    $C467   RND      V4, #67         ; V4 = random & 67
$E12    $8608   UNKNOWN  8608            ; Unknown 8xxx instruction
$E14    $DB69   DRW      VB, V6, #9      ; Draw 9-byte sprite at VB, V6
$E16    $0187   SYS      $187            ; System call to 187
$E18    $E626   UNKNOWN  $E626           ; Unknown Exxx instruction
$E1A    $0029   SYS      $029            ; System call to 029
$E1C    $97F6   UNKNOWN  $97F6           ; Unknown 9xxx instruction
$E1E    $AD39   LD       I, $D39         ; Load D39 into I
$E20    $9647   UNKNOWN  $9647           ; Unknown 9xxx instruction
$E22    $D881   DRW      V8, V8, #1      ; Draw 1-byte sprite at V8, V8
$E24    $74E4   ADD      V4, #E4         ; Add 228 to V4
$E26    $F3AF   UNKNOWN  F3AF            ; Unknown Fxxx instruction
$E28    $0E9D   SYS      $E9D            ; System call to E9D
$E2A    $C02A   RND      V0, #2A         ; V0 = random & 2A
$E2C    $6A5A   LD       VA, #5A         ; Load 90 into VA
$E2E    $5B96   UNKNOWN  $5B96           ; Unknown 5xxx instruction
$E30    $19CB   JP       $9CB            ; Jump to 9CB
$E32    $3CA6   SE       VC, #A6         ; Skip if VC == 166
$E34    $3F7D   SE       VF, #7D         ; Skip if VF == 125
$E36    $CCFF   RND      VC, #FF         ; VC = random & FF
$E38    $B68F   JP       V0, $68F        ; Jump to V0 + 68F
$E3A    $740D   ADD      V4, #0D         ; Add 13 to V4
$E3C    $E71E   UNKNOWN  $E71E           ; Unknown Exxx instruction
$E3E    $2CB9   CALL     $CB9            ; Call subroutine at CB9
$E40    $4B7F   SNE      VB, #7F         ; Skip if VB != 127
$E42    $E7B8   UNKNOWN  $E7B8           ; Unknown Exxx instruction
$E44    $8947   SUBN     V9, V4          ; V9 = V4 - V9, VF = !borrow
$E46    $60D6   LD       V0, #D6         ; Load 214 into V0
$E48    $2F64   CALL     $F64            ; Call subroutine at F64
$E4A    $C671   RND      V6, #71         ; V6 = random & 71
$E4C    $7D8D   ADD      VD, #8D         ; Add 141 to VD
$E4E    $46F8   SNE      V6, #F8         ; Skip if V6 != 248
$E50    $36B3   SE       V6, #B3         ; Skip if V6 == 179
$E52    $7E45   ADD      VE, #45         ; Add 69 to VE
$E54    $C83C   RND      V8, #3C         ; V8 = random & 3C
$E56    $6659   LD       V6, #59         ; Load 89 into V6
$E58    $51DA   UNKNOWN  $51DA           ; Unknown 5xxx instruction
$E5A    $2AA7   CALL     $AA7            ; Call subroutine at AA7
$E5C    $5D7B   UNKNOWN  $5D7B           ; Unknown 5xxx instruction
$E5E    $0E52   SYS      $E52            ; System call to E52
$E60    $FB9D   UNKNOWN  FB9D            ; Unknown Fxxx instruction
$E62    $7B1F   ADD      VB, #1F         ; Add 31 to VB
$E64    $2337   CALL     $337            ; Call subroutine at 337
$E66    $0B5C   SYS      $B5C            ; System call to B5C
$E68    $3D11   SE       VD, #11         ; Skip if VD == 17
$E6A    $6EC1   LD       VE, #C1         ; Load 193 into VE
$E6C    $0D87   SYS      $D87            ; System call to D87
$E6E    $FD50   UNKNOWN  FD50            ; Unknown Fxxx instruction
$E70    $6F9F   LD       VF, #9F         ; Load 159 into VF
$E72    $6EDB   LD       VE, #DB         ; Load 219 into VE
$E74    $E2A7   UNKNOWN  $E2A7           ; Unknown Exxx instruction
$E76    $0433   SYS      $433            ; System call to 433
$E78    $8FBC   UNKNOWN  8FBC            ; Unknown 8xxx instruction
$E7A    $0B1B   SYS      $B1B            ; System call to B1B
$E7C    $E86A   UNKNOWN  $E86A           ; Unknown Exxx instruction
$E7E    $1B51   JP       $B51            ; Jump to B51
$E80    $C834   RND      V8, #34         ; V8 = random & 34
$E82    $2227   CALL     $227            ; Call subroutine at 227
$E84    $CD94   RND      VD, #94         ; VD = random & 94
$E86    $07B0   SYS      $7B0            ; System call to 7B0
$E88    $071F   SYS      $71F            ; System call to 71F
$E8A    $7258   ADD      V2, #58         ; Add 88 to V2
$E8C    $F662   UNKNOWN  F662            ; Unknown Fxxx instruction
$E8E    $31C4   SE       V1, #C4         ; Skip if V1 == 196
$E90    $58FC   UNKNOWN  $58FC           ; Unknown 5xxx instruction
$E92    $92AD   UNKNOWN  $92AD           ; Unknown 9xxx instruction
$E94    $77C8   ADD      V7, #C8         ; Add 200 to V7
$E96    $55DA   UNKNOWN  $55DA           ; Unknown 5xxx instruction
$E98    $9E19   UNKNOWN  $9E19           ; Unknown 9xxx instruction
$E9A    $C6C4   RND      V6, #C4         ; V6 = random & C4
$E9C    $0EA7   SYS      $EA7            ; System call to EA7
$E9E    $D90F   DRW      V9, V0, #F      ; Draw 15-byte sprite at V9, V0
$EA0    $5DE7   UNKNOWN  $5DE7           ; Unknown 5xxx instruction
$EA2    $E9AD   UNKNOWN  $E9AD           ; Unknown Exxx instruction
$EA4    $0519   SYS      $519            ; System call to 519
$EA6    $CC52   RND      VC, #52         ; VC = random & 52
$EA8    $836C   UNKNOWN  836C            ; Unknown 8xxx instruction
$EAA    $0055   SYS      $055            ; System call to 055
$EAC    $5BED   UNKNOWN  $5BED           ; Unknown 5xxx instruction
$EAE    $97C7   UNKNOWN  $97C7           ; Unknown 9xxx instruction
$EB0    $6F7B   LD       VF, #7B         ; Load 123 into VF
$EB2    $239E   CALL     $39E            ; Call subroutine at 39E
$EB4    $668F   LD       V6, #8F         ; Load 143 into V6
$EB6    $DF7E   DRW      VF, V7, #E      ; Draw 14-byte sprite at VF, V7
$EB8    $9539   UNKNOWN  $9539           ; Unknown 9xxx instruction
$EBA    $02F5   SYS      $2F5            ; System call to 2F5
$EBC    $47E0   SNE      V7, #E0         ; Skip if V7 != 224
$EBE    $2C6F   CALL     $C6F            ; Call subroutine at C6F
$EC0    $2D48   CALL     $D48            ; Call subroutine at D48
$EC2    $12F3   JP       $2F3            ; Jump to 2F3
$EC4    $322C   SE       V2, #2C         ; Skip if V2 == 44
$EC6    $73B4   ADD      V3, #B4         ; Add 180 to V3
$EC8    $BA8C   JP       V0, $A8C        ; Jump to V0 + A8C
$ECA    $50CC   UNKNOWN  $50CC           ; Unknown 5xxx instruction
$ECC    $AE02   LD       I, $E02         ; Load E02 into I
$ECE    $CB19   RND      VB, #19         ; VB = random & 19
$ED0    $4FD4   SNE      VF, #D4         ; Skip if VF != 212
$ED2    $3F0C   SE       VF, #0C         ; Skip if VF == 12
$ED4    $5F52   UNKNOWN  $5F52           ; Unknown 5xxx instruction
$ED6    $0621   SYS      $621            ; System call to 621
$ED8    $AE94   LD       I, $E94         ; Load E94 into I
$EDA    $A0B1   LD       I, $0B1         ; Load 0B1 into I
$EDC    $EA23   UNKNOWN  $EA23           ; Unknown Exxx instruction
$EDE    $03B8   SYS      $3B8            ; System call to 3B8
$EE0    $7748   ADD      V7, #48         ; Add 72 to V7
$EE2    $E14E   UNKNOWN  $E14E           ; Unknown Exxx instruction
$EE4    $0D6F   SYS      $D6F            ; System call to D6F
$EE6    $BE93   JP       V0, $E93        ; Jump to V0 + E93
$EE8    $56F4   UNKNOWN  $56F4           ; Unknown 5xxx instruction
$EEA    $A447   LD       I, $447         ; Load 447 into I
$EEC    $B468   JP       V0, $468        ; Jump to V0 + 468
$EEE    $15EB   JP       $5EB            ; Jump to 5EB
$EF0    $34DF   SE       V4, #DF         ; Skip if V4 == 223
$EF2    $9E60   SNE      VE, V6          ; Skip if VE != V6
$EF4    $F128   UNKNOWN  F128            ; Unknown Fxxx instruction
$EF6    $9A46   UNKNOWN  $9A46           ; Unknown 9xxx instruction
$EF8    $68F0   LD       V8, #F0         ; Load 240 into V8
$EFA    $9CC6   UNKNOWN  $9CC6           ; Unknown 9xxx instruction
$EFC    $6C8A   LD       VC, #8A         ; Load 138 into VC
$EFE    $FB25   UNKNOWN  FB25            ; Unknown Fxxx instruction
$F00    $FF2F   UNKNOWN  FF2F            ; Unknown Fxxx instruction
$F02    $0B0D   SYS      $B0D            ; System call to B0D
$F04    $630C   LD       V3, #0C         ; Load 12 into V3
$F06    $1559   JP       $559            ; Jump to 559
$F08    $2382   CALL     $382            ; Call subroutine at 382
$F0A    $E745   UNKNOWN  $E745           ; Unknown Exxx instruction
$F0C    $720E   ADD      V2, #0E         ; Add 14 to V2
$F0E    $C26F   RND      V2, #6F         ; V2 = random & 6F
$F10    $6B14   LD       VB, #14         ; Load 20 into VB
$F12    $FC78   UNKNOWN  FC78            ; Unknown Fxxx instruction
$F14    $5CC6   UNKNOWN  $5CC6           ; Unknown 5xxx instruction
$F16    $A7D8   LD       I, $7D8         ; Load 7D8 into I
$F18    $00F2   SYS      $0F2            ; System call to 0F2
$F1A    $8165   SUB      V1, V6          ; V1 -= V6, VF = !borrow
$F1C    $ACA3   LD       I, $CA3         ; Load CA3 into I
$F1E    $4C91   SNE      VC, #91         ; Skip if VC != 145
$F20    $30C0   SE       V0, #C0         ; Skip if V0 == 192
$F22    $63A7   LD       V3, #A7         ; Load 167 into V3
$F24    $C82F   RND      V8, #2F         ; V8 = random & 2F
$F26    $B8B7   JP       V0, $8B7        ; Jump to V0 + 8B7
$F28    $5349   UNKNOWN  $5349           ; Unknown 5xxx instruction
$F2A    $995C   UNKNOWN  $995C           ; Unknown 9xxx instruction
$F2C    $7CCE   ADD      VC, #CE         ; Add 206 to VC
$F2E    $48EC   SNE      V8, #EC         ; Skip if V8 != 236
$F30    $A2A4   LD       I, $2A4         ; Load 2A4 into I
$F32    $82D2   AND      V2, VD          ; V2 &= VD
$F34    $18A6   JP       $8A6            ; Jump to 8A6
$F36    $36BA   SE       V6, #BA         ; Skip if V6 == 186
$F38    $A342   LD       I, $342         ; Load 342 into I
$F3A    $1FDE   JP       $FDE            ; Jump to FDE
$F3C    $30D8   SE       V0, #D8         ; Skip if V0 == 216
$F3E    $9A42   UNKNOWN  $9A42           ; Unknown 9xxx instruction
$F40    $A3A8   LD       I, $3A8         ; Load 3A8 into I
$F42    $917D   UNKNOWN  $917D           ; Unknown 9xxx instruction
$F44    $5BED   UNKNOWN  $5BED           ; Unknown 5xxx instruction
$F46    $E122   UNKNOWN  $E122           ; Unknown Exxx instruction
$F48    $A637   LD       I, $637         ; Load 637 into I
$F4A    $8135   SUB      V1, V3          ; V1 -= V3, VF = !borrow
$F4C    $C4AD   RND      V4, #AD         ; V4 = random & AD
$F4E    $CB4D   RND      VB, #4D         ; VB = random & 4D
$F50    $5BE0   SE       VB, VE          ; Skip if VB == VE
$F52    $62F2   LD       V2, #F2         ; Load 242 into V2
$F54    $B305   JP       V0, $305        ; Jump to V0 + 305
$F56    $49E7   SNE      V9, #E7         ; Skip if V9 != 231
$F58    $3D5C   SE       VD, #5C         ; Skip if VD == 92
$F5A    $D99F   DRW      V9, V9, #F      ; Draw 15-byte sprite at V9, V9
$F5C    $24B0   CALL     $4B0            ; Call subroutine at 4B0
$F5E    $F6B4   UNKNOWN  F6B4            ; Unknown Fxxx instruction
$F60    $AC2B   LD       I, $C2B         ; Load C2B into I
$F62    $044E   SYS      $44E            ; System call to 44E
$F64    $B97F   JP       V0, $97F        ; Jump to V0 + 97F
$F66    $8024   ADD      V0, V2          ; V0 += V2, VF = carry
$F68    $EAF4   UNKNOWN  $EAF4           ; Unknown Exxx instruction
$F6A    $3A7F   SE       VA, #7F         ; Skip if VA == 127
$F6C    $E939   UNKNOWN  $E939           ; Unknown Exxx instruction
$F6E    $83BD   UNKNOWN  83BD            ; Unknown 8xxx instruction
$F70    $2EB6   CALL     $EB6            ; Call subroutine at EB6
$F72    $A1F9   LD       I, $1F9         ; Load 1F9 into I
$F74    $8C05   SUB      VC, V0          ; VC -= V0, VF = !borrow
$F76    $EC94   UNKNOWN  $EC94           ; Unknown Exxx instruction
$F78    $4B1F   SNE      VB, #1F         ; Skip if VB != 31
$F7A    $B490   JP       V0, $490        ; Jump to V0 + 490
$F7C    $375E   SE       V7, #5E         ; Skip if V7 == 94
$F7E    $4EE3   SNE      VE, #E3         ; Skip if VE != 227
$F80    $10D1   JP       $0D1            ; Jump to 0D1
$F82    $6FE7   LD       VF, #E7         ; Load 231 into VF
$F84    $D36C   DRW      V3, V6, #C      ; Draw 12-byte sprite at V3, V6
$F86    $9B12   UNKNOWN  $9B12           ; Unknown 9xxx instruction
$F88    $4B79   SNE      VB, #79         ; Skip if VB != 121
$F8A    $AD1D   LD       I, $D1D         ; Load D1D into I
$F8C    $6254   LD       V2, #54         ; Load 84 into V2
$F8E    $4581   SNE      V5, #81         ; Skip if V5 != 129
$F90    $C86A   RND      V8, #6A         ; V8 = random & 6A
$F92    $E183   UNKNOWN  $E183           ; Unknown Exxx instruction
$F94    $BB77   JP       V0, $B77        ; Jump to V0 + B77
$F96    $7D63   ADD      VD, #63         ; Add 99 to VD
$F98    $60B2   LD       V0, #B2         ; Load 178 into V0
$F9A    $5327   UNKNOWN  $5327           ; Unknown 5xxx instruction
$F9C    $ECFD   UNKNOWN  $ECFD           ; Unknown Exxx instruction
$F9E    $5EC0   SE       VE, VC          ; Skip if VE == VC
$FA0    $9A56   UNKNOWN  $9A56           ; Unknown 9xxx instruction
$FA2    $D72C   DRW      V7, V2, #C      ; Draw 12-byte sprite at V7, V2
$FA4    $56B7   UNKNOWN  $56B7           ; Unknown 5xxx instruction
$FA6    $F356   UNKNOWN  F356            ; Unknown Fxxx instruction
$FA8    $7E6E   ADD      VE, #6E         ; Add 110 to VE
$FAA    $4164   SNE      V1, #64         ; Skip if V1 != 100
$FAC    $827A   UNKNOWN  827A            ; Unknown 8xxx instruction
$FAE    $6EC3   LD       VE, #C3         ; Load 195 into VE
$FB0    $4416   SNE      V4, #16         ; Skip if V4 != 22
$FB2    $E280   UNKNOWN  $E280           ; Unknown Exxx instruction
$FB4    $BF0F   JP       V0, $F0F        ; Jump to V0 + F0F
$FB6    $6397   LD       V3, #97         ; Load 151 into V3
$FB8    $7A03   ADD      VA, #03         ; Add 3 to VA
$FBA    $339D   SE       V3, #9D         ; Skip if V3 == 157
$FBC    $BA1C   JP       V0, $A1C        ; Jump to V0 + A1C
$FBE    $1E61   JP       $E61            ; Jump to E61
$FC0    $8E4A   UNKNOWN  8E4A            ; Unknown 8xxx instruction
$FC2    $CB5A   RND      VB, #5A         ; VB = random & 5A
$FC4    $5FDB   UNKNOWN  $5FDB           ; Unknown 5xxx instruction
$FC6    $D622   DRW      V6, V2, #2      ; Draw 2-byte sprite at V6, V2
$FC8    $E537   UNKNOWN  $E537           ; Unknown Exxx instruction
$FCA    $D32B   DRW      V3, V2, #B      ; Draw 11-byte sprite at V3, V2
$FCC    $CB28   RND      VB, #28         ; VB = random & 28
$FCE    $31D6   SE       V1, #D6         ; Skip if V1 == 214
$FD0    $55E2   UNKNOWN  $55E2           ; Unknown 5xxx instruction
$FD2    $4F1A   SNE      VF, #1A         ; Skip if VF != 26
$FD4    $E6A6   UNKNOWN  $E6A6           ; Unknown Exxx instruction
$FD6    $CFF9   RND      VF, #F9         ; VF = random & F9
$FD8    $1F3F   JP       $F3F            ; Jump to F3F
$FDA    $E453   UNKNOWN  $E453           ; Unknown Exxx instruction
$FDC    $7577   ADD      V5, #77         ; Add 119 to V5
$FDE    $A1D7   LD       I, $1D7         ; Load 1D7 into I
$FE0    $DD4B   DRW      VD, V4, #B      ; Draw 11-byte sprite at VD, V4
$FE2    $1D12   JP       $D12            ; Jump to D12
$FE4    $1A12   JP       $A12            ; Jump to A12
$FE6    $DA36   DRW      VA, V3, #6      ; Draw 6-byte sprite at VA, V3
$FE8    $4C31   SNE      VC, #31         ; Skip if VC != 49
$FEA    $BC39   JP       V0, $C39        ; Jump to V0 + C39
$FEC    $465B   SNE      V6, #5B         ; Skip if V6 != 91
$FEE    $7FFE   ADD      VF, #FE         ; Add 254 to VF
$FF0    $807C   UNKNOWN  807C            ; Unknown 8xxx instruction
$FF2    $289B   CALL     $89B            ; Call subroutine at 89B
$FF4    $E794   UNKNOWN  $E794           ; Unknown Exxx instruction
$FF6    $5CAA   UNKNOWN  $5CAA           ; Unknown 5xxx instruction
$FF8    $121E   JP       $21E            ; Jump to 21E
$FFA    $552E   UNKNOWN  $552E           ; Unknown 5xxx instruction
$FFC    $05EE   SYS      $5EE            ; System call to 5EE
$FFE    $0069   SYS      $069            ; System call to 069

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 491 (27.4%)
  LD      : 225 (12.6%)
  JP      : 218 (12.2%)
  SYS     : 126 ( 7.0%)
  SE      : 120 ( 6.7%)
  SNE     : 118 ( 6.6%)
  DRW     : 113 ( 6.3%)
  ADD     : 113 ( 6.3%)
  RND     : 112 ( 6.2%)
  CALL    : 105 ( 5.9%)
  SHR     :  11 ( 0.6%)
  OR      :  11 ( 0.6%)
  SUB     :   9 ( 0.5%)
  SUBN    :   8 ( 0.4%)
  XOR     :   7 ( 0.4%)
  AND     :   3 ( 0.2%)
  SHL     :   2 ( 0.1%)

Memory Operations: 338 (18.9%)
Arithmetic Operations: 151 (8.4%)
