
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B661D01_I19601_C2501_be1e7ccf2957.ch8
ROM Size: 3584 bytes
Instructions Found: 1791

DISCOVERY INFORMATION:
Batch: 661
Instance: 19601
Direction: descending
Final Array: [251, 232, 225, 95, 86, 13, 0, 0]
Operations: R:0 W:6 C:70 S:3

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 99
Sort Array References:
  $248: LD I, $DE3 ; Load DE3 into I
  $270: LD I, $DAA ; Load DAA into I
  $2B4: LD I, $248 ; Load 248 into I
  $2D8: LD I, $44F ; Load 44F into I
  $31A: LD I, $1CF ; Load 1CF into I
  $338: LD I, $BF5 ; Load BF5 into I
  $344: LD I, $C81 ; Load C81 into I
  $358: LD I, $DC0 ; Load DC0 into I
  $3BE: LD I, $534 ; Load 534 into I
  $3C8: LD I, $0A3 ; Load 0A3 into I
  $3CC: LD I, $566 ; Load 566 into I
  $3F8: LD I, $01B ; Load 01B into I
  $41C: LD I, $C7F ; Load C7F into I
  $43C: LD I, $FCE ; Load FCE into I
  $44E: LD I, $25E ; Load 25E into I
  $462: LD I, $567 ; Load 567 into I
  $46E: LD I, $BBF ; Load BBF into I
  $478: LD I, $257 ; Load 257 into I
  $4B2: LD I, $171 ; Load 171 into I
  $4BC: LD I, $F83 ; Load F83 into I
  $530: LD I, $750 ; Load 750 into I
  $544: LD I, $445 ; Load 445 into I
  $550: LD I, $0EE ; Load 0EE into I
  $560: LD I, $E94 ; Load E94 into I
  $586: LD I, $D56 ; Load D56 into I
  $590: LD I, $424 ; Load 424 into I
  $596: LD I, $37F ; Load 37F into I
  $5AA: LD I, $0BD ; Load 0BD into I
  $5B0: LD I, $2CD ; Load 2CD into I
  $5B2: LD I, $84A ; Load 84A into I
  $5B6: LD I, $BCB ; Load BCB into I
  $5BA: LD I, $0F1 ; Load 0F1 into I
  $5D4: LD I, $7E6 ; Load 7E6 into I
  $5E0: LD I, $A08 ; Load A08 into I
  $5E2: LD I, $FD9 ; Load FD9 into I
  $606: LD I, $29E ; Load 29E into I
  $60E: LD I, $9A0 ; Load 9A0 into I
  $62A: LD I, $0DD ; Load 0DD into I
  $676: LD I, $485 ; Load 485 into I
  $67C: LD I, $229 ; Load 229 into I
  $696: LD I, $DC1 ; Load DC1 into I
  $6AE: LD I, $16E ; Load 16E into I
  $710: LD I, $766 ; Load 766 into I
  $722: LD I, $81B ; Load 81B into I
  $756: LD I, $0DA ; Load 0DA into I
  $7A0: LD I, $117 ; Load 117 into I
  $7AC: LD I, $585 ; Load 585 into I
  $7B4: LD I, $593 ; Load 593 into I
  $7D6: LD I, $B1A ; Load B1A into I
  $840: LD I, $7C2 ; Load 7C2 into I
  $852: LD I, $56E ; Load 56E into I
  $856: LD I, $709 ; Load 709 into I
  $868: LD I, $6A2 ; Load 6A2 into I
  $880: LD I, $872 ; Load 872 into I
  $882: LD I, $898 ; Load 898 into I
  $8A2: LD I, $FA6 ; Load FA6 into I
  $8B0: LD I, $172 ; Load 172 into I
  $8CE: LD I, $2F9 ; Load 2F9 into I
  $8F2: LD I, $12C ; Load 12C into I
  $8FC: LD I, $C53 ; Load C53 into I
  $922: LD I, $0BC ; Load 0BC into I
  $97A: LD I, $E6D ; Load E6D into I
  $9B2: LD I, $35E ; Load 35E into I
  $9E2: LD I, $C00 ; Load C00 into I
  $9E8: LD I, $5EC ; Load 5EC into I
  $A54: LD [I], V4 ; Store V0-V4 at I
  $A70: LD I, $6F9 ; Load 6F9 into I
  $A86: LD I, $745 ; Load 745 into I
  $AD2: LD I, $F25 ; Load F25 into I
  $AF8: LD I, $FD8 ; Load FD8 into I
  $B1E: LD I, $E27 ; Load E27 into I
  $B34: LD I, $753 ; Load 753 into I
  $B38: LD I, $7DD ; Load 7DD into I
  $B68: LD VC, [I] ; Load V0-VC from I
  $BA0: LD I, $E78 ; Load E78 into I
  $BB2: LD I, $B38 ; Load B38 into I
  $BD8: LD I, $C8B ; Load C8B into I
  $BEE: LD I, $FF1 ; Load FF1 into I
  $BF2: LD I, $A1F ; Load A1F into I
  $C1A: LD I, $8D0 ; Load 8D0 into I
  $C20: LD I, $AB3 ; Load AB3 into I
  $C30: LD I, $EAF ; Load EAF into I
  $CA6: LD I, $82F ; Load 82F into I
  $CA8: LD I, $66F ; Load 66F into I
  $D0E: LD I, $8A4 ; Load 8A4 into I
  $D22: LD I, $383 ; Load 383 into I
  $D52: LD I, $F9E ; Load F9E into I
  $D5E: LD I, $475 ; Load 475 into I
  $DA0: LD I, $EA8 ; Load EA8 into I
  $DA2: LD I, $159 ; Load 159 into I
  $DC2: LD I, $2BD ; Load 2BD into I
  $EAA: LD I, $93D ; Load 93D into I
  $EB4: LD I, $825 ; Load 825 into I
  $ED0: LD I, $7C8 ; Load 7C8 into I
  $EEA: LD I, $A04 ; Load A04 into I
  $EF4: LD I, $59F ; Load 59F into I
  $F16: LD I, $DB0 ; Load DB0 into I
  $F2A: LD I, $5E8 ; Load 5E8 into I
  $F94: LD I, $906 ; Load 906 into I

CONTROL FLOW ANALYSIS:
Jumps: 229
Calls: 118
Branches: 206
Loops: 128
Loop Structures:
  $208 -> $03C (backward jump)
  $222 -> $0E9 (backward jump)
  $22E -> $0A3 (backward jump)
  $238 -> $180 (backward jump)
  $2B2 -> $133 (backward jump)
  $2DE -> $238 (backward jump)
  $2F4 -> $155 (backward jump)
  $2F6 -> $2EB (backward jump)
  $34E -> $0CB (backward jump)
  $386 -> $136 (backward jump)
  $3D4 -> $25F (backward jump)
  $482 -> $030 (backward jump)
  $48C -> $2ED (backward jump)
  $4B6 -> $0FD (backward jump)
  $4CA -> $2C4 (backward jump)
  $4CE -> $473 (backward jump)
  $514 -> $4D5 (backward jump)
  $5A0 -> $0E0 (backward jump)
  $5A2 -> $4D6 (backward jump)
  $5B8 -> $3DD (backward jump)
  $626 -> $5D7 (backward jump)
  $634 -> $18C (backward jump)
  $670 -> $501 (backward jump)
  $6FE -> $058 (backward jump)
  $70A -> $4C1 (backward jump)
  $712 -> $3BD (backward jump)
  $716 -> $64D (backward jump)
  $728 -> $520 (backward jump)
  $75A -> $1DE (backward jump)
  $780 -> $26D (backward jump)
  $794 -> $398 (backward jump)
  $7A2 -> $57F (backward jump)
  $7D2 -> $39C (backward jump)
  $7F4 -> $4AC (backward jump)
  $7F8 -> $657 (backward jump)
  $806 -> $6A0 (backward jump)
  $83E -> $441 (backward jump)
  $88C -> $042 (backward jump)
  $8A8 -> $2F4 (backward jump)
  $8C6 -> $0D0 (backward jump)
  $8E2 -> $8BB (backward jump)
  $976 -> $972 (backward jump)
  $9A6 -> $04A (backward jump)
  $9B8 -> $6B8 (backward jump)
  $9C8 -> $1F3 (backward jump)
  $9CC -> $1B1 (backward jump)
  $9D8 -> $716 (backward jump)
  $A0A -> $016 (backward jump)
  $A10 -> $865 (backward jump)
  $A22 -> $61E (backward jump)
  $A52 -> $79F (backward jump)
  $A72 -> $584 (backward jump)
  $A80 -> $77B (backward jump)
  $A8C -> $74E (backward jump)
  $A98 -> $91E (backward jump)
  $AA4 -> $1C1 (backward jump)
  $AAC -> $8FB (backward jump)
  $ABE -> $7C5 (backward jump)
  $AC0 -> $593 (backward jump)
  $AEC -> $0B8 (backward jump)
  $AF4 -> $39A (backward jump)
  $B08 -> $417 (backward jump)
  $B3E -> $896 (backward jump)
  $B5E -> $086 (backward jump)
  $B88 -> $6C7 (backward jump)
  $B90 -> $570 (backward jump)
  $B9E -> $95A (backward jump)
  $BBA -> $91C (backward jump)
  $BF0 -> $159 (backward jump)
  $BFA -> $905 (backward jump)
  $C38 -> $85B (backward jump)
  $C82 -> $796 (backward jump)
  $CAA -> $0FD (backward jump)
  $CB6 -> $605 (backward jump)
  $CCA -> $3BC (backward jump)
  $CDA -> $6A1 (backward jump)
  $D06 -> $AD7 (backward jump)
  $D26 -> $6F7 (backward jump)
  $D28 -> $428 (backward jump)
  $D44 -> $4F6 (backward jump)
  $D60 -> $834 (backward jump)
  $D80 -> $55C (backward jump)
  $D8A -> $347 (backward jump)
  $D9E -> $B58 (backward jump)
  $DBE -> $D63 (backward jump)
  $DDA -> $922 (backward jump)
  $DDC -> $66A (backward jump)
  $DE2 -> $C8E (backward jump)
  $DF6 -> $95B (backward jump)
  $DFC -> $CAB (backward jump)
  $E14 -> $861 (backward jump)
  $E16 -> $61B (backward jump)
  $E18 -> $6F7 (backward jump)
  $E28 -> $413 (backward jump)
  $E30 -> $B61 (backward jump)
  $E4C -> $98C (backward jump)
  $E64 -> $691 (backward jump)
  $E66 -> $055 (backward jump)
  $E80 -> $D10 (backward jump)
  $E88 -> $BB4 (backward jump)
  $E98 -> $5BA (backward jump)
  $EA8 -> $497 (backward jump)
  $EB2 -> $B33 (backward jump)
  $ED8 -> $072 (backward jump)
  $EF2 -> $6B6 (backward jump)
  $EF8 -> $3CB (backward jump)
  $F00 -> $C26 (backward jump)
  $F18 -> $C1F (backward jump)
  $F24 -> $785 (backward jump)
  $F40 -> $2BE (backward jump)
  $F50 -> $352 (backward jump)
  $F6C -> $368 (backward jump)
  $F72 -> $329 (backward jump)
  $F7E -> $4F4 (backward jump)
  $F80 -> $D48 (backward jump)
  $F86 -> $572 (backward jump)
  $F8C -> $B4A (backward jump)
  $F8E -> $837 (backward jump)
  $F90 -> $8C0 (backward jump)
  $F96 -> $9A2 (backward jump)
  $F98 -> $A03 (backward jump)
  $F9A -> $9A2 (backward jump)
  $FC8 -> $7FF (backward jump)
  $FD0 -> $02C (backward jump)
  $FD4 -> $A0E (backward jump)
  $FD8 -> $37D (backward jump)
  $FDC -> $4CC (backward jump)
  $FF2 -> $FCA (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $D76B   DRW      V7, V6, #B      ; Draw 11-byte sprite at V7, V6
$202    $D583   DRW      V5, V8, #3      ; Draw 3-byte sprite at V5, V8
$204    $C6BF   RND      V6, #BF         ; V6 = random & BF
$206    $8E8D   UNKNOWN  8E8D            ; Unknown 8xxx instruction
$208    $103C   JP       $03C            ; Jump to 03C
$20A    $C698   RND      V6, #98         ; V6 = random & 98
$20C    $EC52   UNKNOWN  $EC52           ; Unknown Exxx instruction
$20E    $B593   JP       V0, $593        ; Jump to V0 + 593
$210    $21D7   CALL     $1D7            ; Call subroutine at 1D7
$212    $70FF   ADD      V0, #FF         ; Add 255 to V0
$214    $0BF8   SYS      $BF8            ; System call to BF8
$216    $FC98   UNKNOWN  FC98            ; Unknown Fxxx instruction
$218    $6C84   LD       VC, #84         ; Load 132 into VC
$21A    $2D2D   CALL     $D2D            ; Call subroutine at D2D
$21C    $E873   UNKNOWN  $E873           ; Unknown Exxx instruction
$21E    $6BC6   LD       VB, #C6         ; Load 198 into VB
$220    $B5D1   JP       V0, $5D1        ; Jump to V0 + 5D1
$222    $10E9   JP       $0E9            ; Jump to 0E9
$224    $2668   CALL     $668            ; Call subroutine at 668
$226    $0ED2   SYS      $ED2            ; System call to ED2
$228    $129E   JP       $29E            ; Jump to 29E
$22A    $448F   SNE      V4, #8F         ; Skip if V4 != 143
$22C    $9E56   UNKNOWN  $9E56           ; Unknown 9xxx instruction
$22E    $B0A3   JP       V0, $0A3        ; Jump to V0 + 0A3
$230    $06BF   SYS      $6BF            ; System call to 6BF
$232    $9612   UNKNOWN  $9612           ; Unknown 9xxx instruction
$234    $DA2C   DRW      VA, V2, #C      ; Draw 12-byte sprite at VA, V2
$236    $5703   UNKNOWN  $5703           ; Unknown 5xxx instruction
$238    $1180   JP       $180            ; Jump to 180
$23A    $9537   UNKNOWN  $9537           ; Unknown 9xxx instruction
$23C    $BACA   JP       V0, $ACA        ; Jump to V0 + ACA
$23E    $2582   CALL     $582            ; Call subroutine at 582
$240    $EDE7   UNKNOWN  $EDE7           ; Unknown Exxx instruction
$242    $EA04   UNKNOWN  $EA04           ; Unknown Exxx instruction
$244    $6317   LD       V3, #17         ; Load 23 into V3
$246    $E8A5   UNKNOWN  $E8A5           ; Unknown Exxx instruction
$248    $ADE3   LD       I, $DE3         ; Load DE3 into I
$24A    $46D3   SNE      V6, #D3         ; Skip if V6 != 211
$24C    $C9F2   RND      V9, #F2         ; V9 = random & F2
$24E    $7363   ADD      V3, #63         ; Add 99 to V3
$250    $8909   UNKNOWN  8909            ; Unknown 8xxx instruction
$252    $2DAF   CALL     $DAF            ; Call subroutine at DAF
$254    $6686   LD       V6, #86         ; Load 134 into V6
$256    $D198   DRW      V1, V9, #8      ; Draw 8-byte sprite at V1, V9
$258    $B76A   JP       V0, $76A        ; Jump to V0 + 76A
$25A    $D0E8   DRW      V0, VE, #8      ; Draw 8-byte sprite at V0, VE
$25C    $66E9   LD       V6, #E9         ; Load 233 into V6
$25E    $1C26   JP       $C26            ; Jump to C26
$260    $9672   UNKNOWN  $9672           ; Unknown 9xxx instruction
$262    $2340   CALL     $340            ; Call subroutine at 340
$264    $785D   ADD      V8, #5D         ; Add 93 to V8
$266    $2024   CALL     $024            ; Call subroutine at 024
$268    $1FBE   JP       $FBE            ; Jump to FBE
$26A    $0152   SYS      $152            ; System call to 152
$26C    $7593   ADD      V5, #93         ; Add 147 to V5
$26E    $8ACC   UNKNOWN  8ACC            ; Unknown 8xxx instruction
$270    $ADAA   LD       I, $DAA         ; Load DAA into I
$272    $315D   SE       V1, #5D         ; Skip if V1 == 93
$274    $9466   UNKNOWN  $9466           ; Unknown 9xxx instruction
$276    $D725   DRW      V7, V2, #5      ; Draw 5-byte sprite at V7, V2
$278    $7E17   ADD      VE, #17         ; Add 23 to VE
$27A    $6823   LD       V8, #23         ; Load 35 into V8
$27C    $2DA9   CALL     $DA9            ; Call subroutine at DA9
$27E    $5925   UNKNOWN  $5925           ; Unknown 5xxx instruction
$280    $30A2   SE       V0, #A2         ; Skip if V0 == 162
$282    $291C   CALL     $91C            ; Call subroutine at 91C
$284    $6DD3   LD       VD, #D3         ; Load 211 into VD
$286    $31D0   SE       V1, #D0         ; Skip if V1 == 208
$288    $6612   LD       V6, #12         ; Load 18 into V6
$28A    $368A   SE       V6, #8A         ; Skip if V6 == 138
$28C    $5546   UNKNOWN  $5546           ; Unknown 5xxx instruction
$28E    $6764   LD       V7, #64         ; Load 100 into V7
$290    $9D51   UNKNOWN  $9D51           ; Unknown 9xxx instruction
$292    $BA42   JP       V0, $A42        ; Jump to V0 + A42
$294    $5FCC   UNKNOWN  $5FCC           ; Unknown 5xxx instruction
$296    $2CB1   CALL     $CB1            ; Call subroutine at CB1
$298    $BAB4   JP       V0, $AB4        ; Jump to V0 + AB4
$29A    $7CC2   ADD      VC, #C2         ; Add 194 to VC
$29C    $2258   CALL     $258            ; Call subroutine at 258
$29E    $50C9   UNKNOWN  $50C9           ; Unknown 5xxx instruction
$2A0    $09CC   SYS      $9CC            ; System call to 9CC
$2A2    $0EF1   SYS      $EF1            ; System call to EF1
$2A4    $838E   SHL      V3              ; V3 <<= 1, VF = MSB
$2A6    $385C   SE       V8, #5C         ; Skip if V8 == 92
$2A8    $3843   SE       V8, #43         ; Skip if V8 == 67
$2AA    $07BA   SYS      $7BA            ; System call to 7BA
$2AC    $4B9C   SNE      VB, #9C         ; Skip if VB != 156
$2AE    $8F65   SUB      VF, V6          ; VF -= V6, VF = !borrow
$2B0    $68E9   LD       V8, #E9         ; Load 233 into V8
$2B2    $B133   JP       V0, $133        ; Jump to V0 + 133
$2B4    $A248   LD       I, $248         ; Load 248 into I
$2B6    $5279   UNKNOWN  $5279           ; Unknown 5xxx instruction
$2B8    $4D09   SNE      VD, #09         ; Skip if VD != 9
$2BA    $28C8   CALL     $8C8            ; Call subroutine at 8C8
$2BC    $36B1   SE       V6, #B1         ; Skip if V6 == 177
$2BE    $148C   JP       $48C            ; Jump to 48C
$2C0    $7835   ADD      V8, #35         ; Add 53 to V8
$2C2    $0FCD   SYS      $FCD            ; System call to FCD
$2C4    $DD40   DRW      VD, V4, #0      ; Draw 0-byte sprite at VD, V4
$2C6    $4648   SNE      V6, #48         ; Skip if V6 != 72
$2C8    $DD62   DRW      VD, V6, #2      ; Draw 2-byte sprite at VD, V6
$2CA    $1804   JP       $804            ; Jump to 804
$2CC    $616A   LD       V1, #6A         ; Load 106 into V1
$2CE    $5E56   UNKNOWN  $5E56           ; Unknown 5xxx instruction
$2D0    $0D71   SYS      $D71            ; System call to D71
$2D2    $9D25   UNKNOWN  $9D25           ; Unknown 9xxx instruction
$2D4    $3920   SE       V9, #20         ; Skip if V9 == 32
$2D6    $2BF8   CALL     $BF8            ; Call subroutine at BF8
$2D8    $A44F   LD       I, $44F         ; Load 44F into I
$2DA    $D15D   DRW      V1, V5, #D      ; Draw 13-byte sprite at V1, V5
$2DC    $0980   SYS      $980            ; System call to 980
$2DE    $1238   JP       $238            ; Jump to 238
$2E0    $26F7   CALL     $6F7            ; Call subroutine at 6F7
$2E2    $C107   RND      V1, #07         ; V1 = random & 07
$2E4    $16FD   JP       $6FD            ; Jump to 6FD
$2E6    $6ED7   LD       VE, #D7         ; Load 215 into VE
$2E8    $1BEB   JP       $BEB            ; Jump to BEB
$2EA    $924D   UNKNOWN  $924D           ; Unknown 9xxx instruction
$2EC    $3E45   SE       VE, #45         ; Skip if VE == 69
$2EE    $9C02   UNKNOWN  $9C02           ; Unknown 9xxx instruction
$2F0    $0D56   SYS      $D56            ; System call to D56
$2F2    $D012   DRW      V0, V1, #2      ; Draw 2-byte sprite at V0, V1
$2F4    $1155   JP       $155            ; Jump to 155
$2F6    $B2EB   JP       V0, $2EB        ; Jump to V0 + 2EB
$2F8    $660E   LD       V6, #0E         ; Load 14 into V6
$2FA    $34BB   SE       V4, #BB         ; Skip if V4 == 187
$2FC    $59FE   UNKNOWN  $59FE           ; Unknown 5xxx instruction
$2FE    $3186   SE       V1, #86         ; Skip if V1 == 134
$300    $FBE8   UNKNOWN  FBE8            ; Unknown Fxxx instruction
$302    $E15F   UNKNOWN  $E15F           ; Unknown Exxx instruction
$304    $560D   UNKNOWN  $560D           ; Unknown 5xxx instruction
$308    $0071   SYS      $071            ; System call to 071
$30A    $32D4   SE       V2, #D4         ; Skip if V2 == 212
$30C    $CAB7   RND      VA, #B7         ; VA = random & B7
$30E    $768F   ADD      V6, #8F         ; Add 143 to V6
$310    $4987   SNE      V9, #87         ; Skip if V9 != 135
$312    $D792   DRW      V7, V9, #2      ; Draw 2-byte sprite at V7, V9
$314    $EAD2   UNKNOWN  $EAD2           ; Unknown Exxx instruction
$316    $2734   CALL     $734            ; Call subroutine at 734
$318    $5643   UNKNOWN  $5643           ; Unknown 5xxx instruction
$31A    $A1CF   LD       I, $1CF         ; Load 1CF into I
$31C    $54EC   UNKNOWN  $54EC           ; Unknown 5xxx instruction
$31E    $00D2   SYS      $0D2            ; System call to 0D2
$320    $88E3   XOR      V8, VE          ; V8 ^= VE
$322    $DC80   DRW      VC, V8, #0      ; Draw 0-byte sprite at VC, V8
$324    $CA57   RND      VA, #57         ; VA = random & 57
$326    $21E4   CALL     $1E4            ; Call subroutine at 1E4
$328    $FADB   UNKNOWN  FADB            ; Unknown Fxxx instruction
$32A    $9357   UNKNOWN  $9357           ; Unknown 9xxx instruction
$32C    $932B   UNKNOWN  $932B           ; Unknown 9xxx instruction
$32E    $4B82   SNE      VB, #82         ; Skip if VB != 130
$330    $CE45   RND      VE, #45         ; VE = random & 45
$332    $0506   SYS      $506            ; System call to 506
$334    $4B34   SNE      VB, #34         ; Skip if VB != 52
$336    $92CB   UNKNOWN  $92CB           ; Unknown 9xxx instruction
$338    $ABF5   LD       I, $BF5         ; Load BF5 into I
$33A    $84DE   SHL      V4              ; V4 <<= 1, VF = MSB
$33C    $D2DB   DRW      V2, VD, #B      ; Draw 11-byte sprite at V2, VD
$33E    $64EE   LD       V4, #EE         ; Load 238 into V4
$340    $9C97   UNKNOWN  $9C97           ; Unknown 9xxx instruction
$342    $4278   SNE      V2, #78         ; Skip if V2 != 120
$344    $AC81   LD       I, $C81         ; Load C81 into I
$346    $448B   SNE      V4, #8B         ; Skip if V4 != 139
$348    $F6CB   UNKNOWN  F6CB            ; Unknown Fxxx instruction
$34A    $68AB   LD       V8, #AB         ; Load 171 into V8
$34C    $4A19   SNE      VA, #19         ; Skip if VA != 25
$34E    $B0CB   JP       V0, $0CB        ; Jump to V0 + 0CB
$350    $0100   SYS      $100            ; System call to 100
$352    $04C9   SYS      $4C9            ; System call to 4C9
$354    $ED08   UNKNOWN  $ED08           ; Unknown Exxx instruction
$356    $D290   DRW      V2, V9, #0      ; Draw 0-byte sprite at V2, V9
$358    $ADC0   LD       I, $DC0         ; Load DC0 into I
$35A    $5B5F   UNKNOWN  $5B5F           ; Unknown 5xxx instruction
$35C    $66E2   LD       V6, #E2         ; Load 226 into V6
$35E    $2B3A   CALL     $B3A            ; Call subroutine at B3A
$360    $E10B   UNKNOWN  $E10B           ; Unknown Exxx instruction
$362    $F517   UNKNOWN  F517            ; Unknown Fxxx instruction
$364    $97E1   UNKNOWN  $97E1           ; Unknown 9xxx instruction
$366    $85B6   SHR      V5              ; V5 >>= 1, VF = LSB
$368    $EC15   UNKNOWN  $EC15           ; Unknown Exxx instruction
$36A    $13F9   JP       $3F9            ; Jump to 3F9
$36C    $CCB1   RND      VC, #B1         ; VC = random & B1
$36E    $B7E1   JP       V0, $7E1        ; Jump to V0 + 7E1
$370    $424B   SNE      V2, #4B         ; Skip if V2 != 75
$372    $6CB3   LD       VC, #B3         ; Load 179 into VC
$374    $F1CB   UNKNOWN  F1CB            ; Unknown Fxxx instruction
$376    $0081   SYS      $081            ; System call to 081
$378    $BA57   JP       V0, $A57        ; Jump to V0 + A57
$37A    $C6E0   RND      V6, #E0         ; V6 = random & E0
$37C    $B74A   JP       V0, $74A        ; Jump to V0 + 74A
$37E    $C1E0   RND      V1, #E0         ; V1 = random & E0
$380    $5AF0   SE       VA, VF          ; Skip if VA == VF
$382    $E9C5   UNKNOWN  $E9C5           ; Unknown Exxx instruction
$384    $7594   ADD      V5, #94         ; Add 148 to V5
$386    $B136   JP       V0, $136        ; Jump to V0 + 136
$388    $33F8   SE       V3, #F8         ; Skip if V3 == 248
$38A    $D4B6   DRW      V4, VB, #6      ; Draw 6-byte sprite at V4, VB
$38C    $67BE   LD       V7, #BE         ; Load 190 into V7
$38E    $70D2   ADD      V0, #D2         ; Add 210 to V0
$390    $7FCC   ADD      VF, #CC         ; Add 204 to VF
$392    $D206   DRW      V2, V0, #6      ; Draw 6-byte sprite at V2, V0
$394    $6732   LD       V7, #32         ; Load 50 into V7
$396    $57A0   SE       V7, VA          ; Skip if V7 == VA
$398    $5CAB   UNKNOWN  $5CAB           ; Unknown 5xxx instruction
$39A    $18A9   JP       $8A9            ; Jump to 8A9
$39C    $6DFE   LD       VD, #FE         ; Load 254 into VD
$39E    $E660   UNKNOWN  $E660           ; Unknown Exxx instruction
$3A0    $95E0   SNE      V5, VE          ; Skip if V5 != VE
$3A2    $2BE3   CALL     $BE3            ; Call subroutine at BE3
$3A4    $D7A3   DRW      V7, VA, #3      ; Draw 3-byte sprite at V7, VA
$3A6    $370D   SE       V7, #0D         ; Skip if V7 == 13
$3A8    $0D09   SYS      $D09            ; System call to D09
$3AA    $7E42   ADD      VE, #42         ; Add 66 to VE
$3AC    $3380   SE       V3, #80         ; Skip if V3 == 128
$3AE    $55F1   UNKNOWN  $55F1           ; Unknown 5xxx instruction
$3B0    $76EA   ADD      V6, #EA         ; Add 234 to V6
$3B2    $1A67   JP       $A67            ; Jump to A67
$3B4    $02D6   SYS      $2D6            ; System call to 2D6
$3B6    $8020   LD       V0, V2          ; V0 = V2
$3B8    $F596   UNKNOWN  F596            ; Unknown Fxxx instruction
$3BA    $ED0E   UNKNOWN  $ED0E           ; Unknown Exxx instruction
$3BC    $4A69   SNE      VA, #69         ; Skip if VA != 105
$3BE    $A534   LD       I, $534         ; Load 534 into I
$3C0    $5191   UNKNOWN  $5191           ; Unknown 5xxx instruction
$3C2    $481A   SNE      V8, #1A         ; Skip if V8 != 26
$3C4    $F420   UNKNOWN  F420            ; Unknown Fxxx instruction
$3C6    $0EC9   SYS      $EC9            ; System call to EC9
$3C8    $A0A3   LD       I, $0A3         ; Load 0A3 into I
$3CA    $9281   UNKNOWN  $9281           ; Unknown 9xxx instruction
$3CC    $A566   LD       I, $566         ; Load 566 into I
$3CE    $9B26   UNKNOWN  $9B26           ; Unknown 9xxx instruction
$3D0    $DA4E   DRW      VA, V4, #E      ; Draw 14-byte sprite at VA, V4
$3D2    $B53E   JP       V0, $53E        ; Jump to V0 + 53E
$3D4    $125F   JP       $25F            ; Jump to 25F
$3D6    $D613   DRW      V6, V1, #3      ; Draw 3-byte sprite at V6, V1
$3D8    $E6DE   UNKNOWN  $E6DE           ; Unknown Exxx instruction
$3DA    $9A49   UNKNOWN  $9A49           ; Unknown 9xxx instruction
$3DC    $9576   UNKNOWN  $9576           ; Unknown 9xxx instruction
$3DE    $1E2F   JP       $E2F            ; Jump to E2F
$3E0    $85DF   UNKNOWN  85DF            ; Unknown 8xxx instruction
$3E2    $D7ED   DRW      V7, VE, #D      ; Draw 13-byte sprite at V7, VE
$3E4    $23E2   CALL     $3E2            ; Call subroutine at 3E2
$3E6    $2646   CALL     $646            ; Call subroutine at 646
$3E8    $CD13   RND      VD, #13         ; VD = random & 13
$3EA    $D1B9   DRW      V1, VB, #9      ; Draw 9-byte sprite at V1, VB
$3EC    $29DC   CALL     $9DC            ; Call subroutine at 9DC
$3EE    $5C41   UNKNOWN  $5C41           ; Unknown 5xxx instruction
$3F0    $7781   ADD      V7, #81         ; Add 129 to V7
$3F2    $F466   UNKNOWN  F466            ; Unknown Fxxx instruction
$3F4    $3E8C   SE       VE, #8C         ; Skip if VE == 140
$3F6    $59A6   UNKNOWN  $59A6           ; Unknown 5xxx instruction
$3F8    $A01B   LD       I, $01B         ; Load 01B into I
$3FA    $0F25   SYS      $F25            ; System call to F25
$3FC    $8A34   ADD      VA, V3          ; VA += V3, VF = carry
$3FE    $3DCB   SE       VD, #CB         ; Skip if VD == 203
$400    $87B1   OR       V7, VB          ; V7 |= VB
$402    $2132   CALL     $132            ; Call subroutine at 132
$404    $81B6   SHR      V1              ; V1 >>= 1, VF = LSB
$406    $38A7   SE       V8, #A7         ; Skip if V8 == 167
$408    $2860   CALL     $860            ; Call subroutine at 860
$40A    $65D3   LD       V5, #D3         ; Load 211 into V5
$40C    $C1D5   RND      V1, #D5         ; V1 = random & D5
$40E    $1FFD   JP       $FFD            ; Jump to FFD
$410    $16FD   JP       $6FD            ; Jump to 6FD
$412    $88B8   UNKNOWN  88B8            ; Unknown 8xxx instruction
$414    $55E5   UNKNOWN  $55E5           ; Unknown 5xxx instruction
$416    $049C   SYS      $49C            ; System call to 49C
$418    $B7AF   JP       V0, $7AF        ; Jump to V0 + 7AF
$41A    $6483   LD       V4, #83         ; Load 131 into V4
$41C    $AC7F   LD       I, $C7F         ; Load C7F into I
$41E    $DABC   DRW      VA, VB, #C      ; Draw 12-byte sprite at VA, VB
$420    $2B9E   CALL     $B9E            ; Call subroutine at B9E
$422    $B890   JP       V0, $890        ; Jump to V0 + 890
$424    $7B40   ADD      VB, #40         ; Add 64 to VB
$426    $60E1   LD       V0, #E1         ; Load 225 into V0
$428    $D1AF   DRW      V1, VA, #F      ; Draw 15-byte sprite at V1, VA
$42A    $0399   SYS      $399            ; System call to 399
$42C    $0584   SYS      $584            ; System call to 584
$42E    $4E2D   SNE      VE, #2D         ; Skip if VE != 45
$430    $5D15   UNKNOWN  $5D15           ; Unknown 5xxx instruction
$432    $0434   SYS      $434            ; System call to 434
$434    $5B39   UNKNOWN  $5B39           ; Unknown 5xxx instruction
$436    $635E   LD       V3, #5E         ; Load 94 into V3
$438    $F8FC   UNKNOWN  F8FC            ; Unknown Fxxx instruction
$43A    $F4B0   UNKNOWN  F4B0            ; Unknown Fxxx instruction
$43C    $AFCE   LD       I, $FCE         ; Load FCE into I
$43E    $F3C9   UNKNOWN  F3C9            ; Unknown Fxxx instruction
$440    $73A4   ADD      V3, #A4         ; Add 164 to V3
$442    $5E33   UNKNOWN  $5E33           ; Unknown 5xxx instruction
$444    $9634   UNKNOWN  $9634           ; Unknown 9xxx instruction
$446    $8E25   SUB      VE, V2          ; VE -= V2, VF = !borrow
$448    $0AD6   SYS      $AD6            ; System call to AD6
$44A    $8533   XOR      V5, V3          ; V5 ^= V3
$44C    $DF4F   DRW      VF, V4, #F      ; Draw 15-byte sprite at VF, V4
$44E    $A25E   LD       I, $25E         ; Load 25E into I
$450    $2AA6   CALL     $AA6            ; Call subroutine at AA6
$452    $9402   UNKNOWN  $9402           ; Unknown 9xxx instruction
$454    $3434   SE       V4, #34         ; Skip if V4 == 52
$456    $FEC0   UNKNOWN  FEC0            ; Unknown Fxxx instruction
$458    $7E42   ADD      VE, #42         ; Add 66 to VE
$45A    $C073   RND      V0, #73         ; V0 = random & 73
$45C    $36AD   SE       V6, #AD         ; Skip if V6 == 173
$45E    $D512   DRW      V5, V1, #2      ; Draw 2-byte sprite at V5, V1
$460    $DF43   DRW      VF, V4, #3      ; Draw 3-byte sprite at VF, V4
$462    $A567   LD       I, $567         ; Load 567 into I
$464    $7583   ADD      V5, #83         ; Add 131 to V5
$466    $236F   CALL     $36F            ; Call subroutine at 36F
$468    $E6CA   UNKNOWN  $E6CA           ; Unknown Exxx instruction
$46A    $7202   ADD      V2, #02         ; Add 2 to V2
$46C    $FC3B   UNKNOWN  FC3B            ; Unknown Fxxx instruction
$46E    $ABBF   LD       I, $BBF         ; Load BBF into I
$470    $91C7   UNKNOWN  $91C7           ; Unknown 9xxx instruction
$472    $6CEF   LD       VC, #EF         ; Load 239 into VC
$474    $1AE6   JP       $AE6            ; Jump to AE6
$476    $74B4   ADD      V4, #B4         ; Add 180 to V4
$478    $A257   LD       I, $257         ; Load 257 into I
$47A    $729E   ADD      V2, #9E         ; Add 158 to V2
$47C    $B907   JP       V0, $907        ; Jump to V0 + 907
$47E    $D917   DRW      V9, V1, #7      ; Draw 7-byte sprite at V9, V1
$480    $4041   SNE      V0, #41         ; Skip if V0 != 65
$482    $1030   JP       $030            ; Jump to 030
$484    $9BA3   UNKNOWN  $9BA3           ; Unknown 9xxx instruction
$486    $FEB5   UNKNOWN  FEB5            ; Unknown Fxxx instruction
$488    $337E   SE       V3, #7E         ; Skip if V3 == 126
$48A    $6FF0   LD       VF, #F0         ; Load 240 into VF
$48C    $12ED   JP       $2ED            ; Jump to 2ED
$48E    $8EB3   XOR      VE, VB          ; VE ^= VB
$490    $95F7   UNKNOWN  $95F7           ; Unknown 9xxx instruction
$492    $C0F2   RND      V0, #F2         ; V0 = random & F2
$494    $B8F0   JP       V0, $8F0        ; Jump to V0 + 8F0
$496    $64B1   LD       V4, #B1         ; Load 177 into V4
$498    $5911   UNKNOWN  $5911           ; Unknown 5xxx instruction
$49A    $D9EE   DRW      V9, VE, #E      ; Draw 14-byte sprite at V9, VE
$49C    $5943   UNKNOWN  $5943           ; Unknown 5xxx instruction
$49E    $195A   JP       $95A            ; Jump to 95A
$4A0    $8CC0   LD       VC, VC          ; VC = VC
$4A2    $5A55   UNKNOWN  $5A55           ; Unknown 5xxx instruction
$4A4    $C160   RND      V1, #60         ; V1 = random & 60
$4A6    $650D   LD       V5, #0D         ; Load 13 into V5
$4A8    $D70A   DRW      V7, V0, #A      ; Draw 10-byte sprite at V7, V0
$4AA    $BD0B   JP       V0, $D0B        ; Jump to V0 + D0B
$4AC    $782E   ADD      V8, #2E         ; Add 46 to V8
$4AE    $C1B0   RND      V1, #B0         ; V1 = random & B0
$4B0    $994B   UNKNOWN  $994B           ; Unknown 9xxx instruction
$4B2    $A171   LD       I, $171         ; Load 171 into I
$4B4    $E996   UNKNOWN  $E996           ; Unknown Exxx instruction
$4B6    $10FD   JP       $0FD            ; Jump to 0FD
$4B8    $FC45   UNKNOWN  FC45            ; Unknown Fxxx instruction
$4BA    $7DDB   ADD      VD, #DB         ; Add 219 to VD
$4BC    $AF83   LD       I, $F83         ; Load F83 into I
$4BE    $5425   UNKNOWN  $5425           ; Unknown 5xxx instruction
$4C0    $4BB8   SNE      VB, #B8         ; Skip if VB != 184
$4C2    $2E8F   CALL     $E8F            ; Call subroutine at E8F
$4C4    $F711   UNKNOWN  F711            ; Unknown Fxxx instruction
$4C6    $BD0E   JP       V0, $D0E        ; Jump to V0 + D0E
$4C8    $9F89   UNKNOWN  $9F89           ; Unknown 9xxx instruction
$4CA    $12C4   JP       $2C4            ; Jump to 2C4
$4CC    $15B6   JP       $5B6            ; Jump to 5B6
$4CE    $1473   JP       $473            ; Jump to 473
$4D0    $323A   SE       V2, #3A         ; Skip if V2 == 58
$4D2    $CD89   RND      VD, #89         ; VD = random & 89
$4D4    $8CF7   SUBN     VC, VF          ; VC = VF - VC, VF = !borrow
$4D6    $8BB8   UNKNOWN  8BB8            ; Unknown 8xxx instruction
$4D8    $4807   SNE      V8, #07         ; Skip if V8 != 7
$4DA    $83F3   XOR      V3, VF          ; V3 ^= VF
$4DC    $1A9F   JP       $A9F            ; Jump to A9F
$4DE    $F97A   UNKNOWN  F97A            ; Unknown Fxxx instruction
$4E0    $4904   SNE      V9, #04         ; Skip if V9 != 4
$4E2    $D2B7   DRW      V2, VB, #7      ; Draw 7-byte sprite at V2, VB
$4E4    $CD06   RND      VD, #06         ; VD = random & 06
$4E6    $39CC   SE       V9, #CC         ; Skip if V9 == 204
$4E8    $DCFA   DRW      VC, VF, #A      ; Draw 10-byte sprite at VC, VF
$4EA    $F9FF   UNKNOWN  F9FF            ; Unknown Fxxx instruction
$4EC    $98FB   UNKNOWN  $98FB           ; Unknown 9xxx instruction
$4EE    $47A1   SNE      V7, #A1         ; Skip if V7 != 161
$4F0    $223A   CALL     $23A            ; Call subroutine at 23A
$4F2    $325D   SE       V2, #5D         ; Skip if V2 == 93
$4F4    $8D5B   UNKNOWN  8D5B            ; Unknown 8xxx instruction
$4F6    $CF51   RND      VF, #51         ; VF = random & 51
$4F8    $87DD   UNKNOWN  87DD            ; Unknown 8xxx instruction
$4FA    $01DD   SYS      $1DD            ; System call to 1DD
$4FC    $884B   UNKNOWN  884B            ; Unknown 8xxx instruction
$4FE    $6851   LD       V8, #51         ; Load 81 into V8
$500    $011C   SYS      $11C            ; System call to 11C
$502    $E39B   UNKNOWN  $E39B           ; Unknown Exxx instruction
$504    $7DCE   ADD      VD, #CE         ; Add 206 to VD
$506    $0003   SYS      $003            ; System call to 003
$508    $022D   SYS      $22D            ; System call to 22D
$50A    $2442   CALL     $442            ; Call subroutine at 442
$50C    $15ED   JP       $5ED            ; Jump to 5ED
$50E    $CF36   RND      VF, #36         ; VF = random & 36
$510    $7A4E   ADD      VA, #4E         ; Add 78 to VA
$512    $260B   CALL     $60B            ; Call subroutine at 60B
$514    $B4D5   JP       V0, $4D5        ; Jump to V0 + 4D5
$516    $CCE4   RND      VC, #E4         ; VC = random & E4
$518    $2DE5   CALL     $DE5            ; Call subroutine at DE5
$51A    $58C5   UNKNOWN  $58C5           ; Unknown 5xxx instruction
$51C    $C926   RND      V9, #26         ; V9 = random & 26
$51E    $F992   UNKNOWN  F992            ; Unknown Fxxx instruction
$520    $26BA   CALL     $6BA            ; Call subroutine at 6BA
$522    $C9E3   RND      V9, #E3         ; V9 = random & E3
$524    $FA1A   UNKNOWN  FA1A            ; Unknown Fxxx instruction
$526    $0054   SYS      $054            ; System call to 054
$528    $7038   ADD      V0, #38         ; Add 56 to V0
$52A    $5D06   UNKNOWN  $5D06           ; Unknown 5xxx instruction
$52C    $8850   LD       V8, V5          ; V8 = V5
$52E    $C6AE   RND      V6, #AE         ; V6 = random & AE
$530    $A750   LD       I, $750         ; Load 750 into I
$532    $78E7   ADD      V8, #E7         ; Add 231 to V8
$534    $856F   UNKNOWN  856F            ; Unknown 8xxx instruction
$536    $F1E4   UNKNOWN  F1E4            ; Unknown Fxxx instruction
$538    $BEB7   JP       V0, $EB7        ; Jump to V0 + EB7
$53A    $458F   SNE      V5, #8F         ; Skip if V5 != 143
$53C    $955F   UNKNOWN  $955F           ; Unknown 9xxx instruction
$53E    $DD17   DRW      VD, V1, #7      ; Draw 7-byte sprite at VD, V1
$540    $CD4E   RND      VD, #4E         ; VD = random & 4E
$542    $CA3F   RND      VA, #3F         ; VA = random & 3F
$544    $A445   LD       I, $445         ; Load 445 into I
$546    $E902   UNKNOWN  $E902           ; Unknown Exxx instruction
$548    $841D   UNKNOWN  841D            ; Unknown 8xxx instruction
$54A    $74CB   ADD      V4, #CB         ; Add 203 to V4
$54C    $6F9A   LD       VF, #9A         ; Load 154 into VF
$54E    $9616   UNKNOWN  $9616           ; Unknown 9xxx instruction
$550    $A0EE   LD       I, $0EE         ; Load 0EE into I
$552    $BD21   JP       V0, $D21        ; Jump to V0 + D21
$554    $5E2A   UNKNOWN  $5E2A           ; Unknown 5xxx instruction
$556    $5DEA   UNKNOWN  $5DEA           ; Unknown 5xxx instruction
$558    $800D   UNKNOWN  800D            ; Unknown 8xxx instruction
$55A    $568C   UNKNOWN  $568C           ; Unknown 5xxx instruction
$55C    $B752   JP       V0, $752        ; Jump to V0 + 752
$55E    $BF87   JP       V0, $F87        ; Jump to V0 + F87
$560    $AE94   LD       I, $E94         ; Load E94 into I
$562    $1DE8   JP       $DE8            ; Jump to DE8
$564    $01AF   SYS      $1AF            ; System call to 1AF
$566    $B5B6   JP       V0, $5B6        ; Jump to V0 + 5B6
$568    $739D   ADD      V3, #9D         ; Add 157 to V3
$56A    $62F7   LD       V2, #F7         ; Load 247 into V2
$56C    $7C3C   ADD      VC, #3C         ; Add 60 to VC
$56E    $C5FE   RND      V5, #FE         ; V5 = random & FE
$570    $4109   SNE      V1, #09         ; Skip if V1 != 9
$572    $39A3   SE       V9, #A3         ; Skip if V9 == 163
$574    $36E6   SE       V6, #E6         ; Skip if V6 == 230
$576    $3E28   SE       VE, #28         ; Skip if VE == 40
$578    $826F   UNKNOWN  826F            ; Unknown 8xxx instruction
$57A    $E728   UNKNOWN  $E728           ; Unknown Exxx instruction
$57C    $CBA1   RND      VB, #A1         ; VB = random & A1
$57E    $84B9   UNKNOWN  84B9            ; Unknown 8xxx instruction
$580    $C44F   RND      V4, #4F         ; V4 = random & 4F
$582    $B7B0   JP       V0, $7B0        ; Jump to V0 + 7B0
$584    $4FCB   SNE      VF, #CB         ; Skip if VF != 203
$586    $AD56   LD       I, $D56         ; Load D56 into I
$588    $8F26   SHR      VF              ; VF >>= 1, VF = LSB
$58A    $9D74   UNKNOWN  $9D74           ; Unknown 9xxx instruction
$58C    $17DD   JP       $7DD            ; Jump to 7DD
$58E    $0504   SYS      $504            ; System call to 504
$590    $A424   LD       I, $424         ; Load 424 into I
$592    $F94B   UNKNOWN  F94B            ; Unknown Fxxx instruction
$594    $5785   UNKNOWN  $5785           ; Unknown 5xxx instruction
$596    $A37F   LD       I, $37F         ; Load 37F into I
$598    $BBBC   JP       V0, $BBC        ; Jump to V0 + BBC
$59A    $72DD   ADD      V2, #DD         ; Add 221 to V2
$59C    $DFD0   DRW      VF, VD, #0      ; Draw 0-byte sprite at VF, VD
$59E    $F1AD   UNKNOWN  F1AD            ; Unknown Fxxx instruction
$5A0    $B0E0   JP       V0, $0E0        ; Jump to V0 + 0E0
$5A2    $B4D6   JP       V0, $4D6        ; Jump to V0 + 4D6
$5A4    $D9F5   DRW      V9, VF, #5      ; Draw 5-byte sprite at V9, VF
$5A6    $56A3   UNKNOWN  $56A3           ; Unknown 5xxx instruction
$5A8    $6C5B   LD       VC, #5B         ; Load 91 into VC
$5AA    $A0BD   LD       I, $0BD         ; Load 0BD into I
$5AC    $C873   RND      V8, #73         ; V8 = random & 73
$5AE    $944E   UNKNOWN  $944E           ; Unknown 9xxx instruction
$5B0    $A2CD   LD       I, $2CD         ; Load 2CD into I
$5B2    $A84A   LD       I, $84A         ; Load 84A into I
$5B4    $D7E9   DRW      V7, VE, #9      ; Draw 9-byte sprite at V7, VE
$5B6    $ABCB   LD       I, $BCB         ; Load BCB into I
$5B8    $13DD   JP       $3DD            ; Jump to 3DD
$5BA    $A0F1   LD       I, $0F1         ; Load 0F1 into I
$5BC    $C571   RND      V5, #71         ; V5 = random & 71
$5BE    $81DB   UNKNOWN  81DB            ; Unknown 8xxx instruction
$5C0    $36B9   SE       V6, #B9         ; Skip if V6 == 185
$5C2    $DD25   DRW      VD, V2, #5      ; Draw 5-byte sprite at VD, V2
$5C4    $BFC7   JP       V0, $FC7        ; Jump to V0 + FC7
$5C6    $E0CF   UNKNOWN  $E0CF           ; Unknown Exxx instruction
$5C8    $0C9A   SYS      $C9A            ; System call to C9A
$5CA    $DAAE   DRW      VA, VA, #E      ; Draw 14-byte sprite at VA, VA
$5CC    $F68C   UNKNOWN  F68C            ; Unknown Fxxx instruction
$5CE    $3103   SE       V1, #03         ; Skip if V1 == 3
$5D0    $2CFE   CALL     $CFE            ; Call subroutine at CFE
$5D2    $3FCC   SE       VF, #CC         ; Skip if VF == 204
$5D4    $A7E6   LD       I, $7E6         ; Load 7E6 into I
$5D6    $5613   UNKNOWN  $5613           ; Unknown 5xxx instruction
$5D8    $E17A   UNKNOWN  $E17A           ; Unknown Exxx instruction
$5DA    $08D4   SYS      $8D4            ; System call to 8D4
$5DC    $F8AE   UNKNOWN  F8AE            ; Unknown Fxxx instruction
$5DE    $5A1B   UNKNOWN  $5A1B           ; Unknown 5xxx instruction
$5E0    $AA08   LD       I, $A08         ; Load A08 into I
$5E2    $AFD9   LD       I, $FD9         ; Load FD9 into I
$5E4    $7169   ADD      V1, #69         ; Add 105 to V1
$5E6    $2C48   CALL     $C48            ; Call subroutine at C48
$5E8    $248C   CALL     $48C            ; Call subroutine at 48C
$5EA    $ED79   UNKNOWN  $ED79           ; Unknown Exxx instruction
$5EC    $5242   UNKNOWN  $5242           ; Unknown 5xxx instruction
$5EE    $E3BB   UNKNOWN  $E3BB           ; Unknown Exxx instruction
$5F0    $F2BD   UNKNOWN  F2BD            ; Unknown Fxxx instruction
$5F2    $091E   SYS      $91E            ; System call to 91E
$5F4    $CE8D   RND      VE, #8D         ; VE = random & 8D
$5F6    $240F   CALL     $40F            ; Call subroutine at 40F
$5F8    $0170   SYS      $170            ; System call to 170
$5FA    $638C   LD       V3, #8C         ; Load 140 into V3
$5FC    $8D4D   UNKNOWN  8D4D            ; Unknown 8xxx instruction
$5FE    $FCA1   UNKNOWN  FCA1            ; Unknown Fxxx instruction
$600    $0514   SYS      $514            ; System call to 514
$602    $CBDD   RND      VB, #DD         ; VB = random & DD
$604    $9324   UNKNOWN  $9324           ; Unknown 9xxx instruction
$606    $A29E   LD       I, $29E         ; Load 29E into I
$608    $8DE8   UNKNOWN  8DE8            ; Unknown 8xxx instruction
$60A    $BA2C   JP       V0, $A2C        ; Jump to V0 + A2C
$60C    $F575   UNKNOWN  F575            ; Unknown Fxxx instruction
$60E    $A9A0   LD       I, $9A0         ; Load 9A0 into I
$610    $7F4A   ADD      VF, #4A         ; Add 74 to VF
$612    $70A3   ADD      V0, #A3         ; Add 163 to V0
$614    $64F5   LD       V4, #F5         ; Load 245 into V4
$616    $5E53   UNKNOWN  $5E53           ; Unknown 5xxx instruction
$618    $F0BC   UNKNOWN  F0BC            ; Unknown Fxxx instruction
$61A    $FB07   LD       VB, DT          ; VB = delay timer
$61C    $DEE3   DRW      VE, VE, #3      ; Draw 3-byte sprite at VE, VE
$61E    $1D8B   JP       $D8B            ; Jump to D8B
$620    $7500   ADD      V5, #00         ; Add 0 to V5
$622    $0304   SYS      $304            ; System call to 304
$624    $3AA4   SE       VA, #A4         ; Skip if VA == 164
$626    $15D7   JP       $5D7            ; Jump to 5D7
$628    $9651   UNKNOWN  $9651           ; Unknown 9xxx instruction
$62A    $A0DD   LD       I, $0DD         ; Load 0DD into I
$62C    $D84B   DRW      V8, V4, #B      ; Draw 11-byte sprite at V8, V4
$62E    $B6A9   JP       V0, $6A9        ; Jump to V0 + 6A9
$630    $6B99   LD       VB, #99         ; Load 153 into VB
$632    $CEDC   RND      VE, #DC         ; VE = random & DC
$634    $B18C   JP       V0, $18C        ; Jump to V0 + 18C
$636    $01DD   SYS      $1DD            ; System call to 1DD
$638    $BADA   JP       V0, $ADA        ; Jump to V0 + ADA
$63A    $99EE   UNKNOWN  $99EE           ; Unknown 9xxx instruction
$63C    $3977   SE       V9, #77         ; Skip if V9 == 119
$63E    $6305   LD       V3, #05         ; Load 5 into V3
$640    $F46D   UNKNOWN  F46D            ; Unknown Fxxx instruction
$642    $C0F2   RND      V0, #F2         ; V0 = random & F2
$644    $7319   ADD      V3, #19         ; Add 25 to V3
$646    $0FB7   SYS      $FB7            ; System call to FB7
$648    $0F87   SYS      $F87            ; System call to F87
$64A    $FDFD   UNKNOWN  FDFD            ; Unknown Fxxx instruction
$64C    $4468   SNE      V4, #68         ; Skip if V4 != 104
$64E    $B6EC   JP       V0, $6EC        ; Jump to V0 + 6EC
$650    $673F   LD       V7, #3F         ; Load 63 into V7
$652    $285A   CALL     $85A            ; Call subroutine at 85A
$654    $9DD5   UNKNOWN  $9DD5           ; Unknown 9xxx instruction
$656    $CC38   RND      VC, #38         ; VC = random & 38
$658    $30A9   SE       V0, #A9         ; Skip if V0 == 169
$65A    $C509   RND      V5, #09         ; V5 = random & 09
$65C    $9219   UNKNOWN  $9219           ; Unknown 9xxx instruction
$65E    $1F3E   JP       $F3E            ; Jump to F3E
$660    $09EF   SYS      $9EF            ; System call to 9EF
$662    $CA4A   RND      VA, #4A         ; VA = random & 4A
$664    $24E0   CALL     $4E0            ; Call subroutine at 4E0
$666    $B88D   JP       V0, $88D        ; Jump to V0 + 88D
$668    $1BE9   JP       $BE9            ; Jump to BE9
$66A    $8E26   SHR      VE              ; VE >>= 1, VF = LSB
$66C    $4CA2   SNE      VC, #A2         ; Skip if VC != 162
$66E    $1A3C   JP       $A3C            ; Jump to A3C
$670    $B501   JP       V0, $501        ; Jump to V0 + 501
$672    $9508   UNKNOWN  $9508           ; Unknown 9xxx instruction
$674    $EAE1   UNKNOWN  $EAE1           ; Unknown Exxx instruction
$676    $A485   LD       I, $485         ; Load 485 into I
$678    $D6FB   DRW      V6, VF, #B      ; Draw 11-byte sprite at V6, VF
$67A    $8E98   UNKNOWN  8E98            ; Unknown 8xxx instruction
$67C    $A229   LD       I, $229         ; Load 229 into I
$67E    $70A7   ADD      V0, #A7         ; Add 167 to V0
$680    $D673   DRW      V6, V7, #3      ; Draw 3-byte sprite at V6, V7
$682    $963A   UNKNOWN  $963A           ; Unknown 9xxx instruction
$684    $73D8   ADD      V3, #D8         ; Add 216 to V3
$686    $077A   SYS      $77A            ; System call to 77A
$688    $C694   RND      V6, #94         ; V6 = random & 94
$68A    $E927   UNKNOWN  $E927           ; Unknown Exxx instruction
$68C    $38A8   SE       V8, #A8         ; Skip if V8 == 168
$68E    $E17B   UNKNOWN  $E17B           ; Unknown Exxx instruction
$690    $0F34   SYS      $F34            ; System call to F34
$692    $5047   UNKNOWN  $5047           ; Unknown 5xxx instruction
$694    $4B47   SNE      VB, #47         ; Skip if VB != 71
$696    $ADC1   LD       I, $DC1         ; Load DC1 into I
$698    $3979   SE       V9, #79         ; Skip if V9 == 121
$69A    $FFA0   UNKNOWN  FFA0            ; Unknown Fxxx instruction
$69C    $2992   CALL     $992            ; Call subroutine at 992
$69E    $242A   CALL     $42A            ; Call subroutine at 42A
$6A0    $0A08   SYS      $A08            ; System call to A08
$6A2    $B9F9   JP       V0, $9F9        ; Jump to V0 + 9F9
$6A4    $2492   CALL     $492            ; Call subroutine at 492
$6A6    $9DCA   UNKNOWN  $9DCA           ; Unknown 9xxx instruction
$6A8    $BED9   JP       V0, $ED9        ; Jump to V0 + ED9
$6AA    $7317   ADD      V3, #17         ; Add 23 to V3
$6AC    $6852   LD       V8, #52         ; Load 82 into V8
$6AE    $A16E   LD       I, $16E         ; Load 16E into I
$6B0    $049C   SYS      $49C            ; System call to 49C
$6B2    $934A   UNKNOWN  $934A           ; Unknown 9xxx instruction
$6B4    $0291   SYS      $291            ; System call to 291
$6B6    $2C55   CALL     $C55            ; Call subroutine at C55
$6B8    $19C5   JP       $9C5            ; Jump to 9C5
$6BA    $05D6   SYS      $5D6            ; System call to 5D6
$6BC    $CD71   RND      VD, #71         ; VD = random & 71
$6BE    $328B   SE       V2, #8B         ; Skip if V2 == 139
$6C0    $B8A7   JP       V0, $8A7        ; Jump to V0 + 8A7
$6C2    $7CD0   ADD      VC, #D0         ; Add 208 to VC
$6C4    $8898   UNKNOWN  8898            ; Unknown 8xxx instruction
$6C6    $C87F   RND      V8, #7F         ; V8 = random & 7F
$6C8    $0244   SYS      $244            ; System call to 244
$6CA    $EEF9   UNKNOWN  $EEF9           ; Unknown Exxx instruction
$6CC    $5025   UNKNOWN  $5025           ; Unknown 5xxx instruction
$6CE    $378B   SE       V7, #8B         ; Skip if V7 == 139
$6D0    $B7E9   JP       V0, $7E9        ; Jump to V0 + 7E9
$6D2    $F99A   UNKNOWN  F99A            ; Unknown Fxxx instruction
$6D4    $D1B0   DRW      V1, VB, #0      ; Draw 0-byte sprite at V1, VB
$6D6    $C679   RND      V6, #79         ; V6 = random & 79
$6D8    $90A2   UNKNOWN  $90A2           ; Unknown 9xxx instruction
$6DA    $2E42   CALL     $E42            ; Call subroutine at E42
$6DC    $87CF   UNKNOWN  87CF            ; Unknown 8xxx instruction
$6DE    $8D5A   UNKNOWN  8D5A            ; Unknown 8xxx instruction
$6E0    $C4AE   RND      V4, #AE         ; V4 = random & AE
$6E2    $4A48   SNE      VA, #48         ; Skip if VA != 72
$6E4    $3CAD   SE       VC, #AD         ; Skip if VC == 173
$6E6    $582C   UNKNOWN  $582C           ; Unknown 5xxx instruction
$6E8    $359F   SE       V5, #9F         ; Skip if V5 == 159
$6EA    $9718   UNKNOWN  $9718           ; Unknown 9xxx instruction
$6EC    $8573   XOR      V5, V7          ; V5 ^= V7
$6EE    $F624   UNKNOWN  F624            ; Unknown Fxxx instruction
$6F0    $4C6F   SNE      VC, #6F         ; Skip if VC != 111
$6F2    $25C8   CALL     $5C8            ; Call subroutine at 5C8
$6F4    $B8D9   JP       V0, $8D9        ; Jump to V0 + 8D9
$6F6    $0F30   SYS      $F30            ; System call to F30
$6F8    $3960   SE       V9, #60         ; Skip if V9 == 96
$6FA    $1CC3   JP       $CC3            ; Jump to CC3
$6FC    $752E   ADD      V5, #2E         ; Add 46 to V5
$6FE    $1058   JP       $058            ; Jump to 058
$700    $79A6   ADD      V9, #A6         ; Add 166 to V9
$702    $0854   SYS      $854            ; System call to 854
$704    $03C7   SYS      $3C7            ; System call to 3C7
$706    $00FE   SYS      $0FE            ; System call to 0FE
$708    $D0EB   DRW      V0, VE, #B      ; Draw 11-byte sprite at V0, VE
$70A    $14C1   JP       $4C1            ; Jump to 4C1
$70C    $7F76   ADD      VF, #76         ; Add 118 to VF
$70E    $C537   RND      V5, #37         ; V5 = random & 37
$710    $A766   LD       I, $766         ; Load 766 into I
$712    $B3BD   JP       V0, $3BD        ; Jump to V0 + 3BD
$714    $3841   SE       V8, #41         ; Skip if V8 == 65
$716    $164D   JP       $64D            ; Jump to 64D
$718    $0BD9   SYS      $BD9            ; System call to BD9
$71A    $64E5   LD       V4, #E5         ; Load 229 into V4
$71C    $6133   LD       V1, #33         ; Load 51 into V1
$71E    $3715   SE       V7, #15         ; Skip if V7 == 21
$720    $C494   RND      V4, #94         ; V4 = random & 94
$722    $A81B   LD       I, $81B         ; Load 81B into I
$724    $9903   UNKNOWN  $9903           ; Unknown 9xxx instruction
$726    $3F6A   SE       VF, #6A         ; Skip if VF == 106
$728    $1520   JP       $520            ; Jump to 520
$72A    $F22D   UNKNOWN  F22D            ; Unknown Fxxx instruction
$72C    $1922   JP       $922            ; Jump to 922
$72E    $EBB4   UNKNOWN  $EBB4           ; Unknown Exxx instruction
$730    $7638   ADD      V6, #38         ; Add 56 to V6
$732    $1D80   JP       $D80            ; Jump to D80
$734    $75AD   ADD      V5, #AD         ; Add 173 to V5
$736    $592E   UNKNOWN  $592E           ; Unknown 5xxx instruction
$738    $4BE7   SNE      VB, #E7         ; Skip if VB != 231
$73A    $79E8   ADD      V9, #E8         ; Add 232 to V9
$73C    $7406   ADD      V4, #06         ; Add 6 to V4
$73E    $D05E   DRW      V0, V5, #E      ; Draw 14-byte sprite at V0, V5
$740    $FE63   UNKNOWN  FE63            ; Unknown Fxxx instruction
$742    $C3F6   RND      V3, #F6         ; V3 = random & F6
$744    $D3DA   DRW      V3, VD, #A      ; Draw 10-byte sprite at V3, VD
$746    $3A05   SE       VA, #05         ; Skip if VA == 5
$748    $799A   ADD      V9, #9A         ; Add 154 to V9
$74A    $0D7F   SYS      $D7F            ; System call to D7F
$74C    $5C33   UNKNOWN  $5C33           ; Unknown 5xxx instruction
$74E    $7666   ADD      V6, #66         ; Add 102 to V6
$750    $2A30   CALL     $A30            ; Call subroutine at A30
$752    $2BF3   CALL     $BF3            ; Call subroutine at BF3
$754    $0032   SYS      $032            ; System call to 032
$756    $A0DA   LD       I, $0DA         ; Load 0DA into I
$758    $283B   CALL     $83B            ; Call subroutine at 83B
$75A    $11DE   JP       $1DE            ; Jump to 1DE
$75C    $7333   ADD      V3, #33         ; Add 51 to V3
$75E    $C628   RND      V6, #28         ; V6 = random & 28
$760    $4270   SNE      V2, #70         ; Skip if V2 != 112
$762    $DB5B   DRW      VB, V5, #B      ; Draw 11-byte sprite at VB, V5
$764    $4064   SNE      V0, #64         ; Skip if V0 != 100
$766    $792A   ADD      V9, #2A         ; Add 42 to V9
$768    $6B94   LD       VB, #94         ; Load 148 into VB
$76A    $D441   DRW      V4, V4, #1      ; Draw 1-byte sprite at V4, V4
$76C    $1AAD   JP       $AAD            ; Jump to AAD
$76E    $D394   DRW      V3, V9, #4      ; Draw 4-byte sprite at V3, V9
$770    $8555   SUB      V5, V5          ; V5 -= V5, VF = !borrow
$772    $95DD   UNKNOWN  $95DD           ; Unknown 9xxx instruction
$774    $5BD4   UNKNOWN  $5BD4           ; Unknown 5xxx instruction
$776    $75C1   ADD      V5, #C1         ; Add 193 to V5
$778    $E9F3   UNKNOWN  $E9F3           ; Unknown Exxx instruction
$77A    $9531   UNKNOWN  $9531           ; Unknown 9xxx instruction
$77C    $6ECA   LD       VE, #CA         ; Load 202 into VE
$77E    $DA75   DRW      VA, V7, #5      ; Draw 5-byte sprite at VA, V7
$780    $126D   JP       $26D            ; Jump to 26D
$782    $C6C2   RND      V6, #C2         ; V6 = random & C2
$784    $2788   CALL     $788            ; Call subroutine at 788
$786    $ED62   UNKNOWN  $ED62           ; Unknown Exxx instruction
$788    $992B   UNKNOWN  $992B           ; Unknown 9xxx instruction
$78A    $F661   UNKNOWN  F661            ; Unknown Fxxx instruction
$78C    $6286   LD       V2, #86         ; Load 134 into V2
$78E    $461A   SNE      V6, #1A         ; Skip if V6 != 26
$790    $26B9   CALL     $6B9            ; Call subroutine at 6B9
$792    $BBA4   JP       V0, $BA4        ; Jump to V0 + BA4
$794    $B398   JP       V0, $398        ; Jump to V0 + 398
$796    $C932   RND      V9, #32         ; V9 = random & 32
$798    $D950   DRW      V9, V5, #0      ; Draw 0-byte sprite at V9, V5
$79A    $5AE6   UNKNOWN  $5AE6           ; Unknown 5xxx instruction
$79C    $F1DD   UNKNOWN  F1DD            ; Unknown Fxxx instruction
$79E    $E014   UNKNOWN  $E014           ; Unknown Exxx instruction
$7A0    $A117   LD       I, $117         ; Load 117 into I
$7A2    $157F   JP       $57F            ; Jump to 57F
$7A4    $BFE4   JP       V0, $FE4        ; Jump to V0 + FE4
$7A6    $F7C1   UNKNOWN  F7C1            ; Unknown Fxxx instruction
$7A8    $0AE0   SYS      $AE0            ; System call to AE0
$7AA    $633E   LD       V3, #3E         ; Load 62 into V3
$7AC    $A585   LD       I, $585         ; Load 585 into I
$7AE    $D8DF   DRW      V8, VD, #F      ; Draw 15-byte sprite at V8, VD
$7B0    $080A   SYS      $80A            ; System call to 80A
$7B2    $2FF6   CALL     $FF6            ; Call subroutine at FF6
$7B4    $A593   LD       I, $593         ; Load 593 into I
$7B6    $5472   UNKNOWN  $5472           ; Unknown 5xxx instruction
$7B8    $02B0   SYS      $2B0            ; System call to 2B0
$7BA    $1D99   JP       $D99            ; Jump to D99
$7BC    $9D0D   UNKNOWN  $9D0D           ; Unknown 9xxx instruction
$7BE    $8A51   OR       VA, V5          ; VA |= V5
$7C0    $1E8A   JP       $E8A            ; Jump to E8A
$7C2    $C8A9   RND      V8, #A9         ; V8 = random & A9
$7C4    $9188   UNKNOWN  $9188           ; Unknown 9xxx instruction
$7C6    $F1DA   UNKNOWN  F1DA            ; Unknown Fxxx instruction
$7C8    $324E   SE       V2, #4E         ; Skip if V2 == 78
$7CA    $FA3E   UNKNOWN  FA3E            ; Unknown Fxxx instruction
$7CC    $D6F0   DRW      V6, VF, #0      ; Draw 0-byte sprite at V6, VF
$7CE    $C1D3   RND      V1, #D3         ; V1 = random & D3
$7D0    $F6F9   UNKNOWN  F6F9            ; Unknown Fxxx instruction
$7D2    $139C   JP       $39C            ; Jump to 39C
$7D4    $2A80   CALL     $A80            ; Call subroutine at A80
$7D6    $AB1A   LD       I, $B1A         ; Load B1A into I
$7D8    $F88E   UNKNOWN  F88E            ; Unknown Fxxx instruction
$7DA    $045E   SYS      $45E            ; System call to 45E
$7DC    $8145   SUB      V1, V4          ; V1 -= V4, VF = !borrow
$7DE    $E474   UNKNOWN  $E474           ; Unknown Exxx instruction
$7E0    $3631   SE       V6, #31         ; Skip if V6 == 49
$7E2    $81FA   UNKNOWN  81FA            ; Unknown 8xxx instruction
$7E4    $9A84   UNKNOWN  $9A84           ; Unknown 9xxx instruction
$7E6    $FD99   UNKNOWN  FD99            ; Unknown Fxxx instruction
$7E8    $D6C5   DRW      V6, VC, #5      ; Draw 5-byte sprite at V6, VC
$7EA    $2004   CALL     $004            ; Call subroutine at 004
$7EC    $208F   CALL     $08F            ; Call subroutine at 08F
$7EE    $88F6   SHR      V8              ; V8 >>= 1, VF = LSB
$7F0    $2BED   CALL     $BED            ; Call subroutine at BED
$7F2    $EC8A   UNKNOWN  $EC8A           ; Unknown Exxx instruction
$7F4    $B4AC   JP       V0, $4AC        ; Jump to V0 + 4AC
$7F6    $E510   UNKNOWN  $E510           ; Unknown Exxx instruction
$7F8    $B657   JP       V0, $657        ; Jump to V0 + 657
$7FA    $0340   SYS      $340            ; System call to 340
$7FC    $EE5F   UNKNOWN  $EE5F           ; Unknown Exxx instruction
$7FE    $E540   UNKNOWN  $E540           ; Unknown Exxx instruction
$800    $E85D   UNKNOWN  $E85D           ; Unknown Exxx instruction
$802    $FC29   LD       F, VC           ; I = sprite address for digit VC
$804    $7786   ADD      V7, #86         ; Add 134 to V7
$806    $16A0   JP       $6A0            ; Jump to 6A0
$808    $86DD   UNKNOWN  86DD            ; Unknown 8xxx instruction
$80A    $E36D   UNKNOWN  $E36D           ; Unknown Exxx instruction
$80C    $73F5   ADD      V3, #F5         ; Add 245 to V3
$80E    $50EF   UNKNOWN  $50EF           ; Unknown 5xxx instruction
$810    $6B3F   LD       VB, #3F         ; Load 63 into VB
$812    $E0BC   UNKNOWN  $E0BC           ; Unknown Exxx instruction
$814    $33B1   SE       V3, #B1         ; Skip if V3 == 177
$816    $3544   SE       V5, #44         ; Skip if V5 == 68
$818    $F3A1   UNKNOWN  F3A1            ; Unknown Fxxx instruction
$81A    $9C5C   UNKNOWN  $9C5C           ; Unknown 9xxx instruction
$81C    $9926   UNKNOWN  $9926           ; Unknown 9xxx instruction
$81E    $7BA4   ADD      VB, #A4         ; Add 164 to VB
$820    $8B16   SHR      VB              ; VB >>= 1, VF = LSB
$822    $8883   XOR      V8, V8          ; V8 ^= V8
$824    $63D0   LD       V3, #D0         ; Load 208 into V3
$826    $5CB1   UNKNOWN  $5CB1           ; Unknown 5xxx instruction
$828    $3137   SE       V1, #37         ; Skip if V1 == 55
$82A    $B859   JP       V0, $859        ; Jump to V0 + 859
$82C    $F2DE   UNKNOWN  F2DE            ; Unknown Fxxx instruction
$82E    $ECD4   UNKNOWN  $ECD4           ; Unknown Exxx instruction
$830    $EF77   UNKNOWN  $EF77           ; Unknown Exxx instruction
$832    $372B   SE       V7, #2B         ; Skip if V7 == 43
$834    $4DBC   SNE      VD, #BC         ; Skip if VD != 188
$836    $B8B8   JP       V0, $8B8        ; Jump to V0 + 8B8
$838    $4C1F   SNE      VC, #1F         ; Skip if VC != 31
$83A    $FDCD   UNKNOWN  FDCD            ; Unknown Fxxx instruction
$83C    $F78F   UNKNOWN  F78F            ; Unknown Fxxx instruction
$83E    $B441   JP       V0, $441        ; Jump to V0 + 441
$840    $A7C2   LD       I, $7C2         ; Load 7C2 into I
$842    $65E0   LD       V5, #E0         ; Load 224 into V5
$844    $5B9D   UNKNOWN  $5B9D           ; Unknown 5xxx instruction
$846    $8231   OR       V2, V3          ; V2 |= V3
$848    $F011   UNKNOWN  F011            ; Unknown Fxxx instruction
$84A    $5C2D   UNKNOWN  $5C2D           ; Unknown 5xxx instruction
$84C    $6D6A   LD       VD, #6A         ; Load 106 into VD
$84E    $5329   UNKNOWN  $5329           ; Unknown 5xxx instruction
$850    $3A9C   SE       VA, #9C         ; Skip if VA == 156
$852    $A56E   LD       I, $56E         ; Load 56E into I
$854    $795C   ADD      V9, #5C         ; Add 92 to V9
$856    $A709   LD       I, $709         ; Load 709 into I
$858    $C669   RND      V6, #69         ; V6 = random & 69
$85A    $E00D   UNKNOWN  $E00D           ; Unknown Exxx instruction
$85C    $0792   SYS      $792            ; System call to 792
$85E    $5C8D   UNKNOWN  $5C8D           ; Unknown 5xxx instruction
$860    $E360   UNKNOWN  $E360           ; Unknown Exxx instruction
$862    $3FF6   SE       VF, #F6         ; Skip if VF == 246
$864    $DF96   DRW      VF, V9, #6      ; Draw 6-byte sprite at VF, V9
$866    $72AB   ADD      V2, #AB         ; Add 171 to V2
$868    $A6A2   LD       I, $6A2         ; Load 6A2 into I
$86A    $634F   LD       V3, #4F         ; Load 79 into V3
$86C    $252B   CALL     $52B            ; Call subroutine at 52B
$86E    $0A34   SYS      $A34            ; System call to A34
$870    $3548   SE       V5, #48         ; Skip if V5 == 72
$872    $9FAF   UNKNOWN  $9FAF           ; Unknown 9xxx instruction
$874    $BA35   JP       V0, $A35        ; Jump to V0 + A35
$876    $FDB9   UNKNOWN  FDB9            ; Unknown Fxxx instruction
$878    $2E12   CALL     $E12            ; Call subroutine at E12
$87A    $8D7A   UNKNOWN  8D7A            ; Unknown 8xxx instruction
$87C    $9092   UNKNOWN  $9092           ; Unknown 9xxx instruction
$87E    $7D21   ADD      VD, #21         ; Add 33 to VD
$880    $A872   LD       I, $872         ; Load 872 into I
$882    $A898   LD       I, $898         ; Load 898 into I
$884    $F56C   UNKNOWN  F56C            ; Unknown Fxxx instruction
$886    $FAFF   UNKNOWN  FAFF            ; Unknown Fxxx instruction
$888    $2D66   CALL     $D66            ; Call subroutine at D66
$88A    $FAE5   UNKNOWN  FAE5            ; Unknown Fxxx instruction
$88C    $1042   JP       $042            ; Jump to 042
$88E    $8022   AND      V0, V2          ; V0 &= V2
$890    $C0C4   RND      V0, #C4         ; V0 = random & C4
$892    $8846   SHR      V8              ; V8 >>= 1, VF = LSB
$894    $85DD   UNKNOWN  85DD            ; Unknown 8xxx instruction
$896    $8765   SUB      V7, V6          ; V7 -= V6, VF = !borrow
$898    $78AF   ADD      V8, #AF         ; Add 175 to V8
$89A    $3D65   SE       VD, #65         ; Skip if VD == 101
$89C    $98D8   UNKNOWN  $98D8           ; Unknown 9xxx instruction
$89E    $E1FE   UNKNOWN  $E1FE           ; Unknown Exxx instruction
$8A0    $CCB2   RND      VC, #B2         ; VC = random & B2
$8A2    $AFA6   LD       I, $FA6         ; Load FA6 into I
$8A4    $4D69   SNE      VD, #69         ; Skip if VD != 105
$8A6    $FA05   UNKNOWN  FA05            ; Unknown Fxxx instruction
$8A8    $12F4   JP       $2F4            ; Jump to 2F4
$8AA    $E55A   UNKNOWN  $E55A           ; Unknown Exxx instruction
$8AC    $EAC8   UNKNOWN  $EAC8           ; Unknown Exxx instruction
$8AE    $3C81   SE       VC, #81         ; Skip if VC == 129
$8B0    $A172   LD       I, $172         ; Load 172 into I
$8B2    $90C3   UNKNOWN  $90C3           ; Unknown 9xxx instruction
$8B4    $E54C   UNKNOWN  $E54C           ; Unknown Exxx instruction
$8B6    $D3F0   DRW      V3, VF, #0      ; Draw 0-byte sprite at V3, VF
$8B8    $E56B   UNKNOWN  $E56B           ; Unknown Exxx instruction
$8BA    $6D0B   LD       VD, #0B         ; Load 11 into VD
$8BC    $9F6F   UNKNOWN  $9F6F           ; Unknown 9xxx instruction
$8BE    $FD23   UNKNOWN  FD23            ; Unknown Fxxx instruction
$8C0    $8CC5   SUB      VC, VC          ; VC -= VC, VF = !borrow
$8C2    $96B4   UNKNOWN  $96B4           ; Unknown 9xxx instruction
$8C4    $0478   SYS      $478            ; System call to 478
$8C6    $B0D0   JP       V0, $0D0        ; Jump to V0 + 0D0
$8C8    $1951   JP       $951            ; Jump to 951
$8CA    $C3A6   RND      V3, #A6         ; V3 = random & A6
$8CC    $67AE   LD       V7, #AE         ; Load 174 into V7
$8CE    $A2F9   LD       I, $2F9         ; Load 2F9 into I
$8D0    $EE5A   UNKNOWN  $EE5A           ; Unknown Exxx instruction
$8D2    $892A   UNKNOWN  892A            ; Unknown 8xxx instruction
$8D4    $198D   JP       $98D            ; Jump to 98D
$8D6    $0D94   SYS      $D94            ; System call to D94
$8D8    $2617   CALL     $617            ; Call subroutine at 617
$8DA    $4FC9   SNE      VF, #C9         ; Skip if VF != 201
$8DC    $FBB1   UNKNOWN  FBB1            ; Unknown Fxxx instruction
$8DE    $3033   SE       V0, #33         ; Skip if V0 == 51
$8E0    $2808   CALL     $808            ; Call subroutine at 808
$8E2    $18BB   JP       $8BB            ; Jump to 8BB
$8E4    $E517   UNKNOWN  $E517           ; Unknown Exxx instruction
$8E6    $9F18   UNKNOWN  $9F18           ; Unknown 9xxx instruction
$8E8    $C5C6   RND      V5, #C6         ; V5 = random & C6
$8EA    $5297   UNKNOWN  $5297           ; Unknown 5xxx instruction
$8EC    $DA07   DRW      VA, V0, #7      ; Draw 7-byte sprite at VA, V0
$8EE    $0563   SYS      $563            ; System call to 563
$8F0    $342B   SE       V4, #2B         ; Skip if V4 == 43
$8F2    $A12C   LD       I, $12C         ; Load 12C into I
$8F4    $261E   CALL     $61E            ; Call subroutine at 61E
$8F6    $3087   SE       V0, #87         ; Skip if V0 == 135
$8F8    $69BE   LD       V9, #BE         ; Load 190 into V9
$8FA    $911C   UNKNOWN  $911C           ; Unknown 9xxx instruction
$8FC    $AC53   LD       I, $C53         ; Load C53 into I
$8FE    $3D78   SE       VD, #78         ; Skip if VD == 120
$900    $4454   SNE      V4, #54         ; Skip if V4 != 84
$902    $E89B   UNKNOWN  $E89B           ; Unknown Exxx instruction
$904    $3DAD   SE       VD, #AD         ; Skip if VD == 173
$906    $4240   SNE      V2, #40         ; Skip if V2 != 64
$908    $70FC   ADD      V0, #FC         ; Add 252 to V0
$90A    $C5CC   RND      V5, #CC         ; V5 = random & CC
$90C    $0317   SYS      $317            ; System call to 317
$90E    $CFB8   RND      VF, #B8         ; VF = random & B8
$910    $1E5B   JP       $E5B            ; Jump to E5B
$912    $FC53   UNKNOWN  FC53            ; Unknown Fxxx instruction
$914    $33BC   SE       V3, #BC         ; Skip if V3 == 188
$916    $00CB   SYS      $0CB            ; System call to 0CB
$918    $C2B5   RND      V2, #B5         ; V2 = random & B5
$91A    $9E3A   UNKNOWN  $9E3A           ; Unknown 9xxx instruction
$91C    $4E1B   SNE      VE, #1B         ; Skip if VE != 27
$91E    $007A   SYS      $07A            ; System call to 07A
$920    $EAFC   UNKNOWN  $EAFC           ; Unknown Exxx instruction
$922    $A0BC   LD       I, $0BC         ; Load 0BC into I
$924    $0E38   SYS      $E38            ; System call to E38
$926    $98AC   UNKNOWN  $98AC           ; Unknown 9xxx instruction
$928    $9603   UNKNOWN  $9603           ; Unknown 9xxx instruction
$92A    $5AA2   UNKNOWN  $5AA2           ; Unknown 5xxx instruction
$92C    $7760   ADD      V7, #60         ; Add 96 to V7
$92E    $BA83   JP       V0, $A83        ; Jump to V0 + A83
$930    $9E16   UNKNOWN  $9E16           ; Unknown 9xxx instruction
$932    $1CC2   JP       $CC2            ; Jump to CC2
$934    $F678   UNKNOWN  F678            ; Unknown Fxxx instruction
$936    $FC66   UNKNOWN  FC66            ; Unknown Fxxx instruction
$938    $71FC   ADD      V1, #FC         ; Add 252 to V1
$93A    $4523   SNE      V5, #23         ; Skip if V5 != 35
$93C    $43BE   SNE      V3, #BE         ; Skip if V3 != 190
$93E    $200E   CALL     $00E            ; Call subroutine at 00E
$940    $C0F5   RND      V0, #F5         ; V0 = random & F5
$942    $5F75   UNKNOWN  $5F75           ; Unknown 5xxx instruction
$944    $56B7   UNKNOWN  $56B7           ; Unknown 5xxx instruction
$946    $7EE4   ADD      VE, #E4         ; Add 228 to VE
$948    $F1E2   UNKNOWN  F1E2            ; Unknown Fxxx instruction
$94A    $9F2B   UNKNOWN  $9F2B           ; Unknown 9xxx instruction
$94C    $9214   UNKNOWN  $9214           ; Unknown 9xxx instruction
$94E    $6822   LD       V8, #22         ; Load 34 into V8
$950    $F4B5   UNKNOWN  F4B5            ; Unknown Fxxx instruction
$952    $2CC2   CALL     $CC2            ; Call subroutine at CC2
$954    $7BE7   ADD      VB, #E7         ; Add 231 to VB
$956    $9531   UNKNOWN  $9531           ; Unknown 9xxx instruction
$958    $099C   SYS      $99C            ; System call to 99C
$95A    $0003   SYS      $003            ; System call to 003
$95C    $02E8   SYS      $2E8            ; System call to 2E8
$95E    $73E6   ADD      V3, #E6         ; Add 230 to V3
$960    $3D65   SE       VD, #65         ; Skip if VD == 101
$962    $3804   SE       V8, #04         ; Skip if V8 == 4
$964    $F518   LD       ST, V5          ; Sound timer = V5
$966    $F287   UNKNOWN  F287            ; Unknown Fxxx instruction
$968    $48D5   SNE      V8, #D5         ; Skip if V8 != 213
$96A    $7AA3   ADD      VA, #A3         ; Add 163 to VA
$96C    $2F61   CALL     $F61            ; Call subroutine at F61
$96E    $5B94   UNKNOWN  $5B94           ; Unknown 5xxx instruction
$970    $E458   UNKNOWN  $E458           ; Unknown Exxx instruction
$972    $1E1B   JP       $E1B            ; Jump to E1B
$974    $01BA   SYS      $1BA            ; System call to 1BA
$976    $1972   JP       $972            ; Jump to 972
$978    $847A   UNKNOWN  847A            ; Unknown 8xxx instruction
$97A    $AE6D   LD       I, $E6D         ; Load E6D into I
$97C    $6363   LD       V3, #63         ; Load 99 into V3
$97E    $97A3   UNKNOWN  $97A3           ; Unknown 9xxx instruction
$980    $CC1C   RND      VC, #1C         ; VC = random & 1C
$982    $7D04   ADD      VD, #04         ; Add 4 to VD
$984    $C5A9   RND      V5, #A9         ; V5 = random & A9
$986    $6336   LD       V3, #36         ; Load 54 into V3
$988    $BCEB   JP       V0, $CEB        ; Jump to V0 + CEB
$98A    $4B16   SNE      VB, #16         ; Skip if VB != 22
$98C    $2A69   CALL     $A69            ; Call subroutine at A69
$98E    $0D02   SYS      $D02            ; System call to D02
$990    $DDA4   DRW      VD, VA, #4      ; Draw 4-byte sprite at VD, VA
$992    $BB41   JP       V0, $B41        ; Jump to V0 + B41
$994    $E8C0   UNKNOWN  $E8C0           ; Unknown Exxx instruction
$996    $6FF4   LD       VF, #F4         ; Load 244 into VF
$998    $F959   UNKNOWN  F959            ; Unknown Fxxx instruction
$99A    $E8C4   UNKNOWN  $E8C4           ; Unknown Exxx instruction
$99C    $72BC   ADD      V2, #BC         ; Add 188 to V2
$99E    $0C23   SYS      $C23            ; System call to C23
$9A0    $E3B3   UNKNOWN  $E3B3           ; Unknown Exxx instruction
$9A2    $6BAD   LD       VB, #AD         ; Load 173 into VB
$9A4    $3F8E   SE       VF, #8E         ; Skip if VF == 142
$9A6    $B04A   JP       V0, $04A        ; Jump to V0 + 04A
$9A8    $64B7   LD       V4, #B7         ; Load 183 into V4
$9AA    $8CE9   UNKNOWN  8CE9            ; Unknown 8xxx instruction
$9AC    $063E   SYS      $63E            ; System call to 63E
$9AE    $E26B   UNKNOWN  $E26B           ; Unknown Exxx instruction
$9B0    $CDAF   RND      VD, #AF         ; VD = random & AF
$9B2    $A35E   LD       I, $35E         ; Load 35E into I
$9B4    $FEE0   UNKNOWN  FEE0            ; Unknown Fxxx instruction
$9B6    $3D56   SE       VD, #56         ; Skip if VD == 86
$9B8    $16B8   JP       $6B8            ; Jump to 6B8
$9BA    $FFA6   UNKNOWN  FFA6            ; Unknown Fxxx instruction
$9BC    $4E19   SNE      VE, #19         ; Skip if VE != 25
$9BE    $ECC9   UNKNOWN  $ECC9           ; Unknown Exxx instruction
$9C0    $BA8B   JP       V0, $A8B        ; Jump to V0 + A8B
$9C2    $4402   SNE      V4, #02         ; Skip if V4 != 2
$9C4    $79A8   ADD      V9, #A8         ; Add 168 to V9
$9C6    $8B22   AND      VB, V2          ; VB &= V2
$9C8    $11F3   JP       $1F3            ; Jump to 1F3
$9CA    $0E17   SYS      $E17            ; System call to E17
$9CC    $B1B1   JP       V0, $1B1        ; Jump to V0 + 1B1
$9CE    $CFBC   RND      VF, #BC         ; VF = random & BC
$9D0    $2E3A   CALL     $E3A            ; Call subroutine at E3A
$9D2    $3D1A   SE       VD, #1A         ; Skip if VD == 26
$9D4    $ECEE   UNKNOWN  $ECEE           ; Unknown Exxx instruction
$9D6    $65AE   LD       V5, #AE         ; Load 174 into V5
$9D8    $B716   JP       V0, $716        ; Jump to V0 + 716
$9DA    $227E   CALL     $27E            ; Call subroutine at 27E
$9DC    $BD45   JP       V0, $D45        ; Jump to V0 + D45
$9DE    $082E   SYS      $82E            ; System call to 82E
$9E0    $2A54   CALL     $A54            ; Call subroutine at A54
$9E2    $AC00   LD       I, $C00         ; Load C00 into I
$9E4    $5988   UNKNOWN  $5988           ; Unknown 5xxx instruction
$9E6    $55DC   UNKNOWN  $55DC           ; Unknown 5xxx instruction
$9E8    $A5EC   LD       I, $5EC         ; Load 5EC into I
$9EA    $F85E   UNKNOWN  F85E            ; Unknown Fxxx instruction
$9EC    $EF8E   UNKNOWN  $EF8E           ; Unknown Exxx instruction
$9EE    $00C2   SYS      $0C2            ; System call to 0C2
$9F0    $7E02   ADD      VE, #02         ; Add 2 to VE
$9F2    $D576   DRW      V5, V7, #6      ; Draw 6-byte sprite at V5, V7
$9F4    $E88C   UNKNOWN  $E88C           ; Unknown Exxx instruction
$9F6    $FF92   UNKNOWN  FF92            ; Unknown Fxxx instruction
$9F8    $200C   CALL     $00C            ; Call subroutine at 00C
$9FA    $2BE9   CALL     $BE9            ; Call subroutine at BE9
$9FC    $2BC0   CALL     $BC0            ; Call subroutine at BC0
$9FE    $0031   SYS      $031            ; System call to 031
$A00    $7A3C   ADD      VA, #3C         ; Add 60 to VA
$A02    $F415   LD       DT, V4          ; Delay timer = V4
$A04    $8125   SUB      V1, V2          ; V1 -= V2, VF = !borrow
$A06    $9BC5   UNKNOWN  $9BC5           ; Unknown 9xxx instruction
$A08    $F710   UNKNOWN  F710            ; Unknown Fxxx instruction
$A0A    $B016   JP       V0, $016        ; Jump to V0 + 016
$A0C    $77DC   ADD      V7, #DC         ; Add 220 to V7
$A0E    $98CF   UNKNOWN  $98CF           ; Unknown 9xxx instruction
$A10    $B865   JP       V0, $865        ; Jump to V0 + 865
$A12    $398C   SE       V9, #8C         ; Skip if V9 == 140
$A14    $D47E   DRW      V4, V7, #E      ; Draw 14-byte sprite at V4, V7
$A16    $1F39   JP       $F39            ; Jump to F39
$A18    $F0FC   UNKNOWN  F0FC            ; Unknown Fxxx instruction
$A1A    $1B76   JP       $B76            ; Jump to B76
$A1C    $4D17   SNE      VD, #17         ; Skip if VD != 23
$A1E    $4A2A   SNE      VA, #2A         ; Skip if VA != 42
$A20    $8369   UNKNOWN  8369            ; Unknown 8xxx instruction
$A22    $161E   JP       $61E            ; Jump to 61E
$A24    $1A2F   JP       $A2F            ; Jump to A2F
$A26    $62C5   LD       V2, #C5         ; Load 197 into V2
$A28    $EC77   UNKNOWN  $EC77           ; Unknown Exxx instruction
$A2A    $5AC9   UNKNOWN  $5AC9           ; Unknown 5xxx instruction
$A2C    $7EB1   ADD      VE, #B1         ; Add 177 to VE
$A2E    $6583   LD       V5, #83         ; Load 131 into V5
$A30    $2590   CALL     $590            ; Call subroutine at 590
$A32    $F485   UNKNOWN  F485            ; Unknown Fxxx instruction
$A34    $92F4   UNKNOWN  $92F4           ; Unknown 9xxx instruction
$A36    $0C8A   SYS      $C8A            ; System call to C8A
$A38    $5243   UNKNOWN  $5243           ; Unknown 5xxx instruction
$A3A    $5E48   UNKNOWN  $5E48           ; Unknown 5xxx instruction
$A3C    $DBBD   DRW      VB, VB, #D      ; Draw 13-byte sprite at VB, VB
$A3E    $59D5   UNKNOWN  $59D5           ; Unknown 5xxx instruction
$A40    $8695   SUB      V6, V9          ; V6 -= V9, VF = !borrow
$A42    $302A   SE       V0, #2A         ; Skip if V0 == 42
$A44    $9165   UNKNOWN  $9165           ; Unknown 9xxx instruction
$A46    $F830   UNKNOWN  F830            ; Unknown Fxxx instruction
$A48    $3EEB   SE       VE, #EB         ; Skip if VE == 235
$A4A    $80A1   OR       V0, VA          ; V0 |= VA
$A4C    $2A83   CALL     $A83            ; Call subroutine at A83
$A4E    $CA77   RND      VA, #77         ; VA = random & 77
$A50    $8B76   SHR      VB              ; VB >>= 1, VF = LSB
$A52    $179F   JP       $79F            ; Jump to 79F
$A54    $F455   LD       [I], V4         ; Store V0-V4 at I
$A56    $58EE   UNKNOWN  $58EE           ; Unknown 5xxx instruction
$A58    $2433   CALL     $433            ; Call subroutine at 433
$A5A    $35E9   SE       V5, #E9         ; Skip if V5 == 233
$A5C    $7550   ADD      V5, #50         ; Add 80 to V5
$A5E    $E661   UNKNOWN  $E661           ; Unknown Exxx instruction
$A60    $6B9F   LD       VB, #9F         ; Load 159 into VB
$A62    $E744   UNKNOWN  $E744           ; Unknown Exxx instruction
$A64    $80E3   XOR      V0, VE          ; V0 ^= VE
$A66    $45AF   SNE      V5, #AF         ; Skip if V5 != 175
$A68    $0400   SYS      $400            ; System call to 400
$A6A    $E9A5   UNKNOWN  $E9A5           ; Unknown Exxx instruction
$A6C    $E5B4   UNKNOWN  $E5B4           ; Unknown Exxx instruction
$A6E    $36A5   SE       V6, #A5         ; Skip if V6 == 165
$A70    $A6F9   LD       I, $6F9         ; Load 6F9 into I
$A72    $B584   JP       V0, $584        ; Jump to V0 + 584
$A74    $7525   ADD      V5, #25         ; Add 37 to V5
$A76    $23DA   CALL     $3DA            ; Call subroutine at 3DA
$A78    $3EFF   SE       VE, #FF         ; Skip if VE == 255
$A7A    $769C   ADD      V6, #9C         ; Add 156 to V6
$A7C    $6232   LD       V2, #32         ; Load 50 into V2
$A7E    $5AEA   UNKNOWN  $5AEA           ; Unknown 5xxx instruction
$A80    $B77B   JP       V0, $77B        ; Jump to V0 + 77B
$A82    $2BAC   CALL     $BAC            ; Call subroutine at BAC
$A84    $DB42   DRW      VB, V4, #2      ; Draw 2-byte sprite at VB, V4
$A86    $A745   LD       I, $745         ; Load 745 into I
$A88    $90F5   UNKNOWN  $90F5           ; Unknown 9xxx instruction
$A8A    $24F1   CALL     $4F1            ; Call subroutine at 4F1
$A8C    $B74E   JP       V0, $74E        ; Jump to V0 + 74E
$A8E    $82D9   UNKNOWN  82D9            ; Unknown 8xxx instruction
$A90    $D6B2   DRW      V6, VB, #2      ; Draw 2-byte sprite at V6, VB
$A92    $083C   SYS      $83C            ; System call to 83C
$A94    $47CF   SNE      V7, #CF         ; Skip if V7 != 207
$A96    $9F6D   UNKNOWN  $9F6D           ; Unknown 9xxx instruction
$A98    $191E   JP       $91E            ; Jump to 91E
$A9A    $94B5   UNKNOWN  $94B5           ; Unknown 9xxx instruction
$A9C    $937C   UNKNOWN  $937C           ; Unknown 9xxx instruction
$A9E    $41F9   SNE      V1, #F9         ; Skip if V1 != 249
$AA0    $50FB   UNKNOWN  $50FB           ; Unknown 5xxx instruction
$AA2    $8108   UNKNOWN  8108            ; Unknown 8xxx instruction
$AA4    $11C1   JP       $1C1            ; Jump to 1C1
$AA6    $484D   SNE      V8, #4D         ; Skip if V8 != 77
$AA8    $1B11   JP       $B11            ; Jump to B11
$AAA    $4218   SNE      V2, #18         ; Skip if V2 != 24
$AAC    $18FB   JP       $8FB            ; Jump to 8FB
$AAE    $8263   XOR      V2, V6          ; V2 ^= V6
$AB0    $841B   UNKNOWN  841B            ; Unknown 8xxx instruction
$AB2    $7BFD   ADD      VB, #FD         ; Add 253 to VB
$AB4    $56F8   UNKNOWN  $56F8           ; Unknown 5xxx instruction
$AB6    $9C78   UNKNOWN  $9C78           ; Unknown 9xxx instruction
$AB8    $3FFB   SE       VF, #FB         ; Skip if VF == 251
$ABA    $EC58   UNKNOWN  $EC58           ; Unknown Exxx instruction
$ABC    $677B   LD       V7, #7B         ; Load 123 into V7
$ABE    $B7C5   JP       V0, $7C5        ; Jump to V0 + 7C5
$AC0    $B593   JP       V0, $593        ; Jump to V0 + 593
$AC2    $76EE   ADD      V6, #EE         ; Add 238 to V6
$AC4    $43EE   SNE      V3, #EE         ; Skip if V3 != 238
$AC6    $986E   UNKNOWN  $986E           ; Unknown 9xxx instruction
$AC8    $C723   RND      V7, #23         ; V7 = random & 23
$ACA    $60F8   LD       V0, #F8         ; Load 248 into V0
$ACC    $FC2E   UNKNOWN  FC2E            ; Unknown Fxxx instruction
$ACE    $5D76   UNKNOWN  $5D76           ; Unknown 5xxx instruction
$AD0    $240A   CALL     $40A            ; Call subroutine at 40A
$AD2    $AF25   LD       I, $F25         ; Load F25 into I
$AD4    $024F   SYS      $24F            ; System call to 24F
$AD6    $DF58   DRW      VF, V5, #8      ; Draw 8-byte sprite at VF, V5
$AD8    $0521   SYS      $521            ; System call to 521
$ADA    $CD9D   RND      VD, #9D         ; VD = random & 9D
$ADC    $F1A4   UNKNOWN  F1A4            ; Unknown Fxxx instruction
$ADE    $C1F2   RND      V1, #F2         ; V1 = random & F2
$AE0    $0747   SYS      $747            ; System call to 747
$AE2    $44A1   SNE      V4, #A1         ; Skip if V4 != 161
$AE4    $09B3   SYS      $9B3            ; System call to 9B3
$AE6    $E63F   UNKNOWN  $E63F           ; Unknown Exxx instruction
$AE8    $6D77   LD       VD, #77         ; Load 119 into VD
$AEA    $55C6   UNKNOWN  $55C6           ; Unknown 5xxx instruction
$AEC    $10B8   JP       $0B8            ; Jump to 0B8
$AEE    $C3AF   RND      V3, #AF         ; V3 = random & AF
$AF0    $EA10   UNKNOWN  $EA10           ; Unknown Exxx instruction
$AF2    $3E32   SE       VE, #32         ; Skip if VE == 50
$AF4    $B39A   JP       V0, $39A        ; Jump to V0 + 39A
$AF6    $1EAF   JP       $EAF            ; Jump to EAF
$AF8    $AFD8   LD       I, $FD8         ; Load FD8 into I
$AFA    $D056   DRW      V0, V5, #6      ; Draw 6-byte sprite at V0, V5
$AFC    $873D   UNKNOWN  873D            ; Unknown 8xxx instruction
$AFE    $9712   UNKNOWN  $9712           ; Unknown 9xxx instruction
$B00    $6A1A   LD       VA, #1A         ; Load 26 into VA
$B02    $9E06   UNKNOWN  $9E06           ; Unknown 9xxx instruction
$B04    $E4FA   UNKNOWN  $E4FA           ; Unknown Exxx instruction
$B06    $2D94   CALL     $D94            ; Call subroutine at D94
$B08    $1417   JP       $417            ; Jump to 417
$B0A    $6869   LD       V8, #69         ; Load 105 into V8
$B0C    $FCB8   UNKNOWN  FCB8            ; Unknown Fxxx instruction
$B0E    $DB39   DRW      VB, V3, #9      ; Draw 9-byte sprite at VB, V3
$B10    $9F4B   UNKNOWN  $9F4B           ; Unknown 9xxx instruction
$B12    $CEBA   RND      VE, #BA         ; VE = random & BA
$B14    $73C4   ADD      V3, #C4         ; Add 196 to V3
$B16    $08E0   SYS      $8E0            ; System call to 8E0
$B18    $25D2   CALL     $5D2            ; Call subroutine at 5D2
$B1A    $642E   LD       V4, #2E         ; Load 46 into V4
$B1C    $83FB   UNKNOWN  83FB            ; Unknown 8xxx instruction
$B1E    $AE27   LD       I, $E27         ; Load E27 into I
$B20    $DF58   DRW      VF, V5, #8      ; Draw 8-byte sprite at VF, V5
$B22    $563E   UNKNOWN  $563E           ; Unknown 5xxx instruction
$B24    $EA8E   UNKNOWN  $EA8E           ; Unknown Exxx instruction
$B26    $4161   SNE      V1, #61         ; Skip if V1 != 97
$B28    $78FA   ADD      V8, #FA         ; Add 250 to V8
$B2A    $62F0   LD       V2, #F0         ; Load 240 into V2
$B2C    $3764   SE       V7, #64         ; Skip if V7 == 100
$B2E    $DE82   DRW      VE, V8, #2      ; Draw 2-byte sprite at VE, V8
$B30    $0B73   SYS      $B73            ; System call to B73
$B32    $85B2   AND      V5, VB          ; V5 &= VB
$B34    $A753   LD       I, $753         ; Load 753 into I
$B36    $8109   UNKNOWN  8109            ; Unknown 8xxx instruction
$B38    $A7DD   LD       I, $7DD         ; Load 7DD into I
$B3A    $E4CF   UNKNOWN  $E4CF           ; Unknown Exxx instruction
$B3C    $41B2   SNE      V1, #B2         ; Skip if V1 != 178
$B3E    $B896   JP       V0, $896        ; Jump to V0 + 896
$B40    $4F66   SNE      VF, #66         ; Skip if VF != 102
$B42    $BFD3   JP       V0, $FD3        ; Jump to V0 + FD3
$B44    $F20B   UNKNOWN  F20B            ; Unknown Fxxx instruction
$B46    $FEE4   UNKNOWN  FEE4            ; Unknown Fxxx instruction
$B48    $7088   ADD      V0, #88         ; Add 136 to V0
$B4A    $8CED   UNKNOWN  8CED            ; Unknown 8xxx instruction
$B4C    $0B46   SYS      $B46            ; System call to B46
$B4E    $D2B1   DRW      V2, VB, #1      ; Draw 1-byte sprite at V2, VB
$B50    $311A   SE       V1, #1A         ; Skip if V1 == 26
$B52    $002B   SYS      $02B            ; System call to 02B
$B54    $86A4   ADD      V6, VA          ; V6 += VA, VF = carry
$B56    $3BA5   SE       VB, #A5         ; Skip if VB == 165
$B58    $7472   ADD      V4, #72         ; Add 114 to V4
$B5A    $0771   SYS      $771            ; System call to 771
$B5C    $454A   SNE      V5, #4A         ; Skip if V5 != 74
$B5E    $1086   JP       $086            ; Jump to 086
$B60    $C740   RND      V7, #40         ; V7 = random & 40
$B62    $2754   CALL     $754            ; Call subroutine at 754
$B64    $D17C   DRW      V1, V7, #C      ; Draw 12-byte sprite at V1, V7
$B66    $CAC7   RND      VA, #C7         ; VA = random & C7
$B68    $FC65   LD       VC, [I]         ; Load V0-VC from I
$B6A    $0845   SYS      $845            ; System call to 845
$B6C    $5BB0   SE       VB, VB          ; Skip if VB == VB
$B6E    $3E7E   SE       VE, #7E         ; Skip if VE == 126
$B70    $66AA   LD       V6, #AA         ; Load 170 into V6
$B72    $BC60   JP       V0, $C60        ; Jump to V0 + C60
$B74    $04C1   SYS      $4C1            ; System call to 4C1
$B76    $39A4   SE       V9, #A4         ; Skip if V9 == 164
$B78    $2B65   CALL     $B65            ; Call subroutine at B65
$B7A    $2BB2   CALL     $BB2            ; Call subroutine at BB2
$B7C    $4A4D   SNE      VA, #4D         ; Skip if VA != 77
$B7E    $E2D7   UNKNOWN  $E2D7           ; Unknown Exxx instruction
$B80    $6654   LD       V6, #54         ; Load 84 into V6
$B82    $8339   UNKNOWN  8339            ; Unknown 8xxx instruction
$B84    $C59A   RND      V5, #9A         ; V5 = random & 9A
$B86    $3568   SE       V5, #68         ; Skip if V5 == 104
$B88    $16C7   JP       $6C7            ; Jump to 6C7
$B8A    $8265   SUB      V2, V6          ; V2 -= V6, VF = !borrow
$B8C    $5D3C   UNKNOWN  $5D3C           ; Unknown 5xxx instruction
$B8E    $7D70   ADD      VD, #70         ; Add 112 to VD
$B90    $1570   JP       $570            ; Jump to 570
$B92    $E50F   UNKNOWN  $E50F           ; Unknown Exxx instruction
$B94    $213E   CALL     $13E            ; Call subroutine at 13E
$B96    $1CFF   JP       $CFF            ; Jump to CFF
$B98    $3352   SE       V3, #52         ; Skip if V3 == 82
$B9A    $8D4B   UNKNOWN  8D4B            ; Unknown 8xxx instruction
$B9C    $1E9C   JP       $E9C            ; Jump to E9C
$B9E    $B95A   JP       V0, $95A        ; Jump to V0 + 95A
$BA0    $AE78   LD       I, $E78         ; Load E78 into I
$BA2    $F8A5   UNKNOWN  F8A5            ; Unknown Fxxx instruction
$BA4    $9E84   UNKNOWN  $9E84           ; Unknown 9xxx instruction
$BA6    $52F0   SE       V2, VF          ; Skip if V2 == VF
$BA8    $FF38   UNKNOWN  FF38            ; Unknown Fxxx instruction
$BAA    $36BC   SE       V6, #BC         ; Skip if V6 == 188
$BAC    $7383   ADD      V3, #83         ; Add 131 to V3
$BAE    $E02B   UNKNOWN  $E02B           ; Unknown Exxx instruction
$BB0    $0FEB   SYS      $FEB            ; System call to FEB
$BB2    $AB38   LD       I, $B38         ; Load B38 into I
$BB4    $E970   UNKNOWN  $E970           ; Unknown Exxx instruction
$BB6    $7347   ADD      V3, #47         ; Add 71 to V3
$BB8    $785B   ADD      V8, #5B         ; Add 91 to V8
$BBA    $191C   JP       $91C            ; Jump to 91C
$BBC    $52F9   UNKNOWN  $52F9           ; Unknown 5xxx instruction
$BBE    $4F15   SNE      VF, #15         ; Skip if VF != 21
$BC0    $6E10   LD       VE, #10         ; Load 16 into VE
$BC2    $568A   UNKNOWN  $568A           ; Unknown 5xxx instruction
$BC4    $D79D   DRW      V7, V9, #D      ; Draw 13-byte sprite at V7, V9
$BC6    $D124   DRW      V1, V2, #4      ; Draw 4-byte sprite at V1, V2
$BC8    $2C61   CALL     $C61            ; Call subroutine at C61
$BCA    $9112   UNKNOWN  $9112           ; Unknown 9xxx instruction
$BCC    $E1CA   UNKNOWN  $E1CA           ; Unknown Exxx instruction
$BCE    $0C25   SYS      $C25            ; System call to C25
$BD0    $693F   LD       V9, #3F         ; Load 63 into V9
$BD2    $6433   LD       V4, #33         ; Load 51 into V4
$BD4    $F1CB   UNKNOWN  F1CB            ; Unknown Fxxx instruction
$BD6    $F822   UNKNOWN  F822            ; Unknown Fxxx instruction
$BD8    $AC8B   LD       I, $C8B         ; Load C8B into I
$BDA    $0AAA   SYS      $AAA            ; System call to AAA
$BDC    $0944   SYS      $944            ; System call to 944
$BDE    $63CF   LD       V3, #CF         ; Load 207 into V3
$BE0    $F56A   UNKNOWN  F56A            ; Unknown Fxxx instruction
$BE2    $F902   UNKNOWN  F902            ; Unknown Fxxx instruction
$BE4    $E37D   UNKNOWN  $E37D           ; Unknown Exxx instruction
$BE6    $2A24   CALL     $A24            ; Call subroutine at A24
$BE8    $5B0A   UNKNOWN  $5B0A           ; Unknown 5xxx instruction
$BEA    $F890   UNKNOWN  F890            ; Unknown Fxxx instruction
$BEC    $FCC2   UNKNOWN  FCC2            ; Unknown Fxxx instruction
$BEE    $AFF1   LD       I, $FF1         ; Load FF1 into I
$BF0    $B159   JP       V0, $159        ; Jump to V0 + 159
$BF2    $AA1F   LD       I, $A1F         ; Load A1F into I
$BF4    $BE96   JP       V0, $E96        ; Jump to V0 + E96
$BF6    $2908   CALL     $908            ; Call subroutine at 908
$BF8    $E1B6   UNKNOWN  $E1B6           ; Unknown Exxx instruction
$BFA    $1905   JP       $905            ; Jump to 905
$BFC    $E954   UNKNOWN  $E954           ; Unknown Exxx instruction
$BFE    $6BD2   LD       VB, #D2         ; Load 210 into VB
$C00    $D45C   DRW      V4, V5, #C      ; Draw 12-byte sprite at V4, V5
$C02    $DCDB   DRW      VC, VD, #B      ; Draw 11-byte sprite at VC, VD
$C04    $257F   CALL     $57F            ; Call subroutine at 57F
$C06    $9371   UNKNOWN  $9371           ; Unknown 9xxx instruction
$C08    $0152   SYS      $152            ; System call to 152
$C0A    $5100   SE       V1, V0          ; Skip if V1 == V0
$C0C    $EEB9   UNKNOWN  $EEB9           ; Unknown Exxx instruction
$C0E    $759E   ADD      V5, #9E         ; Add 158 to V5
$C10    $1E94   JP       $E94            ; Jump to E94
$C12    $7584   ADD      V5, #84         ; Add 132 to V5
$C14    $6F40   LD       VF, #40         ; Load 64 into VF
$C16    $40FE   SNE      V0, #FE         ; Skip if V0 != 254
$C18    $0F35   SYS      $F35            ; System call to F35
$C1A    $A8D0   LD       I, $8D0         ; Load 8D0 into I
$C1C    $842E   SHL      V4              ; V4 <<= 1, VF = MSB
$C1E    $5704   UNKNOWN  $5704           ; Unknown 5xxx instruction
$C20    $AAB3   LD       I, $AB3         ; Load AB3 into I
$C22    $5DF4   UNKNOWN  $5DF4           ; Unknown 5xxx instruction
$C24    $0E6F   SYS      $E6F            ; System call to E6F
$C26    $0CAE   SYS      $CAE            ; System call to CAE
$C28    $7351   ADD      V3, #51         ; Add 81 to V3
$C2A    $3829   SE       V8, #29         ; Skip if V8 == 41
$C2C    $DE8B   DRW      VE, V8, #B      ; Draw 11-byte sprite at VE, V8
$C2E    $3B4E   SE       VB, #4E         ; Skip if VB == 78
$C30    $AEAF   LD       I, $EAF         ; Load EAF into I
$C32    $EE23   UNKNOWN  $EE23           ; Unknown Exxx instruction
$C34    $52B3   UNKNOWN  $52B3           ; Unknown 5xxx instruction
$C36    $7E47   ADD      VE, #47         ; Add 71 to VE
$C38    $185B   JP       $85B            ; Jump to 85B
$C3A    $E3D0   UNKNOWN  $E3D0           ; Unknown Exxx instruction
$C3C    $3897   SE       V8, #97         ; Skip if V8 == 151
$C3E    $450C   SNE      V5, #0C         ; Skip if V5 != 12
$C40    $516B   UNKNOWN  $516B           ; Unknown 5xxx instruction
$C42    $8E31   OR       VE, V3          ; VE |= V3
$C44    $E925   UNKNOWN  $E925           ; Unknown Exxx instruction
$C46    $0F89   SYS      $F89            ; System call to F89
$C48    $E7AE   UNKNOWN  $E7AE           ; Unknown Exxx instruction
$C4A    $6E83   LD       VE, #83         ; Load 131 into VE
$C4C    $0149   SYS      $149            ; System call to 149
$C4E    $4151   SNE      V1, #51         ; Skip if V1 != 81
$C50    $FEEE   UNKNOWN  FEEE            ; Unknown Fxxx instruction
$C52    $821C   UNKNOWN  821C            ; Unknown 8xxx instruction
$C54    $EA2C   UNKNOWN  $EA2C           ; Unknown Exxx instruction
$C56    $2FE4   CALL     $FE4            ; Call subroutine at FE4
$C58    $998B   UNKNOWN  $998B           ; Unknown 9xxx instruction
$C5A    $9FA4   UNKNOWN  $9FA4           ; Unknown 9xxx instruction
$C5C    $F033   LD       B, V0           ; Store BCD of V0 at I, I+1, I+2
$C5E    $F800   UNKNOWN  F800            ; Unknown Fxxx instruction
$C60    $E844   UNKNOWN  $E844           ; Unknown Exxx instruction
$C62    $E9A0   UNKNOWN  $E9A0           ; Unknown Exxx instruction
$C64    $3CB1   SE       VC, #B1         ; Skip if VC == 177
$C66    $9056   UNKNOWN  $9056           ; Unknown 9xxx instruction
$C68    $27B4   CALL     $7B4            ; Call subroutine at 7B4
$C6A    $89FD   UNKNOWN  89FD            ; Unknown 8xxx instruction
$C6C    $E658   UNKNOWN  $E658           ; Unknown Exxx instruction
$C6E    $01A8   SYS      $1A8            ; System call to 1A8
$C70    $54F1   UNKNOWN  $54F1           ; Unknown 5xxx instruction
$C72    $245E   CALL     $45E            ; Call subroutine at 45E
$C74    $6357   LD       V3, #57         ; Load 87 into V3
$C76    $CF23   RND      VF, #23         ; VF = random & 23
$C78    $0D75   SYS      $D75            ; System call to D75
$C7A    $D73E   DRW      V7, V3, #E      ; Draw 14-byte sprite at V7, V3
$C7C    $0F0F   SYS      $F0F            ; System call to F0F
$C7E    $ECFE   UNKNOWN  $ECFE           ; Unknown Exxx instruction
$C80    $6613   LD       V6, #13         ; Load 19 into V6
$C82    $1796   JP       $796            ; Jump to 796
$C84    $37A4   SE       V7, #A4         ; Skip if V7 == 164
$C86    $E628   UNKNOWN  $E628           ; Unknown Exxx instruction
$C88    $BFCB   JP       V0, $FCB        ; Jump to V0 + FCB
$C8A    $2C9A   CALL     $C9A            ; Call subroutine at C9A
$C8C    $4138   SNE      V1, #38         ; Skip if V1 != 56
$C8E    $47AF   SNE      V7, #AF         ; Skip if V7 != 175
$C90    $0A01   SYS      $A01            ; System call to A01
$C92    $DE59   DRW      VE, V5, #9      ; Draw 9-byte sprite at VE, V5
$C94    $0D59   SYS      $D59            ; System call to D59
$C96    $9BCE   UNKNOWN  $9BCE           ; Unknown 9xxx instruction
$C98    $2B72   CALL     $B72            ; Call subroutine at B72
$C9A    $47C5   SNE      V7, #C5         ; Skip if V7 != 197
$C9C    $C8ED   RND      V8, #ED         ; V8 = random & ED
$C9E    $273D   CALL     $73D            ; Call subroutine at 73D
$CA0    $520C   UNKNOWN  $520C           ; Unknown 5xxx instruction
$CA2    $95B4   UNKNOWN  $95B4           ; Unknown 9xxx instruction
$CA4    $08B4   SYS      $8B4            ; System call to 8B4
$CA6    $A82F   LD       I, $82F         ; Load 82F into I
$CA8    $A66F   LD       I, $66F         ; Load 66F into I
$CAA    $10FD   JP       $0FD            ; Jump to 0FD
$CAC    $2E4D   CALL     $E4D            ; Call subroutine at E4D
$CAE    $D2EF   DRW      V2, VE, #F      ; Draw 15-byte sprite at V2, VE
$CB0    $F5BD   UNKNOWN  F5BD            ; Unknown Fxxx instruction
$CB2    $E999   UNKNOWN  $E999           ; Unknown Exxx instruction
$CB4    $0F64   SYS      $F64            ; System call to F64
$CB6    $B605   JP       V0, $605        ; Jump to V0 + 605
$CB8    $E299   UNKNOWN  $E299           ; Unknown Exxx instruction
$CBA    $3556   SE       V5, #56         ; Skip if V5 == 86
$CBC    $5ACE   UNKNOWN  $5ACE           ; Unknown 5xxx instruction
$CBE    $5BD6   UNKNOWN  $5BD6           ; Unknown 5xxx instruction
$CC0    $6E76   LD       VE, #76         ; Load 118 into VE
$CC2    $0B8A   SYS      $B8A            ; System call to B8A
$CC4    $887B   UNKNOWN  887B            ; Unknown 8xxx instruction
$CC6    $7EC3   ADD      VE, #C3         ; Add 195 to VE
$CC8    $278A   CALL     $78A            ; Call subroutine at 78A
$CCA    $B3BC   JP       V0, $3BC        ; Jump to V0 + 3BC
$CCC    $2FCB   CALL     $FCB            ; Call subroutine at FCB
$CCE    $8AD7   SUBN     VA, VD          ; VA = VD - VA, VF = !borrow
$CD0    $5018   UNKNOWN  $5018           ; Unknown 5xxx instruction
$CD2    $8440   LD       V4, V4          ; V4 = V4
$CD4    $9A4B   UNKNOWN  $9A4B           ; Unknown 9xxx instruction
$CD6    $C5DF   RND      V5, #DF         ; V5 = random & DF
$CD8    $806C   UNKNOWN  806C            ; Unknown 8xxx instruction
$CDA    $16A1   JP       $6A1            ; Jump to 6A1
$CDC    $024D   SYS      $24D            ; System call to 24D
$CDE    $33AA   SE       V3, #AA         ; Skip if V3 == 170
$CE0    $F5DB   UNKNOWN  F5DB            ; Unknown Fxxx instruction
$CE2    $F4DB   UNKNOWN  F4DB            ; Unknown Fxxx instruction
$CE4    $FFEE   UNKNOWN  FFEE            ; Unknown Fxxx instruction
$CE6    $79D5   ADD      V9, #D5         ; Add 213 to V9
$CE8    $6685   LD       V6, #85         ; Load 133 into V6
$CEA    $C36C   RND      V3, #6C         ; V3 = random & 6C
$CEC    $8BB9   UNKNOWN  8BB9            ; Unknown 8xxx instruction
$CEE    $CDF4   RND      VD, #F4         ; VD = random & F4
$CF0    $F591   UNKNOWN  F591            ; Unknown Fxxx instruction
$CF2    $05A3   SYS      $5A3            ; System call to 5A3
$CF4    $87DC   UNKNOWN  87DC            ; Unknown 8xxx instruction
$CF6    $CB98   RND      VB, #98         ; VB = random & 98
$CF8    $9C5E   UNKNOWN  $9C5E           ; Unknown 9xxx instruction
$CFA    $CB13   RND      VB, #13         ; VB = random & 13
$CFC    $1E0C   JP       $E0C            ; Jump to E0C
$CFE    $3D2A   SE       VD, #2A         ; Skip if VD == 42
$D00    $9A8C   UNKNOWN  $9A8C           ; Unknown 9xxx instruction
$D02    $45B7   SNE      V5, #B7         ; Skip if V5 != 183
$D04    $C1BA   RND      V1, #BA         ; V1 = random & BA
$D06    $BAD7   JP       V0, $AD7        ; Jump to V0 + AD7
$D08    $1EA2   JP       $EA2            ; Jump to EA2
$D0A    $5922   UNKNOWN  $5922           ; Unknown 5xxx instruction
$D0C    $8F8C   UNKNOWN  8F8C            ; Unknown 8xxx instruction
$D0E    $A8A4   LD       I, $8A4         ; Load 8A4 into I
$D10    $2D22   CALL     $D22            ; Call subroutine at D22
$D12    $9A78   UNKNOWN  $9A78           ; Unknown 9xxx instruction
$D14    $2209   CALL     $209            ; Call subroutine at 209
$D16    $7107   ADD      V1, #07         ; Add 7 to V1
$D18    $8B78   UNKNOWN  8B78            ; Unknown 8xxx instruction
$D1A    $33F6   SE       V3, #F6         ; Skip if V3 == 246
$D1C    $79FB   ADD      V9, #FB         ; Add 251 to V9
$D1E    $7617   ADD      V6, #17         ; Add 23 to V6
$D20    $5F49   UNKNOWN  $5F49           ; Unknown 5xxx instruction
$D22    $A383   LD       I, $383         ; Load 383 into I
$D24    $DBC9   DRW      VB, VC, #9      ; Draw 9-byte sprite at VB, VC
$D26    $B6F7   JP       V0, $6F7        ; Jump to V0 + 6F7
$D28    $1428   JP       $428            ; Jump to 428
$D2A    $635C   LD       V3, #5C         ; Load 92 into V3
$D2C    $7029   ADD      V0, #29         ; Add 41 to V0
$D2E    $FFD1   UNKNOWN  FFD1            ; Unknown Fxxx instruction
$D30    $C5BA   RND      V5, #BA         ; V5 = random & BA
$D32    $9D49   UNKNOWN  $9D49           ; Unknown 9xxx instruction
$D34    $7868   ADD      V8, #68         ; Add 104 to V8
$D36    $730D   ADD      V3, #0D         ; Add 13 to V3
$D38    $2D0C   CALL     $D0C            ; Call subroutine at D0C
$D3A    $5E07   UNKNOWN  $5E07           ; Unknown 5xxx instruction
$D3C    $5607   UNKNOWN  $5607           ; Unknown 5xxx instruction
$D3E    $3DE0   SE       VD, #E0         ; Skip if VD == 224
$D40    $EB74   UNKNOWN  $EB74           ; Unknown Exxx instruction
$D42    $1EB7   JP       $EB7            ; Jump to EB7
$D44    $14F6   JP       $4F6            ; Jump to 4F6
$D46    $869E   SHL      V6              ; V6 <<= 1, VF = MSB
$D48    $21C0   CALL     $1C0            ; Call subroutine at 1C0
$D4A    $8BE5   SUB      VB, VE          ; VB -= VE, VF = !borrow
$D4C    $9C9A   UNKNOWN  $9C9A           ; Unknown 9xxx instruction
$D4E    $E7E0   UNKNOWN  $E7E0           ; Unknown Exxx instruction
$D50    $9C48   UNKNOWN  $9C48           ; Unknown 9xxx instruction
$D52    $AF9E   LD       I, $F9E         ; Load F9E into I
$D54    $D069   DRW      V0, V6, #9      ; Draw 9-byte sprite at V0, V6
$D56    $7282   ADD      V2, #82         ; Add 130 to V2
$D58    $FAD4   UNKNOWN  FAD4            ; Unknown Fxxx instruction
$D5A    $7A1F   ADD      VA, #1F         ; Add 31 to VA
$D5C    $616E   LD       V1, #6E         ; Load 110 into V1
$D5E    $A475   LD       I, $475         ; Load 475 into I
$D60    $1834   JP       $834            ; Jump to 834
$D62    $27A0   CALL     $7A0            ; Call subroutine at 7A0
$D64    $0634   SYS      $634            ; System call to 634
$D66    $0B4A   SYS      $B4A            ; System call to B4A
$D68    $D306   DRW      V3, V0, #6      ; Draw 6-byte sprite at V3, V0
$D6A    $9604   UNKNOWN  $9604           ; Unknown 9xxx instruction
$D6C    $D3E2   DRW      V3, VE, #2      ; Draw 2-byte sprite at V3, VE
$D6E    $4EF1   SNE      VE, #F1         ; Skip if VE != 241
$D70    $9C0B   UNKNOWN  $9C0B           ; Unknown 9xxx instruction
$D72    $560B   UNKNOWN  $560B           ; Unknown 5xxx instruction
$D74    $D1D2   DRW      V1, VD, #2      ; Draw 2-byte sprite at V1, VD
$D76    $0022   SYS      $022            ; System call to 022
$D78    $8E9D   UNKNOWN  8E9D            ; Unknown 8xxx instruction
$D7A    $9A75   UNKNOWN  $9A75           ; Unknown 9xxx instruction
$D7C    $E79E   SKP      V7              ; Skip if key V7 pressed
$D7E    $C87A   RND      V8, #7A         ; V8 = random & 7A
$D80    $155C   JP       $55C            ; Jump to 55C
$D82    $87C1   OR       V7, VC          ; V7 |= VC
$D84    $80B4   ADD      V0, VB          ; V0 += VB, VF = carry
$D86    $0569   SYS      $569            ; System call to 569
$D88    $8463   XOR      V4, V6          ; V4 ^= V6
$D8A    $1347   JP       $347            ; Jump to 347
$D8C    $089E   SYS      $89E            ; System call to 89E
$D8E    $7283   ADD      V2, #83         ; Add 131 to V2
$D90    $5438   UNKNOWN  $5438           ; Unknown 5xxx instruction
$D92    $20EB   CALL     $0EB            ; Call subroutine at 0EB
$D94    $BEE6   JP       V0, $EE6        ; Jump to V0 + EE6
$D96    $EEB4   UNKNOWN  $EEB4           ; Unknown Exxx instruction
$D98    $8914   ADD      V9, V1          ; V9 += V1, VF = carry
$D9A    $3BE0   SE       VB, #E0         ; Skip if VB == 224
$D9C    $69E4   LD       V9, #E4         ; Load 228 into V9
$D9E    $BB58   JP       V0, $B58        ; Jump to V0 + B58
$DA0    $AEA8   LD       I, $EA8         ; Load EA8 into I
$DA2    $A159   LD       I, $159         ; Load 159 into I
$DA4    $C94A   RND      V9, #4A         ; V9 = random & 4A
$DA6    $63D7   LD       V3, #D7         ; Load 215 into V3
$DA8    $31ED   SE       V1, #ED         ; Skip if V1 == 237
$DAA    $6243   LD       V2, #43         ; Load 67 into V2
$DAC    $0184   SYS      $184            ; System call to 184
$DAE    $308C   SE       V0, #8C         ; Skip if V0 == 140
$DB0    $66EA   LD       V6, #EA         ; Load 234 into V6
$DB2    $D940   DRW      V9, V4, #0      ; Draw 0-byte sprite at V9, V4
$DB4    $512E   UNKNOWN  $512E           ; Unknown 5xxx instruction
$DB6    $0F9C   SYS      $F9C            ; System call to F9C
$DB8    $42CC   SNE      V2, #CC         ; Skip if V2 != 204
$DBA    $C4CF   RND      V4, #CF         ; V4 = random & CF
$DBC    $F9FD   UNKNOWN  F9FD            ; Unknown Fxxx instruction
$DBE    $1D63   JP       $D63            ; Jump to D63
$DC0    $9C35   UNKNOWN  $9C35           ; Unknown 9xxx instruction
$DC2    $A2BD   LD       I, $2BD         ; Load 2BD into I
$DC4    $2C11   CALL     $C11            ; Call subroutine at C11
$DC6    $6BD4   LD       VB, #D4         ; Load 212 into VB
$DC8    $D826   DRW      V8, V2, #6      ; Draw 6-byte sprite at V8, V2
$DCA    $48B6   SNE      V8, #B6         ; Skip if V8 != 182
$DCC    $7477   ADD      V4, #77         ; Add 119 to V4
$DCE    $F8E0   UNKNOWN  F8E0            ; Unknown Fxxx instruction
$DD0    $ECEF   UNKNOWN  $ECEF           ; Unknown Exxx instruction
$DD2    $2096   CALL     $096            ; Call subroutine at 096
$DD4    $5C5D   UNKNOWN  $5C5D           ; Unknown 5xxx instruction
$DD6    $5B78   UNKNOWN  $5B78           ; Unknown 5xxx instruction
$DD8    $2313   CALL     $313            ; Call subroutine at 313
$DDA    $1922   JP       $922            ; Jump to 922
$DDC    $166A   JP       $66A            ; Jump to 66A
$DDE    $3DF0   SE       VD, #F0         ; Skip if VD == 240
$DE0    $637E   LD       V3, #7E         ; Load 126 into V3
$DE2    $1C8E   JP       $C8E            ; Jump to C8E
$DE4    $09C2   SYS      $9C2            ; System call to 9C2
$DE6    $5421   UNKNOWN  $5421           ; Unknown 5xxx instruction
$DE8    $22FF   CALL     $2FF            ; Call subroutine at 2FF
$DEA    $03AC   SYS      $3AC            ; System call to 3AC
$DEC    $F446   UNKNOWN  F446            ; Unknown Fxxx instruction
$DEE    $94CC   UNKNOWN  $94CC           ; Unknown 9xxx instruction
$DF0    $09BC   SYS      $9BC            ; System call to 9BC
$DF2    $0C49   SYS      $C49            ; System call to C49
$DF4    $8828   UNKNOWN  8828            ; Unknown 8xxx instruction
$DF6    $B95B   JP       V0, $95B        ; Jump to V0 + 95B
$DF8    $FB1A   UNKNOWN  FB1A            ; Unknown Fxxx instruction
$DFA    $82F5   SUB      V2, VF          ; V2 -= VF, VF = !borrow
$DFC    $1CAB   JP       $CAB            ; Jump to CAB
$DFE    $E9E5   UNKNOWN  $E9E5           ; Unknown Exxx instruction
$E00    $8E63   XOR      VE, V6          ; VE ^= V6
$E02    $ED3A   UNKNOWN  $ED3A           ; Unknown Exxx instruction
$E04    $526D   UNKNOWN  $526D           ; Unknown 5xxx instruction
$E06    $355F   SE       V5, #5F         ; Skip if V5 == 95
$E08    $C3BB   RND      V3, #BB         ; V3 = random & BB
$E0A    $D862   DRW      V8, V6, #2      ; Draw 2-byte sprite at V8, V6
$E0C    $75F0   ADD      V5, #F0         ; Add 240 to V5
$E0E    $9C1B   UNKNOWN  $9C1B           ; Unknown 9xxx instruction
$E10    $3205   SE       V2, #05         ; Skip if V2 == 5
$E12    $28E6   CALL     $8E6            ; Call subroutine at 8E6
$E14    $1861   JP       $861            ; Jump to 861
$E16    $161B   JP       $61B            ; Jump to 61B
$E18    $16F7   JP       $6F7            ; Jump to 6F7
$E1A    $E412   UNKNOWN  $E412           ; Unknown Exxx instruction
$E1C    $81DD   UNKNOWN  81DD            ; Unknown 8xxx instruction
$E1E    $5EE2   UNKNOWN  $5EE2           ; Unknown 5xxx instruction
$E20    $5ABE   UNKNOWN  $5ABE           ; Unknown 5xxx instruction
$E22    $5036   UNKNOWN  $5036           ; Unknown 5xxx instruction
$E24    $C417   RND      V4, #17         ; V4 = random & 17
$E26    $C416   RND      V4, #16         ; V4 = random & 16
$E28    $B413   JP       V0, $413        ; Jump to V0 + 413
$E2A    $6418   LD       V4, #18         ; Load 24 into V4
$E2C    $807E   SHL      V0              ; V0 <<= 1, VF = MSB
$E2E    $03E4   SYS      $3E4            ; System call to 3E4
$E30    $BB61   JP       V0, $B61        ; Jump to V0 + B61
$E32    $F533   LD       B, V5           ; Store BCD of V5 at I, I+1, I+2
$E34    $466F   SNE      V6, #6F         ; Skip if V6 != 111
$E36    $6968   LD       V9, #68         ; Load 104 into V9
$E38    $5C72   UNKNOWN  $5C72           ; Unknown 5xxx instruction
$E3A    $4EF1   SNE      VE, #F1         ; Skip if VE != 241
$E3C    $47EB   SNE      V7, #EB         ; Skip if V7 != 235
$E3E    $3766   SE       V7, #66         ; Skip if V7 == 102
$E40    $E2D0   UNKNOWN  $E2D0           ; Unknown Exxx instruction
$E42    $414B   SNE      V1, #4B         ; Skip if V1 != 75
$E44    $50EB   UNKNOWN  $50EB           ; Unknown 5xxx instruction
$E46    $58DE   UNKNOWN  $58DE           ; Unknown 5xxx instruction
$E48    $D803   DRW      V8, V0, #3      ; Draw 3-byte sprite at V8, V0
$E4A    $03AF   SYS      $3AF            ; System call to 3AF
$E4C    $198C   JP       $98C            ; Jump to 98C
$E4E    $4037   SNE      V0, #37         ; Skip if V0 != 55
$E50    $6D7D   LD       VD, #7D         ; Load 125 into VD
$E52    $DD23   DRW      VD, V2, #3      ; Draw 3-byte sprite at VD, V2
$E54    $87E2   AND      V7, VE          ; V7 &= VE
$E56    $BE6F   JP       V0, $E6F        ; Jump to V0 + E6F
$E58    $FC45   UNKNOWN  FC45            ; Unknown Fxxx instruction
$E5A    $24ED   CALL     $4ED            ; Call subroutine at 4ED
$E5C    $2725   CALL     $725            ; Call subroutine at 725
$E5E    $3991   SE       V9, #91         ; Skip if V9 == 145
$E60    $02A6   SYS      $2A6            ; System call to 2A6
$E62    $216C   CALL     $16C            ; Call subroutine at 16C
$E64    $1691   JP       $691            ; Jump to 691
$E66    $1055   JP       $055            ; Jump to 055
$E68    $D46E   DRW      V4, V6, #E      ; Draw 14-byte sprite at V4, V6
$E6A    $2D3A   CALL     $D3A            ; Call subroutine at D3A
$E6C    $0F2F   SYS      $F2F            ; System call to F2F
$E6E    $8600   LD       V6, V0          ; V6 = V0
$E70    $BED4   JP       V0, $ED4        ; Jump to V0 + ED4
$E72    $38E2   SE       V8, #E2         ; Skip if V8 == 226
$E74    $2586   CALL     $586            ; Call subroutine at 586
$E76    $86CC   UNKNOWN  86CC            ; Unknown 8xxx instruction
$E78    $DC47   DRW      VC, V4, #7      ; Draw 7-byte sprite at VC, V4
$E7A    $01BC   SYS      $1BC            ; System call to 1BC
$E7C    $210E   CALL     $10E            ; Call subroutine at 10E
$E7E    $C2DD   RND      V2, #DD         ; V2 = random & DD
$E80    $1D10   JP       $D10            ; Jump to D10
$E82    $C857   RND      V8, #57         ; V8 = random & 57
$E84    $5AB9   UNKNOWN  $5AB9           ; Unknown 5xxx instruction
$E86    $FECB   UNKNOWN  FECB            ; Unknown Fxxx instruction
$E88    $1BB4   JP       $BB4            ; Jump to BB4
$E8A    $E30C   UNKNOWN  $E30C           ; Unknown Exxx instruction
$E8C    $36B4   SE       V6, #B4         ; Skip if V6 == 180
$E8E    $DCE0   DRW      VC, VE, #0      ; Draw 0-byte sprite at VC, VE
$E90    $071C   SYS      $71C            ; System call to 71C
$E92    $E694   UNKNOWN  $E694           ; Unknown Exxx instruction
$E94    $532F   UNKNOWN  $532F           ; Unknown 5xxx instruction
$E96    $8329   UNKNOWN  8329            ; Unknown 8xxx instruction
$E98    $B5BA   JP       V0, $5BA        ; Jump to V0 + 5BA
$E9A    $E75A   UNKNOWN  $E75A           ; Unknown Exxx instruction
$E9C    $98F7   UNKNOWN  $98F7           ; Unknown 9xxx instruction
$E9E    $2E30   CALL     $E30            ; Call subroutine at E30
$EA0    $F593   UNKNOWN  F593            ; Unknown Fxxx instruction
$EA2    $348D   SE       V4, #8D         ; Skip if V4 == 141
$EA4    $9A31   UNKNOWN  $9A31           ; Unknown 9xxx instruction
$EA6    $E8F1   UNKNOWN  $E8F1           ; Unknown Exxx instruction
$EA8    $B497   JP       V0, $497        ; Jump to V0 + 497
$EAA    $A93D   LD       I, $93D         ; Load 93D into I
$EAC    $E799   UNKNOWN  $E799           ; Unknown Exxx instruction
$EAE    $DA75   DRW      VA, V7, #5      ; Draw 5-byte sprite at VA, V7
$EB0    $1F77   JP       $F77            ; Jump to F77
$EB2    $BB33   JP       V0, $B33        ; Jump to V0 + B33
$EB4    $A825   LD       I, $825         ; Load 825 into I
$EB6    $C105   RND      V1, #05         ; V1 = random & 05
$EB8    $DDB4   DRW      VD, VB, #4      ; Draw 4-byte sprite at VD, VB
$EBA    $CA07   RND      VA, #07         ; VA = random & 07
$EBC    $0C4A   SYS      $C4A            ; System call to C4A
$EBE    $8BF7   SUBN     VB, VF          ; VB = VF - VB, VF = !borrow
$EC0    $3AF7   SE       VA, #F7         ; Skip if VA == 247
$EC2    $39EA   SE       V9, #EA         ; Skip if V9 == 234
$EC4    $EBA2   UNKNOWN  $EBA2           ; Unknown Exxx instruction
$EC6    $05B2   SYS      $5B2            ; System call to 5B2
$EC8    $80C3   XOR      V0, VC          ; V0 ^= VC
$ECA    $0B74   SYS      $B74            ; System call to B74
$ECC    $8860   LD       V8, V6          ; V8 = V6
$ECE    $3609   SE       V6, #09         ; Skip if V6 == 9
$ED0    $A7C8   LD       I, $7C8         ; Load 7C8 into I
$ED2    $E793   UNKNOWN  $E793           ; Unknown Exxx instruction
$ED4    $E2D8   UNKNOWN  $E2D8           ; Unknown Exxx instruction
$ED6    $0E42   SYS      $E42            ; System call to E42
$ED8    $B072   JP       V0, $072        ; Jump to V0 + 072
$EDA    $CE1B   RND      VE, #1B         ; VE = random & 1B
$EDC    $21BB   CALL     $1BB            ; Call subroutine at 1BB
$EDE    $4784   SNE      V7, #84         ; Skip if V7 != 132
$EE0    $E525   UNKNOWN  $E525           ; Unknown Exxx instruction
$EE2    $00C6   SYS      $0C6            ; System call to 0C6
$EE4    $6466   LD       V4, #66         ; Load 102 into V4
$EE6    $8D3B   UNKNOWN  8D3B            ; Unknown 8xxx instruction
$EE8    $556E   UNKNOWN  $556E           ; Unknown 5xxx instruction
$EEA    $AA04   LD       I, $A04         ; Load A04 into I
$EEC    $74CC   ADD      V4, #CC         ; Add 204 to V4
$EEE    $6987   LD       V9, #87         ; Load 135 into V9
$EF0    $F6B3   UNKNOWN  F6B3            ; Unknown Fxxx instruction
$EF2    $16B6   JP       $6B6            ; Jump to 6B6
$EF4    $A59F   LD       I, $59F         ; Load 59F into I
$EF6    $5B98   UNKNOWN  $5B98           ; Unknown 5xxx instruction
$EF8    $B3CB   JP       V0, $3CB        ; Jump to V0 + 3CB
$EFA    $8B3A   UNKNOWN  8B3A            ; Unknown 8xxx instruction
$EFC    $8389   UNKNOWN  8389            ; Unknown 8xxx instruction
$EFE    $9B22   UNKNOWN  $9B22           ; Unknown 9xxx instruction
$F00    $BC26   JP       V0, $C26        ; Jump to V0 + C26
$F02    $52FE   UNKNOWN  $52FE           ; Unknown 5xxx instruction
$F04    $02A9   SYS      $2A9            ; System call to 2A9
$F06    $9C2E   UNKNOWN  $9C2E           ; Unknown 9xxx instruction
$F08    $977F   UNKNOWN  $977F           ; Unknown 9xxx instruction
$F0A    $F1C4   UNKNOWN  F1C4            ; Unknown Fxxx instruction
$F0C    $E6F1   UNKNOWN  $E6F1           ; Unknown Exxx instruction
$F0E    $6F44   LD       VF, #44         ; Load 68 into VF
$F10    $995C   UNKNOWN  $995C           ; Unknown 9xxx instruction
$F12    $2950   CALL     $950            ; Call subroutine at 950
$F14    $E6DB   UNKNOWN  $E6DB           ; Unknown Exxx instruction
$F16    $ADB0   LD       I, $DB0         ; Load DB0 into I
$F18    $BC1F   JP       V0, $C1F        ; Jump to V0 + C1F
$F1A    $5E4A   UNKNOWN  $5E4A           ; Unknown 5xxx instruction
$F1C    $5914   UNKNOWN  $5914           ; Unknown 5xxx instruction
$F1E    $0F8B   SYS      $F8B            ; System call to F8B
$F20    $0453   SYS      $453            ; System call to 453
$F22    $203D   CALL     $03D            ; Call subroutine at 03D
$F24    $B785   JP       V0, $785        ; Jump to V0 + 785
$F26    $59F0   SE       V9, VF          ; Skip if V9 == VF
$F28    $D173   DRW      V1, V7, #3      ; Draw 3-byte sprite at V1, V7
$F2A    $A5E8   LD       I, $5E8         ; Load 5E8 into I
$F2C    $436D   SNE      V3, #6D         ; Skip if V3 != 109
$F2E    $65D9   LD       V5, #D9         ; Load 217 into V5
$F30    $07D5   SYS      $7D5            ; System call to 7D5
$F32    $6C0D   LD       VC, #0D         ; Load 13 into VC
$F34    $592F   UNKNOWN  $592F           ; Unknown 5xxx instruction
$F36    $6AEB   LD       VA, #EB         ; Load 235 into VA
$F38    $29EA   CALL     $9EA            ; Call subroutine at 9EA
$F3A    $DC93   DRW      VC, V9, #3      ; Draw 3-byte sprite at VC, V9
$F3C    $1FDB   JP       $FDB            ; Jump to FDB
$F3E    $85B8   UNKNOWN  85B8            ; Unknown 8xxx instruction
$F40    $B2BE   JP       V0, $2BE        ; Jump to V0 + 2BE
$F42    $442B   SNE      V4, #2B         ; Skip if V4 != 43
$F44    $517E   UNKNOWN  $517E           ; Unknown 5xxx instruction
$F46    $4514   SNE      V5, #14         ; Skip if V5 != 20
$F48    $F7B0   UNKNOWN  F7B0            ; Unknown Fxxx instruction
$F4A    $450E   SNE      V5, #0E         ; Skip if V5 != 14
$F4C    $EF68   UNKNOWN  $EF68           ; Unknown Exxx instruction
$F4E    $4FAC   SNE      VF, #AC         ; Skip if VF != 172
$F50    $B352   JP       V0, $352        ; Jump to V0 + 352
$F52    $5523   UNKNOWN  $5523           ; Unknown 5xxx instruction
$F54    $329A   SE       V2, #9A         ; Skip if V2 == 154
$F56    $4873   SNE      V8, #73         ; Skip if V8 != 115
$F58    $D11D   DRW      V1, V1, #D      ; Draw 13-byte sprite at V1, V1
$F5A    $577A   UNKNOWN  $577A           ; Unknown 5xxx instruction
$F5C    $957C   UNKNOWN  $957C           ; Unknown 9xxx instruction
$F5E    $F734   UNKNOWN  F734            ; Unknown Fxxx instruction
$F60    $497B   SNE      V9, #7B         ; Skip if V9 != 123
$F62    $BF82   JP       V0, $F82        ; Jump to V0 + F82
$F64    $CCB8   RND      VC, #B8         ; VC = random & B8
$F66    $DF71   DRW      VF, V7, #1      ; Draw 1-byte sprite at VF, V7
$F68    $6045   LD       V0, #45         ; Load 69 into V0
$F6A    $E81A   UNKNOWN  $E81A           ; Unknown Exxx instruction
$F6C    $1368   JP       $368            ; Jump to 368
$F6E    $742C   ADD      V4, #2C         ; Add 44 to V4
$F70    $F86D   UNKNOWN  F86D            ; Unknown Fxxx instruction
$F72    $1329   JP       $329            ; Jump to 329
$F74    $9FF3   UNKNOWN  $9FF3           ; Unknown 9xxx instruction
$F76    $8B04   ADD      VB, V0          ; VB += V0, VF = carry
$F78    $8DEE   SHL      VD              ; VD <<= 1, VF = MSB
$F7A    $C093   RND      V0, #93         ; V0 = random & 93
$F7C    $99B0   SNE      V9, VB          ; Skip if V9 != VB
$F7E    $B4F4   JP       V0, $4F4        ; Jump to V0 + 4F4
$F80    $BD48   JP       V0, $D48        ; Jump to V0 + D48
$F82    $04D0   SYS      $4D0            ; System call to 4D0
$F84    $C8C7   RND      V8, #C7         ; V8 = random & C7
$F86    $1572   JP       $572            ; Jump to 572
$F88    $DCD5   DRW      VC, VD, #5      ; Draw 5-byte sprite at VC, VD
$F8A    $06FF   SYS      $6FF            ; System call to 6FF
$F8C    $BB4A   JP       V0, $B4A        ; Jump to V0 + B4A
$F8E    $B837   JP       V0, $837        ; Jump to V0 + 837
$F90    $18C0   JP       $8C0            ; Jump to 8C0
$F92    $3250   SE       V2, #50         ; Skip if V2 == 80
$F94    $A906   LD       I, $906         ; Load 906 into I
$F96    $19A2   JP       $9A2            ; Jump to 9A2
$F98    $BA03   JP       V0, $A03        ; Jump to V0 + A03
$F9A    $B9A2   JP       V0, $9A2        ; Jump to V0 + 9A2
$F9C    $DAE5   DRW      VA, VE, #5      ; Draw 5-byte sprite at VA, VE
$F9E    $D50F   DRW      V5, V0, #F      ; Draw 15-byte sprite at V5, V0
$FA0    $F645   UNKNOWN  F645            ; Unknown Fxxx instruction
$FA2    $0318   SYS      $318            ; System call to 318
$FA4    $E265   UNKNOWN  $E265           ; Unknown Exxx instruction
$FA6    $E42A   UNKNOWN  $E42A           ; Unknown Exxx instruction
$FA8    $667D   LD       V6, #7D         ; Load 125 into V6
$FAA    $04A5   SYS      $4A5            ; System call to 4A5
$FAC    $396F   SE       V9, #6F         ; Skip if V9 == 111
$FAE    $F949   UNKNOWN  F949            ; Unknown Fxxx instruction
$FB0    $F7A1   UNKNOWN  F7A1            ; Unknown Fxxx instruction
$FB2    $5E51   UNKNOWN  $5E51           ; Unknown 5xxx instruction
$FB4    $68D3   LD       V8, #D3         ; Load 211 into V8
$FB6    $E376   UNKNOWN  $E376           ; Unknown Exxx instruction
$FB8    $CA68   RND      VA, #68         ; VA = random & 68
$FBA    $07A3   SYS      $7A3            ; System call to 7A3
$FBC    $5065   UNKNOWN  $5065           ; Unknown 5xxx instruction
$FBE    $95F7   UNKNOWN  $95F7           ; Unknown 9xxx instruction
$FC0    $3328   SE       V3, #28         ; Skip if V3 == 40
$FC2    $E143   UNKNOWN  $E143           ; Unknown Exxx instruction
$FC4    $0826   SYS      $826            ; System call to 826
$FC6    $3185   SE       V1, #85         ; Skip if V1 == 133
$FC8    $B7FF   JP       V0, $7FF        ; Jump to V0 + 7FF
$FCA    $8D45   SUB      VD, V4          ; VD -= V4, VF = !borrow
$FCC    $DD48   DRW      VD, V4, #8      ; Draw 8-byte sprite at VD, V4
$FCE    $7EEB   ADD      VE, #EB         ; Add 235 to VE
$FD0    $102C   JP       $02C            ; Jump to 02C
$FD2    $3504   SE       V5, #04         ; Skip if V5 == 4
$FD4    $BA0E   JP       V0, $A0E        ; Jump to V0 + A0E
$FD6    $8427   SUBN     V4, V2          ; V4 = V2 - V4, VF = !borrow
$FD8    $137D   JP       $37D            ; Jump to 37D
$FDA    $C6DD   RND      V6, #DD         ; V6 = random & DD
$FDC    $B4CC   JP       V0, $4CC        ; Jump to V0 + 4CC
$FDE    $6CA5   LD       VC, #A5         ; Load 165 into VC
$FE0    $068F   SYS      $68F            ; System call to 68F
$FE2    $CF27   RND      VF, #27         ; VF = random & 27
$FE4    $75E8   ADD      V5, #E8         ; Add 232 to V5
$FE6    $FE6B   UNKNOWN  FE6B            ; Unknown Fxxx instruction
$FE8    $8B35   SUB      VB, V3          ; VB -= V3, VF = !borrow
$FEA    $66B1   LD       V6, #B1         ; Load 177 into V6
$FEC    $08BA   SYS      $8BA            ; System call to 8BA
$FEE    $8515   SUB      V5, V1          ; V5 -= V1, VF = !borrow
$FF0    $FAB8   UNKNOWN  FAB8            ; Unknown Fxxx instruction
$FF2    $1FCA   JP       $FCA            ; Jump to FCA
$FF4    $675F   LD       V7, #5F         ; Load 95 into V7
$FF6    $0CCD   SYS      $CCD            ; System call to CCD
$FF8    $3141   SE       V1, #41         ; Skip if V1 == 65
$FFA    $52A1   UNKNOWN  $52A1           ; Unknown 5xxx instruction
$FFC    $6CF3   LD       VC, #F3         ; Load 243 into VC
$FFE    $4479   SNE      V4, #79         ; Skip if V4 != 121

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 505 (28.2%)
  JP      : 229 (12.8%)
  LD      : 218 (12.2%)
  SYS     : 151 ( 8.4%)
  SE      : 119 ( 6.6%)
  CALL    : 118 ( 6.6%)
  ADD     : 112 ( 6.3%)
  DRW     : 100 ( 5.6%)
  RND     :  99 ( 5.5%)
  SNE     :  86 ( 4.8%)
  SUB     :  14 ( 0.8%)
  XOR     :  11 ( 0.6%)
  SHR     :   8 ( 0.4%)
  SHL     :   6 ( 0.3%)
  OR      :   6 ( 0.3%)
  SUBN    :   4 ( 0.2%)
  AND     :   4 ( 0.2%)
  SKP     :   1 ( 0.1%)

Memory Operations: 330 (18.4%)
Arithmetic Operations: 151 (8.4%)
