
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B7081D01_I35243_C3002_be718f86ee1c.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 7081
Instance: 35243
Direction: ascending
Final Array: [0, 1, 9, 16, 39, 45, 134, 168]
Operations: R:0 W:32 C:298 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 111
Sort Array References:
  $218: LD I, $42C ; Load 42C into I
  $264: LD I, $62F ; Load 62F into I
  $272: LD I, $127 ; Load 127 into I
  $27E: LD I, $CD9 ; Load CD9 into I
  $28C: LD I, $8C6 ; Load 8C6 into I
  $296: LD I, $CD1 ; Load CD1 into I
  $29A: LD I, $DFA ; Load DFA into I
  $2AA: LD I, $6BE ; Load 6BE into I
  $2CC: LD I, $17A ; Load 17A into I
  $30A: LD I, $015 ; Load 015 into I
  $310: LD I, $3FA ; Load 3FA into I
  $324: LD I, $96D ; Load 96D into I
  $332: LD I, $3DB ; Load 3DB into I
  $340: LD I, $697 ; Load 697 into I
  $36E: LD I, $63C ; Load 63C into I
  $398: LD I, $E49 ; Load E49 into I
  $3A8: LD I, $C64 ; Load C64 into I
  $3B0: LD I, $BF7 ; Load BF7 into I
  $3B4: LD I, $0F8 ; Load 0F8 into I
  $3BC: LD I, $D76 ; Load D76 into I
  $3D2: LD I, $A20 ; Load A20 into I
  $3F8: LD I, $51C ; Load 51C into I
  $422: LD I, $F1C ; Load F1C into I
  $42C: LD I, $596 ; Load 596 into I
  $438: LD I, $FB8 ; Load FB8 into I
  $448: LD I, $E9A ; Load E9A into I
  $47C: LD I, $281 ; Load 281 into I
  $4AC: LD I, $EFD ; Load EFD into I
  $4AE: LD I, $500 ; Load 500 into I
  $4EA: LD I, $BAA ; Load BAA into I
  $4F2: LD I, $DBB ; Load DBB into I
  $4FC: LD I, $7B1 ; Load 7B1 into I
  $51E: LD I, $650 ; Load 650 into I
  $534: LD I, $606 ; Load 606 into I
  $536: LD I, $1D6 ; Load 1D6 into I
  $5B4: LD I, $13B ; Load 13B into I
  $5B6: LD I, $C90 ; Load C90 into I
  $5C8: LD I, $275 ; Load 275 into I
  $5CC: LD I, $A64 ; Load A64 into I
  $602: LD I, $F45 ; Load F45 into I
  $61E: LD I, $5F6 ; Load 5F6 into I
  $642: LD I, $FF7 ; Load FF7 into I
  $644: LD I, $69E ; Load 69E into I
  $67C: LD I, $36D ; Load 36D into I
  $6C8: LD I, $805 ; Load 805 into I
  $6D4: LD I, $849 ; Load 849 into I
  $6D8: LD I, $053 ; Load 053 into I
  $6DA: LD I, $13C ; Load 13C into I
  $70A: LD I, $1B6 ; Load 1B6 into I
  $798: LD I, $BF1 ; Load BF1 into I
  $7B0: LD I, $A7A ; Load A7A into I
  $7B2: LD I, $360 ; Load 360 into I
  $7C6: LD I, $95A ; Load 95A into I
  $802: LD I, $AB9 ; Load AB9 into I
  $828: LD I, $2D1 ; Load 2D1 into I
  $836: LD I, $88C ; Load 88C into I
  $89A: LD I, $2A1 ; Load 2A1 into I
  $8BE: LD I, $715 ; Load 715 into I
  $8C4: LD I, $EE7 ; Load EE7 into I
  $8C8: LD I, $148 ; Load 148 into I
  $8D0: LD I, $AE8 ; Load AE8 into I
  $902: LD I, $C3D ; Load C3D into I
  $910: LD I, $6D4 ; Load 6D4 into I
  $92E: LD I, $B5E ; Load B5E into I
  $958: LD I, $955 ; Load 955 into I
  $978: LD I, $47D ; Load 47D into I
  $980: LD I, $DC2 ; Load DC2 into I
  $9AC: LD I, $074 ; Load 074 into I
  $9C0: LD I, $F48 ; Load F48 into I
  $9C8: LD I, $B42 ; Load B42 into I
  $A54: LD I, $87F ; Load 87F into I
  $A94: LD I, $771 ; Load 771 into I
  $A9C: LD I, $ADE ; Load ADE into I
  $ACA: LD I, $A0F ; Load A0F into I
  $AE6: LD I, $B50 ; Load B50 into I
  $AF0: LD I, $2CC ; Load 2CC into I
  $AFE: LD I, $652 ; Load 652 into I
  $B0A: LD I, $839 ; Load 839 into I
  $B20: LD I, $A97 ; Load A97 into I
  $B48: LD I, $44D ; Load 44D into I
  $B5E: LD I, $6EF ; Load 6EF into I
  $B68: LD I, $1C1 ; Load 1C1 into I
  $B8E: LD I, $40A ; Load 40A into I
  $B98: LD I, $6AF ; Load 6AF into I
  $C00: LD I, $D10 ; Load D10 into I
  $C48: LD I, $53A ; Load 53A into I
  $CFC: LD I, $835 ; Load 835 into I
  $D06: LD I, $461 ; Load 461 into I
  $D48: LD I, $EB3 ; Load EB3 into I
  $D88: LD I, $EDF ; Load EDF into I
  $D9C: LD I, $1E0 ; Load 1E0 into I
  $DA4: LD I, $9E5 ; Load 9E5 into I
  $DC2: LD I, $E1C ; Load E1C into I
  $E10: LD I, $9F0 ; Load 9F0 into I
  $E20: LD I, $CE5 ; Load CE5 into I
  $E40: LD I, $FA5 ; Load FA5 into I
  $E4A: LD I, $9D7 ; Load 9D7 into I
  $E78: LD I, $B75 ; Load B75 into I
  $EA4: LD I, $81A ; Load 81A into I
  $EA6: LD I, $1D8 ; Load 1D8 into I
  $EBA: LD I, $ED0 ; Load ED0 into I
  $ED0: LD I, $104 ; Load 104 into I
  $F12: LD I, $211 ; Load 211 into I
  $F30: LD I, $DBD ; Load DBD into I
  $F3A: LD I, $BD7 ; Load BD7 into I
  $F64: LD I, $9A4 ; Load 9A4 into I
  $F6C: LD I, $CF2 ; Load CF2 into I
  $F7A: LD I, $0F6 ; Load 0F6 into I
  $F8E: LD I, $F6E ; Load F6E into I
  $FA0: LD I, $AB4 ; Load AB4 into I
  $FD4: LD I, $7C8 ; Load 7C8 into I

CONTROL FLOW ANALYSIS:
Jumps: 239
Calls: 93
Branches: 263
Loops: 139
Loop Structures:
  $202 -> $00D (backward jump)
  $214 -> $1A5 (backward jump)
  $226 -> $09F (backward jump)
  $34C -> $1F5 (backward jump)
  $3AA -> $230 (backward jump)
  $43C -> $1D1 (backward jump)
  $44A -> $120 (backward jump)
  $466 -> $450 (backward jump)
  $486 -> $3DB (backward jump)
  $4CE -> $2C8 (backward jump)
  $502 -> $3D8 (backward jump)
  $516 -> $2A2 (backward jump)
  $57A -> $425 (backward jump)
  $590 -> $402 (backward jump)
  $5DE -> $4C7 (backward jump)
  $5F4 -> $33A (backward jump)
  $616 -> $616 (backward jump)
  $63E -> $170 (backward jump)
  $690 -> $23E (backward jump)
  $6C6 -> $2AB (backward jump)
  $6E0 -> $2B3 (backward jump)
  $6E2 -> $441 (backward jump)
  $750 -> $187 (backward jump)
  $76E -> $343 (backward jump)
  $778 -> $769 (backward jump)
  $794 -> $786 (backward jump)
  $7A4 -> $70B (backward jump)
  $7A6 -> $057 (backward jump)
  $7B6 -> $29B (backward jump)
  $804 -> $7FC (backward jump)
  $806 -> $800 (backward jump)
  $844 -> $256 (backward jump)
  $852 -> $3F3 (backward jump)
  $886 -> $596 (backward jump)
  $888 -> $7F1 (backward jump)
  $88A -> $51D (backward jump)
  $8B4 -> $05E (backward jump)
  $8DE -> $41E (backward jump)
  $90A -> $039 (backward jump)
  $916 -> $51C (backward jump)
  $92A -> $2C3 (backward jump)
  $944 -> $5EA (backward jump)
  $95C -> $1E9 (backward jump)
  $960 -> $86D (backward jump)
  $96A -> $560 (backward jump)
  $97A -> $010 (backward jump)
  $984 -> $1E6 (backward jump)
  $992 -> $2C9 (backward jump)
  $998 -> $323 (backward jump)
  $9A0 -> $0DD (backward jump)
  $9A6 -> $00C (backward jump)
  $9AE -> $50A (backward jump)
  $9BE -> $502 (backward jump)
  $9F2 -> $159 (backward jump)
  $9F6 -> $175 (backward jump)
  $9FA -> $95B (backward jump)
  $A12 -> $7B8 (backward jump)
  $A22 -> $792 (backward jump)
  $A24 -> $1A8 (backward jump)
  $A28 -> $07A (backward jump)
  $A32 -> $1DD (backward jump)
  $A58 -> $57F (backward jump)
  $A78 -> $95E (backward jump)
  $A7E -> $0B6 (backward jump)
  $AB8 -> $1C3 (backward jump)
  $AC0 -> $518 (backward jump)
  $AD2 -> $822 (backward jump)
  $ADE -> $41A (backward jump)
  $AEA -> $716 (backward jump)
  $AFC -> $1C3 (backward jump)
  $B04 -> $A41 (backward jump)
  $B3C -> $824 (backward jump)
  $B3E -> $0A1 (backward jump)
  $B50 -> $52D (backward jump)
  $B54 -> $9AE (backward jump)
  $B92 -> $7D2 (backward jump)
  $B9E -> $0DB (backward jump)
  $BA8 -> $5A1 (backward jump)
  $BB0 -> $B5A (backward jump)
  $BD8 -> $83C (backward jump)
  $BE6 -> $218 (backward jump)
  $BF8 -> $2A6 (backward jump)
  $C12 -> $79F (backward jump)
  $C1A -> $111 (backward jump)
  $C2C -> $A02 (backward jump)
  $C3A -> $448 (backward jump)
  $C52 -> $A67 (backward jump)
  $C54 -> $274 (backward jump)
  $C6C -> $852 (backward jump)
  $C76 -> $AEC (backward jump)
  $CA2 -> $0A3 (backward jump)
  $CAA -> $597 (backward jump)
  $CBA -> $385 (backward jump)
  $CC4 -> $B9B (backward jump)
  $CD4 -> $5C4 (backward jump)
  $CD6 -> $50E (backward jump)
  $CDE -> $4EA (backward jump)
  $CEC -> $097 (backward jump)
  $D08 -> $49D (backward jump)
  $D10 -> $2F2 (backward jump)
  $D14 -> $6B4 (backward jump)
  $D32 -> $60E (backward jump)
  $D50 -> $212 (backward jump)
  $D72 -> $629 (backward jump)
  $D7C -> $9ED (backward jump)
  $DB6 -> $76D (backward jump)
  $DD2 -> $10F (backward jump)
  $DDC -> $48B (backward jump)
  $DE6 -> $5BC (backward jump)
  $DE8 -> $619 (backward jump)
  $DF0 -> $AC1 (backward jump)
  $DF8 -> $262 (backward jump)
  $E24 -> $C68 (backward jump)
  $E32 -> $BE9 (backward jump)
  $E34 -> $B3F (backward jump)
  $E3C -> $284 (backward jump)
  $E42 -> $D00 (backward jump)
  $E46 -> $B14 (backward jump)
  $E5E -> $70B (backward jump)
  $E64 -> $555 (backward jump)
  $E70 -> $9BF (backward jump)
  $E8E -> $B98 (backward jump)
  $E96 -> $483 (backward jump)
  $E9C -> $CCE (backward jump)
  $EDA -> $159 (backward jump)
  $EE8 -> $1A3 (backward jump)
  $F0C -> $96F (backward jump)
  $F14 -> $9B6 (backward jump)
  $F20 -> $A3F (backward jump)
  $F36 -> $32E (backward jump)
  $F5E -> $1CA (backward jump)
  $F70 -> $A24 (backward jump)
  $F7C -> $491 (backward jump)
  $F7E -> $56D (backward jump)
  $F82 -> $996 (backward jump)
  $FBC -> $781 (backward jump)
  $FCE -> $309 (backward jump)
  $FDE -> $6D9 (backward jump)
  $FEC -> $D20 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $39EF   SE       V9, #EF         ; Skip if V9 == 239
$202    $B00D   JP       V0, $00D        ; Jump to V0 + 00D
$204    $B53F   JP       V0, $53F        ; Jump to V0 + 53F
$206    $661A   LD       V6, #1A         ; Load 26 into V6
$208    $EBE6   UNKNOWN  $EBE6           ; Unknown Exxx instruction
$20A    $E0D9   UNKNOWN  $E0D9           ; Unknown Exxx instruction
$20C    $9B71   UNKNOWN  $9B71           ; Unknown 9xxx instruction
$20E    $88E2   AND      V8, VE          ; V8 &= VE
$210    $D580   DRW      V5, V8, #0      ; Draw 0-byte sprite at V5, V8
$212    $4361   SNE      V3, #61         ; Skip if V3 != 97
$214    $B1A5   JP       V0, $1A5        ; Jump to V0 + 1A5
$216    $DF9D   DRW      VF, V9, #D      ; Draw 13-byte sprite at VF, V9
$218    $A42C   LD       I, $42C         ; Load 42C into I
$21A    $9CC7   UNKNOWN  $9CC7           ; Unknown 9xxx instruction
$21C    $4790   SNE      V7, #90         ; Skip if V7 != 144
$21E    $0AAB   SYS      $AAB            ; System call to AAB
$220    $164E   JP       $64E            ; Jump to 64E
$222    $D48F   DRW      V4, V8, #F      ; Draw 15-byte sprite at V4, V8
$224    $6377   LD       V3, #77         ; Load 119 into V3
$226    $109F   JP       $09F            ; Jump to 09F
$228    $3E83   SE       VE, #83         ; Skip if VE == 131
$22A    $0BD1   SYS      $BD1            ; System call to BD1
$22C    $B353   JP       V0, $353        ; Jump to V0 + 353
$22E    $EF83   UNKNOWN  $EF83           ; Unknown Exxx instruction
$230    $8390   LD       V3, V9          ; V3 = V9
$232    $6E0A   LD       VE, #0A         ; Load 10 into VE
$234    $FE84   UNKNOWN  FE84            ; Unknown Fxxx instruction
$236    $F531   UNKNOWN  F531            ; Unknown Fxxx instruction
$238    $3E04   SE       VE, #04         ; Skip if VE == 4
$23A    $F78B   UNKNOWN  F78B            ; Unknown Fxxx instruction
$23C    $09F4   SYS      $9F4            ; System call to 9F4
$23E    $E5E1   UNKNOWN  $E5E1           ; Unknown Exxx instruction
$240    $28E9   CALL     $8E9            ; Call subroutine at 8E9
$242    $CE49   RND      VE, #49         ; VE = random & 49
$244    $1474   JP       $474            ; Jump to 474
$246    $4EC4   SNE      VE, #C4         ; Skip if VE != 196
$248    $8BB9   UNKNOWN  8BB9            ; Unknown 8xxx instruction
$24A    $9133   UNKNOWN  $9133           ; Unknown 9xxx instruction
$24C    $7819   ADD      V8, #19         ; Add 25 to V8
$24E    $2C21   CALL     $C21            ; Call subroutine at C21
$250    $536B   UNKNOWN  $536B           ; Unknown 5xxx instruction
$252    $CBAD   RND      VB, #AD         ; VB = random & AD
$254    $BA83   JP       V0, $A83        ; Jump to V0 + A83
$256    $FF1C   UNKNOWN  FF1C            ; Unknown Fxxx instruction
$258    $3D27   SE       VD, #27         ; Skip if VD == 39
$25A    $59E8   UNKNOWN  $59E8           ; Unknown 5xxx instruction
$25C    $1AA9   JP       $AA9            ; Jump to AA9
$25E    $ED2F   UNKNOWN  $ED2F           ; Unknown Exxx instruction
$260    $9B82   UNKNOWN  $9B82           ; Unknown 9xxx instruction
$262    $FF8D   UNKNOWN  FF8D            ; Unknown Fxxx instruction
$264    $A62F   LD       I, $62F         ; Load 62F into I
$266    $1692   JP       $692            ; Jump to 692
$268    $F8F9   UNKNOWN  F8F9            ; Unknown Fxxx instruction
$26A    $33D1   SE       V3, #D1         ; Skip if V3 == 209
$26C    $9560   SNE      V5, V6          ; Skip if V5 != V6
$26E    $0543   SYS      $543            ; System call to 543
$270    $9A90   SNE      VA, V9          ; Skip if VA != V9
$272    $A127   LD       I, $127         ; Load 127 into I
$274    $94BF   UNKNOWN  $94BF           ; Unknown 9xxx instruction
$276    $49F5   SNE      V9, #F5         ; Skip if V9 != 245
$278    $F8CC   UNKNOWN  F8CC            ; Unknown Fxxx instruction
$27A    $2EDA   CALL     $EDA            ; Call subroutine at EDA
$27C    $4AB4   SNE      VA, #B4         ; Skip if VA != 180
$27E    $ACD9   LD       I, $CD9         ; Load CD9 into I
$280    $9C27   UNKNOWN  $9C27           ; Unknown 9xxx instruction
$282    $F5E4   UNKNOWN  F5E4            ; Unknown Fxxx instruction
$284    $1875   JP       $875            ; Jump to 875
$286    $EF62   UNKNOWN  $EF62           ; Unknown Exxx instruction
$288    $CF16   RND      VF, #16         ; VF = random & 16
$28A    $5C49   UNKNOWN  $5C49           ; Unknown 5xxx instruction
$28C    $A8C6   LD       I, $8C6         ; Load 8C6 into I
$28E    $6361   LD       V3, #61         ; Load 97 into V3
$290    $784E   ADD      V8, #4E         ; Add 78 to V8
$292    $4044   SNE      V0, #44         ; Skip if V0 != 68
$294    $9E9F   UNKNOWN  $9E9F           ; Unknown 9xxx instruction
$296    $ACD1   LD       I, $CD1         ; Load CD1 into I
$298    $68DF   LD       V8, #DF         ; Load 223 into V8
$29A    $ADFA   LD       I, $DFA         ; Load DFA into I
$29C    $5F22   UNKNOWN  $5F22           ; Unknown 5xxx instruction
$29E    $1C13   JP       $C13            ; Jump to C13
$2A0    $C340   RND      V3, #40         ; V3 = random & 40
$2A2    $25CB   CALL     $5CB            ; Call subroutine at 5CB
$2A4    $3A8A   SE       VA, #8A         ; Skip if VA == 138
$2A6    $0BD7   SYS      $BD7            ; System call to BD7
$2A8    $0E67   SYS      $E67            ; System call to E67
$2AA    $A6BE   LD       I, $6BE         ; Load 6BE into I
$2AC    $7E1E   ADD      VE, #1E         ; Add 30 to VE
$2AE    $488E   SNE      V8, #8E         ; Skip if V8 != 142
$2B0    $671C   LD       V7, #1C         ; Load 28 into V7
$2B2    $44D7   SNE      V4, #D7         ; Skip if V4 != 215
$2B4    $CC1C   RND      VC, #1C         ; VC = random & 1C
$2B6    $66B8   LD       V6, #B8         ; Load 184 into V6
$2B8    $EC17   UNKNOWN  $EC17           ; Unknown Exxx instruction
$2BA    $24C6   CALL     $4C6            ; Call subroutine at 4C6
$2BC    $4863   SNE      V8, #63         ; Skip if V8 != 99
$2BE    $53C3   UNKNOWN  $53C3           ; Unknown 5xxx instruction
$2C0    $2C9E   CALL     $C9E            ; Call subroutine at C9E
$2C2    $32B5   SE       V2, #B5         ; Skip if V2 == 181
$2C4    $4106   SNE      V1, #06         ; Skip if V1 != 6
$2C6    $C093   RND      V0, #93         ; V0 = random & 93
$2C8    $6AC8   LD       VA, #C8         ; Load 200 into VA
$2CA    $F5D2   UNKNOWN  F5D2            ; Unknown Fxxx instruction
$2CC    $A17A   LD       I, $17A         ; Load 17A into I
$2CE    $DC72   DRW      VC, V7, #2      ; Draw 2-byte sprite at VC, V7
$2D0    $95BA   UNKNOWN  $95BA           ; Unknown 9xxx instruction
$2D2    $43D2   SNE      V3, #D2         ; Skip if V3 != 210
$2D4    $F14C   UNKNOWN  F14C            ; Unknown Fxxx instruction
$2D6    $C157   RND      V1, #57         ; V1 = random & 57
$2D8    $5808   UNKNOWN  $5808           ; Unknown 5xxx instruction
$2DA    $DF13   DRW      VF, V1, #3      ; Draw 3-byte sprite at VF, V1
$2DC    $66F8   LD       V6, #F8         ; Load 248 into V6
$2DE    $540B   UNKNOWN  $540B           ; Unknown 5xxx instruction
$2E0    $8977   SUBN     V9, V7          ; V9 = V7 - V9, VF = !borrow
$2E2    $7FA4   ADD      VF, #A4         ; Add 164 to VF
$2E4    $BB44   JP       V0, $B44        ; Jump to V0 + B44
$2E6    $9D61   UNKNOWN  $9D61           ; Unknown 9xxx instruction
$2E8    $BD79   JP       V0, $D79        ; Jump to V0 + D79
$2EA    $32FA   SE       V2, #FA         ; Skip if V2 == 250
$2EC    $9176   UNKNOWN  $9176           ; Unknown 9xxx instruction
$2EE    $5A70   SE       VA, V7          ; Skip if VA == V7
$2F0    $C36D   RND      V3, #6D         ; V3 = random & 6D
$2F2    $DF42   DRW      VF, V4, #2      ; Draw 2-byte sprite at VF, V4
$2F4    $D5A6   DRW      V5, VA, #6      ; Draw 6-byte sprite at V5, VA
$2F6    $F33B   UNKNOWN  F33B            ; Unknown Fxxx instruction
$2F8    $E5D4   UNKNOWN  $E5D4           ; Unknown Exxx instruction
$2FA    $72FE   ADD      V2, #FE         ; Add 254 to V2
$2FC    $4079   SNE      V0, #79         ; Skip if V0 != 121
$2FE    $C512   RND      V5, #12         ; V5 = random & 12
$300    $0001   SYS      $001            ; System call to 001
$302    $0910   SYS      $910            ; System call to 910
$304    $272D   CALL     $72D            ; Call subroutine at 72D
$306    $86A8   UNKNOWN  86A8            ; Unknown 8xxx instruction
$308    $40BB   SNE      V0, #BB         ; Skip if V0 != 187
$30A    $A015   LD       I, $015         ; Load 015 into I
$30C    $8877   SUBN     V8, V7          ; V8 = V7 - V8, VF = !borrow
$30E    $BC05   JP       V0, $C05        ; Jump to V0 + C05
$310    $A3FA   LD       I, $3FA         ; Load 3FA into I
$312    $E19E   SKP      V1              ; Skip if key V1 pressed
$314    $52F6   UNKNOWN  $52F6           ; Unknown 5xxx instruction
$316    $019C   SYS      $19C            ; System call to 19C
$318    $B5C2   JP       V0, $5C2        ; Jump to V0 + 5C2
$31A    $968D   UNKNOWN  $968D           ; Unknown 9xxx instruction
$31C    $0F5D   SYS      $F5D            ; System call to F5D
$31E    $729B   ADD      V2, #9B         ; Add 155 to V2
$320    $602D   LD       V0, #2D         ; Load 45 into V0
$322    $7DB5   ADD      VD, #B5         ; Add 181 to VD
$324    $A96D   LD       I, $96D         ; Load 96D into I
$326    $01A6   SYS      $1A6            ; System call to 1A6
$328    $6F59   LD       VF, #59         ; Load 89 into VF
$32A    $70C1   ADD      V0, #C1         ; Add 193 to V0
$32C    $529F   UNKNOWN  $529F           ; Unknown 5xxx instruction
$32E    $E9D5   UNKNOWN  $E9D5           ; Unknown Exxx instruction
$330    $7E21   ADD      VE, #21         ; Add 33 to VE
$332    $A3DB   LD       I, $3DB         ; Load 3DB into I
$334    $60F4   LD       V0, #F4         ; Load 244 into V0
$336    $5B18   UNKNOWN  $5B18           ; Unknown 5xxx instruction
$338    $6411   LD       V4, #11         ; Load 17 into V4
$33A    $E980   UNKNOWN  $E980           ; Unknown Exxx instruction
$33C    $1A16   JP       $A16            ; Jump to A16
$33E    $3BD0   SE       VB, #D0         ; Skip if VB == 208
$340    $A697   LD       I, $697         ; Load 697 into I
$342    $3ABB   SE       VA, #BB         ; Skip if VA == 187
$344    $BF43   JP       V0, $F43        ; Jump to V0 + F43
$346    $7C90   ADD      VC, #90         ; Add 144 to VC
$348    $E2E0   UNKNOWN  $E2E0           ; Unknown Exxx instruction
$34A    $01B5   SYS      $1B5            ; System call to 1B5
$34C    $B1F5   JP       V0, $1F5        ; Jump to V0 + 1F5
$34E    $F53A   UNKNOWN  F53A            ; Unknown Fxxx instruction
$350    $1F0A   JP       $F0A            ; Jump to F0A
$352    $5223   UNKNOWN  $5223           ; Unknown 5xxx instruction
$354    $7972   ADD      V9, #72         ; Add 114 to V9
$356    $C9CE   RND      V9, #CE         ; V9 = random & CE
$358    $7D94   ADD      VD, #94         ; Add 148 to VD
$35A    $D1F5   DRW      V1, VF, #5      ; Draw 5-byte sprite at V1, VF
$35C    $D78B   DRW      V7, V8, #B      ; Draw 11-byte sprite at V7, V8
$35E    $30C5   SE       V0, #C5         ; Skip if V0 == 197
$360    $635E   LD       V3, #5E         ; Load 94 into V3
$362    $15DD   JP       $5DD            ; Jump to 5DD
$364    $5EC8   UNKNOWN  $5EC8           ; Unknown 5xxx instruction
$366    $4936   SNE      V9, #36         ; Skip if V9 != 54
$368    $1E59   JP       $E59            ; Jump to E59
$36A    $1B39   JP       $B39            ; Jump to B39
$36C    $4D9D   SNE      VD, #9D         ; Skip if VD != 157
$36E    $A63C   LD       I, $63C         ; Load 63C into I
$370    $4EFE   SNE      VE, #FE         ; Skip if VE != 254
$372    $60EB   LD       V0, #EB         ; Load 235 into V0
$374    $4CD8   SNE      VC, #D8         ; Skip if VC != 216
$376    $0953   SYS      $953            ; System call to 953
$378    $E3C0   UNKNOWN  $E3C0           ; Unknown Exxx instruction
$37A    $8825   SUB      V8, V2          ; V8 -= V2, VF = !borrow
$37C    $6A5D   LD       VA, #5D         ; Load 93 into VA
$37E    $05C0   SYS      $5C0            ; System call to 5C0
$380    $6141   LD       V1, #41         ; Load 65 into V1
$382    $DD5F   DRW      VD, V5, #F      ; Draw 15-byte sprite at VD, V5
$384    $9FC9   UNKNOWN  $9FC9           ; Unknown 9xxx instruction
$386    $E244   UNKNOWN  $E244           ; Unknown Exxx instruction
$388    $630D   LD       V3, #0D         ; Load 13 into V3
$38A    $8F92   AND      VF, V9          ; VF &= V9
$38C    $5BAC   UNKNOWN  $5BAC           ; Unknown 5xxx instruction
$38E    $022F   SYS      $22F            ; System call to 22F
$390    $6B5F   LD       VB, #5F         ; Load 95 into VB
$392    $0332   SYS      $332            ; System call to 332
$394    $7DD6   ADD      VD, #D6         ; Add 214 to VD
$396    $5191   UNKNOWN  $5191           ; Unknown 5xxx instruction
$398    $AE49   LD       I, $E49         ; Load E49 into I
$39A    $9E7A   UNKNOWN  $9E7A           ; Unknown 9xxx instruction
$39C    $CAD2   RND      VA, #D2         ; VA = random & D2
$39E    $3565   SE       V5, #65         ; Skip if V5 == 101
$3A0    $DB65   DRW      VB, V6, #5      ; Draw 5-byte sprite at VB, V6
$3A2    $1C84   JP       $C84            ; Jump to C84
$3A4    $DA05   DRW      VA, V0, #5      ; Draw 5-byte sprite at VA, V0
$3A6    $E7B0   UNKNOWN  $E7B0           ; Unknown Exxx instruction
$3A8    $AC64   LD       I, $C64         ; Load C64 into I
$3AA    $1230   JP       $230            ; Jump to 230
$3AC    $D628   DRW      V6, V2, #8      ; Draw 8-byte sprite at V6, V2
$3AE    $D9BA   DRW      V9, VB, #A      ; Draw 10-byte sprite at V9, VB
$3B0    $ABF7   LD       I, $BF7         ; Load BF7 into I
$3B2    $4131   SNE      V1, #31         ; Skip if V1 != 49
$3B4    $A0F8   LD       I, $0F8         ; Load 0F8 into I
$3B6    $DF02   DRW      VF, V0, #2      ; Draw 2-byte sprite at VF, V0
$3B8    $3619   SE       V6, #19         ; Skip if V6 == 25
$3BA    $F9F0   UNKNOWN  F9F0            ; Unknown Fxxx instruction
$3BC    $AD76   LD       I, $D76         ; Load D76 into I
$3BE    $4C42   SNE      VC, #42         ; Skip if VC != 66
$3C0    $DDDB   DRW      VD, VD, #B      ; Draw 11-byte sprite at VD, VD
$3C2    $57B8   UNKNOWN  $57B8           ; Unknown 5xxx instruction
$3C4    $6B6B   LD       VB, #6B         ; Load 107 into VB
$3C6    $8765   SUB      V7, V6          ; V7 -= V6, VF = !borrow
$3C8    $7E78   ADD      VE, #78         ; Add 120 to VE
$3CA    $916F   UNKNOWN  $916F           ; Unknown 9xxx instruction
$3CC    $2264   CALL     $264            ; Call subroutine at 264
$3CE    $7164   ADD      V1, #64         ; Add 100 to V1
$3D0    $382C   SE       V8, #2C         ; Skip if V8 == 44
$3D2    $AA20   LD       I, $A20         ; Load A20 into I
$3D4    $639B   LD       V3, #9B         ; Load 155 into V3
$3D6    $346C   SE       V4, #6C         ; Skip if V4 == 108
$3D8    $E2B5   UNKNOWN  $E2B5           ; Unknown Exxx instruction
$3DA    $84C5   SUB      V4, VC          ; V4 -= VC, VF = !borrow
$3DC    $9192   UNKNOWN  $9192           ; Unknown 9xxx instruction
$3DE    $315C   SE       V1, #5C         ; Skip if V1 == 92
$3E0    $735C   ADD      V3, #5C         ; Add 92 to V3
$3E2    $624D   LD       V2, #4D         ; Load 77 into V2
$3E4    $DE1C   DRW      VE, V1, #C      ; Draw 12-byte sprite at VE, V1
$3E6    $F08F   UNKNOWN  F08F            ; Unknown Fxxx instruction
$3E8    $1544   JP       $544            ; Jump to 544
$3EA    $5D09   UNKNOWN  $5D09           ; Unknown 5xxx instruction
$3EC    $F719   UNKNOWN  F719            ; Unknown Fxxx instruction
$3EE    $853E   SHL      V5              ; V5 <<= 1, VF = MSB
$3F0    $F5F3   UNKNOWN  F5F3            ; Unknown Fxxx instruction
$3F2    $56FD   UNKNOWN  $56FD           ; Unknown 5xxx instruction
$3F4    $9AFC   UNKNOWN  $9AFC           ; Unknown 9xxx instruction
$3F6    $9EE0   SNE      VE, VE          ; Skip if VE != VE
$3F8    $A51C   LD       I, $51C         ; Load 51C into I
$3FA    $DCB5   DRW      VC, VB, #5      ; Draw 5-byte sprite at VC, VB
$3FC    $FE6F   UNKNOWN  FE6F            ; Unknown Fxxx instruction
$3FE    $4194   SNE      V1, #94         ; Skip if V1 != 148
$400    $098E   SYS      $98E            ; System call to 98E
$402    $744F   ADD      V4, #4F         ; Add 79 to V4
$404    $DC49   DRW      VC, V4, #9      ; Draw 9-byte sprite at VC, V4
$406    $7F42   ADD      VF, #42         ; Add 66 to VF
$408    $FB02   UNKNOWN  FB02            ; Unknown Fxxx instruction
$40A    $4AE3   SNE      VA, #E3         ; Skip if VA != 227
$40C    $6099   LD       V0, #99         ; Load 153 into V0
$40E    $E2B9   UNKNOWN  $E2B9           ; Unknown Exxx instruction
$410    $CD74   RND      VD, #74         ; VD = random & 74
$412    $B62C   JP       V0, $62C        ; Jump to V0 + 62C
$414    $B483   JP       V0, $483        ; Jump to V0 + 483
$416    $F182   UNKNOWN  F182            ; Unknown Fxxx instruction
$418    $0038   SYS      $038            ; System call to 038
$41A    $3183   SE       V1, #83         ; Skip if V1 == 131
$41C    $F0CF   UNKNOWN  F0CF            ; Unknown Fxxx instruction
$41E    $BD5E   JP       V0, $D5E        ; Jump to V0 + D5E
$420    $6CC9   LD       VC, #C9         ; Load 201 into VC
$422    $AF1C   LD       I, $F1C         ; Load F1C into I
$424    $7778   ADD      V7, #78         ; Add 120 to V7
$426    $8D6B   UNKNOWN  8D6B            ; Unknown 8xxx instruction
$428    $9731   UNKNOWN  $9731           ; Unknown 9xxx instruction
$42A    $FA3D   UNKNOWN  FA3D            ; Unknown Fxxx instruction
$42C    $A596   LD       I, $596         ; Load 596 into I
$42E    $910F   UNKNOWN  $910F           ; Unknown 9xxx instruction
$430    $3CC7   SE       VC, #C7         ; Skip if VC == 199
$432    $0677   SYS      $677            ; System call to 677
$434    $FCFE   UNKNOWN  FCFE            ; Unknown Fxxx instruction
$436    $2A03   CALL     $A03            ; Call subroutine at A03
$438    $AFB8   LD       I, $FB8         ; Load FB8 into I
$43A    $40C6   SNE      V0, #C6         ; Skip if V0 != 198
$43C    $11D1   JP       $1D1            ; Jump to 1D1
$43E    $3312   SE       V3, #12         ; Skip if V3 == 18
$440    $8816   SHR      V8              ; V8 >>= 1, VF = LSB
$442    $9B8C   UNKNOWN  $9B8C           ; Unknown 9xxx instruction
$444    $9262   UNKNOWN  $9262           ; Unknown 9xxx instruction
$446    $8AAB   UNKNOWN  8AAB            ; Unknown 8xxx instruction
$448    $AE9A   LD       I, $E9A         ; Load E9A into I
$44A    $B120   JP       V0, $120        ; Jump to V0 + 120
$44C    $6779   LD       V7, #79         ; Load 121 into V7
$44E    $4825   SNE      V8, #25         ; Skip if V8 != 37
$450    $61F8   LD       V1, #F8         ; Load 248 into V1
$452    $BF86   JP       V0, $F86        ; Jump to V0 + F86
$454    $B9DB   JP       V0, $9DB        ; Jump to V0 + 9DB
$456    $C6DC   RND      V6, #DC         ; V6 = random & DC
$458    $953D   UNKNOWN  $953D           ; Unknown 9xxx instruction
$45A    $D591   DRW      V5, V9, #1      ; Draw 1-byte sprite at V5, V9
$45C    $BF95   JP       V0, $F95        ; Jump to V0 + F95
$45E    $6466   LD       V4, #66         ; Load 102 into V4
$460    $EFF2   UNKNOWN  $EFF2           ; Unknown Exxx instruction
$462    $7F1E   ADD      VF, #1E         ; Add 30 to VF
$464    $FFE6   UNKNOWN  FFE6            ; Unknown Fxxx instruction
$466    $B450   JP       V0, $450        ; Jump to V0 + 450
$468    $1854   JP       $854            ; Jump to 854
$46A    $FB43   UNKNOWN  FB43            ; Unknown Fxxx instruction
$46C    $DBED   DRW      VB, VE, #D      ; Draw 13-byte sprite at VB, VE
$46E    $CA63   RND      VA, #63         ; VA = random & 63
$470    $F1A4   UNKNOWN  F1A4            ; Unknown Fxxx instruction
$472    $CFCA   RND      VF, #CA         ; VF = random & CA
$474    $2391   CALL     $391            ; Call subroutine at 391
$476    $EA54   UNKNOWN  $EA54           ; Unknown Exxx instruction
$478    $221E   CALL     $21E            ; Call subroutine at 21E
$47A    $D501   DRW      V5, V0, #1      ; Draw 1-byte sprite at V5, V0
$47C    $A281   LD       I, $281         ; Load 281 into I
$47E    $8082   AND      V0, V8          ; V0 &= V8
$480    $073A   SYS      $73A            ; System call to 73A
$482    $33B6   SE       V3, #B6         ; Skip if V3 == 182
$484    $535D   UNKNOWN  $535D           ; Unknown 5xxx instruction
$486    $B3DB   JP       V0, $3DB        ; Jump to V0 + 3DB
$488    $5E7F   UNKNOWN  $5E7F           ; Unknown 5xxx instruction
$48A    $0A4C   SYS      $A4C            ; System call to A4C
$48C    $F4FB   UNKNOWN  F4FB            ; Unknown Fxxx instruction
$48E    $DF91   DRW      VF, V9, #1      ; Draw 1-byte sprite at VF, V9
$490    $D8AF   DRW      V8, VA, #F      ; Draw 15-byte sprite at V8, VA
$492    $6A82   LD       VA, #82         ; Load 130 into VA
$494    $C80C   RND      V8, #0C         ; V8 = random & 0C
$496    $1CCB   JP       $CCB            ; Jump to CCB
$498    $661A   LD       V6, #1A         ; Load 26 into V6
$49A    $4BE2   SNE      VB, #E2         ; Skip if VB != 226
$49C    $B663   JP       V0, $663        ; Jump to V0 + 663
$49E    $4338   SNE      V3, #38         ; Skip if V3 != 56
$4A0    $7E33   ADD      VE, #33         ; Add 51 to VE
$4A2    $79E5   ADD      V9, #E5         ; Add 229 to V9
$4A4    $3D0C   SE       VD, #0C         ; Skip if VD == 12
$4A6    $69B0   LD       V9, #B0         ; Load 176 into V9
$4A8    $541A   UNKNOWN  $541A           ; Unknown 5xxx instruction
$4AA    $4315   SNE      V3, #15         ; Skip if V3 != 21
$4AC    $AEFD   LD       I, $EFD         ; Load EFD into I
$4AE    $A500   LD       I, $500         ; Load 500 into I
$4B0    $F966   UNKNOWN  F966            ; Unknown Fxxx instruction
$4B2    $60E4   LD       V0, #E4         ; Load 228 into V0
$4B4    $98BA   UNKNOWN  $98BA           ; Unknown 9xxx instruction
$4B6    $D101   DRW      V1, V0, #1      ; Draw 1-byte sprite at V1, V0
$4B8    $1911   JP       $911            ; Jump to 911
$4BA    $BDB3   JP       V0, $DB3        ; Jump to V0 + DB3
$4BC    $24C1   CALL     $4C1            ; Call subroutine at 4C1
$4BE    $71A4   ADD      V1, #A4         ; Add 164 to V1
$4C0    $D62F   DRW      V6, V2, #F      ; Draw 15-byte sprite at V6, V2
$4C2    $FF52   UNKNOWN  FF52            ; Unknown Fxxx instruction
$4C4    $819B   UNKNOWN  819B            ; Unknown 8xxx instruction
$4C6    $9227   UNKNOWN  $9227           ; Unknown 9xxx instruction
$4C8    $C5B4   RND      V5, #B4         ; V5 = random & B4
$4CA    $C0F5   RND      V0, #F5         ; V0 = random & F5
$4CC    $9684   UNKNOWN  $9684           ; Unknown 9xxx instruction
$4CE    $B2C8   JP       V0, $2C8        ; Jump to V0 + 2C8
$4D0    $1965   JP       $965            ; Jump to 965
$4D2    $B96A   JP       V0, $96A        ; Jump to V0 + 96A
$4D4    $2E36   CALL     $E36            ; Call subroutine at E36
$4D6    $4EB4   SNE      VE, #B4         ; Skip if VE != 180
$4D8    $FB72   UNKNOWN  FB72            ; Unknown Fxxx instruction
$4DA    $50BA   UNKNOWN  $50BA           ; Unknown 5xxx instruction
$4DC    $4FD8   SNE      VF, #D8         ; Skip if VF != 216
$4DE    $093B   SYS      $93B            ; System call to 93B
$4E0    $BAD1   JP       V0, $AD1        ; Jump to V0 + AD1
$4E2    $539D   UNKNOWN  $539D           ; Unknown 5xxx instruction
$4E4    $CF65   RND      VF, #65         ; VF = random & 65
$4E6    $0B34   SYS      $B34            ; System call to B34
$4E8    $69B1   LD       V9, #B1         ; Load 177 into V9
$4EA    $ABAA   LD       I, $BAA         ; Load BAA into I
$4EC    $4884   SNE      V8, #84         ; Skip if V8 != 132
$4EE    $8D88   UNKNOWN  8D88            ; Unknown 8xxx instruction
$4F0    $84E5   SUB      V4, VE          ; V4 -= VE, VF = !borrow
$4F2    $ADBB   LD       I, $DBB         ; Load DBB into I
$4F4    $17E1   JP       $7E1            ; Jump to 7E1
$4F6    $6B85   LD       VB, #85         ; Load 133 into VB
$4F8    $9E6F   UNKNOWN  $9E6F           ; Unknown 9xxx instruction
$4FA    $427F   SNE      V2, #7F         ; Skip if V2 != 127
$4FC    $A7B1   LD       I, $7B1         ; Load 7B1 into I
$4FE    $DF6F   DRW      VF, V6, #F      ; Draw 15-byte sprite at VF, V6
$500    $FDC9   UNKNOWN  FDC9            ; Unknown Fxxx instruction
$502    $B3D8   JP       V0, $3D8        ; Jump to V0 + 3D8
$504    $BEBB   JP       V0, $EBB        ; Jump to V0 + EBB
$506    $572B   UNKNOWN  $572B           ; Unknown 5xxx instruction
$508    $18BD   JP       $8BD            ; Jump to 8BD
$50A    $C875   RND      V8, #75         ; V8 = random & 75
$50C    $B86F   JP       V0, $86F        ; Jump to V0 + 86F
$50E    $3297   SE       V2, #97         ; Skip if V2 == 151
$510    $4A09   SNE      VA, #09         ; Skip if VA != 9
$512    $D00C   DRW      V0, V0, #C      ; Draw 12-byte sprite at V0, V0
$514    $71FC   ADD      V1, #FC         ; Add 252 to V1
$516    $12A2   JP       $2A2            ; Jump to 2A2
$518    $4D82   SNE      VD, #82         ; Skip if VD != 130
$51A    $C255   RND      V2, #55         ; V2 = random & 55
$51C    $56F9   UNKNOWN  $56F9           ; Unknown 5xxx instruction
$51E    $A650   LD       I, $650         ; Load 650 into I
$520    $6EB0   LD       VE, #B0         ; Load 176 into VE
$522    $CB31   RND      VB, #31         ; VB = random & 31
$524    $F2CD   UNKNOWN  F2CD            ; Unknown Fxxx instruction
$526    $BB23   JP       V0, $B23        ; Jump to V0 + B23
$528    $2320   CALL     $320            ; Call subroutine at 320
$52A    $17BD   JP       $7BD            ; Jump to 7BD
$52C    $EDC6   UNKNOWN  $EDC6           ; Unknown Exxx instruction
$52E    $553E   UNKNOWN  $553E           ; Unknown 5xxx instruction
$530    $7983   ADD      V9, #83         ; Add 131 to V9
$532    $4CFD   SNE      VC, #FD         ; Skip if VC != 253
$534    $A606   LD       I, $606         ; Load 606 into I
$536    $A1D6   LD       I, $1D6         ; Load 1D6 into I
$538    $96FA   UNKNOWN  $96FA           ; Unknown 9xxx instruction
$53A    $9436   UNKNOWN  $9436           ; Unknown 9xxx instruction
$53C    $D2C0   DRW      V2, VC, #0      ; Draw 0-byte sprite at V2, VC
$53E    $9F75   UNKNOWN  $9F75           ; Unknown 9xxx instruction
$540    $D375   DRW      V3, V7, #5      ; Draw 5-byte sprite at V3, V7
$542    $E854   UNKNOWN  $E854           ; Unknown Exxx instruction
$544    $E752   UNKNOWN  $E752           ; Unknown Exxx instruction
$546    $4819   SNE      V8, #19         ; Skip if V8 != 25
$548    $33F9   SE       V3, #F9         ; Skip if V3 == 249
$54A    $62F2   LD       V2, #F2         ; Load 242 into V2
$54C    $7D03   ADD      VD, #03         ; Add 3 to VD
$54E    $53DB   UNKNOWN  $53DB           ; Unknown 5xxx instruction
$550    $DDC9   DRW      VD, VC, #9      ; Draw 9-byte sprite at VD, VC
$552    $4F72   SNE      VF, #72         ; Skip if VF != 114
$554    $C890   RND      V8, #90         ; V8 = random & 90
$556    $7A8C   ADD      VA, #8C         ; Add 140 to VA
$558    $8829   UNKNOWN  8829            ; Unknown 8xxx instruction
$55A    $71DA   ADD      V1, #DA         ; Add 218 to V1
$55C    $0F10   SYS      $F10            ; System call to F10
$55E    $2F80   CALL     $F80            ; Call subroutine at F80
$560    $1644   JP       $644            ; Jump to 644
$562    $45C7   SNE      V5, #C7         ; Skip if V5 != 199
$564    $45E5   SNE      V5, #E5         ; Skip if V5 != 229
$566    $BBDD   JP       V0, $BDD        ; Jump to V0 + BDD
$568    $7292   ADD      V2, #92         ; Add 146 to V2
$56A    $5DD3   UNKNOWN  $5DD3           ; Unknown 5xxx instruction
$56C    $0BA9   SYS      $BA9            ; System call to BA9
$56E    $FBE6   UNKNOWN  FBE6            ; Unknown Fxxx instruction
$570    $55CC   UNKNOWN  $55CC           ; Unknown 5xxx instruction
$572    $6DC0   LD       VD, #C0         ; Load 192 into VD
$574    $9F67   UNKNOWN  $9F67           ; Unknown 9xxx instruction
$576    $0763   SYS      $763            ; System call to 763
$578    $E6BB   UNKNOWN  $E6BB           ; Unknown Exxx instruction
$57A    $B425   JP       V0, $425        ; Jump to V0 + 425
$57C    $C361   RND      V3, #61         ; V3 = random & 61
$57E    $42E7   SNE      V2, #E7         ; Skip if V2 != 231
$580    $6738   LD       V7, #38         ; Load 56 into V7
$582    $E123   UNKNOWN  $E123           ; Unknown Exxx instruction
$584    $898D   UNKNOWN  898D            ; Unknown 8xxx instruction
$586    $EEBF   UNKNOWN  $EEBF           ; Unknown Exxx instruction
$588    $BA7A   JP       V0, $A7A        ; Jump to V0 + A7A
$58A    $6421   LD       V4, #21         ; Load 33 into V4
$58C    $3E2F   SE       VE, #2F         ; Skip if VE == 47
$58E    $FDEF   UNKNOWN  FDEF            ; Unknown Fxxx instruction
$590    $B402   JP       V0, $402        ; Jump to V0 + 402
$592    $43B7   SNE      V3, #B7         ; Skip if V3 != 183
$594    $D569   DRW      V5, V6, #9      ; Draw 9-byte sprite at V5, V6
$596    $5FEB   UNKNOWN  $5FEB           ; Unknown 5xxx instruction
$598    $0938   SYS      $938            ; System call to 938
$59A    $778A   ADD      V7, #8A         ; Add 138 to V7
$59C    $CF61   RND      VF, #61         ; VF = random & 61
$59E    $BD5D   JP       V0, $D5D        ; Jump to V0 + D5D
$5A0    $6C07   LD       VC, #07         ; Load 7 into VC
$5A2    $EBFC   UNKNOWN  $EBFC           ; Unknown Exxx instruction
$5A4    $48D8   SNE      V8, #D8         ; Skip if V8 != 216
$5A6    $9ABA   UNKNOWN  $9ABA           ; Unknown 9xxx instruction
$5A8    $54D0   SE       V4, VD          ; Skip if V4 == VD
$5AA    $C8FD   RND      V8, #FD         ; V8 = random & FD
$5AC    $5F0D   UNKNOWN  $5F0D           ; Unknown 5xxx instruction
$5AE    $E1AA   UNKNOWN  $E1AA           ; Unknown Exxx instruction
$5B0    $42B0   SNE      V2, #B0         ; Skip if V2 != 176
$5B2    $038E   SYS      $38E            ; System call to 38E
$5B4    $A13B   LD       I, $13B         ; Load 13B into I
$5B6    $AC90   LD       I, $C90         ; Load C90 into I
$5B8    $FF89   UNKNOWN  FF89            ; Unknown Fxxx instruction
$5BA    $0266   SYS      $266            ; System call to 266
$5BC    $3885   SE       V8, #85         ; Skip if V8 == 133
$5BE    $F959   UNKNOWN  F959            ; Unknown Fxxx instruction
$5C0    $82E6   SHR      V2              ; V2 >>= 1, VF = LSB
$5C2    $E607   UNKNOWN  $E607           ; Unknown Exxx instruction
$5C4    $C369   RND      V3, #69         ; V3 = random & 69
$5C6    $E273   UNKNOWN  $E273           ; Unknown Exxx instruction
$5C8    $A275   LD       I, $275         ; Load 275 into I
$5CA    $7A00   ADD      VA, #00         ; Add 0 to VA
$5CC    $AA64   LD       I, $A64         ; Load A64 into I
$5CE    $6EDC   LD       VE, #DC         ; Load 220 into VE
$5D0    $6823   LD       V8, #23         ; Load 35 into V8
$5D2    $344B   SE       V4, #4B         ; Skip if V4 == 75
$5D4    $8CD5   SUB      VC, VD          ; VC -= VD, VF = !borrow
$5D6    $9DDC   UNKNOWN  $9DDC           ; Unknown 9xxx instruction
$5D8    $D406   DRW      V4, V0, #6      ; Draw 6-byte sprite at V4, V0
$5DA    $9015   UNKNOWN  $9015           ; Unknown 9xxx instruction
$5DC    $42DA   SNE      V2, #DA         ; Skip if V2 != 218
$5DE    $14C7   JP       $4C7            ; Jump to 4C7
$5E0    $0EEA   SYS      $EEA            ; System call to EEA
$5E2    $9EBD   UNKNOWN  $9EBD           ; Unknown 9xxx instruction
$5E4    $1B12   JP       $B12            ; Jump to B12
$5E6    $615B   LD       V1, #5B         ; Load 91 into V1
$5E8    $308E   SE       V0, #8E         ; Skip if V0 == 142
$5EA    $EA81   UNKNOWN  $EA81           ; Unknown Exxx instruction
$5EC    $5FE4   UNKNOWN  $5FE4           ; Unknown 5xxx instruction
$5EE    $188F   JP       $88F            ; Jump to 88F
$5F0    $2BEB   CALL     $BEB            ; Call subroutine at BEB
$5F2    $1F49   JP       $F49            ; Jump to F49
$5F4    $133A   JP       $33A            ; Jump to 33A
$5F6    $52B1   UNKNOWN  $52B1           ; Unknown 5xxx instruction
$5F8    $0B43   SYS      $B43            ; System call to B43
$5FA    $0D35   SYS      $D35            ; System call to D35
$5FC    $0D70   SYS      $D70            ; System call to D70
$5FE    $383C   SE       V8, #3C         ; Skip if V8 == 60
$600    $D7FD   DRW      V7, VF, #D      ; Draw 13-byte sprite at V7, VF
$602    $AF45   LD       I, $F45         ; Load F45 into I
$604    $F56A   UNKNOWN  F56A            ; Unknown Fxxx instruction
$606    $08D8   SYS      $8D8            ; System call to 8D8
$608    $6C2F   LD       VC, #2F         ; Load 47 into VC
$60A    $EB48   UNKNOWN  $EB48           ; Unknown Exxx instruction
$60C    $336D   SE       V3, #6D         ; Skip if V3 == 109
$60E    $174E   JP       $74E            ; Jump to 74E
$610    $062C   SYS      $62C            ; System call to 62C
$612    $F916   UNKNOWN  F916            ; Unknown Fxxx instruction
$614    $8C1F   UNKNOWN  8C1F            ; Unknown 8xxx instruction
$616    $B616   JP       V0, $616        ; Jump to V0 + 616
$618    $C6BD   RND      V6, #BD         ; V6 = random & BD
$61A    $566B   UNKNOWN  $566B           ; Unknown 5xxx instruction
$61C    $D511   DRW      V5, V1, #1      ; Draw 1-byte sprite at V5, V1
$61E    $A5F6   LD       I, $5F6         ; Load 5F6 into I
$620    $078F   SYS      $78F            ; System call to 78F
$622    $54FD   UNKNOWN  $54FD           ; Unknown 5xxx instruction
$624    $515B   UNKNOWN  $515B           ; Unknown 5xxx instruction
$626    $1BD8   JP       $BD8            ; Jump to BD8
$628    $52C2   UNKNOWN  $52C2           ; Unknown 5xxx instruction
$62A    $F2CB   UNKNOWN  F2CB            ; Unknown Fxxx instruction
$62C    $226F   CALL     $26F            ; Call subroutine at 26F
$62E    $6965   LD       V9, #65         ; Load 101 into V9
$630    $1CB8   JP       $CB8            ; Jump to CB8
$632    $C57B   RND      V5, #7B         ; V5 = random & 7B
$634    $4C77   SNE      VC, #77         ; Skip if VC != 119
$636    $B99E   JP       V0, $99E        ; Jump to V0 + 99E
$638    $E28E   UNKNOWN  $E28E           ; Unknown Exxx instruction
$63A    $BCDB   JP       V0, $CDB        ; Jump to V0 + CDB
$63C    $9E87   UNKNOWN  $9E87           ; Unknown 9xxx instruction
$63E    $1170   JP       $170            ; Jump to 170
$640    $E716   UNKNOWN  $E716           ; Unknown Exxx instruction
$642    $AFF7   LD       I, $FF7         ; Load FF7 into I
$644    $A69E   LD       I, $69E         ; Load 69E into I
$646    $376C   SE       V7, #6C         ; Skip if V7 == 108
$648    $2CC3   CALL     $CC3            ; Call subroutine at CC3
$64A    $070D   SYS      $70D            ; System call to 70D
$64C    $FF36   UNKNOWN  FF36            ; Unknown Fxxx instruction
$64E    $3F9C   SE       VF, #9C         ; Skip if VF == 156
$650    $51A0   SE       V1, VA          ; Skip if V1 == VA
$652    $6BEC   LD       VB, #EC         ; Load 236 into VB
$654    $9C38   UNKNOWN  $9C38           ; Unknown 9xxx instruction
$656    $91F2   UNKNOWN  $91F2           ; Unknown 9xxx instruction
$658    $E86D   UNKNOWN  $E86D           ; Unknown Exxx instruction
$65A    $B9DF   JP       V0, $9DF        ; Jump to V0 + 9DF
$65C    $8011   OR       V0, V1          ; V0 |= V1
$65E    $5C75   UNKNOWN  $5C75           ; Unknown 5xxx instruction
$660    $6EF8   LD       VE, #F8         ; Load 248 into VE
$662    $2324   CALL     $324            ; Call subroutine at 324
$664    $2B32   CALL     $B32            ; Call subroutine at B32
$666    $1CE7   JP       $CE7            ; Jump to CE7
$668    $9A5A   UNKNOWN  $9A5A           ; Unknown 9xxx instruction
$66A    $C0F7   RND      V0, #F7         ; V0 = random & F7
$66C    $D603   DRW      V6, V0, #3      ; Draw 3-byte sprite at V6, V0
$66E    $7F2C   ADD      VF, #2C         ; Add 44 to VF
$670    $33AB   SE       V3, #AB         ; Skip if V3 == 171
$672    $C0CB   RND      V0, #CB         ; V0 = random & CB
$674    $B6DE   JP       V0, $6DE        ; Jump to V0 + 6DE
$676    $C461   RND      V4, #61         ; V4 = random & 61
$678    $8302   AND      V3, V0          ; V3 &= V0
$67A    $5CE8   UNKNOWN  $5CE8           ; Unknown 5xxx instruction
$67C    $A36D   LD       I, $36D         ; Load 36D into I
$67E    $6490   LD       V4, #90         ; Load 144 into V4
$680    $6C6E   LD       VC, #6E         ; Load 110 into VC
$682    $007A   SYS      $07A            ; System call to 07A
$684    $4411   SNE      V4, #11         ; Skip if V4 != 17
$686    $EDF6   UNKNOWN  $EDF6           ; Unknown Exxx instruction
$688    $3CB5   SE       VC, #B5         ; Skip if VC == 181
$68A    $332E   SE       V3, #2E         ; Skip if V3 == 46
$68C    $7528   ADD      V5, #28         ; Add 40 to V5
$68E    $DA73   DRW      VA, V7, #3      ; Draw 3-byte sprite at VA, V7
$690    $123E   JP       $23E            ; Jump to 23E
$692    $886C   UNKNOWN  886C            ; Unknown 8xxx instruction
$694    $5493   UNKNOWN  $5493           ; Unknown 5xxx instruction
$696    $393C   SE       V9, #3C         ; Skip if V9 == 60
$698    $C6B8   RND      V6, #B8         ; V6 = random & B8
$69A    $1D32   JP       $D32            ; Jump to D32
$69C    $F4BF   UNKNOWN  F4BF            ; Unknown Fxxx instruction
$69E    $C337   RND      V3, #37         ; V3 = random & 37
$6A0    $BA1F   JP       V0, $A1F        ; Jump to V0 + A1F
$6A2    $C66C   RND      V6, #6C         ; V6 = random & 6C
$6A4    $3B05   SE       VB, #05         ; Skip if VB == 5
$6A6    $2907   CALL     $907            ; Call subroutine at 907
$6A8    $4EFA   SNE      VE, #FA         ; Skip if VE != 250
$6AA    $C0B1   RND      V0, #B1         ; V0 = random & B1
$6AC    $3427   SE       V4, #27         ; Skip if V4 == 39
$6AE    $3D36   SE       VD, #36         ; Skip if VD == 54
$6B0    $9C71   UNKNOWN  $9C71           ; Unknown 9xxx instruction
$6B2    $9626   UNKNOWN  $9626           ; Unknown 9xxx instruction
$6B4    $0002   SYS      $002            ; System call to 002
$6B6    $6595   LD       V5, #95         ; Load 149 into V5
$6B8    $D554   DRW      V5, V5, #4      ; Draw 4-byte sprite at V5, V5
$6BA    $2928   CALL     $928            ; Call subroutine at 928
$6BC    $2190   CALL     $190            ; Call subroutine at 190
$6BE    $1E65   JP       $E65            ; Jump to E65
$6C0    $8D03   XOR      VD, V0          ; VD ^= V0
$6C2    $713B   ADD      V1, #3B         ; Add 59 to V1
$6C4    $95B2   UNKNOWN  $95B2           ; Unknown 9xxx instruction
$6C6    $12AB   JP       $2AB            ; Jump to 2AB
$6C8    $A805   LD       I, $805         ; Load 805 into I
$6CA    $3733   SE       V7, #33         ; Skip if V7 == 51
$6CC    $48F5   SNE      V8, #F5         ; Skip if V8 != 245
$6CE    $56CD   UNKNOWN  $56CD           ; Unknown 5xxx instruction
$6D0    $EFFA   UNKNOWN  $EFFA           ; Unknown Exxx instruction
$6D2    $6BCD   LD       VB, #CD         ; Load 205 into VB
$6D4    $A849   LD       I, $849         ; Load 849 into I
$6D6    $263C   CALL     $63C            ; Call subroutine at 63C
$6D8    $A053   LD       I, $053         ; Load 053 into I
$6DA    $A13C   LD       I, $13C         ; Load 13C into I
$6DC    $8DB9   UNKNOWN  8DB9            ; Unknown 8xxx instruction
$6DE    $3EC9   SE       VE, #C9         ; Skip if VE == 201
$6E0    $12B3   JP       $2B3            ; Jump to 2B3
$6E2    $B441   JP       V0, $441        ; Jump to V0 + 441
$6E4    $3610   SE       V6, #10         ; Skip if V6 == 16
$6E6    $3A3B   SE       VA, #3B         ; Skip if VA == 59
$6E8    $3F67   SE       VF, #67         ; Skip if VF == 103
$6EA    $C421   RND      V4, #21         ; V4 = random & 21
$6EC    $8DF0   LD       VD, VF          ; VD = VF
$6EE    $FD3E   UNKNOWN  FD3E            ; Unknown Fxxx instruction
$6F0    $C2B8   RND      V2, #B8         ; V2 = random & B8
$6F2    $7BE5   ADD      VB, #E5         ; Add 229 to VB
$6F4    $7EDF   ADD      VE, #DF         ; Add 223 to VE
$6F6    $83A3   XOR      V3, VA          ; V3 ^= VA
$6F8    $7A98   ADD      VA, #98         ; Add 152 to VA
$6FA    $6F75   LD       VF, #75         ; Load 117 into VF
$6FC    $59D4   UNKNOWN  $59D4           ; Unknown 5xxx instruction
$6FE    $F1B9   UNKNOWN  F1B9            ; Unknown Fxxx instruction
$700    $DB21   DRW      VB, V2, #1      ; Draw 1-byte sprite at VB, V2
$702    $E0E9   UNKNOWN  $E0E9           ; Unknown Exxx instruction
$704    $9F10   SNE      VF, V1          ; Skip if VF != V1
$706    $4130   SNE      V1, #30         ; Skip if V1 != 48
$708    $7D23   ADD      VD, #23         ; Add 35 to VD
$70A    $A1B6   LD       I, $1B6         ; Load 1B6 into I
$70C    $87B9   UNKNOWN  87B9            ; Unknown 8xxx instruction
$70E    $9A74   UNKNOWN  $9A74           ; Unknown 9xxx instruction
$710    $0896   SYS      $896            ; System call to 896
$712    $56CD   UNKNOWN  $56CD           ; Unknown 5xxx instruction
$714    $D452   DRW      V4, V5, #2      ; Draw 2-byte sprite at V4, V5
$716    $26C4   CALL     $6C4            ; Call subroutine at 6C4
$718    $999D   UNKNOWN  $999D           ; Unknown 9xxx instruction
$71A    $BF58   JP       V0, $F58        ; Jump to V0 + F58
$71C    $DE43   DRW      VE, V4, #3      ; Draw 3-byte sprite at VE, V4
$71E    $3423   SE       V4, #23         ; Skip if V4 == 35
$720    $2382   CALL     $382            ; Call subroutine at 382
$722    $CA27   RND      VA, #27         ; VA = random & 27
$724    $C8C2   RND      V8, #C2         ; V8 = random & C2
$726    $5EE3   UNKNOWN  $5EE3           ; Unknown 5xxx instruction
$728    $65B1   LD       V5, #B1         ; Load 177 into V5
$72A    $9C9F   UNKNOWN  $9C9F           ; Unknown 9xxx instruction
$72C    $4E00   SNE      VE, #00         ; Skip if VE != 0
$72E    $28B7   CALL     $8B7            ; Call subroutine at 8B7
$730    $3BDA   SE       VB, #DA         ; Skip if VB == 218
$732    $8E1E   SHL      VE              ; VE <<= 1, VF = MSB
$734    $3767   SE       V7, #67         ; Skip if V7 == 103
$736    $26F4   CALL     $6F4            ; Call subroutine at 6F4
$738    $4C44   SNE      VC, #44         ; Skip if VC != 68
$73A    $84B6   SHR      V4              ; V4 >>= 1, VF = LSB
$73C    $F7AD   UNKNOWN  F7AD            ; Unknown Fxxx instruction
$73E    $39A7   SE       V9, #A7         ; Skip if V9 == 167
$740    $EB3B   UNKNOWN  $EB3B           ; Unknown Exxx instruction
$742    $F40D   UNKNOWN  F40D            ; Unknown Fxxx instruction
$744    $F1ED   UNKNOWN  F1ED            ; Unknown Fxxx instruction
$746    $31DE   SE       V1, #DE         ; Skip if V1 == 222
$748    $83E8   UNKNOWN  83E8            ; Unknown 8xxx instruction
$74A    $4F98   SNE      VF, #98         ; Skip if VF != 152
$74C    $3A1A   SE       VA, #1A         ; Skip if VA == 26
$74E    $808F   UNKNOWN  808F            ; Unknown 8xxx instruction
$750    $B187   JP       V0, $187        ; Jump to V0 + 187
$752    $BFE4   JP       V0, $FE4        ; Jump to V0 + FE4
$754    $297F   CALL     $97F            ; Call subroutine at 97F
$756    $BC2F   JP       V0, $C2F        ; Jump to V0 + C2F
$758    $36D6   SE       V6, #D6         ; Skip if V6 == 214
$75A    $F633   LD       B, V6           ; Store BCD of V6 at I, I+1, I+2
$75C    $9BDF   UNKNOWN  $9BDF           ; Unknown 9xxx instruction
$75E    $BFC0   JP       V0, $FC0        ; Jump to V0 + FC0
$760    $E494   UNKNOWN  $E494           ; Unknown Exxx instruction
$762    $3173   SE       V1, #73         ; Skip if V1 == 115
$764    $873C   UNKNOWN  873C            ; Unknown 8xxx instruction
$766    $E5CF   UNKNOWN  $E5CF           ; Unknown Exxx instruction
$768    $9C1D   UNKNOWN  $9C1D           ; Unknown 9xxx instruction
$76A    $356E   SE       V5, #6E         ; Skip if V5 == 110
$76C    $3908   SE       V9, #08         ; Skip if V9 == 8
$76E    $B343   JP       V0, $343        ; Jump to V0 + 343
$770    $D9D7   DRW      V9, VD, #7      ; Draw 7-byte sprite at V9, VD
$772    $782D   ADD      V8, #2D         ; Add 45 to V8
$774    $6838   LD       V8, #38         ; Load 56 into V8
$776    $C529   RND      V5, #29         ; V5 = random & 29
$778    $B769   JP       V0, $769        ; Jump to V0 + 769
$77A    $EA6C   UNKNOWN  $EA6C           ; Unknown Exxx instruction
$77C    $F609   UNKNOWN  F609            ; Unknown Fxxx instruction
$77E    $94D0   SNE      V4, VD          ; Skip if V4 != VD
$780    $1808   JP       $808            ; Jump to 808
$782    $687A   LD       V8, #7A         ; Load 122 into V8
$784    $6C1D   LD       VC, #1D         ; Load 29 into VC
$786    $472B   SNE      V7, #2B         ; Skip if V7 != 43
$788    $598D   UNKNOWN  $598D           ; Unknown 5xxx instruction
$78A    $0C99   SYS      $C99            ; System call to C99
$78C    $07FD   SYS      $7FD            ; System call to 7FD
$78E    $85EA   UNKNOWN  85EA            ; Unknown 8xxx instruction
$790    $53BF   UNKNOWN  $53BF           ; Unknown 5xxx instruction
$792    $B9D8   JP       V0, $9D8        ; Jump to V0 + 9D8
$794    $1786   JP       $786            ; Jump to 786
$796    $34B4   SE       V4, #B4         ; Skip if V4 == 180
$798    $ABF1   LD       I, $BF1         ; Load BF1 into I
$79A    $6A47   LD       VA, #47         ; Load 71 into VA
$79C    $512B   UNKNOWN  $512B           ; Unknown 5xxx instruction
$79E    $E382   UNKNOWN  $E382           ; Unknown Exxx instruction
$7A0    $B7A3   JP       V0, $7A3        ; Jump to V0 + 7A3
$7A2    $003A   SYS      $03A            ; System call to 03A
$7A4    $170B   JP       $70B            ; Jump to 70B
$7A6    $1057   JP       $057            ; Jump to 057
$7A8    $D4FA   DRW      V4, VF, #A      ; Draw 10-byte sprite at V4, VF
$7AA    $6F91   LD       VF, #91         ; Load 145 into VF
$7AC    $0252   SYS      $252            ; System call to 252
$7AE    $3066   SE       V0, #66         ; Skip if V0 == 102
$7B0    $AA7A   LD       I, $A7A         ; Load A7A into I
$7B2    $A360   LD       I, $360         ; Load 360 into I
$7B4    $42EE   SNE      V2, #EE         ; Skip if V2 != 238
$7B6    $129B   JP       $29B            ; Jump to 29B
$7B8    $65E7   LD       V5, #E7         ; Load 231 into V5
$7BA    $D60E   DRW      V6, V0, #E      ; Draw 14-byte sprite at V6, V0
$7BC    $017F   SYS      $17F            ; System call to 17F
$7BE    $50C2   UNKNOWN  $50C2           ; Unknown 5xxx instruction
$7C0    $D3D9   DRW      V3, VD, #9      ; Draw 9-byte sprite at V3, VD
$7C2    $8F07   SUBN     VF, V0          ; VF = V0 - VF, VF = !borrow
$7C4    $7706   ADD      V7, #06         ; Add 6 to V7
$7C6    $A95A   LD       I, $95A         ; Load 95A into I
$7C8    $D243   DRW      V2, V4, #3      ; Draw 3-byte sprite at V2, V4
$7CA    $1B6E   JP       $B6E            ; Jump to B6E
$7CC    $9771   UNKNOWN  $9771           ; Unknown 9xxx instruction
$7CE    $3A6F   SE       VA, #6F         ; Skip if VA == 111
$7D0    $69C1   LD       V9, #C1         ; Load 193 into V9
$7D2    $0A1E   SYS      $A1E            ; System call to A1E
$7D4    $C66B   RND      V6, #6B         ; V6 = random & 6B
$7D6    $0E18   SYS      $E18            ; System call to E18
$7D8    $C597   RND      V5, #97         ; V5 = random & 97
$7DA    $DE6B   DRW      VE, V6, #B      ; Draw 11-byte sprite at VE, V6
$7DC    $8210   LD       V2, V1          ; V2 = V1
$7DE    $6240   LD       V2, #40         ; Load 64 into V2
$7E0    $49AB   SNE      V9, #AB         ; Skip if V9 != 171
$7E2    $ED24   UNKNOWN  $ED24           ; Unknown Exxx instruction
$7E4    $6A10   LD       VA, #10         ; Load 16 into VA
$7E6    $0725   SYS      $725            ; System call to 725
$7E8    $981A   UNKNOWN  $981A           ; Unknown 9xxx instruction
$7EA    $CF30   RND      VF, #30         ; VF = random & 30
$7EC    $C1AD   RND      V1, #AD         ; V1 = random & AD
$7EE    $86B8   UNKNOWN  86B8            ; Unknown 8xxx instruction
$7F0    $8283   XOR      V2, V8          ; V2 ^= V8
$7F2    $3881   SE       V8, #81         ; Skip if V8 == 129
$7F4    $7931   ADD      V9, #31         ; Add 49 to V9
$7F6    $6BB7   LD       VB, #B7         ; Load 183 into VB
$7F8    $F757   UNKNOWN  F757            ; Unknown Fxxx instruction
$7FA    $5291   UNKNOWN  $5291           ; Unknown 5xxx instruction
$7FC    $72E7   ADD      V2, #E7         ; Add 231 to V2
$7FE    $C42F   RND      V4, #2F         ; V4 = random & 2F
$800    $2E3D   CALL     $E3D            ; Call subroutine at E3D
$802    $AAB9   LD       I, $AB9         ; Load AB9 into I
$804    $B7FC   JP       V0, $7FC        ; Jump to V0 + 7FC
$806    $B800   JP       V0, $800        ; Jump to V0 + 800
$808    $40B3   SNE      V0, #B3         ; Skip if V0 != 179
$80A    $E845   UNKNOWN  $E845           ; Unknown Exxx instruction
$80C    $FC07   LD       VC, DT          ; VC = delay timer
$80E    $27FE   CALL     $7FE            ; Call subroutine at 7FE
$810    $7942   ADD      V9, #42         ; Add 66 to V9
$812    $D8E4   DRW      V8, VE, #4      ; Draw 4-byte sprite at V8, VE
$814    $3C74   SE       VC, #74         ; Skip if VC == 116
$816    $FE03   UNKNOWN  FE03            ; Unknown Fxxx instruction
$818    $224A   CALL     $24A            ; Call subroutine at 24A
$81A    $8035   SUB      V0, V3          ; V0 -= V3, VF = !borrow
$81C    $22A0   CALL     $2A0            ; Call subroutine at 2A0
$81E    $046D   SYS      $46D            ; System call to 46D
$820    $424E   SNE      V2, #4E         ; Skip if V2 != 78
$822    $5D01   UNKNOWN  $5D01           ; Unknown 5xxx instruction
$824    $58BC   UNKNOWN  $58BC           ; Unknown 5xxx instruction
$826    $DF73   DRW      VF, V7, #3      ; Draw 3-byte sprite at VF, V7
$828    $A2D1   LD       I, $2D1         ; Load 2D1 into I
$82A    $7FDC   ADD      VF, #DC         ; Add 220 to VF
$82C    $CCAE   RND      VC, #AE         ; VC = random & AE
$82E    $37C9   SE       V7, #C9         ; Skip if V7 == 201
$830    $3177   SE       V1, #77         ; Skip if V1 == 119
$832    $7F90   ADD      VF, #90         ; Add 144 to VF
$834    $190A   JP       $90A            ; Jump to 90A
$836    $A88C   LD       I, $88C         ; Load 88C into I
$838    $99F0   SNE      V9, VF          ; Skip if V9 != VF
$83A    $1D8B   JP       $D8B            ; Jump to D8B
$83C    $DDEA   DRW      VD, VE, #A      ; Draw 10-byte sprite at VD, VE
$83E    $31B3   SE       V1, #B3         ; Skip if V1 == 179
$840    $E6B3   UNKNOWN  $E6B3           ; Unknown Exxx instruction
$842    $23EC   CALL     $3EC            ; Call subroutine at 3EC
$844    $1256   JP       $256            ; Jump to 256
$846    $F328   UNKNOWN  F328            ; Unknown Fxxx instruction
$848    $0571   SYS      $571            ; System call to 571
$84A    $B891   JP       V0, $891        ; Jump to V0 + 891
$84C    $00A7   SYS      $0A7            ; System call to 0A7
$84E    $D12B   DRW      V1, V2, #B      ; Draw 11-byte sprite at V1, V2
$850    $CC1B   RND      VC, #1B         ; VC = random & 1B
$852    $B3F3   JP       V0, $3F3        ; Jump to V0 + 3F3
$854    $860A   UNKNOWN  860A            ; Unknown 8xxx instruction
$856    $33E8   SE       V3, #E8         ; Skip if V3 == 232
$858    $3951   SE       V9, #51         ; Skip if V9 == 81
$85A    $82EE   SHL      V2              ; V2 <<= 1, VF = MSB
$85C    $95C3   UNKNOWN  $95C3           ; Unknown 9xxx instruction
$85E    $D335   DRW      V3, V3, #5      ; Draw 5-byte sprite at V3, V3
$860    $3422   SE       V4, #22         ; Skip if V4 == 34
$862    $BEAC   JP       V0, $EAC        ; Jump to V0 + EAC
$864    $8E8E   SHL      VE              ; VE <<= 1, VF = MSB
$866    $7BF9   ADD      VB, #F9         ; Add 249 to VB
$868    $D085   DRW      V0, V8, #5      ; Draw 5-byte sprite at V0, V8
$86A    $E120   UNKNOWN  $E120           ; Unknown Exxx instruction
$86C    $EB0F   UNKNOWN  $EB0F           ; Unknown Exxx instruction
$86E    $CE48   RND      VE, #48         ; VE = random & 48
$870    $DD7C   DRW      VD, V7, #C      ; Draw 12-byte sprite at VD, V7
$872    $35A9   SE       V5, #A9         ; Skip if V5 == 169
$874    $EC91   UNKNOWN  $EC91           ; Unknown Exxx instruction
$876    $F262   UNKNOWN  F262            ; Unknown Fxxx instruction
$878    $6111   LD       V1, #11         ; Load 17 into V1
$87A    $085A   SYS      $85A            ; System call to 85A
$87C    $FE05   UNKNOWN  FE05            ; Unknown Fxxx instruction
$87E    $3520   SE       V5, #20         ; Skip if V5 == 32
$880    $31DF   SE       V1, #DF         ; Skip if V1 == 223
$882    $BA61   JP       V0, $A61        ; Jump to V0 + A61
$884    $D589   DRW      V5, V8, #9      ; Draw 9-byte sprite at V5, V8
$886    $B596   JP       V0, $596        ; Jump to V0 + 596
$888    $17F1   JP       $7F1            ; Jump to 7F1
$88A    $151D   JP       $51D            ; Jump to 51D
$88C    $BF4D   JP       V0, $F4D        ; Jump to V0 + F4D
$88E    $6860   LD       V8, #60         ; Load 96 into V8
$890    $5264   UNKNOWN  $5264           ; Unknown 5xxx instruction
$892    $BFBE   JP       V0, $FBE        ; Jump to V0 + FBE
$894    $EE45   UNKNOWN  $EE45           ; Unknown Exxx instruction
$896    $7445   ADD      V4, #45         ; Add 69 to V4
$898    $9DA5   UNKNOWN  $9DA5           ; Unknown 9xxx instruction
$89A    $A2A1   LD       I, $2A1         ; Load 2A1 into I
$89C    $C936   RND      V9, #36         ; V9 = random & 36
$89E    $93A3   UNKNOWN  $93A3           ; Unknown 9xxx instruction
$8A0    $34D9   SE       V4, #D9         ; Skip if V4 == 217
$8A2    $8B74   ADD      VB, V7          ; VB += V7, VF = carry
$8A4    $773E   ADD      V7, #3E         ; Add 62 to V7
$8A6    $E284   UNKNOWN  $E284           ; Unknown Exxx instruction
$8A8    $433B   SNE      V3, #3B         ; Skip if V3 != 59
$8AA    $0572   SYS      $572            ; System call to 572
$8AC    $0D6D   SYS      $D6D            ; System call to D6D
$8AE    $D218   DRW      V2, V1, #8      ; Draw 8-byte sprite at V2, V1
$8B0    $ECDD   UNKNOWN  $ECDD           ; Unknown Exxx instruction
$8B2    $EA4A   UNKNOWN  $EA4A           ; Unknown Exxx instruction
$8B4    $B05E   JP       V0, $05E        ; Jump to V0 + 05E
$8B6    $27B7   CALL     $7B7            ; Call subroutine at 7B7
$8B8    $9DDC   UNKNOWN  $9DDC           ; Unknown 9xxx instruction
$8BA    $3E8B   SE       VE, #8B         ; Skip if VE == 139
$8BC    $7A3E   ADD      VA, #3E         ; Add 62 to VA
$8BE    $A715   LD       I, $715         ; Load 715 into I
$8C0    $4F9F   SNE      VF, #9F         ; Skip if VF != 159
$8C2    $4854   SNE      V8, #54         ; Skip if V8 != 84
$8C4    $AEE7   LD       I, $EE7         ; Load EE7 into I
$8C6    $5871   UNKNOWN  $5871           ; Unknown 5xxx instruction
$8C8    $A148   LD       I, $148         ; Load 148 into I
$8CA    $F6F2   UNKNOWN  F6F2            ; Unknown Fxxx instruction
$8CC    $4DC3   SNE      VD, #C3         ; Skip if VD != 195
$8CE    $DE91   DRW      VE, V9, #1      ; Draw 1-byte sprite at VE, V9
$8D0    $AAE8   LD       I, $AE8         ; Load AE8 into I
$8D2    $F911   UNKNOWN  F911            ; Unknown Fxxx instruction
$8D4    $29AB   CALL     $9AB            ; Call subroutine at 9AB
$8D6    $5701   UNKNOWN  $5701           ; Unknown 5xxx instruction
$8D8    $1C77   JP       $C77            ; Jump to C77
$8DA    $F142   UNKNOWN  F142            ; Unknown Fxxx instruction
$8DC    $86B1   OR       V6, VB          ; V6 |= VB
$8DE    $B41E   JP       V0, $41E        ; Jump to V0 + 41E
$8E0    $BCB1   JP       V0, $CB1        ; Jump to V0 + CB1
$8E2    $D9E3   DRW      V9, VE, #3      ; Draw 3-byte sprite at V9, VE
$8E4    $95EC   UNKNOWN  $95EC           ; Unknown 9xxx instruction
$8E6    $78B9   ADD      V8, #B9         ; Add 185 to V8
$8E8    $1CB5   JP       $CB5            ; Jump to CB5
$8EA    $1C44   JP       $C44            ; Jump to C44
$8EC    $20B9   CALL     $0B9            ; Call subroutine at 0B9
$8EE    $3D5F   SE       VD, #5F         ; Skip if VD == 95
$8F0    $2A8C   CALL     $A8C            ; Call subroutine at A8C
$8F2    $9D32   UNKNOWN  $9D32           ; Unknown 9xxx instruction
$8F4    $F7A1   UNKNOWN  F7A1            ; Unknown Fxxx instruction
$8F6    $BD62   JP       V0, $D62        ; Jump to V0 + D62
$8F8    $98A2   UNKNOWN  $98A2           ; Unknown 9xxx instruction
$8FA    $3DFF   SE       VD, #FF         ; Skip if VD == 255
$8FC    $DE44   DRW      VE, V4, #4      ; Draw 4-byte sprite at VE, V4
$8FE    $7E3A   ADD      VE, #3A         ; Add 58 to VE
$900    $1FDD   JP       $FDD            ; Jump to FDD
$902    $AC3D   LD       I, $C3D         ; Load C3D into I
$904    $304D   SE       V0, #4D         ; Skip if V0 == 77
$906    $9C20   SNE      VC, V2          ; Skip if VC != V2
$908    $8637   SUBN     V6, V3          ; V6 = V3 - V6, VF = !borrow
$90A    $B039   JP       V0, $039        ; Jump to V0 + 039
$90C    $9219   UNKNOWN  $9219           ; Unknown 9xxx instruction
$90E    $CDC0   RND      VD, #C0         ; VD = random & C0
$910    $A6D4   LD       I, $6D4         ; Load 6D4 into I
$912    $8FBA   UNKNOWN  8FBA            ; Unknown 8xxx instruction
$914    $F82F   UNKNOWN  F82F            ; Unknown Fxxx instruction
$916    $B51C   JP       V0, $51C        ; Jump to V0 + 51C
$918    $7910   ADD      V9, #10         ; Add 16 to V9
$91A    $97F0   SNE      V7, VF          ; Skip if V7 != VF
$91C    $3357   SE       V3, #57         ; Skip if V3 == 87
$91E    $6C26   LD       VC, #26         ; Load 38 into VC
$920    $72A9   ADD      V2, #A9         ; Add 169 to V2
$922    $BF86   JP       V0, $F86        ; Jump to V0 + F86
$924    $4100   SNE      V1, #00         ; Skip if V1 != 0
$926    $7A2E   ADD      VA, #2E         ; Add 46 to VA
$928    $9B6A   UNKNOWN  $9B6A           ; Unknown 9xxx instruction
$92A    $B2C3   JP       V0, $2C3        ; Jump to V0 + 2C3
$92C    $02BA   SYS      $2BA            ; System call to 2BA
$92E    $AB5E   LD       I, $B5E         ; Load B5E into I
$930    $D3B9   DRW      V3, VB, #9      ; Draw 9-byte sprite at V3, VB
$932    $8BB6   SHR      VB              ; VB >>= 1, VF = LSB
$934    $21AE   CALL     $1AE            ; Call subroutine at 1AE
$936    $0BAA   SYS      $BAA            ; System call to BAA
$938    $C802   RND      V8, #02         ; V8 = random & 02
$93A    $5470   SE       V4, V7          ; Skip if V4 == V7
$93C    $2249   CALL     $249            ; Call subroutine at 249
$93E    $8A27   SUBN     VA, V2          ; VA = V2 - VA, VF = !borrow
$940    $9DDD   UNKNOWN  $9DDD           ; Unknown 9xxx instruction
$942    $751C   ADD      V5, #1C         ; Add 28 to V5
$944    $15EA   JP       $5EA            ; Jump to 5EA
$946    $6601   LD       V6, #01         ; Load 1 into V6
$948    $313C   SE       V1, #3C         ; Skip if V1 == 60
$94A    $5488   UNKNOWN  $5488           ; Unknown 5xxx instruction
$94C    $53CE   UNKNOWN  $53CE           ; Unknown 5xxx instruction
$94E    $F8B7   UNKNOWN  F8B7            ; Unknown Fxxx instruction
$950    $C2A8   RND      V2, #A8         ; V2 = random & A8
$952    $D705   DRW      V7, V0, #5      ; Draw 5-byte sprite at V7, V0
$954    $78F3   ADD      V8, #F3         ; Add 243 to V8
$956    $F3F4   UNKNOWN  F3F4            ; Unknown Fxxx instruction
$958    $A955   LD       I, $955         ; Load 955 into I
$95A    $BE1C   JP       V0, $E1C        ; Jump to V0 + E1C
$95C    $11E9   JP       $1E9            ; Jump to 1E9
$95E    $0B1E   SYS      $B1E            ; System call to B1E
$960    $B86D   JP       V0, $86D        ; Jump to V0 + 86D
$962    $3C1E   SE       VC, #1E         ; Skip if VC == 30
$964    $4349   SNE      V3, #49         ; Skip if V3 != 73
$966    $E068   UNKNOWN  $E068           ; Unknown Exxx instruction
$968    $DE4D   DRW      VE, V4, #D      ; Draw 13-byte sprite at VE, V4
$96A    $B560   JP       V0, $560        ; Jump to V0 + 560
$96C    $667E   LD       V6, #7E         ; Load 126 into V6
$96E    $5C29   UNKNOWN  $5C29           ; Unknown 5xxx instruction
$970    $67F8   LD       V7, #F8         ; Load 248 into V7
$972    $2926   CALL     $926            ; Call subroutine at 926
$974    $3C75   SE       VC, #75         ; Skip if VC == 117
$976    $6BFF   LD       VB, #FF         ; Load 255 into VB
$978    $A47D   LD       I, $47D         ; Load 47D into I
$97A    $B010   JP       V0, $010        ; Jump to V0 + 010
$97C    $F7E2   UNKNOWN  F7E2            ; Unknown Fxxx instruction
$97E    $DD1D   DRW      VD, V1, #D      ; Draw 13-byte sprite at VD, V1
$980    $ADC2   LD       I, $DC2         ; Load DC2 into I
$982    $4675   SNE      V6, #75         ; Skip if V6 != 117
$984    $11E6   JP       $1E6            ; Jump to 1E6
$986    $4BD1   SNE      VB, #D1         ; Skip if VB != 209
$988    $82D3   XOR      V2, VD          ; V2 ^= VD
$98A    $263A   CALL     $63A            ; Call subroutine at 63A
$98C    $3C8D   SE       VC, #8D         ; Skip if VC == 141
$98E    $DE78   DRW      VE, V7, #8      ; Draw 8-byte sprite at VE, V7
$990    $00F0   SYS      $0F0            ; System call to 0F0
$992    $B2C9   JP       V0, $2C9        ; Jump to V0 + 2C9
$994    $7C99   ADD      VC, #99         ; Add 153 to VC
$996    $47AF   SNE      V7, #AF         ; Skip if V7 != 175
$998    $B323   JP       V0, $323        ; Jump to V0 + 323
$99A    $08C4   SYS      $8C4            ; System call to 8C4
$99C    $F1F7   UNKNOWN  F1F7            ; Unknown Fxxx instruction
$99E    $96F5   UNKNOWN  $96F5           ; Unknown 9xxx instruction
$9A0    $B0DD   JP       V0, $0DD        ; Jump to V0 + 0DD
$9A2    $CD61   RND      VD, #61         ; VD = random & 61
$9A4    $9F75   UNKNOWN  $9F75           ; Unknown 9xxx instruction
$9A6    $B00C   JP       V0, $00C        ; Jump to V0 + 00C
$9A8    $68A7   LD       V8, #A7         ; Load 167 into V8
$9AA    $D0F3   DRW      V0, VF, #3      ; Draw 3-byte sprite at V0, VF
$9AC    $A074   LD       I, $074         ; Load 074 into I
$9AE    $B50A   JP       V0, $50A        ; Jump to V0 + 50A
$9B0    $32CC   SE       V2, #CC         ; Skip if V2 == 204
$9B2    $8676   SHR      V6              ; V6 >>= 1, VF = LSB
$9B4    $DDD1   DRW      VD, VD, #1      ; Draw 1-byte sprite at VD, VD
$9B6    $39D3   SE       V9, #D3         ; Skip if V9 == 211
$9B8    $3589   SE       V5, #89         ; Skip if V5 == 137
$9BA    $D463   DRW      V4, V6, #3      ; Draw 3-byte sprite at V4, V6
$9BC    $CFC3   RND      VF, #C3         ; VF = random & C3
$9BE    $1502   JP       $502            ; Jump to 502
$9C0    $AF48   LD       I, $F48         ; Load F48 into I
$9C2    $2D86   CALL     $D86            ; Call subroutine at D86
$9C4    $BF42   JP       V0, $F42        ; Jump to V0 + F42
$9C6    $7E82   ADD      VE, #82         ; Add 130 to VE
$9C8    $AB42   LD       I, $B42         ; Load B42 into I
$9CA    $4257   SNE      V2, #57         ; Skip if V2 != 87
$9CC    $59E6   UNKNOWN  $59E6           ; Unknown 5xxx instruction
$9CE    $719E   ADD      V1, #9E         ; Add 158 to V1
$9D0    $226E   CALL     $26E            ; Call subroutine at 26E
$9D2    $4580   SNE      V5, #80         ; Skip if V5 != 128
$9D4    $343C   SE       V4, #3C         ; Skip if V4 == 60
$9D6    $908C   UNKNOWN  $908C           ; Unknown 9xxx instruction
$9D8    $5121   UNKNOWN  $5121           ; Unknown 5xxx instruction
$9DA    $0D55   SYS      $D55            ; System call to D55
$9DC    $08F2   SYS      $8F2            ; System call to 8F2
$9DE    $C487   RND      V4, #87         ; V4 = random & 87
$9E0    $454E   SNE      V5, #4E         ; Skip if V5 != 78
$9E2    $6714   LD       V7, #14         ; Load 20 into V7
$9E4    $F095   UNKNOWN  F095            ; Unknown Fxxx instruction
$9E6    $27D6   CALL     $7D6            ; Call subroutine at 7D6
$9E8    $59C3   UNKNOWN  $59C3           ; Unknown 5xxx instruction
$9EA    $52D6   UNKNOWN  $52D6           ; Unknown 5xxx instruction
$9EC    $7458   ADD      V4, #58         ; Add 88 to V4
$9EE    $9396   UNKNOWN  $9396           ; Unknown 9xxx instruction
$9F0    $8952   AND      V9, V5          ; V9 &= V5
$9F2    $1159   JP       $159            ; Jump to 159
$9F4    $77C6   ADD      V7, #C6         ; Add 198 to V7
$9F6    $1175   JP       $175            ; Jump to 175
$9F8    $5067   UNKNOWN  $5067           ; Unknown 5xxx instruction
$9FA    $195B   JP       $95B            ; Jump to 95B
$9FC    $C6AD   RND      V6, #AD         ; V6 = random & AD
$9FE    $3C46   SE       VC, #46         ; Skip if VC == 70
$A00    $FB5B   UNKNOWN  FB5B            ; Unknown Fxxx instruction
$A02    $BDCE   JP       V0, $DCE        ; Jump to V0 + DCE
$A04    $0F80   SYS      $F80            ; System call to F80
$A06    $7D19   ADD      VD, #19         ; Add 25 to VD
$A08    $D299   DRW      V2, V9, #9      ; Draw 9-byte sprite at V2, V9
$A0A    $86CA   UNKNOWN  86CA            ; Unknown 8xxx instruction
$A0C    $571D   UNKNOWN  $571D           ; Unknown 5xxx instruction
$A0E    $C2FB   RND      V2, #FB         ; V2 = random & FB
$A10    $C150   RND      V1, #50         ; V1 = random & 50
$A12    $B7B8   JP       V0, $7B8        ; Jump to V0 + 7B8
$A14    $3010   SE       V0, #10         ; Skip if V0 == 16
$A16    $E70A   UNKNOWN  $E70A           ; Unknown Exxx instruction
$A18    $D5BA   DRW      V5, VB, #A      ; Draw 10-byte sprite at V5, VB
$A1A    $4C80   SNE      VC, #80         ; Skip if VC != 128
$A1C    $341C   SE       V4, #1C         ; Skip if V4 == 28
$A1E    $EAE0   UNKNOWN  $EAE0           ; Unknown Exxx instruction
$A20    $9AB4   UNKNOWN  $9AB4           ; Unknown 9xxx instruction
$A22    $1792   JP       $792            ; Jump to 792
$A24    $11A8   JP       $1A8            ; Jump to 1A8
$A26    $DA5B   DRW      VA, V5, #B      ; Draw 11-byte sprite at VA, V5
$A28    $107A   JP       $07A            ; Jump to 07A
$A2A    $E3A7   UNKNOWN  $E3A7           ; Unknown Exxx instruction
$A2C    $4E7B   SNE      VE, #7B         ; Skip if VE != 123
$A2E    $64B1   LD       V4, #B1         ; Load 177 into V4
$A30    $DBA7   DRW      VB, VA, #7      ; Draw 7-byte sprite at VB, VA
$A32    $B1DD   JP       V0, $1DD        ; Jump to V0 + 1DD
$A34    $7E15   ADD      VE, #15         ; Add 21 to VE
$A36    $941A   UNKNOWN  $941A           ; Unknown 9xxx instruction
$A38    $88F6   SHR      V8              ; V8 >>= 1, VF = LSB
$A3A    $6740   LD       V7, #40         ; Load 64 into V7
$A3C    $CF04   RND      VF, #04         ; VF = random & 04
$A3E    $BFFF   JP       V0, $FFF        ; Jump to V0 + FFF
$A40    $7D96   ADD      VD, #96         ; Add 150 to VD
$A42    $3BF8   SE       VB, #F8         ; Skip if VB == 248
$A44    $BE66   JP       V0, $E66        ; Jump to V0 + E66
$A46    $BF61   JP       V0, $F61        ; Jump to V0 + F61
$A48    $1BB8   JP       $BB8            ; Jump to BB8
$A4A    $EEC9   UNKNOWN  $EEC9           ; Unknown Exxx instruction
$A4C    $5865   UNKNOWN  $5865           ; Unknown 5xxx instruction
$A4E    $6BD1   LD       VB, #D1         ; Load 209 into VB
$A50    $D9B0   DRW      V9, VB, #0      ; Draw 0-byte sprite at V9, VB
$A52    $2953   CALL     $953            ; Call subroutine at 953
$A54    $A87F   LD       I, $87F         ; Load 87F into I
$A56    $63A6   LD       V3, #A6         ; Load 166 into V3
$A58    $157F   JP       $57F            ; Jump to 57F
$A5A    $9C87   UNKNOWN  $9C87           ; Unknown 9xxx instruction
$A5C    $BE29   JP       V0, $E29        ; Jump to V0 + E29
$A5E    $7236   ADD      V2, #36         ; Add 54 to V2
$A60    $898A   UNKNOWN  898A            ; Unknown 8xxx instruction
$A62    $693B   LD       V9, #3B         ; Load 59 into V9
$A64    $E877   UNKNOWN  $E877           ; Unknown Exxx instruction
$A66    $8E9D   UNKNOWN  8E9D            ; Unknown 8xxx instruction
$A68    $27A6   CALL     $7A6            ; Call subroutine at 7A6
$A6A    $7A66   ADD      VA, #66         ; Add 102 to VA
$A6C    $9DDF   UNKNOWN  $9DDF           ; Unknown 9xxx instruction
$A6E    $00A4   SYS      $0A4            ; System call to 0A4
$A70    $4566   SNE      V5, #66         ; Skip if V5 != 102
$A72    $80A4   ADD      V0, VA          ; V0 += VA, VF = carry
$A74    $3475   SE       V4, #75         ; Skip if V4 == 117
$A76    $DF78   DRW      VF, V7, #8      ; Draw 8-byte sprite at VF, V7
$A78    $B95E   JP       V0, $95E        ; Jump to V0 + 95E
$A7A    $3218   SE       V2, #18         ; Skip if V2 == 24
$A7C    $976C   UNKNOWN  $976C           ; Unknown 9xxx instruction
$A7E    $10B6   JP       $0B6            ; Jump to 0B6
$A80    $0694   SYS      $694            ; System call to 694
$A82    $FE37   UNKNOWN  FE37            ; Unknown Fxxx instruction
$A84    $CC71   RND      VC, #71         ; VC = random & 71
$A86    $E436   UNKNOWN  $E436           ; Unknown Exxx instruction
$A88    $8D96   SHR      VD              ; VD >>= 1, VF = LSB
$A8A    $90B6   UNKNOWN  $90B6           ; Unknown 9xxx instruction
$A8C    $3FCD   SE       VF, #CD         ; Skip if VF == 205
$A8E    $80DE   SHL      V0              ; V0 <<= 1, VF = MSB
$A90    $42F4   SNE      V2, #F4         ; Skip if V2 != 244
$A92    $E4ED   UNKNOWN  $E4ED           ; Unknown Exxx instruction
$A94    $A771   LD       I, $771         ; Load 771 into I
$A96    $E694   UNKNOWN  $E694           ; Unknown Exxx instruction
$A98    $0D8F   SYS      $D8F            ; System call to D8F
$A9A    $0AD6   SYS      $AD6            ; System call to AD6
$A9C    $AADE   LD       I, $ADE         ; Load ADE into I
$A9E    $3514   SE       V5, #14         ; Skip if V5 == 20
$AA0    $5182   UNKNOWN  $5182           ; Unknown 5xxx instruction
$AA2    $43BF   SNE      V3, #BF         ; Skip if V3 != 191
$AA4    $705A   ADD      V0, #5A         ; Add 90 to V0
$AA6    $DE38   DRW      VE, V3, #8      ; Draw 8-byte sprite at VE, V3
$AA8    $DA4E   DRW      VA, V4, #E      ; Draw 14-byte sprite at VA, V4
$AAA    $2591   CALL     $591            ; Call subroutine at 591
$AAC    $79FC   ADD      V9, #FC         ; Add 252 to V9
$AAE    $94C0   SNE      V4, VC          ; Skip if V4 != VC
$AB0    $E237   UNKNOWN  $E237           ; Unknown Exxx instruction
$AB2    $C2E0   RND      V2, #E0         ; V2 = random & E0
$AB4    $E575   UNKNOWN  $E575           ; Unknown Exxx instruction
$AB6    $62E6   LD       V2, #E6         ; Load 230 into V2
$AB8    $B1C3   JP       V0, $1C3        ; Jump to V0 + 1C3
$ABA    $843B   UNKNOWN  843B            ; Unknown 8xxx instruction
$ABC    $3D22   SE       VD, #22         ; Skip if VD == 34
$ABE    $4CB2   SNE      VC, #B2         ; Skip if VC != 178
$AC0    $1518   JP       $518            ; Jump to 518
$AC2    $369F   SE       V6, #9F         ; Skip if V6 == 159
$AC4    $0348   SYS      $348            ; System call to 348
$AC6    $8938   UNKNOWN  8938            ; Unknown 8xxx instruction
$AC8    $FDC5   UNKNOWN  FDC5            ; Unknown Fxxx instruction
$ACA    $AA0F   LD       I, $A0F         ; Load A0F into I
$ACC    $FB6E   UNKNOWN  FB6E            ; Unknown Fxxx instruction
$ACE    $0022   SYS      $022            ; System call to 022
$AD0    $8F67   SUBN     VF, V6          ; VF = V6 - VF, VF = !borrow
$AD2    $B822   JP       V0, $822        ; Jump to V0 + 822
$AD4    $C01F   RND      V0, #1F         ; V0 = random & 1F
$AD6    $4964   SNE      V9, #64         ; Skip if V9 != 100
$AD8    $F9FB   UNKNOWN  F9FB            ; Unknown Fxxx instruction
$ADA    $7C04   ADD      VC, #04         ; Add 4 to VC
$ADC    $6F14   LD       VF, #14         ; Load 20 into VF
$ADE    $B41A   JP       V0, $41A        ; Jump to V0 + 41A
$AE0    $518E   UNKNOWN  $518E           ; Unknown 5xxx instruction
$AE2    $2E80   CALL     $E80            ; Call subroutine at E80
$AE4    $3DBA   SE       VD, #BA         ; Skip if VD == 186
$AE6    $AB50   LD       I, $B50         ; Load B50 into I
$AE8    $5B17   UNKNOWN  $5B17           ; Unknown 5xxx instruction
$AEA    $1716   JP       $716            ; Jump to 716
$AEC    $3D8F   SE       VD, #8F         ; Skip if VD == 143
$AEE    $4CAC   SNE      VC, #AC         ; Skip if VC != 172
$AF0    $A2CC   LD       I, $2CC         ; Load 2CC into I
$AF2    $D664   DRW      V6, V6, #4      ; Draw 4-byte sprite at V6, V6
$AF4    $4F02   SNE      VF, #02         ; Skip if VF != 2
$AF6    $4374   SNE      V3, #74         ; Skip if V3 != 116
$AF8    $2FF0   CALL     $FF0            ; Call subroutine at FF0
$AFA    $BB77   JP       V0, $B77        ; Jump to V0 + B77
$AFC    $11C3   JP       $1C3            ; Jump to 1C3
$AFE    $A652   LD       I, $652         ; Load 652 into I
$B00    $6A18   LD       VA, #18         ; Load 24 into VA
$B02    $833E   SHL      V3              ; V3 <<= 1, VF = MSB
$B04    $BA41   JP       V0, $A41        ; Jump to V0 + A41
$B06    $48AA   SNE      V8, #AA         ; Skip if V8 != 170
$B08    $D1A9   DRW      V1, VA, #9      ; Draw 9-byte sprite at V1, VA
$B0A    $A839   LD       I, $839         ; Load 839 into I
$B0C    $CCE3   RND      VC, #E3         ; VC = random & E3
$B0E    $DF84   DRW      VF, V8, #4      ; Draw 4-byte sprite at VF, V8
$B10    $CB4B   RND      VB, #4B         ; VB = random & 4B
$B12    $7E5D   ADD      VE, #5D         ; Add 93 to VE
$B14    $E6C8   UNKNOWN  $E6C8           ; Unknown Exxx instruction
$B16    $2DAF   CALL     $DAF            ; Call subroutine at DAF
$B18    $C3B6   RND      V3, #B6         ; V3 = random & B6
$B1A    $4634   SNE      V6, #34         ; Skip if V6 != 52
$B1C    $F11D   UNKNOWN  F11D            ; Unknown Fxxx instruction
$B1E    $EA3F   UNKNOWN  $EA3F           ; Unknown Exxx instruction
$B20    $AA97   LD       I, $A97         ; Load A97 into I
$B22    $FFE3   UNKNOWN  FFE3            ; Unknown Fxxx instruction
$B24    $E128   UNKNOWN  $E128           ; Unknown Exxx instruction
$B26    $F889   UNKNOWN  F889            ; Unknown Fxxx instruction
$B28    $509F   UNKNOWN  $509F           ; Unknown 5xxx instruction
$B2A    $04E7   SYS      $4E7            ; System call to 4E7
$B2C    $6CD4   LD       VC, #D4         ; Load 212 into VC
$B2E    $25DC   CALL     $5DC            ; Call subroutine at 5DC
$B30    $399B   SE       V9, #9B         ; Skip if V9 == 155
$B32    $2C2C   CALL     $C2C            ; Call subroutine at C2C
$B34    $EFCA   UNKNOWN  $EFCA           ; Unknown Exxx instruction
$B36    $6674   LD       V6, #74         ; Load 116 into V6
$B38    $0190   SYS      $190            ; System call to 190
$B3A    $04B2   SYS      $4B2            ; System call to 4B2
$B3C    $B824   JP       V0, $824        ; Jump to V0 + 824
$B3E    $10A1   JP       $0A1            ; Jump to 0A1
$B40    $F11C   UNKNOWN  F11C            ; Unknown Fxxx instruction
$B42    $E991   UNKNOWN  $E991           ; Unknown Exxx instruction
$B44    $79DC   ADD      V9, #DC         ; Add 220 to V9
$B46    $1DE0   JP       $DE0            ; Jump to DE0
$B48    $A44D   LD       I, $44D         ; Load 44D into I
$B4A    $77F0   ADD      V7, #F0         ; Add 240 to V7
$B4C    $E7BE   UNKNOWN  $E7BE           ; Unknown Exxx instruction
$B4E    $9F53   UNKNOWN  $9F53           ; Unknown 9xxx instruction
$B50    $B52D   JP       V0, $52D        ; Jump to V0 + 52D
$B52    $69E5   LD       V9, #E5         ; Load 229 into V9
$B54    $B9AE   JP       V0, $9AE        ; Jump to V0 + 9AE
$B56    $03FB   SYS      $3FB            ; System call to 3FB
$B58    $F920   UNKNOWN  F920            ; Unknown Fxxx instruction
$B5A    $FC28   UNKNOWN  FC28            ; Unknown Fxxx instruction
$B5C    $8B55   SUB      VB, V5          ; VB -= V5, VF = !borrow
$B5E    $A6EF   LD       I, $6EF         ; Load 6EF into I
$B60    $9490   SNE      V4, V9          ; Skip if V4 != V9
$B62    $92A7   UNKNOWN  $92A7           ; Unknown 9xxx instruction
$B64    $E783   UNKNOWN  $E783           ; Unknown Exxx instruction
$B66    $3732   SE       V7, #32         ; Skip if V7 == 50
$B68    $A1C1   LD       I, $1C1         ; Load 1C1 into I
$B6A    $0DB2   SYS      $DB2            ; System call to DB2
$B6C    $7A9F   ADD      VA, #9F         ; Add 159 to VA
$B6E    $22B3   CALL     $2B3            ; Call subroutine at 2B3
$B70    $5BBC   UNKNOWN  $5BBC           ; Unknown 5xxx instruction
$B72    $61AF   LD       V1, #AF         ; Load 175 into V1
$B74    $06CA   SYS      $6CA            ; System call to 6CA
$B76    $08D6   SYS      $8D6            ; System call to 8D6
$B78    $0B3B   SYS      $B3B            ; System call to B3B
$B7A    $652E   LD       V5, #2E         ; Load 46 into V5
$B7C    $DBA9   DRW      VB, VA, #9      ; Draw 9-byte sprite at VB, VA
$B7E    $7176   ADD      V1, #76         ; Add 118 to V1
$B80    $4F39   SNE      VF, #39         ; Skip if VF != 57
$B82    $0999   SYS      $999            ; System call to 999
$B84    $5C66   UNKNOWN  $5C66           ; Unknown 5xxx instruction
$B86    $C204   RND      V2, #04         ; V2 = random & 04
$B88    $2482   CALL     $482            ; Call subroutine at 482
$B8A    $5500   SE       V5, V0          ; Skip if V5 == V0
$B8C    $35BF   SE       V5, #BF         ; Skip if V5 == 191
$B8E    $A40A   LD       I, $40A         ; Load 40A into I
$B90    $685C   LD       V8, #5C         ; Load 92 into V8
$B92    $B7D2   JP       V0, $7D2        ; Jump to V0 + 7D2
$B94    $E512   UNKNOWN  $E512           ; Unknown Exxx instruction
$B96    $6245   LD       V2, #45         ; Load 69 into V2
$B98    $A6AF   LD       I, $6AF         ; Load 6AF into I
$B9A    $C4DE   RND      V4, #DE         ; V4 = random & DE
$B9C    $9C24   UNKNOWN  $9C24           ; Unknown 9xxx instruction
$B9E    $10DB   JP       $0DB            ; Jump to 0DB
$BA0    $7615   ADD      V6, #15         ; Add 21 to V6
$BA2    $97F9   UNKNOWN  $97F9           ; Unknown 9xxx instruction
$BA4    $6760   LD       V7, #60         ; Load 96 into V7
$BA6    $9083   UNKNOWN  $9083           ; Unknown 9xxx instruction
$BA8    $15A1   JP       $5A1            ; Jump to 5A1
$BAA    $25C4   CALL     $5C4            ; Call subroutine at 5C4
$BAC    $DE35   DRW      VE, V3, #5      ; Draw 5-byte sprite at VE, V3
$BAE    $6DBD   LD       VD, #BD         ; Load 189 into VD
$BB0    $1B5A   JP       $B5A            ; Jump to B5A
$BB2    $BC56   JP       V0, $C56        ; Jump to V0 + C56
$BB4    $F466   UNKNOWN  F466            ; Unknown Fxxx instruction
$BB6    $443A   SNE      V4, #3A         ; Skip if V4 != 58
$BB8    $8427   SUBN     V4, V2          ; V4 = V2 - V4, VF = !borrow
$BBA    $394F   SE       V9, #4F         ; Skip if V9 == 79
$BBC    $E50D   UNKNOWN  $E50D           ; Unknown Exxx instruction
$BBE    $FFF3   UNKNOWN  FFF3            ; Unknown Fxxx instruction
$BC0    $9296   UNKNOWN  $9296           ; Unknown 9xxx instruction
$BC2    $E06D   UNKNOWN  $E06D           ; Unknown Exxx instruction
$BC4    $2065   CALL     $065            ; Call subroutine at 065
$BC6    $744C   ADD      V4, #4C         ; Add 76 to V4
$BC8    $8FF7   SUBN     VF, VF          ; VF = VF - VF, VF = !borrow
$BCA    $C838   RND      V8, #38         ; V8 = random & 38
$BCC    $F99F   UNKNOWN  F99F            ; Unknown Fxxx instruction
$BCE    $83C6   SHR      V3              ; V3 >>= 1, VF = LSB
$BD0    $5ADA   UNKNOWN  $5ADA           ; Unknown 5xxx instruction
$BD2    $97AD   UNKNOWN  $97AD           ; Unknown 9xxx instruction
$BD4    $5FBD   UNKNOWN  $5FBD           ; Unknown 5xxx instruction
$BD6    $E9B7   UNKNOWN  $E9B7           ; Unknown Exxx instruction
$BD8    $B83C   JP       V0, $83C        ; Jump to V0 + 83C
$BDA    $6CAC   LD       VC, #AC         ; Load 172 into VC
$BDC    $98E9   UNKNOWN  $98E9           ; Unknown 9xxx instruction
$BDE    $D3FD   DRW      V3, VF, #D      ; Draw 13-byte sprite at V3, VF
$BE0    $DA53   DRW      VA, V5, #3      ; Draw 3-byte sprite at VA, V5
$BE2    $9E97   UNKNOWN  $9E97           ; Unknown 9xxx instruction
$BE4    $7414   ADD      V4, #14         ; Add 20 to V4
$BE6    $B218   JP       V0, $218        ; Jump to V0 + 218
$BE8    $4547   SNE      V5, #47         ; Skip if V5 != 71
$BEA    $3426   SE       V4, #26         ; Skip if V4 == 38
$BEC    $EF68   UNKNOWN  $EF68           ; Unknown Exxx instruction
$BEE    $6375   LD       V3, #75         ; Load 117 into V3
$BF0    $8EA3   XOR      VE, VA          ; VE ^= VA
$BF2    $CCC1   RND      VC, #C1         ; VC = random & C1
$BF4    $0EB4   SYS      $EB4            ; System call to EB4
$BF6    $2585   CALL     $585            ; Call subroutine at 585
$BF8    $12A6   JP       $2A6            ; Jump to 2A6
$BFA    $9DDE   UNKNOWN  $9DDE           ; Unknown 9xxx instruction
$BFC    $4FA6   SNE      VF, #A6         ; Skip if VF != 166
$BFE    $CC20   RND      VC, #20         ; VC = random & 20
$C00    $AD10   LD       I, $D10         ; Load D10 into I
$C02    $813A   UNKNOWN  813A            ; Unknown 8xxx instruction
$C04    $C51C   RND      V5, #1C         ; V5 = random & 1C
$C06    $E345   UNKNOWN  $E345           ; Unknown Exxx instruction
$C08    $6541   LD       V5, #41         ; Load 65 into V5
$C0A    $4E72   SNE      VE, #72         ; Skip if VE != 114
$C0C    $6884   LD       V8, #84         ; Load 132 into V8
$C0E    $263F   CALL     $63F            ; Call subroutine at 63F
$C10    $9A4F   UNKNOWN  $9A4F           ; Unknown 9xxx instruction
$C12    $179F   JP       $79F            ; Jump to 79F
$C14    $1F3B   JP       $F3B            ; Jump to F3B
$C16    $EBC7   UNKNOWN  $EBC7           ; Unknown Exxx instruction
$C18    $58DA   UNKNOWN  $58DA           ; Unknown 5xxx instruction
$C1A    $1111   JP       $111            ; Jump to 111
$C1C    $3233   SE       V2, #33         ; Skip if V2 == 51
$C1E    $CD93   RND      VD, #93         ; VD = random & 93
$C20    $0D75   SYS      $D75            ; System call to D75
$C22    $80EC   UNKNOWN  80EC            ; Unknown 8xxx instruction
$C24    $82B5   SUB      V2, VB          ; V2 -= VB, VF = !borrow
$C26    $EA33   UNKNOWN  $EA33           ; Unknown Exxx instruction
$C28    $47AA   SNE      V7, #AA         ; Skip if V7 != 170
$C2A    $7DD6   ADD      VD, #D6         ; Add 214 to VD
$C2C    $1A02   JP       $A02            ; Jump to A02
$C2E    $E3A9   UNKNOWN  $E3A9           ; Unknown Exxx instruction
$C30    $FE66   UNKNOWN  FE66            ; Unknown Fxxx instruction
$C32    $4FF8   SNE      VF, #F8         ; Skip if VF != 248
$C34    $8897   SUBN     V8, V9          ; V8 = V9 - V8, VF = !borrow
$C36    $DB55   DRW      VB, V5, #5      ; Draw 5-byte sprite at VB, V5
$C38    $F8F3   UNKNOWN  F8F3            ; Unknown Fxxx instruction
$C3A    $1448   JP       $448            ; Jump to 448
$C3C    $98EE   UNKNOWN  $98EE           ; Unknown 9xxx instruction
$C3E    $9221   UNKNOWN  $9221           ; Unknown 9xxx instruction
$C40    $6ACF   LD       VA, #CF         ; Load 207 into VA
$C42    $56C7   UNKNOWN  $56C7           ; Unknown 5xxx instruction
$C44    $3119   SE       V1, #19         ; Skip if V1 == 25
$C46    $4A7F   SNE      VA, #7F         ; Skip if VA != 127
$C48    $A53A   LD       I, $53A         ; Load 53A into I
$C4A    $54B5   UNKNOWN  $54B5           ; Unknown 5xxx instruction
$C4C    $F853   UNKNOWN  F853            ; Unknown Fxxx instruction
$C4E    $C0B6   RND      V0, #B6         ; V0 = random & B6
$C50    $2DF1   CALL     $DF1            ; Call subroutine at DF1
$C52    $BA67   JP       V0, $A67        ; Jump to V0 + A67
$C54    $1274   JP       $274            ; Jump to 274
$C56    $90C5   UNKNOWN  $90C5           ; Unknown 9xxx instruction
$C58    $4128   SNE      V1, #28         ; Skip if V1 != 40
$C5A    $C786   RND      V7, #86         ; V7 = random & 86
$C5C    $DDAD   DRW      VD, VA, #D      ; Draw 13-byte sprite at VD, VA
$C5E    $43DE   SNE      V3, #DE         ; Skip if V3 != 222
$C60    $FE81   UNKNOWN  FE81            ; Unknown Fxxx instruction
$C62    $6C31   LD       VC, #31         ; Load 49 into VC
$C64    $FDEA   UNKNOWN  FDEA            ; Unknown Fxxx instruction
$C66    $0621   SYS      $621            ; System call to 621
$C68    $6EB4   LD       VE, #B4         ; Load 180 into VE
$C6A    $8D7A   UNKNOWN  8D7A            ; Unknown 8xxx instruction
$C6C    $B852   JP       V0, $852        ; Jump to V0 + 852
$C6E    $DDD6   DRW      VD, VD, #6      ; Draw 6-byte sprite at VD, VD
$C70    $FEBD   UNKNOWN  FEBD            ; Unknown Fxxx instruction
$C72    $22D9   CALL     $2D9            ; Call subroutine at 2D9
$C74    $FF18   LD       ST, VF          ; Sound timer = VF
$C76    $BAEC   JP       V0, $AEC        ; Jump to V0 + AEC
$C78    $F563   UNKNOWN  F563            ; Unknown Fxxx instruction
$C7A    $20CF   CALL     $0CF            ; Call subroutine at 0CF
$C7C    $50CC   UNKNOWN  $50CC           ; Unknown 5xxx instruction
$C7E    $FCF8   UNKNOWN  FCF8            ; Unknown Fxxx instruction
$C80    $DCD5   DRW      VC, VD, #5      ; Draw 5-byte sprite at VC, VD
$C82    $91CD   UNKNOWN  $91CD           ; Unknown 9xxx instruction
$C84    $2E70   CALL     $E70            ; Call subroutine at E70
$C86    $C44B   RND      V4, #4B         ; V4 = random & 4B
$C88    $7C8B   ADD      VC, #8B         ; Add 139 to VC
$C8A    $5CEE   UNKNOWN  $5CEE           ; Unknown 5xxx instruction
$C8C    $3CE6   SE       VC, #E6         ; Skip if VC == 230
$C8E    $7387   ADD      V3, #87         ; Add 135 to V3
$C90    $2DA7   CALL     $DA7            ; Call subroutine at DA7
$C92    $90E9   UNKNOWN  $90E9           ; Unknown 9xxx instruction
$C94    $600A   LD       V0, #0A         ; Load 10 into V0
$C96    $9211   UNKNOWN  $9211           ; Unknown 9xxx instruction
$C98    $36EC   SE       V6, #EC         ; Skip if V6 == 236
$C9A    $7B5C   ADD      VB, #5C         ; Add 92 to VB
$C9C    $6494   LD       V4, #94         ; Load 148 into V4
$C9E    $985F   UNKNOWN  $985F           ; Unknown 9xxx instruction
$CA0    $07F3   SYS      $7F3            ; System call to 7F3
$CA2    $10A3   JP       $0A3            ; Jump to 0A3
$CA4    $8D92   AND      VD, V9          ; VD &= V9
$CA6    $C7C4   RND      V7, #C4         ; V7 = random & C4
$CA8    $95BF   UNKNOWN  $95BF           ; Unknown 9xxx instruction
$CAA    $1597   JP       $597            ; Jump to 597
$CAC    $8DB1   OR       VD, VB          ; VD |= VB
$CAE    $4CD4   SNE      VC, #D4         ; Skip if VC != 212
$CB0    $C2FD   RND      V2, #FD         ; V2 = random & FD
$CB2    $6185   LD       V1, #85         ; Load 133 into V1
$CB4    $9A25   UNKNOWN  $9A25           ; Unknown 9xxx instruction
$CB6    $08D6   SYS      $8D6            ; System call to 8D6
$CB8    $3E5E   SE       VE, #5E         ; Skip if VE == 94
$CBA    $1385   JP       $385            ; Jump to 385
$CBC    $9639   UNKNOWN  $9639           ; Unknown 9xxx instruction
$CBE    $8DC1   OR       VD, VC          ; VD |= VC
$CC0    $CCF0   RND      VC, #F0         ; VC = random & F0
$CC2    $9B4F   UNKNOWN  $9B4F           ; Unknown 9xxx instruction
$CC4    $1B9B   JP       $B9B            ; Jump to B9B
$CC6    $8960   LD       V9, V6          ; V9 = V6
$CC8    $D13C   DRW      V1, V3, #C      ; Draw 12-byte sprite at V1, V3
$CCA    $62FE   LD       V2, #FE         ; Load 254 into V2
$CCC    $3D8F   SE       VD, #8F         ; Skip if VD == 143
$CCE    $62EC   LD       V2, #EC         ; Load 236 into V2
$CD0    $EB11   UNKNOWN  $EB11           ; Unknown Exxx instruction
$CD2    $D72D   DRW      V7, V2, #D      ; Draw 13-byte sprite at V7, V2
$CD4    $B5C4   JP       V0, $5C4        ; Jump to V0 + 5C4
$CD6    $150E   JP       $50E            ; Jump to 50E
$CD8    $0976   SYS      $976            ; System call to 976
$CDA    $BD6C   JP       V0, $D6C        ; Jump to V0 + D6C
$CDC    $8151   OR       V1, V5          ; V1 |= V5
$CDE    $B4EA   JP       V0, $4EA        ; Jump to V0 + 4EA
$CE0    $59A3   UNKNOWN  $59A3           ; Unknown 5xxx instruction
$CE2    $2535   CALL     $535            ; Call subroutine at 535
$CE4    $F7A4   UNKNOWN  F7A4            ; Unknown Fxxx instruction
$CE6    $9C21   UNKNOWN  $9C21           ; Unknown 9xxx instruction
$CE8    $66E8   LD       V6, #E8         ; Load 232 into V6
$CEA    $7748   ADD      V7, #48         ; Add 72 to V7
$CEC    $B097   JP       V0, $097        ; Jump to V0 + 097
$CEE    $5E9D   UNKNOWN  $5E9D           ; Unknown 5xxx instruction
$CF0    $52FC   UNKNOWN  $52FC           ; Unknown 5xxx instruction
$CF2    $4D8B   SNE      VD, #8B         ; Skip if VD != 139
$CF4    $7E87   ADD      VE, #87         ; Add 135 to VE
$CF6    $581D   UNKNOWN  $581D           ; Unknown 5xxx instruction
$CF8    $F5F4   UNKNOWN  F5F4            ; Unknown Fxxx instruction
$CFA    $0BB6   SYS      $BB6            ; System call to BB6
$CFC    $A835   LD       I, $835         ; Load 835 into I
$CFE    $8701   OR       V7, V0          ; V7 |= V0
$D00    $52E2   UNKNOWN  $52E2           ; Unknown 5xxx instruction
$D02    $090E   SYS      $90E            ; System call to 90E
$D04    $D23F   DRW      V2, V3, #F      ; Draw 15-byte sprite at V2, V3
$D06    $A461   LD       I, $461         ; Load 461 into I
$D08    $149D   JP       $49D            ; Jump to 49D
$D0A    $97C2   UNKNOWN  $97C2           ; Unknown 9xxx instruction
$D0C    $0B81   SYS      $B81            ; System call to B81
$D0E    $7C05   ADD      VC, #05         ; Add 5 to VC
$D10    $B2F2   JP       V0, $2F2        ; Jump to V0 + 2F2
$D12    $5FE7   UNKNOWN  $5FE7           ; Unknown 5xxx instruction
$D14    $B6B4   JP       V0, $6B4        ; Jump to V0 + 6B4
$D16    $BECE   JP       V0, $ECE        ; Jump to V0 + ECE
$D18    $0EE3   SYS      $EE3            ; System call to EE3
$D1A    $703E   ADD      V0, #3E         ; Add 62 to V0
$D1C    $F6DA   UNKNOWN  F6DA            ; Unknown Fxxx instruction
$D1E    $9312   UNKNOWN  $9312           ; Unknown 9xxx instruction
$D20    $C5BB   RND      V5, #BB         ; V5 = random & BB
$D22    $4CD9   SNE      VC, #D9         ; Skip if VC != 217
$D24    $EADE   UNKNOWN  $EADE           ; Unknown Exxx instruction
$D26    $86B7   SUBN     V6, VB          ; V6 = VB - V6, VF = !borrow
$D28    $0C8A   SYS      $C8A            ; System call to C8A
$D2A    $2553   CALL     $553            ; Call subroutine at 553
$D2C    $3D9F   SE       VD, #9F         ; Skip if VD == 159
$D2E    $534E   UNKNOWN  $534E           ; Unknown 5xxx instruction
$D30    $9CD3   UNKNOWN  $9CD3           ; Unknown 9xxx instruction
$D32    $160E   JP       $60E            ; Jump to 60E
$D34    $D57D   DRW      V5, V7, #D      ; Draw 13-byte sprite at V5, V7
$D36    $8527   SUBN     V5, V2          ; V5 = V2 - V5, VF = !borrow
$D38    $C3DE   RND      V3, #DE         ; V3 = random & DE
$D3A    $F545   UNKNOWN  F545            ; Unknown Fxxx instruction
$D3C    $033E   SYS      $33E            ; System call to 33E
$D3E    $4561   SNE      V5, #61         ; Skip if V5 != 97
$D40    $E0DD   UNKNOWN  $E0DD           ; Unknown Exxx instruction
$D42    $52D5   UNKNOWN  $52D5           ; Unknown 5xxx instruction
$D44    $DFD1   DRW      VF, VD, #1      ; Draw 1-byte sprite at VF, VD
$D46    $5ED8   UNKNOWN  $5ED8           ; Unknown 5xxx instruction
$D48    $AEB3   LD       I, $EB3         ; Load EB3 into I
$D4A    $37BE   SE       V7, #BE         ; Skip if V7 == 190
$D4C    $29BA   CALL     $9BA            ; Call subroutine at 9BA
$D4E    $2CDD   CALL     $CDD            ; Call subroutine at CDD
$D50    $B212   JP       V0, $212        ; Jump to V0 + 212
$D52    $3BBB   SE       VB, #BB         ; Skip if VB == 187
$D54    $9392   UNKNOWN  $9392           ; Unknown 9xxx instruction
$D56    $F8CE   UNKNOWN  F8CE            ; Unknown Fxxx instruction
$D58    $D391   DRW      V3, V9, #1      ; Draw 1-byte sprite at V3, V9
$D5A    $BEC0   JP       V0, $EC0        ; Jump to V0 + EC0
$D5C    $4918   SNE      V9, #18         ; Skip if V9 != 24
$D5E    $6450   LD       V4, #50         ; Load 80 into V4
$D60    $04DE   SYS      $4DE            ; System call to 4DE
$D62    $C175   RND      V1, #75         ; V1 = random & 75
$D64    $34DE   SE       V4, #DE         ; Skip if V4 == 222
$D66    $FDCF   UNKNOWN  FDCF            ; Unknown Fxxx instruction
$D68    $DF82   DRW      VF, V8, #2      ; Draw 2-byte sprite at VF, V8
$D6A    $2CEB   CALL     $CEB            ; Call subroutine at CEB
$D6C    $4CFB   SNE      VC, #FB         ; Skip if VC != 251
$D6E    $FB3C   UNKNOWN  FB3C            ; Unknown Fxxx instruction
$D70    $422C   SNE      V2, #2C         ; Skip if V2 != 44
$D72    $B629   JP       V0, $629        ; Jump to V0 + 629
$D74    $3583   SE       V5, #83         ; Skip if V5 == 131
$D76    $9D9C   UNKNOWN  $9D9C           ; Unknown 9xxx instruction
$D78    $5C3A   UNKNOWN  $5C3A           ; Unknown 5xxx instruction
$D7A    $770F   ADD      V7, #0F         ; Add 15 to V7
$D7C    $B9ED   JP       V0, $9ED        ; Jump to V0 + 9ED
$D7E    $65BF   LD       V5, #BF         ; Load 191 into V5
$D80    $FA79   UNKNOWN  FA79            ; Unknown Fxxx instruction
$D82    $9687   UNKNOWN  $9687           ; Unknown 9xxx instruction
$D84    $FC9D   UNKNOWN  FC9D            ; Unknown Fxxx instruction
$D86    $4186   SNE      V1, #86         ; Skip if V1 != 134
$D88    $AEDF   LD       I, $EDF         ; Load EDF into I
$D8A    $9555   UNKNOWN  $9555           ; Unknown 9xxx instruction
$D8C    $536E   UNKNOWN  $536E           ; Unknown 5xxx instruction
$D8E    $64C2   LD       V4, #C2         ; Load 194 into V4
$D90    $D20C   DRW      V2, V0, #C      ; Draw 12-byte sprite at V2, V0
$D92    $7EE4   ADD      VE, #E4         ; Add 228 to VE
$D94    $9A11   UNKNOWN  $9A11           ; Unknown 9xxx instruction
$D96    $7281   ADD      V2, #81         ; Add 129 to V2
$D98    $0D63   SYS      $D63            ; System call to D63
$D9A    $84F0   LD       V4, VF          ; V4 = VF
$D9C    $A1E0   LD       I, $1E0         ; Load 1E0 into I
$D9E    $91FC   UNKNOWN  $91FC           ; Unknown 9xxx instruction
$DA0    $7E19   ADD      VE, #19         ; Add 25 to VE
$DA2    $5735   UNKNOWN  $5735           ; Unknown 5xxx instruction
$DA4    $A9E5   LD       I, $9E5         ; Load 9E5 into I
$DA6    $DE23   DRW      VE, V2, #3      ; Draw 3-byte sprite at VE, V2
$DA8    $8FF8   UNKNOWN  8FF8            ; Unknown 8xxx instruction
$DAA    $243E   CALL     $43E            ; Call subroutine at 43E
$DAC    $FFCA   UNKNOWN  FFCA            ; Unknown Fxxx instruction
$DAE    $1E3F   JP       $E3F            ; Jump to E3F
$DB0    $FA19   UNKNOWN  FA19            ; Unknown Fxxx instruction
$DB2    $3C97   SE       VC, #97         ; Skip if VC == 151
$DB4    $53C1   UNKNOWN  $53C1           ; Unknown 5xxx instruction
$DB6    $176D   JP       $76D            ; Jump to 76D
$DB8    $7559   ADD      V5, #59         ; Add 89 to V5
$DBA    $8714   ADD      V7, V1          ; V7 += V1, VF = carry
$DBC    $EE34   UNKNOWN  $EE34           ; Unknown Exxx instruction
$DBE    $F157   UNKNOWN  F157            ; Unknown Fxxx instruction
$DC0    $27B6   CALL     $7B6            ; Call subroutine at 7B6
$DC2    $AE1C   LD       I, $E1C         ; Load E1C into I
$DC4    $CBA5   RND      VB, #A5         ; VB = random & A5
$DC6    $70D8   ADD      V0, #D8         ; Add 216 to V0
$DC8    $3B36   SE       VB, #36         ; Skip if VB == 54
$DCA    $4F09   SNE      VF, #09         ; Skip if VF != 9
$DCC    $CC8B   RND      VC, #8B         ; VC = random & 8B
$DCE    $4014   SNE      V0, #14         ; Skip if V0 != 20
$DD0    $719D   ADD      V1, #9D         ; Add 157 to V1
$DD2    $B10F   JP       V0, $10F        ; Jump to V0 + 10F
$DD4    $9BAE   UNKNOWN  $9BAE           ; Unknown 9xxx instruction
$DD6    $D85A   DRW      V8, V5, #A      ; Draw 10-byte sprite at V8, V5
$DD8    $8FE5   SUB      VF, VE          ; VF -= VE, VF = !borrow
$DDA    $3322   SE       V3, #22         ; Skip if V3 == 34
$DDC    $B48B   JP       V0, $48B        ; Jump to V0 + 48B
$DDE    $2807   CALL     $807            ; Call subroutine at 807
$DE0    $C816   RND      V8, #16         ; V8 = random & 16
$DE2    $2A73   CALL     $A73            ; Call subroutine at A73
$DE4    $896E   SHL      V9              ; V9 <<= 1, VF = MSB
$DE6    $B5BC   JP       V0, $5BC        ; Jump to V0 + 5BC
$DE8    $B619   JP       V0, $619        ; Jump to V0 + 619
$DEA    $515D   UNKNOWN  $515D           ; Unknown 5xxx instruction
$DEC    $921F   UNKNOWN  $921F           ; Unknown 9xxx instruction
$DEE    $92EB   UNKNOWN  $92EB           ; Unknown 9xxx instruction
$DF0    $1AC1   JP       $AC1            ; Jump to AC1
$DF2    $57B7   UNKNOWN  $57B7           ; Unknown 5xxx instruction
$DF4    $277F   CALL     $77F            ; Call subroutine at 77F
$DF6    $BF46   JP       V0, $F46        ; Jump to V0 + F46
$DF8    $1262   JP       $262            ; Jump to 262
$DFA    $87F9   UNKNOWN  87F9            ; Unknown 8xxx instruction
$DFC    $2D14   CALL     $D14            ; Call subroutine at D14
$DFE    $2710   CALL     $710            ; Call subroutine at 710
$E00    $775A   ADD      V7, #5A         ; Add 90 to V7
$E02    $076D   SYS      $76D            ; System call to 76D
$E04    $37AA   SE       V7, #AA         ; Skip if V7 == 170
$E06    $F13C   UNKNOWN  F13C            ; Unknown Fxxx instruction
$E08    $F77A   UNKNOWN  F77A            ; Unknown Fxxx instruction
$E0A    $9B86   UNKNOWN  $9B86           ; Unknown 9xxx instruction
$E0C    $3A7B   SE       VA, #7B         ; Skip if VA == 123
$E0E    $41DA   SNE      V1, #DA         ; Skip if V1 != 218
$E10    $A9F0   LD       I, $9F0         ; Load 9F0 into I
$E12    $EB39   UNKNOWN  $EB39           ; Unknown Exxx instruction
$E14    $CC80   RND      VC, #80         ; VC = random & 80
$E16    $3401   SE       V4, #01         ; Skip if V4 == 1
$E18    $1E2C   JP       $E2C            ; Jump to E2C
$E1A    $DD61   DRW      VD, V6, #1      ; Draw 1-byte sprite at VD, V6
$E1C    $1EF7   JP       $EF7            ; Jump to EF7
$E1E    $32D2   SE       V2, #D2         ; Skip if V2 == 210
$E20    $ACE5   LD       I, $CE5         ; Load CE5 into I
$E22    $455F   SNE      V5, #5F         ; Skip if V5 != 95
$E24    $1C68   JP       $C68            ; Jump to C68
$E26    $86C7   SUBN     V6, VC          ; V6 = VC - V6, VF = !borrow
$E28    $263C   CALL     $63C            ; Call subroutine at 63C
$E2A    $72C5   ADD      V2, #C5         ; Add 197 to V2
$E2C    $525B   UNKNOWN  $525B           ; Unknown 5xxx instruction
$E2E    $5D96   UNKNOWN  $5D96           ; Unknown 5xxx instruction
$E30    $9DE8   UNKNOWN  $9DE8           ; Unknown 9xxx instruction
$E32    $1BE9   JP       $BE9            ; Jump to BE9
$E34    $BB3F   JP       V0, $B3F        ; Jump to V0 + B3F
$E36    $58C8   UNKNOWN  $58C8           ; Unknown 5xxx instruction
$E38    $C7AF   RND      V7, #AF         ; V7 = random & AF
$E3A    $7C6B   ADD      VC, #6B         ; Add 107 to VC
$E3C    $1284   JP       $284            ; Jump to 284
$E3E    $7E97   ADD      VE, #97         ; Add 151 to VE
$E40    $AFA5   LD       I, $FA5         ; Load FA5 into I
$E42    $1D00   JP       $D00            ; Jump to D00
$E44    $809A   UNKNOWN  809A            ; Unknown 8xxx instruction
$E46    $1B14   JP       $B14            ; Jump to B14
$E48    $46E6   SNE      V6, #E6         ; Skip if V6 != 230
$E4A    $A9D7   LD       I, $9D7         ; Load 9D7 into I
$E4C    $DCFB   DRW      VC, VF, #B      ; Draw 11-byte sprite at VC, VF
$E4E    $4F39   SNE      VF, #39         ; Skip if VF != 57
$E50    $EE5E   UNKNOWN  $EE5E           ; Unknown Exxx instruction
$E52    $E65E   UNKNOWN  $E65E           ; Unknown Exxx instruction
$E54    $012B   SYS      $12B            ; System call to 12B
$E56    $3257   SE       V2, #57         ; Skip if V2 == 87
$E58    $CC9C   RND      VC, #9C         ; VC = random & 9C
$E5A    $3E70   SE       VE, #70         ; Skip if VE == 112
$E5C    $6F8D   LD       VF, #8D         ; Load 141 into VF
$E5E    $170B   JP       $70B            ; Jump to 70B
$E60    $8A93   XOR      VA, V9          ; VA ^= V9
$E62    $9478   UNKNOWN  $9478           ; Unknown 9xxx instruction
$E64    $1555   JP       $555            ; Jump to 555
$E66    $EC0E   UNKNOWN  $EC0E           ; Unknown Exxx instruction
$E68    $C6CF   RND      V6, #CF         ; V6 = random & CF
$E6A    $426A   SNE      V2, #6A         ; Skip if V2 != 106
$E6C    $3C80   SE       VC, #80         ; Skip if VC == 128
$E6E    $D493   DRW      V4, V9, #3      ; Draw 3-byte sprite at V4, V9
$E70    $19BF   JP       $9BF            ; Jump to 9BF
$E72    $F222   UNKNOWN  F222            ; Unknown Fxxx instruction
$E74    $29DF   CALL     $9DF            ; Call subroutine at 9DF
$E76    $7760   ADD      V7, #60         ; Add 96 to V7
$E78    $AB75   LD       I, $B75         ; Load B75 into I
$E7A    $D248   DRW      V2, V4, #8      ; Draw 8-byte sprite at V2, V4
$E7C    $3037   SE       V0, #37         ; Skip if V0 == 55
$E7E    $9746   UNKNOWN  $9746           ; Unknown 9xxx instruction
$E80    $52FA   UNKNOWN  $52FA           ; Unknown 5xxx instruction
$E82    $0024   SYS      $024            ; System call to 024
$E84    $7B10   ADD      VB, #10         ; Add 16 to VB
$E86    $51FE   UNKNOWN  $51FE           ; Unknown 5xxx instruction
$E88    $FB46   UNKNOWN  FB46            ; Unknown Fxxx instruction
$E8A    $8FC3   XOR      VF, VC          ; VF ^= VC
$E8C    $569B   UNKNOWN  $569B           ; Unknown 5xxx instruction
$E8E    $1B98   JP       $B98            ; Jump to B98
$E90    $F89C   UNKNOWN  F89C            ; Unknown Fxxx instruction
$E92    $37EC   SE       V7, #EC         ; Skip if V7 == 236
$E94    $F0D8   UNKNOWN  F0D8            ; Unknown Fxxx instruction
$E96    $1483   JP       $483            ; Jump to 483
$E98    $02E7   SYS      $2E7            ; System call to 2E7
$E9A    $FD1D   UNKNOWN  FD1D            ; Unknown Fxxx instruction
$E9C    $BCCE   JP       V0, $CCE        ; Jump to V0 + CCE
$E9E    $48A5   SNE      V8, #A5         ; Skip if V8 != 165
$EA0    $270B   CALL     $70B            ; Call subroutine at 70B
$EA2    $5DB6   UNKNOWN  $5DB6           ; Unknown 5xxx instruction
$EA4    $A81A   LD       I, $81A         ; Load 81A into I
$EA6    $A1D8   LD       I, $1D8         ; Load 1D8 into I
$EA8    $4535   SNE      V5, #35         ; Skip if V5 != 53
$EAA    $735E   ADD      V3, #5E         ; Add 94 to V3
$EAC    $0068   SYS      $068            ; System call to 068
$EAE    $8B87   SUBN     VB, V8          ; VB = V8 - VB, VF = !borrow
$EB0    $577A   UNKNOWN  $577A           ; Unknown 5xxx instruction
$EB2    $F374   UNKNOWN  F374            ; Unknown Fxxx instruction
$EB4    $858A   UNKNOWN  858A            ; Unknown 8xxx instruction
$EB6    $EBF7   UNKNOWN  $EBF7           ; Unknown Exxx instruction
$EB8    $0C1A   SYS      $C1A            ; System call to C1A
$EBA    $AED0   LD       I, $ED0         ; Load ED0 into I
$EBC    $D522   DRW      V5, V2, #2      ; Draw 2-byte sprite at V5, V2
$EBE    $9E40   SNE      VE, V4          ; Skip if VE != V4
$EC0    $8144   ADD      V1, V4          ; V1 += V4, VF = carry
$EC2    $C1B7   RND      V1, #B7         ; V1 = random & B7
$EC4    $D20C   DRW      V2, V0, #C      ; Draw 12-byte sprite at V2, V0
$EC6    $D4BE   DRW      V4, VB, #E      ; Draw 14-byte sprite at V4, VB
$EC8    $78E9   ADD      V8, #E9         ; Add 233 to V8
$ECA    $2B77   CALL     $B77            ; Call subroutine at B77
$ECC    $9049   UNKNOWN  $9049           ; Unknown 9xxx instruction
$ECE    $F233   LD       B, V2           ; Store BCD of V2 at I, I+1, I+2
$ED0    $A104   LD       I, $104         ; Load 104 into I
$ED2    $C27B   RND      V2, #7B         ; V2 = random & 7B
$ED4    $6C6A   LD       VC, #6A         ; Load 106 into VC
$ED6    $89C6   SHR      V9              ; V9 >>= 1, VF = LSB
$ED8    $6190   LD       V1, #90         ; Load 144 into V1
$EDA    $1159   JP       $159            ; Jump to 159
$EDC    $0EDB   SYS      $EDB            ; System call to EDB
$EDE    $757E   ADD      V5, #7E         ; Add 126 to V5
$EE0    $E9C6   UNKNOWN  $E9C6           ; Unknown Exxx instruction
$EE2    $944C   UNKNOWN  $944C           ; Unknown 9xxx instruction
$EE4    $DA61   DRW      VA, V6, #1      ; Draw 1-byte sprite at VA, V6
$EE6    $451D   SNE      V5, #1D         ; Skip if V5 != 29
$EE8    $B1A3   JP       V0, $1A3        ; Jump to V0 + 1A3
$EEA    $9F7D   UNKNOWN  $9F7D           ; Unknown 9xxx instruction
$EEC    $C26B   RND      V2, #6B         ; V2 = random & 6B
$EEE    $C612   RND      V6, #12         ; V6 = random & 12
$EF0    $F254   UNKNOWN  F254            ; Unknown Fxxx instruction
$EF2    $6601   LD       V6, #01         ; Load 1 into V6
$EF4    $F2BB   UNKNOWN  F2BB            ; Unknown Fxxx instruction
$EF6    $F8BD   UNKNOWN  F8BD            ; Unknown Fxxx instruction
$EF8    $909D   UNKNOWN  $909D           ; Unknown 9xxx instruction
$EFA    $29FB   CALL     $9FB            ; Call subroutine at 9FB
$EFC    $CD00   RND      VD, #00         ; VD = random & 00
$EFE    $99BB   UNKNOWN  $99BB           ; Unknown 9xxx instruction
$F00    $877B   UNKNOWN  877B            ; Unknown 8xxx instruction
$F02    $C89A   RND      V8, #9A         ; V8 = random & 9A
$F04    $E7B4   UNKNOWN  $E7B4           ; Unknown Exxx instruction
$F06    $63A0   LD       V3, #A0         ; Load 160 into V3
$F08    $8B5E   SHL      VB              ; VB <<= 1, VF = MSB
$F0A    $CD72   RND      VD, #72         ; VD = random & 72
$F0C    $196F   JP       $96F            ; Jump to 96F
$F0E    $43C6   SNE      V3, #C6         ; Skip if V3 != 198
$F10    $44F9   SNE      V4, #F9         ; Skip if V4 != 249
$F12    $A211   LD       I, $211         ; Load 211 into I
$F14    $19B6   JP       $9B6            ; Jump to 9B6
$F16    $5E10   SE       VE, V1          ; Skip if VE == V1
$F18    $20B3   CALL     $0B3            ; Call subroutine at 0B3
$F1A    $9C0F   UNKNOWN  $9C0F           ; Unknown 9xxx instruction
$F1C    $065F   SYS      $65F            ; System call to 65F
$F1E    $25A4   CALL     $5A4            ; Call subroutine at 5A4
$F20    $1A3F   JP       $A3F            ; Jump to A3F
$F22    $57D0   SE       V7, VD          ; Skip if V7 == VD
$F24    $6964   LD       V9, #64         ; Load 100 into V9
$F26    $EDB0   UNKNOWN  $EDB0           ; Unknown Exxx instruction
$F28    $090B   SYS      $90B            ; System call to 90B
$F2A    $2CE4   CALL     $CE4            ; Call subroutine at CE4
$F2C    $CF0C   RND      VF, #0C         ; VF = random & 0C
$F2E    $2A4E   CALL     $A4E            ; Call subroutine at A4E
$F30    $ADBD   LD       I, $DBD         ; Load DBD into I
$F32    $6B4F   LD       VB, #4F         ; Load 79 into VB
$F34    $FDAF   UNKNOWN  FDAF            ; Unknown Fxxx instruction
$F36    $B32E   JP       V0, $32E        ; Jump to V0 + 32E
$F38    $7194   ADD      V1, #94         ; Add 148 to V1
$F3A    $ABD7   LD       I, $BD7         ; Load BD7 into I
$F3C    $D0F0   DRW      V0, VF, #0      ; Draw 0-byte sprite at V0, VF
$F3E    $0E74   SYS      $E74            ; System call to E74
$F40    $54AB   UNKNOWN  $54AB           ; Unknown 5xxx instruction
$F42    $3BC5   SE       VB, #C5         ; Skip if VB == 197
$F44    $F46D   UNKNOWN  F46D            ; Unknown Fxxx instruction
$F46    $0893   SYS      $893            ; System call to 893
$F48    $261A   CALL     $61A            ; Call subroutine at 61A
$F4A    $078E   SYS      $78E            ; System call to 78E
$F4C    $2140   CALL     $140            ; Call subroutine at 140
$F4E    $25A5   CALL     $5A5            ; Call subroutine at 5A5
$F50    $9685   UNKNOWN  $9685           ; Unknown 9xxx instruction
$F52    $744C   ADD      V4, #4C         ; Add 76 to V4
$F54    $0FB4   SYS      $FB4            ; System call to FB4
$F56    $C036   RND      V0, #36         ; V0 = random & 36
$F58    $2061   CALL     $061            ; Call subroutine at 061
$F5A    $5870   SE       V8, V7          ; Skip if V8 == V7
$F5C    $0B83   SYS      $B83            ; System call to B83
$F5E    $B1CA   JP       V0, $1CA        ; Jump to V0 + 1CA
$F60    $40A6   SNE      V0, #A6         ; Skip if V0 != 166
$F62    $0F15   SYS      $F15            ; System call to F15
$F64    $A9A4   LD       I, $9A4         ; Load 9A4 into I
$F66    $42E1   SNE      V2, #E1         ; Skip if V2 != 225
$F68    $0CA3   SYS      $CA3            ; System call to CA3
$F6A    $0EF3   SYS      $EF3            ; System call to EF3
$F6C    $ACF2   LD       I, $CF2         ; Load CF2 into I
$F6E    $CCCB   RND      VC, #CB         ; VC = random & CB
$F70    $BA24   JP       V0, $A24        ; Jump to V0 + A24
$F72    $01CA   SYS      $1CA            ; System call to 1CA
$F74    $7861   ADD      V8, #61         ; Add 97 to V8
$F76    $40E9   SNE      V0, #E9         ; Skip if V0 != 233
$F78    $09A7   SYS      $9A7            ; System call to 9A7
$F7A    $A0F6   LD       I, $0F6         ; Load 0F6 into I
$F7C    $1491   JP       $491            ; Jump to 491
$F7E    $156D   JP       $56D            ; Jump to 56D
$F80    $0986   SYS      $986            ; System call to 986
$F82    $1996   JP       $996            ; Jump to 996
$F84    $DD6B   DRW      VD, V6, #B      ; Draw 11-byte sprite at VD, V6
$F86    $6D7F   LD       VD, #7F         ; Load 127 into VD
$F88    $C723   RND      V7, #23         ; V7 = random & 23
$F8A    $42F1   SNE      V2, #F1         ; Skip if V2 != 241
$F8C    $298F   CALL     $98F            ; Call subroutine at 98F
$F8E    $AF6E   LD       I, $F6E         ; Load F6E into I
$F90    $80B7   SUBN     V0, VB          ; V0 = VB - V0, VF = !borrow
$F92    $91E4   UNKNOWN  $91E4           ; Unknown 9xxx instruction
$F94    $6EBB   LD       VE, #BB         ; Load 187 into VE
$F96    $E3B5   UNKNOWN  $E3B5           ; Unknown Exxx instruction
$F98    $611C   LD       V1, #1C         ; Load 28 into V1
$F9A    $4794   SNE      V7, #94         ; Skip if V7 != 148
$F9C    $36D6   SE       V6, #D6         ; Skip if V6 == 214
$F9E    $E23F   UNKNOWN  $E23F           ; Unknown Exxx instruction
$FA0    $AAB4   LD       I, $AB4         ; Load AB4 into I
$FA2    $06F1   SYS      $6F1            ; System call to 6F1
$FA4    $64EB   LD       V4, #EB         ; Load 235 into V4
$FA6    $2588   CALL     $588            ; Call subroutine at 588
$FA8    $F454   UNKNOWN  F454            ; Unknown Fxxx instruction
$FAA    $76D3   ADD      V6, #D3         ; Add 211 to V6
$FAC    $D552   DRW      V5, V5, #2      ; Draw 2-byte sprite at V5, V5
$FAE    $E76A   UNKNOWN  $E76A           ; Unknown Exxx instruction
$FB0    $7454   ADD      V4, #54         ; Add 84 to V4
$FB2    $CA0A   RND      VA, #0A         ; VA = random & 0A
$FB4    $DE4E   DRW      VE, V4, #E      ; Draw 14-byte sprite at VE, V4
$FB6    $6C63   LD       VC, #63         ; Load 99 into VC
$FB8    $FAF3   UNKNOWN  FAF3            ; Unknown Fxxx instruction
$FBA    $4C81   SNE      VC, #81         ; Skip if VC != 129
$FBC    $B781   JP       V0, $781        ; Jump to V0 + 781
$FBE    $0C93   SYS      $C93            ; System call to C93
$FC0    $FB39   UNKNOWN  FB39            ; Unknown Fxxx instruction
$FC2    $D1AD   DRW      V1, VA, #D      ; Draw 13-byte sprite at V1, VA
$FC4    $65CC   LD       V5, #CC         ; Load 204 into V5
$FC6    $F9D6   UNKNOWN  F9D6            ; Unknown Fxxx instruction
$FC8    $67B0   LD       V7, #B0         ; Load 176 into V7
$FCA    $3409   SE       V4, #09         ; Skip if V4 == 9
$FCC    $736D   ADD      V3, #6D         ; Add 109 to V3
$FCE    $1309   JP       $309            ; Jump to 309
$FD0    $D785   DRW      V7, V8, #5      ; Draw 5-byte sprite at V7, V8
$FD2    $9304   UNKNOWN  $9304           ; Unknown 9xxx instruction
$FD4    $A7C8   LD       I, $7C8         ; Load 7C8 into I
$FD6    $5DFD   UNKNOWN  $5DFD           ; Unknown 5xxx instruction
$FD8    $727F   ADD      V2, #7F         ; Add 127 to V2
$FDA    $8BDD   UNKNOWN  8BDD            ; Unknown 8xxx instruction
$FDC    $22B4   CALL     $2B4            ; Call subroutine at 2B4
$FDE    $16D9   JP       $6D9            ; Jump to 6D9
$FE0    $781C   ADD      V8, #1C         ; Add 28 to V8
$FE2    $0AE4   SYS      $AE4            ; System call to AE4
$FE4    $31DE   SE       V1, #DE         ; Skip if V1 == 222
$FE6    $D1F2   DRW      V1, VF, #2      ; Draw 2-byte sprite at V1, VF
$FE8    $53B2   UNKNOWN  $53B2           ; Unknown 5xxx instruction
$FEA    $9EDA   UNKNOWN  $9EDA           ; Unknown 9xxx instruction
$FEC    $1D20   JP       $D20            ; Jump to D20
$FEE    $02AD   SYS      $2AD            ; System call to 2AD
$FF0    $C39F   RND      V3, #9F         ; V3 = random & 9F
$FF2    $3247   SE       V2, #47         ; Skip if V2 == 71
$FF4    $F0D6   UNKNOWN  F0D6            ; Unknown Fxxx instruction
$FF6    $4E2B   SNE      VE, #2B         ; Skip if VE != 43
$FF8    $2F82   CALL     $F82            ; Call subroutine at F82
$FFA    $3F4E   SE       VF, #4E         ; Skip if VF == 78
$FFC    $7778   ADD      V7, #78         ; Add 120 to V7
$FFE    $FC7F   UNKNOWN  FC7F            ; Unknown Fxxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 458 (25.6%)
  JP      : 239 (13.3%)
  LD      : 238 (13.3%)
  SE      : 135 ( 7.5%)
  SNE     : 127 ( 7.1%)
  SYS     : 115 ( 6.4%)
  ADD     : 114 ( 6.4%)
  DRW     : 111 ( 6.2%)
  RND     : 102 ( 5.7%)
  CALL    :  93 ( 5.2%)
  SUBN    :  14 ( 0.8%)
  SUB     :   9 ( 0.5%)
  SHR     :   9 ( 0.5%)
  SHL     :   8 ( 0.4%)
  XOR     :   7 ( 0.4%)
  AND     :   6 ( 0.3%)
  OR      :   6 ( 0.3%)
  SKP     :   1 ( 0.1%)

Memory Operations: 352 (19.6%)
Arithmetic Operations: 156 (8.7%)
