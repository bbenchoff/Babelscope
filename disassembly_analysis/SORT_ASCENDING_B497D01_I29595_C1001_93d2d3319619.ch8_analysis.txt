
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B497D01_I29595_C1001_93d2d3319619.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 497
Instance: 29595
Direction: ascending
Final Array: [80, 80, 80, 80, 80, 80, 80, 181]
Operations: R:0 W:7 C:8 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 129
Sort Array References:
  $222: LD I, $5DD ; Load 5DD into I
  $224: LD I, $0E4 ; Load 0E4 into I
  $22E: LD I, $DFD ; Load DFD into I
  $238: LD I, $E7F ; Load E7F into I
  $25A: LD I, $F3C ; Load F3C into I
  $274: LD I, $AB5 ; Load AB5 into I
  $282: LD I, $ABE ; Load ABE into I
  $2AA: LD I, $35E ; Load 35E into I
  $2E6: LD I, $AB5 ; Load AB5 into I
  $318: LD I, $C18 ; Load C18 into I
  $36A: LD I, $920 ; Load 920 into I
  $37C: LD I, $2CD ; Load 2CD into I
  $390: LD I, $080 ; Load 080 into I
  $396: LD I, $2CE ; Load 2CE into I
  $3B2: LD I, $9FB ; Load 9FB into I
  $3F6: LD I, $206 ; Load 206 into I
  $3FC: LD I, $024 ; Load 024 into I
  $40C: LD I, $940 ; Load 940 into I
  $420: LD I, $E55 ; Load E55 into I
  $42A: LD I, $665 ; Load 665 into I
  $42E: LD I, $585 ; Load 585 into I
  $434: LD I, $D7B ; Load D7B into I
  $450: LD I, $24D ; Load 24D into I
  $460: LD I, $203 ; Load 203 into I
  $482: LD I, $EA2 ; Load EA2 into I
  $4B2: LD I, $CC9 ; Load CC9 into I
  $4C4: LD I, $889 ; Load 889 into I
  $4EA: LD I, $50D ; Load 50D into I
  $4FE: LD I, $BB6 ; Load BB6 into I
  $518: LD I, $CC0 ; Load CC0 into I
  $532: LD I, $DC3 ; Load DC3 into I
  $57A: LD I, $9A1 ; Load 9A1 into I
  $59C: LD I, $832 ; Load 832 into I
  $5A8: LD I, $629 ; Load 629 into I
  $604: LD I, $C3E ; Load C3E into I
  $62E: LD I, $AB5 ; Load AB5 into I
  $64E: LD I, $F25 ; Load F25 into I
  $65C: LD I, $CCF ; Load CCF into I
  $6C2: LD I, $E6B ; Load E6B into I
  $6CE: LD I, $545 ; Load 545 into I
  $6D6: LD I, $88F ; Load 88F into I
  $6DE: LD I, $E46 ; Load E46 into I
  $6E0: LD I, $1ED ; Load 1ED into I
  $6FC: LD I, $2C3 ; Load 2C3 into I
  $700: LD I, $CCA ; Load CCA into I
  $77C: LD I, $654 ; Load 654 into I
  $78E: LD I, $274 ; Load 274 into I
  $79A: LD I, $BB0 ; Load BB0 into I
  $7A2: LD I, $6D9 ; Load 6D9 into I
  $7A6: LD I, $168 ; Load 168 into I
  $7B8: LD I, $DA3 ; Load DA3 into I
  $7D6: LD I, $336 ; Load 336 into I
  $7E6: LD I, $779 ; Load 779 into I
  $7FA: LD I, $841 ; Load 841 into I
  $800: LD I, $C8F ; Load C8F into I
  $81C: LD I, $626 ; Load 626 into I
  $836: LD I, $63F ; Load 63F into I
  $83C: LD [I], V0 ; Store V0-V0 at I
  $86C: LD I, $A58 ; Load A58 into I
  $89A: LD I, $D2D ; Load D2D into I
  $89E: LD I, $C36 ; Load C36 into I
  $8EC: LD I, $84F ; Load 84F into I
  $8EE: LD I, $40B ; Load 40B into I
  $96C: LD I, $9FB ; Load 9FB into I
  $98C: LD I, $1F6 ; Load 1F6 into I
  $99C: LD I, $6E9 ; Load 6E9 into I
  $9B6: LD I, $673 ; Load 673 into I
  $9C6: LD I, $D25 ; Load D25 into I
  $9D2: LD I, $F9B ; Load F9B into I
  $9D6: LD I, $1CD ; Load 1CD into I
  $9F8: LD I, $3FE ; Load 3FE into I
  $A02: LD I, $0E0 ; Load 0E0 into I
  $A2E: LD I, $53D ; Load 53D into I
  $A32: LD I, $9A4 ; Load 9A4 into I
  $AA6: LD I, $6D2 ; Load 6D2 into I
  $AC2: LD I, $231 ; Load 231 into I
  $AE0: LD I, $6A7 ; Load 6A7 into I
  $B02: LD I, $BCD ; Load BCD into I
  $B04: LD I, $5C6 ; Load 5C6 into I
  $B1E: LD I, $294 ; Load 294 into I
  $B34: LD I, $8CB ; Load 8CB into I
  $B38: LD I, $821 ; Load 821 into I
  $B46: LD I, $194 ; Load 194 into I
  $B7C: LD I, $9D4 ; Load 9D4 into I
  $BA2: LD I, $1B9 ; Load 1B9 into I
  $BB8: LD I, $19F ; Load 19F into I
  $BC4: LD I, $832 ; Load 832 into I
  $BE0: LD I, $BFD ; Load BFD into I
  $BF8: LD I, $8DC ; Load 8DC into I
  $BFE: LD I, $DB8 ; Load DB8 into I
  $C00: LD I, $7E3 ; Load 7E3 into I
  $C0A: LD I, $C86 ; Load C86 into I
  $C18: LD I, $74D ; Load 74D into I
  $C4A: LD I, $BA5 ; Load BA5 into I
  $C50: LD I, $AB2 ; Load AB2 into I
  $C54: LD I, $EB1 ; Load EB1 into I
  $C5C: LD I, $1D1 ; Load 1D1 into I
  $C80: LD I, $F4C ; Load F4C into I
  $CBE: LD I, $03E ; Load 03E into I
  $CCE: LD I, $C0C ; Load C0C into I
  $CE4: LD I, $DB3 ; Load DB3 into I
  $D0A: LD I, $1E3 ; Load 1E3 into I
  $D26: LD I, $745 ; Load 745 into I
  $D3A: LD I, $69F ; Load 69F into I
  $D6E: LD I, $A33 ; Load A33 into I
  $D7C: LD [I], V7 ; Store V0-V7 at I
  $DA6: LD I, $352 ; Load 352 into I
  $DB4: LD I, $3E9 ; Load 3E9 into I
  $DE4: LD I, $844 ; Load 844 into I
  $DF0: LD I, $6DD ; Load 6DD into I
  $DF2: LD I, $D92 ; Load D92 into I
  $E22: LD I, $23C ; Load 23C into I
  $E2C: LD I, $278 ; Load 278 into I
  $E3A: LD I, $FB8 ; Load FB8 into I
  $E4C: LD I, $8E6 ; Load 8E6 into I
  $E58: LD I, $FBA ; Load FBA into I
  $E74: LD I, $3B8 ; Load 3B8 into I
  $EA6: LD I, $558 ; Load 558 into I
  $EB2: LD I, $DFD ; Load DFD into I
  $F08: LD I, $0BD ; Load 0BD into I
  $F4C: LD I, $7B2 ; Load 7B2 into I
  $F62: LD I, $B61 ; Load B61 into I
  $F82: LD I, $7FC ; Load 7FC into I
  $F84: LD I, $D16 ; Load D16 into I
  $F96: LD I, $59D ; Load 59D into I
  $FD6: LD I, $20A ; Load 20A into I
  $FDC: LD I, $A82 ; Load A82 into I
  $FDE: LD I, $145 ; Load 145 into I
  $FF0: LD I, $037 ; Load 037 into I

CONTROL FLOW ANALYSIS:
Jumps: 207
Calls: 105
Branches: 215
Loops: 120
Loop Structures:
  $290 -> $0AD (backward jump)
  $29C -> $030 (backward jump)
  $3A8 -> $09A (backward jump)
  $3B4 -> $322 (backward jump)
  $3EE -> $0BD (backward jump)
  $42C -> $3B7 (backward jump)
  $436 -> $36F (backward jump)
  $44A -> $134 (backward jump)
  $478 -> $28A (backward jump)
  $48E -> $18C (backward jump)
  $4B8 -> $424 (backward jump)
  $4D2 -> $39B (backward jump)
  $4FA -> $437 (backward jump)
  $542 -> $0D4 (backward jump)
  $560 -> $021 (backward jump)
  $57E -> $514 (backward jump)
  $596 -> $204 (backward jump)
  $5D6 -> $112 (backward jump)
  $5DA -> $21B (backward jump)
  $5DC -> $11E (backward jump)
  $5F2 -> $2FC (backward jump)
  $600 -> $0A5 (backward jump)
  $630 -> $0D4 (backward jump)
  $638 -> $2E7 (backward jump)
  $66A -> $1E2 (backward jump)
  $66E -> $1EA (backward jump)
  $6A0 -> $4DD (backward jump)
  $706 -> $16E (backward jump)
  $710 -> $6B8 (backward jump)
  $728 -> $1F5 (backward jump)
  $72A -> $4CF (backward jump)
  $736 -> $04D (backward jump)
  $73C -> $61C (backward jump)
  $73E -> $58F (backward jump)
  $798 -> $1EB (backward jump)
  $7EC -> $43B (backward jump)
  $816 -> $3F0 (backward jump)
  $822 -> $769 (backward jump)
  $82A -> $5A3 (backward jump)
  $83E -> $0FE (backward jump)
  $87E -> $6AB (backward jump)
  $890 -> $358 (backward jump)
  $8D8 -> $694 (backward jump)
  $8EA -> $0EC (backward jump)
  $8F0 -> $3D3 (backward jump)
  $8F2 -> $75D (backward jump)
  $8FC -> $238 (backward jump)
  $902 -> $15E (backward jump)
  $91A -> $2CB (backward jump)
  $920 -> $578 (backward jump)
  $94C -> $1D8 (backward jump)
  $964 -> $495 (backward jump)
  $982 -> $5F8 (backward jump)
  $99E -> $770 (backward jump)
  $9D4 -> $2CB (backward jump)
  $A44 -> $098 (backward jump)
  $A68 -> $792 (backward jump)
  $A6A -> $53F (backward jump)
  $A7C -> $954 (backward jump)
  $A9C -> $5E8 (backward jump)
  $AB2 -> $864 (backward jump)
  $AC0 -> $749 (backward jump)
  $AD4 -> $693 (backward jump)
  $AE2 -> $5D3 (backward jump)
  $B18 -> $0E6 (backward jump)
  $B2C -> $69A (backward jump)
  $B2E -> $AEB (backward jump)
  $B80 -> $30C (backward jump)
  $B86 -> $3A7 (backward jump)
  $B98 -> $362 (backward jump)
  $BB0 -> $025 (backward jump)
  $BCE -> $44D (backward jump)
  $BD2 -> $602 (backward jump)
  $BDE -> $8B2 (backward jump)
  $BF6 -> $AEE (backward jump)
  $C08 -> $BF2 (backward jump)
  $C14 -> $BFA (backward jump)
  $C38 -> $69F (backward jump)
  $C60 -> $ACF (backward jump)
  $C66 -> $112 (backward jump)
  $C90 -> $80B (backward jump)
  $C94 -> $2AC (backward jump)
  $CB6 -> $660 (backward jump)
  $CDA -> $3F3 (backward jump)
  $CE6 -> $AFF (backward jump)
  $D12 -> $6B1 (backward jump)
  $D14 -> $043 (backward jump)
  $D20 -> $5BD (backward jump)
  $D30 -> $0AB (backward jump)
  $D3C -> $897 (backward jump)
  $D4A -> $C52 (backward jump)
  $D64 -> $9E7 (backward jump)
  $D68 -> $329 (backward jump)
  $D88 -> $7E7 (backward jump)
  $DA4 -> $7BC (backward jump)
  $DAA -> $A25 (backward jump)
  $DCA -> $188 (backward jump)
  $DCC -> $8BE (backward jump)
  $DD6 -> $2A0 (backward jump)
  $DE6 -> $62D (backward jump)
  $DFE -> $CB9 (backward jump)
  $E12 -> $7FA (backward jump)
  $E1C -> $69E (backward jump)
  $E44 -> $817 (backward jump)
  $E50 -> $677 (backward jump)
  $E56 -> $B48 (backward jump)
  $E5C -> $827 (backward jump)
  $E9A -> $C22 (backward jump)
  $EB4 -> $C20 (backward jump)
  $EE4 -> $457 (backward jump)
  $F00 -> $641 (backward jump)
  $F38 -> $D52 (backward jump)
  $F4E -> $ED6 (backward jump)
  $F50 -> $7AC (backward jump)
  $F7E -> $C23 (backward jump)
  $F8A -> $8DE (backward jump)
  $F8C -> $A41 (backward jump)
  $FA4 -> $388 (backward jump)
  $FA8 -> $D1B (backward jump)
  $FCA -> $BA3 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $FD5A   UNKNOWN  FD5A            ; Unknown Fxxx instruction
$202    $DA09   DRW      VA, V0, #9      ; Draw 9-byte sprite at VA, V0
$204    $1838   JP       $838            ; Jump to 838
$206    $1BD0   JP       $BD0            ; Jump to BD0
$208    $5EA0   SE       VE, VA          ; Skip if VE == VA
$20A    $F3C0   UNKNOWN  F3C0            ; Unknown Fxxx instruction
$20C    $5340   SE       V3, V4          ; Skip if V3 == V4
$20E    $1487   JP       $487            ; Jump to 487
$210    $EA6F   UNKNOWN  $EA6F           ; Unknown Exxx instruction
$212    $3BEC   SE       VB, #EC         ; Skip if VB == 236
$214    $8B90   LD       VB, V9          ; VB = V9
$216    $BF3D   JP       V0, $F3D        ; Jump to V0 + F3D
$218    $0670   SYS      $670            ; System call to 670
$21A    $F31A   UNKNOWN  F31A            ; Unknown Fxxx instruction
$21C    $DF56   DRW      VF, V5, #6      ; Draw 6-byte sprite at VF, V5
$21E    $F48E   UNKNOWN  F48E            ; Unknown Fxxx instruction
$220    $9A4A   UNKNOWN  $9A4A           ; Unknown 9xxx instruction
$222    $A5DD   LD       I, $5DD         ; Load 5DD into I
$224    $A0E4   LD       I, $0E4         ; Load 0E4 into I
$226    $2F19   CALL     $F19            ; Call subroutine at F19
$228    $083D   SYS      $83D            ; System call to 83D
$22A    $47C5   SNE      V7, #C5         ; Skip if V7 != 197
$22C    $05AA   SYS      $5AA            ; System call to 5AA
$22E    $ADFD   LD       I, $DFD         ; Load DFD into I
$230    $47AF   SNE      V7, #AF         ; Skip if V7 != 175
$232    $7C65   ADD      VC, #65         ; Add 101 to VC
$234    $D547   DRW      V5, V4, #7      ; Draw 7-byte sprite at V5, V4
$236    $BE06   JP       V0, $E06        ; Jump to V0 + E06
$238    $AE7F   LD       I, $E7F         ; Load E7F into I
$23A    $48EB   SNE      V8, #EB         ; Skip if V8 != 235
$23C    $7000   ADD      V0, #00         ; Add 0 to V0
$23E    $26C6   CALL     $6C6            ; Call subroutine at 6C6
$240    $886A   UNKNOWN  886A            ; Unknown 8xxx instruction
$242    $6636   LD       V6, #36         ; Load 54 into V6
$244    $5514   UNKNOWN  $5514           ; Unknown 5xxx instruction
$246    $652B   LD       V5, #2B         ; Load 43 into V5
$248    $4A29   SNE      VA, #29         ; Skip if VA != 41
$24A    $4FAB   SNE      VF, #AB         ; Skip if VF != 171
$24C    $B774   JP       V0, $774        ; Jump to V0 + 774
$24E    $2AD1   CALL     $AD1            ; Call subroutine at AD1
$250    $6CD9   LD       VC, #D9         ; Load 217 into VC
$252    $BAD4   JP       V0, $AD4        ; Jump to V0 + AD4
$254    $EF0D   UNKNOWN  $EF0D           ; Unknown Exxx instruction
$256    $6DB4   LD       VD, #B4         ; Load 180 into VD
$258    $5F4E   UNKNOWN  $5F4E           ; Unknown 5xxx instruction
$25A    $AF3C   LD       I, $F3C         ; Load F3C into I
$25C    $E587   UNKNOWN  $E587           ; Unknown Exxx instruction
$25E    $3350   SE       V3, #50         ; Skip if V3 == 80
$260    $203F   CALL     $03F            ; Call subroutine at 03F
$262    $B64B   JP       V0, $64B        ; Jump to V0 + 64B
$264    $392D   SE       V9, #2D         ; Skip if V9 == 45
$266    $1C80   JP       $C80            ; Jump to C80
$268    $12AF   JP       $2AF            ; Jump to 2AF
$26A    $3B3C   SE       VB, #3C         ; Skip if VB == 60
$26C    $6F3C   LD       VF, #3C         ; Load 60 into VF
$26E    $5048   UNKNOWN  $5048           ; Unknown 5xxx instruction
$270    $8108   UNKNOWN  8108            ; Unknown 8xxx instruction
$272    $26C3   CALL     $6C3            ; Call subroutine at 6C3
$274    $AAB5   LD       I, $AB5         ; Load AB5 into I
$276    $B79A   JP       V0, $79A        ; Jump to V0 + 79A
$278    $69BD   LD       V9, #BD         ; Load 189 into V9
$27A    $2366   CALL     $366            ; Call subroutine at 366
$27C    $F13E   UNKNOWN  F13E            ; Unknown Fxxx instruction
$27E    $12A7   JP       $2A7            ; Jump to 2A7
$280    $CEF7   RND      VE, #F7         ; VE = random & F7
$282    $AABE   LD       I, $ABE         ; Load ABE into I
$284    $7CF5   ADD      VC, #F5         ; Add 245 to VC
$286    $B7DE   JP       V0, $7DE        ; Jump to V0 + 7DE
$288    $7FCD   ADD      VF, #CD         ; Add 205 to VF
$28A    $92CB   UNKNOWN  $92CB           ; Unknown 9xxx instruction
$28C    $9FF6   UNKNOWN  $9FF6           ; Unknown 9xxx instruction
$28E    $E7E7   UNKNOWN  $E7E7           ; Unknown Exxx instruction
$290    $B0AD   JP       V0, $0AD        ; Jump to V0 + 0AD
$292    $B29B   JP       V0, $29B        ; Jump to V0 + 29B
$294    $29A0   CALL     $9A0            ; Call subroutine at 9A0
$296    $445B   SNE      V4, #5B         ; Skip if V4 != 91
$298    $DE5A   DRW      VE, V5, #A      ; Draw 10-byte sprite at VE, V5
$29A    $FFC3   UNKNOWN  FFC3            ; Unknown Fxxx instruction
$29C    $B030   JP       V0, $030        ; Jump to V0 + 030
$29E    $02A0   SYS      $2A0            ; System call to 2A0
$2A0    $7B90   ADD      VB, #90         ; Add 144 to VB
$2A2    $1852   JP       $852            ; Jump to 852
$2A4    $656A   LD       V5, #6A         ; Load 106 into V5
$2A6    $C41B   RND      V4, #1B         ; V4 = random & 1B
$2A8    $0863   SYS      $863            ; System call to 863
$2AA    $A35E   LD       I, $35E         ; Load 35E into I
$2AC    $6CEB   LD       VC, #EB         ; Load 235 into VC
$2AE    $2657   CALL     $657            ; Call subroutine at 657
$2B0    $C8FA   RND      V8, #FA         ; V8 = random & FA
$2B2    $D2E4   DRW      V2, VE, #4      ; Draw 4-byte sprite at V2, VE
$2B4    $CCAC   RND      VC, #AC         ; VC = random & AC
$2B6    $F2DC   UNKNOWN  F2DC            ; Unknown Fxxx instruction
$2B8    $8423   XOR      V4, V2          ; V4 ^= V2
$2BA    $6DDB   LD       VD, #DB         ; Load 219 into VD
$2BC    $5AEA   UNKNOWN  $5AEA           ; Unknown 5xxx instruction
$2BE    $5F36   UNKNOWN  $5F36           ; Unknown 5xxx instruction
$2C0    $3F7B   SE       VF, #7B         ; Skip if VF == 123
$2C2    $782E   ADD      V8, #2E         ; Add 46 to V8
$2C4    $4F9A   SNE      VF, #9A         ; Skip if VF != 154
$2C6    $3C3F   SE       VC, #3F         ; Skip if VC == 63
$2C8    $ECFA   UNKNOWN  $ECFA           ; Unknown Exxx instruction
$2CA    $FBDD   UNKNOWN  FBDD            ; Unknown Fxxx instruction
$2CC    $B9B8   JP       V0, $9B8        ; Jump to V0 + 9B8
$2CE    $FC2A   UNKNOWN  FC2A            ; Unknown Fxxx instruction
$2D0    $FCA0   UNKNOWN  FCA0            ; Unknown Fxxx instruction
$2D2    $874B   UNKNOWN  874B            ; Unknown 8xxx instruction
$2D4    $CC32   RND      VC, #32         ; VC = random & 32
$2D6    $5D2B   UNKNOWN  $5D2B           ; Unknown 5xxx instruction
$2D8    $2F29   CALL     $F29            ; Call subroutine at F29
$2DA    $CA0D   RND      VA, #0D         ; VA = random & 0D
$2DC    $26AC   CALL     $6AC            ; Call subroutine at 6AC
$2DE    $EFC6   UNKNOWN  $EFC6           ; Unknown Exxx instruction
$2E0    $8AE8   UNKNOWN  8AE8            ; Unknown 8xxx instruction
$2E2    $0CEB   SYS      $CEB            ; System call to CEB
$2E4    $EB26   UNKNOWN  $EB26           ; Unknown Exxx instruction
$2E6    $AAB5   LD       I, $AB5         ; Load AB5 into I
$2E8    $B4AF   JP       V0, $4AF        ; Jump to V0 + 4AF
$2EA    $7FD5   ADD      VF, #D5         ; Add 213 to VF
$2EC    $85C0   LD       V5, VC          ; V5 = VC
$2EE    $440F   SNE      V4, #0F         ; Skip if V4 != 15
$2F0    $383D   SE       V8, #3D         ; Skip if V8 == 61
$2F2    $3F0B   SE       VF, #0B         ; Skip if VF == 11
$2F4    $F07C   UNKNOWN  F07C            ; Unknown Fxxx instruction
$2F6    $D347   DRW      V3, V4, #7      ; Draw 7-byte sprite at V3, V4
$2F8    $482F   SNE      V8, #2F         ; Skip if V8 != 47
$2FA    $03D5   SYS      $3D5            ; System call to 3D5
$2FC    $6313   LD       V3, #13         ; Load 19 into V3
$2FE    $2150   CALL     $150            ; Call subroutine at 150
$300    $5050   SE       V0, V5          ; Skip if V0 == V5
$302    $5050   SE       V0, V5          ; Skip if V0 == V5
$304    $5050   SE       V0, V5          ; Skip if V0 == V5
$306    $50B5   UNKNOWN  $50B5           ; Unknown 5xxx instruction
$308    $03B3   SYS      $3B3            ; System call to 3B3
$30A    $4F84   SNE      VF, #84         ; Skip if VF != 132
$30C    $3185   SE       V1, #85         ; Skip if V1 == 133
$30E    $FFCC   UNKNOWN  FFCC            ; Unknown Fxxx instruction
$310    $3EDC   SE       VE, #DC         ; Skip if VE == 220
$312    $8939   UNKNOWN  8939            ; Unknown 8xxx instruction
$314    $3410   SE       V4, #10         ; Skip if V4 == 16
$316    $CB68   RND      VB, #68         ; VB = random & 68
$318    $AC18   LD       I, $C18         ; Load C18 into I
$31A    $8D07   SUBN     VD, V0          ; VD = V0 - VD, VF = !borrow
$31C    $F75F   UNKNOWN  F75F            ; Unknown Fxxx instruction
$31E    $5CDD   UNKNOWN  $5CDD           ; Unknown 5xxx instruction
$320    $F7E4   UNKNOWN  F7E4            ; Unknown Fxxx instruction
$322    $C0EF   RND      V0, #EF         ; V0 = random & EF
$324    $45A3   SNE      V5, #A3         ; Skip if V5 != 163
$326    $C6DA   RND      V6, #DA         ; V6 = random & DA
$328    $8413   XOR      V4, V1          ; V4 ^= V1
$32A    $FBB7   UNKNOWN  FBB7            ; Unknown Fxxx instruction
$32C    $EEF6   UNKNOWN  $EEF6           ; Unknown Exxx instruction
$32E    $CC90   RND      VC, #90         ; VC = random & 90
$330    $DD9C   DRW      VD, V9, #C      ; Draw 12-byte sprite at VD, V9
$332    $B561   JP       V0, $561        ; Jump to V0 + 561
$334    $B4C0   JP       V0, $4C0        ; Jump to V0 + 4C0
$336    $2E2F   CALL     $E2F            ; Call subroutine at E2F
$338    $799B   ADD      V9, #9B         ; Add 155 to V9
$33A    $D4AB   DRW      V4, VA, #B      ; Draw 11-byte sprite at V4, VA
$33C    $C2DF   RND      V2, #DF         ; V2 = random & DF
$33E    $58BF   UNKNOWN  $58BF           ; Unknown 5xxx instruction
$340    $94F0   SNE      V4, VF          ; Skip if V4 != VF
$342    $58FC   UNKNOWN  $58FC           ; Unknown 5xxx instruction
$344    $7E3E   ADD      VE, #3E         ; Add 62 to VE
$346    $8680   LD       V6, V8          ; V6 = V8
$348    $CB3C   RND      VB, #3C         ; VB = random & 3C
$34A    $D34A   DRW      V3, V4, #A      ; Draw 10-byte sprite at V3, V4
$34C    $2BE5   CALL     $BE5            ; Call subroutine at BE5
$34E    $C60F   RND      V6, #0F         ; V6 = random & 0F
$350    $4E3D   SNE      VE, #3D         ; Skip if VE != 61
$352    $2B97   CALL     $B97            ; Call subroutine at B97
$354    $86EF   UNKNOWN  86EF            ; Unknown 8xxx instruction
$356    $0491   SYS      $491            ; System call to 491
$358    $13F3   JP       $3F3            ; Jump to 3F3
$35A    $672B   LD       V7, #2B         ; Load 43 into V7
$35C    $0386   SYS      $386            ; System call to 386
$35E    $8407   SUBN     V4, V0          ; V4 = V0 - V4, VF = !borrow
$360    $829A   UNKNOWN  829A            ; Unknown 8xxx instruction
$362    $7526   ADD      V5, #26         ; Add 38 to V5
$364    $733D   ADD      V3, #3D         ; Add 61 to V3
$366    $E820   UNKNOWN  $E820           ; Unknown Exxx instruction
$368    $D126   DRW      V1, V2, #6      ; Draw 6-byte sprite at V1, V2
$36A    $A920   LD       I, $920         ; Load 920 into I
$36C    $FCCC   UNKNOWN  FCCC            ; Unknown Fxxx instruction
$36E    $CD03   RND      VD, #03         ; VD = random & 03
$370    $2423   CALL     $423            ; Call subroutine at 423
$372    $61EF   LD       V1, #EF         ; Load 239 into V1
$374    $4917   SNE      V9, #17         ; Skip if V9 != 23
$376    $9936   UNKNOWN  $9936           ; Unknown 9xxx instruction
$378    $C783   RND      V7, #83         ; V7 = random & 83
$37A    $3F4C   SE       VF, #4C         ; Skip if VF == 76
$37C    $A2CD   LD       I, $2CD         ; Load 2CD into I
$37E    $8556   SHR      V5              ; V5 >>= 1, VF = LSB
$380    $BC30   JP       V0, $C30        ; Jump to V0 + C30
$382    $9B6D   UNKNOWN  $9B6D           ; Unknown 9xxx instruction
$384    $D635   DRW      V6, V3, #5      ; Draw 5-byte sprite at V6, V3
$386    $D9D2   DRW      V9, VD, #2      ; Draw 2-byte sprite at V9, VD
$388    $1DCE   JP       $DCE            ; Jump to DCE
$38A    $BF1D   JP       V0, $F1D        ; Jump to V0 + F1D
$38C    $8D29   UNKNOWN  8D29            ; Unknown 8xxx instruction
$38E    $F1FB   UNKNOWN  F1FB            ; Unknown Fxxx instruction
$390    $A080   LD       I, $080         ; Load 080 into I
$392    $4F55   SNE      VF, #55         ; Skip if VF != 85
$394    $CFC8   RND      VF, #C8         ; VF = random & C8
$396    $A2CE   LD       I, $2CE         ; Load 2CE into I
$398    $9C85   UNKNOWN  $9C85           ; Unknown 9xxx instruction
$39A    $FB09   UNKNOWN  FB09            ; Unknown Fxxx instruction
$39C    $9B37   UNKNOWN  $9B37           ; Unknown 9xxx instruction
$39E    $89EF   UNKNOWN  89EF            ; Unknown 8xxx instruction
$3A0    $999E   UNKNOWN  $999E           ; Unknown 9xxx instruction
$3A2    $0105   SYS      $105            ; System call to 105
$3A4    $E27C   UNKNOWN  $E27C           ; Unknown Exxx instruction
$3A6    $8EBC   UNKNOWN  8EBC            ; Unknown 8xxx instruction
$3A8    $B09A   JP       V0, $09A        ; Jump to V0 + 09A
$3AA    $19D9   JP       $9D9            ; Jump to 9D9
$3AC    $2E7A   CALL     $E7A            ; Call subroutine at E7A
$3AE    $7011   ADD      V0, #11         ; Add 17 to V0
$3B0    $46C7   SNE      V6, #C7         ; Skip if V6 != 199
$3B2    $A9FB   LD       I, $9FB         ; Load 9FB into I
$3B4    $B322   JP       V0, $322        ; Jump to V0 + 322
$3B6    $037C   SYS      $37C            ; System call to 37C
$3B8    $03D0   SYS      $3D0            ; System call to 3D0
$3BA    $9EF4   UNKNOWN  $9EF4           ; Unknown 9xxx instruction
$3BC    $B4DE   JP       V0, $4DE        ; Jump to V0 + 4DE
$3BE    $77D6   ADD      V7, #D6         ; Add 214 to V7
$3C0    $BDD0   JP       V0, $DD0        ; Jump to V0 + DD0
$3C2    $0A1B   SYS      $A1B            ; System call to A1B
$3C4    $7288   ADD      V2, #88         ; Add 136 to V2
$3C6    $D15E   DRW      V1, V5, #E      ; Draw 14-byte sprite at V1, V5
$3C8    $6556   LD       V5, #56         ; Load 86 into V5
$3CA    $8A77   SUBN     VA, V7          ; VA = V7 - VA, VF = !borrow
$3CC    $14F5   JP       $4F5            ; Jump to 4F5
$3CE    $6E33   LD       VE, #33         ; Load 51 into VE
$3D0    $0631   SYS      $631            ; System call to 631
$3D2    $C244   RND      V2, #44         ; V2 = random & 44
$3D4    $83A8   UNKNOWN  83A8            ; Unknown 8xxx instruction
$3D6    $EEF5   UNKNOWN  $EEF5           ; Unknown Exxx instruction
$3D8    $93DB   UNKNOWN  $93DB           ; Unknown 9xxx instruction
$3DA    $D590   DRW      V5, V9, #0      ; Draw 0-byte sprite at V5, V9
$3DC    $1DE3   JP       $DE3            ; Jump to DE3
$3DE    $1E22   JP       $E22            ; Jump to E22
$3E0    $78EA   ADD      V8, #EA         ; Add 234 to V8
$3E2    $8E3A   UNKNOWN  8E3A            ; Unknown 8xxx instruction
$3E4    $43B7   SNE      V3, #B7         ; Skip if V3 != 183
$3E6    $FF2A   UNKNOWN  FF2A            ; Unknown Fxxx instruction
$3E8    $5351   UNKNOWN  $5351           ; Unknown 5xxx instruction
$3EA    $5C0A   UNKNOWN  $5C0A           ; Unknown 5xxx instruction
$3EC    $8923   XOR      V9, V2          ; V9 ^= V2
$3EE    $10BD   JP       $0BD            ; Jump to 0BD
$3F0    $4CBB   SNE      VC, #BB         ; Skip if VC != 187
$3F2    $058E   SYS      $58E            ; System call to 58E
$3F4    $C396   RND      V3, #96         ; V3 = random & 96
$3F6    $A206   LD       I, $206         ; Load 206 into I
$3F8    $8322   AND      V3, V2          ; V3 &= V2
$3FA    $4DB7   SNE      VD, #B7         ; Skip if VD != 183
$3FC    $A024   LD       I, $024         ; Load 024 into I
$3FE    $DAA6   DRW      VA, VA, #6      ; Draw 6-byte sprite at VA, VA
$400    $D11D   DRW      V1, V1, #D      ; Draw 13-byte sprite at V1, V1
$402    $BE69   JP       V0, $E69        ; Jump to V0 + E69
$404    $BB3F   JP       V0, $B3F        ; Jump to V0 + B3F
$406    $69D4   LD       V9, #D4         ; Load 212 into V9
$408    $DD28   DRW      VD, V2, #8      ; Draw 8-byte sprite at VD, V2
$40A    $05A8   SYS      $5A8            ; System call to 5A8
$40C    $A940   LD       I, $940         ; Load 940 into I
$40E    $9591   UNKNOWN  $9591           ; Unknown 9xxx instruction
$410    $5E70   SE       VE, V7          ; Skip if VE == V7
$412    $4010   SNE      V0, #10         ; Skip if V0 != 16
$414    $2E5F   CALL     $E5F            ; Call subroutine at E5F
$416    $50BC   UNKNOWN  $50BC           ; Unknown 5xxx instruction
$418    $4B51   SNE      VB, #51         ; Skip if VB != 81
$41A    $C078   RND      V0, #78         ; V0 = random & 78
$41C    $1A16   JP       $A16            ; Jump to A16
$41E    $1B9F   JP       $B9F            ; Jump to B9F
$420    $AE55   LD       I, $E55         ; Load E55 into I
$422    $642F   LD       V4, #2F         ; Load 47 into V4
$424    $79DB   ADD      V9, #DB         ; Add 219 to V9
$426    $F77A   UNKNOWN  F77A            ; Unknown Fxxx instruction
$428    $32A6   SE       V2, #A6         ; Skip if V2 == 166
$42A    $A665   LD       I, $665         ; Load 665 into I
$42C    $13B7   JP       $3B7            ; Jump to 3B7
$42E    $A585   LD       I, $585         ; Load 585 into I
$430    $FD23   UNKNOWN  FD23            ; Unknown Fxxx instruction
$432    $8F02   AND      VF, V0          ; VF &= V0
$434    $AD7B   LD       I, $D7B         ; Load D7B into I
$436    $136F   JP       $36F            ; Jump to 36F
$438    $4B6D   SNE      VB, #6D         ; Skip if VB != 109
$43A    $3D62   SE       VD, #62         ; Skip if VD == 98
$43C    $8F78   UNKNOWN  8F78            ; Unknown 8xxx instruction
$43E    $0342   SYS      $342            ; System call to 342
$440    $CAA6   RND      VA, #A6         ; VA = random & A6
$442    $0105   SYS      $105            ; System call to 105
$444    $8FA9   UNKNOWN  8FA9            ; Unknown 8xxx instruction
$446    $58FA   UNKNOWN  $58FA           ; Unknown 5xxx instruction
$448    $5680   SE       V6, V8          ; Skip if V6 == V8
$44A    $1134   JP       $134            ; Jump to 134
$44C    $22A2   CALL     $2A2            ; Call subroutine at 2A2
$44E    $E777   UNKNOWN  $E777           ; Unknown Exxx instruction
$450    $A24D   LD       I, $24D         ; Load 24D into I
$452    $0430   SYS      $430            ; System call to 430
$454    $D099   DRW      V0, V9, #9      ; Draw 9-byte sprite at V0, V9
$456    $0873   SYS      $873            ; System call to 873
$458    $8143   XOR      V1, V4          ; V1 ^= V4
$45A    $8335   SUB      V3, V3          ; V3 -= V3, VF = !borrow
$45C    $6B91   LD       VB, #91         ; Load 145 into VB
$45E    $669F   LD       V6, #9F         ; Load 159 into V6
$460    $A203   LD       I, $203         ; Load 203 into I
$462    $770B   ADD      V7, #0B         ; Add 11 to V7
$464    $D7D0   DRW      V7, VD, #0      ; Draw 0-byte sprite at V7, VD
$466    $F4FD   UNKNOWN  F4FD            ; Unknown Fxxx instruction
$468    $253F   CALL     $53F            ; Call subroutine at 53F
$46A    $2E58   CALL     $E58            ; Call subroutine at E58
$46C    $74D0   ADD      V4, #D0         ; Add 208 to V4
$46E    $3C92   SE       VC, #92         ; Skip if VC == 146
$470    $769D   ADD      V6, #9D         ; Add 157 to V6
$472    $543B   UNKNOWN  $543B           ; Unknown 5xxx instruction
$474    $EF48   UNKNOWN  $EF48           ; Unknown Exxx instruction
$476    $24C6   CALL     $4C6            ; Call subroutine at 4C6
$478    $B28A   JP       V0, $28A        ; Jump to V0 + 28A
$47A    $F1D0   UNKNOWN  F1D0            ; Unknown Fxxx instruction
$47C    $358F   SE       V5, #8F         ; Skip if V5 == 143
$47E    $D5EB   DRW      V5, VE, #B      ; Draw 11-byte sprite at V5, VE
$480    $DFD9   DRW      VF, VD, #9      ; Draw 9-byte sprite at VF, VD
$482    $AEA2   LD       I, $EA2         ; Load EA2 into I
$484    $0EF7   SYS      $EF7            ; System call to EF7
$486    $FF7C   UNKNOWN  FF7C            ; Unknown Fxxx instruction
$488    $0B7A   SYS      $B7A            ; System call to B7A
$48A    $C3A9   RND      V3, #A9         ; V3 = random & A9
$48C    $47F9   SNE      V7, #F9         ; Skip if V7 != 249
$48E    $118C   JP       $18C            ; Jump to 18C
$490    $FBE2   UNKNOWN  FBE2            ; Unknown Fxxx instruction
$492    $368C   SE       V6, #8C         ; Skip if V6 == 140
$494    $C984   RND      V9, #84         ; V9 = random & 84
$496    $8988   UNKNOWN  8988            ; Unknown 8xxx instruction
$498    $358C   SE       V5, #8C         ; Skip if V5 == 140
$49A    $F459   UNKNOWN  F459            ; Unknown Fxxx instruction
$49C    $0DCF   SYS      $DCF            ; System call to DCF
$49E    $3871   SE       V8, #71         ; Skip if V8 == 113
$4A0    $E438   UNKNOWN  $E438           ; Unknown Exxx instruction
$4A2    $C468   RND      V4, #68         ; V4 = random & 68
$4A4    $01C5   SYS      $1C5            ; System call to 1C5
$4A6    $00E9   SYS      $0E9            ; System call to 0E9
$4A8    $B8ED   JP       V0, $8ED        ; Jump to V0 + 8ED
$4AA    $6A35   LD       VA, #35         ; Load 53 into VA
$4AC    $C5B9   RND      V5, #B9         ; V5 = random & B9
$4AE    $D4CD   DRW      V4, VC, #D      ; Draw 13-byte sprite at V4, VC
$4B0    $0D4C   SYS      $D4C            ; System call to D4C
$4B2    $ACC9   LD       I, $CC9         ; Load CC9 into I
$4B4    $7D14   ADD      VD, #14         ; Add 20 to VD
$4B6    $1B47   JP       $B47            ; Jump to B47
$4B8    $B424   JP       V0, $424        ; Jump to V0 + 424
$4BA    $0EAB   SYS      $EAB            ; System call to EAB
$4BC    $5696   UNKNOWN  $5696           ; Unknown 5xxx instruction
$4BE    $155B   JP       $55B            ; Jump to 55B
$4C0    $92AD   UNKNOWN  $92AD           ; Unknown 9xxx instruction
$4C2    $EC11   UNKNOWN  $EC11           ; Unknown Exxx instruction
$4C4    $A889   LD       I, $889         ; Load 889 into I
$4C6    $64CD   LD       V4, #CD         ; Load 205 into V4
$4C8    $B7FE   JP       V0, $7FE        ; Jump to V0 + 7FE
$4CA    $FE7B   UNKNOWN  FE7B            ; Unknown Fxxx instruction
$4CC    $32EF   SE       V2, #EF         ; Skip if V2 == 239
$4CE    $0C78   SYS      $C78            ; System call to C78
$4D0    $545E   UNKNOWN  $545E           ; Unknown 5xxx instruction
$4D2    $139B   JP       $39B            ; Jump to 39B
$4D4    $2698   CALL     $698            ; Call subroutine at 698
$4D6    $9E3B   UNKNOWN  $9E3B           ; Unknown 9xxx instruction
$4D8    $022D   SYS      $22D            ; System call to 22D
$4DA    $5337   UNKNOWN  $5337           ; Unknown 5xxx instruction
$4DC    $5FA3   UNKNOWN  $5FA3           ; Unknown 5xxx instruction
$4DE    $6D91   LD       VD, #91         ; Load 145 into VD
$4E0    $2A19   CALL     $A19            ; Call subroutine at A19
$4E2    $58DA   UNKNOWN  $58DA           ; Unknown 5xxx instruction
$4E4    $3F0D   SE       VF, #0D         ; Skip if VF == 13
$4E6    $F08B   UNKNOWN  F08B            ; Unknown Fxxx instruction
$4E8    $5EC6   UNKNOWN  $5EC6           ; Unknown 5xxx instruction
$4EA    $A50D   LD       I, $50D         ; Load 50D into I
$4EC    $8DFB   UNKNOWN  8DFB            ; Unknown 8xxx instruction
$4EE    $C7ED   RND      V7, #ED         ; V7 = random & ED
$4F0    $FCBB   UNKNOWN  FCBB            ; Unknown Fxxx instruction
$4F2    $8B1B   UNKNOWN  8B1B            ; Unknown 8xxx instruction
$4F4    $7F42   ADD      VF, #42         ; Add 66 to VF
$4F6    $1F9B   JP       $F9B            ; Jump to F9B
$4F8    $26F8   CALL     $6F8            ; Call subroutine at 6F8
$4FA    $B437   JP       V0, $437        ; Jump to V0 + 437
$4FC    $62AC   LD       V2, #AC         ; Load 172 into V2
$4FE    $ABB6   LD       I, $BB6         ; Load BB6 into I
$500    $B78B   JP       V0, $78B        ; Jump to V0 + 78B
$502    $75B9   ADD      V5, #B9         ; Add 185 to V5
$504    $0AA5   SYS      $AA5            ; System call to AA5
$506    $CFAC   RND      VF, #AC         ; VF = random & AC
$508    $0343   SYS      $343            ; System call to 343
$50A    $069F   SYS      $69F            ; System call to 69F
$50C    $E555   UNKNOWN  $E555           ; Unknown Exxx instruction
$50E    $BFFF   JP       V0, $FFF        ; Jump to V0 + FFF
$510    $323E   SE       V2, #3E         ; Skip if V2 == 62
$512    $810A   UNKNOWN  810A            ; Unknown 8xxx instruction
$514    $8440   LD       V4, V4          ; V4 = V4
$516    $3247   SE       V2, #47         ; Skip if V2 == 71
$518    $ACC0   LD       I, $CC0         ; Load CC0 into I
$51A    $7D8E   ADD      VD, #8E         ; Add 142 to VD
$51C    $224D   CALL     $24D            ; Call subroutine at 24D
$51E    $D7AB   DRW      V7, VA, #B      ; Draw 11-byte sprite at V7, VA
$520    $F58F   UNKNOWN  F58F            ; Unknown Fxxx instruction
$522    $5D1A   UNKNOWN  $5D1A           ; Unknown 5xxx instruction
$524    $6922   LD       V9, #22         ; Load 34 into V9
$526    $9AB0   SNE      VA, VB          ; Skip if VA != VB
$528    $39E0   SE       V9, #E0         ; Skip if V9 == 224
$52A    $6B49   LD       VB, #49         ; Load 73 into VB
$52C    $E9A3   UNKNOWN  $E9A3           ; Unknown Exxx instruction
$52E    $0770   SYS      $770            ; System call to 770
$530    $BFEF   JP       V0, $FEF        ; Jump to V0 + FEF
$532    $ADC3   LD       I, $DC3         ; Load DC3 into I
$534    $BC9E   JP       V0, $C9E        ; Jump to V0 + C9E
$536    $E4C4   UNKNOWN  $E4C4           ; Unknown Exxx instruction
$538    $07EB   SYS      $7EB            ; System call to 7EB
$53A    $7345   ADD      V3, #45         ; Add 69 to V3
$53C    $BB93   JP       V0, $B93        ; Jump to V0 + B93
$53E    $1978   JP       $978            ; Jump to 978
$540    $2B67   CALL     $B67            ; Call subroutine at B67
$542    $10D4   JP       $0D4            ; Jump to 0D4
$544    $51F6   UNKNOWN  $51F6           ; Unknown 5xxx instruction
$546    $2019   CALL     $019            ; Call subroutine at 019
$548    $6D0B   LD       VD, #0B         ; Load 11 into VD
$54A    $2F1C   CALL     $F1C            ; Call subroutine at F1C
$54C    $3FB0   SE       VF, #B0         ; Skip if VF == 176
$54E    $4117   SNE      V1, #17         ; Skip if V1 != 23
$550    $E272   UNKNOWN  $E272           ; Unknown Exxx instruction
$552    $6633   LD       V6, #33         ; Load 51 into V6
$554    $C68C   RND      V6, #8C         ; V6 = random & 8C
$556    $FC40   UNKNOWN  FC40            ; Unknown Fxxx instruction
$558    $0E2B   SYS      $E2B            ; System call to E2B
$55A    $3F6C   SE       VF, #6C         ; Skip if VF == 108
$55C    $2B03   CALL     $B03            ; Call subroutine at B03
$55E    $CC7F   RND      VC, #7F         ; VC = random & 7F
$560    $B021   JP       V0, $021        ; Jump to V0 + 021
$562    $64CD   LD       V4, #CD         ; Load 205 into V4
$564    $75AF   ADD      V5, #AF         ; Add 175 to V5
$566    $E2B9   UNKNOWN  $E2B9           ; Unknown Exxx instruction
$568    $7EEB   ADD      VE, #EB         ; Add 235 to VE
$56A    $5F35   UNKNOWN  $5F35           ; Unknown 5xxx instruction
$56C    $EC27   UNKNOWN  $EC27           ; Unknown Exxx instruction
$56E    $DF95   DRW      VF, V9, #5      ; Draw 5-byte sprite at VF, V9
$570    $E341   UNKNOWN  $E341           ; Unknown Exxx instruction
$572    $548B   UNKNOWN  $548B           ; Unknown 5xxx instruction
$574    $8649   UNKNOWN  8649            ; Unknown 8xxx instruction
$576    $2551   CALL     $551            ; Call subroutine at 551
$578    $9FFC   UNKNOWN  $9FFC           ; Unknown 9xxx instruction
$57A    $A9A1   LD       I, $9A1         ; Load 9A1 into I
$57C    $E22E   UNKNOWN  $E22E           ; Unknown Exxx instruction
$57E    $1514   JP       $514            ; Jump to 514
$580    $21EF   CALL     $1EF            ; Call subroutine at 1EF
$582    $95EC   UNKNOWN  $95EC           ; Unknown 9xxx instruction
$584    $9278   UNKNOWN  $9278           ; Unknown 9xxx instruction
$586    $9415   UNKNOWN  $9415           ; Unknown 9xxx instruction
$588    $90C2   UNKNOWN  $90C2           ; Unknown 9xxx instruction
$58A    $EEB4   UNKNOWN  $EEB4           ; Unknown Exxx instruction
$58C    $01D3   SYS      $1D3            ; System call to 1D3
$58E    $3847   SE       V8, #47         ; Skip if V8 == 71
$590    $08C9   SYS      $8C9            ; System call to 8C9
$592    $8EB1   OR       VE, VB          ; VE |= VB
$594    $C1A3   RND      V1, #A3         ; V1 = random & A3
$596    $B204   JP       V0, $204        ; Jump to V0 + 204
$598    $0A46   SYS      $A46            ; System call to A46
$59A    $EAAB   UNKNOWN  $EAAB           ; Unknown Exxx instruction
$59C    $A832   LD       I, $832         ; Load 832 into I
$59E    $438B   SNE      V3, #8B         ; Skip if V3 != 139
$5A0    $CBB3   RND      VB, #B3         ; VB = random & B3
$5A2    $4463   SNE      V4, #63         ; Skip if V4 != 99
$5A4    $C1D2   RND      V1, #D2         ; V1 = random & D2
$5A6    $83C3   XOR      V3, VC          ; V3 ^= VC
$5A8    $A629   LD       I, $629         ; Load 629 into I
$5AA    $D9F5   DRW      V9, VF, #5      ; Draw 5-byte sprite at V9, VF
$5AC    $93F9   UNKNOWN  $93F9           ; Unknown 9xxx instruction
$5AE    $8D2B   UNKNOWN  8D2B            ; Unknown 8xxx instruction
$5B0    $4EA5   SNE      VE, #A5         ; Skip if VE != 165
$5B2    $0EF4   SYS      $EF4            ; System call to EF4
$5B4    $2E20   CALL     $E20            ; Call subroutine at E20
$5B6    $21F5   CALL     $1F5            ; Call subroutine at 1F5
$5B8    $B5D1   JP       V0, $5D1        ; Jump to V0 + 5D1
$5BA    $721D   ADD      V2, #1D         ; Add 29 to V2
$5BC    $6018   LD       V0, #18         ; Load 24 into V0
$5BE    $F99F   UNKNOWN  F99F            ; Unknown Fxxx instruction
$5C0    $9368   UNKNOWN  $9368           ; Unknown 9xxx instruction
$5C2    $F26D   UNKNOWN  F26D            ; Unknown Fxxx instruction
$5C4    $8EBC   UNKNOWN  8EBC            ; Unknown 8xxx instruction
$5C6    $8423   XOR      V4, V2          ; V4 ^= V2
$5C8    $CF1D   RND      VF, #1D         ; VF = random & 1D
$5CA    $4204   SNE      V2, #04         ; Skip if V2 != 4
$5CC    $9D82   UNKNOWN  $9D82           ; Unknown 9xxx instruction
$5CE    $B7AE   JP       V0, $7AE        ; Jump to V0 + 7AE
$5D0    $77FC   ADD      V7, #FC         ; Add 252 to V7
$5D2    $E091   UNKNOWN  $E091           ; Unknown Exxx instruction
$5D4    $D5FF   DRW      V5, VF, #F      ; Draw 15-byte sprite at V5, VF
$5D6    $1112   JP       $112            ; Jump to 112
$5D8    $E6B2   UNKNOWN  $E6B2           ; Unknown Exxx instruction
$5DA    $B21B   JP       V0, $21B        ; Jump to V0 + 21B
$5DC    $111E   JP       $11E            ; Jump to 11E
$5DE    $3165   SE       V1, #65         ; Skip if V1 == 101
$5E0    $9976   UNKNOWN  $9976           ; Unknown 9xxx instruction
$5E2    $065A   SYS      $65A            ; System call to 65A
$5E4    $175B   JP       $75B            ; Jump to 75B
$5E6    $1D5D   JP       $D5D            ; Jump to D5D
$5E8    $C282   RND      V2, #82         ; V2 = random & 82
$5EA    $4AC2   SNE      VA, #C2         ; Skip if VA != 194
$5EC    $5D19   UNKNOWN  $5D19           ; Unknown 5xxx instruction
$5EE    $51FF   UNKNOWN  $51FF           ; Unknown 5xxx instruction
$5F0    $F525   UNKNOWN  F525            ; Unknown Fxxx instruction
$5F2    $B2FC   JP       V0, $2FC        ; Jump to V0 + 2FC
$5F4    $7837   ADD      V8, #37         ; Add 55 to V8
$5F6    $64B1   LD       V4, #B1         ; Load 177 into V4
$5F8    $16B8   JP       $6B8            ; Jump to 6B8
$5FA    $F32B   UNKNOWN  F32B            ; Unknown Fxxx instruction
$5FC    $64F7   LD       V4, #F7         ; Load 247 into V4
$5FE    $BB7C   JP       V0, $B7C        ; Jump to V0 + B7C
$600    $B0A5   JP       V0, $0A5        ; Jump to V0 + 0A5
$602    $946A   UNKNOWN  $946A           ; Unknown 9xxx instruction
$604    $AC3E   LD       I, $C3E         ; Load C3E into I
$606    $D039   DRW      V0, V3, #9      ; Draw 9-byte sprite at V0, V3
$608    $9F21   UNKNOWN  $9F21           ; Unknown 9xxx instruction
$60A    $86CA   UNKNOWN  86CA            ; Unknown 8xxx instruction
$60C    $8AC4   ADD      VA, VC          ; VA += VC, VF = carry
$60E    $C51C   RND      V5, #1C         ; V5 = random & 1C
$610    $7E48   ADD      VE, #48         ; Add 72 to VE
$612    $607C   LD       V0, #7C         ; Load 124 into V0
$614    $FCCF   UNKNOWN  FCCF            ; Unknown Fxxx instruction
$616    $9B36   UNKNOWN  $9B36           ; Unknown 9xxx instruction
$618    $C3C6   RND      V3, #C6         ; V3 = random & C6
$61A    $6E4C   LD       VE, #4C         ; Load 76 into VE
$61C    $491F   SNE      V9, #1F         ; Skip if V9 != 31
$61E    $1E0A   JP       $E0A            ; Jump to E0A
$620    $1768   JP       $768            ; Jump to 768
$622    $83F4   ADD      V3, VF          ; V3 += VF, VF = carry
$624    $E8F5   UNKNOWN  $E8F5           ; Unknown Exxx instruction
$626    $2029   CALL     $029            ; Call subroutine at 029
$628    $5A11   UNKNOWN  $5A11           ; Unknown 5xxx instruction
$62A    $DC37   DRW      VC, V3, #7      ; Draw 7-byte sprite at VC, V3
$62C    $3E16   SE       VE, #16         ; Skip if VE == 22
$62E    $AAB5   LD       I, $AB5         ; Load AB5 into I
$630    $B0D4   JP       V0, $0D4        ; Jump to V0 + 0D4
$632    $0ECD   SYS      $ECD            ; System call to ECD
$634    $887A   UNKNOWN  887A            ; Unknown 8xxx instruction
$636    $5FA2   UNKNOWN  $5FA2           ; Unknown 5xxx instruction
$638    $B2E7   JP       V0, $2E7        ; Jump to V0 + 2E7
$63A    $56F8   UNKNOWN  $56F8           ; Unknown 5xxx instruction
$63C    $0D93   SYS      $D93            ; System call to D93
$63E    $9198   UNKNOWN  $9198           ; Unknown 9xxx instruction
$640    $8421   OR       V4, V2          ; V4 |= V2
$642    $E345   UNKNOWN  $E345           ; Unknown Exxx instruction
$644    $7C55   ADD      VC, #55         ; Add 85 to VC
$646    $9098   UNKNOWN  $9098           ; Unknown 9xxx instruction
$648    $8EE0   LD       VE, VE          ; VE = VE
$64A    $39CB   SE       V9, #CB         ; Skip if V9 == 203
$64C    $3EEA   SE       VE, #EA         ; Skip if VE == 234
$64E    $AF25   LD       I, $F25         ; Load F25 into I
$650    $353E   SE       V5, #3E         ; Skip if V5 == 62
$652    $8AC2   AND      VA, VC          ; VA &= VC
$654    $EDD3   UNKNOWN  $EDD3           ; Unknown Exxx instruction
$656    $6E81   LD       VE, #81         ; Load 129 into VE
$658    $610C   LD       V1, #0C         ; Load 12 into V1
$65A    $EDFF   UNKNOWN  $EDFF           ; Unknown Exxx instruction
$65C    $ACCF   LD       I, $CCF         ; Load CCF into I
$65E    $CDB9   RND      VD, #B9         ; VD = random & B9
$660    $7886   ADD      V8, #86         ; Add 134 to V8
$662    $2B1D   CALL     $B1D            ; Call subroutine at B1D
$664    $9CF3   UNKNOWN  $9CF3           ; Unknown 9xxx instruction
$666    $32A3   SE       V2, #A3         ; Skip if V2 == 163
$668    $9AB8   UNKNOWN  $9AB8           ; Unknown 9xxx instruction
$66A    $11E2   JP       $1E2            ; Jump to 1E2
$66C    $504B   UNKNOWN  $504B           ; Unknown 5xxx instruction
$66E    $11EA   JP       $1EA            ; Jump to 1EA
$670    $BB05   JP       V0, $B05        ; Jump to V0 + B05
$672    $3228   SE       V2, #28         ; Skip if V2 == 40
$674    $EA1D   UNKNOWN  $EA1D           ; Unknown Exxx instruction
$676    $93FB   UNKNOWN  $93FB           ; Unknown 9xxx instruction
$678    $76DE   ADD      V6, #DE         ; Add 222 to V6
$67A    $2E20   CALL     $E20            ; Call subroutine at E20
$67C    $D7AB   DRW      V7, VA, #B      ; Draw 11-byte sprite at V7, VA
$67E    $83CB   UNKNOWN  83CB            ; Unknown 8xxx instruction
$680    $272D   CALL     $72D            ; Call subroutine at 72D
$682    $297F   CALL     $97F            ; Call subroutine at 97F
$684    $7096   ADD      V0, #96         ; Add 150 to V0
$686    $22BA   CALL     $2BA            ; Call subroutine at 2BA
$688    $1C55   JP       $C55            ; Jump to C55
$68A    $EE59   UNKNOWN  $EE59           ; Unknown Exxx instruction
$68C    $C926   RND      V9, #26         ; V9 = random & 26
$68E    $E8DC   UNKNOWN  $E8DC           ; Unknown Exxx instruction
$690    $4C49   SNE      VC, #49         ; Skip if VC != 73
$692    $84AD   UNKNOWN  84AD            ; Unknown 8xxx instruction
$694    $E6C9   UNKNOWN  $E6C9           ; Unknown Exxx instruction
$696    $BFEE   JP       V0, $FEE        ; Jump to V0 + FEE
$698    $5163   UNKNOWN  $5163           ; Unknown 5xxx instruction
$69A    $27F6   CALL     $7F6            ; Call subroutine at 7F6
$69C    $4E3C   SNE      VE, #3C         ; Skip if VE != 60
$69E    $C111   RND      V1, #11         ; V1 = random & 11
$6A0    $B4DD   JP       V0, $4DD        ; Jump to V0 + 4DD
$6A2    $D9BA   DRW      V9, VB, #A      ; Draw 10-byte sprite at V9, VB
$6A4    $89D0   LD       V9, VD          ; V9 = VD
$6A6    $C162   RND      V1, #62         ; V1 = random & 62
$6A8    $5687   UNKNOWN  $5687           ; Unknown 5xxx instruction
$6AA    $4E04   SNE      VE, #04         ; Skip if VE != 4
$6AC    $C70D   RND      V7, #0D         ; V7 = random & 0D
$6AE    $06DF   SYS      $6DF            ; System call to 6DF
$6B0    $D879   DRW      V8, V7, #9      ; Draw 9-byte sprite at V8, V7
$6B2    $4C3C   SNE      VC, #3C         ; Skip if VC != 60
$6B4    $3848   SE       V8, #48         ; Skip if V8 == 72
$6B6    $EFF7   UNKNOWN  $EFF7           ; Unknown Exxx instruction
$6B8    $E69B   UNKNOWN  $E69B           ; Unknown Exxx instruction
$6BA    $FFB7   UNKNOWN  FFB7            ; Unknown Fxxx instruction
$6BC    $172A   JP       $72A            ; Jump to 72A
$6BE    $0473   SYS      $473            ; System call to 473
$6C0    $F524   UNKNOWN  F524            ; Unknown Fxxx instruction
$6C2    $AE6B   LD       I, $E6B         ; Load E6B into I
$6C4    $6C39   LD       VC, #39         ; Load 57 into VC
$6C6    $2EC3   CALL     $EC3            ; Call subroutine at EC3
$6C8    $5138   UNKNOWN  $5138           ; Unknown 5xxx instruction
$6CA    $0B9C   SYS      $B9C            ; System call to B9C
$6CC    $3081   SE       V0, #81         ; Skip if V0 == 129
$6CE    $A545   LD       I, $545         ; Load 545 into I
$6D0    $E120   UNKNOWN  $E120           ; Unknown Exxx instruction
$6D2    $C961   RND      V9, #61         ; V9 = random & 61
$6D4    $DAB2   DRW      VA, VB, #2      ; Draw 2-byte sprite at VA, VB
$6D6    $A88F   LD       I, $88F         ; Load 88F into I
$6D8    $7AD3   ADD      VA, #D3         ; Add 211 to VA
$6DA    $9BA3   UNKNOWN  $9BA3           ; Unknown 9xxx instruction
$6DC    $BBB8   JP       V0, $BB8        ; Jump to V0 + BB8
$6DE    $AE46   LD       I, $E46         ; Load E46 into I
$6E0    $A1ED   LD       I, $1ED         ; Load 1ED into I
$6E2    $565A   UNKNOWN  $565A           ; Unknown 5xxx instruction
$6E4    $45B1   SNE      V5, #B1         ; Skip if V5 != 177
$6E6    $3D4C   SE       VD, #4C         ; Skip if VD == 76
$6E8    $C421   RND      V4, #21         ; V4 = random & 21
$6EA    $854A   UNKNOWN  854A            ; Unknown 8xxx instruction
$6EC    $2CAB   CALL     $CAB            ; Call subroutine at CAB
$6EE    $CB6D   RND      VB, #6D         ; VB = random & 6D
$6F0    $B999   JP       V0, $999        ; Jump to V0 + 999
$6F2    $D294   DRW      V2, V9, #4      ; Draw 4-byte sprite at V2, V9
$6F4    $EEAA   UNKNOWN  $EEAA           ; Unknown Exxx instruction
$6F6    $0B1B   SYS      $B1B            ; System call to B1B
$6F8    $600C   LD       V0, #0C         ; Load 12 into V0
$6FA    $FF18   LD       ST, VF          ; Sound timer = VF
$6FC    $A2C3   LD       I, $2C3         ; Load 2C3 into I
$6FE    $1D52   JP       $D52            ; Jump to D52
$700    $ACCA   LD       I, $CCA         ; Load CCA into I
$702    $8A97   SUBN     VA, V9          ; VA = V9 - VA, VF = !borrow
$704    $5F74   UNKNOWN  $5F74           ; Unknown 5xxx instruction
$706    $116E   JP       $16E            ; Jump to 16E
$708    $DF4E   DRW      VF, V4, #E      ; Draw 14-byte sprite at VF, V4
$70A    $6618   LD       V6, #18         ; Load 24 into V6
$70C    $0D21   SYS      $D21            ; System call to D21
$70E    $6FA0   LD       VF, #A0         ; Load 160 into VF
$710    $B6B8   JP       V0, $6B8        ; Jump to V0 + 6B8
$712    $DCED   DRW      VC, VE, #D      ; Draw 13-byte sprite at VC, VE
$714    $ED13   UNKNOWN  $ED13           ; Unknown Exxx instruction
$716    $2917   CALL     $917            ; Call subroutine at 917
$718    $FECB   UNKNOWN  FECB            ; Unknown Fxxx instruction
$71A    $0DB4   SYS      $DB4            ; System call to DB4
$71C    $0222   SYS      $222            ; System call to 222
$71E    $04D3   SYS      $4D3            ; System call to 4D3
$720    $EF31   UNKNOWN  $EF31           ; Unknown Exxx instruction
$722    $F715   LD       DT, V7          ; Delay timer = V7
$724    $4AF4   SNE      VA, #F4         ; Skip if VA != 244
$726    $2664   CALL     $664            ; Call subroutine at 664
$728    $11F5   JP       $1F5            ; Jump to 1F5
$72A    $B4CF   JP       V0, $4CF        ; Jump to V0 + 4CF
$72C    $1B5A   JP       $B5A            ; Jump to B5A
$72E    $99DA   UNKNOWN  $99DA           ; Unknown 9xxx instruction
$730    $580E   UNKNOWN  $580E           ; Unknown 5xxx instruction
$732    $FD21   UNKNOWN  FD21            ; Unknown Fxxx instruction
$734    $1A05   JP       $A05            ; Jump to A05
$736    $104D   JP       $04D            ; Jump to 04D
$738    $D9D7   DRW      V9, VD, #7      ; Draw 7-byte sprite at V9, VD
$73A    $0A91   SYS      $A91            ; System call to A91
$73C    $161C   JP       $61C            ; Jump to 61C
$73E    $158F   JP       $58F            ; Jump to 58F
$740    $593E   UNKNOWN  $593E           ; Unknown 5xxx instruction
$742    $3576   SE       V5, #76         ; Skip if V5 == 118
$744    $9773   UNKNOWN  $9773           ; Unknown 9xxx instruction
$746    $2EE7   CALL     $EE7            ; Call subroutine at EE7
$748    $F160   UNKNOWN  F160            ; Unknown Fxxx instruction
$74A    $C928   RND      V9, #28         ; V9 = random & 28
$74C    $7855   ADD      V8, #55         ; Add 85 to V8
$74E    $7C5E   ADD      VC, #5E         ; Add 94 to VC
$750    $FEF0   UNKNOWN  FEF0            ; Unknown Fxxx instruction
$752    $0C0E   SYS      $C0E            ; System call to C0E
$754    $7B56   ADD      VB, #56         ; Add 86 to VB
$756    $2A0E   CALL     $A0E            ; Call subroutine at A0E
$758    $81AD   UNKNOWN  81AD            ; Unknown 8xxx instruction
$75A    $DE21   DRW      VE, V2, #1      ; Draw 1-byte sprite at VE, V2
$75C    $2FC8   CALL     $FC8            ; Call subroutine at FC8
$75E    $4B85   SNE      VB, #85         ; Skip if VB != 133
$760    $BC2C   JP       V0, $C2C        ; Jump to V0 + C2C
$762    $2599   CALL     $599            ; Call subroutine at 599
$764    $7B9F   ADD      VB, #9F         ; Add 159 to VB
$766    $D462   DRW      V4, V6, #2      ; Draw 2-byte sprite at V4, V6
$768    $3D5F   SE       VD, #5F         ; Skip if VD == 95
$76A    $D102   DRW      V1, V0, #2      ; Draw 2-byte sprite at V1, V0
$76C    $2662   CALL     $662            ; Call subroutine at 662
$76E    $D21D   DRW      V2, V1, #D      ; Draw 13-byte sprite at V2, V1
$770    $FF31   UNKNOWN  FF31            ; Unknown Fxxx instruction
$772    $E186   UNKNOWN  $E186           ; Unknown Exxx instruction
$774    $9D76   UNKNOWN  $9D76           ; Unknown 9xxx instruction
$776    $43F7   SNE      V3, #F7         ; Skip if V3 != 247
$778    $7552   ADD      V5, #52         ; Add 82 to V5
$77A    $9F2A   UNKNOWN  $9F2A           ; Unknown 9xxx instruction
$77C    $A654   LD       I, $654         ; Load 654 into I
$77E    $B88B   JP       V0, $88B        ; Jump to V0 + 88B
$780    $4476   SNE      V4, #76         ; Skip if V4 != 118
$782    $BD35   JP       V0, $D35        ; Jump to V0 + D35
$784    $82DF   UNKNOWN  82DF            ; Unknown 8xxx instruction
$786    $62A8   LD       V2, #A8         ; Load 168 into V2
$788    $9ABD   UNKNOWN  $9ABD           ; Unknown 9xxx instruction
$78A    $7B01   ADD      VB, #01         ; Add 1 to VB
$78C    $F204   UNKNOWN  F204            ; Unknown Fxxx instruction
$78E    $A274   LD       I, $274         ; Load 274 into I
$790    $5FB4   UNKNOWN  $5FB4           ; Unknown 5xxx instruction
$792    $67CA   LD       V7, #CA         ; Load 202 into V7
$794    $E1E6   UNKNOWN  $E1E6           ; Unknown Exxx instruction
$796    $85D8   UNKNOWN  85D8            ; Unknown 8xxx instruction
$798    $B1EB   JP       V0, $1EB        ; Jump to V0 + 1EB
$79A    $ABB0   LD       I, $BB0         ; Load BB0 into I
$79C    $C8EE   RND      V8, #EE         ; V8 = random & EE
$79E    $6302   LD       V3, #02         ; Load 2 into V3
$7A0    $5F9F   UNKNOWN  $5F9F           ; Unknown 5xxx instruction
$7A2    $A6D9   LD       I, $6D9         ; Load 6D9 into I
$7A4    $CFD6   RND      VF, #D6         ; VF = random & D6
$7A6    $A168   LD       I, $168         ; Load 168 into I
$7A8    $2E31   CALL     $E31            ; Call subroutine at E31
$7AA    $890C   UNKNOWN  890C            ; Unknown 8xxx instruction
$7AC    $29A8   CALL     $9A8            ; Call subroutine at 9A8
$7AE    $5D02   UNKNOWN  $5D02           ; Unknown 5xxx instruction
$7B0    $7152   ADD      V1, #52         ; Add 82 to V1
$7B2    $1F06   JP       $F06            ; Jump to F06
$7B4    $9C59   UNKNOWN  $9C59           ; Unknown 9xxx instruction
$7B6    $E45D   UNKNOWN  $E45D           ; Unknown Exxx instruction
$7B8    $ADA3   LD       I, $DA3         ; Load DA3 into I
$7BA    $C3F5   RND      V3, #F5         ; V3 = random & F5
$7BC    $2036   CALL     $036            ; Call subroutine at 036
$7BE    $314D   SE       V1, #4D         ; Skip if V1 == 77
$7C0    $8901   OR       V9, V0          ; V9 |= V0
$7C2    $DB33   DRW      VB, V3, #3      ; Draw 3-byte sprite at VB, V3
$7C4    $548E   UNKNOWN  $548E           ; Unknown 5xxx instruction
$7C6    $ED54   UNKNOWN  $ED54           ; Unknown Exxx instruction
$7C8    $01ED   SYS      $1ED            ; System call to 1ED
$7CA    $6BDB   LD       VB, #DB         ; Load 219 into VB
$7CC    $EEDE   UNKNOWN  $EEDE           ; Unknown Exxx instruction
$7CE    $2D6E   CALL     $D6E            ; Call subroutine at D6E
$7D0    $0F33   SYS      $F33            ; System call to F33
$7D2    $FA8F   UNKNOWN  FA8F            ; Unknown Fxxx instruction
$7D4    $76B8   ADD      V6, #B8         ; Add 184 to V6
$7D6    $A336   LD       I, $336         ; Load 336 into I
$7D8    $D481   DRW      V4, V8, #1      ; Draw 1-byte sprite at V4, V8
$7DA    $710F   ADD      V1, #0F         ; Add 15 to V1
$7DC    $62BE   LD       V2, #BE         ; Load 190 into V2
$7DE    $FAC1   UNKNOWN  FAC1            ; Unknown Fxxx instruction
$7E0    $E575   UNKNOWN  $E575           ; Unknown Exxx instruction
$7E2    $0A3B   SYS      $A3B            ; System call to A3B
$7E4    $8B68   UNKNOWN  8B68            ; Unknown 8xxx instruction
$7E6    $A779   LD       I, $779         ; Load 779 into I
$7E8    $6C43   LD       VC, #43         ; Load 67 into VC
$7EA    $6B64   LD       VB, #64         ; Load 100 into VB
$7EC    $B43B   JP       V0, $43B        ; Jump to V0 + 43B
$7EE    $F1E2   UNKNOWN  F1E2            ; Unknown Fxxx instruction
$7F0    $78FE   ADD      V8, #FE         ; Add 254 to V8
$7F2    $3089   SE       V0, #89         ; Skip if V0 == 137
$7F4    $7CB0   ADD      VC, #B0         ; Add 176 to VC
$7F6    $CF17   RND      VF, #17         ; VF = random & 17
$7F8    $DD68   DRW      VD, V6, #8      ; Draw 8-byte sprite at VD, V6
$7FA    $A841   LD       I, $841         ; Load 841 into I
$7FC    $762B   ADD      V6, #2B         ; Add 43 to V6
$7FE    $D1D2   DRW      V1, VD, #2      ; Draw 2-byte sprite at V1, VD
$800    $AC8F   LD       I, $C8F         ; Load C8F into I
$802    $FF95   UNKNOWN  FF95            ; Unknown Fxxx instruction
$804    $3545   SE       V5, #45         ; Skip if V5 == 69
$806    $5486   UNKNOWN  $5486           ; Unknown 5xxx instruction
$808    $7C5D   ADD      VC, #5D         ; Add 93 to VC
$80A    $61FA   LD       V1, #FA         ; Load 250 into V1
$80C    $015D   SYS      $15D            ; System call to 15D
$80E    $F390   UNKNOWN  F390            ; Unknown Fxxx instruction
$810    $978C   UNKNOWN  $978C           ; Unknown 9xxx instruction
$812    $2660   CALL     $660            ; Call subroutine at 660
$814    $FADD   UNKNOWN  FADD            ; Unknown Fxxx instruction
$816    $13F0   JP       $3F0            ; Jump to 3F0
$818    $EF0E   UNKNOWN  $EF0E           ; Unknown Exxx instruction
$81A    $02A1   SYS      $2A1            ; System call to 2A1
$81C    $A626   LD       I, $626         ; Load 626 into I
$81E    $D0B9   DRW      V0, VB, #9      ; Draw 9-byte sprite at V0, VB
$820    $0F2D   SYS      $F2D            ; System call to F2D
$822    $B769   JP       V0, $769        ; Jump to V0 + 769
$824    $97CB   UNKNOWN  $97CB           ; Unknown 9xxx instruction
$826    $7469   ADD      V4, #69         ; Add 105 to V4
$828    $3767   SE       V7, #67         ; Skip if V7 == 103
$82A    $15A3   JP       $5A3            ; Jump to 5A3
$82C    $9065   UNKNOWN  $9065           ; Unknown 9xxx instruction
$82E    $4BD4   SNE      VB, #D4         ; Skip if VB != 212
$830    $2784   CALL     $784            ; Call subroutine at 784
$832    $6AE4   LD       VA, #E4         ; Load 228 into VA
$834    $0936   SYS      $936            ; System call to 936
$836    $A63F   LD       I, $63F         ; Load 63F into I
$838    $05DF   SYS      $5DF            ; System call to 5DF
$83A    $6050   LD       V0, #50         ; Load 80 into V0
$83C    $F055   LD       [I], V0         ; Store V0-V0 at I
$83E    $10FE   JP       $0FE            ; Jump to 0FE
$840    $958F   UNKNOWN  $958F           ; Unknown 9xxx instruction
$842    $CAB6   RND      VA, #B6         ; VA = random & B6
$844    $0422   SYS      $422            ; System call to 422
$846    $57A9   UNKNOWN  $57A9           ; Unknown 5xxx instruction
$848    $6FD1   LD       VF, #D1         ; Load 209 into VF
$84A    $332B   SE       V3, #2B         ; Skip if V3 == 43
$84C    $0A71   SYS      $A71            ; System call to A71
$84E    $D5C7   DRW      V5, VC, #7      ; Draw 7-byte sprite at V5, VC
$850    $94C9   UNKNOWN  $94C9           ; Unknown 9xxx instruction
$852    $0447   SYS      $447            ; System call to 447
$854    $9724   UNKNOWN  $9724           ; Unknown 9xxx instruction
$856    $49BF   SNE      V9, #BF         ; Skip if V9 != 191
$858    $3E4D   SE       VE, #4D         ; Skip if VE == 77
$85A    $0E5C   SYS      $E5C            ; System call to E5C
$85C    $DF93   DRW      VF, V9, #3      ; Draw 3-byte sprite at VF, V9
$85E    $00F3   SYS      $0F3            ; System call to 0F3
$860    $8A05   SUB      VA, V0          ; VA -= V0, VF = !borrow
$862    $517A   UNKNOWN  $517A           ; Unknown 5xxx instruction
$864    $5CEC   UNKNOWN  $5CEC           ; Unknown 5xxx instruction
$866    $2D4C   CALL     $D4C            ; Call subroutine at D4C
$868    $E325   UNKNOWN  $E325           ; Unknown Exxx instruction
$86A    $EAA5   UNKNOWN  $EAA5           ; Unknown Exxx instruction
$86C    $AA58   LD       I, $A58         ; Load A58 into I
$86E    $E3C8   UNKNOWN  $E3C8           ; Unknown Exxx instruction
$870    $4439   SNE      V4, #39         ; Skip if V4 != 57
$872    $C52F   RND      V5, #2F         ; V5 = random & 2F
$874    $0F90   SYS      $F90            ; System call to F90
$876    $F8B8   UNKNOWN  F8B8            ; Unknown Fxxx instruction
$878    $9113   UNKNOWN  $9113           ; Unknown 9xxx instruction
$87A    $BCFD   JP       V0, $CFD        ; Jump to V0 + CFD
$87C    $E331   UNKNOWN  $E331           ; Unknown Exxx instruction
$87E    $B6AB   JP       V0, $6AB        ; Jump to V0 + 6AB
$880    $4F06   SNE      VF, #06         ; Skip if VF != 6
$882    $4883   SNE      V8, #83         ; Skip if V8 != 131
$884    $3613   SE       V6, #13         ; Skip if V6 == 19
$886    $20F2   CALL     $0F2            ; Call subroutine at 0F2
$888    $0967   SYS      $967            ; System call to 967
$88A    $0E4D   SYS      $E4D            ; System call to E4D
$88C    $9EDE   UNKNOWN  $9EDE           ; Unknown 9xxx instruction
$88E    $5EF1   UNKNOWN  $5EF1           ; Unknown 5xxx instruction
$890    $B358   JP       V0, $358        ; Jump to V0 + 358
$892    $4090   SNE      V0, #90         ; Skip if V0 != 144
$894    $BD96   JP       V0, $D96        ; Jump to V0 + D96
$896    $606B   LD       V0, #6B         ; Load 107 into V0
$898    $FF57   UNKNOWN  FF57            ; Unknown Fxxx instruction
$89A    $AD2D   LD       I, $D2D         ; Load D2D into I
$89C    $7A17   ADD      VA, #17         ; Add 23 to VA
$89E    $AC36   LD       I, $C36         ; Load C36 into I
$8A0    $9556   UNKNOWN  $9556           ; Unknown 9xxx instruction
$8A2    $8017   SUBN     V0, V1          ; V0 = V1 - V0, VF = !borrow
$8A4    $3D45   SE       VD, #45         ; Skip if VD == 69
$8A6    $56C5   UNKNOWN  $56C5           ; Unknown 5xxx instruction
$8A8    $771A   ADD      V7, #1A         ; Add 26 to V7
$8AA    $00D1   SYS      $0D1            ; System call to 0D1
$8AC    $8EC2   AND      VE, VC          ; VE &= VC
$8AE    $6724   LD       V7, #24         ; Load 36 into V7
$8B0    $69CD   LD       V9, #CD         ; Load 205 into V9
$8B2    $D05B   DRW      V0, V5, #B      ; Draw 11-byte sprite at V0, V5
$8B4    $F615   LD       DT, V6          ; Delay timer = V6
$8B6    $E3F0   UNKNOWN  $E3F0           ; Unknown Exxx instruction
$8B8    $E25D   UNKNOWN  $E25D           ; Unknown Exxx instruction
$8BA    $DE40   DRW      VE, V4, #0      ; Draw 0-byte sprite at VE, V4
$8BC    $EDF9   UNKNOWN  $EDF9           ; Unknown Exxx instruction
$8BE    $8757   SUBN     V7, V5          ; V7 = V5 - V7, VF = !borrow
$8C0    $8B6D   UNKNOWN  8B6D            ; Unknown 8xxx instruction
$8C2    $C492   RND      V4, #92         ; V4 = random & 92
$8C4    $9EBB   UNKNOWN  $9EBB           ; Unknown 9xxx instruction
$8C6    $72DC   ADD      V2, #DC         ; Add 220 to V2
$8C8    $2688   CALL     $688            ; Call subroutine at 688
$8CA    $3016   SE       V0, #16         ; Skip if V0 == 22
$8CC    $9306   UNKNOWN  $9306           ; Unknown 9xxx instruction
$8CE    $55CA   UNKNOWN  $55CA           ; Unknown 5xxx instruction
$8D0    $2A12   CALL     $A12            ; Call subroutine at A12
$8D2    $2D32   CALL     $D32            ; Call subroutine at D32
$8D4    $CB37   RND      VB, #37         ; VB = random & 37
$8D6    $68E7   LD       V8, #E7         ; Load 231 into V8
$8D8    $B694   JP       V0, $694        ; Jump to V0 + 694
$8DA    $7492   ADD      V4, #92         ; Add 146 to V4
$8DC    $02CC   SYS      $2CC            ; System call to 2CC
$8DE    $8C18   UNKNOWN  8C18            ; Unknown 8xxx instruction
$8E0    $5162   UNKNOWN  $5162           ; Unknown 5xxx instruction
$8E2    $5C7B   UNKNOWN  $5C7B           ; Unknown 5xxx instruction
$8E4    $D0EE   DRW      V0, VE, #E      ; Draw 14-byte sprite at V0, VE
$8E6    $5795   UNKNOWN  $5795           ; Unknown 5xxx instruction
$8E8    $33D4   SE       V3, #D4         ; Skip if V3 == 212
$8EA    $10EC   JP       $0EC            ; Jump to 0EC
$8EC    $A84F   LD       I, $84F         ; Load 84F into I
$8EE    $A40B   LD       I, $40B         ; Load 40B into I
$8F0    $B3D3   JP       V0, $3D3        ; Jump to V0 + 3D3
$8F2    $B75D   JP       V0, $75D        ; Jump to V0 + 75D
$8F4    $2F26   CALL     $F26            ; Call subroutine at F26
$8F6    $4184   SNE      V1, #84         ; Skip if V1 != 132
$8F8    $6AA8   LD       VA, #A8         ; Load 168 into VA
$8FA    $863D   UNKNOWN  863D            ; Unknown 8xxx instruction
$8FC    $1238   JP       $238            ; Jump to 238
$8FE    $C215   RND      V2, #15         ; V2 = random & 15
$900    $1DD3   JP       $DD3            ; Jump to DD3
$902    $B15E   JP       V0, $15E        ; Jump to V0 + 15E
$904    $78F7   ADD      V8, #F7         ; Add 247 to V8
$906    $2DED   CALL     $DED            ; Call subroutine at DED
$908    $D4D7   DRW      V4, VD, #7      ; Draw 7-byte sprite at V4, VD
$90A    $F105   UNKNOWN  F105            ; Unknown Fxxx instruction
$90C    $9367   UNKNOWN  $9367           ; Unknown 9xxx instruction
$90E    $8A6B   UNKNOWN  8A6B            ; Unknown 8xxx instruction
$910    $8EDA   UNKNOWN  8EDA            ; Unknown 8xxx instruction
$912    $00C4   SYS      $0C4            ; System call to 0C4
$914    $5200   SE       V2, V0          ; Skip if V2 == V0
$916    $CCEF   RND      VC, #EF         ; VC = random & EF
$918    $32A2   SE       V2, #A2         ; Skip if V2 == 162
$91A    $12CB   JP       $2CB            ; Jump to 2CB
$91C    $26A6   CALL     $6A6            ; Call subroutine at 6A6
$91E    $D088   DRW      V0, V8, #8      ; Draw 8-byte sprite at V0, V8
$920    $1578   JP       $578            ; Jump to 578
$922    $D47B   DRW      V4, V7, #B      ; Draw 11-byte sprite at V4, V7
$924    $3F7C   SE       VF, #7C         ; Skip if VF == 124
$926    $772A   ADD      V7, #2A         ; Add 42 to V7
$928    $6BB9   LD       VB, #B9         ; Load 185 into VB
$92A    $2E3E   CALL     $E3E            ; Call subroutine at E3E
$92C    $8A3B   UNKNOWN  8A3B            ; Unknown 8xxx instruction
$92E    $F202   UNKNOWN  F202            ; Unknown Fxxx instruction
$930    $8682   AND      V6, V8          ; V6 &= V8
$932    $5122   UNKNOWN  $5122           ; Unknown 5xxx instruction
$934    $3A81   SE       VA, #81         ; Skip if VA == 129
$936    $5AFA   UNKNOWN  $5AFA           ; Unknown 5xxx instruction
$938    $987A   UNKNOWN  $987A           ; Unknown 9xxx instruction
$93A    $8317   SUBN     V3, V1          ; V3 = V1 - V3, VF = !borrow
$93C    $0735   SYS      $735            ; System call to 735
$93E    $C227   RND      V2, #27         ; V2 = random & 27
$940    $C407   RND      V4, #07         ; V4 = random & 07
$942    $EB1F   UNKNOWN  $EB1F           ; Unknown Exxx instruction
$944    $D3AC   DRW      V3, VA, #C      ; Draw 12-byte sprite at V3, VA
$946    $E9FA   UNKNOWN  $E9FA           ; Unknown Exxx instruction
$948    $7F83   ADD      VF, #83         ; Add 131 to VF
$94A    $D6F2   DRW      V6, VF, #2      ; Draw 2-byte sprite at V6, VF
$94C    $11D8   JP       $1D8            ; Jump to 1D8
$94E    $D366   DRW      V3, V6, #6      ; Draw 6-byte sprite at V3, V6
$950    $2805   CALL     $805            ; Call subroutine at 805
$952    $5167   UNKNOWN  $5167           ; Unknown 5xxx instruction
$954    $683B   LD       V8, #3B         ; Load 59 into V8
$956    $0989   SYS      $989            ; System call to 989
$958    $E0D5   UNKNOWN  $E0D5           ; Unknown Exxx instruction
$95A    $93C8   UNKNOWN  $93C8           ; Unknown 9xxx instruction
$95C    $4EB4   SNE      VE, #B4         ; Skip if VE != 180
$95E    $FBDB   UNKNOWN  FBDB            ; Unknown Fxxx instruction
$960    $37DB   SE       V7, #DB         ; Skip if V7 == 219
$962    $8860   LD       V8, V6          ; V8 = V6
$964    $1495   JP       $495            ; Jump to 495
$966    $DB43   DRW      VB, V4, #3      ; Draw 3-byte sprite at VB, V4
$968    $7B37   ADD      VB, #37         ; Add 55 to VB
$96A    $78B8   ADD      V8, #B8         ; Add 184 to V8
$96C    $A9FB   LD       I, $9FB         ; Load 9FB into I
$96E    $F086   UNKNOWN  F086            ; Unknown Fxxx instruction
$970    $CB03   RND      VB, #03         ; VB = random & 03
$972    $82E4   ADD      V2, VE          ; V2 += VE, VF = carry
$974    $907F   UNKNOWN  $907F           ; Unknown 9xxx instruction
$976    $5F7F   UNKNOWN  $5F7F           ; Unknown 5xxx instruction
$978    $5A40   SE       VA, V4          ; Skip if VA == V4
$97A    $C0DD   RND      V0, #DD         ; V0 = random & DD
$97C    $905E   UNKNOWN  $905E           ; Unknown 9xxx instruction
$97E    $7C2D   ADD      VC, #2D         ; Add 45 to VC
$980    $FD78   UNKNOWN  FD78            ; Unknown Fxxx instruction
$982    $B5F8   JP       V0, $5F8        ; Jump to V0 + 5F8
$984    $CBB3   RND      VB, #B3         ; VB = random & B3
$986    $8EDD   UNKNOWN  8EDD            ; Unknown 8xxx instruction
$988    $2488   CALL     $488            ; Call subroutine at 488
$98A    $D809   DRW      V8, V0, #9      ; Draw 9-byte sprite at V8, V0
$98C    $A1F6   LD       I, $1F6         ; Load 1F6 into I
$98E    $92A3   UNKNOWN  $92A3           ; Unknown 9xxx instruction
$990    $8804   ADD      V8, V0          ; V8 += V0, VF = carry
$992    $F504   UNKNOWN  F504            ; Unknown Fxxx instruction
$994    $6EFE   LD       VE, #FE         ; Load 254 into VE
$996    $041A   SYS      $41A            ; System call to 41A
$998    $3C25   SE       VC, #25         ; Skip if VC == 37
$99A    $83B0   LD       V3, VB          ; V3 = VB
$99C    $A6E9   LD       I, $6E9         ; Load 6E9 into I
$99E    $B770   JP       V0, $770        ; Jump to V0 + 770
$9A0    $6D63   LD       VD, #63         ; Load 99 into VD
$9A2    $0CFB   SYS      $CFB            ; System call to CFB
$9A4    $94D7   UNKNOWN  $94D7           ; Unknown 9xxx instruction
$9A6    $D4E1   DRW      V4, VE, #1      ; Draw 1-byte sprite at V4, VE
$9A8    $F9B2   UNKNOWN  F9B2            ; Unknown Fxxx instruction
$9AA    $3CFC   SE       VC, #FC         ; Skip if VC == 252
$9AC    $F1D3   UNKNOWN  F1D3            ; Unknown Fxxx instruction
$9AE    $F22A   UNKNOWN  F22A            ; Unknown Fxxx instruction
$9B0    $0FBF   SYS      $FBF            ; System call to FBF
$9B2    $0186   SYS      $186            ; System call to 186
$9B4    $D9CF   DRW      V9, VC, #F      ; Draw 15-byte sprite at V9, VC
$9B6    $A673   LD       I, $673         ; Load 673 into I
$9B8    $BD48   JP       V0, $D48        ; Jump to V0 + D48
$9BA    $FF21   UNKNOWN  FF21            ; Unknown Fxxx instruction
$9BC    $9FDA   UNKNOWN  $9FDA           ; Unknown 9xxx instruction
$9BE    $6A22   LD       VA, #22         ; Load 34 into VA
$9C0    $6C99   LD       VC, #99         ; Load 153 into VC
$9C2    $5736   UNKNOWN  $5736           ; Unknown 5xxx instruction
$9C4    $FA9F   UNKNOWN  FA9F            ; Unknown Fxxx instruction
$9C6    $AD25   LD       I, $D25         ; Load D25 into I
$9C8    $8BFC   UNKNOWN  8BFC            ; Unknown 8xxx instruction
$9CA    $D463   DRW      V4, V6, #3      ; Draw 3-byte sprite at V4, V6
$9CC    $5E47   UNKNOWN  $5E47           ; Unknown 5xxx instruction
$9CE    $CFC3   RND      VF, #C3         ; VF = random & C3
$9D0    $8401   OR       V4, V0          ; V4 |= V0
$9D2    $AF9B   LD       I, $F9B         ; Load F9B into I
$9D4    $B2CB   JP       V0, $2CB        ; Jump to V0 + 2CB
$9D6    $A1CD   LD       I, $1CD         ; Load 1CD into I
$9D8    $5E5E   UNKNOWN  $5E5E           ; Unknown 5xxx instruction
$9DA    $0ED1   SYS      $ED1            ; System call to ED1
$9DC    $7317   ADD      V3, #17         ; Add 23 to V3
$9DE    $5AC1   UNKNOWN  $5AC1           ; Unknown 5xxx instruction
$9E0    $2A3B   CALL     $A3B            ; Call subroutine at A3B
$9E2    $341B   SE       V4, #1B         ; Skip if V4 == 27
$9E4    $68B9   LD       V8, #B9         ; Load 185 into V8
$9E6    $7D2F   ADD      VD, #2F         ; Add 47 to VD
$9E8    $3BED   SE       VB, #ED         ; Skip if VB == 237
$9EA    $EC3A   UNKNOWN  $EC3A           ; Unknown Exxx instruction
$9EC    $DB1D   DRW      VB, V1, #D      ; Draw 13-byte sprite at VB, V1
$9EE    $5A6B   UNKNOWN  $5A6B           ; Unknown 5xxx instruction
$9F0    $672D   LD       V7, #2D         ; Load 45 into V7
$9F2    $1BFA   JP       $BFA            ; Jump to BFA
$9F4    $7172   ADD      V1, #72         ; Add 114 to V1
$9F6    $E5B7   UNKNOWN  $E5B7           ; Unknown Exxx instruction
$9F8    $A3FE   LD       I, $3FE         ; Load 3FE into I
$9FA    $3646   SE       V6, #46         ; Skip if V6 == 70
$9FC    $1B65   JP       $B65            ; Jump to B65
$9FE    $4917   SNE      V9, #17         ; Skip if V9 != 23
$A00    $3A07   SE       VA, #07         ; Skip if VA == 7
$A02    $A0E0   LD       I, $0E0         ; Load 0E0 into I
$A04    $4EBC   SNE      VE, #BC         ; Skip if VE != 188
$A06    $4A8C   SNE      VA, #8C         ; Skip if VA != 140
$A08    $FB4B   UNKNOWN  FB4B            ; Unknown Fxxx instruction
$A0A    $CE88   RND      VE, #88         ; VE = random & 88
$A0C    $E01D   UNKNOWN  $E01D           ; Unknown Exxx instruction
$A0E    $2D43   CALL     $D43            ; Call subroutine at D43
$A10    $E02B   UNKNOWN  $E02B           ; Unknown Exxx instruction
$A12    $DE09   DRW      VE, V0, #9      ; Draw 9-byte sprite at VE, V0
$A14    $819F   UNKNOWN  819F            ; Unknown 8xxx instruction
$A16    $948E   UNKNOWN  $948E           ; Unknown 9xxx instruction
$A18    $1BA6   JP       $BA6            ; Jump to BA6
$A1A    $5241   UNKNOWN  $5241           ; Unknown 5xxx instruction
$A1C    $9366   UNKNOWN  $9366           ; Unknown 9xxx instruction
$A1E    $F76C   UNKNOWN  F76C            ; Unknown Fxxx instruction
$A20    $E802   UNKNOWN  $E802           ; Unknown Exxx instruction
$A22    $8B2E   SHL      VB              ; VB <<= 1, VF = MSB
$A24    $C0B5   RND      V0, #B5         ; V0 = random & B5
$A26    $6776   LD       V7, #76         ; Load 118 into V7
$A28    $FBDF   UNKNOWN  FBDF            ; Unknown Fxxx instruction
$A2A    $07BD   SYS      $7BD            ; System call to 7BD
$A2C    $EE92   UNKNOWN  $EE92           ; Unknown Exxx instruction
$A2E    $A53D   LD       I, $53D         ; Load 53D into I
$A30    $6C1B   LD       VC, #1B         ; Load 27 into VC
$A32    $A9A4   LD       I, $9A4         ; Load 9A4 into I
$A34    $EEDC   UNKNOWN  $EEDC           ; Unknown Exxx instruction
$A36    $9130   SNE      V1, V3          ; Skip if V1 != V3
$A38    $C215   RND      V2, #15         ; V2 = random & 15
$A3A    $2666   CALL     $666            ; Call subroutine at 666
$A3C    $5264   UNKNOWN  $5264           ; Unknown 5xxx instruction
$A3E    $BAF9   JP       V0, $AF9        ; Jump to V0 + AF9
$A40    $FC42   UNKNOWN  FC42            ; Unknown Fxxx instruction
$A42    $70BC   ADD      V0, #BC         ; Add 188 to V0
$A44    $B098   JP       V0, $098        ; Jump to V0 + 098
$A46    $3383   SE       V3, #83         ; Skip if V3 == 131
$A48    $1AFD   JP       $AFD            ; Jump to AFD
$A4A    $6438   LD       V4, #38         ; Load 56 into V4
$A4C    $8858   UNKNOWN  8858            ; Unknown 8xxx instruction
$A4E    $FE8C   UNKNOWN  FE8C            ; Unknown Fxxx instruction
$A50    $3783   SE       V7, #83         ; Skip if V7 == 131
$A52    $7881   ADD      V8, #81         ; Add 129 to V8
$A54    $3DF6   SE       VD, #F6         ; Skip if VD == 246
$A56    $2C85   CALL     $C85            ; Call subroutine at C85
$A58    $55A5   UNKNOWN  $55A5           ; Unknown 5xxx instruction
$A5A    $5BF5   UNKNOWN  $5BF5           ; Unknown 5xxx instruction
$A5C    $F8CD   UNKNOWN  F8CD            ; Unknown Fxxx instruction
$A5E    $83C3   XOR      V3, VC          ; V3 ^= VC
$A60    $7B9A   ADD      VB, #9A         ; Add 154 to VB
$A62    $0856   SYS      $856            ; System call to 856
$A64    $E717   UNKNOWN  $E717           ; Unknown Exxx instruction
$A66    $0A77   SYS      $A77            ; System call to A77
$A68    $B792   JP       V0, $792        ; Jump to V0 + 792
$A6A    $153F   JP       $53F            ; Jump to 53F
$A6C    $C536   RND      V5, #36         ; V5 = random & 36
$A6E    $5C37   UNKNOWN  $5C37           ; Unknown 5xxx instruction
$A70    $0B58   SYS      $B58            ; System call to B58
$A72    $2727   CALL     $727            ; Call subroutine at 727
$A74    $7072   ADD      V0, #72         ; Add 114 to V0
$A76    $3745   SE       V7, #45         ; Skip if V7 == 69
$A78    $7CC7   ADD      VC, #C7         ; Add 199 to VC
$A7A    $DA4B   DRW      VA, V4, #B      ; Draw 11-byte sprite at VA, V4
$A7C    $1954   JP       $954            ; Jump to 954
$A7E    $63D9   LD       V3, #D9         ; Load 217 into V3
$A80    $0158   SYS      $158            ; System call to 158
$A82    $EF44   UNKNOWN  $EF44           ; Unknown Exxx instruction
$A84    $8B24   ADD      VB, V2          ; VB += V2, VF = carry
$A86    $62D2   LD       V2, #D2         ; Load 210 into V2
$A88    $E1E4   UNKNOWN  $E1E4           ; Unknown Exxx instruction
$A8A    $6056   LD       V0, #56         ; Load 86 into V0
$A8C    $8308   UNKNOWN  8308            ; Unknown 8xxx instruction
$A8E    $2F88   CALL     $F88            ; Call subroutine at F88
$A90    $EA84   UNKNOWN  $EA84           ; Unknown Exxx instruction
$A92    $F09C   UNKNOWN  F09C            ; Unknown Fxxx instruction
$A94    $49C0   SNE      V9, #C0         ; Skip if V9 != 192
$A96    $FB67   UNKNOWN  FB67            ; Unknown Fxxx instruction
$A98    $3594   SE       V5, #94         ; Skip if V5 == 148
$A9A    $682B   LD       V8, #2B         ; Load 43 into V8
$A9C    $B5E8   JP       V0, $5E8        ; Jump to V0 + 5E8
$A9E    $CAC8   RND      VA, #C8         ; VA = random & C8
$AA0    $8B5C   UNKNOWN  8B5C            ; Unknown 8xxx instruction
$AA2    $09BF   SYS      $9BF            ; System call to 9BF
$AA4    $5793   UNKNOWN  $5793           ; Unknown 5xxx instruction
$AA6    $A6D2   LD       I, $6D2         ; Load 6D2 into I
$AA8    $C185   RND      V1, #85         ; V1 = random & 85
$AAA    $97F0   SNE      V7, VF          ; Skip if V7 != VF
$AAC    $74CB   ADD      V4, #CB         ; Add 203 to V4
$AAE    $FA7C   UNKNOWN  FA7C            ; Unknown Fxxx instruction
$AB0    $2C0B   CALL     $C0B            ; Call subroutine at C0B
$AB2    $B864   JP       V0, $864        ; Jump to V0 + 864
$AB4    $608B   LD       V0, #8B         ; Load 139 into V0
$AB6    $6641   LD       V6, #41         ; Load 65 into V6
$AB8    $998F   UNKNOWN  $998F           ; Unknown 9xxx instruction
$ABA    $02E2   SYS      $2E2            ; System call to 2E2
$ABC    $F4BE   UNKNOWN  F4BE            ; Unknown Fxxx instruction
$ABE    $4890   SNE      V8, #90         ; Skip if V8 != 144
$AC0    $B749   JP       V0, $749        ; Jump to V0 + 749
$AC2    $A231   LD       I, $231         ; Load 231 into I
$AC4    $5766   UNKNOWN  $5766           ; Unknown 5xxx instruction
$AC6    $7080   ADD      V0, #80         ; Add 128 to V0
$AC8    $1CFB   JP       $CFB            ; Jump to CFB
$ACA    $76E0   ADD      V6, #E0         ; Add 224 to V6
$ACC    $6296   LD       V2, #96         ; Load 150 into V2
$ACE    $7434   ADD      V4, #34         ; Add 52 to V4
$AD0    $09C0   SYS      $9C0            ; System call to 9C0
$AD2    $F4FD   UNKNOWN  F4FD            ; Unknown Fxxx instruction
$AD4    $B693   JP       V0, $693        ; Jump to V0 + 693
$AD6    $D872   DRW      V8, V7, #2      ; Draw 2-byte sprite at V8, V7
$AD8    $FCE0   UNKNOWN  FCE0            ; Unknown Fxxx instruction
$ADA    $7D8B   ADD      VD, #8B         ; Add 139 to VD
$ADC    $4110   SNE      V1, #10         ; Skip if V1 != 16
$ADE    $666D   LD       V6, #6D         ; Load 109 into V6
$AE0    $A6A7   LD       I, $6A7         ; Load 6A7 into I
$AE2    $15D3   JP       $5D3            ; Jump to 5D3
$AE4    $5C50   SE       VC, V5          ; Skip if VC == V5
$AE6    $DF83   DRW      VF, V8, #3      ; Draw 3-byte sprite at VF, V8
$AE8    $645A   LD       V4, #5A         ; Load 90 into V4
$AEA    $6883   LD       V8, #83         ; Load 131 into V8
$AEC    $C625   RND      V6, #25         ; V6 = random & 25
$AEE    $D5E9   DRW      V5, VE, #9      ; Draw 9-byte sprite at V5, VE
$AF0    $5BB1   UNKNOWN  $5BB1           ; Unknown 5xxx instruction
$AF2    $53B7   UNKNOWN  $53B7           ; Unknown 5xxx instruction
$AF4    $0DF1   SYS      $DF1            ; System call to DF1
$AF6    $BB54   JP       V0, $B54        ; Jump to V0 + B54
$AF8    $70BF   ADD      V0, #BF         ; Add 191 to V0
$AFA    $402F   SNE      V0, #2F         ; Skip if V0 != 47
$AFC    $9E2F   UNKNOWN  $9E2F           ; Unknown 9xxx instruction
$AFE    $DDFA   DRW      VD, VF, #A      ; Draw 10-byte sprite at VD, VF
$B00    $663C   LD       V6, #3C         ; Load 60 into V6
$B02    $ABCD   LD       I, $BCD         ; Load BCD into I
$B04    $A5C6   LD       I, $5C6         ; Load 5C6 into I
$B06    $9D97   UNKNOWN  $9D97           ; Unknown 9xxx instruction
$B08    $28DA   CALL     $8DA            ; Call subroutine at 8DA
$B0A    $20D1   CALL     $0D1            ; Call subroutine at 0D1
$B0C    $870B   UNKNOWN  870B            ; Unknown 8xxx instruction
$B0E    $4082   SNE      V0, #82         ; Skip if V0 != 130
$B10    $E2CB   UNKNOWN  $E2CB           ; Unknown Exxx instruction
$B12    $4DBB   SNE      VD, #BB         ; Skip if VD != 187
$B14    $6D59   LD       VD, #59         ; Load 89 into VD
$B16    $F8A5   UNKNOWN  F8A5            ; Unknown Fxxx instruction
$B18    $B0E6   JP       V0, $0E6        ; Jump to V0 + 0E6
$B1A    $D8C3   DRW      V8, VC, #3      ; Draw 3-byte sprite at V8, VC
$B1C    $DEF0   DRW      VE, VF, #0      ; Draw 0-byte sprite at VE, VF
$B1E    $A294   LD       I, $294         ; Load 294 into I
$B20    $638C   LD       V3, #8C         ; Load 140 into V3
$B22    $706F   ADD      V0, #6F         ; Add 111 to V0
$B24    $8533   XOR      V5, V3          ; V5 ^= V3
$B26    $3A0F   SE       VA, #0F         ; Skip if VA == 15
$B28    $4884   SNE      V8, #84         ; Skip if V8 != 132
$B2A    $6BBC   LD       VB, #BC         ; Load 188 into VB
$B2C    $169A   JP       $69A            ; Jump to 69A
$B2E    $BAEB   JP       V0, $AEB        ; Jump to V0 + AEB
$B30    $93F7   UNKNOWN  $93F7           ; Unknown 9xxx instruction
$B32    $51DA   UNKNOWN  $51DA           ; Unknown 5xxx instruction
$B34    $A8CB   LD       I, $8CB         ; Load 8CB into I
$B36    $9DDC   UNKNOWN  $9DDC           ; Unknown 9xxx instruction
$B38    $A821   LD       I, $821         ; Load 821 into I
$B3A    $DE54   DRW      VE, V5, #4      ; Draw 4-byte sprite at VE, V5
$B3C    $502C   UNKNOWN  $502C           ; Unknown 5xxx instruction
$B3E    $C659   RND      V6, #59         ; V6 = random & 59
$B40    $FC4F   UNKNOWN  FC4F            ; Unknown Fxxx instruction
$B42    $2055   CALL     $055            ; Call subroutine at 055
$B44    $E29B   UNKNOWN  $E29B           ; Unknown Exxx instruction
$B46    $A194   LD       I, $194         ; Load 194 into I
$B48    $C816   RND      V8, #16         ; V8 = random & 16
$B4A    $DC52   DRW      VC, V5, #2      ; Draw 2-byte sprite at VC, V5
$B4C    $911F   UNKNOWN  $911F           ; Unknown 9xxx instruction
$B4E    $D7EB   DRW      V7, VE, #B      ; Draw 11-byte sprite at V7, VE
$B50    $BC8F   JP       V0, $C8F        ; Jump to V0 + C8F
$B52    $5CED   UNKNOWN  $5CED           ; Unknown 5xxx instruction
$B54    $E86D   UNKNOWN  $E86D           ; Unknown Exxx instruction
$B56    $D8A0   DRW      V8, VA, #0      ; Draw 0-byte sprite at V8, VA
$B58    $3CDD   SE       VC, #DD         ; Skip if VC == 221
$B5A    $9160   SNE      V1, V6          ; Skip if V1 != V6
$B5C    $4AFC   SNE      VA, #FC         ; Skip if VA != 252
$B5E    $678D   LD       V7, #8D         ; Load 141 into V7
$B60    $50A9   UNKNOWN  $50A9           ; Unknown 5xxx instruction
$B62    $5D70   SE       VD, V7          ; Skip if VD == V7
$B64    $3C4E   SE       VC, #4E         ; Skip if VC == 78
$B66    $8E68   UNKNOWN  8E68            ; Unknown 8xxx instruction
$B68    $CE55   RND      VE, #55         ; VE = random & 55
$B6A    $2648   CALL     $648            ; Call subroutine at 648
$B6C    $43FD   SNE      V3, #FD         ; Skip if V3 != 253
$B6E    $0D12   SYS      $D12            ; System call to D12
$B70    $BF95   JP       V0, $F95        ; Jump to V0 + F95
$B72    $DE93   DRW      VE, V9, #3      ; Draw 3-byte sprite at VE, V9
$B74    $97F2   UNKNOWN  $97F2           ; Unknown 9xxx instruction
$B76    $93E0   SNE      V3, VE          ; Skip if V3 != VE
$B78    $E828   UNKNOWN  $E828           ; Unknown Exxx instruction
$B7A    $4190   SNE      V1, #90         ; Skip if V1 != 144
$B7C    $A9D4   LD       I, $9D4         ; Load 9D4 into I
$B7E    $6CFB   LD       VC, #FB         ; Load 251 into VC
$B80    $B30C   JP       V0, $30C        ; Jump to V0 + 30C
$B82    $DF79   DRW      VF, V7, #9      ; Draw 9-byte sprite at VF, V7
$B84    $0450   SYS      $450            ; System call to 450
$B86    $13A7   JP       $3A7            ; Jump to 3A7
$B88    $7AD2   ADD      VA, #D2         ; Add 210 to VA
$B8A    $62A3   LD       V2, #A3         ; Load 163 into V2
$B8C    $7403   ADD      V4, #03         ; Add 3 to V4
$B8E    $4709   SNE      V7, #09         ; Skip if V7 != 9
$B90    $5B48   UNKNOWN  $5B48           ; Unknown 5xxx instruction
$B92    $644D   LD       V4, #4D         ; Load 77 into V4
$B94    $8B3C   UNKNOWN  8B3C            ; Unknown 8xxx instruction
$B96    $6393   LD       V3, #93         ; Load 147 into V3
$B98    $B362   JP       V0, $362        ; Jump to V0 + 362
$B9A    $6F3C   LD       VF, #3C         ; Load 60 into VF
$B9C    $E1AF   UNKNOWN  $E1AF           ; Unknown Exxx instruction
$B9E    $2A69   CALL     $A69            ; Call subroutine at A69
$BA0    $E192   UNKNOWN  $E192           ; Unknown Exxx instruction
$BA2    $A1B9   LD       I, $1B9         ; Load 1B9 into I
$BA4    $F469   UNKNOWN  F469            ; Unknown Fxxx instruction
$BA6    $5985   UNKNOWN  $5985           ; Unknown 5xxx instruction
$BA8    $CD87   RND      VD, #87         ; VD = random & 87
$BAA    $85F7   SUBN     V5, VF          ; V5 = VF - V5, VF = !borrow
$BAC    $CC54   RND      VC, #54         ; VC = random & 54
$BAE    $0529   SYS      $529            ; System call to 529
$BB0    $B025   JP       V0, $025        ; Jump to V0 + 025
$BB2    $629E   LD       V2, #9E         ; Load 158 into V2
$BB4    $D80F   DRW      V8, V0, #F      ; Draw 15-byte sprite at V8, V0
$BB6    $FDC6   UNKNOWN  FDC6            ; Unknown Fxxx instruction
$BB8    $A19F   LD       I, $19F         ; Load 19F into I
$BBA    $C639   RND      V6, #39         ; V6 = random & 39
$BBC    $D86D   DRW      V8, V6, #D      ; Draw 13-byte sprite at V8, V6
$BBE    $F21D   UNKNOWN  F21D            ; Unknown Fxxx instruction
$BC0    $E5D8   UNKNOWN  $E5D8           ; Unknown Exxx instruction
$BC2    $35AA   SE       V5, #AA         ; Skip if V5 == 170
$BC4    $A832   LD       I, $832         ; Load 832 into I
$BC6    $6778   LD       V7, #78         ; Load 120 into V7
$BC8    $BC2E   JP       V0, $C2E        ; Jump to V0 + C2E
$BCA    $361A   SE       V6, #1A         ; Skip if V6 == 26
$BCC    $CDE2   RND      VD, #E2         ; VD = random & E2
$BCE    $B44D   JP       V0, $44D        ; Jump to V0 + 44D
$BD0    $EE9D   UNKNOWN  $EE9D           ; Unknown Exxx instruction
$BD2    $1602   JP       $602            ; Jump to 602
$BD4    $C23C   RND      V2, #3C         ; V2 = random & 3C
$BD6    $03D8   SYS      $3D8            ; System call to 3D8
$BD8    $05CB   SYS      $5CB            ; System call to 5CB
$BDA    $8016   SHR      V0              ; V0 >>= 1, VF = LSB
$BDC    $942E   UNKNOWN  $942E           ; Unknown 9xxx instruction
$BDE    $B8B2   JP       V0, $8B2        ; Jump to V0 + 8B2
$BE0    $ABFD   LD       I, $BFD         ; Load BFD into I
$BE2    $C8CA   RND      V8, #CA         ; V8 = random & CA
$BE4    $FF84   UNKNOWN  FF84            ; Unknown Fxxx instruction
$BE6    $3A64   SE       VA, #64         ; Skip if VA == 100
$BE8    $9D9B   UNKNOWN  $9D9B           ; Unknown 9xxx instruction
$BEA    $D493   DRW      V4, V9, #3      ; Draw 3-byte sprite at V4, V9
$BEC    $584A   UNKNOWN  $584A           ; Unknown 5xxx instruction
$BEE    $D412   DRW      V4, V1, #2      ; Draw 2-byte sprite at V4, V1
$BF0    $997A   UNKNOWN  $997A           ; Unknown 9xxx instruction
$BF2    $C970   RND      V9, #70         ; V9 = random & 70
$BF4    $2881   CALL     $881            ; Call subroutine at 881
$BF6    $BAEE   JP       V0, $AEE        ; Jump to V0 + AEE
$BF8    $A8DC   LD       I, $8DC         ; Load 8DC into I
$BFA    $C09B   RND      V0, #9B         ; V0 = random & 9B
$BFC    $E616   UNKNOWN  $E616           ; Unknown Exxx instruction
$BFE    $ADB8   LD       I, $DB8         ; Load DB8 into I
$C00    $A7E3   LD       I, $7E3         ; Load 7E3 into I
$C02    $67E4   LD       V7, #E4         ; Load 228 into V7
$C04    $44BF   SNE      V4, #BF         ; Skip if V4 != 191
$C06    $4DCB   SNE      VD, #CB         ; Skip if VD != 203
$C08    $BBF2   JP       V0, $BF2        ; Jump to V0 + BF2
$C0A    $AC86   LD       I, $C86         ; Load C86 into I
$C0C    $4C81   SNE      VC, #81         ; Skip if VC != 129
$C0E    $78DE   ADD      V8, #DE         ; Add 222 to V8
$C10    $715B   ADD      V1, #5B         ; Add 91 to V1
$C12    $5E8C   UNKNOWN  $5E8C           ; Unknown 5xxx instruction
$C14    $BBFA   JP       V0, $BFA        ; Jump to V0 + BFA
$C16    $FD11   UNKNOWN  FD11            ; Unknown Fxxx instruction
$C18    $A74D   LD       I, $74D         ; Load 74D into I
$C1A    $8E8D   UNKNOWN  8E8D            ; Unknown 8xxx instruction
$C1C    $1F19   JP       $F19            ; Jump to F19
$C1E    $E4E8   UNKNOWN  $E4E8           ; Unknown Exxx instruction
$C20    $9FFA   UNKNOWN  $9FFA           ; Unknown 9xxx instruction
$C22    $5C81   UNKNOWN  $5C81           ; Unknown 5xxx instruction
$C24    $F066   UNKNOWN  F066            ; Unknown Fxxx instruction
$C26    $C3BE   RND      V3, #BE         ; V3 = random & BE
$C28    $6B7A   LD       VB, #7A         ; Load 122 into VB
$C2A    $67BF   LD       V7, #BF         ; Load 191 into V7
$C2C    $EF5F   UNKNOWN  $EF5F           ; Unknown Exxx instruction
$C2E    $99E3   UNKNOWN  $99E3           ; Unknown 9xxx instruction
$C30    $9B48   UNKNOWN  $9B48           ; Unknown 9xxx instruction
$C32    $EFEF   UNKNOWN  $EFEF           ; Unknown Exxx instruction
$C34    $3847   SE       V8, #47         ; Skip if V8 == 71
$C36    $937A   UNKNOWN  $937A           ; Unknown 9xxx instruction
$C38    $169F   JP       $69F            ; Jump to 69F
$C3A    $8CCC   UNKNOWN  8CCC            ; Unknown 8xxx instruction
$C3C    $90FF   UNKNOWN  $90FF           ; Unknown 9xxx instruction
$C3E    $95D2   UNKNOWN  $95D2           ; Unknown 9xxx instruction
$C40    $DFEC   DRW      VF, VE, #C      ; Draw 12-byte sprite at VF, VE
$C42    $9DDC   UNKNOWN  $9DDC           ; Unknown 9xxx instruction
$C44    $8F71   OR       VF, V7          ; VF |= V7
$C46    $BFAE   JP       V0, $FAE        ; Jump to V0 + FAE
$C48    $E776   UNKNOWN  $E776           ; Unknown Exxx instruction
$C4A    $ABA5   LD       I, $BA5         ; Load BA5 into I
$C4C    $6734   LD       V7, #34         ; Load 52 into V7
$C4E    $FA91   UNKNOWN  FA91            ; Unknown Fxxx instruction
$C50    $AAB2   LD       I, $AB2         ; Load AB2 into I
$C52    $CAE2   RND      VA, #E2         ; VA = random & E2
$C54    $AEB1   LD       I, $EB1         ; Load EB1 into I
$C56    $4231   SNE      V2, #31         ; Skip if V2 != 49
$C58    $714C   ADD      V1, #4C         ; Add 76 to V1
$C5A    $2F92   CALL     $F92            ; Call subroutine at F92
$C5C    $A1D1   LD       I, $1D1         ; Load 1D1 into I
$C5E    $9AE7   UNKNOWN  $9AE7           ; Unknown 9xxx instruction
$C60    $1ACF   JP       $ACF            ; Jump to ACF
$C62    $0CDC   SYS      $CDC            ; System call to CDC
$C64    $49E5   SNE      V9, #E5         ; Skip if V9 != 229
$C66    $1112   JP       $112            ; Jump to 112
$C68    $090E   SYS      $90E            ; System call to 90E
$C6A    $D9D7   DRW      V9, VD, #7      ; Draw 7-byte sprite at V9, VD
$C6C    $C080   RND      V0, #80         ; V0 = random & 80
$C6E    $EF59   UNKNOWN  $EF59           ; Unknown Exxx instruction
$C70    $C3B8   RND      V3, #B8         ; V3 = random & B8
$C72    $C5EF   RND      V5, #EF         ; V5 = random & EF
$C74    $EFED   UNKNOWN  $EFED           ; Unknown Exxx instruction
$C76    $F0F5   UNKNOWN  F0F5            ; Unknown Fxxx instruction
$C78    $821B   UNKNOWN  821B            ; Unknown 8xxx instruction
$C7A    $793D   ADD      V9, #3D         ; Add 61 to V9
$C7C    $5542   UNKNOWN  $5542           ; Unknown 5xxx instruction
$C7E    $50D5   UNKNOWN  $50D5           ; Unknown 5xxx instruction
$C80    $AF4C   LD       I, $F4C         ; Load F4C into I
$C82    $0A0A   SYS      $A0A            ; System call to A0A
$C84    $D618   DRW      V6, V1, #8      ; Draw 8-byte sprite at V6, V1
$C86    $C31F   RND      V3, #1F         ; V3 = random & 1F
$C88    $2AB0   CALL     $AB0            ; Call subroutine at AB0
$C8A    $745A   ADD      V4, #5A         ; Add 90 to V4
$C8C    $D71A   DRW      V7, V1, #A      ; Draw 10-byte sprite at V7, V1
$C8E    $D5E4   DRW      V5, VE, #4      ; Draw 4-byte sprite at V5, VE
$C90    $180B   JP       $80B            ; Jump to 80B
$C92    $43EC   SNE      V3, #EC         ; Skip if V3 != 236
$C94    $B2AC   JP       V0, $2AC        ; Jump to V0 + 2AC
$C96    $CD87   RND      VD, #87         ; VD = random & 87
$C98    $65BF   LD       V5, #BF         ; Load 191 into V5
$C9A    $F873   UNKNOWN  F873            ; Unknown Fxxx instruction
$C9C    $32F0   SE       V2, #F0         ; Skip if V2 == 240
$C9E    $4B72   SNE      VB, #72         ; Skip if VB != 114
$CA0    $C5FD   RND      V5, #FD         ; V5 = random & FD
$CA2    $E115   UNKNOWN  $E115           ; Unknown Exxx instruction
$CA4    $DD99   DRW      VD, V9, #9      ; Draw 9-byte sprite at VD, V9
$CA6    $8895   SUB      V8, V9          ; V8 -= V9, VF = !borrow
$CA8    $01D8   SYS      $1D8            ; System call to 1D8
$CAA    $5311   UNKNOWN  $5311           ; Unknown 5xxx instruction
$CAC    $CE72   RND      VE, #72         ; VE = random & 72
$CAE    $8E2E   SHL      VE              ; VE <<= 1, VF = MSB
$CB0    $2FE1   CALL     $FE1            ; Call subroutine at FE1
$CB2    $2546   CALL     $546            ; Call subroutine at 546
$CB4    $CD5A   RND      VD, #5A         ; VD = random & 5A
$CB6    $1660   JP       $660            ; Jump to 660
$CB8    $1D87   JP       $D87            ; Jump to D87
$CBA    $5C4B   UNKNOWN  $5C4B           ; Unknown 5xxx instruction
$CBC    $4277   SNE      V2, #77         ; Skip if V2 != 119
$CBE    $A03E   LD       I, $03E         ; Load 03E into I
$CC0    $DF58   DRW      VF, V5, #8      ; Draw 8-byte sprite at VF, V5
$CC2    $2D40   CALL     $D40            ; Call subroutine at D40
$CC4    $0173   SYS      $173            ; System call to 173
$CC6    $DB45   DRW      VB, V4, #5      ; Draw 5-byte sprite at VB, V4
$CC8    $E969   UNKNOWN  $E969           ; Unknown Exxx instruction
$CCA    $FF8F   UNKNOWN  FF8F            ; Unknown Fxxx instruction
$CCC    $C9DA   RND      V9, #DA         ; V9 = random & DA
$CCE    $AC0C   LD       I, $C0C         ; Load C0C into I
$CD0    $C542   RND      V5, #42         ; V5 = random & 42
$CD2    $37CF   SE       V7, #CF         ; Skip if V7 == 207
$CD4    $000E   SYS      $00E            ; System call to 00E
$CD6    $8E0C   UNKNOWN  8E0C            ; Unknown 8xxx instruction
$CD8    $37DD   SE       V7, #DD         ; Skip if V7 == 221
$CDA    $13F3   JP       $3F3            ; Jump to 3F3
$CDC    $7885   ADD      V8, #85         ; Add 133 to V8
$CDE    $E95B   UNKNOWN  $E95B           ; Unknown Exxx instruction
$CE0    $3B0D   SE       VB, #0D         ; Skip if VB == 13
$CE2    $8A2C   UNKNOWN  8A2C            ; Unknown 8xxx instruction
$CE4    $ADB3   LD       I, $DB3         ; Load DB3 into I
$CE6    $1AFF   JP       $AFF            ; Jump to AFF
$CE8    $1DD8   JP       $DD8            ; Jump to DD8
$CEA    $03D6   SYS      $3D6            ; System call to 3D6
$CEC    $7C7E   ADD      VC, #7E         ; Add 126 to VC
$CEE    $343F   SE       V4, #3F         ; Skip if V4 == 63
$CF0    $7A51   ADD      VA, #51         ; Add 81 to VA
$CF2    $F4F5   UNKNOWN  F4F5            ; Unknown Fxxx instruction
$CF4    $09BB   SYS      $9BB            ; System call to 9BB
$CF6    $4550   SNE      V5, #50         ; Skip if V5 != 80
$CF8    $FF6F   UNKNOWN  FF6F            ; Unknown Fxxx instruction
$CFA    $0BE3   SYS      $BE3            ; System call to BE3
$CFC    $C1B3   RND      V1, #B3         ; V1 = random & B3
$CFE    $7A55   ADD      VA, #55         ; Add 85 to VA
$D00    $4F0D   SNE      VF, #0D         ; Skip if VF != 13
$D02    $05CC   SYS      $5CC            ; System call to 5CC
$D04    $CD43   RND      VD, #43         ; VD = random & 43
$D06    $03AE   SYS      $3AE            ; System call to 3AE
$D08    $DF29   DRW      VF, V2, #9      ; Draw 9-byte sprite at VF, V2
$D0A    $A1E3   LD       I, $1E3         ; Load 1E3 into I
$D0C    $4768   SNE      V7, #68         ; Skip if V7 != 104
$D0E    $65AD   LD       V5, #AD         ; Load 173 into V5
$D10    $8890   LD       V8, V9          ; V8 = V9
$D12    $B6B1   JP       V0, $6B1        ; Jump to V0 + 6B1
$D14    $1043   JP       $043            ; Jump to 043
$D16    $ED3D   UNKNOWN  $ED3D           ; Unknown Exxx instruction
$D18    $87F4   ADD      V7, VF          ; V7 += VF, VF = carry
$D1A    $FC32   UNKNOWN  FC32            ; Unknown Fxxx instruction
$D1C    $936C   UNKNOWN  $936C           ; Unknown 9xxx instruction
$D1E    $F0E4   UNKNOWN  F0E4            ; Unknown Fxxx instruction
$D20    $B5BD   JP       V0, $5BD        ; Jump to V0 + 5BD
$D22    $2232   CALL     $232            ; Call subroutine at 232
$D24    $46BD   SNE      V6, #BD         ; Skip if V6 != 189
$D26    $A745   LD       I, $745         ; Load 745 into I
$D28    $D4D2   DRW      V4, VD, #2      ; Draw 2-byte sprite at V4, VD
$D2A    $2E3B   CALL     $E3B            ; Call subroutine at E3B
$D2C    $2405   CALL     $405            ; Call subroutine at 405
$D2E    $BE14   JP       V0, $E14        ; Jump to V0 + E14
$D30    $B0AB   JP       V0, $0AB        ; Jump to V0 + 0AB
$D32    $E1AD   UNKNOWN  $E1AD           ; Unknown Exxx instruction
$D34    $7B5F   ADD      VB, #5F         ; Add 95 to VB
$D36    $6FC2   LD       VF, #C2         ; Load 194 into VF
$D38    $7C08   ADD      VC, #08         ; Add 8 to VC
$D3A    $A69F   LD       I, $69F         ; Load 69F into I
$D3C    $B897   JP       V0, $897        ; Jump to V0 + 897
$D3E    $5D59   UNKNOWN  $5D59           ; Unknown 5xxx instruction
$D40    $D826   DRW      V8, V2, #6      ; Draw 6-byte sprite at V8, V2
$D42    $2222   CALL     $222            ; Call subroutine at 222
$D44    $4670   SNE      V6, #70         ; Skip if V6 != 112
$D46    $2255   CALL     $255            ; Call subroutine at 255
$D48    $5017   UNKNOWN  $5017           ; Unknown 5xxx instruction
$D4A    $1C52   JP       $C52            ; Jump to C52
$D4C    $C540   RND      V5, #40         ; V5 = random & 40
$D4E    $5AF5   UNKNOWN  $5AF5           ; Unknown 5xxx instruction
$D50    $6A2C   LD       VA, #2C         ; Load 44 into VA
$D52    $0FFB   SYS      $FFB            ; System call to FFB
$D54    $D4E3   DRW      V4, VE, #3      ; Draw 3-byte sprite at V4, VE
$D56    $506F   UNKNOWN  $506F           ; Unknown 5xxx instruction
$D58    $F45B   UNKNOWN  F45B            ; Unknown Fxxx instruction
$D5A    $DA62   DRW      VA, V6, #2      ; Draw 2-byte sprite at VA, V6
$D5C    $EF70   UNKNOWN  $EF70           ; Unknown Exxx instruction
$D5E    $9764   UNKNOWN  $9764           ; Unknown 9xxx instruction
$D60    $E829   UNKNOWN  $E829           ; Unknown Exxx instruction
$D62    $EFBC   UNKNOWN  $EFBC           ; Unknown Exxx instruction
$D64    $19E7   JP       $9E7            ; Jump to 9E7
$D66    $3BA6   SE       VB, #A6         ; Skip if VB == 166
$D68    $B329   JP       V0, $329        ; Jump to V0 + 329
$D6A    $6253   LD       V2, #53         ; Load 83 into V2
$D6C    $5BB9   UNKNOWN  $5BB9           ; Unknown 5xxx instruction
$D6E    $AA33   LD       I, $A33         ; Load A33 into I
$D70    $E6E4   UNKNOWN  $E6E4           ; Unknown Exxx instruction
$D72    $CE30   RND      VE, #30         ; VE = random & 30
$D74    $0BCD   SYS      $BCD            ; System call to BCD
$D76    $C7E4   RND      V7, #E4         ; V7 = random & E4
$D78    $DF13   DRW      VF, V1, #3      ; Draw 3-byte sprite at VF, V1
$D7A    $529C   UNKNOWN  $529C           ; Unknown 5xxx instruction
$D7C    $F755   LD       [I], V7         ; Store V0-V7 at I
$D7E    $6A16   LD       VA, #16         ; Load 22 into VA
$D80    $9EAA   UNKNOWN  $9EAA           ; Unknown 9xxx instruction
$D82    $5D9F   UNKNOWN  $5D9F           ; Unknown 5xxx instruction
$D84    $6CBB   LD       VC, #BB         ; Load 187 into VC
$D86    $4905   SNE      V9, #05         ; Skip if V9 != 5
$D88    $B7E7   JP       V0, $7E7        ; Jump to V0 + 7E7
$D8A    $394F   SE       V9, #4F         ; Skip if V9 == 79
$D8C    $5F5D   UNKNOWN  $5F5D           ; Unknown 5xxx instruction
$D8E    $52BB   UNKNOWN  $52BB           ; Unknown 5xxx instruction
$D90    $399D   SE       V9, #9D         ; Skip if V9 == 157
$D92    $252F   CALL     $52F            ; Call subroutine at 52F
$D94    $8C23   XOR      VC, V2          ; VC ^= V2
$D96    $EF84   UNKNOWN  $EF84           ; Unknown Exxx instruction
$D98    $7784   ADD      V7, #84         ; Add 132 to V7
$D9A    $1F02   JP       $F02            ; Jump to F02
$D9C    $08D9   SYS      $8D9            ; System call to 8D9
$D9E    $7E20   ADD      VE, #20         ; Add 32 to VE
$DA0    $5BE1   UNKNOWN  $5BE1           ; Unknown 5xxx instruction
$DA2    $219D   CALL     $19D            ; Call subroutine at 19D
$DA4    $B7BC   JP       V0, $7BC        ; Jump to V0 + 7BC
$DA6    $A352   LD       I, $352         ; Load 352 into I
$DA8    $2C54   CALL     $C54            ; Call subroutine at C54
$DAA    $BA25   JP       V0, $A25        ; Jump to V0 + A25
$DAC    $38C4   SE       V8, #C4         ; Skip if V8 == 196
$DAE    $56CD   UNKNOWN  $56CD           ; Unknown 5xxx instruction
$DB0    $4401   SNE      V4, #01         ; Skip if V4 != 1
$DB2    $F604   UNKNOWN  F604            ; Unknown Fxxx instruction
$DB4    $A3E9   LD       I, $3E9         ; Load 3E9 into I
$DB6    $3E5B   SE       VE, #5B         ; Skip if VE == 91
$DB8    $8F23   XOR      VF, V2          ; VF ^= V2
$DBA    $4B48   SNE      VB, #48         ; Skip if VB != 72
$DBC    $2714   CALL     $714            ; Call subroutine at 714
$DBE    $3FF6   SE       VF, #F6         ; Skip if VF == 246
$DC0    $7831   ADD      V8, #31         ; Add 49 to V8
$DC2    $044F   SYS      $44F            ; System call to 44F
$DC4    $0DAB   SYS      $DAB            ; System call to DAB
$DC6    $DC14   DRW      VC, V1, #4      ; Draw 4-byte sprite at VC, V1
$DC8    $CAF9   RND      VA, #F9         ; VA = random & F9
$DCA    $1188   JP       $188            ; Jump to 188
$DCC    $B8BE   JP       V0, $8BE        ; Jump to V0 + 8BE
$DCE    $F612   UNKNOWN  F612            ; Unknown Fxxx instruction
$DD0    $CD41   RND      VD, #41         ; VD = random & 41
$DD2    $8157   SUBN     V1, V5          ; V1 = V5 - V1, VF = !borrow
$DD4    $987A   UNKNOWN  $987A           ; Unknown 9xxx instruction
$DD6    $12A0   JP       $2A0            ; Jump to 2A0
$DD8    $869B   UNKNOWN  869B            ; Unknown 8xxx instruction
$DDA    $741A   ADD      V4, #1A         ; Add 26 to V4
$DDC    $6199   LD       V1, #99         ; Load 153 into V1
$DDE    $0125   SYS      $125            ; System call to 125
$DE0    $7428   ADD      V4, #28         ; Add 40 to V4
$DE2    $87BD   UNKNOWN  87BD            ; Unknown 8xxx instruction
$DE4    $A844   LD       I, $844         ; Load 844 into I
$DE6    $B62D   JP       V0, $62D        ; Jump to V0 + 62D
$DE8    $855B   UNKNOWN  855B            ; Unknown 8xxx instruction
$DEA    $3469   SE       V4, #69         ; Skip if V4 == 105
$DEC    $47E8   SNE      V7, #E8         ; Skip if V7 != 232
$DEE    $55D8   UNKNOWN  $55D8           ; Unknown 5xxx instruction
$DF0    $A6DD   LD       I, $6DD         ; Load 6DD into I
$DF2    $AD92   LD       I, $D92         ; Load D92 into I
$DF4    $CFB8   RND      VF, #B8         ; VF = random & B8
$DF6    $4A58   SNE      VA, #58         ; Skip if VA != 88
$DF8    $4CB2   SNE      VC, #B2         ; Skip if VC != 178
$DFA    $E024   UNKNOWN  $E024           ; Unknown Exxx instruction
$DFC    $5017   UNKNOWN  $5017           ; Unknown 5xxx instruction
$DFE    $1CB9   JP       $CB9            ; Jump to CB9
$E00    $D640   DRW      V6, V4, #0      ; Draw 0-byte sprite at V6, V4
$E02    $506E   UNKNOWN  $506E           ; Unknown 5xxx instruction
$E04    $D564   DRW      V5, V6, #4      ; Draw 4-byte sprite at V5, V6
$E06    $3335   SE       V3, #35         ; Skip if V3 == 53
$E08    $3F2C   SE       VF, #2C         ; Skip if VF == 44
$E0A    $84E3   XOR      V4, VE          ; V4 ^= VE
$E0C    $C5A8   RND      V5, #A8         ; V5 = random & A8
$E0E    $C3DF   RND      V3, #DF         ; V3 = random & DF
$E10    $3F64   SE       VF, #64         ; Skip if VF == 100
$E12    $17FA   JP       $7FA            ; Jump to 7FA
$E14    $07CC   SYS      $7CC            ; System call to 7CC
$E16    $D5FC   DRW      V5, VF, #C      ; Draw 12-byte sprite at V5, VF
$E18    $689E   LD       V8, #9E         ; Load 158 into V8
$E1A    $2CC1   CALL     $CC1            ; Call subroutine at CC1
$E1C    $169E   JP       $69E            ; Jump to 69E
$E1E    $6058   LD       V0, #58         ; Load 88 into V0
$E20    $3683   SE       V6, #83         ; Skip if V6 == 131
$E22    $A23C   LD       I, $23C         ; Load 23C into I
$E24    $9DCD   UNKNOWN  $9DCD           ; Unknown 9xxx instruction
$E26    $5079   UNKNOWN  $5079           ; Unknown 5xxx instruction
$E28    $1F0A   JP       $F0A            ; Jump to F0A
$E2A    $645B   LD       V4, #5B         ; Load 91 into V4
$E2C    $A278   LD       I, $278         ; Load 278 into I
$E2E    $4D0B   SNE      VD, #0B         ; Skip if VD != 11
$E30    $E6D4   UNKNOWN  $E6D4           ; Unknown Exxx instruction
$E32    $32F0   SE       V2, #F0         ; Skip if V2 == 240
$E34    $FA44   UNKNOWN  FA44            ; Unknown Fxxx instruction
$E36    $9544   UNKNOWN  $9544           ; Unknown 9xxx instruction
$E38    $F009   UNKNOWN  F009            ; Unknown Fxxx instruction
$E3A    $AFB8   LD       I, $FB8         ; Load FB8 into I
$E3C    $6CEF   LD       VC, #EF         ; Load 239 into VC
$E3E    $8F0A   UNKNOWN  8F0A            ; Unknown 8xxx instruction
$E40    $65F5   LD       V5, #F5         ; Load 245 into V5
$E42    $266A   CALL     $66A            ; Call subroutine at 66A
$E44    $B817   JP       V0, $817        ; Jump to V0 + 817
$E46    $863D   UNKNOWN  863D            ; Unknown 8xxx instruction
$E48    $5DE9   UNKNOWN  $5DE9           ; Unknown 5xxx instruction
$E4A    $23E4   CALL     $3E4            ; Call subroutine at 3E4
$E4C    $A8E6   LD       I, $8E6         ; Load 8E6 into I
$E4E    $5023   UNKNOWN  $5023           ; Unknown 5xxx instruction
$E50    $1677   JP       $677            ; Jump to 677
$E52    $69E5   LD       V9, #E5         ; Load 229 into V9
$E54    $3BD4   SE       VB, #D4         ; Skip if VB == 212
$E56    $BB48   JP       V0, $B48        ; Jump to V0 + B48
$E58    $AFBA   LD       I, $FBA         ; Load FBA into I
$E5A    $4D34   SNE      VD, #34         ; Skip if VD != 52
$E5C    $B827   JP       V0, $827        ; Jump to V0 + 827
$E5E    $67BF   LD       V7, #BF         ; Load 191 into V7
$E60    $2EC2   CALL     $EC2            ; Call subroutine at EC2
$E62    $5C66   UNKNOWN  $5C66           ; Unknown 5xxx instruction
$E64    $79C8   ADD      V9, #C8         ; Add 200 to V9
$E66    $748E   ADD      V4, #8E         ; Add 142 to V4
$E68    $9FE5   UNKNOWN  $9FE5           ; Unknown 9xxx instruction
$E6A    $07A4   SYS      $7A4            ; System call to 7A4
$E6C    $7D6E   ADD      VD, #6E         ; Add 110 to VD
$E6E    $8EBE   SHL      VE              ; VE <<= 1, VF = MSB
$E70    $FEE7   UNKNOWN  FEE7            ; Unknown Fxxx instruction
$E72    $E277   UNKNOWN  $E277           ; Unknown Exxx instruction
$E74    $A3B8   LD       I, $3B8         ; Load 3B8 into I
$E76    $9BDC   UNKNOWN  $9BDC           ; Unknown 9xxx instruction
$E78    $0E83   SYS      $E83            ; System call to E83
$E7A    $F928   UNKNOWN  F928            ; Unknown Fxxx instruction
$E7C    $3EF4   SE       VE, #F4         ; Skip if VE == 244
$E7E    $E58F   UNKNOWN  $E58F           ; Unknown Exxx instruction
$E80    $2A31   CALL     $A31            ; Call subroutine at A31
$E82    $07E9   SYS      $7E9            ; System call to 7E9
$E84    $6EFF   LD       VE, #FF         ; Load 255 into VE
$E86    $1FE4   JP       $FE4            ; Jump to FE4
$E88    $79E7   ADD      V9, #E7         ; Add 231 to V9
$E8A    $D33B   DRW      V3, V3, #B      ; Draw 11-byte sprite at V3, V3
$E8C    $9883   UNKNOWN  $9883           ; Unknown 9xxx instruction
$E8E    $D2FD   DRW      V2, VF, #D      ; Draw 13-byte sprite at V2, VF
$E90    $CF86   RND      VF, #86         ; VF = random & 86
$E92    $6FA4   LD       VF, #A4         ; Load 164 into VF
$E94    $C484   RND      V4, #84         ; V4 = random & 84
$E96    $0504   SYS      $504            ; System call to 504
$E98    $3717   SE       V7, #17         ; Skip if V7 == 23
$E9A    $1C22   JP       $C22            ; Jump to C22
$E9C    $82A1   OR       V2, VA          ; V2 |= VA
$E9E    $9A71   UNKNOWN  $9A71           ; Unknown 9xxx instruction
$EA0    $D54B   DRW      V5, V4, #B      ; Draw 11-byte sprite at V5, V4
$EA2    $FB9A   UNKNOWN  FB9A            ; Unknown Fxxx instruction
$EA4    $83C4   ADD      V3, VC          ; V3 += VC, VF = carry
$EA6    $A558   LD       I, $558         ; Load 558 into I
$EA8    $0BE2   SYS      $BE2            ; System call to BE2
$EAA    $91BE   UNKNOWN  $91BE           ; Unknown 9xxx instruction
$EAC    $49EF   SNE      V9, #EF         ; Skip if V9 != 239
$EAE    $50A9   UNKNOWN  $50A9           ; Unknown 5xxx instruction
$EB0    $F9C1   UNKNOWN  F9C1            ; Unknown Fxxx instruction
$EB2    $ADFD   LD       I, $DFD         ; Load DFD into I
$EB4    $1C20   JP       $C20            ; Jump to C20
$EB6    $4386   SNE      V3, #86         ; Skip if V3 != 134
$EB8    $5DBC   UNKNOWN  $5DBC           ; Unknown 5xxx instruction
$EBA    $9E40   SNE      VE, V4          ; Skip if VE != V4
$EBC    $9CA2   UNKNOWN  $9CA2           ; Unknown 9xxx instruction
$EBE    $DD18   DRW      VD, V1, #8      ; Draw 8-byte sprite at VD, V1
$EC0    $2570   CALL     $570            ; Call subroutine at 570
$EC2    $5F05   UNKNOWN  $5F05           ; Unknown 5xxx instruction
$EC4    $0E00   SYS      $E00            ; System call to E00
$EC6    $78BF   ADD      V8, #BF         ; Add 191 to V8
$EC8    $85E2   AND      V5, VE          ; V5 &= VE
$ECA    $7871   ADD      V8, #71         ; Add 113 to V8
$ECC    $430F   SNE      V3, #0F         ; Skip if V3 != 15
$ECE    $9496   UNKNOWN  $9496           ; Unknown 9xxx instruction
$ED0    $086B   SYS      $86B            ; System call to 86B
$ED2    $87B5   SUB      V7, VB          ; V7 -= VB, VF = !borrow
$ED4    $E08A   UNKNOWN  $E08A           ; Unknown Exxx instruction
$ED6    $D838   DRW      V8, V3, #8      ; Draw 8-byte sprite at V8, V3
$ED8    $F235   UNKNOWN  F235            ; Unknown Fxxx instruction
$EDA    $5ED2   UNKNOWN  $5ED2           ; Unknown 5xxx instruction
$EDC    $9581   UNKNOWN  $9581           ; Unknown 9xxx instruction
$EDE    $0CC1   SYS      $CC1            ; System call to CC1
$EE0    $477B   SNE      V7, #7B         ; Skip if V7 != 123
$EE2    $79A6   ADD      V9, #A6         ; Add 166 to V9
$EE4    $B457   JP       V0, $457        ; Jump to V0 + 457
$EE6    $4889   SNE      V8, #89         ; Skip if V8 != 137
$EE8    $5C28   UNKNOWN  $5C28           ; Unknown 5xxx instruction
$EEA    $F27C   UNKNOWN  F27C            ; Unknown Fxxx instruction
$EEC    $D4EF   DRW      V4, VE, #F      ; Draw 15-byte sprite at V4, VE
$EEE    $607F   LD       V0, #7F         ; Load 127 into V0
$EF0    $8FE9   UNKNOWN  8FE9            ; Unknown 8xxx instruction
$EF2    $4855   SNE      V8, #55         ; Skip if V8 != 85
$EF4    $F54B   UNKNOWN  F54B            ; Unknown Fxxx instruction
$EF6    $34C8   SE       V4, #C8         ; Skip if V4 == 200
$EF8    $8C12   AND      VC, V1          ; VC &= V1
$EFA    $493D   SNE      V9, #3D         ; Skip if V9 != 61
$EFC    $7057   ADD      V0, #57         ; Add 87 to V0
$EFE    $7BAA   ADD      VB, #AA         ; Add 170 to VB
$F00    $B641   JP       V0, $641        ; Jump to V0 + 641
$F02    $4035   SNE      V0, #35         ; Skip if V0 != 53
$F04    $6DAB   LD       VD, #AB         ; Load 171 into VD
$F06    $C7E9   RND      V7, #E9         ; V7 = random & E9
$F08    $A0BD   LD       I, $0BD         ; Load 0BD into I
$F0A    $753E   ADD      V5, #3E         ; Add 62 to V5
$F0C    $0D4F   SYS      $D4F            ; System call to D4F
$F0E    $51DE   UNKNOWN  $51DE           ; Unknown 5xxx instruction
$F10    $7603   ADD      V6, #03         ; Add 3 to V6
$F12    $ED0E   UNKNOWN  $ED0E           ; Unknown Exxx instruction
$F14    $E1F7   UNKNOWN  $E1F7           ; Unknown Exxx instruction
$F16    $DFB9   DRW      VF, VB, #9      ; Draw 9-byte sprite at VF, VB
$F18    $42E6   SNE      V2, #E6         ; Skip if V2 != 230
$F1A    $EC26   UNKNOWN  $EC26           ; Unknown Exxx instruction
$F1C    $F9A4   UNKNOWN  F9A4            ; Unknown Fxxx instruction
$F1E    $D71D   DRW      V7, V1, #D      ; Draw 13-byte sprite at V7, V1
$F20    $2B67   CALL     $B67            ; Call subroutine at B67
$F22    $323A   SE       V2, #3A         ; Skip if V2 == 58
$F24    $2295   CALL     $295            ; Call subroutine at 295
$F26    $9675   UNKNOWN  $9675           ; Unknown 9xxx instruction
$F28    $743C   ADD      V4, #3C         ; Add 60 to V4
$F2A    $0A7C   SYS      $A7C            ; System call to A7C
$F2C    $8B0B   UNKNOWN  8B0B            ; Unknown 8xxx instruction
$F2E    $554C   UNKNOWN  $554C           ; Unknown 5xxx instruction
$F30    $4E3E   SNE      VE, #3E         ; Skip if VE != 62
$F32    $0408   SYS      $408            ; System call to 408
$F34    $05F9   SYS      $5F9            ; System call to 5F9
$F36    $E728   UNKNOWN  $E728           ; Unknown Exxx instruction
$F38    $BD52   JP       V0, $D52        ; Jump to V0 + D52
$F3A    $5171   UNKNOWN  $5171           ; Unknown 5xxx instruction
$F3C    $8EB0   LD       VE, VB          ; VE = VB
$F3E    $DC64   DRW      VC, V6, #4      ; Draw 4-byte sprite at VC, V6
$F40    $073A   SYS      $73A            ; System call to 73A
$F42    $93B5   UNKNOWN  $93B5           ; Unknown 9xxx instruction
$F44    $DE11   DRW      VE, V1, #1      ; Draw 1-byte sprite at VE, V1
$F46    $86FC   UNKNOWN  86FC            ; Unknown 8xxx instruction
$F48    $227C   CALL     $27C            ; Call subroutine at 27C
$F4A    $9334   UNKNOWN  $9334           ; Unknown 9xxx instruction
$F4C    $A7B2   LD       I, $7B2         ; Load 7B2 into I
$F4E    $BED6   JP       V0, $ED6        ; Jump to V0 + ED6
$F50    $B7AC   JP       V0, $7AC        ; Jump to V0 + 7AC
$F52    $DCFE   DRW      VC, VF, #E      ; Draw 14-byte sprite at VC, VF
$F54    $D073   DRW      V0, V7, #3      ; Draw 3-byte sprite at V0, V7
$F56    $70F3   ADD      V0, #F3         ; Add 243 to V0
$F58    $8BDF   UNKNOWN  8BDF            ; Unknown 8xxx instruction
$F5A    $81DD   UNKNOWN  81DD            ; Unknown 8xxx instruction
$F5C    $3CF3   SE       VC, #F3         ; Skip if VC == 243
$F5E    $442B   SNE      V4, #2B         ; Skip if V4 != 43
$F60    $4F44   SNE      VF, #44         ; Skip if VF != 68
$F62    $AB61   LD       I, $B61         ; Load B61 into I
$F64    $5613   UNKNOWN  $5613           ; Unknown 5xxx instruction
$F66    $9694   UNKNOWN  $9694           ; Unknown 9xxx instruction
$F68    $FD64   UNKNOWN  FD64            ; Unknown Fxxx instruction
$F6A    $6901   LD       V9, #01         ; Load 1 into V9
$F6C    $EE08   UNKNOWN  $EE08           ; Unknown Exxx instruction
$F6E    $F38D   UNKNOWN  F38D            ; Unknown Fxxx instruction
$F70    $8269   UNKNOWN  8269            ; Unknown 8xxx instruction
$F72    $556A   UNKNOWN  $556A           ; Unknown 5xxx instruction
$F74    $447D   SNE      V4, #7D         ; Skip if V4 != 125
$F76    $6806   LD       V8, #06         ; Load 6 into V8
$F78    $0A04   SYS      $A04            ; System call to A04
$F7A    $8AB9   UNKNOWN  8AB9            ; Unknown 8xxx instruction
$F7C    $4E7A   SNE      VE, #7A         ; Skip if VE != 122
$F7E    $BC23   JP       V0, $C23        ; Jump to V0 + C23
$F80    $CE36   RND      VE, #36         ; VE = random & 36
$F82    $A7FC   LD       I, $7FC         ; Load 7FC into I
$F84    $AD16   LD       I, $D16         ; Load D16 into I
$F86    $358E   SE       V5, #8E         ; Skip if V5 == 142
$F88    $6B42   LD       VB, #42         ; Load 66 into VB
$F8A    $B8DE   JP       V0, $8DE        ; Jump to V0 + 8DE
$F8C    $1A41   JP       $A41            ; Jump to A41
$F8E    $7301   ADD      V3, #01         ; Add 1 to V3
$F90    $C209   RND      V2, #09         ; V2 = random & 09
$F92    $EEEE   UNKNOWN  $EEEE           ; Unknown Exxx instruction
$F94    $9EF2   UNKNOWN  $9EF2           ; Unknown 9xxx instruction
$F96    $A59D   LD       I, $59D         ; Load 59D into I
$F98    $0451   SYS      $451            ; System call to 451
$F9A    $69E9   LD       V9, #E9         ; Load 233 into V9
$F9C    $35B4   SE       V5, #B4         ; Skip if V5 == 180
$F9E    $9794   UNKNOWN  $9794           ; Unknown 9xxx instruction
$FA0    $4068   SNE      V0, #68         ; Skip if V0 != 104
$FA2    $7C25   ADD      VC, #25         ; Add 37 to VC
$FA4    $1388   JP       $388            ; Jump to 388
$FA6    $6559   LD       V5, #59         ; Load 89 into V5
$FA8    $BD1B   JP       V0, $D1B        ; Jump to V0 + D1B
$FAA    $8002   AND      V0, V0          ; V0 &= V0
$FAC    $5045   UNKNOWN  $5045           ; Unknown 5xxx instruction
$FAE    $3134   SE       V1, #34         ; Skip if V1 == 52
$FB0    $759F   ADD      V5, #9F         ; Add 159 to V5
$FB2    $7606   ADD      V6, #06         ; Add 6 to V6
$FB4    $09AE   SYS      $9AE            ; System call to 9AE
$FB6    $22C3   CALL     $2C3            ; Call subroutine at 2C3
$FB8    $9154   UNKNOWN  $9154           ; Unknown 9xxx instruction
$FBA    $2C87   CALL     $C87            ; Call subroutine at C87
$FBC    $38FB   SE       V8, #FB         ; Skip if V8 == 251
$FBE    $6887   LD       V8, #87         ; Load 135 into V8
$FC0    $9CFC   UNKNOWN  $9CFC           ; Unknown 9xxx instruction
$FC2    $EAF6   UNKNOWN  $EAF6           ; Unknown Exxx instruction
$FC4    $5DDC   UNKNOWN  $5DDC           ; Unknown 5xxx instruction
$FC6    $6541   LD       V5, #41         ; Load 65 into V5
$FC8    $80D4   ADD      V0, VD          ; V0 += VD, VF = carry
$FCA    $BBA3   JP       V0, $BA3        ; Jump to V0 + BA3
$FCC    $5232   UNKNOWN  $5232           ; Unknown 5xxx instruction
$FCE    $C672   RND      V6, #72         ; V6 = random & 72
$FD0    $768D   ADD      V6, #8D         ; Add 141 to V6
$FD2    $FCDB   UNKNOWN  FCDB            ; Unknown Fxxx instruction
$FD4    $4C90   SNE      VC, #90         ; Skip if VC != 144
$FD6    $A20A   LD       I, $20A         ; Load 20A into I
$FD8    $0174   SYS      $174            ; System call to 174
$FDA    $737F   ADD      V3, #7F         ; Add 127 to V3
$FDC    $AA82   LD       I, $A82         ; Load A82 into I
$FDE    $A145   LD       I, $145         ; Load 145 into I
$FE0    $7B1D   ADD      VB, #1D         ; Add 29 to VB
$FE2    $CEDA   RND      VE, #DA         ; VE = random & DA
$FE4    $325A   SE       V2, #5A         ; Skip if V2 == 90
$FE6    $F10C   UNKNOWN  F10C            ; Unknown Fxxx instruction
$FE8    $6460   LD       V4, #60         ; Load 96 into V4
$FEA    $F7A8   UNKNOWN  F7A8            ; Unknown Fxxx instruction
$FEC    $C64A   RND      V6, #4A         ; V6 = random & 4A
$FEE    $E3B0   UNKNOWN  $E3B0           ; Unknown Exxx instruction
$FF0    $A037   LD       I, $037         ; Load 037 into I
$FF2    $9E06   UNKNOWN  $9E06           ; Unknown 9xxx instruction
$FF4    $0C1D   SYS      $C1D            ; System call to C1D
$FF6    $EEC7   UNKNOWN  $EEC7           ; Unknown Exxx instruction
$FF8    $F668   UNKNOWN  F668            ; Unknown Fxxx instruction
$FFA    $CD7A   RND      VD, #7A         ; VD = random & 7A
$FFC    $4626   SNE      V6, #26         ; Skip if V6 != 38
$FFE    $255C   CALL     $55C            ; Call subroutine at 55C

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 494 (27.6%)
  LD      : 260 (14.5%)
  JP      : 207 (11.6%)
  SYS     : 129 ( 7.2%)
  ADD     : 120 ( 6.7%)
  DRW     : 110 ( 6.1%)
  SE      : 110 ( 6.1%)
  RND     : 109 ( 6.1%)
  CALL    : 105 ( 5.9%)
  SNE     : 105 ( 5.9%)
  XOR     :  11 ( 0.6%)
  SUBN    :   9 ( 0.5%)
  AND     :   8 ( 0.4%)
  OR      :   6 ( 0.3%)
  SUB     :   4 ( 0.2%)
  SHL     :   3 ( 0.2%)
  SHR     :   2 ( 0.1%)

Memory Operations: 380 (21.2%)
Arithmetic Operations: 158 (8.8%)
