
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B6950D01_I37513_C1001_3832d5839377.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 6950
Instance: 37513
Direction: ascending
Final Array: [1, 4, 9, 17, 105, 188, 193, 213]
Operations: R:0 W:1 C:24 S:1

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 108
Sort Array References:
  $20E: LD I, $C94 ; Load C94 into I
  $238: LD I, $1DE ; Load 1DE into I
  $250: LD I, $4E5 ; Load 4E5 into I
  $26A: LD I, $134 ; Load 134 into I
  $29A: LD I, $D4E ; Load D4E into I
  $29C: LD [I], VB ; Store V0-VB at I
  $2B4: LD I, $08D ; Load 08D into I
  $2D0: LD I, $73A ; Load 73A into I
  $2E4: LD I, $A6B ; Load A6B into I
  $2EA: LD I, $3FE ; Load 3FE into I
  $332: LD I, $66C ; Load 66C into I
  $38A: LD I, $BF0 ; Load BF0 into I
  $39A: LD I, $912 ; Load 912 into I
  $3AE: LD I, $ED4 ; Load ED4 into I
  $3E4: LD I, $83C ; Load 83C into I
  $404: LD I, $715 ; Load 715 into I
  $424: LD I, $0D3 ; Load 0D3 into I
  $476: LD I, $62A ; Load 62A into I
  $480: LD I, $AEF ; Load AEF into I
  $496: LD I, $765 ; Load 765 into I
  $49E: LD I, $AD7 ; Load AD7 into I
  $4B2: LD I, $E78 ; Load E78 into I
  $4E6: LD I, $684 ; Load 684 into I
  $4EE: LD I, $BF6 ; Load BF6 into I
  $4F4: LD I, $94E ; Load 94E into I
  $50A: LD I, $62E ; Load 62E into I
  $522: LD I, $AC7 ; Load AC7 into I
  $558: LD I, $342 ; Load 342 into I
  $582: LD I, $7BC ; Load 7BC into I
  $5AE: LD I, $788 ; Load 788 into I
  $5C8: LD I, $AE6 ; Load AE6 into I
  $5F2: LD I, $B97 ; Load B97 into I
  $60C: LD I, $5AE ; Load 5AE into I
  $618: LD I, $5B2 ; Load 5B2 into I
  $656: LD I, $963 ; Load 963 into I
  $68A: LD I, $3C2 ; Load 3C2 into I
  $698: LD I, $964 ; Load 964 into I
  $6EA: LD I, $1DF ; Load 1DF into I
  $704: LD I, $E5B ; Load E5B into I
  $724: LD I, $A62 ; Load A62 into I
  $75E: LD I, $360 ; Load 360 into I
  $762: LD I, $A32 ; Load A32 into I
  $7B4: LD I, $866 ; Load 866 into I
  $7C8: LD I, $909 ; Load 909 into I
  $7EE: LD I, $B0D ; Load B0D into I
  $820: LD I, $636 ; Load 636 into I
  $836: ADD I, VC ; I ADDRESS MANIPULATION
  $846: LD I, $F8C ; Load F8C into I
  $848: LD I, $0DD ; Load 0DD into I
  $882: LD I, $BE2 ; Load BE2 into I
  $892: LD I, $2D3 ; Load 2D3 into I
  $8A6: LD I, $B35 ; Load B35 into I
  $8C2: LD I, $3B2 ; Load 3B2 into I
  $8C6: LD I, $F92 ; Load F92 into I
  $8E2: LD I, $0A4 ; Load 0A4 into I
  $904: LD I, $051 ; Load 051 into I
  $908: LD I, $A98 ; Load A98 into I
  $93A: LD I, $94B ; Load 94B into I
  $982: LD I, $6CB ; Load 6CB into I
  $984: LD I, $223 ; Load 223 into I
  $9D4: ADD I, V9 ; I ADDRESS MANIPULATION
  $9F0: LD I, $A91 ; Load A91 into I
  $A14: LD I, $BD4 ; Load BD4 into I
  $A30: LD I, $210 ; Load 210 into I
  $A4A: LD I, $F23 ; Load F23 into I
  $A8A: LD I, $B82 ; Load B82 into I
  $AA0: LD I, $9D2 ; Load 9D2 into I
  $B14: LD I, $5CE ; Load 5CE into I
  $B16: LD I, $662 ; Load 662 into I
  $B20: LD I, $93D ; Load 93D into I
  $B72: LD I, $603 ; Load 603 into I
  $B82: ADD I, V6 ; I ADDRESS MANIPULATION
  $B8A: LD I, $3C5 ; Load 3C5 into I
  $B8C: LD I, $7FC ; Load 7FC into I
  $BA8: LD I, $28F ; Load 28F into I
  $BB4: LD I, $3A9 ; Load 3A9 into I
  $C04: LD I, $7B1 ; Load 7B1 into I
  $C1A: LD I, $F6F ; Load F6F into I
  $C1E: LD I, $376 ; Load 376 into I
  $C36: LD I, $9B2 ; Load 9B2 into I
  $C4A: LD I, $227 ; Load 227 into I
  $C54: LD I, $5E5 ; Load 5E5 into I
  $C60: LD I, $AE3 ; Load AE3 into I
  $CA8: LD I, $939 ; Load 939 into I
  $CBC: LD I, $B24 ; Load B24 into I
  $CFA: LD I, $849 ; Load 849 into I
  $CFE: LD I, $6F1 ; Load 6F1 into I
  $D34: LD I, $FEB ; Load FEB into I
  $D38: LD I, $E7C ; Load E7C into I
  $D62: LD I, $E76 ; Load E76 into I
  $D72: LD I, $7F7 ; Load 7F7 into I
  $D80: LD I, $877 ; Load 877 into I
  $D82: LD I, $60F ; Load 60F into I
  $DC6: LD I, $8C8 ; Load 8C8 into I
  $DD2: LD I, $A1C ; Load A1C into I
  $E5A: LD I, $089 ; Load 089 into I
  $E76: LD I, $2CF ; Load 2CF into I
  $EBA: LD I, $CAC ; Load CAC into I
  $ED2: LD I, $09E ; Load 09E into I
  $EFC: LD I, $98D ; Load 98D into I
  $F08: LD I, $DA8 ; Load DA8 into I
  $F1E: LD I, $0BB ; Load 0BB into I
  $F28: LD I, $F58 ; Load F58 into I
  $F2C: LD I, $0FE ; Load 0FE into I
  $F4A: LD I, $3EA ; Load 3EA into I
  $F50: LD I, $599 ; Load 599 into I
  $F6E: LD I, $3DD ; Load 3DD into I
  $FAE: LD I, $FE8 ; Load FE8 into I

CONTROL FLOW ANALYSIS:
Jumps: 208
Calls: 109
Branches: 256
Loops: 113
Loop Structures:
  $2C2 -> $0C6 (backward jump)
  $30A -> $1B1 (backward jump)
  $390 -> $1F3 (backward jump)
  $394 -> $346 (backward jump)
  $3BC -> $09C (backward jump)
  $3C6 -> $23D (backward jump)
  $3D2 -> $18E (backward jump)
  $3F6 -> $3CC (backward jump)
  $3FE -> $22C (backward jump)
  $450 -> $118 (backward jump)
  $498 -> $271 (backward jump)
  $4B8 -> $408 (backward jump)
  $4FE -> $385 (backward jump)
  $510 -> $378 (backward jump)
  $546 -> $435 (backward jump)
  $568 -> $015 (backward jump)
  $56E -> $068 (backward jump)
  $57A -> $24A (backward jump)
  $57E -> $178 (backward jump)
  $58E -> $205 (backward jump)
  $5CC -> $22C (backward jump)
  $616 -> $54B (backward jump)
  $66A -> $3D7 (backward jump)
  $6AA -> $3D9 (backward jump)
  $728 -> $720 (backward jump)
  $740 -> $5C7 (backward jump)
  $76C -> $162 (backward jump)
  $774 -> $3C7 (backward jump)
  $796 -> $082 (backward jump)
  $79A -> $129 (backward jump)
  $7A6 -> $0E2 (backward jump)
  $7F6 -> $6CA (backward jump)
  $824 -> $6A9 (backward jump)
  $8D0 -> $45C (backward jump)
  $934 -> $8AD (backward jump)
  $966 -> $58E (backward jump)
  $97A -> $6A4 (backward jump)
  $98A -> $095 (backward jump)
  $998 -> $8E8 (backward jump)
  $99E -> $364 (backward jump)
  $9A4 -> $1C8 (backward jump)
  $9C4 -> $463 (backward jump)
  $9C8 -> $504 (backward jump)
  $A02 -> $76F (backward jump)
  $A42 -> $156 (backward jump)
  $A48 -> $6A6 (backward jump)
  $A5A -> $971 (backward jump)
  $A94 -> $7F3 (backward jump)
  $AEE -> $344 (backward jump)
  $AFC -> $1E7 (backward jump)
  $B00 -> $366 (backward jump)
  $B04 -> $6A0 (backward jump)
  $B32 -> $5AC (backward jump)
  $B66 -> $B51 (backward jump)
  $B6E -> $A8C (backward jump)
  $BAC -> $69B (backward jump)
  $BC6 -> $67D (backward jump)
  $BCA -> $276 (backward jump)
  $BD0 -> $881 (backward jump)
  $BD6 -> $6BD (backward jump)
  $BE6 -> $919 (backward jump)
  $BFC -> $6FF (backward jump)
  $C22 -> $8A2 (backward jump)
  $C30 -> $110 (backward jump)
  $C32 -> $AAB (backward jump)
  $C5A -> $3B2 (backward jump)
  $C74 -> $1B2 (backward jump)
  $C9A -> $48F (backward jump)
  $C9E -> $B8B (backward jump)
  $CA4 -> $66B (backward jump)
  $CAA -> $01D (backward jump)
  $CB6 -> $6F2 (backward jump)
  $CC0 -> $439 (backward jump)
  $CCE -> $8CD (backward jump)
  $CEC -> $038 (backward jump)
  $D18 -> $001 (backward jump)
  $D2C -> $77E (backward jump)
  $D36 -> $77F (backward jump)
  $D3E -> $3C3 (backward jump)
  $D42 -> $C5D (backward jump)
  $D46 -> $86D (backward jump)
  $D5A -> $64F (backward jump)
  $D8E -> $B6F (backward jump)
  $D90 -> $0CD (backward jump)
  $DAE -> $2CE (backward jump)
  $DD0 -> $996 (backward jump)
  $DE2 -> $DD4 (backward jump)
  $E0E -> $751 (backward jump)
  $E14 -> $256 (backward jump)
  $E16 -> $88E (backward jump)
  $E18 -> $CF3 (backward jump)
  $E20 -> $647 (backward jump)
  $E4E -> $068 (backward jump)
  $E58 -> $D5C (backward jump)
  $E5C -> $D26 (backward jump)
  $E60 -> $030 (backward jump)
  $E74 -> $CD7 (backward jump)
  $EAA -> $3EC (backward jump)
  $EB2 -> $479 (backward jump)
  $ECC -> $6AB (backward jump)
  $EE4 -> $DCE (backward jump)
  $EF8 -> $3E5 (backward jump)
  $EFA -> $2E8 (backward jump)
  $F04 -> $CAE (backward jump)
  $F16 -> $034 (backward jump)
  $F20 -> $64B (backward jump)
  $F36 -> $E4E (backward jump)
  $F4E -> $AF8 (backward jump)
  $F5C -> $A90 (backward jump)
  $F94 -> $265 (backward jump)
  $F9A -> $B18 (backward jump)
  $F9C -> $F5A (backward jump)
  $FBA -> $038 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $47F8   SNE      V7, #F8         ; Skip if V7 != 248
$202    $4D6E   SNE      VD, #6E         ; Skip if VD != 110
$204    $32A0   SE       V2, #A0         ; Skip if V2 == 160
$206    $6EA5   LD       VE, #A5         ; Load 165 into VE
$208    $3C72   SE       VC, #72         ; Skip if VC == 114
$20A    $F397   UNKNOWN  F397            ; Unknown Fxxx instruction
$20C    $6325   LD       V3, #25         ; Load 37 into V3
$20E    $AC94   LD       I, $C94         ; Load C94 into I
$210    $8290   LD       V2, V9          ; V2 = V9
$212    $50F6   UNKNOWN  $50F6           ; Unknown 5xxx instruction
$214    $BD32   JP       V0, $D32        ; Jump to V0 + D32
$216    $FB72   UNKNOWN  FB72            ; Unknown Fxxx instruction
$218    $F6BC   UNKNOWN  F6BC            ; Unknown Fxxx instruction
$21A    $3878   SE       V8, #78         ; Skip if V8 == 120
$21C    $8AB7   SUBN     VA, VB          ; VA = VB - VA, VF = !borrow
$21E    $4624   SNE      V6, #24         ; Skip if V6 != 36
$220    $F977   UNKNOWN  F977            ; Unknown Fxxx instruction
$222    $5753   UNKNOWN  $5753           ; Unknown 5xxx instruction
$224    $E340   UNKNOWN  $E340           ; Unknown Exxx instruction
$226    $EFE5   UNKNOWN  $EFE5           ; Unknown Exxx instruction
$228    $1D81   JP       $D81            ; Jump to D81
$22A    $1258   JP       $258            ; Jump to 258
$22C    $8C1A   UNKNOWN  8C1A            ; Unknown 8xxx instruction
$22E    $2F91   CALL     $F91            ; Call subroutine at F91
$230    $75C8   ADD      V5, #C8         ; Add 200 to V5
$232    $C7E2   RND      V7, #E2         ; V7 = random & E2
$234    $CCD1   RND      VC, #D1         ; VC = random & D1
$236    $8DAD   UNKNOWN  8DAD            ; Unknown 8xxx instruction
$238    $A1DE   LD       I, $1DE         ; Load 1DE into I
$23A    $0211   SYS      $211            ; System call to 211
$23C    $B61F   JP       V0, $61F        ; Jump to V0 + 61F
$23E    $8BC1   OR       VB, VC          ; VB |= VC
$240    $5B09   UNKNOWN  $5B09           ; Unknown 5xxx instruction
$242    $C988   RND      V9, #88         ; V9 = random & 88
$244    $5EFA   UNKNOWN  $5EFA           ; Unknown 5xxx instruction
$246    $5A85   UNKNOWN  $5A85           ; Unknown 5xxx instruction
$248    $776E   ADD      V7, #6E         ; Add 110 to V7
$24A    $3474   SE       V4, #74         ; Skip if V4 == 116
$24C    $D6AD   DRW      V6, VA, #D      ; Draw 13-byte sprite at V6, VA
$24E    $DCE2   DRW      VC, VE, #2      ; Draw 2-byte sprite at VC, VE
$250    $A4E5   LD       I, $4E5         ; Load 4E5 into I
$252    $18A2   JP       $8A2            ; Jump to 8A2
$254    $4C05   SNE      VC, #05         ; Skip if VC != 5
$256    $8330   LD       V3, V3          ; V3 = V3
$258    $E562   UNKNOWN  $E562           ; Unknown Exxx instruction
$25A    $2F39   CALL     $F39            ; Call subroutine at F39
$25C    $81DB   UNKNOWN  81DB            ; Unknown 8xxx instruction
$25E    $E819   UNKNOWN  $E819           ; Unknown Exxx instruction
$260    $6480   LD       V4, #80         ; Load 128 into V4
$262    $B3F4   JP       V0, $3F4        ; Jump to V0 + 3F4
$264    $5D72   UNKNOWN  $5D72           ; Unknown 5xxx instruction
$266    $BBA8   JP       V0, $BA8        ; Jump to V0 + BA8
$268    $88D9   UNKNOWN  88D9            ; Unknown 8xxx instruction
$26A    $A134   LD       I, $134         ; Load 134 into I
$26C    $9D34   UNKNOWN  $9D34           ; Unknown 9xxx instruction
$26E    $CBD7   RND      VB, #D7         ; VB = random & D7
$270    $4D70   SNE      VD, #70         ; Skip if VD != 112
$272    $79A1   ADD      V9, #A1         ; Add 161 to V9
$274    $5A06   UNKNOWN  $5A06           ; Unknown 5xxx instruction
$276    $CD6E   RND      VD, #6E         ; VD = random & 6E
$278    $1F87   JP       $F87            ; Jump to F87
$27A    $D02F   DRW      V0, V2, #F      ; Draw 15-byte sprite at V0, V2
$27C    $8D85   SUB      VD, V8          ; VD -= V8, VF = !borrow
$27E    $31A5   SE       V1, #A5         ; Skip if V1 == 165
$280    $FDCF   UNKNOWN  FDCF            ; Unknown Fxxx instruction
$282    $FD3C   UNKNOWN  FD3C            ; Unknown Fxxx instruction
$284    $BD15   JP       V0, $D15        ; Jump to V0 + D15
$286    $86A9   UNKNOWN  86A9            ; Unknown 8xxx instruction
$288    $352E   SE       V5, #2E         ; Skip if V5 == 46
$28A    $2AE1   CALL     $AE1            ; Call subroutine at AE1
$28C    $E988   UNKNOWN  $E988           ; Unknown Exxx instruction
$28E    $09CA   SYS      $9CA            ; System call to 9CA
$290    $201D   CALL     $01D            ; Call subroutine at 01D
$292    $05ED   SYS      $5ED            ; System call to 5ED
$294    $7A01   ADD      VA, #01         ; Add 1 to VA
$296    $0BFF   SYS      $BFF            ; System call to BFF
$298    $0E16   SYS      $E16            ; System call to E16
$29A    $AD4E   LD       I, $D4E         ; Load D4E into I
$29C    $FB55   LD       [I], VB         ; Store V0-VB at I
$29E    $8BB9   UNKNOWN  8BB9            ; Unknown 8xxx instruction
$2A0    $2EF9   CALL     $EF9            ; Call subroutine at EF9
$2A2    $F269   UNKNOWN  F269            ; Unknown Fxxx instruction
$2A4    $02B7   SYS      $2B7            ; System call to 2B7
$2A6    $4CA5   SNE      VC, #A5         ; Skip if VC != 165
$2A8    $B43C   JP       V0, $43C        ; Jump to V0 + 43C
$2AA    $74FE   ADD      V4, #FE         ; Add 254 to V4
$2AC    $B5D5   JP       V0, $5D5        ; Jump to V0 + 5D5
$2AE    $3566   SE       V5, #66         ; Skip if V5 == 102
$2B0    $720A   ADD      V2, #0A         ; Add 10 to V2
$2B2    $3EEB   SE       VE, #EB         ; Skip if VE == 235
$2B4    $A08D   LD       I, $08D         ; Load 08D into I
$2B6    $DB2A   DRW      VB, V2, #A      ; Draw 10-byte sprite at VB, V2
$2B8    $8CA5   SUB      VC, VA          ; VC -= VA, VF = !borrow
$2BA    $D2B2   DRW      V2, VB, #2      ; Draw 2-byte sprite at V2, VB
$2BC    $D5D0   DRW      V5, VD, #0      ; Draw 0-byte sprite at V5, VD
$2BE    $C4CC   RND      V4, #CC         ; V4 = random & CC
$2C0    $7BC8   ADD      VB, #C8         ; Add 200 to VB
$2C2    $B0C6   JP       V0, $0C6        ; Jump to V0 + 0C6
$2C4    $2417   CALL     $417            ; Call subroutine at 417
$2C6    $49BD   SNE      V9, #BD         ; Skip if V9 != 189
$2C8    $4159   SNE      V1, #59         ; Skip if V1 != 89
$2CA    $9D7D   UNKNOWN  $9D7D           ; Unknown 9xxx instruction
$2CC    $40F2   SNE      V0, #F2         ; Skip if V0 != 242
$2CE    $3C01   SE       VC, #01         ; Skip if VC == 1
$2D0    $A73A   LD       I, $73A         ; Load 73A into I
$2D2    $B9DD   JP       V0, $9DD        ; Jump to V0 + 9DD
$2D4    $DEC7   DRW      VE, VC, #7      ; Draw 7-byte sprite at VE, VC
$2D6    $526A   UNKNOWN  $526A           ; Unknown 5xxx instruction
$2D8    $7E42   ADD      VE, #42         ; Add 66 to VE
$2DA    $091C   SYS      $91C            ; System call to 91C
$2DC    $63E6   LD       V3, #E6         ; Load 230 into V3
$2DE    $F060   UNKNOWN  F060            ; Unknown Fxxx instruction
$2E0    $262E   CALL     $62E            ; Call subroutine at 62E
$2E2    $08C6   SYS      $8C6            ; System call to 8C6
$2E4    $AA6B   LD       I, $A6B         ; Load A6B into I
$2E6    $B4E0   JP       V0, $4E0        ; Jump to V0 + 4E0
$2E8    $12ED   JP       $2ED            ; Jump to 2ED
$2EA    $A3FE   LD       I, $3FE         ; Load 3FE into I
$2EC    $F343   UNKNOWN  F343            ; Unknown Fxxx instruction
$2EE    $FBEA   UNKNOWN  FBEA            ; Unknown Fxxx instruction
$2F0    $9769   UNKNOWN  $9769           ; Unknown 9xxx instruction
$2F2    $B97A   JP       V0, $97A        ; Jump to V0 + 97A
$2F4    $7DFA   ADD      VD, #FA         ; Add 250 to VD
$2F6    $3D05   SE       VD, #05         ; Skip if VD == 5
$2F8    $4ABB   SNE      VA, #BB         ; Skip if VA != 187
$2FA    $F55A   UNKNOWN  F55A            ; Unknown Fxxx instruction
$2FC    $C762   RND      V7, #62         ; V7 = random & 62
$2FE    $C5E6   RND      V5, #E6         ; V5 = random & E6
$300    $0104   SYS      $104            ; System call to 104
$302    $0911   SYS      $911            ; System call to 911
$304    $69BC   LD       V9, #BC         ; Load 188 into V9
$306    $C1D5   RND      V1, #D5         ; V1 = random & D5
$308    $1AF4   JP       $AF4            ; Jump to AF4
$30A    $11B1   JP       $1B1            ; Jump to 1B1
$30C    $FBFC   UNKNOWN  FBFC            ; Unknown Fxxx instruction
$30E    $C571   RND      V5, #71         ; V5 = random & 71
$310    $F76A   UNKNOWN  F76A            ; Unknown Fxxx instruction
$312    $4702   SNE      V7, #02         ; Skip if V7 != 2
$314    $74D1   ADD      V4, #D1         ; Add 209 to V4
$316    $30F2   SE       V0, #F2         ; Skip if V0 == 242
$318    $E373   UNKNOWN  $E373           ; Unknown Exxx instruction
$31A    $D2D8   DRW      V2, VD, #8      ; Draw 8-byte sprite at V2, VD
$31C    $42E3   SNE      V2, #E3         ; Skip if V2 != 227
$31E    $D58D   DRW      V5, V8, #D      ; Draw 13-byte sprite at V5, V8
$320    $3441   SE       V4, #41         ; Skip if V4 == 65
$322    $B411   JP       V0, $411        ; Jump to V0 + 411
$324    $D028   DRW      V0, V2, #8      ; Draw 8-byte sprite at V0, V2
$326    $2FB7   CALL     $FB7            ; Call subroutine at FB7
$328    $8479   UNKNOWN  8479            ; Unknown 8xxx instruction
$32A    $4CFC   SNE      VC, #FC         ; Skip if VC != 252
$32C    $4DC9   SNE      VD, #C9         ; Skip if VD != 201
$32E    $CC6E   RND      VC, #6E         ; VC = random & 6E
$330    $51EC   UNKNOWN  $51EC           ; Unknown 5xxx instruction
$332    $A66C   LD       I, $66C         ; Load 66C into I
$334    $C96C   RND      V9, #6C         ; V9 = random & 6C
$336    $4FBA   SNE      VF, #BA         ; Skip if VF != 186
$338    $0BF0   SYS      $BF0            ; System call to BF0
$33A    $513E   UNKNOWN  $513E           ; Unknown 5xxx instruction
$33C    $0FED   SYS      $FED            ; System call to FED
$33E    $3061   SE       V0, #61         ; Skip if V0 == 97
$340    $2749   CALL     $749            ; Call subroutine at 749
$342    $6AFF   LD       VA, #FF         ; Load 255 into VA
$344    $70E3   ADD      V0, #E3         ; Add 227 to V0
$346    $286E   CALL     $86E            ; Call subroutine at 86E
$348    $150C   JP       $50C            ; Jump to 50C
$34A    $FEDC   UNKNOWN  FEDC            ; Unknown Fxxx instruction
$34C    $D686   DRW      V6, V8, #6      ; Draw 6-byte sprite at V6, V8
$34E    $3F12   SE       VF, #12         ; Skip if VF == 18
$350    $3D9B   SE       VD, #9B         ; Skip if VD == 155
$352    $21D9   CALL     $1D9            ; Call subroutine at 1D9
$354    $6283   LD       V2, #83         ; Load 131 into V2
$356    $3153   SE       V1, #53         ; Skip if V1 == 83
$358    $2BC7   CALL     $BC7            ; Call subroutine at BC7
$35A    $434D   SNE      V3, #4D         ; Skip if V3 != 77
$35C    $43AC   SNE      V3, #AC         ; Skip if V3 != 172
$35E    $7B93   ADD      VB, #93         ; Add 147 to VB
$360    $7884   ADD      V8, #84         ; Add 132 to V8
$362    $5469   UNKNOWN  $5469           ; Unknown 5xxx instruction
$364    $E448   UNKNOWN  $E448           ; Unknown Exxx instruction
$366    $E640   UNKNOWN  $E640           ; Unknown Exxx instruction
$368    $CB50   RND      VB, #50         ; VB = random & 50
$36A    $0471   SYS      $471            ; System call to 471
$36C    $874D   UNKNOWN  874D            ; Unknown 8xxx instruction
$36E    $69AB   LD       V9, #AB         ; Load 171 into V9
$370    $CA5A   RND      VA, #5A         ; VA = random & 5A
$372    $32D5   SE       V2, #D5         ; Skip if V2 == 213
$374    $963D   UNKNOWN  $963D           ; Unknown 9xxx instruction
$376    $3D62   SE       VD, #62         ; Skip if VD == 98
$378    $F02C   UNKNOWN  F02C            ; Unknown Fxxx instruction
$37A    $CDDD   RND      VD, #DD         ; VD = random & DD
$37C    $640E   LD       V4, #0E         ; Load 14 into V4
$37E    $6865   LD       V8, #65         ; Load 101 into V8
$380    $2EC5   CALL     $EC5            ; Call subroutine at EC5
$382    $7E21   ADD      VE, #21         ; Add 33 to VE
$384    $1F29   JP       $F29            ; Jump to F29
$386    $5FDC   UNKNOWN  $5FDC           ; Unknown 5xxx instruction
$388    $E240   UNKNOWN  $E240           ; Unknown Exxx instruction
$38A    $ABF0   LD       I, $BF0         ; Load BF0 into I
$38C    $37A3   SE       V7, #A3         ; Skip if V7 == 163
$38E    $8783   XOR      V7, V8          ; V7 ^= V8
$390    $B1F3   JP       V0, $1F3        ; Jump to V0 + 1F3
$392    $9009   UNKNOWN  $9009           ; Unknown 9xxx instruction
$394    $1346   JP       $346            ; Jump to 346
$396    $C2E8   RND      V2, #E8         ; V2 = random & E8
$398    $496C   SNE      V9, #6C         ; Skip if V9 != 108
$39A    $A912   LD       I, $912         ; Load 912 into I
$39C    $84AE   SHL      V4              ; V4 <<= 1, VF = MSB
$39E    $57A8   UNKNOWN  $57A8           ; Unknown 5xxx instruction
$3A0    $5C6F   UNKNOWN  $5C6F           ; Unknown 5xxx instruction
$3A2    $44AD   SNE      V4, #AD         ; Skip if V4 != 173
$3A4    $9138   UNKNOWN  $9138           ; Unknown 9xxx instruction
$3A6    $5BB1   UNKNOWN  $5BB1           ; Unknown 5xxx instruction
$3A8    $79EA   ADD      V9, #EA         ; Add 234 to V9
$3AA    $0393   SYS      $393            ; System call to 393
$3AC    $610F   LD       V1, #0F         ; Load 15 into V1
$3AE    $AED4   LD       I, $ED4         ; Load ED4 into I
$3B0    $04A5   SYS      $4A5            ; System call to 4A5
$3B2    $5E8D   UNKNOWN  $5E8D           ; Unknown 5xxx instruction
$3B4    $96FC   UNKNOWN  $96FC           ; Unknown 9xxx instruction
$3B6    $EED1   UNKNOWN  $EED1           ; Unknown Exxx instruction
$3B8    $150E   JP       $50E            ; Jump to 50E
$3BA    $D7DF   DRW      V7, VD, #F      ; Draw 15-byte sprite at V7, VD
$3BC    $109C   JP       $09C            ; Jump to 09C
$3BE    $1AB3   JP       $AB3            ; Jump to AB3
$3C0    $5DD3   UNKNOWN  $5DD3           ; Unknown 5xxx instruction
$3C2    $D517   DRW      V5, V1, #7      ; Draw 7-byte sprite at V5, V1
$3C4    $852A   UNKNOWN  852A            ; Unknown 8xxx instruction
$3C6    $B23D   JP       V0, $23D        ; Jump to V0 + 23D
$3C8    $2B32   CALL     $B32            ; Call subroutine at B32
$3CA    $228D   CALL     $28D            ; Call subroutine at 28D
$3CC    $5C84   UNKNOWN  $5C84           ; Unknown 5xxx instruction
$3CE    $434B   SNE      V3, #4B         ; Skip if V3 != 75
$3D0    $D192   DRW      V1, V9, #2      ; Draw 2-byte sprite at V1, V9
$3D2    $118E   JP       $18E            ; Jump to 18E
$3D4    $4626   SNE      V6, #26         ; Skip if V6 != 38
$3D6    $0760   SYS      $760            ; System call to 760
$3D8    $5F6D   UNKNOWN  $5F6D           ; Unknown 5xxx instruction
$3DA    $62E8   LD       V2, #E8         ; Load 232 into V2
$3DC    $DB6B   DRW      VB, V6, #B      ; Draw 11-byte sprite at VB, V6
$3DE    $5ACE   UNKNOWN  $5ACE           ; Unknown 5xxx instruction
$3E0    $FE77   UNKNOWN  FE77            ; Unknown Fxxx instruction
$3E2    $39B3   SE       V9, #B3         ; Skip if V9 == 179
$3E4    $A83C   LD       I, $83C         ; Load 83C into I
$3E6    $9040   SNE      V0, V4          ; Skip if V0 != V4
$3E8    $9369   UNKNOWN  $9369           ; Unknown 9xxx instruction
$3EA    $D8ED   DRW      V8, VE, #D      ; Draw 13-byte sprite at V8, VE
$3EC    $0322   SYS      $322            ; System call to 322
$3EE    $E4E1   UNKNOWN  $E4E1           ; Unknown Exxx instruction
$3F0    $3291   SE       V2, #91         ; Skip if V2 == 145
$3F2    $60F9   LD       V0, #F9         ; Load 249 into V0
$3F4    $153F   JP       $53F            ; Jump to 53F
$3F6    $13CC   JP       $3CC            ; Jump to 3CC
$3F8    $D0BB   DRW      V0, VB, #B      ; Draw 11-byte sprite at V0, VB
$3FA    $F77D   UNKNOWN  F77D            ; Unknown Fxxx instruction
$3FC    $C393   RND      V3, #93         ; V3 = random & 93
$3FE    $B22C   JP       V0, $22C        ; Jump to V0 + 22C
$400    $0109   SYS      $109            ; System call to 109
$402    $030C   SYS      $30C            ; System call to 30C
$404    $A715   LD       I, $715         ; Load 715 into I
$406    $F9CD   UNKNOWN  F9CD            ; Unknown Fxxx instruction
$408    $FFFC   UNKNOWN  FFFC            ; Unknown Fxxx instruction
$40A    $B9E5   JP       V0, $9E5        ; Jump to V0 + 9E5
$40C    $B9A5   JP       V0, $9A5        ; Jump to V0 + 9A5
$40E    $5D4D   UNKNOWN  $5D4D           ; Unknown 5xxx instruction
$410    $F2CA   UNKNOWN  F2CA            ; Unknown Fxxx instruction
$412    $BC10   JP       V0, $C10        ; Jump to V0 + C10
$414    $0098   SYS      $098            ; System call to 098
$416    $30F4   SE       V0, #F4         ; Skip if V0 == 244
$418    $E6EC   UNKNOWN  $E6EC           ; Unknown Exxx instruction
$41A    $F5F9   UNKNOWN  F5F9            ; Unknown Fxxx instruction
$41C    $6A16   LD       VA, #16         ; Load 22 into VA
$41E    $3B74   SE       VB, #74         ; Skip if VB == 116
$420    $7DE1   ADD      VD, #E1         ; Add 225 to VD
$422    $F801   UNKNOWN  F801            ; Unknown Fxxx instruction
$424    $A0D3   LD       I, $0D3         ; Load 0D3 into I
$426    $D2F5   DRW      V2, VF, #5      ; Draw 5-byte sprite at V2, VF
$428    $F832   UNKNOWN  F832            ; Unknown Fxxx instruction
$42A    $8BBD   UNKNOWN  8BBD            ; Unknown 8xxx instruction
$42C    $3DF9   SE       VD, #F9         ; Skip if VD == 249
$42E    $F150   UNKNOWN  F150            ; Unknown Fxxx instruction
$430    $FB85   UNKNOWN  FB85            ; Unknown Fxxx instruction
$432    $772D   ADD      V7, #2D         ; Add 45 to V7
$434    $E69F   UNKNOWN  $E69F           ; Unknown Exxx instruction
$436    $4458   SNE      V4, #58         ; Skip if V4 != 88
$438    $8A51   OR       VA, V5          ; VA |= V5
$43A    $6730   LD       V7, #30         ; Load 48 into V7
$43C    $7F32   ADD      VF, #32         ; Add 50 to VF
$43E    $658D   LD       V5, #8D         ; Load 141 into V5
$440    $BE60   JP       V0, $E60        ; Jump to V0 + E60
$442    $EDB1   UNKNOWN  $EDB1           ; Unknown Exxx instruction
$444    $366F   SE       V6, #6F         ; Skip if V6 == 111
$446    $E1C0   UNKNOWN  $E1C0           ; Unknown Exxx instruction
$448    $8B41   OR       VB, V4          ; VB |= V4
$44A    $D759   DRW      V7, V5, #9      ; Draw 9-byte sprite at V7, V5
$44C    $73A3   ADD      V3, #A3         ; Add 163 to V3
$44E    $7895   ADD      V8, #95         ; Add 149 to V8
$450    $B118   JP       V0, $118        ; Jump to V0 + 118
$452    $4AC7   SNE      VA, #C7         ; Skip if VA != 199
$454    $4277   SNE      V2, #77         ; Skip if V2 != 119
$456    $C691   RND      V6, #91         ; V6 = random & 91
$458    $F501   UNKNOWN  F501            ; Unknown Fxxx instruction
$45A    $6DCA   LD       VD, #CA         ; Load 202 into VD
$45C    $C6F5   RND      V6, #F5         ; V6 = random & F5
$45E    $5986   UNKNOWN  $5986           ; Unknown 5xxx instruction
$460    $0334   SYS      $334            ; System call to 334
$462    $CAD2   RND      VA, #D2         ; VA = random & D2
$464    $7720   ADD      V7, #20         ; Add 32 to V7
$466    $59D2   UNKNOWN  $59D2           ; Unknown 5xxx instruction
$468    $9C31   UNKNOWN  $9C31           ; Unknown 9xxx instruction
$46A    $3D29   SE       VD, #29         ; Skip if VD == 41
$46C    $9728   UNKNOWN  $9728           ; Unknown 9xxx instruction
$46E    $EDE5   UNKNOWN  $EDE5           ; Unknown Exxx instruction
$470    $9F5B   UNKNOWN  $9F5B           ; Unknown 9xxx instruction
$472    $B8C3   JP       V0, $8C3        ; Jump to V0 + 8C3
$474    $BA40   JP       V0, $A40        ; Jump to V0 + A40
$476    $A62A   LD       I, $62A         ; Load 62A into I
$478    $7CAC   ADD      VC, #AC         ; Add 172 to VC
$47A    $1EA7   JP       $EA7            ; Jump to EA7
$47C    $87BD   UNKNOWN  87BD            ; Unknown 8xxx instruction
$47E    $DAFF   DRW      VA, VF, #F      ; Draw 15-byte sprite at VA, VF
$480    $AAEF   LD       I, $AEF         ; Load AEF into I
$482    $9780   SNE      V7, V8          ; Skip if V7 != V8
$484    $0860   SYS      $860            ; System call to 860
$486    $C6B2   RND      V6, #B2         ; V6 = random & B2
$488    $0E51   SYS      $E51            ; System call to E51
$48A    $4AFE   SNE      VA, #FE         ; Skip if VA != 254
$48C    $DDC9   DRW      VD, VC, #9      ; Draw 9-byte sprite at VD, VC
$48E    $9963   UNKNOWN  $9963           ; Unknown 9xxx instruction
$490    $86AB   UNKNOWN  86AB            ; Unknown 8xxx instruction
$492    $6E01   LD       VE, #01         ; Load 1 into VE
$494    $4FC6   SNE      VF, #C6         ; Skip if VF != 198
$496    $A765   LD       I, $765         ; Load 765 into I
$498    $B271   JP       V0, $271        ; Jump to V0 + 271
$49A    $CF02   RND      VF, #02         ; VF = random & 02
$49C    $7069   ADD      V0, #69         ; Add 105 to V0
$49E    $AAD7   LD       I, $AD7         ; Load AD7 into I
$4A0    $F9D8   UNKNOWN  F9D8            ; Unknown Fxxx instruction
$4A2    $E64E   UNKNOWN  $E64E           ; Unknown Exxx instruction
$4A4    $2AFA   CALL     $AFA            ; Call subroutine at AFA
$4A6    $8255   SUB      V2, V5          ; V2 -= V5, VF = !borrow
$4A8    $798A   ADD      V9, #8A         ; Add 138 to V9
$4AA    $3674   SE       V6, #74         ; Skip if V6 == 116
$4AC    $5777   UNKNOWN  $5777           ; Unknown 5xxx instruction
$4AE    $D15D   DRW      V1, V5, #D      ; Draw 13-byte sprite at V1, V5
$4B0    $49A5   SNE      V9, #A5         ; Skip if V9 != 165
$4B2    $AE78   LD       I, $E78         ; Load E78 into I
$4B4    $EB89   UNKNOWN  $EB89           ; Unknown Exxx instruction
$4B6    $883B   UNKNOWN  883B            ; Unknown 8xxx instruction
$4B8    $B408   JP       V0, $408        ; Jump to V0 + 408
$4BA    $E25F   UNKNOWN  $E25F           ; Unknown Exxx instruction
$4BC    $FFC6   UNKNOWN  FFC6            ; Unknown Fxxx instruction
$4BE    $FA4C   UNKNOWN  FA4C            ; Unknown Fxxx instruction
$4C0    $79D4   ADD      V9, #D4         ; Add 212 to V9
$4C2    $0146   SYS      $146            ; System call to 146
$4C4    $890F   UNKNOWN  890F            ; Unknown 8xxx instruction
$4C6    $BD0D   JP       V0, $D0D        ; Jump to V0 + D0D
$4C8    $0A43   SYS      $A43            ; System call to A43
$4CA    $339E   SE       V3, #9E         ; Skip if V3 == 158
$4CC    $FDC8   UNKNOWN  FDC8            ; Unknown Fxxx instruction
$4CE    $9EAE   UNKNOWN  $9EAE           ; Unknown 9xxx instruction
$4D0    $59B6   UNKNOWN  $59B6           ; Unknown 5xxx instruction
$4D2    $69BA   LD       V9, #BA         ; Load 186 into V9
$4D4    $E1C5   UNKNOWN  $E1C5           ; Unknown Exxx instruction
$4D6    $C35B   RND      V3, #5B         ; V3 = random & 5B
$4D8    $174B   JP       $74B            ; Jump to 74B
$4DA    $1E4F   JP       $E4F            ; Jump to E4F
$4DC    $7D32   ADD      VD, #32         ; Add 50 to VD
$4DE    $2D05   CALL     $D05            ; Call subroutine at D05
$4E0    $6D30   LD       VD, #30         ; Load 48 into VD
$4E2    $01C9   SYS      $1C9            ; System call to 1C9
$4E4    $CFC1   RND      VF, #C1         ; VF = random & C1
$4E6    $A684   LD       I, $684         ; Load 684 into I
$4E8    $38CC   SE       V8, #CC         ; Skip if V8 == 204
$4EA    $02AE   SYS      $2AE            ; System call to 2AE
$4EC    $FF22   UNKNOWN  FF22            ; Unknown Fxxx instruction
$4EE    $ABF6   LD       I, $BF6         ; Load BF6 into I
$4F0    $3FF5   SE       VF, #F5         ; Skip if VF == 245
$4F2    $D3C1   DRW      V3, VC, #1      ; Draw 1-byte sprite at V3, VC
$4F4    $A94E   LD       I, $94E         ; Load 94E into I
$4F6    $97E9   UNKNOWN  $97E9           ; Unknown 9xxx instruction
$4F8    $25FD   CALL     $5FD            ; Call subroutine at 5FD
$4FA    $2992   CALL     $992            ; Call subroutine at 992
$4FC    $194C   JP       $94C            ; Jump to 94C
$4FE    $B385   JP       V0, $385        ; Jump to V0 + 385
$500    $7A74   ADD      VA, #74         ; Add 116 to VA
$502    $914C   UNKNOWN  $914C           ; Unknown 9xxx instruction
$504    $EF64   UNKNOWN  $EF64           ; Unknown Exxx instruction
$506    $86A8   UNKNOWN  86A8            ; Unknown 8xxx instruction
$508    $DB3C   DRW      VB, V3, #C      ; Draw 12-byte sprite at VB, V3
$50A    $A62E   LD       I, $62E         ; Load 62E into I
$50C    $E135   UNKNOWN  $E135           ; Unknown Exxx instruction
$50E    $E0BE   UNKNOWN  $E0BE           ; Unknown Exxx instruction
$510    $B378   JP       V0, $378        ; Jump to V0 + 378
$512    $4B01   SNE      VB, #01         ; Skip if VB != 1
$514    $D87C   DRW      V8, V7, #C      ; Draw 12-byte sprite at V8, V7
$516    $E5DC   UNKNOWN  $E5DC           ; Unknown Exxx instruction
$518    $EA9C   UNKNOWN  $EA9C           ; Unknown Exxx instruction
$51A    $3C90   SE       VC, #90         ; Skip if VC == 144
$51C    $233B   CALL     $33B            ; Call subroutine at 33B
$51E    $44FB   SNE      V4, #FB         ; Skip if V4 != 251
$520    $BCBC   JP       V0, $CBC        ; Jump to V0 + CBC
$522    $AAC7   LD       I, $AC7         ; Load AC7 into I
$524    $29C1   CALL     $9C1            ; Call subroutine at 9C1
$526    $F678   UNKNOWN  F678            ; Unknown Fxxx instruction
$528    $DF3B   DRW      VF, V3, #B      ; Draw 11-byte sprite at VF, V3
$52A    $D950   DRW      V9, V5, #0      ; Draw 0-byte sprite at V9, V5
$52C    $8B90   LD       VB, V9          ; VB = V9
$52E    $D8BB   DRW      V8, VB, #B      ; Draw 11-byte sprite at V8, VB
$530    $6839   LD       V8, #39         ; Load 57 into V8
$532    $01A6   SYS      $1A6            ; System call to 1A6
$534    $E266   UNKNOWN  $E266           ; Unknown Exxx instruction
$536    $0941   SYS      $941            ; System call to 941
$538    $FE97   UNKNOWN  FE97            ; Unknown Fxxx instruction
$53A    $DAA6   DRW      VA, VA, #6      ; Draw 6-byte sprite at VA, VA
$53C    $664A   LD       V6, #4A         ; Load 74 into V6
$53E    $D4CB   DRW      V4, VC, #B      ; Draw 11-byte sprite at V4, VC
$540    $B5F1   JP       V0, $5F1        ; Jump to V0 + 5F1
$542    $F23B   UNKNOWN  F23B            ; Unknown Fxxx instruction
$544    $0B37   SYS      $B37            ; System call to B37
$546    $B435   JP       V0, $435        ; Jump to V0 + 435
$548    $1563   JP       $563            ; Jump to 563
$54A    $3254   SE       V2, #54         ; Skip if V2 == 84
$54C    $BCFB   JP       V0, $CFB        ; Jump to V0 + CFB
$54E    $D81A   DRW      V8, V1, #A      ; Draw 10-byte sprite at V8, V1
$550    $F3B5   UNKNOWN  F3B5            ; Unknown Fxxx instruction
$552    $FA81   UNKNOWN  FA81            ; Unknown Fxxx instruction
$554    $5843   UNKNOWN  $5843           ; Unknown 5xxx instruction
$556    $4329   SNE      V3, #29         ; Skip if V3 != 41
$558    $A342   LD       I, $342         ; Load 342 into I
$55A    $D370   DRW      V3, V7, #0      ; Draw 0-byte sprite at V3, V7
$55C    $6B52   LD       VB, #52         ; Load 82 into VB
$55E    $6AFC   LD       VA, #FC         ; Load 252 into VA
$560    $FA86   UNKNOWN  FA86            ; Unknown Fxxx instruction
$562    $950F   UNKNOWN  $950F           ; Unknown 9xxx instruction
$564    $EB2D   UNKNOWN  $EB2D           ; Unknown Exxx instruction
$566    $56F3   UNKNOWN  $56F3           ; Unknown 5xxx instruction
$568    $1015   JP       $015            ; Jump to 015
$56A    $434B   SNE      V3, #4B         ; Skip if V3 != 75
$56C    $67EA   LD       V7, #EA         ; Load 234 into V7
$56E    $1068   JP       $068            ; Jump to 068
$570    $38FA   SE       V8, #FA         ; Skip if V8 == 250
$572    $DA11   DRW      VA, V1, #1      ; Draw 1-byte sprite at VA, V1
$574    $E270   UNKNOWN  $E270           ; Unknown Exxx instruction
$576    $CC3D   RND      VC, #3D         ; VC = random & 3D
$578    $B789   JP       V0, $789        ; Jump to V0 + 789
$57A    $124A   JP       $24A            ; Jump to 24A
$57C    $F432   UNKNOWN  F432            ; Unknown Fxxx instruction
$57E    $B178   JP       V0, $178        ; Jump to V0 + 178
$580    $8D20   LD       VD, V2          ; VD = V2
$582    $A7BC   LD       I, $7BC         ; Load 7BC into I
$584    $BC6C   JP       V0, $C6C        ; Jump to V0 + C6C
$586    $21B0   CALL     $1B0            ; Call subroutine at 1B0
$588    $2FE6   CALL     $FE6            ; Call subroutine at FE6
$58A    $4EFC   SNE      VE, #FC         ; Skip if VE != 252
$58C    $9C10   SNE      VC, V1          ; Skip if VC != V1
$58E    $B205   JP       V0, $205        ; Jump to V0 + 205
$590    $FDEA   UNKNOWN  FDEA            ; Unknown Fxxx instruction
$592    $2FDC   CALL     $FDC            ; Call subroutine at FDC
$594    $F840   UNKNOWN  F840            ; Unknown Fxxx instruction
$596    $42F3   SNE      V2, #F3         ; Skip if V2 != 243
$598    $FE8D   UNKNOWN  FE8D            ; Unknown Fxxx instruction
$59A    $5309   UNKNOWN  $5309           ; Unknown 5xxx instruction
$59C    $05A6   SYS      $5A6            ; System call to 5A6
$59E    $DEDA   DRW      VE, VD, #A      ; Draw 10-byte sprite at VE, VD
$5A0    $6CF1   LD       VC, #F1         ; Load 241 into VC
$5A2    $6502   LD       V5, #02         ; Load 2 into V5
$5A4    $F868   UNKNOWN  F868            ; Unknown Fxxx instruction
$5A6    $CEE2   RND      VE, #E2         ; VE = random & E2
$5A8    $27DD   CALL     $7DD            ; Call subroutine at 7DD
$5AA    $335C   SE       V3, #5C         ; Skip if V3 == 92
$5AC    $17E1   JP       $7E1            ; Jump to 7E1
$5AE    $A788   LD       I, $788         ; Load 788 into I
$5B0    $9070   SNE      V0, V7          ; Skip if V0 != V7
$5B2    $FEDD   UNKNOWN  FEDD            ; Unknown Fxxx instruction
$5B4    $1E10   JP       $E10            ; Jump to E10
$5B6    $020C   SYS      $20C            ; System call to 20C
$5B8    $FE49   UNKNOWN  FE49            ; Unknown Fxxx instruction
$5BA    $9631   UNKNOWN  $9631           ; Unknown 9xxx instruction
$5BC    $FEFC   UNKNOWN  FEFC            ; Unknown Fxxx instruction
$5BE    $08F9   SYS      $8F9            ; System call to 8F9
$5C0    $E880   UNKNOWN  $E880           ; Unknown Exxx instruction
$5C2    $0BA5   SYS      $BA5            ; System call to BA5
$5C4    $1F6C   JP       $F6C            ; Jump to F6C
$5C6    $5960   SE       V9, V6          ; Skip if V9 == V6
$5C8    $AAE6   LD       I, $AE6         ; Load AE6 into I
$5CA    $D27F   DRW      V2, V7, #F      ; Draw 15-byte sprite at V2, V7
$5CC    $122C   JP       $22C            ; Jump to 22C
$5CE    $CCBD   RND      VC, #BD         ; VC = random & BD
$5D0    $C2E4   RND      V2, #E4         ; V2 = random & E4
$5D2    $72DA   ADD      V2, #DA         ; Add 218 to V2
$5D4    $3549   SE       V5, #49         ; Skip if V5 == 73
$5D6    $1D73   JP       $D73            ; Jump to D73
$5D8    $9490   SNE      V4, V9          ; Skip if V4 != V9
$5DA    $1728   JP       $728            ; Jump to 728
$5DC    $64E0   LD       V4, #E0         ; Load 224 into V4
$5DE    $C737   RND      V7, #37         ; V7 = random & 37
$5E0    $F701   UNKNOWN  F701            ; Unknown Fxxx instruction
$5E2    $3401   SE       V4, #01         ; Skip if V4 == 1
$5E4    $688B   LD       V8, #8B         ; Load 139 into V8
$5E6    $3F22   SE       VF, #22         ; Skip if VF == 34
$5E8    $E4EA   UNKNOWN  $E4EA           ; Unknown Exxx instruction
$5EA    $5060   SE       V0, V6          ; Skip if V0 == V6
$5EC    $DFE8   DRW      VF, VE, #8      ; Draw 8-byte sprite at VF, VE
$5EE    $7E84   ADD      VE, #84         ; Add 132 to VE
$5F0    $7D50   ADD      VD, #50         ; Add 80 to VD
$5F2    $AB97   LD       I, $B97         ; Load B97 into I
$5F4    $EC24   UNKNOWN  $EC24           ; Unknown Exxx instruction
$5F6    $58A2   UNKNOWN  $58A2           ; Unknown 5xxx instruction
$5F8    $6255   LD       V2, #55         ; Load 85 into V2
$5FA    $1824   JP       $824            ; Jump to 824
$5FC    $3DF3   SE       VD, #F3         ; Skip if VD == 243
$5FE    $E936   UNKNOWN  $E936           ; Unknown Exxx instruction
$600    $705D   ADD      V0, #5D         ; Add 93 to V0
$602    $BC53   JP       V0, $C53        ; Jump to V0 + C53
$604    $741C   ADD      V4, #1C         ; Add 28 to V4
$606    $928C   UNKNOWN  $928C           ; Unknown 9xxx instruction
$608    $4E45   SNE      VE, #45         ; Skip if VE != 69
$60A    $30EF   SE       V0, #EF         ; Skip if V0 == 239
$60C    $A5AE   LD       I, $5AE         ; Load 5AE into I
$60E    $90D4   UNKNOWN  $90D4           ; Unknown 9xxx instruction
$610    $BA13   JP       V0, $A13        ; Jump to V0 + A13
$612    $31DB   SE       V1, #DB         ; Skip if V1 == 219
$614    $FE1B   UNKNOWN  FE1B            ; Unknown Fxxx instruction
$616    $154B   JP       $54B            ; Jump to 54B
$618    $A5B2   LD       I, $5B2         ; Load 5B2 into I
$61A    $0231   SYS      $231            ; System call to 231
$61C    $6287   LD       V2, #87         ; Load 135 into V2
$61E    $FD0E   UNKNOWN  FD0E            ; Unknown Fxxx instruction
$620    $FB80   UNKNOWN  FB80            ; Unknown Fxxx instruction
$622    $33D1   SE       V3, #D1         ; Skip if V3 == 209
$624    $72A9   ADD      V2, #A9         ; Add 169 to V2
$626    $8C05   SUB      VC, V0          ; VC -= V0, VF = !borrow
$628    $4DC4   SNE      VD, #C4         ; Skip if VD != 196
$62A    $0165   SYS      $165            ; System call to 165
$62C    $8D99   UNKNOWN  8D99            ; Unknown 8xxx instruction
$62E    $298F   CALL     $98F            ; Call subroutine at 98F
$630    $D224   DRW      V2, V2, #4      ; Draw 4-byte sprite at V2, V2
$632    $EC0E   UNKNOWN  $EC0E           ; Unknown Exxx instruction
$634    $348A   SE       V4, #8A         ; Skip if V4 == 138
$636    $835B   UNKNOWN  835B            ; Unknown 8xxx instruction
$638    $CAD9   RND      VA, #D9         ; VA = random & D9
$63A    $8AB6   SHR      VA              ; VA >>= 1, VF = LSB
$63C    $09B3   SYS      $9B3            ; System call to 9B3
$63E    $8BDC   UNKNOWN  8BDC            ; Unknown 8xxx instruction
$640    $2D43   CALL     $D43            ; Call subroutine at D43
$642    $F70D   UNKNOWN  F70D            ; Unknown Fxxx instruction
$644    $3BC1   SE       VB, #C1         ; Skip if VB == 193
$646    $09CF   SYS      $9CF            ; System call to 9CF
$648    $8735   SUB      V7, V3          ; V7 -= V3, VF = !borrow
$64A    $57D7   UNKNOWN  $57D7           ; Unknown 5xxx instruction
$64C    $C009   RND      V0, #09         ; V0 = random & 09
$64E    $0FD7   SYS      $FD7            ; System call to FD7
$650    $FBB4   UNKNOWN  FBB4            ; Unknown Fxxx instruction
$652    $3021   SE       V0, #21         ; Skip if V0 == 33
$654    $BE37   JP       V0, $E37        ; Jump to V0 + E37
$656    $A963   LD       I, $963         ; Load 963 into I
$658    $ED2E   UNKNOWN  $ED2E           ; Unknown Exxx instruction
$65A    $CEB3   RND      VE, #B3         ; VE = random & B3
$65C    $EA0D   UNKNOWN  $EA0D           ; Unknown Exxx instruction
$65E    $B70B   JP       V0, $70B        ; Jump to V0 + 70B
$660    $8459   UNKNOWN  8459            ; Unknown 8xxx instruction
$662    $0F43   SYS      $F43            ; System call to F43
$664    $8189   UNKNOWN  8189            ; Unknown 8xxx instruction
$666    $CAEB   RND      VA, #EB         ; VA = random & EB
$668    $D80B   DRW      V8, V0, #B      ; Draw 11-byte sprite at V8, V0
$66A    $B3D7   JP       V0, $3D7        ; Jump to V0 + 3D7
$66C    $444D   SNE      V4, #4D         ; Skip if V4 != 77
$66E    $DC1B   DRW      VC, V1, #B      ; Draw 11-byte sprite at VC, V1
$670    $226B   CALL     $26B            ; Call subroutine at 26B
$672    $52FC   UNKNOWN  $52FC           ; Unknown 5xxx instruction
$674    $8E2D   UNKNOWN  8E2D            ; Unknown 8xxx instruction
$676    $20D7   CALL     $0D7            ; Call subroutine at 0D7
$678    $30D9   SE       V0, #D9         ; Skip if V0 == 217
$67A    $7483   ADD      V4, #83         ; Add 131 to V4
$67C    $72CE   ADD      V2, #CE         ; Add 206 to V2
$67E    $086C   SYS      $86C            ; System call to 86C
$680    $FAA2   UNKNOWN  FAA2            ; Unknown Fxxx instruction
$682    $8775   SUB      V7, V7          ; V7 -= V7, VF = !borrow
$684    $9831   UNKNOWN  $9831           ; Unknown 9xxx instruction
$686    $3B92   SE       VB, #92         ; Skip if VB == 146
$688    $8420   LD       V4, V2          ; V4 = V2
$68A    $A3C2   LD       I, $3C2         ; Load 3C2 into I
$68C    $7776   ADD      V7, #76         ; Add 118 to V7
$68E    $E850   UNKNOWN  $E850           ; Unknown Exxx instruction
$690    $E06E   UNKNOWN  $E06E           ; Unknown Exxx instruction
$692    $020E   SYS      $20E            ; System call to 20E
$694    $2D8A   CALL     $D8A            ; Call subroutine at D8A
$696    $9988   UNKNOWN  $9988           ; Unknown 9xxx instruction
$698    $A964   LD       I, $964         ; Load 964 into I
$69A    $542E   UNKNOWN  $542E           ; Unknown 5xxx instruction
$69C    $2116   CALL     $116            ; Call subroutine at 116
$69E    $F56A   UNKNOWN  F56A            ; Unknown Fxxx instruction
$6A0    $7E7D   ADD      VE, #7D         ; Add 125 to VE
$6A2    $ECC7   UNKNOWN  $ECC7           ; Unknown Exxx instruction
$6A4    $5233   UNKNOWN  $5233           ; Unknown 5xxx instruction
$6A6    $DC5E   DRW      VC, V5, #E      ; Draw 14-byte sprite at VC, V5
$6A8    $665B   LD       V6, #5B         ; Load 91 into V6
$6AA    $B3D9   JP       V0, $3D9        ; Jump to V0 + 3D9
$6AC    $99E0   SNE      V9, VE          ; Skip if V9 != VE
$6AE    $D4FA   DRW      V4, VF, #A      ; Draw 10-byte sprite at V4, VF
$6B0    $F6AD   UNKNOWN  F6AD            ; Unknown Fxxx instruction
$6B2    $828C   UNKNOWN  828C            ; Unknown 8xxx instruction
$6B4    $EB77   UNKNOWN  $EB77           ; Unknown Exxx instruction
$6B6    $5AFF   UNKNOWN  $5AFF           ; Unknown 5xxx instruction
$6B8    $8E69   UNKNOWN  8E69            ; Unknown 8xxx instruction
$6BA    $E5B4   UNKNOWN  $E5B4           ; Unknown Exxx instruction
$6BC    $3E89   SE       VE, #89         ; Skip if VE == 137
$6BE    $7DAD   ADD      VD, #AD         ; Add 173 to VD
$6C0    $0A52   SYS      $A52            ; System call to A52
$6C2    $337B   SE       V3, #7B         ; Skip if V3 == 123
$6C4    $7850   ADD      V8, #50         ; Add 80 to V8
$6C6    $BCDC   JP       V0, $CDC        ; Jump to V0 + CDC
$6C8    $4AD0   SNE      VA, #D0         ; Skip if VA != 208
$6CA    $4BD5   SNE      VB, #D5         ; Skip if VB != 213
$6CC    $D728   DRW      V7, V2, #8      ; Draw 8-byte sprite at V7, V2
$6CE    $8F7E   SHL      VF              ; VF <<= 1, VF = MSB
$6D0    $8BAF   UNKNOWN  8BAF            ; Unknown 8xxx instruction
$6D2    $E8B1   UNKNOWN  $E8B1           ; Unknown Exxx instruction
$6D4    $65D5   LD       V5, #D5         ; Load 213 into V5
$6D6    $39CC   SE       V9, #CC         ; Skip if V9 == 204
$6D8    $61E5   LD       V1, #E5         ; Load 229 into V1
$6DA    $8F59   UNKNOWN  8F59            ; Unknown 8xxx instruction
$6DC    $91D2   UNKNOWN  $91D2           ; Unknown 9xxx instruction
$6DE    $7DC2   ADD      VD, #C2         ; Add 194 to VD
$6E0    $E80B   UNKNOWN  $E80B           ; Unknown Exxx instruction
$6E2    $73B4   ADD      V3, #B4         ; Add 180 to V3
$6E4    $366E   SE       V6, #6E         ; Skip if V6 == 110
$6E6    $5AE5   UNKNOWN  $5AE5           ; Unknown 5xxx instruction
$6E8    $C5D0   RND      V5, #D0         ; V5 = random & D0
$6EA    $A1DF   LD       I, $1DF         ; Load 1DF into I
$6EC    $86CA   UNKNOWN  86CA            ; Unknown 8xxx instruction
$6EE    $C604   RND      V6, #04         ; V6 = random & 04
$6F0    $35B5   SE       V5, #B5         ; Skip if V5 == 181
$6F2    $CFAB   RND      VF, #AB         ; VF = random & AB
$6F4    $C2BA   RND      V2, #BA         ; V2 = random & BA
$6F6    $D5E7   DRW      V5, VE, #7      ; Draw 7-byte sprite at V5, VE
$6F8    $2D40   CALL     $D40            ; Call subroutine at D40
$6FA    $C47C   RND      V4, #7C         ; V4 = random & 7C
$6FC    $3904   SE       V9, #04         ; Skip if V9 == 4
$6FE    $3960   SE       V9, #60         ; Skip if V9 == 96
$700    $7148   ADD      V1, #48         ; Add 72 to V1
$702    $D14F   DRW      V1, V4, #F      ; Draw 15-byte sprite at V1, V4
$704    $AE5B   LD       I, $E5B         ; Load E5B into I
$706    $3A71   SE       VA, #71         ; Skip if VA == 113
$708    $C663   RND      V6, #63         ; V6 = random & 63
$70A    $5FEE   UNKNOWN  $5FEE           ; Unknown 5xxx instruction
$70C    $64AE   LD       V4, #AE         ; Load 174 into V4
$70E    $DD12   DRW      VD, V1, #2      ; Draw 2-byte sprite at VD, V1
$710    $6DC1   LD       VD, #C1         ; Load 193 into VD
$712    $222A   CALL     $22A            ; Call subroutine at 22A
$714    $FAE6   UNKNOWN  FAE6            ; Unknown Fxxx instruction
$716    $FFF9   UNKNOWN  FFF9            ; Unknown Fxxx instruction
$718    $09A0   SYS      $9A0            ; System call to 9A0
$71A    $4349   SNE      V3, #49         ; Skip if V3 != 73
$71C    $C03A   RND      V0, #3A         ; V0 = random & 3A
$71E    $FCD6   UNKNOWN  FCD6            ; Unknown Fxxx instruction
$720    $8678   UNKNOWN  8678            ; Unknown 8xxx instruction
$722    $3B5B   SE       VB, #5B         ; Skip if VB == 91
$724    $AA62   LD       I, $A62         ; Load A62 into I
$726    $024E   SYS      $24E            ; System call to 24E
$728    $B720   JP       V0, $720        ; Jump to V0 + 720
$72A    $E657   UNKNOWN  $E657           ; Unknown Exxx instruction
$72C    $B774   JP       V0, $774        ; Jump to V0 + 774
$72E    $8EA4   ADD      VE, VA          ; VE += VA, VF = carry
$730    $8DC2   AND      VD, VC          ; VD &= VC
$732    $39B4   SE       V9, #B4         ; Skip if V9 == 180
$734    $8E1B   UNKNOWN  8E1B            ; Unknown 8xxx instruction
$736    $96B0   SNE      V6, VB          ; Skip if V6 != VB
$738    $18D7   JP       $8D7            ; Jump to 8D7
$73A    $1AD2   JP       $AD2            ; Jump to AD2
$73C    $E035   UNKNOWN  $E035           ; Unknown Exxx instruction
$73E    $DD1A   DRW      VD, V1, #A      ; Draw 10-byte sprite at VD, V1
$740    $15C7   JP       $5C7            ; Jump to 5C7
$742    $7402   ADD      V4, #02         ; Add 2 to V4
$744    $62E4   LD       V2, #E4         ; Load 228 into V2
$746    $1C70   JP       $C70            ; Jump to C70
$748    $4882   SNE      V8, #82         ; Skip if V8 != 130
$74A    $D2D9   DRW      V2, VD, #9      ; Draw 9-byte sprite at V2, VD
$74C    $38BB   SE       V8, #BB         ; Skip if V8 == 187
$74E    $5E68   UNKNOWN  $5E68           ; Unknown 5xxx instruction
$750    $2364   CALL     $364            ; Call subroutine at 364
$752    $F5CF   UNKNOWN  F5CF            ; Unknown Fxxx instruction
$754    $9EE0   SNE      VE, VE          ; Skip if VE != VE
$756    $684E   LD       V8, #4E         ; Load 78 into V8
$758    $0D6C   SYS      $D6C            ; System call to D6C
$75A    $36E3   SE       V6, #E3         ; Skip if V6 == 227
$75C    $4396   SNE      V3, #96         ; Skip if V3 != 150
$75E    $A360   LD       I, $360         ; Load 360 into I
$760    $FD5A   UNKNOWN  FD5A            ; Unknown Fxxx instruction
$762    $AA32   LD       I, $A32         ; Load A32 into I
$764    $3E86   SE       VE, #86         ; Skip if VE == 134
$766    $2CF8   CALL     $CF8            ; Call subroutine at CF8
$768    $6109   LD       V1, #09         ; Load 9 into V1
$76A    $E242   UNKNOWN  $E242           ; Unknown Exxx instruction
$76C    $1162   JP       $162            ; Jump to 162
$76E    $CA18   RND      VA, #18         ; VA = random & 18
$770    $F9AB   UNKNOWN  F9AB            ; Unknown Fxxx instruction
$772    $CCD5   RND      VC, #D5         ; VC = random & D5
$774    $B3C7   JP       V0, $3C7        ; Jump to V0 + 3C7
$776    $3CAA   SE       VC, #AA         ; Skip if VC == 170
$778    $42F1   SNE      V2, #F1         ; Skip if V2 != 241
$77A    $520B   UNKNOWN  $520B           ; Unknown 5xxx instruction
$77C    $2474   CALL     $474            ; Call subroutine at 474
$77E    $C25E   RND      V2, #5E         ; V2 = random & 5E
$780    $C671   RND      V6, #71         ; V6 = random & 71
$782    $0EB9   SYS      $EB9            ; System call to EB9
$784    $D22D   DRW      V2, V2, #D      ; Draw 13-byte sprite at V2, V2
$786    $BECF   JP       V0, $ECF        ; Jump to V0 + ECF
$788    $368F   SE       V6, #8F         ; Skip if V6 == 143
$78A    $E4B9   UNKNOWN  $E4B9           ; Unknown Exxx instruction
$78C    $7C73   ADD      VC, #73         ; Add 115 to VC
$78E    $657A   LD       V5, #7A         ; Load 122 into V5
$790    $C4A7   RND      V4, #A7         ; V4 = random & A7
$792    $00E9   SYS      $0E9            ; System call to 0E9
$794    $CEE4   RND      VE, #E4         ; VE = random & E4
$796    $B082   JP       V0, $082        ; Jump to V0 + 082
$798    $EDBD   UNKNOWN  $EDBD           ; Unknown Exxx instruction
$79A    $B129   JP       V0, $129        ; Jump to V0 + 129
$79C    $083E   SYS      $83E            ; System call to 83E
$79E    $80DB   UNKNOWN  80DB            ; Unknown 8xxx instruction
$7A0    $44A4   SNE      V4, #A4         ; Skip if V4 != 164
$7A2    $600E   LD       V0, #0E         ; Load 14 into V0
$7A4    $CF29   RND      VF, #29         ; VF = random & 29
$7A6    $B0E2   JP       V0, $0E2        ; Jump to V0 + 0E2
$7A8    $5EB6   UNKNOWN  $5EB6           ; Unknown 5xxx instruction
$7AA    $E107   UNKNOWN  $E107           ; Unknown Exxx instruction
$7AC    $F48A   UNKNOWN  F48A            ; Unknown Fxxx instruction
$7AE    $78AA   ADD      V8, #AA         ; Add 170 to V8
$7B0    $9DA0   SNE      VD, VA          ; Skip if VD != VA
$7B2    $4AD3   SNE      VA, #D3         ; Skip if VA != 211
$7B4    $A866   LD       I, $866         ; Load 866 into I
$7B6    $1B89   JP       $B89            ; Jump to B89
$7B8    $65E5   LD       V5, #E5         ; Load 229 into V5
$7BA    $01BA   SYS      $1BA            ; System call to 1BA
$7BC    $EC79   UNKNOWN  $EC79           ; Unknown Exxx instruction
$7BE    $C94D   RND      V9, #4D         ; V9 = random & 4D
$7C0    $7931   ADD      V9, #31         ; Add 49 to V9
$7C2    $6910   LD       V9, #10         ; Load 16 into V9
$7C4    $87F3   XOR      V7, VF          ; V7 ^= VF
$7C6    $7872   ADD      V8, #72         ; Add 114 to V8
$7C8    $A909   LD       I, $909         ; Load 909 into I
$7CA    $09CD   SYS      $9CD            ; System call to 9CD
$7CC    $BD5D   JP       V0, $D5D        ; Jump to V0 + D5D
$7CE    $891D   UNKNOWN  891D            ; Unknown 8xxx instruction
$7D0    $214C   CALL     $14C            ; Call subroutine at 14C
$7D2    $6588   LD       V5, #88         ; Load 136 into V5
$7D4    $3EC6   SE       VE, #C6         ; Skip if VE == 198
$7D6    $6A59   LD       VA, #59         ; Load 89 into VA
$7D8    $D7FB   DRW      V7, VF, #B      ; Draw 11-byte sprite at V7, VF
$7DA    $769B   ADD      V6, #9B         ; Add 155 to V6
$7DC    $494B   SNE      V9, #4B         ; Skip if V9 != 75
$7DE    $D32F   DRW      V3, V2, #F      ; Draw 15-byte sprite at V3, V2
$7E0    $5702   UNKNOWN  $5702           ; Unknown 5xxx instruction
$7E2    $E70C   UNKNOWN  $E70C           ; Unknown Exxx instruction
$7E4    $E22F   UNKNOWN  $E22F           ; Unknown Exxx instruction
$7E6    $50E1   UNKNOWN  $50E1           ; Unknown 5xxx instruction
$7E8    $0318   SYS      $318            ; System call to 318
$7EA    $0478   SYS      $478            ; System call to 478
$7EC    $1943   JP       $943            ; Jump to 943
$7EE    $AB0D   LD       I, $B0D         ; Load B0D into I
$7F0    $C148   RND      V1, #48         ; V1 = random & 48
$7F2    $9ED5   UNKNOWN  $9ED5           ; Unknown 9xxx instruction
$7F4    $3DBB   SE       VD, #BB         ; Skip if VD == 187
$7F6    $B6CA   JP       V0, $6CA        ; Jump to V0 + 6CA
$7F8    $CA45   RND      VA, #45         ; VA = random & 45
$7FA    $5685   UNKNOWN  $5685           ; Unknown 5xxx instruction
$7FC    $6BB4   LD       VB, #B4         ; Load 180 into VB
$7FE    $475D   SNE      V7, #5D         ; Skip if V7 != 93
$800    $9408   UNKNOWN  $9408           ; Unknown 9xxx instruction
$802    $9C37   UNKNOWN  $9C37           ; Unknown 9xxx instruction
$804    $6CB0   LD       VC, #B0         ; Load 176 into VC
$806    $61AB   LD       V1, #AB         ; Load 171 into V1
$808    $652A   LD       V5, #2A         ; Load 42 into V5
$80A    $8D70   LD       VD, V7          ; VD = V7
$80C    $4592   SNE      V5, #92         ; Skip if V5 != 146
$80E    $E190   UNKNOWN  $E190           ; Unknown Exxx instruction
$810    $8666   SHR      V6              ; V6 >>= 1, VF = LSB
$812    $03EA   SYS      $3EA            ; System call to 3EA
$814    $BC5C   JP       V0, $C5C        ; Jump to V0 + C5C
$816    $77DD   ADD      V7, #DD         ; Add 221 to V7
$818    $F1E2   UNKNOWN  F1E2            ; Unknown Fxxx instruction
$81A    $09DA   SYS      $9DA            ; System call to 9DA
$81C    $8515   SUB      V5, V1          ; V5 -= V1, VF = !borrow
$81E    $0BE3   SYS      $BE3            ; System call to BE3
$820    $A636   LD       I, $636         ; Load 636 into I
$822    $2FE3   CALL     $FE3            ; Call subroutine at FE3
$824    $16A9   JP       $6A9            ; Jump to 6A9
$826    $3CAD   SE       VC, #AD         ; Skip if VC == 173
$828    $7200   ADD      V2, #00         ; Add 0 to V2
$82A    $057A   SYS      $57A            ; System call to 57A
$82C    $4EB4   SNE      VE, #B4         ; Skip if VE != 180
$82E    $6F09   LD       VF, #09         ; Load 9 into VF
$830    $ED3F   UNKNOWN  $ED3F           ; Unknown Exxx instruction
$832    $60EC   LD       V0, #EC         ; Load 236 into V0
$834    $9432   UNKNOWN  $9432           ; Unknown 9xxx instruction
$836    $FC1E   ADD      I, VC           ; I += VC
$838    $9A17   UNKNOWN  $9A17           ; Unknown 9xxx instruction
$83A    $239A   CALL     $39A            ; Call subroutine at 39A
$83C    $4B26   SNE      VB, #26         ; Skip if VB != 38
$83E    $9824   UNKNOWN  $9824           ; Unknown 9xxx instruction
$840    $755B   ADD      V5, #5B         ; Add 91 to V5
$842    $6DE2   LD       VD, #E2         ; Load 226 into VD
$844    $D628   DRW      V6, V2, #8      ; Draw 8-byte sprite at V6, V2
$846    $AF8C   LD       I, $F8C         ; Load F8C into I
$848    $A0DD   LD       I, $0DD         ; Load 0DD into I
$84A    $2410   CALL     $410            ; Call subroutine at 410
$84C    $EFAF   UNKNOWN  $EFAF           ; Unknown Exxx instruction
$84E    $7CDE   ADD      VC, #DE         ; Add 222 to VC
$850    $D81A   DRW      V8, V1, #A      ; Draw 10-byte sprite at V8, V1
$852    $2DE0   CALL     $DE0            ; Call subroutine at DE0
$854    $51DD   UNKNOWN  $51DD           ; Unknown 5xxx instruction
$856    $F1EF   UNKNOWN  F1EF            ; Unknown Fxxx instruction
$858    $E53B   UNKNOWN  $E53B           ; Unknown Exxx instruction
$85A    $666D   LD       V6, #6D         ; Load 109 into V6
$85C    $4A1B   SNE      VA, #1B         ; Skip if VA != 27
$85E    $C2A8   RND      V2, #A8         ; V2 = random & A8
$860    $6E4E   LD       VE, #4E         ; Load 78 into VE
$862    $7D4F   ADD      VD, #4F         ; Add 79 to VD
$864    $DB97   DRW      VB, V9, #7      ; Draw 7-byte sprite at VB, V9
$866    $4F91   SNE      VF, #91         ; Skip if VF != 145
$868    $090E   SYS      $90E            ; System call to 90E
$86A    $DF64   DRW      VF, V6, #4      ; Draw 4-byte sprite at VF, V6
$86C    $31A6   SE       V1, #A6         ; Skip if V1 == 166
$86E    $F7E8   UNKNOWN  F7E8            ; Unknown Fxxx instruction
$870    $947E   UNKNOWN  $947E           ; Unknown 9xxx instruction
$872    $C2C3   RND      V2, #C3         ; V2 = random & C3
$874    $8518   UNKNOWN  8518            ; Unknown 8xxx instruction
$876    $FBDB   UNKNOWN  FBDB            ; Unknown Fxxx instruction
$878    $DE05   DRW      VE, V0, #5      ; Draw 5-byte sprite at VE, V0
$87A    $FA33   LD       B, VA           ; Store BCD of VA at I, I+1, I+2
$87C    $F7E5   UNKNOWN  F7E5            ; Unknown Fxxx instruction
$87E    $BEDF   JP       V0, $EDF        ; Jump to V0 + EDF
$880    $2FE9   CALL     $FE9            ; Call subroutine at FE9
$882    $ABE2   LD       I, $BE2         ; Load BE2 into I
$884    $3E35   SE       VE, #35         ; Skip if VE == 53
$886    $6C4A   LD       VC, #4A         ; Load 74 into VC
$888    $8563   XOR      V5, V6          ; V5 ^= V6
$88A    $E3BD   UNKNOWN  $E3BD           ; Unknown Exxx instruction
$88C    $0F35   SYS      $F35            ; System call to F35
$88E    $07B0   SYS      $7B0            ; System call to 7B0
$890    $D6B6   DRW      V6, VB, #6      ; Draw 6-byte sprite at V6, VB
$892    $A2D3   LD       I, $2D3         ; Load 2D3 into I
$894    $3477   SE       V4, #77         ; Skip if V4 == 119
$896    $1C52   JP       $C52            ; Jump to C52
$898    $93C3   UNKNOWN  $93C3           ; Unknown 9xxx instruction
$89A    $9156   UNKNOWN  $9156           ; Unknown 9xxx instruction
$89C    $3320   SE       V3, #20         ; Skip if V3 == 32
$89E    $B8AE   JP       V0, $8AE        ; Jump to V0 + 8AE
$8A0    $6A7D   LD       VA, #7D         ; Load 125 into VA
$8A2    $D5CC   DRW      V5, VC, #C      ; Draw 12-byte sprite at V5, VC
$8A4    $0FDD   SYS      $FDD            ; System call to FDD
$8A6    $AB35   LD       I, $B35         ; Load B35 into I
$8A8    $3943   SE       V9, #43         ; Skip if V9 == 67
$8AA    $3D17   SE       VD, #17         ; Skip if VD == 23
$8AC    $2263   CALL     $263            ; Call subroutine at 263
$8AE    $D9ED   DRW      V9, VE, #D      ; Draw 13-byte sprite at V9, VE
$8B0    $1FD9   JP       $FD9            ; Jump to FD9
$8B2    $B9C3   JP       V0, $9C3        ; Jump to V0 + 9C3
$8B4    $82C9   UNKNOWN  82C9            ; Unknown 8xxx instruction
$8B6    $6390   LD       V3, #90         ; Load 144 into V3
$8B8    $987E   UNKNOWN  $987E           ; Unknown 9xxx instruction
$8BA    $41E5   SNE      V1, #E5         ; Skip if V1 != 229
$8BC    $2D00   CALL     $D00            ; Call subroutine at D00
$8BE    $CBE3   RND      VB, #E3         ; VB = random & E3
$8C0    $BBC7   JP       V0, $BC7        ; Jump to V0 + BC7
$8C2    $A3B2   LD       I, $3B2         ; Load 3B2 into I
$8C4    $F868   UNKNOWN  F868            ; Unknown Fxxx instruction
$8C6    $AF92   LD       I, $F92         ; Load F92 into I
$8C8    $C79B   RND      V7, #9B         ; V7 = random & 9B
$8CA    $EC51   UNKNOWN  $EC51           ; Unknown Exxx instruction
$8CC    $B937   JP       V0, $937        ; Jump to V0 + 937
$8CE    $5267   UNKNOWN  $5267           ; Unknown 5xxx instruction
$8D0    $145C   JP       $45C            ; Jump to 45C
$8D2    $7AEF   ADD      VA, #EF         ; Add 239 to VA
$8D4    $8336   SHR      V3              ; V3 >>= 1, VF = LSB
$8D6    $7D64   ADD      VD, #64         ; Add 100 to VD
$8D8    $508B   UNKNOWN  $508B           ; Unknown 5xxx instruction
$8DA    $2B03   CALL     $B03            ; Call subroutine at B03
$8DC    $1943   JP       $943            ; Jump to 943
$8DE    $E207   UNKNOWN  $E207           ; Unknown Exxx instruction
$8E0    $8483   XOR      V4, V8          ; V4 ^= V8
$8E2    $A0A4   LD       I, $0A4         ; Load 0A4 into I
$8E4    $DEC9   DRW      VE, VC, #9      ; Draw 9-byte sprite at VE, VC
$8E6    $54EC   UNKNOWN  $54EC           ; Unknown 5xxx instruction
$8E8    $9DC4   UNKNOWN  $9DC4           ; Unknown 9xxx instruction
$8EA    $64C2   LD       V4, #C2         ; Load 194 into V4
$8EC    $36A8   SE       V6, #A8         ; Skip if V6 == 168
$8EE    $E8B7   UNKNOWN  $E8B7           ; Unknown Exxx instruction
$8F0    $69B4   LD       V9, #B4         ; Load 180 into V9
$8F2    $3B17   SE       VB, #17         ; Skip if VB == 23
$8F4    $D328   DRW      V3, V2, #8      ; Draw 8-byte sprite at V3, V2
$8F6    $8589   UNKNOWN  8589            ; Unknown 8xxx instruction
$8F8    $6BCE   LD       VB, #CE         ; Load 206 into VB
$8FA    $3285   SE       V2, #85         ; Skip if V2 == 133
$8FC    $D77D   DRW      V7, V7, #D      ; Draw 13-byte sprite at V7, V7
$8FE    $045B   SYS      $45B            ; System call to 45B
$900    $91E3   UNKNOWN  $91E3           ; Unknown 9xxx instruction
$902    $CD45   RND      VD, #45         ; VD = random & 45
$904    $A051   LD       I, $051         ; Load 051 into I
$906    $4468   SNE      V4, #68         ; Skip if V4 != 104
$908    $AA98   LD       I, $A98         ; Load A98 into I
$90A    $8322   AND      V3, V2          ; V3 &= V2
$90C    $3F13   SE       VF, #13         ; Skip if VF == 19
$90E    $F5D8   UNKNOWN  F5D8            ; Unknown Fxxx instruction
$910    $9028   UNKNOWN  $9028           ; Unknown 9xxx instruction
$912    $6836   LD       V8, #36         ; Load 54 into V8
$914    $24D6   CALL     $4D6            ; Call subroutine at 4D6
$916    $3A71   SE       VA, #71         ; Skip if VA == 113
$918    $E33A   UNKNOWN  $E33A           ; Unknown Exxx instruction
$91A    $F5F9   UNKNOWN  F5F9            ; Unknown Fxxx instruction
$91C    $077C   SYS      $77C            ; System call to 77C
$91E    $D3AB   DRW      V3, VA, #B      ; Draw 11-byte sprite at V3, VA
$920    $FF53   UNKNOWN  FF53            ; Unknown Fxxx instruction
$922    $7D31   ADD      VD, #31         ; Add 49 to VD
$924    $1EDE   JP       $EDE            ; Jump to EDE
$926    $CA97   RND      VA, #97         ; VA = random & 97
$928    $0B07   SYS      $B07            ; System call to B07
$92A    $6647   LD       V6, #47         ; Load 71 into V6
$92C    $0BBD   SYS      $BBD            ; System call to BBD
$92E    $39CE   SE       V9, #CE         ; Skip if V9 == 206
$930    $93AC   UNKNOWN  $93AC           ; Unknown 9xxx instruction
$932    $BD03   JP       V0, $D03        ; Jump to V0 + D03
$934    $18AD   JP       $8AD            ; Jump to 8AD
$936    $6CC7   LD       VC, #C7         ; Load 199 into VC
$938    $4C27   SNE      VC, #27         ; Skip if VC != 39
$93A    $A94B   LD       I, $94B         ; Load 94B into I
$93C    $6B4B   LD       VB, #4B         ; Load 75 into VB
$93E    $86E2   AND      V6, VE          ; V6 &= VE
$940    $7615   ADD      V6, #15         ; Add 21 to V6
$942    $EB83   UNKNOWN  $EB83           ; Unknown Exxx instruction
$944    $90D7   UNKNOWN  $90D7           ; Unknown 9xxx instruction
$946    $ED47   UNKNOWN  $ED47           ; Unknown Exxx instruction
$948    $35B5   SE       V5, #B5         ; Skip if V5 == 181
$94A    $FF71   UNKNOWN  FF71            ; Unknown Fxxx instruction
$94C    $5FAF   UNKNOWN  $5FAF           ; Unknown 5xxx instruction
$94E    $7355   ADD      V3, #55         ; Add 85 to V3
$950    $8910   LD       V9, V1          ; V9 = V1
$952    $ED04   UNKNOWN  $ED04           ; Unknown Exxx instruction
$954    $373B   SE       V7, #3B         ; Skip if V7 == 59
$956    $878D   UNKNOWN  878D            ; Unknown 8xxx instruction
$958    $3E3D   SE       VE, #3D         ; Skip if VE == 61
$95A    $6295   LD       V2, #95         ; Load 149 into V2
$95C    $88DE   SHL      V8              ; V8 <<= 1, VF = MSB
$95E    $42AA   SNE      V2, #AA         ; Skip if V2 != 170
$960    $60D7   LD       V0, #D7         ; Load 215 into V0
$962    $1A5A   JP       $A5A            ; Jump to A5A
$964    $8397   SUBN     V3, V9          ; V3 = V9 - V3, VF = !borrow
$966    $B58E   JP       V0, $58E        ; Jump to V0 + 58E
$968    $265B   CALL     $65B            ; Call subroutine at 65B
$96A    $887C   UNKNOWN  887C            ; Unknown 8xxx instruction
$96C    $6BC3   LD       VB, #C3         ; Load 195 into VB
$96E    $210A   CALL     $10A            ; Call subroutine at 10A
$970    $D7A4   DRW      V7, VA, #4      ; Draw 4-byte sprite at V7, VA
$972    $5957   UNKNOWN  $5957           ; Unknown 5xxx instruction
$974    $5B1A   UNKNOWN  $5B1A           ; Unknown 5xxx instruction
$976    $0842   SYS      $842            ; System call to 842
$978    $001F   SYS      $01F            ; System call to 01F
$97A    $16A4   JP       $6A4            ; Jump to 6A4
$97C    $4384   SNE      V3, #84         ; Skip if V3 != 132
$97E    $704B   ADD      V0, #4B         ; Add 75 to V0
$980    $7538   ADD      V5, #38         ; Add 56 to V5
$982    $A6CB   LD       I, $6CB         ; Load 6CB into I
$984    $A223   LD       I, $223         ; Load 223 into I
$986    $8F03   XOR      VF, V0          ; VF ^= V0
$988    $CD9F   RND      VD, #9F         ; VD = random & 9F
$98A    $B095   JP       V0, $095        ; Jump to V0 + 095
$98C    $97BB   UNKNOWN  $97BB           ; Unknown 9xxx instruction
$98E    $0502   SYS      $502            ; System call to 502
$990    $054D   SYS      $54D            ; System call to 54D
$992    $3E15   SE       VE, #15         ; Skip if VE == 21
$994    $9E49   UNKNOWN  $9E49           ; Unknown 9xxx instruction
$996    $48BA   SNE      V8, #BA         ; Skip if V8 != 186
$998    $B8E8   JP       V0, $8E8        ; Jump to V0 + 8E8
$99A    $8C45   SUB      VC, V4          ; VC -= V4, VF = !borrow
$99C    $4E37   SNE      VE, #37         ; Skip if VE != 55
$99E    $B364   JP       V0, $364        ; Jump to V0 + 364
$9A0    $E10E   UNKNOWN  $E10E           ; Unknown Exxx instruction
$9A2    $5092   UNKNOWN  $5092           ; Unknown 5xxx instruction
$9A4    $11C8   JP       $1C8            ; Jump to 1C8
$9A6    $9D43   UNKNOWN  $9D43           ; Unknown 9xxx instruction
$9A8    $E9A7   UNKNOWN  $E9A7           ; Unknown Exxx instruction
$9AA    $FF7A   UNKNOWN  FF7A            ; Unknown Fxxx instruction
$9AC    $D699   DRW      V6, V9, #9      ; Draw 9-byte sprite at V6, V9
$9AE    $5794   UNKNOWN  $5794           ; Unknown 5xxx instruction
$9B0    $777B   ADD      V7, #7B         ; Add 123 to V7
$9B2    $08C6   SYS      $8C6            ; System call to 8C6
$9B4    $2A78   CALL     $A78            ; Call subroutine at A78
$9B6    $FC67   UNKNOWN  FC67            ; Unknown Fxxx instruction
$9B8    $955B   UNKNOWN  $955B           ; Unknown 9xxx instruction
$9BA    $2549   CALL     $549            ; Call subroutine at 549
$9BC    $8493   XOR      V4, V9          ; V4 ^= V9
$9BE    $80DF   UNKNOWN  80DF            ; Unknown 8xxx instruction
$9C0    $73F7   ADD      V3, #F7         ; Add 247 to V3
$9C2    $3308   SE       V3, #08         ; Skip if V3 == 8
$9C4    $B463   JP       V0, $463        ; Jump to V0 + 463
$9C6    $0EC2   SYS      $EC2            ; System call to EC2
$9C8    $B504   JP       V0, $504        ; Jump to V0 + 504
$9CA    $8028   UNKNOWN  8028            ; Unknown 8xxx instruction
$9CC    $0C8C   SYS      $C8C            ; System call to C8C
$9CE    $F67F   UNKNOWN  F67F            ; Unknown Fxxx instruction
$9D0    $8E4E   SHL      VE              ; VE <<= 1, VF = MSB
$9D2    $905A   UNKNOWN  $905A           ; Unknown 9xxx instruction
$9D4    $F91E   ADD      I, V9           ; I += V9
$9D6    $4C6B   SNE      VC, #6B         ; Skip if VC != 107
$9D8    $3BD0   SE       VB, #D0         ; Skip if VB == 208
$9DA    $FAC4   UNKNOWN  FAC4            ; Unknown Fxxx instruction
$9DC    $59A7   UNKNOWN  $59A7           ; Unknown 5xxx instruction
$9DE    $CAED   RND      VA, #ED         ; VA = random & ED
$9E0    $5B2A   UNKNOWN  $5B2A           ; Unknown 5xxx instruction
$9E2    $3239   SE       V2, #39         ; Skip if V2 == 57
$9E4    $91FC   UNKNOWN  $91FC           ; Unknown 9xxx instruction
$9E6    $2813   CALL     $813            ; Call subroutine at 813
$9E8    $2D6E   CALL     $D6E            ; Call subroutine at D6E
$9EA    $3060   SE       V0, #60         ; Skip if V0 == 96
$9EC    $8180   LD       V1, V8          ; V1 = V8
$9EE    $E086   UNKNOWN  $E086           ; Unknown Exxx instruction
$9F0    $AA91   LD       I, $A91         ; Load A91 into I
$9F2    $EB3A   UNKNOWN  $EB3A           ; Unknown Exxx instruction
$9F4    $8028   UNKNOWN  8028            ; Unknown 8xxx instruction
$9F6    $4CDE   SNE      VC, #DE         ; Skip if VC != 222
$9F8    $032B   SYS      $32B            ; System call to 32B
$9FA    $09CD   SYS      $9CD            ; System call to 9CD
$9FC    $0415   SYS      $415            ; System call to 415
$9FE    $7EBB   ADD      VE, #BB         ; Add 187 to VE
$A00    $6CB5   LD       VC, #B5         ; Load 181 into VC
$A02    $B76F   JP       V0, $76F        ; Jump to V0 + 76F
$A04    $09AC   SYS      $9AC            ; System call to 9AC
$A06    $0EE4   SYS      $EE4            ; System call to EE4
$A08    $71F5   ADD      V1, #F5         ; Add 245 to V1
$A0A    $D87A   DRW      V8, V7, #A      ; Draw 10-byte sprite at V8, V7
$A0C    $BCD9   JP       V0, $CD9        ; Jump to V0 + CD9
$A0E    $240A   CALL     $40A            ; Call subroutine at 40A
$A10    $E138   UNKNOWN  $E138           ; Unknown Exxx instruction
$A12    $D194   DRW      V1, V9, #4      ; Draw 4-byte sprite at V1, V9
$A14    $ABD4   LD       I, $BD4         ; Load BD4 into I
$A16    $921F   UNKNOWN  $921F           ; Unknown 9xxx instruction
$A18    $798C   ADD      V9, #8C         ; Add 140 to V9
$A1A    $CD87   RND      VD, #87         ; VD = random & 87
$A1C    $099F   SYS      $99F            ; System call to 99F
$A1E    $4243   SNE      V2, #43         ; Skip if V2 != 67
$A20    $9676   UNKNOWN  $9676           ; Unknown 9xxx instruction
$A22    $7684   ADD      V6, #84         ; Add 132 to V6
$A24    $C768   RND      V7, #68         ; V7 = random & 68
$A26    $0BCB   SYS      $BCB            ; System call to BCB
$A28    $787D   ADD      V8, #7D         ; Add 125 to V8
$A2A    $3B91   SE       VB, #91         ; Skip if VB == 145
$A2C    $48A6   SNE      V8, #A6         ; Skip if V8 != 166
$A2E    $67CD   LD       V7, #CD         ; Load 205 into V7
$A30    $A210   LD       I, $210         ; Load 210 into I
$A32    $43CD   SNE      V3, #CD         ; Skip if V3 != 205
$A34    $0AD9   SYS      $AD9            ; System call to AD9
$A36    $4AA2   SNE      VA, #A2         ; Skip if VA != 162
$A38    $8BCD   UNKNOWN  8BCD            ; Unknown 8xxx instruction
$A3A    $8536   SHR      V5              ; V5 >>= 1, VF = LSB
$A3C    $8EB5   SUB      VE, VB          ; VE -= VB, VF = !borrow
$A3E    $06E6   SYS      $6E6            ; System call to 6E6
$A40    $8D8C   UNKNOWN  8D8C            ; Unknown 8xxx instruction
$A42    $1156   JP       $156            ; Jump to 156
$A44    $D8DD   DRW      V8, VD, #D      ; Draw 13-byte sprite at V8, VD
$A46    $924B   UNKNOWN  $924B           ; Unknown 9xxx instruction
$A48    $B6A6   JP       V0, $6A6        ; Jump to V0 + 6A6
$A4A    $AF23   LD       I, $F23         ; Load F23 into I
$A4C    $5C4C   UNKNOWN  $5C4C           ; Unknown 5xxx instruction
$A4E    $F45B   UNKNOWN  F45B            ; Unknown Fxxx instruction
$A50    $513B   UNKNOWN  $513B           ; Unknown 5xxx instruction
$A52    $3804   SE       V8, #04         ; Skip if V8 == 4
$A54    $4304   SNE      V3, #04         ; Skip if V3 != 4
$A56    $2D45   CALL     $D45            ; Call subroutine at D45
$A58    $BFA4   JP       V0, $FA4        ; Jump to V0 + FA4
$A5A    $B971   JP       V0, $971        ; Jump to V0 + 971
$A5C    $D581   DRW      V5, V8, #1      ; Draw 1-byte sprite at V5, V8
$A5E    $D490   DRW      V4, V9, #0      ; Draw 0-byte sprite at V4, V9
$A60    $9C17   UNKNOWN  $9C17           ; Unknown 9xxx instruction
$A62    $29AF   CALL     $9AF            ; Call subroutine at 9AF
$A64    $FA5C   UNKNOWN  FA5C            ; Unknown Fxxx instruction
$A66    $799D   ADD      V9, #9D         ; Add 157 to V9
$A68    $C931   RND      V9, #31         ; V9 = random & 31
$A6A    $9F88   UNKNOWN  $9F88           ; Unknown 9xxx instruction
$A6C    $BD96   JP       V0, $D96        ; Jump to V0 + D96
$A6E    $39E3   SE       V9, #E3         ; Skip if V9 == 227
$A70    $3029   SE       V0, #29         ; Skip if V0 == 41
$A72    $CE0F   RND      VE, #0F         ; VE = random & 0F
$A74    $BEA9   JP       V0, $EA9        ; Jump to V0 + EA9
$A76    $D644   DRW      V6, V4, #4      ; Draw 4-byte sprite at V6, V4
$A78    $EE4D   UNKNOWN  $EE4D           ; Unknown Exxx instruction
$A7A    $BB7E   JP       V0, $B7E        ; Jump to V0 + B7E
$A7C    $30F9   SE       V0, #F9         ; Skip if V0 == 249
$A7E    $26F8   CALL     $6F8            ; Call subroutine at 6F8
$A80    $F2E3   UNKNOWN  F2E3            ; Unknown Fxxx instruction
$A82    $0A78   SYS      $A78            ; System call to A78
$A84    $63DF   LD       V3, #DF         ; Load 223 into V3
$A86    $6410   LD       V4, #10         ; Load 16 into V4
$A88    $6B07   LD       VB, #07         ; Load 7 into VB
$A8A    $AB82   LD       I, $B82         ; Load B82 into I
$A8C    $C922   RND      V9, #22         ; V9 = random & 22
$A8E    $8222   AND      V2, V2          ; V2 &= V2
$A90    $4E4F   SNE      VE, #4F         ; Skip if VE != 79
$A92    $4CFC   SNE      VC, #FC         ; Skip if VC != 252
$A94    $17F3   JP       $7F3            ; Jump to 7F3
$A96    $94E3   UNKNOWN  $94E3           ; Unknown 9xxx instruction
$A98    $5C31   UNKNOWN  $5C31           ; Unknown 5xxx instruction
$A9A    $29EC   CALL     $9EC            ; Call subroutine at 9EC
$A9C    $1D81   JP       $D81            ; Jump to D81
$A9E    $5D8F   UNKNOWN  $5D8F           ; Unknown 5xxx instruction
$AA0    $A9D2   LD       I, $9D2         ; Load 9D2 into I
$AA2    $8469   UNKNOWN  8469            ; Unknown 8xxx instruction
$AA4    $41A1   SNE      V1, #A1         ; Skip if V1 != 161
$AA6    $9E7C   UNKNOWN  $9E7C           ; Unknown 9xxx instruction
$AA8    $DD30   DRW      VD, V3, #0      ; Draw 0-byte sprite at VD, V3
$AAA    $BC5C   JP       V0, $C5C        ; Jump to V0 + C5C
$AAC    $678F   LD       V7, #8F         ; Load 143 into V7
$AAE    $3194   SE       V1, #94         ; Skip if V1 == 148
$AB0    $29BA   CALL     $9BA            ; Call subroutine at 9BA
$AB2    $D0A0   DRW      V0, VA, #0      ; Draw 0-byte sprite at V0, VA
$AB4    $F436   UNKNOWN  F436            ; Unknown Fxxx instruction
$AB6    $437A   SNE      V3, #7A         ; Skip if V3 != 122
$AB8    $79BD   ADD      V9, #BD         ; Add 189 to V9
$ABA    $402F   SNE      V0, #2F         ; Skip if V0 != 47
$ABC    $E3F6   UNKNOWN  $E3F6           ; Unknown Exxx instruction
$ABE    $9846   UNKNOWN  $9846           ; Unknown 9xxx instruction
$AC0    $71E2   ADD      V1, #E2         ; Add 226 to V1
$AC2    $1E98   JP       $E98            ; Jump to E98
$AC4    $2168   CALL     $168            ; Call subroutine at 168
$AC6    $9FE5   UNKNOWN  $9FE5           ; Unknown 9xxx instruction
$AC8    $E87B   UNKNOWN  $E87B           ; Unknown Exxx instruction
$ACA    $30A8   SE       V0, #A8         ; Skip if V0 == 168
$ACC    $6D92   LD       VD, #92         ; Load 146 into VD
$ACE    $4940   SNE      V9, #40         ; Skip if V9 != 64
$AD0    $EB55   UNKNOWN  $EB55           ; Unknown Exxx instruction
$AD2    $F07F   UNKNOWN  F07F            ; Unknown Fxxx instruction
$AD4    $5086   UNKNOWN  $5086           ; Unknown 5xxx instruction
$AD6    $08D3   SYS      $8D3            ; System call to 8D3
$AD8    $EECD   UNKNOWN  $EECD           ; Unknown Exxx instruction
$ADA    $FF21   UNKNOWN  FF21            ; Unknown Fxxx instruction
$ADC    $2BA4   CALL     $BA4            ; Call subroutine at BA4
$ADE    $C2D1   RND      V2, #D1         ; V2 = random & D1
$AE0    $9713   UNKNOWN  $9713           ; Unknown 9xxx instruction
$AE2    $2DC3   CALL     $DC3            ; Call subroutine at DC3
$AE4    $9E96   UNKNOWN  $9E96           ; Unknown 9xxx instruction
$AE6    $ED21   UNKNOWN  $ED21           ; Unknown Exxx instruction
$AE8    $2B92   CALL     $B92            ; Call subroutine at B92
$AEA    $6653   LD       V6, #53         ; Load 83 into V6
$AEC    $9A5A   UNKNOWN  $9A5A           ; Unknown 9xxx instruction
$AEE    $B344   JP       V0, $344        ; Jump to V0 + 344
$AF0    $EFE4   UNKNOWN  $EFE4           ; Unknown Exxx instruction
$AF2    $0E42   SYS      $E42            ; System call to E42
$AF4    $61B3   LD       V1, #B3         ; Load 179 into V1
$AF6    $F5E4   UNKNOWN  F5E4            ; Unknown Fxxx instruction
$AF8    $6F90   LD       VF, #90         ; Load 144 into VF
$AFA    $E328   UNKNOWN  $E328           ; Unknown Exxx instruction
$AFC    $11E7   JP       $1E7            ; Jump to 1E7
$AFE    $82C6   SHR      V2              ; V2 >>= 1, VF = LSB
$B00    $B366   JP       V0, $366        ; Jump to V0 + 366
$B02    $BFA1   JP       V0, $FA1        ; Jump to V0 + FA1
$B04    $B6A0   JP       V0, $6A0        ; Jump to V0 + 6A0
$B06    $9E26   UNKNOWN  $9E26           ; Unknown 9xxx instruction
$B08    $9B42   UNKNOWN  $9B42           ; Unknown 9xxx instruction
$B0A    $8826   SHR      V8              ; V8 >>= 1, VF = LSB
$B0C    $5B34   UNKNOWN  $5B34           ; Unknown 5xxx instruction
$B0E    $BDA8   JP       V0, $DA8        ; Jump to V0 + DA8
$B10    $DA93   DRW      VA, V9, #3      ; Draw 3-byte sprite at VA, V9
$B12    $00DB   SYS      $0DB            ; System call to 0DB
$B14    $A5CE   LD       I, $5CE         ; Load 5CE into I
$B16    $A662   LD       I, $662         ; Load 662 into I
$B18    $CEE4   RND      VE, #E4         ; VE = random & E4
$B1A    $9705   UNKNOWN  $9705           ; Unknown 9xxx instruction
$B1C    $41A9   SNE      V1, #A9         ; Skip if V1 != 169
$B1E    $896F   UNKNOWN  896F            ; Unknown 8xxx instruction
$B20    $A93D   LD       I, $93D         ; Load 93D into I
$B22    $47E4   SNE      V7, #E4         ; Skip if V7 != 228
$B24    $9C8C   UNKNOWN  $9C8C           ; Unknown 9xxx instruction
$B26    $C54A   RND      V5, #4A         ; V5 = random & 4A
$B28    $BEAF   JP       V0, $EAF        ; Jump to V0 + EAF
$B2A    $6328   LD       V3, #28         ; Load 40 into V3
$B2C    $BEB8   JP       V0, $EB8        ; Jump to V0 + EB8
$B2E    $2840   CALL     $840            ; Call subroutine at 840
$B30    $C363   RND      V3, #63         ; V3 = random & 63
$B32    $15AC   JP       $5AC            ; Jump to 5AC
$B34    $0E85   SYS      $E85            ; System call to E85
$B36    $059E   SYS      $59E            ; System call to 59E
$B38    $E4E6   UNKNOWN  $E4E6           ; Unknown Exxx instruction
$B3A    $82AE   SHL      V2              ; V2 <<= 1, VF = MSB
$B3C    $E1C8   UNKNOWN  $E1C8           ; Unknown Exxx instruction
$B3E    $75AF   ADD      V5, #AF         ; Add 175 to V5
$B40    $20CC   CALL     $0CC            ; Call subroutine at 0CC
$B42    $097B   SYS      $97B            ; System call to 97B
$B44    $6EE4   LD       VE, #E4         ; Load 228 into VE
$B46    $382A   SE       V8, #2A         ; Skip if V8 == 42
$B48    $5CDF   UNKNOWN  $5CDF           ; Unknown 5xxx instruction
$B4A    $826C   UNKNOWN  826C            ; Unknown 8xxx instruction
$B4C    $C958   RND      V9, #58         ; V9 = random & 58
$B4E    $6B34   LD       VB, #34         ; Load 52 into VB
$B50    $BF57   JP       V0, $F57        ; Jump to V0 + F57
$B52    $2C89   CALL     $C89            ; Call subroutine at C89
$B54    $8839   UNKNOWN  8839            ; Unknown 8xxx instruction
$B56    $D39D   DRW      V3, V9, #D      ; Draw 13-byte sprite at V3, V9
$B58    $FF4F   UNKNOWN  FF4F            ; Unknown Fxxx instruction
$B5A    $2819   CALL     $819            ; Call subroutine at 819
$B5C    $7674   ADD      V6, #74         ; Add 116 to V6
$B5E    $F7F8   UNKNOWN  F7F8            ; Unknown Fxxx instruction
$B60    $D1D9   DRW      V1, VD, #9      ; Draw 9-byte sprite at V1, VD
$B62    $C514   RND      V5, #14         ; V5 = random & 14
$B64    $E636   UNKNOWN  $E636           ; Unknown Exxx instruction
$B66    $1B51   JP       $B51            ; Jump to B51
$B68    $3744   SE       V7, #44         ; Skip if V7 == 68
$B6A    $386D   SE       V8, #6D         ; Skip if V8 == 109
$B6C    $4D56   SNE      VD, #56         ; Skip if VD != 86
$B6E    $BA8C   JP       V0, $A8C        ; Jump to V0 + A8C
$B70    $5492   UNKNOWN  $5492           ; Unknown 5xxx instruction
$B72    $A603   LD       I, $603         ; Load 603 into I
$B74    $6A68   LD       VA, #68         ; Load 104 into VA
$B76    $D4BB   DRW      V4, VB, #B      ; Draw 11-byte sprite at V4, VB
$B78    $034B   SYS      $34B            ; System call to 34B
$B7A    $2E77   CALL     $E77            ; Call subroutine at E77
$B7C    $694F   LD       V9, #4F         ; Load 79 into V9
$B7E    $3482   SE       V4, #82         ; Skip if V4 == 130
$B80    $D358   DRW      V3, V5, #8      ; Draw 8-byte sprite at V3, V5
$B82    $F61E   ADD      I, V6           ; I += V6
$B84    $FB5E   UNKNOWN  FB5E            ; Unknown Fxxx instruction
$B86    $E86E   UNKNOWN  $E86E           ; Unknown Exxx instruction
$B88    $840E   SHL      V4              ; V4 <<= 1, VF = MSB
$B8A    $A3C5   LD       I, $3C5         ; Load 3C5 into I
$B8C    $A7FC   LD       I, $7FC         ; Load 7FC into I
$B8E    $9D27   UNKNOWN  $9D27           ; Unknown 9xxx instruction
$B90    $5370   SE       V3, V7          ; Skip if V3 == V7
$B92    $4FDD   SNE      VF, #DD         ; Skip if VF != 221
$B94    $0E59   SYS      $E59            ; System call to E59
$B96    $768B   ADD      V6, #8B         ; Add 139 to V6
$B98    $F943   UNKNOWN  F943            ; Unknown Fxxx instruction
$B9A    $43B2   SNE      V3, #B2         ; Skip if V3 != 178
$B9C    $5196   UNKNOWN  $5196           ; Unknown 5xxx instruction
$B9E    $0A27   SYS      $A27            ; System call to A27
$BA0    $DA18   DRW      VA, V1, #8      ; Draw 8-byte sprite at VA, V1
$BA2    $DAA9   DRW      VA, VA, #9      ; Draw 9-byte sprite at VA, VA
$BA4    $8DD4   ADD      VD, VD          ; VD += VD, VF = carry
$BA6    $716A   ADD      V1, #6A         ; Add 106 to V1
$BA8    $A28F   LD       I, $28F         ; Load 28F into I
$BAA    $9A42   UNKNOWN  $9A42           ; Unknown 9xxx instruction
$BAC    $B69B   JP       V0, $69B        ; Jump to V0 + 69B
$BAE    $5949   UNKNOWN  $5949           ; Unknown 5xxx instruction
$BB0    $40DE   SNE      V0, #DE         ; Skip if V0 != 222
$BB2    $F4D4   UNKNOWN  F4D4            ; Unknown Fxxx instruction
$BB4    $A3A9   LD       I, $3A9         ; Load 3A9 into I
$BB6    $94E3   UNKNOWN  $94E3           ; Unknown 9xxx instruction
$BB8    $2B99   CALL     $B99            ; Call subroutine at B99
$BBA    $4F85   SNE      VF, #85         ; Skip if VF != 133
$BBC    $E552   UNKNOWN  $E552           ; Unknown Exxx instruction
$BBE    $089D   SYS      $89D            ; System call to 89D
$BC0    $7104   ADD      V1, #04         ; Add 4 to V1
$BC2    $DC13   DRW      VC, V1, #3      ; Draw 3-byte sprite at VC, V1
$BC4    $CDCC   RND      VD, #CC         ; VD = random & CC
$BC6    $167D   JP       $67D            ; Jump to 67D
$BC8    $23AD   CALL     $3AD            ; Call subroutine at 3AD
$BCA    $B276   JP       V0, $276        ; Jump to V0 + 276
$BCC    $4DA2   SNE      VD, #A2         ; Skip if VD != 162
$BCE    $DBA3   DRW      VB, VA, #3      ; Draw 3-byte sprite at VB, VA
$BD0    $B881   JP       V0, $881        ; Jump to V0 + 881
$BD2    $0DC3   SYS      $DC3            ; System call to DC3
$BD4    $BDBA   JP       V0, $DBA        ; Jump to V0 + DBA
$BD6    $16BD   JP       $6BD            ; Jump to 6BD
$BD8    $EA5F   UNKNOWN  $EA5F           ; Unknown Exxx instruction
$BDA    $78C5   ADD      V8, #C5         ; Add 197 to V8
$BDC    $7862   ADD      V8, #62         ; Add 98 to V8
$BDE    $3B74   SE       VB, #74         ; Skip if VB == 116
$BE0    $3EF5   SE       VE, #F5         ; Skip if VE == 245
$BE2    $EBFD   UNKNOWN  $EBFD           ; Unknown Exxx instruction
$BE4    $33FC   SE       V3, #FC         ; Skip if V3 == 252
$BE6    $1919   JP       $919            ; Jump to 919
$BE8    $D28A   DRW      V2, V8, #A      ; Draw 10-byte sprite at V2, V8
$BEA    $8369   UNKNOWN  8369            ; Unknown 8xxx instruction
$BEC    $9CE5   UNKNOWN  $9CE5           ; Unknown 9xxx instruction
$BEE    $71B9   ADD      V1, #B9         ; Add 185 to V1
$BF0    $21D3   CALL     $1D3            ; Call subroutine at 1D3
$BF2    $9D41   UNKNOWN  $9D41           ; Unknown 9xxx instruction
$BF4    $CC97   RND      VC, #97         ; VC = random & 97
$BF6    $0145   SYS      $145            ; System call to 145
$BF8    $6B62   LD       VB, #62         ; Load 98 into VB
$BFA    $3546   SE       V5, #46         ; Skip if V5 == 70
$BFC    $B6FF   JP       V0, $6FF        ; Jump to V0 + 6FF
$BFE    $31E5   SE       V1, #E5         ; Skip if V1 == 229
$C00    $E587   UNKNOWN  $E587           ; Unknown Exxx instruction
$C02    $0799   SYS      $799            ; System call to 799
$C04    $A7B1   LD       I, $7B1         ; Load 7B1 into I
$C06    $5233   UNKNOWN  $5233           ; Unknown 5xxx instruction
$C08    $FBE0   UNKNOWN  FBE0            ; Unknown Fxxx instruction
$C0A    $FC2A   UNKNOWN  FC2A            ; Unknown Fxxx instruction
$C0C    $6860   LD       V8, #60         ; Load 96 into V8
$C0E    $1C63   JP       $C63            ; Jump to C63
$C10    $26A8   CALL     $6A8            ; Call subroutine at 6A8
$C12    $81A4   ADD      V1, VA          ; V1 += VA, VF = carry
$C14    $BD54   JP       V0, $D54        ; Jump to V0 + D54
$C16    $991A   UNKNOWN  $991A           ; Unknown 9xxx instruction
$C18    $D4F2   DRW      V4, VF, #2      ; Draw 2-byte sprite at V4, VF
$C1A    $AF6F   LD       I, $F6F         ; Load F6F into I
$C1C    $26D9   CALL     $6D9            ; Call subroutine at 6D9
$C1E    $A376   LD       I, $376         ; Load 376 into I
$C20    $4C5D   SNE      VC, #5D         ; Skip if VC != 93
$C22    $B8A2   JP       V0, $8A2        ; Jump to V0 + 8A2
$C24    $6E5C   LD       VE, #5C         ; Load 92 into VE
$C26    $C37B   RND      V3, #7B         ; V3 = random & 7B
$C28    $969B   UNKNOWN  $969B           ; Unknown 9xxx instruction
$C2A    $95ED   UNKNOWN  $95ED           ; Unknown 9xxx instruction
$C2C    $EBD6   UNKNOWN  $EBD6           ; Unknown Exxx instruction
$C2E    $DA4F   DRW      VA, V4, #F      ; Draw 15-byte sprite at VA, V4
$C30    $B110   JP       V0, $110        ; Jump to V0 + 110
$C32    $1AAB   JP       $AAB            ; Jump to AAB
$C34    $744A   ADD      V4, #4A         ; Add 74 to V4
$C36    $A9B2   LD       I, $9B2         ; Load 9B2 into I
$C38    $607A   LD       V0, #7A         ; Load 122 into V0
$C3A    $F44E   UNKNOWN  F44E            ; Unknown Fxxx instruction
$C3C    $7852   ADD      V8, #52         ; Add 82 to V8
$C3E    $64CC   LD       V4, #CC         ; Load 204 into V4
$C40    $D500   DRW      V5, V0, #0      ; Draw 0-byte sprite at V5, V0
$C42    $C8C5   RND      V8, #C5         ; V8 = random & C5
$C44    $1FD5   JP       $FD5            ; Jump to FD5
$C46    $681A   LD       V8, #1A         ; Load 26 into V8
$C48    $9115   UNKNOWN  $9115           ; Unknown 9xxx instruction
$C4A    $A227   LD       I, $227         ; Load 227 into I
$C4C    $FDFA   UNKNOWN  FDFA            ; Unknown Fxxx instruction
$C4E    $3703   SE       V7, #03         ; Skip if V7 == 3
$C50    $4F8E   SNE      VF, #8E         ; Skip if VF != 142
$C52    $BD22   JP       V0, $D22        ; Jump to V0 + D22
$C54    $A5E5   LD       I, $5E5         ; Load 5E5 into I
$C56    $1C57   JP       $C57            ; Jump to C57
$C58    $CEA0   RND      VE, #A0         ; VE = random & A0
$C5A    $B3B2   JP       V0, $3B2        ; Jump to V0 + 3B2
$C5C    $4F6A   SNE      VF, #6A         ; Skip if VF != 106
$C5E    $E717   UNKNOWN  $E717           ; Unknown Exxx instruction
$C60    $AAE3   LD       I, $AE3         ; Load AE3 into I
$C62    $48A4   SNE      V8, #A4         ; Skip if V8 != 164
$C64    $00C2   SYS      $0C2            ; System call to 0C2
$C66    $22E9   CALL     $2E9            ; Call subroutine at 2E9
$C68    $D7B6   DRW      V7, VB, #6      ; Draw 6-byte sprite at V7, VB
$C6A    $E5A8   UNKNOWN  $E5A8           ; Unknown Exxx instruction
$C6C    $04EB   SYS      $4EB            ; System call to 4EB
$C6E    $1FAB   JP       $FAB            ; Jump to FAB
$C70    $0419   SYS      $419            ; System call to 419
$C72    $D5C1   DRW      V5, VC, #1      ; Draw 1-byte sprite at V5, VC
$C74    $11B2   JP       $1B2            ; Jump to 1B2
$C76    $6113   LD       V1, #13         ; Load 19 into V1
$C78    $8E94   ADD      VE, V9          ; VE += V9, VF = carry
$C7A    $736D   ADD      V3, #6D         ; Add 109 to V3
$C7C    $6129   LD       V1, #29         ; Load 41 into V1
$C7E    $7242   ADD      V2, #42         ; Add 66 to V2
$C80    $8648   UNKNOWN  8648            ; Unknown 8xxx instruction
$C82    $2BA0   CALL     $BA0            ; Call subroutine at BA0
$C84    $265D   CALL     $65D            ; Call subroutine at 65D
$C86    $4036   SNE      V0, #36         ; Skip if V0 != 54
$C88    $01A9   SYS      $1A9            ; System call to 1A9
$C8A    $33B9   SE       V3, #B9         ; Skip if V3 == 185
$C8C    $0801   SYS      $801            ; System call to 801
$C8E    $83A7   SUBN     V3, VA          ; V3 = VA - V3, VF = !borrow
$C90    $ECD6   UNKNOWN  $ECD6           ; Unknown Exxx instruction
$C92    $C739   RND      V7, #39         ; V7 = random & 39
$C94    $0104   SYS      $104            ; System call to 104
$C96    $09D4   SYS      $9D4            ; System call to 9D4
$C98    $02EC   SYS      $2EC            ; System call to 2EC
$C9A    $B48F   JP       V0, $48F        ; Jump to V0 + 48F
$C9C    $781E   ADD      V8, #1E         ; Add 30 to V8
$C9E    $BB8B   JP       V0, $B8B        ; Jump to V0 + B8B
$CA0    $2A58   CALL     $A58            ; Call subroutine at A58
$CA2    $CE97   RND      VE, #97         ; VE = random & 97
$CA4    $B66B   JP       V0, $66B        ; Jump to V0 + 66B
$CA6    $40B0   SNE      V0, #B0         ; Skip if V0 != 176
$CA8    $A939   LD       I, $939         ; Load 939 into I
$CAA    $B01D   JP       V0, $01D        ; Jump to V0 + 01D
$CAC    $C9B9   RND      V9, #B9         ; V9 = random & B9
$CAE    $894D   UNKNOWN  894D            ; Unknown 8xxx instruction
$CB0    $D86E   DRW      V8, V6, #E      ; Draw 14-byte sprite at V8, V6
$CB2    $8C16   SHR      VC              ; VC >>= 1, VF = LSB
$CB4    $1F72   JP       $F72            ; Jump to F72
$CB6    $16F2   JP       $6F2            ; Jump to 6F2
$CB8    $85DD   UNKNOWN  85DD            ; Unknown 8xxx instruction
$CBA    $927D   UNKNOWN  $927D           ; Unknown 9xxx instruction
$CBC    $AB24   LD       I, $B24         ; Load B24 into I
$CBE    $0E7F   SYS      $E7F            ; System call to E7F
$CC0    $B439   JP       V0, $439        ; Jump to V0 + 439
$CC2    $6EF9   LD       VE, #F9         ; Load 249 into VE
$CC4    $1D50   JP       $D50            ; Jump to D50
$CC6    $C357   RND      V3, #57         ; V3 = random & 57
$CC8    $32D9   SE       V2, #D9         ; Skip if V2 == 217
$CCA    $FA1A   UNKNOWN  FA1A            ; Unknown Fxxx instruction
$CCC    $C2BC   RND      V2, #BC         ; V2 = random & BC
$CCE    $B8CD   JP       V0, $8CD        ; Jump to V0 + 8CD
$CD0    $ED8F   UNKNOWN  $ED8F           ; Unknown Exxx instruction
$CD2    $7ED7   ADD      VE, #D7         ; Add 215 to VE
$CD4    $EDF0   UNKNOWN  $EDF0           ; Unknown Exxx instruction
$CD6    $CD9F   RND      VD, #9F         ; VD = random & 9F
$CD8    $E519   UNKNOWN  $E519           ; Unknown Exxx instruction
$CDA    $7E3F   ADD      VE, #3F         ; Add 63 to VE
$CDC    $5F82   UNKNOWN  $5F82           ; Unknown 5xxx instruction
$CDE    $4894   SNE      V8, #94         ; Skip if V8 != 148
$CE0    $027A   SYS      $27A            ; System call to 27A
$CE2    $C56B   RND      V5, #6B         ; V5 = random & 6B
$CE4    $7722   ADD      V7, #22         ; Add 34 to V7
$CE6    $FAFC   UNKNOWN  FAFC            ; Unknown Fxxx instruction
$CE8    $C95F   RND      V9, #5F         ; V9 = random & 5F
$CEA    $621A   LD       V2, #1A         ; Load 26 into V2
$CEC    $1038   JP       $038            ; Jump to 038
$CEE    $F8FC   UNKNOWN  F8FC            ; Unknown Fxxx instruction
$CF0    $849C   UNKNOWN  849C            ; Unknown 8xxx instruction
$CF2    $9F8C   UNKNOWN  $9F8C           ; Unknown 9xxx instruction
$CF4    $EECC   UNKNOWN  $EECC           ; Unknown Exxx instruction
$CF6    $2E41   CALL     $E41            ; Call subroutine at E41
$CF8    $9A02   UNKNOWN  $9A02           ; Unknown 9xxx instruction
$CFA    $A849   LD       I, $849         ; Load 849 into I
$CFC    $089C   SYS      $89C            ; System call to 89C
$CFE    $A6F1   LD       I, $6F1         ; Load 6F1 into I
$D00    $EF3F   UNKNOWN  $EF3F           ; Unknown Exxx instruction
$D02    $6B3C   LD       VB, #3C         ; Load 60 into VB
$D04    $FD9F   UNKNOWN  FD9F            ; Unknown Fxxx instruction
$D06    $69E8   LD       V9, #E8         ; Load 232 into V9
$D08    $960A   UNKNOWN  $960A           ; Unknown 9xxx instruction
$D0A    $2893   CALL     $893            ; Call subroutine at 893
$D0C    $D047   DRW      V0, V4, #7      ; Draw 7-byte sprite at V0, V4
$D0E    $22DA   CALL     $2DA            ; Call subroutine at 2DA
$D10    $4799   SNE      V7, #99         ; Skip if V7 != 153
$D12    $FFDA   UNKNOWN  FFDA            ; Unknown Fxxx instruction
$D14    $0987   SYS      $987            ; System call to 987
$D16    $39AA   SE       V9, #AA         ; Skip if V9 == 170
$D18    $B001   JP       V0, $001        ; Jump to V0 + 001
$D1A    $E3A8   UNKNOWN  $E3A8           ; Unknown Exxx instruction
$D1C    $E651   UNKNOWN  $E651           ; Unknown Exxx instruction
$D1E    $3D51   SE       VD, #51         ; Skip if VD == 81
$D20    $DFCD   DRW      VF, VC, #D      ; Draw 13-byte sprite at VF, VC
$D22    $54FE   UNKNOWN  $54FE           ; Unknown 5xxx instruction
$D24    $9562   UNKNOWN  $9562           ; Unknown 9xxx instruction
$D26    $DB5B   DRW      VB, V5, #B      ; Draw 11-byte sprite at VB, V5
$D28    $029E   SYS      $29E            ; System call to 29E
$D2A    $DAB2   DRW      VA, VB, #2      ; Draw 2-byte sprite at VA, VB
$D2C    $B77E   JP       V0, $77E        ; Jump to V0 + 77E
$D2E    $F924   UNKNOWN  F924            ; Unknown Fxxx instruction
$D30    $28B7   CALL     $8B7            ; Call subroutine at 8B7
$D32    $F1F9   UNKNOWN  F1F9            ; Unknown Fxxx instruction
$D34    $AFEB   LD       I, $FEB         ; Load FEB into I
$D36    $177F   JP       $77F            ; Jump to 77F
$D38    $AE7C   LD       I, $E7C         ; Load E7C into I
$D3A    $C962   RND      V9, #62         ; V9 = random & 62
$D3C    $F121   UNKNOWN  F121            ; Unknown Fxxx instruction
$D3E    $B3C3   JP       V0, $3C3        ; Jump to V0 + 3C3
$D40    $3E0F   SE       VE, #0F         ; Skip if VE == 15
$D42    $1C5D   JP       $C5D            ; Jump to C5D
$D44    $D413   DRW      V4, V1, #3      ; Draw 3-byte sprite at V4, V1
$D46    $B86D   JP       V0, $86D        ; Jump to V0 + 86D
$D48    $993D   UNKNOWN  $993D           ; Unknown 9xxx instruction
$D4A    $43BA   SNE      V3, #BA         ; Skip if V3 != 186
$D4C    $3FD6   SE       VF, #D6         ; Skip if VF == 214
$D4E    $5A85   UNKNOWN  $5A85           ; Unknown 5xxx instruction
$D50    $5B4C   UNKNOWN  $5B4C           ; Unknown 5xxx instruction
$D52    $C3E3   RND      V3, #E3         ; V3 = random & E3
$D54    $DB3F   DRW      VB, V3, #F      ; Draw 15-byte sprite at VB, V3
$D56    $072A   SYS      $72A            ; System call to 72A
$D58    $853E   SHL      V5              ; V5 <<= 1, VF = MSB
$D5A    $B64F   JP       V0, $64F        ; Jump to V0 + 64F
$D5C    $D652   DRW      V6, V5, #2      ; Draw 2-byte sprite at V6, V5
$D5E    $61FB   LD       V1, #FB         ; Load 251 into V1
$D60    $F8AA   UNKNOWN  F8AA            ; Unknown Fxxx instruction
$D62    $AE76   LD       I, $E76         ; Load E76 into I
$D64    $5163   UNKNOWN  $5163           ; Unknown 5xxx instruction
$D66    $5341   UNKNOWN  $5341           ; Unknown 5xxx instruction
$D68    $7908   ADD      V9, #08         ; Add 8 to V9
$D6A    $2D02   CALL     $D02            ; Call subroutine at D02
$D6C    $797A   ADD      V9, #7A         ; Add 122 to V9
$D6E    $319D   SE       V1, #9D         ; Skip if V1 == 157
$D70    $80C0   LD       V0, VC          ; V0 = VC
$D72    $A7F7   LD       I, $7F7         ; Load 7F7 into I
$D74    $99CD   UNKNOWN  $99CD           ; Unknown 9xxx instruction
$D76    $1DBE   JP       $DBE            ; Jump to DBE
$D78    $CA46   RND      VA, #46         ; VA = random & 46
$D7A    $707B   ADD      V0, #7B         ; Add 123 to V0
$D7C    $7407   ADD      V4, #07         ; Add 7 to V4
$D7E    $5453   UNKNOWN  $5453           ; Unknown 5xxx instruction
$D80    $A877   LD       I, $877         ; Load 877 into I
$D82    $A60F   LD       I, $60F         ; Load 60F into I
$D84    $288B   CALL     $88B            ; Call subroutine at 88B
$D86    $F4F4   UNKNOWN  F4F4            ; Unknown Fxxx instruction
$D88    $FD70   UNKNOWN  FD70            ; Unknown Fxxx instruction
$D8A    $1F24   JP       $F24            ; Jump to F24
$D8C    $08BC   SYS      $8BC            ; System call to 8BC
$D8E    $1B6F   JP       $B6F            ; Jump to B6F
$D90    $10CD   JP       $0CD            ; Jump to 0CD
$D92    $73CF   ADD      V3, #CF         ; Add 207 to V3
$D94    $C14A   RND      V1, #4A         ; V1 = random & 4A
$D96    $E420   UNKNOWN  $E420           ; Unknown Exxx instruction
$D98    $ED58   UNKNOWN  $ED58           ; Unknown Exxx instruction
$D9A    $7538   ADD      V5, #38         ; Add 56 to V5
$D9C    $D5DF   DRW      V5, VD, #F      ; Draw 15-byte sprite at V5, VD
$D9E    $E5A7   UNKNOWN  $E5A7           ; Unknown Exxx instruction
$DA0    $008E   SYS      $08E            ; System call to 08E
$DA2    $ED89   UNKNOWN  $ED89           ; Unknown Exxx instruction
$DA4    $95AC   UNKNOWN  $95AC           ; Unknown 9xxx instruction
$DA6    $54D0   SE       V4, VD          ; Skip if V4 == VD
$DA8    $9691   UNKNOWN  $9691           ; Unknown 9xxx instruction
$DAA    $2990   CALL     $990            ; Call subroutine at 990
$DAC    $4753   SNE      V7, #53         ; Skip if V7 != 83
$DAE    $12CE   JP       $2CE            ; Jump to 2CE
$DB0    $EEC5   UNKNOWN  $EEC5           ; Unknown Exxx instruction
$DB2    $E195   UNKNOWN  $E195           ; Unknown Exxx instruction
$DB4    $0DC9   SYS      $DC9            ; System call to DC9
$DB6    $950E   UNKNOWN  $950E           ; Unknown 9xxx instruction
$DB8    $F133   LD       B, V1           ; Store BCD of V1 at I, I+1, I+2
$DBA    $2C5B   CALL     $C5B            ; Call subroutine at C5B
$DBC    $97A3   UNKNOWN  $97A3           ; Unknown 9xxx instruction
$DBE    $CA86   RND      VA, #86         ; VA = random & 86
$DC0    $E982   UNKNOWN  $E982           ; Unknown Exxx instruction
$DC2    $31CE   SE       V1, #CE         ; Skip if V1 == 206
$DC4    $CFE6   RND      VF, #E6         ; VF = random & E6
$DC6    $A8C8   LD       I, $8C8         ; Load 8C8 into I
$DC8    $3898   SE       V8, #98         ; Skip if V8 == 152
$DCA    $DE18   DRW      VE, V1, #8      ; Draw 8-byte sprite at VE, V1
$DCC    $8139   UNKNOWN  8139            ; Unknown 8xxx instruction
$DCE    $D9DD   DRW      V9, VD, #D      ; Draw 13-byte sprite at V9, VD
$DD0    $B996   JP       V0, $996        ; Jump to V0 + 996
$DD2    $AA1C   LD       I, $A1C         ; Load A1C into I
$DD4    $2E58   CALL     $E58            ; Call subroutine at E58
$DD6    $0A7D   SYS      $A7D            ; System call to A7D
$DD8    $DA61   DRW      VA, V6, #1      ; Draw 1-byte sprite at VA, V6
$DDA    $E72C   UNKNOWN  $E72C           ; Unknown Exxx instruction
$DDC    $09AE   SYS      $9AE            ; System call to 9AE
$DDE    $68F7   LD       V8, #F7         ; Load 247 into V8
$DE0    $D4A1   DRW      V4, VA, #1      ; Draw 1-byte sprite at V4, VA
$DE2    $1DD4   JP       $DD4            ; Jump to DD4
$DE4    $3D6E   SE       VD, #6E         ; Skip if VD == 110
$DE6    $44AC   SNE      V4, #AC         ; Skip if V4 != 172
$DE8    $4B5D   SNE      VB, #5D         ; Skip if VB != 93
$DEA    $5E86   UNKNOWN  $5E86           ; Unknown 5xxx instruction
$DEC    $D573   DRW      V5, V7, #3      ; Draw 3-byte sprite at V5, V7
$DEE    $F562   UNKNOWN  F562            ; Unknown Fxxx instruction
$DF0    $9AEE   UNKNOWN  $9AEE           ; Unknown 9xxx instruction
$DF2    $25B6   CALL     $5B6            ; Call subroutine at 5B6
$DF4    $8EB2   AND      VE, VB          ; VE &= VB
$DF6    $8790   LD       V7, V9          ; V7 = V9
$DF8    $3242   SE       V2, #42         ; Skip if V2 == 66
$DFA    $F04C   UNKNOWN  F04C            ; Unknown Fxxx instruction
$DFC    $2E56   CALL     $E56            ; Call subroutine at E56
$DFE    $1F8F   JP       $F8F            ; Jump to F8F
$E00    $E27B   UNKNOWN  $E27B           ; Unknown Exxx instruction
$E02    $934F   UNKNOWN  $934F           ; Unknown 9xxx instruction
$E04    $0BDF   SYS      $BDF            ; System call to BDF
$E06    $00CC   SYS      $0CC            ; System call to 0CC
$E08    $26DD   CALL     $6DD            ; Call subroutine at 6DD
$E0A    $E855   UNKNOWN  $E855           ; Unknown Exxx instruction
$E0C    $37B7   SE       V7, #B7         ; Skip if V7 == 183
$E0E    $B751   JP       V0, $751        ; Jump to V0 + 751
$E10    $C678   RND      V6, #78         ; V6 = random & 78
$E12    $CAEB   RND      VA, #EB         ; VA = random & EB
$E14    $B256   JP       V0, $256        ; Jump to V0 + 256
$E16    $B88E   JP       V0, $88E        ; Jump to V0 + 88E
$E18    $1CF3   JP       $CF3            ; Jump to CF3
$E1A    $7536   ADD      V5, #36         ; Add 54 to V5
$E1C    $C2C4   RND      V2, #C4         ; V2 = random & C4
$E1E    $4888   SNE      V8, #88         ; Skip if V8 != 136
$E20    $B647   JP       V0, $647        ; Jump to V0 + 647
$E22    $C2F3   RND      V2, #F3         ; V2 = random & F3
$E24    $C876   RND      V8, #76         ; V8 = random & 76
$E26    $9EDF   UNKNOWN  $9EDF           ; Unknown 9xxx instruction
$E28    $4B33   SNE      VB, #33         ; Skip if VB != 51
$E2A    $DCDE   DRW      VC, VD, #E      ; Draw 14-byte sprite at VC, VD
$E2C    $D7B9   DRW      V7, VB, #9      ; Draw 9-byte sprite at V7, VB
$E2E    $89D7   SUBN     V9, VD          ; V9 = VD - V9, VF = !borrow
$E30    $7BF8   ADD      VB, #F8         ; Add 248 to VB
$E32    $43B4   SNE      V3, #B4         ; Skip if V3 != 180
$E34    $26A6   CALL     $6A6            ; Call subroutine at 6A6
$E36    $E2E8   UNKNOWN  $E2E8           ; Unknown Exxx instruction
$E38    $42AD   SNE      V2, #AD         ; Skip if V2 != 173
$E3A    $FE27   UNKNOWN  FE27            ; Unknown Fxxx instruction
$E3C    $3AE1   SE       VA, #E1         ; Skip if VA == 225
$E3E    $7B43   ADD      VB, #43         ; Add 67 to VB
$E40    $C911   RND      V9, #11         ; V9 = random & 11
$E42    $53D8   UNKNOWN  $53D8           ; Unknown 5xxx instruction
$E44    $3203   SE       V2, #03         ; Skip if V2 == 3
$E46    $361A   SE       V6, #1A         ; Skip if V6 == 26
$E48    $7778   ADD      V7, #78         ; Add 120 to V7
$E4A    $5D62   UNKNOWN  $5D62           ; Unknown 5xxx instruction
$E4C    $5199   UNKNOWN  $5199           ; Unknown 5xxx instruction
$E4E    $B068   JP       V0, $068        ; Jump to V0 + 068
$E50    $89B1   OR       V9, VB          ; V9 |= VB
$E52    $3927   SE       V9, #27         ; Skip if V9 == 39
$E54    $F303   UNKNOWN  F303            ; Unknown Fxxx instruction
$E56    $D38E   DRW      V3, V8, #E      ; Draw 14-byte sprite at V3, V8
$E58    $1D5C   JP       $D5C            ; Jump to D5C
$E5A    $A089   LD       I, $089         ; Load 089 into I
$E5C    $BD26   JP       V0, $D26        ; Jump to V0 + D26
$E5E    $268A   CALL     $68A            ; Call subroutine at 68A
$E60    $1030   JP       $030            ; Jump to 030
$E62    $2A8F   CALL     $A8F            ; Call subroutine at A8F
$E64    $324C   SE       V2, #4C         ; Skip if V2 == 76
$E66    $8C8E   SHL      VC              ; VC <<= 1, VF = MSB
$E68    $304F   SE       V0, #4F         ; Skip if V0 == 79
$E6A    $0D0A   SYS      $D0A            ; System call to D0A
$E6C    $CD42   RND      VD, #42         ; VD = random & 42
$E6E    $7814   ADD      V8, #14         ; Add 20 to V8
$E70    $C3DE   RND      V3, #DE         ; V3 = random & DE
$E72    $8A98   UNKNOWN  8A98            ; Unknown 8xxx instruction
$E74    $1CD7   JP       $CD7            ; Jump to CD7
$E76    $A2CF   LD       I, $2CF         ; Load 2CF into I
$E78    $9F1E   UNKNOWN  $9F1E           ; Unknown 9xxx instruction
$E7A    $75D0   ADD      V5, #D0         ; Add 208 to V5
$E7C    $2BDB   CALL     $BDB            ; Call subroutine at BDB
$E7E    $98C3   UNKNOWN  $98C3           ; Unknown 9xxx instruction
$E80    $E67D   UNKNOWN  $E67D           ; Unknown Exxx instruction
$E82    $585F   UNKNOWN  $585F           ; Unknown 5xxx instruction
$E84    $20D1   CALL     $0D1            ; Call subroutine at 0D1
$E86    $E778   UNKNOWN  $E778           ; Unknown Exxx instruction
$E88    $868B   UNKNOWN  868B            ; Unknown 8xxx instruction
$E8A    $6439   LD       V4, #39         ; Load 57 into V4
$E8C    $473A   SNE      V7, #3A         ; Skip if V7 != 58
$E8E    $F303   UNKNOWN  F303            ; Unknown Fxxx instruction
$E90    $4B30   SNE      VB, #30         ; Skip if VB != 48
$E92    $7B7C   ADD      VB, #7C         ; Add 124 to VB
$E94    $8767   SUBN     V7, V6          ; V7 = V6 - V7, VF = !borrow
$E96    $4887   SNE      V8, #87         ; Skip if V8 != 135
$E98    $56B0   SE       V6, VB          ; Skip if V6 == VB
$E9A    $54A6   UNKNOWN  $54A6           ; Unknown 5xxx instruction
$E9C    $FB12   UNKNOWN  FB12            ; Unknown Fxxx instruction
$E9E    $E9C5   UNKNOWN  $E9C5           ; Unknown Exxx instruction
$EA0    $9359   UNKNOWN  $9359           ; Unknown 9xxx instruction
$EA2    $0690   SYS      $690            ; System call to 690
$EA4    $D614   DRW      V6, V1, #4      ; Draw 4-byte sprite at V6, V1
$EA6    $2D4D   CALL     $D4D            ; Call subroutine at D4D
$EA8    $DDFF   DRW      VD, VF, #F      ; Draw 15-byte sprite at VD, VF
$EAA    $B3EC   JP       V0, $3EC        ; Jump to V0 + 3EC
$EAC    $8CA3   XOR      VC, VA          ; VC ^= VA
$EAE    $7CC7   ADD      VC, #C7         ; Add 199 to VC
$EB0    $8B64   ADD      VB, V6          ; VB += V6, VF = carry
$EB2    $1479   JP       $479            ; Jump to 479
$EB4    $37F9   SE       V7, #F9         ; Skip if V7 == 249
$EB6    $82AD   UNKNOWN  82AD            ; Unknown 8xxx instruction
$EB8    $4611   SNE      V6, #11         ; Skip if V6 != 17
$EBA    $ACAC   LD       I, $CAC         ; Load CAC into I
$EBC    $FDFF   UNKNOWN  FDFF            ; Unknown Fxxx instruction
$EBE    $9429   UNKNOWN  $9429           ; Unknown 9xxx instruction
$EC0    $F20A   LD       V2, K           ; Wait for key press, store in V2
$EC2    $52D9   UNKNOWN  $52D9           ; Unknown 5xxx instruction
$EC4    $891D   UNKNOWN  891D            ; Unknown 8xxx instruction
$EC6    $552C   UNKNOWN  $552C           ; Unknown 5xxx instruction
$EC8    $E79C   UNKNOWN  $E79C           ; Unknown Exxx instruction
$ECA    $9862   UNKNOWN  $9862           ; Unknown 9xxx instruction
$ECC    $16AB   JP       $6AB            ; Jump to 6AB
$ECE    $D5B7   DRW      V5, VB, #7      ; Draw 7-byte sprite at V5, VB
$ED0    $8365   SUB      V3, V6          ; V3 -= V6, VF = !borrow
$ED2    $A09E   LD       I, $09E         ; Load 09E into I
$ED4    $90C0   SNE      V0, VC          ; Skip if V0 != VC
$ED6    $782A   ADD      V8, #2A         ; Add 42 to V8
$ED8    $DB27   DRW      VB, V2, #7      ; Draw 7-byte sprite at VB, V2
$EDA    $DBCA   DRW      VB, VC, #A      ; Draw 10-byte sprite at VB, VC
$EDC    $F9A8   UNKNOWN  F9A8            ; Unknown Fxxx instruction
$EDE    $036E   SYS      $36E            ; System call to 36E
$EE0    $68BB   LD       V8, #BB         ; Load 187 into V8
$EE2    $236B   CALL     $36B            ; Call subroutine at 36B
$EE4    $1DCE   JP       $DCE            ; Jump to DCE
$EE6    $2A73   CALL     $A73            ; Call subroutine at A73
$EE8    $2F5F   CALL     $F5F            ; Call subroutine at F5F
$EEA    $DD74   DRW      VD, V7, #4      ; Draw 4-byte sprite at VD, V7
$EEC    $C7EB   RND      V7, #EB         ; V7 = random & EB
$EEE    $0D9B   SYS      $D9B            ; System call to D9B
$EF0    $8D76   SHR      VD              ; VD >>= 1, VF = LSB
$EF2    $440D   SNE      V4, #0D         ; Skip if V4 != 13
$EF4    $49E8   SNE      V9, #E8         ; Skip if V9 != 232
$EF6    $8586   SHR      V5              ; V5 >>= 1, VF = LSB
$EF8    $B3E5   JP       V0, $3E5        ; Jump to V0 + 3E5
$EFA    $B2E8   JP       V0, $2E8        ; Jump to V0 + 2E8
$EFC    $A98D   LD       I, $98D         ; Load 98D into I
$EFE    $C7A3   RND      V7, #A3         ; V7 = random & A3
$F00    $493E   SNE      V9, #3E         ; Skip if V9 != 62
$F02    $0F6D   SYS      $F6D            ; System call to F6D
$F04    $1CAE   JP       $CAE            ; Jump to CAE
$F06    $D539   DRW      V5, V3, #9      ; Draw 9-byte sprite at V5, V3
$F08    $ADA8   LD       I, $DA8         ; Load DA8 into I
$F0A    $2529   CALL     $529            ; Call subroutine at 529
$F0C    $3D9A   SE       VD, #9A         ; Skip if VD == 154
$F0E    $7FF3   ADD      VF, #F3         ; Add 243 to VF
$F10    $C37F   RND      V3, #7F         ; V3 = random & 7F
$F12    $8EE4   ADD      VE, VE          ; VE += VE, VF = carry
$F14    $6EEF   LD       VE, #EF         ; Load 239 into VE
$F16    $B034   JP       V0, $034        ; Jump to V0 + 034
$F18    $3E6F   SE       VE, #6F         ; Skip if VE == 111
$F1A    $E5B1   UNKNOWN  $E5B1           ; Unknown Exxx instruction
$F1C    $FE1C   UNKNOWN  FE1C            ; Unknown Fxxx instruction
$F1E    $A0BB   LD       I, $0BB         ; Load 0BB into I
$F20    $164B   JP       $64B            ; Jump to 64B
$F22    $091C   SYS      $91C            ; System call to 91C
$F24    $798E   ADD      V9, #8E         ; Add 142 to V9
$F26    $C81B   RND      V8, #1B         ; V8 = random & 1B
$F28    $AF58   LD       I, $F58         ; Load F58 into I
$F2A    $751C   ADD      V5, #1C         ; Add 28 to V5
$F2C    $A0FE   LD       I, $0FE         ; Load 0FE into I
$F2E    $9A9D   UNKNOWN  $9A9D           ; Unknown 9xxx instruction
$F30    $29DF   CALL     $9DF            ; Call subroutine at 9DF
$F32    $3370   SE       V3, #70         ; Skip if V3 == 112
$F34    $6A43   LD       VA, #43         ; Load 67 into VA
$F36    $1E4E   JP       $E4E            ; Jump to E4E
$F38    $39EC   SE       V9, #EC         ; Skip if V9 == 236
$F3A    $97E8   UNKNOWN  $97E8           ; Unknown 9xxx instruction
$F3C    $9E9F   UNKNOWN  $9E9F           ; Unknown 9xxx instruction
$F3E    $9582   UNKNOWN  $9582           ; Unknown 9xxx instruction
$F40    $2E8F   CALL     $E8F            ; Call subroutine at E8F
$F42    $48A4   SNE      V8, #A4         ; Skip if V8 != 164
$F44    $EC1C   UNKNOWN  $EC1C           ; Unknown Exxx instruction
$F46    $EF41   UNKNOWN  $EF41           ; Unknown Exxx instruction
$F48    $37F0   SE       V7, #F0         ; Skip if V7 == 240
$F4A    $A3EA   LD       I, $3EA         ; Load 3EA into I
$F4C    $2276   CALL     $276            ; Call subroutine at 276
$F4E    $1AF8   JP       $AF8            ; Jump to AF8
$F50    $A599   LD       I, $599         ; Load 599 into I
$F52    $0ABD   SYS      $ABD            ; System call to ABD
$F54    $5237   UNKNOWN  $5237           ; Unknown 5xxx instruction
$F56    $36F5   SE       V6, #F5         ; Skip if V6 == 245
$F58    $847D   UNKNOWN  847D            ; Unknown 8xxx instruction
$F5A    $3929   SE       V9, #29         ; Skip if V9 == 41
$F5C    $BA90   JP       V0, $A90        ; Jump to V0 + A90
$F5E    $F9A7   UNKNOWN  F9A7            ; Unknown Fxxx instruction
$F60    $72F0   ADD      V2, #F0         ; Add 240 to V2
$F62    $2C0B   CALL     $C0B            ; Call subroutine at C0B
$F64    $D6BD   DRW      V6, VB, #D      ; Draw 13-byte sprite at V6, VB
$F66    $F25F   UNKNOWN  F25F            ; Unknown Fxxx instruction
$F68    $DD34   DRW      VD, V3, #4      ; Draw 4-byte sprite at VD, V3
$F6A    $3E14   SE       VE, #14         ; Skip if VE == 20
$F6C    $3CE7   SE       VC, #E7         ; Skip if VC == 231
$F6E    $A3DD   LD       I, $3DD         ; Load 3DD into I
$F70    $D938   DRW      V9, V3, #8      ; Draw 8-byte sprite at V9, V3
$F72    $E703   UNKNOWN  $E703           ; Unknown Exxx instruction
$F74    $66B8   LD       V6, #B8         ; Load 184 into V6
$F76    $6BF6   LD       VB, #F6         ; Load 246 into VB
$F78    $EDB4   UNKNOWN  $EDB4           ; Unknown Exxx instruction
$F7A    $614C   LD       V1, #4C         ; Load 76 into V1
$F7C    $F0EF   UNKNOWN  F0EF            ; Unknown Fxxx instruction
$F7E    $D4B4   DRW      V4, VB, #4      ; Draw 4-byte sprite at V4, VB
$F80    $03FE   SYS      $3FE            ; System call to 3FE
$F82    $CE4F   RND      VE, #4F         ; VE = random & 4F
$F84    $641E   LD       V4, #1E         ; Load 30 into V4
$F86    $29D6   CALL     $9D6            ; Call subroutine at 9D6
$F88    $37DA   SE       V7, #DA         ; Skip if V7 == 218
$F8A    $C94A   RND      V9, #4A         ; V9 = random & 4A
$F8C    $C332   RND      V3, #32         ; V3 = random & 32
$F8E    $CB74   RND      VB, #74         ; VB = random & 74
$F90    $E513   UNKNOWN  $E513           ; Unknown Exxx instruction
$F92    $EB99   UNKNOWN  $EB99           ; Unknown Exxx instruction
$F94    $B265   JP       V0, $265        ; Jump to V0 + 265
$F96    $89DC   UNKNOWN  89DC            ; Unknown 8xxx instruction
$F98    $4C57   SNE      VC, #57         ; Skip if VC != 87
$F9A    $1B18   JP       $B18            ; Jump to B18
$F9C    $1F5A   JP       $F5A            ; Jump to F5A
$F9E    $8B4D   UNKNOWN  8B4D            ; Unknown 8xxx instruction
$FA0    $2B48   CALL     $B48            ; Call subroutine at B48
$FA2    $4BC3   SNE      VB, #C3         ; Skip if VB != 195
$FA4    $0A75   SYS      $A75            ; System call to A75
$FA6    $6E29   LD       VE, #29         ; Load 41 into VE
$FA8    $90EB   UNKNOWN  $90EB           ; Unknown 9xxx instruction
$FAA    $D94D   DRW      V9, V4, #D      ; Draw 13-byte sprite at V9, V4
$FAC    $E9ED   UNKNOWN  $E9ED           ; Unknown Exxx instruction
$FAE    $AFE8   LD       I, $FE8         ; Load FE8 into I
$FB0    $8BEF   UNKNOWN  8BEF            ; Unknown 8xxx instruction
$FB2    $9ED0   SNE      VE, VD          ; Skip if VE != VD
$FB4    $696D   LD       V9, #6D         ; Load 109 into V9
$FB6    $2637   CALL     $637            ; Call subroutine at 637
$FB8    $8D1C   UNKNOWN  8D1C            ; Unknown 8xxx instruction
$FBA    $B038   JP       V0, $038        ; Jump to V0 + 038
$FBC    $6FA3   LD       VF, #A3         ; Load 163 into VF
$FBE    $8CCD   UNKNOWN  8CCD            ; Unknown 8xxx instruction
$FC0    $D23E   DRW      V2, V3, #E      ; Draw 14-byte sprite at V2, V3
$FC2    $24EC   CALL     $4EC            ; Call subroutine at 4EC
$FC4    $31CA   SE       V1, #CA         ; Skip if V1 == 202
$FC6    $E525   UNKNOWN  $E525           ; Unknown Exxx instruction
$FC8    $6DFD   LD       VD, #FD         ; Load 253 into VD
$FCA    $7EA2   ADD      VE, #A2         ; Add 162 to VE
$FCC    $FC9F   UNKNOWN  FC9F            ; Unknown Fxxx instruction
$FCE    $74DA   ADD      V4, #DA         ; Add 218 to V4
$FD0    $D245   DRW      V2, V4, #5      ; Draw 5-byte sprite at V2, V4
$FD2    $5853   UNKNOWN  $5853           ; Unknown 5xxx instruction
$FD4    $6E09   LD       VE, #09         ; Load 9 into VE
$FD6    $EC3C   UNKNOWN  $EC3C           ; Unknown Exxx instruction
$FD8    $840E   SHL      V4              ; V4 <<= 1, VF = MSB
$FDA    $C136   RND      V1, #36         ; V1 = random & 36
$FDC    $6E5F   LD       VE, #5F         ; Load 95 into VE
$FDE    $5D61   UNKNOWN  $5D61           ; Unknown 5xxx instruction
$FE0    $CC71   RND      VC, #71         ; VC = random & 71
$FE2    $2AA2   CALL     $AA2            ; Call subroutine at AA2
$FE4    $3E74   SE       VE, #74         ; Skip if VE == 116
$FE6    $3426   SE       V4, #26         ; Skip if V4 == 38
$FE8    $2285   CALL     $285            ; Call subroutine at 285
$FEA    $0DE7   SYS      $DE7            ; System call to DE7
$FEC    $40BA   SNE      V0, #BA         ; Skip if V0 != 186
$FEE    $F856   UNKNOWN  F856            ; Unknown Fxxx instruction
$FF0    $23FA   CALL     $3FA            ; Call subroutine at 3FA
$FF2    $4D6B   SNE      VD, #6B         ; Skip if VD != 107
$FF4    $0368   SYS      $368            ; System call to 368
$FF6    $8188   UNKNOWN  8188            ; Unknown 8xxx instruction
$FF8    $9037   UNKNOWN  $9037           ; Unknown 9xxx instruction
$FFA    $7C49   ADD      VC, #49         ; Add 73 to VC
$FFC    $D8CA   DRW      V8, VC, #A      ; Draw 10-byte sprite at V8, VC
$FFE    $9866   UNKNOWN  $9866           ; Unknown 9xxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 473 (26.4%)
  LD      : 228 (12.7%)
  JP      : 208 (11.6%)
  SE      : 138 ( 7.7%)
  SYS     : 127 ( 7.1%)
  DRW     : 119 ( 6.6%)
  SNE     : 118 ( 6.6%)
  ADD     : 117 ( 6.5%)
  CALL    : 109 ( 6.1%)
  RND     : 106 ( 5.9%)
  SUB     :  10 ( 0.6%)
  SHL     :   9 ( 0.5%)
  SHR     :   9 ( 0.5%)
  XOR     :   7 ( 0.4%)
  SUBN    :   5 ( 0.3%)
  AND     :   5 ( 0.3%)
  OR      :   4 ( 0.2%)

Memory Operations: 345 (19.3%)
Arithmetic Operations: 148 (8.3%)
