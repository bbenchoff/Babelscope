
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B6631D01_I36731_C1001_0d92f005d995.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 6631
Instance: 36731
Direction: ascending
Final Array: [1, 4, 4, 51, 132, 135, 155, 245]
Operations: R:0 W:1 C:90 S:8

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 101
Sort Array References:
  $204: LD I, $F0B ; Load F0B into I
  $20E: LD I, $58B ; Load 58B into I
  $266: LD I, $CE9 ; Load CE9 into I
  $2A6: LD I, $107 ; Load 107 into I
  $312: LD I, $3C3 ; Load 3C3 into I
  $314: LD I, $2A4 ; Load 2A4 into I
  $338: LD I, $2C8 ; Load 2C8 into I
  $368: LD I, $F74 ; Load F74 into I
  $3AC: LD I, $D6B ; Load D6B into I
  $3B8: LD I, $DCF ; Load DCF into I
  $3D2: LD I, $479 ; Load 479 into I
  $3EA: LD I, $8D1 ; Load 8D1 into I
  $40C: LD I, $CD1 ; Load CD1 into I
  $418: LD I, $11A ; Load 11A into I
  $432: LD I, $A3E ; Load A3E into I
  $448: LD I, $C6A ; Load C6A into I
  $452: LD I, $63B ; Load 63B into I
  $454: LD I, $3C5 ; Load 3C5 into I
  $460: LD I, $59F ; Load 59F into I
  $46E: LD I, $20D ; Load 20D into I
  $4A2: LD I, $65F ; Load 65F into I
  $4A4: LD I, $883 ; Load 883 into I
  $506: LD I, $09C ; Load 09C into I
  $51E: LD I, $F6A ; Load F6A into I
  $52A: LD I, $18A ; Load 18A into I
  $53C: LD I, $D6E ; Load D6E into I
  $554: LD I, $BF5 ; Load BF5 into I
  $55C: LD I, $51D ; Load 51D into I
  $57C: LD I, $7EF ; Load 7EF into I
  $5BE: LD I, $573 ; Load 573 into I
  $642: LD I, $EFC ; Load EFC into I
  $65E: LD I, $46E ; Load 46E into I
  $66E: LD I, $629 ; Load 629 into I
  $680: LD I, $FD0 ; Load FD0 into I
  $6B0: LD I, $A4A ; Load A4A into I
  $6C8: LD I, $952 ; Load 952 into I
  $6DC: LD I, $02D ; Load 02D into I
  $6EA: LD I, $B5A ; Load B5A into I
  $712: LD I, $8D8 ; Load 8D8 into I
  $73A: LD I, $1E3 ; Load 1E3 into I
  $74A: LD I, $A34 ; Load A34 into I
  $782: LD I, $C92 ; Load C92 into I
  $7A6: LD I, $2AB ; Load 2AB into I
  $7AA: LD I, $855 ; Load 855 into I
  $7EC: LD I, $A3E ; Load A3E into I
  $7FC: LD I, $F70 ; Load F70 into I
  $816: LD I, $FB8 ; Load FB8 into I
  $84A: LD I, $A15 ; Load A15 into I
  $84E: LD I, $6AB ; Load 6AB into I
  $850: LD I, $CFF ; Load CFF into I
  $866: LD I, $740 ; Load 740 into I
  $86C: LD I, $1FB ; Load 1FB into I
  $8E4: LD I, $CD7 ; Load CD7 into I
  $912: LD I, $35F ; Load 35F into I
  $92A: LD I, $40F ; Load 40F into I
  $958: LD I, $899 ; Load 899 into I
  $95C: LD I, $08F ; Load 08F into I
  $9DC: LD I, $002 ; Load 002 into I
  $A26: LD I, $E50 ; Load E50 into I
  $A5A: LD I, $6AC ; Load 6AC into I
  $A66: LD I, $92F ; Load 92F into I
  $A78: LD I, $7AD ; Load 7AD into I
  $A80: LD I, $413 ; Load 413 into I
  $AA8: LD I, $6FE ; Load 6FE into I
  $AB2: LD I, $D14 ; Load D14 into I
  $AD0: LD I, $989 ; Load 989 into I
  $AD2: LD I, $1BC ; Load 1BC into I
  $AE8: LD I, $8D5 ; Load 8D5 into I
  $AFC: LD I, $589 ; Load 589 into I
  $B02: LD I, $7DC ; Load 7DC into I
  $B12: LD I, $79E ; Load 79E into I
  $B2C: LD I, $D8C ; Load D8C into I
  $B34: LD I, $232 ; Load 232 into I
  $B40: LD I, $3F6 ; Load 3F6 into I
  $B7E: LD I, $023 ; Load 023 into I
  $BBE: LD I, $CD4 ; Load CD4 into I
  $BC6: LD I, $205 ; Load 205 into I
  $BD6: LD I, $D44 ; Load D44 into I
  $BE4: LD I, $6DF ; Load 6DF into I
  $C5C: LD I, $0FB ; Load 0FB into I
  $C6A: LD I, $3D2 ; Load 3D2 into I
  $C76: LD I, $06B ; Load 06B into I
  $C9E: LD I, $F94 ; Load F94 into I
  $D04: LD I, $8DB ; Load 8DB into I
  $D16: LD I, $675 ; Load 675 into I
  $D60: LD I, $4DD ; Load 4DD into I
  $D74: LD I, $C07 ; Load C07 into I
  $D84: LD I, $E18 ; Load E18 into I
  $D88: LD I, $3F9 ; Load 3F9 into I
  $DC0: LD I, $C11 ; Load C11 into I
  $E24: LD I, $48D ; Load 48D into I
  $E58: LD I, $E99 ; Load E99 into I
  $EBE: LD I, $802 ; Load 802 into I
  $ECC: LD I, $D6C ; Load D6C into I
  $F1C: LD I, $EA9 ; Load EA9 into I
  $F3E: LD I, $59D ; Load 59D into I
  $F4E: LD I, $33B ; Load 33B into I
  $F68: LD I, $3B9 ; Load 3B9 into I
  $F9A: LD I, $5AC ; Load 5AC into I
  $FA8: LD I, $892 ; Load 892 into I
  $FEA: LD I, $34F ; Load 34F into I

CONTROL FLOW ANALYSIS:
Jumps: 225
Calls: 106
Branches: 245
Loops: 119
Loop Structures:
  $224 -> $086 (backward jump)
  $2BA -> $13E (backward jump)
  $2C4 -> $2BF (backward jump)
  $2CA -> $1D5 (backward jump)
  $2F2 -> $198 (backward jump)
  $354 -> $23C (backward jump)
  $360 -> $2FF (backward jump)
  $374 -> $1B0 (backward jump)
  $398 -> $2BF (backward jump)
  $42A -> $347 (backward jump)
  $47E -> $037 (backward jump)
  $52E -> $40C (backward jump)
  $538 -> $37A (backward jump)
  $53A -> $437 (backward jump)
  $542 -> $3FF (backward jump)
  $59A -> $2FC (backward jump)
  $59C -> $2F6 (backward jump)
  $5A2 -> $529 (backward jump)
  $5E6 -> $270 (backward jump)
  $5EA -> $593 (backward jump)
  $68A -> $455 (backward jump)
  $690 -> $43E (backward jump)
  $6A6 -> $456 (backward jump)
  $6B2 -> $086 (backward jump)
  $6D2 -> $3FC (backward jump)
  $6D8 -> $57E (backward jump)
  $6DA -> $08B (backward jump)
  $6E4 -> $32A (backward jump)
  $72C -> $678 (backward jump)
  $748 -> $458 (backward jump)
  $760 -> $5EE (backward jump)
  $7B2 -> $26F (backward jump)
  $7B8 -> $3AB (backward jump)
  $7C6 -> $40D (backward jump)
  $7DA -> $6D8 (backward jump)
  $7E8 -> $279 (backward jump)
  $7F2 -> $3AF (backward jump)
  $7F4 -> $25C (backward jump)
  $806 -> $154 (backward jump)
  $81C -> $700 (backward jump)
  $822 -> $085 (backward jump)
  $824 -> $189 (backward jump)
  $86E -> $454 (backward jump)
  $872 -> $2B5 (backward jump)
  $876 -> $16C (backward jump)
  $87A -> $15D (backward jump)
  $88A -> $6B4 (backward jump)
  $8D8 -> $39F (backward jump)
  $8FE -> $766 (backward jump)
  $914 -> $35B (backward jump)
  $920 -> $3C7 (backward jump)
  $928 -> $788 (backward jump)
  $932 -> $481 (backward jump)
  $984 -> $7B7 (backward jump)
  $9AE -> $876 (backward jump)
  $9C2 -> $07F (backward jump)
  $9D6 -> $6D6 (backward jump)
  $A06 -> $6BE (backward jump)
  $A3A -> $6BD (backward jump)
  $A40 -> $1DC (backward jump)
  $A42 -> $275 (backward jump)
  $A52 -> $92A (backward jump)
  $A9A -> $282 (backward jump)
  $AAA -> $138 (backward jump)
  $AAE -> $386 (backward jump)
  $AC0 -> $842 (backward jump)
  $AF0 -> $8E4 (backward jump)
  $B42 -> $439 (backward jump)
  $B58 -> $7BE (backward jump)
  $B5E -> $094 (backward jump)
  $B6E -> $650 (backward jump)
  $B82 -> $553 (backward jump)
  $BAE -> $16C (backward jump)
  $BDE -> $AA4 (backward jump)
  $C00 -> $1DB (backward jump)
  $C0E -> $0F2 (backward jump)
  $C72 -> $9F9 (backward jump)
  $C8A -> $A39 (backward jump)
  $C8C -> $4B2 (backward jump)
  $C98 -> $A23 (backward jump)
  $C9C -> $431 (backward jump)
  $CB0 -> $367 (backward jump)
  $D14 -> $9A9 (backward jump)
  $D22 -> $98A (backward jump)
  $D30 -> $87A (backward jump)
  $D64 -> $D14 (backward jump)
  $D76 -> $18F (backward jump)
  $D78 -> $47C (backward jump)
  $D7E -> $CA6 (backward jump)
  $D8A -> $AA9 (backward jump)
  $DAE -> $709 (backward jump)
  $DC8 -> $731 (backward jump)
  $DD4 -> $289 (backward jump)
  $DD6 -> $53F (backward jump)
  $DEC -> $741 (backward jump)
  $E16 -> $3BE (backward jump)
  $E3E -> $859 (backward jump)
  $E88 -> $87C (backward jump)
  $E8A -> $E13 (backward jump)
  $EB8 -> $073 (backward jump)
  $ED0 -> $7DC (backward jump)
  $EE0 -> $B57 (backward jump)
  $EEE -> $CC9 (backward jump)
  $EFA -> $948 (backward jump)
  $F2C -> $702 (backward jump)
  $F30 -> $E56 (backward jump)
  $F3A -> $D5C (backward jump)
  $F42 -> $4D8 (backward jump)
  $F46 -> $2C6 (backward jump)
  $F58 -> $0BD (backward jump)
  $F5A -> $ED7 (backward jump)
  $F60 -> $A18 (backward jump)
  $F84 -> $D9A (backward jump)
  $FA4 -> $F7D (backward jump)
  $FB2 -> $3C4 (backward jump)
  $FB8 -> $558 (backward jump)
  $FBE -> $B60 (backward jump)
  $FD0 -> $332 (backward jump)
  $FF8 -> $504 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $7078   ADD      V0, #78         ; Add 120 to V0
$202    $7CCE   ADD      VC, #CE         ; Add 206 to VC
$204    $AF0B   LD       I, $F0B         ; Load F0B into I
$206    $62D4   LD       V2, #D4         ; Load 212 into V2
$208    $5BF1   UNKNOWN  $5BF1           ; Unknown 5xxx instruction
$20A    $B9FC   JP       V0, $9FC        ; Jump to V0 + 9FC
$20C    $FDB4   UNKNOWN  FDB4            ; Unknown Fxxx instruction
$20E    $A58B   LD       I, $58B         ; Load 58B into I
$210    $0379   SYS      $379            ; System call to 379
$212    $3670   SE       V6, #70         ; Skip if V6 == 112
$214    $5ADE   UNKNOWN  $5ADE           ; Unknown 5xxx instruction
$216    $7C97   ADD      VC, #97         ; Add 151 to VC
$218    $CDA6   RND      VD, #A6         ; VD = random & A6
$21A    $7C89   ADD      VC, #89         ; Add 137 to VC
$21C    $7CF7   ADD      VC, #F7         ; Add 247 to VC
$21E    $6BFA   LD       VB, #FA         ; Load 250 into VB
$220    $CC72   RND      VC, #72         ; VC = random & 72
$222    $F6A0   UNKNOWN  F6A0            ; Unknown Fxxx instruction
$224    $1086   JP       $086            ; Jump to 086
$226    $6F66   LD       VF, #66         ; Load 102 into VF
$228    $BA45   JP       V0, $A45        ; Jump to V0 + A45
$22A    $58A3   UNKNOWN  $58A3           ; Unknown 5xxx instruction
$22C    $C730   RND      V7, #30         ; V7 = random & 30
$22E    $B49C   JP       V0, $49C        ; Jump to V0 + 49C
$230    $F951   UNKNOWN  F951            ; Unknown Fxxx instruction
$232    $7CC9   ADD      VC, #C9         ; Add 201 to VC
$234    $9705   UNKNOWN  $9705           ; Unknown 9xxx instruction
$236    $38B1   SE       V8, #B1         ; Skip if V8 == 177
$238    $7938   ADD      V9, #38         ; Add 56 to V9
$23A    $D1C7   DRW      V1, VC, #7      ; Draw 7-byte sprite at V1, VC
$23C    $060C   SYS      $60C            ; System call to 60C
$23E    $8154   ADD      V1, V5          ; V1 += V5, VF = carry
$240    $1534   JP       $534            ; Jump to 534
$242    $689F   LD       V8, #9F         ; Load 159 into V8
$244    $3D3C   SE       VD, #3C         ; Skip if VD == 60
$246    $9D07   UNKNOWN  $9D07           ; Unknown 9xxx instruction
$248    $BDBC   JP       V0, $DBC        ; Jump to V0 + DBC
$24A    $B94B   JP       V0, $94B        ; Jump to V0 + 94B
$24C    $40D7   SNE      V0, #D7         ; Skip if V0 != 215
$24E    $EA6F   UNKNOWN  $EA6F           ; Unknown Exxx instruction
$250    $4C0C   SNE      VC, #0C         ; Skip if VC != 12
$252    $1738   JP       $738            ; Jump to 738
$254    $D51A   DRW      V5, V1, #A      ; Draw 10-byte sprite at V5, V1
$256    $8049   UNKNOWN  8049            ; Unknown 8xxx instruction
$258    $F603   UNKNOWN  F603            ; Unknown Fxxx instruction
$25A    $09A8   SYS      $9A8            ; System call to 9A8
$25C    $F97A   UNKNOWN  F97A            ; Unknown Fxxx instruction
$25E    $0856   SYS      $856            ; System call to 856
$260    $DF33   DRW      VF, V3, #3      ; Draw 3-byte sprite at VF, V3
$262    $90CA   UNKNOWN  $90CA           ; Unknown 9xxx instruction
$264    $FFEC   UNKNOWN  FFEC            ; Unknown Fxxx instruction
$266    $ACE9   LD       I, $CE9         ; Load CE9 into I
$268    $0263   SYS      $263            ; System call to 263
$26A    $8750   LD       V7, V5          ; V7 = V5
$26C    $6CA2   LD       VC, #A2         ; Load 162 into VC
$26E    $7E1B   ADD      VE, #1B         ; Add 27 to VE
$270    $76C8   ADD      V6, #C8         ; Add 200 to V6
$272    $2A7D   CALL     $A7D            ; Call subroutine at A7D
$274    $758C   ADD      V5, #8C         ; Add 140 to V5
$276    $00CB   SYS      $0CB            ; System call to 0CB
$278    $4D3E   SNE      VD, #3E         ; Skip if VD != 62
$27A    $B8E1   JP       V0, $8E1        ; Jump to V0 + 8E1
$27C    $CCD4   RND      VC, #D4         ; VC = random & D4
$27E    $E9B5   UNKNOWN  $E9B5           ; Unknown Exxx instruction
$280    $4A0E   SNE      VA, #0E         ; Skip if VA != 14
$282    $7969   ADD      V9, #69         ; Add 105 to V9
$284    $40D9   SNE      V0, #D9         ; Skip if V0 != 217
$286    $E3CD   UNKNOWN  $E3CD           ; Unknown Exxx instruction
$288    $4326   SNE      V3, #26         ; Skip if V3 != 38
$28A    $C6C2   RND      V6, #C2         ; V6 = random & C2
$28C    $33B1   SE       V3, #B1         ; Skip if V3 == 177
$28E    $FF13   UNKNOWN  FF13            ; Unknown Fxxx instruction
$290    $7963   ADD      V9, #63         ; Add 99 to V9
$292    $E50E   UNKNOWN  $E50E           ; Unknown Exxx instruction
$294    $2ABA   CALL     $ABA            ; Call subroutine at ABA
$296    $FEF8   UNKNOWN  FEF8            ; Unknown Fxxx instruction
$298    $8BC1   OR       VB, VC          ; VB |= VC
$29A    $D84F   DRW      V8, V4, #F      ; Draw 15-byte sprite at V8, V4
$29C    $46A1   SNE      V6, #A1         ; Skip if V6 != 161
$29E    $29A6   CALL     $9A6            ; Call subroutine at 9A6
$2A0    $58CF   UNKNOWN  $58CF           ; Unknown 5xxx instruction
$2A2    $59D2   UNKNOWN  $59D2           ; Unknown 5xxx instruction
$2A4    $8120   LD       V1, V2          ; V1 = V2
$2A6    $A107   LD       I, $107         ; Load 107 into I
$2A8    $1BE6   JP       $BE6            ; Jump to BE6
$2AA    $68A1   LD       V8, #A1         ; Load 161 into V8
$2AC    $7DEF   ADD      VD, #EF         ; Add 239 to VD
$2AE    $76C6   ADD      V6, #C6         ; Add 198 to V6
$2B0    $7E72   ADD      VE, #72         ; Add 114 to VE
$2B2    $D8FA   DRW      V8, VF, #A      ; Draw 10-byte sprite at V8, VF
$2B4    $7B81   ADD      VB, #81         ; Add 129 to VB
$2B6    $B9E0   JP       V0, $9E0        ; Jump to V0 + 9E0
$2B8    $8C29   UNKNOWN  8C29            ; Unknown 8xxx instruction
$2BA    $B13E   JP       V0, $13E        ; Jump to V0 + 13E
$2BC    $C447   RND      V4, #47         ; V4 = random & 47
$2BE    $3708   SE       V7, #08         ; Skip if V7 == 8
$2C0    $FAAB   UNKNOWN  FAAB            ; Unknown Fxxx instruction
$2C2    $39FE   SE       V9, #FE         ; Skip if V9 == 254
$2C4    $B2BF   JP       V0, $2BF        ; Jump to V0 + 2BF
$2C6    $606E   LD       V0, #6E         ; Load 110 into V0
$2C8    $C500   RND      V5, #00         ; V5 = random & 00
$2CA    $11D5   JP       $1D5            ; Jump to 1D5
$2CC    $6B2A   LD       VB, #2A         ; Load 42 into VB
$2CE    $84F5   SUB      V4, VF          ; V4 -= VF, VF = !borrow
$2D0    $2CDE   CALL     $CDE            ; Call subroutine at CDE
$2D2    $C3A7   RND      V3, #A7         ; V3 = random & A7
$2D4    $BAE1   JP       V0, $AE1        ; Jump to V0 + AE1
$2D6    $94A2   UNKNOWN  $94A2           ; Unknown 9xxx instruction
$2D8    $B68D   JP       V0, $68D        ; Jump to V0 + 68D
$2DA    $87A2   AND      V7, VA          ; V7 &= VA
$2DC    $094F   SYS      $94F            ; System call to 94F
$2DE    $F4CC   UNKNOWN  F4CC            ; Unknown Fxxx instruction
$2E0    $CF43   RND      VF, #43         ; VF = random & 43
$2E2    $3F85   SE       VF, #85         ; Skip if VF == 133
$2E4    $47B9   SNE      V7, #B9         ; Skip if V7 != 185
$2E6    $C7D3   RND      V7, #D3         ; V7 = random & D3
$2E8    $64D8   LD       V4, #D8         ; Load 216 into V4
$2EA    $3F9D   SE       VF, #9D         ; Skip if VF == 157
$2EC    $0433   SYS      $433            ; System call to 433
$2EE    $D436   DRW      V4, V3, #6      ; Draw 6-byte sprite at V4, V3
$2F0    $D959   DRW      V9, V5, #9      ; Draw 9-byte sprite at V9, V5
$2F2    $1198   JP       $198            ; Jump to 198
$2F4    $4AD4   SNE      VA, #D4         ; Skip if VA != 212
$2F6    $15C1   JP       $5C1            ; Jump to 5C1
$2F8    $337E   SE       V3, #7E         ; Skip if V3 == 126
$2FA    $0330   SYS      $330            ; System call to 330
$2FC    $3B1A   SE       VB, #1A         ; Skip if VB == 26
$2FE    $BCE0   JP       V0, $CE0        ; Jump to V0 + CE0
$300    $0104   SYS      $104            ; System call to 104
$302    $0433   SYS      $433            ; System call to 433
$304    $8487   SUBN     V4, V8          ; V4 = V8 - V4, VF = !borrow
$306    $9BF5   UNKNOWN  $9BF5           ; Unknown 9xxx instruction
$308    $6613   LD       V6, #13         ; Load 19 into V6
$30A    $85A2   AND      V5, VA          ; V5 &= VA
$30C    $5874   UNKNOWN  $5874           ; Unknown 5xxx instruction
$30E    $4BE7   SNE      VB, #E7         ; Skip if VB != 231
$310    $DAF0   DRW      VA, VF, #0      ; Draw 0-byte sprite at VA, VF
$312    $A3C3   LD       I, $3C3         ; Load 3C3 into I
$314    $A2A4   LD       I, $2A4         ; Load 2A4 into I
$316    $4C1A   SNE      VC, #1A         ; Skip if VC != 26
$318    $0600   SYS      $600            ; System call to 600
$31A    $57DB   UNKNOWN  $57DB           ; Unknown 5xxx instruction
$31C    $FBA1   UNKNOWN  FBA1            ; Unknown Fxxx instruction
$31E    $6AD0   LD       VA, #D0         ; Load 208 into VA
$320    $3F77   SE       VF, #77         ; Skip if VF == 119
$322    $7C99   ADD      VC, #99         ; Add 153 to VC
$324    $474D   SNE      V7, #4D         ; Skip if V7 != 77
$326    $33BE   SE       V3, #BE         ; Skip if V3 == 190
$328    $FF9B   UNKNOWN  FF9B            ; Unknown Fxxx instruction
$32A    $E81C   UNKNOWN  $E81C           ; Unknown Exxx instruction
$32C    $9EE5   UNKNOWN  $9EE5           ; Unknown 9xxx instruction
$32E    $966C   UNKNOWN  $966C           ; Unknown 9xxx instruction
$330    $E2EE   UNKNOWN  $E2EE           ; Unknown Exxx instruction
$332    $8171   OR       V1, V7          ; V1 |= V7
$334    $423E   SNE      V2, #3E         ; Skip if V2 != 62
$336    $074D   SYS      $74D            ; System call to 74D
$338    $A2C8   LD       I, $2C8         ; Load 2C8 into I
$33A    $D952   DRW      V9, V5, #2      ; Draw 2-byte sprite at V9, V5
$33C    $2958   CALL     $958            ; Call subroutine at 958
$33E    $3482   SE       V4, #82         ; Skip if V4 == 130
$340    $4675   SNE      V6, #75         ; Skip if V6 != 117
$342    $2DC6   CALL     $DC6            ; Call subroutine at DC6
$344    $5D53   UNKNOWN  $5D53           ; Unknown 5xxx instruction
$346    $0C1B   SYS      $C1B            ; System call to C1B
$348    $7775   ADD      V7, #75         ; Add 117 to V7
$34A    $241D   CALL     $41D            ; Call subroutine at 41D
$34C    $32CD   SE       V2, #CD         ; Skip if V2 == 205
$34E    $9E0F   UNKNOWN  $9E0F           ; Unknown 9xxx instruction
$350    $B93F   JP       V0, $93F        ; Jump to V0 + 93F
$352    $3875   SE       V8, #75         ; Skip if V8 == 117
$354    $B23C   JP       V0, $23C        ; Jump to V0 + 23C
$356    $E56A   UNKNOWN  $E56A           ; Unknown Exxx instruction
$358    $533F   UNKNOWN  $533F           ; Unknown 5xxx instruction
$35A    $0270   SYS      $270            ; System call to 270
$35C    $99C0   SNE      V9, VC          ; Skip if V9 != VC
$35E    $B602   JP       V0, $602        ; Jump to V0 + 602
$360    $12FF   JP       $2FF            ; Jump to 2FF
$362    $57F9   UNKNOWN  $57F9           ; Unknown 5xxx instruction
$364    $FD2D   UNKNOWN  FD2D            ; Unknown Fxxx instruction
$366    $30D4   SE       V0, #D4         ; Skip if V0 == 212
$368    $AF74   LD       I, $F74         ; Load F74 into I
$36A    $14EA   JP       $4EA            ; Jump to 4EA
$36C    $DAED   DRW      VA, VE, #D      ; Draw 13-byte sprite at VA, VE
$36E    $8487   SUBN     V4, V8          ; V4 = V8 - V4, VF = !borrow
$370    $4901   SNE      V9, #01         ; Skip if V9 != 1
$372    $4C91   SNE      VC, #91         ; Skip if VC != 145
$374    $B1B0   JP       V0, $1B0        ; Jump to V0 + 1B0
$376    $92B6   UNKNOWN  $92B6           ; Unknown 9xxx instruction
$378    $F88A   UNKNOWN  F88A            ; Unknown Fxxx instruction
$37A    $F43F   UNKNOWN  F43F            ; Unknown Fxxx instruction
$37C    $D887   DRW      V8, V8, #7      ; Draw 7-byte sprite at V8, V8
$37E    $925A   UNKNOWN  $925A           ; Unknown 9xxx instruction
$380    $3D90   SE       VD, #90         ; Skip if VD == 144
$382    $B398   JP       V0, $398        ; Jump to V0 + 398
$384    $3E01   SE       VE, #01         ; Skip if VE == 1
$386    $2AFC   CALL     $AFC            ; Call subroutine at AFC
$388    $842E   SHL      V4              ; V4 <<= 1, VF = MSB
$38A    $1EAC   JP       $EAC            ; Jump to EAC
$38C    $EDB6   UNKNOWN  $EDB6           ; Unknown Exxx instruction
$38E    $BAD8   JP       V0, $AD8        ; Jump to V0 + AD8
$390    $D048   DRW      V0, V4, #8      ; Draw 8-byte sprite at V0, V4
$392    $4D24   SNE      VD, #24         ; Skip if VD != 36
$394    $C55C   RND      V5, #5C         ; V5 = random & 5C
$396    $C5D5   RND      V5, #D5         ; V5 = random & D5
$398    $B2BF   JP       V0, $2BF        ; Jump to V0 + 2BF
$39A    $93D2   UNKNOWN  $93D2           ; Unknown 9xxx instruction
$39C    $7C33   ADD      VC, #33         ; Add 51 to VC
$39E    $6B06   LD       VB, #06         ; Load 6 into VB
$3A0    $7781   ADD      V7, #81         ; Add 129 to V7
$3A2    $3C1A   SE       VC, #1A         ; Skip if VC == 26
$3A4    $8F68   UNKNOWN  8F68            ; Unknown 8xxx instruction
$3A6    $E390   UNKNOWN  $E390           ; Unknown Exxx instruction
$3A8    $E2CE   UNKNOWN  $E2CE           ; Unknown Exxx instruction
$3AA    $D122   DRW      V1, V2, #2      ; Draw 2-byte sprite at V1, V2
$3AC    $AD6B   LD       I, $D6B         ; Load D6B into I
$3AE    $028B   SYS      $28B            ; System call to 28B
$3B0    $4B48   SNE      VB, #48         ; Skip if VB != 72
$3B2    $0606   SYS      $606            ; System call to 606
$3B4    $E404   UNKNOWN  $E404           ; Unknown Exxx instruction
$3B6    $BA9E   JP       V0, $A9E        ; Jump to V0 + A9E
$3B8    $ADCF   LD       I, $DCF         ; Load DCF into I
$3BA    $3E59   SE       VE, #59         ; Skip if VE == 89
$3BC    $C5DE   RND      V5, #DE         ; V5 = random & DE
$3BE    $982C   UNKNOWN  $982C           ; Unknown 9xxx instruction
$3C0    $3EA2   SE       VE, #A2         ; Skip if VE == 162
$3C2    $3C7C   SE       VC, #7C         ; Skip if VC == 124
$3C4    $514C   UNKNOWN  $514C           ; Unknown 5xxx instruction
$3C6    $DB62   DRW      VB, V6, #2      ; Draw 2-byte sprite at VB, V6
$3C8    $488A   SNE      V8, #8A         ; Skip if V8 != 138
$3CA    $5C83   UNKNOWN  $5C83           ; Unknown 5xxx instruction
$3CC    $7310   ADD      V3, #10         ; Add 16 to V3
$3CE    $3935   SE       V9, #35         ; Skip if V9 == 53
$3D0    $B676   JP       V0, $676        ; Jump to V0 + 676
$3D2    $A479   LD       I, $479         ; Load 479 into I
$3D4    $6CF5   LD       VC, #F5         ; Load 245 into VC
$3D6    $25C2   CALL     $5C2            ; Call subroutine at 5C2
$3D8    $C796   RND      V7, #96         ; V7 = random & 96
$3DA    $8B8D   UNKNOWN  8B8D            ; Unknown 8xxx instruction
$3DC    $7E05   ADD      VE, #05         ; Add 5 to VE
$3DE    $97CA   UNKNOWN  $97CA           ; Unknown 9xxx instruction
$3E0    $1D30   JP       $D30            ; Jump to D30
$3E2    $C20C   RND      V2, #0C         ; V2 = random & 0C
$3E4    $FAE5   UNKNOWN  FAE5            ; Unknown Fxxx instruction
$3E6    $1735   JP       $735            ; Jump to 735
$3E8    $E9A1   SKNP     V9              ; Skip if key V9 not pressed
$3EA    $A8D1   LD       I, $8D1         ; Load 8D1 into I
$3EC    $FF3B   UNKNOWN  FF3B            ; Unknown Fxxx instruction
$3EE    $DA0C   DRW      VA, V0, #C      ; Draw 12-byte sprite at VA, V0
$3F0    $9D07   UNKNOWN  $9D07           ; Unknown 9xxx instruction
$3F2    $203A   CALL     $03A            ; Call subroutine at 03A
$3F4    $5F2F   UNKNOWN  $5F2F           ; Unknown 5xxx instruction
$3F6    $7CB0   ADD      VC, #B0         ; Add 176 to VC
$3F8    $D23F   DRW      V2, V3, #F      ; Draw 15-byte sprite at V2, V3
$3FA    $F5DF   UNKNOWN  F5DF            ; Unknown Fxxx instruction
$3FC    $CA14   RND      VA, #14         ; VA = random & 14
$3FE    $9191   UNKNOWN  $9191           ; Unknown 9xxx instruction
$400    $20C9   CALL     $0C9            ; Call subroutine at 0C9
$402    $DFBC   DRW      VF, VB, #C      ; Draw 12-byte sprite at VF, VB
$404    $550E   UNKNOWN  $550E           ; Unknown 5xxx instruction
$406    $2F79   CALL     $F79            ; Call subroutine at F79
$408    $2CB3   CALL     $CB3            ; Call subroutine at CB3
$40A    $5119   UNKNOWN  $5119           ; Unknown 5xxx instruction
$40C    $ACD1   LD       I, $CD1         ; Load CD1 into I
$40E    $447B   SNE      V4, #7B         ; Skip if V4 != 123
$410    $8CAC   UNKNOWN  8CAC            ; Unknown 8xxx instruction
$412    $4902   SNE      V9, #02         ; Skip if V9 != 2
$414    $0209   SYS      $209            ; System call to 209
$416    $1452   JP       $452            ; Jump to 452
$418    $A11A   LD       I, $11A         ; Load 11A into I
$41A    $9BA2   UNKNOWN  $9BA2           ; Unknown 9xxx instruction
$41C    $3C44   SE       VC, #44         ; Skip if VC == 68
$41E    $4827   SNE      V8, #27         ; Skip if V8 != 39
$420    $2723   CALL     $723            ; Call subroutine at 723
$422    $508F   UNKNOWN  $508F           ; Unknown 5xxx instruction
$424    $272B   CALL     $72B            ; Call subroutine at 72B
$426    $D1AD   DRW      V1, VA, #D      ; Draw 13-byte sprite at V1, VA
$428    $8FD8   UNKNOWN  8FD8            ; Unknown 8xxx instruction
$42A    $B347   JP       V0, $347        ; Jump to V0 + 347
$42C    $DCA6   DRW      VC, VA, #6      ; Draw 6-byte sprite at VC, VA
$42E    $8C68   UNKNOWN  8C68            ; Unknown 8xxx instruction
$430    $50CB   UNKNOWN  $50CB           ; Unknown 5xxx instruction
$432    $AA3E   LD       I, $A3E         ; Load A3E into I
$434    $CC90   RND      VC, #90         ; VC = random & 90
$436    $D0E5   DRW      V0, VE, #5      ; Draw 5-byte sprite at V0, VE
$438    $5D5D   UNKNOWN  $5D5D           ; Unknown 5xxx instruction
$43A    $EAE2   UNKNOWN  $EAE2           ; Unknown Exxx instruction
$43C    $0928   SYS      $928            ; System call to 928
$43E    $58D5   UNKNOWN  $58D5           ; Unknown 5xxx instruction
$440    $C287   RND      V2, #87         ; V2 = random & 87
$442    $1BB5   JP       $BB5            ; Jump to BB5
$444    $2B28   CALL     $B28            ; Call subroutine at B28
$446    $9F7C   UNKNOWN  $9F7C           ; Unknown 9xxx instruction
$448    $AC6A   LD       I, $C6A         ; Load C6A into I
$44A    $09C2   SYS      $9C2            ; System call to 9C2
$44C    $FC87   UNKNOWN  FC87            ; Unknown Fxxx instruction
$44E    $7985   ADD      V9, #85         ; Add 133 to V9
$450    $CFC5   RND      VF, #C5         ; VF = random & C5
$452    $A63B   LD       I, $63B         ; Load 63B into I
$454    $A3C5   LD       I, $3C5         ; Load 3C5 into I
$456    $F041   UNKNOWN  F041            ; Unknown Fxxx instruction
$458    $6A72   LD       VA, #72         ; Load 114 into VA
$45A    $2C89   CALL     $C89            ; Call subroutine at C89
$45C    $765B   ADD      V6, #5B         ; Add 91 to V6
$45E    $54AD   UNKNOWN  $54AD           ; Unknown 5xxx instruction
$460    $A59F   LD       I, $59F         ; Load 59F into I
$462    $C01B   RND      V0, #1B         ; V0 = random & 1B
$464    $B986   JP       V0, $986        ; Jump to V0 + 986
$466    $E66D   UNKNOWN  $E66D           ; Unknown Exxx instruction
$468    $5C18   UNKNOWN  $5C18           ; Unknown 5xxx instruction
$46A    $94F9   UNKNOWN  $94F9           ; Unknown 9xxx instruction
$46C    $2F6A   CALL     $F6A            ; Call subroutine at F6A
$46E    $A20D   LD       I, $20D         ; Load 20D into I
$470    $45C7   SNE      V5, #C7         ; Skip if V5 != 199
$472    $7810   ADD      V8, #10         ; Add 16 to V8
$474    $80CF   UNKNOWN  80CF            ; Unknown 8xxx instruction
$476    $86AD   UNKNOWN  86AD            ; Unknown 8xxx instruction
$478    $8A2D   UNKNOWN  8A2D            ; Unknown 8xxx instruction
$47A    $4038   SNE      V0, #38         ; Skip if V0 != 56
$47C    $E7FF   UNKNOWN  $E7FF           ; Unknown Exxx instruction
$47E    $1037   JP       $037            ; Jump to 037
$480    $CBF4   RND      VB, #F4         ; VB = random & F4
$482    $F114   UNKNOWN  F114            ; Unknown Fxxx instruction
$484    $5E59   UNKNOWN  $5E59           ; Unknown 5xxx instruction
$486    $E829   UNKNOWN  $E829           ; Unknown Exxx instruction
$488    $F827   UNKNOWN  F827            ; Unknown Fxxx instruction
$48A    $456C   SNE      V5, #6C         ; Skip if V5 != 108
$48C    $5D20   SE       VD, V2          ; Skip if VD == V2
$48E    $7A4D   ADD      VA, #4D         ; Add 77 to VA
$490    $09DD   SYS      $9DD            ; System call to 9DD
$492    $0837   SYS      $837            ; System call to 837
$494    $3E12   SE       VE, #12         ; Skip if VE == 18
$496    $CD5D   RND      VD, #5D         ; VD = random & 5D
$498    $9BE2   UNKNOWN  $9BE2           ; Unknown 9xxx instruction
$49A    $3446   SE       V4, #46         ; Skip if V4 == 70
$49C    $3FE7   SE       VF, #E7         ; Skip if VF == 231
$49E    $E809   UNKNOWN  $E809           ; Unknown Exxx instruction
$4A0    $764D   ADD      V6, #4D         ; Add 77 to V6
$4A2    $A65F   LD       I, $65F         ; Load 65F into I
$4A4    $A883   LD       I, $883         ; Load 883 into I
$4A6    $E781   UNKNOWN  $E781           ; Unknown Exxx instruction
$4A8    $C084   RND      V0, #84         ; V0 = random & 84
$4AA    $0BF8   SYS      $BF8            ; System call to BF8
$4AC    $0D18   SYS      $D18            ; System call to D18
$4AE    $9EA9   UNKNOWN  $9EA9           ; Unknown 9xxx instruction
$4B0    $5DA9   UNKNOWN  $5DA9           ; Unknown 5xxx instruction
$4B2    $3EC9   SE       VE, #C9         ; Skip if VE == 201
$4B4    $9FC0   SNE      VF, VC          ; Skip if VF != VC
$4B6    $18A6   JP       $8A6            ; Jump to 8A6
$4B8    $69DF   LD       V9, #DF         ; Load 223 into V9
$4BA    $BE53   JP       V0, $E53        ; Jump to V0 + E53
$4BC    $FBC7   UNKNOWN  FBC7            ; Unknown Fxxx instruction
$4BE    $9B85   UNKNOWN  $9B85           ; Unknown 9xxx instruction
$4C0    $3870   SE       V8, #70         ; Skip if V8 == 112
$4C2    $43DE   SNE      V3, #DE         ; Skip if V3 != 222
$4C4    $05D7   SYS      $5D7            ; System call to 5D7
$4C6    $744D   ADD      V4, #4D         ; Add 77 to V4
$4C8    $C271   RND      V2, #71         ; V2 = random & 71
$4CA    $9ECB   UNKNOWN  $9ECB           ; Unknown 9xxx instruction
$4CC    $4880   SNE      V8, #80         ; Skip if V8 != 128
$4CE    $0326   SYS      $326            ; System call to 326
$4D0    $EB2D   UNKNOWN  $EB2D           ; Unknown Exxx instruction
$4D2    $EE69   UNKNOWN  $EE69           ; Unknown Exxx instruction
$4D4    $B85A   JP       V0, $85A        ; Jump to V0 + 85A
$4D6    $BDC3   JP       V0, $DC3        ; Jump to V0 + DC3
$4D8    $5D0B   UNKNOWN  $5D0B           ; Unknown 5xxx instruction
$4DA    $4A09   SNE      VA, #09         ; Skip if VA != 9
$4DC    $C62F   RND      V6, #2F         ; V6 = random & 2F
$4DE    $83BB   UNKNOWN  83BB            ; Unknown 8xxx instruction
$4E0    $84D8   UNKNOWN  84D8            ; Unknown 8xxx instruction
$4E2    $E242   UNKNOWN  $E242           ; Unknown Exxx instruction
$4E4    $66A8   LD       V6, #A8         ; Load 168 into V6
$4E6    $0DCE   SYS      $DCE            ; System call to DCE
$4E8    $8E77   SUBN     VE, V7          ; VE = V7 - VE, VF = !borrow
$4EA    $58A3   UNKNOWN  $58A3           ; Unknown 5xxx instruction
$4EC    $503D   UNKNOWN  $503D           ; Unknown 5xxx instruction
$4EE    $044B   SYS      $44B            ; System call to 44B
$4F0    $752B   ADD      V5, #2B         ; Add 43 to V5
$4F2    $5A09   UNKNOWN  $5A09           ; Unknown 5xxx instruction
$4F4    $2670   CALL     $670            ; Call subroutine at 670
$4F6    $6281   LD       V2, #81         ; Load 129 into V2
$4F8    $9486   UNKNOWN  $9486           ; Unknown 9xxx instruction
$4FA    $1EFF   JP       $EFF            ; Jump to EFF
$4FC    $EBD6   UNKNOWN  $EBD6           ; Unknown Exxx instruction
$4FE    $94C9   UNKNOWN  $94C9           ; Unknown 9xxx instruction
$500    $9676   UNKNOWN  $9676           ; Unknown 9xxx instruction
$502    $FA09   UNKNOWN  FA09            ; Unknown Fxxx instruction
$504    $6E18   LD       VE, #18         ; Load 24 into VE
$506    $A09C   LD       I, $09C         ; Load 09C into I
$508    $2224   CALL     $224            ; Call subroutine at 224
$50A    $9384   UNKNOWN  $9384           ; Unknown 9xxx instruction
$50C    $E8CA   UNKNOWN  $E8CA           ; Unknown Exxx instruction
$50E    $DC89   DRW      VC, V8, #9      ; Draw 9-byte sprite at VC, V8
$510    $CC3E   RND      VC, #3E         ; VC = random & 3E
$512    $E7BF   UNKNOWN  $E7BF           ; Unknown Exxx instruction
$514    $FC16   UNKNOWN  FC16            ; Unknown Fxxx instruction
$516    $CB06   RND      VB, #06         ; VB = random & 06
$518    $C213   RND      V2, #13         ; V2 = random & 13
$51A    $F79E   UNKNOWN  F79E            ; Unknown Fxxx instruction
$51C    $580C   UNKNOWN  $580C           ; Unknown 5xxx instruction
$51E    $AF6A   LD       I, $F6A         ; Load F6A into I
$520    $6560   LD       V5, #60         ; Load 96 into V5
$522    $E13E   UNKNOWN  $E13E           ; Unknown Exxx instruction
$524    $42AC   SNE      V2, #AC         ; Skip if V2 != 172
$526    $3F07   SE       VF, #07         ; Skip if VF == 7
$528    $15B1   JP       $5B1            ; Jump to 5B1
$52A    $A18A   LD       I, $18A         ; Load 18A into I
$52C    $DE18   DRW      VE, V1, #8      ; Draw 8-byte sprite at VE, V1
$52E    $140C   JP       $40C            ; Jump to 40C
$530    $BD8D   JP       V0, $D8D        ; Jump to V0 + D8D
$532    $B7A4   JP       V0, $7A4        ; Jump to V0 + 7A4
$534    $E318   UNKNOWN  $E318           ; Unknown Exxx instruction
$536    $BA85   JP       V0, $A85        ; Jump to V0 + A85
$538    $B37A   JP       V0, $37A        ; Jump to V0 + 37A
$53A    $B437   JP       V0, $437        ; Jump to V0 + 437
$53C    $AD6E   LD       I, $D6E         ; Load D6E into I
$53E    $2773   CALL     $773            ; Call subroutine at 773
$540    $2A91   CALL     $A91            ; Call subroutine at A91
$542    $B3FF   JP       V0, $3FF        ; Jump to V0 + 3FF
$544    $D406   DRW      V4, V0, #6      ; Draw 6-byte sprite at V4, V0
$546    $5521   UNKNOWN  $5521           ; Unknown 5xxx instruction
$548    $BB40   JP       V0, $B40        ; Jump to V0 + B40
$54A    $5762   UNKNOWN  $5762           ; Unknown 5xxx instruction
$54C    $BA9E   JP       V0, $A9E        ; Jump to V0 + A9E
$54E    $55B4   UNKNOWN  $55B4           ; Unknown 5xxx instruction
$550    $04E9   SYS      $4E9            ; System call to 4E9
$552    $EF24   UNKNOWN  $EF24           ; Unknown Exxx instruction
$554    $ABF5   LD       I, $BF5         ; Load BF5 into I
$556    $4950   SNE      V9, #50         ; Skip if V9 != 80
$558    $519D   UNKNOWN  $519D           ; Unknown 5xxx instruction
$55A    $1A08   JP       $A08            ; Jump to A08
$55C    $A51D   LD       I, $51D         ; Load 51D into I
$55E    $8201   OR       V2, V0          ; V2 |= V0
$560    $3B4E   SE       VB, #4E         ; Skip if VB == 78
$562    $E65B   UNKNOWN  $E65B           ; Unknown Exxx instruction
$564    $F8BF   UNKNOWN  F8BF            ; Unknown Fxxx instruction
$566    $CA4B   RND      VA, #4B         ; VA = random & 4B
$568    $CBDB   RND      VB, #DB         ; VB = random & DB
$56A    $8511   OR       V5, V1          ; V5 |= V1
$56C    $92E9   UNKNOWN  $92E9           ; Unknown 9xxx instruction
$56E    $E50B   UNKNOWN  $E50B           ; Unknown Exxx instruction
$570    $9F47   UNKNOWN  $9F47           ; Unknown 9xxx instruction
$572    $D90E   DRW      V9, V0, #E      ; Draw 14-byte sprite at V9, V0
$574    $F444   UNKNOWN  F444            ; Unknown Fxxx instruction
$576    $5887   UNKNOWN  $5887           ; Unknown 5xxx instruction
$578    $3DEF   SE       VD, #EF         ; Skip if VD == 239
$57A    $CE56   RND      VE, #56         ; VE = random & 56
$57C    $A7EF   LD       I, $7EF         ; Load 7EF into I
$57E    $823E   SHL      V2              ; V2 <<= 1, VF = MSB
$580    $BFEF   JP       V0, $FEF        ; Jump to V0 + FEF
$582    $6568   LD       V5, #68         ; Load 104 into V5
$584    $C780   RND      V7, #80         ; V7 = random & 80
$586    $5D58   UNKNOWN  $5D58           ; Unknown 5xxx instruction
$588    $8535   SUB      V5, V3          ; V5 -= V3, VF = !borrow
$58A    $6A71   LD       VA, #71         ; Load 113 into VA
$58C    $7D8E   ADD      VD, #8E         ; Add 142 to VD
$58E    $32F6   SE       V2, #F6         ; Skip if V2 == 246
$590    $9E76   UNKNOWN  $9E76           ; Unknown 9xxx instruction
$592    $1D89   JP       $D89            ; Jump to D89
$594    $903F   UNKNOWN  $903F           ; Unknown 9xxx instruction
$596    $57D9   UNKNOWN  $57D9           ; Unknown 5xxx instruction
$598    $9785   UNKNOWN  $9785           ; Unknown 9xxx instruction
$59A    $12FC   JP       $2FC            ; Jump to 2FC
$59C    $B2F6   JP       V0, $2F6        ; Jump to V0 + 2F6
$59E    $6F43   LD       VF, #43         ; Load 67 into VF
$5A0    $9A3D   UNKNOWN  $9A3D           ; Unknown 9xxx instruction
$5A2    $1529   JP       $529            ; Jump to 529
$5A4    $81CE   SHL      V1              ; V1 <<= 1, VF = MSB
$5A6    $74FF   ADD      V4, #FF         ; Add 255 to V4
$5A8    $162D   JP       $62D            ; Jump to 62D
$5AA    $FB1B   UNKNOWN  FB1B            ; Unknown Fxxx instruction
$5AC    $3790   SE       V7, #90         ; Skip if V7 == 144
$5AE    $F38D   UNKNOWN  F38D            ; Unknown Fxxx instruction
$5B0    $3B25   SE       VB, #25         ; Skip if VB == 37
$5B2    $9A3A   UNKNOWN  $9A3A           ; Unknown 9xxx instruction
$5B4    $9E1D   UNKNOWN  $9E1D           ; Unknown 9xxx instruction
$5B6    $BE54   JP       V0, $E54        ; Jump to V0 + E54
$5B8    $1EEC   JP       $EEC            ; Jump to EEC
$5BA    $B829   JP       V0, $829        ; Jump to V0 + 829
$5BC    $F3FC   UNKNOWN  F3FC            ; Unknown Fxxx instruction
$5BE    $A573   LD       I, $573         ; Load 573 into I
$5C0    $D727   DRW      V7, V2, #7      ; Draw 7-byte sprite at V7, V2
$5C2    $F701   UNKNOWN  F701            ; Unknown Fxxx instruction
$5C4    $74B9   ADD      V4, #B9         ; Add 185 to V4
$5C6    $FE56   UNKNOWN  FE56            ; Unknown Fxxx instruction
$5C8    $863F   UNKNOWN  863F            ; Unknown 8xxx instruction
$5CA    $697F   LD       V9, #7F         ; Load 127 into V9
$5CC    $2A90   CALL     $A90            ; Call subroutine at A90
$5CE    $F2FA   UNKNOWN  F2FA            ; Unknown Fxxx instruction
$5D0    $E552   UNKNOWN  $E552           ; Unknown Exxx instruction
$5D2    $3604   SE       V6, #04         ; Skip if V6 == 4
$5D4    $578A   UNKNOWN  $578A           ; Unknown 5xxx instruction
$5D6    $C24E   RND      V2, #4E         ; V2 = random & 4E
$5D8    $FE6C   UNKNOWN  FE6C            ; Unknown Fxxx instruction
$5DA    $EA6C   UNKNOWN  $EA6C           ; Unknown Exxx instruction
$5DC    $D8B1   DRW      V8, VB, #1      ; Draw 1-byte sprite at V8, VB
$5DE    $63E4   LD       V3, #E4         ; Load 228 into V3
$5E0    $D5C5   DRW      V5, VC, #5      ; Draw 5-byte sprite at V5, VC
$5E2    $FBE0   UNKNOWN  FBE0            ; Unknown Fxxx instruction
$5E4    $7CC8   ADD      VC, #C8         ; Add 200 to VC
$5E6    $B270   JP       V0, $270        ; Jump to V0 + 270
$5E8    $26D8   CALL     $6D8            ; Call subroutine at 6D8
$5EA    $1593   JP       $593            ; Jump to 593
$5EC    $2D80   CALL     $D80            ; Call subroutine at D80
$5EE    $BF38   JP       V0, $F38        ; Jump to V0 + F38
$5F0    $CFB8   RND      VF, #B8         ; VF = random & B8
$5F2    $03B2   SYS      $3B2            ; System call to 3B2
$5F4    $C138   RND      V1, #38         ; V1 = random & 38
$5F6    $BA2A   JP       V0, $A2A        ; Jump to V0 + A2A
$5F8    $7774   ADD      V7, #74         ; Add 116 to V7
$5FA    $FF33   LD       B, VF           ; Store BCD of VF at I, I+1, I+2
$5FC    $2454   CALL     $454            ; Call subroutine at 454
$5FE    $77B3   ADD      V7, #B3         ; Add 179 to V7
$600    $57E7   UNKNOWN  $57E7           ; Unknown 5xxx instruction
$602    $8445   SUB      V4, V4          ; V4 -= V4, VF = !borrow
$604    $0CB3   SYS      $CB3            ; System call to CB3
$606    $C2B8   RND      V2, #B8         ; V2 = random & B8
$608    $79CC   ADD      V9, #CC         ; Add 204 to V9
$60A    $7999   ADD      V9, #99         ; Add 153 to V9
$60C    $D18B   DRW      V1, V8, #B      ; Draw 11-byte sprite at V1, V8
$60E    $C42B   RND      V4, #2B         ; V4 = random & 2B
$610    $1822   JP       $822            ; Jump to 822
$612    $F1C7   UNKNOWN  F1C7            ; Unknown Fxxx instruction
$614    $DF66   DRW      VF, V6, #6      ; Draw 6-byte sprite at VF, V6
$616    $189A   JP       $89A            ; Jump to 89A
$618    $280D   CALL     $80D            ; Call subroutine at 80D
$61A    $096C   SYS      $96C            ; System call to 96C
$61C    $681F   LD       V8, #1F         ; Load 31 into V8
$61E    $19ED   JP       $9ED            ; Jump to 9ED
$620    $BA7B   JP       V0, $A7B        ; Jump to V0 + A7B
$622    $38C6   SE       V8, #C6         ; Skip if V8 == 198
$624    $9FB0   SNE      VF, VB          ; Skip if VF != VB
$626    $FC92   UNKNOWN  FC92            ; Unknown Fxxx instruction
$628    $1DE7   JP       $DE7            ; Jump to DE7
$62A    $EB5C   UNKNOWN  $EB5C           ; Unknown Exxx instruction
$62C    $377D   SE       V7, #7D         ; Skip if V7 == 125
$62E    $4603   SNE      V6, #03         ; Skip if V6 != 3
$630    $0CEE   SYS      $CEE            ; System call to CEE
$632    $51D8   UNKNOWN  $51D8           ; Unknown 5xxx instruction
$634    $73D2   ADD      V3, #D2         ; Add 210 to V3
$636    $F414   UNKNOWN  F414            ; Unknown Fxxx instruction
$638    $526F   UNKNOWN  $526F           ; Unknown 5xxx instruction
$63A    $BAF7   JP       V0, $AF7        ; Jump to V0 + AF7
$63C    $C2C3   RND      V2, #C3         ; V2 = random & C3
$63E    $2F87   CALL     $F87            ; Call subroutine at F87
$640    $D8B4   DRW      V8, VB, #4      ; Draw 4-byte sprite at V8, VB
$642    $AEFC   LD       I, $EFC         ; Load EFC into I
$644    $0901   SYS      $901            ; System call to 901
$646    $8130   LD       V1, V3          ; V1 = V3
$648    $184C   JP       $84C            ; Jump to 84C
$64A    $7062   ADD      V0, #62         ; Add 98 to V0
$64C    $3C99   SE       VC, #99         ; Skip if VC == 153
$64E    $C55E   RND      V5, #5E         ; V5 = random & 5E
$650    $4460   SNE      V4, #60         ; Skip if V4 != 96
$652    $6D2E   LD       VD, #2E         ; Load 46 into VD
$654    $652B   LD       V5, #2B         ; Load 43 into V5
$656    $8E0F   UNKNOWN  8E0F            ; Unknown 8xxx instruction
$658    $2EC1   CALL     $EC1            ; Call subroutine at EC1
$65A    $1C42   JP       $C42            ; Jump to C42
$65C    $870A   UNKNOWN  870A            ; Unknown 8xxx instruction
$65E    $A46E   LD       I, $46E         ; Load 46E into I
$660    $DB37   DRW      VB, V3, #7      ; Draw 7-byte sprite at VB, V3
$662    $5F09   UNKNOWN  $5F09           ; Unknown 5xxx instruction
$664    $575A   UNKNOWN  $575A           ; Unknown 5xxx instruction
$666    $C31E   RND      V3, #1E         ; V3 = random & 1E
$668    $3199   SE       V1, #99         ; Skip if V1 == 153
$66A    $F5BD   UNKNOWN  F5BD            ; Unknown Fxxx instruction
$66C    $DE64   DRW      VE, V6, #4      ; Draw 4-byte sprite at VE, V6
$66E    $A629   LD       I, $629         ; Load 629 into I
$670    $1F54   JP       $F54            ; Jump to F54
$672    $DFB8   DRW      VF, VB, #8      ; Draw 8-byte sprite at VF, VB
$674    $BFC1   JP       V0, $FC1        ; Jump to V0 + FC1
$676    $2A81   CALL     $A81            ; Call subroutine at A81
$678    $254C   CALL     $54C            ; Call subroutine at 54C
$67A    $1CFE   JP       $CFE            ; Jump to CFE
$67C    $C419   RND      V4, #19         ; V4 = random & 19
$67E    $0552   SYS      $552            ; System call to 552
$680    $AFD0   LD       I, $FD0         ; Load FD0 into I
$682    $D14E   DRW      V1, V4, #E      ; Draw 14-byte sprite at V1, V4
$684    $8F5B   UNKNOWN  8F5B            ; Unknown 8xxx instruction
$686    $CC83   RND      VC, #83         ; VC = random & 83
$688    $D744   DRW      V7, V4, #4      ; Draw 4-byte sprite at V7, V4
$68A    $1455   JP       $455            ; Jump to 455
$68C    $7B5B   ADD      VB, #5B         ; Add 91 to VB
$68E    $6FE9   LD       VF, #E9         ; Load 233 into VF
$690    $B43E   JP       V0, $43E        ; Jump to V0 + 43E
$692    $078B   SYS      $78B            ; System call to 78B
$694    $29CA   CALL     $9CA            ; Call subroutine at 9CA
$696    $173C   JP       $73C            ; Jump to 73C
$698    $4A70   SNE      VA, #70         ; Skip if VA != 112
$69A    $0763   SYS      $763            ; System call to 763
$69C    $409E   SNE      V0, #9E         ; Skip if V0 != 158
$69E    $46D9   SNE      V6, #D9         ; Skip if V6 != 217
$6A0    $EF4B   UNKNOWN  $EF4B           ; Unknown Exxx instruction
$6A2    $FB50   UNKNOWN  FB50            ; Unknown Fxxx instruction
$6A4    $3960   SE       V9, #60         ; Skip if V9 == 96
$6A6    $1456   JP       $456            ; Jump to 456
$6A8    $BE86   JP       V0, $E86        ; Jump to V0 + E86
$6AA    $2872   CALL     $872            ; Call subroutine at 872
$6AC    $BC42   JP       V0, $C42        ; Jump to V0 + C42
$6AE    $7C21   ADD      VC, #21         ; Add 33 to VC
$6B0    $AA4A   LD       I, $A4A         ; Load A4A into I
$6B2    $1086   JP       $086            ; Jump to 086
$6B4    $94D5   UNKNOWN  $94D5           ; Unknown 9xxx instruction
$6B6    $D7F8   DRW      V7, VF, #8      ; Draw 8-byte sprite at V7, VF
$6B8    $644D   LD       V4, #4D         ; Load 77 into V4
$6BA    $28F1   CALL     $8F1            ; Call subroutine at 8F1
$6BC    $BFAA   JP       V0, $FAA        ; Jump to V0 + FAA
$6BE    $C93E   RND      V9, #3E         ; V9 = random & 3E
$6C0    $321A   SE       V2, #1A         ; Skip if V2 == 26
$6C2    $6A60   LD       VA, #60         ; Load 96 into VA
$6C4    $0FF9   SYS      $FF9            ; System call to FF9
$6C6    $4E13   SNE      VE, #13         ; Skip if VE != 19
$6C8    $A952   LD       I, $952         ; Load 952 into I
$6CA    $85A8   UNKNOWN  85A8            ; Unknown 8xxx instruction
$6CC    $EED6   UNKNOWN  $EED6           ; Unknown Exxx instruction
$6CE    $B9EF   JP       V0, $9EF        ; Jump to V0 + 9EF
$6D0    $4A3B   SNE      VA, #3B         ; Skip if VA != 59
$6D2    $B3FC   JP       V0, $3FC        ; Jump to V0 + 3FC
$6D4    $4995   SNE      V9, #95         ; Skip if V9 != 149
$6D6    $0714   SYS      $714            ; System call to 714
$6D8    $B57E   JP       V0, $57E        ; Jump to V0 + 57E
$6DA    $108B   JP       $08B            ; Jump to 08B
$6DC    $A02D   LD       I, $02D         ; Load 02D into I
$6DE    $0186   SYS      $186            ; System call to 186
$6E0    $857C   UNKNOWN  857C            ; Unknown 8xxx instruction
$6E2    $84F2   AND      V4, VF          ; V4 &= VF
$6E4    $B32A   JP       V0, $32A        ; Jump to V0 + 32A
$6E6    $F9D3   UNKNOWN  F9D3            ; Unknown Fxxx instruction
$6E8    $383E   SE       V8, #3E         ; Skip if V8 == 62
$6EA    $AB5A   LD       I, $B5A         ; Load B5A into I
$6EC    $22AA   CALL     $2AA            ; Call subroutine at 2AA
$6EE    $312B   SE       V1, #2B         ; Skip if V1 == 43
$6F0    $6AFB   LD       VA, #FB         ; Load 251 into VA
$6F2    $93AC   UNKNOWN  $93AC           ; Unknown 9xxx instruction
$6F4    $494E   SNE      V9, #4E         ; Skip if V9 != 78
$6F6    $BDE8   JP       V0, $DE8        ; Jump to V0 + DE8
$6F8    $082E   SYS      $82E            ; System call to 82E
$6FA    $F08F   UNKNOWN  F08F            ; Unknown Fxxx instruction
$6FC    $03A3   SYS      $3A3            ; System call to 3A3
$6FE    $6DEB   LD       VD, #EB         ; Load 235 into VD
$700    $F564   UNKNOWN  F564            ; Unknown Fxxx instruction
$702    $1F5D   JP       $F5D            ; Jump to F5D
$704    $DB5A   DRW      VB, V5, #A      ; Draw 10-byte sprite at VB, V5
$706    $3161   SE       V1, #61         ; Skip if V1 == 97
$708    $1B70   JP       $B70            ; Jump to B70
$70A    $3712   SE       V7, #12         ; Skip if V7 == 18
$70C    $89E2   AND      V9, VE          ; V9 &= VE
$70E    $CA2E   RND      VA, #2E         ; VA = random & 2E
$710    $27BC   CALL     $7BC            ; Call subroutine at 7BC
$712    $A8D8   LD       I, $8D8         ; Load 8D8 into I
$714    $6BED   LD       VB, #ED         ; Load 237 into VB
$716    $7178   ADD      V1, #78         ; Add 120 to V1
$718    $C02B   RND      V0, #2B         ; V0 = random & 2B
$71A    $898C   UNKNOWN  898C            ; Unknown 8xxx instruction
$71C    $BAF4   JP       V0, $AF4        ; Jump to V0 + AF4
$71E    $0E1D   SYS      $E1D            ; System call to E1D
$720    $2944   CALL     $944            ; Call subroutine at 944
$722    $99AF   UNKNOWN  $99AF           ; Unknown 9xxx instruction
$724    $F9A0   UNKNOWN  F9A0            ; Unknown Fxxx instruction
$726    $C029   RND      V0, #29         ; V0 = random & 29
$728    $DCD6   DRW      VC, VD, #6      ; Draw 6-byte sprite at VC, VD
$72A    $3231   SE       V2, #31         ; Skip if V2 == 49
$72C    $B678   JP       V0, $678        ; Jump to V0 + 678
$72E    $40BF   SNE      V0, #BF         ; Skip if V0 != 191
$730    $94C3   UNKNOWN  $94C3           ; Unknown 9xxx instruction
$732    $682B   LD       V8, #2B         ; Load 43 into V8
$734    $BEEC   JP       V0, $EEC        ; Jump to V0 + EEC
$736    $FDAF   UNKNOWN  FDAF            ; Unknown Fxxx instruction
$738    $8B5A   UNKNOWN  8B5A            ; Unknown 8xxx instruction
$73A    $A1E3   LD       I, $1E3         ; Load 1E3 into I
$73C    $0CFA   SYS      $CFA            ; System call to CFA
$73E    $3693   SE       V6, #93         ; Skip if V6 == 147
$740    $07C8   SYS      $7C8            ; System call to 7C8
$742    $B881   JP       V0, $881        ; Jump to V0 + 881
$744    $7272   ADD      V2, #72         ; Add 114 to V2
$746    $35F4   SE       V5, #F4         ; Skip if V5 == 244
$748    $B458   JP       V0, $458        ; Jump to V0 + 458
$74A    $AA34   LD       I, $A34         ; Load A34 into I
$74C    $BEF7   JP       V0, $EF7        ; Jump to V0 + EF7
$74E    $9C01   UNKNOWN  $9C01           ; Unknown 9xxx instruction
$750    $6857   LD       V8, #57         ; Load 87 into V8
$752    $8F1A   UNKNOWN  8F1A            ; Unknown 8xxx instruction
$754    $0A9B   SYS      $A9B            ; System call to A9B
$756    $6780   LD       V7, #80         ; Load 128 into V7
$758    $2831   CALL     $831            ; Call subroutine at 831
$75A    $3DA6   SE       VD, #A6         ; Skip if VD == 166
$75C    $9ABA   UNKNOWN  $9ABA           ; Unknown 9xxx instruction
$75E    $37A0   SE       V7, #A0         ; Skip if V7 == 160
$760    $15EE   JP       $5EE            ; Jump to 5EE
$762    $304F   SE       V0, #4F         ; Skip if V0 == 79
$764    $CB8A   RND      VB, #8A         ; VB = random & 8A
$766    $64AC   LD       V4, #AC         ; Load 172 into V4
$768    $29EE   CALL     $9EE            ; Call subroutine at 9EE
$76A    $559D   UNKNOWN  $559D           ; Unknown 5xxx instruction
$76C    $615A   LD       V1, #5A         ; Load 90 into V1
$76E    $2B62   CALL     $B62            ; Call subroutine at B62
$770    $8DA5   SUB      VD, VA          ; VD -= VA, VF = !borrow
$772    $5ABD   UNKNOWN  $5ABD           ; Unknown 5xxx instruction
$774    $E27C   UNKNOWN  $E27C           ; Unknown Exxx instruction
$776    $0F06   SYS      $F06            ; System call to F06
$778    $BF11   JP       V0, $F11        ; Jump to V0 + F11
$77A    $DC41   DRW      VC, V4, #1      ; Draw 1-byte sprite at VC, V4
$77C    $C1A9   RND      V1, #A9         ; V1 = random & A9
$77E    $E9DF   UNKNOWN  $E9DF           ; Unknown Exxx instruction
$780    $F02D   UNKNOWN  F02D            ; Unknown Fxxx instruction
$782    $AC92   LD       I, $C92         ; Load C92 into I
$784    $6CF4   LD       VC, #F4         ; Load 244 into VC
$786    $6833   LD       V8, #33         ; Load 51 into V8
$788    $C4AD   RND      V4, #AD         ; V4 = random & AD
$78A    $C68F   RND      V6, #8F         ; V6 = random & 8F
$78C    $DA24   DRW      VA, V2, #4      ; Draw 4-byte sprite at VA, V2
$78E    $2D84   CALL     $D84            ; Call subroutine at D84
$790    $7A0B   ADD      VA, #0B         ; Add 11 to VA
$792    $2A18   CALL     $A18            ; Call subroutine at A18
$794    $6CD9   LD       VC, #D9         ; Load 217 into VC
$796    $C430   RND      V4, #30         ; V4 = random & 30
$798    $8C5F   UNKNOWN  8C5F            ; Unknown 8xxx instruction
$79A    $9779   UNKNOWN  $9779           ; Unknown 9xxx instruction
$79C    $37EC   SE       V7, #EC         ; Skip if V7 == 236
$79E    $9DFF   UNKNOWN  $9DFF           ; Unknown 9xxx instruction
$7A0    $9FAD   UNKNOWN  $9FAD           ; Unknown 9xxx instruction
$7A2    $0A36   SYS      $A36            ; System call to A36
$7A4    $375D   SE       V7, #5D         ; Skip if V7 == 93
$7A6    $A2AB   LD       I, $2AB         ; Load 2AB into I
$7A8    $5146   UNKNOWN  $5146           ; Unknown 5xxx instruction
$7AA    $A855   LD       I, $855         ; Load 855 into I
$7AC    $67E6   LD       V7, #E6         ; Load 230 into V7
$7AE    $6233   LD       V2, #33         ; Load 51 into V2
$7B0    $0AB8   SYS      $AB8            ; System call to AB8
$7B2    $126F   JP       $26F            ; Jump to 26F
$7B4    $9288   UNKNOWN  $9288           ; Unknown 9xxx instruction
$7B6    $86C6   SHR      V6              ; V6 >>= 1, VF = LSB
$7B8    $13AB   JP       $3AB            ; Jump to 3AB
$7BA    $335F   SE       V3, #5F         ; Skip if V3 == 95
$7BC    $0886   SYS      $886            ; System call to 886
$7BE    $9DB1   UNKNOWN  $9DB1           ; Unknown 9xxx instruction
$7C0    $54D3   UNKNOWN  $54D3           ; Unknown 5xxx instruction
$7C2    $E9A2   UNKNOWN  $E9A2           ; Unknown Exxx instruction
$7C4    $BDED   JP       V0, $DED        ; Jump to V0 + DED
$7C6    $140D   JP       $40D            ; Jump to 40D
$7C8    $22C5   CALL     $2C5            ; Call subroutine at 2C5
$7CA    $3A25   SE       VA, #25         ; Skip if VA == 37
$7CC    $D08E   DRW      V0, V8, #E      ; Draw 14-byte sprite at V0, V8
$7CE    $D520   DRW      V5, V2, #0      ; Draw 0-byte sprite at V5, V2
$7D0    $978B   UNKNOWN  $978B           ; Unknown 9xxx instruction
$7D2    $323F   SE       V2, #3F         ; Skip if V2 == 63
$7D4    $6487   LD       V4, #87         ; Load 135 into V4
$7D6    $99AF   UNKNOWN  $99AF           ; Unknown 9xxx instruction
$7D8    $D765   DRW      V7, V6, #5      ; Draw 5-byte sprite at V7, V6
$7DA    $B6D8   JP       V0, $6D8        ; Jump to V0 + 6D8
$7DC    $90F5   UNKNOWN  $90F5           ; Unknown 9xxx instruction
$7DE    $74AE   ADD      V4, #AE         ; Add 174 to V4
$7E0    $1A1F   JP       $A1F            ; Jump to A1F
$7E2    $5ECF   UNKNOWN  $5ECF           ; Unknown 5xxx instruction
$7E4    $F999   UNKNOWN  F999            ; Unknown Fxxx instruction
$7E6    $4957   SNE      V9, #57         ; Skip if V9 != 87
$7E8    $B279   JP       V0, $279        ; Jump to V0 + 279
$7EA    $8E73   XOR      VE, V7          ; VE ^= V7
$7EC    $AA3E   LD       I, $A3E         ; Load A3E into I
$7EE    $C1AD   RND      V1, #AD         ; V1 = random & AD
$7F0    $266B   CALL     $66B            ; Call subroutine at 66B
$7F2    $B3AF   JP       V0, $3AF        ; Jump to V0 + 3AF
$7F4    $B25C   JP       V0, $25C        ; Jump to V0 + 25C
$7F6    $6D5D   LD       VD, #5D         ; Load 93 into VD
$7F8    $D9F1   DRW      V9, VF, #1      ; Draw 1-byte sprite at V9, VF
$7FA    $6198   LD       V1, #98         ; Load 152 into V1
$7FC    $AF70   LD       I, $F70         ; Load F70 into I
$7FE    $96C9   UNKNOWN  $96C9           ; Unknown 9xxx instruction
$800    $7EA9   ADD      VE, #A9         ; Add 169 to VE
$802    $7E98   ADD      VE, #98         ; Add 152 to VE
$804    $7A12   ADD      VA, #12         ; Add 18 to VA
$806    $1154   JP       $154            ; Jump to 154
$808    $428B   SNE      V2, #8B         ; Skip if V2 != 139
$80A    $8873   XOR      V8, V7          ; V8 ^= V7
$80C    $D0FD   DRW      V0, VF, #D      ; Draw 13-byte sprite at V0, VF
$80E    $0953   SYS      $953            ; System call to 953
$810    $94F7   UNKNOWN  $94F7           ; Unknown 9xxx instruction
$812    $DDA6   DRW      VD, VA, #6      ; Draw 6-byte sprite at VD, VA
$814    $5077   UNKNOWN  $5077           ; Unknown 5xxx instruction
$816    $AFB8   LD       I, $FB8         ; Load FB8 into I
$818    $C1D4   RND      V1, #D4         ; V1 = random & D4
$81A    $DC28   DRW      VC, V2, #8      ; Draw 8-byte sprite at VC, V2
$81C    $B700   JP       V0, $700        ; Jump to V0 + 700
$81E    $D050   DRW      V0, V5, #0      ; Draw 0-byte sprite at V0, V5
$820    $3CF7   SE       VC, #F7         ; Skip if VC == 247
$822    $B085   JP       V0, $085        ; Jump to V0 + 085
$824    $1189   JP       $189            ; Jump to 189
$826    $F9BE   UNKNOWN  F9BE            ; Unknown Fxxx instruction
$828    $4D3D   SNE      VD, #3D         ; Skip if VD != 61
$82A    $8348   UNKNOWN  8348            ; Unknown 8xxx instruction
$82C    $3357   SE       V3, #57         ; Skip if V3 == 87
$82E    $7EB0   ADD      VE, #B0         ; Add 176 to VE
$830    $1CC3   JP       $CC3            ; Jump to CC3
$832    $8A4D   UNKNOWN  8A4D            ; Unknown 8xxx instruction
$834    $76AE   ADD      V6, #AE         ; Add 174 to V6
$836    $FD84   UNKNOWN  FD84            ; Unknown Fxxx instruction
$838    $1909   JP       $909            ; Jump to 909
$83A    $D945   DRW      V9, V4, #5      ; Draw 5-byte sprite at V9, V4
$83C    $483C   SNE      V8, #3C         ; Skip if V8 != 60
$83E    $ECEB   UNKNOWN  $ECEB           ; Unknown Exxx instruction
$840    $0506   SYS      $506            ; System call to 506
$842    $F447   UNKNOWN  F447            ; Unknown Fxxx instruction
$844    $F65E   UNKNOWN  F65E            ; Unknown Fxxx instruction
$846    $0904   SYS      $904            ; System call to 904
$848    $3E40   SE       VE, #40         ; Skip if VE == 64
$84A    $AA15   LD       I, $A15         ; Load A15 into I
$84C    $6EF8   LD       VE, #F8         ; Load 248 into VE
$84E    $A6AB   LD       I, $6AB         ; Load 6AB into I
$850    $ACFF   LD       I, $CFF         ; Load CFF into I
$852    $CF51   RND      VF, #51         ; VF = random & 51
$854    $EDF5   UNKNOWN  $EDF5           ; Unknown Exxx instruction
$856    $E325   UNKNOWN  $E325           ; Unknown Exxx instruction
$858    $97CF   UNKNOWN  $97CF           ; Unknown 9xxx instruction
$85A    $4262   SNE      V2, #62         ; Skip if V2 != 98
$85C    $8A6E   SHL      VA              ; VA <<= 1, VF = MSB
$85E    $C43C   RND      V4, #3C         ; V4 = random & 3C
$860    $CA42   RND      VA, #42         ; VA = random & 42
$862    $F7BD   UNKNOWN  F7BD            ; Unknown Fxxx instruction
$864    $DD10   DRW      VD, V1, #0      ; Draw 0-byte sprite at VD, V1
$866    $A740   LD       I, $740         ; Load 740 into I
$868    $DC7B   DRW      VC, V7, #B      ; Draw 11-byte sprite at VC, V7
$86A    $0AF1   SYS      $AF1            ; System call to AF1
$86C    $A1FB   LD       I, $1FB         ; Load 1FB into I
$86E    $1454   JP       $454            ; Jump to 454
$870    $4C98   SNE      VC, #98         ; Skip if VC != 152
$872    $B2B5   JP       V0, $2B5        ; Jump to V0 + 2B5
$874    $549C   UNKNOWN  $549C           ; Unknown 5xxx instruction
$876    $B16C   JP       V0, $16C        ; Jump to V0 + 16C
$878    $22CE   CALL     $2CE            ; Call subroutine at 2CE
$87A    $115D   JP       $15D            ; Jump to 15D
$87C    $DE80   DRW      VE, V8, #0      ; Draw 0-byte sprite at VE, V8
$87E    $4D45   SNE      VD, #45         ; Skip if VD != 69
$880    $F1B0   UNKNOWN  F1B0            ; Unknown Fxxx instruction
$882    $F262   UNKNOWN  F262            ; Unknown Fxxx instruction
$884    $E2D6   UNKNOWN  $E2D6           ; Unknown Exxx instruction
$886    $1F04   JP       $F04            ; Jump to F04
$888    $3E57   SE       VE, #57         ; Skip if VE == 87
$88A    $16B4   JP       $6B4            ; Jump to 6B4
$88C    $5360   SE       V3, V6          ; Skip if V3 == V6
$88E    $C4A3   RND      V4, #A3         ; V4 = random & A3
$890    $1ABD   JP       $ABD            ; Jump to ABD
$892    $9D4E   UNKNOWN  $9D4E           ; Unknown 9xxx instruction
$894    $7CD6   ADD      VC, #D6         ; Add 214 to VC
$896    $E0D4   UNKNOWN  $E0D4           ; Unknown Exxx instruction
$898    $8A1B   UNKNOWN  8A1B            ; Unknown 8xxx instruction
$89A    $BA1D   JP       V0, $A1D        ; Jump to V0 + A1D
$89C    $8213   XOR      V2, V1          ; V2 ^= V1
$89E    $F205   UNKNOWN  F205            ; Unknown Fxxx instruction
$8A0    $2D31   CALL     $D31            ; Call subroutine at D31
$8A2    $6ECB   LD       VE, #CB         ; Load 203 into VE
$8A4    $9FA2   UNKNOWN  $9FA2           ; Unknown 9xxx instruction
$8A6    $C227   RND      V2, #27         ; V2 = random & 27
$8A8    $960C   UNKNOWN  $960C           ; Unknown 9xxx instruction
$8AA    $0E57   SYS      $E57            ; System call to E57
$8AC    $94A2   UNKNOWN  $94A2           ; Unknown 9xxx instruction
$8AE    $E0A0   UNKNOWN  $E0A0           ; Unknown Exxx instruction
$8B0    $3AA5   SE       VA, #A5         ; Skip if VA == 165
$8B2    $27EE   CALL     $7EE            ; Call subroutine at 7EE
$8B4    $6308   LD       V3, #08         ; Load 8 into V3
$8B6    $8999   UNKNOWN  8999            ; Unknown 8xxx instruction
$8B8    $6F21   LD       VF, #21         ; Load 33 into VF
$8BA    $DD19   DRW      VD, V1, #9      ; Draw 9-byte sprite at VD, V1
$8BC    $5D79   UNKNOWN  $5D79           ; Unknown 5xxx instruction
$8BE    $FC68   UNKNOWN  FC68            ; Unknown Fxxx instruction
$8C0    $DF61   DRW      VF, V6, #1      ; Draw 1-byte sprite at VF, V6
$8C2    $05AA   SYS      $5AA            ; System call to 5AA
$8C4    $7647   ADD      V6, #47         ; Add 71 to V6
$8C6    $E5CD   UNKNOWN  $E5CD           ; Unknown Exxx instruction
$8C8    $76B5   ADD      V6, #B5         ; Add 181 to V6
$8CA    $595A   UNKNOWN  $595A           ; Unknown 5xxx instruction
$8CC    $315E   SE       V1, #5E         ; Skip if V1 == 94
$8CE    $3823   SE       V8, #23         ; Skip if V8 == 35
$8D0    $4058   SNE      V0, #58         ; Skip if V0 != 88
$8D2    $4239   SNE      V2, #39         ; Skip if V2 != 57
$8D4    $4272   SNE      V2, #72         ; Skip if V2 != 114
$8D6    $E735   UNKNOWN  $E735           ; Unknown Exxx instruction
$8D8    $139F   JP       $39F            ; Jump to 39F
$8DA    $C3BC   RND      V3, #BC         ; V3 = random & BC
$8DC    $5099   UNKNOWN  $5099           ; Unknown 5xxx instruction
$8DE    $D241   DRW      V2, V4, #1      ; Draw 1-byte sprite at V2, V4
$8E0    $1F31   JP       $F31            ; Jump to F31
$8E2    $F06A   UNKNOWN  F06A            ; Unknown Fxxx instruction
$8E4    $ACD7   LD       I, $CD7         ; Load CD7 into I
$8E6    $C7A7   RND      V7, #A7         ; V7 = random & A7
$8E8    $1F13   JP       $F13            ; Jump to F13
$8EA    $3A21   SE       VA, #21         ; Skip if VA == 33
$8EC    $FD8A   UNKNOWN  FD8A            ; Unknown Fxxx instruction
$8EE    $6465   LD       V4, #65         ; Load 101 into V4
$8F0    $9D09   UNKNOWN  $9D09           ; Unknown 9xxx instruction
$8F2    $BC52   JP       V0, $C52        ; Jump to V0 + C52
$8F4    $C15E   RND      V1, #5E         ; V1 = random & 5E
$8F6    $1C05   JP       $C05            ; Jump to C05
$8F8    $67B5   LD       V7, #B5         ; Load 181 into V7
$8FA    $639F   LD       V3, #9F         ; Load 159 into V3
$8FC    $2C3D   CALL     $C3D            ; Call subroutine at C3D
$8FE    $B766   JP       V0, $766        ; Jump to V0 + 766
$900    $8907   SUBN     V9, V0          ; V9 = V0 - V9, VF = !borrow
$902    $6727   LD       V7, #27         ; Load 39 into V7
$904    $3543   SE       V5, #43         ; Skip if V5 == 67
$906    $CAE3   RND      VA, #E3         ; VA = random & E3
$908    $D0F7   DRW      V0, VF, #7      ; Draw 7-byte sprite at V0, VF
$90A    $4791   SNE      V7, #91         ; Skip if V7 != 145
$90C    $DF21   DRW      VF, V2, #1      ; Draw 1-byte sprite at VF, V2
$90E    $FBD8   UNKNOWN  FBD8            ; Unknown Fxxx instruction
$910    $3917   SE       V9, #17         ; Skip if V9 == 23
$912    $A35F   LD       I, $35F         ; Load 35F into I
$914    $135B   JP       $35B            ; Jump to 35B
$916    $E667   UNKNOWN  $E667           ; Unknown Exxx instruction
$918    $885C   UNKNOWN  885C            ; Unknown 8xxx instruction
$91A    $E6F1   UNKNOWN  $E6F1           ; Unknown Exxx instruction
$91C    $6669   LD       V6, #69         ; Load 105 into V6
$91E    $1DB6   JP       $DB6            ; Jump to DB6
$920    $13C7   JP       $3C7            ; Jump to 3C7
$922    $60B5   LD       V0, #B5         ; Load 181 into V0
$924    $0703   SYS      $703            ; System call to 703
$926    $750A   ADD      V5, #0A         ; Add 10 to V5
$928    $B788   JP       V0, $788        ; Jump to V0 + 788
$92A    $A40F   LD       I, $40F         ; Load 40F into I
$92C    $C2C6   RND      V2, #C6         ; V2 = random & C6
$92E    $920C   UNKNOWN  $920C           ; Unknown 9xxx instruction
$930    $9B3D   UNKNOWN  $9B3D           ; Unknown 9xxx instruction
$932    $1481   JP       $481            ; Jump to 481
$934    $FF94   UNKNOWN  FF94            ; Unknown Fxxx instruction
$936    $359C   SE       V5, #9C         ; Skip if V5 == 156
$938    $B9F9   JP       V0, $9F9        ; Jump to V0 + 9F9
$93A    $7E7B   ADD      VE, #7B         ; Add 123 to VE
$93C    $9A99   UNKNOWN  $9A99           ; Unknown 9xxx instruction
$93E    $9434   UNKNOWN  $9434           ; Unknown 9xxx instruction
$940    $9C63   UNKNOWN  $9C63           ; Unknown 9xxx instruction
$942    $93D6   UNKNOWN  $93D6           ; Unknown 9xxx instruction
$944    $9E6B   UNKNOWN  $9E6B           ; Unknown 9xxx instruction
$946    $58A8   UNKNOWN  $58A8           ; Unknown 5xxx instruction
$948    $F5D6   UNKNOWN  F5D6            ; Unknown Fxxx instruction
$94A    $7FA2   ADD      VF, #A2         ; Add 162 to VF
$94C    $0B4D   SYS      $B4D            ; System call to B4D
$94E    $37BB   SE       V7, #BB         ; Skip if V7 == 187
$950    $F9A2   UNKNOWN  F9A2            ; Unknown Fxxx instruction
$952    $561F   UNKNOWN  $561F           ; Unknown 5xxx instruction
$954    $1C90   JP       $C90            ; Jump to C90
$956    $6300   LD       V3, #00         ; Load 0 into V3
$958    $A899   LD       I, $899         ; Load 899 into I
$95A    $4B01   SNE      VB, #01         ; Skip if VB != 1
$95C    $A08F   LD       I, $08F         ; Load 08F into I
$95E    $068A   SYS      $68A            ; System call to 68A
$960    $7797   ADD      V7, #97         ; Add 151 to V7
$962    $8CAD   UNKNOWN  8CAD            ; Unknown 8xxx instruction
$964    $F505   UNKNOWN  F505            ; Unknown Fxxx instruction
$966    $5554   UNKNOWN  $5554           ; Unknown 5xxx instruction
$968    $96D3   UNKNOWN  $96D3           ; Unknown 9xxx instruction
$96A    $D723   DRW      V7, V2, #3      ; Draw 3-byte sprite at V7, V2
$96C    $7240   ADD      V2, #40         ; Add 64 to V2
$96E    $2101   CALL     $101            ; Call subroutine at 101
$970    $7B36   ADD      VB, #36         ; Add 54 to VB
$972    $2E7A   CALL     $E7A            ; Call subroutine at E7A
$974    $E4B5   UNKNOWN  $E4B5           ; Unknown Exxx instruction
$976    $4557   SNE      V5, #57         ; Skip if V5 != 87
$978    $DE19   DRW      VE, V1, #9      ; Draw 9-byte sprite at VE, V1
$97A    $1AF0   JP       $AF0            ; Jump to AF0
$97C    $BFD6   JP       V0, $FD6        ; Jump to V0 + FD6
$97E    $2524   CALL     $524            ; Call subroutine at 524
$980    $701D   ADD      V0, #1D         ; Add 29 to V0
$982    $3519   SE       V5, #19         ; Skip if V5 == 25
$984    $17B7   JP       $7B7            ; Jump to 7B7
$986    $E820   UNKNOWN  $E820           ; Unknown Exxx instruction
$988    $9335   UNKNOWN  $9335           ; Unknown 9xxx instruction
$98A    $4F68   SNE      VF, #68         ; Skip if VF != 104
$98C    $0D6A   SYS      $D6A            ; System call to D6A
$98E    $CCBF   RND      VC, #BF         ; VC = random & BF
$990    $7E3B   ADD      VE, #3B         ; Add 59 to VE
$992    $9A66   UNKNOWN  $9A66           ; Unknown 9xxx instruction
$994    $D2B0   DRW      V2, VB, #0      ; Draw 0-byte sprite at V2, VB
$996    $9764   UNKNOWN  $9764           ; Unknown 9xxx instruction
$998    $2FEB   CALL     $FEB            ; Call subroutine at FEB
$99A    $EE8B   UNKNOWN  $EE8B           ; Unknown Exxx instruction
$99C    $4B33   SNE      VB, #33         ; Skip if VB != 51
$99E    $4DFB   SNE      VD, #FB         ; Skip if VD != 251
$9A0    $FA96   UNKNOWN  FA96            ; Unknown Fxxx instruction
$9A2    $6355   LD       V3, #55         ; Load 85 into V3
$9A4    $5031   UNKNOWN  $5031           ; Unknown 5xxx instruction
$9A6    $371E   SE       V7, #1E         ; Skip if V7 == 30
$9A8    $DFEF   DRW      VF, VE, #F      ; Draw 15-byte sprite at VF, VE
$9AA    $FAD3   UNKNOWN  FAD3            ; Unknown Fxxx instruction
$9AC    $4AC4   SNE      VA, #C4         ; Skip if VA != 196
$9AE    $B876   JP       V0, $876        ; Jump to V0 + 876
$9B0    $98D7   UNKNOWN  $98D7           ; Unknown 9xxx instruction
$9B2    $7F45   ADD      VF, #45         ; Add 69 to VF
$9B4    $0043   SYS      $043            ; System call to 043
$9B6    $F019   UNKNOWN  F019            ; Unknown Fxxx instruction
$9B8    $1CB5   JP       $CB5            ; Jump to CB5
$9BA    $DE72   DRW      VE, V7, #2      ; Draw 2-byte sprite at VE, V7
$9BC    $ED35   UNKNOWN  $ED35           ; Unknown Exxx instruction
$9BE    $2EA5   CALL     $EA5            ; Call subroutine at EA5
$9C0    $4141   SNE      V1, #41         ; Skip if V1 != 65
$9C2    $B07F   JP       V0, $07F        ; Jump to V0 + 07F
$9C4    $91EA   UNKNOWN  $91EA           ; Unknown 9xxx instruction
$9C6    $36B3   SE       V6, #B3         ; Skip if V6 == 179
$9C8    $64FD   LD       V4, #FD         ; Load 253 into V4
$9CA    $BC3A   JP       V0, $C3A        ; Jump to V0 + C3A
$9CC    $258F   CALL     $58F            ; Call subroutine at 58F
$9CE    $22FD   CALL     $2FD            ; Call subroutine at 2FD
$9D0    $DF7D   DRW      VF, V7, #D      ; Draw 13-byte sprite at VF, V7
$9D2    $DC73   DRW      VC, V7, #3      ; Draw 3-byte sprite at VC, V7
$9D4    $F65F   UNKNOWN  F65F            ; Unknown Fxxx instruction
$9D6    $B6D6   JP       V0, $6D6        ; Jump to V0 + 6D6
$9D8    $3866   SE       V8, #66         ; Skip if V8 == 102
$9DA    $339D   SE       V3, #9D         ; Skip if V3 == 157
$9DC    $A002   LD       I, $002         ; Load 002 into I
$9DE    $BB69   JP       V0, $B69        ; Jump to V0 + B69
$9E0    $03D4   SYS      $3D4            ; System call to 3D4
$9E2    $BF7C   JP       V0, $F7C        ; Jump to V0 + F7C
$9E4    $747F   ADD      V4, #7F         ; Add 127 to V4
$9E6    $0032   SYS      $032            ; System call to 032
$9E8    $3FEC   SE       VF, #EC         ; Skip if VF == 236
$9EA    $24EF   CALL     $4EF            ; Call subroutine at 4EF
$9EC    $4A21   SNE      VA, #21         ; Skip if VA != 33
$9EE    $7572   ADD      V5, #72         ; Add 114 to V5
$9F0    $BC59   JP       V0, $C59        ; Jump to V0 + C59
$9F2    $D627   DRW      V6, V2, #7      ; Draw 7-byte sprite at V6, V2
$9F4    $36C2   SE       V6, #C2         ; Skip if V6 == 194
$9F6    $65DB   LD       V5, #DB         ; Load 219 into V5
$9F8    $9949   UNKNOWN  $9949           ; Unknown 9xxx instruction
$9FA    $7A1C   ADD      VA, #1C         ; Add 28 to VA
$9FC    $D617   DRW      V6, V1, #7      ; Draw 7-byte sprite at V6, V1
$9FE    $4FB0   SNE      VF, #B0         ; Skip if VF != 176
$A00    $549D   UNKNOWN  $549D           ; Unknown 5xxx instruction
$A02    $08D3   SYS      $8D3            ; System call to 8D3
$A04    $9DDE   UNKNOWN  $9DDE           ; Unknown 9xxx instruction
$A06    $B6BE   JP       V0, $6BE        ; Jump to V0 + 6BE
$A08    $46CE   SNE      V6, #CE         ; Skip if V6 != 206
$A0A    $8D00   LD       VD, V0          ; VD = V0
$A0C    $E8DB   UNKNOWN  $E8DB           ; Unknown Exxx instruction
$A0E    $0139   SYS      $139            ; System call to 139
$A10    $6B2A   LD       VB, #2A         ; Load 42 into VB
$A12    $0B4D   SYS      $B4D            ; System call to B4D
$A14    $6A1F   LD       VA, #1F         ; Load 31 into VA
$A16    $C33F   RND      V3, #3F         ; V3 = random & 3F
$A18    $5B0F   UNKNOWN  $5B0F           ; Unknown 5xxx instruction
$A1A    $7EBB   ADD      VE, #BB         ; Add 187 to VE
$A1C    $561B   UNKNOWN  $561B           ; Unknown 5xxx instruction
$A1E    $8F2D   UNKNOWN  8F2D            ; Unknown 8xxx instruction
$A20    $3D4C   SE       VD, #4C         ; Skip if VD == 76
$A22    $7833   ADD      V8, #33         ; Add 51 to V8
$A24    $6BB6   LD       VB, #B6         ; Load 182 into VB
$A26    $AE50   LD       I, $E50         ; Load E50 into I
$A28    $2566   CALL     $566            ; Call subroutine at 566
$A2A    $7237   ADD      V2, #37         ; Add 55 to V2
$A2C    $5523   UNKNOWN  $5523           ; Unknown 5xxx instruction
$A2E    $C239   RND      V2, #39         ; V2 = random & 39
$A30    $8A04   ADD      VA, V0          ; VA += V0, VF = carry
$A32    $87A8   UNKNOWN  87A8            ; Unknown 8xxx instruction
$A34    $4572   SNE      V5, #72         ; Skip if V5 != 114
$A36    $E382   UNKNOWN  $E382           ; Unknown Exxx instruction
$A38    $378B   SE       V7, #8B         ; Skip if V7 == 139
$A3A    $16BD   JP       $6BD            ; Jump to 6BD
$A3C    $75AC   ADD      V5, #AC         ; Add 172 to V5
$A3E    $4F4F   SNE      VF, #4F         ; Skip if VF != 79
$A40    $11DC   JP       $1DC            ; Jump to 1DC
$A42    $1275   JP       $275            ; Jump to 275
$A44    $9F18   UNKNOWN  $9F18           ; Unknown 9xxx instruction
$A46    $D754   DRW      V7, V5, #4      ; Draw 4-byte sprite at V7, V5
$A48    $3A28   SE       VA, #28         ; Skip if VA == 40
$A4A    $3238   SE       V2, #38         ; Skip if V2 == 56
$A4C    $023D   SYS      $23D            ; System call to 23D
$A4E    $E08F   UNKNOWN  $E08F           ; Unknown Exxx instruction
$A50    $2D5C   CALL     $D5C            ; Call subroutine at D5C
$A52    $192A   JP       $92A            ; Jump to 92A
$A54    $CD4F   RND      VD, #4F         ; VD = random & 4F
$A56    $3F91   SE       VF, #91         ; Skip if VF == 145
$A58    $EE0A   UNKNOWN  $EE0A           ; Unknown Exxx instruction
$A5A    $A6AC   LD       I, $6AC         ; Load 6AC into I
$A5C    $2A38   CALL     $A38            ; Call subroutine at A38
$A5E    $9667   UNKNOWN  $9667           ; Unknown 9xxx instruction
$A60    $64DE   LD       V4, #DE         ; Load 222 into V4
$A62    $650A   LD       V5, #0A         ; Load 10 into V5
$A64    $E0E6   UNKNOWN  $E0E6           ; Unknown Exxx instruction
$A66    $A92F   LD       I, $92F         ; Load 92F into I
$A68    $DB80   DRW      VB, V8, #0      ; Draw 0-byte sprite at VB, V8
$A6A    $22A8   CALL     $2A8            ; Call subroutine at 2A8
$A6C    $D3EC   DRW      V3, VE, #C      ; Draw 12-byte sprite at V3, VE
$A6E    $C0CF   RND      V0, #CF         ; V0 = random & CF
$A70    $3DD8   SE       VD, #D8         ; Skip if VD == 216
$A72    $6E6B   LD       VE, #6B         ; Load 107 into VE
$A74    $E29B   UNKNOWN  $E29B           ; Unknown Exxx instruction
$A76    $65AB   LD       V5, #AB         ; Load 171 into V5
$A78    $A7AD   LD       I, $7AD         ; Load 7AD into I
$A7A    $D702   DRW      V7, V0, #2      ; Draw 2-byte sprite at V7, V0
$A7C    $4B03   SNE      VB, #03         ; Skip if VB != 3
$A7E    $92F6   UNKNOWN  $92F6           ; Unknown 9xxx instruction
$A80    $A413   LD       I, $413         ; Load 413 into I
$A82    $5D8C   UNKNOWN  $5D8C           ; Unknown 5xxx instruction
$A84    $219D   CALL     $19D            ; Call subroutine at 19D
$A86    $C546   RND      V5, #46         ; V5 = random & 46
$A88    $32EE   SE       V2, #EE         ; Skip if V2 == 238
$A8A    $7C7E   ADD      VC, #7E         ; Add 126 to VC
$A8C    $439C   SNE      V3, #9C         ; Skip if V3 != 156
$A8E    $267C   CALL     $67C            ; Call subroutine at 67C
$A90    $DD41   DRW      VD, V4, #1      ; Draw 1-byte sprite at VD, V4
$A92    $767E   ADD      V6, #7E         ; Add 126 to V6
$A94    $1C29   JP       $C29            ; Jump to C29
$A96    $FAB1   UNKNOWN  FAB1            ; Unknown Fxxx instruction
$A98    $C8DA   RND      V8, #DA         ; V8 = random & DA
$A9A    $B282   JP       V0, $282        ; Jump to V0 + 282
$A9C    $1BD7   JP       $BD7            ; Jump to BD7
$A9E    $2082   CALL     $082            ; Call subroutine at 082
$AA0    $EFA1   SKNP     VF              ; Skip if key VF not pressed
$AA2    $FD4E   UNKNOWN  FD4E            ; Unknown Fxxx instruction
$AA4    $9FA8   UNKNOWN  $9FA8           ; Unknown 9xxx instruction
$AA6    $F8C6   UNKNOWN  F8C6            ; Unknown Fxxx instruction
$AA8    $A6FE   LD       I, $6FE         ; Load 6FE into I
$AAA    $B138   JP       V0, $138        ; Jump to V0 + 138
$AAC    $2255   CALL     $255            ; Call subroutine at 255
$AAE    $B386   JP       V0, $386        ; Jump to V0 + 386
$AB0    $9905   UNKNOWN  $9905           ; Unknown 9xxx instruction
$AB2    $AD14   LD       I, $D14         ; Load D14 into I
$AB4    $419D   SNE      V1, #9D         ; Skip if V1 != 157
$AB6    $5DEC   UNKNOWN  $5DEC           ; Unknown 5xxx instruction
$AB8    $794A   ADD      V9, #4A         ; Add 74 to V9
$ABA    $0345   SYS      $345            ; System call to 345
$ABC    $EC80   UNKNOWN  $EC80           ; Unknown Exxx instruction
$ABE    $235E   CALL     $35E            ; Call subroutine at 35E
$AC0    $B842   JP       V0, $842        ; Jump to V0 + 842
$AC2    $46CF   SNE      V6, #CF         ; Skip if V6 != 207
$AC4    $8255   SUB      V2, V5          ; V2 -= V5, VF = !borrow
$AC6    $DE7A   DRW      VE, V7, #A      ; Draw 10-byte sprite at VE, V7
$AC8    $7E6E   ADD      VE, #6E         ; Add 110 to VE
$ACA    $2021   CALL     $021            ; Call subroutine at 021
$ACC    $87DD   UNKNOWN  87DD            ; Unknown 8xxx instruction
$ACE    $5700   SE       V7, V0          ; Skip if V7 == V0
$AD0    $A989   LD       I, $989         ; Load 989 into I
$AD2    $A1BC   LD       I, $1BC         ; Load 1BC into I
$AD4    $4334   SNE      V3, #34         ; Skip if V3 != 52
$AD6    $D003   DRW      V0, V0, #3      ; Draw 3-byte sprite at V0, V0
$AD8    $EC1E   UNKNOWN  $EC1E           ; Unknown Exxx instruction
$ADA    $5051   UNKNOWN  $5051           ; Unknown 5xxx instruction
$ADC    $3C90   SE       VC, #90         ; Skip if VC == 144
$ADE    $532C   UNKNOWN  $532C           ; Unknown 5xxx instruction
$AE0    $4680   SNE      V6, #80         ; Skip if V6 != 128
$AE2    $491E   SNE      V9, #1E         ; Skip if V9 != 30
$AE4    $56A5   UNKNOWN  $56A5           ; Unknown 5xxx instruction
$AE6    $2DE1   CALL     $DE1            ; Call subroutine at DE1
$AE8    $A8D5   LD       I, $8D5         ; Load 8D5 into I
$AEA    $7744   ADD      V7, #44         ; Add 68 to V7
$AEC    $BC88   JP       V0, $C88        ; Jump to V0 + C88
$AEE    $7D79   ADD      VD, #79         ; Add 121 to VD
$AF0    $18E4   JP       $8E4            ; Jump to 8E4
$AF2    $47EE   SNE      V7, #EE         ; Skip if V7 != 238
$AF4    $3B4B   SE       VB, #4B         ; Skip if VB == 75
$AF6    $6746   LD       V7, #46         ; Load 70 into V7
$AF8    $399A   SE       V9, #9A         ; Skip if V9 == 154
$AFA    $0245   SYS      $245            ; System call to 245
$AFC    $A589   LD       I, $589         ; Load 589 into I
$AFE    $6D20   LD       VD, #20         ; Load 32 into VD
$B00    $1DB0   JP       $DB0            ; Jump to DB0
$B02    $A7DC   LD       I, $7DC         ; Load 7DC into I
$B04    $E76F   UNKNOWN  $E76F           ; Unknown Exxx instruction
$B06    $9AB0   SNE      VA, VB          ; Skip if VA != VB
$B08    $F0B2   UNKNOWN  F0B2            ; Unknown Fxxx instruction
$B0A    $CD7B   RND      VD, #7B         ; VD = random & 7B
$B0C    $5174   UNKNOWN  $5174           ; Unknown 5xxx instruction
$B0E    $4A89   SNE      VA, #89         ; Skip if VA != 137
$B10    $362C   SE       V6, #2C         ; Skip if V6 == 44
$B12    $A79E   LD       I, $79E         ; Load 79E into I
$B14    $0139   SYS      $139            ; System call to 139
$B16    $F21F   UNKNOWN  F21F            ; Unknown Fxxx instruction
$B18    $D4BD   DRW      V4, VB, #D      ; Draw 13-byte sprite at V4, VB
$B1A    $2E2C   CALL     $E2C            ; Call subroutine at E2C
$B1C    $ED97   UNKNOWN  $ED97           ; Unknown Exxx instruction
$B1E    $0C41   SYS      $C41            ; System call to C41
$B20    $521F   UNKNOWN  $521F           ; Unknown 5xxx instruction
$B22    $DE9A   DRW      VE, V9, #A      ; Draw 10-byte sprite at VE, V9
$B24    $EE51   UNKNOWN  $EE51           ; Unknown Exxx instruction
$B26    $C39B   RND      V3, #9B         ; V3 = random & 9B
$B28    $7BD1   ADD      VB, #D1         ; Add 209 to VB
$B2A    $4773   SNE      V7, #73         ; Skip if V7 != 115
$B2C    $AD8C   LD       I, $D8C         ; Load D8C into I
$B2E    $FD18   LD       ST, VD          ; Sound timer = VD
$B30    $C375   RND      V3, #75         ; V3 = random & 75
$B32    $CFC9   RND      VF, #C9         ; VF = random & C9
$B34    $A232   LD       I, $232         ; Load 232 into I
$B36    $4043   SNE      V0, #43         ; Skip if V0 != 67
$B38    $D50A   DRW      V5, V0, #A      ; Draw 10-byte sprite at V5, V0
$B3A    $BE39   JP       V0, $E39        ; Jump to V0 + E39
$B3C    $CF40   RND      VF, #40         ; VF = random & 40
$B3E    $F587   UNKNOWN  F587            ; Unknown Fxxx instruction
$B40    $A3F6   LD       I, $3F6         ; Load 3F6 into I
$B42    $B439   JP       V0, $439        ; Jump to V0 + 439
$B44    $C2C3   RND      V2, #C3         ; V2 = random & C3
$B46    $F36F   UNKNOWN  F36F            ; Unknown Fxxx instruction
$B48    $29C3   CALL     $9C3            ; Call subroutine at 9C3
$B4A    $5281   UNKNOWN  $5281           ; Unknown 5xxx instruction
$B4C    $7682   ADD      V6, #82         ; Add 130 to V6
$B4E    $9407   UNKNOWN  $9407           ; Unknown 9xxx instruction
$B50    $3144   SE       V1, #44         ; Skip if V1 == 68
$B52    $793D   ADD      V9, #3D         ; Add 61 to V9
$B54    $66B8   LD       V6, #B8         ; Load 184 into V6
$B56    $CA82   RND      VA, #82         ; VA = random & 82
$B58    $B7BE   JP       V0, $7BE        ; Jump to V0 + 7BE
$B5A    $CCDB   RND      VC, #DB         ; VC = random & DB
$B5C    $5EFE   UNKNOWN  $5EFE           ; Unknown 5xxx instruction
$B5E    $B094   JP       V0, $094        ; Jump to V0 + 094
$B60    $6AFB   LD       VA, #FB         ; Load 251 into VA
$B62    $7E5D   ADD      VE, #5D         ; Add 93 to VE
$B64    $77D9   ADD      V7, #D9         ; Add 217 to V7
$B66    $F13C   UNKNOWN  F13C            ; Unknown Fxxx instruction
$B68    $9376   UNKNOWN  $9376           ; Unknown 9xxx instruction
$B6A    $5F2E   UNKNOWN  $5F2E           ; Unknown 5xxx instruction
$B6C    $39D3   SE       V9, #D3         ; Skip if V9 == 211
$B6E    $1650   JP       $650            ; Jump to 650
$B70    $CB86   RND      VB, #86         ; VB = random & 86
$B72    $C260   RND      V2, #60         ; V2 = random & 60
$B74    $8F3E   SHL      VF              ; VF <<= 1, VF = MSB
$B76    $9BCD   UNKNOWN  $9BCD           ; Unknown 9xxx instruction
$B78    $BF8D   JP       V0, $F8D        ; Jump to V0 + F8D
$B7A    $F809   UNKNOWN  F809            ; Unknown Fxxx instruction
$B7C    $4922   SNE      V9, #22         ; Skip if V9 != 34
$B7E    $A023   LD       I, $023         ; Load 023 into I
$B80    $0E5F   SYS      $E5F            ; System call to E5F
$B82    $B553   JP       V0, $553        ; Jump to V0 + 553
$B84    $C20C   RND      V2, #0C         ; V2 = random & 0C
$B86    $F048   UNKNOWN  F048            ; Unknown Fxxx instruction
$B88    $428D   SNE      V2, #8D         ; Skip if V2 != 141
$B8A    $4E3D   SNE      VE, #3D         ; Skip if VE != 61
$B8C    $5147   UNKNOWN  $5147           ; Unknown 5xxx instruction
$B8E    $0912   SYS      $912            ; System call to 912
$B90    $D83C   DRW      V8, V3, #C      ; Draw 12-byte sprite at V8, V3
$B92    $9330   SNE      V3, V3          ; Skip if V3 != V3
$B94    $DD04   DRW      VD, V0, #4      ; Draw 4-byte sprite at VD, V0
$B96    $C4FC   RND      V4, #FC         ; V4 = random & FC
$B98    $05A3   SYS      $5A3            ; System call to 5A3
$B9A    $0FCB   SYS      $FCB            ; System call to FCB
$B9C    $F28C   UNKNOWN  F28C            ; Unknown Fxxx instruction
$B9E    $1F37   JP       $F37            ; Jump to F37
$BA0    $9234   UNKNOWN  $9234           ; Unknown 9xxx instruction
$BA2    $D769   DRW      V7, V6, #9      ; Draw 9-byte sprite at V7, V6
$BA4    $42C0   SNE      V2, #C0         ; Skip if V2 != 192
$BA6    $63DF   LD       V3, #DF         ; Load 223 into V3
$BA8    $6B7B   LD       VB, #7B         ; Load 123 into VB
$BAA    $80AB   UNKNOWN  80AB            ; Unknown 8xxx instruction
$BAC    $5B62   UNKNOWN  $5B62           ; Unknown 5xxx instruction
$BAE    $B16C   JP       V0, $16C        ; Jump to V0 + 16C
$BB0    $637D   LD       V3, #7D         ; Load 125 into V3
$BB2    $3078   SE       V0, #78         ; Skip if V0 == 120
$BB4    $4187   SNE      V1, #87         ; Skip if V1 != 135
$BB6    $5E64   UNKNOWN  $5E64           ; Unknown 5xxx instruction
$BB8    $FF1D   UNKNOWN  FF1D            ; Unknown Fxxx instruction
$BBA    $75BE   ADD      V5, #BE         ; Add 190 to V5
$BBC    $EF91   UNKNOWN  $EF91           ; Unknown Exxx instruction
$BBE    $ACD4   LD       I, $CD4         ; Load CD4 into I
$BC0    $E066   UNKNOWN  $E066           ; Unknown Exxx instruction
$BC2    $9E9C   UNKNOWN  $9E9C           ; Unknown 9xxx instruction
$BC4    $726A   ADD      V2, #6A         ; Add 106 to V2
$BC6    $A205   LD       I, $205         ; Load 205 into I
$BC8    $3B53   SE       VB, #53         ; Skip if VB == 83
$BCA    $616C   LD       V1, #6C         ; Load 108 into V1
$BCC    $E024   UNKNOWN  $E024           ; Unknown Exxx instruction
$BCE    $96F2   UNKNOWN  $96F2           ; Unknown 9xxx instruction
$BD0    $824E   SHL      V2              ; V2 <<= 1, VF = MSB
$BD2    $389A   SE       V8, #9A         ; Skip if V8 == 154
$BD4    $8BFF   UNKNOWN  8BFF            ; Unknown 8xxx instruction
$BD6    $AD44   LD       I, $D44         ; Load D44 into I
$BD8    $76DD   ADD      V6, #DD         ; Add 221 to V6
$BDA    $C27B   RND      V2, #7B         ; V2 = random & 7B
$BDC    $4F7A   SNE      VF, #7A         ; Skip if VF != 122
$BDE    $1AA4   JP       $AA4            ; Jump to AA4
$BE0    $CC50   RND      VC, #50         ; VC = random & 50
$BE2    $4B8A   SNE      VB, #8A         ; Skip if VB != 138
$BE4    $A6DF   LD       I, $6DF         ; Load 6DF into I
$BE6    $3596   SE       V5, #96         ; Skip if V5 == 150
$BE8    $535C   UNKNOWN  $535C           ; Unknown 5xxx instruction
$BEA    $0C8E   SYS      $C8E            ; System call to C8E
$BEC    $E4A6   UNKNOWN  $E4A6           ; Unknown Exxx instruction
$BEE    $205C   CALL     $05C            ; Call subroutine at 05C
$BF0    $42BA   SNE      V2, #BA         ; Skip if V2 != 186
$BF2    $8461   OR       V4, V6          ; V4 |= V6
$BF4    $69C3   LD       V9, #C3         ; Load 195 into V9
$BF6    $91C1   UNKNOWN  $91C1           ; Unknown 9xxx instruction
$BF8    $E98A   UNKNOWN  $E98A           ; Unknown Exxx instruction
$BFA    $480A   SNE      V8, #0A         ; Skip if V8 != 10
$BFC    $C811   RND      V8, #11         ; V8 = random & 11
$BFE    $CF55   RND      VF, #55         ; VF = random & 55
$C00    $B1DB   JP       V0, $1DB        ; Jump to V0 + 1DB
$C02    $31D5   SE       V1, #D5         ; Skip if V1 == 213
$C04    $24C4   CALL     $4C4            ; Call subroutine at 4C4
$C06    $006F   SYS      $06F            ; System call to 06F
$C08    $8C96   SHR      VC              ; VC >>= 1, VF = LSB
$C0A    $48CC   SNE      V8, #CC         ; Skip if V8 != 204
$C0C    $2E1C   CALL     $E1C            ; Call subroutine at E1C
$C0E    $B0F2   JP       V0, $0F2        ; Jump to V0 + 0F2
$C10    $37D7   SE       V7, #D7         ; Skip if V7 == 215
$C12    $2B7F   CALL     $B7F            ; Call subroutine at B7F
$C14    $F800   UNKNOWN  F800            ; Unknown Fxxx instruction
$C16    $4658   SNE      V6, #58         ; Skip if V6 != 88
$C18    $4405   SNE      V4, #05         ; Skip if V4 != 5
$C1A    $F5BE   UNKNOWN  F5BE            ; Unknown Fxxx instruction
$C1C    $C066   RND      V0, #66         ; V0 = random & 66
$C1E    $6E34   LD       VE, #34         ; Load 52 into VE
$C20    $6F80   LD       VF, #80         ; Load 128 into VF
$C22    $C94F   RND      V9, #4F         ; V9 = random & 4F
$C24    $2F04   CALL     $F04            ; Call subroutine at F04
$C26    $4B3A   SNE      VB, #3A         ; Skip if VB != 58
$C28    $280A   CALL     $80A            ; Call subroutine at 80A
$C2A    $01C9   SYS      $1C9            ; System call to 1C9
$C2C    $47BD   SNE      V7, #BD         ; Skip if V7 != 189
$C2E    $ECEB   UNKNOWN  $ECEB           ; Unknown Exxx instruction
$C30    $D61F   DRW      V6, V1, #F      ; Draw 15-byte sprite at V6, V1
$C32    $BCB8   JP       V0, $CB8        ; Jump to V0 + CB8
$C34    $6BE5   LD       VB, #E5         ; Load 229 into VB
$C36    $C8E2   RND      V8, #E2         ; V8 = random & E2
$C38    $7B6A   ADD      VB, #6A         ; Add 106 to VB
$C3A    $E18D   UNKNOWN  $E18D           ; Unknown Exxx instruction
$C3C    $2B08   CALL     $B08            ; Call subroutine at B08
$C3E    $CEEE   RND      VE, #EE         ; VE = random & EE
$C40    $CCBB   RND      VC, #BB         ; VC = random & BB
$C42    $796E   ADD      V9, #6E         ; Add 110 to V9
$C44    $C206   RND      V2, #06         ; V2 = random & 06
$C46    $EDA7   UNKNOWN  $EDA7           ; Unknown Exxx instruction
$C48    $6A36   LD       VA, #36         ; Load 54 into VA
$C4A    $0941   SYS      $941            ; System call to 941
$C4C    $4E8D   SNE      VE, #8D         ; Skip if VE != 141
$C4E    $3913   SE       V9, #13         ; Skip if V9 == 19
$C50    $5BE4   UNKNOWN  $5BE4           ; Unknown 5xxx instruction
$C52    $8041   OR       V0, V4          ; V0 |= V4
$C54    $930E   UNKNOWN  $930E           ; Unknown 9xxx instruction
$C56    $8558   UNKNOWN  8558            ; Unknown 8xxx instruction
$C58    $2BEC   CALL     $BEC            ; Call subroutine at BEC
$C5A    $001C   SYS      $01C            ; System call to 01C
$C5C    $A0FB   LD       I, $0FB         ; Load 0FB into I
$C5E    $60AA   LD       V0, #AA         ; Load 170 into V0
$C60    $ECE1   UNKNOWN  $ECE1           ; Unknown Exxx instruction
$C62    $EDAF   UNKNOWN  $EDAF           ; Unknown Exxx instruction
$C64    $0DFB   SYS      $DFB            ; System call to DFB
$C66    $702F   ADD      V0, #2F         ; Add 47 to V0
$C68    $CDA2   RND      VD, #A2         ; VD = random & A2
$C6A    $A3D2   LD       I, $3D2         ; Load 3D2 into I
$C6C    $773D   ADD      V7, #3D         ; Add 61 to V7
$C6E    $7B2F   ADD      VB, #2F         ; Add 47 to VB
$C70    $096E   SYS      $96E            ; System call to 96E
$C72    $B9F9   JP       V0, $9F9        ; Jump to V0 + 9F9
$C74    $0569   SYS      $569            ; System call to 569
$C76    $A06B   LD       I, $06B         ; Load 06B into I
$C78    $5311   UNKNOWN  $5311           ; Unknown 5xxx instruction
$C7A    $25B1   CALL     $5B1            ; Call subroutine at 5B1
$C7C    $0008   SYS      $008            ; System call to 008
$C7E    $C064   RND      V0, #64         ; V0 = random & 64
$C80    $C99F   RND      V9, #9F         ; V9 = random & 9F
$C82    $F158   UNKNOWN  F158            ; Unknown Fxxx instruction
$C84    $FA37   UNKNOWN  FA37            ; Unknown Fxxx instruction
$C86    $0437   SYS      $437            ; System call to 437
$C88    $63A2   LD       V3, #A2         ; Load 162 into V3
$C8A    $1A39   JP       $A39            ; Jump to A39
$C8C    $14B2   JP       $4B2            ; Jump to 4B2
$C8E    $F0F1   UNKNOWN  F0F1            ; Unknown Fxxx instruction
$C90    $455B   SNE      V5, #5B         ; Skip if V5 != 91
$C92    $E7D3   UNKNOWN  $E7D3           ; Unknown Exxx instruction
$C94    $F287   UNKNOWN  F287            ; Unknown Fxxx instruction
$C96    $3DD3   SE       VD, #D3         ; Skip if VD == 211
$C98    $1A23   JP       $A23            ; Jump to A23
$C9A    $F842   UNKNOWN  F842            ; Unknown Fxxx instruction
$C9C    $B431   JP       V0, $431        ; Jump to V0 + 431
$C9E    $AF94   LD       I, $F94         ; Load F94 into I
$CA0    $0A3F   SYS      $A3F            ; System call to A3F
$CA2    $3A91   SE       VA, #91         ; Skip if VA == 145
$CA4    $85F3   XOR      V5, VF          ; V5 ^= VF
$CA6    $3589   SE       V5, #89         ; Skip if V5 == 137
$CA8    $DDD5   DRW      VD, VD, #5      ; Draw 5-byte sprite at VD, VD
$CAA    $7691   ADD      V6, #91         ; Add 145 to V6
$CAC    $5A1D   UNKNOWN  $5A1D           ; Unknown 5xxx instruction
$CAE    $893C   UNKNOWN  893C            ; Unknown 8xxx instruction
$CB0    $B367   JP       V0, $367        ; Jump to V0 + 367
$CB2    $8F68   UNKNOWN  8F68            ; Unknown 8xxx instruction
$CB4    $8A1A   UNKNOWN  8A1A            ; Unknown 8xxx instruction
$CB6    $1E1E   JP       $E1E            ; Jump to E1E
$CB8    $C187   RND      V1, #87         ; V1 = random & 87
$CBA    $6E56   LD       VE, #56         ; Load 86 into VE
$CBC    $CCFE   RND      VC, #FE         ; VC = random & FE
$CBE    $0A63   SYS      $A63            ; System call to A63
$CC0    $DAF0   DRW      VA, VF, #0      ; Draw 0-byte sprite at VA, VF
$CC2    $33F9   SE       V3, #F9         ; Skip if V3 == 249
$CC4    $F582   UNKNOWN  F582            ; Unknown Fxxx instruction
$CC6    $E98F   UNKNOWN  $E98F           ; Unknown Exxx instruction
$CC8    $DEB7   DRW      VE, VB, #7      ; Draw 7-byte sprite at VE, VB
$CCA    $988D   UNKNOWN  $988D           ; Unknown 9xxx instruction
$CCC    $7420   ADD      V4, #20         ; Add 32 to V4
$CCE    $8EEC   UNKNOWN  8EEC            ; Unknown 8xxx instruction
$CD0    $F8B8   UNKNOWN  F8B8            ; Unknown Fxxx instruction
$CD2    $8F31   OR       VF, V3          ; VF |= V3
$CD4    $7F43   ADD      VF, #43         ; Add 67 to VF
$CD6    $0573   SYS      $573            ; System call to 573
$CD8    $89F8   UNKNOWN  89F8            ; Unknown 8xxx instruction
$CDA    $9375   UNKNOWN  $9375           ; Unknown 9xxx instruction
$CDC    $6FF2   LD       VF, #F2         ; Load 242 into VF
$CDE    $C498   RND      V4, #98         ; V4 = random & 98
$CE0    $7F9F   ADD      VF, #9F         ; Add 159 to VF
$CE2    $8DD8   UNKNOWN  8DD8            ; Unknown 8xxx instruction
$CE4    $CBF2   RND      VB, #F2         ; VB = random & F2
$CE6    $CA48   RND      VA, #48         ; VA = random & 48
$CE8    $6726   LD       V7, #26         ; Load 38 into V7
$CEA    $2996   CALL     $996            ; Call subroutine at 996
$CEC    $ECAE   UNKNOWN  $ECAE           ; Unknown Exxx instruction
$CEE    $6E9C   LD       VE, #9C         ; Load 156 into VE
$CF0    $6216   LD       V2, #16         ; Load 22 into V2
$CF2    $0B5E   SYS      $B5E            ; System call to B5E
$CF4    $08E9   SYS      $8E9            ; System call to 8E9
$CF6    $2175   CALL     $175            ; Call subroutine at 175
$CF8    $7A1C   ADD      VA, #1C         ; Add 28 to VA
$CFA    $DD81   DRW      VD, V8, #1      ; Draw 1-byte sprite at VD, V8
$CFC    $8781   OR       V7, V8          ; V7 |= V8
$CFE    $8A55   SUB      VA, V5          ; VA -= V5, VF = !borrow
$D00    $8798   UNKNOWN  8798            ; Unknown 8xxx instruction
$D02    $09A5   SYS      $9A5            ; System call to 9A5
$D04    $A8DB   LD       I, $8DB         ; Load 8DB into I
$D06    $8903   XOR      V9, V0          ; V9 ^= V0
$D08    $F4DF   UNKNOWN  F4DF            ; Unknown Fxxx instruction
$D0A    $565E   UNKNOWN  $565E           ; Unknown 5xxx instruction
$D0C    $3B71   SE       VB, #71         ; Skip if VB == 113
$D0E    $7272   ADD      V2, #72         ; Add 114 to V2
$D10    $9853   UNKNOWN  $9853           ; Unknown 9xxx instruction
$D12    $C96D   RND      V9, #6D         ; V9 = random & 6D
$D14    $B9A9   JP       V0, $9A9        ; Jump to V0 + 9A9
$D16    $A675   LD       I, $675         ; Load 675 into I
$D18    $0D98   SYS      $D98            ; System call to D98
$D1A    $D634   DRW      V6, V3, #4      ; Draw 4-byte sprite at V6, V3
$D1C    $E619   UNKNOWN  $E619           ; Unknown Exxx instruction
$D1E    $54DA   UNKNOWN  $54DA           ; Unknown 5xxx instruction
$D20    $5364   UNKNOWN  $5364           ; Unknown 5xxx instruction
$D22    $198A   JP       $98A            ; Jump to 98A
$D24    $5AD6   UNKNOWN  $5AD6           ; Unknown 5xxx instruction
$D26    $EEC4   UNKNOWN  $EEC4           ; Unknown Exxx instruction
$D28    $FA1B   UNKNOWN  FA1B            ; Unknown Fxxx instruction
$D2A    $9D1F   UNKNOWN  $9D1F           ; Unknown 9xxx instruction
$D2C    $7C0C   ADD      VC, #0C         ; Add 12 to VC
$D2E    $962D   UNKNOWN  $962D           ; Unknown 9xxx instruction
$D30    $B87A   JP       V0, $87A        ; Jump to V0 + 87A
$D32    $6BBF   LD       VB, #BF         ; Load 191 into VB
$D34    $8E62   AND      VE, V6          ; VE &= V6
$D36    $36A5   SE       V6, #A5         ; Skip if V6 == 165
$D38    $D329   DRW      V3, V2, #9      ; Draw 9-byte sprite at V3, V2
$D3A    $3C42   SE       VC, #42         ; Skip if VC == 66
$D3C    $EEB5   UNKNOWN  $EEB5           ; Unknown Exxx instruction
$D3E    $E8E0   UNKNOWN  $E8E0           ; Unknown Exxx instruction
$D40    $1FE4   JP       $FE4            ; Jump to FE4
$D42    $EC3E   UNKNOWN  $EC3E           ; Unknown Exxx instruction
$D44    $0007   SYS      $007            ; System call to 007
$D46    $00E8   SYS      $0E8            ; System call to 0E8
$D48    $D0B3   DRW      V0, VB, #3      ; Draw 3-byte sprite at V0, VB
$D4A    $DB16   DRW      VB, V1, #6      ; Draw 6-byte sprite at VB, V1
$D4C    $71AD   ADD      V1, #AD         ; Add 173 to V1
$D4E    $C0F9   RND      V0, #F9         ; V0 = random & F9
$D50    $790A   ADD      V9, #0A         ; Add 10 to V9
$D52    $01A9   SYS      $1A9            ; System call to 1A9
$D54    $73FB   ADD      V3, #FB         ; Add 251 to V3
$D56    $0AA5   SYS      $AA5            ; System call to AA5
$D58    $F0B0   UNKNOWN  F0B0            ; Unknown Fxxx instruction
$D5A    $87BA   UNKNOWN  87BA            ; Unknown 8xxx instruction
$D5C    $D134   DRW      V1, V3, #4      ; Draw 4-byte sprite at V1, V3
$D5E    $6D16   LD       VD, #16         ; Load 22 into VD
$D60    $A4DD   LD       I, $4DD         ; Load 4DD into I
$D62    $77E6   ADD      V7, #E6         ; Add 230 to V7
$D64    $1D14   JP       $D14            ; Jump to D14
$D66    $31CB   SE       V1, #CB         ; Skip if V1 == 203
$D68    $CD9D   RND      VD, #9D         ; VD = random & 9D
$D6A    $9407   UNKNOWN  $9407           ; Unknown 9xxx instruction
$D6C    $0DAB   SYS      $DAB            ; System call to DAB
$D6E    $867C   UNKNOWN  867C            ; Unknown 8xxx instruction
$D70    $77BB   ADD      V7, #BB         ; Add 187 to V7
$D72    $DB00   DRW      VB, V0, #0      ; Draw 0-byte sprite at VB, V0
$D74    $AC07   LD       I, $C07         ; Load C07 into I
$D76    $118F   JP       $18F            ; Jump to 18F
$D78    $B47C   JP       V0, $47C        ; Jump to V0 + 47C
$D7A    $831B   UNKNOWN  831B            ; Unknown 8xxx instruction
$D7C    $4BD5   SNE      VB, #D5         ; Skip if VB != 213
$D7E    $1CA6   JP       $CA6            ; Jump to CA6
$D80    $DADE   DRW      VA, VD, #E      ; Draw 14-byte sprite at VA, VD
$D82    $2C76   CALL     $C76            ; Call subroutine at C76
$D84    $AE18   LD       I, $E18         ; Load E18 into I
$D86    $274C   CALL     $74C            ; Call subroutine at 74C
$D88    $A3F9   LD       I, $3F9         ; Load 3F9 into I
$D8A    $BAA9   JP       V0, $AA9        ; Jump to V0 + AA9
$D8C    $FA14   UNKNOWN  FA14            ; Unknown Fxxx instruction
$D8E    $D221   DRW      V2, V2, #1      ; Draw 1-byte sprite at V2, V2
$D90    $8A15   SUB      VA, V1          ; VA -= V1, VF = !borrow
$D92    $85F2   AND      V5, VF          ; V5 &= VF
$D94    $387A   SE       V8, #7A         ; Skip if V8 == 122
$D96    $2031   CALL     $031            ; Call subroutine at 031
$D98    $E0B5   UNKNOWN  $E0B5           ; Unknown Exxx instruction
$D9A    $3979   SE       V9, #79         ; Skip if V9 == 121
$D9C    $F2C2   UNKNOWN  F2C2            ; Unknown Fxxx instruction
$D9E    $DCDC   DRW      VC, VD, #C      ; Draw 12-byte sprite at VC, VD
$DA0    $E1E8   UNKNOWN  $E1E8           ; Unknown Exxx instruction
$DA2    $0719   SYS      $719            ; System call to 719
$DA4    $FDB7   UNKNOWN  FDB7            ; Unknown Fxxx instruction
$DA6    $9748   UNKNOWN  $9748           ; Unknown 9xxx instruction
$DA8    $2DBE   CALL     $DBE            ; Call subroutine at DBE
$DAA    $38FC   SE       V8, #FC         ; Skip if V8 == 252
$DAC    $310B   SE       V1, #0B         ; Skip if V1 == 11
$DAE    $B709   JP       V0, $709        ; Jump to V0 + 709
$DB0    $90D4   UNKNOWN  $90D4           ; Unknown 9xxx instruction
$DB2    $3610   SE       V6, #10         ; Skip if V6 == 16
$DB4    $9BA3   UNKNOWN  $9BA3           ; Unknown 9xxx instruction
$DB6    $302E   SE       V0, #2E         ; Skip if V0 == 46
$DB8    $9546   UNKNOWN  $9546           ; Unknown 9xxx instruction
$DBA    $0FA2   SYS      $FA2            ; System call to FA2
$DBC    $5879   UNKNOWN  $5879           ; Unknown 5xxx instruction
$DBE    $CC4A   RND      VC, #4A         ; VC = random & 4A
$DC0    $AC11   LD       I, $C11         ; Load C11 into I
$DC2    $5433   UNKNOWN  $5433           ; Unknown 5xxx instruction
$DC4    $F63D   UNKNOWN  F63D            ; Unknown Fxxx instruction
$DC6    $DA49   DRW      VA, V4, #9      ; Draw 9-byte sprite at VA, V4
$DC8    $1731   JP       $731            ; Jump to 731
$DCA    $00C2   SYS      $0C2            ; System call to 0C2
$DCC    $372F   SE       V7, #2F         ; Skip if V7 == 47
$DCE    $EC93   UNKNOWN  $EC93           ; Unknown Exxx instruction
$DD0    $6D5D   LD       VD, #5D         ; Load 93 into VD
$DD2    $0328   SYS      $328            ; System call to 328
$DD4    $1289   JP       $289            ; Jump to 289
$DD6    $B53F   JP       V0, $53F        ; Jump to V0 + 53F
$DD8    $3831   SE       V8, #31         ; Skip if V8 == 49
$DDA    $32EA   SE       V2, #EA         ; Skip if V2 == 234
$DDC    $7A81   ADD      VA, #81         ; Add 129 to VA
$DDE    $FCFA   UNKNOWN  FCFA            ; Unknown Fxxx instruction
$DE0    $1EEF   JP       $EEF            ; Jump to EEF
$DE2    $1F11   JP       $F11            ; Jump to F11
$DE4    $4DF0   SNE      VD, #F0         ; Skip if VD != 240
$DE6    $D61A   DRW      V6, V1, #A      ; Draw 10-byte sprite at V6, V1
$DE8    $0ADF   SYS      $ADF            ; System call to ADF
$DEA    $CD2E   RND      VD, #2E         ; VD = random & 2E
$DEC    $B741   JP       V0, $741        ; Jump to V0 + 741
$DEE    $F481   UNKNOWN  F481            ; Unknown Fxxx instruction
$DF0    $9239   UNKNOWN  $9239           ; Unknown 9xxx instruction
$DF2    $7DBB   ADD      VD, #BB         ; Add 187 to VD
$DF4    $D3B1   DRW      V3, VB, #1      ; Draw 1-byte sprite at V3, VB
$DF6    $CC80   RND      VC, #80         ; VC = random & 80
$DF8    $7CCD   ADD      VC, #CD         ; Add 205 to VC
$DFA    $7D11   ADD      VD, #11         ; Add 17 to VD
$DFC    $858A   UNKNOWN  858A            ; Unknown 8xxx instruction
$DFE    $9954   UNKNOWN  $9954           ; Unknown 9xxx instruction
$E00    $76AD   ADD      V6, #AD         ; Add 173 to V6
$E02    $5332   UNKNOWN  $5332           ; Unknown 5xxx instruction
$E04    $8DCC   UNKNOWN  8DCC            ; Unknown 8xxx instruction
$E06    $8FB1   OR       VF, VB          ; VF |= VB
$E08    $6F60   LD       VF, #60         ; Load 96 into VF
$E0A    $BF58   JP       V0, $F58        ; Jump to V0 + F58
$E0C    $EEBB   UNKNOWN  $EEBB           ; Unknown Exxx instruction
$E0E    $690F   LD       V9, #0F         ; Load 15 into V9
$E10    $68EF   LD       V8, #EF         ; Load 239 into V8
$E12    $DC1D   DRW      VC, V1, #D      ; Draw 13-byte sprite at VC, V1
$E14    $264B   CALL     $64B            ; Call subroutine at 64B
$E16    $B3BE   JP       V0, $3BE        ; Jump to V0 + 3BE
$E18    $CA3D   RND      VA, #3D         ; VA = random & 3D
$E1A    $8286   SHR      V2              ; V2 >>= 1, VF = LSB
$E1C    $2137   CALL     $137            ; Call subroutine at 137
$E1E    $9AC3   UNKNOWN  $9AC3           ; Unknown 9xxx instruction
$E20    $6DD8   LD       VD, #D8         ; Load 216 into VD
$E22    $6109   LD       V1, #09         ; Load 9 into V1
$E24    $A48D   LD       I, $48D         ; Load 48D into I
$E26    $3BDB   SE       VB, #DB         ; Skip if VB == 219
$E28    $D2DF   DRW      V2, VD, #F      ; Draw 15-byte sprite at V2, VD
$E2A    $DA85   DRW      VA, V8, #5      ; Draw 5-byte sprite at VA, V8
$E2C    $3E4B   SE       VE, #4B         ; Skip if VE == 75
$E2E    $7D95   ADD      VD, #95         ; Add 149 to VD
$E30    $CB81   RND      VB, #81         ; VB = random & 81
$E32    $9D4A   UNKNOWN  $9D4A           ; Unknown 9xxx instruction
$E34    $E894   UNKNOWN  $E894           ; Unknown Exxx instruction
$E36    $3271   SE       V2, #71         ; Skip if V2 == 113
$E38    $7AFF   ADD      VA, #FF         ; Add 255 to VA
$E3A    $F811   UNKNOWN  F811            ; Unknown Fxxx instruction
$E3C    $2C92   CALL     $C92            ; Call subroutine at C92
$E3E    $B859   JP       V0, $859        ; Jump to V0 + 859
$E40    $610F   LD       V1, #0F         ; Load 15 into V1
$E42    $E994   UNKNOWN  $E994           ; Unknown Exxx instruction
$E44    $7858   ADD      V8, #58         ; Add 88 to V8
$E46    $91A4   UNKNOWN  $91A4           ; Unknown 9xxx instruction
$E48    $65C9   LD       V5, #C9         ; Load 201 into V5
$E4A    $2680   CALL     $680            ; Call subroutine at 680
$E4C    $6420   LD       V4, #20         ; Load 32 into V4
$E4E    $FEB2   UNKNOWN  FEB2            ; Unknown Fxxx instruction
$E50    $31DB   SE       V1, #DB         ; Skip if V1 == 219
$E52    $C33E   RND      V3, #3E         ; V3 = random & 3E
$E54    $0686   SYS      $686            ; System call to 686
$E56    $E4C3   UNKNOWN  $E4C3           ; Unknown Exxx instruction
$E58    $AE99   LD       I, $E99         ; Load E99 into I
$E5A    $72D2   ADD      V2, #D2         ; Add 210 to V2
$E5C    $C921   RND      V9, #21         ; V9 = random & 21
$E5E    $0E96   SYS      $E96            ; System call to E96
$E60    $8443   XOR      V4, V4          ; V4 ^= V4
$E62    $013D   SYS      $13D            ; System call to 13D
$E64    $2875   CALL     $875            ; Call subroutine at 875
$E66    $3DFC   SE       VD, #FC         ; Skip if VD == 252
$E68    $6C59   LD       VC, #59         ; Load 89 into VC
$E6A    $3613   SE       V6, #13         ; Skip if V6 == 19
$E6C    $FECA   UNKNOWN  FECA            ; Unknown Fxxx instruction
$E6E    $7E34   ADD      VE, #34         ; Add 52 to VE
$E70    $5B02   UNKNOWN  $5B02           ; Unknown 5xxx instruction
$E72    $268D   CALL     $68D            ; Call subroutine at 68D
$E74    $696E   LD       V9, #6E         ; Load 110 into V9
$E76    $8C17   SUBN     VC, V1          ; VC = V1 - VC, VF = !borrow
$E78    $8430   LD       V4, V3          ; V4 = V3
$E7A    $D422   DRW      V4, V2, #2      ; Draw 2-byte sprite at V4, V2
$E7C    $3F7C   SE       VF, #7C         ; Skip if VF == 124
$E7E    $FE21   UNKNOWN  FE21            ; Unknown Fxxx instruction
$E80    $477B   SNE      V7, #7B         ; Skip if V7 != 123
$E82    $4969   SNE      V9, #69         ; Skip if V9 != 105
$E84    $E21F   UNKNOWN  $E21F           ; Unknown Exxx instruction
$E86    $515A   UNKNOWN  $515A           ; Unknown 5xxx instruction
$E88    $B87C   JP       V0, $87C        ; Jump to V0 + 87C
$E8A    $BE13   JP       V0, $E13        ; Jump to V0 + E13
$E8C    $57B9   UNKNOWN  $57B9           ; Unknown 5xxx instruction
$E8E    $8E6C   UNKNOWN  8E6C            ; Unknown 8xxx instruction
$E90    $2416   CALL     $416            ; Call subroutine at 416
$E92    $47C5   SNE      V7, #C5         ; Skip if V7 != 197
$E94    $0AB0   SYS      $AB0            ; System call to AB0
$E96    $DA4D   DRW      VA, V4, #D      ; Draw 13-byte sprite at VA, V4
$E98    $CAD0   RND      VA, #D0         ; VA = random & D0
$E9A    $4DBC   SNE      VD, #BC         ; Skip if VD != 188
$E9C    $2D23   CALL     $D23            ; Call subroutine at D23
$E9E    $0374   SYS      $374            ; System call to 374
$EA0    $7ABF   ADD      VA, #BF         ; Add 191 to VA
$EA2    $69C2   LD       V9, #C2         ; Load 194 into V9
$EA4    $63C9   LD       V3, #C9         ; Load 201 into V3
$EA6    $2984   CALL     $984            ; Call subroutine at 984
$EA8    $4C22   SNE      VC, #22         ; Skip if VC != 34
$EAA    $3BB7   SE       VB, #B7         ; Skip if VB == 183
$EAC    $58F8   UNKNOWN  $58F8           ; Unknown 5xxx instruction
$EAE    $DD38   DRW      VD, V3, #8      ; Draw 8-byte sprite at VD, V3
$EB0    $5C23   UNKNOWN  $5C23           ; Unknown 5xxx instruction
$EB2    $F836   UNKNOWN  F836            ; Unknown Fxxx instruction
$EB4    $43CD   SNE      V3, #CD         ; Skip if V3 != 205
$EB6    $E054   UNKNOWN  $E054           ; Unknown Exxx instruction
$EB8    $B073   JP       V0, $073        ; Jump to V0 + 073
$EBA    $0612   SYS      $612            ; System call to 612
$EBC    $C077   RND      V0, #77         ; V0 = random & 77
$EBE    $A802   LD       I, $802         ; Load 802 into I
$EC0    $E738   UNKNOWN  $E738           ; Unknown Exxx instruction
$EC2    $8606   SHR      V6              ; V6 >>= 1, VF = LSB
$EC4    $2A16   CALL     $A16            ; Call subroutine at A16
$EC6    $D3E5   DRW      V3, VE, #5      ; Draw 5-byte sprite at V3, VE
$EC8    $DE30   DRW      VE, V3, #0      ; Draw 0-byte sprite at VE, V3
$ECA    $56E8   UNKNOWN  $56E8           ; Unknown 5xxx instruction
$ECC    $AD6C   LD       I, $D6C         ; Load D6C into I
$ECE    $E6E8   UNKNOWN  $E6E8           ; Unknown Exxx instruction
$ED0    $B7DC   JP       V0, $7DC        ; Jump to V0 + 7DC
$ED2    $6201   LD       V2, #01         ; Load 1 into V2
$ED4    $6419   LD       V4, #19         ; Load 25 into V4
$ED6    $83C6   SHR      V3              ; V3 >>= 1, VF = LSB
$ED8    $6C81   LD       VC, #81         ; Load 129 into VC
$EDA    $5837   UNKNOWN  $5837           ; Unknown 5xxx instruction
$EDC    $F3F1   UNKNOWN  F3F1            ; Unknown Fxxx instruction
$EDE    $0BB6   SYS      $BB6            ; System call to BB6
$EE0    $BB57   JP       V0, $B57        ; Jump to V0 + B57
$EE2    $961A   UNKNOWN  $961A           ; Unknown 9xxx instruction
$EE4    $052F   SYS      $52F            ; System call to 52F
$EE6    $2A7C   CALL     $A7C            ; Call subroutine at A7C
$EE8    $9A22   UNKNOWN  $9A22           ; Unknown 9xxx instruction
$EEA    $5144   UNKNOWN  $5144           ; Unknown 5xxx instruction
$EEC    $33F1   SE       V3, #F1         ; Skip if V3 == 241
$EEE    $1CC9   JP       $CC9            ; Jump to CC9
$EF0    $3C9C   SE       VC, #9C         ; Skip if VC == 156
$EF2    $CCAC   RND      VC, #AC         ; VC = random & AC
$EF4    $206F   CALL     $06F            ; Call subroutine at 06F
$EF6    $8FAD   UNKNOWN  8FAD            ; Unknown 8xxx instruction
$EF8    $2959   CALL     $959            ; Call subroutine at 959
$EFA    $1948   JP       $948            ; Jump to 948
$EFC    $7488   ADD      V4, #88         ; Add 136 to V4
$EFE    $5290   SE       V2, V9          ; Skip if V2 == V9
$F00    $7EC3   ADD      VE, #C3         ; Add 195 to VE
$F02    $7C32   ADD      VC, #32         ; Add 50 to VC
$F04    $662E   LD       V6, #2E         ; Load 46 into V6
$F06    $E545   UNKNOWN  $E545           ; Unknown Exxx instruction
$F08    $CFC6   RND      VF, #C6         ; VF = random & C6
$F0A    $D1F4   DRW      V1, VF, #4      ; Draw 4-byte sprite at V1, VF
$F0C    $337B   SE       V3, #7B         ; Skip if V3 == 123
$F0E    $E382   UNKNOWN  $E382           ; Unknown Exxx instruction
$F10    $4A3D   SNE      VA, #3D         ; Skip if VA != 61
$F12    $839E   SHL      V3              ; V3 <<= 1, VF = MSB
$F14    $904B   UNKNOWN  $904B           ; Unknown 9xxx instruction
$F16    $EDFC   UNKNOWN  $EDFC           ; Unknown Exxx instruction
$F18    $3F21   SE       VF, #21         ; Skip if VF == 33
$F1A    $2172   CALL     $172            ; Call subroutine at 172
$F1C    $AEA9   LD       I, $EA9         ; Load EA9 into I
$F1E    $4C61   SNE      VC, #61         ; Skip if VC != 97
$F20    $3042   SE       V0, #42         ; Skip if V0 == 66
$F22    $5825   UNKNOWN  $5825           ; Unknown 5xxx instruction
$F24    $5541   UNKNOWN  $5541           ; Unknown 5xxx instruction
$F26    $D56B   DRW      V5, V6, #B      ; Draw 11-byte sprite at V5, V6
$F28    $2D67   CALL     $D67            ; Call subroutine at D67
$F2A    $FEBD   UNKNOWN  FEBD            ; Unknown Fxxx instruction
$F2C    $1702   JP       $702            ; Jump to 702
$F2E    $EEEB   UNKNOWN  $EEEB           ; Unknown Exxx instruction
$F30    $BE56   JP       V0, $E56        ; Jump to V0 + E56
$F32    $C602   RND      V6, #02         ; V6 = random & 02
$F34    $2C58   CALL     $C58            ; Call subroutine at C58
$F36    $4DF1   SNE      VD, #F1         ; Skip if VD != 241
$F38    $8FFA   UNKNOWN  8FFA            ; Unknown 8xxx instruction
$F3A    $BD5C   JP       V0, $D5C        ; Jump to V0 + D5C
$F3C    $3F26   SE       VF, #26         ; Skip if VF == 38
$F3E    $A59D   LD       I, $59D         ; Load 59D into I
$F40    $2502   CALL     $502            ; Call subroutine at 502
$F42    $B4D8   JP       V0, $4D8        ; Jump to V0 + 4D8
$F44    $99BC   UNKNOWN  $99BC           ; Unknown 9xxx instruction
$F46    $B2C6   JP       V0, $2C6        ; Jump to V0 + 2C6
$F48    $8368   UNKNOWN  8368            ; Unknown 8xxx instruction
$F4A    $82A2   AND      V2, VA          ; V2 &= VA
$F4C    $392E   SE       V9, #2E         ; Skip if V9 == 46
$F4E    $A33B   LD       I, $33B         ; Load 33B into I
$F50    $46D1   SNE      V6, #D1         ; Skip if V6 != 209
$F52    $46FC   SNE      V6, #FC         ; Skip if V6 != 252
$F54    $D19D   DRW      V1, V9, #D      ; Draw 13-byte sprite at V1, V9
$F56    $CC51   RND      VC, #51         ; VC = random & 51
$F58    $10BD   JP       $0BD            ; Jump to 0BD
$F5A    $BED7   JP       V0, $ED7        ; Jump to V0 + ED7
$F5C    $D792   DRW      V7, V9, #2      ; Draw 2-byte sprite at V7, V9
$F5E    $50CC   UNKNOWN  $50CC           ; Unknown 5xxx instruction
$F60    $1A18   JP       $A18            ; Jump to A18
$F62    $C271   RND      V2, #71         ; V2 = random & 71
$F64    $9FD2   UNKNOWN  $9FD2           ; Unknown 9xxx instruction
$F66    $D355   DRW      V3, V5, #5      ; Draw 5-byte sprite at V3, V5
$F68    $A3B9   LD       I, $3B9         ; Load 3B9 into I
$F6A    $4B7B   SNE      VB, #7B         ; Skip if VB != 123
$F6C    $D93F   DRW      V9, V3, #F      ; Draw 15-byte sprite at V9, V3
$F6E    $6E81   LD       VE, #81         ; Load 129 into VE
$F70    $DE25   DRW      VE, V2, #5      ; Draw 5-byte sprite at VE, V2
$F72    $8389   UNKNOWN  8389            ; Unknown 8xxx instruction
$F74    $0104   SYS      $104            ; System call to 104
$F76    $049E   SYS      $49E            ; System call to 49E
$F78    $8AE9   UNKNOWN  8AE9            ; Unknown 8xxx instruction
$F7A    $732C   ADD      V3, #2C         ; Add 44 to V3
$F7C    $2C15   CALL     $C15            ; Call subroutine at C15
$F7E    $4952   SNE      V9, #52         ; Skip if V9 != 82
$F80    $7611   ADD      V6, #11         ; Add 17 to V6
$F82    $07D8   SYS      $7D8            ; System call to 7D8
$F84    $BD9A   JP       V0, $D9A        ; Jump to V0 + D9A
$F86    $D8BE   DRW      V8, VB, #E      ; Draw 14-byte sprite at V8, VB
$F88    $FA88   UNKNOWN  FA88            ; Unknown Fxxx instruction
$F8A    $682A   LD       V8, #2A         ; Load 42 into V8
$F8C    $C0D6   RND      V0, #D6         ; V0 = random & D6
$F8E    $EAF4   UNKNOWN  $EAF4           ; Unknown Exxx instruction
$F90    $011A   SYS      $11A            ; System call to 11A
$F92    $C4C4   RND      V4, #C4         ; V4 = random & C4
$F94    $6117   LD       V1, #17         ; Load 23 into V1
$F96    $6E5C   LD       VE, #5C         ; Load 92 into VE
$F98    $C80A   RND      V8, #0A         ; V8 = random & 0A
$F9A    $A5AC   LD       I, $5AC         ; Load 5AC into I
$F9C    $C2FB   RND      V2, #FB         ; V2 = random & FB
$F9E    $1FF8   JP       $FF8            ; Jump to FF8
$FA0    $0A46   SYS      $A46            ; System call to A46
$FA2    $DFD5   DRW      VF, VD, #5      ; Draw 5-byte sprite at VF, VD
$FA4    $BF7D   JP       V0, $F7D        ; Jump to V0 + F7D
$FA6    $5478   UNKNOWN  $5478           ; Unknown 5xxx instruction
$FA8    $A892   LD       I, $892         ; Load 892 into I
$FAA    $78D4   ADD      V8, #D4         ; Add 212 to V8
$FAC    $5084   UNKNOWN  $5084           ; Unknown 5xxx instruction
$FAE    $932A   UNKNOWN  $932A           ; Unknown 9xxx instruction
$FB0    $95A7   UNKNOWN  $95A7           ; Unknown 9xxx instruction
$FB2    $13C4   JP       $3C4            ; Jump to 3C4
$FB4    $CD83   RND      VD, #83         ; VD = random & 83
$FB6    $5DB5   UNKNOWN  $5DB5           ; Unknown 5xxx instruction
$FB8    $1558   JP       $558            ; Jump to 558
$FBA    $7BD0   ADD      VB, #D0         ; Add 208 to VB
$FBC    $0109   SYS      $109            ; System call to 109
$FBE    $1B60   JP       $B60            ; Jump to B60
$FC0    $5402   UNKNOWN  $5402           ; Unknown 5xxx instruction
$FC2    $2AE9   CALL     $AE9            ; Call subroutine at AE9
$FC4    $2579   CALL     $579            ; Call subroutine at 579
$FC6    $67A4   LD       V7, #A4         ; Load 164 into V7
$FC8    $24F0   CALL     $4F0            ; Call subroutine at 4F0
$FCA    $FBD6   UNKNOWN  FBD6            ; Unknown Fxxx instruction
$FCC    $53AC   UNKNOWN  $53AC           ; Unknown 5xxx instruction
$FCE    $6C31   LD       VC, #31         ; Load 49 into VC
$FD0    $B332   JP       V0, $332        ; Jump to V0 + 332
$FD2    $4ABA   SNE      VA, #BA         ; Skip if VA != 186
$FD4    $7D6A   ADD      VD, #6A         ; Add 106 to VD
$FD6    $85F8   UNKNOWN  85F8            ; Unknown 8xxx instruction
$FD8    $9579   UNKNOWN  $9579           ; Unknown 9xxx instruction
$FDA    $EC76   UNKNOWN  $EC76           ; Unknown Exxx instruction
$FDC    $2E81   CALL     $E81            ; Call subroutine at E81
$FDE    $FBCE   UNKNOWN  FBCE            ; Unknown Fxxx instruction
$FE0    $5CCC   UNKNOWN  $5CCC           ; Unknown 5xxx instruction
$FE2    $91C7   UNKNOWN  $91C7           ; Unknown 9xxx instruction
$FE4    $C554   RND      V5, #54         ; V5 = random & 54
$FE6    $833F   UNKNOWN  833F            ; Unknown 8xxx instruction
$FE8    $C965   RND      V9, #65         ; V9 = random & 65
$FEA    $A34F   LD       I, $34F         ; Load 34F into I
$FEC    $8B5D   UNKNOWN  8B5D            ; Unknown 8xxx instruction
$FEE    $8564   ADD      V5, V6          ; V5 += V6, VF = carry
$FF0    $6B68   LD       VB, #68         ; Load 104 into VB
$FF2    $594B   UNKNOWN  $594B           ; Unknown 5xxx instruction
$FF4    $DB44   DRW      VB, V4, #4      ; Draw 4-byte sprite at VB, V4
$FF6    $8029   UNKNOWN  8029            ; Unknown 8xxx instruction
$FF8    $1504   JP       $504            ; Jump to 504
$FFA    $CB61   RND      VB, #61         ; VB = random & 61
$FFC    $7CA6   ADD      VC, #A6         ; Add 166 to VC
$FFE    $E80A   UNKNOWN  $E80A           ; Unknown Exxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 470 (26.2%)
  JP      : 225 (12.6%)
  LD      : 221 (12.3%)
  SE      : 132 ( 7.4%)
  RND     : 125 ( 7.0%)
  ADD     : 124 ( 6.9%)
  SYS     : 116 ( 6.5%)
  DRW     : 114 ( 6.4%)
  SNE     : 111 ( 6.2%)
  CALL    : 106 ( 5.9%)
  OR      :   9 ( 0.5%)
  SUB     :   7 ( 0.4%)
  AND     :   7 ( 0.4%)
  SHL     :   7 ( 0.4%)
  XOR     :   6 ( 0.3%)
  SUBN    :   5 ( 0.3%)
  SHR     :   5 ( 0.3%)
  SKNP    :   2 ( 0.1%)

Memory Operations: 345 (19.3%)
Arithmetic Operations: 158 (8.8%)
