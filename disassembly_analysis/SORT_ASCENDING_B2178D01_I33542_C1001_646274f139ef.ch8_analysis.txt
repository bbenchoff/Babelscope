
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B2178D01_I33542_C1001_646274f139ef.ch8
ROM Size: 3584 bytes
Instructions Found: 1791

DISCOVERY INFORMATION:
Batch: 2178
Instance: 33542
Direction: ascending
Final Array: [0, 0, 0, 68, 80, 178, 238, 238]
Operations: R:0 W:5 C:30 S:14

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 123
Sort Array References:
  $200: LD I, $B77 ; Load B77 into I
  $204: LD I, $757 ; Load 757 into I
  $20C: LD I, $E34 ; Load E34 into I
  $214: LD I, $AAF ; Load AAF into I
  $232: LD I, $3F2 ; Load 3F2 into I
  $242: LD I, $6B5 ; Load 6B5 into I
  $264: LD I, $6DE ; Load 6DE into I
  $272: LD I, $62E ; Load 62E into I
  $27E: LD I, $D6A ; Load D6A into I
  $286: LD I, $775 ; Load 775 into I
  $2A2: LD I, $0BF ; Load 0BF into I
  $2AE: LD I, $8CF ; Load 8CF into I
  $2CE: LD I, $72D ; Load 72D into I
  $2DE: LD I, $8A0 ; Load 8A0 into I
  $2E0: LD I, $EBA ; Load EBA into I
  $2E6: LD I, $4A2 ; Load 4A2 into I
  $2F4: LD I, $1FA ; Load 1FA into I
  $31A: LD I, $5DA ; Load 5DA into I
  $340: LD I, $351 ; Load 351 into I
  $360: LD I, $C74 ; Load C74 into I
  $37A: LD I, $372 ; Load 372 into I
  $382: LD I, $E37 ; Load E37 into I
  $406: LD I, $F85 ; Load F85 into I
  $422: LD I, $93C ; Load 93C into I
  $428: LD I, $A9A ; Load A9A into I
  $44E: LD I, $DAA ; Load DAA into I
  $450: LD I, $649 ; Load 649 into I
  $462: LD I, $0FC ; Load 0FC into I
  $478: LD I, $25B ; Load 25B into I
  $502: LD I, $6BD ; Load 6BD into I
  $532: LD I, $EF2 ; Load EF2 into I
  $544: LD I, $4A0 ; Load 4A0 into I
  $560: LD I, $0E4 ; Load 0E4 into I
  $578: LD I, $6DE ; Load 6DE into I
  $588: LD I, $9B8 ; Load 9B8 into I
  $5A4: LD I, $47B ; Load 47B into I
  $5DA: LD I, $260 ; Load 260 into I
  $5FE: LD I, $B48 ; Load B48 into I
  $610: LD I, $59D ; Load 59D into I
  $660: LD I, $521 ; Load 521 into I
  $67A: LD I, $373 ; Load 373 into I
  $68E: LD I, $6E8 ; Load 6E8 into I
  $692: LD I, $113 ; Load 113 into I
  $6A2: LD I, $C3B ; Load C3B into I
  $6CE: LD I, $B3B ; Load B3B into I
  $6DC: LD I, $D46 ; Load D46 into I
  $6DE: LD I, $3A4 ; Load 3A4 into I
  $6F0: LD I, $074 ; Load 074 into I
  $700: LD I, $D23 ; Load D23 into I
  $70E: LD I, $BAA ; Load BAA into I
  $714: LD I, $9C9 ; Load 9C9 into I
  $724: LD I, $9FD ; Load 9FD into I
  $746: LD I, $9F0 ; Load 9F0 into I
  $75C: LD I, $683 ; Load 683 into I
  $7BE: LD I, $5E1 ; Load 5E1 into I
  $7C8: LD I, $2EA ; Load 2EA into I
  $7E0: LD I, $51C ; Load 51C into I
  $82E: LD I, $824 ; Load 824 into I
  $848: LD I, $465 ; Load 465 into I
  $862: LD I, $8BC ; Load 8BC into I
  $8C2: LD I, $6F5 ; Load 6F5 into I
  $8E0: LD I, $F58 ; Load F58 into I
  $900: LD I, $ED7 ; Load ED7 into I
  $904: LD I, $09A ; Load 09A into I
  $91A: LD I, $E86 ; Load E86 into I
  $91C: LD I, $C2E ; Load C2E into I
  $920: LD I, $FD1 ; Load FD1 into I
  $926: LD I, $37A ; Load 37A into I
  $94A: LD I, $76F ; Load 76F into I
  $97E: LD I, $87A ; Load 87A into I
  $9CE: LD I, $55F ; Load 55F into I
  $9E4: LD I, $718 ; Load 718 into I
  $9EE: LD I, $2C9 ; Load 2C9 into I
  $A04: LD I, $782 ; Load 782 into I
  $A32: LD I, $1D8 ; Load 1D8 into I
  $A42: ADD I, V6 ; I ADDRESS MANIPULATION
  $AA4: LD I, $6F0 ; Load 6F0 into I
  $AC6: LD I, $FFF ; Load FFF into I
  $AE2: LD I, $90C ; Load 90C into I
  $AE8: LD I, $2B0 ; Load 2B0 into I
  $B3C: LD I, $05C ; Load 05C into I
  $B4A: LD I, $866 ; Load 866 into I
  $B9E: LD I, $C19 ; Load C19 into I
  $BB8: LD I, $C45 ; Load C45 into I
  $C28: LD I, $F24 ; Load F24 into I
  $C2E: LD I, $4DB ; Load 4DB into I
  $C3C: LD I, $8A2 ; Load 8A2 into I
  $C68: LD I, $2D6 ; Load 2D6 into I
  $C92: LD I, $EB6 ; Load EB6 into I
  $CA4: LD I, $93A ; Load 93A into I
  $CE6: LD I, $2C3 ; Load 2C3 into I
  $CE8: LD I, $FF5 ; Load FF5 into I
  $CF4: LD I, $74C ; Load 74C into I
  $CF6: LD I, $D31 ; Load D31 into I
  $D02: LD I, $921 ; Load 921 into I
  $D12: LD I, $DEF ; Load DEF into I
  $D30: LD I, $495 ; Load 495 into I
  $D56: LD I, $D6D ; Load D6D into I
  $D84: LD I, $B3D ; Load B3D into I
  $DC0: LD I, $F42 ; Load F42 into I
  $DE8: LD I, $C14 ; Load C14 into I
  $DEC: LD I, $3C3 ; Load 3C3 into I
  $DFA: LD I, $8A4 ; Load 8A4 into I
  $E0E: LD I, $D58 ; Load D58 into I
  $E12: LD I, $685 ; Load 685 into I
  $E50: LD I, $C8C ; Load C8C into I
  $E5E: LD I, $2DC ; Load 2DC into I
  $E66: LD I, $FC2 ; Load FC2 into I
  $E9E: LD I, $B32 ; Load B32 into I
  $EB6: LD I, $7A4 ; Load 7A4 into I
  $EB8: LD I, $F40 ; Load F40 into I
  $EBA: LD I, $C4A ; Load C4A into I
  $EDE: LD I, $E75 ; Load E75 into I
  $EE6: LD I, $F47 ; Load F47 into I
  $F4A: LD I, $519 ; Load 519 into I
  $F7E: LD I, $275 ; Load 275 into I
  $F86: LD I, $8FE ; Load 8FE into I
  $FA2: LD I, $239 ; Load 239 into I
  $FAC: LD I, $19A ; Load 19A into I
  $FD6: LD I, $47C ; Load 47C into I
  $FE8: LD I, $BBB ; Load BBB into I
  $FF2: LD I, $5C4 ; Load 5C4 into I
  $FF8: LD I, $EB2 ; Load EB2 into I

CONTROL FLOW ANALYSIS:
Jumps: 236
Calls: 117
Branches: 222
Loops: 136
Loop Structures:
  $222 -> $21C (backward jump)
  $274 -> $156 (backward jump)
  $27A -> $0C0 (backward jump)
  $2BE -> $0F2 (backward jump)
  $30A -> $06C (backward jump)
  $33A -> $124 (backward jump)
  $342 -> $1F4 (backward jump)
  $392 -> $22E (backward jump)
  $404 -> $125 (backward jump)
  $412 -> $3A0 (backward jump)
  $488 -> $437 (backward jump)
  $4B6 -> $18B (backward jump)
  $50A -> $440 (backward jump)
  $51A -> $481 (backward jump)
  $528 -> $246 (backward jump)
  $52E -> $057 (backward jump)
  $54E -> $2DF (backward jump)
  $558 -> $3BD (backward jump)
  $580 -> $0F4 (backward jump)
  $58E -> $48B (backward jump)
  $606 -> $177 (backward jump)
  $612 -> $555 (backward jump)
  $650 -> $556 (backward jump)
  $662 -> $316 (backward jump)
  $66E -> $15B (backward jump)
  $68C -> $4B5 (backward jump)
  $6A8 -> $569 (backward jump)
  $6B6 -> $3B6 (backward jump)
  $6CC -> $551 (backward jump)
  $6D4 -> $2C4 (backward jump)
  $6E2 -> $3A0 (backward jump)
  $6F6 -> $044 (backward jump)
  $6FE -> $172 (backward jump)
  $72E -> $1DA (backward jump)
  $748 -> $5AC (backward jump)
  $758 -> $73F (backward jump)
  $762 -> $184 (backward jump)
  $772 -> $0D3 (backward jump)
  $7C6 -> $16E (backward jump)
  $7CA -> $6D6 (backward jump)
  $7D4 -> $267 (backward jump)
  $7EC -> $604 (backward jump)
  $7FA -> $153 (backward jump)
  $820 -> $31A (backward jump)
  $834 -> $707 (backward jump)
  $86C -> $15C (backward jump)
  $88A -> $39B (backward jump)
  $89A -> $182 (backward jump)
  $8E4 -> $34C (backward jump)
  $908 -> $60F (backward jump)
  $938 -> $5BD (backward jump)
  $96A -> $612 (backward jump)
  $9BA -> $0E3 (backward jump)
  $9CA -> $8DB (backward jump)
  $9E8 -> $1FD (backward jump)
  $9F4 -> $17A (backward jump)
  $A0C -> $8DF (backward jump)
  $A3C -> $76E (backward jump)
  $A84 -> $6EB (backward jump)
  $A86 -> $171 (backward jump)
  $AA2 -> $A69 (backward jump)
  $AD2 -> $5A0 (backward jump)
  $AF2 -> $AE8 (backward jump)
  $AFE -> $9C7 (backward jump)
  $B28 -> $7CF (backward jump)
  $B30 -> $554 (backward jump)
  $B38 -> $7BE (backward jump)
  $B44 -> $2DD (backward jump)
  $B4E -> $AF9 (backward jump)
  $B66 -> $4C2 (backward jump)
  $B68 -> $209 (backward jump)
  $B8A -> $0E7 (backward jump)
  $B92 -> $AFC (backward jump)
  $B9C -> $6D4 (backward jump)
  $BB2 -> $7C5 (backward jump)
  $BC8 -> $31C (backward jump)
  $BE0 -> $823 (backward jump)
  $BEE -> $16E (backward jump)
  $C1E -> $812 (backward jump)
  $C20 -> $13C (backward jump)
  $C36 -> $A52 (backward jump)
  $C48 -> $856 (backward jump)
  $C50 -> $179 (backward jump)
  $C62 -> $8DC (backward jump)
  $C6A -> $A04 (backward jump)
  $C6C -> $49E (backward jump)
  $C94 -> $82F (backward jump)
  $C9E -> $B77 (backward jump)
  $CAE -> $7B3 (backward jump)
  $CCE -> $0E0 (backward jump)
  $CD8 -> $271 (backward jump)
  $CDC -> $267 (backward jump)
  $CF2 -> $5D7 (backward jump)
  $D10 -> $CC3 (backward jump)
  $D18 -> $78B (backward jump)
  $D1A -> $BF6 (backward jump)
  $D34 -> $575 (backward jump)
  $D36 -> $936 (backward jump)
  $D38 -> $A48 (backward jump)
  $D48 -> $0BD (backward jump)
  $D52 -> $CFC (backward jump)
  $D5C -> $62B (backward jump)
  $D60 -> $8C3 (backward jump)
  $D9C -> $8A5 (backward jump)
  $DA6 -> $45B (backward jump)
  $DB6 -> $40E (backward jump)
  $DC2 -> $D59 (backward jump)
  $DDA -> $B14 (backward jump)
  $DE2 -> $35D (backward jump)
  $DF8 -> $A36 (backward jump)
  $E24 -> $912 (backward jump)
  $E34 -> $526 (backward jump)
  $E4C -> $CBD (backward jump)
  $E80 -> $B68 (backward jump)
  $E88 -> $394 (backward jump)
  $EA0 -> $C03 (backward jump)
  $EB0 -> $951 (backward jump)
  $EC6 -> $7A4 (backward jump)
  $EE0 -> $2C8 (backward jump)
  $F04 -> $BB7 (backward jump)
  $F10 -> $2D9 (backward jump)
  $F1A -> $246 (backward jump)
  $F22 -> $907 (backward jump)
  $F50 -> $9BB (backward jump)
  $F60 -> $950 (backward jump)
  $F66 -> $C9E (backward jump)
  $F78 -> $B0E (backward jump)
  $F82 -> $304 (backward jump)
  $F8C -> $C83 (backward jump)
  $FB6 -> $AF7 (backward jump)
  $FBC -> $80B (backward jump)
  $FBE -> $1FB (backward jump)
  $FDC -> $127 (backward jump)
  $FE4 -> $A5C (backward jump)
  $FEA -> $6D6 (backward jump)
  $FEC -> $3E0 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $AB77   LD       I, $B77         ; Load B77 into I
$202    $79AC   ADD      V9, #AC         ; Add 172 to V9
$204    $A757   LD       I, $757         ; Load 757 into I
$206    $4AEC   SNE      VA, #EC         ; Skip if VA != 236
$208    $CA6E   RND      VA, #6E         ; VA = random & 6E
$20A    $5878   UNKNOWN  $5878           ; Unknown 5xxx instruction
$20C    $AE34   LD       I, $E34         ; Load E34 into I
$20E    $DB9E   DRW      VB, V9, #E      ; Draw 14-byte sprite at VB, V9
$210    $566B   UNKNOWN  $566B           ; Unknown 5xxx instruction
$212    $81F6   SHR      V1              ; V1 >>= 1, VF = LSB
$214    $AAAF   LD       I, $AAF         ; Load AAF into I
$216    $7D4C   ADD      VD, #4C         ; Add 76 to VD
$218    $24F1   CALL     $4F1            ; Call subroutine at 4F1
$21A    $B60C   JP       V0, $60C        ; Jump to V0 + 60C
$21C    $FC3E   UNKNOWN  FC3E            ; Unknown Fxxx instruction
$21E    $1F32   JP       $F32            ; Jump to F32
$220    $4ACB   SNE      VA, #CB         ; Skip if VA != 203
$222    $B21C   JP       V0, $21C        ; Jump to V0 + 21C
$224    $5FF0   SE       VF, VF          ; Skip if VF == VF
$226    $E026   UNKNOWN  $E026           ; Unknown Exxx instruction
$228    $38A0   SE       V8, #A0         ; Skip if V8 == 160
$22A    $4051   SNE      V0, #51         ; Skip if V0 != 81
$22C    $94F3   UNKNOWN  $94F3           ; Unknown 9xxx instruction
$22E    $E2EC   UNKNOWN  $E2EC           ; Unknown Exxx instruction
$230    $4202   SNE      V2, #02         ; Skip if V2 != 2
$232    $A3F2   LD       I, $3F2         ; Load 3F2 into I
$234    $D833   DRW      V8, V3, #3      ; Draw 3-byte sprite at V8, V3
$236    $586D   UNKNOWN  $586D           ; Unknown 5xxx instruction
$238    $4FF8   SNE      VF, #F8         ; Skip if VF != 248
$23A    $7A84   ADD      VA, #84         ; Add 132 to VA
$23C    $D520   DRW      V5, V2, #0      ; Draw 0-byte sprite at V5, V2
$23E    $5D4C   UNKNOWN  $5D4C           ; Unknown 5xxx instruction
$240    $893D   UNKNOWN  893D            ; Unknown 8xxx instruction
$242    $A6B5   LD       I, $6B5         ; Load 6B5 into I
$244    $F57C   UNKNOWN  F57C            ; Unknown Fxxx instruction
$246    $B2FE   JP       V0, $2FE        ; Jump to V0 + 2FE
$248    $FA4B   UNKNOWN  FA4B            ; Unknown Fxxx instruction
$24A    $2B76   CALL     $B76            ; Call subroutine at B76
$24C    $C9A7   RND      V9, #A7         ; V9 = random & A7
$24E    $83DF   UNKNOWN  83DF            ; Unknown 8xxx instruction
$250    $C08D   RND      V0, #8D         ; V0 = random & 8D
$252    $E562   UNKNOWN  $E562           ; Unknown Exxx instruction
$254    $7DF8   ADD      VD, #F8         ; Add 248 to VD
$256    $F116   UNKNOWN  F116            ; Unknown Fxxx instruction
$258    $9F2F   UNKNOWN  $9F2F           ; Unknown 9xxx instruction
$25A    $43F5   SNE      V3, #F5         ; Skip if V3 != 245
$25C    $2BE1   CALL     $BE1            ; Call subroutine at BE1
$25E    $59D9   UNKNOWN  $59D9           ; Unknown 5xxx instruction
$260    $727C   ADD      V2, #7C         ; Add 124 to V2
$262    $B95C   JP       V0, $95C        ; Jump to V0 + 95C
$264    $A6DE   LD       I, $6DE         ; Load 6DE into I
$266    $2618   CALL     $618            ; Call subroutine at 618
$268    $D2B1   DRW      V2, VB, #1      ; Draw 1-byte sprite at V2, VB
$26A    $D124   DRW      V1, V2, #4      ; Draw 4-byte sprite at V1, V2
$26C    $E518   UNKNOWN  $E518           ; Unknown Exxx instruction
$26E    $5EB8   UNKNOWN  $5EB8           ; Unknown 5xxx instruction
$270    $B693   JP       V0, $693        ; Jump to V0 + 693
$272    $A62E   LD       I, $62E         ; Load 62E into I
$274    $1156   JP       $156            ; Jump to 156
$276    $9F14   UNKNOWN  $9F14           ; Unknown 9xxx instruction
$278    $6694   LD       V6, #94         ; Load 148 into V6
$27A    $B0C0   JP       V0, $0C0        ; Jump to V0 + 0C0
$27C    $9185   UNKNOWN  $9185           ; Unknown 9xxx instruction
$27E    $AD6A   LD       I, $D6A         ; Load D6A into I
$280    $191B   JP       $91B            ; Jump to 91B
$282    $5148   UNKNOWN  $5148           ; Unknown 5xxx instruction
$284    $937F   UNKNOWN  $937F           ; Unknown 9xxx instruction
$286    $A775   LD       I, $775         ; Load 775 into I
$288    $062A   SYS      $62A            ; System call to 62A
$28A    $C0FC   RND      V0, #FC         ; V0 = random & FC
$28C    $B808   JP       V0, $808        ; Jump to V0 + 808
$28E    $519D   UNKNOWN  $519D           ; Unknown 5xxx instruction
$290    $3309   SE       V3, #09         ; Skip if V3 == 9
$292    $6097   LD       V0, #97         ; Load 151 into V0
$294    $584C   UNKNOWN  $584C           ; Unknown 5xxx instruction
$296    $E99A   UNKNOWN  $E99A           ; Unknown Exxx instruction
$298    $C665   RND      V6, #65         ; V6 = random & 65
$29A    $8A9F   UNKNOWN  8A9F            ; Unknown 8xxx instruction
$29C    $37AE   SE       V7, #AE         ; Skip if V7 == 174
$29E    $141C   JP       $41C            ; Jump to 41C
$2A0    $5FFD   UNKNOWN  $5FFD           ; Unknown 5xxx instruction
$2A2    $A0BF   LD       I, $0BF         ; Load 0BF into I
$2A4    $60C8   LD       V0, #C8         ; Load 200 into V0
$2A6    $B2D8   JP       V0, $2D8        ; Jump to V0 + 2D8
$2A8    $4EF2   SNE      VE, #F2         ; Skip if VE != 242
$2AA    $5746   UNKNOWN  $5746           ; Unknown 5xxx instruction
$2AC    $E7B9   UNKNOWN  $E7B9           ; Unknown Exxx instruction
$2AE    $A8CF   LD       I, $8CF         ; Load 8CF into I
$2B0    $3CF8   SE       VC, #F8         ; Skip if VC == 248
$2B2    $905D   UNKNOWN  $905D           ; Unknown 9xxx instruction
$2B4    $5A63   UNKNOWN  $5A63           ; Unknown 5xxx instruction
$2B6    $5A2E   UNKNOWN  $5A2E           ; Unknown 5xxx instruction
$2B8    $8139   UNKNOWN  8139            ; Unknown 8xxx instruction
$2BA    $EC63   UNKNOWN  $EC63           ; Unknown Exxx instruction
$2BC    $53F5   UNKNOWN  $53F5           ; Unknown 5xxx instruction
$2BE    $B0F2   JP       V0, $0F2        ; Jump to V0 + 0F2
$2C0    $8345   SUB      V3, V4          ; V3 -= V4, VF = !borrow
$2C2    $FDD6   UNKNOWN  FDD6            ; Unknown Fxxx instruction
$2C4    $D7FF   DRW      V7, VF, #F      ; Draw 15-byte sprite at V7, VF
$2C6    $3AEF   SE       VA, #EF         ; Skip if VA == 239
$2C8    $FCD6   UNKNOWN  FCD6            ; Unknown Fxxx instruction
$2CA    $7F96   ADD      VF, #96         ; Add 150 to VF
$2CC    $5170   SE       V1, V7          ; Skip if V1 == V7
$2CE    $A72D   LD       I, $72D         ; Load 72D into I
$2D0    $D4CB   DRW      V4, VC, #B      ; Draw 11-byte sprite at V4, VC
$2D2    $6753   LD       V7, #53         ; Load 83 into V7
$2D4    $3137   SE       V1, #37         ; Skip if V1 == 55
$2D6    $4174   SNE      V1, #74         ; Skip if V1 != 116
$2D8    $8828   UNKNOWN  8828            ; Unknown 8xxx instruction
$2DA    $78B4   ADD      V8, #B4         ; Add 180 to V8
$2DC    $046D   SYS      $46D            ; System call to 46D
$2DE    $A8A0   LD       I, $8A0         ; Load 8A0 into I
$2E0    $AEBA   LD       I, $EBA         ; Load EBA into I
$2E2    $68EE   LD       V8, #EE         ; Load 238 into V8
$2E4    $5A6C   UNKNOWN  $5A6C           ; Unknown 5xxx instruction
$2E6    $A4A2   LD       I, $4A2         ; Load 4A2 into I
$2E8    $D4DA   DRW      V4, VD, #A      ; Draw 10-byte sprite at V4, VD
$2EA    $650E   LD       V5, #0E         ; Load 14 into V5
$2EC    $070B   SYS      $70B            ; System call to 70B
$2EE    $5335   UNKNOWN  $5335           ; Unknown 5xxx instruction
$2F0    $83BD   UNKNOWN  83BD            ; Unknown 8xxx instruction
$2F2    $4631   SNE      V6, #31         ; Skip if V6 != 49
$2F4    $A1FA   LD       I, $1FA         ; Load 1FA into I
$2F6    $5004   UNKNOWN  $5004           ; Unknown 5xxx instruction
$2F8    $177C   JP       $77C            ; Jump to 77C
$2FA    $D16B   DRW      V1, V6, #B      ; Draw 11-byte sprite at V1, V6
$2FC    $CB4A   RND      VB, #4A         ; VB = random & 4A
$2FE    $B332   JP       V0, $332        ; Jump to V0 + 332
$302    $0044   SYS      $044            ; System call to 044
$304    $50B2   UNKNOWN  $50B2           ; Unknown 5xxx instruction
$306    $EEEE   UNKNOWN  $EEEE           ; Unknown Exxx instruction
$308    $2511   CALL     $511            ; Call subroutine at 511
$30A    $B06C   JP       V0, $06C        ; Jump to V0 + 06C
$30C    $6B52   LD       VB, #52         ; Load 82 into VB
$30E    $C725   RND      V7, #25         ; V7 = random & 25
$310    $5350   SE       V3, V5          ; Skip if V3 == V5
$312    $35F4   SE       V5, #F4         ; Skip if V5 == 244
$314    $3C5B   SE       VC, #5B         ; Skip if VC == 91
$316    $F256   UNKNOWN  F256            ; Unknown Fxxx instruction
$318    $36B5   SE       V6, #B5         ; Skip if V6 == 181
$31A    $A5DA   LD       I, $5DA         ; Load 5DA into I
$31C    $C394   RND      V3, #94         ; V3 = random & 94
$31E    $59D8   UNKNOWN  $59D8           ; Unknown 5xxx instruction
$320    $7DDA   ADD      VD, #DA         ; Add 218 to VD
$322    $7390   ADD      V3, #90         ; Add 144 to V3
$324    $7D37   ADD      VD, #37         ; Add 55 to VD
$326    $8EE4   ADD      VE, VE          ; VE += VE, VF = carry
$328    $E25F   UNKNOWN  $E25F           ; Unknown Exxx instruction
$32A    $E6FE   UNKNOWN  $E6FE           ; Unknown Exxx instruction
$32C    $7ACE   ADD      VA, #CE         ; Add 206 to VA
$32E    $FE51   UNKNOWN  FE51            ; Unknown Fxxx instruction
$330    $45BD   SNE      V5, #BD         ; Skip if V5 != 189
$332    $2BE1   CALL     $BE1            ; Call subroutine at BE1
$334    $6088   LD       V0, #88         ; Load 136 into V0
$336    $F4CC   UNKNOWN  F4CC            ; Unknown Fxxx instruction
$338    $BBB0   JP       V0, $BB0        ; Jump to V0 + BB0
$33A    $B124   JP       V0, $124        ; Jump to V0 + 124
$33C    $9A00   SNE      VA, V0          ; Skip if VA != V0
$33E    $350D   SE       V5, #0D         ; Skip if V5 == 13
$340    $A351   LD       I, $351         ; Load 351 into I
$342    $11F4   JP       $1F4            ; Jump to 1F4
$344    $6F97   LD       VF, #97         ; Load 151 into VF
$346    $D8B9   DRW      V8, VB, #9      ; Draw 9-byte sprite at V8, VB
$348    $5773   UNKNOWN  $5773           ; Unknown 5xxx instruction
$34A    $5B44   UNKNOWN  $5B44           ; Unknown 5xxx instruction
$34C    $7FFF   ADD      VF, #FF         ; Add 255 to VF
$34E    $279A   CALL     $79A            ; Call subroutine at 79A
$350    $9CB6   UNKNOWN  $9CB6           ; Unknown 9xxx instruction
$352    $94E9   UNKNOWN  $94E9           ; Unknown 9xxx instruction
$354    $D3C0   DRW      V3, VC, #0      ; Draw 0-byte sprite at V3, VC
$356    $4B6B   SNE      VB, #6B         ; Skip if VB != 107
$358    $7A1E   ADD      VA, #1E         ; Add 30 to VA
$35A    $2F65   CALL     $F65            ; Call subroutine at F65
$35C    $D296   DRW      V2, V9, #6      ; Draw 6-byte sprite at V2, V9
$35E    $F8F3   UNKNOWN  F8F3            ; Unknown Fxxx instruction
$360    $AC74   LD       I, $C74         ; Load C74 into I
$362    $4F2C   SNE      VF, #2C         ; Skip if VF != 44
$364    $69FB   LD       V9, #FB         ; Load 251 into V9
$366    $D83B   DRW      V8, V3, #B      ; Draw 11-byte sprite at V8, V3
$368    $8EE2   AND      VE, VE          ; VE &= VE
$36A    $51AE   UNKNOWN  $51AE           ; Unknown 5xxx instruction
$36C    $BDB2   JP       V0, $DB2        ; Jump to V0 + DB2
$36E    $B6A8   JP       V0, $6A8        ; Jump to V0 + 6A8
$370    $C475   RND      V4, #75         ; V4 = random & 75
$372    $FE8B   UNKNOWN  FE8B            ; Unknown Fxxx instruction
$374    $D84F   DRW      V8, V4, #F      ; Draw 15-byte sprite at V8, V4
$376    $467A   SNE      V6, #7A         ; Skip if V6 != 122
$378    $24D9   CALL     $4D9            ; Call subroutine at 4D9
$37A    $A372   LD       I, $372         ; Load 372 into I
$37C    $E043   UNKNOWN  $E043           ; Unknown Exxx instruction
$37E    $F637   UNKNOWN  F637            ; Unknown Fxxx instruction
$380    $0D4A   SYS      $D4A            ; System call to D4A
$382    $AE37   LD       I, $E37         ; Load E37 into I
$384    $086E   SYS      $86E            ; System call to 86E
$386    $67E1   LD       V7, #E1         ; Load 225 into V7
$388    $DB63   DRW      VB, V6, #3      ; Draw 3-byte sprite at VB, V6
$38A    $6AC8   LD       VA, #C8         ; Load 200 into VA
$38C    $F616   UNKNOWN  F616            ; Unknown Fxxx instruction
$38E    $3B63   SE       VB, #63         ; Skip if VB == 99
$390    $8B9B   UNKNOWN  8B9B            ; Unknown 8xxx instruction
$392    $B22E   JP       V0, $22E        ; Jump to V0 + 22E
$394    $E8B0   UNKNOWN  $E8B0           ; Unknown Exxx instruction
$396    $BFB7   JP       V0, $FB7        ; Jump to V0 + FB7
$398    $362E   SE       V6, #2E         ; Skip if V6 == 46
$39A    $59EC   UNKNOWN  $59EC           ; Unknown 5xxx instruction
$39C    $327F   SE       V2, #7F         ; Skip if V2 == 127
$39E    $7ECE   ADD      VE, #CE         ; Add 206 to VE
$3A0    $0119   SYS      $119            ; System call to 119
$3A2    $552A   UNKNOWN  $552A           ; Unknown 5xxx instruction
$3A4    $27FD   CALL     $7FD            ; Call subroutine at 7FD
$3A6    $E33F   UNKNOWN  $E33F           ; Unknown Exxx instruction
$3A8    $BF65   JP       V0, $F65        ; Jump to V0 + F65
$3AA    $B485   JP       V0, $485        ; Jump to V0 + 485
$3AC    $25E9   CALL     $5E9            ; Call subroutine at 5E9
$3AE    $FEC7   UNKNOWN  FEC7            ; Unknown Fxxx instruction
$3B0    $2323   CALL     $323            ; Call subroutine at 323
$3B2    $00C4   SYS      $0C4            ; System call to 0C4
$3B4    $4B88   SNE      VB, #88         ; Skip if VB != 136
$3B6    $ED42   UNKNOWN  $ED42           ; Unknown Exxx instruction
$3B8    $DD24   DRW      VD, V2, #4      ; Draw 4-byte sprite at VD, V2
$3BA    $75D6   ADD      V5, #D6         ; Add 214 to V5
$3BC    $EEEE   UNKNOWN  $EEEE           ; Unknown Exxx instruction
$3BE    $3BC7   SE       VB, #C7         ; Skip if VB == 199
$3C0    $505B   UNKNOWN  $505B           ; Unknown 5xxx instruction
$3C2    $2BB0   CALL     $BB0            ; Call subroutine at BB0
$3C4    $E045   UNKNOWN  $E045           ; Unknown Exxx instruction
$3C6    $4C30   SNE      VC, #30         ; Skip if VC != 48
$3C8    $F848   UNKNOWN  F848            ; Unknown Fxxx instruction
$3CA    $23E2   CALL     $3E2            ; Call subroutine at 3E2
$3CC    $749F   ADD      V4, #9F         ; Add 159 to V4
$3CE    $ED14   UNKNOWN  $ED14           ; Unknown Exxx instruction
$3D0    $DD72   DRW      VD, V7, #2      ; Draw 2-byte sprite at VD, V7
$3D2    $CA4D   RND      VA, #4D         ; VA = random & 4D
$3D4    $0C8D   SYS      $C8D            ; System call to C8D
$3D6    $B3E2   JP       V0, $3E2        ; Jump to V0 + 3E2
$3D8    $E700   UNKNOWN  $E700           ; Unknown Exxx instruction
$3DA    $6706   LD       V7, #06         ; Load 6 into V7
$3DC    $C0C9   RND      V0, #C9         ; V0 = random & C9
$3DE    $08CD   SYS      $8CD            ; System call to 8CD
$3E0    $3997   SE       V9, #97         ; Skip if V9 == 151
$3E2    $05D8   SYS      $5D8            ; System call to 5D8
$3E4    $FB6F   UNKNOWN  FB6F            ; Unknown Fxxx instruction
$3E6    $751B   ADD      V5, #1B         ; Add 27 to V5
$3E8    $2BA2   CALL     $BA2            ; Call subroutine at BA2
$3EA    $02B2   SYS      $2B2            ; System call to 2B2
$3EC    $9C87   UNKNOWN  $9C87           ; Unknown 9xxx instruction
$3EE    $D6E3   DRW      V6, VE, #3      ; Draw 3-byte sprite at V6, VE
$3F0    $EED1   UNKNOWN  $EED1           ; Unknown Exxx instruction
$3F2    $734D   ADD      V3, #4D         ; Add 77 to V3
$3F4    $BD31   JP       V0, $D31        ; Jump to V0 + D31
$3F6    $4054   SNE      V0, #54         ; Skip if V0 != 84
$3F8    $DE06   DRW      VE, V0, #6      ; Draw 6-byte sprite at VE, V0
$3FA    $5760   SE       V7, V6          ; Skip if V7 == V6
$3FC    $19FF   JP       $9FF            ; Jump to 9FF
$3FE    $5270   SE       V2, V7          ; Skip if V2 == V7
$400    $BD28   JP       V0, $D28        ; Jump to V0 + D28
$402    $1816   JP       $816            ; Jump to 816
$404    $1125   JP       $125            ; Jump to 125
$406    $AF85   LD       I, $F85         ; Load F85 into I
$408    $ED71   UNKNOWN  $ED71           ; Unknown Exxx instruction
$40A    $B949   JP       V0, $949        ; Jump to V0 + 949
$40C    $5862   UNKNOWN  $5862           ; Unknown 5xxx instruction
$40E    $D3C3   DRW      V3, VC, #3      ; Draw 3-byte sprite at V3, VC
$410    $9C64   UNKNOWN  $9C64           ; Unknown 9xxx instruction
$412    $B3A0   JP       V0, $3A0        ; Jump to V0 + 3A0
$414    $2B8B   CALL     $B8B            ; Call subroutine at B8B
$416    $5C13   UNKNOWN  $5C13           ; Unknown 5xxx instruction
$418    $78A7   ADD      V8, #A7         ; Add 167 to V8
$41A    $F87F   UNKNOWN  F87F            ; Unknown Fxxx instruction
$41C    $3972   SE       V9, #72         ; Skip if V9 == 114
$41E    $DA7A   DRW      VA, V7, #A      ; Draw 10-byte sprite at VA, V7
$420    $EBD5   UNKNOWN  $EBD5           ; Unknown Exxx instruction
$422    $A93C   LD       I, $93C         ; Load 93C into I
$424    $CAD8   RND      VA, #D8         ; VA = random & D8
$426    $2514   CALL     $514            ; Call subroutine at 514
$428    $AA9A   LD       I, $A9A         ; Load A9A into I
$42A    $D6FC   DRW      V6, VF, #C      ; Draw 12-byte sprite at V6, VF
$42C    $63EB   LD       V3, #EB         ; Load 235 into V3
$42E    $023B   SYS      $23B            ; System call to 23B
$430    $4B2E   SNE      VB, #2E         ; Skip if VB != 46
$432    $BF51   JP       V0, $F51        ; Jump to V0 + F51
$434    $F7E8   UNKNOWN  F7E8            ; Unknown Fxxx instruction
$436    $EE99   UNKNOWN  $EE99           ; Unknown Exxx instruction
$438    $8D9E   SHL      VD              ; VD <<= 1, VF = MSB
$43A    $8E14   ADD      VE, V1          ; VE += V1, VF = carry
$43C    $C72E   RND      V7, #2E         ; V7 = random & 2E
$43E    $D800   DRW      V8, V0, #0      ; Draw 0-byte sprite at V8, V0
$440    $2A12   CALL     $A12            ; Call subroutine at A12
$442    $93D8   UNKNOWN  $93D8           ; Unknown 9xxx instruction
$444    $C0F6   RND      V0, #F6         ; V0 = random & F6
$446    $B599   JP       V0, $599        ; Jump to V0 + 599
$448    $5BBB   UNKNOWN  $5BBB           ; Unknown 5xxx instruction
$44A    $5EE4   UNKNOWN  $5EE4           ; Unknown 5xxx instruction
$44C    $C92A   RND      V9, #2A         ; V9 = random & 2A
$44E    $ADAA   LD       I, $DAA         ; Load DAA into I
$450    $A649   LD       I, $649         ; Load 649 into I
$452    $2F08   CALL     $F08            ; Call subroutine at F08
$454    $1BF3   JP       $BF3            ; Jump to BF3
$456    $7DB1   ADD      VD, #B1         ; Add 177 to VD
$458    $DC28   DRW      VC, V2, #8      ; Draw 8-byte sprite at VC, V2
$45A    $6227   LD       V2, #27         ; Load 39 into V2
$45C    $0D0D   SYS      $D0D            ; System call to D0D
$45E    $BDE1   JP       V0, $DE1        ; Jump to V0 + DE1
$460    $5828   UNKNOWN  $5828           ; Unknown 5xxx instruction
$462    $A0FC   LD       I, $0FC         ; Load 0FC into I
$464    $C419   RND      V4, #19         ; V4 = random & 19
$466    $BB24   JP       V0, $B24        ; Jump to V0 + B24
$468    $2B15   CALL     $B15            ; Call subroutine at B15
$46A    $0B39   SYS      $B39            ; System call to B39
$46C    $79BF   ADD      V9, #BF         ; Add 191 to V9
$46E    $9751   UNKNOWN  $9751           ; Unknown 9xxx instruction
$470    $FF52   UNKNOWN  FF52            ; Unknown Fxxx instruction
$472    $52AD   UNKNOWN  $52AD           ; Unknown 5xxx instruction
$474    $3806   SE       V8, #06         ; Skip if V8 == 6
$476    $0755   SYS      $755            ; System call to 755
$478    $A25B   LD       I, $25B         ; Load 25B into I
$47A    $0AE6   SYS      $AE6            ; System call to AE6
$47C    $8556   SHR      V5              ; V5 >>= 1, VF = LSB
$47E    $32A5   SE       V2, #A5         ; Skip if V2 == 165
$480    $C175   RND      V1, #75         ; V1 = random & 75
$482    $384C   SE       V8, #4C         ; Skip if V8 == 76
$484    $84DF   UNKNOWN  84DF            ; Unknown 8xxx instruction
$486    $563E   UNKNOWN  $563E           ; Unknown 5xxx instruction
$488    $1437   JP       $437            ; Jump to 437
$48A    $0149   SYS      $149            ; System call to 149
$48C    $4A10   SNE      VA, #10         ; Skip if VA != 16
$48E    $7B51   ADD      VB, #51         ; Add 81 to VB
$490    $314C   SE       V1, #4C         ; Skip if V1 == 76
$492    $E555   UNKNOWN  $E555           ; Unknown Exxx instruction
$494    $B995   JP       V0, $995        ; Jump to V0 + 995
$496    $7FFA   ADD      VF, #FA         ; Add 250 to VF
$498    $0A4F   SYS      $A4F            ; System call to A4F
$49A    $19B3   JP       $9B3            ; Jump to 9B3
$49C    $91B0   SNE      V1, VB          ; Skip if V1 != VB
$49E    $1549   JP       $549            ; Jump to 549
$4A0    $81EB   UNKNOWN  81EB            ; Unknown 8xxx instruction
$4A2    $97B5   UNKNOWN  $97B5           ; Unknown 9xxx instruction
$4A4    $7D9D   ADD      VD, #9D         ; Add 157 to VD
$4A6    $F602   UNKNOWN  F602            ; Unknown Fxxx instruction
$4A8    $EC4F   UNKNOWN  $EC4F           ; Unknown Exxx instruction
$4AA    $74C3   ADD      V4, #C3         ; Add 195 to V4
$4AC    $B930   JP       V0, $930        ; Jump to V0 + 930
$4AE    $D1CF   DRW      V1, VC, #F      ; Draw 15-byte sprite at V1, VC
$4B0    $4A7A   SNE      VA, #7A         ; Skip if VA != 122
$4B2    $B7B6   JP       V0, $7B6        ; Jump to V0 + 7B6
$4B4    $1E24   JP       $E24            ; Jump to E24
$4B6    $B18B   JP       V0, $18B        ; Jump to V0 + 18B
$4B8    $7EE3   ADD      VE, #E3         ; Add 227 to VE
$4BA    $4D3B   SNE      VD, #3B         ; Skip if VD != 59
$4BC    $DF67   DRW      VF, V6, #7      ; Draw 7-byte sprite at VF, V6
$4BE    $D411   DRW      V4, V1, #1      ; Draw 1-byte sprite at V4, V1
$4C0    $2A32   CALL     $A32            ; Call subroutine at A32
$4C2    $8A16   SHR      VA              ; VA >>= 1, VF = LSB
$4C4    $2519   CALL     $519            ; Call subroutine at 519
$4C6    $17D3   JP       $7D3            ; Jump to 7D3
$4C8    $40B1   SNE      V0, #B1         ; Skip if V0 != 177
$4CA    $E18D   UNKNOWN  $E18D           ; Unknown Exxx instruction
$4CC    $4784   SNE      V7, #84         ; Skip if V7 != 132
$4CE    $ED56   UNKNOWN  $ED56           ; Unknown Exxx instruction
$4D0    $2F59   CALL     $F59            ; Call subroutine at F59
$4D2    $1A2E   JP       $A2E            ; Jump to A2E
$4D4    $81A4   ADD      V1, VA          ; V1 += VA, VF = carry
$4D6    $2BCC   CALL     $BCC            ; Call subroutine at BCC
$4D8    $8608   UNKNOWN  8608            ; Unknown 8xxx instruction
$4DA    $DD4B   DRW      VD, V4, #B      ; Draw 11-byte sprite at VD, V4
$4DC    $1EF6   JP       $EF6            ; Jump to EF6
$4DE    $BC2F   JP       V0, $C2F        ; Jump to V0 + C2F
$4E0    $1F9C   JP       $F9C            ; Jump to F9C
$4E2    $739C   ADD      V3, #9C         ; Add 156 to V3
$4E4    $4472   SNE      V4, #72         ; Skip if V4 != 114
$4E6    $BEEE   JP       V0, $EEE        ; Jump to V0 + EEE
$4E8    $DF8D   DRW      VF, V8, #D      ; Draw 13-byte sprite at VF, V8
$4EA    $8F35   SUB      VF, V3          ; VF -= V3, VF = !borrow
$4EC    $C728   RND      V7, #28         ; V7 = random & 28
$4EE    $9E0F   UNKNOWN  $9E0F           ; Unknown 9xxx instruction
$4F0    $0CF3   SYS      $CF3            ; System call to CF3
$4F2    $8143   XOR      V1, V4          ; V1 ^= V4
$4F4    $33FD   SE       V3, #FD         ; Skip if V3 == 253
$4F6    $CE41   RND      VE, #41         ; VE = random & 41
$4F8    $C241   RND      V2, #41         ; V2 = random & 41
$4FA    $0ACB   SYS      $ACB            ; System call to ACB
$4FC    $0E8C   SYS      $E8C            ; System call to E8C
$4FE    $380F   SE       V8, #0F         ; Skip if V8 == 15
$500    $58E5   UNKNOWN  $58E5           ; Unknown 5xxx instruction
$502    $A6BD   LD       I, $6BD         ; Load 6BD into I
$504    $5962   UNKNOWN  $5962           ; Unknown 5xxx instruction
$506    $44CE   SNE      V4, #CE         ; Skip if V4 != 206
$508    $2C6D   CALL     $C6D            ; Call subroutine at C6D
$50A    $B440   JP       V0, $440        ; Jump to V0 + 440
$50C    $E03A   UNKNOWN  $E03A           ; Unknown Exxx instruction
$50E    $532B   UNKNOWN  $532B           ; Unknown 5xxx instruction
$510    $5AD9   UNKNOWN  $5AD9           ; Unknown 5xxx instruction
$512    $34DC   SE       V4, #DC         ; Skip if V4 == 220
$514    $8CBD   UNKNOWN  8CBD            ; Unknown 8xxx instruction
$516    $6F44   LD       VF, #44         ; Load 68 into VF
$518    $7910   ADD      V9, #10         ; Add 16 to V9
$51A    $B481   JP       V0, $481        ; Jump to V0 + 481
$51C    $9F0D   UNKNOWN  $9F0D           ; Unknown 9xxx instruction
$51E    $FF4F   UNKNOWN  FF4F            ; Unknown Fxxx instruction
$520    $3736   SE       V7, #36         ; Skip if V7 == 54
$522    $F938   UNKNOWN  F938            ; Unknown Fxxx instruction
$524    $4263   SNE      V2, #63         ; Skip if V2 != 99
$526    $72E7   ADD      V2, #E7         ; Add 231 to V2
$528    $1246   JP       $246            ; Jump to 246
$52A    $D93F   DRW      V9, V3, #F      ; Draw 15-byte sprite at V9, V3
$52C    $03F6   SYS      $3F6            ; System call to 3F6
$52E    $1057   JP       $057            ; Jump to 057
$530    $C1B5   RND      V1, #B5         ; V1 = random & B5
$532    $AEF2   LD       I, $EF2         ; Load EF2 into I
$534    $7885   ADD      V8, #85         ; Add 133 to V8
$536    $FD66   UNKNOWN  FD66            ; Unknown Fxxx instruction
$538    $8B09   UNKNOWN  8B09            ; Unknown 8xxx instruction
$53A    $4C15   SNE      VC, #15         ; Skip if VC != 21
$53C    $8EE9   UNKNOWN  8EE9            ; Unknown 8xxx instruction
$53E    $8311   OR       V3, V1          ; V3 |= V1
$540    $46A1   SNE      V6, #A1         ; Skip if V6 != 161
$542    $82F3   XOR      V2, VF          ; V2 ^= VF
$544    $A4A0   LD       I, $4A0         ; Load 4A0 into I
$546    $596A   UNKNOWN  $596A           ; Unknown 5xxx instruction
$548    $C1F9   RND      V1, #F9         ; V1 = random & F9
$54A    $C443   RND      V4, #43         ; V4 = random & 43
$54C    $4315   SNE      V3, #15         ; Skip if V3 != 21
$54E    $12DF   JP       $2DF            ; Jump to 2DF
$550    $42A8   SNE      V2, #A8         ; Skip if V2 != 168
$552    $5D1A   UNKNOWN  $5D1A           ; Unknown 5xxx instruction
$554    $8AFC   UNKNOWN  8AFC            ; Unknown 8xxx instruction
$556    $EAD9   UNKNOWN  $EAD9           ; Unknown Exxx instruction
$558    $13BD   JP       $3BD            ; Jump to 3BD
$55A    $97D8   UNKNOWN  $97D8           ; Unknown 9xxx instruction
$55C    $7F7C   ADD      VF, #7C         ; Add 124 to VF
$55E    $68B6   LD       V8, #B6         ; Load 182 into V8
$560    $A0E4   LD       I, $0E4         ; Load 0E4 into I
$562    $3CA0   SE       VC, #A0         ; Skip if VC == 160
$564    $607D   LD       V0, #7D         ; Load 125 into V0
$566    $92F9   UNKNOWN  $92F9           ; Unknown 9xxx instruction
$568    $9108   UNKNOWN  $9108           ; Unknown 9xxx instruction
$56A    $6247   LD       V2, #47         ; Load 71 into V2
$56C    $2E56   CALL     $E56            ; Call subroutine at E56
$56E    $3FF5   SE       VF, #F5         ; Skip if VF == 245
$570    $4A4E   SNE      VA, #4E         ; Skip if VA != 78
$572    $F956   UNKNOWN  F956            ; Unknown Fxxx instruction
$574    $3463   SE       V4, #63         ; Skip if V4 == 99
$576    $509F   UNKNOWN  $509F           ; Unknown 5xxx instruction
$578    $A6DE   LD       I, $6DE         ; Load 6DE into I
$57A    $2975   CALL     $975            ; Call subroutine at 975
$57C    $3BE0   SE       VB, #E0         ; Skip if VB == 224
$57E    $9F6F   UNKNOWN  $9F6F           ; Unknown 9xxx instruction
$580    $10F4   JP       $0F4            ; Jump to 0F4
$582    $1B7B   JP       $B7B            ; Jump to B7B
$584    $4AEB   SNE      VA, #EB         ; Skip if VA != 235
$586    $B638   JP       V0, $638        ; Jump to V0 + 638
$588    $A9B8   LD       I, $9B8         ; Load 9B8 into I
$58A    $61D4   LD       V1, #D4         ; Load 212 into V1
$58C    $C9A3   RND      V9, #A3         ; V9 = random & A3
$58E    $B48B   JP       V0, $48B        ; Jump to V0 + 48B
$590    $83F3   XOR      V3, VF          ; V3 ^= VF
$592    $CFFA   RND      VF, #FA         ; VF = random & FA
$594    $E804   UNKNOWN  $E804           ; Unknown Exxx instruction
$596    $96FE   UNKNOWN  $96FE           ; Unknown 9xxx instruction
$598    $31E6   SE       V1, #E6         ; Skip if V1 == 230
$59A    $C6C5   RND      V6, #C5         ; V6 = random & C5
$59C    $2714   CALL     $714            ; Call subroutine at 714
$59E    $0068   SYS      $068            ; System call to 068
$5A0    $2275   CALL     $275            ; Call subroutine at 275
$5A2    $37AC   SE       V7, #AC         ; Skip if V7 == 172
$5A4    $A47B   LD       I, $47B         ; Load 47B into I
$5A6    $804F   UNKNOWN  804F            ; Unknown 8xxx instruction
$5A8    $5FCC   UNKNOWN  $5FCC           ; Unknown 5xxx instruction
$5AA    $9508   UNKNOWN  $9508           ; Unknown 9xxx instruction
$5AC    $EFAC   UNKNOWN  $EFAC           ; Unknown Exxx instruction
$5AE    $0369   SYS      $369            ; System call to 369
$5B0    $BED6   JP       V0, $ED6        ; Jump to V0 + ED6
$5B2    $28D3   CALL     $8D3            ; Call subroutine at 8D3
$5B4    $8B63   XOR      VB, V6          ; VB ^= V6
$5B6    $C715   RND      V7, #15         ; V7 = random & 15
$5B8    $D24A   DRW      V2, V4, #A      ; Draw 10-byte sprite at V2, V4
$5BA    $1E14   JP       $E14            ; Jump to E14
$5BC    $3C25   SE       VC, #25         ; Skip if VC == 37
$5BE    $4365   SNE      V3, #65         ; Skip if V3 != 101
$5C0    $FEF8   UNKNOWN  FEF8            ; Unknown Fxxx instruction
$5C2    $ED94   UNKNOWN  $ED94           ; Unknown Exxx instruction
$5C4    $4B4A   SNE      VB, #4A         ; Skip if VB != 74
$5C6    $DBE5   DRW      VB, VE, #5      ; Draw 5-byte sprite at VB, VE
$5C8    $93CD   UNKNOWN  $93CD           ; Unknown 9xxx instruction
$5CA    $6CB3   LD       VC, #B3         ; Load 179 into VC
$5CC    $C645   RND      V6, #45         ; V6 = random & 45
$5CE    $FA22   UNKNOWN  FA22            ; Unknown Fxxx instruction
$5D0    $79E6   ADD      V9, #E6         ; Add 230 to V9
$5D2    $C0CD   RND      V0, #CD         ; V0 = random & CD
$5D4    $8AD7   SUBN     VA, VD          ; VA = VD - VA, VF = !borrow
$5D6    $C944   RND      V9, #44         ; V9 = random & 44
$5D8    $794F   ADD      V9, #4F         ; Add 79 to V9
$5DA    $A260   LD       I, $260         ; Load 260 into I
$5DC    $E5D6   UNKNOWN  $E5D6           ; Unknown Exxx instruction
$5DE    $9C38   UNKNOWN  $9C38           ; Unknown 9xxx instruction
$5E0    $54BC   UNKNOWN  $54BC           ; Unknown 5xxx instruction
$5E2    $4E3F   SNE      VE, #3F         ; Skip if VE != 63
$5E4    $00A2   SYS      $0A2            ; System call to 0A2
$5E6    $035E   SYS      $35E            ; System call to 35E
$5E8    $0936   SYS      $936            ; System call to 936
$5EA    $2A67   CALL     $A67            ; Call subroutine at A67
$5EC    $7933   ADD      V9, #33         ; Add 51 to V9
$5EE    $C5BE   RND      V5, #BE         ; V5 = random & BE
$5F0    $DC88   DRW      VC, V8, #8      ; Draw 8-byte sprite at VC, V8
$5F2    $EF62   UNKNOWN  $EF62           ; Unknown Exxx instruction
$5F4    $F020   UNKNOWN  F020            ; Unknown Fxxx instruction
$5F6    $FE31   UNKNOWN  FE31            ; Unknown Fxxx instruction
$5F8    $BCCF   JP       V0, $CCF        ; Jump to V0 + CCF
$5FA    $ED6C   UNKNOWN  $ED6C           ; Unknown Exxx instruction
$5FC    $FFE4   UNKNOWN  FFE4            ; Unknown Fxxx instruction
$5FE    $AB48   LD       I, $B48         ; Load B48 into I
$600    $CF24   RND      VF, #24         ; VF = random & 24
$602    $8BDB   UNKNOWN  8BDB            ; Unknown 8xxx instruction
$604    $8B7E   SHL      VB              ; VB <<= 1, VF = MSB
$606    $1177   JP       $177            ; Jump to 177
$608    $790F   ADD      V9, #0F         ; Add 15 to V9
$60A    $FBCE   UNKNOWN  FBCE            ; Unknown Fxxx instruction
$60C    $62B8   LD       V2, #B8         ; Load 184 into V2
$60E    $FA4D   UNKNOWN  FA4D            ; Unknown Fxxx instruction
$610    $A59D   LD       I, $59D         ; Load 59D into I
$612    $1555   JP       $555            ; Jump to 555
$614    $BF74   JP       V0, $F74        ; Jump to V0 + F74
$616    $541E   UNKNOWN  $541E           ; Unknown 5xxx instruction
$618    $FEEE   UNKNOWN  FEEE            ; Unknown Fxxx instruction
$61A    $D6A1   DRW      V6, VA, #1      ; Draw 1-byte sprite at V6, VA
$61C    $C7D9   RND      V7, #D9         ; V7 = random & D9
$61E    $6691   LD       V6, #91         ; Load 145 into V6
$620    $2937   CALL     $937            ; Call subroutine at 937
$622    $EAA0   UNKNOWN  $EAA0           ; Unknown Exxx instruction
$624    $F421   UNKNOWN  F421            ; Unknown Fxxx instruction
$626    $9226   UNKNOWN  $9226           ; Unknown 9xxx instruction
$628    $8528   UNKNOWN  8528            ; Unknown 8xxx instruction
$62A    $73EF   ADD      V3, #EF         ; Add 239 to V3
$62C    $9B2F   UNKNOWN  $9B2F           ; Unknown 9xxx instruction
$62E    $0689   SYS      $689            ; System call to 689
$630    $8983   XOR      V9, V8          ; V9 ^= V8
$632    $4186   SNE      V1, #86         ; Skip if V1 != 134
$634    $99E3   UNKNOWN  $99E3           ; Unknown 9xxx instruction
$636    $0143   SYS      $143            ; System call to 143
$638    $358A   SE       V5, #8A         ; Skip if V5 == 138
$63A    $7470   ADD      V4, #70         ; Add 112 to V4
$63C    $BDAC   JP       V0, $DAC        ; Jump to V0 + DAC
$63E    $C973   RND      V9, #73         ; V9 = random & 73
$640    $50B5   UNKNOWN  $50B5           ; Unknown 5xxx instruction
$642    $4F50   SNE      VF, #50         ; Skip if VF != 80
$644    $5958   UNKNOWN  $5958           ; Unknown 5xxx instruction
$646    $CBC2   RND      VB, #C2         ; VB = random & C2
$648    $CCEF   RND      VC, #EF         ; VC = random & EF
$64A    $1EBE   JP       $EBE            ; Jump to EBE
$64C    $1E9A   JP       $E9A            ; Jump to E9A
$64E    $EE0B   UNKNOWN  $EE0B           ; Unknown Exxx instruction
$650    $B556   JP       V0, $556        ; Jump to V0 + 556
$652    $8B8D   UNKNOWN  8B8D            ; Unknown 8xxx instruction
$654    $6605   LD       V6, #05         ; Load 5 into V6
$656    $7097   ADD      V0, #97         ; Add 151 to V0
$658    $97CC   UNKNOWN  $97CC           ; Unknown 9xxx instruction
$65A    $BD4B   JP       V0, $D4B        ; Jump to V0 + D4B
$65C    $35D4   SE       V5, #D4         ; Skip if V5 == 212
$65E    $0F6A   SYS      $F6A            ; System call to F6A
$660    $A521   LD       I, $521         ; Load 521 into I
$662    $1316   JP       $316            ; Jump to 316
$664    $B6FA   JP       V0, $6FA        ; Jump to V0 + 6FA
$666    $CAA5   RND      VA, #A5         ; VA = random & A5
$668    $C398   RND      V3, #98         ; V3 = random & 98
$66A    $20F2   CALL     $0F2            ; Call subroutine at 0F2
$66C    $6506   LD       V5, #06         ; Load 6 into V5
$66E    $B15B   JP       V0, $15B        ; Jump to V0 + 15B
$670    $7C91   ADD      VC, #91         ; Add 145 to VC
$672    $EA9F   UNKNOWN  $EA9F           ; Unknown Exxx instruction
$674    $825C   UNKNOWN  825C            ; Unknown 8xxx instruction
$676    $C7DC   RND      V7, #DC         ; V7 = random & DC
$678    $3EA7   SE       VE, #A7         ; Skip if VE == 167
$67A    $A373   LD       I, $373         ; Load 373 into I
$67C    $B8FF   JP       V0, $8FF        ; Jump to V0 + 8FF
$67E    $1E0F   JP       $E0F            ; Jump to E0F
$680    $C909   RND      V9, #09         ; V9 = random & 09
$682    $E8BB   UNKNOWN  $E8BB           ; Unknown Exxx instruction
$684    $FDCF   UNKNOWN  FDCF            ; Unknown Fxxx instruction
$686    $D711   DRW      V7, V1, #1      ; Draw 1-byte sprite at V7, V1
$688    $CC43   RND      VC, #43         ; VC = random & 43
$68A    $96C7   UNKNOWN  $96C7           ; Unknown 9xxx instruction
$68C    $14B5   JP       $4B5            ; Jump to 4B5
$68E    $A6E8   LD       I, $6E8         ; Load 6E8 into I
$690    $4427   SNE      V4, #27         ; Skip if V4 != 39
$692    $A113   LD       I, $113         ; Load 113 into I
$694    $70A8   ADD      V0, #A8         ; Add 168 to V0
$696    $FFBE   UNKNOWN  FFBE            ; Unknown Fxxx instruction
$698    $EAC3   UNKNOWN  $EAC3           ; Unknown Exxx instruction
$69A    $2623   CALL     $623            ; Call subroutine at 623
$69C    $6557   LD       V5, #57         ; Load 87 into V5
$69E    $CBCD   RND      VB, #CD         ; VB = random & CD
$6A0    $6644   LD       V6, #44         ; Load 68 into V6
$6A2    $AC3B   LD       I, $C3B         ; Load C3B into I
$6A4    $BC8B   JP       V0, $C8B        ; Jump to V0 + C8B
$6A6    $8225   SUB      V2, V2          ; V2 -= V2, VF = !borrow
$6A8    $1569   JP       $569            ; Jump to 569
$6AA    $0E97   SYS      $E97            ; System call to E97
$6AC    $E5C3   UNKNOWN  $E5C3           ; Unknown Exxx instruction
$6AE    $4CD0   SNE      VC, #D0         ; Skip if VC != 208
$6B0    $40AB   SNE      V0, #AB         ; Skip if V0 != 171
$6B2    $087A   SYS      $87A            ; System call to 87A
$6B4    $89BC   UNKNOWN  89BC            ; Unknown 8xxx instruction
$6B6    $13B6   JP       $3B6            ; Jump to 3B6
$6B8    $5DAE   UNKNOWN  $5DAE           ; Unknown 5xxx instruction
$6BA    $0505   SYS      $505            ; System call to 505
$6BC    $F101   UNKNOWN  F101            ; Unknown Fxxx instruction
$6BE    $CF0B   RND      VF, #0B         ; VF = random & 0B
$6C0    $5323   UNKNOWN  $5323           ; Unknown 5xxx instruction
$6C2    $8D80   LD       VD, V8          ; VD = V8
$6C4    $5679   UNKNOWN  $5679           ; Unknown 5xxx instruction
$6C6    $034C   SYS      $34C            ; System call to 34C
$6C8    $2416   CALL     $416            ; Call subroutine at 416
$6CA    $8BCC   UNKNOWN  8BCC            ; Unknown 8xxx instruction
$6CC    $1551   JP       $551            ; Jump to 551
$6CE    $AB3B   LD       I, $B3B         ; Load B3B into I
$6D0    $95D2   UNKNOWN  $95D2           ; Unknown 9xxx instruction
$6D2    $7015   ADD      V0, #15         ; Add 21 to V0
$6D4    $12C4   JP       $2C4            ; Jump to 2C4
$6D6    $7A06   ADD      VA, #06         ; Add 6 to VA
$6D8    $67DF   LD       V7, #DF         ; Load 223 into V7
$6DA    $3370   SE       V3, #70         ; Skip if V3 == 112
$6DC    $AD46   LD       I, $D46         ; Load D46 into I
$6DE    $A3A4   LD       I, $3A4         ; Load 3A4 into I
$6E0    $0E22   SYS      $E22            ; System call to E22
$6E2    $13A0   JP       $3A0            ; Jump to 3A0
$6E4    $D61E   DRW      V6, V1, #E      ; Draw 14-byte sprite at V6, V1
$6E6    $BD9B   JP       V0, $D9B        ; Jump to V0 + D9B
$6E8    $39A9   SE       V9, #A9         ; Skip if V9 == 169
$6EA    $6D4C   LD       VD, #4C         ; Load 76 into VD
$6EC    $F1C6   UNKNOWN  F1C6            ; Unknown Fxxx instruction
$6EE    $BB57   JP       V0, $B57        ; Jump to V0 + B57
$6F0    $A074   LD       I, $074         ; Load 074 into I
$6F2    $1FC2   JP       $FC2            ; Jump to FC2
$6F4    $7002   ADD      V0, #02         ; Add 2 to V0
$6F6    $B044   JP       V0, $044        ; Jump to V0 + 044
$6F8    $E9AF   UNKNOWN  $E9AF           ; Unknown Exxx instruction
$6FA    $7E24   ADD      VE, #24         ; Add 36 to VE
$6FC    $F95F   UNKNOWN  F95F            ; Unknown Fxxx instruction
$6FE    $B172   JP       V0, $172        ; Jump to V0 + 172
$700    $AD23   LD       I, $D23         ; Load D23 into I
$702    $965B   UNKNOWN  $965B           ; Unknown 9xxx instruction
$704    $521B   UNKNOWN  $521B           ; Unknown 5xxx instruction
$706    $FF5D   UNKNOWN  FF5D            ; Unknown Fxxx instruction
$708    $4799   SNE      V7, #99         ; Skip if V7 != 153
$70A    $8A4F   UNKNOWN  8A4F            ; Unknown 8xxx instruction
$70C    $88C3   XOR      V8, VC          ; V8 ^= VC
$70E    $ABAA   LD       I, $BAA         ; Load BAA into I
$710    $8F83   XOR      VF, V8          ; VF ^= V8
$712    $CEDC   RND      VE, #DC         ; VE = random & DC
$714    $A9C9   LD       I, $9C9         ; Load 9C9 into I
$716    $5D35   UNKNOWN  $5D35           ; Unknown 5xxx instruction
$718    $74AC   ADD      V4, #AC         ; Add 172 to V4
$71A    $99FC   UNKNOWN  $99FC           ; Unknown 9xxx instruction
$71C    $8A6B   UNKNOWN  8A6B            ; Unknown 8xxx instruction
$71E    $CFFC   RND      VF, #FC         ; VF = random & FC
$720    $4CE3   SNE      VC, #E3         ; Skip if VC != 227
$722    $0DA7   SYS      $DA7            ; System call to DA7
$724    $A9FD   LD       I, $9FD         ; Load 9FD into I
$726    $C4EC   RND      V4, #EC         ; V4 = random & EC
$728    $FAB1   UNKNOWN  FAB1            ; Unknown Fxxx instruction
$72A    $6483   LD       V4, #83         ; Load 131 into V4
$72C    $5DEC   UNKNOWN  $5DEC           ; Unknown 5xxx instruction
$72E    $B1DA   JP       V0, $1DA        ; Jump to V0 + 1DA
$730    $73F4   ADD      V3, #F4         ; Add 244 to V3
$732    $9671   UNKNOWN  $9671           ; Unknown 9xxx instruction
$734    $E8A0   UNKNOWN  $E8A0           ; Unknown Exxx instruction
$736    $B8E2   JP       V0, $8E2        ; Jump to V0 + 8E2
$738    $9E0F   UNKNOWN  $9E0F           ; Unknown 9xxx instruction
$73A    $7C5D   ADD      VC, #5D         ; Add 93 to VC
$73C    $71F9   ADD      V1, #F9         ; Add 249 to V1
$73E    $1FE7   JP       $FE7            ; Jump to FE7
$740    $1D19   JP       $D19            ; Jump to D19
$742    $B8D1   JP       V0, $8D1        ; Jump to V0 + 8D1
$744    $9D47   UNKNOWN  $9D47           ; Unknown 9xxx instruction
$746    $A9F0   LD       I, $9F0         ; Load 9F0 into I
$748    $15AC   JP       $5AC            ; Jump to 5AC
$74A    $93B2   UNKNOWN  $93B2           ; Unknown 9xxx instruction
$74C    $7556   ADD      V5, #56         ; Add 86 to V5
$74E    $8923   XOR      V9, V2          ; V9 ^= V2
$750    $D82D   DRW      V8, V2, #D      ; Draw 13-byte sprite at V8, V2
$752    $8EA6   SHR      VE              ; VE >>= 1, VF = LSB
$754    $00C1   SYS      $0C1            ; System call to 0C1
$756    $1B80   JP       $B80            ; Jump to B80
$758    $B73F   JP       V0, $73F        ; Jump to V0 + 73F
$75A    $C04A   RND      V0, #4A         ; V0 = random & 4A
$75C    $A683   LD       I, $683         ; Load 683 into I
$75E    $FAEB   UNKNOWN  FAEB            ; Unknown Fxxx instruction
$760    $62BF   LD       V2, #BF         ; Load 191 into V2
$762    $1184   JP       $184            ; Jump to 184
$764    $C50F   RND      V5, #0F         ; V5 = random & 0F
$766    $7876   ADD      V8, #76         ; Add 118 to V8
$768    $9F36   UNKNOWN  $9F36           ; Unknown 9xxx instruction
$76A    $34D2   SE       V4, #D2         ; Skip if V4 == 210
$76C    $1DAD   JP       $DAD            ; Jump to DAD
$76E    $C604   RND      V6, #04         ; V6 = random & 04
$770    $5681   UNKNOWN  $5681           ; Unknown 5xxx instruction
$772    $B0D3   JP       V0, $0D3        ; Jump to V0 + 0D3
$774    $FFDF   UNKNOWN  FFDF            ; Unknown Fxxx instruction
$776    $920C   UNKNOWN  $920C           ; Unknown 9xxx instruction
$778    $7518   ADD      V5, #18         ; Add 24 to V5
$77A    $6485   LD       V4, #85         ; Load 133 into V4
$77C    $0B39   SYS      $B39            ; System call to B39
$77E    $6921   LD       V9, #21         ; Load 33 into V9
$780    $8FDE   SHL      VF              ; VF <<= 1, VF = MSB
$782    $80CB   UNKNOWN  80CB            ; Unknown 8xxx instruction
$784    $9A08   UNKNOWN  $9A08           ; Unknown 9xxx instruction
$786    $8F30   LD       VF, V3          ; VF = V3
$788    $746D   ADD      V4, #6D         ; Add 109 to V4
$78A    $75F1   ADD      V5, #F1         ; Add 241 to V5
$78C    $5352   UNKNOWN  $5352           ; Unknown 5xxx instruction
$78E    $1F3B   JP       $F3B            ; Jump to F3B
$790    $CF7A   RND      VF, #7A         ; VF = random & 7A
$792    $7D14   ADD      VD, #14         ; Add 20 to VD
$794    $0671   SYS      $671            ; System call to 671
$796    $1B03   JP       $B03            ; Jump to B03
$798    $ECDD   UNKNOWN  $ECDD           ; Unknown Exxx instruction
$79A    $6B21   LD       VB, #21         ; Load 33 into VB
$79C    $23FF   CALL     $3FF            ; Call subroutine at 3FF
$79E    $5BE4   UNKNOWN  $5BE4           ; Unknown 5xxx instruction
$7A0    $F6AE   UNKNOWN  F6AE            ; Unknown Fxxx instruction
$7A2    $9D77   UNKNOWN  $9D77           ; Unknown 9xxx instruction
$7A4    $3DAF   SE       VD, #AF         ; Skip if VD == 175
$7A6    $CB45   RND      VB, #45         ; VB = random & 45
$7A8    $18BE   JP       $8BE            ; Jump to 8BE
$7AA    $92FA   UNKNOWN  $92FA           ; Unknown 9xxx instruction
$7AC    $C4AA   RND      V4, #AA         ; V4 = random & AA
$7AE    $ECF1   UNKNOWN  $ECF1           ; Unknown Exxx instruction
$7B0    $713A   ADD      V1, #3A         ; Add 58 to V1
$7B2    $C9C5   RND      V9, #C5         ; V9 = random & C5
$7B4    $2889   CALL     $889            ; Call subroutine at 889
$7B6    $4036   SNE      V0, #36         ; Skip if V0 != 54
$7B8    $7158   ADD      V1, #58         ; Add 88 to V1
$7BA    $3CA2   SE       VC, #A2         ; Skip if VC == 162
$7BC    $65B3   LD       V5, #B3         ; Load 179 into V5
$7BE    $A5E1   LD       I, $5E1         ; Load 5E1 into I
$7C0    $D005   DRW      V0, V0, #5      ; Draw 5-byte sprite at V0, V0
$7C2    $8394   ADD      V3, V9          ; V3 += V9, VF = carry
$7C4    $1A26   JP       $A26            ; Jump to A26
$7C6    $B16E   JP       V0, $16E        ; Jump to V0 + 16E
$7C8    $A2EA   LD       I, $2EA         ; Load 2EA into I
$7CA    $B6D6   JP       V0, $6D6        ; Jump to V0 + 6D6
$7CC    $C974   RND      V9, #74         ; V9 = random & 74
$7CE    $740A   ADD      V4, #0A         ; Add 10 to V4
$7D0    $0D4D   SYS      $D4D            ; System call to D4D
$7D2    $9942   UNKNOWN  $9942           ; Unknown 9xxx instruction
$7D4    $1267   JP       $267            ; Jump to 267
$7D6    $8BCB   UNKNOWN  8BCB            ; Unknown 8xxx instruction
$7D8    $5E85   UNKNOWN  $5E85           ; Unknown 5xxx instruction
$7DA    $4220   SNE      V2, #20         ; Skip if V2 != 32
$7DC    $F98C   UNKNOWN  F98C            ; Unknown Fxxx instruction
$7DE    $E7F5   UNKNOWN  $E7F5           ; Unknown Exxx instruction
$7E0    $A51C   LD       I, $51C         ; Load 51C into I
$7E2    $78A0   ADD      V8, #A0         ; Add 160 to V8
$7E4    $EFAD   UNKNOWN  $EFAD           ; Unknown Exxx instruction
$7E6    $552A   UNKNOWN  $552A           ; Unknown 5xxx instruction
$7E8    $D5D8   DRW      V5, VD, #8      ; Draw 8-byte sprite at V5, VD
$7EA    $CA2F   RND      VA, #2F         ; VA = random & 2F
$7EC    $B604   JP       V0, $604        ; Jump to V0 + 604
$7EE    $70D4   ADD      V0, #D4         ; Add 212 to V0
$7F0    $3401   SE       V4, #01         ; Skip if V4 == 1
$7F2    $C556   RND      V5, #56         ; V5 = random & 56
$7F4    $345F   SE       V4, #5F         ; Skip if V4 == 95
$7F6    $3D50   SE       VD, #50         ; Skip if VD == 80
$7F8    $277A   CALL     $77A            ; Call subroutine at 77A
$7FA    $1153   JP       $153            ; Jump to 153
$7FC    $8E74   ADD      VE, V7          ; VE += V7, VF = carry
$7FE    $42B9   SNE      V2, #B9         ; Skip if V2 != 185
$800    $3909   SE       V9, #09         ; Skip if V9 == 9
$802    $58E4   UNKNOWN  $58E4           ; Unknown 5xxx instruction
$804    $5A1F   UNKNOWN  $5A1F           ; Unknown 5xxx instruction
$806    $0AE8   SYS      $AE8            ; System call to AE8
$808    $47D3   SNE      V7, #D3         ; Skip if V7 != 211
$80A    $FAD4   UNKNOWN  FAD4            ; Unknown Fxxx instruction
$80C    $0891   SYS      $891            ; System call to 891
$80E    $44B1   SNE      V4, #B1         ; Skip if V4 != 177
$810    $85EA   UNKNOWN  85EA            ; Unknown 8xxx instruction
$812    $2BFE   CALL     $BFE            ; Call subroutine at BFE
$814    $8B64   ADD      VB, V6          ; VB += V6, VF = carry
$816    $7480   ADD      V4, #80         ; Add 128 to V4
$818    $9E0C   UNKNOWN  $9E0C           ; Unknown 9xxx instruction
$81A    $EA95   UNKNOWN  $EA95           ; Unknown Exxx instruction
$81C    $27C3   CALL     $7C3            ; Call subroutine at 7C3
$81E    $BCEC   JP       V0, $CEC        ; Jump to V0 + CEC
$820    $B31A   JP       V0, $31A        ; Jump to V0 + 31A
$822    $904A   UNKNOWN  $904A           ; Unknown 9xxx instruction
$824    $44CD   SNE      V4, #CD         ; Skip if V4 != 205
$826    $699F   LD       V9, #9F         ; Load 159 into V9
$828    $0AF8   SYS      $AF8            ; System call to AF8
$82A    $9107   UNKNOWN  $9107           ; Unknown 9xxx instruction
$82C    $19B3   JP       $9B3            ; Jump to 9B3
$82E    $A824   LD       I, $824         ; Load 824 into I
$830    $2B27   CALL     $B27            ; Call subroutine at B27
$832    $6619   LD       V6, #19         ; Load 25 into V6
$834    $1707   JP       $707            ; Jump to 707
$836    $CB67   RND      VB, #67         ; VB = random & 67
$838    $CFA5   RND      VF, #A5         ; VF = random & A5
$83A    $1BC0   JP       $BC0            ; Jump to BC0
$83C    $6167   LD       V1, #67         ; Load 103 into V1
$83E    $1AD8   JP       $AD8            ; Jump to AD8
$840    $C2A3   RND      V2, #A3         ; V2 = random & A3
$842    $6EA3   LD       VE, #A3         ; Load 163 into VE
$844    $8530   LD       V5, V3          ; V5 = V3
$846    $63EF   LD       V3, #EF         ; Load 239 into V3
$848    $A465   LD       I, $465         ; Load 465 into I
$84A    $D0BC   DRW      V0, VB, #C      ; Draw 12-byte sprite at V0, VB
$84C    $3CF9   SE       VC, #F9         ; Skip if VC == 249
$84E    $43DD   SNE      V3, #DD         ; Skip if V3 != 221
$850    $F6B2   UNKNOWN  F6B2            ; Unknown Fxxx instruction
$852    $34E8   SE       V4, #E8         ; Skip if V4 == 232
$854    $8133   XOR      V1, V3          ; V1 ^= V3
$856    $2B02   CALL     $B02            ; Call subroutine at B02
$858    $CE83   RND      VE, #83         ; VE = random & 83
$85A    $9AFE   UNKNOWN  $9AFE           ; Unknown 9xxx instruction
$85C    $0742   SYS      $742            ; System call to 742
$85E    $7ACC   ADD      VA, #CC         ; Add 204 to VA
$860    $F5E1   UNKNOWN  F5E1            ; Unknown Fxxx instruction
$862    $A8BC   LD       I, $8BC         ; Load 8BC into I
$864    $ECF8   UNKNOWN  $ECF8           ; Unknown Exxx instruction
$866    $71EB   ADD      V1, #EB         ; Add 235 to V1
$868    $D28D   DRW      V2, V8, #D      ; Draw 13-byte sprite at V2, V8
$86A    $48D1   SNE      V8, #D1         ; Skip if V8 != 209
$86C    $115C   JP       $15C            ; Jump to 15C
$86E    $0CEE   SYS      $CEE            ; System call to CEE
$870    $739F   ADD      V3, #9F         ; Add 159 to V3
$872    $7870   ADD      V8, #70         ; Add 112 to V8
$874    $D20B   DRW      V2, V0, #B      ; Draw 11-byte sprite at V2, V0
$876    $FD90   UNKNOWN  FD90            ; Unknown Fxxx instruction
$878    $E429   UNKNOWN  $E429           ; Unknown Exxx instruction
$87A    $5B5A   UNKNOWN  $5B5A           ; Unknown 5xxx instruction
$87C    $FFE8   UNKNOWN  FFE8            ; Unknown Fxxx instruction
$87E    $553F   UNKNOWN  $553F           ; Unknown 5xxx instruction
$880    $3FB0   SE       VF, #B0         ; Skip if VF == 176
$882    $2B80   CALL     $B80            ; Call subroutine at B80
$884    $5B2F   UNKNOWN  $5B2F           ; Unknown 5xxx instruction
$886    $CD07   RND      VD, #07         ; VD = random & 07
$888    $7776   ADD      V7, #76         ; Add 118 to V7
$88A    $B39B   JP       V0, $39B        ; Jump to V0 + 39B
$88C    $01E7   SYS      $1E7            ; System call to 1E7
$88E    $F130   UNKNOWN  F130            ; Unknown Fxxx instruction
$890    $CEA5   RND      VE, #A5         ; VE = random & A5
$892    $D407   DRW      V4, V0, #7      ; Draw 7-byte sprite at V4, V0
$894    $BF6F   JP       V0, $F6F        ; Jump to V0 + F6F
$896    $05C5   SYS      $5C5            ; System call to 5C5
$898    $9085   UNKNOWN  $9085           ; Unknown 9xxx instruction
$89A    $B182   JP       V0, $182        ; Jump to V0 + 182
$89C    $CA77   RND      VA, #77         ; VA = random & 77
$89E    $F622   UNKNOWN  F622            ; Unknown Fxxx instruction
$8A0    $6960   LD       V9, #60         ; Load 96 into V9
$8A2    $21EA   CALL     $1EA            ; Call subroutine at 1EA
$8A4    $9250   SNE      V2, V5          ; Skip if V2 != V5
$8A6    $7C0E   ADD      VC, #0E         ; Add 14 to VC
$8A8    $68CA   LD       V8, #CA         ; Load 202 into V8
$8AA    $20B5   CALL     $0B5            ; Call subroutine at 0B5
$8AC    $6000   LD       V0, #00         ; Load 0 into V0
$8AE    $1CAE   JP       $CAE            ; Jump to CAE
$8B0    $3644   SE       V6, #44         ; Skip if V6 == 68
$8B2    $3BBA   SE       VB, #BA         ; Skip if VB == 186
$8B4    $BD41   JP       V0, $D41        ; Jump to V0 + D41
$8B6    $6725   LD       V7, #25         ; Load 37 into V7
$8B8    $9956   UNKNOWN  $9956           ; Unknown 9xxx instruction
$8BA    $47F9   SNE      V7, #F9         ; Skip if V7 != 249
$8BC    $CE6A   RND      VE, #6A         ; VE = random & 6A
$8BE    $8B6D   UNKNOWN  8B6D            ; Unknown 8xxx instruction
$8C0    $DAD9   DRW      VA, VD, #9      ; Draw 9-byte sprite at VA, VD
$8C2    $A6F5   LD       I, $6F5         ; Load 6F5 into I
$8C4    $6F27   LD       VF, #27         ; Load 39 into VF
$8C6    $4359   SNE      V3, #59         ; Skip if V3 != 89
$8C8    $0D94   SYS      $D94            ; System call to D94
$8CA    $D521   DRW      V5, V2, #1      ; Draw 1-byte sprite at V5, V2
$8CC    $0765   SYS      $765            ; System call to 765
$8CE    $8DAC   UNKNOWN  8DAC            ; Unknown 8xxx instruction
$8D0    $2664   CALL     $664            ; Call subroutine at 664
$8D2    $31C9   SE       V1, #C9         ; Skip if V1 == 201
$8D4    $8432   AND      V4, V3          ; V4 &= V3
$8D6    $666B   LD       V6, #6B         ; Load 107 into V6
$8D8    $06B7   SYS      $6B7            ; System call to 6B7
$8DA    $5732   UNKNOWN  $5732           ; Unknown 5xxx instruction
$8DC    $384B   SE       V8, #4B         ; Skip if V8 == 75
$8DE    $2886   CALL     $886            ; Call subroutine at 886
$8E0    $AF58   LD       I, $F58         ; Load F58 into I
$8E2    $5097   UNKNOWN  $5097           ; Unknown 5xxx instruction
$8E4    $B34C   JP       V0, $34C        ; Jump to V0 + 34C
$8E6    $ED8E   UNKNOWN  $ED8E           ; Unknown Exxx instruction
$8E8    $E496   UNKNOWN  $E496           ; Unknown Exxx instruction
$8EA    $3300   SE       V3, #00         ; Skip if V3 == 0
$8EC    $E282   UNKNOWN  $E282           ; Unknown Exxx instruction
$8EE    $2A89   CALL     $A89            ; Call subroutine at A89
$8F0    $D894   DRW      V8, V9, #4      ; Draw 4-byte sprite at V8, V9
$8F2    $96B6   UNKNOWN  $96B6           ; Unknown 9xxx instruction
$8F4    $509B   UNKNOWN  $509B           ; Unknown 5xxx instruction
$8F6    $215B   CALL     $15B            ; Call subroutine at 15B
$8F8    $0A8C   SYS      $A8C            ; System call to A8C
$8FA    $D0FE   DRW      V0, VF, #E      ; Draw 14-byte sprite at V0, VF
$8FC    $D46F   DRW      V4, V6, #F      ; Draw 15-byte sprite at V4, V6
$8FE    $5925   UNKNOWN  $5925           ; Unknown 5xxx instruction
$900    $AED7   LD       I, $ED7         ; Load ED7 into I
$902    $25B2   CALL     $5B2            ; Call subroutine at 5B2
$904    $A09A   LD       I, $09A         ; Load 09A into I
$906    $0755   SYS      $755            ; System call to 755
$908    $160F   JP       $60F            ; Jump to 60F
$90A    $CC6C   RND      VC, #6C         ; VC = random & 6C
$90C    $419E   SNE      V1, #9E         ; Skip if V1 != 158
$90E    $EFE3   UNKNOWN  $EFE3           ; Unknown Exxx instruction
$910    $C7CC   RND      V7, #CC         ; V7 = random & CC
$912    $25DC   CALL     $5DC            ; Call subroutine at 5DC
$914    $3C24   SE       VC, #24         ; Skip if VC == 36
$916    $E4E1   UNKNOWN  $E4E1           ; Unknown Exxx instruction
$918    $FCD4   UNKNOWN  FCD4            ; Unknown Fxxx instruction
$91A    $AE86   LD       I, $E86         ; Load E86 into I
$91C    $AC2E   LD       I, $C2E         ; Load C2E into I
$91E    $0C58   SYS      $C58            ; System call to C58
$920    $AFD1   LD       I, $FD1         ; Load FD1 into I
$922    $2456   CALL     $456            ; Call subroutine at 456
$924    $62FD   LD       V2, #FD         ; Load 253 into V2
$926    $A37A   LD       I, $37A         ; Load 37A into I
$928    $9362   UNKNOWN  $9362           ; Unknown 9xxx instruction
$92A    $0DBD   SYS      $DBD            ; System call to DBD
$92C    $7F6F   ADD      VF, #6F         ; Add 111 to VF
$92E    $05E0   SYS      $5E0            ; System call to 5E0
$930    $290A   CALL     $90A            ; Call subroutine at 90A
$932    $E34F   UNKNOWN  $E34F           ; Unknown Exxx instruction
$934    $8431   OR       V4, V3          ; V4 |= V3
$936    $F524   UNKNOWN  F524            ; Unknown Fxxx instruction
$938    $15BD   JP       $5BD            ; Jump to 5BD
$93A    $D1E5   DRW      V1, VE, #5      ; Draw 5-byte sprite at V1, VE
$93C    $6372   LD       V3, #72         ; Load 114 into V3
$93E    $08B0   SYS      $8B0            ; System call to 8B0
$940    $1BB8   JP       $BB8            ; Jump to BB8
$942    $5028   UNKNOWN  $5028           ; Unknown 5xxx instruction
$944    $021D   SYS      $21D            ; System call to 21D
$946    $C695   RND      V6, #95         ; V6 = random & 95
$948    $9E17   UNKNOWN  $9E17           ; Unknown 9xxx instruction
$94A    $A76F   LD       I, $76F         ; Load 76F into I
$94C    $7690   ADD      V6, #90         ; Add 144 to V6
$94E    $FEE0   UNKNOWN  FEE0            ; Unknown Fxxx instruction
$950    $39C8   SE       V9, #C8         ; Skip if V9 == 200
$952    $2B70   CALL     $B70            ; Call subroutine at B70
$954    $E1B0   UNKNOWN  $E1B0           ; Unknown Exxx instruction
$956    $2A05   CALL     $A05            ; Call subroutine at A05
$958    $9E1E   UNKNOWN  $9E1E           ; Unknown 9xxx instruction
$95A    $075F   SYS      $75F            ; System call to 75F
$95C    $BDEE   JP       V0, $DEE        ; Jump to V0 + DEE
$95E    $BC39   JP       V0, $C39        ; Jump to V0 + C39
$960    $59AC   UNKNOWN  $59AC           ; Unknown 5xxx instruction
$962    $E882   UNKNOWN  $E882           ; Unknown Exxx instruction
$964    $2412   CALL     $412            ; Call subroutine at 412
$966    $003B   SYS      $03B            ; System call to 03B
$968    $679E   LD       V7, #9E         ; Load 158 into V7
$96A    $1612   JP       $612            ; Jump to 612
$96C    $52A1   UNKNOWN  $52A1           ; Unknown 5xxx instruction
$96E    $E9F2   UNKNOWN  $E9F2           ; Unknown Exxx instruction
$970    $9C77   UNKNOWN  $9C77           ; Unknown 9xxx instruction
$972    $1F26   JP       $F26            ; Jump to F26
$974    $EAEF   UNKNOWN  $EAEF           ; Unknown Exxx instruction
$976    $6AC5   LD       VA, #C5         ; Load 197 into VA
$978    $7407   ADD      V4, #07         ; Add 7 to V4
$97A    $77CD   ADD      V7, #CD         ; Add 205 to V7
$97C    $782D   ADD      V8, #2D         ; Add 45 to V8
$97E    $A87A   LD       I, $87A         ; Load 87A into I
$980    $1C34   JP       $C34            ; Jump to C34
$982    $4D82   SNE      VD, #82         ; Skip if VD != 130
$984    $3AF9   SE       VA, #F9         ; Skip if VA == 249
$986    $DCF6   DRW      VC, VF, #6      ; Draw 6-byte sprite at VC, VF
$988    $5481   UNKNOWN  $5481           ; Unknown 5xxx instruction
$98A    $F598   UNKNOWN  F598            ; Unknown Fxxx instruction
$98C    $2EB6   CALL     $EB6            ; Call subroutine at EB6
$98E    $07D0   SYS      $7D0            ; System call to 7D0
$990    $BCFE   JP       V0, $CFE        ; Jump to V0 + CFE
$992    $4CBA   SNE      VC, #BA         ; Skip if VC != 186
$994    $6750   LD       V7, #50         ; Load 80 into V7
$996    $0781   SYS      $781            ; System call to 781
$998    $E982   UNKNOWN  $E982           ; Unknown Exxx instruction
$99A    $2EFD   CALL     $EFD            ; Call subroutine at EFD
$99C    $01DE   SYS      $1DE            ; System call to 1DE
$99E    $702B   ADD      V0, #2B         ; Add 43 to V0
$9A0    $3AB3   SE       VA, #B3         ; Skip if VA == 179
$9A2    $D93D   DRW      V9, V3, #D      ; Draw 13-byte sprite at V9, V3
$9A4    $5250   SE       V2, V5          ; Skip if V2 == V5
$9A6    $4B09   SNE      VB, #09         ; Skip if VB != 9
$9A8    $87B0   LD       V7, VB          ; V7 = VB
$9AA    $0A4A   SYS      $A4A            ; System call to A4A
$9AC    $EEF9   UNKNOWN  $EEF9           ; Unknown Exxx instruction
$9AE    $C176   RND      V1, #76         ; V1 = random & 76
$9B0    $E737   UNKNOWN  $E737           ; Unknown Exxx instruction
$9B2    $0A99   SYS      $A99            ; System call to A99
$9B4    $C546   RND      V5, #46         ; V5 = random & 46
$9B6    $78F7   ADD      V8, #F7         ; Add 247 to V8
$9B8    $2A7C   CALL     $A7C            ; Call subroutine at A7C
$9BA    $10E3   JP       $0E3            ; Jump to 0E3
$9BC    $7F24   ADD      VF, #24         ; Add 36 to VF
$9BE    $CB31   RND      VB, #31         ; VB = random & 31
$9C0    $7B0F   ADD      VB, #0F         ; Add 15 to VB
$9C2    $611B   LD       V1, #1B         ; Load 27 into V1
$9C4    $2CE4   CALL     $CE4            ; Call subroutine at CE4
$9C6    $74FC   ADD      V4, #FC         ; Add 252 to V4
$9C8    $C917   RND      V9, #17         ; V9 = random & 17
$9CA    $B8DB   JP       V0, $8DB        ; Jump to V0 + 8DB
$9CC    $701A   ADD      V0, #1A         ; Add 26 to V0
$9CE    $A55F   LD       I, $55F         ; Load 55F into I
$9D0    $FD3F   UNKNOWN  FD3F            ; Unknown Fxxx instruction
$9D2    $246A   CALL     $46A            ; Call subroutine at 46A
$9D4    $43B3   SNE      V3, #B3         ; Skip if V3 != 179
$9D6    $4C2F   SNE      VC, #2F         ; Skip if VC != 47
$9D8    $0A2B   SYS      $A2B            ; System call to A2B
$9DA    $6451   LD       V4, #51         ; Load 81 into V4
$9DC    $3C7B   SE       VC, #7B         ; Skip if VC == 123
$9DE    $CC65   RND      VC, #65         ; VC = random & 65
$9E0    $03EC   SYS      $3EC            ; System call to 3EC
$9E2    $3D36   SE       VD, #36         ; Skip if VD == 54
$9E4    $A718   LD       I, $718         ; Load 718 into I
$9E6    $EE2A   UNKNOWN  $EE2A           ; Unknown Exxx instruction
$9E8    $11FD   JP       $1FD            ; Jump to 1FD
$9EA    $DD4A   DRW      VD, V4, #A      ; Draw 10-byte sprite at VD, V4
$9EC    $D14A   DRW      V1, V4, #A      ; Draw 10-byte sprite at V1, V4
$9EE    $A2C9   LD       I, $2C9         ; Load 2C9 into I
$9F0    $5C14   UNKNOWN  $5C14           ; Unknown 5xxx instruction
$9F2    $0D54   SYS      $D54            ; System call to D54
$9F4    $B17A   JP       V0, $17A        ; Jump to V0 + 17A
$9F6    $7DCD   ADD      VD, #CD         ; Add 205 to VD
$9F8    $55CB   UNKNOWN  $55CB           ; Unknown 5xxx instruction
$9FA    $44E7   SNE      V4, #E7         ; Skip if V4 != 231
$9FC    $DAC0   DRW      VA, VC, #0      ; Draw 0-byte sprite at VA, VC
$9FE    $8EC5   SUB      VE, VC          ; VE -= VC, VF = !borrow
$A00    $D904   DRW      V9, V0, #4      ; Draw 4-byte sprite at V9, V0
$A02    $9548   UNKNOWN  $9548           ; Unknown 9xxx instruction
$A04    $A782   LD       I, $782         ; Load 782 into I
$A06    $C9E3   RND      V9, #E3         ; V9 = random & E3
$A08    $C030   RND      V0, #30         ; V0 = random & 30
$A0A    $5D6F   UNKNOWN  $5D6F           ; Unknown 5xxx instruction
$A0C    $B8DF   JP       V0, $8DF        ; Jump to V0 + 8DF
$A0E    $5ADB   UNKNOWN  $5ADB           ; Unknown 5xxx instruction
$A10    $1EEE   JP       $EEE            ; Jump to EEE
$A12    $01D2   SYS      $1D2            ; System call to 1D2
$A14    $BEF7   JP       V0, $EF7        ; Jump to V0 + EF7
$A16    $63CA   LD       V3, #CA         ; Load 202 into V3
$A18    $EB1C   UNKNOWN  $EB1C           ; Unknown Exxx instruction
$A1A    $F6D5   UNKNOWN  F6D5            ; Unknown Fxxx instruction
$A1C    $23E5   CALL     $3E5            ; Call subroutine at 3E5
$A1E    $D5E4   DRW      V5, VE, #4      ; Draw 4-byte sprite at V5, VE
$A20    $44D5   SNE      V4, #D5         ; Skip if V4 != 213
$A22    $268C   CALL     $68C            ; Call subroutine at 68C
$A24    $6D87   LD       VD, #87         ; Load 135 into VD
$A26    $CB41   RND      VB, #41         ; VB = random & 41
$A28    $9CDF   UNKNOWN  $9CDF           ; Unknown 9xxx instruction
$A2A    $ED62   UNKNOWN  $ED62           ; Unknown Exxx instruction
$A2C    $C1A2   RND      V1, #A2         ; V1 = random & A2
$A2E    $62A6   LD       V2, #A6         ; Load 166 into V2
$A30    $3294   SE       V2, #94         ; Skip if V2 == 148
$A32    $A1D8   LD       I, $1D8         ; Load 1D8 into I
$A34    $4F05   SNE      VF, #05         ; Skip if VF != 5
$A36    $D32C   DRW      V3, V2, #C      ; Draw 12-byte sprite at V3, V2
$A38    $9720   SNE      V7, V2          ; Skip if V7 != V2
$A3A    $1E56   JP       $E56            ; Jump to E56
$A3C    $B76E   JP       V0, $76E        ; Jump to V0 + 76E
$A3E    $4C38   SNE      VC, #38         ; Skip if VC != 56
$A40    $21D1   CALL     $1D1            ; Call subroutine at 1D1
$A42    $F61E   ADD      I, V6           ; I += V6
$A44    $2E62   CALL     $E62            ; Call subroutine at E62
$A46    $2D48   CALL     $D48            ; Call subroutine at D48
$A48    $631E   LD       V3, #1E         ; Load 30 into V3
$A4A    $4E56   SNE      VE, #56         ; Skip if VE != 86
$A4C    $C4C9   RND      V4, #C9         ; V4 = random & C9
$A4E    $0848   SYS      $848            ; System call to 848
$A50    $9CF7   UNKNOWN  $9CF7           ; Unknown 9xxx instruction
$A52    $D50A   DRW      V5, V0, #A      ; Draw 10-byte sprite at V5, V0
$A54    $365C   SE       V6, #5C         ; Skip if V6 == 92
$A56    $CC4A   RND      VC, #4A         ; VC = random & 4A
$A58    $2415   CALL     $415            ; Call subroutine at 415
$A5A    $EBDE   UNKNOWN  $EBDE           ; Unknown Exxx instruction
$A5C    $557D   UNKNOWN  $557D           ; Unknown 5xxx instruction
$A5E    $0757   SYS      $757            ; System call to 757
$A60    $2082   CALL     $082            ; Call subroutine at 082
$A62    $575E   UNKNOWN  $575E           ; Unknown 5xxx instruction
$A64    $6BA6   LD       VB, #A6         ; Load 166 into VB
$A66    $00A4   SYS      $0A4            ; System call to 0A4
$A68    $8B32   AND      VB, V3          ; VB &= V3
$A6A    $E07D   UNKNOWN  $E07D           ; Unknown Exxx instruction
$A6C    $DEE0   DRW      VE, VE, #0      ; Draw 0-byte sprite at VE, VE
$A6E    $58A2   UNKNOWN  $58A2           ; Unknown 5xxx instruction
$A70    $0A00   SYS      $A00            ; System call to A00
$A72    $349B   SE       V4, #9B         ; Skip if V4 == 155
$A74    $8EB8   UNKNOWN  8EB8            ; Unknown 8xxx instruction
$A76    $ED49   UNKNOWN  $ED49           ; Unknown Exxx instruction
$A78    $D20C   DRW      V2, V0, #C      ; Draw 12-byte sprite at V2, V0
$A7A    $2A9C   CALL     $A9C            ; Call subroutine at A9C
$A7C    $287B   CALL     $87B            ; Call subroutine at 87B
$A7E    $5466   UNKNOWN  $5466           ; Unknown 5xxx instruction
$A80    $5D3A   UNKNOWN  $5D3A           ; Unknown 5xxx instruction
$A82    $C09A   RND      V0, #9A         ; V0 = random & 9A
$A84    $16EB   JP       $6EB            ; Jump to 6EB
$A86    $1171   JP       $171            ; Jump to 171
$A88    $75E3   ADD      V5, #E3         ; Add 227 to V5
$A8A    $0B1F   SYS      $B1F            ; System call to B1F
$A8C    $6297   LD       V2, #97         ; Load 151 into V2
$A8E    $FFF4   UNKNOWN  FFF4            ; Unknown Fxxx instruction
$A90    $F38C   UNKNOWN  F38C            ; Unknown Fxxx instruction
$A92    $9E93   UNKNOWN  $9E93           ; Unknown 9xxx instruction
$A94    $ED71   UNKNOWN  $ED71           ; Unknown Exxx instruction
$A96    $C6C4   RND      V6, #C4         ; V6 = random & C4
$A98    $06C6   SYS      $6C6            ; System call to 6C6
$A9A    $BFF5   JP       V0, $FF5        ; Jump to V0 + FF5
$A9C    $3786   SE       V7, #86         ; Skip if V7 == 134
$A9E    $3FD0   SE       VF, #D0         ; Skip if VF == 208
$AA0    $7C73   ADD      VC, #73         ; Add 115 to VC
$AA2    $1A69   JP       $A69            ; Jump to A69
$AA4    $A6F0   LD       I, $6F0         ; Load 6F0 into I
$AA6    $9BE9   UNKNOWN  $9BE9           ; Unknown 9xxx instruction
$AA8    $4E01   SNE      VE, #01         ; Skip if VE != 1
$AAA    $91DE   UNKNOWN  $91DE           ; Unknown 9xxx instruction
$AAC    $EA31   UNKNOWN  $EA31           ; Unknown Exxx instruction
$AAE    $4923   SNE      V9, #23         ; Skip if V9 != 35
$AB0    $C544   RND      V5, #44         ; V5 = random & 44
$AB2    $3B77   SE       VB, #77         ; Skip if VB == 119
$AB4    $C969   RND      V9, #69         ; V9 = random & 69
$AB6    $3159   SE       V1, #59         ; Skip if V1 == 89
$AB8    $9DB9   UNKNOWN  $9DB9           ; Unknown 9xxx instruction
$ABA    $452B   SNE      V5, #2B         ; Skip if V5 != 43
$ABC    $C5CA   RND      V5, #CA         ; V5 = random & CA
$ABE    $3562   SE       V5, #62         ; Skip if V5 == 98
$AC0    $FDE9   UNKNOWN  FDE9            ; Unknown Fxxx instruction
$AC2    $BE0F   JP       V0, $E0F        ; Jump to V0 + E0F
$AC4    $0599   SYS      $599            ; System call to 599
$AC6    $AFFF   LD       I, $FFF         ; Load FFF into I
$AC8    $6FD4   LD       VF, #D4         ; Load 212 into VF
$ACA    $7D44   ADD      VD, #44         ; Add 68 to VD
$ACC    $5A84   UNKNOWN  $5A84           ; Unknown 5xxx instruction
$ACE    $F39F   UNKNOWN  F39F            ; Unknown Fxxx instruction
$AD0    $8334   ADD      V3, V3          ; V3 += V3, VF = carry
$AD2    $B5A0   JP       V0, $5A0        ; Jump to V0 + 5A0
$AD4    $8E26   SHR      VE              ; VE >>= 1, VF = LSB
$AD6    $7A97   ADD      VA, #97         ; Add 151 to VA
$AD8    $23E2   CALL     $3E2            ; Call subroutine at 3E2
$ADA    $6FBC   LD       VF, #BC         ; Load 188 into VF
$ADC    $3D70   SE       VD, #70         ; Skip if VD == 112
$ADE    $8BF2   AND      VB, VF          ; VB &= VF
$AE0    $77E8   ADD      V7, #E8         ; Add 232 to V7
$AE2    $A90C   LD       I, $90C         ; Load 90C into I
$AE4    $087B   SYS      $87B            ; System call to 87B
$AE6    $6127   LD       V1, #27         ; Load 39 into V1
$AE8    $A2B0   LD       I, $2B0         ; Load 2B0 into I
$AEA    $518E   UNKNOWN  $518E           ; Unknown 5xxx instruction
$AEC    $9BA5   UNKNOWN  $9BA5           ; Unknown 9xxx instruction
$AEE    $E27C   UNKNOWN  $E27C           ; Unknown Exxx instruction
$AF0    $DED4   DRW      VE, VD, #4      ; Draw 4-byte sprite at VE, VD
$AF2    $BAE8   JP       V0, $AE8        ; Jump to V0 + AE8
$AF4    $CAAC   RND      VA, #AC         ; VA = random & AC
$AF6    $6C29   LD       VC, #29         ; Load 41 into VC
$AF8    $5E0C   UNKNOWN  $5E0C           ; Unknown 5xxx instruction
$AFA    $6007   LD       V0, #07         ; Load 7 into V0
$AFC    $D3DD   DRW      V3, VD, #D      ; Draw 13-byte sprite at V3, VD
$AFE    $B9C7   JP       V0, $9C7        ; Jump to V0 + 9C7
$B00    $D405   DRW      V4, V0, #5      ; Draw 5-byte sprite at V4, V0
$B02    $59B8   UNKNOWN  $59B8           ; Unknown 5xxx instruction
$B04    $9997   UNKNOWN  $9997           ; Unknown 9xxx instruction
$B06    $DB67   DRW      VB, V6, #7      ; Draw 7-byte sprite at VB, V6
$B08    $CE90   RND      VE, #90         ; VE = random & 90
$B0A    $DF84   DRW      VF, V8, #4      ; Draw 4-byte sprite at VF, V8
$B0C    $3DCC   SE       VD, #CC         ; Skip if VD == 204
$B0E    $FE31   UNKNOWN  FE31            ; Unknown Fxxx instruction
$B10    $CF7C   RND      VF, #7C         ; VF = random & 7C
$B12    $2C1E   CALL     $C1E            ; Call subroutine at C1E
$B14    $63B2   LD       V3, #B2         ; Load 178 into V3
$B16    $4FD5   SNE      VF, #D5         ; Skip if VF != 213
$B18    $43F2   SNE      V3, #F2         ; Skip if V3 != 242
$B1A    $77E7   ADD      V7, #E7         ; Add 231 to V7
$B1C    $3602   SE       V6, #02         ; Skip if V6 == 2
$B1E    $71F2   ADD      V1, #F2         ; Add 242 to V1
$B20    $1CDB   JP       $CDB            ; Jump to CDB
$B22    $35D3   SE       V5, #D3         ; Skip if V5 == 211
$B24    $23A4   CALL     $3A4            ; Call subroutine at 3A4
$B26    $5532   UNKNOWN  $5532           ; Unknown 5xxx instruction
$B28    $17CF   JP       $7CF            ; Jump to 7CF
$B2A    $4C3D   SNE      VC, #3D         ; Skip if VC != 61
$B2C    $9854   UNKNOWN  $9854           ; Unknown 9xxx instruction
$B2E    $81CF   UNKNOWN  81CF            ; Unknown 8xxx instruction
$B30    $B554   JP       V0, $554        ; Jump to V0 + 554
$B32    $5EAC   UNKNOWN  $5EAC           ; Unknown 5xxx instruction
$B34    $F5FD   UNKNOWN  F5FD            ; Unknown Fxxx instruction
$B36    $726C   ADD      V2, #6C         ; Add 108 to V2
$B38    $B7BE   JP       V0, $7BE        ; Jump to V0 + 7BE
$B3A    $4F12   SNE      VF, #12         ; Skip if VF != 18
$B3C    $A05C   LD       I, $05C         ; Load 05C into I
$B3E    $01F6   SYS      $1F6            ; System call to 1F6
$B40    $BCD2   JP       V0, $CD2        ; Jump to V0 + CD2
$B42    $0E36   SYS      $E36            ; System call to E36
$B44    $B2DD   JP       V0, $2DD        ; Jump to V0 + 2DD
$B46    $F936   UNKNOWN  F936            ; Unknown Fxxx instruction
$B48    $D956   DRW      V9, V5, #6      ; Draw 6-byte sprite at V9, V5
$B4A    $A866   LD       I, $866         ; Load 866 into I
$B4C    $7CDB   ADD      VC, #DB         ; Add 219 to VC
$B4E    $1AF9   JP       $AF9            ; Jump to AF9
$B50    $CCBC   RND      VC, #BC         ; VC = random & BC
$B52    $BD33   JP       V0, $D33        ; Jump to V0 + D33
$B54    $CF9F   RND      VF, #9F         ; VF = random & 9F
$B56    $477A   SNE      V7, #7A         ; Skip if V7 != 122
$B58    $D0BF   DRW      V0, VB, #F      ; Draw 15-byte sprite at V0, VB
$B5A    $2ED3   CALL     $ED3            ; Call subroutine at ED3
$B5C    $1EC7   JP       $EC7            ; Jump to EC7
$B5E    $073D   SYS      $73D            ; System call to 73D
$B60    $DC94   DRW      VC, V9, #4      ; Draw 4-byte sprite at VC, V9
$B62    $6DD9   LD       VD, #D9         ; Load 217 into VD
$B64    $0BC2   SYS      $BC2            ; System call to BC2
$B66    $B4C2   JP       V0, $4C2        ; Jump to V0 + 4C2
$B68    $1209   JP       $209            ; Jump to 209
$B6A    $29C9   CALL     $9C9            ; Call subroutine at 9C9
$B6C    $84A6   SHR      V4              ; V4 >>= 1, VF = LSB
$B6E    $314F   SE       V1, #4F         ; Skip if V1 == 79
$B70    $CFDD   RND      VF, #DD         ; VF = random & DD
$B72    $CF2D   RND      VF, #2D         ; VF = random & 2D
$B74    $D763   DRW      V7, V6, #3      ; Draw 3-byte sprite at V7, V6
$B76    $F498   UNKNOWN  F498            ; Unknown Fxxx instruction
$B78    $C9B6   RND      V9, #B6         ; V9 = random & B6
$B7A    $F5C4   UNKNOWN  F5C4            ; Unknown Fxxx instruction
$B7C    $84DE   SHL      V4              ; V4 <<= 1, VF = MSB
$B7E    $0857   SYS      $857            ; System call to 857
$B80    $498E   SNE      V9, #8E         ; Skip if V9 != 142
$B82    $CAB5   RND      VA, #B5         ; VA = random & B5
$B84    $803F   UNKNOWN  803F            ; Unknown 8xxx instruction
$B86    $5DEF   UNKNOWN  $5DEF           ; Unknown 5xxx instruction
$B88    $01E9   SYS      $1E9            ; System call to 1E9
$B8A    $10E7   JP       $0E7            ; Jump to 0E7
$B8C    $57ED   UNKNOWN  $57ED           ; Unknown 5xxx instruction
$B8E    $BDAC   JP       V0, $DAC        ; Jump to V0 + DAC
$B90    $9A15   UNKNOWN  $9A15           ; Unknown 9xxx instruction
$B92    $BAFC   JP       V0, $AFC        ; Jump to V0 + AFC
$B94    $29D4   CALL     $9D4            ; Call subroutine at 9D4
$B96    $FB16   UNKNOWN  FB16            ; Unknown Fxxx instruction
$B98    $25E0   CALL     $5E0            ; Call subroutine at 5E0
$B9A    $642A   LD       V4, #2A         ; Load 42 into V4
$B9C    $16D4   JP       $6D4            ; Jump to 6D4
$B9E    $AC19   LD       I, $C19         ; Load C19 into I
$BA0    $37D6   SE       V7, #D6         ; Skip if V7 == 214
$BA2    $DB14   DRW      VB, V1, #4      ; Draw 4-byte sprite at VB, V1
$BA4    $96E3   UNKNOWN  $96E3           ; Unknown 9xxx instruction
$BA6    $CB70   RND      VB, #70         ; VB = random & 70
$BA8    $363E   SE       V6, #3E         ; Skip if V6 == 62
$BAA    $C362   RND      V3, #62         ; V3 = random & 62
$BAC    $FB9F   UNKNOWN  FB9F            ; Unknown Fxxx instruction
$BAE    $E878   UNKNOWN  $E878           ; Unknown Exxx instruction
$BB0    $291D   CALL     $91D            ; Call subroutine at 91D
$BB2    $B7C5   JP       V0, $7C5        ; Jump to V0 + 7C5
$BB4    $31F1   SE       V1, #F1         ; Skip if V1 == 241
$BB6    $4856   SNE      V8, #56         ; Skip if V8 != 86
$BB8    $AC45   LD       I, $C45         ; Load C45 into I
$BBA    $CA7A   RND      VA, #7A         ; VA = random & 7A
$BBC    $4FFE   SNE      VF, #FE         ; Skip if VF != 254
$BBE    $6D22   LD       VD, #22         ; Load 34 into VD
$BC0    $8AFE   SHL      VA              ; VA <<= 1, VF = MSB
$BC2    $708A   ADD      V0, #8A         ; Add 138 to V0
$BC4    $FA87   UNKNOWN  FA87            ; Unknown Fxxx instruction
$BC6    $3623   SE       V6, #23         ; Skip if V6 == 35
$BC8    $B31C   JP       V0, $31C        ; Jump to V0 + 31C
$BCA    $FE12   UNKNOWN  FE12            ; Unknown Fxxx instruction
$BCC    $600A   LD       V0, #0A         ; Load 10 into V0
$BCE    $DCDD   DRW      VC, VD, #D      ; Draw 13-byte sprite at VC, VD
$BD0    $2DBB   CALL     $DBB            ; Call subroutine at DBB
$BD2    $7DC9   ADD      VD, #C9         ; Add 201 to VD
$BD4    $629C   LD       V2, #9C         ; Load 156 into V2
$BD6    $0EC2   SYS      $EC2            ; System call to EC2
$BD8    $6B79   LD       VB, #79         ; Load 121 into VB
$BDA    $6FAE   LD       VF, #AE         ; Load 174 into VF
$BDC    $5C4D   UNKNOWN  $5C4D           ; Unknown 5xxx instruction
$BDE    $F5DA   UNKNOWN  F5DA            ; Unknown Fxxx instruction
$BE0    $1823   JP       $823            ; Jump to 823
$BE2    $E053   UNKNOWN  $E053           ; Unknown Exxx instruction
$BE4    $23DE   CALL     $3DE            ; Call subroutine at 3DE
$BE6    $D4B8   DRW      V4, VB, #8      ; Draw 8-byte sprite at V4, VB
$BE8    $5AC3   UNKNOWN  $5AC3           ; Unknown 5xxx instruction
$BEA    $F02E   UNKNOWN  F02E            ; Unknown Fxxx instruction
$BEC    $CF2C   RND      VF, #2C         ; VF = random & 2C
$BEE    $116E   JP       $16E            ; Jump to 16E
$BF0    $49EB   SNE      V9, #EB         ; Skip if V9 != 235
$BF2    $F83B   UNKNOWN  F83B            ; Unknown Fxxx instruction
$BF4    $2D2D   CALL     $D2D            ; Call subroutine at D2D
$BF6    $05C5   SYS      $5C5            ; System call to 5C5
$BF8    $ECD3   UNKNOWN  $ECD3           ; Unknown Exxx instruction
$BFA    $EBBA   UNKNOWN  $EBBA           ; Unknown Exxx instruction
$BFC    $4FFC   SNE      VF, #FC         ; Skip if VF != 252
$BFE    $751B   ADD      V5, #1B         ; Add 27 to V5
$C00    $40A9   SNE      V0, #A9         ; Skip if V0 != 169
$C02    $4296   SNE      V2, #96         ; Skip if V2 != 150
$C04    $2A73   CALL     $A73            ; Call subroutine at A73
$C06    $9F6C   UNKNOWN  $9F6C           ; Unknown 9xxx instruction
$C08    $2F9D   CALL     $F9D            ; Call subroutine at F9D
$C0A    $2FA2   CALL     $FA2            ; Call subroutine at FA2
$C0C    $3B18   SE       VB, #18         ; Skip if VB == 24
$C0E    $7502   ADD      V5, #02         ; Add 2 to V5
$C10    $DE47   DRW      VE, V4, #7      ; Draw 7-byte sprite at VE, V4
$C12    $3AB0   SE       VA, #B0         ; Skip if VA == 176
$C14    $0093   SYS      $093            ; System call to 093
$C16    $2DBA   CALL     $DBA            ; Call subroutine at DBA
$C18    $CDE5   RND      VD, #E5         ; VD = random & E5
$C1A    $2D8E   CALL     $D8E            ; Call subroutine at D8E
$C1C    $F425   UNKNOWN  F425            ; Unknown Fxxx instruction
$C1E    $1812   JP       $812            ; Jump to 812
$C20    $113C   JP       $13C            ; Jump to 13C
$C22    $50E7   UNKNOWN  $50E7           ; Unknown 5xxx instruction
$C24    $BCED   JP       V0, $CED        ; Jump to V0 + CED
$C26    $2DE1   CALL     $DE1            ; Call subroutine at DE1
$C28    $AF24   LD       I, $F24         ; Load F24 into I
$C2A    $8F0F   UNKNOWN  8F0F            ; Unknown 8xxx instruction
$C2C    $CBB0   RND      VB, #B0         ; VB = random & B0
$C2E    $A4DB   LD       I, $4DB         ; Load 4DB into I
$C30    $1F69   JP       $F69            ; Jump to F69
$C32    $860E   SHL      V6              ; V6 <<= 1, VF = MSB
$C34    $EE10   UNKNOWN  $EE10           ; Unknown Exxx instruction
$C36    $BA52   JP       V0, $A52        ; Jump to V0 + A52
$C38    $7301   ADD      V3, #01         ; Add 1 to V3
$C3A    $2230   CALL     $230            ; Call subroutine at 230
$C3C    $A8A2   LD       I, $8A2         ; Load 8A2 into I
$C3E    $F7E9   UNKNOWN  F7E9            ; Unknown Fxxx instruction
$C40    $2BA3   CALL     $BA3            ; Call subroutine at BA3
$C42    $E370   UNKNOWN  $E370           ; Unknown Exxx instruction
$C44    $744F   ADD      V4, #4F         ; Add 79 to V4
$C46    $3979   SE       V9, #79         ; Skip if V9 == 121
$C48    $1856   JP       $856            ; Jump to 856
$C4A    $BE87   JP       V0, $E87        ; Jump to V0 + E87
$C4C    $0E13   SYS      $E13            ; System call to E13
$C4E    $0735   SYS      $735            ; System call to 735
$C50    $1179   JP       $179            ; Jump to 179
$C52    $870D   UNKNOWN  870D            ; Unknown 8xxx instruction
$C54    $0258   SYS      $258            ; System call to 258
$C56    $5F22   UNKNOWN  $5F22           ; Unknown 5xxx instruction
$C58    $9E9A   UNKNOWN  $9E9A           ; Unknown 9xxx instruction
$C5A    $2936   CALL     $936            ; Call subroutine at 936
$C5C    $6EC3   LD       VE, #C3         ; Load 195 into VE
$C5E    $3DD4   SE       VD, #D4         ; Skip if VD == 212
$C60    $E26C   UNKNOWN  $E26C           ; Unknown Exxx instruction
$C62    $18DC   JP       $8DC            ; Jump to 8DC
$C64    $CEC7   RND      VE, #C7         ; VE = random & C7
$C66    $7EBB   ADD      VE, #BB         ; Add 187 to VE
$C68    $A2D6   LD       I, $2D6         ; Load 2D6 into I
$C6A    $1A04   JP       $A04            ; Jump to A04
$C6C    $149E   JP       $49E            ; Jump to 49E
$C6E    $5EF3   UNKNOWN  $5EF3           ; Unknown 5xxx instruction
$C70    $896C   UNKNOWN  896C            ; Unknown 8xxx instruction
$C72    $FAD9   UNKNOWN  FAD9            ; Unknown Fxxx instruction
$C74    $36AC   SE       V6, #AC         ; Skip if V6 == 172
$C76    $E91F   UNKNOWN  $E91F           ; Unknown Exxx instruction
$C78    $C487   RND      V4, #87         ; V4 = random & 87
$C7A    $478F   SNE      V7, #8F         ; Skip if V7 != 143
$C7C    $8CDF   UNKNOWN  8CDF            ; Unknown 8xxx instruction
$C7E    $7009   ADD      V0, #09         ; Add 9 to V0
$C80    $FA51   UNKNOWN  FA51            ; Unknown Fxxx instruction
$C82    $9BE2   UNKNOWN  $9BE2           ; Unknown 9xxx instruction
$C84    $D8C5   DRW      V8, VC, #5      ; Draw 5-byte sprite at V8, VC
$C86    $2175   CALL     $175            ; Call subroutine at 175
$C88    $586B   UNKNOWN  $586B           ; Unknown 5xxx instruction
$C8A    $E535   UNKNOWN  $E535           ; Unknown Exxx instruction
$C8C    $5BE8   UNKNOWN  $5BE8           ; Unknown 5xxx instruction
$C8E    $F1B8   UNKNOWN  F1B8            ; Unknown Fxxx instruction
$C90    $6EEE   LD       VE, #EE         ; Load 238 into VE
$C92    $AEB6   LD       I, $EB6         ; Load EB6 into I
$C94    $B82F   JP       V0, $82F        ; Jump to V0 + 82F
$C96    $8BA5   SUB      VB, VA          ; VB -= VA, VF = !borrow
$C98    $02FC   SYS      $2FC            ; System call to 2FC
$C9A    $4369   SNE      V3, #69         ; Skip if V3 != 105
$C9C    $62C5   LD       V2, #C5         ; Load 197 into V2
$C9E    $1B77   JP       $B77            ; Jump to B77
$CA0    $C2DA   RND      V2, #DA         ; V2 = random & DA
$CA2    $2D6F   CALL     $D6F            ; Call subroutine at D6F
$CA4    $A93A   LD       I, $93A         ; Load 93A into I
$CA6    $C548   RND      V5, #48         ; V5 = random & 48
$CA8    $9352   UNKNOWN  $9352           ; Unknown 9xxx instruction
$CAA    $6764   LD       V7, #64         ; Load 100 into V7
$CAC    $6C47   LD       VC, #47         ; Load 71 into VC
$CAE    $17B3   JP       $7B3            ; Jump to 7B3
$CB0    $4A58   SNE      VA, #58         ; Skip if VA != 88
$CB2    $DE9E   DRW      VE, V9, #E      ; Draw 14-byte sprite at VE, V9
$CB4    $43DC   SNE      V3, #DC         ; Skip if V3 != 220
$CB6    $F90A   LD       V9, K           ; Wait for key press, store in V9
$CB8    $0EEA   SYS      $EEA            ; System call to EEA
$CBA    $9394   UNKNOWN  $9394           ; Unknown 9xxx instruction
$CBC    $4005   SNE      V0, #05         ; Skip if V0 != 5
$CBE    $D4E9   DRW      V4, VE, #9      ; Draw 9-byte sprite at V4, VE
$CC0    $E7FE   UNKNOWN  $E7FE           ; Unknown Exxx instruction
$CC2    $6A07   LD       VA, #07         ; Load 7 into VA
$CC4    $414D   SNE      V1, #4D         ; Skip if V1 != 77
$CC6    $BE8B   JP       V0, $E8B        ; Jump to V0 + E8B
$CC8    $DEBD   DRW      VE, VB, #D      ; Draw 13-byte sprite at VE, VB
$CCA    $FF89   UNKNOWN  FF89            ; Unknown Fxxx instruction
$CCC    $4E0A   SNE      VE, #0A         ; Skip if VE != 10
$CCE    $10E0   JP       $0E0            ; Jump to 0E0
$CD0    $612D   LD       V1, #2D         ; Load 45 into V1
$CD2    $8C5B   UNKNOWN  8C5B            ; Unknown 8xxx instruction
$CD4    $CCA8   RND      VC, #A8         ; VC = random & A8
$CD6    $F2F3   UNKNOWN  F2F3            ; Unknown Fxxx instruction
$CD8    $1271   JP       $271            ; Jump to 271
$CDA    $DDF3   DRW      VD, VF, #3      ; Draw 3-byte sprite at VD, VF
$CDC    $1267   JP       $267            ; Jump to 267
$CDE    $795B   ADD      V9, #5B         ; Add 91 to V9
$CE0    $26F2   CALL     $6F2            ; Call subroutine at 6F2
$CE2    $045A   SYS      $45A            ; System call to 45A
$CE4    $E4CD   UNKNOWN  $E4CD           ; Unknown Exxx instruction
$CE6    $A2C3   LD       I, $2C3         ; Load 2C3 into I
$CE8    $AFF5   LD       I, $FF5         ; Load FF5 into I
$CEA    $1F44   JP       $F44            ; Jump to F44
$CEC    $D280   DRW      V2, V8, #0      ; Draw 0-byte sprite at V2, V8
$CEE    $2274   CALL     $274            ; Call subroutine at 274
$CF0    $9D93   UNKNOWN  $9D93           ; Unknown 9xxx instruction
$CF2    $B5D7   JP       V0, $5D7        ; Jump to V0 + 5D7
$CF4    $A74C   LD       I, $74C         ; Load 74C into I
$CF6    $AD31   LD       I, $D31         ; Load D31 into I
$CF8    $280A   CALL     $80A            ; Call subroutine at 80A
$CFA    $2D69   CALL     $D69            ; Call subroutine at D69
$CFC    $8193   XOR      V1, V9          ; V1 ^= V9
$CFE    $7243   ADD      V2, #43         ; Add 67 to V2
$D00    $82AF   UNKNOWN  82AF            ; Unknown 8xxx instruction
$D02    $A921   LD       I, $921         ; Load 921 into I
$D04    $D3D0   DRW      V3, VD, #0      ; Draw 0-byte sprite at V3, VD
$D06    $DF04   DRW      VF, V0, #4      ; Draw 4-byte sprite at VF, V0
$D08    $DFEB   DRW      VF, VE, #B      ; Draw 11-byte sprite at VF, VE
$D0A    $06AF   SYS      $6AF            ; System call to 6AF
$D0C    $5798   UNKNOWN  $5798           ; Unknown 5xxx instruction
$D0E    $33D7   SE       V3, #D7         ; Skip if V3 == 215
$D10    $1CC3   JP       $CC3            ; Jump to CC3
$D12    $ADEF   LD       I, $DEF         ; Load DEF into I
$D14    $067F   SYS      $67F            ; System call to 67F
$D16    $F833   LD       B, V8           ; Store BCD of V8 at I, I+1, I+2
$D18    $178B   JP       $78B            ; Jump to 78B
$D1A    $BBF6   JP       V0, $BF6        ; Jump to V0 + BF6
$D1C    $6FEF   LD       VF, #EF         ; Load 239 into VF
$D1E    $432C   SNE      V3, #2C         ; Skip if V3 != 44
$D20    $E3C0   UNKNOWN  $E3C0           ; Unknown Exxx instruction
$D22    $3AE0   SE       VA, #E0         ; Skip if VA == 224
$D24    $FAF9   UNKNOWN  FAF9            ; Unknown Fxxx instruction
$D26    $5CA3   UNKNOWN  $5CA3           ; Unknown 5xxx instruction
$D28    $DB7C   DRW      VB, V7, #C      ; Draw 12-byte sprite at VB, V7
$D2A    $839E   SHL      V3              ; V3 <<= 1, VF = MSB
$D2C    $4CCF   SNE      VC, #CF         ; Skip if VC != 207
$D2E    $E47D   UNKNOWN  $E47D           ; Unknown Exxx instruction
$D30    $A495   LD       I, $495         ; Load 495 into I
$D32    $32A1   SE       V2, #A1         ; Skip if V2 == 161
$D34    $B575   JP       V0, $575        ; Jump to V0 + 575
$D36    $B936   JP       V0, $936        ; Jump to V0 + 936
$D38    $BA48   JP       V0, $A48        ; Jump to V0 + A48
$D3A    $E570   UNKNOWN  $E570           ; Unknown Exxx instruction
$D3C    $FF2C   UNKNOWN  FF2C            ; Unknown Fxxx instruction
$D3E    $00F9   SYS      $0F9            ; System call to 0F9
$D40    $F089   UNKNOWN  F089            ; Unknown Fxxx instruction
$D42    $8009   UNKNOWN  8009            ; Unknown 8xxx instruction
$D44    $4938   SNE      V9, #38         ; Skip if V9 != 56
$D46    $74E8   ADD      V4, #E8         ; Add 232 to V4
$D48    $B0BD   JP       V0, $0BD        ; Jump to V0 + 0BD
$D4A    $54BE   UNKNOWN  $54BE           ; Unknown 5xxx instruction
$D4C    $396C   SE       V9, #6C         ; Skip if V9 == 108
$D4E    $0116   SYS      $116            ; System call to 116
$D50    $E16D   UNKNOWN  $E16D           ; Unknown Exxx instruction
$D52    $BCFC   JP       V0, $CFC        ; Jump to V0 + CFC
$D54    $E567   UNKNOWN  $E567           ; Unknown Exxx instruction
$D56    $AD6D   LD       I, $D6D         ; Load D6D into I
$D58    $EA2F   UNKNOWN  $EA2F           ; Unknown Exxx instruction
$D5A    $EE83   UNKNOWN  $EE83           ; Unknown Exxx instruction
$D5C    $162B   JP       $62B            ; Jump to 62B
$D5E    $BFE9   JP       V0, $FE9        ; Jump to V0 + FE9
$D60    $B8C3   JP       V0, $8C3        ; Jump to V0 + 8C3
$D62    $F7A1   UNKNOWN  F7A1            ; Unknown Fxxx instruction
$D64    $2963   CALL     $963            ; Call subroutine at 963
$D66    $D50A   DRW      V5, V0, #A      ; Draw 10-byte sprite at V5, V0
$D68    $5ABF   UNKNOWN  $5ABF           ; Unknown 5xxx instruction
$D6A    $BFD3   JP       V0, $FD3        ; Jump to V0 + FD3
$D6C    $551E   UNKNOWN  $551E           ; Unknown 5xxx instruction
$D6E    $642E   LD       V4, #2E         ; Load 46 into V4
$D70    $4303   SNE      V3, #03         ; Skip if V3 != 3
$D72    $531B   UNKNOWN  $531B           ; Unknown 5xxx instruction
$D74    $BE7F   JP       V0, $E7F        ; Jump to V0 + E7F
$D76    $34CD   SE       V4, #CD         ; Skip if V4 == 205
$D78    $4C0A   SNE      VC, #0A         ; Skip if VC != 10
$D7A    $65D5   LD       V5, #D5         ; Load 213 into V5
$D7C    $92C3   UNKNOWN  $92C3           ; Unknown 9xxx instruction
$D7E    $99E8   UNKNOWN  $99E8           ; Unknown 9xxx instruction
$D80    $C06D   RND      V0, #6D         ; V0 = random & 6D
$D82    $81AD   UNKNOWN  81AD            ; Unknown 8xxx instruction
$D84    $AB3D   LD       I, $B3D         ; Load B3D into I
$D86    $8631   OR       V6, V3          ; V6 |= V3
$D88    $930A   UNKNOWN  $930A           ; Unknown 9xxx instruction
$D8A    $0789   SYS      $789            ; System call to 789
$D8C    $423E   SNE      V2, #3E         ; Skip if V2 != 62
$D8E    $57A7   UNKNOWN  $57A7           ; Unknown 5xxx instruction
$D90    $F34F   UNKNOWN  F34F            ; Unknown Fxxx instruction
$D92    $F967   UNKNOWN  F967            ; Unknown Fxxx instruction
$D94    $2B3C   CALL     $B3C            ; Call subroutine at B3C
$D96    $7641   ADD      V6, #41         ; Add 65 to V6
$D98    $BE89   JP       V0, $E89        ; Jump to V0 + E89
$D9A    $8E56   SHR      VE              ; VE >>= 1, VF = LSB
$D9C    $B8A5   JP       V0, $8A5        ; Jump to V0 + 8A5
$D9E    $5279   UNKNOWN  $5279           ; Unknown 5xxx instruction
$DA0    $6E8F   LD       VE, #8F         ; Load 143 into VE
$DA2    $FF50   UNKNOWN  FF50            ; Unknown Fxxx instruction
$DA4    $4894   SNE      V8, #94         ; Skip if V8 != 148
$DA6    $B45B   JP       V0, $45B        ; Jump to V0 + 45B
$DA8    $7083   ADD      V0, #83         ; Add 131 to V0
$DAA    $E20D   UNKNOWN  $E20D           ; Unknown Exxx instruction
$DAC    $0CB1   SYS      $CB1            ; System call to CB1
$DAE    $7BCF   ADD      VB, #CF         ; Add 207 to VB
$DB0    $E57B   UNKNOWN  $E57B           ; Unknown Exxx instruction
$DB2    $9054   UNKNOWN  $9054           ; Unknown 9xxx instruction
$DB4    $6D42   LD       VD, #42         ; Load 66 into VD
$DB6    $B40E   JP       V0, $40E        ; Jump to V0 + 40E
$DB8    $47FA   SNE      V7, #FA         ; Skip if V7 != 250
$DBA    $236A   CALL     $36A            ; Call subroutine at 36A
$DBC    $06DD   SYS      $6DD            ; System call to 6DD
$DBE    $721D   ADD      V2, #1D         ; Add 29 to V2
$DC0    $AF42   LD       I, $F42         ; Load F42 into I
$DC2    $BD59   JP       V0, $D59        ; Jump to V0 + D59
$DC4    $3DD3   SE       VD, #D3         ; Skip if VD == 211
$DC6    $7526   ADD      V5, #26         ; Add 38 to V5
$DC8    $CED2   RND      VE, #D2         ; VE = random & D2
$DCA    $94C3   UNKNOWN  $94C3           ; Unknown 9xxx instruction
$DCC    $0CBB   SYS      $CBB            ; System call to CBB
$DCE    $DD0B   DRW      VD, V0, #B      ; Draw 11-byte sprite at VD, V0
$DD0    $E4C1   UNKNOWN  $E4C1           ; Unknown Exxx instruction
$DD2    $43EF   SNE      V3, #EF         ; Skip if V3 != 239
$DD4    $884B   UNKNOWN  884B            ; Unknown 8xxx instruction
$DD6    $4C9D   SNE      VC, #9D         ; Skip if VC != 157
$DD8    $459E   SNE      V5, #9E         ; Skip if V5 != 158
$DDA    $1B14   JP       $B14            ; Jump to B14
$DDC    $9D31   UNKNOWN  $9D31           ; Unknown 9xxx instruction
$DDE    $C459   RND      V4, #59         ; V4 = random & 59
$DE0    $DF9A   DRW      VF, V9, #A      ; Draw 10-byte sprite at VF, V9
$DE2    $B35D   JP       V0, $35D        ; Jump to V0 + 35D
$DE4    $947A   UNKNOWN  $947A           ; Unknown 9xxx instruction
$DE6    $658A   LD       V5, #8A         ; Load 138 into V5
$DE8    $AC14   LD       I, $C14         ; Load C14 into I
$DEA    $C29D   RND      V2, #9D         ; V2 = random & 9D
$DEC    $A3C3   LD       I, $3C3         ; Load 3C3 into I
$DEE    $02D6   SYS      $2D6            ; System call to 2D6
$DF0    $50AF   UNKNOWN  $50AF           ; Unknown 5xxx instruction
$DF2    $62D2   LD       V2, #D2         ; Load 210 into V2
$DF4    $70B5   ADD      V0, #B5         ; Add 181 to V0
$DF6    $2AA3   CALL     $AA3            ; Call subroutine at AA3
$DF8    $BA36   JP       V0, $A36        ; Jump to V0 + A36
$DFA    $A8A4   LD       I, $8A4         ; Load 8A4 into I
$DFC    $670D   LD       V7, #0D         ; Load 13 into V7
$DFE    $FC1C   UNKNOWN  FC1C            ; Unknown Fxxx instruction
$E00    $65C4   LD       V5, #C4         ; Load 196 into V5
$E02    $68E2   LD       V8, #E2         ; Load 226 into V8
$E04    $DA99   DRW      VA, V9, #9      ; Draw 9-byte sprite at VA, V9
$E06    $9B35   UNKNOWN  $9B35           ; Unknown 9xxx instruction
$E08    $7EFA   ADD      VE, #FA         ; Add 250 to VE
$E0A    $5DE8   UNKNOWN  $5DE8           ; Unknown 5xxx instruction
$E0C    $691A   LD       V9, #1A         ; Load 26 into V9
$E0E    $AD58   LD       I, $D58         ; Load D58 into I
$E10    $55D0   SE       V5, VD          ; Skip if V5 == VD
$E12    $A685   LD       I, $685         ; Load 685 into I
$E14    $9B6C   UNKNOWN  $9B6C           ; Unknown 9xxx instruction
$E16    $49D0   SNE      V9, #D0         ; Skip if V9 != 208
$E18    $F1E1   UNKNOWN  F1E1            ; Unknown Fxxx instruction
$E1A    $08B9   SYS      $8B9            ; System call to 8B9
$E1C    $35B0   SE       V5, #B0         ; Skip if V5 == 176
$E1E    $F0D7   UNKNOWN  F0D7            ; Unknown Fxxx instruction
$E20    $20BE   CALL     $0BE            ; Call subroutine at 0BE
$E22    $7012   ADD      V0, #12         ; Add 18 to V0
$E24    $1912   JP       $912            ; Jump to 912
$E26    $F627   UNKNOWN  F627            ; Unknown Fxxx instruction
$E28    $DDD7   DRW      VD, VD, #7      ; Draw 7-byte sprite at VD, VD
$E2A    $9E52   UNKNOWN  $9E52           ; Unknown 9xxx instruction
$E2C    $596C   UNKNOWN  $596C           ; Unknown 5xxx instruction
$E2E    $6B26   LD       VB, #26         ; Load 38 into VB
$E30    $7921   ADD      V9, #21         ; Add 33 to V9
$E32    $E6E6   UNKNOWN  $E6E6           ; Unknown Exxx instruction
$E34    $1526   JP       $526            ; Jump to 526
$E36    $5CA3   UNKNOWN  $5CA3           ; Unknown 5xxx instruction
$E38    $4073   SNE      V0, #73         ; Skip if V0 != 115
$E3A    $CD92   RND      VD, #92         ; VD = random & 92
$E3C    $53B9   UNKNOWN  $53B9           ; Unknown 5xxx instruction
$E3E    $81E6   SHR      V1              ; V1 >>= 1, VF = LSB
$E40    $4ACA   SNE      VA, #CA         ; Skip if VA != 202
$E42    $66A7   LD       V6, #A7         ; Load 167 into V6
$E44    $C073   RND      V0, #73         ; V0 = random & 73
$E46    $04C6   SYS      $4C6            ; System call to 4C6
$E48    $4C99   SNE      VC, #99         ; Skip if VC != 153
$E4A    $8702   AND      V7, V0          ; V7 &= V0
$E4C    $BCBD   JP       V0, $CBD        ; Jump to V0 + CBD
$E4E    $25C0   CALL     $5C0            ; Call subroutine at 5C0
$E50    $AC8C   LD       I, $C8C         ; Load C8C into I
$E52    $E9D3   UNKNOWN  $E9D3           ; Unknown Exxx instruction
$E54    $E692   UNKNOWN  $E692           ; Unknown Exxx instruction
$E56    $E17C   UNKNOWN  $E17C           ; Unknown Exxx instruction
$E58    $BE9F   JP       V0, $E9F        ; Jump to V0 + E9F
$E5A    $0319   SYS      $319            ; System call to 319
$E5C    $4177   SNE      V1, #77         ; Skip if V1 != 119
$E5E    $A2DC   LD       I, $2DC         ; Load 2DC into I
$E60    $E9F4   UNKNOWN  $E9F4           ; Unknown Exxx instruction
$E62    $24B3   CALL     $4B3            ; Call subroutine at 4B3
$E64    $0D16   SYS      $D16            ; System call to D16
$E66    $AFC2   LD       I, $FC2         ; Load FC2 into I
$E68    $0206   SYS      $206            ; System call to 206
$E6A    $36CC   SE       V6, #CC         ; Skip if V6 == 204
$E6C    $86D5   SUB      V6, VD          ; V6 -= VD, VF = !borrow
$E6E    $529A   UNKNOWN  $529A           ; Unknown 5xxx instruction
$E70    $02FC   SYS      $2FC            ; System call to 2FC
$E72    $DA65   DRW      VA, V6, #5      ; Draw 5-byte sprite at VA, V6
$E74    $55DE   UNKNOWN  $55DE           ; Unknown 5xxx instruction
$E76    $DCE8   DRW      VC, VE, #8      ; Draw 8-byte sprite at VC, VE
$E78    $495B   SNE      V9, #5B         ; Skip if V9 != 91
$E7A    $7A9C   ADD      VA, #9C         ; Add 156 to VA
$E7C    $C155   RND      V1, #55         ; V1 = random & 55
$E7E    $772D   ADD      V7, #2D         ; Add 45 to V7
$E80    $1B68   JP       $B68            ; Jump to B68
$E82    $048A   SYS      $48A            ; System call to 48A
$E84    $5345   UNKNOWN  $5345           ; Unknown 5xxx instruction
$E86    $2D20   CALL     $D20            ; Call subroutine at D20
$E88    $1394   JP       $394            ; Jump to 394
$E8A    $E43B   UNKNOWN  $E43B           ; Unknown Exxx instruction
$E8C    $93C1   UNKNOWN  $93C1           ; Unknown 9xxx instruction
$E8E    $795B   ADD      V9, #5B         ; Add 91 to V9
$E90    $938F   UNKNOWN  $938F           ; Unknown 9xxx instruction
$E92    $CDE1   RND      VD, #E1         ; VD = random & E1
$E94    $5C27   UNKNOWN  $5C27           ; Unknown 5xxx instruction
$E96    $8021   OR       V0, V2          ; V0 |= V2
$E98    $299F   CALL     $99F            ; Call subroutine at 99F
$E9A    $2F10   CALL     $F10            ; Call subroutine at F10
$E9C    $F818   LD       ST, V8          ; Sound timer = V8
$E9E    $AB32   LD       I, $B32         ; Load B32 into I
$EA0    $BC03   JP       V0, $C03        ; Jump to V0 + C03
$EA2    $E168   UNKNOWN  $E168           ; Unknown Exxx instruction
$EA4    $E429   UNKNOWN  $E429           ; Unknown Exxx instruction
$EA6    $308D   SE       V0, #8D         ; Skip if V0 == 141
$EA8    $0D17   SYS      $D17            ; System call to D17
$EAA    $64F4   LD       V4, #F4         ; Load 244 into V4
$EAC    $4533   SNE      V5, #33         ; Skip if V5 != 51
$EAE    $66D8   LD       V6, #D8         ; Load 216 into V6
$EB0    $B951   JP       V0, $951        ; Jump to V0 + 951
$EB2    $6FBD   LD       VF, #BD         ; Load 189 into VF
$EB4    $89D7   SUBN     V9, VD          ; V9 = VD - V9, VF = !borrow
$EB6    $A7A4   LD       I, $7A4         ; Load 7A4 into I
$EB8    $AF40   LD       I, $F40         ; Load F40 into I
$EBA    $AC4A   LD       I, $C4A         ; Load C4A into I
$EBC    $4E6E   SNE      VE, #6E         ; Skip if VE != 110
$EBE    $9472   UNKNOWN  $9472           ; Unknown 9xxx instruction
$EC0    $FB3E   UNKNOWN  FB3E            ; Unknown Fxxx instruction
$EC2    $4BAE   SNE      VB, #AE         ; Skip if VB != 174
$EC4    $582D   UNKNOWN  $582D           ; Unknown 5xxx instruction
$EC6    $17A4   JP       $7A4            ; Jump to 7A4
$EC8    $51A3   UNKNOWN  $51A3           ; Unknown 5xxx instruction
$ECA    $4FB7   SNE      VF, #B7         ; Skip if VF != 183
$ECC    $C41C   RND      V4, #1C         ; V4 = random & 1C
$ECE    $5DD3   UNKNOWN  $5DD3           ; Unknown 5xxx instruction
$ED0    $0093   SYS      $093            ; System call to 093
$ED2    $220B   CALL     $20B            ; Call subroutine at 20B
$ED4    $8CB0   LD       VC, VB          ; VC = VB
$ED6    $0931   SYS      $931            ; System call to 931
$ED8    $7647   ADD      V6, #47         ; Add 71 to V6
$EDA    $E67A   UNKNOWN  $E67A           ; Unknown Exxx instruction
$EDC    $D173   DRW      V1, V7, #3      ; Draw 3-byte sprite at V1, V7
$EDE    $AE75   LD       I, $E75         ; Load E75 into I
$EE0    $12C8   JP       $2C8            ; Jump to 2C8
$EE2    $5EFD   UNKNOWN  $5EFD           ; Unknown 5xxx instruction
$EE4    $4EB2   SNE      VE, #B2         ; Skip if VE != 178
$EE6    $AF47   LD       I, $F47         ; Load F47 into I
$EE8    $5C3A   UNKNOWN  $5C3A           ; Unknown 5xxx instruction
$EEA    $66FC   LD       V6, #FC         ; Load 252 into V6
$EEC    $FE96   UNKNOWN  FE96            ; Unknown Fxxx instruction
$EEE    $8653   XOR      V6, V5          ; V6 ^= V5
$EF0    $ED0D   UNKNOWN  $ED0D           ; Unknown Exxx instruction
$EF2    $521B   UNKNOWN  $521B           ; Unknown 5xxx instruction
$EF4    $038B   SYS      $38B            ; System call to 38B
$EF6    $D604   DRW      V6, V0, #4      ; Draw 4-byte sprite at V6, V0
$EF8    $EC96   UNKNOWN  $EC96           ; Unknown Exxx instruction
$EFA    $E8F7   UNKNOWN  $E8F7           ; Unknown Exxx instruction
$EFC    $5297   UNKNOWN  $5297           ; Unknown 5xxx instruction
$EFE    $E19B   UNKNOWN  $E19B           ; Unknown Exxx instruction
$F00    $F278   UNKNOWN  F278            ; Unknown Fxxx instruction
$F02    $F9CE   UNKNOWN  F9CE            ; Unknown Fxxx instruction
$F04    $1BB7   JP       $BB7            ; Jump to BB7
$F06    $9830   SNE      V8, V3          ; Skip if V8 != V3
$F08    $878E   SHL      V7              ; V7 <<= 1, VF = MSB
$F0A    $34C7   SE       V4, #C7         ; Skip if V4 == 199
$F0C    $FEE4   UNKNOWN  FEE4            ; Unknown Fxxx instruction
$F0E    $2FC0   CALL     $FC0            ; Call subroutine at FC0
$F10    $B2D9   JP       V0, $2D9        ; Jump to V0 + 2D9
$F12    $DAAC   DRW      VA, VA, #C      ; Draw 12-byte sprite at VA, VA
$F14    $96D6   UNKNOWN  $96D6           ; Unknown 9xxx instruction
$F16    $F6C9   UNKNOWN  F6C9            ; Unknown Fxxx instruction
$F18    $2A8E   CALL     $A8E            ; Call subroutine at A8E
$F1A    $1246   JP       $246            ; Jump to 246
$F1C    $8036   SHR      V0              ; V0 >>= 1, VF = LSB
$F1E    $F35F   UNKNOWN  F35F            ; Unknown Fxxx instruction
$F20    $6C16   LD       VC, #16         ; Load 22 into VC
$F22    $B907   JP       V0, $907        ; Jump to V0 + 907
$F24    $263F   CALL     $63F            ; Call subroutine at 63F
$F26    $2816   CALL     $816            ; Call subroutine at 816
$F28    $57AD   UNKNOWN  $57AD           ; Unknown 5xxx instruction
$F2A    $6CA4   LD       VC, #A4         ; Load 164 into VC
$F2C    $3E4B   SE       VE, #4B         ; Skip if VE == 75
$F2E    $985C   UNKNOWN  $985C           ; Unknown 9xxx instruction
$F30    $C397   RND      V3, #97         ; V3 = random & 97
$F32    $8318   UNKNOWN  8318            ; Unknown 8xxx instruction
$F34    $3AA6   SE       VA, #A6         ; Skip if VA == 166
$F36    $FA03   UNKNOWN  FA03            ; Unknown Fxxx instruction
$F38    $83F6   SHR      V3              ; V3 >>= 1, VF = LSB
$F3A    $F88A   UNKNOWN  F88A            ; Unknown Fxxx instruction
$F3C    $DEA5   DRW      VE, VA, #5      ; Draw 5-byte sprite at VE, VA
$F3E    $FF04   UNKNOWN  FF04            ; Unknown Fxxx instruction
$F40    $CAA9   RND      VA, #A9         ; VA = random & A9
$F42    $8029   UNKNOWN  8029            ; Unknown 8xxx instruction
$F44    $EF1B   UNKNOWN  $EF1B           ; Unknown Exxx instruction
$F46    $0963   SYS      $963            ; System call to 963
$F48    $68E5   LD       V8, #E5         ; Load 229 into V8
$F4A    $A519   LD       I, $519         ; Load 519 into I
$F4C    $6DB3   LD       VD, #B3         ; Load 179 into VD
$F4E    $6B3D   LD       VB, #3D         ; Load 61 into VB
$F50    $19BB   JP       $9BB            ; Jump to 9BB
$F52    $56D2   UNKNOWN  $56D2           ; Unknown 5xxx instruction
$F54    $0D74   SYS      $D74            ; System call to D74
$F56    $2394   CALL     $394            ; Call subroutine at 394
$F58    $F06C   UNKNOWN  F06C            ; Unknown Fxxx instruction
$F5A    $40F8   SNE      V0, #F8         ; Skip if V0 != 248
$F5C    $088E   SYS      $88E            ; System call to 88E
$F5E    $7C0C   ADD      VC, #0C         ; Add 12 to VC
$F60    $1950   JP       $950            ; Jump to 950
$F62    $4CFF   SNE      VC, #FF         ; Skip if VC != 255
$F64    $8251   OR       V2, V5          ; V2 |= V5
$F66    $BC9E   JP       V0, $C9E        ; Jump to V0 + C9E
$F68    $55EA   UNKNOWN  $55EA           ; Unknown 5xxx instruction
$F6A    $E776   UNKNOWN  $E776           ; Unknown Exxx instruction
$F6C    $0F58   SYS      $F58            ; System call to F58
$F6E    $E0B6   UNKNOWN  $E0B6           ; Unknown Exxx instruction
$F70    $0879   SYS      $879            ; System call to 879
$F72    $8FA1   OR       VF, VA          ; VF |= VA
$F74    $4CA9   SNE      VC, #A9         ; Skip if VC != 169
$F76    $FF71   UNKNOWN  FF71            ; Unknown Fxxx instruction
$F78    $1B0E   JP       $B0E            ; Jump to B0E
$F7A    $70E1   ADD      V0, #E1         ; Add 225 to V0
$F7C    $F60A   LD       V6, K           ; Wait for key press, store in V6
$F7E    $A275   LD       I, $275         ; Load 275 into I
$F80    $F4EB   UNKNOWN  F4EB            ; Unknown Fxxx instruction
$F82    $B304   JP       V0, $304        ; Jump to V0 + 304
$F84    $C580   RND      V5, #80         ; V5 = random & 80
$F86    $A8FE   LD       I, $8FE         ; Load 8FE into I
$F88    $E432   UNKNOWN  $E432           ; Unknown Exxx instruction
$F8A    $849D   UNKNOWN  849D            ; Unknown 8xxx instruction
$F8C    $1C83   JP       $C83            ; Jump to C83
$F8E    $6575   LD       V5, #75         ; Load 117 into V5
$F90    $02E0   SYS      $2E0            ; System call to 2E0
$F92    $F3EE   UNKNOWN  F3EE            ; Unknown Fxxx instruction
$F94    $08DA   SYS      $8DA            ; System call to 8DA
$F96    $43E8   SNE      V3, #E8         ; Skip if V3 != 232
$F98    $63D4   LD       V3, #D4         ; Load 212 into V3
$F9A    $2ED2   CALL     $ED2            ; Call subroutine at ED2
$F9C    $2042   CALL     $042            ; Call subroutine at 042
$F9E    $8B70   LD       VB, V7          ; VB = V7
$FA0    $3066   SE       V0, #66         ; Skip if V0 == 102
$FA2    $A239   LD       I, $239         ; Load 239 into I
$FA4    $E2D7   UNKNOWN  $E2D7           ; Unknown Exxx instruction
$FA6    $272F   CALL     $72F            ; Call subroutine at 72F
$FA8    $4007   SNE      V0, #07         ; Skip if V0 != 7
$FAA    $6BCF   LD       VB, #CF         ; Load 207 into VB
$FAC    $A19A   LD       I, $19A         ; Load 19A into I
$FAE    $F96F   UNKNOWN  F96F            ; Unknown Fxxx instruction
$FB0    $9613   UNKNOWN  $9613           ; Unknown 9xxx instruction
$FB2    $8387   SUBN     V3, V8          ; V3 = V8 - V3, VF = !borrow
$FB4    $83A6   SHR      V3              ; V3 >>= 1, VF = LSB
$FB6    $1AF7   JP       $AF7            ; Jump to AF7
$FB8    $F229   LD       F, V2           ; I = sprite address for digit V2
$FBA    $9E0F   UNKNOWN  $9E0F           ; Unknown 9xxx instruction
$FBC    $180B   JP       $80B            ; Jump to 80B
$FBE    $B1FB   JP       V0, $1FB        ; Jump to V0 + 1FB
$FC0    $6168   LD       V1, #68         ; Load 104 into V1
$FC2    $87CB   UNKNOWN  87CB            ; Unknown 8xxx instruction
$FC4    $EEAE   UNKNOWN  $EEAE           ; Unknown Exxx instruction
$FC6    $CE83   RND      VE, #83         ; VE = random & 83
$FC8    $D648   DRW      V6, V4, #8      ; Draw 8-byte sprite at V6, V4
$FCA    $48CF   SNE      V8, #CF         ; Skip if V8 != 207
$FCC    $2F1B   CALL     $F1B            ; Call subroutine at F1B
$FCE    $33D1   SE       V3, #D1         ; Skip if V3 == 209
$FD0    $FA20   UNKNOWN  FA20            ; Unknown Fxxx instruction
$FD2    $358D   SE       V5, #8D         ; Skip if V5 == 141
$FD4    $C600   RND      V6, #00         ; V6 = random & 00
$FD6    $A47C   LD       I, $47C         ; Load 47C into I
$FD8    $269B   CALL     $69B            ; Call subroutine at 69B
$FDA    $DCF6   DRW      VC, VF, #6      ; Draw 6-byte sprite at VC, VF
$FDC    $1127   JP       $127            ; Jump to 127
$FDE    $C948   RND      V9, #48         ; V9 = random & 48
$FE0    $0A0D   SYS      $A0D            ; System call to A0D
$FE2    $42C3   SNE      V2, #C3         ; Skip if V2 != 195
$FE4    $BA5C   JP       V0, $A5C        ; Jump to V0 + A5C
$FE6    $555B   UNKNOWN  $555B           ; Unknown 5xxx instruction
$FE8    $ABBB   LD       I, $BBB         ; Load BBB into I
$FEA    $16D6   JP       $6D6            ; Jump to 6D6
$FEC    $13E0   JP       $3E0            ; Jump to 3E0
$FEE    $382B   SE       V8, #2B         ; Skip if V8 == 43
$FF0    $46FB   SNE      V6, #FB         ; Skip if V6 != 251
$FF2    $A5C4   LD       I, $5C4         ; Load 5C4 into I
$FF4    $81FD   UNKNOWN  81FD            ; Unknown 8xxx instruction
$FF6    $53F8   UNKNOWN  $53F8           ; Unknown 5xxx instruction
$FF8    $AEB2   LD       I, $EB2         ; Load EB2 into I
$FFA    $09FF   SYS      $9FF            ; System call to 9FF
$FFC    $302A   SE       V0, #2A         ; Skip if V0 == 42
$FFE    $FBF1   UNKNOWN  FBF1            ; Unknown Fxxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 472 (26.4%)
  LD      : 238 (13.3%)
  JP      : 236 (13.2%)
  ADD     : 121 ( 6.8%)
  SYS     : 121 ( 6.8%)
  SNE     : 119 ( 6.6%)
  RND     : 118 ( 6.6%)
  CALL    : 117 ( 6.5%)
  SE      : 103 ( 5.8%)
  DRW     :  96 ( 5.4%)
  SHR     :  11 ( 0.6%)
  XOR     :  11 ( 0.6%)
  SHL     :   8 ( 0.4%)
  SUB     :   6 ( 0.3%)
  OR      :   6 ( 0.3%)
  AND     :   5 ( 0.3%)
  SUBN    :   3 ( 0.2%)

Memory Operations: 359 (20.0%)
Arithmetic Operations: 152 (8.5%)
