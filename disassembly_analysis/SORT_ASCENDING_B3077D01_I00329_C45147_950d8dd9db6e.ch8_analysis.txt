
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B3077D01_I00329_C45147_950d8dd9db6e.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 3077
Instance: 329
Direction: ascending
Final Array: [81, 81, 81, 81, 81, 81, 81, 207]
Operations: R:0 W:7 C:1550 S:929

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 101
Sort Array References:
  $326: LD I, $0AD ; Load 0AD into I
  $328: LD I, $F95 ; Load F95 into I
  $334: LD I, $8FB ; Load 8FB into I
  $33A: LD I, $899 ; Load 899 into I
  $37A: LD I, $76E ; Load 76E into I
  $386: LD I, $EBB ; Load EBB into I
  $3C2: LD I, $A02 ; Load A02 into I
  $3E4: LD I, $608 ; Load 608 into I
  $418: LD I, $E0E ; Load E0E into I
  $41A: LD I, $0B3 ; Load 0B3 into I
  $42C: LD I, $473 ; Load 473 into I
  $43A: LD I, $DC4 ; Load DC4 into I
  $450: LD I, $01A ; Load 01A into I
  $46C: LD I, $2F9 ; Load 2F9 into I
  $476: LD I, $D4F ; Load D4F into I
  $48A: LD I, $A00 ; Load A00 into I
  $4A4: LD I, $375 ; Load 375 into I
  $4F0: LD I, $8E8 ; Load 8E8 into I
  $50E: LD I, $80A ; Load 80A into I
  $516: LD I, $A84 ; Load A84 into I
  $51C: LD I, $568 ; Load 568 into I
  $52C: LD I, $1BA ; Load 1BA into I
  $52E: LD I, $443 ; Load 443 into I
  $538: LD I, $EAC ; Load EAC into I
  $5A6: LD I, $6A5 ; Load 6A5 into I
  $5C4: LD I, $3F1 ; Load 3F1 into I
  $5D2: LD I, $B01 ; Load B01 into I
  $5EE: LD I, $914 ; Load 914 into I
  $622: LD I, $51D ; Load 51D into I
  $62A: LD I, $5EC ; Load 5EC into I
  $646: LD I, $98C ; Load 98C into I
  $68A: LD I, $113 ; Load 113 into I
  $6A6: LD I, $B34 ; Load B34 into I
  $6AE: LD I, $F69 ; Load F69 into I
  $72A: LD I, $959 ; Load 959 into I
  $740: LD I, $001 ; Load 001 into I
  $742: LD I, $182 ; Load 182 into I
  $74C: LD I, $155 ; Load 155 into I
  $790: LD I, $853 ; Load 853 into I
  $7E8: LD I, $30E ; Load 30E into I
  $7EE: LD I, $D4E ; Load D4E into I
  $844: LD I, $E44 ; Load E44 into I
  $84C: LD I, $363 ; Load 363 into I
  $880: LD I, $15B ; Load 15B into I
  $8C0: LD I, $940 ; Load 940 into I
  $8CC: LD I, $8B2 ; Load 8B2 into I
  $8DE: LD I, $40C ; Load 40C into I
  $90E: LD I, $B4B ; Load B4B into I
  $966: LD I, $1EE ; Load 1EE into I
  $986: LD I, $5CB ; Load 5CB into I
  $98C: LD I, $3CA ; Load 3CA into I
  $99C: LD I, $1BB ; Load 1BB into I
  $9B2: LD I, $3C2 ; Load 3C2 into I
  $9CC: LD I, $D73 ; Load D73 into I
  $9D6: LD I, $0D0 ; Load 0D0 into I
  $9F2: LD I, $A29 ; Load A29 into I
  $A06: LD I, $D89 ; Load D89 into I
  $A0A: LD I, $AB2 ; Load AB2 into I
  $A0C: LD I, $6D8 ; Load 6D8 into I
  $A4A: LD I, $E7B ; Load E7B into I
  $A5A: LD I, $110 ; Load 110 into I
  $A6C: LD I, $92B ; Load 92B into I
  $A7C: LD I, $4B9 ; Load 4B9 into I
  $AAC: LD I, $73D ; Load 73D into I
  $AD8: LD I, $D47 ; Load D47 into I
  $AFE: LD I, $031 ; Load 031 into I
  $B34: LD I, $457 ; Load 457 into I
  $B4A: LD I, $AAD ; Load AAD into I
  $B50: LD I, $E40 ; Load E40 into I
  $B68: LD I, $CEF ; Load CEF into I
  $B82: LD I, $525 ; Load 525 into I
  $B84: LD I, $2B4 ; Load 2B4 into I
  $B90: LD I, $FA9 ; Load FA9 into I
  $BC6: LD I, $69A ; Load 69A into I
  $C06: LD I, $67D ; Load 67D into I
  $C12: LD I, $FDB ; Load FDB into I
  $C78: LD I, $2E6 ; Load 2E6 into I
  $CE4: LD I, $FE9 ; Load FE9 into I
  $CF4: LD I, $06C ; Load 06C into I
  $D0C: LD I, $84C ; Load 84C into I
  $D1C: LD I, $1D2 ; Load 1D2 into I
  $D4C: LD I, $915 ; Load 915 into I
  $D60: LD I, $A62 ; Load A62 into I
  $D6E: ADD I, V4 ; I ADDRESS MANIPULATION
  $D90: LD I, $A69 ; Load A69 into I
  $D9E: LD I, $1F2 ; Load 1F2 into I
  $DD2: LD I, $7FD ; Load 7FD into I
  $E04: LD I, $311 ; Load 311 into I
  $E0A: LD I, $643 ; Load 643 into I
  $E5E: LD I, $1A0 ; Load 1A0 into I
  $E6C: LD I, $9D9 ; Load 9D9 into I
  $F0E: LD I, $6DF ; Load 6DF into I
  $F4C: LD I, $E45 ; Load E45 into I
  $F4E: LD I, $C93 ; Load C93 into I
  $F68: LD I, $5A8 ; Load 5A8 into I
  $F72: LD I, $87F ; Load 87F into I
  $F82: LD I, $081 ; Load 081 into I
  $F9C: LD I, $311 ; Load 311 into I
  $FE0: LD I, $0DD ; Load 0DD into I
  $FF0: LD I, $E62 ; Load E62 into I
  $FFE: LD I, $DD9 ; Load DD9 into I

CONTROL FLOW ANALYSIS:
Jumps: 234
Calls: 101
Branches: 232
Loops: 139
Loop Structures:
  $342 -> $1CD (backward jump)
  $370 -> $198 (backward jump)
  $3BC -> $14C (backward jump)
  $3C0 -> $0E1 (backward jump)
  $458 -> $367 (backward jump)
  $49C -> $27B (backward jump)
  $4A2 -> $28E (backward jump)
  $50C -> $284 (backward jump)
  $51E -> $134 (backward jump)
  $520 -> $13B (backward jump)
  $522 -> $08F (backward jump)
  $5D0 -> $1CC (backward jump)
  $5D4 -> $158 (backward jump)
  $5EC -> $128 (backward jump)
  $60A -> $5CD (backward jump)
  $62C -> $2FC (backward jump)
  $632 -> $253 (backward jump)
  $636 -> $224 (backward jump)
  $64C -> $070 (backward jump)
  $652 -> $379 (backward jump)
  $67C -> $309 (backward jump)
  $6F2 -> $219 (backward jump)
  $6FA -> $07E (backward jump)
  $708 -> $168 (backward jump)
  $724 -> $529 (backward jump)
  $72C -> $3E9 (backward jump)
  $750 -> $005 (backward jump)
  $752 -> $44A (backward jump)
  $760 -> $6D5 (backward jump)
  $7A4 -> $0CB (backward jump)
  $7B2 -> $73E (backward jump)
  $7B8 -> $201 (backward jump)
  $7C4 -> $775 (backward jump)
  $7D4 -> $6B5 (backward jump)
  $7FE -> $424 (backward jump)
  $810 -> $3A7 (backward jump)
  $822 -> $531 (backward jump)
  $828 -> $5B7 (backward jump)
  $858 -> $2DE (backward jump)
  $884 -> $5C8 (backward jump)
  $888 -> $7DC (backward jump)
  $8B0 -> $4D1 (backward jump)
  $8F2 -> $104 (backward jump)
  $90C -> $0EB (backward jump)
  $93A -> $0A0 (backward jump)
  $95E -> $13E (backward jump)
  $96E -> $25B (backward jump)
  $972 -> $169 (backward jump)
  $990 -> $881 (backward jump)
  $9AC -> $8B2 (backward jump)
  $9C0 -> $271 (backward jump)
  $9CE -> $33A (backward jump)
  $9D0 -> $847 (backward jump)
  $9E4 -> $33B (backward jump)
  $9F8 -> $6D9 (backward jump)
  $A4E -> $3C5 (backward jump)
  $A50 -> $912 (backward jump)
  $A52 -> $6D8 (backward jump)
  $A68 -> $37A (backward jump)
  $A74 -> $92B (backward jump)
  $A96 -> $445 (backward jump)
  $A9A -> $4A2 (backward jump)
  $AB8 -> $A37 (backward jump)
  $ABC -> $35D (backward jump)
  $ABE -> $965 (backward jump)
  $B08 -> $64E (backward jump)
  $B0C -> $487 (backward jump)
  $B1A -> $454 (backward jump)
  $B26 -> $29F (backward jump)
  $B2E -> $698 (backward jump)
  $B44 -> $6B2 (backward jump)
  $B56 -> $895 (backward jump)
  $B5C -> $601 (backward jump)
  $B86 -> $3D1 (backward jump)
  $BA0 -> $65C (backward jump)
  $BB8 -> $B6D (backward jump)
  $C04 -> $960 (backward jump)
  $C2E -> $57F (backward jump)
  $C42 -> $087 (backward jump)
  $C4C -> $500 (backward jump)
  $C7A -> $462 (backward jump)
  $C86 -> $001 (backward jump)
  $C88 -> $01E (backward jump)
  $C8E -> $B20 (backward jump)
  $C98 -> $2E9 (backward jump)
  $C9C -> $9AD (backward jump)
  $CA0 -> $862 (backward jump)
  $CA6 -> $AFA (backward jump)
  $CBE -> $93D (backward jump)
  $CC8 -> $179 (backward jump)
  $CCC -> $CCA (backward jump)
  $CDC -> $475 (backward jump)
  $D00 -> $03D (backward jump)
  $D0E -> $6F7 (backward jump)
  $D42 -> $BEF (backward jump)
  $D4E -> $0E6 (backward jump)
  $D50 -> $5A1 (backward jump)
  $D76 -> $581 (backward jump)
  $DA2 -> $152 (backward jump)
  $DA4 -> $0E5 (backward jump)
  $DDE -> $3A2 (backward jump)
  $DF2 -> $A55 (backward jump)
  $E12 -> $51A (backward jump)
  $E16 -> $9E2 (backward jump)
  $E34 -> $1C5 (backward jump)
  $E4A -> $AA8 (backward jump)
  $E5C -> $C7C (backward jump)
  $E62 -> $035 (backward jump)
  $E6E -> $15B (backward jump)
  $E70 -> $988 (backward jump)
  $E76 -> $088 (backward jump)
  $E78 -> $C25 (backward jump)
  $E80 -> $63E (backward jump)
  $E8E -> $3CB (backward jump)
  $E9A -> $DA1 (backward jump)
  $EBC -> $3F8 (backward jump)
  $EDC -> $5A0 (backward jump)
  $EDE -> $E15 (backward jump)
  $EE0 -> $0D5 (backward jump)
  $F20 -> $718 (backward jump)
  $F2C -> $5A9 (backward jump)
  $F32 -> $7BA (backward jump)
  $F3E -> $2F9 (backward jump)
  $F48 -> $67B (backward jump)
  $F54 -> $908 (backward jump)
  $F56 -> $EB1 (backward jump)
  $F6A -> $D61 (backward jump)
  $F78 -> $EFD (backward jump)
  $F7C -> $335 (backward jump)
  $F7E -> $BE4 (backward jump)
  $F88 -> $8D6 (backward jump)
  $F96 -> $CF8 (backward jump)
  $FA8 -> $05F (backward jump)
  $FAA -> $13F (backward jump)
  $FBA -> $3B9 (backward jump)
  $FD0 -> $508 (backward jump)
  $FD8 -> $3B2 (backward jump)
  $FF4 -> $755 (backward jump)
  $FF6 -> $C3A (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$202    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$204    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$206    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$208    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$20A    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$20C    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$20E    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$210    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$212    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$214    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$216    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$218    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$21A    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$21C    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$21E    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$220    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$222    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$224    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$226    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$228    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$22A    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$22C    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$22E    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$230    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$232    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$234    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$236    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$238    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$23A    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$23C    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$23E    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$240    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$242    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$244    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$246    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$248    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$24A    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$24C    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$24E    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$250    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$252    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$254    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$256    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$258    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$25A    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$25C    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$25E    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$260    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$262    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$264    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$266    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$268    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$26A    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$26C    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$26E    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$270    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$272    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$274    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$276    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$278    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$27A    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$27C    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$27E    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$280    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$282    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$284    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$286    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$288    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$28A    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$28C    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$28E    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$290    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$292    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$294    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$296    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$298    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$29A    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$29C    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$29E    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2A0    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2A2    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2A4    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2A6    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2A8    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2AA    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2AC    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2AE    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2B0    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2B2    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2B4    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2B6    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2B8    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2BA    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2BC    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2BE    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2C0    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2C2    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2C4    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2C6    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2C8    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2CA    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2CC    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2CE    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2D0    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2D2    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2D4    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2D6    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2D8    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2DA    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2DC    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2DE    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2E0    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2E2    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2E4    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2E6    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2E8    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2EA    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2EC    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2EE    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2F0    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2F2    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2F4    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2F6    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2F8    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2FA    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2FC    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$2FE    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$300    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$302    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$304    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$306    $51CF   UNKNOWN  $51CF           ; Unknown 5xxx instruction
$308    $50A8   UNKNOWN  $50A8           ; Unknown 5xxx instruction
$30A    $579D   UNKNOWN  $579D           ; Unknown 5xxx instruction
$30C    $2654   CALL     $654            ; Call subroutine at 654
$30E    $CB6F   RND      VB, #6F         ; VB = random & 6F
$310    $01A8   SYS      $1A8            ; System call to 1A8
$312    $95D5   UNKNOWN  $95D5           ; Unknown 9xxx instruction
$314    $F968   UNKNOWN  F968            ; Unknown Fxxx instruction
$316    $3E71   SE       VE, #71         ; Skip if VE == 113
$318    $0CEF   SYS      $CEF            ; System call to CEF
$31A    $67A9   LD       V7, #A9         ; Load 169 into V7
$31C    $50B4   UNKNOWN  $50B4           ; Unknown 5xxx instruction
$31E    $5624   UNKNOWN  $5624           ; Unknown 5xxx instruction
$320    $B410   JP       V0, $410        ; Jump to V0 + 410
$322    $078C   SYS      $78C            ; System call to 78C
$324    $0507   SYS      $507            ; System call to 507
$326    $A0AD   LD       I, $0AD         ; Load 0AD into I
$328    $AF95   LD       I, $F95         ; Load F95 into I
$32A    $97E5   UNKNOWN  $97E5           ; Unknown 9xxx instruction
$32C    $BDEC   JP       V0, $DEC        ; Jump to V0 + DEC
$32E    $8DEE   SHL      VD              ; VD <<= 1, VF = MSB
$330    $0ED7   SYS      $ED7            ; System call to ED7
$332    $6EB5   LD       VE, #B5         ; Load 181 into VE
$334    $A8FB   LD       I, $8FB         ; Load 8FB into I
$336    $916B   UNKNOWN  $916B           ; Unknown 9xxx instruction
$338    $53F7   UNKNOWN  $53F7           ; Unknown 5xxx instruction
$33A    $A899   LD       I, $899         ; Load 899 into I
$33C    $2911   CALL     $911            ; Call subroutine at 911
$33E    $2EAD   CALL     $EAD            ; Call subroutine at EAD
$340    $7C5C   ADD      VC, #5C         ; Add 92 to VC
$342    $11CD   JP       $1CD            ; Jump to 1CD
$344    $6263   LD       V2, #63         ; Load 99 into V2
$346    $0467   SYS      $467            ; System call to 467
$348    $585D   UNKNOWN  $585D           ; Unknown 5xxx instruction
$34A    $252E   CALL     $52E            ; Call subroutine at 52E
$34C    $3C96   SE       VC, #96         ; Skip if VC == 150
$34E    $5B19   UNKNOWN  $5B19           ; Unknown 5xxx instruction
$350    $FE19   UNKNOWN  FE19            ; Unknown Fxxx instruction
$352    $7968   ADD      V9, #68         ; Add 104 to V9
$354    $1EA8   JP       $EA8            ; Jump to EA8
$356    $D2E6   DRW      V2, VE, #6      ; Draw 6-byte sprite at V2, VE
$358    $35DF   SE       V5, #DF         ; Skip if V5 == 223
$35A    $302C   SE       V0, #2C         ; Skip if V0 == 44
$35C    $FBAC   UNKNOWN  FBAC            ; Unknown Fxxx instruction
$35E    $CD9B   RND      VD, #9B         ; VD = random & 9B
$360    $E319   UNKNOWN  $E319           ; Unknown Exxx instruction
$362    $32AF   SE       V2, #AF         ; Skip if V2 == 175
$364    $5978   UNKNOWN  $5978           ; Unknown 5xxx instruction
$366    $0D62   SYS      $D62            ; System call to D62
$368    $B776   JP       V0, $776        ; Jump to V0 + 776
$36A    $766B   ADD      V6, #6B         ; Add 107 to V6
$36C    $F6F8   UNKNOWN  F6F8            ; Unknown Fxxx instruction
$36E    $EA9A   UNKNOWN  $EA9A           ; Unknown Exxx instruction
$370    $1198   JP       $198            ; Jump to 198
$372    $1A34   JP       $A34            ; Jump to A34
$374    $71EC   ADD      V1, #EC         ; Add 236 to V1
$376    $2178   CALL     $178            ; Call subroutine at 178
$378    $74F6   ADD      V4, #F6         ; Add 246 to V4
$37A    $A76E   LD       I, $76E         ; Load 76E into I
$37C    $F6E9   UNKNOWN  F6E9            ; Unknown Fxxx instruction
$37E    $ED0A   UNKNOWN  $ED0A           ; Unknown Exxx instruction
$380    $BBF4   JP       V0, $BF4        ; Jump to V0 + BF4
$382    $C207   RND      V2, #07         ; V2 = random & 07
$384    $EEB0   UNKNOWN  $EEB0           ; Unknown Exxx instruction
$386    $AEBB   LD       I, $EBB         ; Load EBB into I
$388    $D950   DRW      V9, V5, #0      ; Draw 0-byte sprite at V9, V5
$38A    $09E1   SYS      $9E1            ; System call to 9E1
$38C    $3A01   SE       VA, #01         ; Skip if VA == 1
$38E    $1E25   JP       $E25            ; Jump to E25
$390    $C8C1   RND      V8, #C1         ; V8 = random & C1
$392    $C0B3   RND      V0, #B3         ; V0 = random & B3
$394    $188D   JP       $88D            ; Jump to 88D
$396    $8F09   UNKNOWN  8F09            ; Unknown 8xxx instruction
$398    $216E   CALL     $16E            ; Call subroutine at 16E
$39A    $65DF   LD       V5, #DF         ; Load 223 into V5
$39C    $D2BE   DRW      V2, VB, #E      ; Draw 14-byte sprite at V2, VB
$39E    $2B6A   CALL     $B6A            ; Call subroutine at B6A
$3A0    $9A2B   UNKNOWN  $9A2B           ; Unknown 9xxx instruction
$3A2    $F4DA   UNKNOWN  F4DA            ; Unknown Fxxx instruction
$3A4    $6C4E   LD       VC, #4E         ; Load 78 into VC
$3A6    $30F8   SE       V0, #F8         ; Skip if V0 == 248
$3A8    $2BF9   CALL     $BF9            ; Call subroutine at BF9
$3AA    $D5C5   DRW      V5, VC, #5      ; Draw 5-byte sprite at V5, VC
$3AC    $D968   DRW      V9, V6, #8      ; Draw 8-byte sprite at V9, V6
$3AE    $0277   SYS      $277            ; System call to 277
$3B0    $9A12   UNKNOWN  $9A12           ; Unknown 9xxx instruction
$3B2    $1B78   JP       $B78            ; Jump to B78
$3B4    $EA9E   SKP      VA              ; Skip if key VA pressed
$3B6    $DBC9   DRW      VB, VC, #9      ; Draw 9-byte sprite at VB, VC
$3B8    $6E7E   LD       VE, #7E         ; Load 126 into VE
$3BA    $4A80   SNE      VA, #80         ; Skip if VA != 128
$3BC    $114C   JP       $14C            ; Jump to 14C
$3BE    $0F57   SYS      $F57            ; System call to F57
$3C0    $B0E1   JP       V0, $0E1        ; Jump to V0 + 0E1
$3C2    $AA02   LD       I, $A02         ; Load A02 into I
$3C4    $BE76   JP       V0, $E76        ; Jump to V0 + E76
$3C6    $1B66   JP       $B66            ; Jump to B66
$3C8    $EB9D   UNKNOWN  $EB9D           ; Unknown Exxx instruction
$3CA    $6425   LD       V4, #25         ; Load 37 into V4
$3CC    $BB8C   JP       V0, $B8C        ; Jump to V0 + B8C
$3CE    $E45A   UNKNOWN  $E45A           ; Unknown Exxx instruction
$3D0    $1F6F   JP       $F6F            ; Jump to F6F
$3D2    $7B15   ADD      VB, #15         ; Add 21 to VB
$3D4    $E388   UNKNOWN  $E388           ; Unknown Exxx instruction
$3D6    $37D9   SE       V7, #D9         ; Skip if V7 == 217
$3D8    $C42F   RND      V4, #2F         ; V4 = random & 2F
$3DA    $BBC3   JP       V0, $BC3        ; Jump to V0 + BC3
$3DC    $CA3B   RND      VA, #3B         ; VA = random & 3B
$3DE    $875D   UNKNOWN  875D            ; Unknown 8xxx instruction
$3E0    $8F39   UNKNOWN  8F39            ; Unknown 8xxx instruction
$3E2    $21EC   CALL     $1EC            ; Call subroutine at 1EC
$3E4    $A608   LD       I, $608         ; Load 608 into I
$3E6    $4620   SNE      V6, #20         ; Skip if V6 != 32
$3E8    $B6F4   JP       V0, $6F4        ; Jump to V0 + 6F4
$3EA    $2A18   CALL     $A18            ; Call subroutine at A18
$3EC    $5E3F   UNKNOWN  $5E3F           ; Unknown 5xxx instruction
$3EE    $3B07   SE       VB, #07         ; Skip if VB == 7
$3F0    $5007   UNKNOWN  $5007           ; Unknown 5xxx instruction
$3F2    $DD3B   DRW      VD, V3, #B      ; Draw 11-byte sprite at VD, V3
$3F4    $690F   LD       V9, #0F         ; Load 15 into V9
$3F6    $D10B   DRW      V1, V0, #B      ; Draw 11-byte sprite at V1, V0
$3F8    $1477   JP       $477            ; Jump to 477
$3FA    $8B21   OR       VB, V2          ; VB |= V2
$3FC    $C2E2   RND      V2, #E2         ; V2 = random & E2
$3FE    $979E   UNKNOWN  $979E           ; Unknown 9xxx instruction
$400    $B9CB   JP       V0, $9CB        ; Jump to V0 + 9CB
$402    $4D34   SNE      VD, #34         ; Skip if VD != 52
$404    $8497   SUBN     V4, V9          ; V4 = V9 - V4, VF = !borrow
$406    $8644   ADD      V6, V4          ; V6 += V4, VF = carry
$408    $382D   SE       V8, #2D         ; Skip if V8 == 45
$40A    $6232   LD       V2, #32         ; Load 50 into V2
$40C    $6796   LD       V7, #96         ; Load 150 into V7
$40E    $5CA6   UNKNOWN  $5CA6           ; Unknown 5xxx instruction
$410    $57D9   UNKNOWN  $57D9           ; Unknown 5xxx instruction
$412    $DEEC   DRW      VE, VE, #C      ; Draw 12-byte sprite at VE, VE
$414    $F592   UNKNOWN  F592            ; Unknown Fxxx instruction
$416    $CE0F   RND      VE, #0F         ; VE = random & 0F
$418    $AE0E   LD       I, $E0E         ; Load E0E into I
$41A    $A0B3   LD       I, $0B3         ; Load 0B3 into I
$41C    $D53C   DRW      V5, V3, #C      ; Draw 12-byte sprite at V5, V3
$41E    $3568   SE       V5, #68         ; Skip if V5 == 104
$420    $B567   JP       V0, $567        ; Jump to V0 + 567
$422    $71A8   ADD      V1, #A8         ; Add 168 to V1
$424    $CA76   RND      VA, #76         ; VA = random & 76
$426    $7779   ADD      V7, #79         ; Add 121 to V7
$428    $24DD   CALL     $4DD            ; Call subroutine at 4DD
$42A    $4B3A   SNE      VB, #3A         ; Skip if VB != 58
$42C    $A473   LD       I, $473         ; Load 473 into I
$42E    $2154   CALL     $154            ; Call subroutine at 154
$430    $36CB   SE       V6, #CB         ; Skip if V6 == 203
$432    $2FDB   CALL     $FDB            ; Call subroutine at FDB
$434    $F7CC   UNKNOWN  F7CC            ; Unknown Fxxx instruction
$436    $563B   UNKNOWN  $563B           ; Unknown 5xxx instruction
$438    $99E1   UNKNOWN  $99E1           ; Unknown 9xxx instruction
$43A    $ADC4   LD       I, $DC4         ; Load DC4 into I
$43C    $21C6   CALL     $1C6            ; Call subroutine at 1C6
$43E    $8B6F   UNKNOWN  8B6F            ; Unknown 8xxx instruction
$440    $6A69   LD       VA, #69         ; Load 105 into VA
$442    $5C8D   UNKNOWN  $5C8D           ; Unknown 5xxx instruction
$444    $CD10   RND      VD, #10         ; VD = random & 10
$446    $3362   SE       V3, #62         ; Skip if V3 == 98
$448    $80CD   UNKNOWN  80CD            ; Unknown 8xxx instruction
$44A    $2E1A   CALL     $E1A            ; Call subroutine at E1A
$44C    $8755   SUB      V7, V5          ; V7 -= V5, VF = !borrow
$44E    $3904   SE       V9, #04         ; Skip if V9 == 4
$450    $A01A   LD       I, $01A         ; Load 01A into I
$452    $2FAF   CALL     $FAF            ; Call subroutine at FAF
$454    $6091   LD       V0, #91         ; Load 145 into V0
$456    $1C55   JP       $C55            ; Jump to C55
$458    $B367   JP       V0, $367        ; Jump to V0 + 367
$45A    $FAF8   UNKNOWN  FAF8            ; Unknown Fxxx instruction
$45C    $7199   ADD      V1, #99         ; Add 153 to V1
$45E    $FF30   UNKNOWN  FF30            ; Unknown Fxxx instruction
$460    $3CC2   SE       VC, #C2         ; Skip if VC == 194
$462    $C8CF   RND      V8, #CF         ; V8 = random & CF
$464    $0A45   SYS      $A45            ; System call to A45
$466    $6DE5   LD       VD, #E5         ; Load 229 into VD
$468    $740A   ADD      V4, #0A         ; Add 10 to V4
$46A    $849C   UNKNOWN  849C            ; Unknown 8xxx instruction
$46C    $A2F9   LD       I, $2F9         ; Load 2F9 into I
$46E    $0D32   SYS      $D32            ; System call to D32
$470    $D055   DRW      V0, V5, #5      ; Draw 5-byte sprite at V0, V5
$472    $B5C3   JP       V0, $5C3        ; Jump to V0 + 5C3
$474    $E784   UNKNOWN  $E784           ; Unknown Exxx instruction
$476    $AD4F   LD       I, $D4F         ; Load D4F into I
$478    $151A   JP       $51A            ; Jump to 51A
$47A    $C494   RND      V4, #94         ; V4 = random & 94
$47C    $3A27   SE       VA, #27         ; Skip if VA == 39
$47E    $4ADE   SNE      VA, #DE         ; Skip if VA != 222
$480    $3846   SE       V8, #46         ; Skip if V8 == 70
$482    $B9AA   JP       V0, $9AA        ; Jump to V0 + 9AA
$484    $3106   SE       V1, #06         ; Skip if V1 == 6
$486    $4342   SNE      V3, #42         ; Skip if V3 != 66
$488    $822D   UNKNOWN  822D            ; Unknown 8xxx instruction
$48A    $AA00   LD       I, $A00         ; Load A00 into I
$48C    $FF9F   UNKNOWN  FF9F            ; Unknown Fxxx instruction
$48E    $74D9   ADD      V4, #D9         ; Add 217 to V4
$490    $E2BC   UNKNOWN  $E2BC           ; Unknown Exxx instruction
$492    $770F   ADD      V7, #0F         ; Add 15 to V7
$494    $7DB9   ADD      VD, #B9         ; Add 185 to VD
$496    $04FE   SYS      $4FE            ; System call to 4FE
$498    $42B1   SNE      V2, #B1         ; Skip if V2 != 177
$49A    $7EEF   ADD      VE, #EF         ; Add 239 to VE
$49C    $127B   JP       $27B            ; Jump to 27B
$49E    $E57B   UNKNOWN  $E57B           ; Unknown Exxx instruction
$4A0    $58FA   UNKNOWN  $58FA           ; Unknown 5xxx instruction
$4A2    $B28E   JP       V0, $28E        ; Jump to V0 + 28E
$4A4    $A375   LD       I, $375         ; Load 375 into I
$4A6    $E697   UNKNOWN  $E697           ; Unknown Exxx instruction
$4A8    $4EC8   SNE      VE, #C8         ; Skip if VE != 200
$4AA    $8573   XOR      V5, V7          ; V5 ^= V7
$4AC    $BA5E   JP       V0, $A5E        ; Jump to V0 + A5E
$4AE    $F6F1   UNKNOWN  F6F1            ; Unknown Fxxx instruction
$4B0    $88CF   UNKNOWN  88CF            ; Unknown 8xxx instruction
$4B2    $31DE   SE       V1, #DE         ; Skip if V1 == 222
$4B4    $85E8   UNKNOWN  85E8            ; Unknown 8xxx instruction
$4B6    $BDF8   JP       V0, $DF8        ; Jump to V0 + DF8
$4B8    $36E4   SE       V6, #E4         ; Skip if V6 == 228
$4BA    $7E80   ADD      VE, #80         ; Add 128 to VE
$4BC    $FC5B   UNKNOWN  FC5B            ; Unknown Fxxx instruction
$4BE    $29DA   CALL     $9DA            ; Call subroutine at 9DA
$4C0    $FED6   UNKNOWN  FED6            ; Unknown Fxxx instruction
$4C2    $FFA3   UNKNOWN  FFA3            ; Unknown Fxxx instruction
$4C4    $27D2   CALL     $7D2            ; Call subroutine at 7D2
$4C6    $5E64   UNKNOWN  $5E64           ; Unknown 5xxx instruction
$4C8    $8A99   UNKNOWN  8A99            ; Unknown 8xxx instruction
$4CA    $F70F   UNKNOWN  F70F            ; Unknown Fxxx instruction
$4CC    $FC21   UNKNOWN  FC21            ; Unknown Fxxx instruction
$4CE    $DEE0   DRW      VE, VE, #0      ; Draw 0-byte sprite at VE, VE
$4D0    $C519   RND      V5, #19         ; V5 = random & 19
$4D2    $FF6F   UNKNOWN  FF6F            ; Unknown Fxxx instruction
$4D4    $280B   CALL     $80B            ; Call subroutine at 80B
$4D6    $5604   UNKNOWN  $5604           ; Unknown 5xxx instruction
$4D8    $52B8   UNKNOWN  $52B8           ; Unknown 5xxx instruction
$4DA    $4775   SNE      V7, #75         ; Skip if V7 != 117
$4DC    $4E2E   SNE      VE, #2E         ; Skip if VE != 46
$4DE    $5732   UNKNOWN  $5732           ; Unknown 5xxx instruction
$4E0    $5F28   UNKNOWN  $5F28           ; Unknown 5xxx instruction
$4E2    $7A6C   ADD      VA, #6C         ; Add 108 to VA
$4E4    $7DBB   ADD      VD, #BB         ; Add 187 to VD
$4E6    $590E   UNKNOWN  $590E           ; Unknown 5xxx instruction
$4E8    $6304   LD       V3, #04         ; Load 4 into V3
$4EA    $9255   UNKNOWN  $9255           ; Unknown 9xxx instruction
$4EC    $2256   CALL     $256            ; Call subroutine at 256
$4EE    $E914   UNKNOWN  $E914           ; Unknown Exxx instruction
$4F0    $A8E8   LD       I, $8E8         ; Load 8E8 into I
$4F2    $CF87   RND      VF, #87         ; VF = random & 87
$4F4    $5607   UNKNOWN  $5607           ; Unknown 5xxx instruction
$4F6    $495F   SNE      V9, #5F         ; Skip if V9 != 95
$4F8    $5380   SE       V3, V8          ; Skip if V3 == V8
$4FA    $94BA   UNKNOWN  $94BA           ; Unknown 9xxx instruction
$4FC    $7F7A   ADD      VF, #7A         ; Add 122 to VF
$4FE    $45A0   SNE      V5, #A0         ; Skip if V5 != 160
$500    $0010   SYS      $010            ; System call to 010
$502    $5E63   UNKNOWN  $5E63           ; Unknown 5xxx instruction
$504    $C109   RND      V1, #09         ; V1 = random & 09
$506    $7EED   ADD      VE, #ED         ; Add 237 to VE
$508    $7301   ADD      V3, #01         ; Add 1 to V3
$50A    $E336   UNKNOWN  $E336           ; Unknown Exxx instruction
$50C    $B284   JP       V0, $284        ; Jump to V0 + 284
$50E    $A80A   LD       I, $80A         ; Load 80A into I
$510    $9E72   UNKNOWN  $9E72           ; Unknown 9xxx instruction
$512    $4373   SNE      V3, #73         ; Skip if V3 != 115
$514    $448A   SNE      V4, #8A         ; Skip if V4 != 138
$516    $AA84   LD       I, $A84         ; Load A84 into I
$518    $2077   CALL     $077            ; Call subroutine at 077
$51A    $F22A   UNKNOWN  F22A            ; Unknown Fxxx instruction
$51C    $A568   LD       I, $568         ; Load 568 into I
$51E    $1134   JP       $134            ; Jump to 134
$520    $113B   JP       $13B            ; Jump to 13B
$522    $108F   JP       $08F            ; Jump to 08F
$524    $4421   SNE      V4, #21         ; Skip if V4 != 33
$526    $0DF5   SYS      $DF5            ; System call to DF5
$528    $72CA   ADD      V2, #CA         ; Add 202 to V2
$52A    $4084   SNE      V0, #84         ; Skip if V0 != 132
$52C    $A1BA   LD       I, $1BA         ; Load 1BA into I
$52E    $A443   LD       I, $443         ; Load 443 into I
$530    $2622   CALL     $622            ; Call subroutine at 622
$532    $9EDE   UNKNOWN  $9EDE           ; Unknown 9xxx instruction
$534    $9D29   UNKNOWN  $9D29           ; Unknown 9xxx instruction
$536    $FA4B   UNKNOWN  FA4B            ; Unknown Fxxx instruction
$538    $AEAC   LD       I, $EAC         ; Load EAC into I
$53A    $6B3A   LD       VB, #3A         ; Load 58 into VB
$53C    $2531   CALL     $531            ; Call subroutine at 531
$53E    $90DC   UNKNOWN  $90DC           ; Unknown 9xxx instruction
$540    $D258   DRW      V2, V5, #8      ; Draw 8-byte sprite at V2, V5
$542    $9A14   UNKNOWN  $9A14           ; Unknown 9xxx instruction
$544    $51E9   UNKNOWN  $51E9           ; Unknown 5xxx instruction
$546    $D865   DRW      V8, V6, #5      ; Draw 5-byte sprite at V8, V6
$548    $552D   UNKNOWN  $552D           ; Unknown 5xxx instruction
$54A    $E255   UNKNOWN  $E255           ; Unknown Exxx instruction
$54C    $BCE3   JP       V0, $CE3        ; Jump to V0 + CE3
$54E    $8B09   UNKNOWN  8B09            ; Unknown 8xxx instruction
$550    $93A7   UNKNOWN  $93A7           ; Unknown 9xxx instruction
$552    $51DD   UNKNOWN  $51DD           ; Unknown 5xxx instruction
$554    $9A8D   UNKNOWN  $9A8D           ; Unknown 9xxx instruction
$556    $C350   RND      V3, #50         ; V3 = random & 50
$558    $2192   CALL     $192            ; Call subroutine at 192
$55A    $4521   SNE      V5, #21         ; Skip if V5 != 33
$55C    $9CFC   UNKNOWN  $9CFC           ; Unknown 9xxx instruction
$55E    $9EE7   UNKNOWN  $9EE7           ; Unknown 9xxx instruction
$560    $8246   SHR      V2              ; V2 >>= 1, VF = LSB
$562    $160F   JP       $60F            ; Jump to 60F
$564    $39D8   SE       V9, #D8         ; Skip if V9 == 216
$566    $34DE   SE       V4, #DE         ; Skip if V4 == 222
$568    $CBE3   RND      VB, #E3         ; VB = random & E3
$56A    $7521   ADD      V5, #21         ; Add 33 to V5
$56C    $D15A   DRW      V1, V5, #A      ; Draw 10-byte sprite at V1, V5
$56E    $E0C0   UNKNOWN  $E0C0           ; Unknown Exxx instruction
$570    $6889   LD       V8, #89         ; Load 137 into V8
$572    $2E01   CALL     $E01            ; Call subroutine at E01
$574    $BAFE   JP       V0, $AFE        ; Jump to V0 + AFE
$576    $1BA3   JP       $BA3            ; Jump to BA3
$578    $684B   LD       V8, #4B         ; Load 75 into V8
$57A    $463F   SNE      V6, #3F         ; Skip if V6 != 63
$57C    $5A2C   UNKNOWN  $5A2C           ; Unknown 5xxx instruction
$57E    $9CD4   UNKNOWN  $9CD4           ; Unknown 9xxx instruction
$580    $B617   JP       V0, $617        ; Jump to V0 + 617
$582    $EC0A   UNKNOWN  $EC0A           ; Unknown Exxx instruction
$584    $8284   ADD      V2, V8          ; V2 += V8, VF = carry
$586    $5A9D   UNKNOWN  $5A9D           ; Unknown 5xxx instruction
$588    $5A4E   UNKNOWN  $5A4E           ; Unknown 5xxx instruction
$58A    $1F1A   JP       $F1A            ; Jump to F1A
$58C    $E7A2   UNKNOWN  $E7A2           ; Unknown Exxx instruction
$58E    $E5FC   UNKNOWN  $E5FC           ; Unknown Exxx instruction
$590    $07C5   SYS      $7C5            ; System call to 7C5
$592    $C251   RND      V2, #51         ; V2 = random & 51
$594    $0C06   SYS      $C06            ; System call to C06
$596    $7A16   ADD      VA, #16         ; Add 22 to VA
$598    $2435   CALL     $435            ; Call subroutine at 435
$59A    $0C04   SYS      $C04            ; System call to C04
$59C    $8131   OR       V1, V3          ; V1 |= V3
$59E    $893C   UNKNOWN  893C            ; Unknown 8xxx instruction
$5A0    $DDCE   DRW      VD, VC, #E      ; Draw 14-byte sprite at VD, VC
$5A2    $17E4   JP       $7E4            ; Jump to 7E4
$5A4    $18F9   JP       $8F9            ; Jump to 8F9
$5A6    $A6A5   LD       I, $6A5         ; Load 6A5 into I
$5A8    $03F7   SYS      $3F7            ; System call to 3F7
$5AA    $9177   UNKNOWN  $9177           ; Unknown 9xxx instruction
$5AC    $4CF4   SNE      VC, #F4         ; Skip if VC != 244
$5AE    $F583   UNKNOWN  F583            ; Unknown Fxxx instruction
$5B0    $712F   ADD      V1, #2F         ; Add 47 to V1
$5B2    $E6B1   UNKNOWN  $E6B1           ; Unknown Exxx instruction
$5B4    $28BE   CALL     $8BE            ; Call subroutine at 8BE
$5B6    $FCE7   UNKNOWN  FCE7            ; Unknown Fxxx instruction
$5B8    $2A70   CALL     $A70            ; Call subroutine at A70
$5BA    $560E   UNKNOWN  $560E           ; Unknown 5xxx instruction
$5BC    $304D   SE       V0, #4D         ; Skip if V0 == 77
$5BE    $5599   UNKNOWN  $5599           ; Unknown 5xxx instruction
$5C0    $EB31   UNKNOWN  $EB31           ; Unknown Exxx instruction
$5C2    $E158   UNKNOWN  $E158           ; Unknown Exxx instruction
$5C4    $A3F1   LD       I, $3F1         ; Load 3F1 into I
$5C6    $1ED7   JP       $ED7            ; Jump to ED7
$5C8    $05F5   SYS      $5F5            ; System call to 5F5
$5CA    $2D33   CALL     $D33            ; Call subroutine at D33
$5CC    $9D47   UNKNOWN  $9D47           ; Unknown 9xxx instruction
$5CE    $D124   DRW      V1, V2, #4      ; Draw 4-byte sprite at V1, V2
$5D0    $B1CC   JP       V0, $1CC        ; Jump to V0 + 1CC
$5D2    $AB01   LD       I, $B01         ; Load B01 into I
$5D4    $1158   JP       $158            ; Jump to 158
$5D6    $70E9   ADD      V0, #E9         ; Add 233 to V0
$5D8    $0766   SYS      $766            ; System call to 766
$5DA    $3806   SE       V8, #06         ; Skip if V8 == 6
$5DC    $E34F   UNKNOWN  $E34F           ; Unknown Exxx instruction
$5DE    $82A3   XOR      V2, VA          ; V2 ^= VA
$5E0    $45ED   SNE      V5, #ED         ; Skip if V5 != 237
$5E2    $826C   UNKNOWN  826C            ; Unknown 8xxx instruction
$5E4    $665B   LD       V6, #5B         ; Load 91 into V6
$5E6    $778D   ADD      V7, #8D         ; Add 141 to V7
$5E8    $429F   SNE      V2, #9F         ; Skip if V2 != 159
$5EA    $6F08   LD       VF, #08         ; Load 8 into VF
$5EC    $1128   JP       $128            ; Jump to 128
$5EE    $A914   LD       I, $914         ; Load 914 into I
$5F0    $9CD7   UNKNOWN  $9CD7           ; Unknown 9xxx instruction
$5F2    $1FCE   JP       $FCE            ; Jump to FCE
$5F4    $36F5   SE       V6, #F5         ; Skip if V6 == 245
$5F6    $9464   UNKNOWN  $9464           ; Unknown 9xxx instruction
$5F8    $F3BB   UNKNOWN  F3BB            ; Unknown Fxxx instruction
$5FA    $700F   ADD      V0, #0F         ; Add 15 to V0
$5FC    $7700   ADD      V7, #00         ; Add 0 to V7
$5FE    $E203   UNKNOWN  $E203           ; Unknown Exxx instruction
$600    $C2BF   RND      V2, #BF         ; V2 = random & BF
$602    $E174   UNKNOWN  $E174           ; Unknown Exxx instruction
$604    $3B9E   SE       VB, #9E         ; Skip if VB == 158
$606    $E3D8   UNKNOWN  $E3D8           ; Unknown Exxx instruction
$608    $2006   CALL     $006            ; Call subroutine at 006
$60A    $B5CD   JP       V0, $5CD        ; Jump to V0 + 5CD
$60C    $59AE   UNKNOWN  $59AE           ; Unknown 5xxx instruction
$60E    $9E71   UNKNOWN  $9E71           ; Unknown 9xxx instruction
$610    $9E22   UNKNOWN  $9E22           ; Unknown 9xxx instruction
$612    $E8BC   UNKNOWN  $E8BC           ; Unknown Exxx instruction
$614    $830B   UNKNOWN  830B            ; Unknown 8xxx instruction
$616    $1FCD   JP       $FCD            ; Jump to FCD
$618    $F94A   UNKNOWN  F94A            ; Unknown Fxxx instruction
$61A    $6DFD   LD       VD, #FD         ; Load 253 into VD
$61C    $53D6   UNKNOWN  $53D6           ; Unknown 5xxx instruction
$61E    $E0A6   UNKNOWN  $E0A6           ; Unknown Exxx instruction
$620    $98E5   UNKNOWN  $98E5           ; Unknown 9xxx instruction
$622    $A51D   LD       I, $51D         ; Load 51D into I
$624    $C00E   RND      V0, #0E         ; V0 = random & 0E
$626    $53EE   UNKNOWN  $53EE           ; Unknown 5xxx instruction
$628    $FBAE   UNKNOWN  FBAE            ; Unknown Fxxx instruction
$62A    $A5EC   LD       I, $5EC         ; Load 5EC into I
$62C    $B2FC   JP       V0, $2FC        ; Jump to V0 + 2FC
$62E    $5888   UNKNOWN  $5888           ; Unknown 5xxx instruction
$630    $BBC5   JP       V0, $BC5        ; Jump to V0 + BC5
$632    $B253   JP       V0, $253        ; Jump to V0 + 253
$634    $87B6   SHR      V7              ; V7 >>= 1, VF = LSB
$636    $1224   JP       $224            ; Jump to 224
$638    $EE5F   UNKNOWN  $EE5F           ; Unknown Exxx instruction
$63A    $EF92   UNKNOWN  $EF92           ; Unknown Exxx instruction
$63C    $C8E6   RND      V8, #E6         ; V8 = random & E6
$63E    $52C4   UNKNOWN  $52C4           ; Unknown 5xxx instruction
$640    $0C01   SYS      $C01            ; System call to C01
$642    $F63F   UNKNOWN  F63F            ; Unknown Fxxx instruction
$644    $5C34   UNKNOWN  $5C34           ; Unknown 5xxx instruction
$646    $A98C   LD       I, $98C         ; Load 98C into I
$648    $761D   ADD      V6, #1D         ; Add 29 to V6
$64A    $8207   SUBN     V2, V0          ; V2 = V0 - V2, VF = !borrow
$64C    $B070   JP       V0, $070        ; Jump to V0 + 070
$64E    $96F8   UNKNOWN  $96F8           ; Unknown 9xxx instruction
$650    $2C7D   CALL     $C7D            ; Call subroutine at C7D
$652    $1379   JP       $379            ; Jump to 379
$654    $CC07   RND      VC, #07         ; VC = random & 07
$656    $D778   DRW      V7, V7, #8      ; Draw 8-byte sprite at V7, V7
$658    $F126   UNKNOWN  F126            ; Unknown Fxxx instruction
$65A    $6FFE   LD       VF, #FE         ; Load 254 into VF
$65C    $45F6   SNE      V5, #F6         ; Skip if V5 != 246
$65E    $BDC0   JP       V0, $DC0        ; Jump to V0 + DC0
$660    $F3A0   UNKNOWN  F3A0            ; Unknown Fxxx instruction
$662    $8E36   SHR      VE              ; VE >>= 1, VF = LSB
$664    $39BE   SE       V9, #BE         ; Skip if V9 == 190
$666    $239C   CALL     $39C            ; Call subroutine at 39C
$668    $56E5   UNKNOWN  $56E5           ; Unknown 5xxx instruction
$66A    $E4EE   UNKNOWN  $E4EE           ; Unknown Exxx instruction
$66C    $1754   JP       $754            ; Jump to 754
$66E    $3B05   SE       VB, #05         ; Skip if VB == 5
$670    $D60C   DRW      V6, V0, #C      ; Draw 12-byte sprite at V6, V0
$672    $FB41   UNKNOWN  FB41            ; Unknown Fxxx instruction
$674    $417B   SNE      V1, #7B         ; Skip if V1 != 123
$676    $9385   UNKNOWN  $9385           ; Unknown 9xxx instruction
$678    $EA8F   UNKNOWN  $EA8F           ; Unknown Exxx instruction
$67A    $62AB   LD       V2, #AB         ; Load 171 into V2
$67C    $1309   JP       $309            ; Jump to 309
$67E    $97E1   UNKNOWN  $97E1           ; Unknown 9xxx instruction
$680    $DCF3   DRW      VC, VF, #3      ; Draw 3-byte sprite at VC, VF
$682    $8947   SUBN     V9, V4          ; V9 = V4 - V9, VF = !borrow
$684    $5FDB   UNKNOWN  $5FDB           ; Unknown 5xxx instruction
$686    $86F5   SUB      V6, VF          ; V6 -= VF, VF = !borrow
$688    $1982   JP       $982            ; Jump to 982
$68A    $A113   LD       I, $113         ; Load 113 into I
$68C    $0FD5   SYS      $FD5            ; System call to FD5
$68E    $FEA5   UNKNOWN  FEA5            ; Unknown Fxxx instruction
$690    $540A   UNKNOWN  $540A           ; Unknown 5xxx instruction
$692    $28A0   CALL     $8A0            ; Call subroutine at 8A0
$694    $2272   CALL     $272            ; Call subroutine at 272
$696    $F521   UNKNOWN  F521            ; Unknown Fxxx instruction
$698    $2C1F   CALL     $C1F            ; Call subroutine at C1F
$69A    $3CF7   SE       VC, #F7         ; Skip if VC == 247
$69C    $0F71   SYS      $F71            ; System call to F71
$69E    $937B   UNKNOWN  $937B           ; Unknown 9xxx instruction
$6A0    $7455   ADD      V4, #55         ; Add 85 to V4
$6A2    $79F3   ADD      V9, #F3         ; Add 243 to V9
$6A4    $E32D   UNKNOWN  $E32D           ; Unknown Exxx instruction
$6A6    $AB34   LD       I, $B34         ; Load B34 into I
$6A8    $9CD3   UNKNOWN  $9CD3           ; Unknown 9xxx instruction
$6AA    $FD16   UNKNOWN  FD16            ; Unknown Fxxx instruction
$6AC    $45CC   SNE      V5, #CC         ; Skip if V5 != 204
$6AE    $AF69   LD       I, $F69         ; Load F69 into I
$6B0    $ECD4   UNKNOWN  $ECD4           ; Unknown Exxx instruction
$6B2    $23AD   CALL     $3AD            ; Call subroutine at 3AD
$6B4    $FDA2   UNKNOWN  FDA2            ; Unknown Fxxx instruction
$6B6    $6219   LD       V2, #19         ; Load 25 into V2
$6B8    $9C6A   UNKNOWN  $9C6A           ; Unknown 9xxx instruction
$6BA    $9632   UNKNOWN  $9632           ; Unknown 9xxx instruction
$6BC    $3D1A   SE       VD, #1A         ; Skip if VD == 26
$6BE    $0558   SYS      $558            ; System call to 558
$6C0    $DAB3   DRW      VA, VB, #3      ; Draw 3-byte sprite at VA, VB
$6C2    $BDE3   JP       V0, $DE3        ; Jump to V0 + DE3
$6C4    $0A7F   SYS      $A7F            ; System call to A7F
$6C6    $BC51   JP       V0, $C51        ; Jump to V0 + C51
$6C8    $664F   LD       V6, #4F         ; Load 79 into V6
$6CA    $C856   RND      V8, #56         ; V8 = random & 56
$6CC    $3FB5   SE       VF, #B5         ; Skip if VF == 181
$6CE    $1EE6   JP       $EE6            ; Jump to EE6
$6D0    $3A4E   SE       VA, #4E         ; Skip if VA == 78
$6D2    $6639   LD       V6, #39         ; Load 57 into V6
$6D4    $2221   CALL     $221            ; Call subroutine at 221
$6D6    $F15F   UNKNOWN  F15F            ; Unknown Fxxx instruction
$6D8    $DF72   DRW      VF, V7, #2      ; Draw 2-byte sprite at VF, V7
$6DA    $846B   UNKNOWN  846B            ; Unknown 8xxx instruction
$6DC    $47A0   SNE      V7, #A0         ; Skip if V7 != 160
$6DE    $4038   SNE      V0, #38         ; Skip if V0 != 56
$6E0    $66CA   LD       V6, #CA         ; Load 202 into V6
$6E2    $8ADD   UNKNOWN  8ADD            ; Unknown 8xxx instruction
$6E4    $9841   UNKNOWN  $9841           ; Unknown 9xxx instruction
$6E6    $4325   SNE      V3, #25         ; Skip if V3 != 37
$6E8    $BD43   JP       V0, $D43        ; Jump to V0 + D43
$6EA    $6CD2   LD       VC, #D2         ; Load 210 into VC
$6EC    $F0D6   UNKNOWN  F0D6            ; Unknown Fxxx instruction
$6EE    $DF78   DRW      VF, V7, #8      ; Draw 8-byte sprite at VF, V7
$6F0    $0710   SYS      $710            ; System call to 710
$6F2    $1219   JP       $219            ; Jump to 219
$6F4    $BE9B   JP       V0, $E9B        ; Jump to V0 + E9B
$6F6    $5499   UNKNOWN  $5499           ; Unknown 5xxx instruction
$6F8    $E712   UNKNOWN  $E712           ; Unknown Exxx instruction
$6FA    $B07E   JP       V0, $07E        ; Jump to V0 + 07E
$6FC    $7A80   ADD      VA, #80         ; Add 128 to VA
$6FE    $3FDD   SE       VF, #DD         ; Skip if VF == 221
$700    $5E97   UNKNOWN  $5E97           ; Unknown 5xxx instruction
$702    $C271   RND      V2, #71         ; V2 = random & 71
$704    $7967   ADD      V9, #67         ; Add 103 to V9
$706    $FCA1   UNKNOWN  FCA1            ; Unknown Fxxx instruction
$708    $1168   JP       $168            ; Jump to 168
$70A    $3DEE   SE       VD, #EE         ; Skip if VD == 238
$70C    $FBCA   UNKNOWN  FBCA            ; Unknown Fxxx instruction
$70E    $2CE8   CALL     $CE8            ; Call subroutine at CE8
$710    $469A   SNE      V6, #9A         ; Skip if V6 != 154
$712    $EBF1   UNKNOWN  $EBF1           ; Unknown Exxx instruction
$714    $05B5   SYS      $5B5            ; System call to 5B5
$716    $5AFC   UNKNOWN  $5AFC           ; Unknown 5xxx instruction
$718    $62E6   LD       V2, #E6         ; Load 230 into V2
$71A    $8F29   UNKNOWN  8F29            ; Unknown 8xxx instruction
$71C    $75D2   ADD      V5, #D2         ; Add 210 to V5
$71E    $9566   UNKNOWN  $9566           ; Unknown 9xxx instruction
$720    $1BEE   JP       $BEE            ; Jump to BEE
$722    $39FD   SE       V9, #FD         ; Skip if V9 == 253
$724    $B529   JP       V0, $529        ; Jump to V0 + 529
$726    $9AEF   UNKNOWN  $9AEF           ; Unknown 9xxx instruction
$728    $BCC8   JP       V0, $CC8        ; Jump to V0 + CC8
$72A    $A959   LD       I, $959         ; Load 959 into I
$72C    $13E9   JP       $3E9            ; Jump to 3E9
$72E    $F98F   UNKNOWN  F98F            ; Unknown Fxxx instruction
$730    $50D9   UNKNOWN  $50D9           ; Unknown 5xxx instruction
$732    $9199   UNKNOWN  $9199           ; Unknown 9xxx instruction
$734    $C269   RND      V2, #69         ; V2 = random & 69
$736    $F92A   UNKNOWN  F92A            ; Unknown Fxxx instruction
$738    $77A7   ADD      V7, #A7         ; Add 167 to V7
$73A    $3606   SE       V6, #06         ; Skip if V6 == 6
$73C    $D953   DRW      V9, V5, #3      ; Draw 3-byte sprite at V9, V5
$73E    $453A   SNE      V5, #3A         ; Skip if V5 != 58
$740    $A001   LD       I, $001         ; Load 001 into I
$742    $A182   LD       I, $182         ; Load 182 into I
$744    $617C   LD       V1, #7C         ; Load 124 into V1
$746    $4D17   SNE      VD, #17         ; Skip if VD != 23
$748    $B819   JP       V0, $819        ; Jump to V0 + 819
$74A    $19EE   JP       $9EE            ; Jump to 9EE
$74C    $A155   LD       I, $155         ; Load 155 into I
$74E    $C344   RND      V3, #44         ; V3 = random & 44
$750    $B005   JP       V0, $005        ; Jump to V0 + 005
$752    $B44A   JP       V0, $44A        ; Jump to V0 + 44A
$754    $E6C9   UNKNOWN  $E6C9           ; Unknown Exxx instruction
$756    $E35C   UNKNOWN  $E35C           ; Unknown Exxx instruction
$758    $8FD1   OR       VF, VD          ; VF |= VD
$75A    $C594   RND      V5, #94         ; V5 = random & 94
$75C    $5735   UNKNOWN  $5735           ; Unknown 5xxx instruction
$75E    $0F23   SYS      $F23            ; System call to F23
$760    $16D5   JP       $6D5            ; Jump to 6D5
$762    $5C70   SE       VC, V7          ; Skip if VC == V7
$764    $CFC2   RND      VF, #C2         ; VF = random & C2
$766    $4151   SNE      V1, #51         ; Skip if V1 != 81
$768    $1DB3   JP       $DB3            ; Jump to DB3
$76A    $F8B0   UNKNOWN  F8B0            ; Unknown Fxxx instruction
$76C    $8650   LD       V6, V5          ; V6 = V5
$76E    $EE7C   UNKNOWN  $EE7C           ; Unknown Exxx instruction
$770    $E333   UNKNOWN  $E333           ; Unknown Exxx instruction
$772    $BBD5   JP       V0, $BD5        ; Jump to V0 + BD5
$774    $5C2A   UNKNOWN  $5C2A           ; Unknown 5xxx instruction
$776    $329E   SE       V2, #9E         ; Skip if V2 == 158
$778    $F2AF   UNKNOWN  F2AF            ; Unknown Fxxx instruction
$77A    $FF44   UNKNOWN  FF44            ; Unknown Fxxx instruction
$77C    $31D4   SE       V1, #D4         ; Skip if V1 == 212
$77E    $4951   SNE      V9, #51         ; Skip if V9 != 81
$780    $5582   UNKNOWN  $5582           ; Unknown 5xxx instruction
$782    $835B   UNKNOWN  835B            ; Unknown 8xxx instruction
$784    $3A64   SE       VA, #64         ; Skip if VA == 100
$786    $FE08   UNKNOWN  FE08            ; Unknown Fxxx instruction
$788    $9632   UNKNOWN  $9632           ; Unknown 9xxx instruction
$78A    $9AAD   UNKNOWN  $9AAD           ; Unknown 9xxx instruction
$78C    $CFB4   RND      VF, #B4         ; VF = random & B4
$78E    $36C7   SE       V6, #C7         ; Skip if V6 == 199
$790    $A853   LD       I, $853         ; Load 853 into I
$792    $55B6   UNKNOWN  $55B6           ; Unknown 5xxx instruction
$794    $E97C   UNKNOWN  $E97C           ; Unknown Exxx instruction
$796    $5853   UNKNOWN  $5853           ; Unknown 5xxx instruction
$798    $5602   UNKNOWN  $5602           ; Unknown 5xxx instruction
$79A    $D801   DRW      V8, V0, #1      ; Draw 1-byte sprite at V8, V0
$79C    $4869   SNE      V8, #69         ; Skip if V8 != 105
$79E    $3B7C   SE       VB, #7C         ; Skip if VB == 124
$7A0    $8CD2   AND      VC, VD          ; VC &= VD
$7A2    $281A   CALL     $81A            ; Call subroutine at 81A
$7A4    $B0CB   JP       V0, $0CB        ; Jump to V0 + 0CB
$7A6    $C2C2   RND      V2, #C2         ; V2 = random & C2
$7A8    $E783   UNKNOWN  $E783           ; Unknown Exxx instruction
$7AA    $431F   SNE      V3, #1F         ; Skip if V3 != 31
$7AC    $DB90   DRW      VB, V9, #0      ; Draw 0-byte sprite at VB, V9
$7AE    $6952   LD       V9, #52         ; Load 82 into V9
$7B0    $245F   CALL     $45F            ; Call subroutine at 45F
$7B2    $173E   JP       $73E            ; Jump to 73E
$7B4    $02CE   SYS      $2CE            ; System call to 2CE
$7B6    $27D9   CALL     $7D9            ; Call subroutine at 7D9
$7B8    $1201   JP       $201            ; Jump to 201
$7BA    $C922   RND      V9, #22         ; V9 = random & 22
$7BC    $0F87   SYS      $F87            ; System call to F87
$7BE    $EE47   UNKNOWN  $EE47           ; Unknown Exxx instruction
$7C0    $FFD9   UNKNOWN  FFD9            ; Unknown Fxxx instruction
$7C2    $E0F8   UNKNOWN  $E0F8           ; Unknown Exxx instruction
$7C4    $1775   JP       $775            ; Jump to 775
$7C6    $5B51   UNKNOWN  $5B51           ; Unknown 5xxx instruction
$7C8    $DF6B   DRW      VF, V6, #B      ; Draw 11-byte sprite at VF, V6
$7CA    $4869   SNE      V8, #69         ; Skip if V8 != 105
$7CC    $5082   UNKNOWN  $5082           ; Unknown 5xxx instruction
$7CE    $73C0   ADD      V3, #C0         ; Add 192 to V3
$7D0    $8A55   SUB      VA, V5          ; VA -= V5, VF = !borrow
$7D2    $0CEF   SYS      $CEF            ; System call to CEF
$7D4    $B6B5   JP       V0, $6B5        ; Jump to V0 + 6B5
$7D6    $9E3C   UNKNOWN  $9E3C           ; Unknown 9xxx instruction
$7D8    $93A9   UNKNOWN  $93A9           ; Unknown 9xxx instruction
$7DA    $185A   JP       $85A            ; Jump to 85A
$7DC    $6189   LD       V1, #89         ; Load 137 into V1
$7DE    $1F47   JP       $F47            ; Jump to F47
$7E0    $3140   SE       V1, #40         ; Skip if V1 == 64
$7E2    $967F   UNKNOWN  $967F           ; Unknown 9xxx instruction
$7E4    $D9B4   DRW      V9, VB, #4      ; Draw 4-byte sprite at V9, VB
$7E6    $1B4D   JP       $B4D            ; Jump to B4D
$7E8    $A30E   LD       I, $30E         ; Load 30E into I
$7EA    $C3CD   RND      V3, #CD         ; V3 = random & CD
$7EC    $0DCE   SYS      $DCE            ; System call to DCE
$7EE    $AD4E   LD       I, $D4E         ; Load D4E into I
$7F0    $4B13   SNE      VB, #13         ; Skip if VB != 19
$7F2    $8D76   SHR      VD              ; VD >>= 1, VF = LSB
$7F4    $8662   AND      V6, V6          ; V6 &= V6
$7F6    $0B1D   SYS      $B1D            ; System call to B1D
$7F8    $3D73   SE       VD, #73         ; Skip if VD == 115
$7FA    $55C8   UNKNOWN  $55C8           ; Unknown 5xxx instruction
$7FC    $1D3E   JP       $D3E            ; Jump to D3E
$7FE    $B424   JP       V0, $424        ; Jump to V0 + 424
$800    $3F79   SE       VF, #79         ; Skip if VF == 121
$802    $510D   UNKNOWN  $510D           ; Unknown 5xxx instruction
$804    $7185   ADD      V1, #85         ; Add 133 to V1
$806    $BE2B   JP       V0, $E2B        ; Jump to V0 + E2B
$808    $94E8   UNKNOWN  $94E8           ; Unknown 9xxx instruction
$80A    $0A6E   SYS      $A6E            ; System call to A6E
$80C    $D609   DRW      V6, V0, #9      ; Draw 9-byte sprite at V6, V0
$80E    $3795   SE       V7, #95         ; Skip if V7 == 149
$810    $13A7   JP       $3A7            ; Jump to 3A7
$812    $C038   RND      V0, #38         ; V0 = random & 38
$814    $D01D   DRW      V0, V1, #D      ; Draw 13-byte sprite at V0, V1
$816    $D6DA   DRW      V6, VD, #A      ; Draw 10-byte sprite at V6, VD
$818    $2785   CALL     $785            ; Call subroutine at 785
$81A    $2F7B   CALL     $F7B            ; Call subroutine at F7B
$81C    $8039   UNKNOWN  8039            ; Unknown 8xxx instruction
$81E    $3427   SE       V4, #27         ; Skip if V4 == 39
$820    $9BDB   UNKNOWN  $9BDB           ; Unknown 9xxx instruction
$822    $1531   JP       $531            ; Jump to 531
$824    $1DBF   JP       $DBF            ; Jump to DBF
$826    $22E9   CALL     $2E9            ; Call subroutine at 2E9
$828    $15B7   JP       $5B7            ; Jump to 5B7
$82A    $FCE8   UNKNOWN  FCE8            ; Unknown Fxxx instruction
$82C    $2583   CALL     $583            ; Call subroutine at 583
$82E    $6B0C   LD       VB, #0C         ; Load 12 into VB
$830    $8F7E   SHL      VF              ; VF <<= 1, VF = MSB
$832    $3E79   SE       VE, #79         ; Skip if VE == 121
$834    $9755   UNKNOWN  $9755           ; Unknown 9xxx instruction
$836    $34F1   SE       V4, #F1         ; Skip if V4 == 241
$838    $85E9   UNKNOWN  85E9            ; Unknown 8xxx instruction
$83A    $776D   ADD      V7, #6D         ; Add 109 to V7
$83C    $856B   UNKNOWN  856B            ; Unknown 8xxx instruction
$83E    $7B0B   ADD      VB, #0B         ; Add 11 to VB
$840    $5ADB   UNKNOWN  $5ADB           ; Unknown 5xxx instruction
$842    $1BCB   JP       $BCB            ; Jump to BCB
$844    $AE44   LD       I, $E44         ; Load E44 into I
$846    $C7C8   RND      V7, #C8         ; V7 = random & C8
$848    $3161   SE       V1, #61         ; Skip if V1 == 97
$84A    $FF05   UNKNOWN  FF05            ; Unknown Fxxx instruction
$84C    $A363   LD       I, $363         ; Load 363 into I
$84E    $8AB5   SUB      VA, VB          ; VA -= VB, VF = !borrow
$850    $1FEC   JP       $FEC            ; Jump to FEC
$852    $3CCF   SE       VC, #CF         ; Skip if VC == 207
$854    $8D34   ADD      VD, V3          ; VD += V3, VF = carry
$856    $E69E   SKP      V6              ; Skip if key V6 pressed
$858    $12DE   JP       $2DE            ; Jump to 2DE
$85A    $DBA5   DRW      VB, VA, #5      ; Draw 5-byte sprite at VB, VA
$85C    $40F3   SNE      V0, #F3         ; Skip if V0 != 243
$85E    $40A9   SNE      V0, #A9         ; Skip if V0 != 169
$860    $CE1C   RND      VE, #1C         ; VE = random & 1C
$862    $E3FC   UNKNOWN  $E3FC           ; Unknown Exxx instruction
$864    $19B2   JP       $9B2            ; Jump to 9B2
$866    $4EEA   SNE      VE, #EA         ; Skip if VE != 234
$868    $421A   SNE      V2, #1A         ; Skip if V2 != 26
$86A    $E94B   UNKNOWN  $E94B           ; Unknown Exxx instruction
$86C    $F231   UNKNOWN  F231            ; Unknown Fxxx instruction
$86E    $D605   DRW      V6, V0, #5      ; Draw 5-byte sprite at V6, V0
$870    $6F38   LD       VF, #38         ; Load 56 into VF
$872    $8458   UNKNOWN  8458            ; Unknown 8xxx instruction
$874    $FA77   UNKNOWN  FA77            ; Unknown Fxxx instruction
$876    $E9B6   UNKNOWN  $E9B6           ; Unknown Exxx instruction
$878    $30A7   SE       V0, #A7         ; Skip if V0 == 167
$87A    $2C23   CALL     $C23            ; Call subroutine at C23
$87C    $8CA6   SHR      VC              ; VC >>= 1, VF = LSB
$87E    $7FEA   ADD      VF, #EA         ; Add 234 to VF
$880    $A15B   LD       I, $15B         ; Load 15B into I
$882    $00B7   SYS      $0B7            ; System call to 0B7
$884    $B5C8   JP       V0, $5C8        ; Jump to V0 + 5C8
$886    $D7F7   DRW      V7, VF, #7      ; Draw 7-byte sprite at V7, VF
$888    $B7DC   JP       V0, $7DC        ; Jump to V0 + 7DC
$88A    $3E41   SE       VE, #41         ; Skip if VE == 65
$88C    $BE91   JP       V0, $E91        ; Jump to V0 + E91
$88E    $9332   UNKNOWN  $9332           ; Unknown 9xxx instruction
$890    $D198   DRW      V1, V9, #8      ; Draw 8-byte sprite at V1, V9
$892    $3BDC   SE       VB, #DC         ; Skip if VB == 220
$894    $1F79   JP       $F79            ; Jump to F79
$896    $4EA9   SNE      VE, #A9         ; Skip if VE != 169
$898    $3C5A   SE       VC, #5A         ; Skip if VC == 90
$89A    $90B6   UNKNOWN  $90B6           ; Unknown 9xxx instruction
$89C    $48EA   SNE      V8, #EA         ; Skip if V8 != 234
$89E    $9E7A   UNKNOWN  $9E7A           ; Unknown 9xxx instruction
$8A0    $F320   UNKNOWN  F320            ; Unknown Fxxx instruction
$8A2    $CEC9   RND      VE, #C9         ; VE = random & C9
$8A4    $5754   UNKNOWN  $5754           ; Unknown 5xxx instruction
$8A6    $FF16   UNKNOWN  FF16            ; Unknown Fxxx instruction
$8A8    $82D9   UNKNOWN  82D9            ; Unknown 8xxx instruction
$8AA    $EA45   UNKNOWN  $EA45           ; Unknown Exxx instruction
$8AC    $FD8D   UNKNOWN  FD8D            ; Unknown Fxxx instruction
$8AE    $36DD   SE       V6, #DD         ; Skip if V6 == 221
$8B0    $B4D1   JP       V0, $4D1        ; Jump to V0 + 4D1
$8B2    $0232   SYS      $232            ; System call to 232
$8B4    $8BD0   LD       VB, VD          ; VB = VD
$8B6    $19E9   JP       $9E9            ; Jump to 9E9
$8B8    $8E83   XOR      VE, V8          ; VE ^= V8
$8BA    $9AC1   UNKNOWN  $9AC1           ; Unknown 9xxx instruction
$8BC    $E500   UNKNOWN  $E500           ; Unknown Exxx instruction
$8BE    $2EE0   CALL     $EE0            ; Call subroutine at EE0
$8C0    $A940   LD       I, $940         ; Load 940 into I
$8C2    $5087   UNKNOWN  $5087           ; Unknown 5xxx instruction
$8C4    $37E2   SE       V7, #E2         ; Skip if V7 == 226
$8C6    $9C4C   UNKNOWN  $9C4C           ; Unknown 9xxx instruction
$8C8    $52E4   UNKNOWN  $52E4           ; Unknown 5xxx instruction
$8CA    $303F   SE       V0, #3F         ; Skip if V0 == 63
$8CC    $A8B2   LD       I, $8B2         ; Load 8B2 into I
$8CE    $5679   UNKNOWN  $5679           ; Unknown 5xxx instruction
$8D0    $487A   SNE      V8, #7A         ; Skip if V8 != 122
$8D2    $4F83   SNE      VF, #83         ; Skip if VF != 131
$8D4    $C6B2   RND      V6, #B2         ; V6 = random & B2
$8D6    $5E50   SE       VE, V5          ; Skip if VE == V5
$8D8    $9BDE   UNKNOWN  $9BDE           ; Unknown 9xxx instruction
$8DA    $D5C9   DRW      V5, VC, #9      ; Draw 9-byte sprite at V5, VC
$8DC    $C4A7   RND      V4, #A7         ; V4 = random & A7
$8DE    $A40C   LD       I, $40C         ; Load 40C into I
$8E0    $67E2   LD       V7, #E2         ; Load 226 into V7
$8E2    $D676   DRW      V6, V7, #6      ; Draw 6-byte sprite at V6, V7
$8E4    $5833   UNKNOWN  $5833           ; Unknown 5xxx instruction
$8E6    $E14F   UNKNOWN  $E14F           ; Unknown Exxx instruction
$8E8    $8D47   SUBN     VD, V4          ; VD = V4 - VD, VF = !borrow
$8EA    $C348   RND      V3, #48         ; V3 = random & 48
$8EC    $72B4   ADD      V2, #B4         ; Add 180 to V2
$8EE    $E9A0   UNKNOWN  $E9A0           ; Unknown Exxx instruction
$8F0    $5217   UNKNOWN  $5217           ; Unknown 5xxx instruction
$8F2    $1104   JP       $104            ; Jump to 104
$8F4    $F7AE   UNKNOWN  F7AE            ; Unknown Fxxx instruction
$8F6    $3F1A   SE       VF, #1A         ; Skip if VF == 26
$8F8    $CC0B   RND      VC, #0B         ; VC = random & 0B
$8FA    $55C3   UNKNOWN  $55C3           ; Unknown 5xxx instruction
$8FC    $CEB1   RND      VE, #B1         ; VE = random & B1
$8FE    $D683   DRW      V6, V8, #3      ; Draw 3-byte sprite at V6, V8
$900    $6F5D   LD       VF, #5D         ; Load 93 into VF
$902    $90CE   UNKNOWN  $90CE           ; Unknown 9xxx instruction
$904    $E60D   UNKNOWN  $E60D           ; Unknown Exxx instruction
$906    $DFF9   DRW      VF, VF, #9      ; Draw 9-byte sprite at VF, VF
$908    $EAD8   UNKNOWN  $EAD8           ; Unknown Exxx instruction
$90A    $9A14   UNKNOWN  $9A14           ; Unknown 9xxx instruction
$90C    $B0EB   JP       V0, $0EB        ; Jump to V0 + 0EB
$90E    $AB4B   LD       I, $B4B         ; Load B4B into I
$910    $6A69   LD       VA, #69         ; Load 105 into VA
$912    $0D81   SYS      $D81            ; System call to D81
$914    $238F   CALL     $38F            ; Call subroutine at 38F
$916    $3115   SE       V1, #15         ; Skip if V1 == 21
$918    $1A35   JP       $A35            ; Jump to A35
$91A    $7325   ADD      V3, #25         ; Add 37 to V3
$91C    $ED39   UNKNOWN  $ED39           ; Unknown Exxx instruction
$91E    $FDAB   UNKNOWN  FDAB            ; Unknown Fxxx instruction
$920    $861D   UNKNOWN  861D            ; Unknown 8xxx instruction
$922    $FB2D   UNKNOWN  FB2D            ; Unknown Fxxx instruction
$924    $4CFC   SNE      VC, #FC         ; Skip if VC != 252
$926    $85E3   XOR      V5, VE          ; V5 ^= VE
$928    $C6AD   RND      V6, #AD         ; V6 = random & AD
$92A    $7468   ADD      V4, #68         ; Add 104 to V4
$92C    $D559   DRW      V5, V5, #9      ; Draw 9-byte sprite at V5, V5
$92E    $4D1D   SNE      VD, #1D         ; Skip if VD != 29
$930    $8CAE   SHL      VC              ; VC <<= 1, VF = MSB
$932    $08FF   SYS      $8FF            ; System call to 8FF
$934    $5F14   UNKNOWN  $5F14           ; Unknown 5xxx instruction
$936    $9FC8   UNKNOWN  $9FC8           ; Unknown 9xxx instruction
$938    $D420   DRW      V4, V2, #0      ; Draw 0-byte sprite at V4, V2
$93A    $10A0   JP       $0A0            ; Jump to 0A0
$93C    $224A   CALL     $24A            ; Call subroutine at 24A
$93E    $1FE3   JP       $FE3            ; Jump to FE3
$940    $6B86   LD       VB, #86         ; Load 134 into VB
$942    $EF9E   SKP      VF              ; Skip if key VF pressed
$944    $FB2F   UNKNOWN  FB2F            ; Unknown Fxxx instruction
$946    $E46D   UNKNOWN  $E46D           ; Unknown Exxx instruction
$948    $41D1   SNE      V1, #D1         ; Skip if V1 != 209
$94A    $4AAD   SNE      VA, #AD         ; Skip if VA != 173
$94C    $D36E   DRW      V3, V6, #E      ; Draw 14-byte sprite at V3, V6
$94E    $8728   UNKNOWN  8728            ; Unknown 8xxx instruction
$950    $EF82   UNKNOWN  $EF82           ; Unknown Exxx instruction
$952    $2CDC   CALL     $CDC            ; Call subroutine at CDC
$954    $53E7   UNKNOWN  $53E7           ; Unknown 5xxx instruction
$956    $542E   UNKNOWN  $542E           ; Unknown 5xxx instruction
$958    $4997   SNE      V9, #97         ; Skip if V9 != 151
$95A    $21AE   CALL     $1AE            ; Call subroutine at 1AE
$95C    $8C35   SUB      VC, V3          ; VC -= V3, VF = !borrow
$95E    $113E   JP       $13E            ; Jump to 13E
$960    $8039   UNKNOWN  8039            ; Unknown 8xxx instruction
$962    $8F74   ADD      VF, V7          ; VF += V7, VF = carry
$964    $5EE2   UNKNOWN  $5EE2           ; Unknown 5xxx instruction
$966    $A1EE   LD       I, $1EE         ; Load 1EE into I
$968    $4C26   SNE      VC, #26         ; Skip if VC != 38
$96A    $2411   CALL     $411            ; Call subroutine at 411
$96C    $9360   SNE      V3, V6          ; Skip if V3 != V6
$96E    $125B   JP       $25B            ; Jump to 25B
$970    $831D   UNKNOWN  831D            ; Unknown 8xxx instruction
$972    $B169   JP       V0, $169        ; Jump to V0 + 169
$974    $9E32   UNKNOWN  $9E32           ; Unknown 9xxx instruction
$976    $7C18   ADD      VC, #18         ; Add 24 to VC
$978    $8FB8   UNKNOWN  8FB8            ; Unknown 8xxx instruction
$97A    $FE35   UNKNOWN  FE35            ; Unknown Fxxx instruction
$97C    $CFB6   RND      VF, #B6         ; VF = random & B6
$97E    $233D   CALL     $33D            ; Call subroutine at 33D
$980    $0909   SYS      $909            ; System call to 909
$982    $CF10   RND      VF, #10         ; VF = random & 10
$984    $F383   UNKNOWN  F383            ; Unknown Fxxx instruction
$986    $A5CB   LD       I, $5CB         ; Load 5CB into I
$988    $BAFC   JP       V0, $AFC        ; Jump to V0 + AFC
$98A    $7F80   ADD      VF, #80         ; Add 128 to VF
$98C    $A3CA   LD       I, $3CA         ; Load 3CA into I
$98E    $9144   UNKNOWN  $9144           ; Unknown 9xxx instruction
$990    $1881   JP       $881            ; Jump to 881
$992    $BA50   JP       V0, $A50        ; Jump to V0 + A50
$994    $20A4   CALL     $0A4            ; Call subroutine at 0A4
$996    $6808   LD       V8, #08         ; Load 8 into V8
$998    $3E07   SE       VE, #07         ; Skip if VE == 7
$99A    $D755   DRW      V7, V5, #5      ; Draw 5-byte sprite at V7, V5
$99C    $A1BB   LD       I, $1BB         ; Load 1BB into I
$99E    $746F   ADD      V4, #6F         ; Add 111 to V4
$9A0    $3831   SE       V8, #31         ; Skip if V8 == 49
$9A2    $FAE0   UNKNOWN  FAE0            ; Unknown Fxxx instruction
$9A4    $4286   SNE      V2, #86         ; Skip if V2 != 134
$9A6    $3CF0   SE       VC, #F0         ; Skip if VC == 240
$9A8    $5157   UNKNOWN  $5157           ; Unknown 5xxx instruction
$9AA    $839A   UNKNOWN  839A            ; Unknown 8xxx instruction
$9AC    $18B2   JP       $8B2            ; Jump to 8B2
$9AE    $DA57   DRW      VA, V5, #7      ; Draw 7-byte sprite at VA, V5
$9B0    $5D27   UNKNOWN  $5D27           ; Unknown 5xxx instruction
$9B2    $A3C2   LD       I, $3C2         ; Load 3C2 into I
$9B4    $B9E3   JP       V0, $9E3        ; Jump to V0 + 9E3
$9B6    $BAF6   JP       V0, $AF6        ; Jump to V0 + AF6
$9B8    $E972   UNKNOWN  $E972           ; Unknown Exxx instruction
$9BA    $71D7   ADD      V1, #D7         ; Add 215 to V1
$9BC    $C187   RND      V1, #87         ; V1 = random & 87
$9BE    $95F3   UNKNOWN  $95F3           ; Unknown 9xxx instruction
$9C0    $1271   JP       $271            ; Jump to 271
$9C2    $45DF   SNE      V5, #DF         ; Skip if V5 != 223
$9C4    $C85C   RND      V8, #5C         ; V8 = random & 5C
$9C6    $608C   LD       V0, #8C         ; Load 140 into V0
$9C8    $BE7A   JP       V0, $E7A        ; Jump to V0 + E7A
$9CA    $4459   SNE      V4, #59         ; Skip if V4 != 89
$9CC    $AD73   LD       I, $D73         ; Load D73 into I
$9CE    $133A   JP       $33A            ; Jump to 33A
$9D0    $1847   JP       $847            ; Jump to 847
$9D2    $37DC   SE       V7, #DC         ; Skip if V7 == 220
$9D4    $E520   UNKNOWN  $E520           ; Unknown Exxx instruction
$9D6    $A0D0   LD       I, $0D0         ; Load 0D0 into I
$9D8    $626B   LD       V2, #6B         ; Load 107 into V2
$9DA    $889B   UNKNOWN  889B            ; Unknown 8xxx instruction
$9DC    $BA78   JP       V0, $A78        ; Jump to V0 + A78
$9DE    $63A6   LD       V3, #A6         ; Load 166 into V3
$9E0    $0FF9   SYS      $FF9            ; System call to FF9
$9E2    $779B   ADD      V7, #9B         ; Add 155 to V7
$9E4    $133B   JP       $33B            ; Jump to 33B
$9E6    $6C98   LD       VC, #98         ; Load 152 into VC
$9E8    $8DF5   SUB      VD, VF          ; VD -= VF, VF = !borrow
$9EA    $7193   ADD      V1, #93         ; Add 147 to V1
$9EC    $962A   UNKNOWN  $962A           ; Unknown 9xxx instruction
$9EE    $D804   DRW      V8, V0, #4      ; Draw 4-byte sprite at V8, V0
$9F0    $ECCB   UNKNOWN  $ECCB           ; Unknown Exxx instruction
$9F2    $AA29   LD       I, $A29         ; Load A29 into I
$9F4    $D749   DRW      V7, V4, #9      ; Draw 9-byte sprite at V7, V4
$9F6    $D701   DRW      V7, V0, #1      ; Draw 1-byte sprite at V7, V0
$9F8    $16D9   JP       $6D9            ; Jump to 6D9
$9FA    $6563   LD       V5, #63         ; Load 99 into V5
$9FC    $23D8   CALL     $3D8            ; Call subroutine at 3D8
$9FE    $6117   LD       V1, #17         ; Load 23 into V1
$A00    $2114   CALL     $114            ; Call subroutine at 114
$A02    $C1EF   RND      V1, #EF         ; V1 = random & EF
$A04    $BEA4   JP       V0, $EA4        ; Jump to V0 + EA4
$A06    $AD89   LD       I, $D89         ; Load D89 into I
$A08    $45B7   SNE      V5, #B7         ; Skip if V5 != 183
$A0A    $AAB2   LD       I, $AB2         ; Load AB2 into I
$A0C    $A6D8   LD       I, $6D8         ; Load 6D8 into I
$A0E    $D8D5   DRW      V8, VD, #5      ; Draw 5-byte sprite at V8, VD
$A10    $7DC3   ADD      VD, #C3         ; Add 195 to VD
$A12    $D093   DRW      V0, V9, #3      ; Draw 3-byte sprite at V0, V9
$A14    $BC5C   JP       V0, $C5C        ; Jump to V0 + C5C
$A16    $9BA9   UNKNOWN  $9BA9           ; Unknown 9xxx instruction
$A18    $687F   LD       V8, #7F         ; Load 127 into V8
$A1A    $64DC   LD       V4, #DC         ; Load 220 into V4
$A1C    $882A   UNKNOWN  882A            ; Unknown 8xxx instruction
$A1E    $DFC0   DRW      VF, VC, #0      ; Draw 0-byte sprite at VF, VC
$A20    $D761   DRW      V7, V6, #1      ; Draw 1-byte sprite at V7, V6
$A22    $75B3   ADD      V5, #B3         ; Add 179 to V5
$A24    $0533   SYS      $533            ; System call to 533
$A26    $73BF   ADD      V3, #BF         ; Add 191 to V3
$A28    $275D   CALL     $75D            ; Call subroutine at 75D
$A2A    $96CC   UNKNOWN  $96CC           ; Unknown 9xxx instruction
$A2C    $32A1   SE       V2, #A1         ; Skip if V2 == 161
$A2E    $5BDF   UNKNOWN  $5BDF           ; Unknown 5xxx instruction
$A30    $5621   UNKNOWN  $5621           ; Unknown 5xxx instruction
$A32    $E210   UNKNOWN  $E210           ; Unknown Exxx instruction
$A34    $FB05   UNKNOWN  FB05            ; Unknown Fxxx instruction
$A36    $2639   CALL     $639            ; Call subroutine at 639
$A38    $8125   SUB      V1, V2          ; V1 -= V2, VF = !borrow
$A3A    $66D9   LD       V6, #D9         ; Load 217 into V6
$A3C    $5C93   UNKNOWN  $5C93           ; Unknown 5xxx instruction
$A3E    $D13C   DRW      V1, V3, #C      ; Draw 12-byte sprite at V1, V3
$A40    $05C8   SYS      $5C8            ; System call to 5C8
$A42    $3615   SE       V6, #15         ; Skip if V6 == 21
$A44    $BE05   JP       V0, $E05        ; Jump to V0 + E05
$A46    $9E99   UNKNOWN  $9E99           ; Unknown 9xxx instruction
$A48    $2058   CALL     $058            ; Call subroutine at 058
$A4A    $AE7B   LD       I, $E7B         ; Load E7B into I
$A4C    $91BE   UNKNOWN  $91BE           ; Unknown 9xxx instruction
$A4E    $B3C5   JP       V0, $3C5        ; Jump to V0 + 3C5
$A50    $1912   JP       $912            ; Jump to 912
$A52    $16D8   JP       $6D8            ; Jump to 6D8
$A54    $679E   LD       V7, #9E         ; Load 158 into V7
$A56    $7351   ADD      V3, #51         ; Add 81 to V3
$A58    $4ACA   SNE      VA, #CA         ; Skip if VA != 202
$A5A    $A110   LD       I, $110         ; Load 110 into I
$A5C    $3755   SE       V7, #55         ; Skip if V7 == 85
$A5E    $C272   RND      V2, #72         ; V2 = random & 72
$A60    $94AE   UNKNOWN  $94AE           ; Unknown 9xxx instruction
$A62    $795A   ADD      V9, #5A         ; Add 90 to V9
$A64    $08AE   SYS      $8AE            ; System call to 8AE
$A66    $42A8   SNE      V2, #A8         ; Skip if V2 != 168
$A68    $B37A   JP       V0, $37A        ; Jump to V0 + 37A
$A6A    $D4CE   DRW      V4, VC, #E      ; Draw 14-byte sprite at V4, VC
$A6C    $A92B   LD       I, $92B         ; Load 92B into I
$A6E    $56E4   UNKNOWN  $56E4           ; Unknown 5xxx instruction
$A70    $E2D7   UNKNOWN  $E2D7           ; Unknown Exxx instruction
$A72    $8C8B   UNKNOWN  8C8B            ; Unknown 8xxx instruction
$A74    $B92B   JP       V0, $92B        ; Jump to V0 + 92B
$A76    $D029   DRW      V0, V2, #9      ; Draw 9-byte sprite at V0, V2
$A78    $E666   UNKNOWN  $E666           ; Unknown Exxx instruction
$A7A    $F671   UNKNOWN  F671            ; Unknown Fxxx instruction
$A7C    $A4B9   LD       I, $4B9         ; Load 4B9 into I
$A7E    $012D   SYS      $12D            ; System call to 12D
$A80    $6653   LD       V6, #53         ; Load 83 into V6
$A82    $64B2   LD       V4, #B2         ; Load 178 into V4
$A84    $3DB2   SE       VD, #B2         ; Skip if VD == 178
$A86    $5A63   UNKNOWN  $5A63           ; Unknown 5xxx instruction
$A88    $6F10   LD       VF, #10         ; Load 16 into VF
$A8A    $9153   UNKNOWN  $9153           ; Unknown 9xxx instruction
$A8C    $3919   SE       V9, #19         ; Skip if V9 == 25
$A8E    $23B5   CALL     $3B5            ; Call subroutine at 3B5
$A90    $2B23   CALL     $B23            ; Call subroutine at B23
$A92    $5A94   UNKNOWN  $5A94           ; Unknown 5xxx instruction
$A94    $3C8B   SE       VC, #8B         ; Skip if VC == 139
$A96    $B445   JP       V0, $445        ; Jump to V0 + 445
$A98    $F085   UNKNOWN  F085            ; Unknown Fxxx instruction
$A9A    $B4A2   JP       V0, $4A2        ; Jump to V0 + 4A2
$A9C    $BFA9   JP       V0, $FA9        ; Jump to V0 + FA9
$A9E    $6EB0   LD       VE, #B0         ; Load 176 into VE
$AA0    $72E7   ADD      V2, #E7         ; Add 231 to V2
$AA2    $843E   SHL      V4              ; V4 <<= 1, VF = MSB
$AA4    $38E0   SE       V8, #E0         ; Skip if V8 == 224
$AA6    $6E16   LD       VE, #16         ; Load 22 into VE
$AA8    $649F   LD       V4, #9F         ; Load 159 into V4
$AAA    $334B   SE       V3, #4B         ; Skip if V3 == 75
$AAC    $A73D   LD       I, $73D         ; Load 73D into I
$AAE    $6BB4   LD       VB, #B4         ; Load 180 into VB
$AB0    $EE4A   UNKNOWN  $EE4A           ; Unknown Exxx instruction
$AB2    $94C0   SNE      V4, VC          ; Skip if V4 != VC
$AB4    $63F9   LD       V3, #F9         ; Load 249 into V3
$AB6    $46A4   SNE      V6, #A4         ; Skip if V6 != 164
$AB8    $1A37   JP       $A37            ; Jump to A37
$ABA    $68D3   LD       V8, #D3         ; Load 211 into V8
$ABC    $135D   JP       $35D            ; Jump to 35D
$ABE    $1965   JP       $965            ; Jump to 965
$AC0    $5EAD   UNKNOWN  $5EAD           ; Unknown 5xxx instruction
$AC2    $F518   LD       ST, V5          ; Sound timer = V5
$AC4    $4B21   SNE      VB, #21         ; Skip if VB != 33
$AC6    $4E46   SNE      VE, #46         ; Skip if VE != 70
$AC8    $76F0   ADD      V6, #F0         ; Add 240 to V6
$ACA    $0266   SYS      $266            ; System call to 266
$ACC    $F026   UNKNOWN  F026            ; Unknown Fxxx instruction
$ACE    $DDB1   DRW      VD, VB, #1      ; Draw 1-byte sprite at VD, VB
$AD0    $44B9   SNE      V4, #B9         ; Skip if V4 != 185
$AD2    $98ED   UNKNOWN  $98ED           ; Unknown 9xxx instruction
$AD4    $55D9   UNKNOWN  $55D9           ; Unknown 5xxx instruction
$AD6    $8F0C   UNKNOWN  8F0C            ; Unknown 8xxx instruction
$AD8    $AD47   LD       I, $D47         ; Load D47 into I
$ADA    $CE66   RND      VE, #66         ; VE = random & 66
$ADC    $5D4B   UNKNOWN  $5D4B           ; Unknown 5xxx instruction
$ADE    $FCAB   UNKNOWN  FCAB            ; Unknown Fxxx instruction
$AE0    $8507   SUBN     V5, V0          ; V5 = V0 - V5, VF = !borrow
$AE2    $7ED2   ADD      VE, #D2         ; Add 210 to VE
$AE4    $BC43   JP       V0, $C43        ; Jump to V0 + C43
$AE6    $89D8   UNKNOWN  89D8            ; Unknown 8xxx instruction
$AE8    $C538   RND      V5, #38         ; V5 = random & 38
$AEA    $44A0   SNE      V4, #A0         ; Skip if V4 != 160
$AEC    $C2AE   RND      V2, #AE         ; V2 = random & AE
$AEE    $4644   SNE      V6, #44         ; Skip if V6 != 68
$AF0    $7515   ADD      V5, #15         ; Add 21 to V5
$AF2    $72FC   ADD      V2, #FC         ; Add 252 to V2
$AF4    $9B65   UNKNOWN  $9B65           ; Unknown 9xxx instruction
$AF6    $72A8   ADD      V2, #A8         ; Add 168 to V2
$AF8    $2113   CALL     $113            ; Call subroutine at 113
$AFA    $2234   CALL     $234            ; Call subroutine at 234
$AFC    $2365   CALL     $365            ; Call subroutine at 365
$AFE    $A031   LD       I, $031         ; Load 031 into I
$B00    $DE80   DRW      VE, V8, #0      ; Draw 0-byte sprite at VE, V8
$B02    $9DAD   UNKNOWN  $9DAD           ; Unknown 9xxx instruction
$B04    $4E01   SNE      VE, #01         ; Skip if VE != 1
$B06    $D861   DRW      V8, V6, #1      ; Draw 1-byte sprite at V8, V6
$B08    $B64E   JP       V0, $64E        ; Jump to V0 + 64E
$B0A    $F71A   UNKNOWN  F71A            ; Unknown Fxxx instruction
$B0C    $1487   JP       $487            ; Jump to 487
$B0E    $7220   ADD      V2, #20         ; Add 32 to V2
$B10    $79CB   ADD      V9, #CB         ; Add 203 to V9
$B12    $7419   ADD      V4, #19         ; Add 25 to V4
$B14    $7E68   ADD      VE, #68         ; Add 104 to VE
$B16    $EF4B   UNKNOWN  $EF4B           ; Unknown Exxx instruction
$B18    $7CEB   ADD      VC, #EB         ; Add 235 to VC
$B1A    $1454   JP       $454            ; Jump to 454
$B1C    $CEA9   RND      VE, #A9         ; VE = random & A9
$B1E    $52CE   UNKNOWN  $52CE           ; Unknown 5xxx instruction
$B20    $BF0E   JP       V0, $F0E        ; Jump to V0 + F0E
$B22    $359E   SE       V5, #9E         ; Skip if V5 == 158
$B24    $3FAA   SE       VF, #AA         ; Skip if VF == 170
$B26    $129F   JP       $29F            ; Jump to 29F
$B28    $4C1B   SNE      VC, #1B         ; Skip if VC != 27
$B2A    $E6EE   UNKNOWN  $E6EE           ; Unknown Exxx instruction
$B2C    $84E2   AND      V4, VE          ; V4 &= VE
$B2E    $1698   JP       $698            ; Jump to 698
$B30    $74C6   ADD      V4, #C6         ; Add 198 to V4
$B32    $9CA9   UNKNOWN  $9CA9           ; Unknown 9xxx instruction
$B34    $A457   LD       I, $457         ; Load 457 into I
$B36    $3684   SE       V6, #84         ; Skip if V6 == 132
$B38    $6AB9   LD       VA, #B9         ; Load 185 into VA
$B3A    $31A8   SE       V1, #A8         ; Skip if V1 == 168
$B3C    $EA72   UNKNOWN  $EA72           ; Unknown Exxx instruction
$B3E    $D324   DRW      V3, V2, #4      ; Draw 4-byte sprite at V3, V2
$B40    $DFFE   DRW      VF, VF, #E      ; Draw 14-byte sprite at VF, VF
$B42    $FFD5   UNKNOWN  FFD5            ; Unknown Fxxx instruction
$B44    $16B2   JP       $6B2            ; Jump to 6B2
$B46    $F10E   UNKNOWN  F10E            ; Unknown Fxxx instruction
$B48    $3580   SE       V5, #80         ; Skip if V5 == 128
$B4A    $AAAD   LD       I, $AAD         ; Load AAD into I
$B4C    $1D01   JP       $D01            ; Jump to D01
$B4E    $FCD0   UNKNOWN  FCD0            ; Unknown Fxxx instruction
$B50    $AE40   LD       I, $E40         ; Load E40 into I
$B52    $D11E   DRW      V1, V1, #E      ; Draw 14-byte sprite at V1, V1
$B54    $EB01   UNKNOWN  $EB01           ; Unknown Exxx instruction
$B56    $B895   JP       V0, $895        ; Jump to V0 + 895
$B58    $C5B6   RND      V5, #B6         ; V5 = random & B6
$B5A    $DBD5   DRW      VB, VD, #5      ; Draw 5-byte sprite at VB, VD
$B5C    $1601   JP       $601            ; Jump to 601
$B5E    $BE48   JP       V0, $E48        ; Jump to V0 + E48
$B60    $0F8A   SYS      $F8A            ; System call to F8A
$B62    $4683   SNE      V6, #83         ; Skip if V6 != 131
$B64    $477E   SNE      V7, #7E         ; Skip if V7 != 126
$B66    $9EA6   UNKNOWN  $9EA6           ; Unknown 9xxx instruction
$B68    $ACEF   LD       I, $CEF         ; Load CEF into I
$B6A    $8DC1   OR       VD, VC          ; VD |= VC
$B6C    $8BBA   UNKNOWN  8BBA            ; Unknown 8xxx instruction
$B6E    $EE34   UNKNOWN  $EE34           ; Unknown Exxx instruction
$B70    $25DA   CALL     $5DA            ; Call subroutine at 5DA
$B72    $F75D   UNKNOWN  F75D            ; Unknown Fxxx instruction
$B74    $5C79   UNKNOWN  $5C79           ; Unknown 5xxx instruction
$B76    $64BF   LD       V4, #BF         ; Load 191 into V4
$B78    $78E9   ADD      V8, #E9         ; Add 233 to V8
$B7A    $1FB3   JP       $FB3            ; Jump to FB3
$B7C    $BD1F   JP       V0, $D1F        ; Jump to V0 + D1F
$B7E    $85D8   UNKNOWN  85D8            ; Unknown 8xxx instruction
$B80    $C354   RND      V3, #54         ; V3 = random & 54
$B82    $A525   LD       I, $525         ; Load 525 into I
$B84    $A2B4   LD       I, $2B4         ; Load 2B4 into I
$B86    $13D1   JP       $3D1            ; Jump to 3D1
$B88    $C205   RND      V2, #05         ; V2 = random & 05
$B8A    $DE61   DRW      VE, V6, #1      ; Draw 1-byte sprite at VE, V6
$B8C    $2B4C   CALL     $B4C            ; Call subroutine at B4C
$B8E    $0826   SYS      $826            ; System call to 826
$B90    $AFA9   LD       I, $FA9         ; Load FA9 into I
$B92    $5FA0   SE       VF, VA          ; Skip if VF == VA
$B94    $F9EA   UNKNOWN  F9EA            ; Unknown Fxxx instruction
$B96    $7407   ADD      V4, #07         ; Add 7 to V4
$B98    $FBF2   UNKNOWN  FBF2            ; Unknown Fxxx instruction
$B9A    $38CB   SE       V8, #CB         ; Skip if V8 == 203
$B9C    $F700   UNKNOWN  F700            ; Unknown Fxxx instruction
$B9E    $7C33   ADD      VC, #33         ; Add 51 to VC
$BA0    $165C   JP       $65C            ; Jump to 65C
$BA2    $52B7   UNKNOWN  $52B7           ; Unknown 5xxx instruction
$BA4    $89C6   SHR      V9              ; V9 >>= 1, VF = LSB
$BA6    $BDE6   JP       V0, $DE6        ; Jump to V0 + DE6
$BA8    $582A   UNKNOWN  $582A           ; Unknown 5xxx instruction
$BAA    $DC8C   DRW      VC, V8, #C      ; Draw 12-byte sprite at VC, V8
$BAC    $BCF3   JP       V0, $CF3        ; Jump to V0 + CF3
$BAE    $1EBC   JP       $EBC            ; Jump to EBC
$BB0    $2346   CALL     $346            ; Call subroutine at 346
$BB2    $9F7D   UNKNOWN  $9F7D           ; Unknown 9xxx instruction
$BB4    $714A   ADD      V1, #4A         ; Add 74 to V1
$BB6    $4CE3   SNE      VC, #E3         ; Skip if VC != 227
$BB8    $BB6D   JP       V0, $B6D        ; Jump to V0 + B6D
$BBA    $20E8   CALL     $0E8            ; Call subroutine at 0E8
$BBC    $F3DD   UNKNOWN  F3DD            ; Unknown Fxxx instruction
$BBE    $4498   SNE      V4, #98         ; Skip if V4 != 152
$BC0    $D194   DRW      V1, V9, #4      ; Draw 4-byte sprite at V1, V9
$BC2    $BC2D   JP       V0, $C2D        ; Jump to V0 + C2D
$BC4    $DC56   DRW      VC, V5, #6      ; Draw 6-byte sprite at VC, V5
$BC6    $A69A   LD       I, $69A         ; Load 69A into I
$BC8    $8577   SUBN     V5, V7          ; V5 = V7 - V5, VF = !borrow
$BCA    $DB1F   DRW      VB, V1, #F      ; Draw 15-byte sprite at VB, V1
$BCC    $6D7E   LD       VD, #7E         ; Load 126 into VD
$BCE    $6761   LD       V7, #61         ; Load 97 into V7
$BD0    $BF4E   JP       V0, $F4E        ; Jump to V0 + F4E
$BD2    $C7EE   RND      V7, #EE         ; V7 = random & EE
$BD4    $F0B0   UNKNOWN  F0B0            ; Unknown Fxxx instruction
$BD6    $4162   SNE      V1, #62         ; Skip if V1 != 98
$BD8    $55EE   UNKNOWN  $55EE           ; Unknown 5xxx instruction
$BDA    $D78D   DRW      V7, V8, #D      ; Draw 13-byte sprite at V7, V8
$BDC    $65BA   LD       V5, #BA         ; Load 186 into V5
$BDE    $3268   SE       V2, #68         ; Skip if V2 == 104
$BE0    $9162   UNKNOWN  $9162           ; Unknown 9xxx instruction
$BE2    $0F4B   SYS      $F4B            ; System call to F4B
$BE4    $9661   UNKNOWN  $9661           ; Unknown 9xxx instruction
$BE6    $DD4F   DRW      VD, V4, #F      ; Draw 15-byte sprite at VD, V4
$BE8    $E418   UNKNOWN  $E418           ; Unknown Exxx instruction
$BEA    $F86D   UNKNOWN  F86D            ; Unknown Fxxx instruction
$BEC    $E37F   UNKNOWN  $E37F           ; Unknown Exxx instruction
$BEE    $6438   LD       V4, #38         ; Load 56 into V4
$BF0    $F3B0   UNKNOWN  F3B0            ; Unknown Fxxx instruction
$BF2    $2B74   CALL     $B74            ; Call subroutine at B74
$BF4    $D196   DRW      V1, V9, #6      ; Draw 6-byte sprite at V1, V9
$BF6    $0338   SYS      $338            ; System call to 338
$BF8    $92AF   UNKNOWN  $92AF           ; Unknown 9xxx instruction
$BFA    $3D50   SE       VD, #50         ; Skip if VD == 80
$BFC    $0491   SYS      $491            ; System call to 491
$BFE    $D9EE   DRW      V9, VE, #E      ; Draw 14-byte sprite at V9, VE
$C00    $91B3   UNKNOWN  $91B3           ; Unknown 9xxx instruction
$C02    $04BF   SYS      $4BF            ; System call to 4BF
$C04    $B960   JP       V0, $960        ; Jump to V0 + 960
$C06    $A67D   LD       I, $67D         ; Load 67D into I
$C08    $C9B5   RND      V9, #B5         ; V9 = random & B5
$C0A    $6FEF   LD       VF, #EF         ; Load 239 into VF
$C0C    $86B2   AND      V6, VB          ; V6 &= VB
$C0E    $2C7D   CALL     $C7D            ; Call subroutine at C7D
$C10    $998E   UNKNOWN  $998E           ; Unknown 9xxx instruction
$C12    $AFDB   LD       I, $FDB         ; Load FDB into I
$C14    $E874   UNKNOWN  $E874           ; Unknown Exxx instruction
$C16    $8C1B   UNKNOWN  8C1B            ; Unknown 8xxx instruction
$C18    $475D   SNE      V7, #5D         ; Skip if V7 != 93
$C1A    $9DC1   UNKNOWN  $9DC1           ; Unknown 9xxx instruction
$C1C    $8A8E   SHL      VA              ; VA <<= 1, VF = MSB
$C1E    $8BC9   UNKNOWN  8BC9            ; Unknown 8xxx instruction
$C20    $7616   ADD      V6, #16         ; Add 22 to V6
$C22    $4B84   SNE      VB, #84         ; Skip if VB != 132
$C24    $6335   LD       V3, #35         ; Load 53 into V3
$C26    $40DC   SNE      V0, #DC         ; Skip if V0 != 220
$C28    $2329   CALL     $329            ; Call subroutine at 329
$C2A    $8D96   SHR      VD              ; VD >>= 1, VF = LSB
$C2C    $C4C4   RND      V4, #C4         ; V4 = random & C4
$C2E    $157F   JP       $57F            ; Jump to 57F
$C30    $7194   ADD      V1, #94         ; Add 148 to V1
$C32    $2D59   CALL     $D59            ; Call subroutine at D59
$C34    $919A   UNKNOWN  $919A           ; Unknown 9xxx instruction
$C36    $6284   LD       V2, #84         ; Load 132 into V2
$C38    $50D3   UNKNOWN  $50D3           ; Unknown 5xxx instruction
$C3A    $E2AA   UNKNOWN  $E2AA           ; Unknown Exxx instruction
$C3C    $D21A   DRW      V2, V1, #A      ; Draw 10-byte sprite at V2, V1
$C3E    $40A0   SNE      V0, #A0         ; Skip if V0 != 160
$C40    $FD17   UNKNOWN  FD17            ; Unknown Fxxx instruction
$C42    $B087   JP       V0, $087        ; Jump to V0 + 087
$C44    $0258   SYS      $258            ; System call to 258
$C46    $CB0D   RND      VB, #0D         ; VB = random & 0D
$C48    $5BA8   UNKNOWN  $5BA8           ; Unknown 5xxx instruction
$C4A    $520F   UNKNOWN  $520F           ; Unknown 5xxx instruction
$C4C    $1500   JP       $500            ; Jump to 500
$C4E    $2F76   CALL     $F76            ; Call subroutine at F76
$C50    $56D7   UNKNOWN  $56D7           ; Unknown 5xxx instruction
$C52    $7AF5   ADD      VA, #F5         ; Add 245 to VA
$C54    $5CD6   UNKNOWN  $5CD6           ; Unknown 5xxx instruction
$C56    $6624   LD       V6, #24         ; Load 36 into V6
$C58    $502D   UNKNOWN  $502D           ; Unknown 5xxx instruction
$C5A    $4410   SNE      V4, #10         ; Skip if V4 != 16
$C5C    $342B   SE       V4, #2B         ; Skip if V4 == 43
$C5E    $8B7A   UNKNOWN  8B7A            ; Unknown 8xxx instruction
$C60    $6AC8   LD       VA, #C8         ; Load 200 into VA
$C62    $9187   UNKNOWN  $9187           ; Unknown 9xxx instruction
$C64    $0726   SYS      $726            ; System call to 726
$C66    $E873   UNKNOWN  $E873           ; Unknown Exxx instruction
$C68    $CA73   RND      VA, #73         ; VA = random & 73
$C6A    $380A   SE       V8, #0A         ; Skip if V8 == 10
$C6C    $D6ED   DRW      V6, VE, #D      ; Draw 13-byte sprite at V6, VE
$C6E    $7B79   ADD      VB, #79         ; Add 121 to VB
$C70    $586E   UNKNOWN  $586E           ; Unknown 5xxx instruction
$C72    $4BE7   SNE      VB, #E7         ; Skip if VB != 231
$C74    $4582   SNE      V5, #82         ; Skip if V5 != 130
$C76    $9476   UNKNOWN  $9476           ; Unknown 9xxx instruction
$C78    $A2E6   LD       I, $2E6         ; Load 2E6 into I
$C7A    $1462   JP       $462            ; Jump to 462
$C7C    $6AA2   LD       VA, #A2         ; Load 162 into VA
$C7E    $D3D1   DRW      V3, VD, #1      ; Draw 1-byte sprite at V3, VD
$C80    $E58A   UNKNOWN  $E58A           ; Unknown Exxx instruction
$C82    $0442   SYS      $442            ; System call to 442
$C84    $2640   CALL     $640            ; Call subroutine at 640
$C86    $1001   JP       $001            ; Jump to 001
$C88    $101E   JP       $01E            ; Jump to 01E
$C8A    $91AB   UNKNOWN  $91AB           ; Unknown 9xxx instruction
$C8C    $DE56   DRW      VE, V5, #6      ; Draw 6-byte sprite at VE, V5
$C8E    $1B20   JP       $B20            ; Jump to B20
$C90    $0CD6   SYS      $CD6            ; System call to CD6
$C92    $E417   UNKNOWN  $E417           ; Unknown Exxx instruction
$C94    $F294   UNKNOWN  F294            ; Unknown Fxxx instruction
$C96    $47AC   SNE      V7, #AC         ; Skip if V7 != 172
$C98    $B2E9   JP       V0, $2E9        ; Jump to V0 + 2E9
$C9A    $6E26   LD       VE, #26         ; Load 38 into VE
$C9C    $19AD   JP       $9AD            ; Jump to 9AD
$C9E    $E4AC   UNKNOWN  $E4AC           ; Unknown Exxx instruction
$CA0    $1862   JP       $862            ; Jump to 862
$CA2    $0D7D   SYS      $D7D            ; System call to D7D
$CA4    $4A6A   SNE      VA, #6A         ; Skip if VA != 106
$CA6    $1AFA   JP       $AFA            ; Jump to AFA
$CA8    $8831   OR       V8, V3          ; V8 |= V3
$CAA    $9A1A   UNKNOWN  $9A1A           ; Unknown 9xxx instruction
$CAC    $F5F3   UNKNOWN  F5F3            ; Unknown Fxxx instruction
$CAE    $4012   SNE      V0, #12         ; Skip if V0 != 18
$CB0    $7FF5   ADD      VF, #F5         ; Add 245 to VF
$CB2    $497E   SNE      V9, #7E         ; Skip if V9 != 126
$CB4    $5801   UNKNOWN  $5801           ; Unknown 5xxx instruction
$CB6    $FB24   UNKNOWN  FB24            ; Unknown Fxxx instruction
$CB8    $49DF   SNE      V9, #DF         ; Skip if V9 != 223
$CBA    $6E41   LD       VE, #41         ; Load 65 into VE
$CBC    $097B   SYS      $97B            ; System call to 97B
$CBE    $193D   JP       $93D            ; Jump to 93D
$CC0    $92C1   UNKNOWN  $92C1           ; Unknown 9xxx instruction
$CC2    $0145   SYS      $145            ; System call to 145
$CC4    $02DE   SYS      $2DE            ; System call to 2DE
$CC6    $20B4   CALL     $0B4            ; Call subroutine at 0B4
$CC8    $1179   JP       $179            ; Jump to 179
$CCA    $1D6B   JP       $D6B            ; Jump to D6B
$CCC    $1CCA   JP       $CCA            ; Jump to CCA
$CCE    $DE58   DRW      VE, V5, #8      ; Draw 8-byte sprite at VE, V5
$CD0    $5BCD   UNKNOWN  $5BCD           ; Unknown 5xxx instruction
$CD2    $0B80   SYS      $B80            ; System call to B80
$CD4    $5F32   UNKNOWN  $5F32           ; Unknown 5xxx instruction
$CD6    $2C14   CALL     $C14            ; Call subroutine at C14
$CD8    $BD13   JP       V0, $D13        ; Jump to V0 + D13
$CDA    $80C0   LD       V0, VC          ; V0 = VC
$CDC    $B475   JP       V0, $475        ; Jump to V0 + 475
$CDE    $7088   ADD      V0, #88         ; Add 136 to V0
$CE0    $607E   LD       V0, #7E         ; Load 126 into V0
$CE2    $EE8D   UNKNOWN  $EE8D           ; Unknown Exxx instruction
$CE4    $AFE9   LD       I, $FE9         ; Load FE9 into I
$CE6    $4B8F   SNE      VB, #8F         ; Skip if VB != 143
$CE8    $F4A7   UNKNOWN  F4A7            ; Unknown Fxxx instruction
$CEA    $7786   ADD      V7, #86         ; Add 134 to V7
$CEC    $F876   UNKNOWN  F876            ; Unknown Fxxx instruction
$CEE    $9DB0   SNE      VD, VB          ; Skip if VD != VB
$CF0    $76CF   ADD      V6, #CF         ; Add 207 to V6
$CF2    $BD5B   JP       V0, $D5B        ; Jump to V0 + D5B
$CF4    $A06C   LD       I, $06C         ; Load 06C into I
$CF6    $3ECC   SE       VE, #CC         ; Skip if VE == 204
$CF8    $5C71   UNKNOWN  $5C71           ; Unknown 5xxx instruction
$CFA    $8D37   SUBN     VD, V3          ; VD = V3 - VD, VF = !borrow
$CFC    $963A   UNKNOWN  $963A           ; Unknown 9xxx instruction
$CFE    $7BB9   ADD      VB, #B9         ; Add 185 to VB
$D00    $B03D   JP       V0, $03D        ; Jump to V0 + 03D
$D02    $5E61   UNKNOWN  $5E61           ; Unknown 5xxx instruction
$D04    $1D1B   JP       $D1B            ; Jump to D1B
$D06    $81E4   ADD      V1, VE          ; V1 += VE, VF = carry
$D08    $3C9F   SE       VC, #9F         ; Skip if VC == 159
$D0A    $BE2C   JP       V0, $E2C        ; Jump to V0 + E2C
$D0C    $A84C   LD       I, $84C         ; Load 84C into I
$D0E    $B6F7   JP       V0, $6F7        ; Jump to V0 + 6F7
$D10    $2FCB   CALL     $FCB            ; Call subroutine at FCB
$D12    $E023   UNKNOWN  $E023           ; Unknown Exxx instruction
$D14    $542C   UNKNOWN  $542C           ; Unknown 5xxx instruction
$D16    $FE42   UNKNOWN  FE42            ; Unknown Fxxx instruction
$D18    $DE1B   DRW      VE, V1, #B      ; Draw 11-byte sprite at VE, V1
$D1A    $DCDD   DRW      VC, VD, #D      ; Draw 13-byte sprite at VC, VD
$D1C    $A1D2   LD       I, $1D2         ; Load 1D2 into I
$D1E    $22F2   CALL     $2F2            ; Call subroutine at 2F2
$D20    $C524   RND      V5, #24         ; V5 = random & 24
$D22    $400B   SNE      V0, #0B         ; Skip if V0 != 11
$D24    $ECFA   UNKNOWN  $ECFA           ; Unknown Exxx instruction
$D26    $81C9   UNKNOWN  81C9            ; Unknown 8xxx instruction
$D28    $F848   UNKNOWN  F848            ; Unknown Fxxx instruction
$D2A    $626A   LD       V2, #6A         ; Load 106 into V2
$D2C    $3096   SE       V0, #96         ; Skip if V0 == 150
$D2E    $E395   UNKNOWN  $E395           ; Unknown Exxx instruction
$D30    $8EF0   LD       VE, VF          ; VE = VF
$D32    $5506   UNKNOWN  $5506           ; Unknown 5xxx instruction
$D34    $2824   CALL     $824            ; Call subroutine at 824
$D36    $C189   RND      V1, #89         ; V1 = random & 89
$D38    $CE13   RND      VE, #13         ; VE = random & 13
$D3A    $8382   AND      V3, V8          ; V3 &= V8
$D3C    $C648   RND      V6, #48         ; V6 = random & 48
$D3E    $31FD   SE       V1, #FD         ; Skip if V1 == 253
$D40    $C13D   RND      V1, #3D         ; V1 = random & 3D
$D42    $1BEF   JP       $BEF            ; Jump to BEF
$D44    $23ED   CALL     $3ED            ; Call subroutine at 3ED
$D46    $76A8   ADD      V6, #A8         ; Add 168 to V6
$D48    $50FF   UNKNOWN  $50FF           ; Unknown 5xxx instruction
$D4A    $75D5   ADD      V5, #D5         ; Add 213 to V5
$D4C    $A915   LD       I, $915         ; Load 915 into I
$D4E    $10E6   JP       $0E6            ; Jump to 0E6
$D50    $15A1   JP       $5A1            ; Jump to 5A1
$D52    $E4A5   UNKNOWN  $E4A5           ; Unknown Exxx instruction
$D54    $CB3A   RND      VB, #3A         ; VB = random & 3A
$D56    $4FEF   SNE      VF, #EF         ; Skip if VF != 239
$D58    $75E0   ADD      V5, #E0         ; Add 224 to V5
$D5A    $EBC4   UNKNOWN  $EBC4           ; Unknown Exxx instruction
$D5C    $D98A   DRW      V9, V8, #A      ; Draw 10-byte sprite at V9, V8
$D5E    $6855   LD       V8, #55         ; Load 85 into V8
$D60    $AA62   LD       I, $A62         ; Load A62 into I
$D62    $4E2B   SNE      VE, #2B         ; Skip if VE != 43
$D64    $235F   CALL     $35F            ; Call subroutine at 35F
$D66    $0FF8   SYS      $FF8            ; System call to FF8
$D68    $00C6   SYS      $0C6            ; System call to 0C6
$D6A    $305D   SE       V0, #5D         ; Skip if V0 == 93
$D6C    $930F   UNKNOWN  $930F           ; Unknown 9xxx instruction
$D6E    $F41E   ADD      I, V4           ; I += V4
$D70    $43C8   SNE      V3, #C8         ; Skip if V3 != 200
$D72    $8626   SHR      V6              ; V6 >>= 1, VF = LSB
$D74    $C0CE   RND      V0, #CE         ; V0 = random & CE
$D76    $B581   JP       V0, $581        ; Jump to V0 + 581
$D78    $2084   CALL     $084            ; Call subroutine at 084
$D7A    $8F25   SUB      VF, V2          ; VF -= V2, VF = !borrow
$D7C    $9EDA   UNKNOWN  $9EDA           ; Unknown 9xxx instruction
$D7E    $DBA8   DRW      VB, VA, #8      ; Draw 8-byte sprite at VB, VA
$D80    $D37A   DRW      V3, V7, #A      ; Draw 10-byte sprite at V3, V7
$D82    $C63F   RND      V6, #3F         ; V6 = random & 3F
$D84    $708A   ADD      V0, #8A         ; Add 138 to V0
$D86    $F5AC   UNKNOWN  F5AC            ; Unknown Fxxx instruction
$D88    $F0A8   UNKNOWN  F0A8            ; Unknown Fxxx instruction
$D8A    $3617   SE       V6, #17         ; Skip if V6 == 23
$D8C    $0A79   SYS      $A79            ; System call to A79
$D8E    $30B7   SE       V0, #B7         ; Skip if V0 == 183
$D90    $AA69   LD       I, $A69         ; Load A69 into I
$D92    $FA0C   UNKNOWN  FA0C            ; Unknown Fxxx instruction
$D94    $05F1   SYS      $5F1            ; System call to 5F1
$D96    $34DB   SE       V4, #DB         ; Skip if V4 == 219
$D98    $894D   UNKNOWN  894D            ; Unknown 8xxx instruction
$D9A    $8D39   UNKNOWN  8D39            ; Unknown 8xxx instruction
$D9C    $3E79   SE       VE, #79         ; Skip if VE == 121
$D9E    $A1F2   LD       I, $1F2         ; Load 1F2 into I
$DA0    $2305   CALL     $305            ; Call subroutine at 305
$DA2    $B152   JP       V0, $152        ; Jump to V0 + 152
$DA4    $10E5   JP       $0E5            ; Jump to 0E5
$DA6    $5200   SE       V2, V0          ; Skip if V2 == V0
$DA8    $3708   SE       V7, #08         ; Skip if V7 == 8
$DAA    $E13C   UNKNOWN  $E13C           ; Unknown Exxx instruction
$DAC    $8240   LD       V2, V4          ; V2 = V4
$DAE    $2142   CALL     $142            ; Call subroutine at 142
$DB0    $2B67   CALL     $B67            ; Call subroutine at B67
$DB2    $E53C   UNKNOWN  $E53C           ; Unknown Exxx instruction
$DB4    $7616   ADD      V6, #16         ; Add 22 to V6
$DB6    $E0E6   UNKNOWN  $E0E6           ; Unknown Exxx instruction
$DB8    $975B   UNKNOWN  $975B           ; Unknown 9xxx instruction
$DBA    $35F2   SE       V5, #F2         ; Skip if V5 == 242
$DBC    $FDDC   UNKNOWN  FDDC            ; Unknown Fxxx instruction
$DBE    $24DB   CALL     $4DB            ; Call subroutine at 4DB
$DC0    $5A71   UNKNOWN  $5A71           ; Unknown 5xxx instruction
$DC2    $C99E   RND      V9, #9E         ; V9 = random & 9E
$DC4    $6102   LD       V1, #02         ; Load 2 into V1
$DC6    $2FD2   CALL     $FD2            ; Call subroutine at FD2
$DC8    $88CF   UNKNOWN  88CF            ; Unknown 8xxx instruction
$DCA    $8F6F   UNKNOWN  8F6F            ; Unknown 8xxx instruction
$DCC    $D7FF   DRW      V7, VF, #F      ; Draw 15-byte sprite at V7, VF
$DCE    $D846   DRW      V8, V4, #6      ; Draw 6-byte sprite at V8, V4
$DD0    $626A   LD       V2, #6A         ; Load 106 into V2
$DD2    $A7FD   LD       I, $7FD         ; Load 7FD into I
$DD4    $FE32   UNKNOWN  FE32            ; Unknown Fxxx instruction
$DD6    $E52C   UNKNOWN  $E52C           ; Unknown Exxx instruction
$DD8    $E083   UNKNOWN  $E083           ; Unknown Exxx instruction
$DDA    $F9D6   UNKNOWN  F9D6            ; Unknown Fxxx instruction
$DDC    $036C   SYS      $36C            ; System call to 36C
$DDE    $13A2   JP       $3A2            ; Jump to 3A2
$DE0    $6BA7   LD       VB, #A7         ; Load 167 into VB
$DE2    $E67C   UNKNOWN  $E67C           ; Unknown Exxx instruction
$DE4    $ECC0   UNKNOWN  $ECC0           ; Unknown Exxx instruction
$DE6    $092A   SYS      $92A            ; System call to 92A
$DE8    $4A95   SNE      VA, #95         ; Skip if VA != 149
$DEA    $DC6D   DRW      VC, V6, #D      ; Draw 13-byte sprite at VC, V6
$DEC    $4258   SNE      V2, #58         ; Skip if V2 != 88
$DEE    $04A7   SYS      $4A7            ; System call to 4A7
$DF0    $9C77   UNKNOWN  $9C77           ; Unknown 9xxx instruction
$DF2    $BA55   JP       V0, $A55        ; Jump to V0 + A55
$DF4    $5640   SE       V6, V4          ; Skip if V6 == V4
$DF6    $27C1   CALL     $7C1            ; Call subroutine at 7C1
$DF8    $FDFE   UNKNOWN  FDFE            ; Unknown Fxxx instruction
$DFA    $5250   SE       V2, V5          ; Skip if V2 == V5
$DFC    $CD65   RND      VD, #65         ; VD = random & 65
$DFE    $26E2   CALL     $6E2            ; Call subroutine at 6E2
$E00    $C457   RND      V4, #57         ; V4 = random & 57
$E02    $5792   UNKNOWN  $5792           ; Unknown 5xxx instruction
$E04    $A311   LD       I, $311         ; Load 311 into I
$E06    $D467   DRW      V4, V6, #7      ; Draw 7-byte sprite at V4, V6
$E08    $DE28   DRW      VE, V2, #8      ; Draw 8-byte sprite at VE, V2
$E0A    $A643   LD       I, $643         ; Load 643 into I
$E0C    $731D   ADD      V3, #1D         ; Add 29 to V3
$E0E    $398A   SE       V9, #8A         ; Skip if V9 == 138
$E10    $5E0D   UNKNOWN  $5E0D           ; Unknown 5xxx instruction
$E12    $151A   JP       $51A            ; Jump to 51A
$E14    $6D8D   LD       VD, #8D         ; Load 141 into VD
$E16    $B9E2   JP       V0, $9E2        ; Jump to V0 + 9E2
$E18    $F782   UNKNOWN  F782            ; Unknown Fxxx instruction
$E1A    $5897   UNKNOWN  $5897           ; Unknown 5xxx instruction
$E1C    $7793   ADD      V7, #93         ; Add 147 to V7
$E1E    $711E   ADD      V1, #1E         ; Add 30 to V1
$E20    $2FA8   CALL     $FA8            ; Call subroutine at FA8
$E22    $6257   LD       V2, #57         ; Load 87 into V2
$E24    $0B37   SYS      $B37            ; System call to B37
$E26    $0489   SYS      $489            ; System call to 489
$E28    $0372   SYS      $372            ; System call to 372
$E2A    $C091   RND      V0, #91         ; V0 = random & 91
$E2C    $6691   LD       V6, #91         ; Load 145 into V6
$E2E    $FC2D   UNKNOWN  FC2D            ; Unknown Fxxx instruction
$E30    $51A8   UNKNOWN  $51A8           ; Unknown 5xxx instruction
$E32    $8A53   XOR      VA, V5          ; VA ^= V5
$E34    $11C5   JP       $1C5            ; Jump to 1C5
$E36    $2A95   CALL     $A95            ; Call subroutine at A95
$E38    $4713   SNE      V7, #13         ; Skip if V7 != 19
$E3A    $736D   ADD      V3, #6D         ; Add 109 to V3
$E3C    $3113   SE       V1, #13         ; Skip if V1 == 19
$E3E    $96FA   UNKNOWN  $96FA           ; Unknown 9xxx instruction
$E40    $BEEC   JP       V0, $EEC        ; Jump to V0 + EEC
$E42    $6F7D   LD       VF, #7D         ; Load 125 into VF
$E44    $6030   LD       V0, #30         ; Load 48 into V0
$E46    $02D1   SYS      $2D1            ; System call to 2D1
$E48    $90B6   UNKNOWN  $90B6           ; Unknown 9xxx instruction
$E4A    $1AA8   JP       $AA8            ; Jump to AA8
$E4C    $F532   UNKNOWN  F532            ; Unknown Fxxx instruction
$E4E    $778C   ADD      V7, #8C         ; Add 140 to V7
$E50    $9A47   UNKNOWN  $9A47           ; Unknown 9xxx instruction
$E52    $0250   SYS      $250            ; System call to 250
$E54    $82CD   UNKNOWN  82CD            ; Unknown 8xxx instruction
$E56    $EE87   UNKNOWN  $EE87           ; Unknown Exxx instruction
$E58    $33DC   SE       V3, #DC         ; Skip if V3 == 220
$E5A    $78D2   ADD      V8, #D2         ; Add 210 to V8
$E5C    $BC7C   JP       V0, $C7C        ; Jump to V0 + C7C
$E5E    $A1A0   LD       I, $1A0         ; Load 1A0 into I
$E60    $31AF   SE       V1, #AF         ; Skip if V1 == 175
$E62    $B035   JP       V0, $035        ; Jump to V0 + 035
$E64    $EE75   UNKNOWN  $EE75           ; Unknown Exxx instruction
$E66    $FF74   UNKNOWN  FF74            ; Unknown Fxxx instruction
$E68    $BFBC   JP       V0, $FBC        ; Jump to V0 + FBC
$E6A    $FCF1   UNKNOWN  FCF1            ; Unknown Fxxx instruction
$E6C    $A9D9   LD       I, $9D9         ; Load 9D9 into I
$E6E    $B15B   JP       V0, $15B        ; Jump to V0 + 15B
$E70    $1988   JP       $988            ; Jump to 988
$E72    $3A36   SE       VA, #36         ; Skip if VA == 54
$E74    $6954   LD       V9, #54         ; Load 84 into V9
$E76    $B088   JP       V0, $088        ; Jump to V0 + 088
$E78    $BC25   JP       V0, $C25        ; Jump to V0 + C25
$E7A    $8652   AND      V6, V5          ; V6 &= V5
$E7C    $ECC0   UNKNOWN  $ECC0           ; Unknown Exxx instruction
$E7E    $41E2   SNE      V1, #E2         ; Skip if V1 != 226
$E80    $163E   JP       $63E            ; Jump to 63E
$E82    $E8D3   UNKNOWN  $E8D3           ; Unknown Exxx instruction
$E84    $C18B   RND      V1, #8B         ; V1 = random & 8B
$E86    $5529   UNKNOWN  $5529           ; Unknown 5xxx instruction
$E88    $7688   ADD      V6, #88         ; Add 136 to V6
$E8A    $F34A   UNKNOWN  F34A            ; Unknown Fxxx instruction
$E8C    $5385   UNKNOWN  $5385           ; Unknown 5xxx instruction
$E8E    $13CB   JP       $3CB            ; Jump to 3CB
$E90    $0E6F   SYS      $E6F            ; System call to E6F
$E92    $67FF   LD       V7, #FF         ; Load 255 into V7
$E94    $4773   SNE      V7, #73         ; Skip if V7 != 115
$E96    $25C9   CALL     $5C9            ; Call subroutine at 5C9
$E98    $1FBA   JP       $FBA            ; Jump to FBA
$E9A    $BDA1   JP       V0, $DA1        ; Jump to V0 + DA1
$E9C    $5BD3   UNKNOWN  $5BD3           ; Unknown 5xxx instruction
$E9E    $5E94   UNKNOWN  $5E94           ; Unknown 5xxx instruction
$EA0    $3484   SE       V4, #84         ; Skip if V4 == 132
$EA2    $7887   ADD      V8, #87         ; Add 135 to V8
$EA4    $C5DE   RND      V5, #DE         ; V5 = random & DE
$EA6    $E4E5   UNKNOWN  $E4E5           ; Unknown Exxx instruction
$EA8    $8F61   OR       VF, V6          ; VF |= V6
$EAA    $BEBD   JP       V0, $EBD        ; Jump to V0 + EBD
$EAC    $7932   ADD      V9, #32         ; Add 50 to V9
$EAE    $7265   ADD      V2, #65         ; Add 101 to V2
$EB0    $6728   LD       V7, #28         ; Load 40 into V7
$EB2    $7B07   ADD      VB, #07         ; Add 7 to VB
$EB4    $260E   CALL     $60E            ; Call subroutine at 60E
$EB6    $543F   UNKNOWN  $543F           ; Unknown 5xxx instruction
$EB8    $6A43   LD       VA, #43         ; Load 67 into VA
$EBA    $9A81   UNKNOWN  $9A81           ; Unknown 9xxx instruction
$EBC    $13F8   JP       $3F8            ; Jump to 3F8
$EBE    $43BB   SNE      V3, #BB         ; Skip if V3 != 187
$EC0    $23F3   CALL     $3F3            ; Call subroutine at 3F3
$EC2    $C262   RND      V2, #62         ; V2 = random & 62
$EC4    $4B33   SNE      VB, #33         ; Skip if VB != 51
$EC6    $6E1B   LD       VE, #1B         ; Load 27 into VE
$EC8    $4C84   SNE      VC, #84         ; Skip if VC != 132
$ECA    $76A7   ADD      V6, #A7         ; Add 167 to V6
$ECC    $503B   UNKNOWN  $503B           ; Unknown 5xxx instruction
$ECE    $3201   SE       V2, #01         ; Skip if V2 == 1
$ED0    $4095   SNE      V0, #95         ; Skip if V0 != 149
$ED2    $6BC5   LD       VB, #C5         ; Load 197 into VB
$ED4    $99C7   UNKNOWN  $99C7           ; Unknown 9xxx instruction
$ED6    $8639   UNKNOWN  8639            ; Unknown 8xxx instruction
$ED8    $6BC7   LD       VB, #C7         ; Load 199 into VB
$EDA    $EDA9   UNKNOWN  $EDA9           ; Unknown Exxx instruction
$EDC    $B5A0   JP       V0, $5A0        ; Jump to V0 + 5A0
$EDE    $1E15   JP       $E15            ; Jump to E15
$EE0    $10D5   JP       $0D5            ; Jump to 0D5
$EE2    $64B5   LD       V4, #B5         ; Load 181 into V4
$EE4    $C921   RND      V9, #21         ; V9 = random & 21
$EE6    $83D8   UNKNOWN  83D8            ; Unknown 8xxx instruction
$EE8    $9D1A   UNKNOWN  $9D1A           ; Unknown 9xxx instruction
$EEA    $4EB5   SNE      VE, #B5         ; Skip if VE != 181
$EEC    $D4EF   DRW      V4, VE, #F      ; Draw 15-byte sprite at V4, VE
$EEE    $80ED   UNKNOWN  80ED            ; Unknown 8xxx instruction
$EF0    $DB11   DRW      VB, V1, #1      ; Draw 1-byte sprite at VB, V1
$EF2    $9FA7   UNKNOWN  $9FA7           ; Unknown 9xxx instruction
$EF4    $DA2D   DRW      VA, V2, #D      ; Draw 13-byte sprite at VA, V2
$EF6    $6E34   LD       VE, #34         ; Load 52 into VE
$EF8    $F673   UNKNOWN  F673            ; Unknown Fxxx instruction
$EFA    $8095   SUB      V0, V9          ; V0 -= V9, VF = !borrow
$EFC    $98B6   UNKNOWN  $98B6           ; Unknown 9xxx instruction
$EFE    $4DA2   SNE      VD, #A2         ; Skip if VD != 162
$F00    $2FA2   CALL     $FA2            ; Call subroutine at FA2
$F02    $65D9   LD       V5, #D9         ; Load 217 into V5
$F04    $314B   SE       V1, #4B         ; Skip if V1 == 75
$F06    $8F82   AND      VF, V8          ; VF &= V8
$F08    $87B4   ADD      V7, VB          ; V7 += VB, VF = carry
$F0A    $0DCE   SYS      $DCE            ; System call to DCE
$F0C    $0BBE   SYS      $BBE            ; System call to BBE
$F0E    $A6DF   LD       I, $6DF         ; Load 6DF into I
$F10    $4141   SNE      V1, #41         ; Skip if V1 != 65
$F12    $37B2   SE       V7, #B2         ; Skip if V7 == 178
$F14    $484A   SNE      V8, #4A         ; Skip if V8 != 74
$F16    $9BC7   UNKNOWN  $9BC7           ; Unknown 9xxx instruction
$F18    $0BD8   SYS      $BD8            ; System call to BD8
$F1A    $FDFB   UNKNOWN  FDFB            ; Unknown Fxxx instruction
$F1C    $310A   SE       V1, #0A         ; Skip if V1 == 10
$F1E    $4B68   SNE      VB, #68         ; Skip if VB != 104
$F20    $1718   JP       $718            ; Jump to 718
$F22    $8AF3   XOR      VA, VF          ; VA ^= VF
$F24    $6DD0   LD       VD, #D0         ; Load 208 into VD
$F26    $5CC2   UNKNOWN  $5CC2           ; Unknown 5xxx instruction
$F28    $41EA   SNE      V1, #EA         ; Skip if V1 != 234
$F2A    $50B7   UNKNOWN  $50B7           ; Unknown 5xxx instruction
$F2C    $B5A9   JP       V0, $5A9        ; Jump to V0 + 5A9
$F2E    $7210   ADD      V2, #10         ; Add 16 to V2
$F30    $00BA   SYS      $0BA            ; System call to 0BA
$F32    $B7BA   JP       V0, $7BA        ; Jump to V0 + 7BA
$F34    $7FFF   ADD      VF, #FF         ; Add 255 to VF
$F36    $EFAE   UNKNOWN  $EFAE           ; Unknown Exxx instruction
$F38    $244D   CALL     $44D            ; Call subroutine at 44D
$F3A    $6EFF   LD       VE, #FF         ; Load 255 into VE
$F3C    $7FBA   ADD      VF, #BA         ; Add 186 to VF
$F3E    $12F9   JP       $2F9            ; Jump to 2F9
$F40    $7F7B   ADD      VF, #7B         ; Add 123 to VF
$F42    $327D   SE       V2, #7D         ; Skip if V2 == 125
$F44    $E4C8   UNKNOWN  $E4C8           ; Unknown Exxx instruction
$F46    $25D8   CALL     $5D8            ; Call subroutine at 5D8
$F48    $B67B   JP       V0, $67B        ; Jump to V0 + 67B
$F4A    $047A   SYS      $47A            ; System call to 47A
$F4C    $AE45   LD       I, $E45         ; Load E45 into I
$F4E    $AC93   LD       I, $C93         ; Load C93 into I
$F50    $57E5   UNKNOWN  $57E5           ; Unknown 5xxx instruction
$F52    $65B9   LD       V5, #B9         ; Load 185 into V5
$F54    $1908   JP       $908            ; Jump to 908
$F56    $BEB1   JP       V0, $EB1        ; Jump to V0 + EB1
$F58    $C166   RND      V1, #66         ; V1 = random & 66
$F5A    $0406   SYS      $406            ; System call to 406
$F5C    $90F5   UNKNOWN  $90F5           ; Unknown 9xxx instruction
$F5E    $CB20   RND      VB, #20         ; VB = random & 20
$F60    $4B65   SNE      VB, #65         ; Skip if VB != 101
$F62    $D3F1   DRW      V3, VF, #1      ; Draw 1-byte sprite at V3, VF
$F64    $979F   UNKNOWN  $979F           ; Unknown 9xxx instruction
$F66    $9815   UNKNOWN  $9815           ; Unknown 9xxx instruction
$F68    $A5A8   LD       I, $5A8         ; Load 5A8 into I
$F6A    $1D61   JP       $D61            ; Jump to D61
$F6C    $FFCA   UNKNOWN  FFCA            ; Unknown Fxxx instruction
$F6E    $3223   SE       V2, #23         ; Skip if V2 == 35
$F70    $5217   UNKNOWN  $5217           ; Unknown 5xxx instruction
$F72    $A87F   LD       I, $87F         ; Load 87F into I
$F74    $6A20   LD       VA, #20         ; Load 32 into VA
$F76    $632B   LD       V3, #2B         ; Load 43 into V3
$F78    $1EFD   JP       $EFD            ; Jump to EFD
$F7A    $8595   SUB      V5, V9          ; V5 -= V9, VF = !borrow
$F7C    $1335   JP       $335            ; Jump to 335
$F7E    $1BE4   JP       $BE4            ; Jump to BE4
$F80    $98E9   UNKNOWN  $98E9           ; Unknown 9xxx instruction
$F82    $A081   LD       I, $081         ; Load 081 into I
$F84    $4A75   SNE      VA, #75         ; Skip if VA != 117
$F86    $8985   SUB      V9, V8          ; V9 -= V8, VF = !borrow
$F88    $18D6   JP       $8D6            ; Jump to 8D6
$F8A    $DB55   DRW      VB, V5, #5      ; Draw 5-byte sprite at VB, V5
$F8C    $787B   ADD      V8, #7B         ; Add 123 to V8
$F8E    $759C   ADD      V5, #9C         ; Add 156 to V5
$F90    $43A3   SNE      V3, #A3         ; Skip if V3 != 163
$F92    $EA42   UNKNOWN  $EA42           ; Unknown Exxx instruction
$F94    $F697   UNKNOWN  F697            ; Unknown Fxxx instruction
$F96    $1CF8   JP       $CF8            ; Jump to CF8
$F98    $4ED8   SNE      VE, #D8         ; Skip if VE != 216
$F9A    $412A   SNE      V1, #2A         ; Skip if V1 != 42
$F9C    $A311   LD       I, $311         ; Load 311 into I
$F9E    $9AC4   UNKNOWN  $9AC4           ; Unknown 9xxx instruction
$FA0    $23E8   CALL     $3E8            ; Call subroutine at 3E8
$FA2    $4F01   SNE      VF, #01         ; Skip if VF != 1
$FA4    $5570   SE       V5, V7          ; Skip if V5 == V7
$FA6    $46F8   SNE      V6, #F8         ; Skip if V6 != 248
$FA8    $B05F   JP       V0, $05F        ; Jump to V0 + 05F
$FAA    $B13F   JP       V0, $13F        ; Jump to V0 + 13F
$FAC    $343B   SE       V4, #3B         ; Skip if V4 == 59
$FAE    $6375   LD       V3, #75         ; Load 117 into V3
$FB0    $0444   SYS      $444            ; System call to 444
$FB2    $2BB1   CALL     $BB1            ; Call subroutine at BB1
$FB4    $BFD7   JP       V0, $FD7        ; Jump to V0 + FD7
$FB6    $6ADA   LD       VA, #DA         ; Load 218 into VA
$FB8    $9B97   UNKNOWN  $9B97           ; Unknown 9xxx instruction
$FBA    $B3B9   JP       V0, $3B9        ; Jump to V0 + 3B9
$FBC    $285E   CALL     $85E            ; Call subroutine at 85E
$FBE    $90E1   UNKNOWN  $90E1           ; Unknown 9xxx instruction
$FC0    $03AD   SYS      $3AD            ; System call to 3AD
$FC2    $92C9   UNKNOWN  $92C9           ; Unknown 9xxx instruction
$FC4    $F14C   UNKNOWN  F14C            ; Unknown Fxxx instruction
$FC6    $50DC   UNKNOWN  $50DC           ; Unknown 5xxx instruction
$FC8    $3FB3   SE       VF, #B3         ; Skip if VF == 179
$FCA    $39A0   SE       V9, #A0         ; Skip if V9 == 160
$FCC    $D144   DRW      V1, V4, #4      ; Draw 4-byte sprite at V1, V4
$FCE    $4B13   SNE      VB, #13         ; Skip if VB != 19
$FD0    $B508   JP       V0, $508        ; Jump to V0 + 508
$FD2    $4CBA   SNE      VC, #BA         ; Skip if VC != 186
$FD4    $E349   UNKNOWN  $E349           ; Unknown Exxx instruction
$FD6    $8E37   SUBN     VE, V3          ; VE = V3 - VE, VF = !borrow
$FD8    $13B2   JP       $3B2            ; Jump to 3B2
$FDA    $9841   UNKNOWN  $9841           ; Unknown 9xxx instruction
$FDC    $0B3D   SYS      $B3D            ; System call to B3D
$FDE    $3B29   SE       VB, #29         ; Skip if VB == 41
$FE0    $A0DD   LD       I, $0DD         ; Load 0DD into I
$FE2    $0B1E   SYS      $B1E            ; System call to B1E
$FE4    $ED7E   UNKNOWN  $ED7E           ; Unknown Exxx instruction
$FE6    $0664   SYS      $664            ; System call to 664
$FE8    $F2A9   UNKNOWN  F2A9            ; Unknown Fxxx instruction
$FEA    $C25C   RND      V2, #5C         ; V2 = random & 5C
$FEC    $C09B   RND      V0, #9B         ; V0 = random & 9B
$FEE    $9C66   UNKNOWN  $9C66           ; Unknown 9xxx instruction
$FF0    $AE62   LD       I, $E62         ; Load E62 into I
$FF2    $E23A   UNKNOWN  $E23A           ; Unknown Exxx instruction
$FF4    $1755   JP       $755            ; Jump to 755
$FF6    $1C3A   JP       $C3A            ; Jump to C3A
$FF8    $2481   CALL     $481            ; Call subroutine at 481
$FFA    $778F   ADD      V7, #8F         ; Add 143 to V7
$FFC    $055E   SYS      $55E            ; System call to 55E
$FFE    $ADD9   LD       I, $DD9         ; Load DD9 into I

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 601 (33.5%)
  JP      : 234 (13.1%)
  LD      : 205 (11.4%)
  SE      : 116 ( 6.5%)
  SNE     : 113 ( 6.3%)
  ADD     : 110 ( 6.1%)
  CALL    : 101 ( 5.6%)
  DRW     :  91 ( 5.1%)
  SYS     :  86 ( 4.8%)
  RND     :  81 ( 4.5%)
  SUB     :  11 ( 0.6%)
  SUBN    :   8 ( 0.4%)
  SHR     :   8 ( 0.4%)
  AND     :   7 ( 0.4%)
  OR      :   6 ( 0.3%)
  XOR     :   6 ( 0.3%)
  SHL     :   5 ( 0.3%)
  SKP     :   3 ( 0.2%)

Memory Operations: 315 (17.6%)
Arithmetic Operations: 148 (8.3%)
