
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B1132D01_I04067_C26950_db5b5d9a7039.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 1132
Instance: 4067
Direction: ascending
Final Array: [50, 60, 70, 80, 90, 100, 110, 120]
Operations: R:0 W:8 C:805 S:321

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 117
Sort Array References:
  $218: LD I, $BBC ; Load BBC into I
  $258: LD I, $7CA ; Load 7CA into I
  $266: LD I, $EAB ; Load EAB into I
  $26E: LD I, $EF5 ; Load EF5 into I
  $272: LD I, $EF2 ; Load EF2 into I
  $276: LD I, $A00 ; Load A00 into I
  $278: LD I, $2C4 ; Load 2C4 into I
  $27C: LD I, $CF6 ; Load CF6 into I
  $294: LD I, $256 ; Load 256 into I
  $2AC: LD I, $E02 ; Load E02 into I
  $2D8: LD I, $2AC ; Load 2AC into I
  $2F2: LD I, $6B0 ; Load 6B0 into I
  $30C: LD I, $AB4 ; Load AB4 into I
  $326: LD I, $EB8 ; Load EB8 into I
  $34E: LD I, $449 ; Load 449 into I
  $366: LD I, $C4F ; Load C4F into I
  $374: LD I, $F00 ; Load F00 into I
  $37E: LD I, $14B ; Load 14B into I
  $3B2: LD I, $11F ; Load 11F into I
  $3D8: LD I, $020 ; Load 020 into I
  $404: LD I, $BAB ; Load BAB into I
  $428: LD I, $CFB ; Load CFB into I
  $440: LD I, $15A ; Load 15A into I
  $47C: LD I, $22A ; Load 22A into I
  $48A: LD I, $90D ; Load 90D into I
  $48C: LD I, $39E ; Load 39E into I
  $4AC: LD I, $A77 ; Load A77 into I
  $51A: LD I, $FF1 ; Load FF1 into I
  $532: LD I, $4FF ; Load 4FF into I
  $552: LD I, $07A ; Load 07A into I
  $568: LD I, $5F8 ; Load 5F8 into I
  $586: LD I, $6EF ; Load 6EF into I
  $59E: LD I, $56B ; Load 56B into I
  $5B2: LD I, $BC5 ; Load BC5 into I
  $5B6: LD I, $411 ; Load 411 into I
  $5BA: LD I, $A56 ; Load A56 into I
  $5D4: LD I, $F8C ; Load F8C into I
  $5EA: LD I, $357 ; Load 357 into I
  $60E: LD I, $074 ; Load 074 into I
  $622: LD I, $540 ; Load 540 into I
  $67A: LD I, $5F4 ; Load 5F4 into I
  $680: LD I, $121 ; Load 121 into I
  $69A: LD I, $5D8 ; Load 5D8 into I
  $6AC: LD I, $ED8 ; Load ED8 into I
  $6B0: LD I, $1E8 ; Load 1E8 into I
  $6B6: LD I, $F7F ; Load F7F into I
  $6CC: LD I, $77F ; Load 77F into I
  $6D4: LD I, $98B ; Load 98B into I
  $6E2: LD I, $468 ; Load 468 into I
  $6F0: LD I, $492 ; Load 492 into I
  $706: LD I, $455 ; Load 455 into I
  $70A: LD I, $EAC ; Load EAC into I
  $70C: LD I, $E16 ; Load E16 into I
  $72E: LD I, $724 ; Load 724 into I
  $748: LD I, $9D3 ; Load 9D3 into I
  $762: LD I, $C9F ; Load C9F into I
  $7B6: LD I, $ADA ; Load ADA into I
  $7E0: LD I, $460 ; Load 460 into I
  $7EE: LD I, $E7C ; Load E7C into I
  $7F8: LD I, $FEC ; Load FEC into I
  $804: LD I, $6A4 ; Load 6A4 into I
  $818: LD I, $F21 ; Load F21 into I
  $842: LD I, $D18 ; Load D18 into I
  $878: LD I, $E16 ; Load E16 into I
  $88C: LD I, $4A6 ; Load 4A6 into I
  $8BC: LD I, $011 ; Load 011 into I
  $93E: LD I, $5AD ; Load 5AD into I
  $948: LD I, $4B7 ; Load 4B7 into I
  $99E: LD I, $D2F ; Load D2F into I
  $9A2: LD I, $1DC ; Load 1DC into I
  $9D4: LD I, $DAA ; Load DAA into I
  $9EE: LD I, $AC9 ; Load AC9 into I
  $9FA: LD I, $863 ; Load 863 into I
  $9FC: LD I, $C43 ; Load C43 into I
  $A12: LD I, $DBE ; Load DBE into I
  $A30: LD I, $DF4 ; Load DF4 into I
  $A3A: LD I, $6AB ; Load 6AB into I
  $A5E: LD I, $2F1 ; Load 2F1 into I
  $A62: LD I, $9DE ; Load 9DE into I
  $A68: LD I, $AAB ; Load AAB into I
  $AA8: LD I, $405 ; Load 405 into I
  $AD0: LD I, $C21 ; Load C21 into I
  $AEA: LD I, $D38 ; Load D38 into I
  $B0C: LD I, $D7D ; Load D7D into I
  $B24: LD I, $494 ; Load 494 into I
  $B3C: LD I, $19F ; Load 19F into I
  $B92: LD I, $DD6 ; Load DD6 into I
  $BE8: LD I, $D7C ; Load D7C into I
  $C5C: LD I, $8F7 ; Load 8F7 into I
  $C7A: LD I, $1AF ; Load 1AF into I
  $C90: LD I, $A15 ; Load A15 into I
  $CA6: LD I, $50D ; Load 50D into I
  $CE6: LD I, $CA6 ; Load CA6 into I
  $D1A: LD I, $FDD ; Load FDD into I
  $D1C: LD I, $5F2 ; Load 5F2 into I
  $D26: LD I, $E1A ; Load E1A into I
  $D3C: LD I, $9EA ; Load 9EA into I
  $D70: LD I, $861 ; Load 861 into I
  $D7C: LD I, $E0E ; Load E0E into I
  $D7E: LD I, $AC0 ; Load AC0 into I
  $D8A: LD I, $C55 ; Load C55 into I
  $DBA: LD I, $EB7 ; Load EB7 into I
  $DC4: LD I, $9F6 ; Load 9F6 into I
  $DE0: LD I, $D2D ; Load D2D into I
  $DE2: LD I, $911 ; Load 911 into I
  $E96: LD I, $DB1 ; Load DB1 into I
  $EA6: LD I, $D64 ; Load D64 into I
  $EB4: LD I, $97A ; Load 97A into I
  $EC4: LD I, $805 ; Load 805 into I
  $ED0: LD I, $5EB ; Load 5EB into I
  $EDC: LD I, $1E7 ; Load 1E7 into I
  $EE8: LD I, $870 ; Load 870 into I
  $F08: LD I, $A47 ; Load A47 into I
  $FA2: LD I, $450 ; Load 450 into I
  $FC2: LD I, $C1C ; Load C1C into I
  $FD8: LD I, $E13 ; Load E13 into I
  $FF8: LD I, $910 ; Load 910 into I

CONTROL FLOW ANALYSIS:
Jumps: 198
Calls: 107
Branches: 258
Loops: 110
Loop Structures:
  $244 -> $052 (backward jump)
  $24A -> $10E (backward jump)
  $330 -> $21C (backward jump)
  $39C -> $157 (backward jump)
  $39E -> $10B (backward jump)
  $422 -> $1E0 (backward jump)
  $44A -> $254 (backward jump)
  $45E -> $163 (backward jump)
  $48E -> $088 (backward jump)
  $4B8 -> $125 (backward jump)
  $4E0 -> $079 (backward jump)
  $510 -> $2D7 (backward jump)
  $562 -> $258 (backward jump)
  $56C -> $413 (backward jump)
  $5C4 -> $2F1 (backward jump)
  $626 -> $2ED (backward jump)
  $672 -> $477 (backward jump)
  $68E -> $467 (backward jump)
  $700 -> $3B9 (backward jump)
  $722 -> $580 (backward jump)
  $732 -> $051 (backward jump)
  $7A2 -> $336 (backward jump)
  $7F2 -> $342 (backward jump)
  $820 -> $67D (backward jump)
  $860 -> $253 (backward jump)
  $89A -> $22A (backward jump)
  $8AC -> $3BC (backward jump)
  $8BA -> $6D4 (backward jump)
  $8D0 -> $34A (backward jump)
  $8E6 -> $3C1 (backward jump)
  $8F0 -> $4D1 (backward jump)
  $8FA -> $754 (backward jump)
  $912 -> $5B3 (backward jump)
  $936 -> $3C0 (backward jump)
  $990 -> $88B (backward jump)
  $998 -> $880 (backward jump)
  $9B2 -> $775 (backward jump)
  $9D0 -> $9A6 (backward jump)
  $9E2 -> $3AF (backward jump)
  $A02 -> $97A (backward jump)
  $A04 -> $092 (backward jump)
  $A1A -> $1C3 (backward jump)
  $A34 -> $409 (backward jump)
  $A64 -> $079 (backward jump)
  $A8A -> $99B (backward jump)
  $A96 -> $507 (backward jump)
  $AAA -> $895 (backward jump)
  $AE8 -> $072 (backward jump)
  $AFE -> $AA1 (backward jump)
  $B02 -> $62A (backward jump)
  $B54 -> $3BC (backward jump)
  $B5C -> $1B8 (backward jump)
  $B72 -> $523 (backward jump)
  $B78 -> $030 (backward jump)
  $B7A -> $0BA (backward jump)
  $BB0 -> $377 (backward jump)
  $C04 -> $BED (backward jump)
  $C12 -> $03E (backward jump)
  $C3C -> $17D (backward jump)
  $C56 -> $BC3 (backward jump)
  $C98 -> $A39 (backward jump)
  $C9E -> $9E8 (backward jump)
  $CC2 -> $898 (backward jump)
  $CC6 -> $A6E (backward jump)
  $CC8 -> $712 (backward jump)
  $CF4 -> $6DD (backward jump)
  $CFC -> $8DE (backward jump)
  $D16 -> $5A7 (backward jump)
  $D3A -> $3DD (backward jump)
  $D56 -> $7AF (backward jump)
  $D64 -> $67E (backward jump)
  $D6E -> $3E2 (backward jump)
  $D78 -> $8FA (backward jump)
  $D7A -> $66E (backward jump)
  $DAE -> $4A4 (backward jump)
  $DD6 -> $7F0 (backward jump)
  $DE6 -> $20E (backward jump)
  $DF0 -> $95F (backward jump)
  $E0A -> $C74 (backward jump)
  $E1A -> $3CE (backward jump)
  $E2A -> $9E7 (backward jump)
  $E2E -> $24E (backward jump)
  $E30 -> $CE3 (backward jump)
  $E52 -> $BCF (backward jump)
  $E60 -> $344 (backward jump)
  $E70 -> $031 (backward jump)
  $E8A -> $0B1 (backward jump)
  $E8C -> $17E (backward jump)
  $E9C -> $533 (backward jump)
  $E9E -> $4FA (backward jump)
  $EB6 -> $E67 (backward jump)
  $EC8 -> $268 (backward jump)
  $ED8 -> $D28 (backward jump)
  $EF0 -> $D0E (backward jump)
  $F06 -> $989 (backward jump)
  $F2E -> $C5E (backward jump)
  $F30 -> $86E (backward jump)
  $F36 -> $2FC (backward jump)
  $F38 -> $D20 (backward jump)
  $F40 -> $AC2 (backward jump)
  $F6E -> $4EA (backward jump)
  $F72 -> $6F5 (backward jump)
  $F8A -> $661 (backward jump)
  $F9A -> $6C0 (backward jump)
  $FA4 -> $4E7 (backward jump)
  $FCA -> $85B (backward jump)
  $FD6 -> $709 (backward jump)
  $FDE -> $049 (backward jump)
  $FE2 -> $598 (backward jump)
  $FF4 -> $31D (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $FBE0   UNKNOWN  FBE0            ; Unknown Fxxx instruction
$202    $EE32   UNKNOWN  $EE32           ; Unknown Exxx instruction
$204    $795D   ADD      V9, #5D         ; Add 93 to V9
$206    $D9F5   DRW      V9, VF, #5      ; Draw 5-byte sprite at V9, VF
$208    $E18F   UNKNOWN  $E18F           ; Unknown Exxx instruction
$20A    $407C   SNE      V0, #7C         ; Skip if V0 != 124
$20C    $8AA3   XOR      VA, VA          ; VA ^= VA
$20E    $2E94   CALL     $E94            ; Call subroutine at E94
$210    $E2A9   UNKNOWN  $E2A9           ; Unknown Exxx instruction
$212    $E1BB   UNKNOWN  $E1BB           ; Unknown Exxx instruction
$214    $DF90   DRW      VF, V9, #0      ; Draw 0-byte sprite at VF, V9
$216    $9BD3   UNKNOWN  $9BD3           ; Unknown 9xxx instruction
$218    $ABBC   LD       I, $BBC         ; Load BBC into I
$21A    $98EE   UNKNOWN  $98EE           ; Unknown 9xxx instruction
$21C    $1CE6   JP       $CE6            ; Jump to CE6
$21E    $808E   SHL      V0              ; V0 <<= 1, VF = MSB
$220    $07CC   SYS      $7CC            ; System call to 7CC
$222    $3673   SE       V6, #73         ; Skip if V6 == 115
$224    $7986   ADD      V9, #86         ; Add 134 to V9
$226    $DA24   DRW      VA, V2, #4      ; Draw 4-byte sprite at VA, V2
$228    $945F   UNKNOWN  $945F           ; Unknown 9xxx instruction
$22A    $29F3   CALL     $9F3            ; Call subroutine at 9F3
$22C    $7183   ADD      V1, #83         ; Add 131 to V1
$22E    $3CF4   SE       VC, #F4         ; Skip if VC == 244
$230    $1A2B   JP       $A2B            ; Jump to A2B
$232    $D841   DRW      V8, V4, #1      ; Draw 1-byte sprite at V8, V4
$234    $5011   UNKNOWN  $5011           ; Unknown 5xxx instruction
$236    $E54C   UNKNOWN  $E54C           ; Unknown Exxx instruction
$238    $B837   JP       V0, $837        ; Jump to V0 + 837
$23A    $CB36   RND      VB, #36         ; VB = random & 36
$23C    $9455   UNKNOWN  $9455           ; Unknown 9xxx instruction
$23E    $2E47   CALL     $E47            ; Call subroutine at E47
$240    $F68C   UNKNOWN  F68C            ; Unknown Fxxx instruction
$242    $4A61   SNE      VA, #61         ; Skip if VA != 97
$244    $B052   JP       V0, $052        ; Jump to V0 + 052
$246    $5E1A   UNKNOWN  $5E1A           ; Unknown 5xxx instruction
$248    $D86A   DRW      V8, V6, #A      ; Draw 10-byte sprite at V8, V6
$24A    $110E   JP       $10E            ; Jump to 10E
$24C    $F06F   UNKNOWN  F06F            ; Unknown Fxxx instruction
$24E    $019E   SYS      $19E            ; System call to 19E
$250    $1C6C   JP       $C6C            ; Jump to C6C
$252    $3AA4   SE       VA, #A4         ; Skip if VA == 164
$254    $E99B   UNKNOWN  $E99B           ; Unknown Exxx instruction
$256    $CDE3   RND      VD, #E3         ; VD = random & E3
$258    $A7CA   LD       I, $7CA         ; Load 7CA into I
$25A    $D5D2   DRW      V5, VD, #2      ; Draw 2-byte sprite at V5, VD
$25C    $C87E   RND      V8, #7E         ; V8 = random & 7E
$25E    $E715   UNKNOWN  $E715           ; Unknown Exxx instruction
$260    $9D65   UNKNOWN  $9D65           ; Unknown 9xxx instruction
$262    $00D3   SYS      $0D3            ; System call to 0D3
$264    $F1A9   UNKNOWN  F1A9            ; Unknown Fxxx instruction
$266    $AEAB   LD       I, $EAB         ; Load EAB into I
$268    $D117   DRW      V1, V1, #7      ; Draw 7-byte sprite at V1, V1
$26A    $4508   SNE      V5, #08         ; Skip if V5 != 8
$26C    $7517   ADD      V5, #17         ; Add 23 to V5
$26E    $AEF5   LD       I, $EF5         ; Load EF5 into I
$270    $491E   SNE      V9, #1E         ; Skip if V9 != 30
$272    $AEF2   LD       I, $EF2         ; Load EF2 into I
$274    $6464   LD       V4, #64         ; Load 100 into V4
$276    $AA00   LD       I, $A00         ; Load A00 into I
$278    $A2C4   LD       I, $2C4         ; Load 2C4 into I
$27A    $0E70   SYS      $E70            ; System call to E70
$27C    $ACF6   LD       I, $CF6         ; Load CF6 into I
$27E    $BA0D   JP       V0, $A0D        ; Jump to V0 + A0D
$280    $BF4A   JP       V0, $F4A        ; Jump to V0 + F4A
$282    $0809   SYS      $809            ; System call to 809
$284    $BC1C   JP       V0, $C1C        ; Jump to V0 + C1C
$286    $3662   SE       V6, #62         ; Skip if V6 == 98
$288    $F02E   UNKNOWN  F02E            ; Unknown Fxxx instruction
$28A    $39D4   SE       V9, #D4         ; Skip if V9 == 212
$28C    $CD65   RND      VD, #65         ; VD = random & 65
$28E    $3548   SE       V5, #48         ; Skip if V5 == 72
$290    $F693   UNKNOWN  F693            ; Unknown Fxxx instruction
$292    $C2E2   RND      V2, #E2         ; V2 = random & E2
$294    $A256   LD       I, $256         ; Load 256 into I
$296    $D450   DRW      V4, V5, #0      ; Draw 0-byte sprite at V4, V5
$298    $8BF3   XOR      VB, VF          ; VB ^= VF
$29A    $39C5   SE       V9, #C5         ; Skip if V9 == 197
$29C    $D9E8   DRW      V9, VE, #8      ; Draw 8-byte sprite at V9, VE
$29E    $73AF   ADD      V3, #AF         ; Add 175 to V3
$2A0    $C744   RND      V7, #44         ; V7 = random & 44
$2A2    $CE18   RND      VE, #18         ; VE = random & 18
$2A4    $6862   LD       V8, #62         ; Load 98 into V8
$2A6    $02DB   SYS      $2DB            ; System call to 2DB
$2A8    $E912   UNKNOWN  $E912           ; Unknown Exxx instruction
$2AA    $66E3   LD       V6, #E3         ; Load 227 into V6
$2AC    $AE02   LD       I, $E02         ; Load E02 into I
$2AE    $225C   CALL     $25C            ; Call subroutine at 25C
$2B0    $7F07   ADD      VF, #07         ; Add 7 to VF
$2B2    $B31F   JP       V0, $31F        ; Jump to V0 + 31F
$2B4    $C7CC   RND      V7, #CC         ; V7 = random & CC
$2B6    $C6D5   RND      V6, #D5         ; V6 = random & D5
$2B8    $0E42   SYS      $E42            ; System call to E42
$2BA    $E2D8   UNKNOWN  $E2D8           ; Unknown Exxx instruction
$2BC    $BD2A   JP       V0, $D2A        ; Jump to V0 + D2A
$2BE    $8130   LD       V1, V3          ; V1 = V3
$2C0    $C4B4   RND      V4, #B4         ; V4 = random & B4
$2C2    $B75E   JP       V0, $75E        ; Jump to V0 + 75E
$2C4    $D82D   DRW      V8, V2, #D      ; Draw 13-byte sprite at V8, V2
$2C6    $76F5   ADD      V6, #F5         ; Add 245 to V6
$2C8    $2621   CALL     $621            ; Call subroutine at 621
$2CA    $E134   UNKNOWN  $E134           ; Unknown Exxx instruction
$2CC    $294B   CALL     $94B            ; Call subroutine at 94B
$2CE    $3E48   SE       VE, #48         ; Skip if VE == 72
$2D0    $525C   UNKNOWN  $525C           ; Unknown 5xxx instruction
$2D2    $6670   LD       V6, #70         ; Load 112 into V6
$2D4    $7A84   ADD      VA, #84         ; Add 132 to VA
$2D6    $8E98   UNKNOWN  8E98            ; Unknown 8xxx instruction
$2D8    $A2AC   LD       I, $2AC         ; Load 2AC into I
$2DA    $B6C0   JP       V0, $6C0        ; Jump to V0 + 6C0
$2DC    $CAD4   RND      VA, #D4         ; VA = random & D4
$2DE    $DEE8   DRW      VE, VE, #8      ; Draw 8-byte sprite at VE, VE
$2E0    $F2FC   UNKNOWN  F2FC            ; Unknown Fxxx instruction
$2E2    $0610   SYS      $610            ; System call to 610
$2E4    $1A24   JP       $A24            ; Jump to A24
$2E6    $2E38   CALL     $E38            ; Call subroutine at E38
$2E8    $424C   SNE      V2, #4C         ; Skip if V2 != 76
$2EA    $5660   SE       V6, V6          ; Skip if V6 == V6
$2EC    $6A74   LD       VA, #74         ; Load 116 into VA
$2EE    $7E88   ADD      VE, #88         ; Add 136 to VE
$2F0    $929C   UNKNOWN  $929C           ; Unknown 9xxx instruction
$2F2    $A6B0   LD       I, $6B0         ; Load 6B0 into I
$2F4    $BAC4   JP       V0, $AC4        ; Jump to V0 + AC4
$2F6    $CED8   RND      VE, #D8         ; VE = random & D8
$2F8    $E2EC   UNKNOWN  $E2EC           ; Unknown Exxx instruction
$2FA    $F600   UNKNOWN  F600            ; Unknown Fxxx instruction
$2FC    $0A14   SYS      $A14            ; System call to A14
$2FE    $1E28   JP       $E28            ; Jump to E28
$300    $323C   SE       V2, #3C         ; Skip if V2 == 60
$302    $4650   SNE      V6, #50         ; Skip if V6 != 80
$304    $5A64   UNKNOWN  $5A64           ; Unknown 5xxx instruction
$306    $6E78   LD       VE, #78         ; Load 120 into VE
$308    $828C   UNKNOWN  828C            ; Unknown 8xxx instruction
$30A    $96A0   SNE      V6, VA          ; Skip if V6 != VA
$30C    $AAB4   LD       I, $AB4         ; Load AB4 into I
$30E    $BEC8   JP       V0, $EC8        ; Jump to V0 + EC8
$310    $D2DC   DRW      V2, VD, #C      ; Draw 12-byte sprite at V2, VD
$312    $E6F0   UNKNOWN  $E6F0           ; Unknown Exxx instruction
$314    $FA04   UNKNOWN  FA04            ; Unknown Fxxx instruction
$316    $0E18   SYS      $E18            ; System call to E18
$318    $222C   CALL     $22C            ; Call subroutine at 22C
$31A    $3640   SE       V6, #40         ; Skip if V6 == 64
$31C    $4A54   SNE      VA, #54         ; Skip if VA != 84
$31E    $5E68   UNKNOWN  $5E68           ; Unknown 5xxx instruction
$320    $727C   ADD      V2, #7C         ; Add 124 to V2
$322    $8690   LD       V6, V9          ; V6 = V9
$324    $9AA4   UNKNOWN  $9AA4           ; Unknown 9xxx instruction
$326    $AEB8   LD       I, $EB8         ; Load EB8 into I
$328    $C2CC   RND      V2, #CC         ; V2 = random & CC
$32A    $D6E0   DRW      V6, VE, #0      ; Draw 0-byte sprite at V6, VE
$32C    $EAF4   UNKNOWN  $EAF4           ; Unknown Exxx instruction
$32E    $FE08   UNKNOWN  FE08            ; Unknown Fxxx instruction
$330    $121C   JP       $21C            ; Jump to 21C
$332    $2630   CALL     $630            ; Call subroutine at 630
$334    $3A44   SE       VA, #44         ; Skip if VA == 68
$336    $4E58   SNE      VE, #58         ; Skip if VE != 88
$338    $5A8C   UNKNOWN  $5A8C           ; Unknown 5xxx instruction
$33A    $40D7   SNE      V0, #D7         ; Skip if V0 != 215
$33C    $EBDB   UNKNOWN  $EBDB           ; Unknown Exxx instruction
$33E    $4004   SNE      V0, #04         ; Skip if V0 != 4
$340    $9289   UNKNOWN  $9289           ; Unknown 9xxx instruction
$342    $F195   UNKNOWN  F195            ; Unknown Fxxx instruction
$344    $4366   SNE      V3, #66         ; Skip if V3 != 102
$346    $9937   UNKNOWN  $9937           ; Unknown 9xxx instruction
$348    $732C   ADD      V3, #2C         ; Add 44 to V3
$34A    $267D   CALL     $67D            ; Call subroutine at 67D
$34C    $9950   SNE      V9, V5          ; Skip if V9 != V5
$34E    $A449   LD       I, $449         ; Load 449 into I
$350    $BE17   JP       V0, $E17        ; Jump to V0 + E17
$352    $EF7A   UNKNOWN  $EF7A           ; Unknown Exxx instruction
$354    $2273   CALL     $273            ; Call subroutine at 273
$356    $3433   SE       V4, #33         ; Skip if V4 == 51
$358    $5058   UNKNOWN  $5058           ; Unknown 5xxx instruction
$35A    $BE97   JP       V0, $E97        ; Jump to V0 + E97
$35C    $EBEF   UNKNOWN  $EBEF           ; Unknown Exxx instruction
$35E    $3EAB   SE       VE, #AB         ; Skip if VE == 171
$360    $8846   SHR      V8              ; V8 >>= 1, VF = LSB
$362    $0434   SYS      $434            ; System call to 434
$364    $B3E2   JP       V0, $3E2        ; Jump to V0 + 3E2
$366    $AC4F   LD       I, $C4F         ; Load C4F into I
$368    $2F6D   CALL     $F6D            ; Call subroutine at F6D
$36A    $E666   UNKNOWN  $E666           ; Unknown Exxx instruction
$36C    $9027   UNKNOWN  $9027           ; Unknown 9xxx instruction
$36E    $8777   SUBN     V7, V7          ; V7 = V7 - V7, VF = !borrow
$370    $2162   CALL     $162            ; Call subroutine at 162
$372    $7CC0   ADD      VC, #C0         ; Add 192 to VC
$374    $AF00   LD       I, $F00         ; Load F00 into I
$376    $DB2A   DRW      VB, V2, #A      ; Draw 10-byte sprite at VB, V2
$378    $33B1   SE       V3, #B1         ; Skip if V3 == 177
$37A    $C560   RND      V5, #60         ; V5 = random & 60
$37C    $05C2   SYS      $5C2            ; System call to 5C2
$37E    $A14B   LD       I, $14B         ; Load 14B into I
$380    $9073   UNKNOWN  $9073           ; Unknown 9xxx instruction
$382    $9446   UNKNOWN  $9446           ; Unknown 9xxx instruction
$384    $6A5B   LD       VA, #5B         ; Load 91 into VA
$386    $1771   JP       $771            ; Jump to 771
$388    $39B7   SE       V9, #B7         ; Skip if V9 == 183
$38A    $9F7E   UNKNOWN  $9F7E           ; Unknown 9xxx instruction
$38C    $5914   UNKNOWN  $5914           ; Unknown 5xxx instruction
$38E    $6F96   LD       VF, #96         ; Load 150 into VF
$390    $347C   SE       V4, #7C         ; Skip if V4 == 124
$392    $611C   LD       V1, #1C         ; Load 28 into V1
$394    $BAF2   JP       V0, $AF2        ; Jump to V0 + AF2
$396    $F514   UNKNOWN  F514            ; Unknown Fxxx instruction
$398    $1EDE   JP       $EDE            ; Jump to EDE
$39A    $9E77   UNKNOWN  $9E77           ; Unknown 9xxx instruction
$39C    $B157   JP       V0, $157        ; Jump to V0 + 157
$39E    $110B   JP       $10B            ; Jump to 10B
$3A0    $7B91   ADD      VB, #91         ; Add 145 to VB
$3A2    $6BB9   LD       VB, #B9         ; Load 185 into VB
$3A4    $4935   SNE      V9, #35         ; Skip if V9 != 53
$3A6    $FB14   UNKNOWN  FB14            ; Unknown Fxxx instruction
$3A8    $05D9   SYS      $5D9            ; System call to 5D9
$3AA    $78FE   ADD      V8, #FE         ; Add 254 to V8
$3AC    $8893   XOR      V8, V9          ; V8 ^= V9
$3AE    $375C   SE       V7, #5C         ; Skip if V7 == 92
$3B0    $3275   SE       V2, #75         ; Skip if V2 == 117
$3B2    $A11F   LD       I, $11F         ; Load 11F into I
$3B4    $9C47   UNKNOWN  $9C47           ; Unknown 9xxx instruction
$3B6    $663E   LD       V6, #3E         ; Load 62 into V6
$3B8    $0E42   SYS      $E42            ; System call to E42
$3BA    $4143   SNE      V1, #43         ; Skip if V1 != 67
$3BC    $B58E   JP       V0, $58E        ; Jump to V0 + 58E
$3BE    $E5B1   UNKNOWN  $E5B1           ; Unknown Exxx instruction
$3C0    $5F5A   UNKNOWN  $5F5A           ; Unknown 5xxx instruction
$3C2    $BFAE   JP       V0, $FAE        ; Jump to V0 + FAE
$3C4    $74E5   ADD      V4, #E5         ; Add 229 to V4
$3C6    $2A54   CALL     $A54            ; Call subroutine at A54
$3C8    $5C9F   UNKNOWN  $5C9F           ; Unknown 5xxx instruction
$3CA    $74A7   ADD      V4, #A7         ; Add 167 to V4
$3CC    $8C61   OR       VC, V6          ; VC |= V6
$3CE    $3B9F   SE       VB, #9F         ; Skip if VB == 159
$3D0    $814E   SHL      V1              ; V1 <<= 1, VF = MSB
$3D2    $46CB   SNE      V6, #CB         ; Skip if V6 != 203
$3D4    $DE58   DRW      VE, V5, #8      ; Draw 8-byte sprite at VE, V5
$3D6    $FAEE   UNKNOWN  FAEE            ; Unknown Fxxx instruction
$3D8    $A020   LD       I, $020         ; Load 020 into I
$3DA    $461D   SNE      V6, #1D         ; Skip if V6 != 29
$3DC    $BAF9   JP       V0, $AF9        ; Jump to V0 + AF9
$3DE    $15E2   JP       $5E2            ; Jump to 5E2
$3E0    $91B6   UNKNOWN  $91B6           ; Unknown 9xxx instruction
$3E2    $CA9A   RND      VA, #9A         ; VA = random & 9A
$3E4    $61DC   LD       V1, #DC         ; Load 220 into V1
$3E6    $87BF   UNKNOWN  87BF            ; Unknown 8xxx instruction
$3E8    $7938   ADD      V9, #38         ; Add 56 to V9
$3EA    $37B4   SE       V7, #B4         ; Skip if V7 == 180
$3EC    $6908   LD       V9, #08         ; Load 8 into V9
$3EE    $C57A   RND      V5, #7A         ; V5 = random & 7A
$3F0    $632F   LD       V3, #2F         ; Load 47 into V3
$3F2    $8775   SUB      V7, V7          ; V7 -= V7, VF = !borrow
$3F4    $05BC   SYS      $5BC            ; System call to 5BC
$3F6    $1E48   JP       $E48            ; Jump to E48
$3F8    $4307   SNE      V3, #07         ; Skip if V3 != 7
$3FA    $FB2E   UNKNOWN  FB2E            ; Unknown Fxxx instruction
$3FC    $8CD9   UNKNOWN  8CD9            ; Unknown 8xxx instruction
$3FE    $9432   UNKNOWN  $9432           ; Unknown 9xxx instruction
$400    $D1E1   DRW      V1, VE, #1      ; Draw 1-byte sprite at V1, VE
$402    $5C1C   UNKNOWN  $5C1C           ; Unknown 5xxx instruction
$404    $ABAB   LD       I, $BAB         ; Load BAB into I
$406    $77C9   ADD      V7, #C9         ; Add 201 to V7
$408    $7F3E   ADD      VF, #3E         ; Add 62 to VF
$40A    $6065   LD       V0, #65         ; Load 101 into V0
$40C    $525E   UNKNOWN  $525E           ; Unknown 5xxx instruction
$40E    $3C5E   SE       VC, #5E         ; Skip if VC == 94
$410    $E857   UNKNOWN  $E857           ; Unknown Exxx instruction
$412    $492E   SNE      V9, #2E         ; Skip if V9 != 46
$414    $EC4B   UNKNOWN  $EC4B           ; Unknown Exxx instruction
$416    $E17D   UNKNOWN  $E17D           ; Unknown Exxx instruction
$418    $2E0D   CALL     $E0D            ; Call subroutine at E0D
$41A    $4FD1   SNE      VF, #D1         ; Skip if VF != 209
$41C    $D2FB   DRW      V2, VF, #B      ; Draw 11-byte sprite at V2, VF
$41E    $E9D0   UNKNOWN  $E9D0           ; Unknown Exxx instruction
$420    $E49B   UNKNOWN  $E49B           ; Unknown Exxx instruction
$422    $B1E0   JP       V0, $1E0        ; Jump to V0 + 1E0
$424    $0284   SYS      $284            ; System call to 284
$426    $4EC8   SNE      VE, #C8         ; Skip if VE != 200
$428    $ACFB   LD       I, $CFB         ; Load CFB into I
$42A    $E843   UNKNOWN  $E843           ; Unknown Exxx instruction
$42C    $5889   UNKNOWN  $5889           ; Unknown 5xxx instruction
$42E    $EF52   UNKNOWN  $EF52           ; Unknown Exxx instruction
$430    $CD79   RND      VD, #79         ; VD = random & 79
$432    $0EC1   SYS      $EC1            ; System call to EC1
$434    $8FEB   UNKNOWN  8FEB            ; Unknown 8xxx instruction
$436    $554E   UNKNOWN  $554E           ; Unknown 5xxx instruction
$438    $907B   UNKNOWN  $907B           ; Unknown 9xxx instruction
$43A    $CDDD   RND      VD, #DD         ; VD = random & DD
$43C    $2DC1   CALL     $DC1            ; Call subroutine at DC1
$43E    $BA6F   JP       V0, $A6F        ; Jump to V0 + A6F
$440    $A15A   LD       I, $15A         ; Load 15A into I
$442    $D512   DRW      V5, V1, #2      ; Draw 2-byte sprite at V5, V1
$444    $8759   UNKNOWN  8759            ; Unknown 8xxx instruction
$446    $D0AE   DRW      V0, VA, #E      ; Draw 14-byte sprite at V0, VA
$448    $99FB   UNKNOWN  $99FB           ; Unknown 9xxx instruction
$44A    $1254   JP       $254            ; Jump to 254
$44C    $F7A8   UNKNOWN  F7A8            ; Unknown Fxxx instruction
$44E    $F0AE   UNKNOWN  F0AE            ; Unknown Fxxx instruction
$450    $9C21   UNKNOWN  $9C21           ; Unknown 9xxx instruction
$452    $538B   UNKNOWN  $538B           ; Unknown 5xxx instruction
$454    $5D50   SE       VD, V5          ; Skip if VD == V5
$456    $EEDC   UNKNOWN  $EEDC           ; Unknown Exxx instruction
$458    $B829   JP       V0, $829        ; Jump to V0 + 829
$45A    $E041   UNKNOWN  $E041           ; Unknown Exxx instruction
$45C    $4613   SNE      V6, #13         ; Skip if V6 != 19
$45E    $B163   JP       V0, $163        ; Jump to V0 + 163
$460    $3558   SE       V5, #58         ; Skip if V5 == 88
$462    $EE0B   UNKNOWN  $EE0B           ; Unknown Exxx instruction
$464    $FD02   UNKNOWN  FD02            ; Unknown Fxxx instruction
$466    $B95E   JP       V0, $95E        ; Jump to V0 + 95E
$468    $B7D0   JP       V0, $7D0        ; Jump to V0 + 7D0
$46A    $BE2C   JP       V0, $E2C        ; Jump to V0 + E2C
$46C    $012A   SYS      $12A            ; System call to 12A
$46E    $BF69   JP       V0, $F69        ; Jump to V0 + F69
$470    $2432   CALL     $432            ; Call subroutine at 432
$472    $60AF   LD       V0, #AF         ; Load 175 into V0
$474    $8E14   ADD      VE, V1          ; VE += V1, VF = carry
$476    $6026   LD       V0, #26         ; Load 38 into V0
$478    $01BA   SYS      $1BA            ; System call to 1BA
$47A    $251A   CALL     $51A            ; Call subroutine at 51A
$47C    $A22A   LD       I, $22A         ; Load 22A into I
$47E    $DFB3   DRW      VF, VB, #3      ; Draw 3-byte sprite at VF, VB
$480    $F41C   UNKNOWN  F41C            ; Unknown Fxxx instruction
$482    $61E9   LD       V1, #E9         ; Load 233 into V1
$484    $FCAD   UNKNOWN  FCAD            ; Unknown Fxxx instruction
$486    $CBC2   RND      VB, #C2         ; VB = random & C2
$488    $B4FC   JP       V0, $4FC        ; Jump to V0 + 4FC
$48A    $A90D   LD       I, $90D         ; Load 90D into I
$48C    $A39E   LD       I, $39E         ; Load 39E into I
$48E    $B088   JP       V0, $088        ; Jump to V0 + 088
$490    $CFC9   RND      VF, #C9         ; VF = random & C9
$492    $5FA8   UNKNOWN  $5FA8           ; Unknown 5xxx instruction
$494    $3D02   SE       VD, #02         ; Skip if VD == 2
$496    $0149   SYS      $149            ; System call to 149
$498    $0CD3   SYS      $CD3            ; System call to CD3
$49A    $E7DA   UNKNOWN  $E7DA           ; Unknown Exxx instruction
$49C    $0CE3   SYS      $CE3            ; System call to CE3
$49E    $0B57   SYS      $B57            ; System call to B57
$4A0    $5AAC   UNKNOWN  $5AAC           ; Unknown 5xxx instruction
$4A2    $1D2A   JP       $D2A            ; Jump to D2A
$4A4    $C4C7   RND      V4, #C7         ; V4 = random & C7
$4A6    $7CE4   ADD      VC, #E4         ; Add 228 to VC
$4A8    $CAF1   RND      VA, #F1         ; VA = random & F1
$4AA    $5BDD   UNKNOWN  $5BDD           ; Unknown 5xxx instruction
$4AC    $AA77   LD       I, $A77         ; Load A77 into I
$4AE    $7216   ADD      V2, #16         ; Add 22 to V2
$4B0    $87BF   UNKNOWN  87BF            ; Unknown 8xxx instruction
$4B2    $77A5   ADD      V7, #A5         ; Add 165 to V7
$4B4    $0BB7   SYS      $BB7            ; System call to BB7
$4B6    $048E   SYS      $48E            ; System call to 48E
$4B8    $B125   JP       V0, $125        ; Jump to V0 + 125
$4BA    $F728   UNKNOWN  F728            ; Unknown Fxxx instruction
$4BC    $57ED   UNKNOWN  $57ED           ; Unknown 5xxx instruction
$4BE    $74A5   ADD      V4, #A5         ; Add 165 to V4
$4C0    $F593   UNKNOWN  F593            ; Unknown Fxxx instruction
$4C2    $2F7E   CALL     $F7E            ; Call subroutine at F7E
$4C4    $0DD1   SYS      $DD1            ; System call to DD1
$4C6    $5ADC   UNKNOWN  $5ADC           ; Unknown 5xxx instruction
$4C8    $DFB4   DRW      VF, VB, #4      ; Draw 4-byte sprite at VF, VB
$4CA    $EF07   UNKNOWN  $EF07           ; Unknown Exxx instruction
$4CC    $3CF5   SE       VC, #F5         ; Skip if VC == 245
$4CE    $5214   UNKNOWN  $5214           ; Unknown 5xxx instruction
$4D0    $0438   SYS      $438            ; System call to 438
$4D2    $58F4   UNKNOWN  $58F4           ; Unknown 5xxx instruction
$4D4    $4571   SNE      V5, #71         ; Skip if V5 != 113
$4D6    $D889   DRW      V8, V8, #9      ; Draw 9-byte sprite at V8, V8
$4D8    $41C8   SNE      V1, #C8         ; Skip if V1 != 200
$4DA    $70D0   ADD      V0, #D0         ; Add 208 to V0
$4DC    $C3E5   RND      V3, #E5         ; V3 = random & E5
$4DE    $39E6   SE       V9, #E6         ; Skip if V9 == 230
$4E0    $1079   JP       $079            ; Jump to 079
$4E2    $28A5   CALL     $8A5            ; Call subroutine at 8A5
$4E4    $CC67   RND      VC, #67         ; VC = random & 67
$4E6    $F342   UNKNOWN  F342            ; Unknown Fxxx instruction
$4E8    $3446   SE       V4, #46         ; Skip if V4 == 70
$4EA    $CBF6   RND      VB, #F6         ; VB = random & F6
$4EC    $CE33   RND      VE, #33         ; VE = random & 33
$4EE    $27A8   CALL     $7A8            ; Call subroutine at 7A8
$4F0    $9C09   UNKNOWN  $9C09           ; Unknown 9xxx instruction
$4F2    $72D4   ADD      V2, #D4         ; Add 212 to V2
$4F4    $C69C   RND      V6, #9C         ; V6 = random & 9C
$4F6    $D6A7   DRW      V6, VA, #7      ; Draw 7-byte sprite at V6, VA
$4F8    $9290   SNE      V2, V9          ; Skip if V2 != V9
$4FA    $9221   UNKNOWN  $9221           ; Unknown 9xxx instruction
$4FC    $DE90   DRW      VE, V9, #0      ; Draw 0-byte sprite at VE, V9
$4FE    $48C4   SNE      V8, #C4         ; Skip if V8 != 196
$500    $47D3   SNE      V7, #D3         ; Skip if V7 != 211
$502    $5FC8   UNKNOWN  $5FC8           ; Unknown 5xxx instruction
$504    $62A4   LD       V2, #A4         ; Load 164 into V2
$506    $27AD   CALL     $7AD            ; Call subroutine at 7AD
$508    $44DB   SNE      V4, #DB         ; Skip if V4 != 219
$50A    $2677   CALL     $677            ; Call subroutine at 677
$50C    $6B24   LD       VB, #24         ; Load 36 into VB
$50E    $502C   UNKNOWN  $502C           ; Unknown 5xxx instruction
$510    $B2D7   JP       V0, $2D7        ; Jump to V0 + 2D7
$512    $37C2   SE       V7, #C2         ; Skip if V7 == 194
$514    $73A7   ADD      V3, #A7         ; Add 167 to V3
$516    $D0C4   DRW      V0, VC, #4      ; Draw 4-byte sprite at V0, VC
$518    $E929   UNKNOWN  $E929           ; Unknown Exxx instruction
$51A    $AFF1   LD       I, $FF1         ; Load FF1 into I
$51C    $55B9   UNKNOWN  $55B9           ; Unknown 5xxx instruction
$51E    $CB7E   RND      VB, #7E         ; VB = random & 7E
$520    $6C2B   LD       VC, #2B         ; Load 43 into VC
$522    $94C1   UNKNOWN  $94C1           ; Unknown 9xxx instruction
$524    $7E93   ADD      VE, #93         ; Add 147 to VE
$526    $749B   ADD      V4, #9B         ; Add 155 to V4
$528    $7552   ADD      V5, #52         ; Add 82 to V5
$52A    $DF5A   DRW      VF, V5, #A      ; Draw 10-byte sprite at VF, V5
$52C    $3AD8   SE       VA, #D8         ; Skip if VA == 216
$52E    $F507   LD       V5, DT          ; V5 = delay timer
$530    $4344   SNE      V3, #44         ; Skip if V3 != 68
$532    $A4FF   LD       I, $4FF         ; Load 4FF into I
$534    $2EFD   CALL     $EFD            ; Call subroutine at EFD
$536    $C20C   RND      V2, #0C         ; V2 = random & 0C
$538    $FC69   UNKNOWN  FC69            ; Unknown Fxxx instruction
$53A    $4FA2   SNE      VF, #A2         ; Skip if VF != 162
$53C    $DCB2   DRW      VC, VB, #2      ; Draw 2-byte sprite at VC, VB
$53E    $978B   UNKNOWN  $978B           ; Unknown 9xxx instruction
$540    $968F   UNKNOWN  $968F           ; Unknown 9xxx instruction
$542    $F28E   UNKNOWN  F28E            ; Unknown Fxxx instruction
$544    $50DC   UNKNOWN  $50DC           ; Unknown 5xxx instruction
$546    $1626   JP       $626            ; Jump to 626
$548    $414C   SNE      V1, #4C         ; Skip if V1 != 76
$54A    $C5B0   RND      V5, #B0         ; V5 = random & B0
$54C    $94B4   UNKNOWN  $94B4           ; Unknown 9xxx instruction
$54E    $B643   JP       V0, $643        ; Jump to V0 + 643
$550    $9CF0   SNE      VC, VF          ; Skip if VC != VF
$552    $A07A   LD       I, $07A         ; Load 07A into I
$554    $9586   UNKNOWN  $9586           ; Unknown 9xxx instruction
$556    $489E   SNE      V8, #9E         ; Skip if V8 != 158
$558    $6B9C   LD       VB, #9C         ; Load 156 into VB
$55A    $601C   LD       V0, #1C         ; Load 28 into V0
$55C    $8F5B   UNKNOWN  8F5B            ; Unknown 8xxx instruction
$55E    $6736   LD       V7, #36         ; Load 54 into V7
$560    $0306   SYS      $306            ; System call to 306
$562    $B258   JP       V0, $258        ; Jump to V0 + 258
$564    $4E74   SNE      VE, #74         ; Skip if VE != 116
$566    $1AB7   JP       $AB7            ; Jump to AB7
$568    $A5F8   LD       I, $5F8         ; Load 5F8 into I
$56A    $603F   LD       V0, #3F         ; Load 63 into V0
$56C    $1413   JP       $413            ; Jump to 413
$56E    $DA27   DRW      VA, V2, #7      ; Draw 7-byte sprite at VA, V2
$570    $E4FB   UNKNOWN  $E4FB           ; Unknown Exxx instruction
$572    $4068   SNE      V0, #68         ; Skip if V0 != 104
$574    $E4A8   UNKNOWN  $E4A8           ; Unknown Exxx instruction
$576    $DCDB   DRW      VC, VD, #B      ; Draw 11-byte sprite at VC, VD
$578    $DCD4   DRW      VC, VD, #4      ; Draw 4-byte sprite at VC, VD
$57A    $691A   LD       V9, #1A         ; Load 26 into V9
$57C    $CBF8   RND      VB, #F8         ; VB = random & F8
$57E    $D4A2   DRW      V4, VA, #2      ; Draw 2-byte sprite at V4, VA
$580    $E464   UNKNOWN  $E464           ; Unknown Exxx instruction
$582    $7F91   ADD      VF, #91         ; Add 145 to VF
$584    $206A   CALL     $06A            ; Call subroutine at 06A
$586    $A6EF   LD       I, $6EF         ; Load 6EF into I
$588    $424B   SNE      V2, #4B         ; Skip if V2 != 75
$58A    $9AF4   UNKNOWN  $9AF4           ; Unknown 9xxx instruction
$58C    $E567   UNKNOWN  $E567           ; Unknown Exxx instruction
$58E    $F3C3   UNKNOWN  F3C3            ; Unknown Fxxx instruction
$590    $42DF   SNE      V2, #DF         ; Skip if V2 != 223
$592    $7F9E   ADD      VF, #9E         ; Add 158 to VF
$594    $1E99   JP       $E99            ; Jump to E99
$596    $6A06   LD       VA, #06         ; Load 6 into VA
$598    $2B73   CALL     $B73            ; Call subroutine at B73
$59A    $BBD5   JP       V0, $BD5        ; Jump to V0 + BD5
$59C    $1892   JP       $892            ; Jump to 892
$59E    $A56B   LD       I, $56B         ; Load 56B into I
$5A0    $692F   LD       V9, #2F         ; Load 47 into V9
$5A2    $5465   UNKNOWN  $5465           ; Unknown 5xxx instruction
$5A4    $0A96   SYS      $A96            ; System call to A96
$5A6    $4E9A   SNE      VE, #9A         ; Skip if VE != 154
$5A8    $62EA   LD       V2, #EA         ; Load 234 into V2
$5AA    $9E62   UNKNOWN  $9E62           ; Unknown 9xxx instruction
$5AC    $0B39   SYS      $B39            ; System call to B39
$5AE    $3088   SE       V0, #88         ; Skip if V0 == 136
$5B0    $CCC4   RND      VC, #C4         ; VC = random & C4
$5B2    $ABC5   LD       I, $BC5         ; Load BC5 into I
$5B4    $3597   SE       V5, #97         ; Skip if V5 == 151
$5B6    $A411   LD       I, $411         ; Load 411 into I
$5B8    $03F3   SYS      $3F3            ; System call to 3F3
$5BA    $AA56   LD       I, $A56         ; Load A56 into I
$5BC    $FF95   UNKNOWN  FF95            ; Unknown Fxxx instruction
$5BE    $4374   SNE      V3, #74         ; Skip if V3 != 116
$5C0    $98F3   UNKNOWN  $98F3           ; Unknown 9xxx instruction
$5C2    $1CE6   JP       $CE6            ; Jump to CE6
$5C4    $B2F1   JP       V0, $2F1        ; Jump to V0 + 2F1
$5C6    $296D   CALL     $96D            ; Call subroutine at 96D
$5C8    $FD1A   UNKNOWN  FD1A            ; Unknown Fxxx instruction
$5CA    $C1E2   RND      V1, #E2         ; V1 = random & E2
$5CC    $3E63   SE       VE, #63         ; Skip if VE == 99
$5CE    $0005   SYS      $005            ; System call to 005
$5D0    $B658   JP       V0, $658        ; Jump to V0 + 658
$5D2    $37FD   SE       V7, #FD         ; Skip if V7 == 253
$5D4    $AF8C   LD       I, $F8C         ; Load F8C into I
$5D6    $5485   UNKNOWN  $5485           ; Unknown 5xxx instruction
$5D8    $31F8   SE       V1, #F8         ; Skip if V1 == 248
$5DA    $2271   CALL     $271            ; Call subroutine at 271
$5DC    $2507   CALL     $507            ; Call subroutine at 507
$5DE    $DF0E   DRW      VF, V0, #E      ; Draw 14-byte sprite at VF, V0
$5E0    $0AEE   SYS      $AEE            ; System call to AEE
$5E2    $553A   UNKNOWN  $553A           ; Unknown 5xxx instruction
$5E4    $FC42   UNKNOWN  FC42            ; Unknown Fxxx instruction
$5E6    $6121   LD       V1, #21         ; Load 33 into V1
$5E8    $5A96   UNKNOWN  $5A96           ; Unknown 5xxx instruction
$5EA    $A357   LD       I, $357         ; Load 357 into I
$5EC    $BFA7   JP       V0, $FA7        ; Jump to V0 + FA7
$5EE    $DD6D   DRW      VD, V6, #D      ; Draw 13-byte sprite at VD, V6
$5F0    $5645   UNKNOWN  $5645           ; Unknown 5xxx instruction
$5F2    $206E   CALL     $06E            ; Call subroutine at 06E
$5F4    $0093   SYS      $093            ; System call to 093
$5F6    $58D0   SE       V8, VD          ; Skip if V8 == VD
$5F8    $6414   LD       V4, #14         ; Load 20 into V4
$5FA    $DE75   DRW      VE, V7, #5      ; Draw 5-byte sprite at VE, V7
$5FC    $F2F4   UNKNOWN  F2F4            ; Unknown Fxxx instruction
$5FE    $D6EB   DRW      V6, VE, #B      ; Draw 11-byte sprite at V6, VE
$600    $3308   SE       V3, #08         ; Skip if V3 == 8
$602    $493C   SNE      V9, #3C         ; Skip if V9 != 60
$604    $5C9A   UNKNOWN  $5C9A           ; Unknown 5xxx instruction
$606    $DD16   DRW      VD, V1, #6      ; Draw 6-byte sprite at VD, V1
$608    $4513   SNE      V5, #13         ; Skip if V5 != 19
$60A    $2E3A   CALL     $E3A            ; Call subroutine at E3A
$60C    $FBD4   UNKNOWN  FBD4            ; Unknown Fxxx instruction
$60E    $A074   LD       I, $074         ; Load 074 into I
$610    $E1B5   UNKNOWN  $E1B5           ; Unknown Exxx instruction
$612    $4077   SNE      V0, #77         ; Skip if V0 != 119
$614    $09F6   SYS      $9F6            ; System call to 9F6
$616    $575D   UNKNOWN  $575D           ; Unknown 5xxx instruction
$618    $F320   UNKNOWN  F320            ; Unknown Fxxx instruction
$61A    $70AE   ADD      V0, #AE         ; Add 174 to V0
$61C    $C27D   RND      V2, #7D         ; V2 = random & 7D
$61E    $3BCB   SE       VB, #CB         ; Skip if VB == 203
$620    $4EE4   SNE      VE, #E4         ; Skip if VE != 228
$622    $A540   LD       I, $540         ; Load 540 into I
$624    $F212   UNKNOWN  F212            ; Unknown Fxxx instruction
$626    $12ED   JP       $2ED            ; Jump to 2ED
$628    $D0B3   DRW      V0, VB, #3      ; Draw 3-byte sprite at V0, VB
$62A    $40A5   SNE      V0, #A5         ; Skip if V0 != 165
$62C    $1E20   JP       $E20            ; Jump to E20
$62E    $D231   DRW      V2, V3, #1      ; Draw 1-byte sprite at V2, V3
$630    $1A12   JP       $A12            ; Jump to A12
$632    $E265   UNKNOWN  $E265           ; Unknown Exxx instruction
$634    $4F87   SNE      VF, #87         ; Skip if VF != 135
$636    $FE69   UNKNOWN  FE69            ; Unknown Fxxx instruction
$638    $0B5C   SYS      $B5C            ; System call to B5C
$63A    $9ECA   UNKNOWN  $9ECA           ; Unknown 9xxx instruction
$63C    $3ABB   SE       VA, #BB         ; Skip if VA == 187
$63E    $79AC   ADD      V9, #AC         ; Add 172 to V9
$640    $6B33   LD       VB, #33         ; Load 51 into VB
$642    $F28A   UNKNOWN  F28A            ; Unknown Fxxx instruction
$644    $50CA   UNKNOWN  $50CA           ; Unknown 5xxx instruction
$646    $CD48   RND      VD, #48         ; VD = random & 48
$648    $33E3   SE       V3, #E3         ; Skip if V3 == 227
$64A    $23CC   CALL     $3CC            ; Call subroutine at 3CC
$64C    $65B5   LD       V5, #B5         ; Load 181 into V5
$64E    $4431   SNE      V4, #31         ; Skip if V4 != 49
$650    $EA61   UNKNOWN  $EA61           ; Unknown Exxx instruction
$652    $728B   ADD      V2, #8B         ; Add 139 to V2
$654    $5ADC   UNKNOWN  $5ADC           ; Unknown 5xxx instruction
$656    $583E   UNKNOWN  $583E           ; Unknown 5xxx instruction
$658    $C770   RND      V7, #70         ; V7 = random & 70
$65A    $0DF9   SYS      $DF9            ; System call to DF9
$65C    $6EB5   LD       VE, #B5         ; Load 181 into VE
$65E    $E1FF   UNKNOWN  $E1FF           ; Unknown Exxx instruction
$660    $FCB7   UNKNOWN  FCB7            ; Unknown Fxxx instruction
$662    $1F89   JP       $F89            ; Jump to F89
$664    $CD56   RND      VD, #56         ; VD = random & 56
$666    $50B1   UNKNOWN  $50B1           ; Unknown 5xxx instruction
$668    $5D4F   UNKNOWN  $5D4F           ; Unknown 5xxx instruction
$66A    $E120   UNKNOWN  $E120           ; Unknown Exxx instruction
$66C    $4CFF   SNE      VC, #FF         ; Skip if VC != 255
$66E    $227B   CALL     $27B            ; Call subroutine at 27B
$670    $9D30   SNE      VD, V3          ; Skip if VD != V3
$672    $B477   JP       V0, $477        ; Jump to V0 + 477
$674    $2880   CALL     $880            ; Call subroutine at 880
$676    $C518   RND      V5, #18         ; V5 = random & 18
$678    $C60F   RND      V6, #0F         ; V6 = random & 0F
$67A    $A5F4   LD       I, $5F4         ; Load 5F4 into I
$67C    $5927   UNKNOWN  $5927           ; Unknown 5xxx instruction
$67E    $C90E   RND      V9, #0E         ; V9 = random & 0E
$680    $A121   LD       I, $121         ; Load 121 into I
$682    $830A   UNKNOWN  830A            ; Unknown 8xxx instruction
$684    $9CF3   UNKNOWN  $9CF3           ; Unknown 9xxx instruction
$686    $B708   JP       V0, $708        ; Jump to V0 + 708
$688    $2412   CALL     $412            ; Call subroutine at 412
$68A    $7165   ADD      V1, #65         ; Add 101 to V1
$68C    $37D3   SE       V7, #D3         ; Skip if V7 == 211
$68E    $1467   JP       $467            ; Jump to 467
$690    $2358   CALL     $358            ; Call subroutine at 358
$692    $CC1A   RND      VC, #1A         ; VC = random & 1A
$694    $566F   UNKNOWN  $566F           ; Unknown 5xxx instruction
$696    $BB5F   JP       V0, $B5F        ; Jump to V0 + B5F
$698    $55F5   UNKNOWN  $55F5           ; Unknown 5xxx instruction
$69A    $A5D8   LD       I, $5D8         ; Load 5D8 into I
$69C    $2292   CALL     $292            ; Call subroutine at 292
$69E    $7A74   ADD      VA, #74         ; Add 116 to VA
$6A0    $8166   SHR      V1              ; V1 >>= 1, VF = LSB
$6A2    $5D5D   UNKNOWN  $5D5D           ; Unknown 5xxx instruction
$6A4    $7E24   ADD      VE, #24         ; Add 36 to VE
$6A6    $7E41   ADD      VE, #41         ; Add 65 to VE
$6A8    $88ED   UNKNOWN  88ED            ; Unknown 8xxx instruction
$6AA    $D99D   DRW      V9, V9, #D      ; Draw 13-byte sprite at V9, V9
$6AC    $AED8   LD       I, $ED8         ; Load ED8 into I
$6AE    $FC28   UNKNOWN  FC28            ; Unknown Fxxx instruction
$6B0    $A1E8   LD       I, $1E8         ; Load 1E8 into I
$6B2    $8F32   AND      VF, V3          ; VF &= V3
$6B4    $0683   SYS      $683            ; System call to 683
$6B6    $AF7F   LD       I, $F7F         ; Load F7F into I
$6B8    $BECC   JP       V0, $ECC        ; Jump to V0 + ECC
$6BA    $1C65   JP       $C65            ; Jump to C65
$6BC    $0182   SYS      $182            ; System call to 182
$6BE    $7582   ADD      V5, #82         ; Add 130 to V5
$6C0    $1C93   JP       $C93            ; Jump to C93
$6C2    $8962   AND      V9, V6          ; V9 &= V6
$6C4    $454A   SNE      V5, #4A         ; Skip if V5 != 74
$6C6    $E1D7   UNKNOWN  $E1D7           ; Unknown Exxx instruction
$6C8    $6838   LD       V8, #38         ; Load 56 into V8
$6CA    $1B2C   JP       $B2C            ; Jump to B2C
$6CC    $A77F   LD       I, $77F         ; Load 77F into I
$6CE    $1D65   JP       $D65            ; Jump to D65
$6D0    $9962   UNKNOWN  $9962           ; Unknown 9xxx instruction
$6D2    $802D   UNKNOWN  802D            ; Unknown 8xxx instruction
$6D4    $A98B   LD       I, $98B         ; Load 98B into I
$6D6    $1AAD   JP       $AAD            ; Jump to AAD
$6D8    $9B36   UNKNOWN  $9B36           ; Unknown 9xxx instruction
$6DA    $3EC9   SE       VE, #C9         ; Skip if VE == 201
$6DC    $819F   UNKNOWN  819F            ; Unknown 8xxx instruction
$6DE    $5251   UNKNOWN  $5251           ; Unknown 5xxx instruction
$6E0    $4FD2   SNE      VF, #D2         ; Skip if VF != 210
$6E2    $A468   LD       I, $468         ; Load 468 into I
$6E4    $7F51   ADD      VF, #51         ; Add 81 to VF
$6E6    $80BD   UNKNOWN  80BD            ; Unknown 8xxx instruction
$6E8    $833D   UNKNOWN  833D            ; Unknown 8xxx instruction
$6EA    $B8F1   JP       V0, $8F1        ; Jump to V0 + 8F1
$6EC    $E0BC   UNKNOWN  $E0BC           ; Unknown Exxx instruction
$6EE    $E829   UNKNOWN  $E829           ; Unknown Exxx instruction
$6F0    $A492   LD       I, $492         ; Load 492 into I
$6F2    $C4D9   RND      V4, #D9         ; V4 = random & D9
$6F4    $3BE7   SE       VB, #E7         ; Skip if VB == 231
$6F6    $78F6   ADD      V8, #F6         ; Add 246 to V8
$6F8    $77EA   ADD      V7, #EA         ; Add 234 to V7
$6FA    $093D   SYS      $93D            ; System call to 93D
$6FC    $8937   SUBN     V9, V3          ; V9 = V3 - V9, VF = !borrow
$6FE    $C890   RND      V8, #90         ; V8 = random & 90
$700    $13B9   JP       $3B9            ; Jump to 3B9
$702    $546C   UNKNOWN  $546C           ; Unknown 5xxx instruction
$704    $4C06   SNE      VC, #06         ; Skip if VC != 6
$706    $A455   LD       I, $455         ; Load 455 into I
$708    $E297   UNKNOWN  $E297           ; Unknown Exxx instruction
$70A    $AEAC   LD       I, $EAC         ; Load EAC into I
$70C    $AE16   LD       I, $E16         ; Load E16 into I
$70E    $9125   UNKNOWN  $9125           ; Unknown 9xxx instruction
$710    $5BD5   UNKNOWN  $5BD5           ; Unknown 5xxx instruction
$712    $4BF6   SNE      VB, #F6         ; Skip if VB != 246
$714    $455E   SNE      V5, #5E         ; Skip if V5 != 94
$716    $3B10   SE       VB, #10         ; Skip if VB == 16
$718    $485C   SNE      V8, #5C         ; Skip if V8 != 92
$71A    $43F6   SNE      V3, #F6         ; Skip if V3 != 246
$71C    $222E   CALL     $22E            ; Call subroutine at 22E
$71E    $8F7E   SHL      VF              ; VF <<= 1, VF = MSB
$720    $C817   RND      V8, #17         ; V8 = random & 17
$722    $B580   JP       V0, $580        ; Jump to V0 + 580
$724    $0CBA   SYS      $CBA            ; System call to CBA
$726    $7263   ADD      V2, #63         ; Add 99 to V2
$728    $9E4F   UNKNOWN  $9E4F           ; Unknown 9xxx instruction
$72A    $2400   CALL     $400            ; Call subroutine at 400
$72C    $4343   SNE      V3, #43         ; Skip if V3 != 67
$72E    $A724   LD       I, $724         ; Load 724 into I
$730    $95BB   UNKNOWN  $95BB           ; Unknown 9xxx instruction
$732    $1051   JP       $051            ; Jump to 051
$734    $3D81   SE       VD, #81         ; Skip if VD == 129
$736    $C75A   RND      V7, #5A         ; V7 = random & 5A
$738    $7732   ADD      V7, #32         ; Add 50 to V7
$73A    $BE1A   JP       V0, $E1A        ; Jump to V0 + E1A
$73C    $EEF6   UNKNOWN  $EEF6           ; Unknown Exxx instruction
$73E    $70CE   ADD      V0, #CE         ; Add 206 to V0
$740    $2D5A   CALL     $D5A            ; Call subroutine at D5A
$742    $C58E   RND      V5, #8E         ; V5 = random & 8E
$744    $8524   ADD      V5, V2          ; V5 += V2, VF = carry
$746    $D672   DRW      V6, V7, #2      ; Draw 2-byte sprite at V6, V7
$748    $A9D3   LD       I, $9D3         ; Load 9D3 into I
$74A    $CBD6   RND      VB, #D6         ; VB = random & D6
$74C    $2ACD   CALL     $ACD            ; Call subroutine at ACD
$74E    $5CD8   UNKNOWN  $5CD8           ; Unknown 5xxx instruction
$750    $C120   RND      V1, #20         ; V1 = random & 20
$752    $827F   UNKNOWN  827F            ; Unknown 8xxx instruction
$754    $3803   SE       V8, #03         ; Skip if V8 == 3
$756    $2922   CALL     $922            ; Call subroutine at 922
$758    $288A   CALL     $88A            ; Call subroutine at 88A
$75A    $F5AF   UNKNOWN  F5AF            ; Unknown Fxxx instruction
$75C    $224B   CALL     $24B            ; Call subroutine at 24B
$75E    $D2C6   DRW      V2, VC, #6      ; Draw 6-byte sprite at V2, VC
$760    $0BEC   SYS      $BEC            ; System call to BEC
$762    $AC9F   LD       I, $C9F         ; Load C9F into I
$764    $9EB2   UNKNOWN  $9EB2           ; Unknown 9xxx instruction
$766    $863A   UNKNOWN  863A            ; Unknown 8xxx instruction
$768    $F9BC   UNKNOWN  F9BC            ; Unknown Fxxx instruction
$76A    $2A0A   CALL     $A0A            ; Call subroutine at A0A
$76C    $4E39   SNE      VE, #39         ; Skip if VE != 57
$76E    $F7BA   UNKNOWN  F7BA            ; Unknown Fxxx instruction
$770    $419E   SNE      V1, #9E         ; Skip if V1 != 158
$772    $D194   DRW      V1, V9, #4      ; Draw 4-byte sprite at V1, V9
$774    $D50D   DRW      V5, V0, #D      ; Draw 13-byte sprite at V5, V0
$776    $1EAA   JP       $EAA            ; Jump to EAA
$778    $C0FC   RND      V0, #FC         ; V0 = random & FC
$77A    $6434   LD       V4, #34         ; Load 52 into V4
$77C    $3D6D   SE       VD, #6D         ; Skip if VD == 109
$77E    $D174   DRW      V1, V7, #4      ; Draw 4-byte sprite at V1, V7
$780    $EDC0   UNKNOWN  $EDC0           ; Unknown Exxx instruction
$782    $CC3F   RND      VC, #3F         ; VC = random & 3F
$784    $3A7D   SE       VA, #7D         ; Skip if VA == 125
$786    $1909   JP       $909            ; Jump to 909
$788    $6F81   LD       VF, #81         ; Load 129 into VF
$78A    $8DAF   UNKNOWN  8DAF            ; Unknown 8xxx instruction
$78C    $DC66   DRW      VC, V6, #6      ; Draw 6-byte sprite at VC, V6
$78E    $8D8E   SHL      VD              ; VD <<= 1, VF = MSB
$790    $E2AF   UNKNOWN  $E2AF           ; Unknown Exxx instruction
$792    $3046   SE       V0, #46         ; Skip if V0 == 70
$794    $54FE   UNKNOWN  $54FE           ; Unknown 5xxx instruction
$796    $F924   UNKNOWN  F924            ; Unknown Fxxx instruction
$798    $F56C   UNKNOWN  F56C            ; Unknown Fxxx instruction
$79A    $56DC   UNKNOWN  $56DC           ; Unknown 5xxx instruction
$79C    $DD89   DRW      VD, V8, #9      ; Draw 9-byte sprite at VD, V8
$79E    $9525   UNKNOWN  $9525           ; Unknown 9xxx instruction
$7A0    $93F7   UNKNOWN  $93F7           ; Unknown 9xxx instruction
$7A2    $B336   JP       V0, $336        ; Jump to V0 + 336
$7A4    $46EB   SNE      V6, #EB         ; Skip if V6 != 235
$7A6    $81D6   SHR      V1              ; V1 >>= 1, VF = LSB
$7A8    $32D3   SE       V2, #D3         ; Skip if V2 == 211
$7AA    $3CF2   SE       VC, #F2         ; Skip if VC == 242
$7AC    $1F22   JP       $F22            ; Jump to F22
$7AE    $392E   SE       V9, #2E         ; Skip if V9 == 46
$7B0    $2425   CALL     $425            ; Call subroutine at 425
$7B2    $E54A   UNKNOWN  $E54A           ; Unknown Exxx instruction
$7B4    $3925   SE       V9, #25         ; Skip if V9 == 37
$7B6    $AADA   LD       I, $ADA         ; Load ADA into I
$7B8    $9336   UNKNOWN  $9336           ; Unknown 9xxx instruction
$7BA    $8C6C   UNKNOWN  8C6C            ; Unknown 8xxx instruction
$7BC    $45FA   SNE      V5, #FA         ; Skip if V5 != 250
$7BE    $D246   DRW      V2, V4, #6      ; Draw 6-byte sprite at V2, V4
$7C0    $8726   SHR      V7              ; V7 >>= 1, VF = LSB
$7C2    $5967   UNKNOWN  $5967           ; Unknown 5xxx instruction
$7C4    $7CA7   ADD      VC, #A7         ; Add 167 to VC
$7C6    $523C   UNKNOWN  $523C           ; Unknown 5xxx instruction
$7C8    $6CAC   LD       VC, #AC         ; Load 172 into VC
$7CA    $5DCE   UNKNOWN  $5DCE           ; Unknown 5xxx instruction
$7CC    $BDCF   JP       V0, $DCF        ; Jump to V0 + DCF
$7CE    $E5E9   UNKNOWN  $E5E9           ; Unknown Exxx instruction
$7D0    $420E   SNE      V2, #0E         ; Skip if V2 != 14
$7D2    $8E88   UNKNOWN  8E88            ; Unknown 8xxx instruction
$7D4    $FA76   UNKNOWN  FA76            ; Unknown Fxxx instruction
$7D6    $0A7B   SYS      $A7B            ; System call to A7B
$7D8    $9453   UNKNOWN  $9453           ; Unknown 9xxx instruction
$7DA    $5FBE   UNKNOWN  $5FBE           ; Unknown 5xxx instruction
$7DC    $4859   SNE      V8, #59         ; Skip if V8 != 89
$7DE    $565A   UNKNOWN  $565A           ; Unknown 5xxx instruction
$7E0    $A460   LD       I, $460         ; Load 460 into I
$7E2    $CB85   RND      VB, #85         ; VB = random & 85
$7E4    $4056   SNE      V0, #56         ; Skip if V0 != 86
$7E6    $79E8   ADD      V9, #E8         ; Add 232 to V9
$7E8    $CC8C   RND      VC, #8C         ; VC = random & 8C
$7EA    $5E79   UNKNOWN  $5E79           ; Unknown 5xxx instruction
$7EC    $DDDC   DRW      VD, VD, #C      ; Draw 12-byte sprite at VD, VD
$7EE    $AE7C   LD       I, $E7C         ; Load E7C into I
$7F0    $C987   RND      V9, #87         ; V9 = random & 87
$7F2    $1342   JP       $342            ; Jump to 342
$7F4    $5FF1   UNKNOWN  $5FF1           ; Unknown 5xxx instruction
$7F6    $BC74   JP       V0, $C74        ; Jump to V0 + C74
$7F8    $AFEC   LD       I, $FEC         ; Load FEC into I
$7FA    $75D6   ADD      V5, #D6         ; Add 214 to V5
$7FC    $705A   ADD      V0, #5A         ; Add 90 to V0
$7FE    $EC79   UNKNOWN  $EC79           ; Unknown Exxx instruction
$800    $915A   UNKNOWN  $915A           ; Unknown 9xxx instruction
$802    $8599   UNKNOWN  8599            ; Unknown 8xxx instruction
$804    $A6A4   LD       I, $6A4         ; Load 6A4 into I
$806    $C411   RND      V4, #11         ; V4 = random & 11
$808    $35E3   SE       V5, #E3         ; Skip if V5 == 227
$80A    $66C6   LD       V6, #C6         ; Load 198 into V6
$80C    $5155   UNKNOWN  $5155           ; Unknown 5xxx instruction
$80E    $3249   SE       V2, #49         ; Skip if V2 == 73
$810    $5D94   UNKNOWN  $5D94           ; Unknown 5xxx instruction
$812    $8488   UNKNOWN  8488            ; Unknown 8xxx instruction
$814    $D2F4   DRW      V2, VF, #4      ; Draw 4-byte sprite at V2, VF
$816    $4EC9   SNE      VE, #C9         ; Skip if VE != 201
$818    $AF21   LD       I, $F21         ; Load F21 into I
$81A    $BE77   JP       V0, $E77        ; Jump to V0 + E77
$81C    $D595   DRW      V5, V9, #5      ; Draw 5-byte sprite at V5, V9
$81E    $18B0   JP       $8B0            ; Jump to 8B0
$820    $B67D   JP       V0, $67D        ; Jump to V0 + 67D
$822    $91EF   UNKNOWN  $91EF           ; Unknown 9xxx instruction
$824    $467B   SNE      V6, #7B         ; Skip if V6 != 123
$826    $3FAB   SE       VF, #AB         ; Skip if VF == 171
$828    $7369   ADD      V3, #69         ; Add 105 to V3
$82A    $C11F   RND      V1, #1F         ; V1 = random & 1F
$82C    $FA44   UNKNOWN  FA44            ; Unknown Fxxx instruction
$82E    $F29D   UNKNOWN  F29D            ; Unknown Fxxx instruction
$830    $6C1E   LD       VC, #1E         ; Load 30 into VC
$832    $782C   ADD      V8, #2C         ; Add 44 to V8
$834    $6DD5   LD       VD, #D5         ; Load 213 into VD
$836    $5E08   UNKNOWN  $5E08           ; Unknown 5xxx instruction
$838    $6547   LD       V5, #47         ; Load 71 into V5
$83A    $7353   ADD      V3, #53         ; Add 83 to V3
$83C    $E855   UNKNOWN  $E855           ; Unknown Exxx instruction
$83E    $285A   CALL     $85A            ; Call subroutine at 85A
$840    $ED8C   UNKNOWN  $ED8C           ; Unknown Exxx instruction
$842    $AD18   LD       I, $D18         ; Load D18 into I
$844    $FE53   UNKNOWN  FE53            ; Unknown Fxxx instruction
$846    $BAF9   JP       V0, $AF9        ; Jump to V0 + AF9
$848    $8434   ADD      V4, V3          ; V4 += V3, VF = carry
$84A    $20D6   CALL     $0D6            ; Call subroutine at 0D6
$84C    $C5EB   RND      V5, #EB         ; V5 = random & EB
$84E    $F3FD   UNKNOWN  F3FD            ; Unknown Fxxx instruction
$850    $2C0F   CALL     $C0F            ; Call subroutine at C0F
$852    $8AD7   SUBN     VA, VD          ; VA = VD - VA, VF = !borrow
$854    $D21E   DRW      V2, V1, #E      ; Draw 14-byte sprite at V2, V1
$856    $9DCB   UNKNOWN  $9DCB           ; Unknown 9xxx instruction
$858    $E502   UNKNOWN  $E502           ; Unknown Exxx instruction
$85A    $F514   UNKNOWN  F514            ; Unknown Fxxx instruction
$85C    $CD09   RND      VD, #09         ; VD = random & 09
$85E    $D292   DRW      V2, V9, #2      ; Draw 2-byte sprite at V2, V9
$860    $1253   JP       $253            ; Jump to 253
$862    $CB30   RND      VB, #30         ; VB = random & 30
$864    $BE0D   JP       V0, $E0D        ; Jump to V0 + E0D
$866    $3060   SE       V0, #60         ; Skip if V0 == 96
$868    $0553   SYS      $553            ; System call to 553
$86A    $31C8   SE       V1, #C8         ; Skip if V1 == 200
$86C    $F62E   UNKNOWN  F62E            ; Unknown Fxxx instruction
$86E    $D2A2   DRW      V2, VA, #2      ; Draw 2-byte sprite at V2, VA
$870    $8275   SUB      V2, V7          ; V2 -= V7, VF = !borrow
$872    $9DC8   UNKNOWN  $9DC8           ; Unknown 9xxx instruction
$874    $FE6F   UNKNOWN  FE6F            ; Unknown Fxxx instruction
$876    $D27E   DRW      V2, V7, #E      ; Draw 14-byte sprite at V2, V7
$878    $AE16   LD       I, $E16         ; Load E16 into I
$87A    $0A49   SYS      $A49            ; System call to A49
$87C    $4F95   SNE      VF, #95         ; Skip if VF != 149
$87E    $8968   UNKNOWN  8968            ; Unknown 8xxx instruction
$880    $905D   UNKNOWN  $905D           ; Unknown 9xxx instruction
$882    $81C1   OR       V1, VC          ; V1 |= VC
$884    $C902   RND      V9, #02         ; V9 = random & 02
$886    $7527   ADD      V5, #27         ; Add 39 to V5
$888    $ECF8   UNKNOWN  $ECF8           ; Unknown Exxx instruction
$88A    $BFC9   JP       V0, $FC9        ; Jump to V0 + FC9
$88C    $A4A6   LD       I, $4A6         ; Load 4A6 into I
$88E    $4617   SNE      V6, #17         ; Skip if V6 != 23
$890    $FC86   UNKNOWN  FC86            ; Unknown Fxxx instruction
$892    $4A88   SNE      VA, #88         ; Skip if VA != 136
$894    $EC53   UNKNOWN  $EC53           ; Unknown Exxx instruction
$896    $195C   JP       $95C            ; Jump to 95C
$898    $5543   UNKNOWN  $5543           ; Unknown 5xxx instruction
$89A    $122A   JP       $22A            ; Jump to 22A
$89C    $F87D   UNKNOWN  F87D            ; Unknown Fxxx instruction
$89E    $D282   DRW      V2, V8, #2      ; Draw 2-byte sprite at V2, V8
$8A0    $7521   ADD      V5, #21         ; Add 33 to V5
$8A2    $0BE0   SYS      $BE0            ; System call to BE0
$8A4    $C17E   RND      V1, #7E         ; V1 = random & 7E
$8A6    $DF3A   DRW      VF, V3, #A      ; Draw 10-byte sprite at VF, V3
$8A8    $6BCF   LD       VB, #CF         ; Load 207 into VB
$8AA    $FF4F   UNKNOWN  FF4F            ; Unknown Fxxx instruction
$8AC    $13BC   JP       $3BC            ; Jump to 3BC
$8AE    $9026   UNKNOWN  $9026           ; Unknown 9xxx instruction
$8B0    $8711   OR       V7, V1          ; V7 |= V1
$8B2    $6FFA   LD       VF, #FA         ; Load 250 into VF
$8B4    $DDAD   DRW      VD, VA, #D      ; Draw 13-byte sprite at VD, VA
$8B6    $D500   DRW      V5, V0, #0      ; Draw 0-byte sprite at V5, V0
$8B8    $596E   UNKNOWN  $596E           ; Unknown 5xxx instruction
$8BA    $16D4   JP       $6D4            ; Jump to 6D4
$8BC    $A011   LD       I, $011         ; Load 011 into I
$8BE    $C441   RND      V4, #41         ; V4 = random & 41
$8C0    $6E38   LD       VE, #38         ; Load 56 into VE
$8C2    $DA37   DRW      VA, V3, #7      ; Draw 7-byte sprite at VA, V3
$8C4    $0A09   SYS      $A09            ; System call to A09
$8C6    $958B   UNKNOWN  $958B           ; Unknown 9xxx instruction
$8C8    $29F6   CALL     $9F6            ; Call subroutine at 9F6
$8CA    $3F93   SE       VF, #93         ; Skip if VF == 147
$8CC    $5450   SE       V4, V5          ; Skip if V4 == V5
$8CE    $85F9   UNKNOWN  85F9            ; Unknown 8xxx instruction
$8D0    $B34A   JP       V0, $34A        ; Jump to V0 + 34A
$8D2    $5DC2   UNKNOWN  $5DC2           ; Unknown 5xxx instruction
$8D4    $644F   LD       V4, #4F         ; Load 79 into V4
$8D6    $86D9   UNKNOWN  86D9            ; Unknown 8xxx instruction
$8D8    $9C23   UNKNOWN  $9C23           ; Unknown 9xxx instruction
$8DA    $E197   UNKNOWN  $E197           ; Unknown Exxx instruction
$8DC    $678B   LD       V7, #8B         ; Load 139 into V7
$8DE    $33B8   SE       V3, #B8         ; Skip if V3 == 184
$8E0    $1913   JP       $913            ; Jump to 913
$8E2    $2897   CALL     $897            ; Call subroutine at 897
$8E4    $00F3   SYS      $0F3            ; System call to 0F3
$8E6    $B3C1   JP       V0, $3C1        ; Jump to V0 + 3C1
$8E8    $747A   ADD      V4, #7A         ; Add 122 to V4
$8EA    $7152   ADD      V1, #52         ; Add 82 to V1
$8EC    $3FE8   SE       VF, #E8         ; Skip if VF == 232
$8EE    $4AE1   SNE      VA, #E1         ; Skip if VA != 225
$8F0    $B4D1   JP       V0, $4D1        ; Jump to V0 + 4D1
$8F2    $4D56   SNE      VD, #56         ; Skip if VD != 86
$8F4    $0BF4   SYS      $BF4            ; System call to BF4
$8F6    $6DF5   LD       VD, #F5         ; Load 245 into VD
$8F8    $65EB   LD       V5, #EB         ; Load 235 into V5
$8FA    $B754   JP       V0, $754        ; Jump to V0 + 754
$8FC    $EE0E   UNKNOWN  $EE0E           ; Unknown Exxx instruction
$8FE    $E0B2   UNKNOWN  $E0B2           ; Unknown Exxx instruction
$900    $1B2E   JP       $B2E            ; Jump to B2E
$902    $2DF1   CALL     $DF1            ; Call subroutine at DF1
$904    $29A0   CALL     $9A0            ; Call subroutine at 9A0
$906    $311D   SE       V1, #1D         ; Skip if V1 == 29
$908    $5D41   UNKNOWN  $5D41           ; Unknown 5xxx instruction
$90A    $298B   CALL     $98B            ; Call subroutine at 98B
$90C    $C713   RND      V7, #13         ; V7 = random & 13
$90E    $89C0   LD       V9, VC          ; V9 = VC
$910    $3206   SE       V2, #06         ; Skip if V2 == 6
$912    $15B3   JP       $5B3            ; Jump to 5B3
$914    $3BF3   SE       VB, #F3         ; Skip if VB == 243
$916    $23B3   CALL     $3B3            ; Call subroutine at 3B3
$918    $4A47   SNE      VA, #47         ; Skip if VA != 71
$91A    $6AFC   LD       VA, #FC         ; Load 252 into VA
$91C    $7ED8   ADD      VE, #D8         ; Add 216 to VE
$91E    $D204   DRW      V2, V0, #4      ; Draw 4-byte sprite at V2, V0
$920    $9D03   UNKNOWN  $9D03           ; Unknown 9xxx instruction
$922    $45DE   SNE      V5, #DE         ; Skip if V5 != 222
$924    $EF52   UNKNOWN  $EF52           ; Unknown Exxx instruction
$926    $F46E   UNKNOWN  F46E            ; Unknown Fxxx instruction
$928    $58C0   SE       V8, VC          ; Skip if V8 == VC
$92A    $853B   UNKNOWN  853B            ; Unknown 8xxx instruction
$92C    $0E1A   SYS      $E1A            ; System call to E1A
$92E    $86F4   ADD      V6, VF          ; V6 += VF, VF = carry
$930    $2AB6   CALL     $AB6            ; Call subroutine at AB6
$932    $4561   SNE      V5, #61         ; Skip if V5 != 97
$934    $FE5C   UNKNOWN  FE5C            ; Unknown Fxxx instruction
$936    $B3C0   JP       V0, $3C0        ; Jump to V0 + 3C0
$938    $4953   SNE      V9, #53         ; Skip if V9 != 83
$93A    $EB7F   UNKNOWN  $EB7F           ; Unknown Exxx instruction
$93C    $281F   CALL     $81F            ; Call subroutine at 81F
$93E    $A5AD   LD       I, $5AD         ; Load 5AD into I
$940    $E0AF   UNKNOWN  $E0AF           ; Unknown Exxx instruction
$942    $2B3D   CALL     $B3D            ; Call subroutine at B3D
$944    $BD94   JP       V0, $D94        ; Jump to V0 + D94
$946    $74F6   ADD      V4, #F6         ; Add 246 to V4
$948    $A4B7   LD       I, $4B7         ; Load 4B7 into I
$94A    $59D4   UNKNOWN  $59D4           ; Unknown 5xxx instruction
$94C    $9190   SNE      V1, V9          ; Skip if V1 != V9
$94E    $3E0D   SE       VE, #0D         ; Skip if VE == 13
$950    $D104   DRW      V1, V0, #4      ; Draw 4-byte sprite at V1, V0
$952    $9151   UNKNOWN  $9151           ; Unknown 9xxx instruction
$954    $8B6B   UNKNOWN  8B6B            ; Unknown 8xxx instruction
$956    $DB28   DRW      VB, V2, #8      ; Draw 8-byte sprite at VB, V2
$958    $E515   UNKNOWN  $E515           ; Unknown Exxx instruction
$95A    $7DCE   ADD      VD, #CE         ; Add 206 to VD
$95C    $7193   ADD      V1, #93         ; Add 147 to V1
$95E    $8557   SUBN     V5, V5          ; V5 = V5 - V5, VF = !borrow
$960    $94FE   UNKNOWN  $94FE           ; Unknown 9xxx instruction
$962    $D5C4   DRW      V5, VC, #4      ; Draw 4-byte sprite at V5, VC
$964    $83AE   SHL      V3              ; V3 <<= 1, VF = MSB
$966    $BCDC   JP       V0, $CDC        ; Jump to V0 + CDC
$968    $8397   SUBN     V3, V9          ; V3 = V9 - V3, VF = !borrow
$96A    $E8AE   UNKNOWN  $E8AE           ; Unknown Exxx instruction
$96C    $017B   SYS      $17B            ; System call to 17B
$96E    $CA57   RND      VA, #57         ; VA = random & 57
$970    $1B92   JP       $B92            ; Jump to B92
$972    $71B8   ADD      V1, #B8         ; Add 184 to V1
$974    $636D   LD       V3, #6D         ; Load 109 into V3
$976    $5B1B   UNKNOWN  $5B1B           ; Unknown 5xxx instruction
$978    $E9EE   UNKNOWN  $E9EE           ; Unknown Exxx instruction
$97A    $EC2A   UNKNOWN  $EC2A           ; Unknown Exxx instruction
$97C    $755E   ADD      V5, #5E         ; Add 94 to V5
$97E    $DE50   DRW      VE, V5, #0      ; Draw 0-byte sprite at VE, V5
$980    $23C2   CALL     $3C2            ; Call subroutine at 3C2
$982    $544A   UNKNOWN  $544A           ; Unknown 5xxx instruction
$984    $0CF1   SYS      $CF1            ; System call to CF1
$986    $47BC   SNE      V7, #BC         ; Skip if V7 != 188
$988    $5EEA   UNKNOWN  $5EEA           ; Unknown 5xxx instruction
$98A    $8B32   AND      VB, V3          ; VB &= V3
$98C    $84C2   AND      V4, VC          ; V4 &= VC
$98E    $66CD   LD       V6, #CD         ; Load 205 into V6
$990    $188B   JP       $88B            ; Jump to 88B
$992    $F391   UNKNOWN  F391            ; Unknown Fxxx instruction
$994    $0B15   SYS      $B15            ; System call to B15
$996    $5197   UNKNOWN  $5197           ; Unknown 5xxx instruction
$998    $1880   JP       $880            ; Jump to 880
$99A    $3306   SE       V3, #06         ; Skip if V3 == 6
$99C    $EDEE   UNKNOWN  $EDEE           ; Unknown Exxx instruction
$99E    $AD2F   LD       I, $D2F         ; Load D2F into I
$9A0    $FEFF   UNKNOWN  FEFF            ; Unknown Fxxx instruction
$9A2    $A1DC   LD       I, $1DC         ; Load 1DC into I
$9A4    $7CDB   ADD      VC, #DB         ; Add 219 to VC
$9A6    $BF85   JP       V0, $F85        ; Jump to V0 + F85
$9A8    $626B   LD       V2, #6B         ; Load 107 into V2
$9AA    $5077   UNKNOWN  $5077           ; Unknown 5xxx instruction
$9AC    $2397   CALL     $397            ; Call subroutine at 397
$9AE    $6C23   LD       VC, #23         ; Load 35 into VC
$9B0    $F435   UNKNOWN  F435            ; Unknown Fxxx instruction
$9B2    $1775   JP       $775            ; Jump to 775
$9B4    $3A0C   SE       VA, #0C         ; Skip if VA == 12
$9B6    $3D50   SE       VD, #50         ; Skip if VD == 80
$9B8    $2A71   CALL     $A71            ; Call subroutine at A71
$9BA    $BB7D   JP       V0, $B7D        ; Jump to V0 + B7D
$9BC    $5364   UNKNOWN  $5364           ; Unknown 5xxx instruction
$9BE    $665D   LD       V6, #5D         ; Load 93 into V6
$9C0    $7156   ADD      V1, #56         ; Add 86 to V1
$9C2    $6854   LD       V8, #54         ; Load 84 into V8
$9C4    $2B2E   CALL     $B2E            ; Call subroutine at B2E
$9C6    $5FC0   SE       VF, VC          ; Skip if VF == VC
$9C8    $8B54   ADD      VB, V5          ; VB += V5, VF = carry
$9CA    $E4B9   UNKNOWN  $E4B9           ; Unknown Exxx instruction
$9CC    $0207   SYS      $207            ; System call to 207
$9CE    $FE3F   UNKNOWN  FE3F            ; Unknown Fxxx instruction
$9D0    $B9A6   JP       V0, $9A6        ; Jump to V0 + 9A6
$9D2    $5E99   UNKNOWN  $5E99           ; Unknown 5xxx instruction
$9D4    $ADAA   LD       I, $DAA         ; Load DAA into I
$9D6    $EC72   UNKNOWN  $EC72           ; Unknown Exxx instruction
$9D8    $04A5   SYS      $4A5            ; System call to 4A5
$9DA    $D469   DRW      V4, V6, #9      ; Draw 9-byte sprite at V4, V6
$9DC    $CEA1   RND      VE, #A1         ; VE = random & A1
$9DE    $05B7   SYS      $5B7            ; System call to 5B7
$9E0    $BF9B   JP       V0, $F9B        ; Jump to V0 + F9B
$9E2    $B3AF   JP       V0, $3AF        ; Jump to V0 + 3AF
$9E4    $BFBA   JP       V0, $FBA        ; Jump to V0 + FBA
$9E6    $9D4D   UNKNOWN  $9D4D           ; Unknown 9xxx instruction
$9E8    $5974   UNKNOWN  $5974           ; Unknown 5xxx instruction
$9EA    $FA03   UNKNOWN  FA03            ; Unknown Fxxx instruction
$9EC    $D6D3   DRW      V6, VD, #3      ; Draw 3-byte sprite at V6, VD
$9EE    $AAC9   LD       I, $AC9         ; Load AC9 into I
$9F0    $024F   SYS      $24F            ; System call to 24F
$9F2    $BF18   JP       V0, $F18        ; Jump to V0 + F18
$9F4    $2D6D   CALL     $D6D            ; Call subroutine at D6D
$9F6    $8AAE   SHL      VA              ; VA <<= 1, VF = MSB
$9F8    $0B83   SYS      $B83            ; System call to B83
$9FA    $A863   LD       I, $863         ; Load 863 into I
$9FC    $AC43   LD       I, $C43         ; Load C43 into I
$9FE    $506D   UNKNOWN  $506D           ; Unknown 5xxx instruction
$A00    $7260   ADD      V2, #60         ; Add 96 to V2
$A02    $B97A   JP       V0, $97A        ; Jump to V0 + 97A
$A04    $B092   JP       V0, $092        ; Jump to V0 + 092
$A06    $EFCE   UNKNOWN  $EFCE           ; Unknown Exxx instruction
$A08    $F704   UNKNOWN  F704            ; Unknown Fxxx instruction
$A0A    $3EEA   SE       VE, #EA         ; Skip if VE == 234
$A0C    $E4DB   UNKNOWN  $E4DB           ; Unknown Exxx instruction
$A0E    $C649   RND      V6, #49         ; V6 = random & 49
$A10    $F7F1   UNKNOWN  F7F1            ; Unknown Fxxx instruction
$A12    $ADBE   LD       I, $DBE         ; Load DBE into I
$A14    $9D4C   UNKNOWN  $9D4C           ; Unknown 9xxx instruction
$A16    $9E25   UNKNOWN  $9E25           ; Unknown 9xxx instruction
$A18    $25F7   CALL     $5F7            ; Call subroutine at 5F7
$A1A    $B1C3   JP       V0, $1C3        ; Jump to V0 + 1C3
$A1C    $855C   UNKNOWN  855C            ; Unknown 8xxx instruction
$A1E    $3446   SE       V4, #46         ; Skip if V4 == 70
$A20    $C54E   RND      V5, #4E         ; V5 = random & 4E
$A22    $9AB9   UNKNOWN  $9AB9           ; Unknown 9xxx instruction
$A24    $9CCF   UNKNOWN  $9CCF           ; Unknown 9xxx instruction
$A26    $7360   ADD      V3, #60         ; Add 96 to V3
$A28    $4A01   SNE      VA, #01         ; Skip if VA != 1
$A2A    $6E26   LD       VE, #26         ; Load 38 into VE
$A2C    $5771   UNKNOWN  $5771           ; Unknown 5xxx instruction
$A2E    $87EC   UNKNOWN  87EC            ; Unknown 8xxx instruction
$A30    $ADF4   LD       I, $DF4         ; Load DF4 into I
$A32    $C4DE   RND      V4, #DE         ; V4 = random & DE
$A34    $B409   JP       V0, $409        ; Jump to V0 + 409
$A36    $50D9   UNKNOWN  $50D9           ; Unknown 5xxx instruction
$A38    $E114   UNKNOWN  $E114           ; Unknown Exxx instruction
$A3A    $A6AB   LD       I, $6AB         ; Load 6AB into I
$A3C    $4267   SNE      V2, #67         ; Skip if V2 != 103
$A3E    $1DD6   JP       $DD6            ; Jump to DD6
$A40    $7605   ADD      V6, #05         ; Add 5 to V6
$A42    $2636   CALL     $636            ; Call subroutine at 636
$A44    $C41C   RND      V4, #1C         ; V4 = random & 1C
$A46    $BA8C   JP       V0, $A8C        ; Jump to V0 + A8C
$A48    $F096   UNKNOWN  F096            ; Unknown Fxxx instruction
$A4A    $6643   LD       V6, #43         ; Load 67 into V6
$A4C    $5907   UNKNOWN  $5907           ; Unknown 5xxx instruction
$A4E    $EEB7   UNKNOWN  $EEB7           ; Unknown Exxx instruction
$A50    $519B   UNKNOWN  $519B           ; Unknown 5xxx instruction
$A52    $0120   SYS      $120            ; System call to 120
$A54    $6025   LD       V0, #25         ; Load 37 into V0
$A56    $DD53   DRW      VD, V5, #3      ; Draw 3-byte sprite at VD, V5
$A58    $D22A   DRW      V2, V2, #A      ; Draw 10-byte sprite at V2, V2
$A5A    $9F94   UNKNOWN  $9F94           ; Unknown 9xxx instruction
$A5C    $72ED   ADD      V2, #ED         ; Add 237 to V2
$A5E    $A2F1   LD       I, $2F1         ; Load 2F1 into I
$A60    $88B1   OR       V8, VB          ; V8 |= VB
$A62    $A9DE   LD       I, $9DE         ; Load 9DE into I
$A64    $B079   JP       V0, $079        ; Jump to V0 + 079
$A66    $CFBF   RND      VF, #BF         ; VF = random & BF
$A68    $AAAB   LD       I, $AAB         ; Load AAB into I
$A6A    $0A1F   SYS      $A1F            ; System call to A1F
$A6C    $42D1   SNE      V2, #D1         ; Skip if V2 != 209
$A6E    $92CF   UNKNOWN  $92CF           ; Unknown 9xxx instruction
$A70    $5F7F   UNKNOWN  $5F7F           ; Unknown 5xxx instruction
$A72    $F1B0   UNKNOWN  F1B0            ; Unknown Fxxx instruction
$A74    $D650   DRW      V6, V5, #0      ; Draw 0-byte sprite at V6, V5
$A76    $7BC6   ADD      VB, #C6         ; Add 198 to VB
$A78    $03C3   SYS      $3C3            ; System call to 3C3
$A7A    $8A1F   UNKNOWN  8A1F            ; Unknown 8xxx instruction
$A7C    $D4FA   DRW      V4, VF, #A      ; Draw 10-byte sprite at V4, VF
$A7E    $0E45   SYS      $E45            ; System call to E45
$A80    $5079   UNKNOWN  $5079           ; Unknown 5xxx instruction
$A82    $F9D6   UNKNOWN  F9D6            ; Unknown Fxxx instruction
$A84    $6312   LD       V3, #12         ; Load 18 into V3
$A86    $3423   SE       V4, #23         ; Skip if V4 == 35
$A88    $0AFB   SYS      $AFB            ; System call to AFB
$A8A    $B99B   JP       V0, $99B        ; Jump to V0 + 99B
$A8C    $DDC9   DRW      VD, VC, #9      ; Draw 9-byte sprite at VD, VC
$A8E    $2893   CALL     $893            ; Call subroutine at 893
$A90    $332C   SE       V3, #2C         ; Skip if V3 == 44
$A92    $EE7D   UNKNOWN  $EE7D           ; Unknown Exxx instruction
$A94    $9918   UNKNOWN  $9918           ; Unknown 9xxx instruction
$A96    $B507   JP       V0, $507        ; Jump to V0 + 507
$A98    $942E   UNKNOWN  $942E           ; Unknown 9xxx instruction
$A9A    $0D67   SYS      $D67            ; System call to D67
$A9C    $23B3   CALL     $3B3            ; Call subroutine at 3B3
$A9E    $9C6A   UNKNOWN  $9C6A           ; Unknown 9xxx instruction
$AA0    $4DCB   SNE      VD, #CB         ; Skip if VD != 203
$AA2    $D618   DRW      V6, V1, #8      ; Draw 8-byte sprite at V6, V1
$AA4    $9EF7   UNKNOWN  $9EF7           ; Unknown 9xxx instruction
$AA6    $1F9A   JP       $F9A            ; Jump to F9A
$AA8    $A405   LD       I, $405         ; Load 405 into I
$AAA    $B895   JP       V0, $895        ; Jump to V0 + 895
$AAC    $7D46   ADD      VD, #46         ; Add 70 to VD
$AAE    $F7F9   UNKNOWN  F7F9            ; Unknown Fxxx instruction
$AB0    $4FED   SNE      VF, #ED         ; Skip if VF != 237
$AB2    $01F1   SYS      $1F1            ; System call to 1F1
$AB4    $BBB7   JP       V0, $BB7        ; Jump to V0 + BB7
$AB6    $423B   SNE      V2, #3B         ; Skip if V2 != 59
$AB8    $37B5   SE       V7, #B5         ; Skip if V7 == 181
$ABA    $906B   UNKNOWN  $906B           ; Unknown 9xxx instruction
$ABC    $0D7B   SYS      $D7B            ; System call to D7B
$ABE    $0787   SYS      $787            ; System call to 787
$AC0    $0CFA   SYS      $CFA            ; System call to CFA
$AC2    $6E44   LD       VE, #44         ; Load 68 into VE
$AC4    $0E68   SYS      $E68            ; System call to E68
$AC6    $37A1   SE       V7, #A1         ; Skip if V7 == 161
$AC8    $4CDC   SNE      VC, #DC         ; Skip if VC != 220
$ACA    $F72A   UNKNOWN  F72A            ; Unknown Fxxx instruction
$ACC    $8E16   SHR      VE              ; VE >>= 1, VF = LSB
$ACE    $7555   ADD      V5, #55         ; Add 85 to V5
$AD0    $AC21   LD       I, $C21         ; Load C21 into I
$AD2    $C459   RND      V4, #59         ; V4 = random & 59
$AD4    $4E85   SNE      VE, #85         ; Skip if VE != 133
$AD6    $88B1   OR       V8, VB          ; V8 |= VB
$AD8    $328E   SE       V2, #8E         ; Skip if V2 == 142
$ADA    $29FF   CALL     $9FF            ; Call subroutine at 9FF
$ADC    $38D0   SE       V8, #D0         ; Skip if V8 == 208
$ADE    $8E1F   UNKNOWN  8E1F            ; Unknown 8xxx instruction
$AE0    $7C0A   ADD      VC, #0A         ; Add 10 to VC
$AE2    $BDC6   JP       V0, $DC6        ; Jump to V0 + DC6
$AE4    $CB71   RND      VB, #71         ; VB = random & 71
$AE6    $0C25   SYS      $C25            ; System call to C25
$AE8    $1072   JP       $072            ; Jump to 072
$AEA    $AD38   LD       I, $D38         ; Load D38 into I
$AEC    $C576   RND      V5, #76         ; V5 = random & 76
$AEE    $72B5   ADD      V2, #B5         ; Add 181 to V2
$AF0    $59BE   UNKNOWN  $59BE           ; Unknown 5xxx instruction
$AF2    $D2FF   DRW      V2, VF, #F      ; Draw 15-byte sprite at V2, VF
$AF4    $38F6   SE       V8, #F6         ; Skip if V8 == 246
$AF6    $04F0   SYS      $4F0            ; System call to 4F0
$AF8    $5511   UNKNOWN  $5511           ; Unknown 5xxx instruction
$AFA    $EDFC   UNKNOWN  $EDFC           ; Unknown Exxx instruction
$AFC    $9CF2   UNKNOWN  $9CF2           ; Unknown 9xxx instruction
$AFE    $1AA1   JP       $AA1            ; Jump to AA1
$B00    $9B83   UNKNOWN  $9B83           ; Unknown 9xxx instruction
$B02    $B62A   JP       V0, $62A        ; Jump to V0 + 62A
$B04    $5A4D   UNKNOWN  $5A4D           ; Unknown 5xxx instruction
$B06    $6D9A   LD       VD, #9A         ; Load 154 into VD
$B08    $F11D   UNKNOWN  F11D            ; Unknown Fxxx instruction
$B0A    $F47A   UNKNOWN  F47A            ; Unknown Fxxx instruction
$B0C    $AD7D   LD       I, $D7D         ; Load D7D into I
$B0E    $5027   UNKNOWN  $5027           ; Unknown 5xxx instruction
$B10    $4A3C   SNE      VA, #3C         ; Skip if VA != 60
$B12    $D4C0   DRW      V4, VC, #0      ; Draw 0-byte sprite at V4, VC
$B14    $3318   SE       V3, #18         ; Skip if V3 == 24
$B16    $361F   SE       V6, #1F         ; Skip if V6 == 31
$B18    $2256   CALL     $256            ; Call subroutine at 256
$B1A    $D258   DRW      V2, V5, #8      ; Draw 8-byte sprite at V2, V5
$B1C    $33D4   SE       V3, #D4         ; Skip if V3 == 212
$B1E    $9187   UNKNOWN  $9187           ; Unknown 9xxx instruction
$B20    $FEBD   UNKNOWN  FEBD            ; Unknown Fxxx instruction
$B22    $CEBE   RND      VE, #BE         ; VE = random & BE
$B24    $A494   LD       I, $494         ; Load 494 into I
$B26    $FD0D   UNKNOWN  FD0D            ; Unknown Fxxx instruction
$B28    $3255   SE       V2, #55         ; Skip if V2 == 85
$B2A    $2F04   CALL     $F04            ; Call subroutine at F04
$B2C    $D5B3   DRW      V5, VB, #3      ; Draw 3-byte sprite at V5, VB
$B2E    $78E6   ADD      V8, #E6         ; Add 230 to V8
$B30    $6215   LD       V2, #15         ; Load 21 into V2
$B32    $07DE   SYS      $7DE            ; System call to 7DE
$B34    $5711   UNKNOWN  $5711           ; Unknown 5xxx instruction
$B36    $46DB   SNE      V6, #DB         ; Skip if V6 != 219
$B38    $FFD9   UNKNOWN  FFD9            ; Unknown Fxxx instruction
$B3A    $73FD   ADD      V3, #FD         ; Add 253 to V3
$B3C    $A19F   LD       I, $19F         ; Load 19F into I
$B3E    $3E81   SE       VE, #81         ; Skip if VE == 129
$B40    $3BDC   SE       VB, #DC         ; Skip if VB == 220
$B42    $06E2   SYS      $6E2            ; System call to 6E2
$B44    $0963   SYS      $963            ; System call to 963
$B46    $02B5   SYS      $2B5            ; System call to 2B5
$B48    $32F5   SE       V2, #F5         ; Skip if V2 == 245
$B4A    $1EE8   JP       $EE8            ; Jump to EE8
$B4C    $639E   LD       V3, #9E         ; Load 158 into V3
$B4E    $00F4   SYS      $0F4            ; System call to 0F4
$B50    $06F0   SYS      $6F0            ; System call to 6F0
$B52    $7603   ADD      V6, #03         ; Add 3 to V6
$B54    $13BC   JP       $3BC            ; Jump to 3BC
$B56    $CCCE   RND      VC, #CE         ; VC = random & CE
$B58    $7493   ADD      V4, #93         ; Add 147 to V4
$B5A    $47B2   SNE      V7, #B2         ; Skip if V7 != 178
$B5C    $B1B8   JP       V0, $1B8        ; Jump to V0 + 1B8
$B5E    $80D4   ADD      V0, VD          ; V0 += VD, VF = carry
$B60    $E7C3   UNKNOWN  $E7C3           ; Unknown Exxx instruction
$B62    $48BA   SNE      V8, #BA         ; Skip if V8 != 186
$B64    $9A6B   UNKNOWN  $9A6B           ; Unknown 9xxx instruction
$B66    $331E   SE       V3, #1E         ; Skip if V3 == 30
$B68    $463D   SNE      V6, #3D         ; Skip if V6 != 61
$B6A    $C16E   RND      V1, #6E         ; V1 = random & 6E
$B6C    $5277   UNKNOWN  $5277           ; Unknown 5xxx instruction
$B6E    $0323   SYS      $323            ; System call to 323
$B70    $7B7C   ADD      VB, #7C         ; Add 124 to VB
$B72    $1523   JP       $523            ; Jump to 523
$B74    $4B6F   SNE      VB, #6F         ; Skip if VB != 111
$B76    $C618   RND      V6, #18         ; V6 = random & 18
$B78    $B030   JP       V0, $030        ; Jump to V0 + 030
$B7A    $10BA   JP       $0BA            ; Jump to 0BA
$B7C    $4A0C   SNE      VA, #0C         ; Skip if VA != 12
$B7E    $4B7B   SNE      VB, #7B         ; Skip if VB != 123
$B80    $238A   CALL     $38A            ; Call subroutine at 38A
$B82    $908C   UNKNOWN  $908C           ; Unknown 9xxx instruction
$B84    $E7CA   UNKNOWN  $E7CA           ; Unknown Exxx instruction
$B86    $9973   UNKNOWN  $9973           ; Unknown 9xxx instruction
$B88    $DE82   DRW      VE, V8, #2      ; Draw 2-byte sprite at VE, V8
$B8A    $7D57   ADD      VD, #57         ; Add 87 to VD
$B8C    $FA8F   UNKNOWN  FA8F            ; Unknown Fxxx instruction
$B8E    $5BE8   UNKNOWN  $5BE8           ; Unknown 5xxx instruction
$B90    $8A2D   UNKNOWN  8A2D            ; Unknown 8xxx instruction
$B92    $ADD6   LD       I, $DD6         ; Load DD6 into I
$B94    $9170   SNE      V1, V7          ; Skip if V1 != V7
$B96    $9424   UNKNOWN  $9424           ; Unknown 9xxx instruction
$B98    $3EDB   SE       VE, #DB         ; Skip if VE == 219
$B9A    $7BAD   ADD      VB, #AD         ; Add 173 to VB
$B9C    $8D8A   UNKNOWN  8D8A            ; Unknown 8xxx instruction
$B9E    $E6D0   UNKNOWN  $E6D0           ; Unknown Exxx instruction
$BA0    $D813   DRW      V8, V1, #3      ; Draw 3-byte sprite at V8, V1
$BA2    $C038   RND      V0, #38         ; V0 = random & 38
$BA4    $9F72   UNKNOWN  $9F72           ; Unknown 9xxx instruction
$BA6    $FF9F   UNKNOWN  FF9F            ; Unknown Fxxx instruction
$BA8    $9146   UNKNOWN  $9146           ; Unknown 9xxx instruction
$BAA    $D179   DRW      V1, V7, #9      ; Draw 9-byte sprite at V1, V7
$BAC    $74D2   ADD      V4, #D2         ; Add 210 to V4
$BAE    $FADB   UNKNOWN  FADB            ; Unknown Fxxx instruction
$BB0    $1377   JP       $377            ; Jump to 377
$BB2    $927B   UNKNOWN  $927B           ; Unknown 9xxx instruction
$BB4    $4FFD   SNE      VF, #FD         ; Skip if VF != 253
$BB6    $CFF6   RND      VF, #F6         ; VF = random & F6
$BB8    $4D69   SNE      VD, #69         ; Skip if VD != 105
$BBA    $2BE9   CALL     $BE9            ; Call subroutine at BE9
$BBC    $4656   SNE      V6, #56         ; Skip if V6 != 86
$BBE    $E37C   UNKNOWN  $E37C           ; Unknown Exxx instruction
$BC0    $4E7A   SNE      VE, #7A         ; Skip if VE != 122
$BC2    $5D33   UNKNOWN  $5D33           ; Unknown 5xxx instruction
$BC4    $EFC0   UNKNOWN  $EFC0           ; Unknown Exxx instruction
$BC6    $DF04   DRW      VF, V0, #4      ; Draw 4-byte sprite at VF, V0
$BC8    $5E65   UNKNOWN  $5E65           ; Unknown 5xxx instruction
$BCA    $F43C   UNKNOWN  F43C            ; Unknown Fxxx instruction
$BCC    $C1C4   RND      V1, #C4         ; V1 = random & C4
$BCE    $2911   CALL     $911            ; Call subroutine at 911
$BD0    $57C3   UNKNOWN  $57C3           ; Unknown 5xxx instruction
$BD2    $3F45   SE       VF, #45         ; Skip if VF == 69
$BD4    $2875   CALL     $875            ; Call subroutine at 875
$BD6    $5126   UNKNOWN  $5126           ; Unknown 5xxx instruction
$BD8    $5149   UNKNOWN  $5149           ; Unknown 5xxx instruction
$BDA    $D0B0   DRW      V0, VB, #0      ; Draw 0-byte sprite at V0, VB
$BDC    $312F   SE       V1, #2F         ; Skip if V1 == 47
$BDE    $671B   LD       V7, #1B         ; Load 27 into V7
$BE0    $0CEF   SYS      $CEF            ; System call to CEF
$BE2    $53CF   UNKNOWN  $53CF           ; Unknown 5xxx instruction
$BE4    $949F   UNKNOWN  $949F           ; Unknown 9xxx instruction
$BE6    $0D1B   SYS      $D1B            ; System call to D1B
$BE8    $AD7C   LD       I, $D7C         ; Load D7C into I
$BEA    $2810   CALL     $810            ; Call subroutine at 810
$BEC    $9AE9   UNKNOWN  $9AE9           ; Unknown 9xxx instruction
$BEE    $6406   LD       V4, #06         ; Load 6 into V4
$BF0    $005D   SYS      $05D            ; System call to 05D
$BF2    $5FC3   UNKNOWN  $5FC3           ; Unknown 5xxx instruction
$BF4    $9C01   UNKNOWN  $9C01           ; Unknown 9xxx instruction
$BF6    $FB4D   UNKNOWN  FB4D            ; Unknown Fxxx instruction
$BF8    $4B57   SNE      VB, #57         ; Skip if VB != 87
$BFA    $4349   SNE      V3, #49         ; Skip if V3 != 73
$BFC    $E773   UNKNOWN  $E773           ; Unknown Exxx instruction
$BFE    $017E   SYS      $17E            ; System call to 17E
$C00    $C6B9   RND      V6, #B9         ; V6 = random & B9
$C02    $4336   SNE      V3, #36         ; Skip if V3 != 54
$C04    $BBED   JP       V0, $BED        ; Jump to V0 + BED
$C06    $72CA   ADD      V2, #CA         ; Add 202 to V2
$C08    $9A11   UNKNOWN  $9A11           ; Unknown 9xxx instruction
$C0A    $8B9E   SHL      VB              ; VB <<= 1, VF = MSB
$C0C    $6EFE   LD       VE, #FE         ; Load 254 into VE
$C0E    $F850   UNKNOWN  F850            ; Unknown Fxxx instruction
$C10    $6523   LD       V5, #23         ; Load 35 into V5
$C12    $B03E   JP       V0, $03E        ; Jump to V0 + 03E
$C14    $4781   SNE      V7, #81         ; Skip if V7 != 129
$C16    $CCB1   RND      VC, #B1         ; VC = random & B1
$C18    $779B   ADD      V7, #9B         ; Add 155 to V7
$C1A    $E418   UNKNOWN  $E418           ; Unknown Exxx instruction
$C1C    $8918   UNKNOWN  8918            ; Unknown 8xxx instruction
$C1E    $FAF6   UNKNOWN  FAF6            ; Unknown Fxxx instruction
$C20    $5005   UNKNOWN  $5005           ; Unknown 5xxx instruction
$C22    $E753   UNKNOWN  $E753           ; Unknown Exxx instruction
$C24    $7E6E   ADD      VE, #6E         ; Add 110 to VE
$C26    $3748   SE       V7, #48         ; Skip if V7 == 72
$C28    $9F83   UNKNOWN  $9F83           ; Unknown 9xxx instruction
$C2A    $E533   UNKNOWN  $E533           ; Unknown Exxx instruction
$C2C    $EFF1   UNKNOWN  $EFF1           ; Unknown Exxx instruction
$C2E    $8B80   LD       VB, V8          ; VB = V8
$C30    $03DB   SYS      $3DB            ; System call to 3DB
$C32    $F995   UNKNOWN  F995            ; Unknown Fxxx instruction
$C34    $5C62   UNKNOWN  $5C62           ; Unknown 5xxx instruction
$C36    $2798   CALL     $798            ; Call subroutine at 798
$C38    $3E2E   SE       VE, #2E         ; Skip if VE == 46
$C3A    $DE58   DRW      VE, V5, #8      ; Draw 8-byte sprite at VE, V5
$C3C    $117D   JP       $17D            ; Jump to 17D
$C3E    $E6E6   UNKNOWN  $E6E6           ; Unknown Exxx instruction
$C40    $1F83   JP       $F83            ; Jump to F83
$C42    $83FC   UNKNOWN  83FC            ; Unknown 8xxx instruction
$C44    $8052   AND      V0, V5          ; V0 &= V5
$C46    $73B0   ADD      V3, #B0         ; Add 176 to V3
$C48    $4A78   SNE      VA, #78         ; Skip if VA != 120
$C4A    $609E   LD       V0, #9E         ; Load 158 into V0
$C4C    $5F53   UNKNOWN  $5F53           ; Unknown 5xxx instruction
$C4E    $BEA5   JP       V0, $EA5        ; Jump to V0 + EA5
$C50    $3FF7   SE       VF, #F7         ; Skip if VF == 247
$C52    $DC05   DRW      VC, V0, #5      ; Draw 5-byte sprite at VC, V0
$C54    $F785   UNKNOWN  F785            ; Unknown Fxxx instruction
$C56    $1BC3   JP       $BC3            ; Jump to BC3
$C58    $92D7   UNKNOWN  $92D7           ; Unknown 9xxx instruction
$C5A    $3529   SE       V5, #29         ; Skip if V5 == 41
$C5C    $A8F7   LD       I, $8F7         ; Load 8F7 into I
$C5E    $4EC5   SNE      VE, #C5         ; Skip if VE != 197
$C60    $5621   UNKNOWN  $5621           ; Unknown 5xxx instruction
$C62    $6DD2   LD       VD, #D2         ; Load 210 into VD
$C64    $9D8E   UNKNOWN  $9D8E           ; Unknown 9xxx instruction
$C66    $8AA4   ADD      VA, VA          ; VA += VA, VF = carry
$C68    $ED52   UNKNOWN  $ED52           ; Unknown Exxx instruction
$C6A    $6000   LD       V0, #00         ; Load 0 into V0
$C6C    $6094   LD       V0, #94         ; Load 148 into V0
$C6E    $CA2C   RND      VA, #2C         ; VA = random & 2C
$C70    $2569   CALL     $569            ; Call subroutine at 569
$C72    $3F7C   SE       VF, #7C         ; Skip if VF == 124
$C74    $0D73   SYS      $D73            ; System call to D73
$C76    $4B48   SNE      VB, #48         ; Skip if VB != 72
$C78    $F3F0   UNKNOWN  F3F0            ; Unknown Fxxx instruction
$C7A    $A1AF   LD       I, $1AF         ; Load 1AF into I
$C7C    $402D   SNE      V0, #2D         ; Skip if V0 != 45
$C7E    $7EB7   ADD      VE, #B7         ; Add 183 to VE
$C80    $44FB   SNE      V4, #FB         ; Skip if V4 != 251
$C82    $9E73   UNKNOWN  $9E73           ; Unknown 9xxx instruction
$C84    $5E7A   UNKNOWN  $5E7A           ; Unknown 5xxx instruction
$C86    $D645   DRW      V6, V4, #5      ; Draw 5-byte sprite at V6, V4
$C88    $E717   UNKNOWN  $E717           ; Unknown Exxx instruction
$C8A    $0516   SYS      $516            ; System call to 516
$C8C    $54AA   UNKNOWN  $54AA           ; Unknown 5xxx instruction
$C8E    $8CBC   UNKNOWN  8CBC            ; Unknown 8xxx instruction
$C90    $AA15   LD       I, $A15         ; Load A15 into I
$C92    $F369   UNKNOWN  F369            ; Unknown Fxxx instruction
$C94    $D39B   DRW      V3, V9, #B      ; Draw 11-byte sprite at V3, V9
$C96    $CE96   RND      VE, #96         ; VE = random & 96
$C98    $BA39   JP       V0, $A39        ; Jump to V0 + A39
$C9A    $0070   SYS      $070            ; System call to 070
$C9C    $90AB   UNKNOWN  $90AB           ; Unknown 9xxx instruction
$C9E    $19E8   JP       $9E8            ; Jump to 9E8
$CA0    $6ABC   LD       VA, #BC         ; Load 188 into VA
$CA2    $965E   UNKNOWN  $965E           ; Unknown 9xxx instruction
$CA4    $DA5D   DRW      VA, V5, #D      ; Draw 13-byte sprite at VA, V5
$CA6    $A50D   LD       I, $50D         ; Load 50D into I
$CA8    $8943   XOR      V9, V4          ; V9 ^= V4
$CAA    $0168   SYS      $168            ; System call to 168
$CAC    $467A   SNE      V6, #7A         ; Skip if V6 != 122
$CAE    $0C74   SYS      $C74            ; System call to C74
$CB0    $5B00   SE       VB, V0          ; Skip if VB == V0
$CB2    $223A   CALL     $23A            ; Call subroutine at 23A
$CB4    $C486   RND      V4, #86         ; V4 = random & 86
$CB6    $DCFB   DRW      VC, VF, #B      ; Draw 11-byte sprite at VC, VF
$CB8    $87AD   UNKNOWN  87AD            ; Unknown 8xxx instruction
$CBA    $5D8D   UNKNOWN  $5D8D           ; Unknown 5xxx instruction
$CBC    $D8B3   DRW      V8, VB, #3      ; Draw 3-byte sprite at V8, VB
$CBE    $28D1   CALL     $8D1            ; Call subroutine at 8D1
$CC0    $6CD8   LD       VC, #D8         ; Load 216 into VC
$CC2    $B898   JP       V0, $898        ; Jump to V0 + 898
$CC4    $2C6F   CALL     $C6F            ; Call subroutine at C6F
$CC6    $1A6E   JP       $A6E            ; Jump to A6E
$CC8    $B712   JP       V0, $712        ; Jump to V0 + 712
$CCA    $9EC3   UNKNOWN  $9EC3           ; Unknown 9xxx instruction
$CCC    $6029   LD       V0, #29         ; Load 41 into V0
$CCE    $6063   LD       V0, #63         ; Load 99 into V0
$CD0    $6AC7   LD       VA, #C7         ; Load 199 into VA
$CD2    $271C   CALL     $71C            ; Call subroutine at 71C
$CD4    $2DC8   CALL     $DC8            ; Call subroutine at DC8
$CD6    $9EF6   UNKNOWN  $9EF6           ; Unknown 9xxx instruction
$CD8    $2574   CALL     $574            ; Call subroutine at 574
$CDA    $8C0C   UNKNOWN  8C0C            ; Unknown 8xxx instruction
$CDC    $F632   UNKNOWN  F632            ; Unknown Fxxx instruction
$CDE    $31E7   SE       V1, #E7         ; Skip if V1 == 231
$CE0    $400F   SNE      V0, #0F         ; Skip if V0 != 15
$CE2    $2C55   CALL     $C55            ; Call subroutine at C55
$CE4    $235F   CALL     $35F            ; Call subroutine at 35F
$CE6    $ACA6   LD       I, $CA6         ; Load CA6 into I
$CE8    $53B9   UNKNOWN  $53B9           ; Unknown 5xxx instruction
$CEA    $EA79   UNKNOWN  $EA79           ; Unknown Exxx instruction
$CEC    $8C74   ADD      VC, V7          ; VC += V7, VF = carry
$CEE    $81DB   UNKNOWN  81DB            ; Unknown 8xxx instruction
$CF0    $0302   SYS      $302            ; System call to 302
$CF2    $37AB   SE       V7, #AB         ; Skip if V7 == 171
$CF4    $16DD   JP       $6DD            ; Jump to 6DD
$CF6    $DCAE   DRW      VC, VA, #E      ; Draw 14-byte sprite at VC, VA
$CF8    $73A4   ADD      V3, #A4         ; Add 164 to V3
$CFA    $6B1F   LD       VB, #1F         ; Load 31 into VB
$CFC    $B8DE   JP       V0, $8DE        ; Jump to V0 + 8DE
$CFE    $080F   SYS      $80F            ; System call to 80F
$D00    $91EA   UNKNOWN  $91EA           ; Unknown 9xxx instruction
$D02    $FF86   UNKNOWN  FF86            ; Unknown Fxxx instruction
$D04    $3E8C   SE       VE, #8C         ; Skip if VE == 140
$D06    $8F50   LD       VF, V5          ; VF = V5
$D08    $889B   UNKNOWN  889B            ; Unknown 8xxx instruction
$D0A    $3EFD   SE       VE, #FD         ; Skip if VE == 253
$D0C    $0519   SYS      $519            ; System call to 519
$D0E    $98C1   UNKNOWN  $98C1           ; Unknown 9xxx instruction
$D10    $05E9   SYS      $5E9            ; System call to 5E9
$D12    $E1BB   UNKNOWN  $E1BB           ; Unknown Exxx instruction
$D14    $9F95   UNKNOWN  $9F95           ; Unknown 9xxx instruction
$D16    $15A7   JP       $5A7            ; Jump to 5A7
$D18    $E6B5   UNKNOWN  $E6B5           ; Unknown Exxx instruction
$D1A    $AFDD   LD       I, $FDD         ; Load FDD into I
$D1C    $A5F2   LD       I, $5F2         ; Load 5F2 into I
$D1E    $60F7   LD       V0, #F7         ; Load 247 into V0
$D20    $CCFD   RND      VC, #FD         ; VC = random & FD
$D22    $F5F5   UNKNOWN  F5F5            ; Unknown Fxxx instruction
$D24    $8B3C   UNKNOWN  8B3C            ; Unknown 8xxx instruction
$D26    $AE1A   LD       I, $E1A         ; Load E1A into I
$D28    $4E42   SNE      VE, #42         ; Skip if VE != 66
$D2A    $5074   UNKNOWN  $5074           ; Unknown 5xxx instruction
$D2C    $90BD   UNKNOWN  $90BD           ; Unknown 9xxx instruction
$D2E    $DE0C   DRW      VE, V0, #C      ; Draw 12-byte sprite at VE, V0
$D30    $4B88   SNE      VB, #88         ; Skip if VB != 136
$D32    $467D   SNE      V6, #7D         ; Skip if V6 != 125
$D34    $E9D5   UNKNOWN  $E9D5           ; Unknown Exxx instruction
$D36    $649F   LD       V4, #9F         ; Load 159 into V4
$D38    $F820   UNKNOWN  F820            ; Unknown Fxxx instruction
$D3A    $13DD   JP       $3DD            ; Jump to 3DD
$D3C    $A9EA   LD       I, $9EA         ; Load 9EA into I
$D3E    $5469   UNKNOWN  $5469           ; Unknown 5xxx instruction
$D40    $E5D8   UNKNOWN  $E5D8           ; Unknown Exxx instruction
$D42    $2716   CALL     $716            ; Call subroutine at 716
$D44    $917C   UNKNOWN  $917C           ; Unknown 9xxx instruction
$D46    $EAFE   UNKNOWN  $EAFE           ; Unknown Exxx instruction
$D48    $F22F   UNKNOWN  F22F            ; Unknown Fxxx instruction
$D4A    $F419   UNKNOWN  F419            ; Unknown Fxxx instruction
$D4C    $6EFC   LD       VE, #FC         ; Load 252 into VE
$D4E    $6A26   LD       VA, #26         ; Load 38 into VA
$D50    $4516   SNE      V5, #16         ; Skip if V5 != 22
$D52    $03F7   SYS      $3F7            ; System call to 3F7
$D54    $BD79   JP       V0, $D79        ; Jump to V0 + D79
$D56    $17AF   JP       $7AF            ; Jump to 7AF
$D58    $BD77   JP       V0, $D77        ; Jump to V0 + D77
$D5A    $98CB   UNKNOWN  $98CB           ; Unknown 9xxx instruction
$D5C    $E431   UNKNOWN  $E431           ; Unknown Exxx instruction
$D5E    $D101   DRW      V1, V0, #1      ; Draw 1-byte sprite at V1, V0
$D60    $84AF   UNKNOWN  84AF            ; Unknown 8xxx instruction
$D62    $CCB8   RND      VC, #B8         ; VC = random & B8
$D64    $B67E   JP       V0, $67E        ; Jump to V0 + 67E
$D66    $DED9   DRW      VE, VD, #9      ; Draw 9-byte sprite at VE, VD
$D68    $4733   SNE      V7, #33         ; Skip if V7 != 51
$D6A    $62C8   LD       V2, #C8         ; Load 200 into V2
$D6C    $38F8   SE       V8, #F8         ; Skip if V8 == 248
$D6E    $13E2   JP       $3E2            ; Jump to 3E2
$D70    $A861   LD       I, $861         ; Load 861 into I
$D72    $5954   UNKNOWN  $5954           ; Unknown 5xxx instruction
$D74    $62E2   LD       V2, #E2         ; Load 226 into V2
$D76    $2472   CALL     $472            ; Call subroutine at 472
$D78    $B8FA   JP       V0, $8FA        ; Jump to V0 + 8FA
$D7A    $166E   JP       $66E            ; Jump to 66E
$D7C    $AE0E   LD       I, $E0E         ; Load E0E into I
$D7E    $AAC0   LD       I, $AC0         ; Load AC0 into I
$D80    $5E96   UNKNOWN  $5E96           ; Unknown 5xxx instruction
$D82    $0EC5   SYS      $EC5            ; System call to EC5
$D84    $4D28   SNE      VD, #28         ; Skip if VD != 40
$D86    $050C   SYS      $50C            ; System call to 50C
$D88    $484E   SNE      V8, #4E         ; Skip if V8 != 78
$D8A    $AC55   LD       I, $C55         ; Load C55 into I
$D8C    $F156   UNKNOWN  F156            ; Unknown Fxxx instruction
$D8E    $FC3B   UNKNOWN  FC3B            ; Unknown Fxxx instruction
$D90    $E883   UNKNOWN  $E883           ; Unknown Exxx instruction
$D92    $1DFD   JP       $DFD            ; Jump to DFD
$D94    $EEFC   UNKNOWN  $EEFC           ; Unknown Exxx instruction
$D96    $0D5E   SYS      $D5E            ; System call to D5E
$D98    $397B   SE       V9, #7B         ; Skip if V9 == 123
$D9A    $D927   DRW      V9, V2, #7      ; Draw 7-byte sprite at V9, V2
$D9C    $C73F   RND      V7, #3F         ; V7 = random & 3F
$D9E    $39B6   SE       V9, #B6         ; Skip if V9 == 182
$DA0    $C197   RND      V1, #97         ; V1 = random & 97
$DA2    $8740   LD       V7, V4          ; V7 = V4
$DA4    $69E8   LD       V9, #E8         ; Load 232 into V9
$DA6    $2429   CALL     $429            ; Call subroutine at 429
$DA8    $CF3F   RND      VF, #3F         ; VF = random & 3F
$DAA    $EEC7   UNKNOWN  $EEC7           ; Unknown Exxx instruction
$DAC    $CDA8   RND      VD, #A8         ; VD = random & A8
$DAE    $B4A4   JP       V0, $4A4        ; Jump to V0 + 4A4
$DB0    $3CCA   SE       VC, #CA         ; Skip if VC == 202
$DB2    $F5EA   UNKNOWN  F5EA            ; Unknown Fxxx instruction
$DB4    $D4A2   DRW      V4, VA, #2      ; Draw 2-byte sprite at V4, VA
$DB6    $CE44   RND      VE, #44         ; VE = random & 44
$DB8    $CF8C   RND      VF, #8C         ; VF = random & 8C
$DBA    $AEB7   LD       I, $EB7         ; Load EB7 into I
$DBC    $3454   SE       V4, #54         ; Skip if V4 == 84
$DBE    $2FF5   CALL     $FF5            ; Call subroutine at FF5
$DC0    $9742   UNKNOWN  $9742           ; Unknown 9xxx instruction
$DC2    $65B7   LD       V5, #B7         ; Load 183 into V5
$DC4    $A9F6   LD       I, $9F6         ; Load 9F6 into I
$DC6    $7539   ADD      V5, #39         ; Add 57 to V5
$DC8    $639E   LD       V3, #9E         ; Load 158 into V3
$DCA    $8B5A   UNKNOWN  8B5A            ; Unknown 8xxx instruction
$DCC    $DECE   DRW      VE, VC, #E      ; Draw 14-byte sprite at VE, VC
$DCE    $9540   SNE      V5, V4          ; Skip if V5 != V4
$DD0    $0CBD   SYS      $CBD            ; System call to CBD
$DD2    $4455   SNE      V4, #55         ; Skip if V4 != 85
$DD4    $2D5B   CALL     $D5B            ; Call subroutine at D5B
$DD6    $B7F0   JP       V0, $7F0        ; Jump to V0 + 7F0
$DD8    $DC0D   DRW      VC, V0, #D      ; Draw 13-byte sprite at VC, V0
$DDA    $6AC5   LD       VA, #C5         ; Load 197 into VA
$DDC    $FF11   UNKNOWN  FF11            ; Unknown Fxxx instruction
$DDE    $9DE3   UNKNOWN  $9DE3           ; Unknown 9xxx instruction
$DE0    $AD2D   LD       I, $D2D         ; Load D2D into I
$DE2    $A911   LD       I, $911         ; Load 911 into I
$DE4    $CB4E   RND      VB, #4E         ; VB = random & 4E
$DE6    $B20E   JP       V0, $20E        ; Jump to V0 + 20E
$DE8    $DE04   DRW      VE, V0, #4      ; Draw 4-byte sprite at VE, V0
$DEA    $3CB5   SE       VC, #B5         ; Skip if VC == 181
$DEC    $5A75   UNKNOWN  $5A75           ; Unknown 5xxx instruction
$DEE    $275B   CALL     $75B            ; Call subroutine at 75B
$DF0    $195F   JP       $95F            ; Jump to 95F
$DF2    $5AEC   UNKNOWN  $5AEC           ; Unknown 5xxx instruction
$DF4    $D09D   DRW      V0, V9, #D      ; Draw 13-byte sprite at V0, V9
$DF6    $52AA   UNKNOWN  $52AA           ; Unknown 5xxx instruction
$DF8    $F029   LD       F, V0           ; I = sprite address for digit V0
$DFA    $6146   LD       V1, #46         ; Load 70 into V1
$DFC    $3E76   SE       VE, #76         ; Skip if VE == 118
$DFE    $D8AC   DRW      V8, VA, #C      ; Draw 12-byte sprite at V8, VA
$E00    $83A3   XOR      V3, VA          ; V3 ^= VA
$E02    $F544   UNKNOWN  F544            ; Unknown Fxxx instruction
$E04    $EC66   UNKNOWN  $EC66           ; Unknown Exxx instruction
$E06    $7B03   ADD      VB, #03         ; Add 3 to VB
$E08    $DF38   DRW      VF, V3, #8      ; Draw 8-byte sprite at VF, V3
$E0A    $BC74   JP       V0, $C74        ; Jump to V0 + C74
$E0C    $47D2   SNE      V7, #D2         ; Skip if V7 != 210
$E0E    $9623   UNKNOWN  $9623           ; Unknown 9xxx instruction
$E10    $9A91   UNKNOWN  $9A91           ; Unknown 9xxx instruction
$E12    $0B9D   SYS      $B9D            ; System call to B9D
$E14    $9C1F   UNKNOWN  $9C1F           ; Unknown 9xxx instruction
$E16    $D031   DRW      V0, V3, #1      ; Draw 1-byte sprite at V0, V3
$E18    $8687   SUBN     V6, V8          ; V6 = V8 - V6, VF = !borrow
$E1A    $13CE   JP       $3CE            ; Jump to 3CE
$E1C    $3C09   SE       VC, #09         ; Skip if VC == 9
$E1E    $4A7D   SNE      VA, #7D         ; Skip if VA != 125
$E20    $8D5D   UNKNOWN  8D5D            ; Unknown 8xxx instruction
$E22    $29EA   CALL     $9EA            ; Call subroutine at 9EA
$E24    $8894   ADD      V8, V9          ; V8 += V9, VF = carry
$E26    $75E5   ADD      V5, #E5         ; Add 229 to V5
$E28    $F8C5   UNKNOWN  F8C5            ; Unknown Fxxx instruction
$E2A    $B9E7   JP       V0, $9E7        ; Jump to V0 + 9E7
$E2C    $2F2D   CALL     $F2D            ; Call subroutine at F2D
$E2E    $124E   JP       $24E            ; Jump to 24E
$E30    $BCE3   JP       V0, $CE3        ; Jump to V0 + CE3
$E32    $23EF   CALL     $3EF            ; Call subroutine at 3EF
$E34    $989F   UNKNOWN  $989F           ; Unknown 9xxx instruction
$E36    $7EC1   ADD      VE, #C1         ; Add 193 to VE
$E38    $674A   LD       V7, #4A         ; Load 74 into V7
$E3A    $74D5   ADD      V4, #D5         ; Add 213 to V4
$E3C    $53AD   UNKNOWN  $53AD           ; Unknown 5xxx instruction
$E3E    $D788   DRW      V7, V8, #8      ; Draw 8-byte sprite at V7, V8
$E40    $09F3   SYS      $9F3            ; System call to 9F3
$E42    $276E   CALL     $76E            ; Call subroutine at 76E
$E44    $4F6A   SNE      VF, #6A         ; Skip if VF != 106
$E46    $FF8E   UNKNOWN  FF8E            ; Unknown Fxxx instruction
$E48    $ED67   UNKNOWN  $ED67           ; Unknown Exxx instruction
$E4A    $23A1   CALL     $3A1            ; Call subroutine at 3A1
$E4C    $9CC8   UNKNOWN  $9CC8           ; Unknown 9xxx instruction
$E4E    $4B7D   SNE      VB, #7D         ; Skip if VB != 125
$E50    $8918   UNKNOWN  8918            ; Unknown 8xxx instruction
$E52    $1BCF   JP       $BCF            ; Jump to BCF
$E54    $CC6B   RND      VC, #6B         ; VC = random & 6B
$E56    $6D20   LD       VD, #20         ; Load 32 into VD
$E58    $EF5D   UNKNOWN  $EF5D           ; Unknown Exxx instruction
$E5A    $52CA   UNKNOWN  $52CA           ; Unknown 5xxx instruction
$E5C    $C35A   RND      V3, #5A         ; V3 = random & 5A
$E5E    $9ED6   UNKNOWN  $9ED6           ; Unknown 9xxx instruction
$E60    $B344   JP       V0, $344        ; Jump to V0 + 344
$E62    $C56C   RND      V5, #6C         ; V5 = random & 6C
$E64    $6AB0   LD       VA, #B0         ; Load 176 into VA
$E66    $897B   UNKNOWN  897B            ; Unknown 8xxx instruction
$E68    $F559   UNKNOWN  F559            ; Unknown Fxxx instruction
$E6A    $630F   LD       V3, #0F         ; Load 15 into V3
$E6C    $D590   DRW      V5, V9, #0      ; Draw 0-byte sprite at V5, V9
$E6E    $FB4B   UNKNOWN  FB4B            ; Unknown Fxxx instruction
$E70    $B031   JP       V0, $031        ; Jump to V0 + 031
$E72    $E1FA   UNKNOWN  $E1FA           ; Unknown Exxx instruction
$E74    $9717   UNKNOWN  $9717           ; Unknown 9xxx instruction
$E76    $6104   LD       V1, #04         ; Load 4 into V1
$E78    $23AA   CALL     $3AA            ; Call subroutine at 3AA
$E7A    $5BFB   UNKNOWN  $5BFB           ; Unknown 5xxx instruction
$E7C    $3AB0   SE       VA, #B0         ; Skip if VA == 176
$E7E    $DD48   DRW      VD, V4, #8      ; Draw 8-byte sprite at VD, V4
$E80    $9357   UNKNOWN  $9357           ; Unknown 9xxx instruction
$E82    $5F65   UNKNOWN  $5F65           ; Unknown 5xxx instruction
$E84    $839D   UNKNOWN  839D            ; Unknown 8xxx instruction
$E86    $97D6   UNKNOWN  $97D6           ; Unknown 9xxx instruction
$E88    $58DA   UNKNOWN  $58DA           ; Unknown 5xxx instruction
$E8A    $10B1   JP       $0B1            ; Jump to 0B1
$E8C    $117E   JP       $17E            ; Jump to 17E
$E8E    $6ABA   LD       VA, #BA         ; Load 186 into VA
$E90    $C457   RND      V4, #57         ; V4 = random & 57
$E92    $E845   UNKNOWN  $E845           ; Unknown Exxx instruction
$E94    $59BA   UNKNOWN  $59BA           ; Unknown 5xxx instruction
$E96    $ADB1   LD       I, $DB1         ; Load DB1 into I
$E98    $5763   UNKNOWN  $5763           ; Unknown 5xxx instruction
$E9A    $9DCD   UNKNOWN  $9DCD           ; Unknown 9xxx instruction
$E9C    $1533   JP       $533            ; Jump to 533
$E9E    $B4FA   JP       V0, $4FA        ; Jump to V0 + 4FA
$EA0    $C720   RND      V7, #20         ; V7 = random & 20
$EA2    $F2DA   UNKNOWN  F2DA            ; Unknown Fxxx instruction
$EA4    $E946   UNKNOWN  $E946           ; Unknown Exxx instruction
$EA6    $AD64   LD       I, $D64         ; Load D64 into I
$EA8    $5B90   SE       VB, V9          ; Skip if VB == V9
$EAA    $4969   SNE      V9, #69         ; Skip if V9 != 105
$EAC    $2334   CALL     $334            ; Call subroutine at 334
$EAE    $03C2   SYS      $3C2            ; System call to 3C2
$EB0    $DA8B   DRW      VA, V8, #B      ; Draw 11-byte sprite at VA, V8
$EB2    $7850   ADD      V8, #50         ; Add 80 to V8
$EB4    $A97A   LD       I, $97A         ; Load 97A into I
$EB6    $BE67   JP       V0, $E67        ; Jump to V0 + E67
$EB8    $03FB   SYS      $3FB            ; System call to 3FB
$EBA    $6508   LD       V5, #08         ; Load 8 into V5
$EBC    $DC8D   DRW      VC, V8, #D      ; Draw 13-byte sprite at VC, V8
$EBE    $06F9   SYS      $6F9            ; System call to 6F9
$EC0    $5B49   UNKNOWN  $5B49           ; Unknown 5xxx instruction
$EC2    $7B95   ADD      VB, #95         ; Add 149 to VB
$EC4    $A805   LD       I, $805         ; Load 805 into I
$EC6    $78C0   ADD      V8, #C0         ; Add 192 to V8
$EC8    $B268   JP       V0, $268        ; Jump to V0 + 268
$ECA    $35AC   SE       V5, #AC         ; Skip if V5 == 172
$ECC    $4DF6   SNE      VD, #F6         ; Skip if VD != 246
$ECE    $3D30   SE       VD, #30         ; Skip if VD == 48
$ED0    $A5EB   LD       I, $5EB         ; Load 5EB into I
$ED2    $7BDF   ADD      VB, #DF         ; Add 223 to VB
$ED4    $DBAC   DRW      VB, VA, #C      ; Draw 12-byte sprite at VB, VA
$ED6    $8419   UNKNOWN  8419            ; Unknown 8xxx instruction
$ED8    $BD28   JP       V0, $D28        ; Jump to V0 + D28
$EDA    $E9EB   UNKNOWN  $E9EB           ; Unknown Exxx instruction
$EDC    $A1E7   LD       I, $1E7         ; Load 1E7 into I
$EDE    $F0D3   UNKNOWN  F0D3            ; Unknown Fxxx instruction
$EE0    $36ED   SE       V6, #ED         ; Skip if V6 == 237
$EE2    $8D6D   UNKNOWN  8D6D            ; Unknown 8xxx instruction
$EE4    $745E   ADD      V4, #5E         ; Add 94 to V4
$EE6    $9F05   UNKNOWN  $9F05           ; Unknown 9xxx instruction
$EE8    $A870   LD       I, $870         ; Load 870 into I
$EEA    $8270   LD       V2, V7          ; V2 = V7
$EEC    $828F   UNKNOWN  828F            ; Unknown 8xxx instruction
$EEE    $73ED   ADD      V3, #ED         ; Add 237 to V3
$EF0    $1D0E   JP       $D0E            ; Jump to D0E
$EF2    $3521   SE       V5, #21         ; Skip if V5 == 33
$EF4    $8803   XOR      V8, V0          ; V8 ^= V0
$EF6    $5A54   UNKNOWN  $5A54           ; Unknown 5xxx instruction
$EF8    $E8A5   UNKNOWN  $E8A5           ; Unknown Exxx instruction
$EFA    $EAA0   UNKNOWN  $EAA0           ; Unknown Exxx instruction
$EFC    $C1E3   RND      V1, #E3         ; V1 = random & E3
$EFE    $0FF9   SYS      $FF9            ; System call to FF9
$F00    $5C33   UNKNOWN  $5C33           ; Unknown 5xxx instruction
$F02    $E122   UNKNOWN  $E122           ; Unknown Exxx instruction
$F04    $5A35   UNKNOWN  $5A35           ; Unknown 5xxx instruction
$F06    $1989   JP       $989            ; Jump to 989
$F08    $AA47   LD       I, $A47         ; Load A47 into I
$F0A    $200A   CALL     $00A            ; Call subroutine at 00A
$F0C    $C713   RND      V7, #13         ; V7 = random & 13
$F0E    $89CD   UNKNOWN  89CD            ; Unknown 8xxx instruction
$F10    $DA7A   DRW      VA, V7, #A      ; Draw 10-byte sprite at VA, V7
$F12    $60B8   LD       V0, #B8         ; Load 184 into V0
$F14    $EF61   UNKNOWN  $EF61           ; Unknown Exxx instruction
$F16    $34A9   SE       V4, #A9         ; Skip if V4 == 169
$F18    $3BD4   SE       VB, #D4         ; Skip if VB == 212
$F1A    $8DB0   LD       VD, VB          ; VD = VB
$F1C    $8445   SUB      V4, V4          ; V4 -= V4, VF = !borrow
$F1E    $5D2E   UNKNOWN  $5D2E           ; Unknown 5xxx instruction
$F20    $ED5F   UNKNOWN  $ED5F           ; Unknown Exxx instruction
$F22    $3025   SE       V0, #25         ; Skip if V0 == 37
$F24    $E22C   UNKNOWN  $E22C           ; Unknown Exxx instruction
$F26    $D7E4   DRW      V7, VE, #4      ; Draw 4-byte sprite at V7, VE
$F28    $4A8E   SNE      VA, #8E         ; Skip if VA != 142
$F2A    $0451   SYS      $451            ; System call to 451
$F2C    $C7BD   RND      V7, #BD         ; V7 = random & BD
$F2E    $1C5E   JP       $C5E            ; Jump to C5E
$F30    $186E   JP       $86E            ; Jump to 86E
$F32    $2895   CALL     $895            ; Call subroutine at 895
$F34    $7151   ADD      V1, #51         ; Add 81 to V1
$F36    $12FC   JP       $2FC            ; Jump to 2FC
$F38    $BD20   JP       V0, $D20        ; Jump to V0 + D20
$F3A    $694E   LD       V9, #4E         ; Load 78 into V9
$F3C    $5102   UNKNOWN  $5102           ; Unknown 5xxx instruction
$F3E    $DC15   DRW      VC, V1, #5      ; Draw 5-byte sprite at VC, V1
$F40    $BAC2   JP       V0, $AC2        ; Jump to V0 + AC2
$F42    $598F   UNKNOWN  $598F           ; Unknown 5xxx instruction
$F44    $0AFB   SYS      $AFB            ; System call to AFB
$F46    $508E   UNKNOWN  $508E           ; Unknown 5xxx instruction
$F48    $36CB   SE       V6, #CB         ; Skip if V6 == 203
$F4A    $5D60   SE       VD, V6          ; Skip if VD == V6
$F4C    $8008   UNKNOWN  8008            ; Unknown 8xxx instruction
$F4E    $0D16   SYS      $D16            ; System call to D16
$F50    $0404   SYS      $404            ; System call to 404
$F52    $90B3   UNKNOWN  $90B3           ; Unknown 9xxx instruction
$F54    $5BF5   UNKNOWN  $5BF5           ; Unknown 5xxx instruction
$F56    $7258   ADD      V2, #58         ; Add 88 to V2
$F58    $7EC4   ADD      VE, #C4         ; Add 196 to VE
$F5A    $69C4   LD       V9, #C4         ; Load 196 into V9
$F5C    $2DEA   CALL     $DEA            ; Call subroutine at DEA
$F5E    $5A60   SE       VA, V6          ; Skip if VA == V6
$F60    $D3B7   DRW      V3, VB, #7      ; Draw 7-byte sprite at V3, VB
$F62    $81E6   SHR      V1              ; V1 >>= 1, VF = LSB
$F64    $013C   SYS      $13C            ; System call to 13C
$F66    $91C7   UNKNOWN  $91C7           ; Unknown 9xxx instruction
$F68    $E47E   UNKNOWN  $E47E           ; Unknown Exxx instruction
$F6A    $3EAD   SE       VE, #AD         ; Skip if VE == 173
$F6C    $65B8   LD       V5, #B8         ; Load 184 into V5
$F6E    $14EA   JP       $4EA            ; Jump to 4EA
$F70    $05A4   SYS      $5A4            ; System call to 5A4
$F72    $16F5   JP       $6F5            ; Jump to 6F5
$F74    $0C10   SYS      $C10            ; System call to C10
$F76    $6C71   LD       VC, #71         ; Load 113 into VC
$F78    $074A   SYS      $74A            ; System call to 74A
$F7A    $2075   CALL     $075            ; Call subroutine at 075
$F7C    $0D84   SYS      $D84            ; System call to D84
$F7E    $2610   CALL     $610            ; Call subroutine at 610
$F80    $E01E   UNKNOWN  $E01E           ; Unknown Exxx instruction
$F82    $2319   CALL     $319            ; Call subroutine at 319
$F84    $51B3   UNKNOWN  $51B3           ; Unknown 5xxx instruction
$F86    $048D   SYS      $48D            ; System call to 48D
$F88    $9B4B   UNKNOWN  $9B4B           ; Unknown 9xxx instruction
$F8A    $B661   JP       V0, $661        ; Jump to V0 + 661
$F8C    $F4C1   UNKNOWN  F4C1            ; Unknown Fxxx instruction
$F8E    $D2D4   DRW      V2, VD, #4      ; Draw 4-byte sprite at V2, VD
$F90    $6116   LD       V1, #16         ; Load 22 into V1
$F92    $2360   CALL     $360            ; Call subroutine at 360
$F94    $7672   ADD      V6, #72         ; Add 114 to V6
$F96    $23C8   CALL     $3C8            ; Call subroutine at 3C8
$F98    $6347   LD       V3, #47         ; Load 71 into V3
$F9A    $16C0   JP       $6C0            ; Jump to 6C0
$F9C    $0B83   SYS      $B83            ; System call to B83
$F9E    $4355   SNE      V3, #55         ; Skip if V3 != 85
$FA0    $31D2   SE       V1, #D2         ; Skip if V1 == 210
$FA2    $A450   LD       I, $450         ; Load 450 into I
$FA4    $B4E7   JP       V0, $4E7        ; Jump to V0 + 4E7
$FA6    $8FEB   UNKNOWN  8FEB            ; Unknown 8xxx instruction
$FA8    $4CC9   SNE      VC, #C9         ; Skip if VC != 201
$FAA    $0C1E   SYS      $C1E            ; System call to C1E
$FAC    $8167   SUBN     V1, V6          ; V1 = V6 - V1, VF = !borrow
$FAE    $4155   SNE      V1, #55         ; Skip if V1 != 85
$FB0    $8CA6   SHR      VC              ; VC >>= 1, VF = LSB
$FB2    $3EBB   SE       VE, #BB         ; Skip if VE == 187
$FB4    $57AE   UNKNOWN  $57AE           ; Unknown 5xxx instruction
$FB6    $ED7D   UNKNOWN  $ED7D           ; Unknown Exxx instruction
$FB8    $3B44   SE       VB, #44         ; Skip if VB == 68
$FBA    $F3F4   UNKNOWN  F3F4            ; Unknown Fxxx instruction
$FBC    $9D29   UNKNOWN  $9D29           ; Unknown 9xxx instruction
$FBE    $3F78   SE       VF, #78         ; Skip if VF == 120
$FC0    $F5CE   UNKNOWN  F5CE            ; Unknown Fxxx instruction
$FC2    $AC1C   LD       I, $C1C         ; Load C1C into I
$FC4    $D168   DRW      V1, V6, #8      ; Draw 8-byte sprite at V1, V6
$FC6    $FF11   UNKNOWN  FF11            ; Unknown Fxxx instruction
$FC8    $99BF   UNKNOWN  $99BF           ; Unknown 9xxx instruction
$FCA    $185B   JP       $85B            ; Jump to 85B
$FCC    $355D   SE       V5, #5D         ; Skip if V5 == 93
$FCE    $6114   LD       V1, #14         ; Load 20 into V1
$FD0    $E434   UNKNOWN  $E434           ; Unknown Exxx instruction
$FD2    $82F7   SUBN     V2, VF          ; V2 = VF - V2, VF = !borrow
$FD4    $FABC   UNKNOWN  FABC            ; Unknown Fxxx instruction
$FD6    $B709   JP       V0, $709        ; Jump to V0 + 709
$FD8    $AE13   LD       I, $E13         ; Load E13 into I
$FDA    $298D   CALL     $98D            ; Call subroutine at 98D
$FDC    $9512   UNKNOWN  $9512           ; Unknown 9xxx instruction
$FDE    $1049   JP       $049            ; Jump to 049
$FE0    $36B7   SE       V6, #B7         ; Skip if V6 == 183
$FE2    $B598   JP       V0, $598        ; Jump to V0 + 598
$FE4    $ED6C   UNKNOWN  $ED6C           ; Unknown Exxx instruction
$FE6    $C820   RND      V8, #20         ; V8 = random & 20
$FE8    $D9AD   DRW      V9, VA, #D      ; Draw 13-byte sprite at V9, VA
$FEA    $944E   UNKNOWN  $944E           ; Unknown 9xxx instruction
$FEC    $522E   UNKNOWN  $522E           ; Unknown 5xxx instruction
$FEE    $CDD1   RND      VD, #D1         ; VD = random & D1
$FF0    $4EC5   SNE      VE, #C5         ; Skip if VE != 197
$FF2    $790B   ADD      V9, #0B         ; Add 11 to V9
$FF4    $B31D   JP       V0, $31D        ; Jump to V0 + 31D
$FF6    $456C   SNE      V5, #6C         ; Skip if V5 != 108
$FF8    $A910   LD       I, $910         ; Load 910 into I
$FFA    $68D7   LD       V8, #D7         ; Load 215 into V8
$FFC    $8E27   SUBN     VE, V2          ; VE = V2 - VE, VF = !borrow
$FFE    $33FB   SE       V3, #FB         ; Skip if V3 == 251

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 511 (28.5%)
  LD      : 232 (12.9%)
  JP      : 198 (11.0%)
  SNE     : 129 ( 7.2%)
  SE      : 129 ( 7.2%)
  SYS     : 115 ( 6.4%)
  DRW     : 114 ( 6.4%)
  ADD     : 112 ( 6.2%)
  CALL    : 107 ( 6.0%)
  RND     : 103 ( 5.7%)
  SUBN    :   9 ( 0.5%)
  SHL     :   7 ( 0.4%)
  SHR     :   7 ( 0.4%)
  XOR     :   6 ( 0.3%)
  OR      :   5 ( 0.3%)
  AND     :   5 ( 0.3%)
  SUB     :   3 ( 0.2%)

Memory Operations: 344 (19.2%)
Arithmetic Operations: 140 (7.8%)
