
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B226D01_I10765_C30892_3e4588cc75ca.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 226
Instance: 10765
Direction: descending
Final Array: [181, 177, 173, 169, 165, 161, 157, 153]
Operations: R:0 W:8 C:225 S:3

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 114
Sort Array References:
  $218: LD I, $E1E ; Load E1E into I
  $242: LD I, $DA9 ; Load DA9 into I
  $244: LD I, $5A1 ; Load 5A1 into I
  $282: LD I, $DA9 ; Load DA9 into I
  $284: LD I, $5A1 ; Load 5A1 into I
  $2C2: LD I, $DA9 ; Load DA9 into I
  $2C4: LD I, $5A1 ; Load 5A1 into I
  $302: LD I, $DA9 ; Load DA9 into I
  $304: LD I, $5A1 ; Load 5A1 into I
  $342: LD I, $D2A ; Load D2A into I
  $364: LD I, $D4F ; Load D4F into I
  $37A: LD I, $40D ; Load 40D into I
  $38A: LD I, $CA4 ; Load CA4 into I
  $392: LD I, $99C ; Load 99C into I
  $398: LD I, $B90 ; Load B90 into I
  $3D8: LD I, $EFF ; Load EFF into I
  $3F0: LD I, $3E1 ; Load 3E1 into I
  $3F2: LD I, $478 ; Load 478 into I
  $408: LD I, $C06 ; Load C06 into I
  $46A: LD I, $4F5 ; Load 4F5 into I
  $480: LD I, $A5D ; Load A5D into I
  $4A0: LD I, $838 ; Load 838 into I
  $4A8: LD I, $66A ; Load 66A into I
  $500: LD I, $15C ; Load 15C into I
  $534: LD I, $F5A ; Load F5A into I
  $536: LD I, $FB9 ; Load FB9 into I
  $558: LD I, $2BA ; Load 2BA into I
  $5A4: LD I, $658 ; Load 658 into I
  $5BE: LD I, $CE3 ; Load CE3 into I
  $5C8: LD I, $CB1 ; Load CB1 into I
  $5FC: LD I, $092 ; Load 092 into I
  $63A: LD I, $BA1 ; Load BA1 into I
  $658: LD I, $7F7 ; Load 7F7 into I
  $66A: LD I, $7A3 ; Load 7A3 into I
  $67C: LD I, $5D4 ; Load 5D4 into I
  $6A2: LD I, $C79 ; Load C79 into I
  $6AA: LD I, $460 ; Load 460 into I
  $6C0: LD I, $20F ; Load 20F into I
  $6C8: LD I, $551 ; Load 551 into I
  $6EE: LD I, $CA1 ; Load CA1 into I
  $6F4: LD I, $BAD ; Load BAD into I
  $6F6: LD I, $92E ; Load 92E into I
  $72C: LD I, $20A ; Load 20A into I
  $74C: LD I, $D2B ; Load D2B into I
  $766: LD I, $4AE ; Load 4AE into I
  $772: LD I, $7E3 ; Load 7E3 into I
  $776: LD I, $057 ; Load 057 into I
  $77A: LD I, $17D ; Load 17D into I
  $78C: LD I, $19D ; Load 19D into I
  $7C4: LD I, $891 ; Load 891 into I
  $7EA: LD I, $CF8 ; Load CF8 into I
  $82E: LD I, $E00 ; Load E00 into I
  $856: LD I, $BB5 ; Load BB5 into I
  $882: LD I, $B32 ; Load B32 into I
  $886: LD I, $0B4 ; Load 0B4 into I
  $89A: LD I, $4D5 ; Load 4D5 into I
  $8F4: LD I, $10F ; Load 10F into I
  $930: LD I, $04F ; Load 04F into I
  $956: LD I, $219 ; Load 219 into I
  $966: LD I, $917 ; Load 917 into I
  $96A: LD I, $D0D ; Load D0D into I
  $976: LD I, $CC7 ; Load CC7 into I
  $9B8: LD I, $0CC ; Load 0CC into I
  $9C0: LD I, $516 ; Load 516 into I
  $9DA: LD I, $F3C ; Load F3C into I
  $9EC: LD I, $B0D ; Load B0D into I
  $A18: LD I, $4CE ; Load 4CE into I
  $A2C: LD I, $7F0 ; Load 7F0 into I
  $A6A: LD I, $351 ; Load 351 into I
  $A6E: LD I, $0FA ; Load 0FA into I
  $A94: LD I, $500 ; Load 500 into I
  $AAA: LD I, $85F ; Load 85F into I
  $AB6: LD I, $7E8 ; Load 7E8 into I
  $ACC: LD I, $9F7 ; Load 9F7 into I
  $ADE: LD I, $2CC ; Load 2CC into I
  $B0A: LD I, $6C2 ; Load 6C2 into I
  $B2E: LD I, $F63 ; Load F63 into I
  $B4E: LD I, $D1B ; Load D1B into I
  $B5A: LD I, $CE0 ; Load CE0 into I
  $B78: LD I, $01A ; Load 01A into I
  $B9E: LD I, $BBE ; Load BBE into I
  $BBE: LD I, $F42 ; Load F42 into I
  $C1E: LD I, $B02 ; Load B02 into I
  $C32: LD I, $A09 ; Load A09 into I
  $C52: LD I, $F84 ; Load F84 into I
  $C64: LD I, $22E ; Load 22E into I
  $C86: LD I, $275 ; Load 275 into I
  $CB0: LD I, $9DD ; Load 9DD into I
  $CB2: LD I, $94A ; Load 94A into I
  $CE4: LD I, $DE1 ; Load DE1 into I
  $D0C: LD I, $DE7 ; Load DE7 into I
  $D1A: LD I, $883 ; Load 883 into I
  $D40: LD I, $5B1 ; Load 5B1 into I
  $D64: LD I, $5C3 ; Load 5C3 into I
  $DA4: LD I, $086 ; Load 086 into I
  $DA6: LD I, $CC7 ; Load CC7 into I
  $DCC: LD I, $4E3 ; Load 4E3 into I
  $DE6: LD I, $7DD ; Load 7DD into I
  $DF4: LD I, $3C5 ; Load 3C5 into I
  $E22: ADD I, V7 ; I ADDRESS MANIPULATION
  $E58: LD I, $456 ; Load 456 into I
  $E72: LD I, $886 ; Load 886 into I
  $E7A: LD I, $D00 ; Load D00 into I
  $E96: LD I, $EF1 ; Load EF1 into I
  $EB2: LD I, $253 ; Load 253 into I
  $F22: LD I, $80A ; Load 80A into I
  $F2A: LD I, $A30 ; Load A30 into I
  $F5E: LD I, $D4F ; Load D4F into I
  $F6C: LD I, $7B9 ; Load 7B9 into I
  $F7C: LD I, $E60 ; Load E60 into I
  $FAA: LD I, $0D1 ; Load 0D1 into I
  $FF4: LD I, $86F ; Load 86F into I
  $FF6: LD I, $D8D ; Load D8D into I
  $FFE: LD I, $710 ; Load 710 into I

CONTROL FLOW ANALYSIS:
Jumps: 232
Calls: 118
Branches: 249
Loops: 125
Loop Structures:
  $33C -> $02E (backward jump)
  $376 -> $2B1 (backward jump)
  $394 -> $02E (backward jump)
  $3A8 -> $130 (backward jump)
  $3AA -> $37B (backward jump)
  $418 -> $3DA (backward jump)
  $422 -> $0B9 (backward jump)
  $43A -> $16C (backward jump)
  $450 -> $031 (backward jump)
  $4B6 -> $32B (backward jump)
  $57E -> $036 (backward jump)
  $5A2 -> $244 (backward jump)
  $5B8 -> $425 (backward jump)
  $5C0 -> $3B1 (backward jump)
  $5D0 -> $54D (backward jump)
  $688 -> $5BE (backward jump)
  $696 -> $30E (backward jump)
  $6BA -> $26A (backward jump)
  $6E2 -> $02D (backward jump)
  $72A -> $087 (backward jump)
  $73A -> $387 (backward jump)
  $770 -> $4D1 (backward jump)
  $7C8 -> $439 (backward jump)
  $83A -> $361 (backward jump)
  $854 -> $3CB (backward jump)
  $896 -> $0A1 (backward jump)
  $8BE -> $4FC (backward jump)
  $8DE -> $3E4 (backward jump)
  $8EE -> $42C (backward jump)
  $904 -> $2DD (backward jump)
  $90E -> $192 (backward jump)
  $918 -> $549 (backward jump)
  $938 -> $084 (backward jump)
  $942 -> $463 (backward jump)
  $94C -> $24A (backward jump)
  $950 -> $1FD (backward jump)
  $95A -> $23E (backward jump)
  $95C -> $009 (backward jump)
  $960 -> $3EF (backward jump)
  $97C -> $22D (backward jump)
  $992 -> $57B (backward jump)
  $9BC -> $31C (backward jump)
  $9CC -> $3CA (backward jump)
  $9D2 -> $2B6 (backward jump)
  $9EA -> $615 (backward jump)
  $A60 -> $4AC (backward jump)
  $A68 -> $688 (backward jump)
  $A8C -> $1CA (backward jump)
  $AA4 -> $120 (backward jump)
  $ACE -> $991 (backward jump)
  $AD2 -> $AC7 (backward jump)
  $AE0 -> $453 (backward jump)
  $AF4 -> $5C9 (backward jump)
  $B04 -> $991 (backward jump)
  $B08 -> $697 (backward jump)
  $B2A -> $182 (backward jump)
  $B34 -> $92A (backward jump)
  $B6A -> $9BA (backward jump)
  $B86 -> $31A (backward jump)
  $B92 -> $3DC (backward jump)
  $BA6 -> $319 (backward jump)
  $BB8 -> $93D (backward jump)
  $BC0 -> $2C3 (backward jump)
  $BC2 -> $859 (backward jump)
  $BCE -> $88A (backward jump)
  $BDE -> $6EE (backward jump)
  $BE6 -> $0A7 (backward jump)
  $BF2 -> $9E0 (backward jump)
  $C08 -> $5EC (backward jump)
  $C0A -> $3B7 (backward jump)
  $C1C -> $567 (backward jump)
  $C2C -> $218 (backward jump)
  $C2E -> $0C4 (backward jump)
  $C46 -> $9E9 (backward jump)
  $C48 -> $0D6 (backward jump)
  $C54 -> $84A (backward jump)
  $C80 -> $807 (backward jump)
  $C9C -> $C3C (backward jump)
  $CB8 -> $A42 (backward jump)
  $CDE -> $2F6 (backward jump)
  $CE2 -> $2D1 (backward jump)
  $CE6 -> $8C5 (backward jump)
  $CEC -> $A4F (backward jump)
  $CF2 -> $6EB (backward jump)
  $CF8 -> $337 (backward jump)
  $D28 -> $B83 (backward jump)
  $D2A -> $4E8 (backward jump)
  $D6E -> $809 (backward jump)
  $D80 -> $CDC (backward jump)
  $D8A -> $C3D (backward jump)
  $D9C -> $561 (backward jump)
  $DAA -> $CCB (backward jump)
  $DB8 -> $18E (backward jump)
  $DD6 -> $AC3 (backward jump)
  $DE8 -> $C5B (backward jump)
  $DEC -> $4FB (backward jump)
  $DF8 -> $639 (backward jump)
  $DFE -> $C8A (backward jump)
  $E2E -> $00A (backward jump)
  $E56 -> $911 (backward jump)
  $E60 -> $479 (backward jump)
  $E66 -> $103 (backward jump)
  $EB0 -> $C29 (backward jump)
  $EBE -> $359 (backward jump)
  $EC6 -> $330 (backward jump)
  $ECC -> $770 (backward jump)
  $ED6 -> $C8A (backward jump)
  $EF8 -> $A13 (backward jump)
  $F30 -> $D20 (backward jump)
  $F44 -> $AE3 (backward jump)
  $F48 -> $5DB (backward jump)
  $F52 -> $220 (backward jump)
  $F54 -> $0F6 (backward jump)
  $F68 -> $846 (backward jump)
  $F6E -> $9C5 (backward jump)
  $F72 -> $49C (backward jump)
  $F76 -> $DBA (backward jump)
  $F78 -> $387 (backward jump)
  $F7E -> $7EC (backward jump)
  $FA4 -> $CEA (backward jump)
  $FC4 -> $847 (backward jump)
  $FCA -> $639 (backward jump)
  $FDA -> $7A5 (backward jump)
  $FEC -> $E97 (backward jump)
  $FF2 -> $250 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $B5E6   JP       V0, $5E6        ; Jump to V0 + 5E6
$202    $5870   SE       V8, V7          ; Skip if V8 == V7
$204    $FC6F   UNKNOWN  FC6F            ; Unknown Fxxx instruction
$206    $3E8F   SE       VE, #8F         ; Skip if VE == 143
$208    $D5F0   DRW      V5, VF, #0      ; Draw 0-byte sprite at V5, VF
$20A    $5594   UNKNOWN  $5594           ; Unknown 5xxx instruction
$20C    $7E26   ADD      VE, #26         ; Add 38 to VE
$20E    $C356   RND      V3, #56         ; V3 = random & 56
$210    $885C   UNKNOWN  885C            ; Unknown 8xxx instruction
$212    $DA86   DRW      VA, V8, #6      ; Draw 6-byte sprite at VA, V8
$214    $71EC   ADD      V1, #EC         ; Add 236 to V1
$216    $50F0   SE       V0, VF          ; Skip if V0 == VF
$218    $AE1E   LD       I, $E1E         ; Load E1E into I
$21A    $6635   LD       V6, #35         ; Load 53 into V6
$21C    $E735   UNKNOWN  $E735           ; Unknown Exxx instruction
$21E    $3093   SE       V0, #93         ; Skip if V0 == 147
$220    $6B79   LD       VB, #79         ; Load 121 into VB
$222    $484E   SNE      V8, #4E         ; Skip if V8 != 78
$224    $ECC7   UNKNOWN  $ECC7           ; Unknown Exxx instruction
$226    $0720   SYS      $720            ; System call to 720
$228    $1502   JP       $502            ; Jump to 502
$22A    $D38B   DRW      V3, V8, #B      ; Draw 11-byte sprite at V3, V8
$22C    $C9BE   RND      V9, #BE         ; V9 = random & BE
$22E    $FDF9   UNKNOWN  FDF9            ; Unknown Fxxx instruction
$230    $F5F1   UNKNOWN  F5F1            ; Unknown Fxxx instruction
$232    $EDE9   UNKNOWN  $EDE9           ; Unknown Exxx instruction
$234    $E5E1   UNKNOWN  $E5E1           ; Unknown Exxx instruction
$236    $DDD9   DRW      VD, VD, #9      ; Draw 9-byte sprite at VD, VD
$238    $D5D1   DRW      V5, VD, #1      ; Draw 1-byte sprite at V5, VD
$23A    $CDC9   RND      VD, #C9         ; VD = random & C9
$23C    $C5C1   RND      V5, #C1         ; V5 = random & C1
$23E    $BDB9   JP       V0, $DB9        ; Jump to V0 + DB9
$240    $B5B1   JP       V0, $5B1        ; Jump to V0 + 5B1
$242    $ADA9   LD       I, $DA9         ; Load DA9 into I
$244    $A5A1   LD       I, $5A1         ; Load 5A1 into I
$246    $9D99   UNKNOWN  $9D99           ; Unknown 9xxx instruction
$248    $9591   UNKNOWN  $9591           ; Unknown 9xxx instruction
$24A    $8D89   UNKNOWN  8D89            ; Unknown 8xxx instruction
$24C    $8581   OR       V5, V8          ; V5 |= V8
$24E    $7D79   ADD      VD, #79         ; Add 121 to VD
$250    $7571   ADD      V5, #71         ; Add 113 to V5
$252    $6D69   LD       VD, #69         ; Load 105 into VD
$254    $6561   LD       V5, #61         ; Load 97 into V5
$256    $5D59   UNKNOWN  $5D59           ; Unknown 5xxx instruction
$258    $5551   UNKNOWN  $5551           ; Unknown 5xxx instruction
$25A    $4D49   SNE      VD, #49         ; Skip if VD != 73
$25C    $4541   SNE      V5, #41         ; Skip if V5 != 65
$25E    $3D39   SE       VD, #39         ; Skip if VD == 57
$260    $3531   SE       V5, #31         ; Skip if V5 == 49
$262    $2D29   CALL     $D29            ; Call subroutine at D29
$264    $2521   CALL     $521            ; Call subroutine at 521
$266    $1D19   JP       $D19            ; Jump to D19
$268    $1511   JP       $511            ; Jump to 511
$26A    $0D09   SYS      $D09            ; System call to D09
$26C    $0501   SYS      $501            ; System call to 501
$26E    $FDF9   UNKNOWN  FDF9            ; Unknown Fxxx instruction
$270    $F5F1   UNKNOWN  F5F1            ; Unknown Fxxx instruction
$272    $EDE9   UNKNOWN  $EDE9           ; Unknown Exxx instruction
$274    $E5E1   UNKNOWN  $E5E1           ; Unknown Exxx instruction
$276    $DDD9   DRW      VD, VD, #9      ; Draw 9-byte sprite at VD, VD
$278    $D5D1   DRW      V5, VD, #1      ; Draw 1-byte sprite at V5, VD
$27A    $CDC9   RND      VD, #C9         ; VD = random & C9
$27C    $C5C1   RND      V5, #C1         ; V5 = random & C1
$27E    $BDB9   JP       V0, $DB9        ; Jump to V0 + DB9
$280    $B5B1   JP       V0, $5B1        ; Jump to V0 + 5B1
$282    $ADA9   LD       I, $DA9         ; Load DA9 into I
$284    $A5A1   LD       I, $5A1         ; Load 5A1 into I
$286    $9D99   UNKNOWN  $9D99           ; Unknown 9xxx instruction
$288    $9591   UNKNOWN  $9591           ; Unknown 9xxx instruction
$28A    $8D89   UNKNOWN  8D89            ; Unknown 8xxx instruction
$28C    $8581   OR       V5, V8          ; V5 |= V8
$28E    $7D79   ADD      VD, #79         ; Add 121 to VD
$290    $7571   ADD      V5, #71         ; Add 113 to V5
$292    $6D69   LD       VD, #69         ; Load 105 into VD
$294    $6561   LD       V5, #61         ; Load 97 into V5
$296    $5D59   UNKNOWN  $5D59           ; Unknown 5xxx instruction
$298    $5551   UNKNOWN  $5551           ; Unknown 5xxx instruction
$29A    $4D49   SNE      VD, #49         ; Skip if VD != 73
$29C    $4541   SNE      V5, #41         ; Skip if V5 != 65
$29E    $3D39   SE       VD, #39         ; Skip if VD == 57
$2A0    $3531   SE       V5, #31         ; Skip if V5 == 49
$2A2    $2D29   CALL     $D29            ; Call subroutine at D29
$2A4    $2521   CALL     $521            ; Call subroutine at 521
$2A6    $1D19   JP       $D19            ; Jump to D19
$2A8    $1511   JP       $511            ; Jump to 511
$2AA    $0D09   SYS      $D09            ; System call to D09
$2AC    $0501   SYS      $501            ; System call to 501
$2AE    $FDF9   UNKNOWN  FDF9            ; Unknown Fxxx instruction
$2B0    $F5F1   UNKNOWN  F5F1            ; Unknown Fxxx instruction
$2B2    $EDE9   UNKNOWN  $EDE9           ; Unknown Exxx instruction
$2B4    $E5E1   UNKNOWN  $E5E1           ; Unknown Exxx instruction
$2B6    $DDD9   DRW      VD, VD, #9      ; Draw 9-byte sprite at VD, VD
$2B8    $D5D1   DRW      V5, VD, #1      ; Draw 1-byte sprite at V5, VD
$2BA    $CDC9   RND      VD, #C9         ; VD = random & C9
$2BC    $C5C1   RND      V5, #C1         ; V5 = random & C1
$2BE    $BDB9   JP       V0, $DB9        ; Jump to V0 + DB9
$2C0    $B5B1   JP       V0, $5B1        ; Jump to V0 + 5B1
$2C2    $ADA9   LD       I, $DA9         ; Load DA9 into I
$2C4    $A5A1   LD       I, $5A1         ; Load 5A1 into I
$2C6    $9D99   UNKNOWN  $9D99           ; Unknown 9xxx instruction
$2C8    $9591   UNKNOWN  $9591           ; Unknown 9xxx instruction
$2CA    $8D89   UNKNOWN  8D89            ; Unknown 8xxx instruction
$2CC    $8581   OR       V5, V8          ; V5 |= V8
$2CE    $7D79   ADD      VD, #79         ; Add 121 to VD
$2D0    $7571   ADD      V5, #71         ; Add 113 to V5
$2D2    $6D69   LD       VD, #69         ; Load 105 into VD
$2D4    $6561   LD       V5, #61         ; Load 97 into V5
$2D6    $5D59   UNKNOWN  $5D59           ; Unknown 5xxx instruction
$2D8    $5551   UNKNOWN  $5551           ; Unknown 5xxx instruction
$2DA    $4D49   SNE      VD, #49         ; Skip if VD != 73
$2DC    $4541   SNE      V5, #41         ; Skip if V5 != 65
$2DE    $3D39   SE       VD, #39         ; Skip if VD == 57
$2E0    $3531   SE       V5, #31         ; Skip if V5 == 49
$2E2    $2D29   CALL     $D29            ; Call subroutine at D29
$2E4    $2521   CALL     $521            ; Call subroutine at 521
$2E6    $1D19   JP       $D19            ; Jump to D19
$2E8    $1511   JP       $511            ; Jump to 511
$2EA    $0D09   SYS      $D09            ; System call to D09
$2EC    $0501   SYS      $501            ; System call to 501
$2EE    $FDF9   UNKNOWN  FDF9            ; Unknown Fxxx instruction
$2F0    $F5F1   UNKNOWN  F5F1            ; Unknown Fxxx instruction
$2F2    $EDE9   UNKNOWN  $EDE9           ; Unknown Exxx instruction
$2F4    $E5E1   UNKNOWN  $E5E1           ; Unknown Exxx instruction
$2F6    $DDD9   DRW      VD, VD, #9      ; Draw 9-byte sprite at VD, VD
$2F8    $D5D1   DRW      V5, VD, #1      ; Draw 1-byte sprite at V5, VD
$2FA    $CDC9   RND      VD, #C9         ; VD = random & C9
$2FC    $C5C1   RND      V5, #C1         ; V5 = random & C1
$2FE    $BDB9   JP       V0, $DB9        ; Jump to V0 + DB9
$300    $B5B1   JP       V0, $5B1        ; Jump to V0 + 5B1
$302    $ADA9   LD       I, $DA9         ; Load DA9 into I
$304    $A5A1   LD       I, $5A1         ; Load 5A1 into I
$306    $9D99   UNKNOWN  $9D99           ; Unknown 9xxx instruction
$308    $7ABA   ADD      VA, #BA         ; Add 186 to VA
$30A    $521F   UNKNOWN  $521F           ; Unknown 5xxx instruction
$30C    $341B   SE       V4, #1B         ; Skip if V4 == 27
$30E    $9792   UNKNOWN  $9792           ; Unknown 9xxx instruction
$310    $9A1A   UNKNOWN  $9A1A           ; Unknown 9xxx instruction
$312    $1927   JP       $927            ; Jump to 927
$314    $F847   UNKNOWN  F847            ; Unknown Fxxx instruction
$316    $B618   JP       V0, $618        ; Jump to V0 + 618
$318    $5CE4   UNKNOWN  $5CE4           ; Unknown 5xxx instruction
$31A    $9898   UNKNOWN  $9898           ; Unknown 9xxx instruction
$31C    $34B1   SE       V4, #B1         ; Skip if V4 == 177
$31E    $C8F8   RND      V8, #F8         ; V8 = random & F8
$320    $8647   SUBN     V6, V4          ; V6 = V4 - V6, VF = !borrow
$322    $4EFB   SNE      VE, #FB         ; Skip if VE != 251
$324    $C5AE   RND      V5, #AE         ; V5 = random & AE
$326    $5E72   UNKNOWN  $5E72           ; Unknown 5xxx instruction
$328    $3542   SE       V5, #42         ; Skip if V5 == 66
$32A    $C78D   RND      V7, #8D         ; V7 = random & 8D
$32C    $4006   SNE      V0, #06         ; Skip if V0 != 6
$32E    $23CB   CALL     $3CB            ; Call subroutine at 3CB
$330    $5D23   UNKNOWN  $5D23           ; Unknown 5xxx instruction
$332    $988C   UNKNOWN  $988C           ; Unknown 9xxx instruction
$334    $20EB   CALL     $0EB            ; Call subroutine at 0EB
$336    $5810   SE       V8, V1          ; Skip if V8 == V1
$338    $E9DC   UNKNOWN  $E9DC           ; Unknown Exxx instruction
$33A    $D5C6   DRW      V5, VC, #6      ; Draw 6-byte sprite at V5, VC
$33C    $B02E   JP       V0, $02E        ; Jump to V0 + 02E
$33E    $C83D   RND      V8, #3D         ; V8 = random & 3D
$340    $9092   UNKNOWN  $9092           ; Unknown 9xxx instruction
$342    $AD2A   LD       I, $D2A         ; Load D2A into I
$344    $603B   LD       V0, #3B         ; Load 59 into V0
$346    $FC2E   UNKNOWN  FC2E            ; Unknown Fxxx instruction
$348    $54F1   UNKNOWN  $54F1           ; Unknown 5xxx instruction
$34A    $86CF   UNKNOWN  86CF            ; Unknown 8xxx instruction
$34C    $0C85   SYS      $C85            ; System call to C85
$34E    $7326   ADD      V3, #26         ; Add 38 to V3
$350    $E5C7   UNKNOWN  $E5C7           ; Unknown Exxx instruction
$352    $880E   SHL      V8              ; V8 <<= 1, VF = MSB
$354    $40AB   SNE      V0, #AB         ; Skip if V0 != 171
$356    $957E   UNKNOWN  $957E           ; Unknown 9xxx instruction
$358    $0481   SYS      $481            ; System call to 481
$35A    $7C01   ADD      VC, #01         ; Add 1 to VC
$35C    $8CDB   UNKNOWN  8CDB            ; Unknown 8xxx instruction
$35E    $F551   UNKNOWN  F551            ; Unknown Fxxx instruction
$360    $845F   UNKNOWN  845F            ; Unknown 8xxx instruction
$362    $5B70   SE       VB, V7          ; Skip if VB == V7
$364    $AD4F   LD       I, $D4F         ; Load D4F into I
$366    $1E0D   JP       $E0D            ; Jump to E0D
$368    $D72D   DRW      V7, V2, #D      ; Draw 13-byte sprite at V7, V2
$36A    $DAAA   DRW      VA, VA, #A      ; Draw 10-byte sprite at VA, VA
$36C    $2071   CALL     $071            ; Call subroutine at 071
$36E    $9D32   UNKNOWN  $9D32           ; Unknown 9xxx instruction
$370    $D44E   DRW      V4, V4, #E      ; Draw 14-byte sprite at V4, V4
$372    $D356   DRW      V3, V5, #6      ; Draw 6-byte sprite at V3, V5
$374    $9659   UNKNOWN  $9659           ; Unknown 9xxx instruction
$376    $12B1   JP       $2B1            ; Jump to 2B1
$378    $BAB2   JP       V0, $AB2        ; Jump to V0 + AB2
$37A    $A40D   LD       I, $40D         ; Load 40D into I
$37C    $97DC   UNKNOWN  $97DC           ; Unknown 9xxx instruction
$37E    $6AA4   LD       VA, #A4         ; Load 164 into VA
$380    $2D63   CALL     $D63            ; Call subroutine at D63
$382    $60DE   LD       V0, #DE         ; Load 222 into V0
$384    $3DFA   SE       VD, #FA         ; Skip if VD == 250
$386    $9D1E   UNKNOWN  $9D1E           ; Unknown 9xxx instruction
$388    $4D3D   SNE      VD, #3D         ; Skip if VD != 61
$38A    $ACA4   LD       I, $CA4         ; Load CA4 into I
$38C    $958B   UNKNOWN  $958B           ; Unknown 9xxx instruction
$38E    $61EF   LD       V1, #EF         ; Load 239 into V1
$390    $50ED   UNKNOWN  $50ED           ; Unknown 5xxx instruction
$392    $A99C   LD       I, $99C         ; Load 99C into I
$394    $102E   JP       $02E            ; Jump to 02E
$396    $76AB   ADD      V6, #AB         ; Add 171 to V6
$398    $AB90   LD       I, $B90         ; Load B90 into I
$39A    $883C   UNKNOWN  883C            ; Unknown 8xxx instruction
$39C    $27AA   CALL     $7AA            ; Call subroutine at 7AA
$39E    $4BD5   SNE      VB, #D5         ; Skip if VB != 213
$3A0    $EC56   UNKNOWN  $EC56           ; Unknown Exxx instruction
$3A2    $3EE7   SE       VE, #E7         ; Skip if VE == 231
$3A4    $9B8F   UNKNOWN  $9B8F           ; Unknown 9xxx instruction
$3A6    $D385   DRW      V3, V8, #5      ; Draw 5-byte sprite at V3, V8
$3A8    $1130   JP       $130            ; Jump to 130
$3AA    $B37B   JP       V0, $37B        ; Jump to V0 + 37B
$3AC    $6AA8   LD       VA, #A8         ; Load 168 into VA
$3AE    $082B   SYS      $82B            ; System call to 82B
$3B0    $66B5   LD       V6, #B5         ; Load 181 into V6
$3B2    $51F0   SE       V1, VF          ; Skip if V1 == VF
$3B4    $399B   SE       V9, #9B         ; Skip if V9 == 155
$3B6    $1653   JP       $653            ; Jump to 653
$3B8    $05A5   SYS      $5A5            ; System call to 5A5
$3BA    $BC6E   JP       V0, $C6E        ; Jump to V0 + C6E
$3BC    $4534   SNE      V5, #34         ; Skip if V5 != 52
$3BE    $0474   SYS      $474            ; System call to 474
$3C0    $E9E4   UNKNOWN  $E9E4           ; Unknown Exxx instruction
$3C2    $1F58   JP       $F58            ; Jump to F58
$3C4    $E2BD   UNKNOWN  $E2BD           ; Unknown Exxx instruction
$3C6    $C7E9   RND      V7, #E9         ; V7 = random & E9
$3C8    $5CA5   UNKNOWN  $5CA5           ; Unknown 5xxx instruction
$3CA    $7066   ADD      V0, #66         ; Add 102 to V0
$3CC    $2F50   CALL     $F50            ; Call subroutine at F50
$3CE    $14D7   JP       $4D7            ; Jump to 4D7
$3D0    $EE3C   UNKNOWN  $EE3C           ; Unknown Exxx instruction
$3D2    $D008   DRW      V0, V0, #8      ; Draw 8-byte sprite at V0, V0
$3D4    $BC92   JP       V0, $C92        ; Jump to V0 + C92
$3D6    $7A2C   ADD      VA, #2C         ; Add 44 to VA
$3D8    $AEFF   LD       I, $EFF         ; Load EFF into I
$3DA    $9967   UNKNOWN  $9967           ; Unknown 9xxx instruction
$3DC    $067B   SYS      $67B            ; System call to 67B
$3DE    $CB1A   RND      VB, #1A         ; VB = random & 1A
$3E0    $605F   LD       V0, #5F         ; Load 95 into V0
$3E2    $0D3A   SYS      $D3A            ; System call to D3A
$3E4    $BB12   JP       V0, $B12        ; Jump to V0 + B12
$3E6    $4095   SNE      V0, #95         ; Skip if V0 != 149
$3E8    $B7F7   JP       V0, $7F7        ; Jump to V0 + 7F7
$3EA    $EC07   UNKNOWN  $EC07           ; Unknown Exxx instruction
$3EC    $7869   ADD      V8, #69         ; Add 105 to V8
$3EE    $5412   UNKNOWN  $5412           ; Unknown 5xxx instruction
$3F0    $A3E1   LD       I, $3E1         ; Load 3E1 into I
$3F2    $A478   LD       I, $478         ; Load 478 into I
$3F4    $7E5B   ADD      VE, #5B         ; Add 91 to VE
$3F6    $C071   RND      V0, #71         ; V0 = random & 71
$3F8    $612E   LD       V1, #2E         ; Load 46 into V1
$3FA    $4418   SNE      V4, #18         ; Skip if V4 != 24
$3FC    $3025   SE       V0, #25         ; Skip if V0 == 37
$3FE    $DFDF   DRW      VF, VD, #F      ; Draw 15-byte sprite at VF, VD
$400    $4622   SNE      V6, #22         ; Skip if V6 != 34
$402    $F1A4   UNKNOWN  F1A4            ; Unknown Fxxx instruction
$404    $6857   LD       V8, #57         ; Load 87 into V8
$406    $D05E   DRW      V0, V5, #E      ; Draw 14-byte sprite at V0, V5
$408    $AC06   LD       I, $C06         ; Load C06 into I
$40A    $F19D   UNKNOWN  F19D            ; Unknown Fxxx instruction
$40C    $5B7F   UNKNOWN  $5B7F           ; Unknown 5xxx instruction
$40E    $6F33   LD       VF, #33         ; Load 51 into VF
$410    $179D   JP       $79D            ; Jump to 79D
$412    $72A6   ADD      V2, #A6         ; Add 166 to V2
$414    $55A2   UNKNOWN  $55A2           ; Unknown 5xxx instruction
$416    $CD47   RND      VD, #47         ; VD = random & 47
$418    $13DA   JP       $3DA            ; Jump to 3DA
$41A    $03AB   SYS      $3AB            ; System call to 3AB
$41C    $5751   UNKNOWN  $5751           ; Unknown 5xxx instruction
$41E    $2E3E   CALL     $E3E            ; Call subroutine at E3E
$420    $EA44   UNKNOWN  $EA44           ; Unknown Exxx instruction
$422    $10B9   JP       $0B9            ; Jump to 0B9
$424    $44C1   SNE      V4, #C1         ; Skip if V4 != 193
$426    $C355   RND      V3, #55         ; V3 = random & 55
$428    $8F0D   UNKNOWN  8F0D            ; Unknown 8xxx instruction
$42A    $74EE   ADD      V4, #EE         ; Add 238 to V4
$42C    $40A4   SNE      V0, #A4         ; Skip if V0 != 164
$42E    $800A   UNKNOWN  800A            ; Unknown 8xxx instruction
$430    $2388   CALL     $388            ; Call subroutine at 388
$432    $8823   XOR      V8, V2          ; V8 ^= V2
$434    $9EAE   UNKNOWN  $9EAE           ; Unknown 9xxx instruction
$436    $449E   SNE      V4, #9E         ; Skip if V4 != 158
$438    $C3C3   RND      V3, #C3         ; V3 = random & C3
$43A    $B16C   JP       V0, $16C        ; Jump to V0 + 16C
$43C    $8E34   ADD      VE, V3          ; VE += V3, VF = carry
$43E    $45AA   SNE      V5, #AA         ; Skip if V5 != 170
$440    $3972   SE       V9, #72         ; Skip if V9 == 114
$442    $6706   LD       V7, #06         ; Load 6 into V7
$444    $9A40   SNE      VA, V4          ; Skip if VA != V4
$446    $F86B   UNKNOWN  F86B            ; Unknown Fxxx instruction
$448    $F92A   UNKNOWN  F92A            ; Unknown Fxxx instruction
$44A    $E587   UNKNOWN  $E587           ; Unknown Exxx instruction
$44C    $3009   SE       V0, #09         ; Skip if V0 == 9
$44E    $2086   CALL     $086            ; Call subroutine at 086
$450    $1031   JP       $031            ; Jump to 031
$452    $F40B   UNKNOWN  F40B            ; Unknown Fxxx instruction
$454    $9AB4   UNKNOWN  $9AB4           ; Unknown 9xxx instruction
$456    $F20A   LD       V2, K           ; Wait for key press, store in V2
$458    $3CA1   SE       VC, #A1         ; Skip if VC == 161
$45A    $397E   SE       V9, #7E         ; Skip if V9 == 126
$45C    $5DC7   UNKNOWN  $5DC7           ; Unknown 5xxx instruction
$45E    $B725   JP       V0, $725        ; Jump to V0 + 725
$460    $33F3   SE       V3, #F3         ; Skip if V3 == 243
$462    $B486   JP       V0, $486        ; Jump to V0 + 486
$464    $39B8   SE       V9, #B8         ; Skip if V9 == 184
$466    $D19C   DRW      V1, V9, #C      ; Draw 12-byte sprite at V1, V9
$468    $96B7   UNKNOWN  $96B7           ; Unknown 9xxx instruction
$46A    $A4F5   LD       I, $4F5         ; Load 4F5 into I
$46C    $0819   SYS      $819            ; System call to 819
$46E    $759A   ADD      V5, #9A         ; Add 154 to V5
$470    $C208   RND      V2, #08         ; V2 = random & 08
$472    $DAB3   DRW      VA, VB, #3      ; Draw 3-byte sprite at VA, VB
$474    $4BF4   SNE      VB, #F4         ; Skip if VB != 244
$476    $1C94   JP       $C94            ; Jump to C94
$478    $3ADF   SE       VA, #DF         ; Skip if VA == 223
$47A    $6FF7   LD       VF, #F7         ; Load 247 into VF
$47C    $3F13   SE       VF, #13         ; Skip if VF == 19
$47E    $E079   UNKNOWN  $E079           ; Unknown Exxx instruction
$480    $AA5D   LD       I, $A5D         ; Load A5D into I
$482    $B780   JP       V0, $780        ; Jump to V0 + 780
$484    $25E9   CALL     $5E9            ; Call subroutine at 5E9
$486    $BC8A   JP       V0, $C8A        ; Jump to V0 + C8A
$488    $22A4   CALL     $2A4            ; Call subroutine at 2A4
$48A    $432E   SNE      V3, #2E         ; Skip if V3 != 46
$48C    $01A3   SYS      $1A3            ; System call to 1A3
$48E    $52C5   UNKNOWN  $52C5           ; Unknown 5xxx instruction
$490    $D66D   DRW      V6, V6, #D      ; Draw 13-byte sprite at V6, V6
$492    $E22D   UNKNOWN  $E22D           ; Unknown Exxx instruction
$494    $3D3F   SE       VD, #3F         ; Skip if VD == 63
$496    $3003   SE       V0, #03         ; Skip if V0 == 3
$498    $BB9F   JP       V0, $B9F        ; Jump to V0 + B9F
$49A    $F2D4   UNKNOWN  F2D4            ; Unknown Fxxx instruction
$49C    $0463   SYS      $463            ; System call to 463
$49E    $7D46   ADD      VD, #46         ; Add 70 to VD
$4A0    $A838   LD       I, $838         ; Load 838 into I
$4A2    $7E73   ADD      VE, #73         ; Add 115 to VE
$4A4    $06C0   SYS      $6C0            ; System call to 6C0
$4A6    $2C97   CALL     $C97            ; Call subroutine at C97
$4A8    $A66A   LD       I, $66A         ; Load 66A into I
$4AA    $FE01   UNKNOWN  FE01            ; Unknown Fxxx instruction
$4AC    $8277   SUBN     V2, V7          ; V2 = V7 - V2, VF = !borrow
$4AE    $14E1   JP       $4E1            ; Jump to 4E1
$4B0    $D765   DRW      V7, V6, #5      ; Draw 5-byte sprite at V7, V6
$4B2    $C34B   RND      V3, #4B         ; V3 = random & 4B
$4B4    $3AF7   SE       VA, #F7         ; Skip if VA == 247
$4B6    $132B   JP       $32B            ; Jump to 32B
$4B8    $6FB8   LD       VF, #B8         ; Load 184 into VF
$4BA    $1C34   JP       $C34            ; Jump to C34
$4BC    $2600   CALL     $600            ; Call subroutine at 600
$4BE    $25CF   CALL     $5CF            ; Call subroutine at 5CF
$4C0    $9FB5   UNKNOWN  $9FB5           ; Unknown 9xxx instruction
$4C2    $9B39   UNKNOWN  $9B39           ; Unknown 9xxx instruction
$4C4    $E25F   UNKNOWN  $E25F           ; Unknown Exxx instruction
$4C6    $51D1   UNKNOWN  $51D1           ; Unknown 5xxx instruction
$4C8    $1ED0   JP       $ED0            ; Jump to ED0
$4CA    $6131   LD       V1, #31         ; Load 49 into V1
$4CC    $B997   JP       V0, $997        ; Jump to V0 + 997
$4CE    $C15F   RND      V1, #5F         ; V1 = random & 5F
$4D0    $F775   UNKNOWN  F775            ; Unknown Fxxx instruction
$4D2    $F032   UNKNOWN  F032            ; Unknown Fxxx instruction
$4D4    $C8BD   RND      V8, #BD         ; V8 = random & BD
$4D6    $C623   RND      V6, #23         ; V6 = random & 23
$4D8    $3DD5   SE       VD, #D5         ; Skip if VD == 213
$4DA    $502B   UNKNOWN  $502B           ; Unknown 5xxx instruction
$4DC    $F228   UNKNOWN  F228            ; Unknown Fxxx instruction
$4DE    $31B8   SE       V1, #B8         ; Skip if V1 == 184
$4E0    $636B   LD       V3, #6B         ; Load 107 into V3
$4E2    $DCAA   DRW      VC, VA, #A      ; Draw 10-byte sprite at VC, VA
$4E4    $9ACE   UNKNOWN  $9ACE           ; Unknown 9xxx instruction
$4E6    $2772   CALL     $772            ; Call subroutine at 772
$4E8    $72CA   ADD      V2, #CA         ; Add 202 to V2
$4EA    $88DB   UNKNOWN  88DB            ; Unknown 8xxx instruction
$4EC    $1C5E   JP       $C5E            ; Jump to C5E
$4EE    $E7BD   UNKNOWN  $E7BD           ; Unknown Exxx instruction
$4F0    $0F4A   SYS      $F4A            ; System call to F4A
$4F2    $76D9   ADD      V6, #D9         ; Add 217 to V6
$4F4    $95F7   UNKNOWN  $95F7           ; Unknown 9xxx instruction
$4F6    $18EE   JP       $8EE            ; Jump to 8EE
$4F8    $0B1F   SYS      $B1F            ; System call to B1F
$4FA    $41E9   SNE      V1, #E9         ; Skip if V1 != 233
$4FC    $0C9C   SYS      $C9C            ; System call to C9C
$4FE    $B5EA   JP       V0, $5EA        ; Jump to V0 + 5EA
$500    $A15C   LD       I, $15C         ; Load 15C into I
$502    $D2B3   DRW      V2, VB, #3      ; Draw 3-byte sprite at V2, VB
$504    $1707   JP       $707            ; Jump to 707
$506    $258F   CALL     $58F            ; Call subroutine at 58F
$508    $FF3E   UNKNOWN  FF3E            ; Unknown Fxxx instruction
$50A    $1838   JP       $838            ; Jump to 838
$50C    $D204   DRW      V2, V0, #4      ; Draw 4-byte sprite at V2, V0
$50E    $4F2F   SNE      VF, #2F         ; Skip if VF != 47
$510    $791C   ADD      V9, #1C         ; Add 28 to V9
$512    $3373   SE       V3, #73         ; Skip if V3 == 115
$514    $D203   DRW      V2, V0, #3      ; Draw 3-byte sprite at V2, V0
$516    $0180   SYS      $180            ; System call to 180
$518    $3422   SE       V4, #22         ; Skip if V4 == 34
$51A    $969B   UNKNOWN  $969B           ; Unknown 9xxx instruction
$51C    $BEFB   JP       V0, $EFB        ; Jump to V0 + EFB
$51E    $6AA8   LD       VA, #A8         ; Load 168 into VA
$520    $9F9D   UNKNOWN  $9F9D           ; Unknown 9xxx instruction
$522    $C2C5   RND      V2, #C5         ; V2 = random & C5
$524    $28F8   CALL     $8F8            ; Call subroutine at 8F8
$526    $FC58   UNKNOWN  FC58            ; Unknown Fxxx instruction
$528    $2537   CALL     $537            ; Call subroutine at 537
$52A    $1713   JP       $713            ; Jump to 713
$52C    $33EF   SE       V3, #EF         ; Skip if V3 == 239
$52E    $6355   LD       V3, #55         ; Load 85 into V3
$530    $1C51   JP       $C51            ; Jump to C51
$532    $35FB   SE       V5, #FB         ; Skip if V5 == 251
$534    $AF5A   LD       I, $F5A         ; Load F5A into I
$536    $AFB9   LD       I, $FB9         ; Load FB9 into I
$538    $435C   SNE      V3, #5C         ; Skip if V3 != 92
$53A    $17F1   JP       $7F1            ; Jump to 7F1
$53C    $1B36   JP       $B36            ; Jump to B36
$53E    $BCA8   JP       V0, $CA8        ; Jump to V0 + CA8
$540    $D143   DRW      V1, V4, #3      ; Draw 3-byte sprite at V1, V4
$542    $850B   UNKNOWN  850B            ; Unknown 8xxx instruction
$544    $9CD5   UNKNOWN  $9CD5           ; Unknown 9xxx instruction
$546    $2A38   CALL     $A38            ; Call subroutine at A38
$548    $69BC   LD       V9, #BC         ; Load 188 into V9
$54A    $3C2F   SE       VC, #2F         ; Skip if VC == 47
$54C    $608C   LD       V0, #8C         ; Load 140 into V0
$54E    $583B   UNKNOWN  $583B           ; Unknown 5xxx instruction
$550    $2DBA   CALL     $DBA            ; Call subroutine at DBA
$552    $0861   SYS      $861            ; System call to 861
$554    $4446   SNE      V4, #46         ; Skip if V4 != 70
$556    $6214   LD       V2, #14         ; Load 20 into V2
$558    $A2BA   LD       I, $2BA         ; Load 2BA into I
$55A    $49F2   SNE      V9, #F2         ; Skip if V9 != 242
$55C    $525E   UNKNOWN  $525E           ; Unknown 5xxx instruction
$55E    $0EC4   SYS      $EC4            ; System call to EC4
$560    $44A6   SNE      V4, #A6         ; Skip if V4 != 166
$562    $867E   SHL      V6              ; V6 <<= 1, VF = MSB
$564    $3651   SE       V6, #51         ; Skip if V6 == 81
$566    $BEC5   JP       V0, $EC5        ; Jump to V0 + EC5
$568    $987C   UNKNOWN  $987C           ; Unknown 9xxx instruction
$56A    $432D   SNE      V3, #2D         ; Skip if V3 != 45
$56C    $CD5E   RND      VD, #5E         ; VD = random & 5E
$56E    $3EC7   SE       VE, #C7         ; Skip if VE == 199
$570    $8B41   OR       VB, V4          ; VB |= V4
$572    $91BE   UNKNOWN  $91BE           ; Unknown 9xxx instruction
$574    $1C46   JP       $C46            ; Jump to C46
$576    $6404   LD       V4, #04         ; Load 4 into V4
$578    $52A1   UNKNOWN  $52A1           ; Unknown 5xxx instruction
$57A    $09D7   SYS      $9D7            ; System call to 9D7
$57C    $1F97   JP       $F97            ; Jump to F97
$57E    $1036   JP       $036            ; Jump to 036
$580    $2A73   CALL     $A73            ; Call subroutine at A73
$582    $3BD8   SE       VB, #D8         ; Skip if VB == 216
$584    $64A6   LD       V4, #A6         ; Load 166 into V4
$586    $92A7   UNKNOWN  $92A7           ; Unknown 9xxx instruction
$588    $17DA   JP       $7DA            ; Jump to 7DA
$58A    $F8B0   UNKNOWN  F8B0            ; Unknown Fxxx instruction
$58C    $8D2C   UNKNOWN  8D2C            ; Unknown 8xxx instruction
$58E    $5D7A   UNKNOWN  $5D7A           ; Unknown 5xxx instruction
$590    $91EB   UNKNOWN  $91EB           ; Unknown 9xxx instruction
$592    $61C3   LD       V1, #C3         ; Load 195 into V1
$594    $8FAE   SHL      VF              ; VF <<= 1, VF = MSB
$596    $C84D   RND      V8, #4D         ; V8 = random & 4D
$598    $BF5A   JP       V0, $F5A        ; Jump to V0 + F5A
$59A    $4BB4   SNE      VB, #B4         ; Skip if VB != 180
$59C    $5028   UNKNOWN  $5028           ; Unknown 5xxx instruction
$59E    $192F   JP       $92F            ; Jump to 92F
$5A0    $2B6D   CALL     $B6D            ; Call subroutine at B6D
$5A2    $B244   JP       V0, $244        ; Jump to V0 + 244
$5A4    $A658   LD       I, $658         ; Load 658 into I
$5A6    $BDBA   JP       V0, $DBA        ; Jump to V0 + DBA
$5A8    $C882   RND      V8, #82         ; V8 = random & 82
$5AA    $92D5   UNKNOWN  $92D5           ; Unknown 9xxx instruction
$5AC    $4434   SNE      V4, #34         ; Skip if V4 != 52
$5AE    $BF23   JP       V0, $F23        ; Jump to V0 + F23
$5B0    $4D66   SNE      VD, #66         ; Skip if VD != 102
$5B2    $666A   LD       V6, #6A         ; Load 106 into V6
$5B4    $7C7C   ADD      VC, #7C         ; Add 124 to VC
$5B6    $8147   SUBN     V1, V4          ; V1 = V4 - V1, VF = !borrow
$5B8    $1425   JP       $425            ; Jump to 425
$5BA    $869F   UNKNOWN  869F            ; Unknown 8xxx instruction
$5BC    $B74C   JP       V0, $74C        ; Jump to V0 + 74C
$5BE    $ACE3   LD       I, $CE3         ; Load CE3 into I
$5C0    $13B1   JP       $3B1            ; Jump to 3B1
$5C2    $82BE   SHL      V2              ; V2 <<= 1, VF = MSB
$5C4    $43AD   SNE      V3, #AD         ; Skip if V3 != 173
$5C6    $DC6D   DRW      VC, V6, #D      ; Draw 13-byte sprite at VC, V6
$5C8    $ACB1   LD       I, $CB1         ; Load CB1 into I
$5CA    $64D9   LD       V4, #D9         ; Load 217 into V4
$5CC    $99D1   UNKNOWN  $99D1           ; Unknown 9xxx instruction
$5CE    $7BE3   ADD      VB, #E3         ; Add 227 to VB
$5D0    $B54D   JP       V0, $54D        ; Jump to V0 + 54D
$5D2    $C7CD   RND      V7, #CD         ; V7 = random & CD
$5D4    $91BD   UNKNOWN  $91BD           ; Unknown 9xxx instruction
$5D6    $1FE8   JP       $FE8            ; Jump to FE8
$5D8    $56B7   UNKNOWN  $56B7           ; Unknown 5xxx instruction
$5DA    $2717   CALL     $717            ; Call subroutine at 717
$5DC    $EAE7   UNKNOWN  $EAE7           ; Unknown Exxx instruction
$5DE    $E912   UNKNOWN  $E912           ; Unknown Exxx instruction
$5E0    $F2B8   UNKNOWN  F2B8            ; Unknown Fxxx instruction
$5E2    $B773   JP       V0, $773        ; Jump to V0 + 773
$5E4    $20BD   CALL     $0BD            ; Call subroutine at 0BD
$5E6    $596B   UNKNOWN  $596B           ; Unknown 5xxx instruction
$5E8    $E482   UNKNOWN  $E482           ; Unknown Exxx instruction
$5EA    $01FC   SYS      $1FC            ; System call to 1FC
$5EC    $2658   CALL     $658            ; Call subroutine at 658
$5EE    $0ED4   SYS      $ED4            ; System call to ED4
$5F0    $924B   UNKNOWN  $924B           ; Unknown 9xxx instruction
$5F2    $7688   ADD      V6, #88         ; Add 136 to V6
$5F4    $92F5   UNKNOWN  $92F5           ; Unknown 9xxx instruction
$5F6    $8E46   SHR      VE              ; VE >>= 1, VF = LSB
$5F8    $4944   SNE      V9, #44         ; Skip if V9 != 68
$5FA    $0169   SYS      $169            ; System call to 169
$5FC    $A092   LD       I, $092         ; Load 092 into I
$5FE    $DE72   DRW      VE, V7, #2      ; Draw 2-byte sprite at VE, V7
$600    $78AB   ADD      V8, #AB         ; Add 171 to V8
$602    $BE09   JP       V0, $E09        ; Jump to V0 + E09
$604    $3272   SE       V2, #72         ; Skip if V2 == 114
$606    $35F0   SE       V5, #F0         ; Skip if V5 == 240
$608    $0514   SYS      $514            ; System call to 514
$60A    $0EA3   SYS      $EA3            ; System call to EA3
$60C    $5E68   UNKNOWN  $5E68           ; Unknown 5xxx instruction
$60E    $FC9D   UNKNOWN  FC9D            ; Unknown Fxxx instruction
$610    $DA8A   DRW      VA, V8, #A      ; Draw 10-byte sprite at VA, V8
$612    $6887   LD       V8, #87         ; Load 135 into V8
$614    $0503   SYS      $503            ; System call to 503
$616    $F1FE   UNKNOWN  F1FE            ; Unknown Fxxx instruction
$618    $75D5   ADD      V5, #D5         ; Add 213 to V5
$61A    $6759   LD       V7, #59         ; Load 89 into V7
$61C    $2CC6   CALL     $CC6            ; Call subroutine at CC6
$61E    $EE69   UNKNOWN  $EE69           ; Unknown Exxx instruction
$620    $F000   UNKNOWN  F000            ; Unknown Fxxx instruction
$622    $20CE   CALL     $0CE            ; Call subroutine at 0CE
$624    $5947   UNKNOWN  $5947           ; Unknown 5xxx instruction
$626    $8B85   SUB      VB, V8          ; VB -= V8, VF = !borrow
$628    $3E57   SE       VE, #57         ; Skip if VE == 87
$62A    $7F94   ADD      VF, #94         ; Add 148 to VF
$62C    $FA1B   UNKNOWN  FA1B            ; Unknown Fxxx instruction
$62E    $719A   ADD      V1, #9A         ; Add 154 to V1
$630    $8F95   SUB      VF, V9          ; VF -= V9, VF = !borrow
$632    $6314   LD       V3, #14         ; Load 20 into V3
$634    $677C   LD       V7, #7C         ; Load 124 into V7
$636    $9646   UNKNOWN  $9646           ; Unknown 9xxx instruction
$638    $BB20   JP       V0, $B20        ; Jump to V0 + B20
$63A    $ABA1   LD       I, $BA1         ; Load BA1 into I
$63C    $BA0F   JP       V0, $A0F        ; Jump to V0 + A0F
$63E    $1FFD   JP       $FFD            ; Jump to FFD
$640    $DC52   DRW      VC, V5, #2      ; Draw 2-byte sprite at VC, V5
$642    $44D7   SNE      V4, #D7         ; Skip if V4 != 215
$644    $F493   UNKNOWN  F493            ; Unknown Fxxx instruction
$646    $1687   JP       $687            ; Jump to 687
$648    $829B   UNKNOWN  829B            ; Unknown 8xxx instruction
$64A    $FB34   UNKNOWN  FB34            ; Unknown Fxxx instruction
$64C    $1900   JP       $900            ; Jump to 900
$64E    $97D4   UNKNOWN  $97D4           ; Unknown 9xxx instruction
$650    $D66C   DRW      V6, V6, #C      ; Draw 12-byte sprite at V6, V6
$652    $86D1   OR       V6, VD          ; V6 |= VD
$654    $79C9   ADD      V9, #C9         ; Add 201 to V9
$656    $17BD   JP       $7BD            ; Jump to 7BD
$658    $A7F7   LD       I, $7F7         ; Load 7F7 into I
$65A    $17A9   JP       $7A9            ; Jump to 7A9
$65C    $92A2   UNKNOWN  $92A2           ; Unknown 9xxx instruction
$65E    $5754   UNKNOWN  $5754           ; Unknown 5xxx instruction
$660    $5FDE   UNKNOWN  $5FDE           ; Unknown 5xxx instruction
$662    $2F42   CALL     $F42            ; Call subroutine at F42
$664    $F79E   UNKNOWN  F79E            ; Unknown Fxxx instruction
$666    $FB39   UNKNOWN  FB39            ; Unknown Fxxx instruction
$668    $81D9   UNKNOWN  81D9            ; Unknown 8xxx instruction
$66A    $A7A3   LD       I, $7A3         ; Load 7A3 into I
$66C    $9FB7   UNKNOWN  $9FB7           ; Unknown 9xxx instruction
$66E    $E435   UNKNOWN  $E435           ; Unknown Exxx instruction
$670    $B95B   JP       V0, $95B        ; Jump to V0 + 95B
$672    $29CA   CALL     $9CA            ; Call subroutine at 9CA
$674    $FFB3   UNKNOWN  FFB3            ; Unknown Fxxx instruction
$676    $9CE5   UNKNOWN  $9CE5           ; Unknown 9xxx instruction
$678    $1CAE   JP       $CAE            ; Jump to CAE
$67A    $17E0   JP       $7E0            ; Jump to 7E0
$67C    $A5D4   LD       I, $5D4         ; Load 5D4 into I
$67E    $3B2F   SE       VB, #2F         ; Skip if VB == 47
$680    $892D   UNKNOWN  892D            ; Unknown 8xxx instruction
$682    $2E3C   CALL     $E3C            ; Call subroutine at E3C
$684    $D25C   DRW      V2, V5, #C      ; Draw 12-byte sprite at V2, V5
$686    $BFB5   JP       V0, $FB5        ; Jump to V0 + FB5
$688    $B5BE   JP       V0, $5BE        ; Jump to V0 + 5BE
$68A    $F3A6   UNKNOWN  F3A6            ; Unknown Fxxx instruction
$68C    $F700   UNKNOWN  F700            ; Unknown Fxxx instruction
$68E    $E899   UNKNOWN  $E899           ; Unknown Exxx instruction
$690    $0F16   SYS      $F16            ; System call to F16
$692    $7A38   ADD      VA, #38         ; Add 56 to VA
$694    $0CAF   SYS      $CAF            ; System call to CAF
$696    $130E   JP       $30E            ; Jump to 30E
$698    $EA48   UNKNOWN  $EA48           ; Unknown Exxx instruction
$69A    $CA5F   RND      VA, #5F         ; VA = random & 5F
$69C    $F257   UNKNOWN  F257            ; Unknown Fxxx instruction
$69E    $2247   CALL     $247            ; Call subroutine at 247
$6A0    $8771   OR       V7, V7          ; V7 |= V7
$6A2    $AC79   LD       I, $C79         ; Load C79 into I
$6A4    $D490   DRW      V4, V9, #0      ; Draw 0-byte sprite at V4, V9
$6A6    $8BE7   SUBN     VB, VE          ; VB = VE - VB, VF = !borrow
$6A8    $E3A1   SKNP     V3              ; Skip if key V3 not pressed
$6AA    $A460   LD       I, $460         ; Load 460 into I
$6AC    $61D6   LD       V1, #D6         ; Load 214 into V1
$6AE    $F210   UNKNOWN  F210            ; Unknown Fxxx instruction
$6B0    $E076   UNKNOWN  $E076           ; Unknown Exxx instruction
$6B2    $2BC4   CALL     $BC4            ; Call subroutine at BC4
$6B4    $9311   UNKNOWN  $9311           ; Unknown 9xxx instruction
$6B6    $D02F   DRW      V0, V2, #F      ; Draw 15-byte sprite at V0, V2
$6B8    $29AB   CALL     $9AB            ; Call subroutine at 9AB
$6BA    $B26A   JP       V0, $26A        ; Jump to V0 + 26A
$6BC    $C38B   RND      V3, #8B         ; V3 = random & 8B
$6BE    $282F   CALL     $82F            ; Call subroutine at 82F
$6C0    $A20F   LD       I, $20F         ; Load 20F into I
$6C2    $D9C3   DRW      V9, VC, #3      ; Draw 3-byte sprite at V9, VC
$6C4    $8827   SUBN     V8, V2          ; V8 = V2 - V8, VF = !borrow
$6C6    $6476   LD       V4, #76         ; Load 118 into V4
$6C8    $A551   LD       I, $551         ; Load 551 into I
$6CA    $8A1F   UNKNOWN  8A1F            ; Unknown 8xxx instruction
$6CC    $9683   UNKNOWN  $9683           ; Unknown 9xxx instruction
$6CE    $390A   SE       V9, #0A         ; Skip if V9 == 10
$6D0    $315D   SE       V1, #5D         ; Skip if V1 == 93
$6D2    $E4A5   UNKNOWN  $E4A5           ; Unknown Exxx instruction
$6D4    $D1DE   DRW      V1, VD, #E      ; Draw 14-byte sprite at V1, VD
$6D6    $51B9   UNKNOWN  $51B9           ; Unknown 5xxx instruction
$6D8    $8226   SHR      V2              ; V2 >>= 1, VF = LSB
$6DA    $EF81   UNKNOWN  $EF81           ; Unknown Exxx instruction
$6DC    $4441   SNE      V4, #41         ; Skip if V4 != 65
$6DE    $CD2A   RND      VD, #2A         ; VD = random & 2A
$6E0    $1BF6   JP       $BF6            ; Jump to BF6
$6E2    $B02D   JP       V0, $02D        ; Jump to V0 + 02D
$6E4    $2C6D   CALL     $C6D            ; Call subroutine at C6D
$6E6    $720E   ADD      V2, #0E         ; Add 14 to V2
$6E8    $063E   SYS      $63E            ; System call to 63E
$6EA    $2438   CALL     $438            ; Call subroutine at 438
$6EC    $6A2C   LD       VA, #2C         ; Load 44 into VA
$6EE    $ACA1   LD       I, $CA1         ; Load CA1 into I
$6F0    $562B   UNKNOWN  $562B           ; Unknown 5xxx instruction
$6F2    $6125   LD       V1, #25         ; Load 37 into V1
$6F4    $ABAD   LD       I, $BAD         ; Load BAD into I
$6F6    $A92E   LD       I, $92E         ; Load 92E into I
$6F8    $6E88   LD       VE, #88         ; Load 136 into VE
$6FA    $F66C   UNKNOWN  F66C            ; Unknown Fxxx instruction
$6FC    $8DA8   UNKNOWN  8DA8            ; Unknown 8xxx instruction
$6FE    $7DDA   ADD      VD, #DA         ; Add 218 to VD
$700    $85EA   UNKNOWN  85EA            ; Unknown 8xxx instruction
$702    $5AE7   UNKNOWN  $5AE7           ; Unknown 5xxx instruction
$704    $7773   ADD      V7, #73         ; Add 115 to V7
$706    $337C   SE       V3, #7C         ; Skip if V3 == 124
$708    $64C8   LD       V4, #C8         ; Load 200 into V4
$70A    $D75D   DRW      V7, V5, #D      ; Draw 13-byte sprite at V7, V5
$70C    $FBC2   UNKNOWN  FBC2            ; Unknown Fxxx instruction
$70E    $5DEE   UNKNOWN  $5DEE           ; Unknown 5xxx instruction
$710    $33F5   SE       V3, #F5         ; Skip if V3 == 245
$712    $D267   DRW      V2, V6, #7      ; Draw 7-byte sprite at V2, V6
$714    $79BE   ADD      V9, #BE         ; Add 190 to V9
$716    $3C05   SE       VC, #05         ; Skip if VC == 5
$718    $7ABB   ADD      VA, #BB         ; Add 187 to VA
$71A    $7AA4   ADD      VA, #A4         ; Add 164 to VA
$71C    $EC00   UNKNOWN  $EC00           ; Unknown Exxx instruction
$71E    $4A0F   SNE      VA, #0F         ; Skip if VA != 15
$720    $D724   DRW      V7, V2, #4      ; Draw 4-byte sprite at V7, V2
$722    $E70E   UNKNOWN  $E70E           ; Unknown Exxx instruction
$724    $9513   UNKNOWN  $9513           ; Unknown 9xxx instruction
$726    $6E9E   LD       VE, #9E         ; Load 158 into VE
$728    $7351   ADD      V3, #51         ; Add 81 to V3
$72A    $1087   JP       $087            ; Jump to 087
$72C    $A20A   LD       I, $20A         ; Load 20A into I
$72E    $3502   SE       V5, #02         ; Skip if V5 == 2
$730    $77BF   ADD      V7, #BF         ; Add 191 to V7
$732    $E512   UNKNOWN  $E512           ; Unknown Exxx instruction
$734    $F7A6   UNKNOWN  F7A6            ; Unknown Fxxx instruction
$736    $991F   UNKNOWN  $991F           ; Unknown 9xxx instruction
$738    $FAEE   UNKNOWN  FAEE            ; Unknown Fxxx instruction
$73A    $B387   JP       V0, $387        ; Jump to V0 + 387
$73C    $605B   LD       V0, #5B         ; Load 91 into V0
$73E    $647A   LD       V4, #7A         ; Load 122 into V4
$740    $C04C   RND      V0, #4C         ; V0 = random & 4C
$742    $D1CC   DRW      V1, VC, #C      ; Draw 12-byte sprite at V1, VC
$744    $53A3   UNKNOWN  $53A3           ; Unknown 5xxx instruction
$746    $3CA7   SE       VC, #A7         ; Skip if VC == 167
$748    $9AC4   UNKNOWN  $9AC4           ; Unknown 9xxx instruction
$74A    $2CFE   CALL     $CFE            ; Call subroutine at CFE
$74C    $AD2B   LD       I, $D2B         ; Load D2B into I
$74E    $467E   SNE      V6, #7E         ; Skip if V6 != 126
$750    $3663   SE       V6, #63         ; Skip if V6 == 99
$752    $82F1   OR       V2, VF          ; V2 |= VF
$754    $D90C   DRW      V9, V0, #C      ; Draw 12-byte sprite at V9, V0
$756    $60F2   LD       V0, #F2         ; Load 242 into V0
$758    $3ED8   SE       VE, #D8         ; Skip if VE == 216
$75A    $C7A8   RND      V7, #A8         ; V7 = random & A8
$75C    $D49A   DRW      V4, V9, #A      ; Draw 10-byte sprite at V4, V9
$75E    $BD6A   JP       V0, $D6A        ; Jump to V0 + D6A
$760    $84B1   OR       V4, VB          ; V4 |= VB
$762    $4132   SNE      V1, #32         ; Skip if V1 != 50
$764    $C17D   RND      V1, #7D         ; V1 = random & 7D
$766    $A4AE   LD       I, $4AE         ; Load 4AE into I
$768    $C362   RND      V3, #62         ; V3 = random & 62
$76A    $0F41   SYS      $F41            ; System call to F41
$76C    $E075   UNKNOWN  $E075           ; Unknown Exxx instruction
$76E    $4F34   SNE      VF, #34         ; Skip if VF != 52
$770    $14D1   JP       $4D1            ; Jump to 4D1
$772    $A7E3   LD       I, $7E3         ; Load 7E3 into I
$774    $D5F6   DRW      V5, VF, #6      ; Draw 6-byte sprite at V5, VF
$776    $A057   LD       I, $057         ; Load 057 into I
$778    $554A   UNKNOWN  $554A           ; Unknown 5xxx instruction
$77A    $A17D   LD       I, $17D         ; Load 17D into I
$77C    $42BA   SNE      V2, #BA         ; Skip if V2 != 186
$77E    $9207   UNKNOWN  $9207           ; Unknown 9xxx instruction
$780    $FE2F   UNKNOWN  FE2F            ; Unknown Fxxx instruction
$782    $524B   UNKNOWN  $524B           ; Unknown 5xxx instruction
$784    $8ADF   UNKNOWN  8ADF            ; Unknown 8xxx instruction
$786    $E7EA   UNKNOWN  $E7EA           ; Unknown Exxx instruction
$788    $0215   SYS      $215            ; System call to 215
$78A    $BE54   JP       V0, $E54        ; Jump to V0 + E54
$78C    $A19D   LD       I, $19D         ; Load 19D into I
$78E    $9000   SNE      V0, V0          ; Skip if V0 != V0
$790    $FC54   UNKNOWN  FC54            ; Unknown Fxxx instruction
$792    $6620   LD       V6, #20         ; Load 32 into V6
$794    $2A06   CALL     $A06            ; Call subroutine at A06
$796    $06DD   SYS      $6DD            ; System call to 6DD
$798    $E09D   UNKNOWN  $E09D           ; Unknown Exxx instruction
$79A    $4CD3   SNE      VC, #D3         ; Skip if VC != 211
$79C    $DB89   DRW      VB, V8, #9      ; Draw 9-byte sprite at VB, V8
$79E    $901A   UNKNOWN  $901A           ; Unknown 9xxx instruction
$7A0    $ECDB   UNKNOWN  $ECDB           ; Unknown Exxx instruction
$7A2    $C3DD   RND      V3, #DD         ; V3 = random & DD
$7A4    $1FE7   JP       $FE7            ; Jump to FE7
$7A6    $69F6   LD       V9, #F6         ; Load 246 into V9
$7A8    $4E2F   SNE      VE, #2F         ; Skip if VE != 47
$7AA    $7132   ADD      V1, #32         ; Add 50 to V1
$7AC    $3534   SE       V5, #34         ; Skip if V5 == 52
$7AE    $BDFE   JP       V0, $DFE        ; Jump to V0 + DFE
$7B0    $ED58   UNKNOWN  $ED58           ; Unknown Exxx instruction
$7B2    $3E21   SE       VE, #21         ; Skip if VE == 33
$7B4    $1BE8   JP       $BE8            ; Jump to BE8
$7B6    $9010   SNE      V0, V1          ; Skip if V0 != V1
$7B8    $9B43   UNKNOWN  $9B43           ; Unknown 9xxx instruction
$7BA    $3F04   SE       VF, #04         ; Skip if VF == 4
$7BC    $9DE7   UNKNOWN  $9DE7           ; Unknown 9xxx instruction
$7BE    $2A21   CALL     $A21            ; Call subroutine at A21
$7C0    $1AB0   JP       $AB0            ; Jump to AB0
$7C2    $6522   LD       V5, #22         ; Load 34 into V5
$7C4    $A891   LD       I, $891         ; Load 891 into I
$7C6    $3CEE   SE       VC, #EE         ; Skip if VC == 238
$7C8    $1439   JP       $439            ; Jump to 439
$7CA    $330C   SE       V3, #0C         ; Skip if V3 == 12
$7CC    $D957   DRW      V9, V5, #7      ; Draw 7-byte sprite at V9, V5
$7CE    $1CB6   JP       $CB6            ; Jump to CB6
$7D0    $2F1F   CALL     $F1F            ; Call subroutine at F1F
$7D2    $55F4   UNKNOWN  $55F4           ; Unknown 5xxx instruction
$7D4    $726E   ADD      V2, #6E         ; Add 110 to V2
$7D6    $CD31   RND      VD, #31         ; VD = random & 31
$7D8    $4AEB   SNE      VA, #EB         ; Skip if VA != 235
$7DA    $2464   CALL     $464            ; Call subroutine at 464
$7DC    $9A07   UNKNOWN  $9A07           ; Unknown 9xxx instruction
$7DE    $9401   UNKNOWN  $9401           ; Unknown 9xxx instruction
$7E0    $E9AC   UNKNOWN  $E9AC           ; Unknown Exxx instruction
$7E2    $89FB   UNKNOWN  89FB            ; Unknown 8xxx instruction
$7E4    $0649   SYS      $649            ; System call to 649
$7E6    $054B   SYS      $54B            ; System call to 54B
$7E8    $C5DB   RND      V5, #DB         ; V5 = random & DB
$7EA    $ACF8   LD       I, $CF8         ; Load CF8 into I
$7EC    $39FA   SE       V9, #FA         ; Skip if V9 == 250
$7EE    $05B2   SYS      $5B2            ; System call to 5B2
$7F0    $E565   UNKNOWN  $E565           ; Unknown Exxx instruction
$7F2    $D681   DRW      V6, V8, #1      ; Draw 1-byte sprite at V6, V8
$7F4    $9F52   UNKNOWN  $9F52           ; Unknown 9xxx instruction
$7F6    $DD42   DRW      VD, V4, #2      ; Draw 2-byte sprite at VD, V4
$7F8    $F825   UNKNOWN  F825            ; Unknown Fxxx instruction
$7FA    $454E   SNE      V5, #4E         ; Skip if V5 != 78
$7FC    $FE44   UNKNOWN  FE44            ; Unknown Fxxx instruction
$7FE    $5B41   UNKNOWN  $5B41           ; Unknown 5xxx instruction
$800    $5B25   UNKNOWN  $5B25           ; Unknown 5xxx instruction
$802    $3399   SE       V3, #99         ; Skip if V3 == 153
$804    $31E3   SE       V1, #E3         ; Skip if V1 == 227
$806    $43FC   SNE      V3, #FC         ; Skip if V3 != 252
$808    $BA0B   JP       V0, $A0B        ; Jump to V0 + A0B
$80A    $733A   ADD      V3, #3A         ; Add 58 to V3
$80C    $1C14   JP       $C14            ; Jump to C14
$80E    $29D6   CALL     $9D6            ; Call subroutine at 9D6
$810    $C632   RND      V6, #32         ; V6 = random & 32
$812    $521F   UNKNOWN  $521F           ; Unknown 5xxx instruction
$814    $7AB5   ADD      VA, #B5         ; Add 181 to VA
$816    $D430   DRW      V4, V3, #0      ; Draw 0-byte sprite at V4, V3
$818    $845A   UNKNOWN  845A            ; Unknown 8xxx instruction
$81A    $578F   UNKNOWN  $578F           ; Unknown 5xxx instruction
$81C    $E3F7   UNKNOWN  $E3F7           ; Unknown Exxx instruction
$81E    $BC37   JP       V0, $C37        ; Jump to V0 + C37
$820    $2937   CALL     $937            ; Call subroutine at 937
$822    $2FEB   CALL     $FEB            ; Call subroutine at FEB
$824    $0FC7   SYS      $FC7            ; System call to FC7
$826    $0910   SYS      $910            ; System call to 910
$828    $9543   UNKNOWN  $9543           ; Unknown 9xxx instruction
$82A    $E770   UNKNOWN  $E770           ; Unknown Exxx instruction
$82C    $F82F   UNKNOWN  F82F            ; Unknown Fxxx instruction
$82E    $AE00   LD       I, $E00         ; Load E00 into I
$830    $2897   CALL     $897            ; Call subroutine at 897
$832    $C44E   RND      V4, #4E         ; V4 = random & 4E
$834    $9952   UNKNOWN  $9952           ; Unknown 9xxx instruction
$836    $8F1E   SHL      VF              ; VF <<= 1, VF = MSB
$838    $2087   CALL     $087            ; Call subroutine at 087
$83A    $B361   JP       V0, $361        ; Jump to V0 + 361
$83C    $5A62   UNKNOWN  $5A62           ; Unknown 5xxx instruction
$83E    $ED04   UNKNOWN  $ED04           ; Unknown Exxx instruction
$840    $D1DC   DRW      V1, VD, #C      ; Draw 12-byte sprite at V1, VD
$842    $F35F   UNKNOWN  F35F            ; Unknown Fxxx instruction
$844    $FBC8   UNKNOWN  FBC8            ; Unknown Fxxx instruction
$846    $D72A   DRW      V7, V2, #A      ; Draw 10-byte sprite at V7, V2
$848    $FAD4   UNKNOWN  FAD4            ; Unknown Fxxx instruction
$84A    $C223   RND      V2, #23         ; V2 = random & 23
$84C    $995C   UNKNOWN  $995C           ; Unknown 9xxx instruction
$84E    $4CC0   SNE      VC, #C0         ; Skip if VC != 192
$850    $18F7   JP       $8F7            ; Jump to 8F7
$852    $CD0B   RND      VD, #0B         ; VD = random & 0B
$854    $13CB   JP       $3CB            ; Jump to 3CB
$856    $ABB5   LD       I, $BB5         ; Load BB5 into I
$858    $2737   CALL     $737            ; Call subroutine at 737
$85A    $D800   DRW      V8, V0, #0      ; Draw 0-byte sprite at V8, V0
$85C    $EA78   UNKNOWN  $EA78           ; Unknown Exxx instruction
$85E    $EE3A   UNKNOWN  $EE3A           ; Unknown Exxx instruction
$860    $2A3E   CALL     $A3E            ; Call subroutine at A3E
$862    $71DD   ADD      V1, #DD         ; Add 221 to V1
$864    $DFFC   DRW      VF, VF, #C      ; Draw 12-byte sprite at VF, VF
$866    $4F05   SNE      VF, #05         ; Skip if VF != 5
$868    $4669   SNE      V6, #69         ; Skip if V6 != 105
$86A    $D8DB   DRW      V8, VD, #B      ; Draw 11-byte sprite at V8, VD
$86C    $8407   SUBN     V4, V0          ; V4 = V0 - V4, VF = !borrow
$86E    $8544   ADD      V5, V4          ; V5 += V4, VF = carry
$870    $2AB9   CALL     $AB9            ; Call subroutine at AB9
$872    $0D77   SYS      $D77            ; System call to D77
$874    $6CC4   LD       VC, #C4         ; Load 196 into VC
$876    $0845   SYS      $845            ; System call to 845
$878    $6D7D   LD       VD, #7D         ; Load 125 into VD
$87A    $56C9   UNKNOWN  $56C9           ; Unknown 5xxx instruction
$87C    $C6C0   RND      V6, #C0         ; V6 = random & C0
$87E    $9736   UNKNOWN  $9736           ; Unknown 9xxx instruction
$880    $F451   UNKNOWN  F451            ; Unknown Fxxx instruction
$882    $AB32   LD       I, $B32         ; Load B32 into I
$884    $52BD   UNKNOWN  $52BD           ; Unknown 5xxx instruction
$886    $A0B4   LD       I, $0B4         ; Load 0B4 into I
$888    $F380   UNKNOWN  F380            ; Unknown Fxxx instruction
$88A    $D57F   DRW      V5, V7, #F      ; Draw 15-byte sprite at V5, V7
$88C    $65A1   LD       V5, #A1         ; Load 161 into V5
$88E    $1D86   JP       $D86            ; Jump to D86
$890    $4C25   SNE      VC, #25         ; Skip if VC != 37
$892    $7B44   ADD      VB, #44         ; Add 68 to VB
$894    $468D   SNE      V6, #8D         ; Skip if V6 != 141
$896    $B0A1   JP       V0, $0A1        ; Jump to V0 + 0A1
$898    $23F9   CALL     $3F9            ; Call subroutine at 3F9
$89A    $A4D5   LD       I, $4D5         ; Load 4D5 into I
$89C    $8E4F   UNKNOWN  8E4F            ; Unknown 8xxx instruction
$89E    $F596   UNKNOWN  F596            ; Unknown Fxxx instruction
$8A0    $8C52   AND      VC, V5          ; VC &= V5
$8A2    $7DD4   ADD      VD, #D4         ; Add 212 to VD
$8A4    $777A   ADD      V7, #7A         ; Add 122 to V7
$8A6    $0F40   SYS      $F40            ; System call to F40
$8A8    $CC48   RND      VC, #48         ; VC = random & 48
$8AA    $86BE   SHL      V6              ; V6 <<= 1, VF = MSB
$8AC    $D481   DRW      V4, V8, #1      ; Draw 1-byte sprite at V4, V8
$8AE    $3453   SE       V4, #53         ; Skip if V4 == 83
$8B0    $58A7   UNKNOWN  $58A7           ; Unknown 5xxx instruction
$8B2    $6C7E   LD       VC, #7E         ; Load 126 into VC
$8B4    $9D07   UNKNOWN  $9D07           ; Unknown 9xxx instruction
$8B6    $479F   SNE      V7, #9F         ; Skip if V7 != 159
$8B8    $F9A2   UNKNOWN  F9A2            ; Unknown Fxxx instruction
$8BA    $66A2   LD       V6, #A2         ; Load 162 into V6
$8BC    $2144   CALL     $144            ; Call subroutine at 144
$8BE    $B4FC   JP       V0, $4FC        ; Jump to V0 + 4FC
$8C0    $D011   DRW      V0, V1, #1      ; Draw 1-byte sprite at V0, V1
$8C2    $C076   RND      V0, #76         ; V0 = random & 76
$8C4    $387E   SE       V8, #7E         ; Skip if V8 == 126
$8C6    $9E5F   UNKNOWN  $9E5F           ; Unknown 9xxx instruction
$8C8    $C647   RND      V6, #47         ; V6 = random & 47
$8CA    $EBC4   UNKNOWN  $EBC4           ; Unknown Exxx instruction
$8CC    $EBE9   UNKNOWN  $EBE9           ; Unknown Exxx instruction
$8CE    $3E2E   SE       VE, #2E         ; Skip if VE == 46
$8D0    $908D   UNKNOWN  $908D           ; Unknown 9xxx instruction
$8D2    $0F39   SYS      $F39            ; System call to F39
$8D4    $0A22   SYS      $A22            ; System call to A22
$8D6    $C4D0   RND      V4, #D0         ; V4 = random & D0
$8D8    $2394   CALL     $394            ; Call subroutine at 394
$8DA    $94A4   UNKNOWN  $94A4           ; Unknown 9xxx instruction
$8DC    $7C92   ADD      VC, #92         ; Add 146 to VC
$8DE    $13E4   JP       $3E4            ; Jump to 3E4
$8E0    $E250   UNKNOWN  $E250           ; Unknown Exxx instruction
$8E2    $83E0   LD       V3, VE          ; V3 = VE
$8E4    $E72D   UNKNOWN  $E72D           ; Unknown Exxx instruction
$8E6    $E83A   UNKNOWN  $E83A           ; Unknown Exxx instruction
$8E8    $C079   RND      V0, #79         ; V0 = random & 79
$8EA    $8843   XOR      V8, V4          ; V8 ^= V4
$8EC    $876C   UNKNOWN  876C            ; Unknown 8xxx instruction
$8EE    $B42C   JP       V0, $42C        ; Jump to V0 + 42C
$8F0    $955D   UNKNOWN  $955D           ; Unknown 9xxx instruction
$8F2    $8216   SHR      V2              ; V2 >>= 1, VF = LSB
$8F4    $A10F   LD       I, $10F         ; Load 10F into I
$8F6    $7901   ADD      V9, #01         ; Add 1 to V9
$8F8    $6C5C   LD       VC, #5C         ; Load 92 into VC
$8FA    $0BC0   SYS      $BC0            ; System call to BC0
$8FC    $53AF   UNKNOWN  $53AF           ; Unknown 5xxx instruction
$8FE    $C963   RND      V9, #63         ; V9 = random & 63
$900    $3901   SE       V9, #01         ; Skip if V9 == 1
$902    $08A4   SYS      $8A4            ; System call to 8A4
$904    $12DD   JP       $2DD            ; Jump to 2DD
$906    $BD5C   JP       V0, $D5C        ; Jump to V0 + D5C
$908    $7630   ADD      V6, #30         ; Add 48 to V6
$90A    $0D05   SYS      $D05            ; System call to D05
$90C    $1A8D   JP       $A8D            ; Jump to A8D
$90E    $B192   JP       V0, $192        ; Jump to V0 + 192
$910    $43C2   SNE      V3, #C2         ; Skip if V3 != 194
$912    $F746   UNKNOWN  F746            ; Unknown Fxxx instruction
$914    $1C01   JP       $C01            ; Jump to C01
$916    $2E4A   CALL     $E4A            ; Call subroutine at E4A
$918    $B549   JP       V0, $549        ; Jump to V0 + 549
$91A    $94A0   SNE      V4, VA          ; Skip if V4 != VA
$91C    $66CC   LD       V6, #CC         ; Load 204 into V6
$91E    $6F42   LD       VF, #42         ; Load 66 into VF
$920    $EDE3   UNKNOWN  $EDE3           ; Unknown Exxx instruction
$922    $385A   SE       V8, #5A         ; Skip if V8 == 90
$924    $3B26   SE       VB, #26         ; Skip if VB == 38
$926    $19F4   JP       $9F4            ; Jump to 9F4
$928    $5BF1   UNKNOWN  $5BF1           ; Unknown 5xxx instruction
$92A    $6115   LD       V1, #15         ; Load 21 into V1
$92C    $4416   SNE      V4, #16         ; Skip if V4 != 22
$92E    $86F8   UNKNOWN  86F8            ; Unknown 8xxx instruction
$930    $A04F   LD       I, $04F         ; Load 04F into I
$932    $C599   RND      V5, #99         ; V5 = random & 99
$934    $8EF6   SHR      VE              ; VE >>= 1, VF = LSB
$936    $200C   CALL     $00C            ; Call subroutine at 00C
$938    $1084   JP       $084            ; Jump to 084
$93A    $71E8   ADD      V1, #E8         ; Add 232 to V1
$93C    $0BCA   SYS      $BCA            ; System call to BCA
$93E    $9DA9   UNKNOWN  $9DA9           ; Unknown 9xxx instruction
$940    $5085   UNKNOWN  $5085           ; Unknown 5xxx instruction
$942    $B463   JP       V0, $463        ; Jump to V0 + 463
$944    $C91B   RND      V9, #1B         ; V9 = random & 1B
$946    $9B26   UNKNOWN  $9B26           ; Unknown 9xxx instruction
$948    $C3F4   RND      V3, #F4         ; V3 = random & F4
$94A    $9397   UNKNOWN  $9397           ; Unknown 9xxx instruction
$94C    $124A   JP       $24A            ; Jump to 24A
$94E    $8706   SHR      V7              ; V7 >>= 1, VF = LSB
$950    $B1FD   JP       V0, $1FD        ; Jump to V0 + 1FD
$952    $0CED   SYS      $CED            ; System call to CED
$954    $DFDE   DRW      VF, VD, #E      ; Draw 14-byte sprite at VF, VD
$956    $A219   LD       I, $219         ; Load 219 into I
$958    $C400   RND      V4, #00         ; V4 = random & 00
$95A    $123E   JP       $23E            ; Jump to 23E
$95C    $1009   JP       $009            ; Jump to 009
$95E    $BD4C   JP       V0, $D4C        ; Jump to V0 + D4C
$960    $B3EF   JP       V0, $3EF        ; Jump to V0 + 3EF
$962    $DD8C   DRW      VD, V8, #C      ; Draw 12-byte sprite at VD, V8
$964    $CF83   RND      VF, #83         ; VF = random & 83
$966    $A917   LD       I, $917         ; Load 917 into I
$968    $329E   SE       V2, #9E         ; Skip if V2 == 158
$96A    $AD0D   LD       I, $D0D         ; Load D0D into I
$96C    $0214   SYS      $214            ; System call to 214
$96E    $30FA   SE       V0, #FA         ; Skip if V0 == 250
$970    $CC9A   RND      VC, #9A         ; VC = random & 9A
$972    $F24B   UNKNOWN  F24B            ; Unknown Fxxx instruction
$974    $4B44   SNE      VB, #44         ; Skip if VB != 68
$976    $ACC7   LD       I, $CC7         ; Load CC7 into I
$978    $2209   CALL     $209            ; Call subroutine at 209
$97A    $7309   ADD      V3, #09         ; Add 9 to V3
$97C    $B22D   JP       V0, $22D        ; Jump to V0 + 22D
$97E    $7DE8   ADD      VD, #E8         ; Add 232 to VD
$980    $5C51   UNKNOWN  $5C51           ; Unknown 5xxx instruction
$982    $C087   RND      V0, #87         ; V0 = random & 87
$984    $FA02   UNKNOWN  FA02            ; Unknown Fxxx instruction
$986    $0DD4   SYS      $DD4            ; System call to DD4
$988    $E915   UNKNOWN  $E915           ; Unknown Exxx instruction
$98A    $64F8   LD       V4, #F8         ; Load 248 into V4
$98C    $69E0   LD       V9, #E0         ; Load 224 into V9
$98E    $883B   UNKNOWN  883B            ; Unknown 8xxx instruction
$990    $569D   UNKNOWN  $569D           ; Unknown 5xxx instruction
$992    $157B   JP       $57B            ; Jump to 57B
$994    $2AC3   CALL     $AC3            ; Call subroutine at AC3
$996    $5F88   UNKNOWN  $5F88           ; Unknown 5xxx instruction
$998    $7A42   ADD      VA, #42         ; Add 66 to VA
$99A    $2B92   CALL     $B92            ; Call subroutine at B92
$99C    $FF87   UNKNOWN  FF87            ; Unknown Fxxx instruction
$99E    $D85E   DRW      V8, V5, #E      ; Draw 14-byte sprite at V8, V5
$9A0    $1DE4   JP       $DE4            ; Jump to DE4
$9A2    $34C3   SE       V4, #C3         ; Skip if V4 == 195
$9A4    $F020   UNKNOWN  F020            ; Unknown Fxxx instruction
$9A6    $7B04   ADD      VB, #04         ; Add 4 to VB
$9A8    $210B   CALL     $10B            ; Call subroutine at 10B
$9AA    $FC28   UNKNOWN  FC28            ; Unknown Fxxx instruction
$9AC    $4C9F   SNE      VC, #9F         ; Skip if VC != 159
$9AE    $37E0   SE       V7, #E0         ; Skip if V7 == 224
$9B0    $4106   SNE      V1, #06         ; Skip if V1 != 6
$9B2    $FE9B   UNKNOWN  FE9B            ; Unknown Fxxx instruction
$9B4    $8E5A   UNKNOWN  8E5A            ; Unknown 8xxx instruction
$9B6    $EA2D   UNKNOWN  $EA2D           ; Unknown Exxx instruction
$9B8    $A0CC   LD       I, $0CC         ; Load 0CC into I
$9BA    $5E25   UNKNOWN  $5E25           ; Unknown 5xxx instruction
$9BC    $B31C   JP       V0, $31C        ; Jump to V0 + 31C
$9BE    $4A59   SNE      VA, #59         ; Skip if VA != 89
$9C0    $A516   LD       I, $516         ; Load 516 into I
$9C2    $2D72   CALL     $D72            ; Call subroutine at D72
$9C4    $2172   CALL     $172            ; Call subroutine at 172
$9C6    $C2A5   RND      V2, #A5         ; V2 = random & A5
$9C8    $3212   SE       V2, #12         ; Skip if V2 == 18
$9CA    $2B1D   CALL     $B1D            ; Call subroutine at B1D
$9CC    $13CA   JP       $3CA            ; Jump to 3CA
$9CE    $4181   SNE      V1, #81         ; Skip if V1 != 129
$9D0    $E706   UNKNOWN  $E706           ; Unknown Exxx instruction
$9D2    $12B6   JP       $2B6            ; Jump to 2B6
$9D4    $F56B   UNKNOWN  F56B            ; Unknown Fxxx instruction
$9D6    $3EC7   SE       VE, #C7         ; Skip if VE == 199
$9D8    $2E2B   CALL     $E2B            ; Call subroutine at E2B
$9DA    $AF3C   LD       I, $F3C         ; Load F3C into I
$9DC    $4FE0   SNE      VF, #E0         ; Skip if VF != 224
$9DE    $5CF5   UNKNOWN  $5CF5           ; Unknown 5xxx instruction
$9E0    $0DE4   SYS      $DE4            ; System call to DE4
$9E2    $D826   DRW      V8, V2, #6      ; Draw 6-byte sprite at V8, V2
$9E4    $E761   UNKNOWN  $E761           ; Unknown Exxx instruction
$9E6    $336A   SE       V3, #6A         ; Skip if V3 == 106
$9E8    $EA87   UNKNOWN  $EA87           ; Unknown Exxx instruction
$9EA    $1615   JP       $615            ; Jump to 615
$9EC    $AB0D   LD       I, $B0D         ; Load B0D into I
$9EE    $8F18   UNKNOWN  8F18            ; Unknown 8xxx instruction
$9F0    $889F   UNKNOWN  889F            ; Unknown 8xxx instruction
$9F2    $70DA   ADD      V0, #DA         ; Add 218 to V0
$9F4    $D6E1   DRW      V6, VE, #1      ; Draw 1-byte sprite at V6, VE
$9F6    $894B   UNKNOWN  894B            ; Unknown 8xxx instruction
$9F8    $EBAB   UNKNOWN  $EBAB           ; Unknown Exxx instruction
$9FA    $BF8A   JP       V0, $F8A        ; Jump to V0 + F8A
$9FC    $70D2   ADD      V0, #D2         ; Add 210 to V0
$9FE    $050B   SYS      $50B            ; System call to 50B
$A00    $C1C3   RND      V1, #C3         ; V1 = random & C3
$A02    $0A75   SYS      $A75            ; System call to A75
$A04    $BD30   JP       V0, $D30        ; Jump to V0 + D30
$A06    $8117   SUBN     V1, V1          ; V1 = V1 - V1, VF = !borrow
$A08    $00BC   SYS      $0BC            ; System call to 0BC
$A0A    $3E53   SE       VE, #53         ; Skip if VE == 83
$A0C    $9DBA   UNKNOWN  $9DBA           ; Unknown 9xxx instruction
$A0E    $03E6   SYS      $3E6            ; System call to 3E6
$A10    $F142   UNKNOWN  F142            ; Unknown Fxxx instruction
$A12    $DDB4   DRW      VD, VB, #4      ; Draw 4-byte sprite at VD, VB
$A14    $C29E   RND      V2, #9E         ; V2 = random & 9E
$A16    $91E0   SNE      V1, VE          ; Skip if V1 != VE
$A18    $A4CE   LD       I, $4CE         ; Load 4CE into I
$A1A    $1F49   JP       $F49            ; Jump to F49
$A1C    $25B1   CALL     $5B1            ; Call subroutine at 5B1
$A1E    $0925   SYS      $925            ; System call to 925
$A20    $2743   CALL     $743            ; Call subroutine at 743
$A22    $7C59   ADD      VC, #59         ; Add 89 to VC
$A24    $5B0F   UNKNOWN  $5B0F           ; Unknown 5xxx instruction
$A26    $D4AE   DRW      V4, VA, #E      ; Draw 14-byte sprite at V4, VA
$A28    $9E5D   UNKNOWN  $9E5D           ; Unknown 9xxx instruction
$A2A    $3D73   SE       VD, #73         ; Skip if VD == 115
$A2C    $A7F0   LD       I, $7F0         ; Load 7F0 into I
$A2E    $2EF5   CALL     $EF5            ; Call subroutine at EF5
$A30    $C55D   RND      V5, #5D         ; V5 = random & 5D
$A32    $721B   ADD      V2, #1B         ; Add 27 to V2
$A34    $9118   UNKNOWN  $9118           ; Unknown 9xxx instruction
$A36    $EB89   UNKNOWN  $EB89           ; Unknown Exxx instruction
$A38    $D3A8   DRW      V3, VA, #8      ; Draw 8-byte sprite at V3, VA
$A3A    $EC67   UNKNOWN  $EC67           ; Unknown Exxx instruction
$A3C    $F802   UNKNOWN  F802            ; Unknown Fxxx instruction
$A3E    $1B90   JP       $B90            ; Jump to B90
$A40    $2AD7   CALL     $AD7            ; Call subroutine at AD7
$A42    $DD34   DRW      VD, V3, #4      ; Draw 4-byte sprite at VD, V3
$A44    $F0B9   UNKNOWN  F0B9            ; Unknown Fxxx instruction
$A46    $9EFF   UNKNOWN  $9EFF           ; Unknown 9xxx instruction
$A48    $0614   SYS      $614            ; System call to 614
$A4A    $32F6   SE       V2, #F6         ; Skip if V2 == 246
$A4C    $4559   SNE      V5, #59         ; Skip if V5 != 89
$A4E    $9CA3   UNKNOWN  $9CA3           ; Unknown 9xxx instruction
$A50    $5D68   UNKNOWN  $5D68           ; Unknown 5xxx instruction
$A52    $BED3   JP       V0, $ED3        ; Jump to V0 + ED3
$A54    $676A   LD       V7, #6A         ; Load 106 into V7
$A56    $C36F   RND      V3, #6F         ; V3 = random & 6F
$A58    $3C46   SE       VC, #46         ; Skip if VC == 70
$A5A    $D413   DRW      V4, V1, #3      ; Draw 3-byte sprite at V4, V1
$A5C    $9E17   UNKNOWN  $9E17           ; Unknown 9xxx instruction
$A5E    $D81C   DRW      V8, V1, #C      ; Draw 12-byte sprite at V8, V1
$A60    $14AC   JP       $4AC            ; Jump to 4AC
$A62    $DEA2   DRW      VE, VA, #2      ; Draw 2-byte sprite at VE, VA
$A64    $4495   SNE      V4, #95         ; Skip if V4 != 149
$A66    $9E5F   UNKNOWN  $9E5F           ; Unknown 9xxx instruction
$A68    $B688   JP       V0, $688        ; Jump to V0 + 688
$A6A    $A351   LD       I, $351         ; Load 351 into I
$A6C    $479D   SNE      V7, #9D         ; Skip if V7 != 157
$A6E    $A0FA   LD       I, $0FA         ; Load 0FA into I
$A70    $78B5   ADD      V8, #B5         ; Add 181 to V8
$A72    $5887   UNKNOWN  $5887           ; Unknown 5xxx instruction
$A74    $3728   SE       V7, #28         ; Skip if V7 == 40
$A76    $3A00   SE       VA, #00         ; Skip if VA == 0
$A78    $F75F   UNKNOWN  F75F            ; Unknown Fxxx instruction
$A7A    $3530   SE       V5, #30         ; Skip if V5 == 48
$A7C    $7FCF   ADD      VF, #CF         ; Add 207 to VF
$A7E    $D0C6   DRW      V0, VC, #6      ; Draw 6-byte sprite at V0, VC
$A80    $940D   UNKNOWN  $940D           ; Unknown 9xxx instruction
$A82    $28DB   CALL     $8DB            ; Call subroutine at 8DB
$A84    $5B48   UNKNOWN  $5B48           ; Unknown 5xxx instruction
$A86    $6967   LD       V9, #67         ; Load 103 into V9
$A88    $9357   UNKNOWN  $9357           ; Unknown 9xxx instruction
$A8A    $56C4   UNKNOWN  $56C4           ; Unknown 5xxx instruction
$A8C    $11CA   JP       $1CA            ; Jump to 1CA
$A8E    $01B3   SYS      $1B3            ; System call to 1B3
$A90    $F6A8   UNKNOWN  F6A8            ; Unknown Fxxx instruction
$A92    $9C67   UNKNOWN  $9C67           ; Unknown 9xxx instruction
$A94    $A500   LD       I, $500         ; Load 500 into I
$A96    $C135   RND      V1, #35         ; V1 = random & 35
$A98    $637E   LD       V3, #7E         ; Load 126 into V3
$A9A    $39DE   SE       V9, #DE         ; Skip if V9 == 222
$A9C    $209F   CALL     $09F            ; Call subroutine at 09F
$A9E    $954D   UNKNOWN  $954D           ; Unknown 9xxx instruction
$AA0    $DDEE   DRW      VD, VE, #E      ; Draw 14-byte sprite at VD, VE
$AA2    $9BEB   UNKNOWN  $9BEB           ; Unknown 9xxx instruction
$AA4    $1120   JP       $120            ; Jump to 120
$AA6    $49B9   SNE      V9, #B9         ; Skip if V9 != 185
$AA8    $706D   ADD      V0, #6D         ; Add 109 to V0
$AAA    $A85F   LD       I, $85F         ; Load 85F into I
$AAC    $6830   LD       V8, #30         ; Load 48 into V8
$AAE    $2DC8   CALL     $DC8            ; Call subroutine at DC8
$AB0    $9876   UNKNOWN  $9876           ; Unknown 9xxx instruction
$AB2    $06B8   SYS      $6B8            ; System call to 6B8
$AB4    $D860   DRW      V8, V6, #0      ; Draw 0-byte sprite at V8, V6
$AB6    $A7E8   LD       I, $7E8         ; Load 7E8 into I
$AB8    $59E9   UNKNOWN  $59E9           ; Unknown 5xxx instruction
$ABA    $E86E   UNKNOWN  $E86E           ; Unknown Exxx instruction
$ABC    $F6A8   UNKNOWN  F6A8            ; Unknown Fxxx instruction
$ABE    $C344   RND      V3, #44         ; V3 = random & 44
$AC0    $CC96   RND      VC, #96         ; VC = random & 96
$AC2    $7E46   ADD      VE, #46         ; Add 70 to VE
$AC4    $0849   SYS      $849            ; System call to 849
$AC6    $6BD5   LD       VB, #D5         ; Load 213 into VB
$AC8    $4BE9   SNE      VB, #E9         ; Skip if VB != 233
$ACA    $32B1   SE       V2, #B1         ; Skip if V2 == 177
$ACC    $A9F7   LD       I, $9F7         ; Load 9F7 into I
$ACE    $1991   JP       $991            ; Jump to 991
$AD0    $916E   UNKNOWN  $916E           ; Unknown 9xxx instruction
$AD2    $1AC7   JP       $AC7            ; Jump to AC7
$AD4    $CF44   RND      VF, #44         ; VF = random & 44
$AD6    $C638   RND      V6, #38         ; V6 = random & 38
$AD8    $98A3   UNKNOWN  $98A3           ; Unknown 9xxx instruction
$ADA    $0292   SYS      $292            ; System call to 292
$ADC    $BADD   JP       V0, $ADD        ; Jump to V0 + ADD
$ADE    $A2CC   LD       I, $2CC         ; Load 2CC into I
$AE0    $B453   JP       V0, $453        ; Jump to V0 + 453
$AE2    $4D29   SNE      VD, #29         ; Skip if VD != 41
$AE4    $201D   CALL     $01D            ; Call subroutine at 01D
$AE6    $35BA   SE       V5, #BA         ; Skip if V5 == 186
$AE8    $6DCA   LD       VD, #CA         ; Load 202 into VD
$AEA    $F673   UNKNOWN  F673            ; Unknown Fxxx instruction
$AEC    $7B6D   ADD      VB, #6D         ; Add 109 to VB
$AEE    $71AB   ADD      V1, #AB         ; Add 171 to V1
$AF0    $22E1   CALL     $2E1            ; Call subroutine at 2E1
$AF2    $89EE   SHL      V9              ; V9 <<= 1, VF = MSB
$AF4    $15C9   JP       $5C9            ; Jump to 5C9
$AF6    $4D99   SNE      VD, #99         ; Skip if VD != 153
$AF8    $5EB9   UNKNOWN  $5EB9           ; Unknown 5xxx instruction
$AFA    $71EC   ADD      V1, #EC         ; Add 236 to V1
$AFC    $8B0E   SHL      VB              ; VB <<= 1, VF = MSB
$AFE    $3537   SE       V5, #37         ; Skip if V5 == 55
$B00    $47C4   SNE      V7, #C4         ; Skip if V7 != 196
$B02    $8818   UNKNOWN  8818            ; Unknown 8xxx instruction
$B04    $1991   JP       $991            ; Jump to 991
$B06    $5F9B   UNKNOWN  $5F9B           ; Unknown 5xxx instruction
$B08    $B697   JP       V0, $697        ; Jump to V0 + 697
$B0A    $A6C2   LD       I, $6C2         ; Load 6C2 into I
$B0C    $3703   SE       V7, #03         ; Skip if V7 == 3
$B0E    $4025   SNE      V0, #25         ; Skip if V0 != 37
$B10    $4F9B   SNE      VF, #9B         ; Skip if VF != 155
$B12    $20F4   CALL     $0F4            ; Call subroutine at 0F4
$B14    $62F6   LD       V2, #F6         ; Load 246 into V2
$B16    $93FB   UNKNOWN  $93FB           ; Unknown 9xxx instruction
$B18    $5C73   UNKNOWN  $5C73           ; Unknown 5xxx instruction
$B1A    $1D3C   JP       $D3C            ; Jump to D3C
$B1C    $9C83   UNKNOWN  $9C83           ; Unknown 9xxx instruction
$B1E    $D88A   DRW      V8, V8, #A      ; Draw 10-byte sprite at V8, V8
$B20    $CB45   RND      VB, #45         ; VB = random & 45
$B22    $BDCD   JP       V0, $DCD        ; Jump to V0 + DCD
$B24    $96FD   UNKNOWN  $96FD           ; Unknown 9xxx instruction
$B26    $7A7B   ADD      VA, #7B         ; Add 123 to VA
$B28    $CFDB   RND      VF, #DB         ; VF = random & DB
$B2A    $1182   JP       $182            ; Jump to 182
$B2C    $EEBF   UNKNOWN  $EEBF           ; Unknown Exxx instruction
$B2E    $AF63   LD       I, $F63         ; Load F63 into I
$B30    $33E9   SE       V3, #E9         ; Skip if V3 == 233
$B32    $2365   CALL     $365            ; Call subroutine at 365
$B34    $192A   JP       $92A            ; Jump to 92A
$B36    $3343   SE       V3, #43         ; Skip if V3 == 67
$B38    $96BF   UNKNOWN  $96BF           ; Unknown 9xxx instruction
$B3A    $4D23   SNE      VD, #23         ; Skip if VD != 35
$B3C    $4C87   SNE      VC, #87         ; Skip if VC != 135
$B3E    $2D52   CALL     $D52            ; Call subroutine at D52
$B40    $0D17   SYS      $D17            ; System call to D17
$B42    $F2C8   UNKNOWN  F2C8            ; Unknown Fxxx instruction
$B44    $E44B   UNKNOWN  $E44B           ; Unknown Exxx instruction
$B46    $5490   SE       V4, V9          ; Skip if V4 == V9
$B48    $4865   SNE      V8, #65         ; Skip if V8 != 101
$B4A    $9B99   UNKNOWN  $9B99           ; Unknown 9xxx instruction
$B4C    $F8B7   UNKNOWN  F8B7            ; Unknown Fxxx instruction
$B4E    $AD1B   LD       I, $D1B         ; Load D1B into I
$B50    $2643   CALL     $643            ; Call subroutine at 643
$B52    $3DD8   SE       VD, #D8         ; Skip if VD == 216
$B54    $D143   DRW      V1, V4, #3      ; Draw 3-byte sprite at V1, V4
$B56    $EEA2   UNKNOWN  $EEA2           ; Unknown Exxx instruction
$B58    $0E1C   SYS      $E1C            ; System call to E1C
$B5A    $ACE0   LD       I, $CE0         ; Load CE0 into I
$B5C    $4986   SNE      V9, #86         ; Skip if V9 != 134
$B5E    $0383   SYS      $383            ; System call to 383
$B60    $6831   LD       V8, #31         ; Load 49 into V8
$B62    $DB76   DRW      VB, V7, #6      ; Draw 6-byte sprite at VB, V7
$B64    $31E3   SE       V1, #E3         ; Skip if V1 == 227
$B66    $DEA2   DRW      VE, VA, #2      ; Draw 2-byte sprite at VE, VA
$B68    $5C6B   UNKNOWN  $5C6B           ; Unknown 5xxx instruction
$B6A    $19BA   JP       $9BA            ; Jump to 9BA
$B6C    $576B   UNKNOWN  $576B           ; Unknown 5xxx instruction
$B6E    $C6DD   RND      V6, #DD         ; V6 = random & DD
$B70    $D5DC   DRW      V5, VD, #C      ; Draw 12-byte sprite at V5, VD
$B72    $8914   ADD      V9, V1          ; V9 += V1, VF = carry
$B74    $8369   UNKNOWN  8369            ; Unknown 8xxx instruction
$B76    $8782   AND      V7, V8          ; V7 &= V8
$B78    $A01A   LD       I, $01A         ; Load 01A into I
$B7A    $F579   UNKNOWN  F579            ; Unknown Fxxx instruction
$B7C    $22F5   CALL     $2F5            ; Call subroutine at 2F5
$B7E    $DC87   DRW      VC, V8, #7      ; Draw 7-byte sprite at VC, V8
$B80    $45A4   SNE      V5, #A4         ; Skip if V5 != 164
$B82    $903B   UNKNOWN  $903B           ; Unknown 9xxx instruction
$B84    $367C   SE       V6, #7C         ; Skip if V6 == 124
$B86    $131A   JP       $31A            ; Jump to 31A
$B88    $E508   UNKNOWN  $E508           ; Unknown Exxx instruction
$B8A    $0E23   SYS      $E23            ; System call to E23
$B8C    $9A6C   UNKNOWN  $9A6C           ; Unknown 9xxx instruction
$B8E    $D8AE   DRW      V8, VA, #E      ; Draw 14-byte sprite at V8, VA
$B90    $DE7F   DRW      VE, V7, #F      ; Draw 15-byte sprite at VE, V7
$B92    $B3DC   JP       V0, $3DC        ; Jump to V0 + 3DC
$B94    $3AAC   SE       VA, #AC         ; Skip if VA == 172
$B96    $5173   UNKNOWN  $5173           ; Unknown 5xxx instruction
$B98    $EBDD   UNKNOWN  $EBDD           ; Unknown Exxx instruction
$B9A    $4181   SNE      V1, #81         ; Skip if V1 != 129
$B9C    $302D   SE       V0, #2D         ; Skip if V0 == 45
$B9E    $ABBE   LD       I, $BBE         ; Load BBE into I
$BA0    $3CE3   SE       VC, #E3         ; Skip if VC == 227
$BA2    $BF97   JP       V0, $F97        ; Jump to V0 + F97
$BA4    $9223   UNKNOWN  $9223           ; Unknown 9xxx instruction
$BA6    $B319   JP       V0, $319        ; Jump to V0 + 319
$BA8    $EE43   UNKNOWN  $EE43           ; Unknown Exxx instruction
$BAA    $7B39   ADD      VB, #39         ; Add 57 to VB
$BAC    $09F1   SYS      $9F1            ; System call to 9F1
$BAE    $CA03   RND      VA, #03         ; VA = random & 03
$BB0    $DB07   DRW      VB, V0, #7      ; Draw 7-byte sprite at VB, V0
$BB2    $0B76   SYS      $B76            ; System call to B76
$BB4    $4382   SNE      V3, #82         ; Skip if V3 != 130
$BB6    $0B17   SYS      $B17            ; System call to B17
$BB8    $193D   JP       $93D            ; Jump to 93D
$BBA    $02DE   SYS      $2DE            ; System call to 2DE
$BBC    $D8C1   DRW      V8, VC, #1      ; Draw 1-byte sprite at V8, VC
$BBE    $AF42   LD       I, $F42         ; Load F42 into I
$BC0    $B2C3   JP       V0, $2C3        ; Jump to V0 + 2C3
$BC2    $B859   JP       V0, $859        ; Jump to V0 + 859
$BC4    $31F4   SE       V1, #F4         ; Skip if V1 == 244
$BC6    $F3C4   UNKNOWN  F3C4            ; Unknown Fxxx instruction
$BC8    $86A9   UNKNOWN  86A9            ; Unknown 8xxx instruction
$BCA    $EC55   UNKNOWN  $EC55           ; Unknown Exxx instruction
$BCC    $8EE4   ADD      VE, VE          ; VE += VE, VF = carry
$BCE    $B88A   JP       V0, $88A        ; Jump to V0 + 88A
$BD0    $CBEC   RND      VB, #EC         ; VB = random & EC
$BD2    $731F   ADD      V3, #1F         ; Add 31 to V3
$BD4    $419D   SNE      V1, #9D         ; Skip if V1 != 157
$BD6    $D3B8   DRW      V3, VB, #8      ; Draw 8-byte sprite at V3, VB
$BD8    $5FDA   UNKNOWN  $5FDA           ; Unknown 5xxx instruction
$BDA    $558D   UNKNOWN  $558D           ; Unknown 5xxx instruction
$BDC    $FBD8   UNKNOWN  FBD8            ; Unknown Fxxx instruction
$BDE    $B6EE   JP       V0, $6EE        ; Jump to V0 + 6EE
$BE0    $4F31   SNE      VF, #31         ; Skip if VF != 49
$BE2    $DFDC   DRW      VF, VD, #C      ; Draw 12-byte sprite at VF, VD
$BE4    $E299   UNKNOWN  $E299           ; Unknown Exxx instruction
$BE6    $10A7   JP       $0A7            ; Jump to 0A7
$BE8    $804B   UNKNOWN  804B            ; Unknown 8xxx instruction
$BEA    $F5D3   UNKNOWN  F5D3            ; Unknown Fxxx instruction
$BEC    $7E0C   ADD      VE, #0C         ; Add 12 to VE
$BEE    $411D   SNE      V1, #1D         ; Skip if V1 != 29
$BF0    $D388   DRW      V3, V8, #8      ; Draw 8-byte sprite at V3, V8
$BF2    $B9E0   JP       V0, $9E0        ; Jump to V0 + 9E0
$BF4    $FF7B   UNKNOWN  FF7B            ; Unknown Fxxx instruction
$BF6    $F662   UNKNOWN  F662            ; Unknown Fxxx instruction
$BF8    $F0F4   UNKNOWN  F0F4            ; Unknown Fxxx instruction
$BFA    $8A83   XOR      VA, V8          ; VA ^= V8
$BFC    $DB16   DRW      VB, V1, #6      ; Draw 6-byte sprite at VB, V1
$BFE    $FA74   UNKNOWN  FA74            ; Unknown Fxxx instruction
$C00    $FE46   UNKNOWN  FE46            ; Unknown Fxxx instruction
$C02    $CBC7   RND      VB, #C7         ; VB = random & C7
$C04    $5EE2   UNKNOWN  $5EE2           ; Unknown 5xxx instruction
$C06    $0C6F   SYS      $C6F            ; System call to C6F
$C08    $15EC   JP       $5EC            ; Jump to 5EC
$C0A    $B3B7   JP       V0, $3B7        ; Jump to V0 + 3B7
$C0C    $DD22   DRW      VD, V2, #2      ; Draw 2-byte sprite at VD, V2
$C0E    $1DCD   JP       $DCD            ; Jump to DCD
$C10    $FFE6   UNKNOWN  FFE6            ; Unknown Fxxx instruction
$C12    $309F   SE       V0, #9F         ; Skip if V0 == 159
$C14    $DAF0   DRW      VA, VF, #0      ; Draw 0-byte sprite at VA, VF
$C16    $8984   ADD      V9, V8          ; V9 += V8, VF = carry
$C18    $8718   UNKNOWN  8718            ; Unknown 8xxx instruction
$C1A    $6E15   LD       VE, #15         ; Load 21 into VE
$C1C    $B567   JP       V0, $567        ; Jump to V0 + 567
$C1E    $AB02   LD       I, $B02         ; Load B02 into I
$C20    $31D8   SE       V1, #D8         ; Skip if V1 == 216
$C22    $8844   ADD      V8, V4          ; V8 += V4, VF = carry
$C24    $D255   DRW      V2, V5, #5      ; Draw 5-byte sprite at V2, V5
$C26    $C9D2   RND      V9, #D2         ; V9 = random & D2
$C28    $4701   SNE      V7, #01         ; Skip if V7 != 1
$C2A    $8093   XOR      V0, V9          ; V0 ^= V9
$C2C    $B218   JP       V0, $218        ; Jump to V0 + 218
$C2E    $B0C4   JP       V0, $0C4        ; Jump to V0 + 0C4
$C30    $983A   UNKNOWN  $983A           ; Unknown 9xxx instruction
$C32    $AA09   LD       I, $A09         ; Load A09 into I
$C34    $3C3F   SE       VC, #3F         ; Skip if VC == 63
$C36    $EFD6   UNKNOWN  $EFD6           ; Unknown Exxx instruction
$C38    $3E6F   SE       VE, #6F         ; Skip if VE == 111
$C3A    $693B   LD       V9, #3B         ; Load 59 into V9
$C3C    $C23D   RND      V2, #3D         ; V2 = random & 3D
$C3E    $D1DD   DRW      V1, VD, #D      ; Draw 13-byte sprite at V1, VD
$C40    $5536   UNKNOWN  $5536           ; Unknown 5xxx instruction
$C42    $EE54   UNKNOWN  $EE54           ; Unknown Exxx instruction
$C44    $9ECF   UNKNOWN  $9ECF           ; Unknown 9xxx instruction
$C46    $B9E9   JP       V0, $9E9        ; Jump to V0 + 9E9
$C48    $B0D6   JP       V0, $0D6        ; Jump to V0 + 0D6
$C4A    $9C10   SNE      VC, V1          ; Skip if VC != V1
$C4C    $9267   UNKNOWN  $9267           ; Unknown 9xxx instruction
$C4E    $422F   SNE      V2, #2F         ; Skip if V2 != 47
$C50    $397C   SE       V9, #7C         ; Skip if V9 == 124
$C52    $AF84   LD       I, $F84         ; Load F84 into I
$C54    $184A   JP       $84A            ; Jump to 84A
$C56    $D232   DRW      V2, V3, #2      ; Draw 2-byte sprite at V2, V3
$C58    $6A8F   LD       VA, #8F         ; Load 143 into VA
$C5A    $28A3   CALL     $8A3            ; Call subroutine at 8A3
$C5C    $46F9   SNE      V6, #F9         ; Skip if V6 != 249
$C5E    $2602   CALL     $602            ; Call subroutine at 602
$C60    $0759   SYS      $759            ; System call to 759
$C62    $7BA0   ADD      VB, #A0         ; Add 160 to VB
$C64    $A22E   LD       I, $22E         ; Load 22E into I
$C66    $0CF2   SYS      $CF2            ; System call to CF2
$C68    $7163   ADD      V1, #63         ; Add 99 to V1
$C6A    $2E0B   CALL     $E0B            ; Call subroutine at E0B
$C6C    $2372   CALL     $372            ; Call subroutine at 372
$C6E    $E362   UNKNOWN  $E362           ; Unknown Exxx instruction
$C70    $7A96   ADD      VA, #96         ; Add 150 to VA
$C72    $5350   SE       V3, V5          ; Skip if V3 == V5
$C74    $4C4A   SNE      VC, #4A         ; Skip if VC != 74
$C76    $E569   UNKNOWN  $E569           ; Unknown Exxx instruction
$C78    $3898   SE       V8, #98         ; Skip if V8 == 152
$C7A    $0F5D   SYS      $F5D            ; System call to F5D
$C7C    $30F0   SE       V0, #F0         ; Skip if V0 == 240
$C7E    $DA8F   DRW      VA, V8, #F      ; Draw 15-byte sprite at VA, V8
$C80    $B807   JP       V0, $807        ; Jump to V0 + 807
$C82    $88B9   UNKNOWN  88B9            ; Unknown 8xxx instruction
$C84    $6E3B   LD       VE, #3B         ; Load 59 into VE
$C86    $A275   LD       I, $275         ; Load 275 into I
$C88    $9BDC   UNKNOWN  $9BDC           ; Unknown 9xxx instruction
$C8A    $86AA   UNKNOWN  86AA            ; Unknown 8xxx instruction
$C8C    $759A   ADD      V5, #9A         ; Add 154 to V5
$C8E    $CC10   RND      VC, #10         ; VC = random & 10
$C90    $8717   SUBN     V7, V1          ; V7 = V1 - V7, VF = !borrow
$C92    $4D2D   SNE      VD, #2D         ; Skip if VD != 45
$C94    $FA8E   UNKNOWN  FA8E            ; Unknown Fxxx instruction
$C96    $7D35   ADD      VD, #35         ; Add 53 to VD
$C98    $206B   CALL     $06B            ; Call subroutine at 06B
$C9A    $6FE5   LD       VF, #E5         ; Load 229 into VF
$C9C    $BC3C   JP       V0, $C3C        ; Jump to V0 + C3C
$C9E    $3FCF   SE       VF, #CF         ; Skip if VF == 207
$CA0    $2226   CALL     $226            ; Call subroutine at 226
$CA2    $9806   UNKNOWN  $9806           ; Unknown 9xxx instruction
$CA4    $C848   RND      V8, #48         ; V8 = random & 48
$CA6    $1F62   JP       $F62            ; Jump to F62
$CA8    $646B   LD       V4, #6B         ; Load 107 into V4
$CAA    $D4FF   DRW      V4, VF, #F      ; Draw 15-byte sprite at V4, VF
$CAC    $82FF   UNKNOWN  82FF            ; Unknown 8xxx instruction
$CAE    $C7A6   RND      V7, #A6         ; V7 = random & A6
$CB0    $A9DD   LD       I, $9DD         ; Load 9DD into I
$CB2    $A94A   LD       I, $94A         ; Load 94A into I
$CB4    $082C   SYS      $82C            ; System call to 82C
$CB6    $EDDF   UNKNOWN  $EDDF           ; Unknown Exxx instruction
$CB8    $BA42   JP       V0, $A42        ; Jump to V0 + A42
$CBA    $C4B7   RND      V4, #B7         ; V4 = random & B7
$CBC    $0C94   SYS      $C94            ; System call to C94
$CBE    $5E9E   UNKNOWN  $5E9E           ; Unknown 5xxx instruction
$CC0    $63F9   LD       V3, #F9         ; Load 249 into V3
$CC2    $3FFF   SE       VF, #FF         ; Skip if VF == 255
$CC4    $59D2   UNKNOWN  $59D2           ; Unknown 5xxx instruction
$CC6    $E4A2   UNKNOWN  $E4A2           ; Unknown Exxx instruction
$CC8    $DA99   DRW      VA, V9, #9      ; Draw 9-byte sprite at VA, V9
$CCA    $D279   DRW      V2, V7, #9      ; Draw 9-byte sprite at V2, V7
$CCC    $8421   OR       V4, V2          ; V4 |= V2
$CCE    $9156   UNKNOWN  $9156           ; Unknown 9xxx instruction
$CD0    $3052   SE       V0, #52         ; Skip if V0 == 82
$CD2    $ECD9   UNKNOWN  $ECD9           ; Unknown Exxx instruction
$CD4    $F687   UNKNOWN  F687            ; Unknown Fxxx instruction
$CD6    $C351   RND      V3, #51         ; V3 = random & 51
$CD8    $852A   UNKNOWN  852A            ; Unknown 8xxx instruction
$CDA    $77B5   ADD      V7, #B5         ; Add 181 to V7
$CDC    $822F   UNKNOWN  822F            ; Unknown 8xxx instruction
$CDE    $B2F6   JP       V0, $2F6        ; Jump to V0 + 2F6
$CE0    $3F94   SE       VF, #94         ; Skip if VF == 148
$CE2    $12D1   JP       $2D1            ; Jump to 2D1
$CE4    $ADE1   LD       I, $DE1         ; Load DE1 into I
$CE6    $B8C5   JP       V0, $8C5        ; Jump to V0 + 8C5
$CE8    $42B6   SNE      V2, #B6         ; Skip if V2 != 182
$CEA    $DAA2   DRW      VA, VA, #2      ; Draw 2-byte sprite at VA, VA
$CEC    $1A4F   JP       $A4F            ; Jump to A4F
$CEE    $E821   UNKNOWN  $E821           ; Unknown Exxx instruction
$CF0    $4A6E   SNE      VA, #6E         ; Skip if VA != 110
$CF2    $16EB   JP       $6EB            ; Jump to 6EB
$CF4    $CEDA   RND      VE, #DA         ; VE = random & DA
$CF6    $FC7E   UNKNOWN  FC7E            ; Unknown Fxxx instruction
$CF8    $B337   JP       V0, $337        ; Jump to V0 + 337
$CFA    $2E41   CALL     $E41            ; Call subroutine at E41
$CFC    $ED3F   UNKNOWN  $ED3F           ; Unknown Exxx instruction
$CFE    $F0A8   UNKNOWN  F0A8            ; Unknown Fxxx instruction
$D00    $94D7   UNKNOWN  $94D7           ; Unknown 9xxx instruction
$D02    $40AF   SNE      V0, #AF         ; Skip if V0 != 175
$D04    $5681   UNKNOWN  $5681           ; Unknown 5xxx instruction
$D06    $827A   UNKNOWN  827A            ; Unknown 8xxx instruction
$D08    $037E   SYS      $37E            ; System call to 37E
$D0A    $791F   ADD      V9, #1F         ; Add 31 to V9
$D0C    $ADE7   LD       I, $DE7         ; Load DE7 into I
$D0E    $2040   CALL     $040            ; Call subroutine at 040
$D10    $9AEB   UNKNOWN  $9AEB           ; Unknown 9xxx instruction
$D12    $6BFB   LD       VB, #FB         ; Load 251 into VB
$D14    $714A   ADD      V1, #4A         ; Add 74 to V1
$D16    $3306   SE       V3, #06         ; Skip if V3 == 6
$D18    $F599   UNKNOWN  F599            ; Unknown Fxxx instruction
$D1A    $A883   LD       I, $883         ; Load 883 into I
$D1C    $EC0B   UNKNOWN  $EC0B           ; Unknown Exxx instruction
$D1E    $834C   UNKNOWN  834C            ; Unknown 8xxx instruction
$D20    $CB07   RND      VB, #07         ; VB = random & 07
$D22    $D357   DRW      V3, V5, #7      ; Draw 7-byte sprite at V3, V5
$D24    $CC24   RND      VC, #24         ; VC = random & 24
$D26    $0C33   SYS      $C33            ; System call to C33
$D28    $BB83   JP       V0, $B83        ; Jump to V0 + B83
$D2A    $14E8   JP       $4E8            ; Jump to 4E8
$D2C    $64B4   LD       V4, #B4         ; Load 180 into V4
$D2E    $E031   UNKNOWN  $E031           ; Unknown Exxx instruction
$D30    $4FF8   SNE      VF, #F8         ; Skip if VF != 248
$D32    $20F9   CALL     $0F9            ; Call subroutine at 0F9
$D34    $DE27   DRW      VE, V2, #7      ; Draw 7-byte sprite at VE, V2
$D36    $58B1   UNKNOWN  $58B1           ; Unknown 5xxx instruction
$D38    $BEFA   JP       V0, $EFA        ; Jump to V0 + EFA
$D3A    $0748   SYS      $748            ; System call to 748
$D3C    $3F43   SE       VF, #43         ; Skip if VF == 67
$D3E    $F8E1   UNKNOWN  F8E1            ; Unknown Fxxx instruction
$D40    $A5B1   LD       I, $5B1         ; Load 5B1 into I
$D42    $D72D   DRW      V7, V2, #D      ; Draw 13-byte sprite at V7, V2
$D44    $FE56   UNKNOWN  FE56            ; Unknown Fxxx instruction
$D46    $91E6   UNKNOWN  $91E6           ; Unknown 9xxx instruction
$D48    $75D3   ADD      V5, #D3         ; Add 211 to V5
$D4A    $7A11   ADD      VA, #11         ; Add 17 to VA
$D4C    $360A   SE       V6, #0A         ; Skip if V6 == 10
$D4E    $295A   CALL     $95A            ; Call subroutine at 95A
$D50    $DB0E   DRW      VB, V0, #E      ; Draw 14-byte sprite at VB, V0
$D52    $FDA7   UNKNOWN  FDA7            ; Unknown Fxxx instruction
$D54    $28BD   CALL     $8BD            ; Call subroutine at 8BD
$D56    $0F53   SYS      $F53            ; System call to F53
$D58    $3DF3   SE       VD, #F3         ; Skip if VD == 243
$D5A    $CE25   RND      VE, #25         ; VE = random & 25
$D5C    $6C34   LD       VC, #34         ; Load 52 into VC
$D5E    $6805   LD       V8, #05         ; Load 5 into V8
$D60    $DA9D   DRW      VA, V9, #D      ; Draw 13-byte sprite at VA, V9
$D62    $CBEC   RND      VB, #EC         ; VB = random & EC
$D64    $A5C3   LD       I, $5C3         ; Load 5C3 into I
$D66    $0353   SYS      $353            ; System call to 353
$D68    $8B3D   UNKNOWN  8B3D            ; Unknown 8xxx instruction
$D6A    $CAB0   RND      VA, #B0         ; VA = random & B0
$D6C    $306A   SE       V0, #6A         ; Skip if V0 == 106
$D6E    $1809   JP       $809            ; Jump to 809
$D70    $82AB   UNKNOWN  82AB            ; Unknown 8xxx instruction
$D72    $C298   RND      V2, #98         ; V2 = random & 98
$D74    $7370   ADD      V3, #70         ; Add 112 to V3
$D76    $634B   LD       V3, #4B         ; Load 75 into V3
$D78    $0DC4   SYS      $DC4            ; System call to DC4
$D7A    $9906   UNKNOWN  $9906           ; Unknown 9xxx instruction
$D7C    $0C05   SYS      $C05            ; System call to C05
$D7E    $CFF5   RND      VF, #F5         ; VF = random & F5
$D80    $BCDC   JP       V0, $CDC        ; Jump to V0 + CDC
$D82    $7A9E   ADD      VA, #9E         ; Add 158 to VA
$D84    $5ABA   UNKNOWN  $5ABA           ; Unknown 5xxx instruction
$D86    $454E   SNE      V5, #4E         ; Skip if V5 != 78
$D88    $0F31   SYS      $F31            ; System call to F31
$D8A    $BC3D   JP       V0, $C3D        ; Jump to V0 + C3D
$D8C    $C878   RND      V8, #78         ; V8 = random & 78
$D8E    $BF84   JP       V0, $F84        ; Jump to V0 + F84
$D90    $0D1D   SYS      $D1D            ; System call to D1D
$D92    $C9E6   RND      V9, #E6         ; V9 = random & E6
$D94    $C3DE   RND      V3, #DE         ; V3 = random & DE
$D96    $0771   SYS      $771            ; System call to 771
$D98    $9725   UNKNOWN  $9725           ; Unknown 9xxx instruction
$D9A    $6AD2   LD       VA, #D2         ; Load 210 into VA
$D9C    $1561   JP       $561            ; Jump to 561
$D9E    $8A93   XOR      VA, V9          ; VA ^= V9
$DA0    $CE4B   RND      VE, #4B         ; VE = random & 4B
$DA2    $8179   UNKNOWN  8179            ; Unknown 8xxx instruction
$DA4    $A086   LD       I, $086         ; Load 086 into I
$DA6    $ACC7   LD       I, $CC7         ; Load CC7 into I
$DA8    $8ADB   UNKNOWN  8ADB            ; Unknown 8xxx instruction
$DAA    $1CCB   JP       $CCB            ; Jump to CCB
$DAC    $9825   UNKNOWN  $9825           ; Unknown 9xxx instruction
$DAE    $FE27   UNKNOWN  FE27            ; Unknown Fxxx instruction
$DB0    $1F80   JP       $F80            ; Jump to F80
$DB2    $6D7B   LD       VD, #7B         ; Load 123 into VD
$DB4    $9A73   UNKNOWN  $9A73           ; Unknown 9xxx instruction
$DB6    $422A   SNE      V2, #2A         ; Skip if V2 != 42
$DB8    $B18E   JP       V0, $18E        ; Jump to V0 + 18E
$DBA    $2C21   CALL     $C21            ; Call subroutine at C21
$DBC    $0D98   SYS      $D98            ; System call to D98
$DBE    $7462   ADD      V4, #62         ; Add 98 to V4
$DC0    $0FA9   SYS      $FA9            ; System call to FA9
$DC2    $6F6C   LD       VF, #6C         ; Load 108 into VF
$DC4    $CE87   RND      VE, #87         ; VE = random & 87
$DC6    $699F   LD       V9, #9F         ; Load 159 into V9
$DC8    $2CE3   CALL     $CE3            ; Call subroutine at CE3
$DCA    $E53A   UNKNOWN  $E53A           ; Unknown Exxx instruction
$DCC    $A4E3   LD       I, $4E3         ; Load 4E3 into I
$DCE    $0912   SYS      $912            ; System call to 912
$DD0    $8D97   SUBN     VD, V9          ; VD = V9 - VD, VF = !borrow
$DD2    $8CEA   UNKNOWN  8CEA            ; Unknown 8xxx instruction
$DD4    $5EB0   SE       VE, VB          ; Skip if VE == VB
$DD6    $1AC3   JP       $AC3            ; Jump to AC3
$DD8    $CB5F   RND      VB, #5F         ; VB = random & 5F
$DDA    $88E0   LD       V8, VE          ; V8 = VE
$DDC    $6BA0   LD       VB, #A0         ; Load 160 into VB
$DDE    $04E5   SYS      $4E5            ; System call to 4E5
$DE0    $469D   SNE      V6, #9D         ; Skip if V6 != 157
$DE2    $9C44   UNKNOWN  $9C44           ; Unknown 9xxx instruction
$DE4    $806C   UNKNOWN  806C            ; Unknown 8xxx instruction
$DE6    $A7DD   LD       I, $7DD         ; Load 7DD into I
$DE8    $BC5B   JP       V0, $C5B        ; Jump to V0 + C5B
$DEA    $84AD   UNKNOWN  84AD            ; Unknown 8xxx instruction
$DEC    $B4FB   JP       V0, $4FB        ; Jump to V0 + 4FB
$DEE    $7B05   ADD      VB, #05         ; Add 5 to VB
$DF0    $F920   UNKNOWN  F920            ; Unknown Fxxx instruction
$DF2    $6260   LD       V2, #60         ; Load 96 into V2
$DF4    $A3C5   LD       I, $3C5         ; Load 3C5 into I
$DF6    $C6C6   RND      V6, #C6         ; V6 = random & C6
$DF8    $1639   JP       $639            ; Jump to 639
$DFA    $9D63   UNKNOWN  $9D63           ; Unknown 9xxx instruction
$DFC    $7125   ADD      V1, #25         ; Add 37 to V1
$DFE    $BC8A   JP       V0, $C8A        ; Jump to V0 + C8A
$E00    $336F   SE       V3, #6F         ; Skip if V3 == 111
$E02    $26C3   CALL     $6C3            ; Call subroutine at 6C3
$E04    $FF82   UNKNOWN  FF82            ; Unknown Fxxx instruction
$E06    $6D5D   LD       VD, #5D         ; Load 93 into VD
$E08    $3754   SE       V7, #54         ; Skip if V7 == 84
$E0A    $5AE8   UNKNOWN  $5AE8           ; Unknown 5xxx instruction
$E0C    $D082   DRW      V0, V8, #2      ; Draw 2-byte sprite at V0, V8
$E0E    $E80E   UNKNOWN  $E80E           ; Unknown Exxx instruction
$E10    $F16E   UNKNOWN  F16E            ; Unknown Fxxx instruction
$E12    $F73D   UNKNOWN  F73D            ; Unknown Fxxx instruction
$E14    $797E   ADD      V9, #7E         ; Add 126 to V9
$E16    $54D6   UNKNOWN  $54D6           ; Unknown 5xxx instruction
$E18    $20E8   CALL     $0E8            ; Call subroutine at 0E8
$E1A    $40B2   SNE      V0, #B2         ; Skip if V0 != 178
$E1C    $9B73   UNKNOWN  $9B73           ; Unknown 9xxx instruction
$E1E    $624E   LD       V2, #4E         ; Load 78 into V2
$E20    $67F2   LD       V7, #F2         ; Load 242 into V7
$E22    $F71E   ADD      I, V7           ; I += V7
$E24    $9D94   UNKNOWN  $9D94           ; Unknown 9xxx instruction
$E26    $1F40   JP       $F40            ; Jump to F40
$E28    $D476   DRW      V4, V7, #6      ; Draw 6-byte sprite at V4, V7
$E2A    $86ED   UNKNOWN  86ED            ; Unknown 8xxx instruction
$E2C    $6CFD   LD       VC, #FD         ; Load 253 into VC
$E2E    $100A   JP       $00A            ; Jump to 00A
$E30    $3AE7   SE       VA, #E7         ; Skip if VA == 231
$E32    $2F81   CALL     $F81            ; Call subroutine at F81
$E34    $0FF2   SYS      $FF2            ; System call to FF2
$E36    $37F1   SE       V7, #F1         ; Skip if V7 == 241
$E38    $3141   SE       V1, #41         ; Skip if V1 == 65
$E3A    $7B4D   ADD      VB, #4D         ; Add 77 to VB
$E3C    $3FD0   SE       VF, #D0         ; Skip if VF == 208
$E3E    $0C49   SYS      $C49            ; System call to C49
$E40    $0545   SYS      $545            ; System call to 545
$E42    $C8CC   RND      V8, #CC         ; V8 = random & CC
$E44    $4BCC   SNE      VB, #CC         ; Skip if VB != 204
$E46    $C138   RND      V1, #38         ; V1 = random & 38
$E48    $66F9   LD       V6, #F9         ; Load 249 into V6
$E4A    $FEC6   UNKNOWN  FEC6            ; Unknown Fxxx instruction
$E4C    $980A   UNKNOWN  $980A           ; Unknown 9xxx instruction
$E4E    $88D9   UNKNOWN  88D9            ; Unknown 8xxx instruction
$E50    $0C0F   SYS      $C0F            ; System call to C0F
$E52    $28F1   CALL     $8F1            ; Call subroutine at 8F1
$E54    $2601   CALL     $601            ; Call subroutine at 601
$E56    $1911   JP       $911            ; Jump to 911
$E58    $A456   LD       I, $456         ; Load 456 into I
$E5A    $CE8C   RND      VE, #8C         ; VE = random & 8C
$E5C    $C284   RND      V2, #84         ; V2 = random & 84
$E5E    $EB2D   UNKNOWN  $EB2D           ; Unknown Exxx instruction
$E60    $1479   JP       $479            ; Jump to 479
$E62    $4197   SNE      V1, #97         ; Skip if V1 != 151
$E64    $F1EA   UNKNOWN  F1EA            ; Unknown Fxxx instruction
$E66    $1103   JP       $103            ; Jump to 103
$E68    $CD7F   RND      VD, #7F         ; VD = random & 7F
$E6A    $4BCE   SNE      VB, #CE         ; Skip if VB != 206
$E6C    $865F   UNKNOWN  865F            ; Unknown 8xxx instruction
$E6E    $7AE4   ADD      VA, #E4         ; Add 228 to VA
$E70    $9FB1   UNKNOWN  $9FB1           ; Unknown 9xxx instruction
$E72    $A886   LD       I, $886         ; Load 886 into I
$E74    $50BD   UNKNOWN  $50BD           ; Unknown 5xxx instruction
$E76    $DF5C   DRW      VF, V5, #C      ; Draw 12-byte sprite at VF, V5
$E78    $8858   UNKNOWN  8858            ; Unknown 8xxx instruction
$E7A    $AD00   LD       I, $D00         ; Load D00 into I
$E7C    $2865   CALL     $865            ; Call subroutine at 865
$E7E    $20B1   CALL     $0B1            ; Call subroutine at 0B1
$E80    $2406   CALL     $406            ; Call subroutine at 406
$E82    $EBB8   UNKNOWN  $EBB8           ; Unknown Exxx instruction
$E84    $008C   SYS      $08C            ; System call to 08C
$E86    $266B   CALL     $66B            ; Call subroutine at 66B
$E88    $632A   LD       V3, #2A         ; Load 42 into V3
$E8A    $6939   LD       V9, #39         ; Load 57 into V9
$E8C    $F9D9   UNKNOWN  F9D9            ; Unknown Fxxx instruction
$E8E    $8DA7   SUBN     VD, VA          ; VD = VA - VD, VF = !borrow
$E90    $7391   ADD      V3, #91         ; Add 145 to V3
$E92    $23C0   CALL     $3C0            ; Call subroutine at 3C0
$E94    $F815   LD       DT, V8          ; Delay timer = V8
$E96    $AEF1   LD       I, $EF1         ; Load EF1 into I
$E98    $2175   CALL     $175            ; Call subroutine at 175
$E9A    $67B1   LD       V7, #B1         ; Load 177 into V7
$E9C    $CCB7   RND      VC, #B7         ; VC = random & B7
$E9E    $C8CF   RND      V8, #CF         ; V8 = random & CF
$EA0    $2D22   CALL     $D22            ; Call subroutine at D22
$EA2    $0096   SYS      $096            ; System call to 096
$EA4    $C2D9   RND      V2, #D9         ; V2 = random & D9
$EA6    $7C72   ADD      VC, #72         ; Add 114 to VC
$EA8    $0144   SYS      $144            ; System call to 144
$EAA    $C749   RND      V7, #49         ; V7 = random & 49
$EAC    $7D37   ADD      VD, #37         ; Add 55 to VD
$EAE    $0AE0   SYS      $AE0            ; System call to AE0
$EB0    $BC29   JP       V0, $C29        ; Jump to V0 + C29
$EB2    $A253   LD       I, $253         ; Load 253 into I
$EB4    $FA75   UNKNOWN  FA75            ; Unknown Fxxx instruction
$EB6    $2D51   CALL     $D51            ; Call subroutine at D51
$EB8    $0184   SYS      $184            ; System call to 184
$EBA    $D28B   DRW      V2, V8, #B      ; Draw 11-byte sprite at V2, V8
$EBC    $FF4B   UNKNOWN  FF4B            ; Unknown Fxxx instruction
$EBE    $1359   JP       $359            ; Jump to 359
$EC0    $5F3E   UNKNOWN  $5F3E           ; Unknown 5xxx instruction
$EC2    $5852   UNKNOWN  $5852           ; Unknown 5xxx instruction
$EC4    $42B0   SNE      V2, #B0         ; Skip if V2 != 176
$EC6    $B330   JP       V0, $330        ; Jump to V0 + 330
$EC8    $4F75   SNE      VF, #75         ; Skip if VF != 117
$ECA    $3F56   SE       VF, #56         ; Skip if VF == 86
$ECC    $B770   JP       V0, $770        ; Jump to V0 + 770
$ECE    $C009   RND      V0, #09         ; V0 = random & 09
$ED0    $1ED4   JP       $ED4            ; Jump to ED4
$ED2    $F69C   UNKNOWN  F69C            ; Unknown Fxxx instruction
$ED4    $793E   ADD      V9, #3E         ; Add 62 to V9
$ED6    $1C8A   JP       $C8A            ; Jump to C8A
$ED8    $61AD   LD       V1, #AD         ; Load 173 into V1
$EDA    $5DD4   UNKNOWN  $5DD4           ; Unknown 5xxx instruction
$EDC    $3E67   SE       VE, #67         ; Skip if VE == 103
$EDE    $5D92   UNKNOWN  $5D92           ; Unknown 5xxx instruction
$EE0    $25D2   CALL     $5D2            ; Call subroutine at 5D2
$EE2    $E42D   UNKNOWN  $E42D           ; Unknown Exxx instruction
$EE4    $0F75   SYS      $F75            ; System call to F75
$EE6    $4D83   SNE      VD, #83         ; Skip if VD != 131
$EE8    $48D8   SNE      V8, #D8         ; Skip if V8 != 216
$EEA    $5BF2   UNKNOWN  $5BF2           ; Unknown 5xxx instruction
$EEC    $9F3B   UNKNOWN  $9F3B           ; Unknown 9xxx instruction
$EEE    $530D   UNKNOWN  $530D           ; Unknown 5xxx instruction
$EF0    $3F64   SE       VF, #64         ; Skip if VF == 100
$EF2    $8BA6   SHR      VB              ; VB >>= 1, VF = LSB
$EF4    $FE12   UNKNOWN  FE12            ; Unknown Fxxx instruction
$EF6    $9E33   UNKNOWN  $9E33           ; Unknown 9xxx instruction
$EF8    $BA13   JP       V0, $A13        ; Jump to V0 + A13
$EFA    $F986   UNKNOWN  F986            ; Unknown Fxxx instruction
$EFC    $330C   SE       V3, #0C         ; Skip if V3 == 12
$EFE    $712B   ADD      V1, #2B         ; Add 43 to V1
$F00    $0C16   SYS      $C16            ; System call to C16
$F02    $5267   UNKNOWN  $5267           ; Unknown 5xxx instruction
$F04    $C171   RND      V1, #71         ; V1 = random & 71
$F06    $5412   UNKNOWN  $5412           ; Unknown 5xxx instruction
$F08    $FD91   UNKNOWN  FD91            ; Unknown Fxxx instruction
$F0A    $0401   SYS      $401            ; System call to 401
$F0C    $C00B   RND      V0, #0B         ; V0 = random & 0B
$F0E    $E115   UNKNOWN  $E115           ; Unknown Exxx instruction
$F10    $73A1   ADD      V3, #A1         ; Add 161 to V3
$F12    $D3B8   DRW      V3, VB, #8      ; Draw 8-byte sprite at V3, VB
$F14    $E627   UNKNOWN  $E627           ; Unknown Exxx instruction
$F16    $08D2   SYS      $8D2            ; System call to 8D2
$F18    $CF4D   RND      VF, #4D         ; VF = random & 4D
$F1A    $2F90   CALL     $F90            ; Call subroutine at F90
$F1C    $4872   SNE      V8, #72         ; Skip if V8 != 114
$F1E    $741A   ADD      V4, #1A         ; Add 26 to V4
$F20    $646E   LD       V4, #6E         ; Load 110 into V4
$F22    $A80A   LD       I, $80A         ; Load 80A into I
$F24    $C435   RND      V4, #35         ; V4 = random & 35
$F26    $CD19   RND      VD, #19         ; VD = random & 19
$F28    $78A2   ADD      V8, #A2         ; Add 162 to V8
$F2A    $AA30   LD       I, $A30         ; Load A30 into I
$F2C    $482E   SNE      V8, #2E         ; Skip if V8 != 46
$F2E    $6A73   LD       VA, #73         ; Load 115 into VA
$F30    $BD20   JP       V0, $D20        ; Jump to V0 + D20
$F32    $53BC   UNKNOWN  $53BC           ; Unknown 5xxx instruction
$F34    $0666   SYS      $666            ; System call to 666
$F36    $63DA   LD       V3, #DA         ; Load 218 into V3
$F38    $7B82   ADD      VB, #82         ; Add 130 to VB
$F3A    $9447   UNKNOWN  $9447           ; Unknown 9xxx instruction
$F3C    $3A0F   SE       VA, #0F         ; Skip if VA == 15
$F3E    $3E42   SE       VE, #42         ; Skip if VE == 66
$F40    $DFB6   DRW      VF, VB, #6      ; Draw 6-byte sprite at VF, VB
$F42    $37D0   SE       V7, #D0         ; Skip if V7 == 208
$F44    $1AE3   JP       $AE3            ; Jump to AE3
$F46    $6250   LD       V2, #50         ; Load 80 into V2
$F48    $B5DB   JP       V0, $5DB        ; Jump to V0 + 5DB
$F4A    $FA89   UNKNOWN  FA89            ; Unknown Fxxx instruction
$F4C    $599F   UNKNOWN  $599F           ; Unknown 5xxx instruction
$F4E    $7876   ADD      V8, #76         ; Add 118 to V8
$F50    $F827   UNKNOWN  F827            ; Unknown Fxxx instruction
$F52    $1220   JP       $220            ; Jump to 220
$F54    $B0F6   JP       V0, $0F6        ; Jump to V0 + 0F6
$F56    $66FA   LD       V6, #FA         ; Load 250 into V6
$F58    $C3AC   RND      V3, #AC         ; V3 = random & AC
$F5A    $FBB4   UNKNOWN  FBB4            ; Unknown Fxxx instruction
$F5C    $CD45   RND      VD, #45         ; VD = random & 45
$F5E    $AD4F   LD       I, $D4F         ; Load D4F into I
$F60    $2DB9   CALL     $DB9            ; Call subroutine at DB9
$F62    $F359   UNKNOWN  F359            ; Unknown Fxxx instruction
$F64    $3038   SE       V0, #38         ; Skip if V0 == 56
$F66    $58B5   UNKNOWN  $58B5           ; Unknown 5xxx instruction
$F68    $B846   JP       V0, $846        ; Jump to V0 + 846
$F6A    $C9D9   RND      V9, #D9         ; V9 = random & D9
$F6C    $A7B9   LD       I, $7B9         ; Load 7B9 into I
$F6E    $B9C5   JP       V0, $9C5        ; Jump to V0 + 9C5
$F70    $7956   ADD      V9, #56         ; Add 86 to V9
$F72    $B49C   JP       V0, $49C        ; Jump to V0 + 49C
$F74    $86F3   XOR      V6, VF          ; V6 ^= VF
$F76    $1DBA   JP       $DBA            ; Jump to DBA
$F78    $1387   JP       $387            ; Jump to 387
$F7A    $C1D6   RND      V1, #D6         ; V1 = random & D6
$F7C    $AE60   LD       I, $E60         ; Load E60 into I
$F7E    $17EC   JP       $7EC            ; Jump to 7EC
$F80    $206D   CALL     $06D            ; Call subroutine at 06D
$F82    $93FD   UNKNOWN  $93FD           ; Unknown 9xxx instruction
$F84    $28CF   CALL     $8CF            ; Call subroutine at 8CF
$F86    $2538   CALL     $538            ; Call subroutine at 538
$F88    $0A50   SYS      $A50            ; System call to A50
$F8A    $C619   RND      V6, #19         ; V6 = random & 19
$F8C    $2A41   CALL     $A41            ; Call subroutine at A41
$F8E    $3C6A   SE       VC, #6A         ; Skip if VC == 106
$F90    $0F01   SYS      $F01            ; System call to F01
$F92    $822E   SHL      V2              ; V2 <<= 1, VF = MSB
$F94    $F4F4   UNKNOWN  F4F4            ; Unknown Fxxx instruction
$F96    $F938   UNKNOWN  F938            ; Unknown Fxxx instruction
$F98    $2478   CALL     $478            ; Call subroutine at 478
$F9A    $0569   SYS      $569            ; System call to 569
$F9C    $56F3   UNKNOWN  $56F3           ; Unknown 5xxx instruction
$F9E    $3E8E   SE       VE, #8E         ; Skip if VE == 142
$FA0    $D768   DRW      V7, V6, #8      ; Draw 8-byte sprite at V7, V6
$FA2    $6FA4   LD       VF, #A4         ; Load 164 into VF
$FA4    $1CEA   JP       $CEA            ; Jump to CEA
$FA6    $CC59   RND      VC, #59         ; VC = random & 59
$FA8    $421E   SNE      V2, #1E         ; Skip if V2 != 30
$FAA    $A0D1   LD       I, $0D1         ; Load 0D1 into I
$FAC    $5367   UNKNOWN  $5367           ; Unknown 5xxx instruction
$FAE    $48D8   SNE      V8, #D8         ; Skip if V8 != 216
$FB0    $0B4F   SYS      $B4F            ; System call to B4F
$FB2    $3A85   SE       VA, #85         ; Skip if VA == 133
$FB4    $6583   LD       V5, #83         ; Load 131 into V5
$FB6    $39AC   SE       V9, #AC         ; Skip if V9 == 172
$FB8    $4C75   SNE      VC, #75         ; Skip if VC != 117
$FBA    $43AF   SNE      V3, #AF         ; Skip if V3 != 175
$FBC    $EE12   UNKNOWN  $EE12           ; Unknown Exxx instruction
$FBE    $7C77   ADD      VC, #77         ; Add 119 to VC
$FC0    $706E   ADD      V0, #6E         ; Add 110 to V0
$FC2    $FDB7   UNKNOWN  FDB7            ; Unknown Fxxx instruction
$FC4    $1847   JP       $847            ; Jump to 847
$FC6    $68CB   LD       V8, #CB         ; Load 203 into V8
$FC8    $5367   UNKNOWN  $5367           ; Unknown 5xxx instruction
$FCA    $B639   JP       V0, $639        ; Jump to V0 + 639
$FCC    $51AC   UNKNOWN  $51AC           ; Unknown 5xxx instruction
$FCE    $6517   LD       V5, #17         ; Load 23 into V5
$FD0    $DBA6   DRW      VB, VA, #6      ; Draw 6-byte sprite at VB, VA
$FD2    $3C98   SE       VC, #98         ; Skip if VC == 152
$FD4    $7D8C   ADD      VD, #8C         ; Add 140 to VD
$FD6    $28A1   CALL     $8A1            ; Call subroutine at 8A1
$FD8    $71C2   ADD      V1, #C2         ; Add 194 to V1
$FDA    $17A5   JP       $7A5            ; Jump to 7A5
$FDC    $87CD   UNKNOWN  87CD            ; Unknown 8xxx instruction
$FDE    $5430   SE       V4, V3          ; Skip if V4 == V3
$FE0    $FBAD   UNKNOWN  FBAD            ; Unknown Fxxx instruction
$FE2    $7F51   ADD      VF, #51         ; Add 81 to VF
$FE4    $8042   AND      V0, V4          ; V0 &= V4
$FE6    $2C0E   CALL     $C0E            ; Call subroutine at C0E
$FE8    $4950   SNE      V9, #50         ; Skip if V9 != 80
$FEA    $0E05   SYS      $E05            ; System call to E05
$FEC    $BE97   JP       V0, $E97        ; Jump to V0 + E97
$FEE    $7696   ADD      V6, #96         ; Add 150 to V6
$FF0    $0791   SYS      $791            ; System call to 791
$FF2    $B250   JP       V0, $250        ; Jump to V0 + 250
$FF4    $A86F   LD       I, $86F         ; Load 86F into I
$FF6    $AD8D   LD       I, $D8D         ; Load D8D into I
$FF8    $6544   LD       V5, #44         ; Load 68 into V5
$FFA    $EB51   UNKNOWN  $EB51           ; Unknown Exxx instruction
$FFC    $DAD8   DRW      VA, VD, #8      ; Draw 8-byte sprite at VA, VD
$FFE    $A710   LD       I, $710         ; Load 710 into I

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 468 (26.1%)
  JP      : 232 (12.9%)
  LD      : 223 (12.4%)
  SE      : 135 ( 7.5%)
  CALL    : 118 ( 6.6%)
  RND     : 117 ( 6.5%)
  ADD     : 114 ( 6.4%)
  SYS     : 114 ( 6.4%)
  SNE     : 113 ( 6.3%)
  DRW     : 112 ( 6.2%)
  SUBN    :  10 ( 0.6%)
  OR      :   9 ( 0.5%)
  SHL     :   9 ( 0.5%)
  XOR     :   6 ( 0.3%)
  SHR     :   6 ( 0.3%)
  AND     :   3 ( 0.2%)
  SUB     :   2 ( 0.1%)
  SKNP    :   1 ( 0.1%)

Memory Operations: 337 (18.8%)
Arithmetic Operations: 144 (8.0%)
