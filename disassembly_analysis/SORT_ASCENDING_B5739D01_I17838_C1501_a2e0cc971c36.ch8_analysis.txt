
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B5739D01_I17838_C1501_a2e0cc971c36.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 5739
Instance: 17838
Direction: ascending
Final Array: [1, 8, 8, 19, 24, 151, 186, 226]
Operations: R:0 W:3 C:135 S:4

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 104
Sort Array References:
  $23C: LD I, $697 ; Load 697 into I
  $25A: LD I, $98B ; Load 98B into I
  $264: LD I, $370 ; Load 370 into I
  $2DA: LD I, $367 ; Load 367 into I
  $2E2: LD I, $F0F ; Load F0F into I
  $2EA: LD I, $768 ; Load 768 into I
  $322: LD I, $F0E ; Load F0E into I
  $36A: LD I, $1C0 ; Load 1C0 into I
  $390: LD I, $E3F ; Load E3F into I
  $3A6: LD I, $9CB ; Load 9CB into I
  $3E4: LD I, $33C ; Load 33C into I
  $3EE: LD I, $5F4 ; Load 5F4 into I
  $416: LD I, $233 ; Load 233 into I
  $4A0: LD I, $788 ; Load 788 into I
  $4CC: LD I, $9C6 ; Load 9C6 into I
  $4D0: LD I, $0B5 ; Load 0B5 into I
  $524: LD I, $166 ; Load 166 into I
  $542: LD I, $0A3 ; Load 0A3 into I
  $574: LD I, $9E7 ; Load 9E7 into I
  $576: LD I, $74D ; Load 74D into I
  $5B2: LD I, $D9C ; Load D9C into I
  $5BE: LD I, $93D ; Load 93D into I
  $5C4: LD I, $4A1 ; Load 4A1 into I
  $5C8: LD I, $01A ; Load 01A into I
  $5F2: LD I, $AC1 ; Load AC1 into I
  $5FE: LD I, $FD5 ; Load FD5 into I
  $60A: LD I, $E5A ; Load E5A into I
  $624: LD I, $15C ; Load 15C into I
  $628: LD I, $CFF ; Load CFF into I
  $62C: LD I, $BBC ; Load BBC into I
  $664: LD I, $ED4 ; Load ED4 into I
  $66A: LD I, $939 ; Load 939 into I
  $682: LD I, $4B6 ; Load 4B6 into I
  $692: LD I, $06F ; Load 06F into I
  $6A0: LD I, $676 ; Load 676 into I
  $6A4: LD I, $F2C ; Load F2C into I
  $6AE: LD I, $C34 ; Load C34 into I
  $6DA: LD I, $FD3 ; Load FD3 into I
  $752: LD I, $04A ; Load 04A into I
  $764: LD I, $356 ; Load 356 into I
  $768: LD I, $F36 ; Load F36 into I
  $7B0: LD I, $AAD ; Load AAD into I
  $7B4: LD I, $300 ; Load 300 into I
  $7C8: LD I, $848 ; Load 848 into I
  $7D4: LD I, $856 ; Load 856 into I
  $800: LD I, $2B3 ; Load 2B3 into I
  $858: LD I, $EC9 ; Load EC9 into I
  $864: LD I, $AF8 ; Load AF8 into I
  $866: LD I, $F1B ; Load F1B into I
  $886: LD I, $DE3 ; Load DE3 into I
  $89E: LD I, $678 ; Load 678 into I
  $940: LD I, $6C1 ; Load 6C1 into I
  $954: LD I, $2CE ; Load 2CE into I
  $966: LD I, $35E ; Load 35E into I
  $968: LD I, $F62 ; Load F62 into I
  $974: LD I, $467 ; Load 467 into I
  $988: LD I, $0DA ; Load 0DA into I
  $98A: LD I, $647 ; Load 647 into I
  $9B2: LD I, $A62 ; Load A62 into I
  $9BA: LD I, $6CF ; Load 6CF into I
  $9BC: LD I, $4FD ; Load 4FD into I
  $9D6: LD I, $075 ; Load 075 into I
  $9DA: LD I, $20B ; Load 20B into I
  $9FC: LD I, $B6D ; Load B6D into I
  $A0C: LD I, $941 ; Load 941 into I
  $A44: LD I, $796 ; Load 796 into I
  $A4A: LD I, $36F ; Load 36F into I
  $AB6: LD I, $8E4 ; Load 8E4 into I
  $ABE: LD I, $A65 ; Load A65 into I
  $AD8: LD I, $B6F ; Load B6F into I
  $AE8: LD I, $580 ; Load 580 into I
  $B36: LD I, $82D ; Load 82D into I
  $B3A: LD I, $759 ; Load 759 into I
  $B3E: LD I, $EA0 ; Load EA0 into I
  $B60: LD I, $C0F ; Load C0F into I
  $B7C: LD I, $BCC ; Load BCC into I
  $B8A: LD I, $CA2 ; Load CA2 into I
  $B9A: LD I, $38E ; Load 38E into I
  $BC0: LD I, $977 ; Load 977 into I
  $BEC: LD I, $A04 ; Load A04 into I
  $C5C: LD I, $93B ; Load 93B into I
  $C8C: LD I, $B85 ; Load B85 into I
  $CCC: LD I, $8E5 ; Load 8E5 into I
  $CE2: LD I, $1CD ; Load 1CD into I
  $CE8: LD I, $483 ; Load 483 into I
  $CEC: LD I, $E2A ; Load E2A into I
  $D26: LD I, $AAB ; Load AAB into I
  $D52: LD I, $1E3 ; Load 1E3 into I
  $D60: LD I, $AD4 ; Load AD4 into I
  $D74: LD I, $C85 ; Load C85 into I
  $D9C: LD I, $EA5 ; Load EA5 into I
  $DC6: LD I, $303 ; Load 303 into I
  $DD0: LD I, $F40 ; Load F40 into I
  $DDC: LD I, $A63 ; Load A63 into I
  $E16: LD I, $E28 ; Load E28 into I
  $E8A: LD I, $278 ; Load 278 into I
  $EA2: LD I, $289 ; Load 289 into I
  $EA6: LD I, $7AC ; Load 7AC into I
  $F02: LD I, $7EF ; Load 7EF into I
  $F2A: LD I, $957 ; Load 957 into I
  $F60: LD I, $F4F ; Load F4F into I
  $FAE: LD I, $6A4 ; Load 6A4 into I
  $FC6: LD I, $BF5 ; Load BF5 into I
  $FDA: LD I, $9C1 ; Load 9C1 into I

CONTROL FLOW ANALYSIS:
Jumps: 223
Calls: 128
Branches: 245
Loops: 133
Loop Structures:
  $20E -> $015 (backward jump)
  $280 -> $140 (backward jump)
  $28C -> $0EA (backward jump)
  $2DC -> $151 (backward jump)
  $2DE -> $18E (backward jump)
  $2F4 -> $09C (backward jump)
  $2FC -> $0CA (backward jump)
  $3A4 -> $046 (backward jump)
  $40A -> $0C9 (backward jump)
  $476 -> $329 (backward jump)
  $4A6 -> $006 (backward jump)
  $4B6 -> $1CE (backward jump)
  $4E6 -> $419 (backward jump)
  $4EA -> $0AF (backward jump)
  $500 -> $3CE (backward jump)
  $514 -> $0D2 (backward jump)
  $51E -> $39B (backward jump)
  $582 -> $0CC (backward jump)
  $584 -> $165 (backward jump)
  $60C -> $1A5 (backward jump)
  $612 -> $402 (backward jump)
  $618 -> $079 (backward jump)
  $620 -> $4F0 (backward jump)
  $636 -> $4BC (backward jump)
  $666 -> $2A4 (backward jump)
  $704 -> $078 (backward jump)
  $71A -> $09E (backward jump)
  $754 -> $489 (backward jump)
  $756 -> $058 (backward jump)
  $77A -> $576 (backward jump)
  $798 -> $164 (backward jump)
  $7C6 -> $03F (backward jump)
  $7CA -> $665 (backward jump)
  $7CC -> $608 (backward jump)
  $7DC -> $2EA (backward jump)
  $830 -> $2CD (backward jump)
  $832 -> $794 (backward jump)
  $838 -> $1CD (backward jump)
  $84C -> $537 (backward jump)
  $86E -> $0E6 (backward jump)
  $88E -> $09D (backward jump)
  $8CE -> $321 (backward jump)
  $8D8 -> $2BC (backward jump)
  $8F2 -> $65C (backward jump)
  $8FC -> $042 (backward jump)
  $902 -> $6FF (backward jump)
  $91C -> $813 (backward jump)
  $980 -> $3C6 (backward jump)
  $982 -> $6C5 (backward jump)
  $986 -> $0F9 (backward jump)
  $98C -> $6B0 (backward jump)
  $98E -> $813 (backward jump)
  $992 -> $128 (backward jump)
  $994 -> $281 (backward jump)
  $9B6 -> $39F (backward jump)
  $9E4 -> $8A9 (backward jump)
  $9F8 -> $4D4 (backward jump)
  $A02 -> $319 (backward jump)
  $A20 -> $781 (backward jump)
  $A26 -> $2F9 (backward jump)
  $A42 -> $355 (backward jump)
  $A78 -> $8E0 (backward jump)
  $A7E -> $3B2 (backward jump)
  $A8C -> $0F8 (backward jump)
  $AA2 -> $794 (backward jump)
  $AA8 -> $6EA (backward jump)
  $AC0 -> $397 (backward jump)
  $AC2 -> $89B (backward jump)
  $AC6 -> $48A (backward jump)
  $ACE -> $9F7 (backward jump)
  $AE0 -> $471 (backward jump)
  $AF0 -> $928 (backward jump)
  $AFE -> $08E (backward jump)
  $B12 -> $877 (backward jump)
  $B2A -> $330 (backward jump)
  $B44 -> $71C (backward jump)
  $B5A -> $6B2 (backward jump)
  $B5E -> $A24 (backward jump)
  $B64 -> $538 (backward jump)
  $B72 -> $2D0 (backward jump)
  $B74 -> $20A (backward jump)
  $B8C -> $B73 (backward jump)
  $B9C -> $A42 (backward jump)
  $BB4 -> $3E9 (backward jump)
  $BC2 -> $9D8 (backward jump)
  $BDA -> $ACB (backward jump)
  $BE6 -> $581 (backward jump)
  $C30 -> $250 (backward jump)
  $C4A -> $230 (backward jump)
  $C62 -> $886 (backward jump)
  $C86 -> $56F (backward jump)
  $C90 -> $28A (backward jump)
  $C9A -> $800 (backward jump)
  $CA6 -> $152 (backward jump)
  $CDA -> $7EF (backward jump)
  $D02 -> $58D (backward jump)
  $D30 -> $2DF (backward jump)
  $D32 -> $01D (backward jump)
  $D5C -> $3AF (backward jump)
  $D62 -> $631 (backward jump)
  $D66 -> $58A (backward jump)
  $D8A -> $A38 (backward jump)
  $DC0 -> $354 (backward jump)
  $DC4 -> $534 (backward jump)
  $DCC -> $052 (backward jump)
  $DE2 -> $A21 (backward jump)
  $E14 -> $C7D (backward jump)
  $E28 -> $5EA (backward jump)
  $E4A -> $2CA (backward jump)
  $E56 -> $34C (backward jump)
  $E5A -> $0A3 (backward jump)
  $E6E -> $B73 (backward jump)
  $E70 -> $11A (backward jump)
  $E76 -> $B1E (backward jump)
  $E7A -> $D41 (backward jump)
  $E90 -> $A6A (backward jump)
  $EAA -> $5E1 (backward jump)
  $EF2 -> $A01 (backward jump)
  $EFC -> $A8E (backward jump)
  $EFE -> $B4B (backward jump)
  $F04 -> $D24 (backward jump)
  $F50 -> $CB7 (backward jump)
  $F64 -> $5E5 (backward jump)
  $F6A -> $7DD (backward jump)
  $F76 -> $EF6 (backward jump)
  $F82 -> $6A2 (backward jump)
  $F96 -> $1FA (backward jump)
  $FA0 -> $BB4 (backward jump)
  $FA2 -> $3B4 (backward jump)
  $FB6 -> $018 (backward jump)
  $FCC -> $579 (backward jump)
  $FE6 -> $E57 (backward jump)
  $FFC -> $790 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $6FDC   LD       VF, #DC         ; Load 220 into VF
$202    $6821   LD       V8, #21         ; Load 33 into V8
$204    $E3E0   UNKNOWN  $E3E0           ; Unknown Exxx instruction
$206    $0E45   SYS      $E45            ; System call to E45
$208    $448F   SNE      V4, #8F         ; Skip if V4 != 143
$20A    $4688   SNE      V6, #88         ; Skip if V6 != 136
$20C    $F6A0   UNKNOWN  F6A0            ; Unknown Fxxx instruction
$20E    $1015   JP       $015            ; Jump to 015
$210    $8218   UNKNOWN  8218            ; Unknown 8xxx instruction
$212    $2FDD   CALL     $FDD            ; Call subroutine at FDD
$214    $1D43   JP       $D43            ; Jump to D43
$216    $1A6C   JP       $A6C            ; Jump to A6C
$218    $7DE8   ADD      VD, #E8         ; Add 232 to VD
$21A    $D544   DRW      V5, V4, #4      ; Draw 4-byte sprite at V5, V4
$21C    $F46D   UNKNOWN  F46D            ; Unknown Fxxx instruction
$21E    $0943   SYS      $943            ; System call to 943
$220    $DF2D   DRW      VF, V2, #D      ; Draw 13-byte sprite at VF, V2
$222    $6008   LD       V0, #08         ; Load 8 into V0
$224    $DC83   DRW      VC, V8, #3      ; Draw 3-byte sprite at VC, V8
$226    $6A53   LD       VA, #53         ; Load 83 into VA
$228    $FC95   UNKNOWN  FC95            ; Unknown Fxxx instruction
$22A    $7401   ADD      V4, #01         ; Add 1 to V4
$22C    $57C3   UNKNOWN  $57C3           ; Unknown 5xxx instruction
$22E    $F451   UNKNOWN  F451            ; Unknown Fxxx instruction
$230    $B751   JP       V0, $751        ; Jump to V0 + 751
$232    $E8C3   UNKNOWN  $E8C3           ; Unknown Exxx instruction
$234    $8B5A   UNKNOWN  8B5A            ; Unknown 8xxx instruction
$236    $1BA8   JP       $BA8            ; Jump to BA8
$238    $E1BC   UNKNOWN  $E1BC           ; Unknown Exxx instruction
$23A    $C245   RND      V2, #45         ; V2 = random & 45
$23C    $A697   LD       I, $697         ; Load 697 into I
$23E    $E5E0   UNKNOWN  $E5E0           ; Unknown Exxx instruction
$240    $FCF5   UNKNOWN  FCF5            ; Unknown Fxxx instruction
$242    $ED67   UNKNOWN  $ED67           ; Unknown Exxx instruction
$244    $1A2D   JP       $A2D            ; Jump to A2D
$246    $CD8F   RND      VD, #8F         ; VD = random & 8F
$248    $8624   ADD      V6, V2          ; V6 += V2, VF = carry
$24A    $30E7   SE       V0, #E7         ; Skip if V0 == 231
$24C    $FEE1   UNKNOWN  FEE1            ; Unknown Fxxx instruction
$24E    $8E70   LD       VE, V7          ; VE = V7
$250    $CB56   RND      VB, #56         ; VB = random & 56
$252    $D228   DRW      V2, V2, #8      ; Draw 8-byte sprite at V2, V2
$254    $7C72   ADD      VC, #72         ; Add 114 to VC
$256    $D213   DRW      V2, V1, #3      ; Draw 3-byte sprite at V2, V1
$258    $CE9A   RND      VE, #9A         ; VE = random & 9A
$25A    $A98B   LD       I, $98B         ; Load 98B into I
$25C    $F8E1   UNKNOWN  F8E1            ; Unknown Fxxx instruction
$25E    $46FC   SNE      V6, #FC         ; Skip if V6 != 252
$260    $1262   JP       $262            ; Jump to 262
$262    $28C8   CALL     $8C8            ; Call subroutine at 8C8
$264    $A370   LD       I, $370         ; Load 370 into I
$266    $86B6   SHR      V6              ; V6 >>= 1, VF = LSB
$268    $30D2   SE       V0, #D2         ; Skip if V0 == 210
$26A    $9D3C   UNKNOWN  $9D3C           ; Unknown 9xxx instruction
$26C    $FE7C   UNKNOWN  FE7C            ; Unknown Fxxx instruction
$26E    $B426   JP       V0, $426        ; Jump to V0 + 426
$270    $64A0   LD       V4, #A0         ; Load 160 into V4
$272    $99D7   UNKNOWN  $99D7           ; Unknown 9xxx instruction
$274    $2B7E   CALL     $B7E            ; Call subroutine at B7E
$276    $BD59   JP       V0, $D59        ; Jump to V0 + D59
$278    $E420   UNKNOWN  $E420           ; Unknown Exxx instruction
$27A    $66BB   LD       V6, #BB         ; Load 187 into V6
$27C    $883D   UNKNOWN  883D            ; Unknown 8xxx instruction
$27E    $5271   UNKNOWN  $5271           ; Unknown 5xxx instruction
$280    $B140   JP       V0, $140        ; Jump to V0 + 140
$282    $9B30   SNE      VB, V3          ; Skip if VB != V3
$284    $E626   UNKNOWN  $E626           ; Unknown Exxx instruction
$286    $EE82   UNKNOWN  $EE82           ; Unknown Exxx instruction
$288    $8B39   UNKNOWN  8B39            ; Unknown 8xxx instruction
$28A    $4F99   SNE      VF, #99         ; Skip if VF != 153
$28C    $10EA   JP       $0EA            ; Jump to 0EA
$28E    $E6FF   UNKNOWN  $E6FF           ; Unknown Exxx instruction
$290    $B60B   JP       V0, $60B        ; Jump to V0 + 60B
$292    $555E   UNKNOWN  $555E           ; Unknown 5xxx instruction
$294    $E2F5   UNKNOWN  $E2F5           ; Unknown Exxx instruction
$296    $E0DB   UNKNOWN  $E0DB           ; Unknown Exxx instruction
$298    $26B4   CALL     $6B4            ; Call subroutine at 6B4
$29A    $F960   UNKNOWN  F960            ; Unknown Fxxx instruction
$29C    $C623   RND      V6, #23         ; V6 = random & 23
$29E    $9D2E   UNKNOWN  $9D2E           ; Unknown 9xxx instruction
$2A0    $4D50   SNE      VD, #50         ; Skip if VD != 80
$2A2    $049C   SYS      $49C            ; System call to 49C
$2A4    $6F2D   LD       VF, #2D         ; Load 45 into VF
$2A6    $2DA2   CALL     $DA2            ; Call subroutine at DA2
$2A8    $DF66   DRW      VF, V6, #6      ; Draw 6-byte sprite at VF, V6
$2AA    $5290   SE       V2, V9          ; Skip if V2 == V9
$2AC    $9CEB   UNKNOWN  $9CEB           ; Unknown 9xxx instruction
$2AE    $08E4   SYS      $8E4            ; System call to 8E4
$2B0    $8298   UNKNOWN  8298            ; Unknown 8xxx instruction
$2B2    $8E70   LD       VE, V7          ; VE = V7
$2B4    $05E3   SYS      $5E3            ; System call to 5E3
$2B6    $3943   SE       V9, #43         ; Skip if V9 == 67
$2B8    $185C   JP       $85C            ; Jump to 85C
$2BA    $D055   DRW      V0, V5, #5      ; Draw 5-byte sprite at V0, V5
$2BC    $D937   DRW      V9, V3, #7      ; Draw 7-byte sprite at V9, V3
$2BE    $0E02   SYS      $E02            ; System call to E02
$2C0    $8743   XOR      V7, V4          ; V7 ^= V4
$2C2    $BCC3   JP       V0, $CC3        ; Jump to V0 + CC3
$2C4    $2743   CALL     $743            ; Call subroutine at 743
$2C6    $9B12   UNKNOWN  $9B12           ; Unknown 9xxx instruction
$2C8    $4039   SNE      V0, #39         ; Skip if V0 != 57
$2CA    $B8EB   JP       V0, $8EB        ; Jump to V0 + 8EB
$2CC    $BE04   JP       V0, $E04        ; Jump to V0 + E04
$2CE    $DF6D   DRW      VF, V6, #D      ; Draw 13-byte sprite at VF, V6
$2D0    $DC24   DRW      VC, V2, #4      ; Draw 4-byte sprite at VC, V2
$2D2    $2547   CALL     $547            ; Call subroutine at 547
$2D4    $FB6A   UNKNOWN  FB6A            ; Unknown Fxxx instruction
$2D6    $7B64   ADD      VB, #64         ; Add 100 to VB
$2D8    $49DF   SNE      V9, #DF         ; Skip if V9 != 223
$2DA    $A367   LD       I, $367         ; Load 367 into I
$2DC    $1151   JP       $151            ; Jump to 151
$2DE    $B18E   JP       V0, $18E        ; Jump to V0 + 18E
$2E0    $F0EB   UNKNOWN  F0EB            ; Unknown Fxxx instruction
$2E2    $AF0F   LD       I, $F0F         ; Load F0F into I
$2E4    $CF7C   RND      VF, #7C         ; VF = random & 7C
$2E6    $FEC7   UNKNOWN  FEC7            ; Unknown Fxxx instruction
$2E8    $2A62   CALL     $A62            ; Call subroutine at A62
$2EA    $A768   LD       I, $768         ; Load 768 into I
$2EC    $4393   SNE      V3, #93         ; Skip if V3 != 147
$2EE    $F07D   UNKNOWN  F07D            ; Unknown Fxxx instruction
$2F0    $8E2D   UNKNOWN  8E2D            ; Unknown 8xxx instruction
$2F2    $4B4A   SNE      VB, #4A         ; Skip if VB != 74
$2F4    $109C   JP       $09C            ; Jump to 09C
$2F6    $2021   CALL     $021            ; Call subroutine at 021
$2F8    $9A25   UNKNOWN  $9A25           ; Unknown 9xxx instruction
$2FA    $1BB8   JP       $BB8            ; Jump to BB8
$2FC    $B0CA   JP       V0, $0CA        ; Jump to V0 + 0CA
$2FE    $EDDC   UNKNOWN  $EDDC           ; Unknown Exxx instruction
$300    $0108   SYS      $108            ; System call to 108
$302    $0813   SYS      $813            ; System call to 813
$304    $1897   JP       $897            ; Jump to 897
$306    $BAE2   JP       V0, $AE2        ; Jump to V0 + AE2
$308    $B8D5   JP       V0, $8D5        ; Jump to V0 + 8D5
$30A    $D56F   DRW      V5, V6, #F      ; Draw 15-byte sprite at V5, V6
$30C    $7BB9   ADD      VB, #B9         ; Add 185 to VB
$30E    $4249   SNE      V2, #49         ; Skip if V2 != 73
$310    $4F7B   SNE      VF, #7B         ; Skip if VF != 123
$312    $B99A   JP       V0, $99A        ; Jump to V0 + 99A
$314    $9249   UNKNOWN  $9249           ; Unknown 9xxx instruction
$316    $5166   UNKNOWN  $5166           ; Unknown 5xxx instruction
$318    $309A   SE       V0, #9A         ; Skip if V0 == 154
$31A    $4C61   SNE      VC, #61         ; Skip if VC != 97
$31C    $6FCB   LD       VF, #CB         ; Load 203 into VF
$31E    $386D   SE       V8, #6D         ; Skip if V8 == 109
$320    $78EB   ADD      V8, #EB         ; Add 235 to V8
$322    $AF0E   LD       I, $F0E         ; Load F0E into I
$324    $6A2C   LD       VA, #2C         ; Load 44 into VA
$326    $C9B5   RND      V9, #B5         ; V9 = random & B5
$328    $81FF   UNKNOWN  81FF            ; Unknown 8xxx instruction
$32A    $FBB7   UNKNOWN  FBB7            ; Unknown Fxxx instruction
$32C    $D39E   DRW      V3, V9, #E      ; Draw 14-byte sprite at V3, V9
$32E    $70EC   ADD      V0, #EC         ; Add 236 to V0
$330    $5240   SE       V2, V4          ; Skip if V2 == V4
$332    $EFEE   UNKNOWN  $EFEE           ; Unknown Exxx instruction
$334    $4EF5   SNE      VE, #F5         ; Skip if VE != 245
$336    $51AB   UNKNOWN  $51AB           ; Unknown 5xxx instruction
$338    $C7A9   RND      V7, #A9         ; V7 = random & A9
$33A    $CE2A   RND      VE, #2A         ; VE = random & 2A
$33C    $0E6C   SYS      $E6C            ; System call to E6C
$33E    $7292   ADD      V2, #92         ; Add 146 to V2
$340    $0B21   SYS      $B21            ; System call to B21
$342    $7CF7   ADD      VC, #F7         ; Add 247 to VC
$344    $98E7   UNKNOWN  $98E7           ; Unknown 9xxx instruction
$346    $B4E4   JP       V0, $4E4        ; Jump to V0 + 4E4
$348    $F514   UNKNOWN  F514            ; Unknown Fxxx instruction
$34A    $85CC   UNKNOWN  85CC            ; Unknown 8xxx instruction
$34C    $2674   CALL     $674            ; Call subroutine at 674
$34E    $36F0   SE       V6, #F0         ; Skip if V6 == 240
$350    $7C8B   ADD      VC, #8B         ; Add 139 to VC
$352    $8618   UNKNOWN  8618            ; Unknown 8xxx instruction
$354    $5668   UNKNOWN  $5668           ; Unknown 5xxx instruction
$356    $C784   RND      V7, #84         ; V7 = random & 84
$358    $3867   SE       V8, #67         ; Skip if V8 == 103
$35A    $3047   SE       V0, #47         ; Skip if V0 == 71
$35C    $DE7E   DRW      VE, V7, #E      ; Draw 14-byte sprite at VE, V7
$35E    $BD3D   JP       V0, $D3D        ; Jump to V0 + D3D
$360    $D75C   DRW      V7, V5, #C      ; Draw 12-byte sprite at V7, V5
$362    $42B8   SNE      V2, #B8         ; Skip if V2 != 184
$364    $06D2   SYS      $6D2            ; System call to 6D2
$366    $988A   UNKNOWN  $988A           ; Unknown 9xxx instruction
$368    $6BCF   LD       VB, #CF         ; Load 207 into VB
$36A    $A1C0   LD       I, $1C0         ; Load 1C0 into I
$36C    $BBCC   JP       V0, $BCC        ; Jump to V0 + BCC
$36E    $6AAF   LD       VA, #AF         ; Load 175 into VA
$370    $503C   UNKNOWN  $503C           ; Unknown 5xxx instruction
$372    $993C   UNKNOWN  $993C           ; Unknown 9xxx instruction
$374    $CEAF   RND      VE, #AF         ; VE = random & AF
$376    $3522   SE       V5, #22         ; Skip if V5 == 34
$378    $8B87   SUBN     VB, V8          ; VB = V8 - VB, VF = !borrow
$37A    $5263   UNKNOWN  $5263           ; Unknown 5xxx instruction
$37C    $7A33   ADD      VA, #33         ; Add 51 to VA
$37E    $8AF9   UNKNOWN  8AF9            ; Unknown 8xxx instruction
$380    $D810   DRW      V8, V1, #0      ; Draw 0-byte sprite at V8, V1
$382    $27F1   CALL     $7F1            ; Call subroutine at 7F1
$384    $5D42   UNKNOWN  $5D42           ; Unknown 5xxx instruction
$386    $F48F   UNKNOWN  F48F            ; Unknown Fxxx instruction
$388    $385B   SE       V8, #5B         ; Skip if V8 == 91
$38A    $D1F6   DRW      V1, VF, #6      ; Draw 6-byte sprite at V1, VF
$38C    $F22A   UNKNOWN  F22A            ; Unknown Fxxx instruction
$38E    $CFAD   RND      VF, #AD         ; VF = random & AD
$390    $AE3F   LD       I, $E3F         ; Load E3F into I
$392    $1BDA   JP       $BDA            ; Jump to BDA
$394    $99CD   UNKNOWN  $99CD           ; Unknown 9xxx instruction
$396    $5001   UNKNOWN  $5001           ; Unknown 5xxx instruction
$398    $9D40   SNE      VD, V4          ; Skip if VD != V4
$39A    $1852   JP       $852            ; Jump to 852
$39C    $966C   UNKNOWN  $966C           ; Unknown 9xxx instruction
$39E    $2EE7   CALL     $EE7            ; Call subroutine at EE7
$3A0    $EEBD   UNKNOWN  $EEBD           ; Unknown Exxx instruction
$3A2    $00D0   SYS      $0D0            ; System call to 0D0
$3A4    $1046   JP       $046            ; Jump to 046
$3A6    $A9CB   LD       I, $9CB         ; Load 9CB into I
$3A8    $5365   UNKNOWN  $5365           ; Unknown 5xxx instruction
$3AA    $75BA   ADD      V5, #BA         ; Add 186 to V5
$3AC    $C6A0   RND      V6, #A0         ; V6 = random & A0
$3AE    $516B   UNKNOWN  $516B           ; Unknown 5xxx instruction
$3B0    $4F48   SNE      VF, #48         ; Skip if VF != 72
$3B2    $65B3   LD       V5, #B3         ; Load 179 into V5
$3B4    $54A1   UNKNOWN  $54A1           ; Unknown 5xxx instruction
$3B6    $41F6   SNE      V1, #F6         ; Skip if V1 != 246
$3B8    $15B2   JP       $5B2            ; Jump to 5B2
$3BA    $FE6C   UNKNOWN  FE6C            ; Unknown Fxxx instruction
$3BC    $E9CA   UNKNOWN  $E9CA           ; Unknown Exxx instruction
$3BE    $E7F2   UNKNOWN  $E7F2           ; Unknown Exxx instruction
$3C0    $8EB5   SUB      VE, VB          ; VE -= VB, VF = !borrow
$3C2    $2F22   CALL     $F22            ; Call subroutine at F22
$3C4    $2D9D   CALL     $D9D            ; Call subroutine at D9D
$3C6    $E05A   UNKNOWN  $E05A           ; Unknown Exxx instruction
$3C8    $5876   UNKNOWN  $5876           ; Unknown 5xxx instruction
$3CA    $C5E7   RND      V5, #E7         ; V5 = random & E7
$3CC    $CA86   RND      VA, #86         ; VA = random & 86
$3CE    $0AD3   SYS      $AD3            ; System call to AD3
$3D0    $D6C8   DRW      V6, VC, #8      ; Draw 8-byte sprite at V6, VC
$3D2    $525A   UNKNOWN  $525A           ; Unknown 5xxx instruction
$3D4    $7BEE   ADD      VB, #EE         ; Add 238 to VB
$3D6    $694C   LD       V9, #4C         ; Load 76 into V9
$3D8    $E17F   UNKNOWN  $E17F           ; Unknown Exxx instruction
$3DA    $0B81   SYS      $B81            ; System call to B81
$3DC    $0064   SYS      $064            ; System call to 064
$3DE    $3E12   SE       VE, #12         ; Skip if VE == 18
$3E0    $5E88   UNKNOWN  $5E88           ; Unknown 5xxx instruction
$3E2    $26A4   CALL     $6A4            ; Call subroutine at 6A4
$3E4    $A33C   LD       I, $33C         ; Load 33C into I
$3E6    $4036   SNE      V0, #36         ; Skip if V0 != 54
$3E8    $D116   DRW      V1, V1, #6      ; Draw 6-byte sprite at V1, V1
$3EA    $6167   LD       V1, #67         ; Load 103 into V1
$3EC    $4D60   SNE      VD, #60         ; Skip if VD != 96
$3EE    $A5F4   LD       I, $5F4         ; Load 5F4 into I
$3F0    $41A9   SNE      V1, #A9         ; Skip if V1 != 169
$3F2    $70FA   ADD      V0, #FA         ; Add 250 to V0
$3F4    $D8D5   DRW      V8, VD, #5      ; Draw 5-byte sprite at V8, VD
$3F6    $8ADB   UNKNOWN  8ADB            ; Unknown 8xxx instruction
$3F8    $C34F   RND      V3, #4F         ; V3 = random & 4F
$3FA    $4E88   SNE      VE, #88         ; Skip if VE != 136
$3FC    $9C8E   UNKNOWN  $9C8E           ; Unknown 9xxx instruction
$3FE    $42C4   SNE      V2, #C4         ; Skip if V2 != 196
$400    $0A6B   SYS      $A6B            ; System call to A6B
$402    $77FB   ADD      V7, #FB         ; Add 251 to V7
$404    $77C0   ADD      V7, #C0         ; Add 192 to V7
$406    $82B7   SUBN     V2, VB          ; V2 = VB - V2, VF = !borrow
$408    $EE19   UNKNOWN  $EE19           ; Unknown Exxx instruction
$40A    $B0C9   JP       V0, $0C9        ; Jump to V0 + 0C9
$40C    $35E9   SE       V5, #E9         ; Skip if V5 == 233
$40E    $29F2   CALL     $9F2            ; Call subroutine at 9F2
$410    $8820   LD       V8, V2          ; V8 = V2
$412    $CA05   RND      VA, #05         ; VA = random & 05
$414    $63DF   LD       V3, #DF         ; Load 223 into V3
$416    $A233   LD       I, $233         ; Load 233 into I
$418    $F9DE   UNKNOWN  F9DE            ; Unknown Fxxx instruction
$41A    $45F7   SNE      V5, #F7         ; Skip if V5 != 247
$41C    $C2A0   RND      V2, #A0         ; V2 = random & A0
$41E    $CFEF   RND      VF, #EF         ; VF = random & EF
$420    $EEA4   UNKNOWN  $EEA4           ; Unknown Exxx instruction
$422    $E182   UNKNOWN  $E182           ; Unknown Exxx instruction
$424    $1A13   JP       $A13            ; Jump to A13
$426    $8207   SUBN     V2, V0          ; V2 = V0 - V2, VF = !borrow
$428    $4202   SNE      V2, #02         ; Skip if V2 != 2
$42A    $368E   SE       V6, #8E         ; Skip if V6 == 142
$42C    $1BCF   JP       $BCF            ; Jump to BCF
$42E    $1C97   JP       $C97            ; Jump to C97
$430    $C19A   RND      V1, #9A         ; V1 = random & 9A
$432    $5B51   UNKNOWN  $5B51           ; Unknown 5xxx instruction
$434    $ECAF   UNKNOWN  $ECAF           ; Unknown Exxx instruction
$436    $6D6C   LD       VD, #6C         ; Load 108 into VD
$438    $5380   SE       V3, V8          ; Skip if V3 == V8
$43A    $54C9   UNKNOWN  $54C9           ; Unknown 5xxx instruction
$43C    $16D1   JP       $6D1            ; Jump to 6D1
$43E    $45AF   SNE      V5, #AF         ; Skip if V5 != 175
$440    $59B6   UNKNOWN  $59B6           ; Unknown 5xxx instruction
$442    $FD5A   UNKNOWN  FD5A            ; Unknown Fxxx instruction
$444    $99A4   UNKNOWN  $99A4           ; Unknown 9xxx instruction
$446    $EE8E   UNKNOWN  $EE8E           ; Unknown Exxx instruction
$448    $5B0A   UNKNOWN  $5B0A           ; Unknown 5xxx instruction
$44A    $EAD3   UNKNOWN  $EAD3           ; Unknown Exxx instruction
$44C    $5588   UNKNOWN  $5588           ; Unknown 5xxx instruction
$44E    $42BB   SNE      V2, #BB         ; Skip if V2 != 187
$450    $CD79   RND      VD, #79         ; VD = random & 79
$452    $C41C   RND      V4, #1C         ; V4 = random & 1C
$454    $C1FB   RND      V1, #FB         ; V1 = random & FB
$456    $BCD6   JP       V0, $CD6        ; Jump to V0 + CD6
$458    $C788   RND      V7, #88         ; V7 = random & 88
$45A    $5AF6   UNKNOWN  $5AF6           ; Unknown 5xxx instruction
$45C    $0D35   SYS      $D35            ; System call to D35
$45E    $8FCD   UNKNOWN  8FCD            ; Unknown 8xxx instruction
$460    $E98F   UNKNOWN  $E98F           ; Unknown Exxx instruction
$462    $C0A2   RND      V0, #A2         ; V0 = random & A2
$464    $9629   UNKNOWN  $9629           ; Unknown 9xxx instruction
$466    $F111   UNKNOWN  F111            ; Unknown Fxxx instruction
$468    $2CF0   CALL     $CF0            ; Call subroutine at CF0
$46A    $DDFC   DRW      VD, VF, #C      ; Draw 12-byte sprite at VD, VF
$46C    $3E7C   SE       VE, #7C         ; Skip if VE == 124
$46E    $60F7   LD       V0, #F7         ; Load 247 into V0
$470    $79DF   ADD      V9, #DF         ; Add 223 to V9
$472    $BE0E   JP       V0, $E0E        ; Jump to V0 + E0E
$474    $6AAC   LD       VA, #AC         ; Load 172 into VA
$476    $B329   JP       V0, $329        ; Jump to V0 + 329
$478    $98E3   UNKNOWN  $98E3           ; Unknown 9xxx instruction
$47A    $CD1C   RND      VD, #1C         ; VD = random & 1C
$47C    $87F4   ADD      V7, VF          ; V7 += VF, VF = carry
$47E    $EB5B   UNKNOWN  $EB5B           ; Unknown Exxx instruction
$480    $58CC   UNKNOWN  $58CC           ; Unknown 5xxx instruction
$482    $6EB6   LD       VE, #B6         ; Load 182 into VE
$484    $790D   ADD      V9, #0D         ; Add 13 to V9
$486    $78DB   ADD      V8, #DB         ; Add 219 to V8
$488    $F32C   UNKNOWN  F32C            ; Unknown Fxxx instruction
$48A    $16E3   JP       $6E3            ; Jump to 6E3
$48C    $C8E3   RND      V8, #E3         ; V8 = random & E3
$48E    $9A9D   UNKNOWN  $9A9D           ; Unknown 9xxx instruction
$490    $76AE   ADD      V6, #AE         ; Add 174 to V6
$492    $BB75   JP       V0, $B75        ; Jump to V0 + B75
$494    $2BBA   CALL     $BBA            ; Call subroutine at BBA
$496    $7009   ADD      V0, #09         ; Add 9 to V0
$498    $C67B   RND      V6, #7B         ; V6 = random & 7B
$49A    $B522   JP       V0, $522        ; Jump to V0 + 522
$49C    $D469   DRW      V4, V6, #9      ; Draw 9-byte sprite at V4, V6
$49E    $7D86   ADD      VD, #86         ; Add 134 to VD
$4A0    $A788   LD       I, $788         ; Load 788 into I
$4A2    $F539   UNKNOWN  F539            ; Unknown Fxxx instruction
$4A4    $2D1D   CALL     $D1D            ; Call subroutine at D1D
$4A6    $B006   JP       V0, $006        ; Jump to V0 + 006
$4A8    $DE22   DRW      VE, V2, #2      ; Draw 2-byte sprite at VE, V2
$4AA    $7FFA   ADD      VF, #FA         ; Add 250 to VF
$4AC    $453F   SNE      V5, #3F         ; Skip if V5 != 63
$4AE    $9D48   UNKNOWN  $9D48           ; Unknown 9xxx instruction
$4B0    $2F05   CALL     $F05            ; Call subroutine at F05
$4B2    $2C95   CALL     $C95            ; Call subroutine at C95
$4B4    $6840   LD       V8, #40         ; Load 64 into V8
$4B6    $B1CE   JP       V0, $1CE        ; Jump to V0 + 1CE
$4B8    $D6E8   DRW      V6, VE, #8      ; Draw 8-byte sprite at V6, VE
$4BA    $74A6   ADD      V4, #A6         ; Add 166 to V4
$4BC    $2819   CALL     $819            ; Call subroutine at 819
$4BE    $72C4   ADD      V2, #C4         ; Add 196 to V2
$4C0    $86A3   XOR      V6, VA          ; V6 ^= VA
$4C2    $748B   ADD      V4, #8B         ; Add 139 to V4
$4C4    $EC9A   UNKNOWN  $EC9A           ; Unknown Exxx instruction
$4C6    $D4C7   DRW      V4, VC, #7      ; Draw 7-byte sprite at V4, VC
$4C8    $2FD2   CALL     $FD2            ; Call subroutine at FD2
$4CA    $0CA1   SYS      $CA1            ; System call to CA1
$4CC    $A9C6   LD       I, $9C6         ; Load 9C6 into I
$4CE    $7081   ADD      V0, #81         ; Add 129 to V0
$4D0    $A0B5   LD       I, $0B5         ; Load 0B5 into I
$4D2    $7466   ADD      V4, #66         ; Add 102 to V4
$4D4    $6AAE   LD       VA, #AE         ; Load 174 into VA
$4D6    $ED10   UNKNOWN  $ED10           ; Unknown Exxx instruction
$4D8    $D776   DRW      V7, V7, #6      ; Draw 6-byte sprite at V7, V7
$4DA    $026D   SYS      $26D            ; System call to 26D
$4DC    $1C25   JP       $C25            ; Jump to C25
$4DE    $3F24   SE       VF, #24         ; Skip if VF == 36
$4E0    $25AC   CALL     $5AC            ; Call subroutine at 5AC
$4E2    $5D89   UNKNOWN  $5D89           ; Unknown 5xxx instruction
$4E4    $87D3   XOR      V7, VD          ; V7 ^= VD
$4E6    $1419   JP       $419            ; Jump to 419
$4E8    $C196   RND      V1, #96         ; V1 = random & 96
$4EA    $10AF   JP       $0AF            ; Jump to 0AF
$4EC    $6473   LD       V4, #73         ; Load 115 into V4
$4EE    $7ABB   ADD      VA, #BB         ; Add 187 to VA
$4F0    $C8EF   RND      V8, #EF         ; V8 = random & EF
$4F2    $0D0F   SYS      $D0F            ; System call to D0F
$4F4    $E4FB   UNKNOWN  $E4FB           ; Unknown Exxx instruction
$4F6    $1E3E   JP       $E3E            ; Jump to E3E
$4F8    $B794   JP       V0, $794        ; Jump to V0 + 794
$4FA    $49AD   SNE      V9, #AD         ; Skip if V9 != 173
$4FC    $6A48   LD       VA, #48         ; Load 72 into VA
$4FE    $6734   LD       V7, #34         ; Load 52 into V7
$500    $B3CE   JP       V0, $3CE        ; Jump to V0 + 3CE
$502    $653C   LD       V5, #3C         ; Load 60 into V5
$504    $73EF   ADD      V3, #EF         ; Add 239 to V3
$506    $44E0   SNE      V4, #E0         ; Skip if V4 != 224
$508    $5CE4   UNKNOWN  $5CE4           ; Unknown 5xxx instruction
$50A    $3B4A   SE       VB, #4A         ; Skip if VB == 74
$50C    $D488   DRW      V4, V8, #8      ; Draw 8-byte sprite at V4, V8
$50E    $82F7   SUBN     V2, VF          ; V2 = VF - V2, VF = !borrow
$510    $C0C8   RND      V0, #C8         ; V0 = random & C8
$512    $ECCC   UNKNOWN  $ECCC           ; Unknown Exxx instruction
$514    $10D2   JP       $0D2            ; Jump to 0D2
$516    $0F61   SYS      $F61            ; System call to F61
$518    $253E   CALL     $53E            ; Call subroutine at 53E
$51A    $6983   LD       V9, #83         ; Load 131 into V9
$51C    $8FF1   OR       VF, VF          ; VF |= VF
$51E    $139B   JP       $39B            ; Jump to 39B
$520    $32FC   SE       V2, #FC         ; Skip if V2 == 252
$522    $914E   UNKNOWN  $914E           ; Unknown 9xxx instruction
$524    $A166   LD       I, $166         ; Load 166 into I
$526    $87CF   UNKNOWN  87CF            ; Unknown 8xxx instruction
$528    $6C10   LD       VC, #10         ; Load 16 into VC
$52A    $EFFC   UNKNOWN  $EFFC           ; Unknown Exxx instruction
$52C    $C9BF   RND      V9, #BF         ; V9 = random & BF
$52E    $635B   LD       V3, #5B         ; Load 91 into V3
$530    $2BE3   CALL     $BE3            ; Call subroutine at BE3
$532    $0768   SYS      $768            ; System call to 768
$534    $616B   LD       V1, #6B         ; Load 107 into V1
$536    $532D   UNKNOWN  $532D           ; Unknown 5xxx instruction
$538    $58E4   UNKNOWN  $58E4           ; Unknown 5xxx instruction
$53A    $F796   UNKNOWN  F796            ; Unknown Fxxx instruction
$53C    $C7B8   RND      V7, #B8         ; V7 = random & B8
$53E    $278F   CALL     $78F            ; Call subroutine at 78F
$540    $1635   JP       $635            ; Jump to 635
$542    $A0A3   LD       I, $0A3         ; Load 0A3 into I
$544    $7BC2   ADD      VB, #C2         ; Add 194 to VB
$546    $1820   JP       $820            ; Jump to 820
$548    $84E9   UNKNOWN  84E9            ; Unknown 8xxx instruction
$54A    $FBA0   UNKNOWN  FBA0            ; Unknown Fxxx instruction
$54C    $D41B   DRW      V4, V1, #B      ; Draw 11-byte sprite at V4, V1
$54E    $C204   RND      V2, #04         ; V2 = random & 04
$550    $49A5   SNE      V9, #A5         ; Skip if V9 != 165
$552    $DE3F   DRW      VE, V3, #F      ; Draw 15-byte sprite at VE, V3
$554    $BD83   JP       V0, $D83        ; Jump to V0 + D83
$556    $8833   XOR      V8, V3          ; V8 ^= V3
$558    $482F   SNE      V8, #2F         ; Skip if V8 != 47
$55A    $C0B7   RND      V0, #B7         ; V0 = random & B7
$55C    $D2C6   DRW      V2, VC, #6      ; Draw 6-byte sprite at V2, VC
$55E    $C9D4   RND      V9, #D4         ; V9 = random & D4
$560    $34C2   SE       V4, #C2         ; Skip if V4 == 194
$562    $1F9F   JP       $F9F            ; Jump to F9F
$564    $8076   SHR      V0              ; V0 >>= 1, VF = LSB
$566    $6D47   LD       VD, #47         ; Load 71 into VD
$568    $0EDD   SYS      $EDD            ; System call to EDD
$56A    $441A   SNE      V4, #1A         ; Skip if V4 != 26
$56C    $922F   UNKNOWN  $922F           ; Unknown 9xxx instruction
$56E    $DD50   DRW      VD, V5, #0      ; Draw 0-byte sprite at VD, V5
$570    $3659   SE       V6, #59         ; Skip if V6 == 89
$572    $BFC4   JP       V0, $FC4        ; Jump to V0 + FC4
$574    $A9E7   LD       I, $9E7         ; Load 9E7 into I
$576    $A74D   LD       I, $74D         ; Load 74D into I
$578    $2AB7   CALL     $AB7            ; Call subroutine at AB7
$57A    $D149   DRW      V1, V4, #9      ; Draw 9-byte sprite at V1, V4
$57C    $8FAF   UNKNOWN  8FAF            ; Unknown 8xxx instruction
$57E    $6CC1   LD       VC, #C1         ; Load 193 into VC
$580    $4A1A   SNE      VA, #1A         ; Skip if VA != 26
$582    $10CC   JP       $0CC            ; Jump to 0CC
$584    $B165   JP       V0, $165        ; Jump to V0 + 165
$586    $E3A8   UNKNOWN  $E3A8           ; Unknown Exxx instruction
$588    $D8B9   DRW      V8, VB, #9      ; Draw 9-byte sprite at V8, VB
$58A    $30D7   SE       V0, #D7         ; Skip if V0 == 215
$58C    $B66E   JP       V0, $66E        ; Jump to V0 + 66E
$58E    $F06D   UNKNOWN  F06D            ; Unknown Fxxx instruction
$590    $E1D3   UNKNOWN  $E1D3           ; Unknown Exxx instruction
$592    $F51F   UNKNOWN  F51F            ; Unknown Fxxx instruction
$594    $E4C6   UNKNOWN  $E4C6           ; Unknown Exxx instruction
$596    $4E21   SNE      VE, #21         ; Skip if VE != 33
$598    $6F6E   LD       VF, #6E         ; Load 110 into VF
$59A    $0B07   SYS      $B07            ; System call to B07
$59C    $7ADD   ADD      VA, #DD         ; Add 221 to VA
$59E    $16EC   JP       $6EC            ; Jump to 6EC
$5A0    $73A3   ADD      V3, #A3         ; Add 163 to V3
$5A2    $E337   UNKNOWN  $E337           ; Unknown Exxx instruction
$5A4    $DF4A   DRW      VF, V4, #A      ; Draw 10-byte sprite at VF, V4
$5A6    $DA41   DRW      VA, V4, #1      ; Draw 1-byte sprite at VA, V4
$5A8    $4154   SNE      V1, #54         ; Skip if V1 != 84
$5AA    $CA93   RND      VA, #93         ; VA = random & 93
$5AC    $0763   SYS      $763            ; System call to 763
$5AE    $E4BA   UNKNOWN  $E4BA           ; Unknown Exxx instruction
$5B0    $84E2   AND      V4, VE          ; V4 &= VE
$5B2    $AD9C   LD       I, $D9C         ; Load D9C into I
$5B4    $C279   RND      V2, #79         ; V2 = random & 79
$5B6    $6DBB   LD       VD, #BB         ; Load 187 into VD
$5B8    $0FC1   SYS      $FC1            ; System call to FC1
$5BA    $55ED   UNKNOWN  $55ED           ; Unknown 5xxx instruction
$5BC    $849A   UNKNOWN  849A            ; Unknown 8xxx instruction
$5BE    $A93D   LD       I, $93D         ; Load 93D into I
$5C0    $6C64   LD       VC, #64         ; Load 100 into VC
$5C2    $62D4   LD       V2, #D4         ; Load 212 into V2
$5C4    $A4A1   LD       I, $4A1         ; Load 4A1 into I
$5C6    $3324   SE       V3, #24         ; Skip if V3 == 36
$5C8    $A01A   LD       I, $01A         ; Load 01A into I
$5CA    $47F4   SNE      V7, #F4         ; Skip if V7 != 244
$5CC    $E310   UNKNOWN  $E310           ; Unknown Exxx instruction
$5CE    $269C   CALL     $69C            ; Call subroutine at 69C
$5D0    $4E0B   SNE      VE, #0B         ; Skip if VE != 11
$5D2    $61AD   LD       V1, #AD         ; Load 173 into V1
$5D4    $1DDD   JP       $DDD            ; Jump to DDD
$5D6    $4945   SNE      V9, #45         ; Skip if V9 != 69
$5D8    $0C81   SYS      $C81            ; System call to C81
$5DA    $1E60   JP       $E60            ; Jump to E60
$5DC    $585B   UNKNOWN  $585B           ; Unknown 5xxx instruction
$5DE    $CCC5   RND      VC, #C5         ; VC = random & C5
$5E0    $D601   DRW      V6, V0, #1      ; Draw 1-byte sprite at V6, V0
$5E2    $DF3E   DRW      VF, V3, #E      ; Draw 14-byte sprite at VF, V3
$5E4    $FECF   UNKNOWN  FECF            ; Unknown Fxxx instruction
$5E6    $DD9D   DRW      VD, V9, #D      ; Draw 13-byte sprite at VD, V9
$5E8    $6B32   LD       VB, #32         ; Load 50 into VB
$5EA    $D2C9   DRW      V2, VC, #9      ; Draw 9-byte sprite at V2, VC
$5EC    $031E   SYS      $31E            ; System call to 31E
$5EE    $CD8C   RND      VD, #8C         ; VD = random & 8C
$5F0    $EF24   UNKNOWN  $EF24           ; Unknown Exxx instruction
$5F2    $AAC1   LD       I, $AC1         ; Load AC1 into I
$5F4    $84A8   UNKNOWN  84A8            ; Unknown 8xxx instruction
$5F6    $E976   UNKNOWN  $E976           ; Unknown Exxx instruction
$5F8    $E6AD   UNKNOWN  $E6AD           ; Unknown Exxx instruction
$5FA    $C25C   RND      V2, #5C         ; V2 = random & 5C
$5FC    $DEAA   DRW      VE, VA, #A      ; Draw 10-byte sprite at VE, VA
$5FE    $AFD5   LD       I, $FD5         ; Load FD5 into I
$600    $9576   UNKNOWN  $9576           ; Unknown 9xxx instruction
$602    $0526   SYS      $526            ; System call to 526
$604    $D872   DRW      V8, V7, #2      ; Draw 2-byte sprite at V8, V7
$606    $6424   LD       V4, #24         ; Load 36 into V4
$608    $2D7A   CALL     $D7A            ; Call subroutine at D7A
$60A    $AE5A   LD       I, $E5A         ; Load E5A into I
$60C    $11A5   JP       $1A5            ; Jump to 1A5
$60E    $1805   JP       $805            ; Jump to 805
$610    $E8E8   UNKNOWN  $E8E8           ; Unknown Exxx instruction
$612    $B402   JP       V0, $402        ; Jump to V0 + 402
$614    $8A9B   UNKNOWN  8A9B            ; Unknown 8xxx instruction
$616    $7667   ADD      V6, #67         ; Add 103 to V6
$618    $1079   JP       $079            ; Jump to 079
$61A    $20E8   CALL     $0E8            ; Call subroutine at 0E8
$61C    $1930   JP       $930            ; Jump to 930
$61E    $22CC   CALL     $2CC            ; Call subroutine at 2CC
$620    $B4F0   JP       V0, $4F0        ; Jump to V0 + 4F0
$622    $99ED   UNKNOWN  $99ED           ; Unknown 9xxx instruction
$624    $A15C   LD       I, $15C         ; Load 15C into I
$626    $59F5   UNKNOWN  $59F5           ; Unknown 5xxx instruction
$628    $ACFF   LD       I, $CFF         ; Load CFF into I
$62A    $34BB   SE       V4, #BB         ; Skip if V4 == 187
$62C    $ABBC   LD       I, $BBC         ; Load BBC into I
$62E    $DC03   DRW      VC, V0, #3      ; Draw 3-byte sprite at VC, V0
$630    $7179   ADD      V1, #79         ; Add 121 to V1
$632    $0C8F   SYS      $C8F            ; System call to C8F
$634    $8E6A   UNKNOWN  8E6A            ; Unknown 8xxx instruction
$636    $14BC   JP       $4BC            ; Jump to 4BC
$638    $5E2E   UNKNOWN  $5E2E           ; Unknown 5xxx instruction
$63A    $53F6   UNKNOWN  $53F6           ; Unknown 5xxx instruction
$63C    $E853   UNKNOWN  $E853           ; Unknown Exxx instruction
$63E    $4761   SNE      V7, #61         ; Skip if V7 != 97
$640    $C289   RND      V2, #89         ; V2 = random & 89
$642    $5F00   SE       VF, V0          ; Skip if VF == V0
$644    $4FED   SNE      VF, #ED         ; Skip if VF != 237
$646    $1927   JP       $927            ; Jump to 927
$648    $0820   SYS      $820            ; System call to 820
$64A    $B702   JP       V0, $702        ; Jump to V0 + 702
$64C    $5F78   UNKNOWN  $5F78           ; Unknown 5xxx instruction
$64E    $57AD   UNKNOWN  $57AD           ; Unknown 5xxx instruction
$650    $1FFA   JP       $FFA            ; Jump to FFA
$652    $1BF5   JP       $BF5            ; Jump to BF5
$654    $8250   LD       V2, V5          ; V2 = V5
$656    $3A4B   SE       VA, #4B         ; Skip if VA == 75
$658    $210E   CALL     $10E            ; Call subroutine at 10E
$65A    $40B9   SNE      V0, #B9         ; Skip if V0 != 185
$65C    $D7ED   DRW      V7, VE, #D      ; Draw 13-byte sprite at V7, VE
$65E    $9B12   UNKNOWN  $9B12           ; Unknown 9xxx instruction
$660    $64F4   LD       V4, #F4         ; Load 244 into V4
$662    $9D83   UNKNOWN  $9D83           ; Unknown 9xxx instruction
$664    $AED4   LD       I, $ED4         ; Load ED4 into I
$666    $B2A4   JP       V0, $2A4        ; Jump to V0 + 2A4
$668    $39E8   SE       V9, #E8         ; Skip if V9 == 232
$66A    $A939   LD       I, $939         ; Load 939 into I
$66C    $9A15   UNKNOWN  $9A15           ; Unknown 9xxx instruction
$66E    $FCF5   UNKNOWN  FCF5            ; Unknown Fxxx instruction
$670    $2FCB   CALL     $FCB            ; Call subroutine at FCB
$672    $2F57   CALL     $F57            ; Call subroutine at F57
$674    $9A37   UNKNOWN  $9A37           ; Unknown 9xxx instruction
$676    $9524   UNKNOWN  $9524           ; Unknown 9xxx instruction
$678    $B8A6   JP       V0, $8A6        ; Jump to V0 + 8A6
$67A    $D268   DRW      V2, V6, #8      ; Draw 8-byte sprite at V2, V6
$67C    $7EB2   ADD      VE, #B2         ; Add 178 to VE
$67E    $43CC   SNE      V3, #CC         ; Skip if V3 != 204
$680    $3B34   SE       VB, #34         ; Skip if VB == 52
$682    $A4B6   LD       I, $4B6         ; Load 4B6 into I
$684    $8D25   SUB      VD, V2          ; VD -= V2, VF = !borrow
$686    $9139   UNKNOWN  $9139           ; Unknown 9xxx instruction
$688    $BB45   JP       V0, $B45        ; Jump to V0 + B45
$68A    $59FD   UNKNOWN  $59FD           ; Unknown 5xxx instruction
$68C    $3A50   SE       VA, #50         ; Skip if VA == 80
$68E    $9628   UNKNOWN  $9628           ; Unknown 9xxx instruction
$690    $D869   DRW      V8, V6, #9      ; Draw 9-byte sprite at V8, V6
$692    $A06F   LD       I, $06F         ; Load 06F into I
$694    $9FE6   UNKNOWN  $9FE6           ; Unknown 9xxx instruction
$696    $F973   UNKNOWN  F973            ; Unknown Fxxx instruction
$698    $23F7   CALL     $3F7            ; Call subroutine at 3F7
$69A    $70D5   ADD      V0, #D5         ; Add 213 to V0
$69C    $CB88   RND      VB, #88         ; VB = random & 88
$69E    $6F76   LD       VF, #76         ; Load 118 into VF
$6A0    $A676   LD       I, $676         ; Load 676 into I
$6A2    $0519   SYS      $519            ; System call to 519
$6A4    $AF2C   LD       I, $F2C         ; Load F2C into I
$6A6    $7866   ADD      V8, #66         ; Add 102 to V8
$6A8    $FC33   LD       B, VC           ; Store BCD of VC at I, I+1, I+2
$6AA    $F845   UNKNOWN  F845            ; Unknown Fxxx instruction
$6AC    $9D07   UNKNOWN  $9D07           ; Unknown 9xxx instruction
$6AE    $AC34   LD       I, $C34         ; Load C34 into I
$6B0    $66C9   LD       V6, #C9         ; Load 201 into V6
$6B2    $96C8   UNKNOWN  $96C8           ; Unknown 9xxx instruction
$6B4    $E5B9   UNKNOWN  $E5B9           ; Unknown Exxx instruction
$6B6    $6562   LD       V5, #62         ; Load 98 into V5
$6B8    $447A   SNE      V4, #7A         ; Skip if V4 != 122
$6BA    $D478   DRW      V4, V7, #8      ; Draw 8-byte sprite at V4, V7
$6BC    $26F4   CALL     $6F4            ; Call subroutine at 6F4
$6BE    $4E70   SNE      VE, #70         ; Skip if VE != 112
$6C0    $18D2   JP       $8D2            ; Jump to 8D2
$6C2    $1CAE   JP       $CAE            ; Jump to CAE
$6C4    $9938   UNKNOWN  $9938           ; Unknown 9xxx instruction
$6C6    $453B   SNE      V5, #3B         ; Skip if V5 != 59
$6C8    $C477   RND      V4, #77         ; V4 = random & 77
$6CA    $8994   ADD      V9, V9          ; V9 += V9, VF = carry
$6CC    $26D6   CALL     $6D6            ; Call subroutine at 6D6
$6CE    $CF2B   RND      VF, #2B         ; VF = random & 2B
$6D0    $7A61   ADD      VA, #61         ; Add 97 to VA
$6D2    $23A7   CALL     $3A7            ; Call subroutine at 3A7
$6D4    $254A   CALL     $54A            ; Call subroutine at 54A
$6D6    $1B78   JP       $B78            ; Jump to B78
$6D8    $E372   UNKNOWN  $E372           ; Unknown Exxx instruction
$6DA    $AFD3   LD       I, $FD3         ; Load FD3 into I
$6DC    $27B4   CALL     $7B4            ; Call subroutine at 7B4
$6DE    $901C   UNKNOWN  $901C           ; Unknown 9xxx instruction
$6E0    $2DC6   CALL     $DC6            ; Call subroutine at DC6
$6E2    $8721   OR       V7, V2          ; V7 |= V2
$6E4    $C2CF   RND      V2, #CF         ; V2 = random & CF
$6E6    $F602   UNKNOWN  F602            ; Unknown Fxxx instruction
$6E8    $DA2A   DRW      VA, V2, #A      ; Draw 10-byte sprite at VA, V2
$6EA    $8ABD   UNKNOWN  8ABD            ; Unknown 8xxx instruction
$6EC    $1ECE   JP       $ECE            ; Jump to ECE
$6EE    $7DA3   ADD      VD, #A3         ; Add 163 to VD
$6F0    $F938   UNKNOWN  F938            ; Unknown Fxxx instruction
$6F2    $64D8   LD       V4, #D8         ; Load 216 into V4
$6F4    $F840   UNKNOWN  F840            ; Unknown Fxxx instruction
$6F6    $D765   DRW      V7, V6, #5      ; Draw 5-byte sprite at V7, V6
$6F8    $54B9   UNKNOWN  $54B9           ; Unknown 5xxx instruction
$6FA    $ED91   UNKNOWN  $ED91           ; Unknown Exxx instruction
$6FC    $0039   SYS      $039            ; System call to 039
$6FE    $E665   UNKNOWN  $E665           ; Unknown Exxx instruction
$700    $E790   UNKNOWN  $E790           ; Unknown Exxx instruction
$702    $32C9   SE       V2, #C9         ; Skip if V2 == 201
$704    $1078   JP       $078            ; Jump to 078
$706    $D444   DRW      V4, V4, #4      ; Draw 4-byte sprite at V4, V4
$708    $249C   CALL     $49C            ; Call subroutine at 49C
$70A    $2EB0   CALL     $EB0            ; Call subroutine at EB0
$70C    $1C61   JP       $C61            ; Jump to C61
$70E    $D101   DRW      V1, V0, #1      ; Draw 1-byte sprite at V1, V0
$710    $CCE1   RND      VC, #E1         ; VC = random & E1
$712    $2009   CALL     $009            ; Call subroutine at 009
$714    $6EEA   LD       VE, #EA         ; Load 234 into VE
$716    $2E4C   CALL     $E4C            ; Call subroutine at E4C
$718    $E1D0   UNKNOWN  $E1D0           ; Unknown Exxx instruction
$71A    $109E   JP       $09E            ; Jump to 09E
$71C    $5F05   UNKNOWN  $5F05           ; Unknown 5xxx instruction
$71E    $9C1C   UNKNOWN  $9C1C           ; Unknown 9xxx instruction
$720    $E3C6   UNKNOWN  $E3C6           ; Unknown Exxx instruction
$722    $7E9F   ADD      VE, #9F         ; Add 159 to VE
$724    $DD25   DRW      VD, V2, #5      ; Draw 5-byte sprite at VD, V2
$726    $C3F8   RND      V3, #F8         ; V3 = random & F8
$728    $E59A   UNKNOWN  $E59A           ; Unknown Exxx instruction
$72A    $7A1F   ADD      VA, #1F         ; Add 31 to VA
$72C    $4BE7   SNE      VB, #E7         ; Skip if VB != 231
$72E    $9FEE   UNKNOWN  $9FEE           ; Unknown 9xxx instruction
$730    $080C   SYS      $80C            ; System call to 80C
$732    $F43B   UNKNOWN  F43B            ; Unknown Fxxx instruction
$734    $402F   SNE      V0, #2F         ; Skip if V0 != 47
$736    $079D   SYS      $79D            ; System call to 79D
$738    $6BEA   LD       VB, #EA         ; Load 234 into VB
$73A    $21FF   CALL     $1FF            ; Call subroutine at 1FF
$73C    $BBC7   JP       V0, $BC7        ; Jump to V0 + BC7
$73E    $5F2C   UNKNOWN  $5F2C           ; Unknown 5xxx instruction
$740    $CB8F   RND      VB, #8F         ; VB = random & 8F
$742    $C383   RND      V3, #83         ; V3 = random & 83
$744    $0045   SYS      $045            ; System call to 045
$746    $003E   SYS      $03E            ; System call to 03E
$748    $D122   DRW      V1, V2, #2      ; Draw 2-byte sprite at V1, V2
$74A    $FBCC   UNKNOWN  FBCC            ; Unknown Fxxx instruction
$74C    $92F6   UNKNOWN  $92F6           ; Unknown 9xxx instruction
$74E    $9604   UNKNOWN  $9604           ; Unknown 9xxx instruction
$750    $5802   UNKNOWN  $5802           ; Unknown 5xxx instruction
$752    $A04A   LD       I, $04A         ; Load 04A into I
$754    $1489   JP       $489            ; Jump to 489
$756    $B058   JP       V0, $058        ; Jump to V0 + 058
$758    $52FF   UNKNOWN  $52FF           ; Unknown 5xxx instruction
$75A    $77BB   ADD      V7, #BB         ; Add 187 to V7
$75C    $89C6   SHR      V9              ; V9 >>= 1, VF = LSB
$75E    $6FAE   LD       VF, #AE         ; Load 174 into VF
$760    $917E   UNKNOWN  $917E           ; Unknown 9xxx instruction
$762    $8926   SHR      V9              ; V9 >>= 1, VF = LSB
$764    $A356   LD       I, $356         ; Load 356 into I
$766    $F7AA   UNKNOWN  F7AA            ; Unknown Fxxx instruction
$768    $AF36   LD       I, $F36         ; Load F36 into I
$76A    $242C   CALL     $42C            ; Call subroutine at 42C
$76C    $39F5   SE       V9, #F5         ; Skip if V9 == 245
$76E    $8B05   SUB      VB, V0          ; VB -= V0, VF = !borrow
$770    $723B   ADD      V2, #3B         ; Add 59 to V2
$772    $52C1   UNKNOWN  $52C1           ; Unknown 5xxx instruction
$774    $4652   SNE      V6, #52         ; Skip if V6 != 82
$776    $62F2   LD       V2, #F2         ; Load 242 into V2
$778    $888F   UNKNOWN  888F            ; Unknown 8xxx instruction
$77A    $B576   JP       V0, $576        ; Jump to V0 + 576
$77C    $491D   SNE      V9, #1D         ; Skip if V9 != 29
$77E    $49DB   SNE      V9, #DB         ; Skip if V9 != 219
$780    $BB95   JP       V0, $B95        ; Jump to V0 + B95
$782    $7D6C   ADD      VD, #6C         ; Add 108 to VD
$784    $C1FC   RND      V1, #FC         ; V1 = random & FC
$786    $1C5F   JP       $C5F            ; Jump to C5F
$788    $6060   LD       V0, #60         ; Load 96 into V0
$78A    $D3BD   DRW      V3, VB, #D      ; Draw 13-byte sprite at V3, VB
$78C    $3EBA   SE       VE, #BA         ; Skip if VE == 186
$78E    $7154   ADD      V1, #54         ; Add 84 to V1
$790    $C34E   RND      V3, #4E         ; V3 = random & 4E
$792    $09EF   SYS      $9EF            ; System call to 9EF
$794    $6520   LD       V5, #20         ; Load 32 into V5
$796    $CBB4   RND      VB, #B4         ; VB = random & B4
$798    $B164   JP       V0, $164        ; Jump to V0 + 164
$79A    $4FFE   SNE      VF, #FE         ; Skip if VF != 254
$79C    $FD78   UNKNOWN  FD78            ; Unknown Fxxx instruction
$79E    $D11F   DRW      V1, V1, #F      ; Draw 15-byte sprite at V1, V1
$7A0    $3157   SE       V1, #57         ; Skip if V1 == 87
$7A2    $2BD0   CALL     $BD0            ; Call subroutine at BD0
$7A4    $9296   UNKNOWN  $9296           ; Unknown 9xxx instruction
$7A6    $92A6   UNKNOWN  $92A6           ; Unknown 9xxx instruction
$7A8    $7301   ADD      V3, #01         ; Add 1 to V3
$7AA    $94E0   SNE      V4, VE          ; Skip if V4 != VE
$7AC    $753F   ADD      V5, #3F         ; Add 63 to V5
$7AE    $355E   SE       V5, #5E         ; Skip if V5 == 94
$7B0    $AAAD   LD       I, $AAD         ; Load AAD into I
$7B2    $37FF   SE       V7, #FF         ; Skip if V7 == 255
$7B4    $A300   LD       I, $300         ; Load 300 into I
$7B6    $4B41   SNE      VB, #41         ; Skip if VB != 65
$7B8    $6031   LD       V0, #31         ; Load 49 into V0
$7BA    $F933   LD       B, V9           ; Store BCD of V9 at I, I+1, I+2
$7BC    $5600   SE       V6, V0          ; Skip if V6 == V0
$7BE    $2218   CALL     $218            ; Call subroutine at 218
$7C0    $612A   LD       V1, #2A         ; Load 42 into V1
$7C2    $8269   UNKNOWN  8269            ; Unknown 8xxx instruction
$7C4    $9B90   SNE      VB, V9          ; Skip if VB != V9
$7C6    $103F   JP       $03F            ; Jump to 03F
$7C8    $A848   LD       I, $848         ; Load 848 into I
$7CA    $B665   JP       V0, $665        ; Jump to V0 + 665
$7CC    $1608   JP       $608            ; Jump to 608
$7CE    $7E09   ADD      VE, #09         ; Add 9 to VE
$7D0    $0F70   SYS      $F70            ; System call to F70
$7D2    $E35D   UNKNOWN  $E35D           ; Unknown Exxx instruction
$7D4    $A856   LD       I, $856         ; Load 856 into I
$7D6    $B826   JP       V0, $826        ; Jump to V0 + 826
$7D8    $06CC   SYS      $6CC            ; System call to 6CC
$7DA    $4852   SNE      V8, #52         ; Skip if V8 != 82
$7DC    $B2EA   JP       V0, $2EA        ; Jump to V0 + 2EA
$7DE    $64FF   LD       V4, #FF         ; Load 255 into V4
$7E0    $59EF   UNKNOWN  $59EF           ; Unknown 5xxx instruction
$7E2    $C244   RND      V2, #44         ; V2 = random & 44
$7E4    $C5C5   RND      V5, #C5         ; V5 = random & C5
$7E6    $0FDE   SYS      $FDE            ; System call to FDE
$7E8    $536B   UNKNOWN  $536B           ; Unknown 5xxx instruction
$7EA    $9DFB   UNKNOWN  $9DFB           ; Unknown 9xxx instruction
$7EC    $62F4   LD       V2, #F4         ; Load 244 into V2
$7EE    $D2E0   DRW      V2, VE, #0      ; Draw 0-byte sprite at V2, VE
$7F0    $CB19   RND      VB, #19         ; VB = random & 19
$7F2    $7B16   ADD      VB, #16         ; Add 22 to VB
$7F4    $D074   DRW      V0, V7, #4      ; Draw 4-byte sprite at V0, V7
$7F6    $3A6D   SE       VA, #6D         ; Skip if VA == 109
$7F8    $31B7   SE       V1, #B7         ; Skip if V1 == 183
$7FA    $3FDF   SE       VF, #DF         ; Skip if VF == 223
$7FC    $774E   ADD      V7, #4E         ; Add 78 to V7
$7FE    $1BFB   JP       $BFB            ; Jump to BFB
$800    $A2B3   LD       I, $2B3         ; Load 2B3 into I
$802    $2951   CALL     $951            ; Call subroutine at 951
$804    $3DB0   SE       VD, #B0         ; Skip if VD == 176
$806    $FAB7   UNKNOWN  FAB7            ; Unknown Fxxx instruction
$808    $6450   LD       V4, #50         ; Load 80 into V4
$80A    $453D   SNE      V5, #3D         ; Skip if V5 != 61
$80C    $1EF5   JP       $EF5            ; Jump to EF5
$80E    $82E2   AND      V2, VE          ; V2 &= VE
$810    $9FA4   UNKNOWN  $9FA4           ; Unknown 9xxx instruction
$812    $9C9B   UNKNOWN  $9C9B           ; Unknown 9xxx instruction
$814    $0A61   SYS      $A61            ; System call to A61
$816    $4197   SNE      V1, #97         ; Skip if V1 != 151
$818    $F732   UNKNOWN  F732            ; Unknown Fxxx instruction
$81A    $7349   ADD      V3, #49         ; Add 73 to V3
$81C    $D963   DRW      V9, V6, #3      ; Draw 3-byte sprite at V9, V6
$81E    $8011   OR       V0, V1          ; V0 |= V1
$820    $3035   SE       V0, #35         ; Skip if V0 == 53
$822    $FA66   UNKNOWN  FA66            ; Unknown Fxxx instruction
$824    $97AB   UNKNOWN  $97AB           ; Unknown 9xxx instruction
$826    $B9D8   JP       V0, $9D8        ; Jump to V0 + 9D8
$828    $F4DA   UNKNOWN  F4DA            ; Unknown Fxxx instruction
$82A    $7550   ADD      V5, #50         ; Add 80 to V5
$82C    $0D07   SYS      $D07            ; System call to D07
$82E    $893A   UNKNOWN  893A            ; Unknown 8xxx instruction
$830    $12CD   JP       $2CD            ; Jump to 2CD
$832    $1794   JP       $794            ; Jump to 794
$834    $669A   LD       V6, #9A         ; Load 154 into V6
$836    $21E5   CALL     $1E5            ; Call subroutine at 1E5
$838    $B1CD   JP       V0, $1CD        ; Jump to V0 + 1CD
$83A    $0BA0   SYS      $BA0            ; System call to BA0
$83C    $59C3   UNKNOWN  $59C3           ; Unknown 5xxx instruction
$83E    $0426   SYS      $426            ; System call to 426
$840    $7245   ADD      V2, #45         ; Add 69 to V2
$842    $D084   DRW      V0, V8, #4      ; Draw 4-byte sprite at V0, V8
$844    $9E42   UNKNOWN  $9E42           ; Unknown 9xxx instruction
$846    $53EB   UNKNOWN  $53EB           ; Unknown 5xxx instruction
$848    $967D   UNKNOWN  $967D           ; Unknown 9xxx instruction
$84A    $2C90   CALL     $C90            ; Call subroutine at C90
$84C    $B537   JP       V0, $537        ; Jump to V0 + 537
$84E    $520A   UNKNOWN  $520A           ; Unknown 5xxx instruction
$850    $633C   LD       V3, #3C         ; Load 60 into V3
$852    $9A02   UNKNOWN  $9A02           ; Unknown 9xxx instruction
$854    $FA2D   UNKNOWN  FA2D            ; Unknown Fxxx instruction
$856    $C916   RND      V9, #16         ; V9 = random & 16
$858    $AEC9   LD       I, $EC9         ; Load EC9 into I
$85A    $3E31   SE       VE, #31         ; Skip if VE == 49
$85C    $5747   UNKNOWN  $5747           ; Unknown 5xxx instruction
$85E    $C84E   RND      V8, #4E         ; V8 = random & 4E
$860    $3091   SE       V0, #91         ; Skip if V0 == 145
$862    $EF9D   UNKNOWN  $EF9D           ; Unknown Exxx instruction
$864    $AAF8   LD       I, $AF8         ; Load AF8 into I
$866    $AF1B   LD       I, $F1B         ; Load F1B into I
$868    $EDA6   UNKNOWN  $EDA6           ; Unknown Exxx instruction
$86A    $CF76   RND      VF, #76         ; VF = random & 76
$86C    $2F57   CALL     $F57            ; Call subroutine at F57
$86E    $B0E6   JP       V0, $0E6        ; Jump to V0 + 0E6
$870    $7F2A   ADD      VF, #2A         ; Add 42 to VF
$872    $BC95   JP       V0, $C95        ; Jump to V0 + C95
$874    $81D8   UNKNOWN  81D8            ; Unknown 8xxx instruction
$876    $5450   SE       V4, V5          ; Skip if V4 == V5
$878    $BE44   JP       V0, $E44        ; Jump to V0 + E44
$87A    $4E83   SNE      VE, #83         ; Skip if VE != 131
$87C    $F6F4   UNKNOWN  F6F4            ; Unknown Fxxx instruction
$87E    $E3BD   UNKNOWN  $E3BD           ; Unknown Exxx instruction
$880    $F1B1   UNKNOWN  F1B1            ; Unknown Fxxx instruction
$882    $55D3   UNKNOWN  $55D3           ; Unknown 5xxx instruction
$884    $9AF0   SNE      VA, VF          ; Skip if VA != VF
$886    $ADE3   LD       I, $DE3         ; Load DE3 into I
$888    $4787   SNE      V7, #87         ; Skip if V7 != 135
$88A    $2633   CALL     $633            ; Call subroutine at 633
$88C    $D0E6   DRW      V0, VE, #6      ; Draw 6-byte sprite at V0, VE
$88E    $109D   JP       $09D            ; Jump to 09D
$890    $D897   DRW      V8, V9, #7      ; Draw 7-byte sprite at V8, V9
$892    $4569   SNE      V5, #69         ; Skip if V5 != 105
$894    $91D5   UNKNOWN  $91D5           ; Unknown 9xxx instruction
$896    $F4AE   UNKNOWN  F4AE            ; Unknown Fxxx instruction
$898    $3A4A   SE       VA, #4A         ; Skip if VA == 74
$89A    $0219   SYS      $219            ; System call to 219
$89C    $084E   SYS      $84E            ; System call to 84E
$89E    $A678   LD       I, $678         ; Load 678 into I
$8A0    $57C6   UNKNOWN  $57C6           ; Unknown 5xxx instruction
$8A2    $4A7E   SNE      VA, #7E         ; Skip if VA != 126
$8A4    $4DEE   SNE      VD, #EE         ; Skip if VD != 238
$8A6    $610C   LD       V1, #0C         ; Load 12 into V1
$8A8    $FC18   LD       ST, VC          ; Sound timer = VC
$8AA    $337B   SE       V3, #7B         ; Skip if V3 == 123
$8AC    $5EF6   UNKNOWN  $5EF6           ; Unknown 5xxx instruction
$8AE    $5872   UNKNOWN  $5872           ; Unknown 5xxx instruction
$8B0    $9E87   UNKNOWN  $9E87           ; Unknown 9xxx instruction
$8B2    $4590   SNE      V5, #90         ; Skip if V5 != 144
$8B4    $2950   CALL     $950            ; Call subroutine at 950
$8B6    $3527   SE       V5, #27         ; Skip if V5 == 39
$8B8    $FA41   UNKNOWN  FA41            ; Unknown Fxxx instruction
$8BA    $9F2E   UNKNOWN  $9F2E           ; Unknown 9xxx instruction
$8BC    $2CB3   CALL     $CB3            ; Call subroutine at CB3
$8BE    $6032   LD       V0, #32         ; Load 50 into V0
$8C0    $6461   LD       V4, #61         ; Load 97 into V4
$8C2    $289B   CALL     $89B            ; Call subroutine at 89B
$8C4    $52B9   UNKNOWN  $52B9           ; Unknown 5xxx instruction
$8C6    $529E   UNKNOWN  $529E           ; Unknown 5xxx instruction
$8C8    $8322   AND      V3, V2          ; V3 &= V2
$8CA    $EC14   UNKNOWN  $EC14           ; Unknown Exxx instruction
$8CC    $4E2E   SNE      VE, #2E         ; Skip if VE != 46
$8CE    $1321   JP       $321            ; Jump to 321
$8D0    $5526   UNKNOWN  $5526           ; Unknown 5xxx instruction
$8D2    $8E43   XOR      VE, V4          ; VE ^= V4
$8D4    $6CCA   LD       VC, #CA         ; Load 202 into VC
$8D6    $8283   XOR      V2, V8          ; V2 ^= V8
$8D8    $B2BC   JP       V0, $2BC        ; Jump to V0 + 2BC
$8DA    $C053   RND      V0, #53         ; V0 = random & 53
$8DC    $8A14   ADD      VA, V1          ; VA += V1, VF = carry
$8DE    $7D3C   ADD      VD, #3C         ; Add 60 to VD
$8E0    $6868   LD       V8, #68         ; Load 104 into V8
$8E2    $8FF2   AND      VF, VF          ; VF &= VF
$8E4    $4C29   SNE      VC, #29         ; Skip if VC != 41
$8E6    $8469   UNKNOWN  8469            ; Unknown 8xxx instruction
$8E8    $F7B8   UNKNOWN  F7B8            ; Unknown Fxxx instruction
$8EA    $99D4   UNKNOWN  $99D4           ; Unknown 9xxx instruction
$8EC    $ED62   UNKNOWN  $ED62           ; Unknown Exxx instruction
$8EE    $D589   DRW      V5, V8, #9      ; Draw 9-byte sprite at V5, V8
$8F0    $204D   CALL     $04D            ; Call subroutine at 04D
$8F2    $B65C   JP       V0, $65C        ; Jump to V0 + 65C
$8F4    $C4B2   RND      V4, #B2         ; V4 = random & B2
$8F6    $DF89   DRW      VF, V8, #9      ; Draw 9-byte sprite at VF, V8
$8F8    $5E6C   UNKNOWN  $5E6C           ; Unknown 5xxx instruction
$8FA    $F4A7   UNKNOWN  F4A7            ; Unknown Fxxx instruction
$8FC    $1042   JP       $042            ; Jump to 042
$8FE    $7000   ADD      V0, #00         ; Add 0 to V0
$900    $6C67   LD       VC, #67         ; Load 103 into VC
$902    $16FF   JP       $6FF            ; Jump to 6FF
$904    $4F92   SNE      VF, #92         ; Skip if VF != 146
$906    $4175   SNE      V1, #75         ; Skip if V1 != 117
$908    $1D49   JP       $D49            ; Jump to D49
$90A    $26C0   CALL     $6C0            ; Call subroutine at 6C0
$90C    $93F1   UNKNOWN  $93F1           ; Unknown 9xxx instruction
$90E    $F3D2   UNKNOWN  F3D2            ; Unknown Fxxx instruction
$910    $486C   SNE      V8, #6C         ; Skip if V8 != 108
$912    $C810   RND      V8, #10         ; V8 = random & 10
$914    $62BF   LD       V2, #BF         ; Load 191 into V2
$916    $E66E   UNKNOWN  $E66E           ; Unknown Exxx instruction
$918    $26E6   CALL     $6E6            ; Call subroutine at 6E6
$91A    $0BC9   SYS      $BC9            ; System call to BC9
$91C    $1813   JP       $813            ; Jump to 813
$91E    $E091   UNKNOWN  $E091           ; Unknown Exxx instruction
$920    $C1A0   RND      V1, #A0         ; V1 = random & A0
$922    $5583   UNKNOWN  $5583           ; Unknown 5xxx instruction
$924    $257E   CALL     $57E            ; Call subroutine at 57E
$926    $57EC   UNKNOWN  $57EC           ; Unknown 5xxx instruction
$928    $9546   UNKNOWN  $9546           ; Unknown 9xxx instruction
$92A    $DEAD   DRW      VE, VA, #D      ; Draw 13-byte sprite at VE, VA
$92C    $3A03   SE       VA, #03         ; Skip if VA == 3
$92E    $FC30   UNKNOWN  FC30            ; Unknown Fxxx instruction
$930    $23FF   CALL     $3FF            ; Call subroutine at 3FF
$932    $2E7C   CALL     $E7C            ; Call subroutine at E7C
$934    $4F58   SNE      VF, #58         ; Skip if VF != 88
$936    $E34F   UNKNOWN  $E34F           ; Unknown Exxx instruction
$938    $01D1   SYS      $1D1            ; System call to 1D1
$93A    $4A6A   SNE      VA, #6A         ; Skip if VA != 106
$93C    $5194   UNKNOWN  $5194           ; Unknown 5xxx instruction
$93E    $65B0   LD       V5, #B0         ; Load 176 into V5
$940    $A6C1   LD       I, $6C1         ; Load 6C1 into I
$942    $56F8   UNKNOWN  $56F8           ; Unknown 5xxx instruction
$944    $D792   DRW      V7, V9, #2      ; Draw 2-byte sprite at V7, V9
$946    $5DAA   UNKNOWN  $5DAA           ; Unknown 5xxx instruction
$948    $03EF   SYS      $3EF            ; System call to 3EF
$94A    $233A   CALL     $33A            ; Call subroutine at 33A
$94C    $BF4B   JP       V0, $F4B        ; Jump to V0 + F4B
$94E    $46E1   SNE      V6, #E1         ; Skip if V6 != 225
$950    $DD4C   DRW      VD, V4, #C      ; Draw 12-byte sprite at VD, V4
$952    $20D4   CALL     $0D4            ; Call subroutine at 0D4
$954    $A2CE   LD       I, $2CE         ; Load 2CE into I
$956    $F0AD   UNKNOWN  F0AD            ; Unknown Fxxx instruction
$958    $7614   ADD      V6, #14         ; Add 20 to V6
$95A    $9796   UNKNOWN  $9796           ; Unknown 9xxx instruction
$95C    $47C7   SNE      V7, #C7         ; Skip if V7 != 199
$95E    $9E46   UNKNOWN  $9E46           ; Unknown 9xxx instruction
$960    $D2FF   DRW      V2, VF, #F      ; Draw 15-byte sprite at V2, VF
$962    $4256   SNE      V2, #56         ; Skip if V2 != 86
$964    $E19B   UNKNOWN  $E19B           ; Unknown Exxx instruction
$966    $A35E   LD       I, $35E         ; Load 35E into I
$968    $AF62   LD       I, $F62         ; Load F62 into I
$96A    $923C   UNKNOWN  $923C           ; Unknown 9xxx instruction
$96C    $0A57   SYS      $A57            ; System call to A57
$96E    $CF5A   RND      VF, #5A         ; VF = random & 5A
$970    $9442   UNKNOWN  $9442           ; Unknown 9xxx instruction
$972    $3723   SE       V7, #23         ; Skip if V7 == 35
$974    $A467   LD       I, $467         ; Load 467 into I
$976    $FCBA   UNKNOWN  FCBA            ; Unknown Fxxx instruction
$978    $9D54   UNKNOWN  $9D54           ; Unknown 9xxx instruction
$97A    $4002   SNE      V0, #02         ; Skip if V0 != 2
$97C    $203A   CALL     $03A            ; Call subroutine at 03A
$97E    $D75E   DRW      V7, V5, #E      ; Draw 14-byte sprite at V7, V5
$980    $13C6   JP       $3C6            ; Jump to 3C6
$982    $B6C5   JP       V0, $6C5        ; Jump to V0 + 6C5
$984    $6A43   LD       VA, #43         ; Load 67 into VA
$986    $B0F9   JP       V0, $0F9        ; Jump to V0 + 0F9
$988    $A0DA   LD       I, $0DA         ; Load 0DA into I
$98A    $A647   LD       I, $647         ; Load 647 into I
$98C    $B6B0   JP       V0, $6B0        ; Jump to V0 + 6B0
$98E    $1813   JP       $813            ; Jump to 813
$990    $0EF8   SYS      $EF8            ; System call to EF8
$992    $1128   JP       $128            ; Jump to 128
$994    $1281   JP       $281            ; Jump to 281
$996    $64FC   LD       V4, #FC         ; Load 252 into V4
$998    $4218   SNE      V2, #18         ; Skip if V2 != 24
$99A    $DE49   DRW      VE, V4, #9      ; Draw 9-byte sprite at VE, V4
$99C    $DC26   DRW      VC, V2, #6      ; Draw 6-byte sprite at VC, V2
$99E    $8A6A   UNKNOWN  8A6A            ; Unknown 8xxx instruction
$9A0    $C29D   RND      V2, #9D         ; V2 = random & 9D
$9A2    $085E   SYS      $85E            ; System call to 85E
$9A4    $3FFE   SE       VF, #FE         ; Skip if VF == 254
$9A6    $7144   ADD      V1, #44         ; Add 68 to V1
$9A8    $709A   ADD      V0, #9A         ; Add 154 to V0
$9AA    $0F42   SYS      $F42            ; System call to F42
$9AC    $78C0   ADD      V8, #C0         ; Add 192 to V8
$9AE    $2E5B   CALL     $E5B            ; Call subroutine at E5B
$9B0    $98E2   UNKNOWN  $98E2           ; Unknown 9xxx instruction
$9B2    $AA62   LD       I, $A62         ; Load A62 into I
$9B4    $0060   SYS      $060            ; System call to 060
$9B6    $139F   JP       $39F            ; Jump to 39F
$9B8    $0F13   SYS      $F13            ; System call to F13
$9BA    $A6CF   LD       I, $6CF         ; Load 6CF into I
$9BC    $A4FD   LD       I, $4FD         ; Load 4FD into I
$9BE    $2BE4   CALL     $BE4            ; Call subroutine at BE4
$9C0    $D023   DRW      V0, V2, #3      ; Draw 3-byte sprite at V0, V2
$9C2    $94ED   UNKNOWN  $94ED           ; Unknown 9xxx instruction
$9C4    $5421   UNKNOWN  $5421           ; Unknown 5xxx instruction
$9C6    $5BF8   UNKNOWN  $5BF8           ; Unknown 5xxx instruction
$9C8    $8ECF   UNKNOWN  8ECF            ; Unknown 8xxx instruction
$9CA    $82AC   UNKNOWN  82AC            ; Unknown 8xxx instruction
$9CC    $6A3D   LD       VA, #3D         ; Load 61 into VA
$9CE    $1D68   JP       $D68            ; Jump to D68
$9D0    $E2EC   UNKNOWN  $E2EC           ; Unknown Exxx instruction
$9D2    $C345   RND      V3, #45         ; V3 = random & 45
$9D4    $1BE2   JP       $BE2            ; Jump to BE2
$9D6    $A075   LD       I, $075         ; Load 075 into I
$9D8    $C4CD   RND      V4, #CD         ; V4 = random & CD
$9DA    $A20B   LD       I, $20B         ; Load 20B into I
$9DC    $37AB   SE       V7, #AB         ; Skip if V7 == 171
$9DE    $431C   SNE      V3, #1C         ; Skip if V3 != 28
$9E0    $9806   UNKNOWN  $9806           ; Unknown 9xxx instruction
$9E2    $E792   UNKNOWN  $E792           ; Unknown Exxx instruction
$9E4    $18A9   JP       $8A9            ; Jump to 8A9
$9E6    $01C4   SYS      $1C4            ; System call to 1C4
$9E8    $96DB   UNKNOWN  $96DB           ; Unknown 9xxx instruction
$9EA    $8F5F   UNKNOWN  8F5F            ; Unknown 8xxx instruction
$9EC    $44A2   SNE      V4, #A2         ; Skip if V4 != 162
$9EE    $72CE   ADD      V2, #CE         ; Add 206 to V2
$9F0    $0668   SYS      $668            ; System call to 668
$9F2    $299C   CALL     $99C            ; Call subroutine at 99C
$9F4    $8266   SHR      V2              ; V2 >>= 1, VF = LSB
$9F6    $70BF   ADD      V0, #BF         ; Add 191 to V0
$9F8    $B4D4   JP       V0, $4D4        ; Jump to V0 + 4D4
$9FA    $E404   UNKNOWN  $E404           ; Unknown Exxx instruction
$9FC    $AB6D   LD       I, $B6D         ; Load B6D into I
$9FE    $265F   CALL     $65F            ; Call subroutine at 65F
$A00    $77DE   ADD      V7, #DE         ; Add 222 to V7
$A02    $1319   JP       $319            ; Jump to 319
$A04    $0284   SYS      $284            ; System call to 284
$A06    $F808   UNKNOWN  F808            ; Unknown Fxxx instruction
$A08    $2E3B   CALL     $E3B            ; Call subroutine at E3B
$A0A    $9C24   UNKNOWN  $9C24           ; Unknown 9xxx instruction
$A0C    $A941   LD       I, $941         ; Load 941 into I
$A0E    $E07A   UNKNOWN  $E07A           ; Unknown Exxx instruction
$A10    $DE39   DRW      VE, V3, #9      ; Draw 9-byte sprite at VE, V3
$A12    $20A1   CALL     $0A1            ; Call subroutine at 0A1
$A14    $2F46   CALL     $F46            ; Call subroutine at F46
$A16    $DD75   DRW      VD, V7, #5      ; Draw 5-byte sprite at VD, V7
$A18    $7EC8   ADD      VE, #C8         ; Add 200 to VE
$A1A    $2174   CALL     $174            ; Call subroutine at 174
$A1C    $0ED1   SYS      $ED1            ; System call to ED1
$A1E    $1A78   JP       $A78            ; Jump to A78
$A20    $B781   JP       V0, $781        ; Jump to V0 + 781
$A22    $2154   CALL     $154            ; Call subroutine at 154
$A24    $271C   CALL     $71C            ; Call subroutine at 71C
$A26    $12F9   JP       $2F9            ; Jump to 2F9
$A28    $515F   UNKNOWN  $515F           ; Unknown 5xxx instruction
$A2A    $4134   SNE      V1, #34         ; Skip if V1 != 52
$A2C    $D657   DRW      V6, V5, #7      ; Draw 7-byte sprite at V6, V5
$A2E    $0B06   SYS      $B06            ; System call to B06
$A30    $5726   UNKNOWN  $5726           ; Unknown 5xxx instruction
$A32    $1CF0   JP       $CF0            ; Jump to CF0
$A34    $2A8C   CALL     $A8C            ; Call subroutine at A8C
$A36    $E41F   UNKNOWN  $E41F           ; Unknown Exxx instruction
$A38    $258B   CALL     $58B            ; Call subroutine at 58B
$A3A    $1E51   JP       $E51            ; Jump to E51
$A3C    $2C81   CALL     $C81            ; Call subroutine at C81
$A3E    $8A9E   SHL      VA              ; VA <<= 1, VF = MSB
$A40    $EA92   UNKNOWN  $EA92           ; Unknown Exxx instruction
$A42    $1355   JP       $355            ; Jump to 355
$A44    $A796   LD       I, $796         ; Load 796 into I
$A46    $0F7D   SYS      $F7D            ; System call to F7D
$A48    $0FA3   SYS      $FA3            ; System call to FA3
$A4A    $A36F   LD       I, $36F         ; Load 36F into I
$A4C    $4582   SNE      V5, #82         ; Skip if V5 != 130
$A4E    $2FC3   CALL     $FC3            ; Call subroutine at FC3
$A50    $C85E   RND      V8, #5E         ; V8 = random & 5E
$A52    $33E9   SE       V3, #E9         ; Skip if V3 == 233
$A54    $2F4D   CALL     $F4D            ; Call subroutine at F4D
$A56    $D226   DRW      V2, V2, #6      ; Draw 6-byte sprite at V2, V2
$A58    $2C73   CALL     $C73            ; Call subroutine at C73
$A5A    $3976   SE       V9, #76         ; Skip if V9 == 118
$A5C    $D80D   DRW      V8, V0, #D      ; Draw 13-byte sprite at V8, V0
$A5E    $3721   SE       V7, #21         ; Skip if V7 == 33
$A60    $926C   UNKNOWN  $926C           ; Unknown 9xxx instruction
$A62    $36D3   SE       V6, #D3         ; Skip if V6 == 211
$A64    $BF8A   JP       V0, $F8A        ; Jump to V0 + F8A
$A66    $ED44   UNKNOWN  $ED44           ; Unknown Exxx instruction
$A68    $67BE   LD       V7, #BE         ; Load 190 into V7
$A6A    $7615   ADD      V6, #15         ; Add 21 to V6
$A6C    $FDB4   UNKNOWN  FDB4            ; Unknown Fxxx instruction
$A6E    $3CD8   SE       VC, #D8         ; Skip if VC == 216
$A70    $2677   CALL     $677            ; Call subroutine at 677
$A72    $4FBD   SNE      VF, #BD         ; Skip if VF != 189
$A74    $4315   SNE      V3, #15         ; Skip if V3 != 21
$A76    $D535   DRW      V5, V3, #5      ; Draw 5-byte sprite at V5, V3
$A78    $B8E0   JP       V0, $8E0        ; Jump to V0 + 8E0
$A7A    $D28A   DRW      V2, V8, #A      ; Draw 10-byte sprite at V2, V8
$A7C    $26F6   CALL     $6F6            ; Call subroutine at 6F6
$A7E    $13B2   JP       $3B2            ; Jump to 3B2
$A80    $6629   LD       V6, #29         ; Load 41 into V6
$A82    $0E18   SYS      $E18            ; System call to E18
$A84    $BCDC   JP       V0, $CDC        ; Jump to V0 + CDC
$A86    $42C3   SNE      V2, #C3         ; Skip if V2 != 195
$A88    $E161   UNKNOWN  $E161           ; Unknown Exxx instruction
$A8A    $C21B   RND      V2, #1B         ; V2 = random & 1B
$A8C    $B0F8   JP       V0, $0F8        ; Jump to V0 + 0F8
$A8E    $EE35   UNKNOWN  $EE35           ; Unknown Exxx instruction
$A90    $3893   SE       V8, #93         ; Skip if V8 == 147
$A92    $091E   SYS      $91E            ; System call to 91E
$A94    $EA96   UNKNOWN  $EA96           ; Unknown Exxx instruction
$A96    $759C   ADD      V5, #9C         ; Add 156 to V5
$A98    $408B   SNE      V0, #8B         ; Skip if V0 != 139
$A9A    $52F6   UNKNOWN  $52F6           ; Unknown 5xxx instruction
$A9C    $920D   UNKNOWN  $920D           ; Unknown 9xxx instruction
$A9E    $396E   SE       V9, #6E         ; Skip if V9 == 110
$AA0    $5C77   UNKNOWN  $5C77           ; Unknown 5xxx instruction
$AA2    $1794   JP       $794            ; Jump to 794
$AA4    $45D5   SNE      V5, #D5         ; Skip if V5 != 213
$AA6    $9DED   UNKNOWN  $9DED           ; Unknown 9xxx instruction
$AA8    $B6EA   JP       V0, $6EA        ; Jump to V0 + 6EA
$AAA    $FD1A   UNKNOWN  FD1A            ; Unknown Fxxx instruction
$AAC    $36F7   SE       V6, #F7         ; Skip if V6 == 247
$AAE    $2C33   CALL     $C33            ; Call subroutine at C33
$AB0    $F9D2   UNKNOWN  F9D2            ; Unknown Fxxx instruction
$AB2    $CFEC   RND      VF, #EC         ; VF = random & EC
$AB4    $957B   UNKNOWN  $957B           ; Unknown 9xxx instruction
$AB6    $A8E4   LD       I, $8E4         ; Load 8E4 into I
$AB8    $0ED4   SYS      $ED4            ; System call to ED4
$ABA    $C7B1   RND      V7, #B1         ; V7 = random & B1
$ABC    $317F   SE       V1, #7F         ; Skip if V1 == 127
$ABE    $AA65   LD       I, $A65         ; Load A65 into I
$AC0    $B397   JP       V0, $397        ; Jump to V0 + 397
$AC2    $189B   JP       $89B            ; Jump to 89B
$AC4    $9B20   SNE      VB, V2          ; Skip if VB != V2
$AC6    $B48A   JP       V0, $48A        ; Jump to V0 + 48A
$AC8    $917F   UNKNOWN  $917F           ; Unknown 9xxx instruction
$ACA    $949F   UNKNOWN  $949F           ; Unknown 9xxx instruction
$ACC    $3A2D   SE       VA, #2D         ; Skip if VA == 45
$ACE    $19F7   JP       $9F7            ; Jump to 9F7
$AD0    $4E51   SNE      VE, #51         ; Skip if VE != 81
$AD2    $6B2F   LD       VB, #2F         ; Load 47 into VB
$AD4    $5972   UNKNOWN  $5972           ; Unknown 5xxx instruction
$AD6    $CE81   RND      VE, #81         ; VE = random & 81
$AD8    $AB6F   LD       I, $B6F         ; Load B6F into I
$ADA    $2253   CALL     $253            ; Call subroutine at 253
$ADC    $30F2   SE       V0, #F2         ; Skip if V0 == 242
$ADE    $684F   LD       V8, #4F         ; Load 79 into V8
$AE0    $1471   JP       $471            ; Jump to 471
$AE2    $7A34   ADD      VA, #34         ; Add 52 to VA
$AE4    $F368   UNKNOWN  F368            ; Unknown Fxxx instruction
$AE6    $6506   LD       V5, #06         ; Load 6 into V5
$AE8    $A580   LD       I, $580         ; Load 580 into I
$AEA    $27CD   CALL     $7CD            ; Call subroutine at 7CD
$AEC    $DA6E   DRW      VA, V6, #E      ; Draw 14-byte sprite at VA, V6
$AEE    $0385   SYS      $385            ; System call to 385
$AF0    $1928   JP       $928            ; Jump to 928
$AF2    $F304   UNKNOWN  F304            ; Unknown Fxxx instruction
$AF4    $3849   SE       V8, #49         ; Skip if V8 == 73
$AF6    $DD1B   DRW      VD, V1, #B      ; Draw 11-byte sprite at VD, V1
$AF8    $6302   LD       V3, #02         ; Load 2 into V3
$AFA    $D000   DRW      V0, V0, #0      ; Draw 0-byte sprite at V0, V0
$AFC    $E749   UNKNOWN  $E749           ; Unknown Exxx instruction
$AFE    $108E   JP       $08E            ; Jump to 08E
$B00    $702E   ADD      V0, #2E         ; Add 46 to V0
$B02    $BFF7   JP       V0, $FF7        ; Jump to V0 + FF7
$B04    $F493   UNKNOWN  F493            ; Unknown Fxxx instruction
$B06    $4757   SNE      V7, #57         ; Skip if V7 != 87
$B08    $930D   UNKNOWN  $930D           ; Unknown 9xxx instruction
$B0A    $46E0   SNE      V6, #E0         ; Skip if V6 != 224
$B0C    $5D89   UNKNOWN  $5D89           ; Unknown 5xxx instruction
$B0E    $E73F   UNKNOWN  $E73F           ; Unknown Exxx instruction
$B10    $ED0E   UNKNOWN  $ED0E           ; Unknown Exxx instruction
$B12    $B877   JP       V0, $877        ; Jump to V0 + 877
$B14    $E4B2   UNKNOWN  $E4B2           ; Unknown Exxx instruction
$B16    $4D4B   SNE      VD, #4B         ; Skip if VD != 75
$B18    $23BD   CALL     $3BD            ; Call subroutine at 3BD
$B1A    $2F24   CALL     $F24            ; Call subroutine at F24
$B1C    $67D1   LD       V7, #D1         ; Load 209 into V7
$B1E    $2A01   CALL     $A01            ; Call subroutine at A01
$B20    $269F   CALL     $69F            ; Call subroutine at 69F
$B22    $6E15   LD       VE, #15         ; Load 21 into VE
$B24    $C0A2   RND      V0, #A2         ; V0 = random & A2
$B26    $60E3   LD       V0, #E3         ; Load 227 into V0
$B28    $759C   ADD      V5, #9C         ; Add 156 to V5
$B2A    $1330   JP       $330            ; Jump to 330
$B2C    $9A3B   UNKNOWN  $9A3B           ; Unknown 9xxx instruction
$B2E    $7362   ADD      V3, #62         ; Add 98 to V3
$B30    $601D   LD       V0, #1D         ; Load 29 into V0
$B32    $365D   SE       V6, #5D         ; Skip if V6 == 93
$B34    $D2D9   DRW      V2, VD, #9      ; Draw 9-byte sprite at V2, VD
$B36    $A82D   LD       I, $82D         ; Load 82D into I
$B38    $9E75   UNKNOWN  $9E75           ; Unknown 9xxx instruction
$B3A    $A759   LD       I, $759         ; Load 759 into I
$B3C    $D2DA   DRW      V2, VD, #A      ; Draw 10-byte sprite at V2, VD
$B3E    $AEA0   LD       I, $EA0         ; Load EA0 into I
$B40    $65D8   LD       V5, #D8         ; Load 216 into V5
$B42    $3A61   SE       VA, #61         ; Skip if VA == 97
$B44    $B71C   JP       V0, $71C        ; Jump to V0 + 71C
$B46    $9C20   SNE      VC, V2          ; Skip if VC != V2
$B48    $710F   ADD      V1, #0F         ; Add 15 to V1
$B4A    $C107   RND      V1, #07         ; V1 = random & 07
$B4C    $E6C8   UNKNOWN  $E6C8           ; Unknown Exxx instruction
$B4E    $5180   SE       V1, V8          ; Skip if V1 == V8
$B50    $8986   SHR      V9              ; V9 >>= 1, VF = LSB
$B52    $C3A0   RND      V3, #A0         ; V3 = random & A0
$B54    $BCC6   JP       V0, $CC6        ; Jump to V0 + CC6
$B56    $687A   LD       V8, #7A         ; Load 122 into V8
$B58    $5222   UNKNOWN  $5222           ; Unknown 5xxx instruction
$B5A    $B6B2   JP       V0, $6B2        ; Jump to V0 + 6B2
$B5C    $E9F3   UNKNOWN  $E9F3           ; Unknown Exxx instruction
$B5E    $BA24   JP       V0, $A24        ; Jump to V0 + A24
$B60    $AC0F   LD       I, $C0F         ; Load C0F into I
$B62    $2232   CALL     $232            ; Call subroutine at 232
$B64    $B538   JP       V0, $538        ; Jump to V0 + 538
$B66    $973C   UNKNOWN  $973C           ; Unknown 9xxx instruction
$B68    $5847   UNKNOWN  $5847           ; Unknown 5xxx instruction
$B6A    $430C   SNE      V3, #0C         ; Skip if V3 != 12
$B6C    $D8C6   DRW      V8, VC, #6      ; Draw 6-byte sprite at V8, VC
$B6E    $DC3C   DRW      VC, V3, #C      ; Draw 12-byte sprite at VC, V3
$B70    $50E7   UNKNOWN  $50E7           ; Unknown 5xxx instruction
$B72    $12D0   JP       $2D0            ; Jump to 2D0
$B74    $120A   JP       $20A            ; Jump to 20A
$B76    $08D7   SYS      $8D7            ; System call to 8D7
$B78    $6960   LD       V9, #60         ; Load 96 into V9
$B7A    $F4C0   UNKNOWN  F4C0            ; Unknown Fxxx instruction
$B7C    $ABCC   LD       I, $BCC         ; Load BCC into I
$B7E    $6D4C   LD       VD, #4C         ; Load 76 into VD
$B80    $510F   UNKNOWN  $510F           ; Unknown 5xxx instruction
$B82    $F5CD   UNKNOWN  F5CD            ; Unknown Fxxx instruction
$B84    $C2B1   RND      V2, #B1         ; V2 = random & B1
$B86    $89D2   AND      V9, VD          ; V9 &= VD
$B88    $BDDD   JP       V0, $DDD        ; Jump to V0 + DDD
$B8A    $ACA2   LD       I, $CA2         ; Load CA2 into I
$B8C    $1B73   JP       $B73            ; Jump to B73
$B8E    $F2AD   UNKNOWN  F2AD            ; Unknown Fxxx instruction
$B90    $C82B   RND      V8, #2B         ; V8 = random & 2B
$B92    $06F9   SYS      $6F9            ; System call to 6F9
$B94    $77C4   ADD      V7, #C4         ; Add 196 to V7
$B96    $6A0C   LD       VA, #0C         ; Load 12 into VA
$B98    $FDEB   UNKNOWN  FDEB            ; Unknown Fxxx instruction
$B9A    $A38E   LD       I, $38E         ; Load 38E into I
$B9C    $1A42   JP       $A42            ; Jump to A42
$B9E    $F9F4   UNKNOWN  F9F4            ; Unknown Fxxx instruction
$BA0    $8C97   SUBN     VC, V9          ; VC = V9 - VC, VF = !borrow
$BA2    $BF49   JP       V0, $F49        ; Jump to V0 + F49
$BA4    $3C30   SE       VC, #30         ; Skip if VC == 48
$BA6    $617D   LD       V1, #7D         ; Load 125 into V1
$BA8    $6E56   LD       VE, #56         ; Load 86 into VE
$BAA    $E165   UNKNOWN  $E165           ; Unknown Exxx instruction
$BAC    $F933   LD       B, V9           ; Store BCD of V9 at I, I+1, I+2
$BAE    $CAB9   RND      VA, #B9         ; VA = random & B9
$BB0    $3EC6   SE       VE, #C6         ; Skip if VE == 198
$BB2    $F10C   UNKNOWN  F10C            ; Unknown Fxxx instruction
$BB4    $B3E9   JP       V0, $3E9        ; Jump to V0 + 3E9
$BB6    $9B18   UNKNOWN  $9B18           ; Unknown 9xxx instruction
$BB8    $8E2F   UNKNOWN  8E2F            ; Unknown 8xxx instruction
$BBA    $CC22   RND      VC, #22         ; VC = random & 22
$BBC    $3307   SE       V3, #07         ; Skip if V3 == 7
$BBE    $784A   ADD      V8, #4A         ; Add 74 to V8
$BC0    $A977   LD       I, $977         ; Load 977 into I
$BC2    $B9D8   JP       V0, $9D8        ; Jump to V0 + 9D8
$BC4    $CF0B   RND      VF, #0B         ; VF = random & 0B
$BC6    $6123   LD       V1, #23         ; Load 35 into V1
$BC8    $BE33   JP       V0, $E33        ; Jump to V0 + E33
$BCA    $49F3   SNE      V9, #F3         ; Skip if V9 != 243
$BCC    $98F0   SNE      V8, VF          ; Skip if V8 != VF
$BCE    $8190   LD       V1, V9          ; V1 = V9
$BD0    $C539   RND      V5, #39         ; V5 = random & 39
$BD2    $9DA8   UNKNOWN  $9DA8           ; Unknown 9xxx instruction
$BD4    $8339   UNKNOWN  8339            ; Unknown 8xxx instruction
$BD6    $BE7A   JP       V0, $E7A        ; Jump to V0 + E7A
$BD8    $6725   LD       V7, #25         ; Load 37 into V7
$BDA    $BACB   JP       V0, $ACB        ; Jump to V0 + ACB
$BDC    $296E   CALL     $96E            ; Call subroutine at 96E
$BDE    $C08F   RND      V0, #8F         ; V0 = random & 8F
$BE0    $D2A6   DRW      V2, VA, #6      ; Draw 6-byte sprite at V2, VA
$BE2    $CFE5   RND      VF, #E5         ; VF = random & E5
$BE4    $04F8   SYS      $4F8            ; System call to 4F8
$BE6    $B581   JP       V0, $581        ; Jump to V0 + 581
$BE8    $8CD9   UNKNOWN  8CD9            ; Unknown 8xxx instruction
$BEA    $D91D   DRW      V9, V1, #D      ; Draw 13-byte sprite at V9, V1
$BEC    $AA04   LD       I, $A04         ; Load A04 into I
$BEE    $D8A0   DRW      V8, VA, #0      ; Draw 0-byte sprite at V8, VA
$BF0    $0CF9   SYS      $CF9            ; System call to CF9
$BF2    $F388   UNKNOWN  F388            ; Unknown Fxxx instruction
$BF4    $3691   SE       V6, #91         ; Skip if V6 == 145
$BF6    $BEE6   JP       V0, $EE6        ; Jump to V0 + EE6
$BF8    $5FF6   UNKNOWN  $5FF6           ; Unknown 5xxx instruction
$BFA    $1E88   JP       $E88            ; Jump to E88
$BFC    $FEAA   UNKNOWN  FEAA            ; Unknown Fxxx instruction
$BFE    $573C   UNKNOWN  $573C           ; Unknown 5xxx instruction
$C00    $99C0   SNE      V9, VC          ; Skip if V9 != VC
$C02    $FCD7   UNKNOWN  FCD7            ; Unknown Fxxx instruction
$C04    $F4D0   UNKNOWN  F4D0            ; Unknown Fxxx instruction
$C06    $7628   ADD      V6, #28         ; Add 40 to V6
$C08    $7ED0   ADD      VE, #D0         ; Add 208 to VE
$C0A    $D501   DRW      V5, V0, #1      ; Draw 1-byte sprite at V5, V0
$C0C    $44EF   SNE      V4, #EF         ; Skip if V4 != 239
$C0E    $6A42   LD       VA, #42         ; Load 66 into VA
$C10    $716E   ADD      V1, #6E         ; Add 110 to V1
$C12    $3129   SE       V1, #29         ; Skip if V1 == 41
$C14    $3ACC   SE       VA, #CC         ; Skip if VA == 204
$C16    $043C   SYS      $43C            ; System call to 43C
$C18    $1E48   JP       $E48            ; Jump to E48
$C1A    $C554   RND      V5, #54         ; V5 = random & 54
$C1C    $4294   SNE      V2, #94         ; Skip if V2 != 148
$C1E    $09D4   SYS      $9D4            ; System call to 9D4
$C20    $FD00   UNKNOWN  FD00            ; Unknown Fxxx instruction
$C22    $5995   UNKNOWN  $5995           ; Unknown 5xxx instruction
$C24    $2BFB   CALL     $BFB            ; Call subroutine at BFB
$C26    $BE00   JP       V0, $E00        ; Jump to V0 + E00
$C28    $CB17   RND      VB, #17         ; VB = random & 17
$C2A    $7434   ADD      V4, #34         ; Add 52 to V4
$C2C    $D1DC   DRW      V1, VD, #C      ; Draw 12-byte sprite at V1, VD
$C2E    $6CA8   LD       VC, #A8         ; Load 168 into VC
$C30    $1250   JP       $250            ; Jump to 250
$C32    $6F6C   LD       VF, #6C         ; Load 108 into VF
$C34    $F389   UNKNOWN  F389            ; Unknown Fxxx instruction
$C36    $51AF   UNKNOWN  $51AF           ; Unknown 5xxx instruction
$C38    $C720   RND      V7, #20         ; V7 = random & 20
$C3A    $04DE   SYS      $4DE            ; System call to 4DE
$C3C    $835F   UNKNOWN  835F            ; Unknown 8xxx instruction
$C3E    $4EF6   SNE      VE, #F6         ; Skip if VE != 246
$C40    $5E35   UNKNOWN  $5E35           ; Unknown 5xxx instruction
$C42    $6A08   LD       VA, #08         ; Load 8 into VA
$C44    $EC1C   UNKNOWN  $EC1C           ; Unknown Exxx instruction
$C46    $6FD2   LD       VF, #D2         ; Load 210 into VF
$C48    $4C46   SNE      VC, #46         ; Skip if VC != 70
$C4A    $1230   JP       $230            ; Jump to 230
$C4C    $CE8C   RND      VE, #8C         ; VE = random & 8C
$C4E    $7C18   ADD      VC, #18         ; Add 24 to VC
$C50    $7C96   ADD      VC, #96         ; Add 150 to VC
$C52    $88FC   UNKNOWN  88FC            ; Unknown 8xxx instruction
$C54    $CFE4   RND      VF, #E4         ; VF = random & E4
$C56    $9ED8   UNKNOWN  $9ED8           ; Unknown 9xxx instruction
$C58    $9841   UNKNOWN  $9841           ; Unknown 9xxx instruction
$C5A    $3D4B   SE       VD, #4B         ; Skip if VD == 75
$C5C    $A93B   LD       I, $93B         ; Load 93B into I
$C5E    $0180   SYS      $180            ; System call to 180
$C60    $2AB6   CALL     $AB6            ; Call subroutine at AB6
$C62    $B886   JP       V0, $886        ; Jump to V0 + 886
$C64    $F222   UNKNOWN  F222            ; Unknown Fxxx instruction
$C66    $F3BC   UNKNOWN  F3BC            ; Unknown Fxxx instruction
$C68    $64CB   LD       V4, #CB         ; Load 203 into V4
$C6A    $761D   ADD      V6, #1D         ; Add 29 to V6
$C6C    $50CB   UNKNOWN  $50CB           ; Unknown 5xxx instruction
$C6E    $0F7C   SYS      $F7C            ; System call to F7C
$C70    $3345   SE       V3, #45         ; Skip if V3 == 69
$C72    $678B   LD       V7, #8B         ; Load 139 into V7
$C74    $DC20   DRW      VC, V2, #0      ; Draw 0-byte sprite at VC, V2
$C76    $F14C   UNKNOWN  F14C            ; Unknown Fxxx instruction
$C78    $42B0   SNE      V2, #B0         ; Skip if V2 != 176
$C7A    $88DA   UNKNOWN  88DA            ; Unknown 8xxx instruction
$C7C    $3D69   SE       VD, #69         ; Skip if VD == 105
$C7E    $ED8B   UNKNOWN  $ED8B           ; Unknown Exxx instruction
$C80    $3FF4   SE       VF, #F4         ; Skip if VF == 244
$C82    $3E7A   SE       VE, #7A         ; Skip if VE == 122
$C84    $7BE9   ADD      VB, #E9         ; Add 233 to VB
$C86    $B56F   JP       V0, $56F        ; Jump to V0 + 56F
$C88    $4946   SNE      V9, #46         ; Skip if V9 != 70
$C8A    $7AFB   ADD      VA, #FB         ; Add 251 to VA
$C8C    $AB85   LD       I, $B85         ; Load B85 into I
$C8E    $C9DB   RND      V9, #DB         ; V9 = random & DB
$C90    $128A   JP       $28A            ; Jump to 28A
$C92    $973E   UNKNOWN  $973E           ; Unknown 9xxx instruction
$C94    $C757   RND      V7, #57         ; V7 = random & 57
$C96    $9F5A   UNKNOWN  $9F5A           ; Unknown 9xxx instruction
$C98    $DDF9   DRW      VD, VF, #9      ; Draw 9-byte sprite at VD, VF
$C9A    $B800   JP       V0, $800        ; Jump to V0 + 800
$C9C    $E440   UNKNOWN  $E440           ; Unknown Exxx instruction
$C9E    $0BB1   SYS      $BB1            ; System call to BB1
$CA0    $6A77   LD       VA, #77         ; Load 119 into VA
$CA2    $556F   UNKNOWN  $556F           ; Unknown 5xxx instruction
$CA4    $4DA1   SNE      VD, #A1         ; Skip if VD != 161
$CA6    $B152   JP       V0, $152        ; Jump to V0 + 152
$CA8    $6A6D   LD       VA, #6D         ; Load 109 into VA
$CAA    $8A37   SUBN     VA, V3          ; VA = V3 - VA, VF = !borrow
$CAC    $8F66   SHR      VF              ; VF >>= 1, VF = LSB
$CAE    $03C0   SYS      $3C0            ; System call to 3C0
$CB0    $6D97   LD       VD, #97         ; Load 151 into VD
$CB2    $DB61   DRW      VB, V6, #1      ; Draw 1-byte sprite at VB, V6
$CB4    $9A1A   UNKNOWN  $9A1A           ; Unknown 9xxx instruction
$CB6    $7C57   ADD      VC, #57         ; Add 87 to VC
$CB8    $E9E8   UNKNOWN  $E9E8           ; Unknown Exxx instruction
$CBA    $423B   SNE      V2, #3B         ; Skip if V2 != 59
$CBC    $DAD8   DRW      VA, VD, #8      ; Draw 8-byte sprite at VA, VD
$CBE    $4F27   SNE      VF, #27         ; Skip if VF != 39
$CC0    $2332   CALL     $332            ; Call subroutine at 332
$CC2    $0888   SYS      $888            ; System call to 888
$CC4    $7939   ADD      V9, #39         ; Add 57 to V9
$CC6    $88E4   ADD      V8, VE          ; V8 += VE, VF = carry
$CC8    $E3CE   UNKNOWN  $E3CE           ; Unknown Exxx instruction
$CCA    $2941   CALL     $941            ; Call subroutine at 941
$CCC    $A8E5   LD       I, $8E5         ; Load 8E5 into I
$CCE    $0C56   SYS      $C56            ; System call to C56
$CD0    $66CE   LD       V6, #CE         ; Load 206 into V6
$CD2    $C30D   RND      V3, #0D         ; V3 = random & 0D
$CD4    $C2E5   RND      V2, #E5         ; V2 = random & E5
$CD6    $56B5   UNKNOWN  $56B5           ; Unknown 5xxx instruction
$CD8    $E6A9   UNKNOWN  $E6A9           ; Unknown Exxx instruction
$CDA    $17EF   JP       $7EF            ; Jump to 7EF
$CDC    $0D09   SYS      $D09            ; System call to D09
$CDE    $F20A   LD       V2, K           ; Wait for key press, store in V2
$CE0    $D103   DRW      V1, V0, #3      ; Draw 3-byte sprite at V1, V0
$CE2    $A1CD   LD       I, $1CD         ; Load 1CD into I
$CE4    $83B3   XOR      V3, VB          ; V3 ^= VB
$CE6    $5CCF   UNKNOWN  $5CCF           ; Unknown 5xxx instruction
$CE8    $A483   LD       I, $483         ; Load 483 into I
$CEA    $0F0D   SYS      $F0D            ; System call to F0D
$CEC    $AE2A   LD       I, $E2A         ; Load E2A into I
$CEE    $4DF6   SNE      VD, #F6         ; Skip if VD != 246
$CF0    $F077   UNKNOWN  F077            ; Unknown Fxxx instruction
$CF2    $F7B8   UNKNOWN  F7B8            ; Unknown Fxxx instruction
$CF4    $9E93   UNKNOWN  $9E93           ; Unknown 9xxx instruction
$CF6    $2B77   CALL     $B77            ; Call subroutine at B77
$CF8    $C6B3   RND      V6, #B3         ; V6 = random & B3
$CFA    $85F3   XOR      V5, VF          ; V5 ^= VF
$CFC    $0423   SYS      $423            ; System call to 423
$CFE    $1EF8   JP       $EF8            ; Jump to EF8
$D00    $6CAC   LD       VC, #AC         ; Load 172 into VC
$D02    $B58D   JP       V0, $58D        ; Jump to V0 + 58D
$D04    $6E82   LD       VE, #82         ; Load 130 into VE
$D06    $5843   UNKNOWN  $5843           ; Unknown 5xxx instruction
$D08    $8E86   SHR      VE              ; VE >>= 1, VF = LSB
$D0A    $4E86   SNE      VE, #86         ; Skip if VE != 134
$D0C    $38B4   SE       V8, #B4         ; Skip if V8 == 180
$D0E    $F9AC   UNKNOWN  F9AC            ; Unknown Fxxx instruction
$D10    $20E8   CALL     $0E8            ; Call subroutine at 0E8
$D12    $0BAA   SYS      $BAA            ; System call to BAA
$D14    $E30D   UNKNOWN  $E30D           ; Unknown Exxx instruction
$D16    $FB2B   UNKNOWN  FB2B            ; Unknown Fxxx instruction
$D18    $86B4   ADD      V6, VB          ; V6 += VB, VF = carry
$D1A    $F81A   UNKNOWN  F81A            ; Unknown Fxxx instruction
$D1C    $C4BD   RND      V4, #BD         ; V4 = random & BD
$D1E    $2D07   CALL     $D07            ; Call subroutine at D07
$D20    $E23B   UNKNOWN  $E23B           ; Unknown Exxx instruction
$D22    $893F   UNKNOWN  893F            ; Unknown 8xxx instruction
$D24    $69CC   LD       V9, #CC         ; Load 204 into V9
$D26    $AAAB   LD       I, $AAB         ; Load AAB into I
$D28    $959B   UNKNOWN  $959B           ; Unknown 9xxx instruction
$D2A    $7B3B   ADD      VB, #3B         ; Add 59 to VB
$D2C    $5A74   UNKNOWN  $5A74           ; Unknown 5xxx instruction
$D2E    $DCEF   DRW      VC, VE, #F      ; Draw 15-byte sprite at VC, VE
$D30    $12DF   JP       $2DF            ; Jump to 2DF
$D32    $101D   JP       $01D            ; Jump to 01D
$D34    $E84D   UNKNOWN  $E84D           ; Unknown Exxx instruction
$D36    $C84F   RND      V8, #4F         ; V8 = random & 4F
$D38    $76BD   ADD      V6, #BD         ; Add 189 to V6
$D3A    $DD07   DRW      VD, V0, #7      ; Draw 7-byte sprite at VD, V0
$D3C    $3B85   SE       VB, #85         ; Skip if VB == 133
$D3E    $2C19   CALL     $C19            ; Call subroutine at C19
$D40    $21D2   CALL     $1D2            ; Call subroutine at 1D2
$D42    $0388   SYS      $388            ; System call to 388
$D44    $9618   UNKNOWN  $9618           ; Unknown 9xxx instruction
$D46    $DB97   DRW      VB, V9, #7      ; Draw 7-byte sprite at VB, V9
$D48    $5D54   UNKNOWN  $5D54           ; Unknown 5xxx instruction
$D4A    $86E1   OR       V6, VE          ; V6 |= VE
$D4C    $DA1E   DRW      VA, V1, #E      ; Draw 14-byte sprite at VA, V1
$D4E    $015B   SYS      $15B            ; System call to 15B
$D50    $FF57   UNKNOWN  FF57            ; Unknown Fxxx instruction
$D52    $A1E3   LD       I, $1E3         ; Load 1E3 into I
$D54    $C38B   RND      V3, #8B         ; V3 = random & 8B
$D56    $D8DC   DRW      V8, VD, #C      ; Draw 12-byte sprite at V8, VD
$D58    $9C57   UNKNOWN  $9C57           ; Unknown 9xxx instruction
$D5A    $3B2C   SE       VB, #2C         ; Skip if VB == 44
$D5C    $13AF   JP       $3AF            ; Jump to 3AF
$D5E    $0803   SYS      $803            ; System call to 803
$D60    $AAD4   LD       I, $AD4         ; Load AD4 into I
$D62    $1631   JP       $631            ; Jump to 631
$D64    $8BE1   OR       VB, VE          ; VB |= VE
$D66    $B58A   JP       V0, $58A        ; Jump to V0 + 58A
$D68    $6945   LD       V9, #45         ; Load 69 into V9
$D6A    $348B   SE       V4, #8B         ; Skip if V4 == 139
$D6C    $E272   UNKNOWN  $E272           ; Unknown Exxx instruction
$D6E    $CEEE   RND      VE, #EE         ; VE = random & EE
$D70    $20B0   CALL     $0B0            ; Call subroutine at 0B0
$D72    $5215   UNKNOWN  $5215           ; Unknown 5xxx instruction
$D74    $AC85   LD       I, $C85         ; Load C85 into I
$D76    $0AF8   SYS      $AF8            ; System call to AF8
$D78    $2C6B   CALL     $C6B            ; Call subroutine at C6B
$D7A    $2326   CALL     $326            ; Call subroutine at 326
$D7C    $CC4A   RND      VC, #4A         ; VC = random & 4A
$D7E    $E34B   UNKNOWN  $E34B           ; Unknown Exxx instruction
$D80    $53A4   UNKNOWN  $53A4           ; Unknown 5xxx instruction
$D82    $36DD   SE       V6, #DD         ; Skip if V6 == 221
$D84    $E3DD   UNKNOWN  $E3DD           ; Unknown Exxx instruction
$D86    $94AE   UNKNOWN  $94AE           ; Unknown 9xxx instruction
$D88    $71F1   ADD      V1, #F1         ; Add 241 to V1
$D8A    $1A38   JP       $A38            ; Jump to A38
$D8C    $7D3C   ADD      VD, #3C         ; Add 60 to VD
$D8E    $2B46   CALL     $B46            ; Call subroutine at B46
$D90    $0074   SYS      $074            ; System call to 074
$D92    $5945   UNKNOWN  $5945           ; Unknown 5xxx instruction
$D94    $3D6C   SE       VD, #6C         ; Skip if VD == 108
$D96    $7950   ADD      V9, #50         ; Add 80 to V9
$D98    $C63B   RND      V6, #3B         ; V6 = random & 3B
$D9A    $41D7   SNE      V1, #D7         ; Skip if V1 != 215
$D9C    $AEA5   LD       I, $EA5         ; Load EA5 into I
$D9E    $73DC   ADD      V3, #DC         ; Add 220 to V3
$DA0    $39CD   SE       V9, #CD         ; Skip if V9 == 205
$DA2    $DAEF   DRW      VA, VE, #F      ; Draw 15-byte sprite at VA, VE
$DA4    $81B4   ADD      V1, VB          ; V1 += VB, VF = carry
$DA6    $7A9B   ADD      VA, #9B         ; Add 155 to VA
$DA8    $3190   SE       V1, #90         ; Skip if V1 == 144
$DAA    $409E   SNE      V0, #9E         ; Skip if V0 != 158
$DAC    $7032   ADD      V0, #32         ; Add 50 to V0
$DAE    $391E   SE       V9, #1E         ; Skip if V9 == 30
$DB0    $8641   OR       V6, V4          ; V6 |= V4
$DB2    $689A   LD       V8, #9A         ; Load 154 into V8
$DB4    $D88E   DRW      V8, V8, #E      ; Draw 14-byte sprite at V8, V8
$DB6    $504A   UNKNOWN  $504A           ; Unknown 5xxx instruction
$DB8    $66AB   LD       V6, #AB         ; Load 171 into V6
$DBA    $4AFB   SNE      VA, #FB         ; Skip if VA != 251
$DBC    $4562   SNE      V5, #62         ; Skip if V5 != 98
$DBE    $D308   DRW      V3, V0, #8      ; Draw 8-byte sprite at V3, V0
$DC0    $1354   JP       $354            ; Jump to 354
$DC2    $D5EB   DRW      V5, VE, #B      ; Draw 11-byte sprite at V5, VE
$DC4    $B534   JP       V0, $534        ; Jump to V0 + 534
$DC6    $A303   LD       I, $303         ; Load 303 into I
$DC8    $D868   DRW      V8, V6, #8      ; Draw 8-byte sprite at V8, V6
$DCA    $3A3C   SE       VA, #3C         ; Skip if VA == 60
$DCC    $B052   JP       V0, $052        ; Jump to V0 + 052
$DCE    $1EF3   JP       $EF3            ; Jump to EF3
$DD0    $AF40   LD       I, $F40         ; Load F40 into I
$DD2    $767D   ADD      V6, #7D         ; Add 125 to V6
$DD4    $9E72   UNKNOWN  $9E72           ; Unknown 9xxx instruction
$DD6    $4135   SNE      V1, #35         ; Skip if V1 != 53
$DD8    $C5E9   RND      V5, #E9         ; V5 = random & E9
$DDA    $5DBE   UNKNOWN  $5DBE           ; Unknown 5xxx instruction
$DDC    $AA63   LD       I, $A63         ; Load A63 into I
$DDE    $3DBA   SE       VD, #BA         ; Skip if VD == 186
$DE0    $509E   UNKNOWN  $509E           ; Unknown 5xxx instruction
$DE2    $1A21   JP       $A21            ; Jump to A21
$DE4    $5ABD   UNKNOWN  $5ABD           ; Unknown 5xxx instruction
$DE6    $28D0   CALL     $8D0            ; Call subroutine at 8D0
$DE8    $2C70   CALL     $C70            ; Call subroutine at C70
$DEA    $46A5   SNE      V6, #A5         ; Skip if V6 != 165
$DEC    $C8EA   RND      V8, #EA         ; V8 = random & EA
$DEE    $3ECC   SE       VE, #CC         ; Skip if VE == 204
$DF0    $0393   SYS      $393            ; System call to 393
$DF2    $0AB8   SYS      $AB8            ; System call to AB8
$DF4    $5F51   UNKNOWN  $5F51           ; Unknown 5xxx instruction
$DF6    $D8E2   DRW      V8, VE, #2      ; Draw 2-byte sprite at V8, VE
$DF8    $9ADB   UNKNOWN  $9ADB           ; Unknown 9xxx instruction
$DFA    $77C3   ADD      V7, #C3         ; Add 195 to V7
$DFC    $49D3   SNE      V9, #D3         ; Skip if V9 != 211
$DFE    $6FFF   LD       VF, #FF         ; Load 255 into VF
$E00    $DEDF   DRW      VE, VD, #F      ; Draw 15-byte sprite at VE, VD
$E02    $4F9F   SNE      VF, #9F         ; Skip if VF != 159
$E04    $5CED   UNKNOWN  $5CED           ; Unknown 5xxx instruction
$E06    $28F4   CALL     $8F4            ; Call subroutine at 8F4
$E08    $438B   SNE      V3, #8B         ; Skip if V3 != 139
$E0A    $F7D3   UNKNOWN  F7D3            ; Unknown Fxxx instruction
$E0C    $EDBB   UNKNOWN  $EDBB           ; Unknown Exxx instruction
$E0E    $4075   SNE      V0, #75         ; Skip if V0 != 117
$E10    $3D4D   SE       VD, #4D         ; Skip if VD == 77
$E12    $9BC8   UNKNOWN  $9BC8           ; Unknown 9xxx instruction
$E14    $1C7D   JP       $C7D            ; Jump to C7D
$E16    $AE28   LD       I, $E28         ; Load E28 into I
$E18    $E981   UNKNOWN  $E981           ; Unknown Exxx instruction
$E1A    $DB7B   DRW      VB, V7, #B      ; Draw 11-byte sprite at VB, V7
$E1C    $653C   LD       V5, #3C         ; Load 60 into V5
$E1E    $263A   CALL     $63A            ; Call subroutine at 63A
$E20    $0C76   SYS      $C76            ; System call to C76
$E22    $D3AD   DRW      V3, VA, #D      ; Draw 13-byte sprite at V3, VA
$E24    $0D30   SYS      $D30            ; System call to D30
$E26    $48D4   SNE      V8, #D4         ; Skip if V8 != 212
$E28    $15EA   JP       $5EA            ; Jump to 5EA
$E2A    $C724   RND      V7, #24         ; V7 = random & 24
$E2C    $794C   ADD      V9, #4C         ; Add 76 to V9
$E2E    $D617   DRW      V6, V1, #7      ; Draw 7-byte sprite at V6, V1
$E30    $4200   SNE      V2, #00         ; Skip if V2 != 0
$E32    $F63D   UNKNOWN  F63D            ; Unknown Fxxx instruction
$E34    $CBA3   RND      VB, #A3         ; VB = random & A3
$E36    $930C   UNKNOWN  $930C           ; Unknown 9xxx instruction
$E38    $BE55   JP       V0, $E55        ; Jump to V0 + E55
$E3A    $46A7   SNE      V6, #A7         ; Skip if V6 != 167
$E3C    $87CE   SHL      V7              ; V7 <<= 1, VF = MSB
$E3E    $28E8   CALL     $8E8            ; Call subroutine at 8E8
$E40    $37E1   SE       V7, #E1         ; Skip if V7 == 225
$E42    $3572   SE       V5, #72         ; Skip if V5 == 114
$E44    $7070   ADD      V0, #70         ; Add 112 to V0
$E46    $9923   UNKNOWN  $9923           ; Unknown 9xxx instruction
$E48    $77A8   ADD      V7, #A8         ; Add 168 to V7
$E4A    $B2CA   JP       V0, $2CA        ; Jump to V0 + 2CA
$E4C    $6BF6   LD       VB, #F6         ; Load 246 into VB
$E4E    $7310   ADD      V3, #10         ; Add 16 to V3
$E50    $2138   CALL     $138            ; Call subroutine at 138
$E52    $7E29   ADD      VE, #29         ; Add 41 to VE
$E54    $344D   SE       V4, #4D         ; Skip if V4 == 77
$E56    $134C   JP       $34C            ; Jump to 34C
$E58    $32C6   SE       V2, #C6         ; Skip if V2 == 198
$E5A    $B0A3   JP       V0, $0A3        ; Jump to V0 + 0A3
$E5C    $CFAA   RND      VF, #AA         ; VF = random & AA
$E5E    $DFDB   DRW      VF, VD, #B      ; Draw 11-byte sprite at VF, VD
$E60    $6467   LD       V4, #67         ; Load 103 into V4
$E62    $7023   ADD      V0, #23         ; Add 35 to V0
$E64    $3941   SE       V9, #41         ; Skip if V9 == 65
$E66    $93D4   UNKNOWN  $93D4           ; Unknown 9xxx instruction
$E68    $4D74   SNE      VD, #74         ; Skip if VD != 116
$E6A    $385C   SE       V8, #5C         ; Skip if V8 == 92
$E6C    $5E37   UNKNOWN  $5E37           ; Unknown 5xxx instruction
$E6E    $1B73   JP       $B73            ; Jump to B73
$E70    $B11A   JP       V0, $11A        ; Jump to V0 + 11A
$E72    $4520   SNE      V5, #20         ; Skip if V5 != 32
$E74    $0A9E   SYS      $A9E            ; System call to A9E
$E76    $1B1E   JP       $B1E            ; Jump to B1E
$E78    $FA2C   UNKNOWN  FA2C            ; Unknown Fxxx instruction
$E7A    $1D41   JP       $D41            ; Jump to D41
$E7C    $CE0F   RND      VE, #0F         ; VE = random & 0F
$E7E    $E6B8   UNKNOWN  $E6B8           ; Unknown Exxx instruction
$E80    $0431   SYS      $431            ; System call to 431
$E82    $47DA   SNE      V7, #DA         ; Skip if V7 != 218
$E84    $2AEF   CALL     $AEF            ; Call subroutine at AEF
$E86    $07AB   SYS      $7AB            ; System call to 7AB
$E88    $DB65   DRW      VB, V6, #5      ; Draw 5-byte sprite at VB, V6
$E8A    $A278   LD       I, $278         ; Load 278 into I
$E8C    $BEC7   JP       V0, $EC7        ; Jump to V0 + EC7
$E8E    $58D6   UNKNOWN  $58D6           ; Unknown 5xxx instruction
$E90    $BA6A   JP       V0, $A6A        ; Jump to V0 + A6A
$E92    $9191   UNKNOWN  $9191           ; Unknown 9xxx instruction
$E94    $845C   UNKNOWN  845C            ; Unknown 8xxx instruction
$E96    $3783   SE       V7, #83         ; Skip if V7 == 131
$E98    $E4BF   UNKNOWN  $E4BF           ; Unknown Exxx instruction
$E9A    $768E   ADD      V6, #8E         ; Add 142 to V6
$E9C    $5140   SE       V1, V4          ; Skip if V1 == V4
$E9E    $46E4   SNE      V6, #E4         ; Skip if V6 != 228
$EA0    $E7D1   UNKNOWN  $E7D1           ; Unknown Exxx instruction
$EA2    $A289   LD       I, $289         ; Load 289 into I
$EA4    $C623   RND      V6, #23         ; V6 = random & 23
$EA6    $A7AC   LD       I, $7AC         ; Load 7AC into I
$EA8    $0361   SYS      $361            ; System call to 361
$EAA    $15E1   JP       $5E1            ; Jump to 5E1
$EAC    $8077   SUBN     V0, V7          ; V0 = V7 - V0, VF = !borrow
$EAE    $CEE2   RND      VE, #E2         ; VE = random & E2
$EB0    $4A3E   SNE      VA, #3E         ; Skip if VA != 62
$EB2    $C8E8   RND      V8, #E8         ; V8 = random & E8
$EB4    $5C03   UNKNOWN  $5C03           ; Unknown 5xxx instruction
$EB6    $C821   RND      V8, #21         ; V8 = random & 21
$EB8    $302C   SE       V0, #2C         ; Skip if V0 == 44
$EBA    $4E0A   SNE      VE, #0A         ; Skip if VE != 10
$EBC    $9A7D   UNKNOWN  $9A7D           ; Unknown 9xxx instruction
$EBE    $0EAE   SYS      $EAE            ; System call to EAE
$EC0    $EFC9   UNKNOWN  $EFC9           ; Unknown Exxx instruction
$EC2    $8336   SHR      V3              ; V3 >>= 1, VF = LSB
$EC4    $F388   UNKNOWN  F388            ; Unknown Fxxx instruction
$EC6    $F51D   UNKNOWN  F51D            ; Unknown Fxxx instruction
$EC8    $96CE   UNKNOWN  $96CE           ; Unknown 9xxx instruction
$ECA    $EBFA   UNKNOWN  $EBFA           ; Unknown Exxx instruction
$ECC    $F804   UNKNOWN  F804            ; Unknown Fxxx instruction
$ECE    $FF02   UNKNOWN  FF02            ; Unknown Fxxx instruction
$ED0    $9C69   UNKNOWN  $9C69           ; Unknown 9xxx instruction
$ED2    $9BED   UNKNOWN  $9BED           ; Unknown 9xxx instruction
$ED4    $2E53   CALL     $E53            ; Call subroutine at E53
$ED6    $CFB2   RND      VF, #B2         ; VF = random & B2
$ED8    $0E4C   SYS      $E4C            ; System call to E4C
$EDA    $52FE   UNKNOWN  $52FE           ; Unknown 5xxx instruction
$EDC    $88CB   UNKNOWN  88CB            ; Unknown 8xxx instruction
$EDE    $939E   UNKNOWN  $939E           ; Unknown 9xxx instruction
$EE0    $5A56   UNKNOWN  $5A56           ; Unknown 5xxx instruction
$EE2    $8E8A   UNKNOWN  8E8A            ; Unknown 8xxx instruction
$EE4    $ECF3   UNKNOWN  $ECF3           ; Unknown Exxx instruction
$EE6    $6CE3   LD       VC, #E3         ; Load 227 into VC
$EE8    $E762   UNKNOWN  $E762           ; Unknown Exxx instruction
$EEA    $C408   RND      V4, #08         ; V4 = random & 08
$EEC    $81BD   UNKNOWN  81BD            ; Unknown 8xxx instruction
$EEE    $5EED   UNKNOWN  $5EED           ; Unknown 5xxx instruction
$EF0    $9408   UNKNOWN  $9408           ; Unknown 9xxx instruction
$EF2    $BA01   JP       V0, $A01        ; Jump to V0 + A01
$EF4    $754B   ADD      V5, #4B         ; Add 75 to V5
$EF6    $9009   UNKNOWN  $9009           ; Unknown 9xxx instruction
$EF8    $9920   SNE      V9, V2          ; Skip if V9 != V2
$EFA    $2300   CALL     $300            ; Call subroutine at 300
$EFC    $BA8E   JP       V0, $A8E        ; Jump to V0 + A8E
$EFE    $BB4B   JP       V0, $B4B        ; Jump to V0 + B4B
$F00    $F636   UNKNOWN  F636            ; Unknown Fxxx instruction
$F02    $A7EF   LD       I, $7EF         ; Load 7EF into I
$F04    $1D24   JP       $D24            ; Jump to D24
$F06    $890D   UNKNOWN  890D            ; Unknown 8xxx instruction
$F08    $667D   LD       V6, #7D         ; Load 125 into V6
$F0A    $930A   UNKNOWN  $930A           ; Unknown 9xxx instruction
$F0C    $26CF   CALL     $6CF            ; Call subroutine at 6CF
$F0E    $34FD   SE       V4, #FD         ; Skip if V4 == 253
$F10    $EA16   UNKNOWN  $EA16           ; Unknown Exxx instruction
$F12    $8F4B   UNKNOWN  8F4B            ; Unknown 8xxx instruction
$F14    $FFCA   UNKNOWN  FFCA            ; Unknown Fxxx instruction
$F16    $6930   LD       V9, #30         ; Load 48 into V9
$F18    $0A4A   SYS      $A4A            ; System call to A4A
$F1A    $3B93   SE       VB, #93         ; Skip if VB == 147
$F1C    $0120   SYS      $120            ; System call to 120
$F1E    $9858   UNKNOWN  $9858           ; Unknown 9xxx instruction
$F20    $26B9   CALL     $6B9            ; Call subroutine at 6B9
$F22    $0A4A   SYS      $A4A            ; System call to A4A
$F24    $5A7D   UNKNOWN  $5A7D           ; Unknown 5xxx instruction
$F26    $325C   SE       V2, #5C         ; Skip if V2 == 92
$F28    $D7AF   DRW      V7, VA, #F      ; Draw 15-byte sprite at V7, VA
$F2A    $A957   LD       I, $957         ; Load 957 into I
$F2C    $3634   SE       V6, #34         ; Skip if V6 == 52
$F2E    $9FA7   UNKNOWN  $9FA7           ; Unknown 9xxx instruction
$F30    $0D81   SYS      $D81            ; System call to D81
$F32    $8CE9   UNKNOWN  8CE9            ; Unknown 8xxx instruction
$F34    $62FE   LD       V2, #FE         ; Load 254 into V2
$F36    $44B7   SNE      V4, #B7         ; Skip if V4 != 183
$F38    $9E11   UNKNOWN  $9E11           ; Unknown 9xxx instruction
$F3A    $2C7B   CALL     $C7B            ; Call subroutine at C7B
$F3C    $2C62   CALL     $C62            ; Call subroutine at C62
$F3E    $82FD   UNKNOWN  82FD            ; Unknown 8xxx instruction
$F40    $2388   CALL     $388            ; Call subroutine at 388
$F42    $90FA   UNKNOWN  $90FA           ; Unknown 9xxx instruction
$F44    $C1E9   RND      V1, #E9         ; V1 = random & E9
$F46    $0AD2   SYS      $AD2            ; System call to AD2
$F48    $8D67   SUBN     VD, V6          ; VD = V6 - VD, VF = !borrow
$F4A    $5369   UNKNOWN  $5369           ; Unknown 5xxx instruction
$F4C    $7FEE   ADD      VF, #EE         ; Add 238 to VF
$F4E    $40F4   SNE      V0, #F4         ; Skip if V0 != 244
$F50    $1CB7   JP       $CB7            ; Jump to CB7
$F52    $060B   SYS      $60B            ; System call to 60B
$F54    $6E77   LD       VE, #77         ; Load 119 into VE
$F56    $2061   CALL     $061            ; Call subroutine at 061
$F58    $2291   CALL     $291            ; Call subroutine at 291
$F5A    $2F91   CALL     $F91            ; Call subroutine at F91
$F5C    $8897   SUBN     V8, V9          ; V8 = V9 - V8, VF = !borrow
$F5E    $8987   SUBN     V9, V8          ; V9 = V8 - V9, VF = !borrow
$F60    $AF4F   LD       I, $F4F         ; Load F4F into I
$F62    $D20A   DRW      V2, V0, #A      ; Draw 10-byte sprite at V2, V0
$F64    $15E5   JP       $5E5            ; Jump to 5E5
$F66    $3783   SE       V7, #83         ; Skip if V7 == 131
$F68    $88FC   UNKNOWN  88FC            ; Unknown 8xxx instruction
$F6A    $B7DD   JP       V0, $7DD        ; Jump to V0 + 7DD
$F6C    $FC6A   UNKNOWN  FC6A            ; Unknown Fxxx instruction
$F6E    $9E7A   UNKNOWN  $9E7A           ; Unknown 9xxx instruction
$F70    $D2BB   DRW      V2, VB, #B      ; Draw 11-byte sprite at V2, VB
$F72    $466D   SNE      V6, #6D         ; Skip if V6 != 109
$F74    $C509   RND      V5, #09         ; V5 = random & 09
$F76    $BEF6   JP       V0, $EF6        ; Jump to V0 + EF6
$F78    $83F3   XOR      V3, VF          ; V3 ^= VF
$F7A    $819A   UNKNOWN  819A            ; Unknown 8xxx instruction
$F7C    $6584   LD       V5, #84         ; Load 132 into V5
$F7E    $956A   UNKNOWN  $956A           ; Unknown 9xxx instruction
$F80    $CD2B   RND      VD, #2B         ; VD = random & 2B
$F82    $16A2   JP       $6A2            ; Jump to 6A2
$F84    $5BE3   UNKNOWN  $5BE3           ; Unknown 5xxx instruction
$F86    $8172   AND      V1, V7          ; V1 &= V7
$F88    $62D6   LD       V2, #D6         ; Load 214 into V2
$F8A    $988D   UNKNOWN  $988D           ; Unknown 9xxx instruction
$F8C    $CE3D   RND      VE, #3D         ; VE = random & 3D
$F8E    $8DCE   SHL      VD              ; VD <<= 1, VF = MSB
$F90    $8F89   UNKNOWN  8F89            ; Unknown 8xxx instruction
$F92    $87BF   UNKNOWN  87BF            ; Unknown 8xxx instruction
$F94    $5F79   UNKNOWN  $5F79           ; Unknown 5xxx instruction
$F96    $11FA   JP       $1FA            ; Jump to 1FA
$F98    $2F43   CALL     $F43            ; Call subroutine at F43
$F9A    $044C   SYS      $44C            ; System call to 44C
$F9C    $5E65   UNKNOWN  $5E65           ; Unknown 5xxx instruction
$F9E    $0D99   SYS      $D99            ; System call to D99
$FA0    $BBB4   JP       V0, $BB4        ; Jump to V0 + BB4
$FA2    $B3B4   JP       V0, $3B4        ; Jump to V0 + 3B4
$FA4    $7526   ADD      V5, #26         ; Add 38 to V5
$FA6    $4193   SNE      V1, #93         ; Skip if V1 != 147
$FA8    $E3ED   UNKNOWN  $E3ED           ; Unknown Exxx instruction
$FAA    $7E04   ADD      VE, #04         ; Add 4 to VE
$FAC    $8F15   SUB      VF, V1          ; VF -= V1, VF = !borrow
$FAE    $A6A4   LD       I, $6A4         ; Load 6A4 into I
$FB0    $3709   SE       V7, #09         ; Skip if V7 == 9
$FB2    $0997   SYS      $997            ; System call to 997
$FB4    $0D8B   SYS      $D8B            ; System call to D8B
$FB6    $B018   JP       V0, $018        ; Jump to V0 + 018
$FB8    $5EEE   UNKNOWN  $5EEE           ; Unknown 5xxx instruction
$FBA    $FF0F   UNKNOWN  FF0F            ; Unknown Fxxx instruction
$FBC    $2233   CALL     $233            ; Call subroutine at 233
$FBE    $4A4A   SNE      VA, #4A         ; Skip if VA != 74
$FC0    $0AD4   SYS      $AD4            ; System call to AD4
$FC2    $20FD   CALL     $0FD            ; Call subroutine at 0FD
$FC4    $56C4   UNKNOWN  $56C4           ; Unknown 5xxx instruction
$FC6    $ABF5   LD       I, $BF5         ; Load BF5 into I
$FC8    $DB80   DRW      VB, V8, #0      ; Draw 0-byte sprite at VB, V8
$FCA    $DA2F   DRW      VA, V2, #F      ; Draw 15-byte sprite at VA, V2
$FCC    $1579   JP       $579            ; Jump to 579
$FCE    $C279   RND      V2, #79         ; V2 = random & 79
$FD0    $6C7B   LD       VC, #7B         ; Load 123 into VC
$FD2    $DDA5   DRW      VD, VA, #5      ; Draw 5-byte sprite at VD, VA
$FD4    $60DC   LD       V0, #DC         ; Load 220 into V0
$FD6    $DBC2   DRW      VB, VC, #2      ; Draw 2-byte sprite at VB, VC
$FD8    $5641   UNKNOWN  $5641           ; Unknown 5xxx instruction
$FDA    $A9C1   LD       I, $9C1         ; Load 9C1 into I
$FDC    $4FE5   SNE      VF, #E5         ; Skip if VF != 229
$FDE    $6DA6   LD       VD, #A6         ; Load 166 into VD
$FE0    $7EE1   ADD      VE, #E1         ; Add 225 to VE
$FE2    $318F   SE       V1, #8F         ; Skip if V1 == 143
$FE4    $DB0D   DRW      VB, V0, #D      ; Draw 13-byte sprite at VB, V0
$FE6    $1E57   JP       $E57            ; Jump to E57
$FE8    $3CFB   SE       VC, #FB         ; Skip if VC == 251
$FEA    $00A1   SYS      $0A1            ; System call to 0A1
$FEC    $EB24   UNKNOWN  $EB24           ; Unknown Exxx instruction
$FEE    $85DE   SHL      V5              ; V5 <<= 1, VF = MSB
$FF0    $2938   CALL     $938            ; Call subroutine at 938
$FF2    $51A2   UNKNOWN  $51A2           ; Unknown 5xxx instruction
$FF4    $458E   SNE      V5, #8E         ; Skip if V5 != 142
$FF6    $4A2C   SNE      VA, #2C         ; Skip if VA != 44
$FF8    $9760   SNE      V7, V6          ; Skip if V7 != V6
$FFA    $F2A8   UNKNOWN  F2A8            ; Unknown Fxxx instruction
$FFC    $B790   JP       V0, $790        ; Jump to V0 + 790
$FFE    $47D9   SNE      V7, #D9         ; Skip if V7 != 217

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 458 (25.6%)
  LD      : 231 (12.9%)
  JP      : 223 (12.4%)
  SNE     : 137 ( 7.6%)
  CALL    : 128 ( 7.1%)
  DRW     : 118 ( 6.6%)
  RND     : 116 ( 6.5%)
  ADD     : 114 ( 6.4%)
  SYS     : 111 ( 6.2%)
  SE      : 108 ( 6.0%)
  SUBN    :  10 ( 0.6%)
  SHR     :   9 ( 0.5%)
  XOR     :   9 ( 0.5%)
  OR      :   6 ( 0.3%)
  AND     :   6 ( 0.3%)
  SUB     :   4 ( 0.2%)
  SHL     :   4 ( 0.2%)

Memory Operations: 345 (19.3%)
Arithmetic Operations: 149 (8.3%)
