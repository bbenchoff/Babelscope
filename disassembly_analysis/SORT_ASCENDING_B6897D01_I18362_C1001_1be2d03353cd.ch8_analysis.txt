
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B6897D01_I18362_C1001_1be2d03353cd.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 6897
Instance: 18362
Direction: ascending
Final Array: [2, 3, 9, 62, 92, 157, 191, 246]
Operations: R:0 W:2 C:74 S:6

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 110
Sort Array References:
  $214: LD I, $35E ; Load 35E into I
  $256: LD I, $317 ; Load 317 into I
  $25E: LD I, $96E ; Load 96E into I
  $282: LD I, $472 ; Load 472 into I
  $2D0: LD I, $77A ; Load 77A into I
  $2E0: LD I, $876 ; Load 876 into I
  $318: LD I, $416 ; Load 416 into I
  $32C: LD I, $161 ; Load 161 into I
  $34E: LD I, $34A ; Load 34A into I
  $374: LD I, $A7A ; Load A7A into I
  $38C: LD I, $884 ; Load 884 into I
  $3AC: LD I, $085 ; Load 085 into I
  $3CA: LD I, $290 ; Load 290 into I
  $3D4: LD I, $6D1 ; Load 6D1 into I
  $3D6: LD I, $8E3 ; Load 8E3 into I
  $3DE: LD I, $D66 ; Load D66 into I
  $3E6: LD I, $797 ; Load 797 into I
  $3E8: LD I, $EF0 ; Load EF0 into I
  $3F4: LD I, $1AF ; Load 1AF into I
  $41E: LD I, $F16 ; Load F16 into I
  $42C: LD I, $DBF ; Load DBF into I
  $486: LD I, $81C ; Load 81C into I
  $492: LD I, $959 ; Load 959 into I
  $498: LD I, $2A2 ; Load 2A2 into I
  $4A6: LD I, $AEB ; Load AEB into I
  $4B0: LD I, $CF1 ; Load CF1 into I
  $4C4: LD I, $311 ; Load 311 into I
  $4D6: LD I, $9E9 ; Load 9E9 into I
  $4EA: LD I, $4CF ; Load 4CF into I
  $53A: LD I, $D90 ; Load D90 into I
  $54A: LD I, $397 ; Load 397 into I
  $55A: LD I, $AFC ; Load AFC into I
  $56A: LD I, $E4D ; Load E4D into I
  $59E: LD I, $875 ; Load 875 into I
  $5AA: LD I, $ECA ; Load ECA into I
  $5BE: LD I, $065 ; Load 065 into I
  $5C8: LD I, $AC3 ; Load AC3 into I
  $5D0: LD I, $8AB ; Load 8AB into I
  $5DA: LD I, $5CE ; Load 5CE into I
  $5E4: LD I, $E77 ; Load E77 into I
  $5E8: LD I, $133 ; Load 133 into I
  $60E: LD I, $050 ; Load 050 into I
  $624: LD I, $992 ; Load 992 into I
  $628: LD I, $CDB ; Load CDB into I
  $644: LD I, $437 ; Load 437 into I
  $6B8: LD I, $F58 ; Load F58 into I
  $6BA: LD I, $516 ; Load 516 into I
  $6EE: LD I, $812 ; Load 812 into I
  $73E: LD I, $E38 ; Load E38 into I
  $74C: LD I, $11F ; Load 11F into I
  $75C: LD I, $75A ; Load 75A into I
  $760: LD I, $33F ; Load 33F into I
  $79C: LD I, $67E ; Load 67E into I
  $7B0: LD I, $4F4 ; Load 4F4 into I
  $7B2: LD I, $1DF ; Load 1DF into I
  $7B4: LD I, $91C ; Load 91C into I
  $7D8: LD I, $FC6 ; Load FC6 into I
  $7E6: LD I, $642 ; Load 642 into I
  $7F4: LD I, $7D0 ; Load 7D0 into I
  $7FE: LD I, $8A8 ; Load 8A8 into I
  $87C: LD I, $575 ; Load 575 into I
  $890: LD I, $C9B ; Load C9B into I
  $89A: LD I, $C0E ; Load C0E into I
  $932: LD I, $F5F ; Load F5F into I
  $93A: LD I, $D17 ; Load D17 into I
  $950: LD I, $4B1 ; Load 4B1 into I
  $95E: LD I, $F3A ; Load F3A into I
  $992: LD I, $46B ; Load 46B into I
  $A0A: LD I, $2BA ; Load 2BA into I
  $A18: LD I, $D2B ; Load D2B into I
  $A26: LD I, $A8D ; Load A8D into I
  $A2A: LD I, $934 ; Load 934 into I
  $A52: LD I, $3F6 ; Load 3F6 into I
  $A5E: LD I, $BEC ; Load BEC into I
  $AF6: LD I, $6B1 ; Load 6B1 into I
  $B1A: LD I, $6B6 ; Load 6B6 into I
  $B2E: LD I, $67E ; Load 67E into I
  $B52: LD I, $426 ; Load 426 into I
  $B66: LD I, $D46 ; Load D46 into I
  $B8E: LD I, $4C1 ; Load 4C1 into I
  $BA8: LD I, $62D ; Load 62D into I
  $BC0: LD I, $E89 ; Load E89 into I
  $C34: LD I, $5EE ; Load 5EE into I
  $C5C: LD I, $216 ; Load 216 into I
  $C60: LD I, $509 ; Load 509 into I
  $C7A: LD I, $33B ; Load 33B into I
  $CAE: LD I, $4A3 ; Load 4A3 into I
  $CE0: LD I, $F91 ; Load F91 into I
  $D18: LD I, $332 ; Load 332 into I
  $D46: LD I, $CAB ; Load CAB into I
  $D6E: LD I, $87E ; Load 87E into I
  $D8A: LD I, $1EF ; Load 1EF into I
  $DC4: LD I, $DC9 ; Load DC9 into I
  $DEA: LD I, $E18 ; Load E18 into I
  $E28: LD I, $742 ; Load 742 into I
  $E64: LD I, $7AC ; Load 7AC into I
  $E6E: LD I, $764 ; Load 764 into I
  $E72: LD I, $0A0 ; Load 0A0 into I
  $E76: LD I, $A7B ; Load A7B into I
  $E78: LD I, $C74 ; Load C74 into I
  $E82: LD I, $27F ; Load 27F into I
  $F28: LD I, $111 ; Load 111 into I
  $F2C: LD I, $6DF ; Load 6DF into I
  $F2E: LD I, $F48 ; Load F48 into I
  $F3E: LD I, $5AB ; Load 5AB into I
  $F58: LD I, $581 ; Load 581 into I
  $F78: LD I, $589 ; Load 589 into I
  $F9E: LD I, $80E ; Load 80E into I
  $FDA: LD I, $DB0 ; Load DB0 into I
  $FF0: LD I, $287 ; Load 287 into I

CONTROL FLOW ANALYSIS:
Jumps: 243
Calls: 103
Branches: 226
Loops: 143
Loop Structures:
  $252 -> $12A (backward jump)
  $28C -> $1D2 (backward jump)
  $2A8 -> $01A (backward jump)
  $2C6 -> $1DB (backward jump)
  $2D8 -> $095 (backward jump)
  $2FA -> $2BC (backward jump)
  $336 -> $23E (backward jump)
  $33A -> $2F4 (backward jump)
  $34C -> $16D (backward jump)
  $36C -> $1DC (backward jump)
  $396 -> $1B3 (backward jump)
  $3D0 -> $1D6 (backward jump)
  $3E2 -> $150 (backward jump)
  $406 -> $08F (backward jump)
  $418 -> $162 (backward jump)
  $440 -> $05C (backward jump)
  $48A -> $01F (backward jump)
  $4C2 -> $09C (backward jump)
  $4E6 -> $142 (backward jump)
  $504 -> $0A2 (backward jump)
  $50E -> $306 (backward jump)
  $56C -> $1D7 (backward jump)
  $57A -> $556 (backward jump)
  $58E -> $2D7 (backward jump)
  $5A6 -> $15B (backward jump)
  $5C4 -> $3AE (backward jump)
  $5F4 -> $484 (backward jump)
  $63E -> $4A4 (backward jump)
  $650 -> $2C8 (backward jump)
  $678 -> $5F4 (backward jump)
  $688 -> $4EC (backward jump)
  $690 -> $678 (backward jump)
  $69E -> $28C (backward jump)
  $6CC -> $540 (backward jump)
  $6DE -> $44A (backward jump)
  $6F0 -> $169 (backward jump)
  $716 -> $5D8 (backward jump)
  $762 -> $5B8 (backward jump)
  $77E -> $38F (backward jump)
  $7BA -> $100 (backward jump)
  $7D0 -> $682 (backward jump)
  $7F8 -> $2CE (backward jump)
  $828 -> $061 (backward jump)
  $830 -> $274 (backward jump)
  $846 -> $415 (backward jump)
  $84E -> $74E (backward jump)
  $85C -> $565 (backward jump)
  $862 -> $4A5 (backward jump)
  $8AA -> $475 (backward jump)
  $8CC -> $120 (backward jump)
  $8D6 -> $273 (backward jump)
  $8F2 -> $6C2 (backward jump)
  $914 -> $3A4 (backward jump)
  $92C -> $499 (backward jump)
  $96C -> $7A2 (backward jump)
  $996 -> $69C (backward jump)
  $9AC -> $8B4 (backward jump)
  $9B2 -> $6A2 (backward jump)
  $9C2 -> $61E (backward jump)
  $9D8 -> $7A2 (backward jump)
  $9DC -> $30C (backward jump)
  $A60 -> $54B (backward jump)
  $A8E -> $948 (backward jump)
  $AA8 -> $0E2 (backward jump)
  $ADE -> $1F1 (backward jump)
  $B02 -> $7AB (backward jump)
  $B16 -> $A45 (backward jump)
  $B18 -> $939 (backward jump)
  $B20 -> $526 (backward jump)
  $B48 -> $394 (backward jump)
  $B92 -> $226 (backward jump)
  $BA2 -> $303 (backward jump)
  $BAC -> $894 (backward jump)
  $BC2 -> $AD5 (backward jump)
  $BF6 -> $749 (backward jump)
  $C08 -> $879 (backward jump)
  $C0A -> $1BE (backward jump)
  $C22 -> $443 (backward jump)
  $C2A -> $AEF (backward jump)
  $C2C -> $9B6 (backward jump)
  $C4C -> $B75 (backward jump)
  $C4E -> $35D (backward jump)
  $C56 -> $667 (backward jump)
  $CA0 -> $32F (backward jump)
  $CAA -> $00C (backward jump)
  $CB0 -> $5C1 (backward jump)
  $CB8 -> $85E (backward jump)
  $CCC -> $C2F (backward jump)
  $CF2 -> $12D (backward jump)
  $CF8 -> $AB7 (backward jump)
  $CFC -> $626 (backward jump)
  $D08 -> $3A7 (backward jump)
  $D10 -> $67C (backward jump)
  $D32 -> $5F3 (backward jump)
  $D40 -> $932 (backward jump)
  $D68 -> $766 (backward jump)
  $D94 -> $C45 (backward jump)
  $D96 -> $2B4 (backward jump)
  $DB0 -> $CBF (backward jump)
  $DBA -> $532 (backward jump)
  $DC6 -> $987 (backward jump)
  $DCC -> $2A3 (backward jump)
  $DDC -> $063 (backward jump)
  $DEE -> $0A8 (backward jump)
  $DFA -> $1DF (backward jump)
  $DFC -> $9B1 (backward jump)
  $E08 -> $32F (backward jump)
  $E16 -> $D46 (backward jump)
  $E20 -> $26F (backward jump)
  $E34 -> $5A8 (backward jump)
  $E44 -> $1FF (backward jump)
  $E48 -> $E43 (backward jump)
  $E4A -> $AC8 (backward jump)
  $E4C -> $553 (backward jump)
  $E4E -> $D7C (backward jump)
  $E8A -> $C3D (backward jump)
  $E92 -> $D77 (backward jump)
  $E9A -> $21F (backward jump)
  $EA0 -> $7DD (backward jump)
  $EA4 -> $232 (backward jump)
  $EBC -> $BE6 (backward jump)
  $ECC -> $9BF (backward jump)
  $ED6 -> $7FB (backward jump)
  $F04 -> $171 (backward jump)
  $F06 -> $43E (backward jump)
  $F0A -> $97D (backward jump)
  $F0C -> $19C (backward jump)
  $F10 -> $0A2 (backward jump)
  $F12 -> $3A8 (backward jump)
  $F3C -> $434 (backward jump)
  $F40 -> $1D7 (backward jump)
  $F52 -> $9D0 (backward jump)
  $F5E -> $EFC (backward jump)
  $F6A -> $CFA (backward jump)
  $F70 -> $C16 (backward jump)
  $F72 -> $46E (backward jump)
  $F88 -> $31D (backward jump)
  $F96 -> $16F (backward jump)
  $FAE -> $7C0 (backward jump)
  $FB8 -> $A43 (backward jump)
  $FBA -> $578 (backward jump)
  $FD6 -> $116 (backward jump)
  $FEC -> $C6F (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $1471   JP       $471            ; Jump to 471
$202    $D294   DRW      V2, V9, #4      ; Draw 4-byte sprite at V2, V9
$204    $BD25   JP       V0, $D25        ; Jump to V0 + D25
$206    $BB59   JP       V0, $B59        ; Jump to V0 + B59
$208    $2F54   CALL     $F54            ; Call subroutine at F54
$20A    $DF62   DRW      VF, V6, #2      ; Draw 2-byte sprite at VF, V6
$20C    $B7B6   JP       V0, $7B6        ; Jump to V0 + 7B6
$20E    $1DE8   JP       $DE8            ; Jump to DE8
$210    $E50B   UNKNOWN  $E50B           ; Unknown Exxx instruction
$212    $29A4   CALL     $9A4            ; Call subroutine at 9A4
$214    $A35E   LD       I, $35E         ; Load 35E into I
$216    $CB1C   RND      VB, #1C         ; VB = random & 1C
$218    $EB49   UNKNOWN  $EB49           ; Unknown Exxx instruction
$21A    $716B   ADD      V1, #6B         ; Add 107 to V1
$21C    $0830   SYS      $830            ; System call to 830
$21E    $B2EB   JP       V0, $2EB        ; Jump to V0 + 2EB
$220    $BEBE   JP       V0, $EBE        ; Jump to V0 + EBE
$222    $D4B1   DRW      V4, VB, #1      ; Draw 1-byte sprite at V4, VB
$224    $F7F7   UNKNOWN  F7F7            ; Unknown Fxxx instruction
$226    $0DCA   SYS      $DCA            ; System call to DCA
$228    $8606   SHR      V6              ; V6 >>= 1, VF = LSB
$22A    $9D53   UNKNOWN  $9D53           ; Unknown 9xxx instruction
$22C    $7535   ADD      V5, #35         ; Add 53 to V5
$22E    $5E7F   UNKNOWN  $5E7F           ; Unknown 5xxx instruction
$230    $2EE6   CALL     $EE6            ; Call subroutine at EE6
$232    $80E2   AND      V0, VE          ; V0 &= VE
$234    $FC82   UNKNOWN  FC82            ; Unknown Fxxx instruction
$236    $37EA   SE       V7, #EA         ; Skip if V7 == 234
$238    $95B9   UNKNOWN  $95B9           ; Unknown 9xxx instruction
$23A    $F5C8   UNKNOWN  F5C8            ; Unknown Fxxx instruction
$23C    $FC32   UNKNOWN  FC32            ; Unknown Fxxx instruction
$23E    $471C   SNE      V7, #1C         ; Skip if V7 != 28
$240    $5764   UNKNOWN  $5764           ; Unknown 5xxx instruction
$242    $5AE5   UNKNOWN  $5AE5           ; Unknown 5xxx instruction
$244    $5426   UNKNOWN  $5426           ; Unknown 5xxx instruction
$246    $6426   LD       V4, #26         ; Load 38 into V4
$248    $E55F   UNKNOWN  $E55F           ; Unknown Exxx instruction
$24A    $4713   SNE      V7, #13         ; Skip if V7 != 19
$24C    $74FD   ADD      V4, #FD         ; Add 253 to V4
$24E    $01DD   SYS      $1DD            ; System call to 1DD
$250    $4684   SNE      V6, #84         ; Skip if V6 != 132
$252    $112A   JP       $12A            ; Jump to 12A
$254    $3CD2   SE       VC, #D2         ; Skip if VC == 210
$256    $A317   LD       I, $317         ; Load 317 into I
$258    $7D96   ADD      VD, #96         ; Add 150 to VD
$25A    $7648   ADD      V6, #48         ; Add 72 to V6
$25C    $727E   ADD      V2, #7E         ; Add 126 to V2
$25E    $A96E   LD       I, $96E         ; Load 96E into I
$260    $BE5B   JP       V0, $E5B        ; Jump to V0 + E5B
$262    $5F2C   UNKNOWN  $5F2C           ; Unknown 5xxx instruction
$264    $BDBC   JP       V0, $DBC        ; Jump to V0 + DBC
$266    $0B9A   SYS      $B9A            ; System call to B9A
$268    $D417   DRW      V4, V1, #7      ; Draw 7-byte sprite at V4, V1
$26A    $0F4A   SYS      $F4A            ; System call to F4A
$26C    $707E   ADD      V0, #7E         ; Add 126 to V0
$26E    $CE42   RND      VE, #42         ; VE = random & 42
$270    $D057   DRW      V0, V5, #7      ; Draw 7-byte sprite at V0, V5
$272    $E128   UNKNOWN  $E128           ; Unknown Exxx instruction
$274    $63D8   LD       V3, #D8         ; Load 216 into V3
$276    $686F   LD       V8, #6F         ; Load 111 into V8
$278    $2AAB   CALL     $AAB            ; Call subroutine at AAB
$27A    $281A   CALL     $81A            ; Call subroutine at 81A
$27C    $FE9C   UNKNOWN  FE9C            ; Unknown Fxxx instruction
$27E    $FC77   UNKNOWN  FC77            ; Unknown Fxxx instruction
$280    $D6FB   DRW      V6, VF, #B      ; Draw 11-byte sprite at V6, VF
$282    $A472   LD       I, $472         ; Load 472 into I
$284    $19DC   JP       $9DC            ; Jump to 9DC
$286    $4BAC   SNE      VB, #AC         ; Skip if VB != 172
$288    $4ADD   SNE      VA, #DD         ; Skip if VA != 221
$28A    $F46B   UNKNOWN  F46B            ; Unknown Fxxx instruction
$28C    $B1D2   JP       V0, $1D2        ; Jump to V0 + 1D2
$28E    $D2BA   DRW      V2, VB, #A      ; Draw 10-byte sprite at V2, VB
$290    $8AE9   UNKNOWN  8AE9            ; Unknown 8xxx instruction
$292    $49D1   SNE      V9, #D1         ; Skip if V9 != 209
$294    $35D3   SE       V5, #D3         ; Skip if V5 == 211
$296    $CD2D   RND      VD, #2D         ; VD = random & 2D
$298    $4E51   SNE      VE, #51         ; Skip if VE != 81
$29A    $73FF   ADD      V3, #FF         ; Add 255 to V3
$29C    $C07A   RND      V0, #7A         ; V0 = random & 7A
$29E    $9E75   UNKNOWN  $9E75           ; Unknown 9xxx instruction
$2A0    $D081   DRW      V0, V8, #1      ; Draw 1-byte sprite at V0, V8
$2A2    $5A19   UNKNOWN  $5A19           ; Unknown 5xxx instruction
$2A4    $9DAD   UNKNOWN  $9DAD           ; Unknown 9xxx instruction
$2A6    $7DE7   ADD      VD, #E7         ; Add 231 to VD
$2A8    $B01A   JP       V0, $01A        ; Jump to V0 + 01A
$2AA    $81EB   UNKNOWN  81EB            ; Unknown 8xxx instruction
$2AC    $C099   RND      V0, #99         ; V0 = random & 99
$2AE    $8C61   OR       VC, V6          ; VC |= V6
$2B0    $2227   CALL     $227            ; Call subroutine at 227
$2B2    $969E   UNKNOWN  $969E           ; Unknown 9xxx instruction
$2B4    $D63C   DRW      V6, V3, #C      ; Draw 12-byte sprite at V6, V3
$2B6    $1F43   JP       $F43            ; Jump to F43
$2B8    $59B6   UNKNOWN  $59B6           ; Unknown 5xxx instruction
$2BA    $8252   AND      V2, V5          ; V2 &= V5
$2BC    $35E6   SE       V5, #E6         ; Skip if V5 == 230
$2BE    $5E29   UNKNOWN  $5E29           ; Unknown 5xxx instruction
$2C0    $3E1A   SE       VE, #1A         ; Skip if VE == 26
$2C2    $E315   UNKNOWN  $E315           ; Unknown Exxx instruction
$2C4    $B63F   JP       V0, $63F        ; Jump to V0 + 63F
$2C6    $B1DB   JP       V0, $1DB        ; Jump to V0 + 1DB
$2C8    $C987   RND      V9, #87         ; V9 = random & 87
$2CA    $DE01   DRW      VE, V0, #1      ; Draw 1-byte sprite at VE, V0
$2CC    $F244   UNKNOWN  F244            ; Unknown Fxxx instruction
$2CE    $F8A3   UNKNOWN  F8A3            ; Unknown Fxxx instruction
$2D0    $A77A   LD       I, $77A         ; Load 77A into I
$2D2    $CF8B   RND      VF, #8B         ; VF = random & 8B
$2D4    $6ECF   LD       VE, #CF         ; Load 207 into VE
$2D6    $8F94   ADD      VF, V9          ; VF += V9, VF = carry
$2D8    $B095   JP       V0, $095        ; Jump to V0 + 095
$2DA    $546F   UNKNOWN  $546F           ; Unknown 5xxx instruction
$2DC    $F3DC   UNKNOWN  F3DC            ; Unknown Fxxx instruction
$2DE    $1434   JP       $434            ; Jump to 434
$2E0    $A876   LD       I, $876         ; Load 876 into I
$2E2    $3B54   SE       VB, #54         ; Skip if VB == 84
$2E4    $4BE3   SNE      VB, #E3         ; Skip if VB != 227
$2E6    $494C   SNE      V9, #4C         ; Skip if V9 != 76
$2E8    $01FA   SYS      $1FA            ; System call to 1FA
$2EA    $F104   UNKNOWN  F104            ; Unknown Fxxx instruction
$2EC    $78BE   ADD      V8, #BE         ; Add 190 to V8
$2EE    $DB2B   DRW      VB, V2, #B      ; Draw 11-byte sprite at VB, V2
$2F0    $B8C9   JP       V0, $8C9        ; Jump to V0 + 8C9
$2F2    $F4D9   UNKNOWN  F4D9            ; Unknown Fxxx instruction
$2F4    $6881   LD       V8, #81         ; Load 129 into V8
$2F6    $F285   UNKNOWN  F285            ; Unknown Fxxx instruction
$2F8    $E04E   UNKNOWN  $E04E           ; Unknown Exxx instruction
$2FA    $12BC   JP       $2BC            ; Jump to 2BC
$2FC    $D7F1   DRW      V7, VF, #1      ; Draw 1-byte sprite at V7, VF
$2FE    $98C4   UNKNOWN  $98C4           ; Unknown 9xxx instruction
$300    $0203   SYS      $203            ; System call to 203
$302    $093E   SYS      $93E            ; System call to 93E
$304    $5C9D   UNKNOWN  $5C9D           ; Unknown 5xxx instruction
$306    $BFF6   JP       V0, $FF6        ; Jump to V0 + FF6
$308    $76C4   ADD      V6, #C4         ; Add 196 to V6
$30A    $C630   RND      V6, #30         ; V6 = random & 30
$30C    $25F1   CALL     $5F1            ; Call subroutine at 5F1
$30E    $C9FF   RND      V9, #FF         ; V9 = random & FF
$310    $F7CE   UNKNOWN  F7CE            ; Unknown Fxxx instruction
$312    $5641   UNKNOWN  $5641           ; Unknown 5xxx instruction
$314    $44EE   SNE      V4, #EE         ; Skip if V4 != 238
$316    $657B   LD       V5, #7B         ; Load 123 into V5
$318    $A416   LD       I, $416         ; Load 416 into I
$31A    $794E   ADD      V9, #4E         ; Add 78 to V9
$31C    $8BB8   UNKNOWN  8BB8            ; Unknown 8xxx instruction
$31E    $F9A0   UNKNOWN  F9A0            ; Unknown Fxxx instruction
$320    $6C77   LD       VC, #77         ; Load 119 into VC
$322    $C5A2   RND      V5, #A2         ; V5 = random & A2
$324    $82FC   UNKNOWN  82FC            ; Unknown 8xxx instruction
$326    $485C   SNE      V8, #5C         ; Skip if V8 != 92
$328    $16B0   JP       $6B0            ; Jump to 6B0
$32A    $258A   CALL     $58A            ; Call subroutine at 58A
$32C    $A161   LD       I, $161         ; Load 161 into I
$32E    $0C7D   SYS      $C7D            ; System call to C7D
$330    $97ED   UNKNOWN  $97ED           ; Unknown 9xxx instruction
$332    $B9CC   JP       V0, $9CC        ; Jump to V0 + 9CC
$334    $94BC   UNKNOWN  $94BC           ; Unknown 9xxx instruction
$336    $B23E   JP       V0, $23E        ; Jump to V0 + 23E
$338    $00E6   SYS      $0E6            ; System call to 0E6
$33A    $12F4   JP       $2F4            ; Jump to 2F4
$33C    $0AA0   SYS      $AA0            ; System call to AA0
$33E    $0E87   SYS      $E87            ; System call to E87
$340    $15BA   JP       $5BA            ; Jump to 5BA
$342    $578A   UNKNOWN  $578A           ; Unknown 5xxx instruction
$344    $3234   SE       V2, #34         ; Skip if V2 == 52
$346    $2C5E   CALL     $C5E            ; Call subroutine at C5E
$348    $2109   CALL     $109            ; Call subroutine at 109
$34A    $92E4   UNKNOWN  $92E4           ; Unknown 9xxx instruction
$34C    $116D   JP       $16D            ; Jump to 16D
$34E    $A34A   LD       I, $34A         ; Load 34A into I
$350    $4E98   SNE      VE, #98         ; Skip if VE != 152
$352    $713C   ADD      V1, #3C         ; Add 60 to V1
$354    $9D1C   UNKNOWN  $9D1C           ; Unknown 9xxx instruction
$356    $FE8B   UNKNOWN  FE8B            ; Unknown Fxxx instruction
$358    $8B7D   UNKNOWN  8B7D            ; Unknown 8xxx instruction
$35A    $EAAB   UNKNOWN  $EAAB           ; Unknown Exxx instruction
$35C    $F5E0   UNKNOWN  F5E0            ; Unknown Fxxx instruction
$35E    $638C   LD       V3, #8C         ; Load 140 into V3
$360    $4A87   SNE      VA, #87         ; Skip if VA != 135
$362    $C7AF   RND      V7, #AF         ; V7 = random & AF
$364    $206F   CALL     $06F            ; Call subroutine at 06F
$366    $D021   DRW      V0, V2, #1      ; Draw 1-byte sprite at V0, V2
$368    $4060   SNE      V0, #60         ; Skip if V0 != 96
$36A    $E213   UNKNOWN  $E213           ; Unknown Exxx instruction
$36C    $11DC   JP       $1DC            ; Jump to 1DC
$36E    $1E95   JP       $E95            ; Jump to E95
$370    $0FDD   SYS      $FDD            ; System call to FDD
$372    $FB37   UNKNOWN  FB37            ; Unknown Fxxx instruction
$374    $AA7A   LD       I, $A7A         ; Load A7A into I
$376    $E605   UNKNOWN  $E605           ; Unknown Exxx instruction
$378    $7A7D   ADD      VA, #7D         ; Add 125 to VA
$37A    $B7DD   JP       V0, $7DD        ; Jump to V0 + 7DD
$37C    $98CC   UNKNOWN  $98CC           ; Unknown 9xxx instruction
$37E    $C216   RND      V2, #16         ; V2 = random & 16
$380    $93A4   UNKNOWN  $93A4           ; Unknown 9xxx instruction
$382    $C535   RND      V5, #35         ; V5 = random & 35
$384    $93AD   UNKNOWN  $93AD           ; Unknown 9xxx instruction
$386    $66DA   LD       V6, #DA         ; Load 218 into V6
$388    $FE6B   UNKNOWN  FE6B            ; Unknown Fxxx instruction
$38A    $ECB3   UNKNOWN  $ECB3           ; Unknown Exxx instruction
$38C    $A884   LD       I, $884         ; Load 884 into I
$38E    $8196   SHR      V1              ; V1 >>= 1, VF = LSB
$390    $BB03   JP       V0, $B03        ; Jump to V0 + B03
$392    $45F8   SNE      V5, #F8         ; Skip if V5 != 248
$394    $09E0   SYS      $9E0            ; System call to 9E0
$396    $B1B3   JP       V0, $1B3        ; Jump to V0 + 1B3
$398    $9346   UNKNOWN  $9346           ; Unknown 9xxx instruction
$39A    $78C6   ADD      V8, #C6         ; Add 198 to V8
$39C    $E86F   UNKNOWN  $E86F           ; Unknown Exxx instruction
$39E    $D72C   DRW      V7, V2, #C      ; Draw 12-byte sprite at V7, V2
$3A0    $9563   UNKNOWN  $9563           ; Unknown 9xxx instruction
$3A2    $81C4   ADD      V1, VC          ; V1 += VC, VF = carry
$3A4    $DB37   DRW      VB, V3, #7      ; Draw 7-byte sprite at VB, V3
$3A6    $5326   UNKNOWN  $5326           ; Unknown 5xxx instruction
$3A8    $DE2A   DRW      VE, V2, #A      ; Draw 10-byte sprite at VE, V2
$3AA    $4289   SNE      V2, #89         ; Skip if V2 != 137
$3AC    $A085   LD       I, $085         ; Load 085 into I
$3AE    $38B4   SE       V8, #B4         ; Skip if V8 == 180
$3B0    $8534   ADD      V5, V3          ; V5 += V3, VF = carry
$3B2    $2609   CALL     $609            ; Call subroutine at 609
$3B4    $DA51   DRW      VA, V5, #1      ; Draw 1-byte sprite at VA, V5
$3B6    $9D17   UNKNOWN  $9D17           ; Unknown 9xxx instruction
$3B8    $45BF   SNE      V5, #BF         ; Skip if V5 != 191
$3BA    $1649   JP       $649            ; Jump to 649
$3BC    $4784   SNE      V7, #84         ; Skip if V7 != 132
$3BE    $49E6   SNE      V9, #E6         ; Skip if V9 != 230
$3C0    $19E3   JP       $9E3            ; Jump to 9E3
$3C2    $45B2   SNE      V5, #B2         ; Skip if V5 != 178
$3C4    $8BAC   UNKNOWN  8BAC            ; Unknown 8xxx instruction
$3C6    $0167   SYS      $167            ; System call to 167
$3C8    $F098   UNKNOWN  F098            ; Unknown Fxxx instruction
$3CA    $A290   LD       I, $290         ; Load 290 into I
$3CC    $4856   SNE      V8, #56         ; Skip if V8 != 86
$3CE    $854F   UNKNOWN  854F            ; Unknown 8xxx instruction
$3D0    $11D6   JP       $1D6            ; Jump to 1D6
$3D2    $C5E2   RND      V5, #E2         ; V5 = random & E2
$3D4    $A6D1   LD       I, $6D1         ; Load 6D1 into I
$3D6    $A8E3   LD       I, $8E3         ; Load 8E3 into I
$3D8    $043F   SYS      $43F            ; System call to 43F
$3DA    $0AE0   SYS      $AE0            ; System call to AE0
$3DC    $300D   SE       V0, #0D         ; Skip if V0 == 13
$3DE    $AD66   LD       I, $D66         ; Load D66 into I
$3E0    $E5CF   UNKNOWN  $E5CF           ; Unknown Exxx instruction
$3E2    $B150   JP       V0, $150        ; Jump to V0 + 150
$3E4    $1710   JP       $710            ; Jump to 710
$3E6    $A797   LD       I, $797         ; Load 797 into I
$3E8    $AEF0   LD       I, $EF0         ; Load EF0 into I
$3EA    $0F63   SYS      $F63            ; System call to F63
$3EC    $6348   LD       V3, #48         ; Load 72 into V3
$3EE    $B558   JP       V0, $558        ; Jump to V0 + 558
$3F0    $BBC4   JP       V0, $BC4        ; Jump to V0 + BC4
$3F2    $198C   JP       $98C            ; Jump to 98C
$3F4    $A1AF   LD       I, $1AF         ; Load 1AF into I
$3F6    $3761   SE       V7, #61         ; Skip if V7 == 97
$3F8    $E704   UNKNOWN  $E704           ; Unknown Exxx instruction
$3FA    $835A   UNKNOWN  835A            ; Unknown 8xxx instruction
$3FC    $278D   CALL     $78D            ; Call subroutine at 78D
$3FE    $6F6E   LD       VF, #6E         ; Load 110 into VF
$400    $0238   SYS      $238            ; System call to 238
$402    $C07B   RND      V0, #7B         ; V0 = random & 7B
$404    $6C51   LD       VC, #51         ; Load 81 into VC
$406    $B08F   JP       V0, $08F        ; Jump to V0 + 08F
$408    $90DD   UNKNOWN  $90DD           ; Unknown 9xxx instruction
$40A    $31C7   SE       V1, #C7         ; Skip if V1 == 199
$40C    $F705   UNKNOWN  F705            ; Unknown Fxxx instruction
$40E    $D7AD   DRW      V7, VA, #D      ; Draw 13-byte sprite at V7, VA
$410    $413F   SNE      V1, #3F         ; Skip if V1 != 63
$412    $8FD6   SHR      VF              ; VF >>= 1, VF = LSB
$414    $3184   SE       V1, #84         ; Skip if V1 == 132
$416    $34D2   SE       V4, #D2         ; Skip if V4 == 210
$418    $B162   JP       V0, $162        ; Jump to V0 + 162
$41A    $501A   UNKNOWN  $501A           ; Unknown 5xxx instruction
$41C    $0042   SYS      $042            ; System call to 042
$41E    $AF16   LD       I, $F16         ; Load F16 into I
$420    $BE4D   JP       V0, $E4D        ; Jump to V0 + E4D
$422    $3050   SE       V0, #50         ; Skip if V0 == 80
$424    $6459   LD       V4, #59         ; Load 89 into V4
$426    $57D2   UNKNOWN  $57D2           ; Unknown 5xxx instruction
$428    $793F   ADD      V9, #3F         ; Add 63 to V9
$42A    $086E   SYS      $86E            ; System call to 86E
$42C    $ADBF   LD       I, $DBF         ; Load DBF into I
$42E    $146C   JP       $46C            ; Jump to 46C
$430    $FE95   UNKNOWN  FE95            ; Unknown Fxxx instruction
$432    $1767   JP       $767            ; Jump to 767
$434    $DF2F   DRW      VF, V2, #F      ; Draw 15-byte sprite at VF, V2
$436    $6D8A   LD       VD, #8A         ; Load 138 into VD
$438    $3945   SE       V9, #45         ; Skip if V9 == 69
$43A    $08A7   SYS      $8A7            ; System call to 8A7
$43C    $49C1   SNE      V9, #C1         ; Skip if V9 != 193
$43E    $EE81   UNKNOWN  $EE81           ; Unknown Exxx instruction
$440    $105C   JP       $05C            ; Jump to 05C
$442    $2FA2   CALL     $FA2            ; Call subroutine at FA2
$444    $2AAB   CALL     $AAB            ; Call subroutine at AAB
$446    $34C1   SE       V4, #C1         ; Skip if V4 == 193
$448    $FB68   UNKNOWN  FB68            ; Unknown Fxxx instruction
$44A    $367C   SE       V6, #7C         ; Skip if V6 == 124
$44C    $9AA1   UNKNOWN  $9AA1           ; Unknown 9xxx instruction
$44E    $0CEA   SYS      $CEA            ; System call to CEA
$450    $EA67   UNKNOWN  $EA67           ; Unknown Exxx instruction
$452    $7319   ADD      V3, #19         ; Add 25 to V3
$454    $F25B   UNKNOWN  F25B            ; Unknown Fxxx instruction
$456    $0DAA   SYS      $DAA            ; System call to DAA
$458    $BA2F   JP       V0, $A2F        ; Jump to V0 + A2F
$45A    $4109   SNE      V1, #09         ; Skip if V1 != 9
$45C    $8E5A   UNKNOWN  8E5A            ; Unknown 8xxx instruction
$45E    $EA8A   UNKNOWN  $EA8A           ; Unknown Exxx instruction
$460    $774D   ADD      V7, #4D         ; Add 77 to V7
$462    $FD8D   UNKNOWN  FD8D            ; Unknown Fxxx instruction
$464    $76A6   ADD      V6, #A6         ; Add 166 to V6
$466    $0D3B   SYS      $D3B            ; System call to D3B
$468    $93B7   UNKNOWN  $93B7           ; Unknown 9xxx instruction
$46A    $45B4   SNE      V5, #B4         ; Skip if V5 != 180
$46C    $804C   UNKNOWN  804C            ; Unknown 8xxx instruction
$46E    $80D0   LD       V0, VD          ; V0 = VD
$470    $1B16   JP       $B16            ; Jump to B16
$472    $9AFF   UNKNOWN  $9AFF           ; Unknown 9xxx instruction
$474    $EB93   UNKNOWN  $EB93           ; Unknown Exxx instruction
$476    $4039   SNE      V0, #39         ; Skip if V0 != 57
$478    $41AB   SNE      V1, #AB         ; Skip if V1 != 171
$47A    $E169   UNKNOWN  $E169           ; Unknown Exxx instruction
$47C    $C826   RND      V8, #26         ; V8 = random & 26
$47E    $F688   UNKNOWN  F688            ; Unknown Fxxx instruction
$480    $FC7F   UNKNOWN  FC7F            ; Unknown Fxxx instruction
$482    $0480   SYS      $480            ; System call to 480
$484    $9428   UNKNOWN  $9428           ; Unknown 9xxx instruction
$486    $A81C   LD       I, $81C         ; Load 81C into I
$488    $46D5   SNE      V6, #D5         ; Skip if V6 != 213
$48A    $101F   JP       $01F            ; Jump to 01F
$48C    $4E1A   SNE      VE, #1A         ; Skip if VE != 26
$48E    $4729   SNE      V7, #29         ; Skip if V7 != 41
$490    $67D6   LD       V7, #D6         ; Load 214 into V7
$492    $A959   LD       I, $959         ; Load 959 into I
$494    $9354   UNKNOWN  $9354           ; Unknown 9xxx instruction
$496    $4F90   SNE      VF, #90         ; Skip if VF != 144
$498    $A2A2   LD       I, $2A2         ; Load 2A2 into I
$49A    $DECA   DRW      VE, VC, #A      ; Draw 10-byte sprite at VE, VC
$49C    $D2C0   DRW      V2, VC, #0      ; Draw 0-byte sprite at V2, VC
$49E    $19DE   JP       $9DE            ; Jump to 9DE
$4A0    $FAD4   UNKNOWN  FAD4            ; Unknown Fxxx instruction
$4A2    $9296   UNKNOWN  $9296           ; Unknown 9xxx instruction
$4A4    $836D   UNKNOWN  836D            ; Unknown 8xxx instruction
$4A6    $AAEB   LD       I, $AEB         ; Load AEB into I
$4A8    $844A   UNKNOWN  844A            ; Unknown 8xxx instruction
$4AA    $D365   DRW      V3, V6, #5      ; Draw 5-byte sprite at V3, V6
$4AC    $7F69   ADD      VF, #69         ; Add 105 to VF
$4AE    $4DB3   SNE      VD, #B3         ; Skip if VD != 179
$4B0    $ACF1   LD       I, $CF1         ; Load CF1 into I
$4B2    $3706   SE       V7, #06         ; Skip if V7 == 6
$4B4    $F3C1   UNKNOWN  F3C1            ; Unknown Fxxx instruction
$4B6    $3C08   SE       VC, #08         ; Skip if VC == 8
$4B8    $2350   CALL     $350            ; Call subroutine at 350
$4BA    $E9A0   UNKNOWN  $E9A0           ; Unknown Exxx instruction
$4BC    $3E11   SE       VE, #11         ; Skip if VE == 17
$4BE    $BF2E   JP       V0, $F2E        ; Jump to V0 + F2E
$4C0    $3C15   SE       VC, #15         ; Skip if VC == 21
$4C2    $109C   JP       $09C            ; Jump to 09C
$4C4    $A311   LD       I, $311         ; Load 311 into I
$4C6    $D45A   DRW      V4, V5, #A      ; Draw 10-byte sprite at V4, V5
$4C8    $B677   JP       V0, $677        ; Jump to V0 + 677
$4CA    $8F85   SUB      VF, V8          ; VF -= V8, VF = !borrow
$4CC    $16B8   JP       $6B8            ; Jump to 6B8
$4CE    $7240   ADD      V2, #40         ; Add 64 to V2
$4D0    $4C13   SNE      VC, #13         ; Skip if VC != 19
$4D2    $02BE   SYS      $2BE            ; System call to 2BE
$4D4    $FB9F   UNKNOWN  FB9F            ; Unknown Fxxx instruction
$4D6    $A9E9   LD       I, $9E9         ; Load 9E9 into I
$4D8    $FA0E   UNKNOWN  FA0E            ; Unknown Fxxx instruction
$4DA    $7B91   ADD      VB, #91         ; Add 145 to VB
$4DC    $45ED   SNE      V5, #ED         ; Skip if V5 != 237
$4DE    $033B   SYS      $33B            ; System call to 33B
$4E0    $EA18   UNKNOWN  $EA18           ; Unknown Exxx instruction
$4E2    $22A1   CALL     $2A1            ; Call subroutine at 2A1
$4E4    $C39B   RND      V3, #9B         ; V3 = random & 9B
$4E6    $1142   JP       $142            ; Jump to 142
$4E8    $C2E6   RND      V2, #E6         ; V2 = random & E6
$4EA    $A4CF   LD       I, $4CF         ; Load 4CF into I
$4EC    $4023   SNE      V0, #23         ; Skip if V0 != 35
$4EE    $F42D   UNKNOWN  F42D            ; Unknown Fxxx instruction
$4F0    $3A8F   SE       VA, #8F         ; Skip if VA == 143
$4F2    $50B6   UNKNOWN  $50B6           ; Unknown 5xxx instruction
$4F4    $8E24   ADD      VE, V2          ; VE += V2, VF = carry
$4F6    $0136   SYS      $136            ; System call to 136
$4F8    $5E08   UNKNOWN  $5E08           ; Unknown 5xxx instruction
$4FA    $1B40   JP       $B40            ; Jump to B40
$4FC    $592C   UNKNOWN  $592C           ; Unknown 5xxx instruction
$4FE    $22B2   CALL     $2B2            ; Call subroutine at 2B2
$500    $E0FD   UNKNOWN  $E0FD           ; Unknown Exxx instruction
$502    $6DC8   LD       VD, #C8         ; Load 200 into VD
$504    $10A2   JP       $0A2            ; Jump to 0A2
$506    $BD26   JP       V0, $D26        ; Jump to V0 + D26
$508    $0E7C   SYS      $E7C            ; System call to E7C
$50A    $0D84   SYS      $D84            ; System call to D84
$50C    $09A5   SYS      $9A5            ; System call to 9A5
$50E    $B306   JP       V0, $306        ; Jump to V0 + 306
$510    $0E0C   SYS      $E0C            ; System call to E0C
$512    $237A   CALL     $37A            ; Call subroutine at 37A
$514    $27F6   CALL     $7F6            ; Call subroutine at 7F6
$516    $0A96   SYS      $A96            ; System call to A96
$518    $CF5F   RND      VF, #5F         ; VF = random & 5F
$51A    $E348   UNKNOWN  $E348           ; Unknown Exxx instruction
$51C    $061F   SYS      $61F            ; System call to 61F
$51E    $1D07   JP       $D07            ; Jump to D07
$520    $9D57   UNKNOWN  $9D57           ; Unknown 9xxx instruction
$522    $1934   JP       $934            ; Jump to 934
$524    $C50C   RND      V5, #0C         ; V5 = random & 0C
$526    $8F78   UNKNOWN  8F78            ; Unknown 8xxx instruction
$528    $55E8   UNKNOWN  $55E8           ; Unknown 5xxx instruction
$52A    $6E99   LD       VE, #99         ; Load 153 into VE
$52C    $F8BD   UNKNOWN  F8BD            ; Unknown Fxxx instruction
$52E    $9CEA   UNKNOWN  $9CEA           ; Unknown 9xxx instruction
$530    $1A64   JP       $A64            ; Jump to A64
$532    $D028   DRW      V0, V2, #8      ; Draw 8-byte sprite at V0, V2
$534    $BF8B   JP       V0, $F8B        ; Jump to V0 + F8B
$536    $2CD8   CALL     $CD8            ; Call subroutine at CD8
$538    $BE0B   JP       V0, $E0B        ; Jump to V0 + E0B
$53A    $AD90   LD       I, $D90         ; Load D90 into I
$53C    $749C   ADD      V4, #9C         ; Add 156 to V4
$53E    $0295   SYS      $295            ; System call to 295
$540    $8F5C   UNKNOWN  8F5C            ; Unknown 8xxx instruction
$542    $DBAD   DRW      VB, VA, #D      ; Draw 13-byte sprite at VB, VA
$544    $7027   ADD      V0, #27         ; Add 39 to V0
$546    $3FEC   SE       VF, #EC         ; Skip if VF == 236
$548    $2447   CALL     $447            ; Call subroutine at 447
$54A    $A397   LD       I, $397         ; Load 397 into I
$54C    $64BF   LD       V4, #BF         ; Load 191 into V4
$54E    $B8D9   JP       V0, $8D9        ; Jump to V0 + 8D9
$550    $21EA   CALL     $1EA            ; Call subroutine at 1EA
$552    $7A84   ADD      VA, #84         ; Add 132 to VA
$554    $FEC4   UNKNOWN  FEC4            ; Unknown Fxxx instruction
$556    $7C13   ADD      VC, #13         ; Add 19 to VC
$558    $0EE6   SYS      $EE6            ; System call to EE6
$55A    $AAFC   LD       I, $AFC         ; Load AFC into I
$55C    $2E8F   CALL     $E8F            ; Call subroutine at E8F
$55E    $82E3   XOR      V2, VE          ; V2 ^= VE
$560    $714E   ADD      V1, #4E         ; Add 78 to V1
$562    $3580   SE       V5, #80         ; Skip if V5 == 128
$564    $81D2   AND      V1, VD          ; V1 &= VD
$566    $6D3E   LD       VD, #3E         ; Load 62 into VD
$568    $4E3B   SNE      VE, #3B         ; Skip if VE != 59
$56A    $AE4D   LD       I, $E4D         ; Load E4D into I
$56C    $B1D7   JP       V0, $1D7        ; Jump to V0 + 1D7
$56E    $F9DA   UNKNOWN  F9DA            ; Unknown Fxxx instruction
$570    $86F1   OR       V6, VF          ; V6 |= VF
$572    $235F   CALL     $35F            ; Call subroutine at 35F
$574    $6853   LD       V8, #53         ; Load 83 into V8
$576    $7238   ADD      V2, #38         ; Add 56 to V2
$578    $86B0   LD       V6, VB          ; V6 = VB
$57A    $B556   JP       V0, $556        ; Jump to V0 + 556
$57C    $8B4C   UNKNOWN  8B4C            ; Unknown 8xxx instruction
$57E    $7193   ADD      V1, #93         ; Add 147 to V1
$580    $F50A   LD       V5, K           ; Wait for key press, store in V5
$582    $0F77   SYS      $F77            ; System call to F77
$584    $9C31   UNKNOWN  $9C31           ; Unknown 9xxx instruction
$586    $3E50   SE       VE, #50         ; Skip if VE == 80
$588    $600A   LD       V0, #0A         ; Load 10 into V0
$58A    $942B   UNKNOWN  $942B           ; Unknown 9xxx instruction
$58C    $57CC   UNKNOWN  $57CC           ; Unknown 5xxx instruction
$58E    $B2D7   JP       V0, $2D7        ; Jump to V0 + 2D7
$590    $88F5   SUB      V8, VF          ; V8 -= VF, VF = !borrow
$592    $CBAE   RND      VB, #AE         ; VB = random & AE
$594    $D062   DRW      V0, V6, #2      ; Draw 2-byte sprite at V0, V6
$596    $EF08   UNKNOWN  $EF08           ; Unknown Exxx instruction
$598    $2A47   CALL     $A47            ; Call subroutine at A47
$59A    $8BBA   UNKNOWN  8BBA            ; Unknown 8xxx instruction
$59C    $03D5   SYS      $3D5            ; System call to 3D5
$59E    $A875   LD       I, $875         ; Load 875 into I
$5A0    $0701   SYS      $701            ; System call to 701
$5A2    $5B7F   UNKNOWN  $5B7F           ; Unknown 5xxx instruction
$5A4    $8048   UNKNOWN  8048            ; Unknown 8xxx instruction
$5A6    $115B   JP       $15B            ; Jump to 15B
$5A8    $21FA   CALL     $1FA            ; Call subroutine at 1FA
$5AA    $AECA   LD       I, $ECA         ; Load ECA into I
$5AC    $E1A7   UNKNOWN  $E1A7           ; Unknown Exxx instruction
$5AE    $0682   SYS      $682            ; System call to 682
$5B0    $8CE2   AND      VC, VE          ; VC &= VE
$5B2    $87E0   LD       V7, VE          ; V7 = VE
$5B4    $6A94   LD       VA, #94         ; Load 148 into VA
$5B6    $43C9   SNE      V3, #C9         ; Skip if V3 != 201
$5B8    $04D5   SYS      $4D5            ; System call to 4D5
$5BA    $8801   OR       V8, V0          ; V8 |= V0
$5BC    $58B0   SE       V8, VB          ; Skip if V8 == VB
$5BE    $A065   LD       I, $065         ; Load 065 into I
$5C0    $7C7F   ADD      VC, #7F         ; Add 127 to VC
$5C2    $DEE3   DRW      VE, VE, #3      ; Draw 3-byte sprite at VE, VE
$5C4    $13AE   JP       $3AE            ; Jump to 3AE
$5C6    $0082   SYS      $082            ; System call to 082
$5C8    $AAC3   LD       I, $AC3         ; Load AC3 into I
$5CA    $9A27   UNKNOWN  $9A27           ; Unknown 9xxx instruction
$5CC    $CC77   RND      VC, #77         ; VC = random & 77
$5CE    $1AA8   JP       $AA8            ; Jump to AA8
$5D0    $A8AB   LD       I, $8AB         ; Load 8AB into I
$5D2    $DC1F   DRW      VC, V1, #F      ; Draw 15-byte sprite at VC, V1
$5D4    $48E9   SNE      V8, #E9         ; Skip if V8 != 233
$5D6    $82EE   SHL      V2              ; V2 <<= 1, VF = MSB
$5D8    $3FC0   SE       VF, #C0         ; Skip if VF == 192
$5DA    $A5CE   LD       I, $5CE         ; Load 5CE into I
$5DC    $D651   DRW      V6, V5, #1      ; Draw 1-byte sprite at V6, V5
$5DE    $081B   SYS      $81B            ; System call to 81B
$5E0    $952F   UNKNOWN  $952F           ; Unknown 9xxx instruction
$5E2    $7445   ADD      V4, #45         ; Add 69 to V4
$5E4    $AE77   LD       I, $E77         ; Load E77 into I
$5E6    $B69E   JP       V0, $69E        ; Jump to V0 + 69E
$5E8    $A133   LD       I, $133         ; Load 133 into I
$5EA    $EC4C   UNKNOWN  $EC4C           ; Unknown Exxx instruction
$5EC    $9D8C   UNKNOWN  $9D8C           ; Unknown 9xxx instruction
$5EE    $8011   OR       V0, V1          ; V0 |= V1
$5F0    $0F6E   SYS      $F6E            ; System call to F6E
$5F2    $D9F9   DRW      V9, VF, #9      ; Draw 9-byte sprite at V9, VF
$5F4    $1484   JP       $484            ; Jump to 484
$5F6    $162C   JP       $62C            ; Jump to 62C
$5F8    $532A   UNKNOWN  $532A           ; Unknown 5xxx instruction
$5FA    $D2D9   DRW      V2, VD, #9      ; Draw 9-byte sprite at V2, VD
$5FC    $C24E   RND      V2, #4E         ; V2 = random & 4E
$5FE    $DBA1   DRW      VB, VA, #1      ; Draw 1-byte sprite at VB, VA
$600    $FD6C   UNKNOWN  FD6C            ; Unknown Fxxx instruction
$602    $7803   ADD      V8, #03         ; Add 3 to V8
$604    $E69A   UNKNOWN  $E69A           ; Unknown Exxx instruction
$606    $7CCE   ADD      VC, #CE         ; Add 206 to VC
$608    $4CA6   SNE      VC, #A6         ; Skip if VC != 166
$60A    $80A8   UNKNOWN  80A8            ; Unknown 8xxx instruction
$60C    $3413   SE       V4, #13         ; Skip if V4 == 19
$60E    $A050   LD       I, $050         ; Load 050 into I
$610    $06A6   SYS      $6A6            ; System call to 6A6
$612    $21E7   CALL     $1E7            ; Call subroutine at 1E7
$614    $6470   LD       V4, #70         ; Load 112 into V4
$616    $8D44   ADD      VD, V4          ; VD += V4, VF = carry
$618    $5AFC   UNKNOWN  $5AFC           ; Unknown 5xxx instruction
$61A    $9186   UNKNOWN  $9186           ; Unknown 9xxx instruction
$61C    $3D78   SE       VD, #78         ; Skip if VD == 120
$61E    $00F8   SYS      $0F8            ; System call to 0F8
$620    $83D6   SHR      V3              ; V3 >>= 1, VF = LSB
$622    $42A5   SNE      V2, #A5         ; Skip if V2 != 165
$624    $A992   LD       I, $992         ; Load 992 into I
$626    $0D1D   SYS      $D1D            ; System call to D1D
$628    $ACDB   LD       I, $CDB         ; Load CDB into I
$62A    $7785   ADD      V7, #85         ; Add 133 to V7
$62C    $0729   SYS      $729            ; System call to 729
$62E    $D0B3   DRW      V0, VB, #3      ; Draw 3-byte sprite at V0, VB
$630    $CE46   RND      VE, #46         ; VE = random & 46
$632    $8627   SUBN     V6, V2          ; V6 = V2 - V6, VF = !borrow
$634    $531F   UNKNOWN  $531F           ; Unknown 5xxx instruction
$636    $4C0F   SNE      VC, #0F         ; Skip if VC != 15
$638    $0121   SYS      $121            ; System call to 121
$63A    $9A3A   UNKNOWN  $9A3A           ; Unknown 9xxx instruction
$63C    $2F5D   CALL     $F5D            ; Call subroutine at F5D
$63E    $B4A4   JP       V0, $4A4        ; Jump to V0 + 4A4
$640    $7D67   ADD      VD, #67         ; Add 103 to VD
$642    $9945   UNKNOWN  $9945           ; Unknown 9xxx instruction
$644    $A437   LD       I, $437         ; Load 437 into I
$646    $E072   UNKNOWN  $E072           ; Unknown Exxx instruction
$648    $54B1   UNKNOWN  $54B1           ; Unknown 5xxx instruction
$64A    $5CA8   UNKNOWN  $5CA8           ; Unknown 5xxx instruction
$64C    $97BD   UNKNOWN  $97BD           ; Unknown 9xxx instruction
$64E    $72BC   ADD      V2, #BC         ; Add 188 to V2
$650    $B2C8   JP       V0, $2C8        ; Jump to V0 + 2C8
$652    $50F0   SE       V0, VF          ; Skip if V0 == VF
$654    $6F86   LD       VF, #86         ; Load 134 into VF
$656    $FAE5   UNKNOWN  FAE5            ; Unknown Fxxx instruction
$658    $97BE   UNKNOWN  $97BE           ; Unknown 9xxx instruction
$65A    $6108   LD       V1, #08         ; Load 8 into V1
$65C    $8DBB   UNKNOWN  8DBB            ; Unknown 8xxx instruction
$65E    $0EC9   SYS      $EC9            ; System call to EC9
$660    $ED75   UNKNOWN  $ED75           ; Unknown Exxx instruction
$662    $7F3E   ADD      VF, #3E         ; Add 62 to VF
$664    $DAAE   DRW      VA, VA, #E      ; Draw 14-byte sprite at VA, VA
$666    $42E3   SNE      V2, #E3         ; Skip if V2 != 227
$668    $5451   UNKNOWN  $5451           ; Unknown 5xxx instruction
$66A    $6571   LD       V5, #71         ; Load 113 into V5
$66C    $2EAA   CALL     $EAA            ; Call subroutine at EAA
$66E    $2071   CALL     $071            ; Call subroutine at 071
$670    $0FB4   SYS      $FB4            ; System call to FB4
$672    $EAE6   UNKNOWN  $EAE6           ; Unknown Exxx instruction
$674    $99AF   UNKNOWN  $99AF           ; Unknown 9xxx instruction
$676    $950C   UNKNOWN  $950C           ; Unknown 9xxx instruction
$678    $15F4   JP       $5F4            ; Jump to 5F4
$67A    $E67D   UNKNOWN  $E67D           ; Unknown Exxx instruction
$67C    $BFC0   JP       V0, $FC0        ; Jump to V0 + FC0
$67E    $4764   SNE      V7, #64         ; Skip if V7 != 100
$680    $2D9B   CALL     $D9B            ; Call subroutine at D9B
$682    $3087   SE       V0, #87         ; Skip if V0 == 135
$684    $310E   SE       V1, #0E         ; Skip if V1 == 14
$686    $DA77   DRW      VA, V7, #7      ; Draw 7-byte sprite at VA, V7
$688    $B4EC   JP       V0, $4EC        ; Jump to V0 + 4EC
$68A    $E86C   UNKNOWN  $E86C           ; Unknown Exxx instruction
$68C    $1B43   JP       $B43            ; Jump to B43
$68E    $9A0C   UNKNOWN  $9A0C           ; Unknown 9xxx instruction
$690    $B678   JP       V0, $678        ; Jump to V0 + 678
$692    $77FB   ADD      V7, #FB         ; Add 251 to V7
$694    $8F55   SUB      VF, V5          ; VF -= V5, VF = !borrow
$696    $BEB5   JP       V0, $EB5        ; Jump to V0 + EB5
$698    $4238   SNE      V2, #38         ; Skip if V2 != 56
$69A    $3667   SE       V6, #67         ; Skip if V6 == 103
$69C    $6EF7   LD       VE, #F7         ; Load 247 into VE
$69E    $128C   JP       $28C            ; Jump to 28C
$6A0    $5493   UNKNOWN  $5493           ; Unknown 5xxx instruction
$6A2    $BFB4   JP       V0, $FB4        ; Jump to V0 + FB4
$6A4    $3035   SE       V0, #35         ; Skip if V0 == 53
$6A6    $E973   UNKNOWN  $E973           ; Unknown Exxx instruction
$6A8    $3AC1   SE       VA, #C1         ; Skip if VA == 193
$6AA    $86A7   SUBN     V6, VA          ; V6 = VA - V6, VF = !borrow
$6AC    $7E3C   ADD      VE, #3C         ; Add 60 to VE
$6AE    $2AB7   CALL     $AB7            ; Call subroutine at AB7
$6B0    $DB9B   DRW      VB, V9, #B      ; Draw 11-byte sprite at VB, V9
$6B2    $05A5   SYS      $5A5            ; System call to 5A5
$6B4    $8716   SHR      V7              ; V7 >>= 1, VF = LSB
$6B6    $D812   DRW      V8, V1, #2      ; Draw 2-byte sprite at V8, V1
$6B8    $AF58   LD       I, $F58         ; Load F58 into I
$6BA    $A516   LD       I, $516         ; Load 516 into I
$6BC    $1F91   JP       $F91            ; Jump to F91
$6BE    $70B9   ADD      V0, #B9         ; Add 185 to V0
$6C0    $5D8F   UNKNOWN  $5D8F           ; Unknown 5xxx instruction
$6C2    $B854   JP       V0, $854        ; Jump to V0 + 854
$6C4    $3AEB   SE       VA, #EB         ; Skip if VA == 235
$6C6    $24F5   CALL     $4F5            ; Call subroutine at 4F5
$6C8    $DF67   DRW      VF, V6, #7      ; Draw 7-byte sprite at VF, V6
$6CA    $74FA   ADD      V4, #FA         ; Add 250 to V4
$6CC    $B540   JP       V0, $540        ; Jump to V0 + 540
$6CE    $4B3E   SNE      VB, #3E         ; Skip if VB != 62
$6D0    $DDEC   DRW      VD, VE, #C      ; Draw 12-byte sprite at VD, VE
$6D2    $48DE   SNE      V8, #DE         ; Skip if V8 != 222
$6D4    $8CEC   UNKNOWN  8CEC            ; Unknown 8xxx instruction
$6D6    $CC8E   RND      VC, #8E         ; VC = random & 8E
$6D8    $BA4A   JP       V0, $A4A        ; Jump to V0 + A4A
$6DA    $4DC1   SNE      VD, #C1         ; Skip if VD != 193
$6DC    $6B8D   LD       VB, #8D         ; Load 141 into VB
$6DE    $144A   JP       $44A            ; Jump to 44A
$6E0    $1EE9   JP       $EE9            ; Jump to EE9
$6E2    $2C3A   CALL     $C3A            ; Call subroutine at C3A
$6E4    $2F41   CALL     $F41            ; Call subroutine at F41
$6E6    $53E6   UNKNOWN  $53E6           ; Unknown 5xxx instruction
$6E8    $D84A   DRW      V8, V4, #A      ; Draw 10-byte sprite at V8, V4
$6EA    $3C20   SE       VC, #20         ; Skip if VC == 32
$6EC    $D42A   DRW      V4, V2, #A      ; Draw 10-byte sprite at V4, V2
$6EE    $A812   LD       I, $812         ; Load 812 into I
$6F0    $1169   JP       $169            ; Jump to 169
$6F2    $E15E   UNKNOWN  $E15E           ; Unknown Exxx instruction
$6F4    $ED13   UNKNOWN  $ED13           ; Unknown Exxx instruction
$6F6    $79EE   ADD      V9, #EE         ; Add 238 to V9
$6F8    $F8B9   UNKNOWN  F8B9            ; Unknown Fxxx instruction
$6FA    $FB62   UNKNOWN  FB62            ; Unknown Fxxx instruction
$6FC    $E67F   UNKNOWN  $E67F           ; Unknown Exxx instruction
$6FE    $BAD4   JP       V0, $AD4        ; Jump to V0 + AD4
$700    $9159   UNKNOWN  $9159           ; Unknown 9xxx instruction
$702    $5D07   UNKNOWN  $5D07           ; Unknown 5xxx instruction
$704    $CE31   RND      VE, #31         ; VE = random & 31
$706    $64C0   LD       V4, #C0         ; Load 192 into V4
$708    $04AF   SYS      $4AF            ; System call to 4AF
$70A    $863F   UNKNOWN  863F            ; Unknown 8xxx instruction
$70C    $5725   UNKNOWN  $5725           ; Unknown 5xxx instruction
$70E    $CF2D   RND      VF, #2D         ; VF = random & 2D
$710    $705E   ADD      V0, #5E         ; Add 94 to V0
$712    $DEDF   DRW      VE, VD, #F      ; Draw 15-byte sprite at VE, VD
$714    $7D76   ADD      VD, #76         ; Add 118 to VD
$716    $15D8   JP       $5D8            ; Jump to 5D8
$718    $2A1B   CALL     $A1B            ; Call subroutine at A1B
$71A    $98E3   UNKNOWN  $98E3           ; Unknown 9xxx instruction
$71C    $582B   UNKNOWN  $582B           ; Unknown 5xxx instruction
$71E    $289A   CALL     $89A            ; Call subroutine at 89A
$720    $82AD   UNKNOWN  82AD            ; Unknown 8xxx instruction
$722    $3431   SE       V4, #31         ; Skip if V4 == 49
$724    $863F   UNKNOWN  863F            ; Unknown 8xxx instruction
$726    $E9B7   UNKNOWN  $E9B7           ; Unknown Exxx instruction
$728    $48FA   SNE      V8, #FA         ; Skip if V8 != 250
$72A    $7DFF   ADD      VD, #FF         ; Add 255 to VD
$72C    $DFEF   DRW      VF, VE, #F      ; Draw 15-byte sprite at VF, VE
$72E    $D156   DRW      V1, V5, #6      ; Draw 6-byte sprite at V1, V5
$730    $BED0   JP       V0, $ED0        ; Jump to V0 + ED0
$732    $DAE5   DRW      VA, VE, #5      ; Draw 5-byte sprite at VA, VE
$734    $17C4   JP       $7C4            ; Jump to 7C4
$736    $EEB0   UNKNOWN  $EEB0           ; Unknown Exxx instruction
$738    $692F   LD       V9, #2F         ; Load 47 into V9
$73A    $7313   ADD      V3, #13         ; Add 19 to V3
$73C    $325F   SE       V2, #5F         ; Skip if V2 == 95
$73E    $AE38   LD       I, $E38         ; Load E38 into I
$740    $8372   AND      V3, V7          ; V3 &= V7
$742    $43D7   SNE      V3, #D7         ; Skip if V3 != 215
$744    $3D83   SE       VD, #83         ; Skip if VD == 131
$746    $E6DA   UNKNOWN  $E6DA           ; Unknown Exxx instruction
$748    $E8C2   UNKNOWN  $E8C2           ; Unknown Exxx instruction
$74A    $2097   CALL     $097            ; Call subroutine at 097
$74C    $A11F   LD       I, $11F         ; Load 11F into I
$74E    $41FC   SNE      V1, #FC         ; Skip if V1 != 252
$750    $4375   SNE      V3, #75         ; Skip if V3 != 117
$752    $E2E1   UNKNOWN  $E2E1           ; Unknown Exxx instruction
$754    $74BE   ADD      V4, #BE         ; Add 190 to V4
$756    $5C78   UNKNOWN  $5C78           ; Unknown 5xxx instruction
$758    $4263   SNE      V2, #63         ; Skip if V2 != 99
$75A    $4594   SNE      V5, #94         ; Skip if V5 != 148
$75C    $A75A   LD       I, $75A         ; Load 75A into I
$75E    $B7F4   JP       V0, $7F4        ; Jump to V0 + 7F4
$760    $A33F   LD       I, $33F         ; Load 33F into I
$762    $B5B8   JP       V0, $5B8        ; Jump to V0 + 5B8
$764    $503A   UNKNOWN  $503A           ; Unknown 5xxx instruction
$766    $6207   LD       V2, #07         ; Load 7 into V2
$768    $CF9E   RND      VF, #9E         ; VF = random & 9E
$76A    $834F   UNKNOWN  834F            ; Unknown 8xxx instruction
$76C    $7192   ADD      V1, #92         ; Add 146 to V1
$76E    $C4E5   RND      V4, #E5         ; V4 = random & E5
$770    $97C3   UNKNOWN  $97C3           ; Unknown 9xxx instruction
$772    $F805   UNKNOWN  F805            ; Unknown Fxxx instruction
$774    $0413   SYS      $413            ; System call to 413
$776    $0C6B   SYS      $C6B            ; System call to C6B
$778    $45FF   SNE      V5, #FF         ; Skip if V5 != 255
$77A    $4AF7   SNE      VA, #F7         ; Skip if VA != 247
$77C    $E5C3   UNKNOWN  $E5C3           ; Unknown Exxx instruction
$77E    $138F   JP       $38F            ; Jump to 38F
$780    $DBC6   DRW      VB, VC, #6      ; Draw 6-byte sprite at VB, VC
$782    $4987   SNE      V9, #87         ; Skip if V9 != 135
$784    $4E18   SNE      VE, #18         ; Skip if VE != 24
$786    $0B58   SYS      $B58            ; System call to B58
$788    $DB91   DRW      VB, V9, #1      ; Draw 1-byte sprite at VB, V9
$78A    $44C7   SNE      V4, #C7         ; Skip if V4 != 199
$78C    $18DA   JP       $8DA            ; Jump to 8DA
$78E    $898A   UNKNOWN  898A            ; Unknown 8xxx instruction
$790    $82A6   SHR      V2              ; V2 >>= 1, VF = LSB
$792    $DBF5   DRW      VB, VF, #5      ; Draw 5-byte sprite at VB, VF
$794    $E065   UNKNOWN  $E065           ; Unknown Exxx instruction
$796    $548D   UNKNOWN  $548D           ; Unknown 5xxx instruction
$798    $DA8F   DRW      VA, V8, #F      ; Draw 15-byte sprite at VA, V8
$79A    $3668   SE       V6, #68         ; Skip if V6 == 104
$79C    $A67E   LD       I, $67E         ; Load 67E into I
$79E    $DDF1   DRW      VD, VF, #1      ; Draw 1-byte sprite at VD, VF
$7A0    $25F8   CALL     $5F8            ; Call subroutine at 5F8
$7A2    $9C95   UNKNOWN  $9C95           ; Unknown 9xxx instruction
$7A4    $E928   UNKNOWN  $E928           ; Unknown Exxx instruction
$7A6    $82A7   SUBN     V2, VA          ; V2 = VA - V2, VF = !borrow
$7A8    $E957   UNKNOWN  $E957           ; Unknown Exxx instruction
$7AA    $991E   UNKNOWN  $991E           ; Unknown 9xxx instruction
$7AC    $E7E9   UNKNOWN  $E7E9           ; Unknown Exxx instruction
$7AE    $CD99   RND      VD, #99         ; VD = random & 99
$7B0    $A4F4   LD       I, $4F4         ; Load 4F4 into I
$7B2    $A1DF   LD       I, $1DF         ; Load 1DF into I
$7B4    $A91C   LD       I, $91C         ; Load 91C into I
$7B6    $69EF   LD       V9, #EF         ; Load 239 into V9
$7B8    $8600   LD       V6, V0          ; V6 = V0
$7BA    $B100   JP       V0, $100        ; Jump to V0 + 100
$7BC    $65F3   LD       V5, #F3         ; Load 243 into V5
$7BE    $1ECE   JP       $ECE            ; Jump to ECE
$7C0    $327F   SE       V2, #7F         ; Skip if V2 == 127
$7C2    $4CDC   SNE      VC, #DC         ; Skip if VC != 220
$7C4    $7150   ADD      V1, #50         ; Add 80 to V1
$7C6    $F37E   UNKNOWN  F37E            ; Unknown Fxxx instruction
$7C8    $EAE5   UNKNOWN  $EAE5           ; Unknown Exxx instruction
$7CA    $4C57   SNE      VC, #57         ; Skip if VC != 87
$7CC    $277E   CALL     $77E            ; Call subroutine at 77E
$7CE    $07FF   SYS      $7FF            ; System call to 7FF
$7D0    $B682   JP       V0, $682        ; Jump to V0 + 682
$7D2    $1C0E   JP       $C0E            ; Jump to C0E
$7D4    $CE64   RND      VE, #64         ; VE = random & 64
$7D6    $8D81   OR       VD, V8          ; VD |= V8
$7D8    $AFC6   LD       I, $FC6         ; Load FC6 into I
$7DA    $CF0B   RND      VF, #0B         ; VF = random & 0B
$7DC    $725F   ADD      V2, #5F         ; Add 95 to V2
$7DE    $6293   LD       V2, #93         ; Load 147 into V2
$7E0    $F3A1   UNKNOWN  F3A1            ; Unknown Fxxx instruction
$7E2    $1D1B   JP       $D1B            ; Jump to D1B
$7E4    $FDBE   UNKNOWN  FDBE            ; Unknown Fxxx instruction
$7E6    $A642   LD       I, $642         ; Load 642 into I
$7E8    $EE5F   UNKNOWN  $EE5F           ; Unknown Exxx instruction
$7EA    $1B83   JP       $B83            ; Jump to B83
$7EC    $D1B9   DRW      V1, VB, #9      ; Draw 9-byte sprite at V1, VB
$7EE    $9085   UNKNOWN  $9085           ; Unknown 9xxx instruction
$7F0    $644C   LD       V4, #4C         ; Load 76 into V4
$7F2    $4FFF   SNE      VF, #FF         ; Skip if VF != 255
$7F4    $A7D0   LD       I, $7D0         ; Load 7D0 into I
$7F6    $26AB   CALL     $6AB            ; Call subroutine at 6AB
$7F8    $B2CE   JP       V0, $2CE        ; Jump to V0 + 2CE
$7FA    $278E   CALL     $78E            ; Call subroutine at 78E
$7FC    $2707   CALL     $707            ; Call subroutine at 707
$7FE    $A8A8   LD       I, $8A8         ; Load 8A8 into I
$800    $43A0   SNE      V3, #A0         ; Skip if V3 != 160
$802    $9505   UNKNOWN  $9505           ; Unknown 9xxx instruction
$804    $84C4   ADD      V4, VC          ; V4 += VC, VF = carry
$806    $C298   RND      V2, #98         ; V2 = random & 98
$808    $FAF9   UNKNOWN  FAF9            ; Unknown Fxxx instruction
$80A    $0FAC   SYS      $FAC            ; System call to FAC
$80C    $0B03   SYS      $B03            ; System call to B03
$80E    $FB59   UNKNOWN  FB59            ; Unknown Fxxx instruction
$810    $E52D   UNKNOWN  $E52D           ; Unknown Exxx instruction
$812    $8DA6   SHR      VD              ; VD >>= 1, VF = LSB
$814    $C950   RND      V9, #50         ; V9 = random & 50
$816    $5DD8   UNKNOWN  $5DD8           ; Unknown 5xxx instruction
$818    $5754   UNKNOWN  $5754           ; Unknown 5xxx instruction
$81A    $46AC   SNE      V6, #AC         ; Skip if V6 != 172
$81C    $C33E   RND      V3, #3E         ; V3 = random & 3E
$81E    $E8E7   UNKNOWN  $E8E7           ; Unknown Exxx instruction
$820    $BB02   JP       V0, $B02        ; Jump to V0 + B02
$822    $6821   LD       V8, #21         ; Load 33 into V8
$824    $5268   UNKNOWN  $5268           ; Unknown 5xxx instruction
$826    $86AB   UNKNOWN  86AB            ; Unknown 8xxx instruction
$828    $1061   JP       $061            ; Jump to 061
$82A    $EF5A   UNKNOWN  $EF5A           ; Unknown Exxx instruction
$82C    $5CF8   UNKNOWN  $5CF8           ; Unknown 5xxx instruction
$82E    $41C9   SNE      V1, #C9         ; Skip if V1 != 201
$830    $1274   JP       $274            ; Jump to 274
$832    $5649   UNKNOWN  $5649           ; Unknown 5xxx instruction
$834    $7341   ADD      V3, #41         ; Add 65 to V3
$836    $0941   SYS      $941            ; System call to 941
$838    $C710   RND      V7, #10         ; V7 = random & 10
$83A    $E7AF   UNKNOWN  $E7AF           ; Unknown Exxx instruction
$83C    $09A7   SYS      $9A7            ; System call to 9A7
$83E    $52D6   UNKNOWN  $52D6           ; Unknown 5xxx instruction
$840    $64B4   LD       V4, #B4         ; Load 180 into V4
$842    $6B1D   LD       VB, #1D         ; Load 29 into VB
$844    $448A   SNE      V4, #8A         ; Skip if V4 != 138
$846    $1415   JP       $415            ; Jump to 415
$848    $276F   CALL     $76F            ; Call subroutine at 76F
$84A    $308D   SE       V0, #8D         ; Skip if V0 == 141
$84C    $50E6   UNKNOWN  $50E6           ; Unknown 5xxx instruction
$84E    $B74E   JP       V0, $74E        ; Jump to V0 + 74E
$850    $4909   SNE      V9, #09         ; Skip if V9 != 9
$852    $72B3   ADD      V2, #B3         ; Add 179 to V2
$854    $6902   LD       V9, #02         ; Load 2 into V9
$856    $C44A   RND      V4, #4A         ; V4 = random & 4A
$858    $EE88   UNKNOWN  $EE88           ; Unknown Exxx instruction
$85A    $4FF9   SNE      VF, #F9         ; Skip if VF != 249
$85C    $1565   JP       $565            ; Jump to 565
$85E    $396D   SE       V9, #6D         ; Skip if V9 == 109
$860    $2344   CALL     $344            ; Call subroutine at 344
$862    $14A5   JP       $4A5            ; Jump to 4A5
$864    $5FAB   UNKNOWN  $5FAB           ; Unknown 5xxx instruction
$866    $4065   SNE      V0, #65         ; Skip if V0 != 101
$868    $8F73   XOR      VF, V7          ; VF ^= V7
$86A    $8E37   SUBN     VE, V3          ; VE = V3 - VE, VF = !borrow
$86C    $C584   RND      V5, #84         ; V5 = random & 84
$86E    $E85F   UNKNOWN  $E85F           ; Unknown Exxx instruction
$870    $93FF   UNKNOWN  $93FF           ; Unknown 9xxx instruction
$872    $1996   JP       $996            ; Jump to 996
$874    $DA22   DRW      VA, V2, #2      ; Draw 2-byte sprite at VA, V2
$876    $4437   SNE      V4, #37         ; Skip if V4 != 55
$878    $C5AA   RND      V5, #AA         ; V5 = random & AA
$87A    $8379   UNKNOWN  8379            ; Unknown 8xxx instruction
$87C    $A575   LD       I, $575         ; Load 575 into I
$87E    $2D9F   CALL     $D9F            ; Call subroutine at D9F
$880    $04FC   SYS      $4FC            ; System call to 4FC
$882    $5ACF   UNKNOWN  $5ACF           ; Unknown 5xxx instruction
$884    $E9BC   UNKNOWN  $E9BC           ; Unknown Exxx instruction
$886    $2B2E   CALL     $B2E            ; Call subroutine at B2E
$888    $192F   JP       $92F            ; Jump to 92F
$88A    $3E1A   SE       VE, #1A         ; Skip if VE == 26
$88C    $BDAC   JP       V0, $DAC        ; Jump to V0 + DAC
$88E    $D335   DRW      V3, V3, #5      ; Draw 5-byte sprite at V3, V3
$890    $AC9B   LD       I, $C9B         ; Load C9B into I
$892    $3D6A   SE       VD, #6A         ; Skip if VD == 106
$894    $3A9B   SE       VA, #9B         ; Skip if VA == 155
$896    $9B44   UNKNOWN  $9B44           ; Unknown 9xxx instruction
$898    $059A   SYS      $59A            ; System call to 59A
$89A    $AC0E   LD       I, $C0E         ; Load C0E into I
$89C    $68C2   LD       V8, #C2         ; Load 194 into V8
$89E    $D54C   DRW      V5, V4, #C      ; Draw 12-byte sprite at V5, V4
$8A0    $18EC   JP       $8EC            ; Jump to 8EC
$8A2    $F0BE   UNKNOWN  F0BE            ; Unknown Fxxx instruction
$8A4    $4F69   SNE      VF, #69         ; Skip if VF != 105
$8A6    $082C   SYS      $82C            ; System call to 82C
$8A8    $90A0   SNE      V0, VA          ; Skip if V0 != VA
$8AA    $B475   JP       V0, $475        ; Jump to V0 + 475
$8AC    $09F4   SYS      $9F4            ; System call to 9F4
$8AE    $69E8   LD       V9, #E8         ; Load 232 into V9
$8B0    $398B   SE       V9, #8B         ; Skip if V9 == 139
$8B2    $55CC   UNKNOWN  $55CC           ; Unknown 5xxx instruction
$8B4    $CE2A   RND      VE, #2A         ; VE = random & 2A
$8B6    $69F6   LD       V9, #F6         ; Load 246 into V9
$8B8    $0727   SYS      $727            ; System call to 727
$8BA    $2BE6   CALL     $BE6            ; Call subroutine at BE6
$8BC    $9EEF   UNKNOWN  $9EEF           ; Unknown 9xxx instruction
$8BE    $6D5E   LD       VD, #5E         ; Load 94 into VD
$8C0    $C5BE   RND      V5, #BE         ; V5 = random & BE
$8C2    $626A   LD       V2, #6A         ; Load 106 into V2
$8C4    $ED36   UNKNOWN  $ED36           ; Unknown Exxx instruction
$8C6    $8122   AND      V1, V2          ; V1 &= V2
$8C8    $8991   OR       V9, V9          ; V9 |= V9
$8CA    $4821   SNE      V8, #21         ; Skip if V8 != 33
$8CC    $B120   JP       V0, $120        ; Jump to V0 + 120
$8CE    $5308   UNKNOWN  $5308           ; Unknown 5xxx instruction
$8D0    $C289   RND      V2, #89         ; V2 = random & 89
$8D2    $DF90   DRW      VF, V9, #0      ; Draw 0-byte sprite at VF, V9
$8D4    $831B   UNKNOWN  831B            ; Unknown 8xxx instruction
$8D6    $B273   JP       V0, $273        ; Jump to V0 + 273
$8D8    $3BC7   SE       VB, #C7         ; Skip if VB == 199
$8DA    $E3D1   UNKNOWN  $E3D1           ; Unknown Exxx instruction
$8DC    $F4EC   UNKNOWN  F4EC            ; Unknown Fxxx instruction
$8DE    $DB5B   DRW      VB, V5, #B      ; Draw 11-byte sprite at VB, V5
$8E0    $CFEB   RND      VF, #EB         ; VF = random & EB
$8E2    $8AA9   UNKNOWN  8AA9            ; Unknown 8xxx instruction
$8E4    $957D   UNKNOWN  $957D           ; Unknown 9xxx instruction
$8E6    $D83A   DRW      V8, V3, #A      ; Draw 10-byte sprite at V8, V3
$8E8    $EF84   UNKNOWN  $EF84           ; Unknown Exxx instruction
$8EA    $03E3   SYS      $3E3            ; System call to 3E3
$8EC    $2649   CALL     $649            ; Call subroutine at 649
$8EE    $BF0C   JP       V0, $F0C        ; Jump to V0 + F0C
$8F0    $FC39   UNKNOWN  FC39            ; Unknown Fxxx instruction
$8F2    $B6C2   JP       V0, $6C2        ; Jump to V0 + 6C2
$8F4    $2393   CALL     $393            ; Call subroutine at 393
$8F6    $3AFB   SE       VA, #FB         ; Skip if VA == 251
$8F8    $D4BC   DRW      V4, VB, #C      ; Draw 12-byte sprite at V4, VB
$8FA    $5811   UNKNOWN  $5811           ; Unknown 5xxx instruction
$8FC    $BD99   JP       V0, $D99        ; Jump to V0 + D99
$8FE    $830B   UNKNOWN  830B            ; Unknown 8xxx instruction
$900    $C56A   RND      V5, #6A         ; V5 = random & 6A
$902    $0AB1   SYS      $AB1            ; System call to AB1
$904    $E9B8   UNKNOWN  $E9B8           ; Unknown Exxx instruction
$906    $5062   UNKNOWN  $5062           ; Unknown 5xxx instruction
$908    $CA42   RND      VA, #42         ; VA = random & 42
$90A    $31B9   SE       V1, #B9         ; Skip if V1 == 185
$90C    $F5B7   UNKNOWN  F5B7            ; Unknown Fxxx instruction
$90E    $0B63   SYS      $B63            ; System call to B63
$910    $4CFD   SNE      VC, #FD         ; Skip if VC != 253
$912    $5CF0   SE       VC, VF          ; Skip if VC == VF
$914    $B3A4   JP       V0, $3A4        ; Jump to V0 + 3A4
$916    $6D20   LD       VD, #20         ; Load 32 into VD
$918    $90E0   SNE      V0, VE          ; Skip if V0 != VE
$91A    $4D51   SNE      VD, #51         ; Skip if VD != 81
$91C    $4C45   SNE      VC, #45         ; Skip if VC != 69
$91E    $08C8   SYS      $8C8            ; System call to 8C8
$920    $0F72   SYS      $F72            ; System call to F72
$922    $7FE9   ADD      VF, #E9         ; Add 233 to VF
$924    $D9DB   DRW      V9, VD, #B      ; Draw 11-byte sprite at V9, VD
$926    $8FFC   UNKNOWN  8FFC            ; Unknown 8xxx instruction
$928    $BEB0   JP       V0, $EB0        ; Jump to V0 + EB0
$92A    $DC32   DRW      VC, V3, #2      ; Draw 2-byte sprite at VC, V3
$92C    $1499   JP       $499            ; Jump to 499
$92E    $059B   SYS      $59B            ; System call to 59B
$930    $FF36   UNKNOWN  FF36            ; Unknown Fxxx instruction
$932    $AF5F   LD       I, $F5F         ; Load F5F into I
$934    $828B   UNKNOWN  828B            ; Unknown 8xxx instruction
$936    $EF65   UNKNOWN  $EF65           ; Unknown Exxx instruction
$938    $3ADD   SE       VA, #DD         ; Skip if VA == 221
$93A    $AD17   LD       I, $D17         ; Load D17 into I
$93C    $863E   SHL      V6              ; V6 <<= 1, VF = MSB
$93E    $FD7D   UNKNOWN  FD7D            ; Unknown Fxxx instruction
$940    $BB94   JP       V0, $B94        ; Jump to V0 + B94
$942    $7802   ADD      V8, #02         ; Add 2 to V8
$944    $6BB0   LD       VB, #B0         ; Load 176 into VB
$946    $914D   UNKNOWN  $914D           ; Unknown 9xxx instruction
$948    $8FA3   XOR      VF, VA          ; VF ^= VA
$94A    $EE2A   UNKNOWN  $EE2A           ; Unknown Exxx instruction
$94C    $801C   UNKNOWN  801C            ; Unknown 8xxx instruction
$94E    $C6EB   RND      V6, #EB         ; V6 = random & EB
$950    $A4B1   LD       I, $4B1         ; Load 4B1 into I
$952    $8507   SUBN     V5, V0          ; V5 = V0 - V5, VF = !borrow
$954    $58D6   UNKNOWN  $58D6           ; Unknown 5xxx instruction
$956    $74E4   ADD      V4, #E4         ; Add 228 to V4
$958    $D8A9   DRW      V8, VA, #9      ; Draw 9-byte sprite at V8, VA
$95A    $DBF7   DRW      VB, VF, #7      ; Draw 7-byte sprite at VB, VF
$95C    $350A   SE       V5, #0A         ; Skip if V5 == 10
$95E    $AF3A   LD       I, $F3A         ; Load F3A into I
$960    $BC85   JP       V0, $C85        ; Jump to V0 + C85
$962    $053E   SYS      $53E            ; System call to 53E
$964    $1BF5   JP       $BF5            ; Jump to BF5
$966    $E1AB   UNKNOWN  $E1AB           ; Unknown Exxx instruction
$968    $F7F1   UNKNOWN  F7F1            ; Unknown Fxxx instruction
$96A    $941C   UNKNOWN  $941C           ; Unknown 9xxx instruction
$96C    $B7A2   JP       V0, $7A2        ; Jump to V0 + 7A2
$96E    $2899   CALL     $899            ; Call subroutine at 899
$970    $0BBA   SYS      $BBA            ; System call to BBA
$972    $9EB6   UNKNOWN  $9EB6           ; Unknown 9xxx instruction
$974    $E334   UNKNOWN  $E334           ; Unknown Exxx instruction
$976    $3C78   SE       VC, #78         ; Skip if VC == 120
$978    $668B   LD       V6, #8B         ; Load 139 into V6
$97A    $350D   SE       V5, #0D         ; Skip if V5 == 13
$97C    $19D6   JP       $9D6            ; Jump to 9D6
$97E    $E7F5   UNKNOWN  $E7F5           ; Unknown Exxx instruction
$980    $6405   LD       V4, #05         ; Load 5 into V4
$982    $0CF7   SYS      $CF7            ; System call to CF7
$984    $6981   LD       V9, #81         ; Load 129 into V9
$986    $51F2   UNKNOWN  $51F2           ; Unknown 5xxx instruction
$988    $C8F3   RND      V8, #F3         ; V8 = random & F3
$98A    $02BA   SYS      $2BA            ; System call to 2BA
$98C    $2716   CALL     $716            ; Call subroutine at 716
$98E    $BC87   JP       V0, $C87        ; Jump to V0 + C87
$990    $DF55   DRW      VF, V5, #5      ; Draw 5-byte sprite at VF, V5
$992    $A46B   LD       I, $46B         ; Load 46B into I
$994    $831B   UNKNOWN  831B            ; Unknown 8xxx instruction
$996    $B69C   JP       V0, $69C        ; Jump to V0 + 69C
$998    $0ADB   SYS      $ADB            ; System call to ADB
$99A    $FB07   LD       VB, DT          ; VB = delay timer
$99C    $29E4   CALL     $9E4            ; Call subroutine at 9E4
$99E    $621C   LD       V2, #1C         ; Load 28 into V2
$9A0    $6C5E   LD       VC, #5E         ; Load 94 into VC
$9A2    $4734   SNE      V7, #34         ; Skip if V7 != 52
$9A4    $681C   LD       V8, #1C         ; Load 28 into V8
$9A6    $D887   DRW      V8, V8, #7      ; Draw 7-byte sprite at V8, V8
$9A8    $CDC1   RND      VD, #C1         ; VD = random & C1
$9AA    $05AB   SYS      $5AB            ; System call to 5AB
$9AC    $B8B4   JP       V0, $8B4        ; Jump to V0 + 8B4
$9AE    $4A18   SNE      VA, #18         ; Skip if VA != 24
$9B0    $0771   SYS      $771            ; System call to 771
$9B2    $16A2   JP       $6A2            ; Jump to 6A2
$9B4    $58B0   SE       V8, VB          ; Skip if V8 == VB
$9B6    $3AD6   SE       VA, #D6         ; Skip if VA == 214
$9B8    $CC12   RND      VC, #12         ; VC = random & 12
$9BA    $34A6   SE       V4, #A6         ; Skip if V4 == 166
$9BC    $F010   UNKNOWN  F010            ; Unknown Fxxx instruction
$9BE    $F1DA   UNKNOWN  F1DA            ; Unknown Fxxx instruction
$9C0    $6B0D   LD       VB, #0D         ; Load 13 into VB
$9C2    $B61E   JP       V0, $61E        ; Jump to V0 + 61E
$9C4    $1A70   JP       $A70            ; Jump to A70
$9C6    $DF94   DRW      VF, V9, #4      ; Draw 4-byte sprite at VF, V9
$9C8    $0127   SYS      $127            ; System call to 127
$9CA    $3C2C   SE       VC, #2C         ; Skip if VC == 44
$9CC    $D6A4   DRW      V6, VA, #4      ; Draw 4-byte sprite at V6, VA
$9CE    $1C9E   JP       $C9E            ; Jump to C9E
$9D0    $BADD   JP       V0, $ADD        ; Jump to V0 + ADD
$9D2    $DBAB   DRW      VB, VA, #B      ; Draw 11-byte sprite at VB, VA
$9D4    $CDA9   RND      VD, #A9         ; VD = random & A9
$9D6    $C3B1   RND      V3, #B1         ; V3 = random & B1
$9D8    $B7A2   JP       V0, $7A2        ; Jump to V0 + 7A2
$9DA    $5309   UNKNOWN  $5309           ; Unknown 5xxx instruction
$9DC    $130C   JP       $30C            ; Jump to 30C
$9DE    $FA06   UNKNOWN  FA06            ; Unknown Fxxx instruction
$9E0    $BBC6   JP       V0, $BC6        ; Jump to V0 + BC6
$9E2    $2A2E   CALL     $A2E            ; Call subroutine at A2E
$9E4    $CE09   RND      VE, #09         ; VE = random & 09
$9E6    $2D89   CALL     $D89            ; Call subroutine at D89
$9E8    $9035   UNKNOWN  $9035           ; Unknown 9xxx instruction
$9EA    $5528   UNKNOWN  $5528           ; Unknown 5xxx instruction
$9EC    $00B1   SYS      $0B1            ; System call to 0B1
$9EE    $5260   SE       V2, V6          ; Skip if V2 == V6
$9F0    $F3F5   UNKNOWN  F3F5            ; Unknown Fxxx instruction
$9F2    $7E60   ADD      VE, #60         ; Add 96 to VE
$9F4    $5EDE   UNKNOWN  $5EDE           ; Unknown 5xxx instruction
$9F6    $E4E8   UNKNOWN  $E4E8           ; Unknown Exxx instruction
$9F8    $471A   SNE      V7, #1A         ; Skip if V7 != 26
$9FA    $63C7   LD       V3, #C7         ; Load 199 into V3
$9FC    $211E   CALL     $11E            ; Call subroutine at 11E
$9FE    $81B4   ADD      V1, VB          ; V1 += VB, VF = carry
$A00    $3759   SE       V7, #59         ; Skip if V7 == 89
$A02    $C146   RND      V1, #46         ; V1 = random & 46
$A04    $76F1   ADD      V6, #F1         ; Add 241 to V6
$A06    $DA15   DRW      VA, V1, #5      ; Draw 5-byte sprite at VA, V1
$A08    $C1FD   RND      V1, #FD         ; V1 = random & FD
$A0A    $A2BA   LD       I, $2BA         ; Load 2BA into I
$A0C    $8B38   UNKNOWN  8B38            ; Unknown 8xxx instruction
$A0E    $8731   OR       V7, V3          ; V7 |= V3
$A10    $EF88   UNKNOWN  $EF88           ; Unknown Exxx instruction
$A12    $FB06   UNKNOWN  FB06            ; Unknown Fxxx instruction
$A14    $75BE   ADD      V5, #BE         ; Add 190 to V5
$A16    $506E   UNKNOWN  $506E           ; Unknown 5xxx instruction
$A18    $AD2B   LD       I, $D2B         ; Load D2B into I
$A1A    $7988   ADD      V9, #88         ; Add 136 to V9
$A1C    $45A4   SNE      V5, #A4         ; Skip if V5 != 164
$A1E    $71A7   ADD      V1, #A7         ; Add 167 to V1
$A20    $1B48   JP       $B48            ; Jump to B48
$A22    $0EC6   SYS      $EC6            ; System call to EC6
$A24    $5410   SE       V4, V1          ; Skip if V4 == V1
$A26    $AA8D   LD       I, $A8D         ; Load A8D into I
$A28    $CBE3   RND      VB, #E3         ; VB = random & E3
$A2A    $A934   LD       I, $934         ; Load 934 into I
$A2C    $944F   UNKNOWN  $944F           ; Unknown 9xxx instruction
$A2E    $6388   LD       V3, #88         ; Load 136 into V3
$A30    $9329   UNKNOWN  $9329           ; Unknown 9xxx instruction
$A32    $4449   SNE      V4, #49         ; Skip if V4 != 73
$A34    $5CC5   UNKNOWN  $5CC5           ; Unknown 5xxx instruction
$A36    $24AC   CALL     $4AC            ; Call subroutine at 4AC
$A38    $8C6C   UNKNOWN  8C6C            ; Unknown 8xxx instruction
$A3A    $87EB   UNKNOWN  87EB            ; Unknown 8xxx instruction
$A3C    $E4EF   UNKNOWN  $E4EF           ; Unknown Exxx instruction
$A3E    $6D1F   LD       VD, #1F         ; Load 31 into VD
$A40    $4701   SNE      V7, #01         ; Skip if V7 != 1
$A42    $549E   UNKNOWN  $549E           ; Unknown 5xxx instruction
$A44    $E8F6   UNKNOWN  $E8F6           ; Unknown Exxx instruction
$A46    $6AFC   LD       VA, #FC         ; Load 252 into VA
$A48    $EB66   UNKNOWN  $EB66           ; Unknown Exxx instruction
$A4A    $2E36   CALL     $E36            ; Call subroutine at E36
$A4C    $BCD1   JP       V0, $CD1        ; Jump to V0 + CD1
$A4E    $F728   UNKNOWN  F728            ; Unknown Fxxx instruction
$A50    $4F31   SNE      VF, #31         ; Skip if VF != 49
$A52    $A3F6   LD       I, $3F6         ; Load 3F6 into I
$A54    $9165   UNKNOWN  $9165           ; Unknown 9xxx instruction
$A56    $07E7   SYS      $7E7            ; System call to 7E7
$A58    $29A6   CALL     $9A6            ; Call subroutine at 9A6
$A5A    $380A   SE       V8, #0A         ; Skip if V8 == 10
$A5C    $4AC2   SNE      VA, #C2         ; Skip if VA != 194
$A5E    $ABEC   LD       I, $BEC         ; Load BEC into I
$A60    $B54B   JP       V0, $54B        ; Jump to V0 + 54B
$A62    $EB48   UNKNOWN  $EB48           ; Unknown Exxx instruction
$A64    $0F01   SYS      $F01            ; System call to F01
$A66    $03F8   SYS      $3F8            ; System call to 3F8
$A68    $60B2   LD       V0, #B2         ; Load 178 into V0
$A6A    $55C1   UNKNOWN  $55C1           ; Unknown 5xxx instruction
$A6C    $2B43   CALL     $B43            ; Call subroutine at B43
$A6E    $97AF   UNKNOWN  $97AF           ; Unknown 9xxx instruction
$A70    $9295   UNKNOWN  $9295           ; Unknown 9xxx instruction
$A72    $54E1   UNKNOWN  $54E1           ; Unknown 5xxx instruction
$A74    $249F   CALL     $49F            ; Call subroutine at 49F
$A76    $F703   UNKNOWN  F703            ; Unknown Fxxx instruction
$A78    $3D3A   SE       VD, #3A         ; Skip if VD == 58
$A7A    $D6CF   DRW      V6, VC, #F      ; Draw 15-byte sprite at V6, VC
$A7C    $4E00   SNE      VE, #00         ; Skip if VE != 0
$A7E    $6696   LD       V6, #96         ; Load 150 into V6
$A80    $9114   UNKNOWN  $9114           ; Unknown 9xxx instruction
$A82    $0473   SYS      $473            ; System call to 473
$A84    $84CE   SHL      V4              ; V4 <<= 1, VF = MSB
$A86    $993F   UNKNOWN  $993F           ; Unknown 9xxx instruction
$A88    $9C87   UNKNOWN  $9C87           ; Unknown 9xxx instruction
$A8A    $7CE4   ADD      VC, #E4         ; Add 228 to VC
$A8C    $7E5D   ADD      VE, #5D         ; Add 93 to VE
$A8E    $B948   JP       V0, $948        ; Jump to V0 + 948
$A90    $3232   SE       V2, #32         ; Skip if V2 == 50
$A92    $4D46   SNE      VD, #46         ; Skip if VD != 70
$A94    $EBDA   UNKNOWN  $EBDA           ; Unknown Exxx instruction
$A96    $9FB5   UNKNOWN  $9FB5           ; Unknown 9xxx instruction
$A98    $F9DC   UNKNOWN  F9DC            ; Unknown Fxxx instruction
$A9A    $04B9   SYS      $4B9            ; System call to 4B9
$A9C    $64A7   LD       V4, #A7         ; Load 167 into V4
$A9E    $9D23   UNKNOWN  $9D23           ; Unknown 9xxx instruction
$AA0    $3A25   SE       VA, #25         ; Skip if VA == 37
$AA2    $C800   RND      V8, #00         ; V8 = random & 00
$AA4    $7A2A   ADD      VA, #2A         ; Add 42 to VA
$AA6    $1EBC   JP       $EBC            ; Jump to EBC
$AA8    $10E2   JP       $0E2            ; Jump to 0E2
$AAA    $ED2F   UNKNOWN  $ED2F           ; Unknown Exxx instruction
$AAC    $7D1B   ADD      VD, #1B         ; Add 27 to VD
$AAE    $04B9   SYS      $4B9            ; System call to 4B9
$AB0    $94C0   SNE      V4, VC          ; Skip if V4 != VC
$AB2    $6C41   LD       VC, #41         ; Load 65 into VC
$AB4    $1FA0   JP       $FA0            ; Jump to FA0
$AB6    $97AC   UNKNOWN  $97AC           ; Unknown 9xxx instruction
$AB8    $26FE   CALL     $6FE            ; Call subroutine at 6FE
$ABA    $4287   SNE      V2, #87         ; Skip if V2 != 135
$ABC    $7816   ADD      V8, #16         ; Add 22 to V8
$ABE    $00FD   SYS      $0FD            ; System call to 0FD
$AC0    $2372   CALL     $372            ; Call subroutine at 372
$AC2    $3B83   SE       VB, #83         ; Skip if VB == 131
$AC4    $C5C2   RND      V5, #C2         ; V5 = random & C2
$AC6    $7D9B   ADD      VD, #9B         ; Add 155 to VD
$AC8    $8629   UNKNOWN  8629            ; Unknown 8xxx instruction
$ACA    $F2C9   UNKNOWN  F2C9            ; Unknown Fxxx instruction
$ACC    $9820   SNE      V8, V2          ; Skip if V8 != V2
$ACE    $626A   LD       V2, #6A         ; Load 106 into V2
$AD0    $F042   UNKNOWN  F042            ; Unknown Fxxx instruction
$AD2    $3752   SE       V7, #52         ; Skip if V7 == 82
$AD4    $D3F0   DRW      V3, VF, #0      ; Draw 0-byte sprite at V3, VF
$AD6    $431E   SNE      V3, #1E         ; Skip if V3 != 30
$AD8    $930A   UNKNOWN  $930A           ; Unknown 9xxx instruction
$ADA    $D7D5   DRW      V7, VD, #5      ; Draw 5-byte sprite at V7, VD
$ADC    $E3EF   UNKNOWN  $E3EF           ; Unknown Exxx instruction
$ADE    $11F1   JP       $1F1            ; Jump to 1F1
$AE0    $C65F   RND      V6, #5F         ; V6 = random & 5F
$AE2    $F2CB   UNKNOWN  F2CB            ; Unknown Fxxx instruction
$AE4    $3C1B   SE       VC, #1B         ; Skip if VC == 27
$AE6    $0DA7   SYS      $DA7            ; System call to DA7
$AE8    $EA79   UNKNOWN  $EA79           ; Unknown Exxx instruction
$AEA    $C478   RND      V4, #78         ; V4 = random & 78
$AEC    $EE4B   UNKNOWN  $EE4B           ; Unknown Exxx instruction
$AEE    $36CF   SE       V6, #CF         ; Skip if V6 == 207
$AF0    $3F80   SE       VF, #80         ; Skip if VF == 128
$AF2    $48EB   SNE      V8, #EB         ; Skip if V8 != 235
$AF4    $6B56   LD       VB, #56         ; Load 86 into VB
$AF6    $A6B1   LD       I, $6B1         ; Load 6B1 into I
$AF8    $9B70   SNE      VB, V7          ; Skip if VB != V7
$AFA    $8B30   LD       VB, V3          ; VB = V3
$AFC    $64FC   LD       V4, #FC         ; Load 252 into V4
$AFE    $D391   DRW      V3, V9, #1      ; Draw 1-byte sprite at V3, V9
$B00    $3626   SE       V6, #26         ; Skip if V6 == 38
$B02    $17AB   JP       $7AB            ; Jump to 7AB
$B04    $0EBC   SYS      $EBC            ; System call to EBC
$B06    $6E33   LD       VE, #33         ; Load 51 into VE
$B08    $362B   SE       V6, #2B         ; Skip if V6 == 43
$B0A    $3075   SE       V0, #75         ; Skip if V0 == 117
$B0C    $4483   SNE      V4, #83         ; Skip if V4 != 131
$B0E    $8D75   SUB      VD, V7          ; VD -= V7, VF = !borrow
$B10    $DB80   DRW      VB, V8, #0      ; Draw 0-byte sprite at VB, V8
$B12    $DDE8   DRW      VD, VE, #8      ; Draw 8-byte sprite at VD, VE
$B14    $3B14   SE       VB, #14         ; Skip if VB == 20
$B16    $BA45   JP       V0, $A45        ; Jump to V0 + A45
$B18    $1939   JP       $939            ; Jump to 939
$B1A    $A6B6   LD       I, $6B6         ; Load 6B6 into I
$B1C    $20C9   CALL     $0C9            ; Call subroutine at 0C9
$B1E    $88DA   UNKNOWN  88DA            ; Unknown 8xxx instruction
$B20    $1526   JP       $526            ; Jump to 526
$B22    $266D   CALL     $66D            ; Call subroutine at 66D
$B24    $705E   ADD      V0, #5E         ; Add 94 to V0
$B26    $7267   ADD      V2, #67         ; Add 103 to V2
$B28    $7455   ADD      V4, #55         ; Add 85 to V4
$B2A    $F8F4   UNKNOWN  F8F4            ; Unknown Fxxx instruction
$B2C    $FC01   UNKNOWN  FC01            ; Unknown Fxxx instruction
$B2E    $A67E   LD       I, $67E         ; Load 67E into I
$B30    $0FB1   SYS      $FB1            ; System call to FB1
$B32    $97C0   SNE      V7, VC          ; Skip if V7 != VC
$B34    $8B05   SUB      VB, V0          ; VB -= V0, VF = !borrow
$B36    $FAF0   UNKNOWN  FAF0            ; Unknown Fxxx instruction
$B38    $9D26   UNKNOWN  $9D26           ; Unknown 9xxx instruction
$B3A    $1EB2   JP       $EB2            ; Jump to EB2
$B3C    $23E9   CALL     $3E9            ; Call subroutine at 3E9
$B3E    $D1CA   DRW      V1, VC, #A      ; Draw 10-byte sprite at V1, VC
$B40    $90BA   UNKNOWN  $90BA           ; Unknown 9xxx instruction
$B42    $466D   SNE      V6, #6D         ; Skip if V6 != 109
$B44    $2339   CALL     $339            ; Call subroutine at 339
$B46    $3948   SE       V9, #48         ; Skip if V9 == 72
$B48    $1394   JP       $394            ; Jump to 394
$B4A    $6FF7   LD       VF, #F7         ; Load 247 into VF
$B4C    $FD8F   UNKNOWN  FD8F            ; Unknown Fxxx instruction
$B4E    $88E9   UNKNOWN  88E9            ; Unknown 8xxx instruction
$B50    $73DC   ADD      V3, #DC         ; Add 220 to V3
$B52    $A426   LD       I, $426         ; Load 426 into I
$B54    $C051   RND      V0, #51         ; V0 = random & 51
$B56    $E029   UNKNOWN  $E029           ; Unknown Exxx instruction
$B58    $94ED   UNKNOWN  $94ED           ; Unknown 9xxx instruction
$B5A    $BD88   JP       V0, $D88        ; Jump to V0 + D88
$B5C    $E7E3   UNKNOWN  $E7E3           ; Unknown Exxx instruction
$B5E    $8A65   SUB      VA, V6          ; VA -= V6, VF = !borrow
$B60    $1B98   JP       $B98            ; Jump to B98
$B62    $8AFD   UNKNOWN  8AFD            ; Unknown 8xxx instruction
$B64    $9152   UNKNOWN  $9152           ; Unknown 9xxx instruction
$B66    $AD46   LD       I, $D46         ; Load D46 into I
$B68    $39AA   SE       V9, #AA         ; Skip if V9 == 170
$B6A    $8EA2   AND      VE, VA          ; VE &= VA
$B6C    $C270   RND      V2, #70         ; V2 = random & 70
$B6E    $C0FA   RND      V0, #FA         ; V0 = random & FA
$B70    $D63A   DRW      V6, V3, #A      ; Draw 10-byte sprite at V6, V3
$B72    $7C2B   ADD      VC, #2B         ; Add 43 to VC
$B74    $304B   SE       V0, #4B         ; Skip if V0 == 75
$B76    $5428   UNKNOWN  $5428           ; Unknown 5xxx instruction
$B78    $E061   UNKNOWN  $E061           ; Unknown Exxx instruction
$B7A    $D078   DRW      V0, V7, #8      ; Draw 8-byte sprite at V0, V7
$B7C    $DE76   DRW      VE, V7, #6      ; Draw 6-byte sprite at VE, V7
$B7E    $0B5D   SYS      $B5D            ; System call to B5D
$B80    $86EE   SHL      V6              ; V6 <<= 1, VF = MSB
$B82    $94D6   UNKNOWN  $94D6           ; Unknown 9xxx instruction
$B84    $F528   UNKNOWN  F528            ; Unknown Fxxx instruction
$B86    $DEB2   DRW      VE, VB, #2      ; Draw 2-byte sprite at VE, VB
$B88    $98BE   UNKNOWN  $98BE           ; Unknown 9xxx instruction
$B8A    $85BF   UNKNOWN  85BF            ; Unknown 8xxx instruction
$B8C    $7CDF   ADD      VC, #DF         ; Add 223 to VC
$B8E    $A4C1   LD       I, $4C1         ; Load 4C1 into I
$B90    $C55C   RND      V5, #5C         ; V5 = random & 5C
$B92    $1226   JP       $226            ; Jump to 226
$B94    $54D3   UNKNOWN  $54D3           ; Unknown 5xxx instruction
$B96    $02ED   SYS      $2ED            ; System call to 2ED
$B98    $5DEA   UNKNOWN  $5DEA           ; Unknown 5xxx instruction
$B9A    $98D7   UNKNOWN  $98D7           ; Unknown 9xxx instruction
$B9C    $9E28   UNKNOWN  $9E28           ; Unknown 9xxx instruction
$B9E    $6800   LD       V8, #00         ; Load 0 into V8
$BA0    $CF66   RND      VF, #66         ; VF = random & 66
$BA2    $B303   JP       V0, $303        ; Jump to V0 + 303
$BA4    $3325   SE       V3, #25         ; Skip if V3 == 37
$BA6    $9F2B   UNKNOWN  $9F2B           ; Unknown 9xxx instruction
$BA8    $A62D   LD       I, $62D         ; Load 62D into I
$BAA    $1D0D   JP       $D0D            ; Jump to D0D
$BAC    $B894   JP       V0, $894        ; Jump to V0 + 894
$BAE    $BD1E   JP       V0, $D1E        ; Jump to V0 + D1E
$BB0    $C57C   RND      V5, #7C         ; V5 = random & 7C
$BB2    $CBC9   RND      VB, #C9         ; VB = random & C9
$BB4    $C13E   RND      V1, #3E         ; V1 = random & 3E
$BB6    $DFA8   DRW      VF, VA, #8      ; Draw 8-byte sprite at VF, VA
$BB8    $E408   UNKNOWN  $E408           ; Unknown Exxx instruction
$BBA    $C52B   RND      V5, #2B         ; V5 = random & 2B
$BBC    $D403   DRW      V4, V0, #3      ; Draw 3-byte sprite at V4, V0
$BBE    $C378   RND      V3, #78         ; V3 = random & 78
$BC0    $AE89   LD       I, $E89         ; Load E89 into I
$BC2    $BAD5   JP       V0, $AD5        ; Jump to V0 + AD5
$BC4    $FEFA   UNKNOWN  FEFA            ; Unknown Fxxx instruction
$BC6    $9948   UNKNOWN  $9948           ; Unknown 9xxx instruction
$BC8    $212A   CALL     $12A            ; Call subroutine at 12A
$BCA    $FD66   UNKNOWN  FD66            ; Unknown Fxxx instruction
$BCC    $63B2   LD       V3, #B2         ; Load 178 into V3
$BCE    $FB58   UNKNOWN  FB58            ; Unknown Fxxx instruction
$BD0    $36DB   SE       V6, #DB         ; Skip if V6 == 219
$BD2    $555A   UNKNOWN  $555A           ; Unknown 5xxx instruction
$BD4    $0C65   SYS      $C65            ; System call to C65
$BD6    $5309   UNKNOWN  $5309           ; Unknown 5xxx instruction
$BD8    $0BF1   SYS      $BF1            ; System call to BF1
$BDA    $63C2   LD       V3, #C2         ; Load 194 into V3
$BDC    $81A6   SHR      V1              ; V1 >>= 1, VF = LSB
$BDE    $4EAE   SNE      VE, #AE         ; Skip if VE != 174
$BE0    $F4FC   UNKNOWN  F4FC            ; Unknown Fxxx instruction
$BE2    $8DD3   XOR      VD, VD          ; VD ^= VD
$BE4    $94D2   UNKNOWN  $94D2           ; Unknown 9xxx instruction
$BE6    $2F61   CALL     $F61            ; Call subroutine at F61
$BE8    $66EC   LD       V6, #EC         ; Load 236 into V6
$BEA    $D13A   DRW      V1, V3, #A      ; Draw 10-byte sprite at V1, V3
$BEC    $45B5   SNE      V5, #B5         ; Skip if V5 != 181
$BEE    $F045   UNKNOWN  F045            ; Unknown Fxxx instruction
$BF0    $C400   RND      V4, #00         ; V4 = random & 00
$BF2    $7F6A   ADD      VF, #6A         ; Add 106 to VF
$BF4    $75D3   ADD      V5, #D3         ; Add 211 to V5
$BF6    $1749   JP       $749            ; Jump to 749
$BF8    $0033   SYS      $033            ; System call to 033
$BFA    $7D34   ADD      VD, #34         ; Add 52 to VD
$BFC    $5685   UNKNOWN  $5685           ; Unknown 5xxx instruction
$BFE    $529A   UNKNOWN  $529A           ; Unknown 5xxx instruction
$C00    $2863   CALL     $863            ; Call subroutine at 863
$C02    $907F   UNKNOWN  $907F           ; Unknown 9xxx instruction
$C04    $1DA7   JP       $DA7            ; Jump to DA7
$C06    $2046   CALL     $046            ; Call subroutine at 046
$C08    $1879   JP       $879            ; Jump to 879
$C0A    $B1BE   JP       V0, $1BE        ; Jump to V0 + 1BE
$C0C    $7C4A   ADD      VC, #4A         ; Add 74 to VC
$C0E    $7AA8   ADD      VA, #A8         ; Add 168 to VA
$C10    $3AF5   SE       VA, #F5         ; Skip if VA == 245
$C12    $4B84   SNE      VB, #84         ; Skip if VB != 132
$C14    $53BF   UNKNOWN  $53BF           ; Unknown 5xxx instruction
$C16    $6E70   LD       VE, #70         ; Load 112 into VE
$C18    $CEC1   RND      VE, #C1         ; VE = random & C1
$C1A    $9520   SNE      V5, V2          ; Skip if V5 != V2
$C1C    $BE00   JP       V0, $E00        ; Jump to V0 + E00
$C1E    $C15D   RND      V1, #5D         ; V1 = random & 5D
$C20    $0666   SYS      $666            ; System call to 666
$C22    $1443   JP       $443            ; Jump to 443
$C24    $F971   UNKNOWN  F971            ; Unknown Fxxx instruction
$C26    $F061   UNKNOWN  F061            ; Unknown Fxxx instruction
$C28    $981A   UNKNOWN  $981A           ; Unknown 9xxx instruction
$C2A    $1AEF   JP       $AEF            ; Jump to AEF
$C2C    $B9B6   JP       V0, $9B6        ; Jump to V0 + 9B6
$C2E    $57CC   UNKNOWN  $57CC           ; Unknown 5xxx instruction
$C30    $3702   SE       V7, #02         ; Skip if V7 == 2
$C32    $02DC   SYS      $2DC            ; System call to 2DC
$C34    $A5EE   LD       I, $5EE         ; Load 5EE into I
$C36    $717A   ADD      V1, #7A         ; Add 122 to V1
$C38    $4802   SNE      V8, #02         ; Skip if V8 != 2
$C3A    $3947   SE       V9, #47         ; Skip if V9 == 71
$C3C    $7334   ADD      V3, #34         ; Add 52 to V3
$C3E    $29C5   CALL     $9C5            ; Call subroutine at 9C5
$C40    $4370   SNE      V3, #70         ; Skip if V3 != 112
$C42    $6DBD   LD       VD, #BD         ; Load 189 into VD
$C44    $59C2   UNKNOWN  $59C2           ; Unknown 5xxx instruction
$C46    $CC51   RND      VC, #51         ; VC = random & 51
$C48    $95FA   UNKNOWN  $95FA           ; Unknown 9xxx instruction
$C4A    $87C5   SUB      V7, VC          ; V7 -= VC, VF = !borrow
$C4C    $BB75   JP       V0, $B75        ; Jump to V0 + B75
$C4E    $135D   JP       $35D            ; Jump to 35D
$C50    $CA10   RND      VA, #10         ; VA = random & 10
$C52    $C749   RND      V7, #49         ; V7 = random & 49
$C54    $39DF   SE       V9, #DF         ; Skip if V9 == 223
$C56    $1667   JP       $667            ; Jump to 667
$C58    $9ECA   UNKNOWN  $9ECA           ; Unknown 9xxx instruction
$C5A    $BF6D   JP       V0, $F6D        ; Jump to V0 + F6D
$C5C    $A216   LD       I, $216         ; Load 216 into I
$C5E    $9282   UNKNOWN  $9282           ; Unknown 9xxx instruction
$C60    $A509   LD       I, $509         ; Load 509 into I
$C62    $FC45   UNKNOWN  FC45            ; Unknown Fxxx instruction
$C64    $7B9F   ADD      VB, #9F         ; Add 159 to VB
$C66    $963A   UNKNOWN  $963A           ; Unknown 9xxx instruction
$C68    $F99D   UNKNOWN  F99D            ; Unknown Fxxx instruction
$C6A    $FEA2   UNKNOWN  FEA2            ; Unknown Fxxx instruction
$C6C    $4A6D   SNE      VA, #6D         ; Skip if VA != 109
$C6E    $41F7   SNE      V1, #F7         ; Skip if V1 != 247
$C70    $3353   SE       V3, #53         ; Skip if V3 == 83
$C72    $E476   UNKNOWN  $E476           ; Unknown Exxx instruction
$C74    $F059   UNKNOWN  F059            ; Unknown Fxxx instruction
$C76    $DCCE   DRW      VC, VC, #E      ; Draw 14-byte sprite at VC, VC
$C78    $F948   UNKNOWN  F948            ; Unknown Fxxx instruction
$C7A    $A33B   LD       I, $33B         ; Load 33B into I
$C7C    $398E   SE       V9, #8E         ; Skip if V9 == 142
$C7E    $75D8   ADD      V5, #D8         ; Add 216 to V5
$C80    $023D   SYS      $23D            ; System call to 23D
$C82    $8B95   SUB      VB, V9          ; VB -= V9, VF = !borrow
$C84    $4F22   SNE      VF, #22         ; Skip if VF != 34
$C86    $822F   UNKNOWN  822F            ; Unknown 8xxx instruction
$C88    $886D   UNKNOWN  886D            ; Unknown 8xxx instruction
$C8A    $63D4   LD       V3, #D4         ; Load 212 into V3
$C8C    $FDF1   UNKNOWN  FDF1            ; Unknown Fxxx instruction
$C8E    $33C1   SE       V3, #C1         ; Skip if V3 == 193
$C90    $CF05   RND      VF, #05         ; VF = random & 05
$C92    $C684   RND      V6, #84         ; V6 = random & 84
$C94    $9BBC   UNKNOWN  $9BBC           ; Unknown 9xxx instruction
$C96    $FD2E   UNKNOWN  FD2E            ; Unknown Fxxx instruction
$C98    $8C1D   UNKNOWN  8C1D            ; Unknown 8xxx instruction
$C9A    $30CD   SE       V0, #CD         ; Skip if V0 == 205
$C9C    $2B7D   CALL     $B7D            ; Call subroutine at B7D
$C9E    $4B22   SNE      VB, #22         ; Skip if VB != 34
$CA0    $132F   JP       $32F            ; Jump to 32F
$CA2    $FAB0   UNKNOWN  FAB0            ; Unknown Fxxx instruction
$CA4    $67C4   LD       V7, #C4         ; Load 196 into V7
$CA6    $3C26   SE       VC, #26         ; Skip if VC == 38
$CA8    $6525   LD       V5, #25         ; Load 37 into V5
$CAA    $100C   JP       $00C            ; Jump to 00C
$CAC    $CFB7   RND      VF, #B7         ; VF = random & B7
$CAE    $A4A3   LD       I, $4A3         ; Load 4A3 into I
$CB0    $15C1   JP       $5C1            ; Jump to 5C1
$CB2    $4A38   SNE      VA, #38         ; Skip if VA != 56
$CB4    $F972   UNKNOWN  F972            ; Unknown Fxxx instruction
$CB6    $4347   SNE      V3, #47         ; Skip if V3 != 71
$CB8    $B85E   JP       V0, $85E        ; Jump to V0 + 85E
$CBA    $FFC6   UNKNOWN  FFC6            ; Unknown Fxxx instruction
$CBC    $9EDB   UNKNOWN  $9EDB           ; Unknown 9xxx instruction
$CBE    $F95F   UNKNOWN  F95F            ; Unknown Fxxx instruction
$CC0    $CC80   RND      VC, #80         ; VC = random & 80
$CC2    $C2E9   RND      V2, #E9         ; V2 = random & E9
$CC4    $7BF6   ADD      VB, #F6         ; Add 246 to VB
$CC6    $5F6F   UNKNOWN  $5F6F           ; Unknown 5xxx instruction
$CC8    $8002   AND      V0, V0          ; V0 &= V0
$CCA    $7374   ADD      V3, #74         ; Add 116 to V3
$CCC    $1C2F   JP       $C2F            ; Jump to C2F
$CCE    $617D   LD       V1, #7D         ; Load 125 into V1
$CD0    $9C01   UNKNOWN  $9C01           ; Unknown 9xxx instruction
$CD2    $D0DC   DRW      V0, VD, #C      ; Draw 12-byte sprite at V0, VD
$CD4    $39BF   SE       V9, #BF         ; Skip if V9 == 191
$CD6    $C8E2   RND      V8, #E2         ; V8 = random & E2
$CD8    $712B   ADD      V1, #2B         ; Add 43 to V1
$CDA    $2999   CALL     $999            ; Call subroutine at 999
$CDC    $2480   CALL     $480            ; Call subroutine at 480
$CDE    $35EF   SE       V5, #EF         ; Skip if V5 == 239
$CE0    $AF91   LD       I, $F91         ; Load F91 into I
$CE2    $4BFE   SNE      VB, #FE         ; Skip if VB != 254
$CE4    $5593   UNKNOWN  $5593           ; Unknown 5xxx instruction
$CE6    $8FCD   UNKNOWN  8FCD            ; Unknown 8xxx instruction
$CE8    $D7B8   DRW      V7, VB, #8      ; Draw 8-byte sprite at V7, VB
$CEA    $D303   DRW      V3, V0, #3      ; Draw 3-byte sprite at V3, V0
$CEC    $D286   DRW      V2, V8, #6      ; Draw 6-byte sprite at V2, V8
$CEE    $F681   UNKNOWN  F681            ; Unknown Fxxx instruction
$CF0    $D5CF   DRW      V5, VC, #F      ; Draw 15-byte sprite at V5, VC
$CF2    $B12D   JP       V0, $12D        ; Jump to V0 + 12D
$CF4    $7B6A   ADD      VB, #6A         ; Add 106 to VB
$CF6    $9BBF   UNKNOWN  $9BBF           ; Unknown 9xxx instruction
$CF8    $1AB7   JP       $AB7            ; Jump to AB7
$CFA    $C06F   RND      V0, #6F         ; V0 = random & 6F
$CFC    $1626   JP       $626            ; Jump to 626
$CFE    $95B8   UNKNOWN  $95B8           ; Unknown 9xxx instruction
$D00    $E823   UNKNOWN  $E823           ; Unknown Exxx instruction
$D02    $9F94   UNKNOWN  $9F94           ; Unknown 9xxx instruction
$D04    $CABB   RND      VA, #BB         ; VA = random & BB
$D06    $2221   CALL     $221            ; Call subroutine at 221
$D08    $13A7   JP       $3A7            ; Jump to 3A7
$D0A    $CB95   RND      VB, #95         ; VB = random & 95
$D0C    $BEFC   JP       V0, $EFC        ; Jump to V0 + EFC
$D0E    $6D8B   LD       VD, #8B         ; Load 139 into VD
$D10    $167C   JP       $67C            ; Jump to 67C
$D12    $7E37   ADD      VE, #37         ; Add 55 to VE
$D14    $2CBD   CALL     $CBD            ; Call subroutine at CBD
$D16    $5749   UNKNOWN  $5749           ; Unknown 5xxx instruction
$D18    $A332   LD       I, $332         ; Load 332 into I
$D1A    $D4C7   DRW      V4, VC, #7      ; Draw 7-byte sprite at V4, VC
$D1C    $9963   UNKNOWN  $9963           ; Unknown 9xxx instruction
$D1E    $5E3F   UNKNOWN  $5E3F           ; Unknown 5xxx instruction
$D20    $E17A   UNKNOWN  $E17A           ; Unknown Exxx instruction
$D22    $9BAB   UNKNOWN  $9BAB           ; Unknown 9xxx instruction
$D24    $8D09   UNKNOWN  8D09            ; Unknown 8xxx instruction
$D26    $7D7C   ADD      VD, #7C         ; Add 124 to VD
$D28    $67FA   LD       V7, #FA         ; Load 250 into V7
$D2A    $CD49   RND      VD, #49         ; VD = random & 49
$D2C    $9B44   UNKNOWN  $9B44           ; Unknown 9xxx instruction
$D2E    $F157   UNKNOWN  F157            ; Unknown Fxxx instruction
$D30    $004C   SYS      $04C            ; System call to 04C
$D32    $B5F3   JP       V0, $5F3        ; Jump to V0 + 5F3
$D34    $E5B9   UNKNOWN  $E5B9           ; Unknown Exxx instruction
$D36    $C9A0   RND      V9, #A0         ; V9 = random & A0
$D38    $2D8B   CALL     $D8B            ; Call subroutine at D8B
$D3A    $E5CC   UNKNOWN  $E5CC           ; Unknown Exxx instruction
$D3C    $75E6   ADD      V5, #E6         ; Add 230 to V5
$D3E    $9AF7   UNKNOWN  $9AF7           ; Unknown 9xxx instruction
$D40    $1932   JP       $932            ; Jump to 932
$D42    $5C13   UNKNOWN  $5C13           ; Unknown 5xxx instruction
$D44    $9265   UNKNOWN  $9265           ; Unknown 9xxx instruction
$D46    $ACAB   LD       I, $CAB         ; Load CAB into I
$D48    $EA36   UNKNOWN  $EA36           ; Unknown Exxx instruction
$D4A    $81EE   SHL      V1              ; V1 <<= 1, VF = MSB
$D4C    $C216   RND      V2, #16         ; V2 = random & 16
$D4E    $C1BF   RND      V1, #BF         ; V1 = random & BF
$D50    $5571   UNKNOWN  $5571           ; Unknown 5xxx instruction
$D52    $F0F2   UNKNOWN  F0F2            ; Unknown Fxxx instruction
$D54    $3EDE   SE       VE, #DE         ; Skip if VE == 222
$D56    $0C28   SYS      $C28            ; System call to C28
$D58    $7CC4   ADD      VC, #C4         ; Add 196 to VC
$D5A    $C7F8   RND      V7, #F8         ; V7 = random & F8
$D5C    $765A   ADD      V6, #5A         ; Add 90 to V6
$D5E    $66FA   LD       V6, #FA         ; Load 250 into V6
$D60    $51E7   UNKNOWN  $51E7           ; Unknown 5xxx instruction
$D62    $77D6   ADD      V7, #D6         ; Add 214 to V7
$D64    $F487   UNKNOWN  F487            ; Unknown Fxxx instruction
$D66    $9A3A   UNKNOWN  $9A3A           ; Unknown 9xxx instruction
$D68    $1766   JP       $766            ; Jump to 766
$D6A    $97AE   UNKNOWN  $97AE           ; Unknown 9xxx instruction
$D6C    $977A   UNKNOWN  $977A           ; Unknown 9xxx instruction
$D6E    $A87E   LD       I, $87E         ; Load 87E into I
$D70    $9543   UNKNOWN  $9543           ; Unknown 9xxx instruction
$D72    $E594   UNKNOWN  $E594           ; Unknown Exxx instruction
$D74    $C770   RND      V7, #70         ; V7 = random & 70
$D76    $3252   SE       V2, #52         ; Skip if V2 == 82
$D78    $D06E   DRW      V0, V6, #E      ; Draw 14-byte sprite at V0, V6
$D7A    $2180   CALL     $180            ; Call subroutine at 180
$D7C    $7EA2   ADD      VE, #A2         ; Add 162 to VE
$D7E    $51DD   UNKNOWN  $51DD           ; Unknown 5xxx instruction
$D80    $0AC1   SYS      $AC1            ; System call to AC1
$D82    $37BF   SE       V7, #BF         ; Skip if V7 == 191
$D84    $2D15   CALL     $D15            ; Call subroutine at D15
$D86    $8166   SHR      V1              ; V1 >>= 1, VF = LSB
$D88    $0AF9   SYS      $AF9            ; System call to AF9
$D8A    $A1EF   LD       I, $1EF         ; Load 1EF into I
$D8C    $65A7   LD       V5, #A7         ; Load 167 into V5
$D8E    $D843   DRW      V8, V4, #3      ; Draw 3-byte sprite at V8, V4
$D90    $702E   ADD      V0, #2E         ; Add 46 to V0
$D92    $4A0C   SNE      VA, #0C         ; Skip if VA != 12
$D94    $BC45   JP       V0, $C45        ; Jump to V0 + C45
$D96    $B2B4   JP       V0, $2B4        ; Jump to V0 + 2B4
$D98    $579A   UNKNOWN  $579A           ; Unknown 5xxx instruction
$D9A    $D6EF   DRW      V6, VE, #F      ; Draw 15-byte sprite at V6, VE
$D9C    $F8C7   UNKNOWN  F8C7            ; Unknown Fxxx instruction
$D9E    $6287   LD       V2, #87         ; Load 135 into V2
$DA0    $E904   UNKNOWN  $E904           ; Unknown Exxx instruction
$DA2    $36D4   SE       V6, #D4         ; Skip if V6 == 212
$DA4    $7C83   ADD      VC, #83         ; Add 131 to VC
$DA6    $853F   UNKNOWN  853F            ; Unknown 8xxx instruction
$DA8    $3AFE   SE       VA, #FE         ; Skip if VA == 254
$DAA    $F378   UNKNOWN  F378            ; Unknown Fxxx instruction
$DAC    $2A82   CALL     $A82            ; Call subroutine at A82
$DAE    $5B09   UNKNOWN  $5B09           ; Unknown 5xxx instruction
$DB0    $1CBF   JP       $CBF            ; Jump to CBF
$DB2    $9D7C   UNKNOWN  $9D7C           ; Unknown 9xxx instruction
$DB4    $9F4C   UNKNOWN  $9F4C           ; Unknown 9xxx instruction
$DB6    $DD71   DRW      VD, V7, #1      ; Draw 1-byte sprite at VD, V7
$DB8    $BE07   JP       V0, $E07        ; Jump to V0 + E07
$DBA    $1532   JP       $532            ; Jump to 532
$DBC    $06A7   SYS      $6A7            ; System call to 6A7
$DBE    $56DB   UNKNOWN  $56DB           ; Unknown 5xxx instruction
$DC0    $8879   UNKNOWN  8879            ; Unknown 8xxx instruction
$DC2    $0D9C   SYS      $D9C            ; System call to D9C
$DC4    $ADC9   LD       I, $DC9         ; Load DC9 into I
$DC6    $1987   JP       $987            ; Jump to 987
$DC8    $298D   CALL     $98D            ; Call subroutine at 98D
$DCA    $81A2   AND      V1, VA          ; V1 &= VA
$DCC    $B2A3   JP       V0, $2A3        ; Jump to V0 + 2A3
$DCE    $9CFE   UNKNOWN  $9CFE           ; Unknown 9xxx instruction
$DD0    $5E49   UNKNOWN  $5E49           ; Unknown 5xxx instruction
$DD2    $8462   AND      V4, V6          ; V4 &= V6
$DD4    $DCDE   DRW      VC, VD, #E      ; Draw 14-byte sprite at VC, VD
$DD6    $636F   LD       V3, #6F         ; Load 111 into V3
$DD8    $BF9A   JP       V0, $F9A        ; Jump to V0 + F9A
$DDA    $21C8   CALL     $1C8            ; Call subroutine at 1C8
$DDC    $1063   JP       $063            ; Jump to 063
$DDE    $731F   ADD      V3, #1F         ; Add 31 to V3
$DE0    $DB7F   DRW      VB, V7, #F      ; Draw 15-byte sprite at VB, V7
$DE2    $5707   UNKNOWN  $5707           ; Unknown 5xxx instruction
$DE4    $CEC8   RND      VE, #C8         ; VE = random & C8
$DE6    $2FE2   CALL     $FE2            ; Call subroutine at FE2
$DE8    $760F   ADD      V6, #0F         ; Add 15 to V6
$DEA    $AE18   LD       I, $E18         ; Load E18 into I
$DEC    $67BC   LD       V7, #BC         ; Load 188 into V7
$DEE    $B0A8   JP       V0, $0A8        ; Jump to V0 + 0A8
$DF0    $651B   LD       V5, #1B         ; Load 27 into V5
$DF2    $2F70   CALL     $F70            ; Call subroutine at F70
$DF4    $7A8D   ADD      VA, #8D         ; Add 141 to VA
$DF6    $75A3   ADD      V5, #A3         ; Add 163 to V5
$DF8    $9B60   SNE      VB, V6          ; Skip if VB != V6
$DFA    $11DF   JP       $1DF            ; Jump to 1DF
$DFC    $19B1   JP       $9B1            ; Jump to 9B1
$DFE    $5368   UNKNOWN  $5368           ; Unknown 5xxx instruction
$E00    $C4B8   RND      V4, #B8         ; V4 = random & B8
$E02    $8949   UNKNOWN  8949            ; Unknown 8xxx instruction
$E04    $EE1C   UNKNOWN  $EE1C           ; Unknown Exxx instruction
$E06    $2268   CALL     $268            ; Call subroutine at 268
$E08    $132F   JP       $32F            ; Jump to 32F
$E0A    $82A1   OR       V2, VA          ; V2 |= VA
$E0C    $1E96   JP       $E96            ; Jump to E96
$E0E    $D3D9   DRW      V3, VD, #9      ; Draw 9-byte sprite at V3, VD
$E10    $824C   UNKNOWN  824C            ; Unknown 8xxx instruction
$E12    $2238   CALL     $238            ; Call subroutine at 238
$E14    $4E6D   SNE      VE, #6D         ; Skip if VE != 109
$E16    $1D46   JP       $D46            ; Jump to D46
$E18    $6518   LD       V5, #18         ; Load 24 into V5
$E1A    $4908   SNE      V9, #08         ; Skip if V9 != 8
$E1C    $CD1B   RND      VD, #1B         ; VD = random & 1B
$E1E    $722F   ADD      V2, #2F         ; Add 47 to V2
$E20    $126F   JP       $26F            ; Jump to 26F
$E22    $72AC   ADD      V2, #AC         ; Add 172 to V2
$E24    $9E1F   UNKNOWN  $9E1F           ; Unknown 9xxx instruction
$E26    $733F   ADD      V3, #3F         ; Add 63 to V3
$E28    $A742   LD       I, $742         ; Load 742 into I
$E2A    $85E4   ADD      V5, VE          ; V5 += VE, VF = carry
$E2C    $3BF2   SE       VB, #F2         ; Skip if VB == 242
$E2E    $BF77   JP       V0, $F77        ; Jump to V0 + F77
$E30    $6711   LD       V7, #11         ; Load 17 into V7
$E32    $54A2   UNKNOWN  $54A2           ; Unknown 5xxx instruction
$E34    $B5A8   JP       V0, $5A8        ; Jump to V0 + 5A8
$E36    $01A5   SYS      $1A5            ; System call to 1A5
$E38    $DC7A   DRW      VC, V7, #A      ; Draw 10-byte sprite at VC, V7
$E3A    $9911   UNKNOWN  $9911           ; Unknown 9xxx instruction
$E3C    $49AE   SNE      V9, #AE         ; Skip if V9 != 174
$E3E    $8C1D   UNKNOWN  8C1D            ; Unknown 8xxx instruction
$E40    $C44F   RND      V4, #4F         ; V4 = random & 4F
$E42    $D895   DRW      V8, V9, #5      ; Draw 5-byte sprite at V8, V9
$E44    $11FF   JP       $1FF            ; Jump to 1FF
$E46    $D24A   DRW      V2, V4, #A      ; Draw 10-byte sprite at V2, V4
$E48    $BE43   JP       V0, $E43        ; Jump to V0 + E43
$E4A    $1AC8   JP       $AC8            ; Jump to AC8
$E4C    $B553   JP       V0, $553        ; Jump to V0 + 553
$E4E    $1D7C   JP       $D7C            ; Jump to D7C
$E50    $DE43   DRW      VE, V4, #3      ; Draw 3-byte sprite at VE, V4
$E52    $2DE0   CALL     $DE0            ; Call subroutine at DE0
$E54    $5E25   UNKNOWN  $5E25           ; Unknown 5xxx instruction
$E56    $222E   CALL     $22E            ; Call subroutine at 22E
$E58    $7002   ADD      V0, #02         ; Add 2 to V0
$E5A    $8CD8   UNKNOWN  8CD8            ; Unknown 8xxx instruction
$E5C    $FE3B   UNKNOWN  FE3B            ; Unknown Fxxx instruction
$E5E    $DBDB   DRW      VB, VD, #B      ; Draw 11-byte sprite at VB, VD
$E60    $0938   SYS      $938            ; System call to 938
$E62    $07CC   SYS      $7CC            ; System call to 7CC
$E64    $A7AC   LD       I, $7AC         ; Load 7AC into I
$E66    $9F5D   UNKNOWN  $9F5D           ; Unknown 9xxx instruction
$E68    $2B86   CALL     $B86            ; Call subroutine at B86
$E6A    $CB09   RND      VB, #09         ; VB = random & 09
$E6C    $9057   UNKNOWN  $9057           ; Unknown 9xxx instruction
$E6E    $A764   LD       I, $764         ; Load 764 into I
$E70    $F666   UNKNOWN  F666            ; Unknown Fxxx instruction
$E72    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$E74    $5C75   UNKNOWN  $5C75           ; Unknown 5xxx instruction
$E76    $AA7B   LD       I, $A7B         ; Load A7B into I
$E78    $AC74   LD       I, $C74         ; Load C74 into I
$E7A    $EA3A   UNKNOWN  $EA3A           ; Unknown Exxx instruction
$E7C    $00CF   SYS      $0CF            ; System call to 0CF
$E7E    $FE0F   UNKNOWN  FE0F            ; Unknown Fxxx instruction
$E80    $063F   SYS      $63F            ; System call to 63F
$E82    $A27F   LD       I, $27F         ; Load 27F into I
$E84    $D85A   DRW      V8, V5, #A      ; Draw 10-byte sprite at V8, V5
$E86    $E0F5   UNKNOWN  $E0F5           ; Unknown Exxx instruction
$E88    $29B7   CALL     $9B7            ; Call subroutine at 9B7
$E8A    $BC3D   JP       V0, $C3D        ; Jump to V0 + C3D
$E8C    $909B   UNKNOWN  $909B           ; Unknown 9xxx instruction
$E8E    $FC01   UNKNOWN  FC01            ; Unknown Fxxx instruction
$E90    $0C1A   SYS      $C1A            ; System call to C1A
$E92    $1D77   JP       $D77            ; Jump to D77
$E94    $9EA3   UNKNOWN  $9EA3           ; Unknown 9xxx instruction
$E96    $FC9B   UNKNOWN  FC9B            ; Unknown Fxxx instruction
$E98    $9645   UNKNOWN  $9645           ; Unknown 9xxx instruction
$E9A    $121F   JP       $21F            ; Jump to 21F
$E9C    $8C2C   UNKNOWN  8C2C            ; Unknown 8xxx instruction
$E9E    $CA84   RND      VA, #84         ; VA = random & 84
$EA0    $B7DD   JP       V0, $7DD        ; Jump to V0 + 7DD
$EA2    $FA5B   UNKNOWN  FA5B            ; Unknown Fxxx instruction
$EA4    $1232   JP       $232            ; Jump to 232
$EA6    $EBEF   UNKNOWN  $EBEF           ; Unknown Exxx instruction
$EA8    $6401   LD       V4, #01         ; Load 1 into V4
$EAA    $E186   UNKNOWN  $E186           ; Unknown Exxx instruction
$EAC    $810A   UNKNOWN  810A            ; Unknown 8xxx instruction
$EAE    $8101   OR       V1, V0          ; V1 |= V0
$EB0    $5F52   UNKNOWN  $5F52           ; Unknown 5xxx instruction
$EB2    $F1F7   UNKNOWN  F1F7            ; Unknown Fxxx instruction
$EB4    $6A55   LD       VA, #55         ; Load 85 into VA
$EB6    $DE95   DRW      VE, V9, #5      ; Draw 5-byte sprite at VE, V9
$EB8    $E8B5   UNKNOWN  $E8B5           ; Unknown Exxx instruction
$EBA    $080E   SYS      $80E            ; System call to 80E
$EBC    $BBE6   JP       V0, $BE6        ; Jump to V0 + BE6
$EBE    $7515   ADD      V5, #15         ; Add 21 to V5
$EC0    $2CFD   CALL     $CFD            ; Call subroutine at CFD
$EC2    $5186   UNKNOWN  $5186           ; Unknown 5xxx instruction
$EC4    $6A8F   LD       VA, #8F         ; Load 143 into VA
$EC6    $6D89   LD       VD, #89         ; Load 137 into VD
$EC8    $2078   CALL     $078            ; Call subroutine at 078
$ECA    $C043   RND      V0, #43         ; V0 = random & 43
$ECC    $19BF   JP       $9BF            ; Jump to 9BF
$ECE    $EB62   UNKNOWN  $EB62           ; Unknown Exxx instruction
$ED0    $1FB1   JP       $FB1            ; Jump to FB1
$ED2    $F67C   UNKNOWN  F67C            ; Unknown Fxxx instruction
$ED4    $43C3   SNE      V3, #C3         ; Skip if V3 != 195
$ED6    $17FB   JP       $7FB            ; Jump to 7FB
$ED8    $8384   ADD      V3, V8          ; V3 += V8, VF = carry
$EDA    $DE78   DRW      VE, V7, #8      ; Draw 8-byte sprite at VE, V7
$EDC    $841C   UNKNOWN  841C            ; Unknown 8xxx instruction
$EDE    $E04D   UNKNOWN  $E04D           ; Unknown Exxx instruction
$EE0    $EF1C   UNKNOWN  $EF1C           ; Unknown Exxx instruction
$EE2    $600A   LD       V0, #0A         ; Load 10 into V0
$EE4    $4DFA   SNE      VD, #FA         ; Skip if VD != 250
$EE6    $8C52   AND      VC, V5          ; VC &= V5
$EE8    $39B0   SE       V9, #B0         ; Skip if V9 == 176
$EEA    $4436   SNE      V4, #36         ; Skip if V4 != 54
$EEC    $1FF1   JP       $FF1            ; Jump to FF1
$EEE    $ED3D   UNKNOWN  $ED3D           ; Unknown Exxx instruction
$EF0    $7B72   ADD      VB, #72         ; Add 114 to VB
$EF2    $779F   ADD      V7, #9F         ; Add 159 to V7
$EF4    $0EC3   SYS      $EC3            ; System call to EC3
$EF6    $46FE   SNE      V6, #FE         ; Skip if V6 != 254
$EF8    $F13E   UNKNOWN  F13E            ; Unknown Fxxx instruction
$EFA    $D35D   DRW      V3, V5, #D      ; Draw 13-byte sprite at V3, V5
$EFC    $8C13   XOR      VC, V1          ; VC ^= V1
$EFE    $ECF7   UNKNOWN  $ECF7           ; Unknown Exxx instruction
$F00    $0567   SYS      $567            ; System call to 567
$F02    $FCD6   UNKNOWN  FCD6            ; Unknown Fxxx instruction
$F04    $B171   JP       V0, $171        ; Jump to V0 + 171
$F06    $B43E   JP       V0, $43E        ; Jump to V0 + 43E
$F08    $94CD   UNKNOWN  $94CD           ; Unknown 9xxx instruction
$F0A    $B97D   JP       V0, $97D        ; Jump to V0 + 97D
$F0C    $119C   JP       $19C            ; Jump to 19C
$F0E    $9873   UNKNOWN  $9873           ; Unknown 9xxx instruction
$F10    $10A2   JP       $0A2            ; Jump to 0A2
$F12    $B3A8   JP       V0, $3A8        ; Jump to V0 + 3A8
$F14    $DAB2   DRW      VA, VB, #2      ; Draw 2-byte sprite at VA, VB
$F16    $FD80   UNKNOWN  FD80            ; Unknown Fxxx instruction
$F18    $004E   SYS      $04E            ; System call to 04E
$F1A    $FA5E   UNKNOWN  FA5E            ; Unknown Fxxx instruction
$F1C    $494F   SNE      V9, #4F         ; Skip if V9 != 79
$F1E    $DC15   DRW      VC, V1, #5      ; Draw 5-byte sprite at VC, V1
$F20    $0E66   SYS      $E66            ; System call to E66
$F22    $5275   UNKNOWN  $5275           ; Unknown 5xxx instruction
$F24    $E270   UNKNOWN  $E270           ; Unknown Exxx instruction
$F26    $56C8   UNKNOWN  $56C8           ; Unknown 5xxx instruction
$F28    $A111   LD       I, $111         ; Load 111 into I
$F2A    $263E   CALL     $63E            ; Call subroutine at 63E
$F2C    $A6DF   LD       I, $6DF         ; Load 6DF into I
$F2E    $AF48   LD       I, $F48         ; Load F48 into I
$F30    $314A   SE       V1, #4A         ; Skip if V1 == 74
$F32    $F347   UNKNOWN  F347            ; Unknown Fxxx instruction
$F34    $7BF8   ADD      VB, #F8         ; Add 248 to VB
$F36    $E916   UNKNOWN  $E916           ; Unknown Exxx instruction
$F38    $F7EE   UNKNOWN  F7EE            ; Unknown Fxxx instruction
$F3A    $852A   UNKNOWN  852A            ; Unknown 8xxx instruction
$F3C    $B434   JP       V0, $434        ; Jump to V0 + 434
$F3E    $A5AB   LD       I, $5AB         ; Load 5AB into I
$F40    $11D7   JP       $1D7            ; Jump to 1D7
$F42    $F74D   UNKNOWN  F74D            ; Unknown Fxxx instruction
$F44    $9A08   UNKNOWN  $9A08           ; Unknown 9xxx instruction
$F46    $EC95   UNKNOWN  $EC95           ; Unknown Exxx instruction
$F48    $6602   LD       V6, #02         ; Load 2 into V6
$F4A    $09E7   SYS      $9E7            ; System call to 9E7
$F4C    $E4B5   UNKNOWN  $E4B5           ; Unknown Exxx instruction
$F4E    $8344   ADD      V3, V4          ; V3 += V4, VF = carry
$F50    $D15B   DRW      V1, V5, #B      ; Draw 11-byte sprite at V1, V5
$F52    $19D0   JP       $9D0            ; Jump to 9D0
$F54    $574D   UNKNOWN  $574D           ; Unknown 5xxx instruction
$F56    $25D5   CALL     $5D5            ; Call subroutine at 5D5
$F58    $A581   LD       I, $581         ; Load 581 into I
$F5A    $CF1E   RND      VF, #1E         ; VF = random & 1E
$F5C    $EDEB   UNKNOWN  $EDEB           ; Unknown Exxx instruction
$F5E    $BEFC   JP       V0, $EFC        ; Jump to V0 + EFC
$F60    $70E5   ADD      V0, #E5         ; Add 229 to V0
$F62    $5ECC   UNKNOWN  $5ECC           ; Unknown 5xxx instruction
$F64    $92E5   UNKNOWN  $92E5           ; Unknown 9xxx instruction
$F66    $9934   UNKNOWN  $9934           ; Unknown 9xxx instruction
$F68    $5AD2   UNKNOWN  $5AD2           ; Unknown 5xxx instruction
$F6A    $1CFA   JP       $CFA            ; Jump to CFA
$F6C    $F28B   UNKNOWN  F28B            ; Unknown Fxxx instruction
$F6E    $8CE8   UNKNOWN  8CE8            ; Unknown 8xxx instruction
$F70    $BC16   JP       V0, $C16        ; Jump to V0 + C16
$F72    $146E   JP       $46E            ; Jump to 46E
$F74    $5246   UNKNOWN  $5246           ; Unknown 5xxx instruction
$F76    $5182   UNKNOWN  $5182           ; Unknown 5xxx instruction
$F78    $A589   LD       I, $589         ; Load 589 into I
$F7A    $4C33   SNE      VC, #33         ; Skip if VC != 51
$F7C    $5F86   UNKNOWN  $5F86           ; Unknown 5xxx instruction
$F7E    $7F31   ADD      VF, #31         ; Add 49 to VF
$F80    $D3A5   DRW      V3, VA, #5      ; Draw 5-byte sprite at V3, VA
$F82    $98B4   UNKNOWN  $98B4           ; Unknown 9xxx instruction
$F84    $21AC   CALL     $1AC            ; Call subroutine at 1AC
$F86    $2C2F   CALL     $C2F            ; Call subroutine at C2F
$F88    $B31D   JP       V0, $31D        ; Jump to V0 + 31D
$F8A    $260D   CALL     $60D            ; Call subroutine at 60D
$F8C    $8DA1   OR       VD, VA          ; VD |= VA
$F8E    $29A8   CALL     $9A8            ; Call subroutine at 9A8
$F90    $302F   SE       V0, #2F         ; Skip if V0 == 47
$F92    $501E   UNKNOWN  $501E           ; Unknown 5xxx instruction
$F94    $8CE1   OR       VC, VE          ; VC |= VE
$F96    $116F   JP       $16F            ; Jump to 16F
$F98    $61DB   LD       V1, #DB         ; Load 219 into V1
$F9A    $D49E   DRW      V4, V9, #E      ; Draw 14-byte sprite at V4, V9
$F9C    $6754   LD       V7, #54         ; Load 84 into V7
$F9E    $A80E   LD       I, $80E         ; Load 80E into I
$FA0    $E663   UNKNOWN  $E663           ; Unknown Exxx instruction
$FA2    $0A12   SYS      $A12            ; System call to A12
$FA4    $C19C   RND      V1, #9C         ; V1 = random & 9C
$FA6    $CF22   RND      VF, #22         ; VF = random & 22
$FA8    $D576   DRW      V5, V7, #6      ; Draw 6-byte sprite at V5, V7
$FAA    $8081   OR       V0, V8          ; V0 |= V8
$FAC    $7F1F   ADD      VF, #1F         ; Add 31 to VF
$FAE    $17C0   JP       $7C0            ; Jump to 7C0
$FB0    $57F2   UNKNOWN  $57F2           ; Unknown 5xxx instruction
$FB2    $977D   UNKNOWN  $977D           ; Unknown 9xxx instruction
$FB4    $DD25   DRW      VD, V2, #5      ; Draw 5-byte sprite at VD, V2
$FB6    $849B   UNKNOWN  849B            ; Unknown 8xxx instruction
$FB8    $BA43   JP       V0, $A43        ; Jump to V0 + A43
$FBA    $B578   JP       V0, $578        ; Jump to V0 + 578
$FBC    $083C   SYS      $83C            ; System call to 83C
$FBE    $FD83   UNKNOWN  FD83            ; Unknown Fxxx instruction
$FC0    $622E   LD       V2, #2E         ; Load 46 into V2
$FC2    $4B42   SNE      VB, #42         ; Skip if VB != 66
$FC4    $D7CD   DRW      V7, VC, #D      ; Draw 13-byte sprite at V7, VC
$FC6    $9A21   UNKNOWN  $9A21           ; Unknown 9xxx instruction
$FC8    $EEB9   UNKNOWN  $EEB9           ; Unknown Exxx instruction
$FCA    $2CC9   CALL     $CC9            ; Call subroutine at CC9
$FCC    $FCD2   UNKNOWN  FCD2            ; Unknown Fxxx instruction
$FCE    $E1A6   UNKNOWN  $E1A6           ; Unknown Exxx instruction
$FD0    $7D65   ADD      VD, #65         ; Add 101 to VD
$FD2    $4CE7   SNE      VC, #E7         ; Skip if VC != 231
$FD4    $4A37   SNE      VA, #37         ; Skip if VA != 55
$FD6    $1116   JP       $116            ; Jump to 116
$FD8    $3F30   SE       VF, #30         ; Skip if VF == 48
$FDA    $ADB0   LD       I, $DB0         ; Load DB0 into I
$FDC    $854E   SHL      V5              ; V5 <<= 1, VF = MSB
$FDE    $0781   SYS      $781            ; System call to 781
$FE0    $7ECA   ADD      VE, #CA         ; Add 202 to VE
$FE2    $228F   CALL     $28F            ; Call subroutine at 28F
$FE4    $9EA1   UNKNOWN  $9EA1           ; Unknown 9xxx instruction
$FE6    $CC1D   RND      VC, #1D         ; VC = random & 1D
$FE8    $29F3   CALL     $9F3            ; Call subroutine at 9F3
$FEA    $76C8   ADD      V6, #C8         ; Add 200 to V6
$FEC    $1C6F   JP       $C6F            ; Jump to C6F
$FEE    $EDEC   UNKNOWN  $EDEC           ; Unknown Exxx instruction
$FF0    $A287   LD       I, $287         ; Load 287 into I
$FF2    $964C   UNKNOWN  $964C           ; Unknown 9xxx instruction
$FF4    $5F02   UNKNOWN  $5F02           ; Unknown 5xxx instruction
$FF6    $6ABB   LD       VA, #BB         ; Load 187 into VA
$FF8    $8313   XOR      V3, V1          ; V3 ^= V1
$FFA    $DD6D   DRW      VD, V6, #D      ; Draw 13-byte sprite at VD, V6
$FFC    $42ED   SNE      V2, #ED         ; Skip if V2 != 237
$FFE    $4C28   SNE      VC, #28         ; Skip if VC != 40

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 491 (27.4%)
  JP      : 243 (13.6%)
  LD      : 213 (11.9%)
  SNE     : 124 ( 6.9%)
  ADD     : 122 ( 6.8%)
  SYS     : 122 ( 6.8%)
  DRW     : 114 ( 6.4%)
  CALL    : 103 ( 5.7%)
  SE      : 102 ( 5.7%)
  RND     : 101 ( 5.6%)
  OR      :  12 ( 0.7%)
  AND     :  11 ( 0.6%)
  SHR     :   9 ( 0.5%)
  SUB     :   8 ( 0.4%)
  XOR     :   6 ( 0.3%)
  SHL     :   6 ( 0.3%)
  SUBN    :   5 ( 0.3%)

Memory Operations: 335 (18.7%)
Arithmetic Operations: 164 (9.2%)
