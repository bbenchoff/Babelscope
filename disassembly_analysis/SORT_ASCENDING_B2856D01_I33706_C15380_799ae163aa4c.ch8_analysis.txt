
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B2856D01_I33706_C15380_799ae163aa4c.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 2856
Instance: 33706
Direction: ascending
Final Array: [157, 157, 157, 157, 157, 157, 157, 243]
Operations: R:0 W:7 C:210 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 110
Sort Array References:
  $202: LD I, $2C4 ; Load 2C4 into I
  $204: LD I, $0AD ; Load 0AD into I
  $206: LD I, $2A0 ; Load 2A0 into I
  $242: LD I, $DCB ; Load DCB into I
  $27E: LD I, $463 ; Load 463 into I
  $338: LD I, $2BD ; Load 2BD into I
  $348: LD I, $22B ; Load 22B into I
  $34E: LD I, $C5B ; Load C5B into I
  $352: LD I, $1AD ; Load 1AD into I
  $354: LD I, $850 ; Load 850 into I
  $356: LD I, $89A ; Load 89A into I
  $35C: LD I, $1D9 ; Load 1D9 into I
  $368: LD I, $E1C ; Load E1C into I
  $3EA: LD I, $8C3 ; Load 8C3 into I
  $3F2: LD I, $4CC ; Load 4CC into I
  $434: LD I, $248 ; Load 248 into I
  $45A: LD I, $65C ; Load 65C into I
  $4C8: LD I, $377 ; Load 377 into I
  $4E8: LD I, $EE5 ; Load EE5 into I
  $550: LD I, $E1E ; Load E1E into I
  $572: LD I, $F17 ; Load F17 into I
  $588: LD I, $445 ; Load 445 into I
  $596: LD I, $025 ; Load 025 into I
  $5EA: LD I, $D27 ; Load D27 into I
  $5FE: LD I, $CDA ; Load CDA into I
  $60E: LD I, $0E8 ; Load 0E8 into I
  $616: LD I, $FFB ; Load FFB into I
  $624: LD I, $A10 ; Load A10 into I
  $64C: LD I, $AC9 ; Load AC9 into I
  $692: LD I, $2B9 ; Load 2B9 into I
  $69E: LD I, $A1B ; Load A1B into I
  $6AE: LD I, $332 ; Load 332 into I
  $6BC: LD I, $A97 ; Load A97 into I
  $6D0: LD I, $71D ; Load 71D into I
  $6F6: LD I, $D01 ; Load D01 into I
  $708: LD I, $610 ; Load 610 into I
  $70E: LD I, $375 ; Load 375 into I
  $710: LD [I], V7 ; Store V0-V7 at I
  $72C: LD I, $B92 ; Load B92 into I
  $74A: LD I, $FF8 ; Load FF8 into I
  $792: LD I, $BC0 ; Load BC0 into I
  $794: LD I, $614 ; Load 614 into I
  $7A2: LD I, $2A6 ; Load 2A6 into I
  $7A8: LD I, $C29 ; Load C29 into I
  $7C4: LD I, $6DC ; Load 6DC into I
  $840: LD I, $F68 ; Load F68 into I
  $850: LD I, $EAD ; Load EAD into I
  $866: LD I, $BF5 ; Load BF5 into I
  $878: LD I, $B69 ; Load B69 into I
  $8C2: LD I, $3B8 ; Load 3B8 into I
  $8D0: LD I, $244 ; Load 244 into I
  $8D4: LD I, $AFC ; Load AFC into I
  $8DA: LD I, $B29 ; Load B29 into I
  $8E4: LD I, $B1B ; Load B1B into I
  $8EE: LD I, $6AA ; Load 6AA into I
  $8F4: LD I, $DFB ; Load DFB into I
  $8F6: LD I, $BE0 ; Load BE0 into I
  $916: LD I, $3F5 ; Load 3F5 into I
  $92C: LD I, $BFA ; Load BFA into I
  $946: LD I, $25F ; Load 25F into I
  $952: LD I, $855 ; Load 855 into I
  $980: LD I, $342 ; Load 342 into I
  $98A: LD I, $981 ; Load 981 into I
  $9AC: LD I, $097 ; Load 097 into I
  $A18: LD I, $173 ; Load 173 into I
  $A1E: LD I, $EE6 ; Load EE6 into I
  $A4C: LD I, $9A2 ; Load 9A2 into I
  $A4E: LD I, $F1F ; Load F1F into I
  $A68: LD I, $409 ; Load 409 into I
  $AAC: LD I, $35D ; Load 35D into I
  $ACE: LD I, $391 ; Load 391 into I
  $AD2: LD I, $98C ; Load 98C into I
  $B5A: LD I, $A10 ; Load A10 into I
  $B70: LD I, $950 ; Load 950 into I
  $BA6: LD V1, [I] ; Load V0-V1 from I
  $BAC: LD I, $E87 ; Load E87 into I
  $BAE: LD I, $B5D ; Load B5D into I
  $BD8: LD I, $02B ; Load 02B into I
  $BE4: LD I, $529 ; Load 529 into I
  $BEC: LD I, $40E ; Load 40E into I
  $C38: LD I, $A79 ; Load A79 into I
  $C40: LD I, $ED4 ; Load ED4 into I
  $CB4: LD I, $B3F ; Load B3F into I
  $CDC: LD I, $38B ; Load 38B into I
  $CE2: LD I, $727 ; Load 727 into I
  $CFC: LD I, $CE9 ; Load CE9 into I
  $D1C: LD I, $9A0 ; Load 9A0 into I
  $D2C: LD I, $69B ; Load 69B into I
  $D70: LD I, $F56 ; Load F56 into I
  $D82: LD I, $F01 ; Load F01 into I
  $DB0: LD I, $51B ; Load 51B into I
  $DFC: LD I, $CFD ; Load CFD into I
  $E0E: LD I, $387 ; Load 387 into I
  $E7A: LD I, $7E2 ; Load 7E2 into I
  $E7C: LD I, $E54 ; Load E54 into I
  $E9E: LD I, $7B9 ; Load 7B9 into I
  $EA6: LD I, $174 ; Load 174 into I
  $EB8: LD I, $B2E ; Load B2E into I
  $EEE: LD I, $AAA ; Load AAA into I
  $F10: LD I, $6D6 ; Load 6D6 into I
  $F3A: LD I, $CF9 ; Load CF9 into I
  $F4C: LD I, $EC0 ; Load EC0 into I
  $F5A: LD I, $BB4 ; Load BB4 into I
  $F5E: LD I, $396 ; Load 396 into I
  $F72: LD I, $30B ; Load 30B into I
  $F88: LD I, $ED3 ; Load ED3 into I
  $FC4: LD VE, [I] ; Load V0-VE from I
  $FDE: LD I, $429 ; Load 429 into I
  $FE0: LD I, $2D3 ; Load 2D3 into I
  $FF6: LD I, $5A2 ; Load 5A2 into I

CONTROL FLOW ANALYSIS:
Jumps: 216
Calls: 100
Branches: 239
Loops: 117
Loop Structures:
  $25E -> $178 (backward jump)
  $30A -> $243 (backward jump)
  $388 -> $15F (backward jump)
  $3A8 -> $0A9 (backward jump)
  $404 -> $0B5 (backward jump)
  $41A -> $1FC (backward jump)
  $4EA -> $301 (backward jump)
  $538 -> $0C8 (backward jump)
  $53A -> $116 (backward jump)
  $564 -> $4E8 (backward jump)
  $584 -> $293 (backward jump)
  $598 -> $0A6 (backward jump)
  $604 -> $56C (backward jump)
  $610 -> $592 (backward jump)
  $622 -> $1EE (backward jump)
  $636 -> $2A1 (backward jump)
  $67A -> $38B (backward jump)
  $6C8 -> $6C5 (backward jump)
  $6CC -> $555 (backward jump)
  $6E6 -> $016 (backward jump)
  $742 -> $566 (backward jump)
  $744 -> $50E (backward jump)
  $782 -> $627 (backward jump)
  $796 -> $667 (backward jump)
  $7BC -> $330 (backward jump)
  $7D2 -> $66F (backward jump)
  $7F4 -> $65C (backward jump)
  $7F8 -> $1F3 (backward jump)
  $816 -> $73B (backward jump)
  $86E -> $56F (backward jump)
  $870 -> $22D (backward jump)
  $87C -> $371 (backward jump)
  $894 -> $701 (backward jump)
  $910 -> $285 (backward jump)
  $932 -> $12E (backward jump)
  $938 -> $8D4 (backward jump)
  $93A -> $43E (backward jump)
  $94E -> $4CB (backward jump)
  $954 -> $7C2 (backward jump)
  $956 -> $244 (backward jump)
  $960 -> $287 (backward jump)
  $974 -> $7E4 (backward jump)
  $97A -> $757 (backward jump)
  $9BA -> $8D1 (backward jump)
  $9C0 -> $707 (backward jump)
  $9F0 -> $1A3 (backward jump)
  $A00 -> $511 (backward jump)
  $A1C -> $3E8 (backward jump)
  $A2E -> $3F2 (backward jump)
  $A6C -> $2B0 (backward jump)
  $A72 -> $66D (backward jump)
  $A88 -> $9B4 (backward jump)
  $AD6 -> $41E (backward jump)
  $ADA -> $A5E (backward jump)
  $B10 -> $8CE (backward jump)
  $B1A -> $AED (backward jump)
  $B54 -> $918 (backward jump)
  $B5E -> $683 (backward jump)
  $B6A -> $24A (backward jump)
  $B72 -> $4D2 (backward jump)
  $B8E -> $3A9 (backward jump)
  $B92 -> $5FB (backward jump)
  $B98 -> $4C5 (backward jump)
  $B9A -> $948 (backward jump)
  $B9C -> $9F5 (backward jump)
  $BA2 -> $6C6 (backward jump)
  $BA8 -> $B61 (backward jump)
  $BBC -> $9DB (backward jump)
  $BE6 -> $1FE (backward jump)
  $BEA -> $54E (backward jump)
  $BEE -> $11A (backward jump)
  $BF2 -> $9D3 (backward jump)
  $C02 -> $416 (backward jump)
  $C12 -> $05D (backward jump)
  $C2A -> $89C (backward jump)
  $C2C -> $11F (backward jump)
  $C4A -> $A08 (backward jump)
  $C5C -> $275 (backward jump)
  $C6E -> $525 (backward jump)
  $C7C -> $955 (backward jump)
  $C7E -> $307 (backward jump)
  $CB8 -> $924 (backward jump)
  $CC8 -> $39D (backward jump)
  $CF8 -> $20A (backward jump)
  $D0C -> $A95 (backward jump)
  $D1E -> $19A (backward jump)
  $D46 -> $058 (backward jump)
  $D4E -> $71E (backward jump)
  $D7E -> $C9A (backward jump)
  $DA4 -> $B2A (backward jump)
  $DDE -> $657 (backward jump)
  $DE2 -> $4B1 (backward jump)
  $DF4 -> $988 (backward jump)
  $DF8 -> $2CA (backward jump)
  $E18 -> $8E2 (backward jump)
  $E3C -> $732 (backward jump)
  $E40 -> $5B2 (backward jump)
  $E58 -> $CEE (backward jump)
  $E5E -> $E32 (backward jump)
  $E80 -> $CB6 (backward jump)
  $E82 -> $879 (backward jump)
  $E96 -> $55C (backward jump)
  $EDC -> $391 (backward jump)
  $EF8 -> $883 (backward jump)
  $F32 -> $B3B (backward jump)
  $F38 -> $28D (backward jump)
  $F42 -> $925 (backward jump)
  $F4A -> $37F (backward jump)
  $F4E -> $05F (backward jump)
  $F58 -> $2E7 (backward jump)
  $F60 -> $DE2 (backward jump)
  $F68 -> $900 (backward jump)
  $F8A -> $B5B (backward jump)
  $F9C -> $3B5 (backward jump)
  $FC0 -> $3F1 (backward jump)
  $FD0 -> $CD9 (backward jump)
  $FEC -> $92D (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $7AC0   ADD      VA, #C0         ; Add 192 to VA
$202    $A2C4   LD       I, $2C4         ; Load 2C4 into I
$204    $A0AD   LD       I, $0AD         ; Load 0AD into I
$206    $A2A0   LD       I, $2A0         ; Load 2A0 into I
$208    $65CF   LD       V5, #CF         ; Load 207 into V5
$20A    $D395   DRW      V3, V9, #5      ; Draw 5-byte sprite at V3, V9
$20C    $07F0   SYS      $7F0            ; System call to 7F0
$20E    $4322   SNE      V3, #22         ; Skip if V3 != 34
$210    $8646   SHR      V6              ; V6 >>= 1, VF = LSB
$212    $2D69   CALL     $D69            ; Call subroutine at D69
$214    $9726   UNKNOWN  $9726           ; Unknown 9xxx instruction
$216    $4957   SNE      V9, #57         ; Skip if V9 != 87
$218    $47A3   SNE      V7, #A3         ; Skip if V7 != 163
$21A    $F308   UNKNOWN  F308            ; Unknown Fxxx instruction
$21C    $614B   LD       V1, #4B         ; Load 75 into V1
$21E    $8864   ADD      V8, V6          ; V8 += V6, VF = carry
$220    $485D   SNE      V8, #5D         ; Skip if V8 != 93
$222    $85E1   OR       V5, VE          ; V5 |= VE
$224    $8C88   UNKNOWN  8C88            ; Unknown 8xxx instruction
$226    $46D8   SNE      V6, #D8         ; Skip if V6 != 216
$228    $4B84   SNE      VB, #84         ; Skip if VB != 132
$22A    $5769   UNKNOWN  $5769           ; Unknown 5xxx instruction
$22C    $2E19   CALL     $E19            ; Call subroutine at E19
$22E    $15A9   JP       $5A9            ; Jump to 5A9
$230    $BF18   JP       V0, $F18        ; Jump to V0 + F18
$232    $757C   ADD      V5, #7C         ; Add 124 to V5
$234    $8273   XOR      V2, V7          ; V2 ^= V7
$236    $3E4A   SE       VE, #4A         ; Skip if VE == 74
$238    $E6A7   UNKNOWN  $E6A7           ; Unknown Exxx instruction
$23A    $E178   UNKNOWN  $E178           ; Unknown Exxx instruction
$23C    $46E4   SNE      V6, #E4         ; Skip if V6 != 228
$23E    $1CFD   JP       $CFD            ; Jump to CFD
$240    $B960   JP       V0, $960        ; Jump to V0 + 960
$242    $ADCB   LD       I, $DCB         ; Load DCB into I
$244    $648D   LD       V4, #8D         ; Load 141 into V4
$246    $CD77   RND      VD, #77         ; VD = random & 77
$248    $9EBA   UNKNOWN  $9EBA           ; Unknown 9xxx instruction
$24A    $D978   DRW      V9, V7, #8      ; Draw 8-byte sprite at V9, V7
$24C    $344F   SE       V4, #4F         ; Skip if V4 == 79
$24E    $34B9   SE       V4, #B9         ; Skip if V4 == 185
$250    $80A6   SHR      V0              ; V0 >>= 1, VF = LSB
$252    $498F   SNE      V9, #8F         ; Skip if V9 != 143
$254    $D5B0   DRW      V5, VB, #0      ; Draw 0-byte sprite at V5, VB
$256    $097E   SYS      $97E            ; System call to 97E
$258    $2C82   CALL     $C82            ; Call subroutine at C82
$25A    $1AD2   JP       $AD2            ; Jump to AD2
$25C    $3267   SE       V2, #67         ; Skip if V2 == 103
$25E    $1178   JP       $178            ; Jump to 178
$260    $E4C8   UNKNOWN  $E4C8           ; Unknown Exxx instruction
$262    $FC48   UNKNOWN  FC48            ; Unknown Fxxx instruction
$264    $6A51   LD       VA, #51         ; Load 81 into VA
$266    $BF18   JP       V0, $F18        ; Jump to V0 + F18
$268    $1C61   JP       $C61            ; Jump to C61
$26A    $039E   SYS      $39E            ; System call to 39E
$26C    $2AA1   CALL     $AA1            ; Call subroutine at AA1
$26E    $EE73   UNKNOWN  $EE73           ; Unknown Exxx instruction
$270    $BCE4   JP       V0, $CE4        ; Jump to V0 + CE4
$272    $8AC1   OR       VA, VC          ; VA |= VC
$274    $8340   LD       V3, V4          ; V3 = V4
$276    $4CDD   SNE      VC, #DD         ; Skip if VC != 221
$278    $2299   CALL     $299            ; Call subroutine at 299
$27A    $E96C   UNKNOWN  $E96C           ; Unknown Exxx instruction
$27C    $3B2B   SE       VB, #2B         ; Skip if VB == 43
$27E    $A463   LD       I, $463         ; Load 463 into I
$280    $B444   JP       V0, $444        ; Jump to V0 + 444
$282    $369E   SE       V6, #9E         ; Skip if V6 == 158
$284    $C1E9   RND      V1, #E9         ; V1 = random & E9
$286    $BA9B   JP       V0, $A9B        ; Jump to V0 + A9B
$288    $7788   ADD      V7, #88         ; Add 136 to V7
$28A    $C511   RND      V5, #11         ; V5 = random & 11
$28C    $179F   JP       $79F            ; Jump to 79F
$28E    $E4E0   UNKNOWN  $E4E0           ; Unknown Exxx instruction
$290    $7DAA   ADD      VD, #AA         ; Add 170 to VD
$292    $E782   UNKNOWN  $E782           ; Unknown Exxx instruction
$294    $9B5E   UNKNOWN  $9B5E           ; Unknown 9xxx instruction
$296    $4355   SNE      V3, #55         ; Skip if V3 != 85
$298    $864D   UNKNOWN  864D            ; Unknown 8xxx instruction
$29A    $3AF5   SE       VA, #F5         ; Skip if VA == 245
$29C    $CB71   RND      VB, #71         ; VB = random & 71
$29E    $859C   UNKNOWN  859C            ; Unknown 8xxx instruction
$2A0    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2A2    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2A4    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2A6    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2A8    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2AA    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2AC    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2AE    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2B0    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2B2    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2B4    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2B6    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2B8    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2BA    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2BC    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2BE    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2C0    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2C2    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2C4    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2C6    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2C8    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2CA    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2CC    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2CE    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2D0    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2D2    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2D4    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2D6    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2D8    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2DA    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2DC    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2DE    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2E0    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2E2    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2E4    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2E6    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2E8    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2EA    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2EC    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2EE    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2F0    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2F2    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2F4    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2F6    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2F8    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2FA    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2FC    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$2FE    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$300    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$302    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$304    $9D9D   UNKNOWN  $9D9D           ; Unknown 9xxx instruction
$306    $9DF3   UNKNOWN  $9DF3           ; Unknown 9xxx instruction
$308    $F758   UNKNOWN  F758            ; Unknown Fxxx instruction
$30A    $B243   JP       V0, $243        ; Jump to V0 + 243
$30C    $B9AD   JP       V0, $9AD        ; Jump to V0 + 9AD
$30E    $8A14   ADD      VA, V1          ; VA += V1, VF = carry
$310    $CE7D   RND      VE, #7D         ; VE = random & 7D
$312    $5622   UNKNOWN  $5622           ; Unknown 5xxx instruction
$314    $F322   UNKNOWN  F322            ; Unknown Fxxx instruction
$316    $1BD7   JP       $BD7            ; Jump to BD7
$318    $FB29   LD       F, VB           ; I = sprite address for digit VB
$31A    $EE9D   UNKNOWN  $EE9D           ; Unknown Exxx instruction
$31C    $3590   SE       V5, #90         ; Skip if V5 == 144
$31E    $4DFF   SNE      VD, #FF         ; Skip if VD != 255
$320    $D810   DRW      V8, V1, #0      ; Draw 0-byte sprite at V8, V1
$322    $45EF   SNE      V5, #EF         ; Skip if V5 != 239
$324    $2B24   CALL     $B24            ; Call subroutine at B24
$326    $5057   UNKNOWN  $5057           ; Unknown 5xxx instruction
$328    $5E0E   UNKNOWN  $5E0E           ; Unknown 5xxx instruction
$32A    $2DAA   CALL     $DAA            ; Call subroutine at DAA
$32C    $4E45   SNE      VE, #45         ; Skip if VE != 69
$32E    $15AD   JP       $5AD            ; Jump to 5AD
$330    $39A7   SE       V9, #A7         ; Skip if V9 == 167
$332    $BE6A   JP       V0, $E6A        ; Jump to V0 + E6A
$334    $6A1E   LD       VA, #1E         ; Load 30 into VA
$336    $C65C   RND      V6, #5C         ; V6 = random & 5C
$338    $A2BD   LD       I, $2BD         ; Load 2BD into I
$33A    $3137   SE       V1, #37         ; Skip if V1 == 55
$33C    $4FBF   SNE      VF, #BF         ; Skip if VF != 191
$33E    $5F2E   UNKNOWN  $5F2E           ; Unknown 5xxx instruction
$340    $300E   SE       V0, #0E         ; Skip if V0 == 14
$342    $9C9D   UNKNOWN  $9C9D           ; Unknown 9xxx instruction
$344    $5211   UNKNOWN  $5211           ; Unknown 5xxx instruction
$346    $C9F7   RND      V9, #F7         ; V9 = random & F7
$348    $A22B   LD       I, $22B         ; Load 22B into I
$34A    $8576   SHR      V5              ; V5 >>= 1, VF = LSB
$34C    $0A7C   SYS      $A7C            ; System call to A7C
$34E    $AC5B   LD       I, $C5B         ; Load C5B into I
$350    $5B45   UNKNOWN  $5B45           ; Unknown 5xxx instruction
$352    $A1AD   LD       I, $1AD         ; Load 1AD into I
$354    $A850   LD       I, $850         ; Load 850 into I
$356    $A89A   LD       I, $89A         ; Load 89A into I
$358    $734A   ADD      V3, #4A         ; Add 74 to V3
$35A    $2084   CALL     $084            ; Call subroutine at 084
$35C    $A1D9   LD       I, $1D9         ; Load 1D9 into I
$35E    $789D   ADD      V8, #9D         ; Add 157 to V8
$360    $4244   SNE      V2, #44         ; Skip if V2 != 68
$362    $2934   CALL     $934            ; Call subroutine at 934
$364    $5138   UNKNOWN  $5138           ; Unknown 5xxx instruction
$366    $043D   SYS      $43D            ; System call to 43D
$368    $AE1C   LD       I, $E1C         ; Load E1C into I
$36A    $E966   UNKNOWN  $E966           ; Unknown Exxx instruction
$36C    $1CB2   JP       $CB2            ; Jump to CB2
$36E    $9301   UNKNOWN  $9301           ; Unknown 9xxx instruction
$370    $37C1   SE       V7, #C1         ; Skip if V7 == 193
$372    $9780   SNE      V7, V8          ; Skip if V7 != V8
$374    $3D90   SE       VD, #90         ; Skip if VD == 144
$376    $D453   DRW      V4, V5, #3      ; Draw 3-byte sprite at V4, V5
$378    $8346   SHR      V3              ; V3 >>= 1, VF = LSB
$37A    $5A58   UNKNOWN  $5A58           ; Unknown 5xxx instruction
$37C    $46E1   SNE      V6, #E1         ; Skip if V6 != 225
$37E    $DD08   DRW      VD, V0, #8      ; Draw 8-byte sprite at VD, V0
$380    $044D   SYS      $44D            ; System call to 44D
$382    $1F86   JP       $F86            ; Jump to F86
$384    $776F   ADD      V7, #6F         ; Add 111 to V7
$386    $F2E6   UNKNOWN  F2E6            ; Unknown Fxxx instruction
$388    $B15F   JP       V0, $15F        ; Jump to V0 + 15F
$38A    $C99E   RND      V9, #9E         ; V9 = random & 9E
$38C    $2A9A   CALL     $A9A            ; Call subroutine at A9A
$38E    $D3AF   DRW      V3, VA, #F      ; Draw 15-byte sprite at V3, VA
$390    $6B78   LD       VB, #78         ; Load 120 into VB
$392    $E6B3   UNKNOWN  $E6B3           ; Unknown Exxx instruction
$394    $314E   SE       V1, #4E         ; Skip if V1 == 78
$396    $710C   ADD      V1, #0C         ; Add 12 to V1
$398    $890E   SHL      V9              ; V9 <<= 1, VF = MSB
$39A    $7272   ADD      V2, #72         ; Add 114 to V2
$39C    $304C   SE       V0, #4C         ; Skip if V0 == 76
$39E    $DB77   DRW      VB, V7, #7      ; Draw 7-byte sprite at VB, V7
$3A0    $7F20   ADD      VF, #20         ; Add 32 to VF
$3A2    $75A7   ADD      V5, #A7         ; Add 167 to V5
$3A4    $C13A   RND      V1, #3A         ; V1 = random & 3A
$3A6    $9F7F   UNKNOWN  $9F7F           ; Unknown 9xxx instruction
$3A8    $B0A9   JP       V0, $0A9        ; Jump to V0 + 0A9
$3AA    $DD54   DRW      VD, V5, #4      ; Draw 4-byte sprite at VD, V5
$3AC    $C4AF   RND      V4, #AF         ; V4 = random & AF
$3AE    $1E04   JP       $E04            ; Jump to E04
$3B0    $2B1B   CALL     $B1B            ; Call subroutine at B1B
$3B2    $09C3   SYS      $9C3            ; System call to 9C3
$3B4    $0078   SYS      $078            ; System call to 078
$3B6    $D180   DRW      V1, V8, #0      ; Draw 0-byte sprite at V1, V8
$3B8    $B722   JP       V0, $722        ; Jump to V0 + 722
$3BA    $4852   SNE      V8, #52         ; Skip if V8 != 82
$3BC    $F7E1   UNKNOWN  F7E1            ; Unknown Fxxx instruction
$3BE    $23FB   CALL     $3FB            ; Call subroutine at 3FB
$3C0    $70C5   ADD      V0, #C5         ; Add 197 to V0
$3C2    $F6D9   UNKNOWN  F6D9            ; Unknown Fxxx instruction
$3C4    $2E57   CALL     $E57            ; Call subroutine at E57
$3C6    $D48D   DRW      V4, V8, #D      ; Draw 13-byte sprite at V4, V8
$3C8    $3795   SE       V7, #95         ; Skip if V7 == 149
$3CA    $6DA3   LD       VD, #A3         ; Load 163 into VD
$3CC    $807E   SHL      V0              ; V0 <<= 1, VF = MSB
$3CE    $C997   RND      V9, #97         ; V9 = random & 97
$3D0    $E017   UNKNOWN  $E017           ; Unknown Exxx instruction
$3D2    $3172   SE       V1, #72         ; Skip if V1 == 114
$3D4    $828F   UNKNOWN  828F            ; Unknown 8xxx instruction
$3D6    $FF89   UNKNOWN  FF89            ; Unknown Fxxx instruction
$3D8    $2CE4   CALL     $CE4            ; Call subroutine at CE4
$3DA    $367F   SE       V6, #7F         ; Skip if V6 == 127
$3DC    $6952   LD       V9, #52         ; Load 82 into V9
$3DE    $398A   SE       V9, #8A         ; Skip if V9 == 138
$3E0    $F338   UNKNOWN  F338            ; Unknown Fxxx instruction
$3E2    $0BBC   SYS      $BBC            ; System call to BBC
$3E4    $9AA1   UNKNOWN  $9AA1           ; Unknown 9xxx instruction
$3E6    $5A10   SE       VA, V1          ; Skip if VA == V1
$3E8    $5F79   UNKNOWN  $5F79           ; Unknown 5xxx instruction
$3EA    $A8C3   LD       I, $8C3         ; Load 8C3 into I
$3EC    $B498   JP       V0, $498        ; Jump to V0 + 498
$3EE    $E13A   UNKNOWN  $E13A           ; Unknown Exxx instruction
$3F0    $495B   SNE      V9, #5B         ; Skip if V9 != 91
$3F2    $A4CC   LD       I, $4CC         ; Load 4CC into I
$3F4    $DA42   DRW      VA, V4, #2      ; Draw 2-byte sprite at VA, V4
$3F6    $1A11   JP       $A11            ; Jump to A11
$3F8    $E304   UNKNOWN  $E304           ; Unknown Exxx instruction
$3FA    $D335   DRW      V3, V3, #5      ; Draw 5-byte sprite at V3, V3
$3FC    $8AE7   SUBN     VA, VE          ; VA = VE - VA, VF = !borrow
$3FE    $762A   ADD      V6, #2A         ; Add 42 to V6
$400    $95B8   UNKNOWN  $95B8           ; Unknown 9xxx instruction
$402    $F63F   UNKNOWN  F63F            ; Unknown Fxxx instruction
$404    $B0B5   JP       V0, $0B5        ; Jump to V0 + 0B5
$406    $53C9   UNKNOWN  $53C9           ; Unknown 5xxx instruction
$408    $BE89   JP       V0, $E89        ; Jump to V0 + E89
$40A    $9341   UNKNOWN  $9341           ; Unknown 9xxx instruction
$40C    $8099   UNKNOWN  8099            ; Unknown 8xxx instruction
$40E    $9034   UNKNOWN  $9034           ; Unknown 9xxx instruction
$410    $B802   JP       V0, $802        ; Jump to V0 + 802
$412    $1A35   JP       $A35            ; Jump to A35
$414    $BA9D   JP       V0, $A9D        ; Jump to V0 + A9D
$416    $CC93   RND      VC, #93         ; VC = random & 93
$418    $29B8   CALL     $9B8            ; Call subroutine at 9B8
$41A    $B1FC   JP       V0, $1FC        ; Jump to V0 + 1FC
$41C    $0CC9   SYS      $CC9            ; System call to CC9
$41E    $46B1   SNE      V6, #B1         ; Skip if V6 != 177
$420    $4EE8   SNE      VE, #E8         ; Skip if VE != 232
$422    $E46E   UNKNOWN  $E46E           ; Unknown Exxx instruction
$424    $C8A8   RND      V8, #A8         ; V8 = random & A8
$426    $C9EF   RND      V9, #EF         ; V9 = random & EF
$428    $BDCF   JP       V0, $DCF        ; Jump to V0 + DCF
$42A    $DA29   DRW      VA, V2, #9      ; Draw 9-byte sprite at VA, V2
$42C    $4747   SNE      V7, #47         ; Skip if V7 != 71
$42E    $D6F3   DRW      V6, VF, #3      ; Draw 3-byte sprite at V6, VF
$430    $6C9D   LD       VC, #9D         ; Load 157 into VC
$432    $6790   LD       V7, #90         ; Load 144 into V7
$434    $A248   LD       I, $248         ; Load 248 into I
$436    $6003   LD       V0, #03         ; Load 3 into V0
$438    $C72D   RND      V7, #2D         ; V7 = random & 2D
$43A    $D935   DRW      V9, V3, #5      ; Draw 5-byte sprite at V9, V3
$43C    $FE90   UNKNOWN  FE90            ; Unknown Fxxx instruction
$43E    $568B   UNKNOWN  $568B           ; Unknown 5xxx instruction
$440    $E9B5   UNKNOWN  $E9B5           ; Unknown Exxx instruction
$442    $96D9   UNKNOWN  $96D9           ; Unknown 9xxx instruction
$444    $D659   DRW      V6, V5, #9      ; Draw 9-byte sprite at V6, V5
$446    $FF8C   UNKNOWN  FF8C            ; Unknown Fxxx instruction
$448    $6793   LD       V7, #93         ; Load 147 into V7
$44A    $F629   LD       F, V6           ; I = sprite address for digit V6
$44C    $B8F3   JP       V0, $8F3        ; Jump to V0 + 8F3
$44E    $C8E1   RND      V8, #E1         ; V8 = random & E1
$450    $08C1   SYS      $8C1            ; System call to 8C1
$452    $288E   CALL     $88E            ; Call subroutine at 88E
$454    $E70D   UNKNOWN  $E70D           ; Unknown Exxx instruction
$456    $D1D8   DRW      V1, VD, #8      ; Draw 8-byte sprite at V1, VD
$458    $CF6B   RND      VF, #6B         ; VF = random & 6B
$45A    $A65C   LD       I, $65C         ; Load 65C into I
$45C    $F6A9   UNKNOWN  F6A9            ; Unknown Fxxx instruction
$45E    $8FC0   LD       VF, VC          ; VF = VC
$460    $5FE8   UNKNOWN  $5FE8           ; Unknown 5xxx instruction
$462    $2007   CALL     $007            ; Call subroutine at 007
$464    $7D26   ADD      VD, #26         ; Add 38 to VD
$466    $8B2D   UNKNOWN  8B2D            ; Unknown 8xxx instruction
$468    $4B73   SNE      VB, #73         ; Skip if VB != 115
$46A    $5B57   UNKNOWN  $5B57           ; Unknown 5xxx instruction
$46C    $DE5F   DRW      VE, V5, #F      ; Draw 15-byte sprite at VE, V5
$46E    $8389   UNKNOWN  8389            ; Unknown 8xxx instruction
$470    $B66F   JP       V0, $66F        ; Jump to V0 + 66F
$472    $1DAC   JP       $DAC            ; Jump to DAC
$474    $031F   SYS      $31F            ; System call to 31F
$476    $29BF   CALL     $9BF            ; Call subroutine at 9BF
$478    $B6DA   JP       V0, $6DA        ; Jump to V0 + 6DA
$47A    $7008   ADD      V0, #08         ; Add 8 to V0
$47C    $2163   CALL     $163            ; Call subroutine at 163
$47E    $C106   RND      V1, #06         ; V1 = random & 06
$480    $C2EE   RND      V2, #EE         ; V2 = random & EE
$482    $4B69   SNE      VB, #69         ; Skip if VB != 105
$484    $2C83   CALL     $C83            ; Call subroutine at C83
$486    $8AA2   AND      VA, VA          ; VA &= VA
$488    $46B8   SNE      V6, #B8         ; Skip if V6 != 184
$48A    $FE7A   UNKNOWN  FE7A            ; Unknown Fxxx instruction
$48C    $E5EF   UNKNOWN  $E5EF           ; Unknown Exxx instruction
$48E    $0094   SYS      $094            ; System call to 094
$490    $0376   SYS      $376            ; System call to 376
$492    $8D10   LD       VD, V1          ; VD = V1
$494    $6BF0   LD       VB, #F0         ; Load 240 into VB
$496    $2997   CALL     $997            ; Call subroutine at 997
$498    $70CE   ADD      V0, #CE         ; Add 206 to V0
$49A    $4230   SNE      V2, #30         ; Skip if V2 != 48
$49C    $0FD2   SYS      $FD2            ; System call to FD2
$49E    $B9D2   JP       V0, $9D2        ; Jump to V0 + 9D2
$4A0    $67E3   LD       V7, #E3         ; Load 227 into V7
$4A2    $3A54   SE       VA, #54         ; Skip if VA == 84
$4A4    $C7D2   RND      V7, #D2         ; V7 = random & D2
$4A6    $D803   DRW      V8, V0, #3      ; Draw 3-byte sprite at V8, V0
$4A8    $5FA9   UNKNOWN  $5FA9           ; Unknown 5xxx instruction
$4AA    $19F2   JP       $9F2            ; Jump to 9F2
$4AC    $DB07   DRW      VB, V0, #7      ; Draw 7-byte sprite at VB, V0
$4AE    $DE54   DRW      VE, V5, #4      ; Draw 4-byte sprite at VE, V5
$4B0    $D525   DRW      V5, V2, #5      ; Draw 5-byte sprite at V5, V2
$4B2    $495D   SNE      V9, #5D         ; Skip if V9 != 93
$4B4    $4344   SNE      V3, #44         ; Skip if V3 != 68
$4B6    $F16A   UNKNOWN  F16A            ; Unknown Fxxx instruction
$4B8    $0A09   SYS      $A09            ; System call to A09
$4BA    $DB1C   DRW      VB, V1, #C      ; Draw 12-byte sprite at VB, V1
$4BC    $165A   JP       $65A            ; Jump to 65A
$4BE    $8420   LD       V4, V2          ; V4 = V2
$4C0    $D907   DRW      V9, V0, #7      ; Draw 7-byte sprite at V9, V0
$4C2    $D53B   DRW      V5, V3, #B      ; Draw 11-byte sprite at V5, V3
$4C4    $9B90   SNE      VB, V9          ; Skip if VB != V9
$4C6    $5657   UNKNOWN  $5657           ; Unknown 5xxx instruction
$4C8    $A377   LD       I, $377         ; Load 377 into I
$4CA    $888E   SHL      V8              ; V8 <<= 1, VF = MSB
$4CC    $E449   UNKNOWN  $E449           ; Unknown Exxx instruction
$4CE    $D26B   DRW      V2, V6, #B      ; Draw 11-byte sprite at V2, V6
$4D0    $46D4   SNE      V6, #D4         ; Skip if V6 != 212
$4D2    $C041   RND      V0, #41         ; V0 = random & 41
$4D4    $FAD9   UNKNOWN  FAD9            ; Unknown Fxxx instruction
$4D6    $236E   CALL     $36E            ; Call subroutine at 36E
$4D8    $C7FC   RND      V7, #FC         ; V7 = random & FC
$4DA    $DFDA   DRW      VF, VD, #A      ; Draw 10-byte sprite at VF, VD
$4DC    $28BF   CALL     $8BF            ; Call subroutine at 8BF
$4DE    $4FBA   SNE      VF, #BA         ; Skip if VF != 186
$4E0    $69EC   LD       V9, #EC         ; Load 236 into V9
$4E2    $7DEF   ADD      VD, #EF         ; Add 239 to VD
$4E4    $7AB9   ADD      VA, #B9         ; Add 185 to VA
$4E6    $BE55   JP       V0, $E55        ; Jump to V0 + E55
$4E8    $AEE5   LD       I, $EE5         ; Load EE5 into I
$4EA    $B301   JP       V0, $301        ; Jump to V0 + 301
$4EC    $0EBD   SYS      $EBD            ; System call to EBD
$4EE    $92FE   UNKNOWN  $92FE           ; Unknown 9xxx instruction
$4F0    $7780   ADD      V7, #80         ; Add 128 to V7
$4F2    $5030   SE       V0, V3          ; Skip if V0 == V3
$4F4    $1869   JP       $869            ; Jump to 869
$4F6    $E181   UNKNOWN  $E181           ; Unknown Exxx instruction
$4F8    $FD18   LD       ST, VD          ; Sound timer = VD
$4FA    $6798   LD       V7, #98         ; Load 152 into V7
$4FC    $BE4E   JP       V0, $E4E        ; Jump to V0 + E4E
$4FE    $B9FE   JP       V0, $9FE        ; Jump to V0 + 9FE
$500    $9405   UNKNOWN  $9405           ; Unknown 9xxx instruction
$502    $C681   RND      V6, #81         ; V6 = random & 81
$504    $2866   CALL     $866            ; Call subroutine at 866
$506    $E3F7   UNKNOWN  $E3F7           ; Unknown Exxx instruction
$508    $81D3   XOR      V1, VD          ; V1 ^= VD
$50A    $1F0D   JP       $F0D            ; Jump to F0D
$50C    $87D7   SUBN     V7, VD          ; V7 = VD - V7, VF = !borrow
$50E    $4949   SNE      V9, #49         ; Skip if V9 != 73
$510    $665C   LD       V6, #5C         ; Load 92 into V6
$512    $B6B0   JP       V0, $6B0        ; Jump to V0 + 6B0
$514    $2CE0   CALL     $CE0            ; Call subroutine at CE0
$516    $197D   JP       $97D            ; Jump to 97D
$518    $D153   DRW      V1, V5, #3      ; Draw 3-byte sprite at V1, V5
$51A    $C374   RND      V3, #74         ; V3 = random & 74
$51C    $C309   RND      V3, #09         ; V3 = random & 09
$51E    $C5E2   RND      V5, #E2         ; V5 = random & E2
$520    $5405   UNKNOWN  $5405           ; Unknown 5xxx instruction
$522    $302F   SE       V0, #2F         ; Skip if V0 == 47
$524    $226E   CALL     $26E            ; Call subroutine at 26E
$526    $7405   ADD      V4, #05         ; Add 5 to V4
$528    $38D4   SE       V8, #D4         ; Skip if V8 == 212
$52A    $D3B2   DRW      V3, VB, #2      ; Draw 2-byte sprite at V3, VB
$52C    $7ADA   ADD      VA, #DA         ; Add 218 to VA
$52E    $3210   SE       V2, #10         ; Skip if V2 == 16
$530    $5733   UNKNOWN  $5733           ; Unknown 5xxx instruction
$532    $C7FF   RND      V7, #FF         ; V7 = random & FF
$534    $FA60   UNKNOWN  FA60            ; Unknown Fxxx instruction
$536    $E10F   UNKNOWN  $E10F           ; Unknown Exxx instruction
$538    $B0C8   JP       V0, $0C8        ; Jump to V0 + 0C8
$53A    $1116   JP       $116            ; Jump to 116
$53C    $C0DB   RND      V0, #DB         ; V0 = random & DB
$53E    $5EC7   UNKNOWN  $5EC7           ; Unknown 5xxx instruction
$540    $C45D   RND      V4, #5D         ; V4 = random & 5D
$542    $6E46   LD       VE, #46         ; Load 70 into VE
$544    $BA7C   JP       V0, $A7C        ; Jump to V0 + A7C
$546    $7F31   ADD      VF, #31         ; Add 49 to VF
$548    $8F6F   UNKNOWN  8F6F            ; Unknown 8xxx instruction
$54A    $0692   SYS      $692            ; System call to 692
$54C    $E47E   UNKNOWN  $E47E           ; Unknown Exxx instruction
$54E    $61EC   LD       V1, #EC         ; Load 236 into V1
$550    $AE1E   LD       I, $E1E         ; Load E1E into I
$552    $58FC   UNKNOWN  $58FC           ; Unknown 5xxx instruction
$554    $BBF9   JP       V0, $BF9        ; Jump to V0 + BF9
$556    $34EC   SE       V4, #EC         ; Skip if V4 == 236
$558    $7880   ADD      V8, #80         ; Add 128 to V8
$55A    $90DE   UNKNOWN  $90DE           ; Unknown 9xxx instruction
$55C    $EF35   UNKNOWN  $EF35           ; Unknown Exxx instruction
$55E    $C127   RND      V1, #27         ; V1 = random & 27
$560    $9242   UNKNOWN  $9242           ; Unknown 9xxx instruction
$562    $C894   RND      V8, #94         ; V8 = random & 94
$564    $B4E8   JP       V0, $4E8        ; Jump to V0 + 4E8
$566    $83FE   SHL      V3              ; V3 <<= 1, VF = MSB
$568    $B858   JP       V0, $858        ; Jump to V0 + 858
$56A    $37A0   SE       V7, #A0         ; Skip if V7 == 160
$56C    $3181   SE       V1, #81         ; Skip if V1 == 129
$56E    $5F54   UNKNOWN  $5F54           ; Unknown 5xxx instruction
$570    $C0CE   RND      V0, #CE         ; V0 = random & CE
$572    $AF17   LD       I, $F17         ; Load F17 into I
$574    $C4FC   RND      V4, #FC         ; V4 = random & FC
$576    $7C48   ADD      VC, #48         ; Add 72 to VC
$578    $54ED   UNKNOWN  $54ED           ; Unknown 5xxx instruction
$57A    $73F2   ADD      V3, #F2         ; Add 242 to V3
$57C    $7188   ADD      V1, #88         ; Add 136 to V1
$57E    $7D8E   ADD      VD, #8E         ; Add 142 to VD
$580    $6C21   LD       VC, #21         ; Load 33 into VC
$582    $E7E2   UNKNOWN  $E7E2           ; Unknown Exxx instruction
$584    $1293   JP       $293            ; Jump to 293
$586    $B9C9   JP       V0, $9C9        ; Jump to V0 + 9C9
$588    $A445   LD       I, $445         ; Load 445 into I
$58A    $C54F   RND      V5, #4F         ; V5 = random & 4F
$58C    $7F07   ADD      VF, #07         ; Add 7 to VF
$58E    $1B26   JP       $B26            ; Jump to B26
$590    $4B56   SNE      VB, #56         ; Skip if VB != 86
$592    $F788   UNKNOWN  F788            ; Unknown Fxxx instruction
$594    $888B   UNKNOWN  888B            ; Unknown 8xxx instruction
$596    $A025   LD       I, $025         ; Load 025 into I
$598    $B0A6   JP       V0, $0A6        ; Jump to V0 + 0A6
$59A    $DDAC   DRW      VD, VA, #C      ; Draw 12-byte sprite at VD, VA
$59C    $DF3F   DRW      VF, V3, #F      ; Draw 15-byte sprite at VF, V3
$59E    $CA55   RND      VA, #55         ; VA = random & 55
$5A0    $39B9   SE       V9, #B9         ; Skip if V9 == 185
$5A2    $93FF   UNKNOWN  $93FF           ; Unknown 9xxx instruction
$5A4    $005A   SYS      $05A            ; System call to 05A
$5A6    $C7E6   RND      V7, #E6         ; V7 = random & E6
$5A8    $2312   CALL     $312            ; Call subroutine at 312
$5AA    $5E43   UNKNOWN  $5E43           ; Unknown 5xxx instruction
$5AC    $86FB   UNKNOWN  86FB            ; Unknown 8xxx instruction
$5AE    $C711   RND      V7, #11         ; V7 = random & 11
$5B0    $B71B   JP       V0, $71B        ; Jump to V0 + 71B
$5B2    $8398   UNKNOWN  8398            ; Unknown 8xxx instruction
$5B4    $F1F4   UNKNOWN  F1F4            ; Unknown Fxxx instruction
$5B6    $1E7E   JP       $E7E            ; Jump to E7E
$5B8    $FDD8   UNKNOWN  FDD8            ; Unknown Fxxx instruction
$5BA    $605E   LD       V0, #5E         ; Load 94 into V0
$5BC    $96EE   UNKNOWN  $96EE           ; Unknown 9xxx instruction
$5BE    $43E1   SNE      V3, #E1         ; Skip if V3 != 225
$5C0    $0C8B   SYS      $C8B            ; System call to C8B
$5C2    $8EA7   SUBN     VE, VA          ; VE = VA - VE, VF = !borrow
$5C4    $DB39   DRW      VB, V3, #9      ; Draw 9-byte sprite at VB, V3
$5C6    $1CAD   JP       $CAD            ; Jump to CAD
$5C8    $5108   UNKNOWN  $5108           ; Unknown 5xxx instruction
$5CA    $399E   SE       V9, #9E         ; Skip if V9 == 158
$5CC    $5F19   UNKNOWN  $5F19           ; Unknown 5xxx instruction
$5CE    $228F   CALL     $28F            ; Call subroutine at 28F
$5D0    $6A8A   LD       VA, #8A         ; Load 138 into VA
$5D2    $C98E   RND      V9, #8E         ; V9 = random & 8E
$5D4    $C397   RND      V3, #97         ; V3 = random & 97
$5D6    $F5AC   UNKNOWN  F5AC            ; Unknown Fxxx instruction
$5D8    $FAAE   UNKNOWN  FAAE            ; Unknown Fxxx instruction
$5DA    $8986   SHR      V9              ; V9 >>= 1, VF = LSB
$5DC    $ECD4   UNKNOWN  $ECD4           ; Unknown Exxx instruction
$5DE    $C3AF   RND      V3, #AF         ; V3 = random & AF
$5E0    $8DBF   UNKNOWN  8DBF            ; Unknown 8xxx instruction
$5E2    $52B9   UNKNOWN  $52B9           ; Unknown 5xxx instruction
$5E4    $D549   DRW      V5, V4, #9      ; Draw 9-byte sprite at V5, V4
$5E6    $358A   SE       V5, #8A         ; Skip if V5 == 138
$5E8    $4D8C   SNE      VD, #8C         ; Skip if VD != 140
$5EA    $AD27   LD       I, $D27         ; Load D27 into I
$5EC    $C158   RND      V1, #58         ; V1 = random & 58
$5EE    $2977   CALL     $977            ; Call subroutine at 977
$5F0    $FF22   UNKNOWN  FF22            ; Unknown Fxxx instruction
$5F2    $D4A6   DRW      V4, VA, #6      ; Draw 6-byte sprite at V4, VA
$5F4    $5E1D   UNKNOWN  $5E1D           ; Unknown 5xxx instruction
$5F6    $1D88   JP       $D88            ; Jump to D88
$5F8    $8469   UNKNOWN  8469            ; Unknown 8xxx instruction
$5FA    $9138   UNKNOWN  $9138           ; Unknown 9xxx instruction
$5FC    $BB9D   JP       V0, $B9D        ; Jump to V0 + B9D
$5FE    $ACDA   LD       I, $CDA         ; Load CDA into I
$600    $93CB   UNKNOWN  $93CB           ; Unknown 9xxx instruction
$602    $9CB4   UNKNOWN  $9CB4           ; Unknown 9xxx instruction
$604    $156C   JP       $56C            ; Jump to 56C
$606    $3D71   SE       VD, #71         ; Skip if VD == 113
$608    $8BC3   XOR      VB, VC          ; VB ^= VC
$60A    $760C   ADD      V6, #0C         ; Add 12 to V6
$60C    $E2D4   UNKNOWN  $E2D4           ; Unknown Exxx instruction
$60E    $A0E8   LD       I, $0E8         ; Load 0E8 into I
$610    $1592   JP       $592            ; Jump to 592
$612    $7B45   ADD      VB, #45         ; Add 69 to VB
$614    $5A11   UNKNOWN  $5A11           ; Unknown 5xxx instruction
$616    $AFFB   LD       I, $FFB         ; Load FFB into I
$618    $E647   UNKNOWN  $E647           ; Unknown Exxx instruction
$61A    $3EF7   SE       VE, #F7         ; Skip if VE == 247
$61C    $EBF0   UNKNOWN  $EBF0           ; Unknown Exxx instruction
$61E    $78F4   ADD      V8, #F4         ; Add 244 to V8
$620    $C046   RND      V0, #46         ; V0 = random & 46
$622    $11EE   JP       $1EE            ; Jump to 1EE
$624    $AA10   LD       I, $A10         ; Load A10 into I
$626    $5BCA   UNKNOWN  $5BCA           ; Unknown 5xxx instruction
$628    $4402   SNE      V4, #02         ; Skip if V4 != 2
$62A    $300D   SE       V0, #0D         ; Skip if V0 == 13
$62C    $2B9F   CALL     $B9F            ; Call subroutine at B9F
$62E    $E54A   UNKNOWN  $E54A           ; Unknown Exxx instruction
$630    $2767   CALL     $767            ; Call subroutine at 767
$632    $7F45   ADD      VF, #45         ; Add 69 to VF
$634    $4001   SNE      V0, #01         ; Skip if V0 != 1
$636    $12A1   JP       $2A1            ; Jump to 2A1
$638    $FF19   UNKNOWN  FF19            ; Unknown Fxxx instruction
$63A    $2644   CALL     $644            ; Call subroutine at 644
$63C    $563B   UNKNOWN  $563B           ; Unknown 5xxx instruction
$63E    $E353   UNKNOWN  $E353           ; Unknown Exxx instruction
$640    $525B   UNKNOWN  $525B           ; Unknown 5xxx instruction
$642    $3ED1   SE       VE, #D1         ; Skip if VE == 209
$644    $2334   CALL     $334            ; Call subroutine at 334
$646    $E67B   UNKNOWN  $E67B           ; Unknown Exxx instruction
$648    $E27D   UNKNOWN  $E27D           ; Unknown Exxx instruction
$64A    $5153   UNKNOWN  $5153           ; Unknown 5xxx instruction
$64C    $AAC9   LD       I, $AC9         ; Load AC9 into I
$64E    $9E8E   UNKNOWN  $9E8E           ; Unknown 9xxx instruction
$650    $5F1B   UNKNOWN  $5F1B           ; Unknown 5xxx instruction
$652    $80A5   SUB      V0, VA          ; V0 -= VA, VF = !borrow
$654    $E32F   UNKNOWN  $E32F           ; Unknown Exxx instruction
$656    $284A   CALL     $84A            ; Call subroutine at 84A
$658    $9512   UNKNOWN  $9512           ; Unknown 9xxx instruction
$65A    $20F2   CALL     $0F2            ; Call subroutine at 0F2
$65C    $C2B4   RND      V2, #B4         ; V2 = random & B4
$65E    $6C62   LD       VC, #62         ; Load 98 into VC
$660    $F183   UNKNOWN  F183            ; Unknown Fxxx instruction
$662    $600F   LD       V0, #0F         ; Load 15 into V0
$664    $0023   SYS      $023            ; System call to 023
$666    $DA73   DRW      VA, V7, #3      ; Draw 3-byte sprite at VA, V7
$668    $1677   JP       $677            ; Jump to 677
$66A    $1A75   JP       $A75            ; Jump to A75
$66C    $3EC5   SE       VE, #C5         ; Skip if VE == 197
$66E    $4B5E   SNE      VB, #5E         ; Skip if VB != 94
$670    $FD34   UNKNOWN  FD34            ; Unknown Fxxx instruction
$672    $6FC6   LD       VF, #C6         ; Load 198 into VF
$674    $788D   ADD      V8, #8D         ; Add 141 to V8
$676    $70C9   ADD      V0, #C9         ; Add 201 to V0
$678    $7BF4   ADD      VB, #F4         ; Add 244 to VB
$67A    $138B   JP       $38B            ; Jump to 38B
$67C    $C5AE   RND      V5, #AE         ; V5 = random & AE
$67E    $F594   UNKNOWN  F594            ; Unknown Fxxx instruction
$680    $F5D6   UNKNOWN  F5D6            ; Unknown Fxxx instruction
$682    $53B0   SE       V3, VB          ; Skip if V3 == VB
$684    $1720   JP       $720            ; Jump to 720
$686    $CE1E   RND      VE, #1E         ; VE = random & 1E
$688    $C100   RND      V1, #00         ; V1 = random & 00
$68A    $4AB3   SNE      VA, #B3         ; Skip if VA != 179
$68C    $47A1   SNE      V7, #A1         ; Skip if V7 != 161
$68E    $D2C7   DRW      V2, VC, #7      ; Draw 7-byte sprite at V2, VC
$690    $64C4   LD       V4, #C4         ; Load 196 into V4
$692    $A2B9   LD       I, $2B9         ; Load 2B9 into I
$694    $DB32   DRW      VB, V3, #2      ; Draw 2-byte sprite at VB, V3
$696    $4102   SNE      V1, #02         ; Skip if V1 != 2
$698    $7929   ADD      V9, #29         ; Add 41 to V9
$69A    $090E   SYS      $90E            ; System call to 90E
$69C    $D6A2   DRW      V6, VA, #2      ; Draw 2-byte sprite at V6, VA
$69E    $AA1B   LD       I, $A1B         ; Load A1B into I
$6A0    $5B87   UNKNOWN  $5B87           ; Unknown 5xxx instruction
$6A2    $CF8E   RND      VF, #8E         ; VF = random & 8E
$6A4    $080B   SYS      $80B            ; System call to 80B
$6A6    $6E8E   LD       VE, #8E         ; Load 142 into VE
$6A8    $82D4   ADD      V2, VD          ; V2 += VD, VF = carry
$6AA    $66E3   LD       V6, #E3         ; Load 227 into V6
$6AC    $D4A3   DRW      V4, VA, #3      ; Draw 3-byte sprite at V4, VA
$6AE    $A332   LD       I, $332         ; Load 332 into I
$6B0    $F801   UNKNOWN  F801            ; Unknown Fxxx instruction
$6B2    $018B   SYS      $18B            ; System call to 18B
$6B4    $1BCD   JP       $BCD            ; Jump to BCD
$6B6    $5320   SE       V3, V2          ; Skip if V3 == V2
$6B8    $3AC9   SE       VA, #C9         ; Skip if VA == 201
$6BA    $9A25   UNKNOWN  $9A25           ; Unknown 9xxx instruction
$6BC    $AA97   LD       I, $A97         ; Load A97 into I
$6BE    $7810   ADD      V8, #10         ; Add 16 to V8
$6C0    $5751   UNKNOWN  $5751           ; Unknown 5xxx instruction
$6C2    $0890   SYS      $890            ; System call to 890
$6C4    $F797   UNKNOWN  F797            ; Unknown Fxxx instruction
$6C6    $754C   ADD      V5, #4C         ; Add 76 to V5
$6C8    $B6C5   JP       V0, $6C5        ; Jump to V0 + 6C5
$6CA    $787C   ADD      V8, #7C         ; Add 124 to V8
$6CC    $1555   JP       $555            ; Jump to 555
$6CE    $223A   CALL     $23A            ; Call subroutine at 23A
$6D0    $A71D   LD       I, $71D         ; Load 71D into I
$6D2    $8026   SHR      V0              ; V0 >>= 1, VF = LSB
$6D4    $BB34   JP       V0, $B34        ; Jump to V0 + B34
$6D6    $B989   JP       V0, $989        ; Jump to V0 + 989
$6D8    $0187   SYS      $187            ; System call to 187
$6DA    $FA68   UNKNOWN  FA68            ; Unknown Fxxx instruction
$6DC    $BEE4   JP       V0, $EE4        ; Jump to V0 + EE4
$6DE    $DD91   DRW      VD, V9, #1      ; Draw 1-byte sprite at VD, V9
$6E0    $BA1A   JP       V0, $A1A        ; Jump to V0 + A1A
$6E2    $91C8   UNKNOWN  $91C8           ; Unknown 9xxx instruction
$6E4    $635B   LD       V3, #5B         ; Load 91 into V3
$6E6    $1016   JP       $016            ; Jump to 016
$6E8    $3AA2   SE       VA, #A2         ; Skip if VA == 162
$6EA    $8953   XOR      V9, V5          ; V9 ^= V5
$6EC    $CEB9   RND      VE, #B9         ; VE = random & B9
$6EE    $5C7B   UNKNOWN  $5C7B           ; Unknown 5xxx instruction
$6F0    $C6BD   RND      V6, #BD         ; V6 = random & BD
$6F2    $17A3   JP       $7A3            ; Jump to 7A3
$6F4    $8F57   SUBN     VF, V5          ; VF = V5 - VF, VF = !borrow
$6F6    $AD01   LD       I, $D01         ; Load D01 into I
$6F8    $791F   ADD      V9, #1F         ; Add 31 to V9
$6FA    $1A71   JP       $A71            ; Jump to A71
$6FC    $83CD   UNKNOWN  83CD            ; Unknown 8xxx instruction
$6FE    $8D9F   UNKNOWN  8D9F            ; Unknown 8xxx instruction
$700    $3FB4   SE       VF, #B4         ; Skip if VF == 180
$702    $25ED   CALL     $5ED            ; Call subroutine at 5ED
$704    $1A2E   JP       $A2E            ; Jump to A2E
$706    $E4D1   UNKNOWN  $E4D1           ; Unknown Exxx instruction
$708    $A610   LD       I, $610         ; Load 610 into I
$70A    $8A34   ADD      VA, V3          ; VA += V3, VF = carry
$70C    $999D   UNKNOWN  $999D           ; Unknown 9xxx instruction
$70E    $A375   LD       I, $375         ; Load 375 into I
$710    $F755   LD       [I], V7         ; Store V0-V7 at I
$712    $2435   CALL     $435            ; Call subroutine at 435
$714    $4955   SNE      V9, #55         ; Skip if V9 != 85
$716    $5FD3   UNKNOWN  $5FD3           ; Unknown 5xxx instruction
$718    $9961   UNKNOWN  $9961           ; Unknown 9xxx instruction
$71A    $7EBE   ADD      VE, #BE         ; Add 190 to VE
$71C    $3072   SE       V0, #72         ; Skip if V0 == 114
$71E    $4055   SNE      V0, #55         ; Skip if V0 != 85
$720    $8E81   OR       VE, V8          ; VE |= V8
$722    $21EA   CALL     $1EA            ; Call subroutine at 1EA
$724    $70E7   ADD      V0, #E7         ; Add 231 to V0
$726    $4E3F   SNE      VE, #3F         ; Skip if VE != 63
$728    $6C8B   LD       VC, #8B         ; Load 139 into VC
$72A    $D0AF   DRW      V0, VA, #F      ; Draw 15-byte sprite at V0, VA
$72C    $AB92   LD       I, $B92         ; Load B92 into I
$72E    $782A   ADD      V8, #2A         ; Add 42 to V8
$730    $52EF   UNKNOWN  $52EF           ; Unknown 5xxx instruction
$732    $CCB4   RND      VC, #B4         ; VC = random & B4
$734    $2083   CALL     $083            ; Call subroutine at 083
$736    $8C3E   SHL      VC              ; VC <<= 1, VF = MSB
$738    $7EC8   ADD      VE, #C8         ; Add 200 to VE
$73A    $1B94   JP       $B94            ; Jump to B94
$73C    $3084   SE       V0, #84         ; Skip if V0 == 132
$73E    $5738   UNKNOWN  $5738           ; Unknown 5xxx instruction
$740    $6DA9   LD       VD, #A9         ; Load 169 into VD
$742    $1566   JP       $566            ; Jump to 566
$744    $150E   JP       $50E            ; Jump to 50E
$746    $7DEF   ADD      VD, #EF         ; Add 239 to VD
$748    $248B   CALL     $48B            ; Call subroutine at 48B
$74A    $AFF8   LD       I, $FF8         ; Load FF8 into I
$74C    $E99A   UNKNOWN  $E99A           ; Unknown Exxx instruction
$74E    $74F1   ADD      V4, #F1         ; Add 241 to V4
$750    $8C88   UNKNOWN  8C88            ; Unknown 8xxx instruction
$752    $6690   LD       V6, #90         ; Load 144 into V6
$754    $C10E   RND      V1, #0E         ; V1 = random & 0E
$756    $9317   UNKNOWN  $9317           ; Unknown 9xxx instruction
$758    $511F   UNKNOWN  $511F           ; Unknown 5xxx instruction
$75A    $EE1E   UNKNOWN  $EE1E           ; Unknown Exxx instruction
$75C    $BDCA   JP       V0, $DCA        ; Jump to V0 + DCA
$75E    $9DBA   UNKNOWN  $9DBA           ; Unknown 9xxx instruction
$760    $C580   RND      V5, #80         ; V5 = random & 80
$762    $3419   SE       V4, #19         ; Skip if V4 == 25
$764    $4EB8   SNE      VE, #B8         ; Skip if VE != 184
$766    $DF1D   DRW      VF, V1, #D      ; Draw 13-byte sprite at VF, V1
$768    $D8B2   DRW      V8, VB, #2      ; Draw 2-byte sprite at V8, VB
$76A    $BAA9   JP       V0, $AA9        ; Jump to V0 + AA9
$76C    $23FA   CALL     $3FA            ; Call subroutine at 3FA
$76E    $81CA   UNKNOWN  81CA            ; Unknown 8xxx instruction
$770    $9423   UNKNOWN  $9423           ; Unknown 9xxx instruction
$772    $E408   UNKNOWN  $E408           ; Unknown Exxx instruction
$774    $71A3   ADD      V1, #A3         ; Add 163 to V1
$776    $4845   SNE      V8, #45         ; Skip if V8 != 69
$778    $75F3   ADD      V5, #F3         ; Add 243 to V5
$77A    $212C   CALL     $12C            ; Call subroutine at 12C
$77C    $EE6C   UNKNOWN  $EE6C           ; Unknown Exxx instruction
$77E    $9AA5   UNKNOWN  $9AA5           ; Unknown 9xxx instruction
$780    $0A07   SYS      $A07            ; System call to A07
$782    $B627   JP       V0, $627        ; Jump to V0 + 627
$784    $28C1   CALL     $8C1            ; Call subroutine at 8C1
$786    $4331   SNE      V3, #31         ; Skip if V3 != 49
$788    $EE7D   UNKNOWN  $EE7D           ; Unknown Exxx instruction
$78A    $4437   SNE      V4, #37         ; Skip if V4 != 55
$78C    $88BB   UNKNOWN  88BB            ; Unknown 8xxx instruction
$78E    $842C   UNKNOWN  842C            ; Unknown 8xxx instruction
$790    $9A0C   UNKNOWN  $9A0C           ; Unknown 9xxx instruction
$792    $ABC0   LD       I, $BC0         ; Load BC0 into I
$794    $A614   LD       I, $614         ; Load 614 into I
$796    $1667   JP       $667            ; Jump to 667
$798    $187B   JP       $87B            ; Jump to 87B
$79A    $2E7C   CALL     $E7C            ; Call subroutine at E7C
$79C    $8281   OR       V2, V8          ; V2 |= V8
$79E    $F4A3   UNKNOWN  F4A3            ; Unknown Fxxx instruction
$7A0    $F60E   UNKNOWN  F60E            ; Unknown Fxxx instruction
$7A2    $A2A6   LD       I, $2A6         ; Load 2A6 into I
$7A4    $8653   XOR      V6, V5          ; V6 ^= V5
$7A6    $5B3E   UNKNOWN  $5B3E           ; Unknown 5xxx instruction
$7A8    $AC29   LD       I, $C29         ; Load C29 into I
$7AA    $319E   SE       V1, #9E         ; Skip if V1 == 158
$7AC    $94CD   UNKNOWN  $94CD           ; Unknown 9xxx instruction
$7AE    $90A7   UNKNOWN  $90A7           ; Unknown 9xxx instruction
$7B0    $662B   LD       V6, #2B         ; Load 43 into V6
$7B2    $33D7   SE       V3, #D7         ; Skip if V3 == 215
$7B4    $1BE1   JP       $BE1            ; Jump to BE1
$7B6    $E31C   UNKNOWN  $E31C           ; Unknown Exxx instruction
$7B8    $196D   JP       $96D            ; Jump to 96D
$7BA    $5FDA   UNKNOWN  $5FDA           ; Unknown 5xxx instruction
$7BC    $B330   JP       V0, $330        ; Jump to V0 + 330
$7BE    $99D9   UNKNOWN  $99D9           ; Unknown 9xxx instruction
$7C0    $C1C7   RND      V1, #C7         ; V1 = random & C7
$7C2    $2FC8   CALL     $FC8            ; Call subroutine at FC8
$7C4    $A6DC   LD       I, $6DC         ; Load 6DC into I
$7C6    $4A0A   SNE      VA, #0A         ; Skip if VA != 10
$7C8    $025D   SYS      $25D            ; System call to 25D
$7CA    $F6E4   UNKNOWN  F6E4            ; Unknown Fxxx instruction
$7CC    $879B   UNKNOWN  879B            ; Unknown 8xxx instruction
$7CE    $8C34   ADD      VC, V3          ; VC += V3, VF = carry
$7D0    $FE2A   UNKNOWN  FE2A            ; Unknown Fxxx instruction
$7D2    $166F   JP       $66F            ; Jump to 66F
$7D4    $CD9B   RND      VD, #9B         ; VD = random & 9B
$7D6    $FC5C   UNKNOWN  FC5C            ; Unknown Fxxx instruction
$7D8    $0B4E   SYS      $B4E            ; System call to B4E
$7DA    $9803   UNKNOWN  $9803           ; Unknown 9xxx instruction
$7DC    $EF9F   UNKNOWN  $EF9F           ; Unknown Exxx instruction
$7DE    $9E11   UNKNOWN  $9E11           ; Unknown 9xxx instruction
$7E0    $1DFF   JP       $DFF            ; Jump to DFF
$7E2    $4057   SNE      V0, #57         ; Skip if V0 != 87
$7E4    $0AB7   SYS      $AB7            ; System call to AB7
$7E6    $45E2   SNE      V5, #E2         ; Skip if V5 != 226
$7E8    $F6F3   UNKNOWN  F6F3            ; Unknown Fxxx instruction
$7EA    $4822   SNE      V8, #22         ; Skip if V8 != 34
$7EC    $BE7B   JP       V0, $E7B        ; Jump to V0 + E7B
$7EE    $F88D   UNKNOWN  F88D            ; Unknown Fxxx instruction
$7F0    $E96B   UNKNOWN  $E96B           ; Unknown Exxx instruction
$7F2    $BB1A   JP       V0, $B1A        ; Jump to V0 + B1A
$7F4    $B65C   JP       V0, $65C        ; Jump to V0 + 65C
$7F6    $2E6E   CALL     $E6E            ; Call subroutine at E6E
$7F8    $B1F3   JP       V0, $1F3        ; Jump to V0 + 1F3
$7FA    $25B8   CALL     $5B8            ; Call subroutine at 5B8
$7FC    $584C   UNKNOWN  $584C           ; Unknown 5xxx instruction
$7FE    $4E6B   SNE      VE, #6B         ; Skip if VE != 107
$800    $48DC   SNE      V8, #DC         ; Skip if V8 != 220
$802    $3C1C   SE       VC, #1C         ; Skip if VC == 28
$804    $7C19   ADD      VC, #19         ; Add 25 to VC
$806    $19B5   JP       $9B5            ; Jump to 9B5
$808    $1BBE   JP       $BBE            ; Jump to BBE
$80A    $6112   LD       V1, #12         ; Load 18 into V1
$80C    $2ACD   CALL     $ACD            ; Call subroutine at ACD
$80E    $923F   UNKNOWN  $923F           ; Unknown 9xxx instruction
$810    $BE1A   JP       V0, $E1A        ; Jump to V0 + E1A
$812    $1EE7   JP       $EE7            ; Jump to EE7
$814    $7B6B   ADD      VB, #6B         ; Add 107 to VB
$816    $B73B   JP       V0, $73B        ; Jump to V0 + 73B
$818    $42E8   SNE      V2, #E8         ; Skip if V2 != 232
$81A    $FB21   UNKNOWN  FB21            ; Unknown Fxxx instruction
$81C    $4657   SNE      V6, #57         ; Skip if V6 != 87
$81E    $0E21   SYS      $E21            ; System call to E21
$820    $5152   UNKNOWN  $5152           ; Unknown 5xxx instruction
$822    $CC16   RND      VC, #16         ; VC = random & 16
$824    $E9A8   UNKNOWN  $E9A8           ; Unknown Exxx instruction
$826    $6BF9   LD       VB, #F9         ; Load 249 into VB
$828    $7F89   ADD      VF, #89         ; Add 137 to VF
$82A    $9029   UNKNOWN  $9029           ; Unknown 9xxx instruction
$82C    $87CC   UNKNOWN  87CC            ; Unknown 8xxx instruction
$82E    $3E83   SE       VE, #83         ; Skip if VE == 131
$830    $FC20   UNKNOWN  FC20            ; Unknown Fxxx instruction
$832    $7374   ADD      V3, #74         ; Add 116 to V3
$834    $C7D5   RND      V7, #D5         ; V7 = random & D5
$836    $458F   SNE      V5, #8F         ; Skip if V5 != 143
$838    $C703   RND      V7, #03         ; V7 = random & 03
$83A    $51EC   UNKNOWN  $51EC           ; Unknown 5xxx instruction
$83C    $F557   UNKNOWN  F557            ; Unknown Fxxx instruction
$83E    $6EDF   LD       VE, #DF         ; Load 223 into VE
$840    $AF68   LD       I, $F68         ; Load F68 into I
$842    $482F   SNE      V8, #2F         ; Skip if V8 != 47
$844    $9240   SNE      V2, V4          ; Skip if V2 != V4
$846    $87D2   AND      V7, VD          ; V7 &= VD
$848    $74F8   ADD      V4, #F8         ; Add 248 to V4
$84A    $0E07   SYS      $E07            ; System call to E07
$84C    $EAE2   UNKNOWN  $EAE2           ; Unknown Exxx instruction
$84E    $82A5   SUB      V2, VA          ; V2 -= VA, VF = !borrow
$850    $AEAD   LD       I, $EAD         ; Load EAD into I
$852    $FDF4   UNKNOWN  FDF4            ; Unknown Fxxx instruction
$854    $C8E6   RND      V8, #E6         ; V8 = random & E6
$856    $B97C   JP       V0, $97C        ; Jump to V0 + 97C
$858    $6885   LD       V8, #85         ; Load 133 into V8
$85A    $CB37   RND      VB, #37         ; VB = random & 37
$85C    $81BF   UNKNOWN  81BF            ; Unknown 8xxx instruction
$85E    $E7A6   UNKNOWN  $E7A6           ; Unknown Exxx instruction
$860    $DF2B   DRW      VF, V2, #B      ; Draw 11-byte sprite at VF, V2
$862    $BC42   JP       V0, $C42        ; Jump to V0 + C42
$864    $CF21   RND      VF, #21         ; VF = random & 21
$866    $ABF5   LD       I, $BF5         ; Load BF5 into I
$868    $5BD9   UNKNOWN  $5BD9           ; Unknown 5xxx instruction
$86A    $2DEC   CALL     $DEC            ; Call subroutine at DEC
$86C    $0C7D   SYS      $C7D            ; System call to C7D
$86E    $156F   JP       $56F            ; Jump to 56F
$870    $B22D   JP       V0, $22D        ; Jump to V0 + 22D
$872    $C5B7   RND      V5, #B7         ; V5 = random & B7
$874    $441D   SNE      V4, #1D         ; Skip if V4 != 29
$876    $F1AE   UNKNOWN  F1AE            ; Unknown Fxxx instruction
$878    $AB69   LD       I, $B69         ; Load B69 into I
$87A    $EAAE   UNKNOWN  $EAAE           ; Unknown Exxx instruction
$87C    $B371   JP       V0, $371        ; Jump to V0 + 371
$87E    $1A52   JP       $A52            ; Jump to A52
$880    $2244   CALL     $244            ; Call subroutine at 244
$882    $3A22   SE       VA, #22         ; Skip if VA == 34
$884    $4C47   SNE      VC, #47         ; Skip if VC != 71
$886    $EAC6   UNKNOWN  $EAC6           ; Unknown Exxx instruction
$888    $4CFC   SNE      VC, #FC         ; Skip if VC != 252
$88A    $D384   DRW      V3, V8, #4      ; Draw 4-byte sprite at V3, V8
$88C    $35DB   SE       V5, #DB         ; Skip if V5 == 219
$88E    $563D   UNKNOWN  $563D           ; Unknown 5xxx instruction
$890    $C933   RND      V9, #33         ; V9 = random & 33
$892    $8BFF   UNKNOWN  8BFF            ; Unknown 8xxx instruction
$894    $1701   JP       $701            ; Jump to 701
$896    $0993   SYS      $993            ; System call to 993
$898    $E536   UNKNOWN  $E536           ; Unknown Exxx instruction
$89A    $B8FA   JP       V0, $8FA        ; Jump to V0 + 8FA
$89C    $966B   UNKNOWN  $966B           ; Unknown 9xxx instruction
$89E    $4EE3   SNE      VE, #E3         ; Skip if VE != 227
$8A0    $4600   SNE      V6, #00         ; Skip if V6 != 0
$8A2    $6F0E   LD       VF, #0E         ; Load 14 into VF
$8A4    $7C1E   ADD      VC, #1E         ; Add 30 to VC
$8A6    $6C1A   LD       VC, #1A         ; Load 26 into VC
$8A8    $D528   DRW      V5, V2, #8      ; Draw 8-byte sprite at V5, V2
$8AA    $F112   UNKNOWN  F112            ; Unknown Fxxx instruction
$8AC    $7CC0   ADD      VC, #C0         ; Add 192 to VC
$8AE    $FF20   UNKNOWN  FF20            ; Unknown Fxxx instruction
$8B0    $24A4   CALL     $4A4            ; Call subroutine at 4A4
$8B2    $55BA   UNKNOWN  $55BA           ; Unknown 5xxx instruction
$8B4    $8056   SHR      V0              ; V0 >>= 1, VF = LSB
$8B6    $F4BD   UNKNOWN  F4BD            ; Unknown Fxxx instruction
$8B8    $C6B4   RND      V6, #B4         ; V6 = random & B4
$8BA    $34A3   SE       V4, #A3         ; Skip if V4 == 163
$8BC    $6C0C   LD       VC, #0C         ; Load 12 into VC
$8BE    $2A2D   CALL     $A2D            ; Call subroutine at A2D
$8C0    $045F   SYS      $45F            ; System call to 45F
$8C2    $A3B8   LD       I, $3B8         ; Load 3B8 into I
$8C4    $4FBD   SNE      VF, #BD         ; Skip if VF != 189
$8C6    $1CA5   JP       $CA5            ; Jump to CA5
$8C8    $E5FF   UNKNOWN  $E5FF           ; Unknown Exxx instruction
$8CA    $D919   DRW      V9, V1, #9      ; Draw 9-byte sprite at V9, V1
$8CC    $9EFE   UNKNOWN  $9EFE           ; Unknown 9xxx instruction
$8CE    $6C7F   LD       VC, #7F         ; Load 127 into VC
$8D0    $A244   LD       I, $244         ; Load 244 into I
$8D2    $8AA2   AND      VA, VA          ; VA &= VA
$8D4    $AAFC   LD       I, $AFC         ; Load AFC into I
$8D6    $D566   DRW      V5, V6, #6      ; Draw 6-byte sprite at V5, V6
$8D8    $9D35   UNKNOWN  $9D35           ; Unknown 9xxx instruction
$8DA    $AB29   LD       I, $B29         ; Load B29 into I
$8DC    $C61F   RND      V6, #1F         ; V6 = random & 1F
$8DE    $5BA4   UNKNOWN  $5BA4           ; Unknown 5xxx instruction
$8E0    $5305   UNKNOWN  $5305           ; Unknown 5xxx instruction
$8E2    $73EC   ADD      V3, #EC         ; Add 236 to V3
$8E4    $AB1B   LD       I, $B1B         ; Load B1B into I
$8E6    $EF98   UNKNOWN  $EF98           ; Unknown Exxx instruction
$8E8    $DFD5   DRW      VF, VD, #5      ; Draw 5-byte sprite at VF, VD
$8EA    $6F83   LD       VF, #83         ; Load 131 into VF
$8EC    $3921   SE       V9, #21         ; Skip if V9 == 33
$8EE    $A6AA   LD       I, $6AA         ; Load 6AA into I
$8F0    $9974   UNKNOWN  $9974           ; Unknown 9xxx instruction
$8F2    $5C51   UNKNOWN  $5C51           ; Unknown 5xxx instruction
$8F4    $ADFB   LD       I, $DFB         ; Load DFB into I
$8F6    $ABE0   LD       I, $BE0         ; Load BE0 into I
$8F8    $F032   UNKNOWN  F032            ; Unknown Fxxx instruction
$8FA    $853E   SHL      V5              ; V5 <<= 1, VF = MSB
$8FC    $C7F3   RND      V7, #F3         ; V7 = random & F3
$8FE    $C64E   RND      V6, #4E         ; V6 = random & 4E
$900    $BF44   JP       V0, $F44        ; Jump to V0 + F44
$902    $ED67   UNKNOWN  $ED67           ; Unknown Exxx instruction
$904    $C6EA   RND      V6, #EA         ; V6 = random & EA
$906    $E4A1   SKNP     V4              ; Skip if key V4 not pressed
$908    $7505   ADD      V5, #05         ; Add 5 to V5
$90A    $06F1   SYS      $6F1            ; System call to 6F1
$90C    $CF5F   RND      VF, #5F         ; VF = random & 5F
$90E    $83BF   UNKNOWN  83BF            ; Unknown 8xxx instruction
$910    $1285   JP       $285            ; Jump to 285
$912    $02F4   SYS      $2F4            ; System call to 2F4
$914    $5205   UNKNOWN  $5205           ; Unknown 5xxx instruction
$916    $A3F5   LD       I, $3F5         ; Load 3F5 into I
$918    $0279   SYS      $279            ; System call to 279
$91A    $8594   ADD      V5, V9          ; V5 += V9, VF = carry
$91C    $BD9E   JP       V0, $D9E        ; Jump to V0 + D9E
$91E    $1F12   JP       $F12            ; Jump to F12
$920    $53B8   UNKNOWN  $53B8           ; Unknown 5xxx instruction
$922    $0E9E   SYS      $E9E            ; System call to E9E
$924    $7E60   ADD      VE, #60         ; Add 96 to VE
$926    $9EF3   UNKNOWN  $9EF3           ; Unknown 9xxx instruction
$928    $4584   SNE      V5, #84         ; Skip if V5 != 132
$92A    $E014   UNKNOWN  $E014           ; Unknown Exxx instruction
$92C    $ABFA   LD       I, $BFA         ; Load BFA into I
$92E    $8106   SHR      V1              ; V1 >>= 1, VF = LSB
$930    $D07F   DRW      V0, V7, #F      ; Draw 15-byte sprite at V0, V7
$932    $112E   JP       $12E            ; Jump to 12E
$934    $94CB   UNKNOWN  $94CB           ; Unknown 9xxx instruction
$936    $3B43   SE       VB, #43         ; Skip if VB == 67
$938    $B8D4   JP       V0, $8D4        ; Jump to V0 + 8D4
$93A    $B43E   JP       V0, $43E        ; Jump to V0 + 43E
$93C    $0B6B   SYS      $B6B            ; System call to B6B
$93E    $3BD2   SE       VB, #D2         ; Skip if VB == 210
$940    $E4E3   UNKNOWN  $E4E3           ; Unknown Exxx instruction
$942    $D997   DRW      V9, V9, #7      ; Draw 7-byte sprite at V9, V9
$944    $883D   UNKNOWN  883D            ; Unknown 8xxx instruction
$946    $A25F   LD       I, $25F         ; Load 25F into I
$948    $503F   UNKNOWN  $503F           ; Unknown 5xxx instruction
$94A    $9BD2   UNKNOWN  $9BD2           ; Unknown 9xxx instruction
$94C    $5E04   UNKNOWN  $5E04           ; Unknown 5xxx instruction
$94E    $B4CB   JP       V0, $4CB        ; Jump to V0 + 4CB
$950    $2D95   CALL     $D95            ; Call subroutine at D95
$952    $A855   LD       I, $855         ; Load 855 into I
$954    $17C2   JP       $7C2            ; Jump to 7C2
$956    $B244   JP       V0, $244        ; Jump to V0 + 244
$958    $DE36   DRW      VE, V3, #6      ; Draw 6-byte sprite at VE, V3
$95A    $7D98   ADD      VD, #98         ; Add 152 to VD
$95C    $6C72   LD       VC, #72         ; Load 114 into VC
$95E    $0BE9   SYS      $BE9            ; System call to BE9
$960    $1287   JP       $287            ; Jump to 287
$962    $F872   UNKNOWN  F872            ; Unknown Fxxx instruction
$964    $4750   SNE      V7, #50         ; Skip if V7 != 80
$966    $71E1   ADD      V1, #E1         ; Add 225 to V1
$968    $49F1   SNE      V9, #F1         ; Skip if V9 != 241
$96A    $E4F3   UNKNOWN  $E4F3           ; Unknown Exxx instruction
$96C    $725E   ADD      V2, #5E         ; Add 94 to V2
$96E    $2C62   CALL     $C62            ; Call subroutine at C62
$970    $DCC4   DRW      VC, VC, #4      ; Draw 4-byte sprite at VC, VC
$972    $84E8   UNKNOWN  84E8            ; Unknown 8xxx instruction
$974    $B7E4   JP       V0, $7E4        ; Jump to V0 + 7E4
$976    $6002   LD       V0, #02         ; Load 2 into V0
$978    $7234   ADD      V2, #34         ; Add 52 to V2
$97A    $B757   JP       V0, $757        ; Jump to V0 + 757
$97C    $525C   UNKNOWN  $525C           ; Unknown 5xxx instruction
$97E    $F05F   UNKNOWN  F05F            ; Unknown Fxxx instruction
$980    $A342   LD       I, $342         ; Load 342 into I
$982    $0F00   SYS      $F00            ; System call to F00
$984    $E1BA   UNKNOWN  $E1BA           ; Unknown Exxx instruction
$986    $1F76   JP       $F76            ; Jump to F76
$988    $CB9E   RND      VB, #9E         ; VB = random & 9E
$98A    $A981   LD       I, $981         ; Load 981 into I
$98C    $0DA8   SYS      $DA8            ; System call to DA8
$98E    $724B   ADD      V2, #4B         ; Add 75 to V2
$990    $7DB7   ADD      VD, #B7         ; Add 183 to VD
$992    $737D   ADD      V3, #7D         ; Add 125 to V3
$994    $CAF7   RND      VA, #F7         ; VA = random & F7
$996    $E5FA   UNKNOWN  $E5FA           ; Unknown Exxx instruction
$998    $43F0   SNE      V3, #F0         ; Skip if V3 != 240
$99A    $554D   UNKNOWN  $554D           ; Unknown 5xxx instruction
$99C    $F0C0   UNKNOWN  F0C0            ; Unknown Fxxx instruction
$99E    $52E1   UNKNOWN  $52E1           ; Unknown 5xxx instruction
$9A0    $094E   SYS      $94E            ; System call to 94E
$9A2    $E0F2   UNKNOWN  $E0F2           ; Unknown Exxx instruction
$9A4    $EEF5   UNKNOWN  $EEF5           ; Unknown Exxx instruction
$9A6    $3703   SE       V7, #03         ; Skip if V7 == 3
$9A8    $4D55   SNE      VD, #55         ; Skip if VD != 85
$9AA    $8C71   OR       VC, V7          ; VC |= V7
$9AC    $A097   LD       I, $097         ; Load 097 into I
$9AE    $5CE8   UNKNOWN  $5CE8           ; Unknown 5xxx instruction
$9B0    $BB7F   JP       V0, $B7F        ; Jump to V0 + B7F
$9B2    $C6D7   RND      V6, #D7         ; V6 = random & D7
$9B4    $E3B0   UNKNOWN  $E3B0           ; Unknown Exxx instruction
$9B6    $3761   SE       V7, #61         ; Skip if V7 == 97
$9B8    $62EF   LD       V2, #EF         ; Load 239 into V2
$9BA    $B8D1   JP       V0, $8D1        ; Jump to V0 + 8D1
$9BC    $6A4C   LD       VA, #4C         ; Load 76 into VA
$9BE    $5D8E   UNKNOWN  $5D8E           ; Unknown 5xxx instruction
$9C0    $B707   JP       V0, $707        ; Jump to V0 + 707
$9C2    $3637   SE       V6, #37         ; Skip if V6 == 55
$9C4    $7F84   ADD      VF, #84         ; Add 132 to VF
$9C6    $0AC4   SYS      $AC4            ; System call to AC4
$9C8    $9869   UNKNOWN  $9869           ; Unknown 9xxx instruction
$9CA    $3367   SE       V3, #67         ; Skip if V3 == 103
$9CC    $65E6   LD       V5, #E6         ; Load 230 into V5
$9CE    $0C30   SYS      $C30            ; System call to C30
$9D0    $C4B2   RND      V4, #B2         ; V4 = random & B2
$9D2    $249C   CALL     $49C            ; Call subroutine at 49C
$9D4    $F43D   UNKNOWN  F43D            ; Unknown Fxxx instruction
$9D6    $FE6B   UNKNOWN  FE6B            ; Unknown Fxxx instruction
$9D8    $8ED2   AND      VE, VD          ; VE &= VD
$9DA    $96E0   SNE      V6, VE          ; Skip if V6 != VE
$9DC    $9460   SNE      V4, V6          ; Skip if V4 != V6
$9DE    $DB3D   DRW      VB, V3, #D      ; Draw 13-byte sprite at VB, V3
$9E0    $8D4A   UNKNOWN  8D4A            ; Unknown 8xxx instruction
$9E2    $C931   RND      V9, #31         ; V9 = random & 31
$9E4    $F3A8   UNKNOWN  F3A8            ; Unknown Fxxx instruction
$9E6    $7E86   ADD      VE, #86         ; Add 134 to VE
$9E8    $8392   AND      V3, V9          ; V3 &= V9
$9EA    $213F   CALL     $13F            ; Call subroutine at 13F
$9EC    $E9DB   UNKNOWN  $E9DB           ; Unknown Exxx instruction
$9EE    $ED5A   UNKNOWN  $ED5A           ; Unknown Exxx instruction
$9F0    $11A3   JP       $1A3            ; Jump to 1A3
$9F2    $BB27   JP       V0, $B27        ; Jump to V0 + B27
$9F4    $F97B   UNKNOWN  F97B            ; Unknown Fxxx instruction
$9F6    $44BB   SNE      V4, #BB         ; Skip if V4 != 187
$9F8    $3865   SE       V8, #65         ; Skip if V8 == 101
$9FA    $C41D   RND      V4, #1D         ; V4 = random & 1D
$9FC    $8727   SUBN     V7, V2          ; V7 = V2 - V7, VF = !borrow
$9FE    $2CBC   CALL     $CBC            ; Call subroutine at CBC
$A00    $1511   JP       $511            ; Jump to 511
$A02    $29E8   CALL     $9E8            ; Call subroutine at 9E8
$A04    $5032   UNKNOWN  $5032           ; Unknown 5xxx instruction
$A06    $87BE   SHL      V7              ; V7 <<= 1, VF = MSB
$A08    $9410   SNE      V4, V1          ; Skip if V4 != V1
$A0A    $01D6   SYS      $1D6            ; System call to 1D6
$A0C    $0ECB   SYS      $ECB            ; System call to ECB
$A0E    $78D9   ADD      V8, #D9         ; Add 217 to V8
$A10    $21F3   CALL     $1F3            ; Call subroutine at 1F3
$A12    $4DB1   SNE      VD, #B1         ; Skip if VD != 177
$A14    $0E9E   SYS      $E9E            ; System call to E9E
$A16    $CBF9   RND      VB, #F9         ; VB = random & F9
$A18    $A173   LD       I, $173         ; Load 173 into I
$A1A    $49EE   SNE      V9, #EE         ; Skip if V9 != 238
$A1C    $13E8   JP       $3E8            ; Jump to 3E8
$A1E    $AEE6   LD       I, $EE6         ; Load EE6 into I
$A20    $4D37   SNE      VD, #37         ; Skip if VD != 55
$A22    $CF6F   RND      VF, #6F         ; VF = random & 6F
$A24    $BB14   JP       V0, $B14        ; Jump to V0 + B14
$A26    $6BD6   LD       VB, #D6         ; Load 214 into VB
$A28    $222A   CALL     $22A            ; Call subroutine at 22A
$A2A    $23D2   CALL     $3D2            ; Call subroutine at 3D2
$A2C    $6EEF   LD       VE, #EF         ; Load 239 into VE
$A2E    $13F2   JP       $3F2            ; Jump to 3F2
$A30    $FD58   UNKNOWN  FD58            ; Unknown Fxxx instruction
$A32    $0375   SYS      $375            ; System call to 375
$A34    $993C   UNKNOWN  $993C           ; Unknown 9xxx instruction
$A36    $4004   SNE      V0, #04         ; Skip if V0 != 4
$A38    $7116   ADD      V1, #16         ; Add 22 to V1
$A3A    $7B8C   ADD      VB, #8C         ; Add 140 to VB
$A3C    $4F21   SNE      VF, #21         ; Skip if VF != 33
$A3E    $4C22   SNE      VC, #22         ; Skip if VC != 34
$A40    $CD77   RND      VD, #77         ; VD = random & 77
$A42    $4A2B   SNE      VA, #2B         ; Skip if VA != 43
$A44    $D572   DRW      V5, V7, #2      ; Draw 2-byte sprite at V5, V7
$A46    $90F3   UNKNOWN  $90F3           ; Unknown 9xxx instruction
$A48    $E183   UNKNOWN  $E183           ; Unknown Exxx instruction
$A4A    $E797   UNKNOWN  $E797           ; Unknown Exxx instruction
$A4C    $A9A2   LD       I, $9A2         ; Load 9A2 into I
$A4E    $AF1F   LD       I, $F1F         ; Load F1F into I
$A50    $D7D0   DRW      V7, VD, #0      ; Draw 0-byte sprite at V7, VD
$A52    $83EF   UNKNOWN  83EF            ; Unknown 8xxx instruction
$A54    $53A0   SE       V3, VA          ; Skip if V3 == VA
$A56    $57DE   UNKNOWN  $57DE           ; Unknown 5xxx instruction
$A58    $D4BE   DRW      V4, VB, #E      ; Draw 14-byte sprite at V4, VB
$A5A    $F20B   UNKNOWN  F20B            ; Unknown Fxxx instruction
$A5C    $E491   UNKNOWN  $E491           ; Unknown Exxx instruction
$A5E    $3995   SE       V9, #95         ; Skip if V9 == 149
$A60    $EC26   UNKNOWN  $EC26           ; Unknown Exxx instruction
$A62    $7AFB   ADD      VA, #FB         ; Add 251 to VA
$A64    $919D   UNKNOWN  $919D           ; Unknown 9xxx instruction
$A66    $31F6   SE       V1, #F6         ; Skip if V1 == 246
$A68    $A409   LD       I, $409         ; Load 409 into I
$A6A    $560C   UNKNOWN  $560C           ; Unknown 5xxx instruction
$A6C    $12B0   JP       $2B0            ; Jump to 2B0
$A6E    $5F91   UNKNOWN  $5F91           ; Unknown 5xxx instruction
$A70    $0CF8   SYS      $CF8            ; System call to CF8
$A72    $B66D   JP       V0, $66D        ; Jump to V0 + 66D
$A74    $708E   ADD      V0, #8E         ; Add 142 to V0
$A76    $4ED9   SNE      VE, #D9         ; Skip if VE != 217
$A78    $7305   ADD      V3, #05         ; Add 5 to V3
$A7A    $0D9C   SYS      $D9C            ; System call to D9C
$A7C    $057F   SYS      $57F            ; System call to 57F
$A7E    $D2CD   DRW      V2, VC, #D      ; Draw 13-byte sprite at V2, VC
$A80    $F388   UNKNOWN  F388            ; Unknown Fxxx instruction
$A82    $C38B   RND      V3, #8B         ; V3 = random & 8B
$A84    $03BB   SYS      $3BB            ; System call to 3BB
$A86    $0D97   SYS      $D97            ; System call to D97
$A88    $B9B4   JP       V0, $9B4        ; Jump to V0 + 9B4
$A8A    $D112   DRW      V1, V1, #2      ; Draw 2-byte sprite at V1, V1
$A8C    $77D2   ADD      V7, #D2         ; Add 210 to V7
$A8E    $69AC   LD       V9, #AC         ; Load 172 into V9
$A90    $D9C4   DRW      V9, VC, #4      ; Draw 4-byte sprite at V9, VC
$A92    $4264   SNE      V2, #64         ; Skip if V2 != 100
$A94    $9E2C   UNKNOWN  $9E2C           ; Unknown 9xxx instruction
$A96    $F242   UNKNOWN  F242            ; Unknown Fxxx instruction
$A98    $D896   DRW      V8, V9, #6      ; Draw 6-byte sprite at V8, V9
$A9A    $7E6B   ADD      VE, #6B         ; Add 107 to VE
$A9C    $0B4C   SYS      $B4C            ; System call to B4C
$A9E    $97E2   UNKNOWN  $97E2           ; Unknown 9xxx instruction
$AA0    $8161   OR       V1, V6          ; V1 |= V6
$AA2    $679F   LD       V7, #9F         ; Load 159 into V7
$AA4    $F6DF   UNKNOWN  F6DF            ; Unknown Fxxx instruction
$AA6    $F8AF   UNKNOWN  F8AF            ; Unknown Fxxx instruction
$AA8    $8D78   UNKNOWN  8D78            ; Unknown 8xxx instruction
$AAA    $8CE7   SUBN     VC, VE          ; VC = VE - VC, VF = !borrow
$AAC    $A35D   LD       I, $35D         ; Load 35D into I
$AAE    $9F51   UNKNOWN  $9F51           ; Unknown 9xxx instruction
$AB0    $5C3D   UNKNOWN  $5C3D           ; Unknown 5xxx instruction
$AB2    $87AC   UNKNOWN  87AC            ; Unknown 8xxx instruction
$AB4    $37DA   SE       V7, #DA         ; Skip if V7 == 218
$AB6    $5834   UNKNOWN  $5834           ; Unknown 5xxx instruction
$AB8    $6DA7   LD       VD, #A7         ; Load 167 into VD
$ABA    $C2FD   RND      V2, #FD         ; V2 = random & FD
$ABC    $F47E   UNKNOWN  F47E            ; Unknown Fxxx instruction
$ABE    $0E18   SYS      $E18            ; System call to E18
$AC0    $D822   DRW      V8, V2, #2      ; Draw 2-byte sprite at V8, V2
$AC2    $266A   CALL     $66A            ; Call subroutine at 66A
$AC4    $9F14   UNKNOWN  $9F14           ; Unknown 9xxx instruction
$AC6    $1C59   JP       $C59            ; Jump to C59
$AC8    $960F   UNKNOWN  $960F           ; Unknown 9xxx instruction
$ACA    $29DA   CALL     $9DA            ; Call subroutine at 9DA
$ACC    $8F30   LD       VF, V3          ; VF = V3
$ACE    $A391   LD       I, $391         ; Load 391 into I
$AD0    $02D9   SYS      $2D9            ; System call to 2D9
$AD2    $A98C   LD       I, $98C         ; Load 98C into I
$AD4    $9F4A   UNKNOWN  $9F4A           ; Unknown 9xxx instruction
$AD6    $B41E   JP       V0, $41E        ; Jump to V0 + 41E
$AD8    $6E46   LD       VE, #46         ; Load 70 into VE
$ADA    $1A5E   JP       $A5E            ; Jump to A5E
$ADC    $791A   ADD      V9, #1A         ; Add 26 to V9
$ADE    $60D5   LD       V0, #D5         ; Load 213 into V0
$AE0    $82AE   SHL      V2              ; V2 <<= 1, VF = MSB
$AE2    $C7B8   RND      V7, #B8         ; V7 = random & B8
$AE4    $C4CC   RND      V4, #CC         ; V4 = random & CC
$AE6    $3012   SE       V0, #12         ; Skip if V0 == 18
$AE8    $C3A9   RND      V3, #A9         ; V3 = random & A9
$AEA    $6DB3   LD       VD, #B3         ; Load 179 into VD
$AEC    $577F   UNKNOWN  $577F           ; Unknown 5xxx instruction
$AEE    $575F   UNKNOWN  $575F           ; Unknown 5xxx instruction
$AF0    $5B7E   UNKNOWN  $5B7E           ; Unknown 5xxx instruction
$AF2    $85E2   AND      V5, VE          ; V5 &= VE
$AF4    $E57A   UNKNOWN  $E57A           ; Unknown Exxx instruction
$AF6    $9C39   UNKNOWN  $9C39           ; Unknown 9xxx instruction
$AF8    $7EEF   ADD      VE, #EF         ; Add 239 to VE
$AFA    $656C   LD       V5, #6C         ; Load 108 into V5
$AFC    $C7B2   RND      V7, #B2         ; V7 = random & B2
$AFE    $BD8B   JP       V0, $D8B        ; Jump to V0 + D8B
$B00    $C325   RND      V3, #25         ; V3 = random & 25
$B02    $2075   CALL     $075            ; Call subroutine at 075
$B04    $FBC0   UNKNOWN  FBC0            ; Unknown Fxxx instruction
$B06    $32A0   SE       V2, #A0         ; Skip if V2 == 160
$B08    $FEDD   UNKNOWN  FEDD            ; Unknown Fxxx instruction
$B0A    $D0F7   DRW      V0, VF, #7      ; Draw 7-byte sprite at V0, VF
$B0C    $56E5   UNKNOWN  $56E5           ; Unknown 5xxx instruction
$B0E    $5734   UNKNOWN  $5734           ; Unknown 5xxx instruction
$B10    $18CE   JP       $8CE            ; Jump to 8CE
$B12    $5E38   UNKNOWN  $5E38           ; Unknown 5xxx instruction
$B14    $63BD   LD       V3, #BD         ; Load 189 into V3
$B16    $8494   ADD      V4, V9          ; V4 += V9, VF = carry
$B18    $8CE6   SHR      VC              ; VC >>= 1, VF = LSB
$B1A    $BAED   JP       V0, $AED        ; Jump to V0 + AED
$B1C    $D014   DRW      V0, V1, #4      ; Draw 4-byte sprite at V0, V1
$B1E    $F7F3   UNKNOWN  F7F3            ; Unknown Fxxx instruction
$B20    $018E   SYS      $18E            ; System call to 18E
$B22    $D64D   DRW      V6, V4, #D      ; Draw 13-byte sprite at V6, V4
$B24    $6C87   LD       VC, #87         ; Load 135 into VC
$B26    $6CAC   LD       VC, #AC         ; Load 172 into VC
$B28    $544A   UNKNOWN  $544A           ; Unknown 5xxx instruction
$B2A    $EB16   UNKNOWN  $EB16           ; Unknown Exxx instruction
$B2C    $FCF8   UNKNOWN  FCF8            ; Unknown Fxxx instruction
$B2E    $BF03   JP       V0, $F03        ; Jump to V0 + F03
$B30    $8AE1   OR       VA, VE          ; VA |= VE
$B32    $46CF   SNE      V6, #CF         ; Skip if V6 != 207
$B34    $80E8   UNKNOWN  80E8            ; Unknown 8xxx instruction
$B36    $96FF   UNKNOWN  $96FF           ; Unknown 9xxx instruction
$B38    $3FD6   SE       VF, #D6         ; Skip if VF == 214
$B3A    $9EE9   UNKNOWN  $9EE9           ; Unknown 9xxx instruction
$B3C    $9D13   UNKNOWN  $9D13           ; Unknown 9xxx instruction
$B3E    $2DFB   CALL     $DFB            ; Call subroutine at DFB
$B40    $F927   UNKNOWN  F927            ; Unknown Fxxx instruction
$B42    $C82A   RND      V8, #2A         ; V8 = random & 2A
$B44    $EFE0   UNKNOWN  $EFE0           ; Unknown Exxx instruction
$B46    $2F0D   CALL     $F0D            ; Call subroutine at F0D
$B48    $8AED   UNKNOWN  8AED            ; Unknown 8xxx instruction
$B4A    $4C3F   SNE      VC, #3F         ; Skip if VC != 63
$B4C    $E133   UNKNOWN  $E133           ; Unknown Exxx instruction
$B4E    $008B   SYS      $08B            ; System call to 08B
$B50    $7C1B   ADD      VC, #1B         ; Add 27 to VC
$B52    $35CC   SE       V5, #CC         ; Skip if V5 == 204
$B54    $1918   JP       $918            ; Jump to 918
$B56    $433D   SNE      V3, #3D         ; Skip if V3 != 61
$B58    $EEBC   UNKNOWN  $EEBC           ; Unknown Exxx instruction
$B5A    $AA10   LD       I, $A10         ; Load A10 into I
$B5C    $F787   UNKNOWN  F787            ; Unknown Fxxx instruction
$B5E    $1683   JP       $683            ; Jump to 683
$B60    $E6A2   UNKNOWN  $E6A2           ; Unknown Exxx instruction
$B62    $9FD4   UNKNOWN  $9FD4           ; Unknown 9xxx instruction
$B64    $F4BA   UNKNOWN  F4BA            ; Unknown Fxxx instruction
$B66    $3614   SE       V6, #14         ; Skip if V6 == 20
$B68    $73C1   ADD      V3, #C1         ; Add 193 to V3
$B6A    $B24A   JP       V0, $24A        ; Jump to V0 + 24A
$B6C    $7790   ADD      V7, #90         ; Add 144 to V7
$B6E    $89F9   UNKNOWN  89F9            ; Unknown 8xxx instruction
$B70    $A950   LD       I, $950         ; Load 950 into I
$B72    $B4D2   JP       V0, $4D2        ; Jump to V0 + 4D2
$B74    $7548   ADD      V5, #48         ; Add 72 to V5
$B76    $7F29   ADD      VF, #29         ; Add 41 to VF
$B78    $1CE6   JP       $CE6            ; Jump to CE6
$B7A    $C0E7   RND      V0, #E7         ; V0 = random & E7
$B7C    $C0F5   RND      V0, #F5         ; V0 = random & F5
$B7E    $4867   SNE      V8, #67         ; Skip if V8 != 103
$B80    $D7AE   DRW      V7, VA, #E      ; Draw 14-byte sprite at V7, VA
$B82    $2927   CALL     $927            ; Call subroutine at 927
$B84    $FC68   UNKNOWN  FC68            ; Unknown Fxxx instruction
$B86    $7860   ADD      V8, #60         ; Add 96 to V8
$B88    $2CD6   CALL     $CD6            ; Call subroutine at CD6
$B8A    $9242   UNKNOWN  $9242           ; Unknown 9xxx instruction
$B8C    $6AEF   LD       VA, #EF         ; Load 239 into VA
$B8E    $B3A9   JP       V0, $3A9        ; Jump to V0 + 3A9
$B90    $648F   LD       V4, #8F         ; Load 143 into V4
$B92    $15FB   JP       $5FB            ; Jump to 5FB
$B94    $46C7   SNE      V6, #C7         ; Skip if V6 != 199
$B96    $6D24   LD       VD, #24         ; Load 36 into VD
$B98    $B4C5   JP       V0, $4C5        ; Jump to V0 + 4C5
$B9A    $1948   JP       $948            ; Jump to 948
$B9C    $19F5   JP       $9F5            ; Jump to 9F5
$B9E    $65BA   LD       V5, #BA         ; Load 186 into V5
$BA0    $55A9   UNKNOWN  $55A9           ; Unknown 5xxx instruction
$BA2    $16C6   JP       $6C6            ; Jump to 6C6
$BA4    $DCB0   DRW      VC, VB, #0      ; Draw 0-byte sprite at VC, VB
$BA6    $F165   LD       V1, [I]         ; Load V0-V1 from I
$BA8    $1B61   JP       $B61            ; Jump to B61
$BAA    $C5D3   RND      V5, #D3         ; V5 = random & D3
$BAC    $AE87   LD       I, $E87         ; Load E87 into I
$BAE    $AB5D   LD       I, $B5D         ; Load B5D into I
$BB0    $0558   SYS      $558            ; System call to 558
$BB2    $DBBB   DRW      VB, VB, #B      ; Draw 11-byte sprite at VB, VB
$BB4    $D977   DRW      V9, V7, #7      ; Draw 7-byte sprite at V9, V7
$BB6    $9F89   UNKNOWN  $9F89           ; Unknown 9xxx instruction
$BB8    $6463   LD       V4, #63         ; Load 99 into V4
$BBA    $6CA5   LD       VC, #A5         ; Load 165 into VC
$BBC    $B9DB   JP       V0, $9DB        ; Jump to V0 + 9DB
$BBE    $E2D0   UNKNOWN  $E2D0           ; Unknown Exxx instruction
$BC0    $DC07   DRW      VC, V0, #7      ; Draw 7-byte sprite at VC, V0
$BC2    $4DBE   SNE      VD, #BE         ; Skip if VD != 190
$BC4    $5BCC   UNKNOWN  $5BCC           ; Unknown 5xxx instruction
$BC6    $ED42   UNKNOWN  $ED42           ; Unknown Exxx instruction
$BC8    $CCFF   RND      VC, #FF         ; VC = random & FF
$BCA    $5828   UNKNOWN  $5828           ; Unknown 5xxx instruction
$BCC    $5B10   SE       VB, V1          ; Skip if VB == V1
$BCE    $239E   CALL     $39E            ; Call subroutine at 39E
$BD0    $08DF   SYS      $8DF            ; System call to 8DF
$BD2    $6A69   LD       VA, #69         ; Load 105 into VA
$BD4    $7100   ADD      V1, #00         ; Add 0 to V1
$BD6    $4E4E   SNE      VE, #4E         ; Skip if VE != 78
$BD8    $A02B   LD       I, $02B         ; Load 02B into I
$BDA    $9DD5   UNKNOWN  $9DD5           ; Unknown 9xxx instruction
$BDC    $83E1   OR       V3, VE          ; V3 |= VE
$BDE    $8B3A   UNKNOWN  8B3A            ; Unknown 8xxx instruction
$BE0    $8373   XOR      V3, V7          ; V3 ^= V7
$BE2    $F29F   UNKNOWN  F29F            ; Unknown Fxxx instruction
$BE4    $A529   LD       I, $529         ; Load 529 into I
$BE6    $B1FE   JP       V0, $1FE        ; Jump to V0 + 1FE
$BE8    $733A   ADD      V3, #3A         ; Add 58 to V3
$BEA    $B54E   JP       V0, $54E        ; Jump to V0 + 54E
$BEC    $A40E   LD       I, $40E         ; Load 40E into I
$BEE    $B11A   JP       V0, $11A        ; Jump to V0 + 11A
$BF0    $D991   DRW      V9, V9, #1      ; Draw 1-byte sprite at V9, V9
$BF2    $B9D3   JP       V0, $9D3        ; Jump to V0 + 9D3
$BF4    $093A   SYS      $93A            ; System call to 93A
$BF6    $F627   UNKNOWN  F627            ; Unknown Fxxx instruction
$BF8    $29E6   CALL     $9E6            ; Call subroutine at 9E6
$BFA    $495D   SNE      V9, #5D         ; Skip if V9 != 93
$BFC    $8389   UNKNOWN  8389            ; Unknown 8xxx instruction
$BFE    $3196   SE       V1, #96         ; Skip if V1 == 150
$C00    $3C87   SE       VC, #87         ; Skip if VC == 135
$C02    $B416   JP       V0, $416        ; Jump to V0 + 416
$C04    $3993   SE       V9, #93         ; Skip if V9 == 147
$C06    $2B60   CALL     $B60            ; Call subroutine at B60
$C08    $3113   SE       V1, #13         ; Skip if V1 == 19
$C0A    $4727   SNE      V7, #27         ; Skip if V7 != 39
$C0C    $F8DD   UNKNOWN  F8DD            ; Unknown Fxxx instruction
$C0E    $01F0   SYS      $1F0            ; System call to 1F0
$C10    $6616   LD       V6, #16         ; Load 22 into V6
$C12    $B05D   JP       V0, $05D        ; Jump to V0 + 05D
$C14    $E0C0   UNKNOWN  $E0C0           ; Unknown Exxx instruction
$C16    $5C2A   UNKNOWN  $5C2A           ; Unknown 5xxx instruction
$C18    $C24A   RND      V2, #4A         ; V2 = random & 4A
$C1A    $E086   UNKNOWN  $E086           ; Unknown Exxx instruction
$C1C    $8A5C   UNKNOWN  8A5C            ; Unknown 8xxx instruction
$C1E    $E04F   UNKNOWN  $E04F           ; Unknown Exxx instruction
$C20    $0DD9   SYS      $DD9            ; System call to DD9
$C22    $2849   CALL     $849            ; Call subroutine at 849
$C24    $6BEB   LD       VB, #EB         ; Load 235 into VB
$C26    $3F25   SE       VF, #25         ; Skip if VF == 37
$C28    $30AF   SE       V0, #AF         ; Skip if V0 == 175
$C2A    $B89C   JP       V0, $89C        ; Jump to V0 + 89C
$C2C    $111F   JP       $11F            ; Jump to 11F
$C2E    $853D   UNKNOWN  853D            ; Unknown 8xxx instruction
$C30    $8534   ADD      V5, V3          ; V5 += V3, VF = carry
$C32    $2E6F   CALL     $E6F            ; Call subroutine at E6F
$C34    $6B73   LD       VB, #73         ; Load 115 into VB
$C36    $6164   LD       V1, #64         ; Load 100 into V1
$C38    $AA79   LD       I, $A79         ; Load A79 into I
$C3A    $BD70   JP       V0, $D70        ; Jump to V0 + D70
$C3C    $4CAC   SNE      VC, #AC         ; Skip if VC != 172
$C3E    $2191   CALL     $191            ; Call subroutine at 191
$C40    $AED4   LD       I, $ED4         ; Load ED4 into I
$C42    $753E   ADD      V5, #3E         ; Add 62 to V5
$C44    $55EA   UNKNOWN  $55EA           ; Unknown 5xxx instruction
$C46    $D570   DRW      V5, V7, #0      ; Draw 0-byte sprite at V5, V7
$C48    $07DD   SYS      $7DD            ; System call to 7DD
$C4A    $BA08   JP       V0, $A08        ; Jump to V0 + A08
$C4C    $318D   SE       V1, #8D         ; Skip if V1 == 141
$C4E    $BDB3   JP       V0, $DB3        ; Jump to V0 + DB3
$C50    $799F   ADD      V9, #9F         ; Add 159 to V9
$C52    $E0BA   UNKNOWN  $E0BA           ; Unknown Exxx instruction
$C54    $2C78   CALL     $C78            ; Call subroutine at C78
$C56    $7085   ADD      V0, #85         ; Add 133 to V0
$C58    $6FED   LD       VF, #ED         ; Load 237 into VF
$C5A    $59F0   SE       V9, VF          ; Skip if V9 == VF
$C5C    $B275   JP       V0, $275        ; Jump to V0 + 275
$C5E    $2EA0   CALL     $EA0            ; Call subroutine at EA0
$C60    $5CEF   UNKNOWN  $5CEF           ; Unknown 5xxx instruction
$C62    $1D25   JP       $D25            ; Jump to D25
$C64    $09AE   SYS      $9AE            ; System call to 9AE
$C66    $7F07   ADD      VF, #07         ; Add 7 to VF
$C68    $87E7   SUBN     V7, VE          ; V7 = VE - V7, VF = !borrow
$C6A    $C617   RND      V6, #17         ; V6 = random & 17
$C6C    $BF7F   JP       V0, $F7F        ; Jump to V0 + F7F
$C6E    $1525   JP       $525            ; Jump to 525
$C70    $4421   SNE      V4, #21         ; Skip if V4 != 33
$C72    $63F9   LD       V3, #F9         ; Load 249 into V3
$C74    $57B6   UNKNOWN  $57B6           ; Unknown 5xxx instruction
$C76    $EE0D   UNKNOWN  $EE0D           ; Unknown Exxx instruction
$C78    $6D86   LD       VD, #86         ; Load 134 into VD
$C7A    $C6A8   RND      V6, #A8         ; V6 = random & A8
$C7C    $B955   JP       V0, $955        ; Jump to V0 + 955
$C7E    $B307   JP       V0, $307        ; Jump to V0 + 307
$C80    $C4CA   RND      V4, #CA         ; V4 = random & CA
$C82    $03FB   SYS      $3FB            ; System call to 3FB
$C84    $DAF9   DRW      VA, VF, #9      ; Draw 9-byte sprite at VA, VF
$C86    $C057   RND      V0, #57         ; V0 = random & 57
$C88    $CB5B   RND      VB, #5B         ; VB = random & 5B
$C8A    $D29C   DRW      V2, V9, #C      ; Draw 12-byte sprite at V2, V9
$C8C    $8016   SHR      V0              ; V0 >>= 1, VF = LSB
$C8E    $1FBD   JP       $FBD            ; Jump to FBD
$C90    $7A9B   ADD      VA, #9B         ; Add 155 to VA
$C92    $9B28   UNKNOWN  $9B28           ; Unknown 9xxx instruction
$C94    $E376   UNKNOWN  $E376           ; Unknown Exxx instruction
$C96    $3184   SE       V1, #84         ; Skip if V1 == 132
$C98    $5BDB   UNKNOWN  $5BDB           ; Unknown 5xxx instruction
$C9A    $36A3   SE       V6, #A3         ; Skip if V6 == 163
$C9C    $9846   UNKNOWN  $9846           ; Unknown 9xxx instruction
$C9E    $E4AD   UNKNOWN  $E4AD           ; Unknown Exxx instruction
$CA0    $8D26   SHR      VD              ; VD >>= 1, VF = LSB
$CA2    $0041   SYS      $041            ; System call to 041
$CA4    $C37C   RND      V3, #7C         ; V3 = random & 7C
$CA6    $DD73   DRW      VD, V7, #3      ; Draw 3-byte sprite at VD, V7
$CA8    $3814   SE       V8, #14         ; Skip if V8 == 20
$CAA    $8659   UNKNOWN  8659            ; Unknown 8xxx instruction
$CAC    $5CF4   UNKNOWN  $5CF4           ; Unknown 5xxx instruction
$CAE    $00A9   SYS      $0A9            ; System call to 0A9
$CB0    $0437   SYS      $437            ; System call to 437
$CB2    $68A7   LD       V8, #A7         ; Load 167 into V8
$CB4    $AB3F   LD       I, $B3F         ; Load B3F into I
$CB6    $6B32   LD       VB, #32         ; Load 50 into VB
$CB8    $1924   JP       $924            ; Jump to 924
$CBA    $C983   RND      V9, #83         ; V9 = random & 83
$CBC    $3C12   SE       VC, #12         ; Skip if VC == 18
$CBE    $82F1   OR       V2, VF          ; V2 |= VF
$CC0    $D35D   DRW      V3, V5, #D      ; Draw 13-byte sprite at V3, V5
$CC2    $54C1   UNKNOWN  $54C1           ; Unknown 5xxx instruction
$CC4    $F92A   UNKNOWN  F92A            ; Unknown Fxxx instruction
$CC6    $8C30   LD       VC, V3          ; VC = V3
$CC8    $139D   JP       $39D            ; Jump to 39D
$CCA    $0F60   SYS      $F60            ; System call to F60
$CCC    $8C66   SHR      VC              ; VC >>= 1, VF = LSB
$CCE    $E11C   UNKNOWN  $E11C           ; Unknown Exxx instruction
$CD0    $EA3A   UNKNOWN  $EA3A           ; Unknown Exxx instruction
$CD2    $390A   SE       V9, #0A         ; Skip if V9 == 10
$CD4    $2714   CALL     $714            ; Call subroutine at 714
$CD6    $4666   SNE      V6, #66         ; Skip if V6 != 102
$CD8    $DEDF   DRW      VE, VD, #F      ; Draw 15-byte sprite at VE, VD
$CDA    $F1B9   UNKNOWN  F1B9            ; Unknown Fxxx instruction
$CDC    $A38B   LD       I, $38B         ; Load 38B into I
$CDE    $55AC   UNKNOWN  $55AC           ; Unknown 5xxx instruction
$CE0    $F076   UNKNOWN  F076            ; Unknown Fxxx instruction
$CE2    $A727   LD       I, $727         ; Load 727 into I
$CE4    $870F   UNKNOWN  870F            ; Unknown 8xxx instruction
$CE6    $213F   CALL     $13F            ; Call subroutine at 13F
$CE8    $763E   ADD      V6, #3E         ; Add 62 to V6
$CEA    $4CA6   SNE      VC, #A6         ; Skip if VC != 166
$CEC    $C5DF   RND      V5, #DF         ; V5 = random & DF
$CEE    $41C9   SNE      V1, #C9         ; Skip if V1 != 201
$CF0    $92B7   UNKNOWN  $92B7           ; Unknown 9xxx instruction
$CF2    $9C2A   UNKNOWN  $9C2A           ; Unknown 9xxx instruction
$CF4    $F38C   UNKNOWN  F38C            ; Unknown Fxxx instruction
$CF6    $F87A   UNKNOWN  F87A            ; Unknown Fxxx instruction
$CF8    $120A   JP       $20A            ; Jump to 20A
$CFA    $3A1F   SE       VA, #1F         ; Skip if VA == 31
$CFC    $ACE9   LD       I, $CE9         ; Load CE9 into I
$CFE    $5B9F   UNKNOWN  $5B9F           ; Unknown 5xxx instruction
$D00    $893C   UNKNOWN  893C            ; Unknown 8xxx instruction
$D02    $D20F   DRW      V2, V0, #F      ; Draw 15-byte sprite at V2, V0
$D04    $03AD   SYS      $3AD            ; System call to 3AD
$D06    $C007   RND      V0, #07         ; V0 = random & 07
$D08    $CD10   RND      VD, #10         ; VD = random & 10
$D0A    $0207   SYS      $207            ; System call to 207
$D0C    $1A95   JP       $A95            ; Jump to A95
$D0E    $815B   UNKNOWN  815B            ; Unknown 8xxx instruction
$D10    $271B   CALL     $71B            ; Call subroutine at 71B
$D12    $8616   SHR      V6              ; V6 >>= 1, VF = LSB
$D14    $08A0   SYS      $8A0            ; System call to 8A0
$D16    $5588   UNKNOWN  $5588           ; Unknown 5xxx instruction
$D18    $EF79   UNKNOWN  $EF79           ; Unknown Exxx instruction
$D1A    $3797   SE       V7, #97         ; Skip if V7 == 151
$D1C    $A9A0   LD       I, $9A0         ; Load 9A0 into I
$D1E    $119A   JP       $19A            ; Jump to 19A
$D20    $388D   SE       V8, #8D         ; Skip if V8 == 141
$D22    $F810   UNKNOWN  F810            ; Unknown Fxxx instruction
$D24    $3587   SE       V5, #87         ; Skip if V5 == 135
$D26    $623E   LD       V2, #3E         ; Load 62 into V2
$D28    $EF58   UNKNOWN  $EF58           ; Unknown Exxx instruction
$D2A    $5163   UNKNOWN  $5163           ; Unknown 5xxx instruction
$D2C    $A69B   LD       I, $69B         ; Load 69B into I
$D2E    $DD50   DRW      VD, V5, #0      ; Draw 0-byte sprite at VD, V5
$D30    $1D7F   JP       $D7F            ; Jump to D7F
$D32    $8F78   UNKNOWN  8F78            ; Unknown 8xxx instruction
$D34    $CD03   RND      VD, #03         ; VD = random & 03
$D36    $5E08   UNKNOWN  $5E08           ; Unknown 5xxx instruction
$D38    $6F8D   LD       VF, #8D         ; Load 141 into VF
$D3A    $E957   UNKNOWN  $E957           ; Unknown Exxx instruction
$D3C    $2023   CALL     $023            ; Call subroutine at 023
$D3E    $4815   SNE      V8, #15         ; Skip if V8 != 21
$D40    $5BE5   UNKNOWN  $5BE5           ; Unknown 5xxx instruction
$D42    $9C81   UNKNOWN  $9C81           ; Unknown 9xxx instruction
$D44    $FE8E   UNKNOWN  FE8E            ; Unknown Fxxx instruction
$D46    $1058   JP       $058            ; Jump to 058
$D48    $FD51   UNKNOWN  FD51            ; Unknown Fxxx instruction
$D4A    $F6DA   UNKNOWN  F6DA            ; Unknown Fxxx instruction
$D4C    $8CC7   SUBN     VC, VC          ; VC = VC - VC, VF = !borrow
$D4E    $B71E   JP       V0, $71E        ; Jump to V0 + 71E
$D50    $7652   ADD      V6, #52         ; Add 82 to V6
$D52    $8E09   UNKNOWN  8E09            ; Unknown 8xxx instruction
$D54    $F280   UNKNOWN  F280            ; Unknown Fxxx instruction
$D56    $F80F   UNKNOWN  F80F            ; Unknown Fxxx instruction
$D58    $5E34   UNKNOWN  $5E34           ; Unknown 5xxx instruction
$D5A    $9A58   UNKNOWN  $9A58           ; Unknown 9xxx instruction
$D5C    $03C3   SYS      $3C3            ; System call to 3C3
$D5E    $53F5   UNKNOWN  $53F5           ; Unknown 5xxx instruction
$D60    $2EF8   CALL     $EF8            ; Call subroutine at EF8
$D62    $FFB3   UNKNOWN  FFB3            ; Unknown Fxxx instruction
$D64    $7713   ADD      V7, #13         ; Add 19 to V7
$D66    $9A2F   UNKNOWN  $9A2F           ; Unknown 9xxx instruction
$D68    $5F3C   UNKNOWN  $5F3C           ; Unknown 5xxx instruction
$D6A    $8526   SHR      V5              ; V5 >>= 1, VF = LSB
$D6C    $0346   SYS      $346            ; System call to 346
$D6E    $7175   ADD      V1, #75         ; Add 117 to V1
$D70    $AF56   LD       I, $F56         ; Load F56 into I
$D72    $D7E8   DRW      V7, VE, #8      ; Draw 8-byte sprite at V7, VE
$D74    $7CB8   ADD      VC, #B8         ; Add 184 to VC
$D76    $040C   SYS      $40C            ; System call to 40C
$D78    $F35F   UNKNOWN  F35F            ; Unknown Fxxx instruction
$D7A    $E42C   UNKNOWN  $E42C           ; Unknown Exxx instruction
$D7C    $277A   CALL     $77A            ; Call subroutine at 77A
$D7E    $BC9A   JP       V0, $C9A        ; Jump to V0 + C9A
$D80    $48E1   SNE      V8, #E1         ; Skip if V8 != 225
$D82    $AF01   LD       I, $F01         ; Load F01 into I
$D84    $48D8   SNE      V8, #D8         ; Skip if V8 != 216
$D86    $E046   UNKNOWN  $E046           ; Unknown Exxx instruction
$D88    $2591   CALL     $591            ; Call subroutine at 591
$D8A    $E2E3   UNKNOWN  $E2E3           ; Unknown Exxx instruction
$D8C    $6A6B   LD       VA, #6B         ; Load 107 into VA
$D8E    $7EEA   ADD      VE, #EA         ; Add 234 to VE
$D90    $E7D9   UNKNOWN  $E7D9           ; Unknown Exxx instruction
$D92    $FF2D   UNKNOWN  FF2D            ; Unknown Fxxx instruction
$D94    $0AC3   SYS      $AC3            ; System call to AC3
$D96    $6024   LD       V0, #24         ; Load 36 into V0
$D98    $7F9C   ADD      VF, #9C         ; Add 156 to VF
$D9A    $067E   SYS      $67E            ; System call to 67E
$D9C    $910A   UNKNOWN  $910A           ; Unknown 9xxx instruction
$D9E    $0265   SYS      $265            ; System call to 265
$DA0    $57BB   UNKNOWN  $57BB           ; Unknown 5xxx instruction
$DA2    $7C49   ADD      VC, #49         ; Add 73 to VC
$DA4    $BB2A   JP       V0, $B2A        ; Jump to V0 + B2A
$DA6    $F4C7   UNKNOWN  F4C7            ; Unknown Fxxx instruction
$DA8    $D1C2   DRW      V1, VC, #2      ; Draw 2-byte sprite at V1, VC
$DAA    $8194   ADD      V1, V9          ; V1 += V9, VF = carry
$DAC    $05DB   SYS      $5DB            ; System call to 5DB
$DAE    $FD57   UNKNOWN  FD57            ; Unknown Fxxx instruction
$DB0    $A51B   LD       I, $51B         ; Load 51B into I
$DB2    $9233   UNKNOWN  $9233           ; Unknown 9xxx instruction
$DB4    $D530   DRW      V5, V3, #0      ; Draw 0-byte sprite at V5, V3
$DB6    $6F94   LD       VF, #94         ; Load 148 into VF
$DB8    $D279   DRW      V2, V7, #9      ; Draw 9-byte sprite at V2, V7
$DBA    $F8A1   UNKNOWN  F8A1            ; Unknown Fxxx instruction
$DBC    $6A7C   LD       VA, #7C         ; Load 124 into VA
$DBE    $2AE8   CALL     $AE8            ; Call subroutine at AE8
$DC0    $CD36   RND      VD, #36         ; VD = random & 36
$DC2    $88B8   UNKNOWN  88B8            ; Unknown 8xxx instruction
$DC4    $E8C4   UNKNOWN  $E8C4           ; Unknown Exxx instruction
$DC6    $8D05   SUB      VD, V0          ; VD -= V0, VF = !borrow
$DC8    $3167   SE       V1, #67         ; Skip if V1 == 103
$DCA    $96F3   UNKNOWN  $96F3           ; Unknown 9xxx instruction
$DCC    $03B8   SYS      $3B8            ; System call to 3B8
$DCE    $D60C   DRW      V6, V0, #C      ; Draw 12-byte sprite at V6, V0
$DD0    $8515   SUB      V5, V1          ; V5 -= V1, VF = !borrow
$DD2    $4EDB   SNE      VE, #DB         ; Skip if VE != 219
$DD4    $9C5E   UNKNOWN  $9C5E           ; Unknown 9xxx instruction
$DD6    $643C   LD       V4, #3C         ; Load 60 into V4
$DD8    $3A44   SE       VA, #44         ; Skip if VA == 68
$DDA    $9646   UNKNOWN  $9646           ; Unknown 9xxx instruction
$DDC    $50DD   UNKNOWN  $50DD           ; Unknown 5xxx instruction
$DDE    $B657   JP       V0, $657        ; Jump to V0 + 657
$DE0    $088D   SYS      $88D            ; System call to 88D
$DE2    $B4B1   JP       V0, $4B1        ; Jump to V0 + 4B1
$DE4    $4563   SNE      V5, #63         ; Skip if V5 != 99
$DE6    $C898   RND      V8, #98         ; V8 = random & 98
$DE8    $D2F3   DRW      V2, VF, #3      ; Draw 3-byte sprite at V2, VF
$DEA    $879E   SHL      V7              ; V7 <<= 1, VF = MSB
$DEC    $CDA6   RND      VD, #A6         ; VD = random & A6
$DEE    $278B   CALL     $78B            ; Call subroutine at 78B
$DF0    $4E32   SNE      VE, #32         ; Skip if VE != 50
$DF2    $34C7   SE       V4, #C7         ; Skip if V4 == 199
$DF4    $B988   JP       V0, $988        ; Jump to V0 + 988
$DF6    $01D5   SYS      $1D5            ; System call to 1D5
$DF8    $12CA   JP       $2CA            ; Jump to 2CA
$DFA    $6336   LD       V3, #36         ; Load 54 into V3
$DFC    $ACFD   LD       I, $CFD         ; Load CFD into I
$DFE    $618A   LD       V1, #8A         ; Load 138 into V1
$E00    $E622   UNKNOWN  $E622           ; Unknown Exxx instruction
$E02    $0FB0   SYS      $FB0            ; System call to FB0
$E04    $3A86   SE       VA, #86         ; Skip if VA == 134
$E06    $FB62   UNKNOWN  FB62            ; Unknown Fxxx instruction
$E08    $6C4C   LD       VC, #4C         ; Load 76 into VC
$E0A    $3DC5   SE       VD, #C5         ; Skip if VD == 197
$E0C    $333E   SE       V3, #3E         ; Skip if V3 == 62
$E0E    $A387   LD       I, $387         ; Load 387 into I
$E10    $FF05   UNKNOWN  FF05            ; Unknown Fxxx instruction
$E12    $6CAE   LD       VC, #AE         ; Load 174 into VC
$E14    $5E73   UNKNOWN  $5E73           ; Unknown 5xxx instruction
$E16    $441D   SNE      V4, #1D         ; Skip if V4 != 29
$E18    $B8E2   JP       V0, $8E2        ; Jump to V0 + 8E2
$E1A    $7BAD   ADD      VB, #AD         ; Add 173 to VB
$E1C    $07BC   SYS      $7BC            ; System call to 7BC
$E1E    $4913   SNE      V9, #13         ; Skip if V9 != 19
$E20    $EAB8   UNKNOWN  $EAB8           ; Unknown Exxx instruction
$E22    $E3A4   UNKNOWN  $E3A4           ; Unknown Exxx instruction
$E24    $FAA3   UNKNOWN  FAA3            ; Unknown Fxxx instruction
$E26    $4195   SNE      V1, #95         ; Skip if V1 != 149
$E28    $0D8A   SYS      $D8A            ; System call to D8A
$E2A    $3DD1   SE       VD, #D1         ; Skip if VD == 209
$E2C    $5376   UNKNOWN  $5376           ; Unknown 5xxx instruction
$E2E    $BF7B   JP       V0, $F7B        ; Jump to V0 + F7B
$E30    $6926   LD       V9, #26         ; Load 38 into V9
$E32    $D3E4   DRW      V3, VE, #4      ; Draw 4-byte sprite at V3, VE
$E34    $E22E   UNKNOWN  $E22E           ; Unknown Exxx instruction
$E36    $1ED6   JP       $ED6            ; Jump to ED6
$E38    $9717   UNKNOWN  $9717           ; Unknown 9xxx instruction
$E3A    $450E   SNE      V5, #0E         ; Skip if V5 != 14
$E3C    $1732   JP       $732            ; Jump to 732
$E3E    $81E8   UNKNOWN  81E8            ; Unknown 8xxx instruction
$E40    $B5B2   JP       V0, $5B2        ; Jump to V0 + 5B2
$E42    $55AE   UNKNOWN  $55AE           ; Unknown 5xxx instruction
$E44    $E3A2   UNKNOWN  $E3A2           ; Unknown Exxx instruction
$E46    $3A2B   SE       VA, #2B         ; Skip if VA == 43
$E48    $2BB0   CALL     $BB0            ; Call subroutine at BB0
$E4A    $9ACE   UNKNOWN  $9ACE           ; Unknown 9xxx instruction
$E4C    $6607   LD       V6, #07         ; Load 7 into V6
$E4E    $E250   UNKNOWN  $E250           ; Unknown Exxx instruction
$E50    $F4B4   UNKNOWN  F4B4            ; Unknown Fxxx instruction
$E52    $4027   SNE      V0, #27         ; Skip if V0 != 39
$E54    $8175   SUB      V1, V7          ; V1 -= V7, VF = !borrow
$E56    $291B   CALL     $91B            ; Call subroutine at 91B
$E58    $BCEE   JP       V0, $CEE        ; Jump to V0 + CEE
$E5A    $F9CA   UNKNOWN  F9CA            ; Unknown Fxxx instruction
$E5C    $6796   LD       V7, #96         ; Load 150 into V7
$E5E    $1E32   JP       $E32            ; Jump to E32
$E60    $E9B6   UNKNOWN  $E9B6           ; Unknown Exxx instruction
$E62    $C6EE   RND      V6, #EE         ; V6 = random & EE
$E64    $5F79   UNKNOWN  $5F79           ; Unknown 5xxx instruction
$E66    $FB31   UNKNOWN  FB31            ; Unknown Fxxx instruction
$E68    $CCDE   RND      VC, #DE         ; VC = random & DE
$E6A    $CDCB   RND      VD, #CB         ; VD = random & CB
$E6C    $7713   ADD      V7, #13         ; Add 19 to V7
$E6E    $3263   SE       V2, #63         ; Skip if V2 == 99
$E70    $E02C   UNKNOWN  $E02C           ; Unknown Exxx instruction
$E72    $9EB2   UNKNOWN  $9EB2           ; Unknown 9xxx instruction
$E74    $80C0   LD       V0, VC          ; V0 = VC
$E76    $2787   CALL     $787            ; Call subroutine at 787
$E78    $8420   LD       V4, V2          ; V4 = V2
$E7A    $A7E2   LD       I, $7E2         ; Load 7E2 into I
$E7C    $AE54   LD       I, $E54         ; Load E54 into I
$E7E    $4AFB   SNE      VA, #FB         ; Skip if VA != 251
$E80    $BCB6   JP       V0, $CB6        ; Jump to V0 + CB6
$E82    $1879   JP       $879            ; Jump to 879
$E84    $61BB   LD       V1, #BB         ; Load 187 into V1
$E86    $FBC9   UNKNOWN  FBC9            ; Unknown Fxxx instruction
$E88    $9958   UNKNOWN  $9958           ; Unknown 9xxx instruction
$E8A    $8500   LD       V5, V0          ; V5 = V0
$E8C    $257A   CALL     $57A            ; Call subroutine at 57A
$E8E    $0231   SYS      $231            ; System call to 231
$E90    $6C35   LD       VC, #35         ; Load 53 into VC
$E92    $D664   DRW      V6, V6, #4      ; Draw 4-byte sprite at V6, V6
$E94    $29CA   CALL     $9CA            ; Call subroutine at 9CA
$E96    $B55C   JP       V0, $55C        ; Jump to V0 + 55C
$E98    $4940   SNE      V9, #40         ; Skip if V9 != 64
$E9A    $7CC0   ADD      VC, #C0         ; Add 192 to VC
$E9C    $FFF8   UNKNOWN  FFF8            ; Unknown Fxxx instruction
$E9E    $A7B9   LD       I, $7B9         ; Load 7B9 into I
$EA0    $645F   LD       V4, #5F         ; Load 95 into V4
$EA2    $8992   AND      V9, V9          ; V9 &= V9
$EA4    $3ABC   SE       VA, #BC         ; Skip if VA == 188
$EA6    $A174   LD       I, $174         ; Load 174 into I
$EA8    $9E0D   UNKNOWN  $9E0D           ; Unknown 9xxx instruction
$EAA    $5D07   UNKNOWN  $5D07           ; Unknown 5xxx instruction
$EAC    $C7EB   RND      V7, #EB         ; V7 = random & EB
$EAE    $5F6B   UNKNOWN  $5F6B           ; Unknown 5xxx instruction
$EB0    $EE3A   UNKNOWN  $EE3A           ; Unknown Exxx instruction
$EB2    $381C   SE       V8, #1C         ; Skip if V8 == 28
$EB4    $FEEA   UNKNOWN  FEEA            ; Unknown Fxxx instruction
$EB6    $6E98   LD       VE, #98         ; Load 152 into VE
$EB8    $AB2E   LD       I, $B2E         ; Load B2E into I
$EBA    $E1E5   UNKNOWN  $E1E5           ; Unknown Exxx instruction
$EBC    $7BDF   ADD      VB, #DF         ; Add 223 to VB
$EBE    $6030   LD       V0, #30         ; Load 48 into V0
$EC0    $DB79   DRW      VB, V7, #9      ; Draw 9-byte sprite at VB, V7
$EC2    $8F4C   UNKNOWN  8F4C            ; Unknown 8xxx instruction
$EC4    $066C   SYS      $66C            ; System call to 66C
$EC6    $5C60   SE       VC, V6          ; Skip if VC == V6
$EC8    $E6D5   UNKNOWN  $E6D5           ; Unknown Exxx instruction
$ECA    $2709   CALL     $709            ; Call subroutine at 709
$ECC    $9BFE   UNKNOWN  $9BFE           ; Unknown 9xxx instruction
$ECE    $F9A7   UNKNOWN  F9A7            ; Unknown Fxxx instruction
$ED0    $5337   UNKNOWN  $5337           ; Unknown 5xxx instruction
$ED2    $4728   SNE      V7, #28         ; Skip if V7 != 40
$ED4    $4D9B   SNE      VD, #9B         ; Skip if VD != 155
$ED6    $3711   SE       V7, #11         ; Skip if V7 == 17
$ED8    $F3D3   UNKNOWN  F3D3            ; Unknown Fxxx instruction
$EDA    $0710   SYS      $710            ; System call to 710
$EDC    $1391   JP       $391            ; Jump to 391
$EDE    $7B0C   ADD      VB, #0C         ; Add 12 to VB
$EE0    $C9E7   RND      V9, #E7         ; V9 = random & E7
$EE2    $9494   UNKNOWN  $9494           ; Unknown 9xxx instruction
$EE4    $3AB1   SE       VA, #B1         ; Skip if VA == 177
$EE6    $5851   UNKNOWN  $5851           ; Unknown 5xxx instruction
$EE8    $69D6   LD       V9, #D6         ; Load 214 into V9
$EEA    $4B1A   SNE      VB, #1A         ; Skip if VB != 26
$EEC    $307E   SE       V0, #7E         ; Skip if V0 == 126
$EEE    $AAAA   LD       I, $AAA         ; Load AAA into I
$EF0    $89FE   SHL      V9              ; V9 <<= 1, VF = MSB
$EF2    $9F04   UNKNOWN  $9F04           ; Unknown 9xxx instruction
$EF4    $E645   UNKNOWN  $E645           ; Unknown Exxx instruction
$EF6    $DBE6   DRW      VB, VE, #6      ; Draw 6-byte sprite at VB, VE
$EF8    $B883   JP       V0, $883        ; Jump to V0 + 883
$EFA    $7A49   ADD      VA, #49         ; Add 73 to VA
$EFC    $D7E5   DRW      V7, VE, #5      ; Draw 5-byte sprite at V7, VE
$EFE    $71BA   ADD      V1, #BA         ; Add 186 to V1
$F00    $21E2   CALL     $1E2            ; Call subroutine at 1E2
$F02    $CD24   RND      VD, #24         ; VD = random & 24
$F04    $EEE7   UNKNOWN  $EEE7           ; Unknown Exxx instruction
$F06    $90DC   UNKNOWN  $90DC           ; Unknown 9xxx instruction
$F08    $77F1   ADD      V7, #F1         ; Add 241 to V7
$F0A    $4E56   SNE      VE, #56         ; Skip if VE != 86
$F0C    $F392   UNKNOWN  F392            ; Unknown Fxxx instruction
$F0E    $7559   ADD      V5, #59         ; Add 89 to V5
$F10    $A6D6   LD       I, $6D6         ; Load 6D6 into I
$F12    $C6D5   RND      V6, #D5         ; V6 = random & D5
$F14    $9C12   UNKNOWN  $9C12           ; Unknown 9xxx instruction
$F16    $435B   SNE      V3, #5B         ; Skip if V3 != 91
$F18    $5FDC   UNKNOWN  $5FDC           ; Unknown 5xxx instruction
$F1A    $491C   SNE      V9, #1C         ; Skip if V9 != 28
$F1C    $BFD7   JP       V0, $FD7        ; Jump to V0 + FD7
$F1E    $D86F   DRW      V8, V6, #F      ; Draw 15-byte sprite at V8, V6
$F20    $F759   UNKNOWN  F759            ; Unknown Fxxx instruction
$F22    $038E   SYS      $38E            ; System call to 38E
$F24    $9E04   UNKNOWN  $9E04           ; Unknown 9xxx instruction
$F26    $388A   SE       V8, #8A         ; Skip if V8 == 138
$F28    $411F   SNE      V1, #1F         ; Skip if V1 != 31
$F2A    $9486   UNKNOWN  $9486           ; Unknown 9xxx instruction
$F2C    $22D9   CALL     $2D9            ; Call subroutine at 2D9
$F2E    $E42A   UNKNOWN  $E42A           ; Unknown Exxx instruction
$F30    $4C87   SNE      VC, #87         ; Skip if VC != 135
$F32    $BB3B   JP       V0, $B3B        ; Jump to V0 + B3B
$F34    $28D6   CALL     $8D6            ; Call subroutine at 8D6
$F36    $20A7   CALL     $0A7            ; Call subroutine at 0A7
$F38    $B28D   JP       V0, $28D        ; Jump to V0 + 28D
$F3A    $ACF9   LD       I, $CF9         ; Load CF9 into I
$F3C    $39DB   SE       V9, #DB         ; Skip if V9 == 219
$F3E    $41DB   SNE      V1, #DB         ; Skip if V1 != 219
$F40    $CAAB   RND      VA, #AB         ; VA = random & AB
$F42    $B925   JP       V0, $925        ; Jump to V0 + 925
$F44    $9AE8   UNKNOWN  $9AE8           ; Unknown 9xxx instruction
$F46    $398B   SE       V9, #8B         ; Skip if V9 == 139
$F48    $9A46   UNKNOWN  $9A46           ; Unknown 9xxx instruction
$F4A    $B37F   JP       V0, $37F        ; Jump to V0 + 37F
$F4C    $AEC0   LD       I, $EC0         ; Load EC0 into I
$F4E    $105F   JP       $05F            ; Jump to 05F
$F50    $93BC   UNKNOWN  $93BC           ; Unknown 9xxx instruction
$F52    $0DD4   SYS      $DD4            ; System call to DD4
$F54    $4158   SNE      V1, #58         ; Skip if V1 != 88
$F56    $4D03   SNE      VD, #03         ; Skip if VD != 3
$F58    $B2E7   JP       V0, $2E7        ; Jump to V0 + 2E7
$F5A    $ABB4   LD       I, $BB4         ; Load BB4 into I
$F5C    $31F4   SE       V1, #F4         ; Skip if V1 == 244
$F5E    $A396   LD       I, $396         ; Load 396 into I
$F60    $1DE2   JP       $DE2            ; Jump to DE2
$F62    $D92A   DRW      V9, V2, #A      ; Draw 10-byte sprite at V9, V2
$F64    $C58A   RND      V5, #8A         ; V5 = random & 8A
$F66    $EAFE   UNKNOWN  $EAFE           ; Unknown Exxx instruction
$F68    $B900   JP       V0, $900        ; Jump to V0 + 900
$F6A    $55FF   UNKNOWN  $55FF           ; Unknown 5xxx instruction
$F6C    $CF4E   RND      VF, #4E         ; VF = random & 4E
$F6E    $5F3C   UNKNOWN  $5F3C           ; Unknown 5xxx instruction
$F70    $289C   CALL     $89C            ; Call subroutine at 89C
$F72    $A30B   LD       I, $30B         ; Load 30B into I
$F74    $C2E6   RND      V2, #E6         ; V2 = random & E6
$F76    $0300   SYS      $300            ; System call to 300
$F78    $CC74   RND      VC, #74         ; VC = random & 74
$F7A    $2054   CALL     $054            ; Call subroutine at 054
$F7C    $4723   SNE      V7, #23         ; Skip if V7 != 35
$F7E    $2062   CALL     $062            ; Call subroutine at 062
$F80    $69CC   LD       V9, #CC         ; Load 204 into V9
$F82    $48C6   SNE      V8, #C6         ; Skip if V8 != 198
$F84    $43D4   SNE      V3, #D4         ; Skip if V3 != 212
$F86    $553D   UNKNOWN  $553D           ; Unknown 5xxx instruction
$F88    $AED3   LD       I, $ED3         ; Load ED3 into I
$F8A    $BB5B   JP       V0, $B5B        ; Jump to V0 + B5B
$F8C    $DA6A   DRW      VA, V6, #A      ; Draw 10-byte sprite at VA, V6
$F8E    $0BBE   SYS      $BBE            ; System call to BBE
$F90    $913B   UNKNOWN  $913B           ; Unknown 9xxx instruction
$F92    $00C8   SYS      $0C8            ; System call to 0C8
$F94    $3B8A   SE       VB, #8A         ; Skip if VB == 138
$F96    $ECF7   UNKNOWN  $ECF7           ; Unknown Exxx instruction
$F98    $6B2F   LD       VB, #2F         ; Load 47 into VB
$F9A    $31EC   SE       V1, #EC         ; Skip if V1 == 236
$F9C    $13B5   JP       $3B5            ; Jump to 3B5
$F9E    $56CB   UNKNOWN  $56CB           ; Unknown 5xxx instruction
$FA0    $5013   UNKNOWN  $5013           ; Unknown 5xxx instruction
$FA2    $FB5B   UNKNOWN  FB5B            ; Unknown Fxxx instruction
$FA4    $63AD   LD       V3, #AD         ; Load 173 into V3
$FA6    $4E8C   SNE      VE, #8C         ; Skip if VE != 140
$FA8    $7B84   ADD      VB, #84         ; Add 132 to VB
$FAA    $8C10   LD       VC, V1          ; VC = V1
$FAC    $08B8   SYS      $8B8            ; System call to 8B8
$FAE    $D863   DRW      V8, V6, #3      ; Draw 3-byte sprite at V8, V6
$FB0    $6C20   LD       VC, #20         ; Load 32 into VC
$FB2    $9B48   UNKNOWN  $9B48           ; Unknown 9xxx instruction
$FB4    $7422   ADD      V4, #22         ; Add 34 to V4
$FB6    $CFF8   RND      VF, #F8         ; VF = random & F8
$FB8    $CE3A   RND      VE, #3A         ; VE = random & 3A
$FBA    $FED5   UNKNOWN  FED5            ; Unknown Fxxx instruction
$FBC    $6E56   LD       VE, #56         ; Load 86 into VE
$FBE    $46EB   SNE      V6, #EB         ; Skip if V6 != 235
$FC0    $B3F1   JP       V0, $3F1        ; Jump to V0 + 3F1
$FC2    $7FAD   ADD      VF, #AD         ; Add 173 to VF
$FC4    $FE65   LD       VE, [I]         ; Load V0-VE from I
$FC6    $4317   SNE      V3, #17         ; Skip if V3 != 23
$FC8    $6F8E   LD       VF, #8E         ; Load 142 into VF
$FCA    $3D70   SE       VD, #70         ; Skip if VD == 112
$FCC    $6744   LD       V7, #44         ; Load 68 into V7
$FCE    $29F7   CALL     $9F7            ; Call subroutine at 9F7
$FD0    $BCD9   JP       V0, $CD9        ; Jump to V0 + CD9
$FD2    $DE34   DRW      VE, V3, #4      ; Draw 4-byte sprite at VE, V3
$FD4    $6496   LD       V4, #96         ; Load 150 into V4
$FD6    $46B3   SNE      V6, #B3         ; Skip if V6 != 179
$FD8    $0040   SYS      $040            ; System call to 040
$FDA    $F5A3   UNKNOWN  F5A3            ; Unknown Fxxx instruction
$FDC    $85AC   UNKNOWN  85AC            ; Unknown 8xxx instruction
$FDE    $A429   LD       I, $429         ; Load 429 into I
$FE0    $A2D3   LD       I, $2D3         ; Load 2D3 into I
$FE2    $6E09   LD       VE, #09         ; Load 9 into VE
$FE4    $60A5   LD       V0, #A5         ; Load 165 into V0
$FE6    $6A2C   LD       VA, #2C         ; Load 44 into VA
$FE8    $3629   SE       V6, #29         ; Skip if V6 == 41
$FEA    $D2C8   DRW      V2, VC, #8      ; Draw 8-byte sprite at V2, VC
$FEC    $B92D   JP       V0, $92D        ; Jump to V0 + 92D
$FEE    $C97C   RND      V9, #7C         ; V9 = random & 7C
$FF0    $EE03   UNKNOWN  $EE03           ; Unknown Exxx instruction
$FF2    $F76C   UNKNOWN  F76C            ; Unknown Fxxx instruction
$FF4    $8A71   OR       VA, V7          ; VA |= V7
$FF6    $A5A2   LD       I, $5A2         ; Load 5A2 into I
$FF8    $C4D5   RND      V4, #D5         ; V4 = random & D5
$FFA    $C887   RND      V8, #87         ; V8 = random & 87
$FFC    $466F   SNE      V6, #6F         ; Skip if V6 != 111
$FFE    $914B   UNKNOWN  $914B           ; Unknown 9xxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 513 (28.6%)
  LD      : 229 (12.8%)
  JP      : 216 (12.1%)
  SNE     : 129 ( 7.2%)
  RND     : 121 ( 6.8%)
  ADD     : 119 ( 6.6%)
  SE      : 109 ( 6.1%)
  CALL    : 100 ( 5.6%)
  SYS     :  98 ( 5.5%)
  DRW     :  97 ( 5.4%)
  SHR     :  14 ( 0.8%)
  OR      :  10 ( 0.6%)
  SHL     :  10 ( 0.6%)
  SUBN    :   8 ( 0.4%)
  AND     :   7 ( 0.4%)
  XOR     :   6 ( 0.3%)
  SUB     :   5 ( 0.3%)
  SKNP    :   1 ( 0.1%)

Memory Operations: 348 (19.4%)
Arithmetic Operations: 155 (8.6%)
