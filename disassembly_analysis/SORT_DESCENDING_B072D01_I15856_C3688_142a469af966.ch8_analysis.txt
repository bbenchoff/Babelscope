
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B072D01_I15856_C3688_142a469af966.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 72
Instance: 15856
Direction: descending
Final Array: [240, 240, 240, 240, 240, 240, 240, 115]
Operations: R:0 W:7 C:263 S:42

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 114
Sort Array References:
  $20E: LD I, $030 ; Load 030 into I
  $21A: LD I, $33A ; Load 33A into I
  $23A: LD I, $684 ; Load 684 into I
  $27E: LD I, $A94 ; Load A94 into I
  $280: LD I, $1D4 ; Load 1D4 into I
  $2A6: LD I, $712 ; Load 712 into I
  $2BA: LD I, $668 ; Load 668 into I
  $316: LD I, $BFB ; Load BFB into I
  $338: LD I, $ADA ; Load ADA into I
  $35E: LD I, $812 ; Load 812 into I
  $364: LD I, $EDE ; Load EDE into I
  $3D8: LD I, $64F ; Load 64F into I
  $438: LD I, $970 ; Load 970 into I
  $43C: LD I, $093 ; Load 093 into I
  $4E0: LD I, $D38 ; Load D38 into I
  $4EC: LD I, $A06 ; Load A06 into I
  $50C: LD I, $198 ; Load 198 into I
  $50E: LD I, $E14 ; Load E14 into I
  $51C: LD [I], V5 ; Store V0-V5 at I
  $544: LD I, $A68 ; Load A68 into I
  $576: LD I, $577 ; Load 577 into I
  $594: LD I, $4F7 ; Load 4F7 into I
  $5AC: LD I, $2D8 ; Load 2D8 into I
  $5D4: ADD I, V7 ; I ADDRESS MANIPULATION
  $5E2: LD I, $DAB ; Load DAB into I
  $620: LD I, $384 ; Load 384 into I
  $630: LD I, $DD9 ; Load DD9 into I
  $634: LD I, $704 ; Load 704 into I
  $64A: LD I, $723 ; Load 723 into I
  $674: LD I, $FD6 ; Load FD6 into I
  $682: LD I, $C27 ; Load C27 into I
  $6A6: LD I, $7A9 ; Load 7A9 into I
  $6D6: LD I, $39A ; Load 39A into I
  $6EE: LD I, $23E ; Load 23E into I
  $72C: LD I, $2D1 ; Load 2D1 into I
  $738: LD I, $E8A ; Load E8A into I
  $742: LD I, $346 ; Load 346 into I
  $744: LD I, $9EC ; Load 9EC into I
  $74C: LD I, $E4E ; Load E4E into I
  $76C: LD I, $569 ; Load 569 into I
  $780: LD I, $84D ; Load 84D into I
  $794: LD I, $052 ; Load 052 into I
  $7D2: LD I, $633 ; Load 633 into I
  $808: LD I, $A54 ; Load A54 into I
  $816: LD I, $537 ; Load 537 into I
  $830: LD I, $787 ; Load 787 into I
  $870: LD I, $B9B ; Load B9B into I
  $882: LD I, $1AF ; Load 1AF into I
  $888: LD I, $37A ; Load 37A into I
  $8B6: LD I, $6CD ; Load 6CD into I
  $8BC: LD I, $6B1 ; Load 6B1 into I
  $8EE: LD I, $FD3 ; Load FD3 into I
  $904: LD I, $5C5 ; Load 5C5 into I
  $940: LD I, $50B ; Load 50B into I
  $942: LD I, $5C8 ; Load 5C8 into I
  $944: LD I, $8A9 ; Load 8A9 into I
  $996: LD I, $3DA ; Load 3DA into I
  $9C0: LD I, $F23 ; Load F23 into I
  $9D0: LD I, $D21 ; Load D21 into I
  $9D6: LD I, $CC6 ; Load CC6 into I
  $9EA: LD I, $6D3 ; Load 6D3 into I
  $9F4: LD I, $0F8 ; Load 0F8 into I
  $9F6: LD I, $14D ; Load 14D into I
  $A22: LD I, $73E ; Load 73E into I
  $A30: LD I, $028 ; Load 028 into I
  $A3E: LD I, $3B3 ; Load 3B3 into I
  $A5A: LD I, $308 ; Load 308 into I
  $A70: LD I, $7D4 ; Load 7D4 into I
  $A88: LD I, $9FC ; Load 9FC into I
  $AA0: LD I, $80E ; Load 80E into I
  $ACC: LD I, $A60 ; Load A60 into I
  $AEA: LD I, $A34 ; Load A34 into I
  $AF0: LD I, $168 ; Load 168 into I
  $B14: LD I, $125 ; Load 125 into I
  $B52: LD I, $980 ; Load 980 into I
  $B6E: LD I, $34D ; Load 34D into I
  $B7E: LD I, $173 ; Load 173 into I
  $B98: LD I, $A41 ; Load A41 into I
  $BA6: LD I, $26A ; Load 26A into I
  $BBC: LD I, $2F0 ; Load 2F0 into I
  $BC2: LD I, $43F ; Load 43F into I
  $BD4: LD I, $3A5 ; Load 3A5 into I
  $BD8: LD I, $774 ; Load 774 into I
  $BDA: LD I, $960 ; Load 960 into I
  $C06: LD I, $AF7 ; Load AF7 into I
  $C58: LD I, $ED3 ; Load ED3 into I
  $C5C: LD I, $087 ; Load 087 into I
  $C74: LD I, $90F ; Load 90F into I
  $CAC: LD I, $C62 ; Load C62 into I
  $CB2: LD I, $461 ; Load 461 into I
  $CBA: LD I, $734 ; Load 734 into I
  $D18: LD I, $FB7 ; Load FB7 into I
  $D22: LD I, $F5F ; Load F5F into I
  $D66: LD I, $049 ; Load 049 into I
  $D9A: LD I, $37E ; Load 37E into I
  $DA0: LD I, $58E ; Load 58E into I
  $DAA: LD I, $664 ; Load 664 into I
  $DCA: LD I, $762 ; Load 762 into I
  $DF0: LD I, $248 ; Load 248 into I
  $E1E: LD I, $75C ; Load 75C into I
  $E36: LD I, $2DB ; Load 2DB into I
  $E38: LD I, $FE8 ; Load FE8 into I
  $E94: LD I, $0B6 ; Load 0B6 into I
  $EAA: LD I, $77F ; Load 77F into I
  $EEC: LD I, $4FE ; Load 4FE into I
  $EF6: LD I, $D75 ; Load D75 into I
  $F1E: LD I, $B88 ; Load B88 into I
  $F34: LD I, $039 ; Load 039 into I
  $F36: LD I, $B8A ; Load B8A into I
  $F44: LD I, $794 ; Load 794 into I
  $F46: LD I, $BFF ; Load BFF into I
  $F60: LD I, $060 ; Load 060 into I
  $FC0: LD I, $3BA ; Load 3BA into I
  $FF4: LD I, $D52 ; Load D52 into I

CONTROL FLOW ANALYSIS:
Jumps: 224
Calls: 111
Branches: 244
Loops: 132
Loop Structures:
  $288 -> $1E0 (backward jump)
  $292 -> $0EA (backward jump)
  $29E -> $209 (backward jump)
  $33E -> $007 (backward jump)
  $3AE -> $137 (backward jump)
  $3DA -> $38C (backward jump)
  $3F4 -> $00E (backward jump)
  $454 -> $1F7 (backward jump)
  $46E -> $0EE (backward jump)
  $47A -> $29F (backward jump)
  $484 -> $320 (backward jump)
  $490 -> $1B6 (backward jump)
  $4B0 -> $34E (backward jump)
  $52A -> $430 (backward jump)
  $568 -> $2A1 (backward jump)
  $592 -> $1FA (backward jump)
  $5A6 -> $3F2 (backward jump)
  $5BA -> $1CC (backward jump)
  $61E -> $122 (backward jump)
  $622 -> $29C (backward jump)
  $668 -> $2D7 (backward jump)
  $69C -> $19C (backward jump)
  $6A0 -> $0B9 (backward jump)
  $6BA -> $3EC (backward jump)
  $706 -> $18C (backward jump)
  $756 -> $19D (backward jump)
  $75C -> $2DB (backward jump)
  $75E -> $2FD (backward jump)
  $774 -> $435 (backward jump)
  $79A -> $501 (backward jump)
  $79E -> $5FC (backward jump)
  $7C8 -> $7A1 (backward jump)
  $7DA -> $7C0 (backward jump)
  $812 -> $801 (backward jump)
  $832 -> $1F0 (backward jump)
  $844 -> $452 (backward jump)
  $84E -> $20C (backward jump)
  $86C -> $64E (backward jump)
  $8A0 -> $83D (backward jump)
  $8BE -> $28E (backward jump)
  $8E6 -> $834 (backward jump)
  $906 -> $805 (backward jump)
  $91A -> $4D1 (backward jump)
  $946 -> $872 (backward jump)
  $96C -> $8D4 (backward jump)
  $972 -> $204 (backward jump)
  $99E -> $0BF (backward jump)
  $9A8 -> $565 (backward jump)
  $9AA -> $600 (backward jump)
  $9D4 -> $444 (backward jump)
  $9DE -> $74F (backward jump)
  $9E6 -> $846 (backward jump)
  $A00 -> $3FE (backward jump)
  $A04 -> $814 (backward jump)
  $A1C -> $0E6 (backward jump)
  $A26 -> $0AD (backward jump)
  $A66 -> $1CE (backward jump)
  $A6A -> $404 (backward jump)
  $A82 -> $2A9 (backward jump)
  $A96 -> $23E (backward jump)
  $A9E -> $460 (backward jump)
  $ABC -> $9EA (backward jump)
  $AC4 -> $84E (backward jump)
  $AD4 -> $6EC (backward jump)
  $AD6 -> $3F8 (backward jump)
  $B0C -> $7ED (backward jump)
  $B2C -> $8D3 (backward jump)
  $B44 -> $2BE (backward jump)
  $B4C -> $9FB (backward jump)
  $B64 -> $A4C (backward jump)
  $BCC -> $4D0 (backward jump)
  $BDE -> $07C (backward jump)
  $BEE -> $13F (backward jump)
  $BF6 -> $7AE (backward jump)
  $C08 -> $24E (backward jump)
  $C16 -> $6E6 (backward jump)
  $C22 -> $3E5 (backward jump)
  $C34 -> $AA8 (backward jump)
  $C36 -> $85C (backward jump)
  $C3C -> $B36 (backward jump)
  $C44 -> $450 (backward jump)
  $C60 -> $633 (backward jump)
  $C6A -> $9A6 (backward jump)
  $C6E -> $9AD (backward jump)
  $C88 -> $5C9 (backward jump)
  $CD2 -> $C6E (backward jump)
  $CD8 -> $C86 (backward jump)
  $CE8 -> $CAE (backward jump)
  $D02 -> $C0E (backward jump)
  $D04 -> $5B1 (backward jump)
  $D08 -> $201 (backward jump)
  $D26 -> $C95 (backward jump)
  $D42 -> $9B5 (backward jump)
  $D46 -> $4B6 (backward jump)
  $D5E -> $948 (backward jump)
  $D68 -> $BE0 (backward jump)
  $D6E -> $935 (backward jump)
  $DAC -> $523 (backward jump)
  $DE6 -> $22C (backward jump)
  $DF2 -> $61A (backward jump)
  $E0E -> $502 (backward jump)
  $E2A -> $09D (backward jump)
  $E4C -> $6EE (backward jump)
  $E5A -> $D12 (backward jump)
  $E6A -> $74D (backward jump)
  $E6C -> $54C (backward jump)
  $E82 -> $263 (backward jump)
  $E86 -> $22F (backward jump)
  $EBA -> $5F5 (backward jump)
  $EC0 -> $B07 (backward jump)
  $EC2 -> $D31 (backward jump)
  $EDA -> $35E (backward jump)
  $EE8 -> $BC6 (backward jump)
  $EFA -> $ED8 (backward jump)
  $F02 -> $171 (backward jump)
  $F0C -> $663 (backward jump)
  $F1A -> $718 (backward jump)
  $F24 -> $779 (backward jump)
  $F26 -> $930 (backward jump)
  $F3E -> $EC5 (backward jump)
  $F5C -> $4BA (backward jump)
  $F64 -> $0EA (backward jump)
  $F96 -> $9B7 (backward jump)
  $FA4 -> $3CF (backward jump)
  $FAA -> $627 (backward jump)
  $FC6 -> $3EF (backward jump)
  $FD0 -> $90C (backward jump)
  $FDA -> $611 (backward jump)
  $FE6 -> $7E0 (backward jump)
  $FE8 -> $DD9 (backward jump)
  $FEA -> $CC2 (backward jump)
  $FEC -> $A71 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $0220   SYS      $220            ; System call to 220
$202    $4B02   SNE      VB, #02         ; Skip if VB != 2
$204    $0E93   SYS      $E93            ; System call to E93
$206    $5F5E   UNKNOWN  $5F5E           ; Unknown 5xxx instruction
$208    $BAF7   JP       V0, $AF7        ; Jump to V0 + AF7
$20A    $E326   UNKNOWN  $E326           ; Unknown Exxx instruction
$20C    $228B   CALL     $28B            ; Call subroutine at 28B
$20E    $A030   LD       I, $030         ; Load 030 into I
$210    $C944   RND      V9, #44         ; V9 = random & 44
$212    $5002   UNKNOWN  $5002           ; Unknown 5xxx instruction
$214    $137A   JP       $37A            ; Jump to 37A
$216    $072C   SYS      $72C            ; System call to 72C
$218    $85B9   UNKNOWN  85B9            ; Unknown 8xxx instruction
$21A    $A33A   LD       I, $33A         ; Load 33A into I
$21C    $8E42   AND      VE, V4          ; VE &= V4
$21E    $EB89   UNKNOWN  $EB89           ; Unknown Exxx instruction
$220    $639B   LD       V3, #9B         ; Load 155 into V3
$222    $2C39   CALL     $C39            ; Call subroutine at C39
$224    $F0C0   UNKNOWN  F0C0            ; Unknown Fxxx instruction
$226    $BE23   JP       V0, $E23        ; Jump to V0 + E23
$228    $0286   SYS      $286            ; System call to 286
$22A    $430B   SNE      V3, #0B         ; Skip if V3 != 11
$22C    $CE56   RND      VE, #56         ; VE = random & 56
$22E    $1659   JP       $659            ; Jump to 659
$230    $893C   UNKNOWN  893C            ; Unknown 8xxx instruction
$232    $7397   ADD      V3, #97         ; Add 151 to V3
$234    $2930   CALL     $930            ; Call subroutine at 930
$236    $BBEA   JP       V0, $BEA        ; Jump to V0 + BEA
$238    $C0A0   RND      V0, #A0         ; V0 = random & A0
$23A    $A684   LD       I, $684         ; Load 684 into I
$23C    $5720   SE       V7, V2          ; Skip if V7 == V2
$23E    $C26C   RND      V2, #6C         ; V2 = random & 6C
$240    $5A9E   UNKNOWN  $5A9E           ; Unknown 5xxx instruction
$242    $9D54   UNKNOWN  $9D54           ; Unknown 9xxx instruction
$244    $2415   CALL     $415            ; Call subroutine at 415
$246    $D779   DRW      V7, V7, #9      ; Draw 9-byte sprite at V7, V7
$248    $B386   JP       V0, $386        ; Jump to V0 + 386
$24A    $8C02   AND      VC, V0          ; VC &= V0
$24C    $4717   SNE      V7, #17         ; Skip if V7 != 23
$24E    $C8EA   RND      V8, #EA         ; V8 = random & EA
$250    $12F7   JP       $2F7            ; Jump to 2F7
$252    $5A65   UNKNOWN  $5A65           ; Unknown 5xxx instruction
$254    $4F55   SNE      VF, #55         ; Skip if VF != 85
$256    $6C11   LD       VC, #11         ; Load 17 into VC
$258    $6CE9   LD       VC, #E9         ; Load 233 into VC
$25A    $D9CC   DRW      V9, VC, #C      ; Draw 12-byte sprite at V9, VC
$25C    $5BA1   UNKNOWN  $5BA1           ; Unknown 5xxx instruction
$25E    $3854   SE       V8, #54         ; Skip if V8 == 84
$260    $8B36   SHR      VB              ; VB >>= 1, VF = LSB
$262    $F4AB   UNKNOWN  F4AB            ; Unknown Fxxx instruction
$264    $9AA5   UNKNOWN  $9AA5           ; Unknown 9xxx instruction
$266    $EB46   UNKNOWN  $EB46           ; Unknown Exxx instruction
$268    $48E9   SNE      V8, #E9         ; Skip if V8 != 233
$26A    $4AF0   SNE      VA, #F0         ; Skip if VA != 240
$26C    $8C89   UNKNOWN  8C89            ; Unknown 8xxx instruction
$26E    $49FC   SNE      V9, #FC         ; Skip if V9 != 252
$270    $5B9D   UNKNOWN  $5B9D           ; Unknown 5xxx instruction
$272    $62C3   LD       V2, #C3         ; Load 195 into V2
$274    $FC0D   UNKNOWN  FC0D            ; Unknown Fxxx instruction
$276    $34F7   SE       V4, #F7         ; Skip if V4 == 247
$278    $6CF7   LD       VC, #F7         ; Load 247 into VC
$27A    $8762   AND      V7, V6          ; V7 &= V6
$27C    $3AA8   SE       VA, #A8         ; Skip if VA == 168
$27E    $AA94   LD       I, $A94         ; Load A94 into I
$280    $A1D4   LD       I, $1D4         ; Load 1D4 into I
$282    $858F   UNKNOWN  858F            ; Unknown 8xxx instruction
$284    $50B6   UNKNOWN  $50B6           ; Unknown 5xxx instruction
$286    $65C6   LD       V5, #C6         ; Load 198 into V5
$288    $B1E0   JP       V0, $1E0        ; Jump to V0 + 1E0
$28A    $EADF   UNKNOWN  $EADF           ; Unknown Exxx instruction
$28C    $949A   UNKNOWN  $949A           ; Unknown 9xxx instruction
$28E    $1E39   JP       $E39            ; Jump to E39
$290    $3BBC   SE       VB, #BC         ; Skip if VB == 188
$292    $10EA   JP       $0EA            ; Jump to 0EA
$294    $8A0A   UNKNOWN  8A0A            ; Unknown 8xxx instruction
$296    $025E   SYS      $25E            ; System call to 25E
$298    $EEC1   UNKNOWN  $EEC1           ; Unknown Exxx instruction
$29A    $C1C1   RND      V1, #C1         ; V1 = random & C1
$29C    $E7B0   UNKNOWN  $E7B0           ; Unknown Exxx instruction
$29E    $1209   JP       $209            ; Jump to 209
$2A0    $4B0D   SNE      VB, #0D         ; Skip if VB != 13
$2A2    $63DF   LD       V3, #DF         ; Load 223 into V3
$2A4    $4A21   SNE      VA, #21         ; Skip if VA != 33
$2A6    $A712   LD       I, $712         ; Load 712 into I
$2A8    $3FE5   SE       VF, #E5         ; Skip if VF == 229
$2AA    $42EE   SNE      V2, #EE         ; Skip if V2 != 238
$2AC    $75CA   ADD      V5, #CA         ; Add 202 to V5
$2AE    $869E   SHL      V6              ; V6 <<= 1, VF = MSB
$2B0    $0DAD   SYS      $DAD            ; System call to DAD
$2B2    $E845   UNKNOWN  $E845           ; Unknown Exxx instruction
$2B4    $3706   SE       V7, #06         ; Skip if V7 == 6
$2B6    $14C5   JP       $4C5            ; Jump to 4C5
$2B8    $7FD3   ADD      VF, #D3         ; Add 211 to VF
$2BA    $A668   LD       I, $668         ; Load 668 into I
$2BC    $0A74   SYS      $A74            ; System call to A74
$2BE    $6C2E   LD       VC, #2E         ; Load 46 into VC
$2C0    $3389   SE       V3, #89         ; Skip if V3 == 137
$2C2    $8AFB   UNKNOWN  8AFB            ; Unknown 8xxx instruction
$2C4    $FB35   UNKNOWN  FB35            ; Unknown Fxxx instruction
$2C6    $9B68   UNKNOWN  $9B68           ; Unknown 9xxx instruction
$2C8    $5C4F   UNKNOWN  $5C4F           ; Unknown 5xxx instruction
$2CA    $D028   DRW      V0, V2, #8      ; Draw 8-byte sprite at V0, V2
$2CC    $E74C   UNKNOWN  $E74C           ; Unknown Exxx instruction
$2CE    $7A74   ADD      VA, #74         ; Add 116 to VA
$2D0    $D7E0   DRW      V7, VE, #0      ; Draw 0-byte sprite at V7, VE
$2D2    $1EAC   JP       $EAC            ; Jump to EAC
$2D4    $BC99   JP       V0, $C99        ; Jump to V0 + C99
$2D6    $54AB   UNKNOWN  $54AB           ; Unknown 5xxx instruction
$2D8    $1B92   JP       $B92            ; Jump to B92
$2DA    $E66B   UNKNOWN  $E66B           ; Unknown Exxx instruction
$2DC    $3AF0   SE       VA, #F0         ; Skip if VA == 240
$2DE    $F0F0   UNKNOWN  F0F0            ; Unknown Fxxx instruction
$2E0    $F0F0   UNKNOWN  F0F0            ; Unknown Fxxx instruction
$2E2    $F0F0   UNKNOWN  F0F0            ; Unknown Fxxx instruction
$2E4    $F0F0   UNKNOWN  F0F0            ; Unknown Fxxx instruction
$2E6    $F0F0   UNKNOWN  F0F0            ; Unknown Fxxx instruction
$2E8    $F0F0   UNKNOWN  F0F0            ; Unknown Fxxx instruction
$2EA    $F0F0   UNKNOWN  F0F0            ; Unknown Fxxx instruction
$2EC    $F0F0   UNKNOWN  F0F0            ; Unknown Fxxx instruction
$2EE    $F0F0   UNKNOWN  F0F0            ; Unknown Fxxx instruction
$2F0    $F0F0   UNKNOWN  F0F0            ; Unknown Fxxx instruction
$2F2    $F0F0   UNKNOWN  F0F0            ; Unknown Fxxx instruction
$2F4    $F0F0   UNKNOWN  F0F0            ; Unknown Fxxx instruction
$2F6    $F0F0   UNKNOWN  F0F0            ; Unknown Fxxx instruction
$2F8    $F0F0   UNKNOWN  F0F0            ; Unknown Fxxx instruction
$2FA    $F0F0   UNKNOWN  F0F0            ; Unknown Fxxx instruction
$2FC    $F0F0   UNKNOWN  F0F0            ; Unknown Fxxx instruction
$2FE    $F0F0   UNKNOWN  F0F0            ; Unknown Fxxx instruction
$300    $F0F0   UNKNOWN  F0F0            ; Unknown Fxxx instruction
$302    $F0F0   UNKNOWN  F0F0            ; Unknown Fxxx instruction
$304    $F0F0   UNKNOWN  F0F0            ; Unknown Fxxx instruction
$306    $F073   UNKNOWN  F073            ; Unknown Fxxx instruction
$308    $2105   CALL     $105            ; Call subroutine at 105
$30A    $5E46   UNKNOWN  $5E46           ; Unknown 5xxx instruction
$30C    $6E4B   LD       VE, #4B         ; Load 75 into VE
$30E    $89F8   UNKNOWN  89F8            ; Unknown 8xxx instruction
$310    $D35C   DRW      V3, V5, #C      ; Draw 12-byte sprite at V3, V5
$312    $0FE0   SYS      $FE0            ; System call to FE0
$314    $BB3B   JP       V0, $B3B        ; Jump to V0 + B3B
$316    $ABFB   LD       I, $BFB         ; Load BFB into I
$318    $F74F   UNKNOWN  F74F            ; Unknown Fxxx instruction
$31A    $8423   XOR      V4, V2          ; V4 ^= V2
$31C    $90F5   UNKNOWN  $90F5           ; Unknown 9xxx instruction
$31E    $EBDA   UNKNOWN  $EBDA           ; Unknown Exxx instruction
$320    $D5A5   DRW      V5, VA, #5      ; Draw 5-byte sprite at V5, VA
$322    $DB51   DRW      VB, V5, #1      ; Draw 1-byte sprite at VB, V5
$324    $4284   SNE      V2, #84         ; Skip if V2 != 132
$326    $5E9A   UNKNOWN  $5E9A           ; Unknown 5xxx instruction
$328    $0C6F   SYS      $C6F            ; System call to C6F
$32A    $872B   UNKNOWN  872B            ; Unknown 8xxx instruction
$32C    $19B8   JP       $9B8            ; Jump to 9B8
$32E    $BA89   JP       V0, $A89        ; Jump to V0 + A89
$330    $142A   JP       $42A            ; Jump to 42A
$332    $C8E5   RND      V8, #E5         ; V8 = random & E5
$334    $CC95   RND      VC, #95         ; VC = random & 95
$336    $88F7   SUBN     V8, VF          ; V8 = VF - V8, VF = !borrow
$338    $AADA   LD       I, $ADA         ; Load ADA into I
$33A    $35E8   SE       V5, #E8         ; Skip if V5 == 232
$33C    $D6F4   DRW      V6, VF, #4      ; Draw 4-byte sprite at V6, VF
$33E    $1007   JP       $007            ; Jump to 007
$340    $E1A2   UNKNOWN  $E1A2           ; Unknown Exxx instruction
$342    $78DB   ADD      V8, #DB         ; Add 219 to V8
$344    $1B71   JP       $B71            ; Jump to B71
$346    $D961   DRW      V9, V6, #1      ; Draw 1-byte sprite at V9, V6
$348    $70B4   ADD      V0, #B4         ; Add 180 to V0
$34A    $08C2   SYS      $8C2            ; System call to 8C2
$34C    $BBB0   JP       V0, $BB0        ; Jump to V0 + BB0
$34E    $EA0C   UNKNOWN  $EA0C           ; Unknown Exxx instruction
$350    $E5AC   UNKNOWN  $E5AC           ; Unknown Exxx instruction
$352    $20FC   CALL     $0FC            ; Call subroutine at 0FC
$354    $39AE   SE       V9, #AE         ; Skip if V9 == 174
$356    $0CE2   SYS      $CE2            ; System call to CE2
$358    $46D6   SNE      V6, #D6         ; Skip if V6 != 214
$35A    $BE9E   JP       V0, $E9E        ; Jump to V0 + E9E
$35C    $1C3F   JP       $C3F            ; Jump to C3F
$35E    $A812   LD       I, $812         ; Load 812 into I
$360    $0F6F   SYS      $F6F            ; System call to F6F
$362    $9EB7   UNKNOWN  $9EB7           ; Unknown 9xxx instruction
$364    $AEDE   LD       I, $EDE         ; Load EDE into I
$366    $0526   SYS      $526            ; System call to 526
$368    $F859   UNKNOWN  F859            ; Unknown Fxxx instruction
$36A    $0D38   SYS      $D38            ; System call to D38
$36C    $1D7B   JP       $D7B            ; Jump to D7B
$36E    $9AEF   UNKNOWN  $9AEF           ; Unknown 9xxx instruction
$370    $FF96   UNKNOWN  FF96            ; Unknown Fxxx instruction
$372    $F32D   UNKNOWN  F32D            ; Unknown Fxxx instruction
$374    $8D72   AND      VD, V7          ; VD &= V7
$376    $50B3   UNKNOWN  $50B3           ; Unknown 5xxx instruction
$378    $E1B0   UNKNOWN  $E1B0           ; Unknown Exxx instruction
$37A    $EDD9   UNKNOWN  $EDD9           ; Unknown Exxx instruction
$37C    $EF2F   UNKNOWN  $EF2F           ; Unknown Exxx instruction
$37E    $5620   SE       V6, V2          ; Skip if V6 == V2
$380    $8FCC   UNKNOWN  8FCC            ; Unknown 8xxx instruction
$382    $C954   RND      V9, #54         ; V9 = random & 54
$384    $92E6   UNKNOWN  $92E6           ; Unknown 9xxx instruction
$386    $1F97   JP       $F97            ; Jump to F97
$388    $B541   JP       V0, $541        ; Jump to V0 + 541
$38A    $E8D6   UNKNOWN  $E8D6           ; Unknown Exxx instruction
$38C    $C733   RND      V7, #33         ; V7 = random & 33
$38E    $51E6   UNKNOWN  $51E6           ; Unknown 5xxx instruction
$390    $CA11   RND      VA, #11         ; VA = random & 11
$392    $CE95   RND      VE, #95         ; VE = random & 95
$394    $C619   RND      V6, #19         ; V6 = random & 19
$396    $8702   AND      V7, V0          ; V7 &= V0
$398    $D833   DRW      V8, V3, #3      ; Draw 3-byte sprite at V8, V3
$39A    $B85E   JP       V0, $85E        ; Jump to V0 + 85E
$39C    $3AC1   SE       VA, #C1         ; Skip if VA == 193
$39E    $002F   SYS      $02F            ; System call to 02F
$3A0    $3639   SE       V6, #39         ; Skip if V6 == 57
$3A2    $DADE   DRW      VA, VD, #E      ; Draw 14-byte sprite at VA, VD
$3A4    $1BE5   JP       $BE5            ; Jump to BE5
$3A6    $9B5E   UNKNOWN  $9B5E           ; Unknown 9xxx instruction
$3A8    $6E28   LD       VE, #28         ; Load 40 into VE
$3AA    $2545   CALL     $545            ; Call subroutine at 545
$3AC    $DCE9   DRW      VC, VE, #9      ; Draw 9-byte sprite at VC, VE
$3AE    $B137   JP       V0, $137        ; Jump to V0 + 137
$3B0    $C2AC   RND      V2, #AC         ; V2 = random & AC
$3B2    $B834   JP       V0, $834        ; Jump to V0 + 834
$3B4    $83D9   UNKNOWN  83D9            ; Unknown 8xxx instruction
$3B6    $4CBD   SNE      VC, #BD         ; Skip if VC != 189
$3B8    $5AE5   UNKNOWN  $5AE5           ; Unknown 5xxx instruction
$3BA    $26A8   CALL     $6A8            ; Call subroutine at 6A8
$3BC    $39CE   SE       V9, #CE         ; Skip if V9 == 206
$3BE    $4A15   SNE      VA, #15         ; Skip if VA != 21
$3C0    $3EDC   SE       VE, #DC         ; Skip if VE == 220
$3C2    $EF8A   UNKNOWN  $EF8A           ; Unknown Exxx instruction
$3C4    $0F14   SYS      $F14            ; System call to F14
$3C6    $4851   SNE      V8, #51         ; Skip if V8 != 81
$3C8    $F9E3   UNKNOWN  F9E3            ; Unknown Fxxx instruction
$3CA    $673D   LD       V7, #3D         ; Load 61 into V7
$3CC    $0B7D   SYS      $B7D            ; System call to B7D
$3CE    $CBA1   RND      VB, #A1         ; VB = random & A1
$3D0    $60EA   LD       V0, #EA         ; Load 234 into V0
$3D2    $D7AA   DRW      V7, VA, #A      ; Draw 10-byte sprite at V7, VA
$3D4    $B5A9   JP       V0, $5A9        ; Jump to V0 + 5A9
$3D6    $13DC   JP       $3DC            ; Jump to 3DC
$3D8    $A64F   LD       I, $64F         ; Load 64F into I
$3DA    $138C   JP       $38C            ; Jump to 38C
$3DC    $697E   LD       V9, #7E         ; Load 126 into V9
$3DE    $5E33   UNKNOWN  $5E33           ; Unknown 5xxx instruction
$3E0    $D80F   DRW      V8, V0, #F      ; Draw 15-byte sprite at V8, V0
$3E2    $05A8   SYS      $5A8            ; System call to 5A8
$3E4    $0FBF   SYS      $FBF            ; System call to FBF
$3E6    $CE7C   RND      VE, #7C         ; VE = random & 7C
$3E8    $C3CD   RND      V3, #CD         ; V3 = random & CD
$3EA    $233C   CALL     $33C            ; Call subroutine at 33C
$3EC    $CB2A   RND      VB, #2A         ; VB = random & 2A
$3EE    $9337   UNKNOWN  $9337           ; Unknown 9xxx instruction
$3F0    $EC6F   UNKNOWN  $EC6F           ; Unknown Exxx instruction
$3F2    $DBC1   DRW      VB, VC, #1      ; Draw 1-byte sprite at VB, VC
$3F4    $100E   JP       $00E            ; Jump to 00E
$3F6    $98C7   UNKNOWN  $98C7           ; Unknown 9xxx instruction
$3F8    $E45A   UNKNOWN  $E45A           ; Unknown Exxx instruction
$3FA    $2CB1   CALL     $CB1            ; Call subroutine at CB1
$3FC    $2E28   CALL     $E28            ; Call subroutine at E28
$3FE    $0CBA   SYS      $CBA            ; System call to CBA
$400    $DF0D   DRW      VF, V0, #D      ; Draw 13-byte sprite at VF, V0
$402    $EF2F   UNKNOWN  $EF2F           ; Unknown Exxx instruction
$404    $680F   LD       V8, #0F         ; Load 15 into V8
$406    $98D3   UNKNOWN  $98D3           ; Unknown 9xxx instruction
$408    $19F7   JP       $9F7            ; Jump to 9F7
$40A    $0B0C   SYS      $B0C            ; System call to B0C
$40C    $76BA   ADD      V6, #BA         ; Add 186 to V6
$40E    $9D65   UNKNOWN  $9D65           ; Unknown 9xxx instruction
$410    $9830   SNE      V8, V3          ; Skip if V8 != V3
$412    $8CBC   UNKNOWN  8CBC            ; Unknown 8xxx instruction
$414    $1F34   JP       $F34            ; Jump to F34
$416    $7EA0   ADD      VE, #A0         ; Add 160 to VE
$418    $6668   LD       V6, #68         ; Load 104 into V6
$41A    $020B   SYS      $20B            ; System call to 20B
$41C    $816C   UNKNOWN  816C            ; Unknown 8xxx instruction
$41E    $F69A   UNKNOWN  F69A            ; Unknown Fxxx instruction
$420    $4103   SNE      V1, #03         ; Skip if V1 != 3
$422    $4589   SNE      V5, #89         ; Skip if V5 != 137
$424    $0369   SYS      $369            ; System call to 369
$426    $4FF6   SNE      VF, #F6         ; Skip if VF != 246
$428    $83D9   UNKNOWN  83D9            ; Unknown 8xxx instruction
$42A    $227D   CALL     $27D            ; Call subroutine at 27D
$42C    $CD51   RND      VD, #51         ; VD = random & 51
$42E    $FF9A   UNKNOWN  FF9A            ; Unknown Fxxx instruction
$430    $56EB   UNKNOWN  $56EB           ; Unknown 5xxx instruction
$432    $6537   LD       V5, #37         ; Load 55 into V5
$434    $CD31   RND      VD, #31         ; VD = random & 31
$436    $F22B   UNKNOWN  F22B            ; Unknown Fxxx instruction
$438    $A970   LD       I, $970         ; Load 970 into I
$43A    $B53F   JP       V0, $53F        ; Jump to V0 + 53F
$43C    $A093   LD       I, $093         ; Load 093 into I
$43E    $C5D9   RND      V5, #D9         ; V5 = random & D9
$440    $ED19   UNKNOWN  $ED19           ; Unknown Exxx instruction
$442    $0BE4   SYS      $BE4            ; System call to BE4
$444    $21AC   CALL     $1AC            ; Call subroutine at 1AC
$446    $F2FB   UNKNOWN  F2FB            ; Unknown Fxxx instruction
$448    $BC22   JP       V0, $C22        ; Jump to V0 + C22
$44A    $E2A0   UNKNOWN  $E2A0           ; Unknown Exxx instruction
$44C    $55A4   UNKNOWN  $55A4           ; Unknown 5xxx instruction
$44E    $0708   SYS      $708            ; System call to 708
$450    $17E1   JP       $7E1            ; Jump to 7E1
$452    $157D   JP       $57D            ; Jump to 57D
$454    $11F7   JP       $1F7            ; Jump to 1F7
$456    $3EA5   SE       VE, #A5         ; Skip if VE == 165
$458    $67C9   LD       V7, #C9         ; Load 201 into V7
$45A    $447D   SNE      V4, #7D         ; Skip if V4 != 125
$45C    $5933   UNKNOWN  $5933           ; Unknown 5xxx instruction
$45E    $5B33   UNKNOWN  $5B33           ; Unknown 5xxx instruction
$460    $2B00   CALL     $B00            ; Call subroutine at B00
$462    $439A   SNE      V3, #9A         ; Skip if V3 != 154
$464    $5378   UNKNOWN  $5378           ; Unknown 5xxx instruction
$466    $917D   UNKNOWN  $917D           ; Unknown 9xxx instruction
$468    $0616   SYS      $616            ; System call to 616
$46A    $4922   SNE      V9, #22         ; Skip if V9 != 34
$46C    $9405   UNKNOWN  $9405           ; Unknown 9xxx instruction
$46E    $B0EE   JP       V0, $0EE        ; Jump to V0 + 0EE
$470    $42FD   SNE      V2, #FD         ; Skip if V2 != 253
$472    $75DD   ADD      V5, #DD         ; Add 221 to V5
$474    $3CCE   SE       VC, #CE         ; Skip if VC == 206
$476    $E9C6   UNKNOWN  $E9C6           ; Unknown Exxx instruction
$478    $244D   CALL     $44D            ; Call subroutine at 44D
$47A    $B29F   JP       V0, $29F        ; Jump to V0 + 29F
$47C    $FA1B   UNKNOWN  FA1B            ; Unknown Fxxx instruction
$47E    $4B4F   SNE      VB, #4F         ; Skip if VB != 79
$480    $37F4   SE       V7, #F4         ; Skip if V7 == 244
$482    $BB49   JP       V0, $B49        ; Jump to V0 + B49
$484    $B320   JP       V0, $320        ; Jump to V0 + 320
$486    $4CF7   SNE      VC, #F7         ; Skip if VC != 247
$488    $89FD   UNKNOWN  89FD            ; Unknown 8xxx instruction
$48A    $45F2   SNE      V5, #F2         ; Skip if V5 != 242
$48C    $E8FA   UNKNOWN  $E8FA           ; Unknown Exxx instruction
$48E    $3E79   SE       VE, #79         ; Skip if VE == 121
$490    $B1B6   JP       V0, $1B6        ; Jump to V0 + 1B6
$492    $DCFB   DRW      VC, VF, #B      ; Draw 11-byte sprite at VC, VF
$494    $52E2   UNKNOWN  $52E2           ; Unknown 5xxx instruction
$496    $17C1   JP       $7C1            ; Jump to 7C1
$498    $0873   SYS      $873            ; System call to 873
$49A    $8E4B   UNKNOWN  8E4B            ; Unknown 8xxx instruction
$49C    $89F7   SUBN     V9, VF          ; V9 = VF - V9, VF = !borrow
$49E    $1E46   JP       $E46            ; Jump to E46
$4A0    $17C2   JP       $7C2            ; Jump to 7C2
$4A2    $3076   SE       V0, #76         ; Skip if V0 == 118
$4A4    $8950   LD       V9, V5          ; V9 = V5
$4A6    $8639   UNKNOWN  8639            ; Unknown 8xxx instruction
$4A8    $75FE   ADD      V5, #FE         ; Add 254 to V5
$4AA    $B6BB   JP       V0, $6BB        ; Jump to V0 + 6BB
$4AC    $0ADB   SYS      $ADB            ; System call to ADB
$4AE    $2182   CALL     $182            ; Call subroutine at 182
$4B0    $B34E   JP       V0, $34E        ; Jump to V0 + 34E
$4B2    $B712   JP       V0, $712        ; Jump to V0 + 712
$4B4    $DC9C   DRW      VC, V9, #C      ; Draw 12-byte sprite at VC, V9
$4B6    $3B57   SE       VB, #57         ; Skip if VB == 87
$4B8    $0676   SYS      $676            ; System call to 676
$4BA    $9EF8   UNKNOWN  $9EF8           ; Unknown 9xxx instruction
$4BC    $26CA   CALL     $6CA            ; Call subroutine at 6CA
$4BE    $5818   UNKNOWN  $5818           ; Unknown 5xxx instruction
$4C0    $9CB6   UNKNOWN  $9CB6           ; Unknown 9xxx instruction
$4C2    $BE89   JP       V0, $E89        ; Jump to V0 + E89
$4C4    $E2D8   UNKNOWN  $E2D8           ; Unknown Exxx instruction
$4C6    $0140   SYS      $140            ; System call to 140
$4C8    $F235   UNKNOWN  F235            ; Unknown Fxxx instruction
$4CA    $6A87   LD       VA, #87         ; Load 135 into VA
$4CC    $05BE   SYS      $5BE            ; System call to 5BE
$4CE    $1927   JP       $927            ; Jump to 927
$4D0    $E6AF   UNKNOWN  $E6AF           ; Unknown Exxx instruction
$4D2    $3D53   SE       VD, #53         ; Skip if VD == 83
$4D4    $2973   CALL     $973            ; Call subroutine at 973
$4D6    $3A12   SE       VA, #12         ; Skip if VA == 18
$4D8    $29A0   CALL     $9A0            ; Call subroutine at 9A0
$4DA    $F0E0   UNKNOWN  F0E0            ; Unknown Fxxx instruction
$4DC    $E6BF   UNKNOWN  $E6BF           ; Unknown Exxx instruction
$4DE    $9941   UNKNOWN  $9941           ; Unknown 9xxx instruction
$4E0    $AD38   LD       I, $D38         ; Load D38 into I
$4E2    $36BA   SE       V6, #BA         ; Skip if V6 == 186
$4E4    $180F   JP       $80F            ; Jump to 80F
$4E6    $FE17   UNKNOWN  FE17            ; Unknown Fxxx instruction
$4E8    $671E   LD       V7, #1E         ; Load 30 into V7
$4EA    $8A21   OR       VA, V2          ; VA |= V2
$4EC    $AA06   LD       I, $A06         ; Load A06 into I
$4EE    $011B   SYS      $11B            ; System call to 11B
$4F0    $1F96   JP       $F96            ; Jump to F96
$4F2    $5925   UNKNOWN  $5925           ; Unknown 5xxx instruction
$4F4    $9C0C   UNKNOWN  $9C0C           ; Unknown 9xxx instruction
$4F6    $5112   UNKNOWN  $5112           ; Unknown 5xxx instruction
$4F8    $0674   SYS      $674            ; System call to 674
$4FA    $7BC1   ADD      VB, #C1         ; Add 193 to VB
$4FC    $9303   UNKNOWN  $9303           ; Unknown 9xxx instruction
$4FE    $C9C8   RND      V9, #C8         ; V9 = random & C8
$500    $6106   LD       V1, #06         ; Load 6 into V1
$502    $812A   UNKNOWN  812A            ; Unknown 8xxx instruction
$504    $E897   UNKNOWN  $E897           ; Unknown Exxx instruction
$506    $8AEE   SHL      VA              ; VA <<= 1, VF = MSB
$508    $8BEE   SHL      VB              ; VB <<= 1, VF = MSB
$50A    $CD32   RND      VD, #32         ; VD = random & 32
$50C    $A198   LD       I, $198         ; Load 198 into I
$50E    $AE14   LD       I, $E14         ; Load E14 into I
$510    $E714   UNKNOWN  $E714           ; Unknown Exxx instruction
$512    $04EF   SYS      $4EF            ; System call to 4EF
$514    $D48C   DRW      V4, V8, #C      ; Draw 12-byte sprite at V4, V8
$516    $DE55   DRW      VE, V5, #5      ; Draw 5-byte sprite at VE, V5
$518    $E953   UNKNOWN  $E953           ; Unknown Exxx instruction
$51A    $4DB6   SNE      VD, #B6         ; Skip if VD != 182
$51C    $F555   LD       [I], V5         ; Store V0-V5 at I
$51E    $51BE   UNKNOWN  $51BE           ; Unknown 5xxx instruction
$520    $5CC4   UNKNOWN  $5CC4           ; Unknown 5xxx instruction
$522    $94A6   UNKNOWN  $94A6           ; Unknown 9xxx instruction
$524    $EB36   UNKNOWN  $EB36           ; Unknown Exxx instruction
$526    $BBC5   JP       V0, $BC5        ; Jump to V0 + BC5
$528    $2662   CALL     $662            ; Call subroutine at 662
$52A    $B430   JP       V0, $430        ; Jump to V0 + 430
$52C    $8CAE   SHL      VC              ; VC <<= 1, VF = MSB
$52E    $40D2   SNE      V0, #D2         ; Skip if V0 != 210
$530    $4B33   SNE      VB, #33         ; Skip if VB != 51
$532    $FF98   UNKNOWN  FF98            ; Unknown Fxxx instruction
$534    $2C0A   CALL     $C0A            ; Call subroutine at C0A
$536    $5BA9   UNKNOWN  $5BA9           ; Unknown 5xxx instruction
$538    $4A6D   SNE      VA, #6D         ; Skip if VA != 109
$53A    $4195   SNE      V1, #95         ; Skip if V1 != 149
$53C    $7052   ADD      V0, #52         ; Add 82 to V0
$53E    $C0DD   RND      V0, #DD         ; V0 = random & DD
$540    $19C1   JP       $9C1            ; Jump to 9C1
$542    $92D8   UNKNOWN  $92D8           ; Unknown 9xxx instruction
$544    $AA68   LD       I, $A68         ; Load A68 into I
$546    $9B02   UNKNOWN  $9B02           ; Unknown 9xxx instruction
$548    $E480   UNKNOWN  $E480           ; Unknown Exxx instruction
$54A    $6DD1   LD       VD, #D1         ; Load 209 into VD
$54C    $9992   UNKNOWN  $9992           ; Unknown 9xxx instruction
$54E    $C38D   RND      V3, #8D         ; V3 = random & 8D
$550    $8B9E   SHL      VB              ; VB <<= 1, VF = MSB
$552    $9575   UNKNOWN  $9575           ; Unknown 9xxx instruction
$554    $C7C5   RND      V7, #C5         ; V7 = random & C5
$556    $440E   SNE      V4, #0E         ; Skip if V4 != 14
$558    $9A90   SNE      VA, V9          ; Skip if VA != V9
$55A    $018B   SYS      $18B            ; System call to 18B
$55C    $0154   SYS      $154            ; System call to 154
$55E    $E51B   UNKNOWN  $E51B           ; Unknown Exxx instruction
$560    $62FF   LD       V2, #FF         ; Load 255 into V2
$562    $294A   CALL     $94A            ; Call subroutine at 94A
$564    $CB81   RND      VB, #81         ; VB = random & 81
$566    $6A30   LD       VA, #30         ; Load 48 into VA
$568    $12A1   JP       $2A1            ; Jump to 2A1
$56A    $78AF   ADD      V8, #AF         ; Add 175 to V8
$56C    $314F   SE       V1, #4F         ; Skip if V1 == 79
$56E    $6D1E   LD       VD, #1E         ; Load 30 into VD
$570    $D44C   DRW      V4, V4, #C      ; Draw 12-byte sprite at V4, V4
$572    $6709   LD       V7, #09         ; Load 9 into V7
$574    $97F6   UNKNOWN  $97F6           ; Unknown 9xxx instruction
$576    $A577   LD       I, $577         ; Load 577 into I
$578    $3917   SE       V9, #17         ; Skip if V9 == 23
$57A    $57BE   UNKNOWN  $57BE           ; Unknown 5xxx instruction
$57C    $1811   JP       $811            ; Jump to 811
$57E    $95AB   UNKNOWN  $95AB           ; Unknown 9xxx instruction
$580    $8619   UNKNOWN  8619            ; Unknown 8xxx instruction
$582    $3BFB   SE       VB, #FB         ; Skip if VB == 251
$584    $FE6E   UNKNOWN  FE6E            ; Unknown Fxxx instruction
$586    $5DCA   UNKNOWN  $5DCA           ; Unknown 5xxx instruction
$588    $9D71   UNKNOWN  $9D71           ; Unknown 9xxx instruction
$58A    $01B0   SYS      $1B0            ; System call to 1B0
$58C    $5D14   UNKNOWN  $5D14           ; Unknown 5xxx instruction
$58E    $8B5E   SHL      VB              ; VB <<= 1, VF = MSB
$590    $EA7B   UNKNOWN  $EA7B           ; Unknown Exxx instruction
$592    $11FA   JP       $1FA            ; Jump to 1FA
$594    $A4F7   LD       I, $4F7         ; Load 4F7 into I
$596    $5997   UNKNOWN  $5997           ; Unknown 5xxx instruction
$598    $508C   UNKNOWN  $508C           ; Unknown 5xxx instruction
$59A    $727E   ADD      V2, #7E         ; Add 126 to V2
$59C    $FA8D   UNKNOWN  FA8D            ; Unknown Fxxx instruction
$59E    $65AA   LD       V5, #AA         ; Load 170 into V5
$5A0    $93DF   UNKNOWN  $93DF           ; Unknown 9xxx instruction
$5A2    $7966   ADD      V9, #66         ; Add 102 to V9
$5A4    $FA66   UNKNOWN  FA66            ; Unknown Fxxx instruction
$5A6    $B3F2   JP       V0, $3F2        ; Jump to V0 + 3F2
$5A8    $6A8A   LD       VA, #8A         ; Load 138 into VA
$5AA    $75BF   ADD      V5, #BF         ; Add 191 to V5
$5AC    $A2D8   LD       I, $2D8         ; Load 2D8 into I
$5AE    $BE9E   JP       V0, $E9E        ; Jump to V0 + E9E
$5B0    $5AF7   UNKNOWN  $5AF7           ; Unknown 5xxx instruction
$5B2    $6BCE   LD       VB, #CE         ; Load 206 into VB
$5B4    $59AD   UNKNOWN  $59AD           ; Unknown 5xxx instruction
$5B6    $0B81   SYS      $B81            ; System call to B81
$5B8    $5E3D   UNKNOWN  $5E3D           ; Unknown 5xxx instruction
$5BA    $11CC   JP       $1CC            ; Jump to 1CC
$5BC    $F0EC   UNKNOWN  F0EC            ; Unknown Fxxx instruction
$5BE    $E672   UNKNOWN  $E672           ; Unknown Exxx instruction
$5C0    $DC9B   DRW      VC, V9, #B      ; Draw 11-byte sprite at VC, V9
$5C2    $26F4   CALL     $6F4            ; Call subroutine at 6F4
$5C4    $DE33   DRW      VE, V3, #3      ; Draw 3-byte sprite at VE, V3
$5C6    $E2D5   UNKNOWN  $E2D5           ; Unknown Exxx instruction
$5C8    $DBF4   DRW      VB, VF, #4      ; Draw 4-byte sprite at VB, VF
$5CA    $416E   SNE      V1, #6E         ; Skip if V1 != 110
$5CC    $5372   UNKNOWN  $5372           ; Unknown 5xxx instruction
$5CE    $CC8A   RND      VC, #8A         ; VC = random & 8A
$5D0    $4C62   SNE      VC, #62         ; Skip if VC != 98
$5D2    $D24E   DRW      V2, V4, #E      ; Draw 14-byte sprite at V2, V4
$5D4    $F71E   ADD      I, V7           ; I += V7
$5D6    $6351   LD       V3, #51         ; Load 81 into V3
$5D8    $0A5B   SYS      $A5B            ; System call to A5B
$5DA    $058B   SYS      $58B            ; System call to 58B
$5DC    $7398   ADD      V3, #98         ; Add 152 to V3
$5DE    $C6E0   RND      V6, #E0         ; V6 = random & E0
$5E0    $0B85   SYS      $B85            ; System call to B85
$5E2    $ADAB   LD       I, $DAB         ; Load DAB into I
$5E4    $E53B   UNKNOWN  $E53B           ; Unknown Exxx instruction
$5E6    $E809   UNKNOWN  $E809           ; Unknown Exxx instruction
$5E8    $F251   UNKNOWN  F251            ; Unknown Fxxx instruction
$5EA    $3E39   SE       VE, #39         ; Skip if VE == 57
$5EC    $6063   LD       V0, #63         ; Load 99 into V0
$5EE    $1851   JP       $851            ; Jump to 851
$5F0    $F169   UNKNOWN  F169            ; Unknown Fxxx instruction
$5F2    $DF4B   DRW      VF, V4, #B      ; Draw 11-byte sprite at VF, V4
$5F4    $24D5   CALL     $4D5            ; Call subroutine at 4D5
$5F6    $0D38   SYS      $D38            ; System call to D38
$5F8    $1647   JP       $647            ; Jump to 647
$5FA    $731C   ADD      V3, #1C         ; Add 28 to V3
$5FC    $4112   SNE      V1, #12         ; Skip if V1 != 18
$5FE    $5D29   UNKNOWN  $5D29           ; Unknown 5xxx instruction
$600    $2B98   CALL     $B98            ; Call subroutine at B98
$602    $35F6   SE       V5, #F6         ; Skip if V5 == 246
$604    $B777   JP       V0, $777        ; Jump to V0 + 777
$606    $7751   ADD      V7, #51         ; Add 81 to V7
$608    $6D28   LD       VD, #28         ; Load 40 into VD
$60A    $B819   JP       V0, $819        ; Jump to V0 + 819
$60C    $80C0   LD       V0, VC          ; V0 = VC
$60E    $0FD6   SYS      $FD6            ; System call to FD6
$610    $6DBD   LD       VD, #BD         ; Load 189 into VD
$612    $C121   RND      V1, #21         ; V1 = random & 21
$614    $F63D   UNKNOWN  F63D            ; Unknown Fxxx instruction
$616    $7924   ADD      V9, #24         ; Add 36 to V9
$618    $055E   SYS      $55E            ; System call to 55E
$61A    $C2FF   RND      V2, #FF         ; V2 = random & FF
$61C    $8499   UNKNOWN  8499            ; Unknown 8xxx instruction
$61E    $B122   JP       V0, $122        ; Jump to V0 + 122
$620    $A384   LD       I, $384         ; Load 384 into I
$622    $B29C   JP       V0, $29C        ; Jump to V0 + 29C
$624    $2533   CALL     $533            ; Call subroutine at 533
$626    $CD26   RND      VD, #26         ; VD = random & 26
$628    $0BF1   SYS      $BF1            ; System call to BF1
$62A    $79D0   ADD      V9, #D0         ; Add 208 to V9
$62C    $70F0   ADD      V0, #F0         ; Add 240 to V0
$62E    $45FC   SNE      V5, #FC         ; Skip if V5 != 252
$630    $ADD9   LD       I, $DD9         ; Load DD9 into I
$632    $8F26   SHR      VF              ; VF >>= 1, VF = LSB
$634    $A704   LD       I, $704         ; Load 704 into I
$636    $DC5A   DRW      VC, V5, #A      ; Draw 10-byte sprite at VC, V5
$638    $6DAC   LD       VD, #AC         ; Load 172 into VD
$63A    $65EE   LD       V5, #EE         ; Load 238 into V5
$63C    $5E37   UNKNOWN  $5E37           ; Unknown 5xxx instruction
$63E    $7F88   ADD      VF, #88         ; Add 136 to VF
$640    $4CAC   SNE      VC, #AC         ; Skip if VC != 172
$642    $4CBD   SNE      VC, #BD         ; Skip if VC != 189
$644    $6AB9   LD       VA, #B9         ; Load 185 into VA
$646    $2067   CALL     $067            ; Call subroutine at 067
$648    $EDFA   UNKNOWN  $EDFA           ; Unknown Exxx instruction
$64A    $A723   LD       I, $723         ; Load 723 into I
$64C    $C6B2   RND      V6, #B2         ; V6 = random & B2
$64E    $7D51   ADD      VD, #51         ; Add 81 to VD
$650    $8D34   ADD      VD, V3          ; VD += V3, VF = carry
$652    $82EB   UNKNOWN  82EB            ; Unknown 8xxx instruction
$654    $7D5C   ADD      VD, #5C         ; Add 92 to VD
$656    $77FA   ADD      V7, #FA         ; Add 250 to V7
$658    $EBF4   UNKNOWN  $EBF4           ; Unknown Exxx instruction
$65A    $2499   CALL     $499            ; Call subroutine at 499
$65C    $0092   SYS      $092            ; System call to 092
$65E    $EB0A   UNKNOWN  $EB0A           ; Unknown Exxx instruction
$660    $6A31   LD       VA, #31         ; Load 49 into VA
$662    $C024   RND      V0, #24         ; V0 = random & 24
$664    $632F   LD       V3, #2F         ; Load 47 into V3
$666    $29AC   CALL     $9AC            ; Call subroutine at 9AC
$668    $12D7   JP       $2D7            ; Jump to 2D7
$66A    $2866   CALL     $866            ; Call subroutine at 866
$66C    $E83C   UNKNOWN  $E83C           ; Unknown Exxx instruction
$66E    $5D7A   UNKNOWN  $5D7A           ; Unknown 5xxx instruction
$670    $672A   LD       V7, #2A         ; Load 42 into V7
$672    $F2D3   UNKNOWN  F2D3            ; Unknown Fxxx instruction
$674    $AFD6   LD       I, $FD6         ; Load FD6 into I
$676    $9061   UNKNOWN  $9061           ; Unknown 9xxx instruction
$678    $2341   CALL     $341            ; Call subroutine at 341
$67A    $9893   UNKNOWN  $9893           ; Unknown 9xxx instruction
$67C    $55D8   UNKNOWN  $55D8           ; Unknown 5xxx instruction
$67E    $BE66   JP       V0, $E66        ; Jump to V0 + E66
$680    $FC42   UNKNOWN  FC42            ; Unknown Fxxx instruction
$682    $AC27   LD       I, $C27         ; Load C27 into I
$684    $2D7F   CALL     $D7F            ; Call subroutine at D7F
$686    $6797   LD       V7, #97         ; Load 151 into V7
$688    $B6B0   JP       V0, $6B0        ; Jump to V0 + 6B0
$68A    $6F94   LD       VF, #94         ; Load 148 into VF
$68C    $FAA3   UNKNOWN  FAA3            ; Unknown Fxxx instruction
$68E    $E5E2   UNKNOWN  $E5E2           ; Unknown Exxx instruction
$690    $DB42   DRW      VB, V4, #2      ; Draw 2-byte sprite at VB, V4
$692    $9FA2   UNKNOWN  $9FA2           ; Unknown 9xxx instruction
$694    $0BC9   SYS      $BC9            ; System call to BC9
$696    $8A6A   UNKNOWN  8A6A            ; Unknown 8xxx instruction
$698    $30DA   SE       V0, #DA         ; Skip if V0 == 218
$69A    $2616   CALL     $616            ; Call subroutine at 616
$69C    $B19C   JP       V0, $19C        ; Jump to V0 + 19C
$69E    $F072   UNKNOWN  F072            ; Unknown Fxxx instruction
$6A0    $10B9   JP       $0B9            ; Jump to 0B9
$6A2    $73CA   ADD      V3, #CA         ; Add 202 to V3
$6A4    $630D   LD       V3, #0D         ; Load 13 into V3
$6A6    $A7A9   LD       I, $7A9         ; Load 7A9 into I
$6A8    $DCE0   DRW      VC, VE, #0      ; Draw 0-byte sprite at VC, VE
$6AA    $FD91   UNKNOWN  FD91            ; Unknown Fxxx instruction
$6AC    $20F8   CALL     $0F8            ; Call subroutine at 0F8
$6AE    $61A2   LD       V1, #A2         ; Load 162 into V1
$6B0    $BF3A   JP       V0, $F3A        ; Jump to V0 + F3A
$6B2    $7738   ADD      V7, #38         ; Add 56 to V7
$6B4    $73B4   ADD      V3, #B4         ; Add 180 to V3
$6B6    $2CDB   CALL     $CDB            ; Call subroutine at CDB
$6B8    $C54E   RND      V5, #4E         ; V5 = random & 4E
$6BA    $B3EC   JP       V0, $3EC        ; Jump to V0 + 3EC
$6BC    $5583   UNKNOWN  $5583           ; Unknown 5xxx instruction
$6BE    $74EE   ADD      V4, #EE         ; Add 238 to V4
$6C0    $6001   LD       V0, #01         ; Load 1 into V0
$6C2    $68FF   LD       V8, #FF         ; Load 255 into V8
$6C4    $01BB   SYS      $1BB            ; System call to 1BB
$6C6    $F337   UNKNOWN  F337            ; Unknown Fxxx instruction
$6C8    $7CD9   ADD      VC, #D9         ; Add 217 to VC
$6CA    $BFC2   JP       V0, $FC2        ; Jump to V0 + FC2
$6CC    $45E5   SNE      V5, #E5         ; Skip if V5 != 229
$6CE    $0F09   SYS      $F09            ; System call to F09
$6D0    $9B5C   UNKNOWN  $9B5C           ; Unknown 9xxx instruction
$6D2    $BF1B   JP       V0, $F1B        ; Jump to V0 + F1B
$6D4    $BA0A   JP       V0, $A0A        ; Jump to V0 + A0A
$6D6    $A39A   LD       I, $39A         ; Load 39A into I
$6D8    $1E25   JP       $E25            ; Jump to E25
$6DA    $21D0   CALL     $1D0            ; Call subroutine at 1D0
$6DC    $EF01   UNKNOWN  $EF01           ; Unknown Exxx instruction
$6DE    $9060   SNE      V0, V6          ; Skip if V0 != V6
$6E0    $C510   RND      V5, #10         ; V5 = random & 10
$6E2    $EEFA   UNKNOWN  $EEFA           ; Unknown Exxx instruction
$6E4    $3A28   SE       VA, #28         ; Skip if VA == 40
$6E6    $6705   LD       V7, #05         ; Load 5 into V7
$6E8    $D875   DRW      V8, V7, #5      ; Draw 5-byte sprite at V8, V7
$6EA    $179F   JP       $79F            ; Jump to 79F
$6EC    $5DB5   UNKNOWN  $5DB5           ; Unknown 5xxx instruction
$6EE    $A23E   LD       I, $23E         ; Load 23E into I
$6F0    $C028   RND      V0, #28         ; V0 = random & 28
$6F2    $C72F   RND      V7, #2F         ; V7 = random & 2F
$6F4    $FDC0   UNKNOWN  FDC0            ; Unknown Fxxx instruction
$6F6    $805E   SHL      V0              ; V0 <<= 1, VF = MSB
$6F8    $D557   DRW      V5, V5, #7      ; Draw 7-byte sprite at V5, V5
$6FA    $D105   DRW      V1, V0, #5      ; Draw 5-byte sprite at V1, V0
$6FC    $D407   DRW      V4, V0, #7      ; Draw 7-byte sprite at V4, V0
$6FE    $83B0   LD       V3, VB          ; V3 = VB
$700    $0A69   SYS      $A69            ; System call to A69
$702    $09DE   SYS      $9DE            ; System call to 9DE
$704    $CF50   RND      VF, #50         ; VF = random & 50
$706    $118C   JP       $18C            ; Jump to 18C
$708    $E3D9   UNKNOWN  $E3D9           ; Unknown Exxx instruction
$70A    $BDF0   JP       V0, $DF0        ; Jump to V0 + DF0
$70C    $9EB6   UNKNOWN  $9EB6           ; Unknown 9xxx instruction
$70E    $7D40   ADD      VD, #40         ; Add 64 to VD
$710    $4004   SNE      V0, #04         ; Skip if V0 != 4
$712    $D990   DRW      V9, V9, #0      ; Draw 0-byte sprite at V9, V9
$714    $C666   RND      V6, #66         ; V6 = random & 66
$716    $8587   SUBN     V5, V8          ; V5 = V8 - V5, VF = !borrow
$718    $1877   JP       $877            ; Jump to 877
$71A    $09E5   SYS      $9E5            ; System call to 9E5
$71C    $045D   SYS      $45D            ; System call to 45D
$71E    $6E86   LD       VE, #86         ; Load 134 into VE
$720    $E3B6   UNKNOWN  $E3B6           ; Unknown Exxx instruction
$722    $363E   SE       V6, #3E         ; Skip if V6 == 62
$724    $6B66   LD       VB, #66         ; Load 102 into VB
$726    $2313   CALL     $313            ; Call subroutine at 313
$728    $1B50   JP       $B50            ; Jump to B50
$72A    $3FFF   SE       VF, #FF         ; Skip if VF == 255
$72C    $A2D1   LD       I, $2D1         ; Load 2D1 into I
$72E    $6C7F   LD       VC, #7F         ; Load 127 into VC
$730    $62D9   LD       V2, #D9         ; Load 217 into V2
$732    $4494   SNE      V4, #94         ; Skip if V4 != 148
$734    $E6B8   UNKNOWN  $E6B8           ; Unknown Exxx instruction
$736    $83B4   ADD      V3, VB          ; V3 += VB, VF = carry
$738    $AE8A   LD       I, $E8A         ; Load E8A into I
$73A    $E0F1   UNKNOWN  $E0F1           ; Unknown Exxx instruction
$73C    $6C04   LD       VC, #04         ; Load 4 into VC
$73E    $8A34   ADD      VA, V3          ; VA += V3, VF = carry
$740    $E49C   UNKNOWN  $E49C           ; Unknown Exxx instruction
$742    $A346   LD       I, $346         ; Load 346 into I
$744    $A9EC   LD       I, $9EC         ; Load 9EC into I
$746    $2AC2   CALL     $AC2            ; Call subroutine at AC2
$748    $93C0   SNE      V3, VC          ; Skip if V3 != VC
$74A    $D66A   DRW      V6, V6, #A      ; Draw 10-byte sprite at V6, V6
$74C    $AE4E   LD       I, $E4E         ; Load E4E into I
$74E    $080B   SYS      $80B            ; System call to 80B
$750    $C3AD   RND      V3, #AD         ; V3 = random & AD
$752    $DE72   DRW      VE, V7, #2      ; Draw 2-byte sprite at VE, V7
$754    $FB0C   UNKNOWN  FB0C            ; Unknown Fxxx instruction
$756    $119D   JP       $19D            ; Jump to 19D
$758    $8679   UNKNOWN  8679            ; Unknown 8xxx instruction
$75A    $D062   DRW      V0, V6, #2      ; Draw 2-byte sprite at V0, V6
$75C    $B2DB   JP       V0, $2DB        ; Jump to V0 + 2DB
$75E    $B2FD   JP       V0, $2FD        ; Jump to V0 + 2FD
$760    $2E3D   CALL     $E3D            ; Call subroutine at E3D
$762    $4187   SNE      V1, #87         ; Skip if V1 != 135
$764    $4536   SNE      V5, #36         ; Skip if V5 != 54
$766    $3A64   SE       VA, #64         ; Skip if VA == 100
$768    $6209   LD       V2, #09         ; Load 9 into V2
$76A    $2D49   CALL     $D49            ; Call subroutine at D49
$76C    $A569   LD       I, $569         ; Load 569 into I
$76E    $7260   ADD      V2, #60         ; Add 96 to V2
$770    $02B0   SYS      $2B0            ; System call to 2B0
$772    $6E9D   LD       VE, #9D         ; Load 157 into VE
$774    $1435   JP       $435            ; Jump to 435
$776    $58C5   UNKNOWN  $58C5           ; Unknown 5xxx instruction
$778    $63D9   LD       V3, #D9         ; Load 217 into V3
$77A    $75D8   ADD      V5, #D8         ; Add 216 to V5
$77C    $3FB7   SE       VF, #B7         ; Skip if VF == 183
$77E    $4085   SNE      V0, #85         ; Skip if V0 != 133
$780    $A84D   LD       I, $84D         ; Load 84D into I
$782    $F238   UNKNOWN  F238            ; Unknown Fxxx instruction
$784    $97D0   SNE      V7, VD          ; Skip if V7 != VD
$786    $67AA   LD       V7, #AA         ; Load 170 into V7
$788    $0BDD   SYS      $BDD            ; System call to BDD
$78A    $92DF   UNKNOWN  $92DF           ; Unknown 9xxx instruction
$78C    $00C7   SYS      $0C7            ; System call to 0C7
$78E    $3F52   SE       VF, #52         ; Skip if VF == 82
$790    $330A   SE       V3, #0A         ; Skip if V3 == 10
$792    $1860   JP       $860            ; Jump to 860
$794    $A052   LD       I, $052         ; Load 052 into I
$796    $FF3B   UNKNOWN  FF3B            ; Unknown Fxxx instruction
$798    $F65B   UNKNOWN  F65B            ; Unknown Fxxx instruction
$79A    $1501   JP       $501            ; Jump to 501
$79C    $04CC   SYS      $4CC            ; System call to 4CC
$79E    $15FC   JP       $5FC            ; Jump to 5FC
$7A0    $EC0C   UNKNOWN  $EC0C           ; Unknown Exxx instruction
$7A2    $4751   SNE      V7, #51         ; Skip if V7 != 81
$7A4    $1CFE   JP       $CFE            ; Jump to CFE
$7A6    $F7D0   UNKNOWN  F7D0            ; Unknown Fxxx instruction
$7A8    $4EF2   SNE      VE, #F2         ; Skip if VE != 242
$7AA    $CCDB   RND      VC, #DB         ; VC = random & DB
$7AC    $55F2   UNKNOWN  $55F2           ; Unknown 5xxx instruction
$7AE    $4764   SNE      V7, #64         ; Skip if V7 != 100
$7B0    $FDCA   UNKNOWN  FDCA            ; Unknown Fxxx instruction
$7B2    $77AE   ADD      V7, #AE         ; Add 174 to V7
$7B4    $3B72   SE       VB, #72         ; Skip if VB == 114
$7B6    $E43F   UNKNOWN  $E43F           ; Unknown Exxx instruction
$7B8    $7419   ADD      V4, #19         ; Add 25 to V4
$7BA    $3BAC   SE       VB, #AC         ; Skip if VB == 172
$7BC    $04D3   SYS      $4D3            ; System call to 4D3
$7BE    $E659   UNKNOWN  $E659           ; Unknown Exxx instruction
$7C0    $2837   CALL     $837            ; Call subroutine at 837
$7C2    $93E3   UNKNOWN  $93E3           ; Unknown 9xxx instruction
$7C4    $DE45   DRW      VE, V4, #5      ; Draw 5-byte sprite at VE, V4
$7C6    $E714   UNKNOWN  $E714           ; Unknown Exxx instruction
$7C8    $B7A1   JP       V0, $7A1        ; Jump to V0 + 7A1
$7CA    $5ECF   UNKNOWN  $5ECF           ; Unknown 5xxx instruction
$7CC    $8F38   UNKNOWN  8F38            ; Unknown 8xxx instruction
$7CE    $F270   UNKNOWN  F270            ; Unknown Fxxx instruction
$7D0    $279E   CALL     $79E            ; Call subroutine at 79E
$7D2    $A633   LD       I, $633         ; Load 633 into I
$7D4    $BB08   JP       V0, $B08        ; Jump to V0 + B08
$7D6    $C25C   RND      V2, #5C         ; V2 = random & 5C
$7D8    $D7F1   DRW      V7, VF, #1      ; Draw 1-byte sprite at V7, VF
$7DA    $B7C0   JP       V0, $7C0        ; Jump to V0 + 7C0
$7DC    $E5F5   UNKNOWN  $E5F5           ; Unknown Exxx instruction
$7DE    $5EC0   SE       VE, VC          ; Skip if VE == VC
$7E0    $FB23   UNKNOWN  FB23            ; Unknown Fxxx instruction
$7E2    $62F3   LD       V2, #F3         ; Load 243 into V2
$7E4    $3CF0   SE       VC, #F0         ; Skip if VC == 240
$7E6    $E916   UNKNOWN  $E916           ; Unknown Exxx instruction
$7E8    $BEEE   JP       V0, $EEE        ; Jump to V0 + EEE
$7EA    $4C3C   SNE      VC, #3C         ; Skip if VC != 60
$7EC    $74B6   ADD      V4, #B6         ; Add 182 to V4
$7EE    $D611   DRW      V6, V1, #1      ; Draw 1-byte sprite at V6, V1
$7F0    $E659   UNKNOWN  $E659           ; Unknown Exxx instruction
$7F2    $45C5   SNE      V5, #C5         ; Skip if V5 != 197
$7F4    $1E81   JP       $E81            ; Jump to E81
$7F6    $568F   UNKNOWN  $568F           ; Unknown 5xxx instruction
$7F8    $EFFB   UNKNOWN  $EFFB           ; Unknown Exxx instruction
$7FA    $4787   SNE      V7, #87         ; Skip if V7 != 135
$7FC    $546C   UNKNOWN  $546C           ; Unknown 5xxx instruction
$7FE    $0750   SYS      $750            ; System call to 750
$800    $D36D   DRW      V3, V6, #D      ; Draw 13-byte sprite at V3, V6
$802    $36CD   SE       V6, #CD         ; Skip if V6 == 205
$804    $8926   SHR      V9              ; V9 >>= 1, VF = LSB
$806    $74AC   ADD      V4, #AC         ; Add 172 to V4
$808    $AA54   LD       I, $A54         ; Load A54 into I
$80A    $2846   CALL     $846            ; Call subroutine at 846
$80C    $6B25   LD       VB, #25         ; Load 37 into VB
$80E    $2969   CALL     $969            ; Call subroutine at 969
$810    $F2FF   UNKNOWN  F2FF            ; Unknown Fxxx instruction
$812    $1801   JP       $801            ; Jump to 801
$814    $60AC   LD       V0, #AC         ; Load 172 into V0
$816    $A537   LD       I, $537         ; Load 537 into I
$818    $DE9A   DRW      VE, V9, #A      ; Draw 10-byte sprite at VE, V9
$81A    $9DED   UNKNOWN  $9DED           ; Unknown 9xxx instruction
$81C    $D2D6   DRW      V2, VD, #6      ; Draw 6-byte sprite at V2, VD
$81E    $45D2   SNE      V5, #D2         ; Skip if V5 != 210
$820    $20A3   CALL     $0A3            ; Call subroutine at 0A3
$822    $FB69   UNKNOWN  FB69            ; Unknown Fxxx instruction
$824    $4838   SNE      V8, #38         ; Skip if V8 != 56
$826    $D070   DRW      V0, V7, #0      ; Draw 0-byte sprite at V0, V7
$828    $045B   SYS      $45B            ; System call to 45B
$82A    $F683   UNKNOWN  F683            ; Unknown Fxxx instruction
$82C    $9FAC   UNKNOWN  $9FAC           ; Unknown 9xxx instruction
$82E    $C821   RND      V8, #21         ; V8 = random & 21
$830    $A787   LD       I, $787         ; Load 787 into I
$832    $11F0   JP       $1F0            ; Jump to 1F0
$834    $C8C8   RND      V8, #C8         ; V8 = random & C8
$836    $3E6B   SE       VE, #6B         ; Skip if VE == 107
$838    $BC5A   JP       V0, $C5A        ; Jump to V0 + C5A
$83A    $4F55   SNE      VF, #55         ; Skip if VF != 85
$83C    $9F7C   UNKNOWN  $9F7C           ; Unknown 9xxx instruction
$83E    $8AC6   SHR      VA              ; VA >>= 1, VF = LSB
$840    $9500   SNE      V5, V0          ; Skip if V5 != V0
$842    $C8B4   RND      V8, #B4         ; V8 = random & B4
$844    $1452   JP       $452            ; Jump to 452
$846    $7491   ADD      V4, #91         ; Add 145 to V4
$848    $E889   UNKNOWN  $E889           ; Unknown Exxx instruction
$84A    $B8B6   JP       V0, $8B6        ; Jump to V0 + 8B6
$84C    $D21A   DRW      V2, V1, #A      ; Draw 10-byte sprite at V2, V1
$84E    $120C   JP       $20C            ; Jump to 20C
$850    $9270   SNE      V2, V7          ; Skip if V2 != V7
$852    $5569   UNKNOWN  $5569           ; Unknown 5xxx instruction
$854    $F523   UNKNOWN  F523            ; Unknown Fxxx instruction
$856    $48B5   SNE      V8, #B5         ; Skip if V8 != 181
$858    $72E5   ADD      V2, #E5         ; Add 229 to V2
$85A    $99CF   UNKNOWN  $99CF           ; Unknown 9xxx instruction
$85C    $4F17   SNE      VF, #17         ; Skip if VF != 23
$85E    $BA4D   JP       V0, $A4D        ; Jump to V0 + A4D
$860    $DF81   DRW      VF, V8, #1      ; Draw 1-byte sprite at VF, V8
$862    $FD9E   UNKNOWN  FD9E            ; Unknown Fxxx instruction
$864    $EDFA   UNKNOWN  $EDFA           ; Unknown Exxx instruction
$866    $3A6D   SE       VA, #6D         ; Skip if VA == 109
$868    $0528   SYS      $528            ; System call to 528
$86A    $DF18   DRW      VF, V1, #8      ; Draw 8-byte sprite at VF, V1
$86C    $B64E   JP       V0, $64E        ; Jump to V0 + 64E
$86E    $E2A0   UNKNOWN  $E2A0           ; Unknown Exxx instruction
$870    $AB9B   LD       I, $B9B         ; Load B9B into I
$872    $294D   CALL     $94D            ; Call subroutine at 94D
$874    $EF34   UNKNOWN  $EF34           ; Unknown Exxx instruction
$876    $49D1   SNE      V9, #D1         ; Skip if V9 != 209
$878    $54E4   UNKNOWN  $54E4           ; Unknown 5xxx instruction
$87A    $D517   DRW      V5, V1, #7      ; Draw 7-byte sprite at V5, V1
$87C    $384D   SE       V8, #4D         ; Skip if V8 == 77
$87E    $9673   UNKNOWN  $9673           ; Unknown 9xxx instruction
$880    $79F0   ADD      V9, #F0         ; Add 240 to V9
$882    $A1AF   LD       I, $1AF         ; Load 1AF into I
$884    $FB1D   UNKNOWN  FB1D            ; Unknown Fxxx instruction
$886    $2F03   CALL     $F03            ; Call subroutine at F03
$888    $A37A   LD       I, $37A         ; Load 37A into I
$88A    $3AC0   SE       VA, #C0         ; Skip if VA == 192
$88C    $75F9   ADD      V5, #F9         ; Add 249 to V5
$88E    $09B2   SYS      $9B2            ; System call to 9B2
$890    $F2BE   UNKNOWN  F2BE            ; Unknown Fxxx instruction
$892    $31C3   SE       V1, #C3         ; Skip if V1 == 195
$894    $D044   DRW      V0, V4, #4      ; Draw 4-byte sprite at V0, V4
$896    $57C8   UNKNOWN  $57C8           ; Unknown 5xxx instruction
$898    $9D5D   UNKNOWN  $9D5D           ; Unknown 9xxx instruction
$89A    $7EB4   ADD      VE, #B4         ; Add 180 to VE
$89C    $863D   UNKNOWN  863D            ; Unknown 8xxx instruction
$89E    $82A3   XOR      V2, VA          ; V2 ^= VA
$8A0    $183D   JP       $83D            ; Jump to 83D
$8A2    $297E   CALL     $97E            ; Call subroutine at 97E
$8A4    $69E9   LD       V9, #E9         ; Load 233 into V9
$8A6    $F402   UNKNOWN  F402            ; Unknown Fxxx instruction
$8A8    $4678   SNE      V6, #78         ; Skip if V6 != 120
$8AA    $58AD   UNKNOWN  $58AD           ; Unknown 5xxx instruction
$8AC    $7B69   ADD      VB, #69         ; Add 105 to VB
$8AE    $D4D9   DRW      V4, VD, #9      ; Draw 9-byte sprite at V4, VD
$8B0    $8E82   AND      VE, V8          ; VE &= V8
$8B2    $F181   UNKNOWN  F181            ; Unknown Fxxx instruction
$8B4    $657F   LD       V5, #7F         ; Load 127 into V5
$8B6    $A6CD   LD       I, $6CD         ; Load 6CD into I
$8B8    $5A7F   UNKNOWN  $5A7F           ; Unknown 5xxx instruction
$8BA    $5280   SE       V2, V8          ; Skip if V2 == V8
$8BC    $A6B1   LD       I, $6B1         ; Load 6B1 into I
$8BE    $B28E   JP       V0, $28E        ; Jump to V0 + 28E
$8C0    $E856   UNKNOWN  $E856           ; Unknown Exxx instruction
$8C2    $5A10   SE       VA, V1          ; Skip if VA == V1
$8C4    $7B9F   ADD      VB, #9F         ; Add 159 to VB
$8C6    $F893   UNKNOWN  F893            ; Unknown Fxxx instruction
$8C8    $E3C0   UNKNOWN  $E3C0           ; Unknown Exxx instruction
$8CA    $36E7   SE       V6, #E7         ; Skip if V6 == 231
$8CC    $3A5D   SE       VA, #5D         ; Skip if VA == 93
$8CE    $7818   ADD      V8, #18         ; Add 24 to V8
$8D0    $763B   ADD      V6, #3B         ; Add 59 to V6
$8D2    $0149   SYS      $149            ; System call to 149
$8D4    $D876   DRW      V8, V7, #6      ; Draw 6-byte sprite at V8, V7
$8D6    $F497   UNKNOWN  F497            ; Unknown Fxxx instruction
$8D8    $FF7F   UNKNOWN  FF7F            ; Unknown Fxxx instruction
$8DA    $ED19   UNKNOWN  $ED19           ; Unknown Exxx instruction
$8DC    $37B2   SE       V7, #B2         ; Skip if V7 == 178
$8DE    $3BA0   SE       VB, #A0         ; Skip if VB == 160
$8E0    $CC3A   RND      VC, #3A         ; VC = random & 3A
$8E2    $8E0E   SHL      VE              ; VE <<= 1, VF = MSB
$8E4    $C60D   RND      V6, #0D         ; V6 = random & 0D
$8E6    $B834   JP       V0, $834        ; Jump to V0 + 834
$8E8    $2F22   CALL     $F22            ; Call subroutine at F22
$8EA    $7368   ADD      V3, #68         ; Add 104 to V3
$8EC    $77FB   ADD      V7, #FB         ; Add 251 to V7
$8EE    $AFD3   LD       I, $FD3         ; Load FD3 into I
$8F0    $FB56   UNKNOWN  FB56            ; Unknown Fxxx instruction
$8F2    $E030   UNKNOWN  $E030           ; Unknown Exxx instruction
$8F4    $840E   SHL      V4              ; V4 <<= 1, VF = MSB
$8F6    $CF60   RND      VF, #60         ; VF = random & 60
$8F8    $CD5A   RND      VD, #5A         ; VD = random & 5A
$8FA    $E389   UNKNOWN  $E389           ; Unknown Exxx instruction
$8FC    $56EB   UNKNOWN  $56EB           ; Unknown 5xxx instruction
$8FE    $FE33   LD       B, VE           ; Store BCD of VE at I, I+1, I+2
$900    $FE82   UNKNOWN  FE82            ; Unknown Fxxx instruction
$902    $0D26   SYS      $D26            ; System call to D26
$904    $A5C5   LD       I, $5C5         ; Load 5C5 into I
$906    $B805   JP       V0, $805        ; Jump to V0 + 805
$908    $3F27   SE       VF, #27         ; Skip if VF == 39
$90A    $EA38   UNKNOWN  $EA38           ; Unknown Exxx instruction
$90C    $97A6   UNKNOWN  $97A6           ; Unknown 9xxx instruction
$90E    $E82C   UNKNOWN  $E82C           ; Unknown Exxx instruction
$910    $86CD   UNKNOWN  86CD            ; Unknown 8xxx instruction
$912    $9BE1   UNKNOWN  $9BE1           ; Unknown 9xxx instruction
$914    $29B2   CALL     $9B2            ; Call subroutine at 9B2
$916    $3C2B   SE       VC, #2B         ; Skip if VC == 43
$918    $8088   UNKNOWN  8088            ; Unknown 8xxx instruction
$91A    $14D1   JP       $4D1            ; Jump to 4D1
$91C    $4646   SNE      V6, #46         ; Skip if V6 != 70
$91E    $80DB   UNKNOWN  80DB            ; Unknown 8xxx instruction
$920    $8699   UNKNOWN  8699            ; Unknown 8xxx instruction
$922    $97FB   UNKNOWN  $97FB           ; Unknown 9xxx instruction
$924    $2FC2   CALL     $FC2            ; Call subroutine at FC2
$926    $60F6   LD       V0, #F6         ; Load 246 into V0
$928    $3698   SE       V6, #98         ; Skip if V6 == 152
$92A    $6AD7   LD       VA, #D7         ; Load 215 into VA
$92C    $FE46   UNKNOWN  FE46            ; Unknown Fxxx instruction
$92E    $74B5   ADD      V4, #B5         ; Add 181 to V4
$930    $32D6   SE       V2, #D6         ; Skip if V2 == 214
$932    $6AAD   LD       VA, #AD         ; Load 173 into VA
$934    $D569   DRW      V5, V6, #9      ; Draw 9-byte sprite at V5, V6
$936    $5B3F   UNKNOWN  $5B3F           ; Unknown 5xxx instruction
$938    $BE23   JP       V0, $E23        ; Jump to V0 + E23
$93A    $9BC0   SNE      VB, VC          ; Skip if VB != VC
$93C    $3F38   SE       VF, #38         ; Skip if VF == 56
$93E    $245F   CALL     $45F            ; Call subroutine at 45F
$940    $A50B   LD       I, $50B         ; Load 50B into I
$942    $A5C8   LD       I, $5C8         ; Load 5C8 into I
$944    $A8A9   LD       I, $8A9         ; Load 8A9 into I
$946    $1872   JP       $872            ; Jump to 872
$948    $3517   SE       V5, #17         ; Skip if V5 == 23
$94A    $0392   SYS      $392            ; System call to 392
$94C    $61F1   LD       V1, #F1         ; Load 241 into V1
$94E    $95C0   SNE      V5, VC          ; Skip if V5 != VC
$950    $DF2A   DRW      VF, V2, #A      ; Draw 10-byte sprite at VF, V2
$952    $F377   UNKNOWN  F377            ; Unknown Fxxx instruction
$954    $6552   LD       V5, #52         ; Load 82 into V5
$956    $BA7B   JP       V0, $A7B        ; Jump to V0 + A7B
$958    $D652   DRW      V6, V5, #2      ; Draw 2-byte sprite at V6, V5
$95A    $BF58   JP       V0, $F58        ; Jump to V0 + F58
$95C    $511C   UNKNOWN  $511C           ; Unknown 5xxx instruction
$95E    $8300   LD       V3, V0          ; V3 = V0
$960    $D321   DRW      V3, V2, #1      ; Draw 1-byte sprite at V3, V2
$962    $9052   UNKNOWN  $9052           ; Unknown 9xxx instruction
$964    $77AE   ADD      V7, #AE         ; Add 174 to V7
$966    $1E5D   JP       $E5D            ; Jump to E5D
$968    $2F1B   CALL     $F1B            ; Call subroutine at F1B
$96A    $878B   UNKNOWN  878B            ; Unknown 8xxx instruction
$96C    $18D4   JP       $8D4            ; Jump to 8D4
$96E    $4065   SNE      V0, #65         ; Skip if V0 != 101
$970    $3C64   SE       VC, #64         ; Skip if VC == 100
$972    $B204   JP       V0, $204        ; Jump to V0 + 204
$974    $3CC3   SE       VC, #C3         ; Skip if VC == 195
$976    $8BFF   UNKNOWN  8BFF            ; Unknown 8xxx instruction
$978    $817F   UNKNOWN  817F            ; Unknown 8xxx instruction
$97A    $2CBC   CALL     $CBC            ; Call subroutine at CBC
$97C    $D870   DRW      V8, V7, #0      ; Draw 0-byte sprite at V8, V7
$97E    $3743   SE       V7, #43         ; Skip if V7 == 67
$980    $883A   UNKNOWN  883A            ; Unknown 8xxx instruction
$982    $6A0B   LD       VA, #0B         ; Load 11 into VA
$984    $2065   CALL     $065            ; Call subroutine at 065
$986    $95BC   UNKNOWN  $95BC           ; Unknown 9xxx instruction
$988    $49EC   SNE      V9, #EC         ; Skip if V9 != 236
$98A    $FF78   UNKNOWN  FF78            ; Unknown Fxxx instruction
$98C    $EC7B   UNKNOWN  $EC7B           ; Unknown Exxx instruction
$98E    $C3B1   RND      V3, #B1         ; V3 = random & B1
$990    $6222   LD       V2, #22         ; Load 34 into V2
$992    $5F8E   UNKNOWN  $5F8E           ; Unknown 5xxx instruction
$994    $3DC8   SE       VD, #C8         ; Skip if VD == 200
$996    $A3DA   LD       I, $3DA         ; Load 3DA into I
$998    $9C45   UNKNOWN  $9C45           ; Unknown 9xxx instruction
$99A    $8B2A   UNKNOWN  8B2A            ; Unknown 8xxx instruction
$99C    $C244   RND      V2, #44         ; V2 = random & 44
$99E    $10BF   JP       $0BF            ; Jump to 0BF
$9A0    $8D29   UNKNOWN  8D29            ; Unknown 8xxx instruction
$9A2    $BAF8   JP       V0, $AF8        ; Jump to V0 + AF8
$9A4    $5CFA   UNKNOWN  $5CFA           ; Unknown 5xxx instruction
$9A6    $33FB   SE       V3, #FB         ; Skip if V3 == 251
$9A8    $B565   JP       V0, $565        ; Jump to V0 + 565
$9AA    $B600   JP       V0, $600        ; Jump to V0 + 600
$9AC    $4FF0   SNE      VF, #F0         ; Skip if VF != 240
$9AE    $FFB5   UNKNOWN  FFB5            ; Unknown Fxxx instruction
$9B0    $593B   UNKNOWN  $593B           ; Unknown 5xxx instruction
$9B2    $0532   SYS      $532            ; System call to 532
$9B4    $FCA1   UNKNOWN  FCA1            ; Unknown Fxxx instruction
$9B6    $3C35   SE       VC, #35         ; Skip if VC == 53
$9B8    $D34B   DRW      V3, V4, #B      ; Draw 11-byte sprite at V3, V4
$9BA    $8912   AND      V9, V1          ; V9 &= V1
$9BC    $0E62   SYS      $E62            ; System call to E62
$9BE    $D70B   DRW      V7, V0, #B      ; Draw 11-byte sprite at V7, V0
$9C0    $AF23   LD       I, $F23         ; Load F23 into I
$9C2    $66FF   LD       V6, #FF         ; Load 255 into V6
$9C4    $2C1C   CALL     $C1C            ; Call subroutine at C1C
$9C6    $DF96   DRW      VF, V9, #6      ; Draw 6-byte sprite at VF, V9
$9C8    $F19A   UNKNOWN  F19A            ; Unknown Fxxx instruction
$9CA    $E1B4   UNKNOWN  $E1B4           ; Unknown Exxx instruction
$9CC    $E710   UNKNOWN  $E710           ; Unknown Exxx instruction
$9CE    $BEB7   JP       V0, $EB7        ; Jump to V0 + EB7
$9D0    $AD21   LD       I, $D21         ; Load D21 into I
$9D2    $25D1   CALL     $5D1            ; Call subroutine at 5D1
$9D4    $1444   JP       $444            ; Jump to 444
$9D6    $ACC6   LD       I, $CC6         ; Load CC6 into I
$9D8    $368A   SE       V6, #8A         ; Skip if V6 == 138
$9DA    $0830   SYS      $830            ; System call to 830
$9DC    $569A   UNKNOWN  $569A           ; Unknown 5xxx instruction
$9DE    $B74F   JP       V0, $74F        ; Jump to V0 + 74F
$9E0    $6E5B   LD       VE, #5B         ; Load 91 into VE
$9E2    $02F0   SYS      $2F0            ; System call to 2F0
$9E4    $55C6   UNKNOWN  $55C6           ; Unknown 5xxx instruction
$9E6    $B846   JP       V0, $846        ; Jump to V0 + 846
$9E8    $237B   CALL     $37B            ; Call subroutine at 37B
$9EA    $A6D3   LD       I, $6D3         ; Load 6D3 into I
$9EC    $656F   LD       V5, #6F         ; Load 111 into V5
$9EE    $704B   ADD      V0, #4B         ; Add 75 to V0
$9F0    $36C0   SE       V6, #C0         ; Skip if V6 == 192
$9F2    $8054   ADD      V0, V5          ; V0 += V5, VF = carry
$9F4    $A0F8   LD       I, $0F8         ; Load 0F8 into I
$9F6    $A14D   LD       I, $14D         ; Load 14D into I
$9F8    $09E0   SYS      $9E0            ; System call to 9E0
$9FA    $8FC5   SUB      VF, VC          ; VF -= VC, VF = !borrow
$9FC    $7161   ADD      V1, #61         ; Add 97 to V1
$9FE    $EFCF   UNKNOWN  $EFCF           ; Unknown Exxx instruction
$A00    $B3FE   JP       V0, $3FE        ; Jump to V0 + 3FE
$A02    $58F2   UNKNOWN  $58F2           ; Unknown 5xxx instruction
$A04    $1814   JP       $814            ; Jump to 814
$A06    $7D3D   ADD      VD, #3D         ; Add 61 to VD
$A08    $8109   UNKNOWN  8109            ; Unknown 8xxx instruction
$A0A    $3BFE   SE       VB, #FE         ; Skip if VB == 254
$A0C    $87DA   UNKNOWN  87DA            ; Unknown 8xxx instruction
$A0E    $F742   UNKNOWN  F742            ; Unknown Fxxx instruction
$A10    $9758   UNKNOWN  $9758           ; Unknown 9xxx instruction
$A12    $C329   RND      V3, #29         ; V3 = random & 29
$A14    $0004   SYS      $004            ; System call to 004
$A16    $D3C1   DRW      V3, VC, #1      ; Draw 1-byte sprite at V3, VC
$A18    $825E   SHL      V2              ; V2 <<= 1, VF = MSB
$A1A    $5C46   UNKNOWN  $5C46           ; Unknown 5xxx instruction
$A1C    $B0E6   JP       V0, $0E6        ; Jump to V0 + 0E6
$A1E    $5EA4   UNKNOWN  $5EA4           ; Unknown 5xxx instruction
$A20    $F3D1   UNKNOWN  F3D1            ; Unknown Fxxx instruction
$A22    $A73E   LD       I, $73E         ; Load 73E into I
$A24    $9BD4   UNKNOWN  $9BD4           ; Unknown 9xxx instruction
$A26    $10AD   JP       $0AD            ; Jump to 0AD
$A28    $7DFC   ADD      VD, #FC         ; Add 252 to VD
$A2A    $3130   SE       V1, #30         ; Skip if V1 == 48
$A2C    $682D   LD       V8, #2D         ; Load 45 into V8
$A2E    $D93E   DRW      V9, V3, #E      ; Draw 14-byte sprite at V9, V3
$A30    $A028   LD       I, $028         ; Load 028 into I
$A32    $D6EB   DRW      V6, VE, #B      ; Draw 11-byte sprite at V6, VE
$A34    $96C6   UNKNOWN  $96C6           ; Unknown 9xxx instruction
$A36    $6CC8   LD       VC, #C8         ; Load 200 into VC
$A38    $753B   ADD      V5, #3B         ; Add 59 to V5
$A3A    $ED74   UNKNOWN  $ED74           ; Unknown Exxx instruction
$A3C    $F8F0   UNKNOWN  F8F0            ; Unknown Fxxx instruction
$A3E    $A3B3   LD       I, $3B3         ; Load 3B3 into I
$A40    $C0F9   RND      V0, #F9         ; V0 = random & F9
$A42    $CD94   RND      VD, #94         ; VD = random & 94
$A44    $7C4B   ADD      VC, #4B         ; Add 75 to VC
$A46    $770C   ADD      V7, #0C         ; Add 12 to V7
$A48    $2B13   CALL     $B13            ; Call subroutine at B13
$A4A    $3ADE   SE       VA, #DE         ; Skip if VA == 222
$A4C    $DEA0   DRW      VE, VA, #0      ; Draw 0-byte sprite at VE, VA
$A4E    $FA51   UNKNOWN  FA51            ; Unknown Fxxx instruction
$A50    $6EA8   LD       VE, #A8         ; Load 168 into VE
$A52    $7BFD   ADD      VB, #FD         ; Add 253 to VB
$A54    $2079   CALL     $079            ; Call subroutine at 079
$A56    $7E72   ADD      VE, #72         ; Add 114 to VE
$A58    $6731   LD       V7, #31         ; Load 49 into V7
$A5A    $A308   LD       I, $308         ; Load 308 into I
$A5C    $0C3A   SYS      $C3A            ; System call to C3A
$A5E    $532B   UNKNOWN  $532B           ; Unknown 5xxx instruction
$A60    $1DEC   JP       $DEC            ; Jump to DEC
$A62    $4D4B   SNE      VD, #4B         ; Skip if VD != 75
$A64    $951D   UNKNOWN  $951D           ; Unknown 9xxx instruction
$A66    $B1CE   JP       V0, $1CE        ; Jump to V0 + 1CE
$A68    $808C   UNKNOWN  808C            ; Unknown 8xxx instruction
$A6A    $B404   JP       V0, $404        ; Jump to V0 + 404
$A6C    $3C0A   SE       VC, #0A         ; Skip if VC == 10
$A6E    $4C5D   SNE      VC, #5D         ; Skip if VC != 93
$A70    $A7D4   LD       I, $7D4         ; Load 7D4 into I
$A72    $8304   ADD      V3, V0          ; V3 += V0, VF = carry
$A74    $381D   SE       V8, #1D         ; Skip if V8 == 29
$A76    $730B   ADD      V3, #0B         ; Add 11 to V3
$A78    $4A20   SNE      VA, #20         ; Skip if VA != 32
$A7A    $4C21   SNE      VC, #21         ; Skip if VC != 33
$A7C    $99B5   UNKNOWN  $99B5           ; Unknown 9xxx instruction
$A7E    $7693   ADD      V6, #93         ; Add 147 to V6
$A80    $C68A   RND      V6, #8A         ; V6 = random & 8A
$A82    $12A9   JP       $2A9            ; Jump to 2A9
$A84    $7C1F   ADD      VC, #1F         ; Add 31 to VC
$A86    $6787   LD       V7, #87         ; Load 135 into V7
$A88    $A9FC   LD       I, $9FC         ; Load 9FC into I
$A8A    $03AD   SYS      $3AD            ; System call to 3AD
$A8C    $92FD   UNKNOWN  $92FD           ; Unknown 9xxx instruction
$A8E    $E7B5   UNKNOWN  $E7B5           ; Unknown Exxx instruction
$A90    $D786   DRW      V7, V8, #6      ; Draw 6-byte sprite at V7, V8
$A92    $81A5   SUB      V1, VA          ; V1 -= VA, VF = !borrow
$A94    $4020   SNE      V0, #20         ; Skip if V0 != 32
$A96    $123E   JP       $23E            ; Jump to 23E
$A98    $9377   UNKNOWN  $9377           ; Unknown 9xxx instruction
$A9A    $60FE   LD       V0, #FE         ; Load 254 into V0
$A9C    $53FE   UNKNOWN  $53FE           ; Unknown 5xxx instruction
$A9E    $1460   JP       $460            ; Jump to 460
$AA0    $A80E   LD       I, $80E         ; Load 80E into I
$AA2    $3D76   SE       VD, #76         ; Skip if VD == 118
$AA4    $972A   UNKNOWN  $972A           ; Unknown 9xxx instruction
$AA6    $560C   UNKNOWN  $560C           ; Unknown 5xxx instruction
$AA8    $601B   LD       V0, #1B         ; Load 27 into V0
$AAA    $FAC9   UNKNOWN  FAC9            ; Unknown Fxxx instruction
$AAC    $4E75   SNE      VE, #75         ; Skip if VE != 117
$AAE    $29C3   CALL     $9C3            ; Call subroutine at 9C3
$AB0    $8F1D   UNKNOWN  8F1D            ; Unknown 8xxx instruction
$AB2    $91A1   UNKNOWN  $91A1           ; Unknown 9xxx instruction
$AB4    $6637   LD       V6, #37         ; Load 55 into V6
$AB6    $6CD9   LD       VC, #D9         ; Load 217 into VC
$AB8    $6D84   LD       VD, #84         ; Load 132 into VD
$ABA    $E27D   UNKNOWN  $E27D           ; Unknown Exxx instruction
$ABC    $19EA   JP       $9EA            ; Jump to 9EA
$ABE    $386F   SE       V8, #6F         ; Skip if V8 == 111
$AC0    $9F2F   UNKNOWN  $9F2F           ; Unknown 9xxx instruction
$AC2    $28A1   CALL     $8A1            ; Call subroutine at 8A1
$AC4    $184E   JP       $84E            ; Jump to 84E
$AC6    $3992   SE       V9, #92         ; Skip if V9 == 146
$AC8    $841C   UNKNOWN  841C            ; Unknown 8xxx instruction
$ACA    $9940   SNE      V9, V4          ; Skip if V9 != V4
$ACC    $AA60   LD       I, $A60         ; Load A60 into I
$ACE    $6E53   LD       VE, #53         ; Load 83 into VE
$AD0    $CFF4   RND      VF, #F4         ; VF = random & F4
$AD2    $0681   SYS      $681            ; System call to 681
$AD4    $B6EC   JP       V0, $6EC        ; Jump to V0 + 6EC
$AD6    $B3F8   JP       V0, $3F8        ; Jump to V0 + 3F8
$AD8    $0A10   SYS      $A10            ; System call to A10
$ADA    $486C   SNE      V8, #6C         ; Skip if V8 != 108
$ADC    $9A06   UNKNOWN  $9A06           ; Unknown 9xxx instruction
$ADE    $352C   SE       V5, #2C         ; Skip if V5 == 44
$AE0    $802D   UNKNOWN  802D            ; Unknown 8xxx instruction
$AE2    $EB66   UNKNOWN  $EB66           ; Unknown Exxx instruction
$AE4    $7B8A   ADD      VB, #8A         ; Add 138 to VB
$AE6    $DB50   DRW      VB, V5, #0      ; Draw 0-byte sprite at VB, V5
$AE8    $3B4F   SE       VB, #4F         ; Skip if VB == 79
$AEA    $AA34   LD       I, $A34         ; Load A34 into I
$AEC    $C536   RND      V5, #36         ; V5 = random & 36
$AEE    $2EA7   CALL     $EA7            ; Call subroutine at EA7
$AF0    $A168   LD       I, $168         ; Load 168 into I
$AF2    $F0D4   UNKNOWN  F0D4            ; Unknown Fxxx instruction
$AF4    $CA17   RND      VA, #17         ; VA = random & 17
$AF6    $FB33   LD       B, VB           ; Store BCD of VB at I, I+1, I+2
$AF8    $79A6   ADD      V9, #A6         ; Add 166 to V9
$AFA    $5E63   UNKNOWN  $5E63           ; Unknown 5xxx instruction
$AFC    $1E37   JP       $E37            ; Jump to E37
$AFE    $E618   UNKNOWN  $E618           ; Unknown Exxx instruction
$B00    $6040   LD       V0, #40         ; Load 64 into V0
$B02    $290B   CALL     $90B            ; Call subroutine at 90B
$B04    $26CA   CALL     $6CA            ; Call subroutine at 6CA
$B06    $F766   UNKNOWN  F766            ; Unknown Fxxx instruction
$B08    $257B   CALL     $57B            ; Call subroutine at 57B
$B0A    $65B0   LD       V5, #B0         ; Load 176 into V5
$B0C    $17ED   JP       $7ED            ; Jump to 7ED
$B0E    $6705   LD       V7, #05         ; Load 5 into V7
$B10    $948F   UNKNOWN  $948F           ; Unknown 9xxx instruction
$B12    $86D5   SUB      V6, VD          ; V6 -= VD, VF = !borrow
$B14    $A125   LD       I, $125         ; Load 125 into I
$B16    $2D4B   CALL     $D4B            ; Call subroutine at D4B
$B18    $888A   UNKNOWN  888A            ; Unknown 8xxx instruction
$B1A    $9E5C   UNKNOWN  $9E5C           ; Unknown 9xxx instruction
$B1C    $447D   SNE      V4, #7D         ; Skip if V4 != 125
$B1E    $D976   DRW      V9, V7, #6      ; Draw 6-byte sprite at V9, V7
$B20    $63CD   LD       V3, #CD         ; Load 205 into V3
$B22    $7697   ADD      V6, #97         ; Add 151 to V6
$B24    $6999   LD       V9, #99         ; Load 153 into V9
$B26    $783D   ADD      V8, #3D         ; Add 61 to V8
$B28    $97C5   UNKNOWN  $97C5           ; Unknown 9xxx instruction
$B2A    $05A1   SYS      $5A1            ; System call to 5A1
$B2C    $B8D3   JP       V0, $8D3        ; Jump to V0 + 8D3
$B2E    $FFD5   UNKNOWN  FFD5            ; Unknown Fxxx instruction
$B30    $C8BD   RND      V8, #BD         ; V8 = random & BD
$B32    $D717   DRW      V7, V1, #7      ; Draw 7-byte sprite at V7, V1
$B34    $6A4A   LD       VA, #4A         ; Load 74 into VA
$B36    $7D70   ADD      VD, #70         ; Add 112 to VD
$B38    $4AA2   SNE      VA, #A2         ; Skip if VA != 162
$B3A    $BF02   JP       V0, $F02        ; Jump to V0 + F02
$B3C    $E569   UNKNOWN  $E569           ; Unknown Exxx instruction
$B3E    $4C89   SNE      VC, #89         ; Skip if VC != 137
$B40    $080D   SYS      $80D            ; System call to 80D
$B42    $4917   SNE      V9, #17         ; Skip if V9 != 23
$B44    $B2BE   JP       V0, $2BE        ; Jump to V0 + 2BE
$B46    $8FF6   SHR      VF              ; VF >>= 1, VF = LSB
$B48    $2759   CALL     $759            ; Call subroutine at 759
$B4A    $6648   LD       V6, #48         ; Load 72 into V6
$B4C    $B9FB   JP       V0, $9FB        ; Jump to V0 + 9FB
$B4E    $D766   DRW      V7, V6, #6      ; Draw 6-byte sprite at V7, V6
$B50    $3204   SE       V2, #04         ; Skip if V2 == 4
$B52    $A980   LD       I, $980         ; Load 980 into I
$B54    $9A80   SNE      VA, V8          ; Skip if VA != V8
$B56    $49FD   SNE      V9, #FD         ; Skip if V9 != 253
$B58    $F5B0   UNKNOWN  F5B0            ; Unknown Fxxx instruction
$B5A    $C9AC   RND      V9, #AC         ; V9 = random & AC
$B5C    $20EB   CALL     $0EB            ; Call subroutine at 0EB
$B5E    $BD67   JP       V0, $D67        ; Jump to V0 + D67
$B60    $FB03   UNKNOWN  FB03            ; Unknown Fxxx instruction
$B62    $7623   ADD      V6, #23         ; Add 35 to V6
$B64    $1A4C   JP       $A4C            ; Jump to A4C
$B66    $0527   SYS      $527            ; System call to 527
$B68    $BB8C   JP       V0, $B8C        ; Jump to V0 + B8C
$B6A    $7F6A   ADD      VF, #6A         ; Add 106 to VF
$B6C    $885C   UNKNOWN  885C            ; Unknown 8xxx instruction
$B6E    $A34D   LD       I, $34D         ; Load 34D into I
$B70    $6BCB   LD       VB, #CB         ; Load 203 into VB
$B72    $9FF4   UNKNOWN  $9FF4           ; Unknown 9xxx instruction
$B74    $75DE   ADD      V5, #DE         ; Add 222 to V5
$B76    $9D7B   UNKNOWN  $9D7B           ; Unknown 9xxx instruction
$B78    $585A   UNKNOWN  $585A           ; Unknown 5xxx instruction
$B7A    $0627   SYS      $627            ; System call to 627
$B7C    $2BD0   CALL     $BD0            ; Call subroutine at BD0
$B7E    $A173   LD       I, $173         ; Load 173 into I
$B80    $03D0   SYS      $3D0            ; System call to 3D0
$B82    $D9FF   DRW      V9, VF, #F      ; Draw 15-byte sprite at V9, VF
$B84    $7668   ADD      V6, #68         ; Add 104 to V6
$B86    $C837   RND      V8, #37         ; V8 = random & 37
$B88    $E619   UNKNOWN  $E619           ; Unknown Exxx instruction
$B8A    $6C83   LD       VC, #83         ; Load 131 into VC
$B8C    $0D96   SYS      $D96            ; System call to D96
$B8E    $D1D1   DRW      V1, VD, #1      ; Draw 1-byte sprite at V1, VD
$B90    $3831   SE       V8, #31         ; Skip if V8 == 49
$B92    $9664   UNKNOWN  $9664           ; Unknown 9xxx instruction
$B94    $35CF   SE       V5, #CF         ; Skip if V5 == 207
$B96    $8B02   AND      VB, V0          ; VB &= V0
$B98    $AA41   LD       I, $A41         ; Load A41 into I
$B9A    $6C93   LD       VC, #93         ; Load 147 into VC
$B9C    $67B0   LD       V7, #B0         ; Load 176 into V7
$B9E    $33D5   SE       V3, #D5         ; Skip if V3 == 213
$BA0    $98D3   UNKNOWN  $98D3           ; Unknown 9xxx instruction
$BA2    $EC12   UNKNOWN  $EC12           ; Unknown Exxx instruction
$BA4    $4D65   SNE      VD, #65         ; Skip if VD != 101
$BA6    $A26A   LD       I, $26A         ; Load 26A into I
$BA8    $EEB3   UNKNOWN  $EEB3           ; Unknown Exxx instruction
$BAA    $BEC2   JP       V0, $EC2        ; Jump to V0 + EC2
$BAC    $1FBD   JP       $FBD            ; Jump to FBD
$BAE    $010C   SYS      $10C            ; System call to 10C
$BB0    $2200   CALL     $200            ; Call subroutine at 200
$BB2    $3B53   SE       VB, #53         ; Skip if VB == 83
$BB4    $9836   UNKNOWN  $9836           ; Unknown 9xxx instruction
$BB6    $6FF4   LD       VF, #F4         ; Load 244 into VF
$BB8    $D1A9   DRW      V1, VA, #9      ; Draw 9-byte sprite at V1, VA
$BBA    $F257   UNKNOWN  F257            ; Unknown Fxxx instruction
$BBC    $A2F0   LD       I, $2F0         ; Load 2F0 into I
$BBE    $0BFB   SYS      $BFB            ; System call to BFB
$BC0    $27CB   CALL     $7CB            ; Call subroutine at 7CB
$BC2    $A43F   LD       I, $43F         ; Load 43F into I
$BC4    $D74F   DRW      V7, V4, #F      ; Draw 15-byte sprite at V7, V4
$BC6    $C47D   RND      V4, #7D         ; V4 = random & 7D
$BC8    $56C4   UNKNOWN  $56C4           ; Unknown 5xxx instruction
$BCA    $21C4   CALL     $1C4            ; Call subroutine at 1C4
$BCC    $B4D0   JP       V0, $4D0        ; Jump to V0 + 4D0
$BCE    $DD45   DRW      VD, V4, #5      ; Draw 5-byte sprite at VD, V4
$BD0    $2552   CALL     $552            ; Call subroutine at 552
$BD2    $C75D   RND      V7, #5D         ; V7 = random & 5D
$BD4    $A3A5   LD       I, $3A5         ; Load 3A5 into I
$BD6    $C59A   RND      V5, #9A         ; V5 = random & 9A
$BD8    $A774   LD       I, $774         ; Load 774 into I
$BDA    $A960   LD       I, $960         ; Load 960 into I
$BDC    $0466   SYS      $466            ; System call to 466
$BDE    $B07C   JP       V0, $07C        ; Jump to V0 + 07C
$BE0    $855F   UNKNOWN  855F            ; Unknown 8xxx instruction
$BE2    $2713   CALL     $713            ; Call subroutine at 713
$BE4    $D10C   DRW      V1, V0, #C      ; Draw 12-byte sprite at V1, V0
$BE6    $D10B   DRW      V1, V0, #B      ; Draw 11-byte sprite at V1, V0
$BE8    $8917   SUBN     V9, V1          ; V9 = V1 - V9, VF = !borrow
$BEA    $7340   ADD      V3, #40         ; Add 64 to V3
$BEC    $4450   SNE      V4, #50         ; Skip if V4 != 80
$BEE    $113F   JP       $13F            ; Jump to 13F
$BF0    $4EBF   SNE      VE, #BF         ; Skip if VE != 191
$BF2    $DB38   DRW      VB, V3, #8      ; Draw 8-byte sprite at VB, V3
$BF4    $995E   UNKNOWN  $995E           ; Unknown 9xxx instruction
$BF6    $17AE   JP       $7AE            ; Jump to 7AE
$BF8    $CDCE   RND      VD, #CE         ; VD = random & CE
$BFA    $4F00   SNE      VF, #00         ; Skip if VF != 0
$BFC    $61F7   LD       V1, #F7         ; Load 247 into V1
$BFE    $86D7   SUBN     V6, VD          ; V6 = VD - V6, VF = !borrow
$C00    $8524   ADD      V5, V2          ; V5 += V2, VF = carry
$C02    $5D73   UNKNOWN  $5D73           ; Unknown 5xxx instruction
$C04    $3537   SE       V5, #37         ; Skip if V5 == 55
$C06    $AAF7   LD       I, $AF7         ; Load AF7 into I
$C08    $B24E   JP       V0, $24E        ; Jump to V0 + 24E
$C0A    $60FE   LD       V0, #FE         ; Load 254 into V0
$C0C    $ED2A   UNKNOWN  $ED2A           ; Unknown Exxx instruction
$C0E    $C5BE   RND      V5, #BE         ; V5 = random & BE
$C10    $3A74   SE       VA, #74         ; Skip if VA == 116
$C12    $801C   UNKNOWN  801C            ; Unknown 8xxx instruction
$C14    $BFA8   JP       V0, $FA8        ; Jump to V0 + FA8
$C16    $16E6   JP       $6E6            ; Jump to 6E6
$C18    $3DDA   SE       VD, #DA         ; Skip if VD == 218
$C1A    $606A   LD       V0, #6A         ; Load 106 into V0
$C1C    $D739   DRW      V7, V3, #9      ; Draw 9-byte sprite at V7, V3
$C1E    $2A13   CALL     $A13            ; Call subroutine at A13
$C20    $41F2   SNE      V1, #F2         ; Skip if V1 != 242
$C22    $B3E5   JP       V0, $3E5        ; Jump to V0 + 3E5
$C24    $9E29   UNKNOWN  $9E29           ; Unknown 9xxx instruction
$C26    $C46D   RND      V4, #6D         ; V4 = random & 6D
$C28    $0CDF   SYS      $CDF            ; System call to CDF
$C2A    $688B   LD       V8, #8B         ; Load 139 into V8
$C2C    $47B0   SNE      V7, #B0         ; Skip if V7 != 176
$C2E    $33FA   SE       V3, #FA         ; Skip if V3 == 250
$C30    $4096   SNE      V0, #96         ; Skip if V0 != 150
$C32    $E490   UNKNOWN  $E490           ; Unknown Exxx instruction
$C34    $BAA8   JP       V0, $AA8        ; Jump to V0 + AA8
$C36    $B85C   JP       V0, $85C        ; Jump to V0 + 85C
$C38    $CC16   RND      VC, #16         ; VC = random & 16
$C3A    $D0E8   DRW      V0, VE, #8      ; Draw 8-byte sprite at V0, VE
$C3C    $1B36   JP       $B36            ; Jump to B36
$C3E    $2D86   CALL     $D86            ; Call subroutine at D86
$C40    $C388   RND      V3, #88         ; V3 = random & 88
$C42    $C6A5   RND      V6, #A5         ; V6 = random & A5
$C44    $1450   JP       $450            ; Jump to 450
$C46    $72E3   ADD      V2, #E3         ; Add 227 to V2
$C48    $6849   LD       V8, #49         ; Load 73 into V8
$C4A    $D41E   DRW      V4, V1, #E      ; Draw 14-byte sprite at V4, V1
$C4C    $F5A3   UNKNOWN  F5A3            ; Unknown Fxxx instruction
$C4E    $91C0   SNE      V1, VC          ; Skip if V1 != VC
$C50    $6501   LD       V5, #01         ; Load 1 into V5
$C52    $C1CB   RND      V1, #CB         ; V1 = random & CB
$C54    $C4C1   RND      V4, #C1         ; V4 = random & C1
$C56    $0151   SYS      $151            ; System call to 151
$C58    $AED3   LD       I, $ED3         ; Load ED3 into I
$C5A    $DAD3   DRW      VA, VD, #3      ; Draw 3-byte sprite at VA, VD
$C5C    $A087   LD       I, $087         ; Load 087 into I
$C5E    $8911   OR       V9, V1          ; V9 |= V1
$C60    $1633   JP       $633            ; Jump to 633
$C62    $571B   UNKNOWN  $571B           ; Unknown 5xxx instruction
$C64    $70F1   ADD      V0, #F1         ; Add 241 to V0
$C66    $E572   UNKNOWN  $E572           ; Unknown Exxx instruction
$C68    $2688   CALL     $688            ; Call subroutine at 688
$C6A    $19A6   JP       $9A6            ; Jump to 9A6
$C6C    $9EC0   SNE      VE, VC          ; Skip if VE != VC
$C6E    $19AD   JP       $9AD            ; Jump to 9AD
$C70    $E385   UNKNOWN  $E385           ; Unknown Exxx instruction
$C72    $8EAC   UNKNOWN  8EAC            ; Unknown 8xxx instruction
$C74    $A90F   LD       I, $90F         ; Load 90F into I
$C76    $5125   UNKNOWN  $5125           ; Unknown 5xxx instruction
$C78    $7E11   ADD      VE, #11         ; Add 17 to VE
$C7A    $35CE   SE       V5, #CE         ; Skip if V5 == 206
$C7C    $7DD7   ADD      VD, #D7         ; Add 215 to VD
$C7E    $23CF   CALL     $3CF            ; Call subroutine at 3CF
$C80    $9ACA   UNKNOWN  $9ACA           ; Unknown 9xxx instruction
$C82    $4504   SNE      V5, #04         ; Skip if V5 != 4
$C84    $8A7B   UNKNOWN  8A7B            ; Unknown 8xxx instruction
$C86    $DB3B   DRW      VB, V3, #B      ; Draw 11-byte sprite at VB, V3
$C88    $B5C9   JP       V0, $5C9        ; Jump to V0 + 5C9
$C8A    $74A6   ADD      V4, #A6         ; Add 166 to V4
$C8C    $3E62   SE       VE, #62         ; Skip if VE == 98
$C8E    $F817   UNKNOWN  F817            ; Unknown Fxxx instruction
$C90    $98C4   UNKNOWN  $98C4           ; Unknown 9xxx instruction
$C92    $305E   SE       V0, #5E         ; Skip if V0 == 94
$C94    $8623   XOR      V6, V2          ; V6 ^= V2
$C96    $3BF9   SE       VB, #F9         ; Skip if VB == 249
$C98    $0A0F   SYS      $A0F            ; System call to A0F
$C9A    $9AED   UNKNOWN  $9AED           ; Unknown 9xxx instruction
$C9C    $4F6B   SNE      VF, #6B         ; Skip if VF != 107
$C9E    $F8CD   UNKNOWN  F8CD            ; Unknown Fxxx instruction
$CA0    $0607   SYS      $607            ; System call to 607
$CA2    $F2B8   UNKNOWN  F2B8            ; Unknown Fxxx instruction
$CA4    $D0EC   DRW      V0, VE, #C      ; Draw 12-byte sprite at V0, VE
$CA6    $598D   UNKNOWN  $598D           ; Unknown 5xxx instruction
$CA8    $5687   UNKNOWN  $5687           ; Unknown 5xxx instruction
$CAA    $5794   UNKNOWN  $5794           ; Unknown 5xxx instruction
$CAC    $AC62   LD       I, $C62         ; Load C62 into I
$CAE    $5185   UNKNOWN  $5185           ; Unknown 5xxx instruction
$CB0    $7F1E   ADD      VF, #1E         ; Add 30 to VF
$CB2    $A461   LD       I, $461         ; Load 461 into I
$CB4    $ECCD   UNKNOWN  $ECCD           ; Unknown Exxx instruction
$CB6    $1F75   JP       $F75            ; Jump to F75
$CB8    $D22C   DRW      V2, V2, #C      ; Draw 12-byte sprite at V2, V2
$CBA    $A734   LD       I, $734         ; Load 734 into I
$CBC    $545A   UNKNOWN  $545A           ; Unknown 5xxx instruction
$CBE    $DC40   DRW      VC, V4, #0      ; Draw 0-byte sprite at VC, V4
$CC0    $822A   UNKNOWN  822A            ; Unknown 8xxx instruction
$CC2    $4E0D   SNE      VE, #0D         ; Skip if VE != 13
$CC4    $66C9   LD       V6, #C9         ; Load 201 into V6
$CC6    $68F6   LD       V8, #F6         ; Load 246 into V8
$CC8    $9568   UNKNOWN  $9568           ; Unknown 9xxx instruction
$CCA    $4F7A   SNE      VF, #7A         ; Skip if VF != 122
$CCC    $EF1C   UNKNOWN  $EF1C           ; Unknown Exxx instruction
$CCE    $002A   SYS      $02A            ; System call to 02A
$CD0    $7FFC   ADD      VF, #FC         ; Add 252 to VF
$CD2    $BC6E   JP       V0, $C6E        ; Jump to V0 + C6E
$CD4    $6595   LD       V5, #95         ; Load 149 into V5
$CD6    $531F   UNKNOWN  $531F           ; Unknown 5xxx instruction
$CD8    $BC86   JP       V0, $C86        ; Jump to V0 + C86
$CDA    $9EB7   UNKNOWN  $9EB7           ; Unknown 9xxx instruction
$CDC    $2CDE   CALL     $CDE            ; Call subroutine at CDE
$CDE    $9AF9   UNKNOWN  $9AF9           ; Unknown 9xxx instruction
$CE0    $F694   UNKNOWN  F694            ; Unknown Fxxx instruction
$CE2    $08D9   SYS      $8D9            ; System call to 8D9
$CE4    $C4FA   RND      V4, #FA         ; V4 = random & FA
$CE6    $D8B8   DRW      V8, VB, #8      ; Draw 8-byte sprite at V8, VB
$CE8    $BCAE   JP       V0, $CAE        ; Jump to V0 + CAE
$CEA    $97AD   UNKNOWN  $97AD           ; Unknown 9xxx instruction
$CEC    $C249   RND      V2, #49         ; V2 = random & 49
$CEE    $4A44   SNE      VA, #44         ; Skip if VA != 68
$CF0    $D6B5   DRW      V6, VB, #5      ; Draw 5-byte sprite at V6, VB
$CF2    $4CA7   SNE      VC, #A7         ; Skip if VC != 167
$CF4    $29BB   CALL     $9BB            ; Call subroutine at 9BB
$CF6    $2E55   CALL     $E55            ; Call subroutine at E55
$CF8    $C69F   RND      V6, #9F         ; V6 = random & 9F
$CFA    $29AC   CALL     $9AC            ; Call subroutine at 9AC
$CFC    $2D24   CALL     $D24            ; Call subroutine at D24
$CFE    $889B   UNKNOWN  889B            ; Unknown 8xxx instruction
$D00    $2FFF   CALL     $FFF            ; Call subroutine at FFF
$D02    $BC0E   JP       V0, $C0E        ; Jump to V0 + C0E
$D04    $15B1   JP       $5B1            ; Jump to 5B1
$D06    $D430   DRW      V4, V3, #0      ; Draw 0-byte sprite at V4, V3
$D08    $1201   JP       $201            ; Jump to 201
$D0A    $5DFC   UNKNOWN  $5DFC           ; Unknown 5xxx instruction
$D0C    $790F   ADD      V9, #0F         ; Add 15 to V9
$D0E    $0CC1   SYS      $CC1            ; System call to CC1
$D10    $9BB4   UNKNOWN  $9BB4           ; Unknown 9xxx instruction
$D12    $8E8A   UNKNOWN  8E8A            ; Unknown 8xxx instruction
$D14    $3AB0   SE       VA, #B0         ; Skip if VA == 176
$D16    $5F1F   UNKNOWN  $5F1F           ; Unknown 5xxx instruction
$D18    $AFB7   LD       I, $FB7         ; Load FB7 into I
$D1A    $59D8   UNKNOWN  $59D8           ; Unknown 5xxx instruction
$D1C    $53B4   UNKNOWN  $53B4           ; Unknown 5xxx instruction
$D1E    $E6D9   UNKNOWN  $E6D9           ; Unknown Exxx instruction
$D20    $7E49   ADD      VE, #49         ; Add 73 to VE
$D22    $AF5F   LD       I, $F5F         ; Load F5F into I
$D24    $BE3F   JP       V0, $E3F        ; Jump to V0 + E3F
$D26    $BC95   JP       V0, $C95        ; Jump to V0 + C95
$D28    $2CA7   CALL     $CA7            ; Call subroutine at CA7
$D2A    $3D91   SE       VD, #91         ; Skip if VD == 145
$D2C    $EBDD   UNKNOWN  $EBDD           ; Unknown Exxx instruction
$D2E    $BD66   JP       V0, $D66        ; Jump to V0 + D66
$D30    $352B   SE       V5, #2B         ; Skip if V5 == 43
$D32    $E86B   UNKNOWN  $E86B           ; Unknown Exxx instruction
$D34    $C8A6   RND      V8, #A6         ; V8 = random & A6
$D36    $D25A   DRW      V2, V5, #A      ; Draw 10-byte sprite at V2, V5
$D38    $EAAC   UNKNOWN  $EAAC           ; Unknown Exxx instruction
$D3A    $381C   SE       V8, #1C         ; Skip if V8 == 28
$D3C    $3A25   SE       VA, #25         ; Skip if VA == 37
$D3E    $030A   SYS      $30A            ; System call to 30A
$D40    $4209   SNE      V2, #09         ; Skip if V2 != 9
$D42    $19B5   JP       $9B5            ; Jump to 9B5
$D44    $9FF9   UNKNOWN  $9FF9           ; Unknown 9xxx instruction
$D46    $14B6   JP       $4B6            ; Jump to 4B6
$D48    $0E05   SYS      $E05            ; System call to E05
$D4A    $7AD2   ADD      VA, #D2         ; Add 210 to VA
$D4C    $27B5   CALL     $7B5            ; Call subroutine at 7B5
$D4E    $2EC1   CALL     $EC1            ; Call subroutine at EC1
$D50    $D004   DRW      V0, V0, #4      ; Draw 4-byte sprite at V0, V0
$D52    $9F59   UNKNOWN  $9F59           ; Unknown 9xxx instruction
$D54    $8C77   SUBN     VC, V7          ; VC = V7 - VC, VF = !borrow
$D56    $7D41   ADD      VD, #41         ; Add 65 to VD
$D58    $CFF3   RND      VF, #F3         ; VF = random & F3
$D5A    $8178   UNKNOWN  8178            ; Unknown 8xxx instruction
$D5C    $FDFD   UNKNOWN  FDFD            ; Unknown Fxxx instruction
$D5E    $1948   JP       $948            ; Jump to 948
$D60    $5E1B   UNKNOWN  $5E1B           ; Unknown 5xxx instruction
$D62    $8FC2   AND      VF, VC          ; VF &= VC
$D64    $3E8D   SE       VE, #8D         ; Skip if VE == 141
$D66    $A049   LD       I, $049         ; Load 049 into I
$D68    $1BE0   JP       $BE0            ; Jump to BE0
$D6A    $2187   CALL     $187            ; Call subroutine at 187
$D6C    $FA76   UNKNOWN  FA76            ; Unknown Fxxx instruction
$D6E    $B935   JP       V0, $935        ; Jump to V0 + 935
$D70    $8199   UNKNOWN  8199            ; Unknown 8xxx instruction
$D72    $8748   UNKNOWN  8748            ; Unknown 8xxx instruction
$D74    $2DA2   CALL     $DA2            ; Call subroutine at DA2
$D76    $9852   UNKNOWN  $9852           ; Unknown 9xxx instruction
$D78    $4D25   SNE      VD, #25         ; Skip if VD != 37
$D7A    $0916   SYS      $916            ; System call to 916
$D7C    $D12D   DRW      V1, V2, #D      ; Draw 13-byte sprite at V1, V2
$D7E    $5703   UNKNOWN  $5703           ; Unknown 5xxx instruction
$D80    $775A   ADD      V7, #5A         ; Add 90 to V7
$D82    $0EE5   SYS      $EE5            ; System call to EE5
$D84    $4223   SNE      V2, #23         ; Skip if V2 != 35
$D86    $784B   ADD      V8, #4B         ; Add 75 to V8
$D88    $EBD6   UNKNOWN  $EBD6           ; Unknown Exxx instruction
$D8A    $EE5D   UNKNOWN  $EE5D           ; Unknown Exxx instruction
$D8C    $2AA5   CALL     $AA5            ; Call subroutine at AA5
$D8E    $E642   UNKNOWN  $E642           ; Unknown Exxx instruction
$D90    $CC5F   RND      VC, #5F         ; VC = random & 5F
$D92    $8011   OR       V0, V1          ; V0 |= V1
$D94    $5697   UNKNOWN  $5697           ; Unknown 5xxx instruction
$D96    $D82D   DRW      V8, V2, #D      ; Draw 13-byte sprite at V8, V2
$D98    $8774   ADD      V7, V7          ; V7 += V7, VF = carry
$D9A    $A37E   LD       I, $37E         ; Load 37E into I
$D9C    $4F9C   SNE      VF, #9C         ; Skip if VF != 156
$D9E    $0B64   SYS      $B64            ; System call to B64
$DA0    $A58E   LD       I, $58E         ; Load 58E into I
$DA2    $D2BC   DRW      V2, VB, #C      ; Draw 12-byte sprite at V2, VB
$DA4    $3D3A   SE       VD, #3A         ; Skip if VD == 58
$DA6    $216A   CALL     $16A            ; Call subroutine at 16A
$DA8    $5C93   UNKNOWN  $5C93           ; Unknown 5xxx instruction
$DAA    $A664   LD       I, $664         ; Load 664 into I
$DAC    $B523   JP       V0, $523        ; Jump to V0 + 523
$DAE    $4946   SNE      V9, #46         ; Skip if V9 != 70
$DB0    $8B0E   SHL      VB              ; VB <<= 1, VF = MSB
$DB2    $7520   ADD      V5, #20         ; Add 32 to V5
$DB4    $FD61   UNKNOWN  FD61            ; Unknown Fxxx instruction
$DB6    $BF36   JP       V0, $F36        ; Jump to V0 + F36
$DB8    $4DF3   SNE      VD, #F3         ; Skip if VD != 243
$DBA    $CE23   RND      VE, #23         ; VE = random & 23
$DBC    $04CD   SYS      $4CD            ; System call to 4CD
$DBE    $44FB   SNE      V4, #FB         ; Skip if V4 != 251
$DC0    $D703   DRW      V7, V0, #3      ; Draw 3-byte sprite at V7, V0
$DC2    $6A9C   LD       VA, #9C         ; Load 156 into VA
$DC4    $3011   SE       V0, #11         ; Skip if V0 == 17
$DC6    $7E44   ADD      VE, #44         ; Add 68 to VE
$DC8    $54BC   UNKNOWN  $54BC           ; Unknown 5xxx instruction
$DCA    $A762   LD       I, $762         ; Load 762 into I
$DCC    $7BFE   ADD      VB, #FE         ; Add 254 to VB
$DCE    $22BB   CALL     $2BB            ; Call subroutine at 2BB
$DD0    $E1B1   UNKNOWN  $E1B1           ; Unknown Exxx instruction
$DD2    $4B48   SNE      VB, #48         ; Skip if VB != 72
$DD4    $4896   SNE      V8, #96         ; Skip if V8 != 150
$DD6    $E01F   UNKNOWN  $E01F           ; Unknown Exxx instruction
$DD8    $8B6B   UNKNOWN  8B6B            ; Unknown 8xxx instruction
$DDA    $40F3   SNE      V0, #F3         ; Skip if V0 != 243
$DDC    $7ECD   ADD      VE, #CD         ; Add 205 to VE
$DDE    $789D   ADD      V8, #9D         ; Add 157 to V8
$DE0    $79B2   ADD      V9, #B2         ; Add 178 to V9
$DE2    $5741   UNKNOWN  $5741           ; Unknown 5xxx instruction
$DE4    $2294   CALL     $294            ; Call subroutine at 294
$DE6    $122C   JP       $22C            ; Jump to 22C
$DE8    $D961   DRW      V9, V6, #1      ; Draw 1-byte sprite at V9, V6
$DEA    $47F1   SNE      V7, #F1         ; Skip if V7 != 241
$DEC    $C3CA   RND      V3, #CA         ; V3 = random & CA
$DEE    $9F3A   UNKNOWN  $9F3A           ; Unknown 9xxx instruction
$DF0    $A248   LD       I, $248         ; Load 248 into I
$DF2    $B61A   JP       V0, $61A        ; Jump to V0 + 61A
$DF4    $8238   UNKNOWN  8238            ; Unknown 8xxx instruction
$DF6    $99B5   UNKNOWN  $99B5           ; Unknown 9xxx instruction
$DF8    $DD71   DRW      VD, V7, #1      ; Draw 1-byte sprite at VD, V7
$DFA    $62B3   LD       V2, #B3         ; Load 179 into V2
$DFC    $8368   UNKNOWN  8368            ; Unknown 8xxx instruction
$DFE    $D56A   DRW      V5, V6, #A      ; Draw 10-byte sprite at V5, V6
$E00    $D2A1   DRW      V2, VA, #1      ; Draw 1-byte sprite at V2, VA
$E02    $7DC4   ADD      VD, #C4         ; Add 196 to VD
$E04    $502B   UNKNOWN  $502B           ; Unknown 5xxx instruction
$E06    $6C09   LD       VC, #09         ; Load 9 into VC
$E08    $F36F   UNKNOWN  F36F            ; Unknown Fxxx instruction
$E0A    $FDEA   UNKNOWN  FDEA            ; Unknown Fxxx instruction
$E0C    $0ED3   SYS      $ED3            ; System call to ED3
$E0E    $1502   JP       $502            ; Jump to 502
$E10    $E688   UNKNOWN  $E688           ; Unknown Exxx instruction
$E12    $CE9F   RND      VE, #9F         ; VE = random & 9F
$E14    $3C35   SE       VC, #35         ; Skip if VC == 53
$E16    $CFF9   RND      VF, #F9         ; VF = random & F9
$E18    $25B4   CALL     $5B4            ; Call subroutine at 5B4
$E1A    $3887   SE       V8, #87         ; Skip if V8 == 135
$E1C    $4A22   SNE      VA, #22         ; Skip if VA != 34
$E1E    $A75C   LD       I, $75C         ; Load 75C into I
$E20    $95C2   UNKNOWN  $95C2           ; Unknown 9xxx instruction
$E22    $428A   SNE      V2, #8A         ; Skip if V2 != 138
$E24    $E556   UNKNOWN  $E556           ; Unknown Exxx instruction
$E26    $E998   UNKNOWN  $E998           ; Unknown Exxx instruction
$E28    $2D9E   CALL     $D9E            ; Call subroutine at D9E
$E2A    $109D   JP       $09D            ; Jump to 09D
$E2C    $2EBC   CALL     $EBC            ; Call subroutine at EBC
$E2E    $0D96   SYS      $D96            ; System call to D96
$E30    $D7A2   DRW      V7, VA, #2      ; Draw 2-byte sprite at V7, VA
$E32    $9270   SNE      V2, V7          ; Skip if V2 != V7
$E34    $918D   UNKNOWN  $918D           ; Unknown 9xxx instruction
$E36    $A2DB   LD       I, $2DB         ; Load 2DB into I
$E38    $AFE8   LD       I, $FE8         ; Load FE8 into I
$E3A    $CB92   RND      VB, #92         ; VB = random & 92
$E3C    $DDAF   DRW      VD, VA, #F      ; Draw 15-byte sprite at VD, VA
$E3E    $D1D9   DRW      V1, VD, #9      ; Draw 9-byte sprite at V1, VD
$E40    $CED6   RND      VE, #D6         ; VE = random & D6
$E42    $8DCC   UNKNOWN  8DCC            ; Unknown 8xxx instruction
$E44    $2326   CALL     $326            ; Call subroutine at 326
$E46    $0C4C   SYS      $C4C            ; System call to C4C
$E48    $F534   UNKNOWN  F534            ; Unknown Fxxx instruction
$E4A    $CA3B   RND      VA, #3B         ; VA = random & 3B
$E4C    $B6EE   JP       V0, $6EE        ; Jump to V0 + 6EE
$E4E    $7B05   ADD      VB, #05         ; Add 5 to VB
$E50    $3FE6   SE       VF, #E6         ; Skip if VF == 230
$E52    $47C3   SNE      V7, #C3         ; Skip if V7 != 195
$E54    $FBD2   UNKNOWN  FBD2            ; Unknown Fxxx instruction
$E56    $5A7F   UNKNOWN  $5A7F           ; Unknown 5xxx instruction
$E58    $77D7   ADD      V7, #D7         ; Add 215 to V7
$E5A    $BD12   JP       V0, $D12        ; Jump to V0 + D12
$E5C    $8886   SHR      V8              ; V8 >>= 1, VF = LSB
$E5E    $CDE4   RND      VD, #E4         ; VD = random & E4
$E60    $25DB   CALL     $5DB            ; Call subroutine at 5DB
$E62    $09AE   SYS      $9AE            ; System call to 9AE
$E64    $3F0E   SE       VF, #0E         ; Skip if VF == 14
$E66    $DAE4   DRW      VA, VE, #4      ; Draw 4-byte sprite at VA, VE
$E68    $2538   CALL     $538            ; Call subroutine at 538
$E6A    $174D   JP       $74D            ; Jump to 74D
$E6C    $154C   JP       $54C            ; Jump to 54C
$E6E    $D6A8   DRW      V6, VA, #8      ; Draw 8-byte sprite at V6, VA
$E70    $E739   UNKNOWN  $E739           ; Unknown Exxx instruction
$E72    $3EB7   SE       VE, #B7         ; Skip if VE == 183
$E74    $6644   LD       V6, #44         ; Load 68 into V6
$E76    $4F71   SNE      VF, #71         ; Skip if VF != 113
$E78    $558D   UNKNOWN  $558D           ; Unknown 5xxx instruction
$E7A    $2252   CALL     $252            ; Call subroutine at 252
$E7C    $F64C   UNKNOWN  F64C            ; Unknown Fxxx instruction
$E7E    $4EC0   SNE      VE, #C0         ; Skip if VE != 192
$E80    $087E   SYS      $87E            ; System call to 87E
$E82    $1263   JP       $263            ; Jump to 263
$E84    $643C   LD       V4, #3C         ; Load 60 into V4
$E86    $B22F   JP       V0, $22F        ; Jump to V0 + 22F
$E88    $DA98   DRW      VA, V9, #8      ; Draw 8-byte sprite at VA, V9
$E8A    $74C1   ADD      V4, #C1         ; Add 193 to V4
$E8C    $FA9E   UNKNOWN  FA9E            ; Unknown Fxxx instruction
$E8E    $87E1   OR       V7, VE          ; V7 |= VE
$E90    $004F   SYS      $04F            ; System call to 04F
$E92    $DBF0   DRW      VB, VF, #0      ; Draw 0-byte sprite at VB, VF
$E94    $A0B6   LD       I, $0B6         ; Load 0B6 into I
$E96    $76F0   ADD      V6, #F0         ; Add 240 to V6
$E98    $8D48   UNKNOWN  8D48            ; Unknown 8xxx instruction
$E9A    $F4B5   UNKNOWN  F4B5            ; Unknown Fxxx instruction
$E9C    $FCAE   UNKNOWN  FCAE            ; Unknown Fxxx instruction
$E9E    $28BF   CALL     $8BF            ; Call subroutine at 8BF
$EA0    $0328   SYS      $328            ; System call to 328
$EA2    $0668   SYS      $668            ; System call to 668
$EA4    $EE50   UNKNOWN  $EE50           ; Unknown Exxx instruction
$EA6    $92D9   UNKNOWN  $92D9           ; Unknown 9xxx instruction
$EA8    $C93D   RND      V9, #3D         ; V9 = random & 3D
$EAA    $A77F   LD       I, $77F         ; Load 77F into I
$EAC    $C931   RND      V9, #31         ; V9 = random & 31
$EAE    $7200   ADD      V2, #00         ; Add 0 to V2
$EB0    $34B9   SE       V4, #B9         ; Skip if V4 == 185
$EB2    $1FE7   JP       $FE7            ; Jump to FE7
$EB4    $ECD9   UNKNOWN  $ECD9           ; Unknown Exxx instruction
$EB6    $39B4   SE       V9, #B4         ; Skip if V9 == 180
$EB8    $99CB   UNKNOWN  $99CB           ; Unknown 9xxx instruction
$EBA    $15F5   JP       $5F5            ; Jump to 5F5
$EBC    $0423   SYS      $423            ; System call to 423
$EBE    $89DA   UNKNOWN  89DA            ; Unknown 8xxx instruction
$EC0    $BB07   JP       V0, $B07        ; Jump to V0 + B07
$EC2    $1D31   JP       $D31            ; Jump to D31
$EC4    $1FEF   JP       $FEF            ; Jump to FEF
$EC6    $68ED   LD       V8, #ED         ; Load 237 into V8
$EC8    $E732   UNKNOWN  $E732           ; Unknown Exxx instruction
$ECA    $6A2A   LD       VA, #2A         ; Load 42 into VA
$ECC    $C8A1   RND      V8, #A1         ; V8 = random & A1
$ECE    $481C   SNE      V8, #1C         ; Skip if V8 != 28
$ED0    $FF99   UNKNOWN  FF99            ; Unknown Fxxx instruction
$ED2    $C9A9   RND      V9, #A9         ; V9 = random & A9
$ED4    $0AFB   SYS      $AFB            ; System call to AFB
$ED6    $78DB   ADD      V8, #DB         ; Add 219 to V8
$ED8    $F989   UNKNOWN  F989            ; Unknown Fxxx instruction
$EDA    $135E   JP       $35E            ; Jump to 35E
$EDC    $870C   UNKNOWN  870C            ; Unknown 8xxx instruction
$EDE    $C279   RND      V2, #79         ; V2 = random & 79
$EE0    $9C02   UNKNOWN  $9C02           ; Unknown 9xxx instruction
$EE2    $5B54   UNKNOWN  $5B54           ; Unknown 5xxx instruction
$EE4    $4822   SNE      V8, #22         ; Skip if V8 != 34
$EE6    $9C8C   UNKNOWN  $9C8C           ; Unknown 9xxx instruction
$EE8    $1BC6   JP       $BC6            ; Jump to BC6
$EEA    $E329   UNKNOWN  $E329           ; Unknown Exxx instruction
$EEC    $A4FE   LD       I, $4FE         ; Load 4FE into I
$EEE    $7771   ADD      V7, #71         ; Add 113 to V7
$EF0    $5A92   UNKNOWN  $5A92           ; Unknown 5xxx instruction
$EF2    $D92C   DRW      V9, V2, #C      ; Draw 12-byte sprite at V9, V2
$EF4    $5003   UNKNOWN  $5003           ; Unknown 5xxx instruction
$EF6    $AD75   LD       I, $D75         ; Load D75 into I
$EF8    $78AA   ADD      V8, #AA         ; Add 170 to V8
$EFA    $BED8   JP       V0, $ED8        ; Jump to V0 + ED8
$EFC    $E88C   UNKNOWN  $E88C           ; Unknown Exxx instruction
$EFE    $DE67   DRW      VE, V6, #7      ; Draw 7-byte sprite at VE, V6
$F00    $587B   UNKNOWN  $587B           ; Unknown 5xxx instruction
$F02    $1171   JP       $171            ; Jump to 171
$F04    $FB3E   UNKNOWN  FB3E            ; Unknown Fxxx instruction
$F06    $5393   UNKNOWN  $5393           ; Unknown 5xxx instruction
$F08    $66B7   LD       V6, #B7         ; Load 183 into V6
$F0A    $8CDC   UNKNOWN  8CDC            ; Unknown 8xxx instruction
$F0C    $B663   JP       V0, $663        ; Jump to V0 + 663
$F0E    $54B3   UNKNOWN  $54B3           ; Unknown 5xxx instruction
$F10    $2296   CALL     $296            ; Call subroutine at 296
$F12    $8F97   SUBN     VF, V9          ; VF = V9 - VF, VF = !borrow
$F14    $05A3   SYS      $5A3            ; System call to 5A3
$F16    $32B4   SE       V2, #B4         ; Skip if V2 == 180
$F18    $4906   SNE      V9, #06         ; Skip if V9 != 6
$F1A    $1718   JP       $718            ; Jump to 718
$F1C    $44B7   SNE      V4, #B7         ; Skip if V4 != 183
$F1E    $AB88   LD       I, $B88         ; Load B88 into I
$F20    $9E74   UNKNOWN  $9E74           ; Unknown 9xxx instruction
$F22    $4C02   SNE      VC, #02         ; Skip if VC != 2
$F24    $B779   JP       V0, $779        ; Jump to V0 + 779
$F26    $B930   JP       V0, $930        ; Jump to V0 + 930
$F28    $3EB8   SE       VE, #B8         ; Skip if VE == 184
$F2A    $8D7E   SHL      VD              ; VD <<= 1, VF = MSB
$F2C    $F4DE   UNKNOWN  F4DE            ; Unknown Fxxx instruction
$F2E    $6229   LD       V2, #29         ; Load 41 into V2
$F30    $DD62   DRW      VD, V6, #2      ; Draw 2-byte sprite at VD, V6
$F32    $5C1E   UNKNOWN  $5C1E           ; Unknown 5xxx instruction
$F34    $A039   LD       I, $039         ; Load 039 into I
$F36    $AB8A   LD       I, $B8A         ; Load B8A into I
$F38    $CDDB   RND      VD, #DB         ; VD = random & DB
$F3A    $6176   LD       V1, #76         ; Load 118 into V1
$F3C    $D5E2   DRW      V5, VE, #2      ; Draw 2-byte sprite at V5, VE
$F3E    $BEC5   JP       V0, $EC5        ; Jump to V0 + EC5
$F40    $E865   UNKNOWN  $E865           ; Unknown Exxx instruction
$F42    $2FDE   CALL     $FDE            ; Call subroutine at FDE
$F44    $A794   LD       I, $794         ; Load 794 into I
$F46    $ABFF   LD       I, $BFF         ; Load BFF into I
$F48    $9E3A   UNKNOWN  $9E3A           ; Unknown 9xxx instruction
$F4A    $78CB   ADD      V8, #CB         ; Add 203 to V8
$F4C    $2E29   CALL     $E29            ; Call subroutine at E29
$F4E    $2CFD   CALL     $CFD            ; Call subroutine at CFD
$F50    $4658   SNE      V6, #58         ; Skip if V6 != 88
$F52    $F8EC   UNKNOWN  F8EC            ; Unknown Fxxx instruction
$F54    $D33E   DRW      V3, V3, #E      ; Draw 14-byte sprite at V3, V3
$F56    $1F9E   JP       $F9E            ; Jump to F9E
$F58    $FE9E   UNKNOWN  FE9E            ; Unknown Fxxx instruction
$F5A    $653F   LD       V5, #3F         ; Load 63 into V5
$F5C    $B4BA   JP       V0, $4BA        ; Jump to V0 + 4BA
$F5E    $7666   ADD      V6, #66         ; Add 102 to V6
$F60    $A060   LD       I, $060         ; Load 060 into I
$F62    $70ED   ADD      V0, #ED         ; Add 237 to V0
$F64    $10EA   JP       $0EA            ; Jump to 0EA
$F66    $FA25   UNKNOWN  FA25            ; Unknown Fxxx instruction
$F68    $4548   SNE      V5, #48         ; Skip if V5 != 72
$F6A    $6955   LD       V9, #55         ; Load 85 into V9
$F6C    $FE7C   UNKNOWN  FE7C            ; Unknown Fxxx instruction
$F6E    $8D2E   SHL      VD              ; VD <<= 1, VF = MSB
$F70    $4A08   SNE      VA, #08         ; Skip if VA != 8
$F72    $4235   SNE      V2, #35         ; Skip if V2 != 53
$F74    $EE26   UNKNOWN  $EE26           ; Unknown Exxx instruction
$F76    $CED9   RND      VE, #D9         ; VE = random & D9
$F78    $6C50   LD       VC, #50         ; Load 80 into VC
$F7A    $8CEF   UNKNOWN  8CEF            ; Unknown 8xxx instruction
$F7C    $CD1B   RND      VD, #1B         ; VD = random & 1B
$F7E    $8183   XOR      V1, V8          ; V1 ^= V8
$F80    $21F4   CALL     $1F4            ; Call subroutine at 1F4
$F82    $2B22   CALL     $B22            ; Call subroutine at B22
$F84    $D191   DRW      V1, V9, #1      ; Draw 1-byte sprite at V1, V9
$F86    $7012   ADD      V0, #12         ; Add 18 to V0
$F88    $C0C6   RND      V0, #C6         ; V0 = random & C6
$F8A    $69D8   LD       V9, #D8         ; Load 216 into V9
$F8C    $445C   SNE      V4, #5C         ; Skip if V4 != 92
$F8E    $2EE5   CALL     $EE5            ; Call subroutine at EE5
$F90    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$F92    $21F8   CALL     $1F8            ; Call subroutine at 1F8
$F94    $4D72   SNE      VD, #72         ; Skip if VD != 114
$F96    $B9B7   JP       V0, $9B7        ; Jump to V0 + 9B7
$F98    $6EE3   LD       VE, #E3         ; Load 227 into VE
$F9A    $93FA   UNKNOWN  $93FA           ; Unknown 9xxx instruction
$F9C    $F887   UNKNOWN  F887            ; Unknown Fxxx instruction
$F9E    $7090   ADD      V0, #90         ; Add 144 to V0
$FA0    $6740   LD       V7, #40         ; Load 64 into V7
$FA2    $65C1   LD       V5, #C1         ; Load 193 into V5
$FA4    $13CF   JP       $3CF            ; Jump to 3CF
$FA6    $CE57   RND      VE, #57         ; VE = random & 57
$FA8    $8D93   XOR      VD, V9          ; VD ^= V9
$FAA    $1627   JP       $627            ; Jump to 627
$FAC    $FA94   UNKNOWN  FA94            ; Unknown Fxxx instruction
$FAE    $FFEB   UNKNOWN  FFEB            ; Unknown Fxxx instruction
$FB0    $9A8F   UNKNOWN  $9A8F           ; Unknown 9xxx instruction
$FB2    $07B5   SYS      $7B5            ; System call to 7B5
$FB4    $301C   SE       V0, #1C         ; Skip if V0 == 28
$FB6    $E44A   UNKNOWN  $E44A           ; Unknown Exxx instruction
$FB8    $763C   ADD      V6, #3C         ; Add 60 to V6
$FBA    $6F21   LD       VF, #21         ; Load 33 into VF
$FBC    $3B58   SE       VB, #58         ; Skip if VB == 88
$FBE    $4A02   SNE      VA, #02         ; Skip if VA != 2
$FC0    $A3BA   LD       I, $3BA         ; Load 3BA into I
$FC2    $623F   LD       V2, #3F         ; Load 63 into V2
$FC4    $9CFD   UNKNOWN  $9CFD           ; Unknown 9xxx instruction
$FC6    $13EF   JP       $3EF            ; Jump to 3EF
$FC8    $4ED6   SNE      VE, #D6         ; Skip if VE != 214
$FCA    $8C4B   UNKNOWN  8C4B            ; Unknown 8xxx instruction
$FCC    $4530   SNE      V5, #30         ; Skip if V5 != 48
$FCE    $90A0   SNE      V0, VA          ; Skip if V0 != VA
$FD0    $190C   JP       $90C            ; Jump to 90C
$FD2    $8153   XOR      V1, V5          ; V1 ^= V5
$FD4    $F1F3   UNKNOWN  F1F3            ; Unknown Fxxx instruction
$FD6    $3209   SE       V2, #09         ; Skip if V2 == 9
$FD8    $5ED4   UNKNOWN  $5ED4           ; Unknown 5xxx instruction
$FDA    $1611   JP       $611            ; Jump to 611
$FDC    $4256   SNE      V2, #56         ; Skip if V2 != 86
$FDE    $0D8A   SYS      $D8A            ; System call to D8A
$FE0    $248D   CALL     $48D            ; Call subroutine at 48D
$FE2    $FD80   UNKNOWN  FD80            ; Unknown Fxxx instruction
$FE4    $C8FB   RND      V8, #FB         ; V8 = random & FB
$FE6    $17E0   JP       $7E0            ; Jump to 7E0
$FE8    $1DD9   JP       $DD9            ; Jump to DD9
$FEA    $BCC2   JP       V0, $CC2        ; Jump to V0 + CC2
$FEC    $1A71   JP       $A71            ; Jump to A71
$FEE    $0A9E   SYS      $A9E            ; System call to A9E
$FF0    $F3FA   UNKNOWN  F3FA            ; Unknown Fxxx instruction
$FF2    $9660   SNE      V6, V6          ; Skip if V6 != V6
$FF4    $AD52   LD       I, $D52         ; Load D52 into I
$FF6    $F11C   UNKNOWN  F11C            ; Unknown Fxxx instruction
$FF8    $5585   UNKNOWN  $5585           ; Unknown 5xxx instruction
$FFA    $9E9C   UNKNOWN  $9E9C           ; Unknown 9xxx instruction
$FFC    $527A   UNKNOWN  $527A           ; Unknown 5xxx instruction
$FFE    $3212   SE       V2, #12         ; Skip if V2 == 18

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 491 (27.4%)
  LD      : 239 (13.3%)
  JP      : 224 (12.5%)
  SNE     : 132 ( 7.4%)
  ADD     : 115 ( 6.4%)
  SYS     : 112 ( 6.2%)
  SE      : 112 ( 6.2%)
  CALL    : 111 ( 6.2%)
  DRW     : 110 ( 6.1%)
  RND     :  98 ( 5.5%)
  SHL     :  13 ( 0.7%)
  AND     :   9 ( 0.5%)
  SUBN    :   7 ( 0.4%)
  SHR     :   6 ( 0.3%)
  XOR     :   6 ( 0.3%)
  OR      :   4 ( 0.2%)
  SUB     :   3 ( 0.2%)

Memory Operations: 354 (19.8%)
Arithmetic Operations: 144 (8.0%)
