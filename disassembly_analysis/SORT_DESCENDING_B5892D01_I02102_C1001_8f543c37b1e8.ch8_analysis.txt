
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B5892D01_I02102_C1001_8f543c37b1e8.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 5892
Instance: 2102
Direction: descending
Final Array: [241, 241, 226, 170, 154, 78, 40, 2]
Operations: R:0 W:1 C:56 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 113
Sort Array References:
  $20A: LD I, $172 ; Load 172 into I
  $21A: LD I, $4B6 ; Load 4B6 into I
  $222: LD I, $530 ; Load 530 into I
  $29E: LD I, $161 ; Load 161 into I
  $2BA: LD I, $D79 ; Load D79 into I
  $2C6: LD I, $19E ; Load 19E into I
  $2FE: LD I, $B64 ; Load B64 into I
  $318: LD I, $A80 ; Load A80 into I
  $322: LD I, $C62 ; Load C62 into I
  $32A: LD I, $C3D ; Load C3D into I
  $330: LD I, $D8B ; Load D8B into I
  $340: LD I, $55D ; Load 55D into I
  $34A: LD I, $6DD ; Load 6DD into I
  $376: LD I, $8F3 ; Load 8F3 into I
  $386: LD I, $7DA ; Load 7DA into I
  $39A: LD I, $631 ; Load 631 into I
  $39C: LD I, $BE8 ; Load BE8 into I
  $3A0: LD I, $FE0 ; Load FE0 into I
  $3BA: LD I, $743 ; Load 743 into I
  $3D0: LD I, $639 ; Load 639 into I
  $41C: LD I, $87C ; Load 87C into I
  $430: LD I, $3B0 ; Load 3B0 into I
  $454: LD I, $13E ; Load 13E into I
  $462: LD I, $31A ; Load 31A into I
  $4BA: LD I, $31F ; Load 31F into I
  $4C4: LD I, $AD6 ; Load AD6 into I
  $4CA: LD I, $252 ; Load 252 into I
  $4EA: LD I, $02F ; Load 02F into I
  $4F2: LD I, $7F2 ; Load 7F2 into I
  $4F4: LD I, $739 ; Load 739 into I
  $560: LD I, $A12 ; Load A12 into I
  $642: LD I, $85D ; Load 85D into I
  $654: LD I, $8A9 ; Load 8A9 into I
  $656: LD I, $209 ; Load 209 into I
  $664: LD I, $492 ; Load 492 into I
  $688: LD I, $1B9 ; Load 1B9 into I
  $6AA: LD I, $9A7 ; Load 9A7 into I
  $6BA: LD I, $23D ; Load 23D into I
  $6C0: LD I, $5E7 ; Load 5E7 into I
  $6C2: LD I, $557 ; Load 557 into I
  $6D8: LD I, $B07 ; Load B07 into I
  $702: LD I, $31A ; Load 31A into I
  $722: LD I, $DA5 ; Load DA5 into I
  $7C0: LD I, $88D ; Load 88D into I
  $81C: LD I, $D9A ; Load D9A into I
  $850: LD I, $C91 ; Load C91 into I
  $860: LD I, $8B9 ; Load 8B9 into I
  $898: LD I, $AC0 ; Load AC0 into I
  $8D2: LD I, $053 ; Load 053 into I
  $8F8: LD I, $3B7 ; Load 3B7 into I
  $8FE: LD I, $186 ; Load 186 into I
  $906: LD I, $9EA ; Load 9EA into I
  $990: LD I, $CD2 ; Load CD2 into I
  $9A6: LD I, $BEF ; Load BEF into I
  $9B4: LD I, $B73 ; Load B73 into I
  $9BE: LD I, $C7B ; Load C7B into I
  $9C4: LD I, $616 ; Load 616 into I
  $9DE: LD I, $612 ; Load 612 into I
  $9E8: LD I, $9F4 ; Load 9F4 into I
  $9F2: LD I, $DAA ; Load DAA into I
  $9F4: LD I, $834 ; Load 834 into I
  $9F8: LD I, $E06 ; Load E06 into I
  $A14: LD I, $33A ; Load 33A into I
  $A1A: LD I, $959 ; Load 959 into I
  $A20: LD I, $C67 ; Load C67 into I
  $A24: LD I, $3DD ; Load 3DD into I
  $A2C: LD I, $DCB ; Load DCB into I
  $A38: LD I, $037 ; Load 037 into I
  $A40: LD I, $01E ; Load 01E into I
  $A7C: LD I, $F88 ; Load F88 into I
  $AA8: LD I, $82D ; Load 82D into I
  $ADA: LD I, $C54 ; Load C54 into I
  $ADC: LD I, $176 ; Load 176 into I
  $AFE: LD I, $BE3 ; Load BE3 into I
  $B24: LD I, $6AE ; Load 6AE into I
  $B34: LD I, $80D ; Load 80D into I
  $B36: LD I, $8E2 ; Load 8E2 into I
  $B78: LD I, $8F5 ; Load 8F5 into I
  $B88: LD I, $7BE ; Load 7BE into I
  $BA2: LD I, $BAC ; Load BAC into I
  $C16: LD I, $687 ; Load 687 into I
  $C22: LD I, $186 ; Load 186 into I
  $C40: LD I, $D4B ; Load D4B into I
  $C62: LD V4, [I] ; Load V0-V4 from I
  $C78: LD I, $A0E ; Load A0E into I
  $C94: LD I, $0B2 ; Load 0B2 into I
  $CCE: LD I, $6C0 ; Load 6C0 into I
  $CE0: LD I, $177 ; Load 177 into I
  $D0C: LD I, $F4B ; Load F4B into I
  $D18: LD I, $551 ; Load 551 into I
  $D54: LD I, $596 ; Load 596 into I
  $D60: LD I, $E51 ; Load E51 into I
  $D84: LD I, $A82 ; Load A82 into I
  $D86: LD I, $E1A ; Load E1A into I
  $DA2: LD I, $12E ; Load 12E into I
  $DA6: LD I, $FF2 ; Load FF2 into I
  $DF6: LD I, $30C ; Load 30C into I
  $E14: LD I, $58E ; Load 58E into I
  $E1A: LD I, $6B6 ; Load 6B6 into I
  $E48: LD I, $905 ; Load 905 into I
  $E64: LD I, $184 ; Load 184 into I
  $E68: LD I, $55F ; Load 55F into I
  $E70: LD I, $346 ; Load 346 into I
  $E7E: LD I, $C07 ; Load C07 into I
  $E84: LD I, $94F ; Load 94F into I
  $E90: LD I, $518 ; Load 518 into I
  $EEA: LD I, $AF0 ; Load AF0 into I
  $F4E: LD I, $07A ; Load 07A into I
  $F54: LD I, $659 ; Load 659 into I
  $F68: LD I, $FE4 ; Load FE4 into I
  $FA6: LD I, $31C ; Load 31C into I
  $FAE: LD I, $67D ; Load 67D into I
  $FE6: LD I, $2DF ; Load 2DF into I

CONTROL FLOW ANALYSIS:
Jumps: 216
Calls: 131
Branches: 229
Loops: 105
Loop Structures:
  $240 -> $0F6 (backward jump)
  $3B4 -> $292 (backward jump)
  $3D6 -> $1C4 (backward jump)
  $424 -> $2D4 (backward jump)
  $432 -> $05B (backward jump)
  $458 -> $404 (backward jump)
  $492 -> $48D (backward jump)
  $4AA -> $458 (backward jump)
  $4BE -> $47F (backward jump)
  $4CC -> $2AA (backward jump)
  $4F0 -> $29A (backward jump)
  $530 -> $004 (backward jump)
  $57A -> $1FF (backward jump)
  $594 -> $17C (backward jump)
  $59A -> $09E (backward jump)
  $5E0 -> $59A (backward jump)
  $5E4 -> $291 (backward jump)
  $620 -> $43A (backward jump)
  $668 -> $138 (backward jump)
  $71E -> $396 (backward jump)
  $72A -> $156 (backward jump)
  $738 -> $603 (backward jump)
  $76C -> $371 (backward jump)
  $7C2 -> $67F (backward jump)
  $7D6 -> $08E (backward jump)
  $7DC -> $1A1 (backward jump)
  $816 -> $7B7 (backward jump)
  $820 -> $6E5 (backward jump)
  $864 -> $33F (backward jump)
  $86E -> $25A (backward jump)
  $896 -> $2A9 (backward jump)
  $8A2 -> $889 (backward jump)
  $8B8 -> $882 (backward jump)
  $8DA -> $2A1 (backward jump)
  $8E4 -> $498 (backward jump)
  $930 -> $676 (backward jump)
  $950 -> $8D8 (backward jump)
  $96E -> $8FA (backward jump)
  $988 -> $75B (backward jump)
  $9C8 -> $55C (backward jump)
  $9E6 -> $28F (backward jump)
  $A06 -> $972 (backward jump)
  $A4C -> $5E1 (backward jump)
  $A5A -> $85E (backward jump)
  $A8C -> $43E (backward jump)
  $A96 -> $20B (backward jump)
  $AA2 -> $8D5 (backward jump)
  $ABC -> $2D6 (backward jump)
  $ACE -> $441 (backward jump)
  $AEA -> $192 (backward jump)
  $AEE -> $7DA (backward jump)
  $B10 -> $6E4 (backward jump)
  $B84 -> $319 (backward jump)
  $B90 -> $548 (backward jump)
  $B9E -> $26F (backward jump)
  $BA4 -> $2F8 (backward jump)
  $BAA -> $2B6 (backward jump)
  $BC2 -> $341 (backward jump)
  $BCA -> $BB6 (backward jump)
  $BE4 -> $644 (backward jump)
  $BF2 -> $9E9 (backward jump)
  $BF6 -> $180 (backward jump)
  $C04 -> $180 (backward jump)
  $C56 -> $864 (backward jump)
  $C64 -> $9D1 (backward jump)
  $C92 -> $315 (backward jump)
  $CC6 -> $AB2 (backward jump)
  $CCA -> $308 (backward jump)
  $CD0 -> $35C (backward jump)
  $CEE -> $B97 (backward jump)
  $D3C -> $9DE (backward jump)
  $D48 -> $1A3 (backward jump)
  $D58 -> $CC5 (backward jump)
  $D5E -> $BB1 (backward jump)
  $D72 -> $357 (backward jump)
  $D82 -> $0DC (backward jump)
  $D96 -> $419 (backward jump)
  $DAE -> $87F (backward jump)
  $DB2 -> $C4C (backward jump)
  $DD4 -> $AFA (backward jump)
  $DEA -> $4D6 (backward jump)
  $DFC -> $073 (backward jump)
  $E20 -> $243 (backward jump)
  $E38 -> $143 (backward jump)
  $E3A -> $262 (backward jump)
  $E4C -> $64D (backward jump)
  $E5A -> $986 (backward jump)
  $E7A -> $837 (backward jump)
  $E88 -> $D0A (backward jump)
  $E9E -> $349 (backward jump)
  $EB6 -> $95D (backward jump)
  $EDA -> $423 (backward jump)
  $EFA -> $E05 (backward jump)
  $F12 -> $0F2 (backward jump)
  $F2A -> $D1E (backward jump)
  $F50 -> $A90 (backward jump)
  $F56 -> $0C6 (backward jump)
  $F5A -> $532 (backward jump)
  $F6C -> $51A (backward jump)
  $F96 -> $4B6 (backward jump)
  $FB0 -> $CCC (backward jump)
  $FC2 -> $553 (backward jump)
  $FD6 -> $C59 (backward jump)
  $FD8 -> $76D (backward jump)
  $FE2 -> $8B2 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $22BE   CALL     $2BE            ; Call subroutine at 2BE
$202    $153B   JP       $53B            ; Jump to 53B
$204    $17A3   JP       $7A3            ; Jump to 7A3
$206    $DE1C   DRW      VE, V1, #C      ; Draw 12-byte sprite at VE, V1
$208    $5B0C   UNKNOWN  $5B0C           ; Unknown 5xxx instruction
$20A    $A172   LD       I, $172         ; Load 172 into I
$20C    $9445   UNKNOWN  $9445           ; Unknown 9xxx instruction
$20E    $D41B   DRW      V4, V1, #B      ; Draw 11-byte sprite at V4, V1
$210    $D11B   DRW      V1, V1, #B      ; Draw 11-byte sprite at V1, V1
$212    $4109   SNE      V1, #09         ; Skip if V1 != 9
$214    $95E2   UNKNOWN  $95E2           ; Unknown 9xxx instruction
$216    $D23B   DRW      V2, V3, #B      ; Draw 11-byte sprite at V2, V3
$218    $F211   UNKNOWN  F211            ; Unknown Fxxx instruction
$21A    $A4B6   LD       I, $4B6         ; Load 4B6 into I
$21C    $0E23   SYS      $E23            ; System call to E23
$21E    $4FB6   SNE      VF, #B6         ; Skip if VF != 182
$220    $C53F   RND      V5, #3F         ; V5 = random & 3F
$222    $A530   LD       I, $530         ; Load 530 into I
$224    $71F7   ADD      V1, #F7         ; Add 247 to V1
$226    $1A9E   JP       $A9E            ; Jump to A9E
$228    $C786   RND      V7, #86         ; V7 = random & 86
$22A    $2C2E   CALL     $C2E            ; Call subroutine at C2E
$22C    $746D   ADD      V4, #6D         ; Add 109 to V4
$22E    $EA41   UNKNOWN  $EA41           ; Unknown Exxx instruction
$230    $55D3   UNKNOWN  $55D3           ; Unknown 5xxx instruction
$232    $8BBA   UNKNOWN  8BBA            ; Unknown 8xxx instruction
$234    $FAD5   UNKNOWN  FAD5            ; Unknown Fxxx instruction
$236    $037C   SYS      $37C            ; System call to 37C
$238    $E44D   UNKNOWN  $E44D           ; Unknown Exxx instruction
$23A    $E92E   UNKNOWN  $E92E           ; Unknown Exxx instruction
$23C    $1678   JP       $678            ; Jump to 678
$23E    $EAB5   UNKNOWN  $EAB5           ; Unknown Exxx instruction
$240    $B0F6   JP       V0, $0F6        ; Jump to V0 + 0F6
$242    $FB80   UNKNOWN  FB80            ; Unknown Fxxx instruction
$244    $2EFC   CALL     $EFC            ; Call subroutine at EFC
$246    $95A2   UNKNOWN  $95A2           ; Unknown 9xxx instruction
$248    $4CC2   SNE      VC, #C2         ; Skip if VC != 194
$24A    $B2BC   JP       V0, $2BC        ; Jump to V0 + 2BC
$24C    $68A7   LD       V8, #A7         ; Load 167 into V8
$24E    $2EB1   CALL     $EB1            ; Call subroutine at EB1
$250    $D921   DRW      V9, V2, #1      ; Draw 1-byte sprite at V9, V2
$252    $6838   LD       V8, #38         ; Load 56 into V8
$254    $C184   RND      V1, #84         ; V1 = random & 84
$256    $F68F   UNKNOWN  F68F            ; Unknown Fxxx instruction
$258    $24B5   CALL     $4B5            ; Call subroutine at 4B5
$25A    $044D   SYS      $44D            ; System call to 44D
$25C    $CE0E   RND      VE, #0E         ; VE = random & 0E
$25E    $6E5E   LD       VE, #5E         ; Load 94 into VE
$260    $ED13   UNKNOWN  $ED13           ; Unknown Exxx instruction
$262    $5306   UNKNOWN  $5306           ; Unknown 5xxx instruction
$264    $1DE1   JP       $DE1            ; Jump to DE1
$266    $5972   UNKNOWN  $5972           ; Unknown 5xxx instruction
$268    $4A93   SNE      VA, #93         ; Skip if VA != 147
$26A    $B86C   JP       V0, $86C        ; Jump to V0 + 86C
$26C    $9D6C   UNKNOWN  $9D6C           ; Unknown 9xxx instruction
$26E    $B987   JP       V0, $987        ; Jump to V0 + 987
$270    $67AB   LD       V7, #AB         ; Load 171 into V7
$272    $C7A0   RND      V7, #A0         ; V7 = random & A0
$274    $8C4E   SHL      VC              ; VC <<= 1, VF = MSB
$276    $043D   SYS      $43D            ; System call to 43D
$278    $3448   SE       V4, #48         ; Skip if V4 == 72
$27A    $34BC   SE       V4, #BC         ; Skip if V4 == 188
$27C    $09B2   SYS      $9B2            ; System call to 9B2
$27E    $BCAD   JP       V0, $CAD        ; Jump to V0 + CAD
$280    $99FA   UNKNOWN  $99FA           ; Unknown 9xxx instruction
$282    $02BF   SYS      $2BF            ; System call to 2BF
$284    $6FD8   LD       VF, #D8         ; Load 216 into VF
$286    $C135   RND      V1, #35         ; V1 = random & 35
$288    $B927   JP       V0, $927        ; Jump to V0 + 927
$28A    $C7AC   RND      V7, #AC         ; V7 = random & AC
$28C    $2163   CALL     $163            ; Call subroutine at 163
$28E    $2B8A   CALL     $B8A            ; Call subroutine at B8A
$290    $B50C   JP       V0, $50C        ; Jump to V0 + 50C
$292    $01CB   SYS      $1CB            ; System call to 1CB
$294    $FE4B   UNKNOWN  FE4B            ; Unknown Fxxx instruction
$296    $DEBD   DRW      VE, VB, #D      ; Draw 13-byte sprite at VE, VB
$298    $92A4   UNKNOWN  $92A4           ; Unknown 9xxx instruction
$29A    $043F   SYS      $43F            ; System call to 43F
$29C    $4606   SNE      V6, #06         ; Skip if V6 != 6
$29E    $A161   LD       I, $161         ; Load 161 into I
$2A0    $7EB1   ADD      VE, #B1         ; Add 177 to VE
$2A2    $FB6E   UNKNOWN  FB6E            ; Unknown Fxxx instruction
$2A4    $B5E5   JP       V0, $5E5        ; Jump to V0 + 5E5
$2A6    $74D3   ADD      V4, #D3         ; Add 211 to V4
$2A8    $ED6E   UNKNOWN  $ED6E           ; Unknown Exxx instruction
$2AA    $055F   SYS      $55F            ; System call to 55F
$2AC    $2586   CALL     $586            ; Call subroutine at 586
$2AE    $37CA   SE       V7, #CA         ; Skip if V7 == 202
$2B0    $1A6A   JP       $A6A            ; Jump to A6A
$2B2    $84A7   SUBN     V4, VA          ; V4 = VA - V4, VF = !borrow
$2B4    $0808   SYS      $808            ; System call to 808
$2B6    $744E   ADD      V4, #4E         ; Add 78 to V4
$2B8    $D001   DRW      V0, V0, #1      ; Draw 1-byte sprite at V0, V0
$2BA    $AD79   LD       I, $D79         ; Load D79 into I
$2BC    $8CE8   UNKNOWN  8CE8            ; Unknown 8xxx instruction
$2BE    $516D   UNKNOWN  $516D           ; Unknown 5xxx instruction
$2C0    $F6E0   UNKNOWN  F6E0            ; Unknown Fxxx instruction
$2C2    $B419   JP       V0, $419        ; Jump to V0 + 419
$2C4    $B6F8   JP       V0, $6F8        ; Jump to V0 + 6F8
$2C6    $A19E   LD       I, $19E         ; Load 19E into I
$2C8    $4DED   SNE      VD, #ED         ; Skip if VD != 237
$2CA    $8211   OR       V2, V1          ; V2 |= V1
$2CC    $EE63   UNKNOWN  $EE63           ; Unknown Exxx instruction
$2CE    $FD9B   UNKNOWN  FD9B            ; Unknown Fxxx instruction
$2D0    $18F0   JP       $8F0            ; Jump to 8F0
$2D2    $6732   LD       V7, #32         ; Load 50 into V7
$2D4    $D97F   DRW      V9, V7, #F      ; Draw 15-byte sprite at V9, V7
$2D6    $4C93   SNE      VC, #93         ; Skip if VC != 147
$2D8    $8451   OR       V4, V5          ; V4 |= V5
$2DA    $E34A   UNKNOWN  $E34A           ; Unknown Exxx instruction
$2DC    $E655   UNKNOWN  $E655           ; Unknown Exxx instruction
$2DE    $CF5C   RND      VF, #5C         ; VF = random & 5C
$2E0    $45DD   SNE      V5, #DD         ; Skip if V5 != 221
$2E2    $1A38   JP       $A38            ; Jump to A38
$2E4    $EF37   UNKNOWN  $EF37           ; Unknown Exxx instruction
$2E6    $7515   ADD      V5, #15         ; Add 21 to V5
$2E8    $34F9   SE       V4, #F9         ; Skip if V4 == 249
$2EA    $EC4D   UNKNOWN  $EC4D           ; Unknown Exxx instruction
$2EC    $2747   CALL     $747            ; Call subroutine at 747
$2EE    $D616   DRW      V6, V1, #6      ; Draw 6-byte sprite at V6, V1
$2F0    $FA24   UNKNOWN  FA24            ; Unknown Fxxx instruction
$2F2    $980B   UNKNOWN  $980B           ; Unknown 9xxx instruction
$2F4    $27B1   CALL     $7B1            ; Call subroutine at 7B1
$2F6    $E475   UNKNOWN  $E475           ; Unknown Exxx instruction
$2F8    $204C   CALL     $04C            ; Call subroutine at 04C
$2FA    $6CAE   LD       VC, #AE         ; Load 174 into VC
$2FC    $1C5D   JP       $C5D            ; Jump to C5D
$2FE    $AB64   LD       I, $B64         ; Load B64 into I
$300    $F1F1   UNKNOWN  F1F1            ; Unknown Fxxx instruction
$302    $E2AA   UNKNOWN  $E2AA           ; Unknown Exxx instruction
$304    $9A4E   UNKNOWN  $9A4E           ; Unknown 9xxx instruction
$306    $2802   CALL     $802            ; Call subroutine at 802
$308    $0104   SYS      $104            ; System call to 104
$30A    $C0C0   RND      V0, #C0         ; V0 = random & C0
$30C    $00C7   SYS      $0C7            ; System call to 0C7
$30E    $15EE   JP       $5EE            ; Jump to 5EE
$310    $D024   DRW      V0, V2, #4      ; Draw 4-byte sprite at V0, V2
$312    $065A   SYS      $65A            ; System call to 65A
$314    $2A32   CALL     $A32            ; Call subroutine at A32
$316    $167E   JP       $67E            ; Jump to 67E
$318    $AA80   LD       I, $A80         ; Load A80 into I
$31A    $7B78   ADD      VB, #78         ; Add 120 to VB
$31C    $95C4   UNKNOWN  $95C4           ; Unknown 9xxx instruction
$31E    $5F4D   UNKNOWN  $5F4D           ; Unknown 5xxx instruction
$320    $8980   LD       V9, V8          ; V9 = V8
$322    $AC62   LD       I, $C62         ; Load C62 into I
$324    $65B4   LD       V5, #B4         ; Load 180 into V5
$326    $30F6   SE       V0, #F6         ; Skip if V0 == 246
$328    $4921   SNE      V9, #21         ; Skip if V9 != 33
$32A    $AC3D   LD       I, $C3D         ; Load C3D into I
$32C    $E5CE   UNKNOWN  $E5CE           ; Unknown Exxx instruction
$32E    $9C6F   UNKNOWN  $9C6F           ; Unknown 9xxx instruction
$330    $AD8B   LD       I, $D8B         ; Load D8B into I
$332    $F419   UNKNOWN  F419            ; Unknown Fxxx instruction
$334    $F02E   UNKNOWN  F02E            ; Unknown Fxxx instruction
$336    $2029   CALL     $029            ; Call subroutine at 029
$338    $7E19   ADD      VE, #19         ; Add 25 to VE
$33A    $5D44   UNKNOWN  $5D44           ; Unknown 5xxx instruction
$33C    $643D   LD       V4, #3D         ; Load 61 into V4
$33E    $9CA6   UNKNOWN  $9CA6           ; Unknown 9xxx instruction
$340    $A55D   LD       I, $55D         ; Load 55D into I
$342    $652B   LD       V5, #2B         ; Load 43 into V5
$344    $8B5F   UNKNOWN  8B5F            ; Unknown 8xxx instruction
$346    $EC03   UNKNOWN  $EC03           ; Unknown Exxx instruction
$348    $267A   CALL     $67A            ; Call subroutine at 67A
$34A    $A6DD   LD       I, $6DD         ; Load 6DD into I
$34C    $737E   ADD      V3, #7E         ; Add 126 to V3
$34E    $138F   JP       $38F            ; Jump to 38F
$350    $65EE   LD       V5, #EE         ; Load 238 into V5
$352    $C139   RND      V1, #39         ; V1 = random & 39
$354    $0246   SYS      $246            ; System call to 246
$356    $5F52   UNKNOWN  $5F52           ; Unknown 5xxx instruction
$358    $2400   CALL     $400            ; Call subroutine at 400
$35A    $EBEC   UNKNOWN  $EBEC           ; Unknown Exxx instruction
$35C    $776D   ADD      V7, #6D         ; Add 109 to V7
$35E    $436E   SNE      V3, #6E         ; Skip if V3 != 110
$360    $CA5F   RND      VA, #5F         ; VA = random & 5F
$362    $E313   UNKNOWN  $E313           ; Unknown Exxx instruction
$364    $6FBD   LD       VF, #BD         ; Load 189 into VF
$366    $2557   CALL     $557            ; Call subroutine at 557
$368    $468C   SNE      V6, #8C         ; Skip if V6 != 140
$36A    $4FFB   SNE      VF, #FB         ; Skip if VF != 251
$36C    $80F3   XOR      V0, VF          ; V0 ^= VF
$36E    $FE50   UNKNOWN  FE50            ; Unknown Fxxx instruction
$370    $3757   SE       V7, #57         ; Skip if V7 == 87
$372    $0383   SYS      $383            ; System call to 383
$374    $C636   RND      V6, #36         ; V6 = random & 36
$376    $A8F3   LD       I, $8F3         ; Load 8F3 into I
$378    $F621   UNKNOWN  F621            ; Unknown Fxxx instruction
$37A    $3E50   SE       VE, #50         ; Skip if VE == 80
$37C    $BCE9   JP       V0, $CE9        ; Jump to V0 + CE9
$37E    $58DE   UNKNOWN  $58DE           ; Unknown 5xxx instruction
$380    $5C23   UNKNOWN  $5C23           ; Unknown 5xxx instruction
$382    $1A3C   JP       $A3C            ; Jump to A3C
$384    $51E7   UNKNOWN  $51E7           ; Unknown 5xxx instruction
$386    $A7DA   LD       I, $7DA         ; Load 7DA into I
$388    $3FD1   SE       VF, #D1         ; Skip if VF == 209
$38A    $2606   CALL     $606            ; Call subroutine at 606
$38C    $033D   SYS      $33D            ; System call to 33D
$38E    $9D7F   UNKNOWN  $9D7F           ; Unknown 9xxx instruction
$390    $D106   DRW      V1, V0, #6      ; Draw 6-byte sprite at V1, V0
$392    $8856   SHR      V8              ; V8 >>= 1, VF = LSB
$394    $BF26   JP       V0, $F26        ; Jump to V0 + F26
$396    $D9C1   DRW      V9, VC, #1      ; Draw 1-byte sprite at V9, VC
$398    $E19B   UNKNOWN  $E19B           ; Unknown Exxx instruction
$39A    $A631   LD       I, $631         ; Load 631 into I
$39C    $ABE8   LD       I, $BE8         ; Load BE8 into I
$39E    $7E76   ADD      VE, #76         ; Add 118 to VE
$3A0    $AFE0   LD       I, $FE0         ; Load FE0 into I
$3A2    $822D   UNKNOWN  822D            ; Unknown 8xxx instruction
$3A4    $0E18   SYS      $E18            ; System call to E18
$3A6    $C543   RND      V5, #43         ; V5 = random & 43
$3A8    $916A   UNKNOWN  $916A           ; Unknown 9xxx instruction
$3AA    $F98A   UNKNOWN  F98A            ; Unknown Fxxx instruction
$3AC    $F33F   UNKNOWN  F33F            ; Unknown Fxxx instruction
$3AE    $2403   CALL     $403            ; Call subroutine at 403
$3B0    $2A86   CALL     $A86            ; Call subroutine at A86
$3B2    $8E1F   UNKNOWN  8E1F            ; Unknown 8xxx instruction
$3B4    $B292   JP       V0, $292        ; Jump to V0 + 292
$3B6    $F3F6   UNKNOWN  F3F6            ; Unknown Fxxx instruction
$3B8    $35C4   SE       V5, #C4         ; Skip if V5 == 196
$3BA    $A743   LD       I, $743         ; Load 743 into I
$3BC    $1A44   JP       $A44            ; Jump to A44
$3BE    $4DF9   SNE      VD, #F9         ; Skip if VD != 249
$3C0    $0345   SYS      $345            ; System call to 345
$3C2    $5BE8   UNKNOWN  $5BE8           ; Unknown 5xxx instruction
$3C4    $6C54   LD       VC, #54         ; Load 84 into VC
$3C6    $1A29   JP       $A29            ; Jump to A29
$3C8    $57B1   UNKNOWN  $57B1           ; Unknown 5xxx instruction
$3CA    $D124   DRW      V1, V2, #4      ; Draw 4-byte sprite at V1, V2
$3CC    $7313   ADD      V3, #13         ; Add 19 to V3
$3CE    $5DE1   UNKNOWN  $5DE1           ; Unknown 5xxx instruction
$3D0    $A639   LD       I, $639         ; Load 639 into I
$3D2    $EA7F   UNKNOWN  $EA7F           ; Unknown Exxx instruction
$3D4    $3E02   SE       VE, #02         ; Skip if VE == 2
$3D6    $B1C4   JP       V0, $1C4        ; Jump to V0 + 1C4
$3D8    $FAA0   UNKNOWN  FAA0            ; Unknown Fxxx instruction
$3DA    $D68A   DRW      V6, V8, #A      ; Draw 10-byte sprite at V6, V8
$3DC    $E9E2   UNKNOWN  $E9E2           ; Unknown Exxx instruction
$3DE    $58FF   UNKNOWN  $58FF           ; Unknown 5xxx instruction
$3E0    $662F   LD       V6, #2F         ; Load 47 into V6
$3E2    $0103   SYS      $103            ; System call to 103
$3E4    $EA5D   UNKNOWN  $EA5D           ; Unknown Exxx instruction
$3E6    $2D0C   CALL     $D0C            ; Call subroutine at D0C
$3E8    $6A55   LD       VA, #55         ; Load 85 into VA
$3EA    $597B   UNKNOWN  $597B           ; Unknown 5xxx instruction
$3EC    $5397   UNKNOWN  $5397           ; Unknown 5xxx instruction
$3EE    $7D07   ADD      VD, #07         ; Add 7 to VD
$3F0    $1BC9   JP       $BC9            ; Jump to BC9
$3F2    $7F2F   ADD      VF, #2F         ; Add 47 to VF
$3F4    $76EF   ADD      V6, #EF         ; Add 239 to V6
$3F6    $1590   JP       $590            ; Jump to 590
$3F8    $B8EF   JP       V0, $8EF        ; Jump to V0 + 8EF
$3FA    $7A7D   ADD      VA, #7D         ; Add 125 to VA
$3FC    $173B   JP       $73B            ; Jump to 73B
$3FE    $9A95   UNKNOWN  $9A95           ; Unknown 9xxx instruction
$400    $BB0A   JP       V0, $B0A        ; Jump to V0 + B0A
$402    $3734   SE       V7, #34         ; Skip if V7 == 52
$404    $504B   UNKNOWN  $504B           ; Unknown 5xxx instruction
$406    $BDAE   JP       V0, $DAE        ; Jump to V0 + DAE
$408    $B5D1   JP       V0, $5D1        ; Jump to V0 + 5D1
$40A    $6635   LD       V6, #35         ; Load 53 into V6
$40C    $94A4   UNKNOWN  $94A4           ; Unknown 9xxx instruction
$40E    $522A   UNKNOWN  $522A           ; Unknown 5xxx instruction
$410    $3B2F   SE       VB, #2F         ; Skip if VB == 47
$412    $DD8F   DRW      VD, V8, #F      ; Draw 15-byte sprite at VD, V8
$414    $1BD2   JP       $BD2            ; Jump to BD2
$416    $826C   UNKNOWN  826C            ; Unknown 8xxx instruction
$418    $22BD   CALL     $2BD            ; Call subroutine at 2BD
$41A    $F67F   UNKNOWN  F67F            ; Unknown Fxxx instruction
$41C    $A87C   LD       I, $87C         ; Load 87C into I
$41E    $4D85   SNE      VD, #85         ; Skip if VD != 133
$420    $5970   SE       V9, V7          ; Skip if V9 == V7
$422    $1477   JP       $477            ; Jump to 477
$424    $B2D4   JP       V0, $2D4        ; Jump to V0 + 2D4
$426    $6E8B   LD       VE, #8B         ; Load 139 into VE
$428    $CC9C   RND      VC, #9C         ; VC = random & 9C
$42A    $00A6   SYS      $0A6            ; System call to 0A6
$42C    $51D8   UNKNOWN  $51D8           ; Unknown 5xxx instruction
$42E    $0B42   SYS      $B42            ; System call to B42
$430    $A3B0   LD       I, $3B0         ; Load 3B0 into I
$432    $B05B   JP       V0, $05B        ; Jump to V0 + 05B
$434    $0F78   SYS      $F78            ; System call to F78
$436    $3C2C   SE       VC, #2C         ; Skip if VC == 44
$438    $DAC2   DRW      VA, VC, #2      ; Draw 2-byte sprite at VA, VC
$43A    $9E83   UNKNOWN  $9E83           ; Unknown 9xxx instruction
$43C    $EBF0   UNKNOWN  $EBF0           ; Unknown Exxx instruction
$43E    $E759   UNKNOWN  $E759           ; Unknown Exxx instruction
$440    $4DF0   SNE      VD, #F0         ; Skip if VD != 240
$442    $DA64   DRW      VA, V6, #4      ; Draw 4-byte sprite at VA, V6
$444    $8EC7   SUBN     VE, VC          ; VE = VC - VE, VF = !borrow
$446    $9573   UNKNOWN  $9573           ; Unknown 9xxx instruction
$448    $89B2   AND      V9, VB          ; V9 &= VB
$44A    $F7EC   UNKNOWN  F7EC            ; Unknown Fxxx instruction
$44C    $882B   UNKNOWN  882B            ; Unknown 8xxx instruction
$44E    $84CA   UNKNOWN  84CA            ; Unknown 8xxx instruction
$450    $17EF   JP       $7EF            ; Jump to 7EF
$452    $7FF6   ADD      VF, #F6         ; Add 246 to VF
$454    $A13E   LD       I, $13E         ; Load 13E into I
$456    $706C   ADD      V0, #6C         ; Add 108 to V0
$458    $1404   JP       $404            ; Jump to 404
$45A    $355A   SE       V5, #5A         ; Skip if V5 == 90
$45C    $18B7   JP       $8B7            ; Jump to 8B7
$45E    $B88C   JP       V0, $88C        ; Jump to V0 + 88C
$460    $FE0F   UNKNOWN  FE0F            ; Unknown Fxxx instruction
$462    $A31A   LD       I, $31A         ; Load 31A into I
$464    $7BD1   ADD      VB, #D1         ; Add 209 to VB
$466    $F60D   UNKNOWN  F60D            ; Unknown Fxxx instruction
$468    $99C0   SNE      V9, VC          ; Skip if V9 != VC
$46A    $5C95   UNKNOWN  $5C95           ; Unknown 5xxx instruction
$46C    $0A9B   SYS      $A9B            ; System call to A9B
$46E    $96D0   SNE      V6, VD          ; Skip if V6 != VD
$470    $E2CD   UNKNOWN  $E2CD           ; Unknown Exxx instruction
$472    $CAE1   RND      VA, #E1         ; VA = random & E1
$474    $8076   SHR      V0              ; V0 >>= 1, VF = LSB
$476    $250A   CALL     $50A            ; Call subroutine at 50A
$478    $6E3B   LD       VE, #3B         ; Load 59 into VE
$47A    $2318   CALL     $318            ; Call subroutine at 318
$47C    $811F   UNKNOWN  811F            ; Unknown 8xxx instruction
$47E    $D377   DRW      V3, V7, #7      ; Draw 7-byte sprite at V3, V7
$480    $E5C5   UNKNOWN  $E5C5           ; Unknown Exxx instruction
$482    $0ED3   SYS      $ED3            ; System call to ED3
$484    $CA6B   RND      VA, #6B         ; VA = random & 6B
$486    $5FFB   UNKNOWN  $5FFB           ; Unknown 5xxx instruction
$488    $42E3   SNE      V2, #E3         ; Skip if V2 != 227
$48A    $6167   LD       V1, #67         ; Load 103 into V1
$48C    $2454   CALL     $454            ; Call subroutine at 454
$48E    $997A   UNKNOWN  $997A           ; Unknown 9xxx instruction
$490    $C7C3   RND      V7, #C3         ; V7 = random & C3
$492    $148D   JP       $48D            ; Jump to 48D
$494    $BA0D   JP       V0, $A0D        ; Jump to V0 + A0D
$496    $33CB   SE       V3, #CB         ; Skip if V3 == 203
$498    $0F0B   SYS      $F0B            ; System call to F0B
$49A    $BB18   JP       V0, $B18        ; Jump to V0 + B18
$49C    $2089   CALL     $089            ; Call subroutine at 089
$49E    $BBCC   JP       V0, $BCC        ; Jump to V0 + BCC
$4A0    $EABE   UNKNOWN  $EABE           ; Unknown Exxx instruction
$4A2    $0AF0   SYS      $AF0            ; System call to AF0
$4A4    $2D37   CALL     $D37            ; Call subroutine at D37
$4A6    $F989   UNKNOWN  F989            ; Unknown Fxxx instruction
$4A8    $FA00   UNKNOWN  FA00            ; Unknown Fxxx instruction
$4AA    $1458   JP       $458            ; Jump to 458
$4AC    $41A4   SNE      V1, #A4         ; Skip if V1 != 164
$4AE    $8F6D   UNKNOWN  8F6D            ; Unknown 8xxx instruction
$4B0    $F786   UNKNOWN  F786            ; Unknown Fxxx instruction
$4B2    $74C4   ADD      V4, #C4         ; Add 196 to V4
$4B4    $023A   SYS      $23A            ; System call to 23A
$4B6    $04DD   SYS      $4DD            ; System call to 4DD
$4B8    $5184   UNKNOWN  $5184           ; Unknown 5xxx instruction
$4BA    $A31F   LD       I, $31F         ; Load 31F into I
$4BC    $0FF7   SYS      $FF7            ; System call to FF7
$4BE    $B47F   JP       V0, $47F        ; Jump to V0 + 47F
$4C0    $0285   SYS      $285            ; System call to 285
$4C2    $19F4   JP       $9F4            ; Jump to 9F4
$4C4    $AAD6   LD       I, $AD6         ; Load AD6 into I
$4C6    $5358   UNKNOWN  $5358           ; Unknown 5xxx instruction
$4C8    $CC01   RND      VC, #01         ; VC = random & 01
$4CA    $A252   LD       I, $252         ; Load 252 into I
$4CC    $B2AA   JP       V0, $2AA        ; Jump to V0 + 2AA
$4CE    $361D   SE       V6, #1D         ; Skip if V6 == 29
$4D0    $DB7A   DRW      VB, V7, #A      ; Draw 10-byte sprite at VB, V7
$4D2    $4032   SNE      V0, #32         ; Skip if V0 != 50
$4D4    $0B39   SYS      $B39            ; System call to B39
$4D6    $7D24   ADD      VD, #24         ; Add 36 to VD
$4D8    $9D30   SNE      VD, V3          ; Skip if VD != V3
$4DA    $7B32   ADD      VB, #32         ; Add 50 to VB
$4DC    $2E65   CALL     $E65            ; Call subroutine at E65
$4DE    $3008   SE       V0, #08         ; Skip if V0 == 8
$4E0    $CDB5   RND      VD, #B5         ; VD = random & B5
$4E2    $46E2   SNE      V6, #E2         ; Skip if V6 != 226
$4E4    $23C5   CALL     $3C5            ; Call subroutine at 3C5
$4E6    $3AD2   SE       VA, #D2         ; Skip if VA == 210
$4E8    $C985   RND      V9, #85         ; V9 = random & 85
$4EA    $A02F   LD       I, $02F         ; Load 02F into I
$4EC    $1915   JP       $915            ; Jump to 915
$4EE    $D3CB   DRW      V3, VC, #B      ; Draw 11-byte sprite at V3, VC
$4F0    $B29A   JP       V0, $29A        ; Jump to V0 + 29A
$4F2    $A7F2   LD       I, $7F2         ; Load 7F2 into I
$4F4    $A739   LD       I, $739         ; Load 739 into I
$4F6    $C62F   RND      V6, #2F         ; V6 = random & 2F
$4F8    $6590   LD       V5, #90         ; Load 144 into V5
$4FA    $0759   SYS      $759            ; System call to 759
$4FC    $2944   CALL     $944            ; Call subroutine at 944
$4FE    $90AB   UNKNOWN  $90AB           ; Unknown 9xxx instruction
$500    $4BE3   SNE      VB, #E3         ; Skip if VB != 227
$502    $47C6   SNE      V7, #C6         ; Skip if V7 != 198
$504    $E339   UNKNOWN  $E339           ; Unknown Exxx instruction
$506    $8093   XOR      V0, V9          ; V0 ^= V9
$508    $BDE6   JP       V0, $DE6        ; Jump to V0 + DE6
$50A    $EC76   UNKNOWN  $EC76           ; Unknown Exxx instruction
$50C    $36D1   SE       V6, #D1         ; Skip if V6 == 209
$50E    $CC05   RND      VC, #05         ; VC = random & 05
$510    $9398   UNKNOWN  $9398           ; Unknown 9xxx instruction
$512    $1F9D   JP       $F9D            ; Jump to F9D
$514    $8A47   SUBN     VA, V4          ; VA = V4 - VA, VF = !borrow
$516    $678A   LD       V7, #8A         ; Load 138 into V7
$518    $37AA   SE       V7, #AA         ; Skip if V7 == 170
$51A    $D952   DRW      V9, V5, #2      ; Draw 2-byte sprite at V9, V5
$51C    $9E2E   UNKNOWN  $9E2E           ; Unknown 9xxx instruction
$51E    $470E   SNE      V7, #0E         ; Skip if V7 != 14
$520    $520E   UNKNOWN  $520E           ; Unknown 5xxx instruction
$522    $63E1   LD       V3, #E1         ; Load 225 into V3
$524    $C230   RND      V2, #30         ; V2 = random & 30
$526    $C675   RND      V6, #75         ; V6 = random & 75
$528    $3E70   SE       VE, #70         ; Skip if VE == 112
$52A    $CC0F   RND      VC, #0F         ; VC = random & 0F
$52C    $7872   ADD      V8, #72         ; Add 114 to V8
$52E    $839C   UNKNOWN  839C            ; Unknown 8xxx instruction
$530    $1004   JP       $004            ; Jump to 004
$532    $15EC   JP       $5EC            ; Jump to 5EC
$534    $31A5   SE       V1, #A5         ; Skip if V1 == 165
$536    $9DD7   UNKNOWN  $9DD7           ; Unknown 9xxx instruction
$538    $F244   UNKNOWN  F244            ; Unknown Fxxx instruction
$53A    $C19F   RND      V1, #9F         ; V1 = random & 9F
$53C    $2437   CALL     $437            ; Call subroutine at 437
$53E    $6BBE   LD       VB, #BE         ; Load 190 into VB
$540    $24CF   CALL     $4CF            ; Call subroutine at 4CF
$542    $FD02   UNKNOWN  FD02            ; Unknown Fxxx instruction
$544    $69DF   LD       V9, #DF         ; Load 223 into V9
$546    $79C9   ADD      V9, #C9         ; Add 201 to V9
$548    $E8AC   UNKNOWN  $E8AC           ; Unknown Exxx instruction
$54A    $1F8E   JP       $F8E            ; Jump to F8E
$54C    $709D   ADD      V0, #9D         ; Add 157 to V0
$54E    $9A57   UNKNOWN  $9A57           ; Unknown 9xxx instruction
$550    $E909   UNKNOWN  $E909           ; Unknown Exxx instruction
$552    $4DDB   SNE      VD, #DB         ; Skip if VD != 219
$554    $305C   SE       V0, #5C         ; Skip if V0 == 92
$556    $8087   SUBN     V0, V8          ; V0 = V8 - V0, VF = !borrow
$558    $0358   SYS      $358            ; System call to 358
$55A    $6A12   LD       VA, #12         ; Load 18 into VA
$55C    $FCFC   UNKNOWN  FCFC            ; Unknown Fxxx instruction
$55E    $0B12   SYS      $B12            ; System call to B12
$560    $AA12   LD       I, $A12         ; Load A12 into I
$562    $385D   SE       V8, #5D         ; Skip if V8 == 93
$564    $F734   UNKNOWN  F734            ; Unknown Fxxx instruction
$566    $754E   ADD      V5, #4E         ; Add 78 to V5
$568    $9F8C   UNKNOWN  $9F8C           ; Unknown 9xxx instruction
$56A    $17EE   JP       $7EE            ; Jump to 7EE
$56C    $D8D8   DRW      V8, VD, #8      ; Draw 8-byte sprite at V8, VD
$56E    $3605   SE       V6, #05         ; Skip if V6 == 5
$570    $59BF   UNKNOWN  $59BF           ; Unknown 5xxx instruction
$572    $68F2   LD       V8, #F2         ; Load 242 into V8
$574    $9DB3   UNKNOWN  $9DB3           ; Unknown 9xxx instruction
$576    $D623   DRW      V6, V2, #3      ; Draw 3-byte sprite at V6, V2
$578    $BAAF   JP       V0, $AAF        ; Jump to V0 + AAF
$57A    $11FF   JP       $1FF            ; Jump to 1FF
$57C    $6DFB   LD       VD, #FB         ; Load 251 into VD
$57E    $E8CA   UNKNOWN  $E8CA           ; Unknown Exxx instruction
$580    $D505   DRW      V5, V0, #5      ; Draw 5-byte sprite at V5, V0
$582    $E5F8   UNKNOWN  $E5F8           ; Unknown Exxx instruction
$584    $31C1   SE       V1, #C1         ; Skip if V1 == 193
$586    $2C08   CALL     $C08            ; Call subroutine at C08
$588    $6E04   LD       VE, #04         ; Load 4 into VE
$58A    $80B1   OR       V0, VB          ; V0 |= VB
$58C    $04E5   SYS      $4E5            ; System call to 4E5
$58E    $23CD   CALL     $3CD            ; Call subroutine at 3CD
$590    $4AFE   SNE      VA, #FE         ; Skip if VA != 254
$592    $BE1A   JP       V0, $E1A        ; Jump to V0 + E1A
$594    $117C   JP       $17C            ; Jump to 17C
$596    $8E04   ADD      VE, V0          ; VE += V0, VF = carry
$598    $8B18   UNKNOWN  8B18            ; Unknown 8xxx instruction
$59A    $B09E   JP       V0, $09E        ; Jump to V0 + 09E
$59C    $692B   LD       V9, #2B         ; Load 43 into V9
$59E    $C8E4   RND      V8, #E4         ; V8 = random & E4
$5A0    $0CCC   SYS      $CCC            ; System call to CCC
$5A2    $BEC0   JP       V0, $EC0        ; Jump to V0 + EC0
$5A4    $C2A3   RND      V2, #A3         ; V2 = random & A3
$5A6    $8505   SUB      V5, V0          ; V5 -= V0, VF = !borrow
$5A8    $F8CB   UNKNOWN  F8CB            ; Unknown Fxxx instruction
$5AA    $B96B   JP       V0, $96B        ; Jump to V0 + 96B
$5AC    $72BB   ADD      V2, #BB         ; Add 187 to V2
$5AE    $CA56   RND      VA, #56         ; VA = random & 56
$5B0    $8AFF   UNKNOWN  8AFF            ; Unknown 8xxx instruction
$5B2    $0AF0   SYS      $AF0            ; System call to AF0
$5B4    $258A   CALL     $58A            ; Call subroutine at 58A
$5B6    $9BE0   SNE      VB, VE          ; Skip if VB != VE
$5B8    $D15F   DRW      V1, V5, #F      ; Draw 15-byte sprite at V1, V5
$5BA    $5FA9   UNKNOWN  $5FA9           ; Unknown 5xxx instruction
$5BC    $D0AD   DRW      V0, VA, #D      ; Draw 13-byte sprite at V0, VA
$5BE    $E0B4   UNKNOWN  $E0B4           ; Unknown Exxx instruction
$5C0    $81BF   UNKNOWN  81BF            ; Unknown 8xxx instruction
$5C2    $434C   SNE      V3, #4C         ; Skip if V3 != 76
$5C4    $CBFF   RND      VB, #FF         ; VB = random & FF
$5C6    $979C   UNKNOWN  $979C           ; Unknown 9xxx instruction
$5C8    $759F   ADD      V5, #9F         ; Add 159 to V5
$5CA    $C9F5   RND      V9, #F5         ; V9 = random & F5
$5CC    $0D80   SYS      $D80            ; System call to D80
$5CE    $BC67   JP       V0, $C67        ; Jump to V0 + C67
$5D0    $9880   SNE      V8, V8          ; Skip if V8 != V8
$5D2    $408C   SNE      V0, #8C         ; Skip if V0 != 140
$5D4    $EA49   UNKNOWN  $EA49           ; Unknown Exxx instruction
$5D6    $72EF   ADD      V2, #EF         ; Add 239 to V2
$5D8    $D4E5   DRW      V4, VE, #5      ; Draw 5-byte sprite at V4, VE
$5DA    $BDC5   JP       V0, $DC5        ; Jump to V0 + DC5
$5DC    $C45B   RND      V4, #5B         ; V4 = random & 5B
$5DE    $85E6   SHR      V5              ; V5 >>= 1, VF = LSB
$5E0    $B59A   JP       V0, $59A        ; Jump to V0 + 59A
$5E2    $4CAF   SNE      VC, #AF         ; Skip if VC != 175
$5E4    $B291   JP       V0, $291        ; Jump to V0 + 291
$5E6    $DC9E   DRW      VC, V9, #E      ; Draw 14-byte sprite at VC, V9
$5E8    $F1DC   UNKNOWN  F1DC            ; Unknown Fxxx instruction
$5EA    $252C   CALL     $52C            ; Call subroutine at 52C
$5EC    $9399   UNKNOWN  $9399           ; Unknown 9xxx instruction
$5EE    $2F52   CALL     $F52            ; Call subroutine at F52
$5F0    $C5C8   RND      V5, #C8         ; V5 = random & C8
$5F2    $3000   SE       V0, #00         ; Skip if V0 == 0
$5F4    $BBFA   JP       V0, $BFA        ; Jump to V0 + BFA
$5F6    $E4BD   UNKNOWN  $E4BD           ; Unknown Exxx instruction
$5F8    $DCFE   DRW      VC, VF, #E      ; Draw 14-byte sprite at VC, VF
$5FA    $39D2   SE       V9, #D2         ; Skip if V9 == 210
$5FC    $C7DA   RND      V7, #DA         ; V7 = random & DA
$5FE    $8ADF   UNKNOWN  8ADF            ; Unknown 8xxx instruction
$600    $0528   SYS      $528            ; System call to 528
$602    $9F5B   UNKNOWN  $9F5B           ; Unknown 9xxx instruction
$604    $2828   CALL     $828            ; Call subroutine at 828
$606    $1756   JP       $756            ; Jump to 756
$608    $0BB8   SYS      $BB8            ; System call to BB8
$60A    $F244   UNKNOWN  F244            ; Unknown Fxxx instruction
$60C    $217A   CALL     $17A            ; Call subroutine at 17A
$60E    $6C02   LD       VC, #02         ; Load 2 into VC
$610    $49E0   SNE      V9, #E0         ; Skip if V9 != 224
$612    $2DF6   CALL     $DF6            ; Call subroutine at DF6
$614    $4098   SNE      V0, #98         ; Skip if V0 != 152
$616    $353B   SE       V5, #3B         ; Skip if V5 == 59
$618    $0722   SYS      $722            ; System call to 722
$61A    $1E6F   JP       $E6F            ; Jump to E6F
$61C    $0147   SYS      $147            ; System call to 147
$61E    $2FEF   CALL     $FEF            ; Call subroutine at FEF
$620    $143A   JP       $43A            ; Jump to 43A
$622    $89FC   UNKNOWN  89FC            ; Unknown 8xxx instruction
$624    $EDE0   UNKNOWN  $EDE0           ; Unknown Exxx instruction
$626    $4826   SNE      V8, #26         ; Skip if V8 != 38
$628    $747B   ADD      V4, #7B         ; Add 123 to V4
$62A    $1F4F   JP       $F4F            ; Jump to F4F
$62C    $06C4   SYS      $6C4            ; System call to 6C4
$62E    $663C   LD       V6, #3C         ; Load 60 into V6
$630    $236F   CALL     $36F            ; Call subroutine at 36F
$632    $6910   LD       V9, #10         ; Load 16 into V9
$634    $0F1C   SYS      $F1C            ; System call to F1C
$636    $C343   RND      V3, #43         ; V3 = random & 43
$638    $4E1A   SNE      VE, #1A         ; Skip if VE != 26
$63A    $927F   UNKNOWN  $927F           ; Unknown 9xxx instruction
$63C    $1D14   JP       $D14            ; Jump to D14
$63E    $2917   CALL     $917            ; Call subroutine at 917
$640    $5040   SE       V0, V4          ; Skip if V0 == V4
$642    $A85D   LD       I, $85D         ; Load 85D into I
$644    $BBDC   JP       V0, $BDC        ; Jump to V0 + BDC
$646    $6AAB   LD       VA, #AB         ; Load 171 into VA
$648    $EAF2   UNKNOWN  $EAF2           ; Unknown Exxx instruction
$64A    $3D2E   SE       VD, #2E         ; Skip if VD == 46
$64C    $5367   UNKNOWN  $5367           ; Unknown 5xxx instruction
$64E    $2E32   CALL     $E32            ; Call subroutine at E32
$650    $5915   UNKNOWN  $5915           ; Unknown 5xxx instruction
$652    $35B7   SE       V5, #B7         ; Skip if V5 == 183
$654    $A8A9   LD       I, $8A9         ; Load 8A9 into I
$656    $A209   LD       I, $209         ; Load 209 into I
$658    $2681   CALL     $681            ; Call subroutine at 681
$65A    $D5AA   DRW      V5, VA, #A      ; Draw 10-byte sprite at V5, VA
$65C    $1797   JP       $797            ; Jump to 797
$65E    $FC36   UNKNOWN  FC36            ; Unknown Fxxx instruction
$660    $2DE2   CALL     $DE2            ; Call subroutine at DE2
$662    $31FD   SE       V1, #FD         ; Skip if V1 == 253
$664    $A492   LD       I, $492         ; Load 492 into I
$666    $3BF0   SE       VB, #F0         ; Skip if VB == 240
$668    $1138   JP       $138            ; Jump to 138
$66A    $939D   UNKNOWN  $939D           ; Unknown 9xxx instruction
$66C    $D41A   DRW      V4, V1, #A      ; Draw 10-byte sprite at V4, V1
$66E    $1DE4   JP       $DE4            ; Jump to DE4
$670    $E6E3   UNKNOWN  $E6E3           ; Unknown Exxx instruction
$672    $7EA8   ADD      VE, #A8         ; Add 168 to VE
$674    $F7E1   UNKNOWN  F7E1            ; Unknown Fxxx instruction
$676    $4DE2   SNE      VD, #E2         ; Skip if VD != 226
$678    $981E   UNKNOWN  $981E           ; Unknown 9xxx instruction
$67A    $8130   LD       V1, V3          ; V1 = V3
$67C    $1BFD   JP       $BFD            ; Jump to BFD
$67E    $6221   LD       V2, #21         ; Load 33 into V2
$680    $C31A   RND      V3, #1A         ; V3 = random & 1A
$682    $DDA3   DRW      VD, VA, #3      ; Draw 3-byte sprite at VD, VA
$684    $DFF3   DRW      VF, VF, #3      ; Draw 3-byte sprite at VF, VF
$686    $4F20   SNE      VF, #20         ; Skip if VF != 32
$688    $A1B9   LD       I, $1B9         ; Load 1B9 into I
$68A    $D348   DRW      V3, V4, #8      ; Draw 8-byte sprite at V3, V4
$68C    $06FC   SYS      $6FC            ; System call to 6FC
$68E    $0825   SYS      $825            ; System call to 825
$690    $F4BD   UNKNOWN  F4BD            ; Unknown Fxxx instruction
$692    $4BF5   SNE      VB, #F5         ; Skip if VB != 245
$694    $5B2C   UNKNOWN  $5B2C           ; Unknown 5xxx instruction
$696    $3BAF   SE       VB, #AF         ; Skip if VB == 175
$698    $55D3   UNKNOWN  $55D3           ; Unknown 5xxx instruction
$69A    $1A98   JP       $A98            ; Jump to A98
$69C    $9F81   UNKNOWN  $9F81           ; Unknown 9xxx instruction
$69E    $9E45   UNKNOWN  $9E45           ; Unknown 9xxx instruction
$6A0    $3793   SE       V7, #93         ; Skip if V7 == 147
$6A2    $4042   SNE      V0, #42         ; Skip if V0 != 66
$6A4    $1DC3   JP       $DC3            ; Jump to DC3
$6A6    $8F8B   UNKNOWN  8F8B            ; Unknown 8xxx instruction
$6A8    $811A   UNKNOWN  811A            ; Unknown 8xxx instruction
$6AA    $A9A7   LD       I, $9A7         ; Load 9A7 into I
$6AC    $62CE   LD       V2, #CE         ; Load 206 into V2
$6AE    $D05E   DRW      V0, V5, #E      ; Draw 14-byte sprite at V0, V5
$6B0    $716C   ADD      V1, #6C         ; Add 108 to V1
$6B2    $6407   LD       V4, #07         ; Load 7 into V4
$6B4    $4C95   SNE      VC, #95         ; Skip if VC != 149
$6B6    $07A2   SYS      $7A2            ; System call to 7A2
$6B8    $8F9B   UNKNOWN  8F9B            ; Unknown 8xxx instruction
$6BA    $A23D   LD       I, $23D         ; Load 23D into I
$6BC    $2299   CALL     $299            ; Call subroutine at 299
$6BE    $FEA3   UNKNOWN  FEA3            ; Unknown Fxxx instruction
$6C0    $A5E7   LD       I, $5E7         ; Load 5E7 into I
$6C2    $A557   LD       I, $557         ; Load 557 into I
$6C4    $8707   SUBN     V7, V0          ; V7 = V0 - V7, VF = !borrow
$6C6    $CD69   RND      VD, #69         ; VD = random & 69
$6C8    $8966   SHR      V9              ; V9 >>= 1, VF = LSB
$6CA    $F7EA   UNKNOWN  F7EA            ; Unknown Fxxx instruction
$6CC    $C605   RND      V6, #05         ; V6 = random & 05
$6CE    $7F6F   ADD      VF, #6F         ; Add 111 to VF
$6D0    $3971   SE       V9, #71         ; Skip if V9 == 113
$6D2    $7AFC   ADD      VA, #FC         ; Add 252 to VA
$6D4    $BE47   JP       V0, $E47        ; Jump to V0 + E47
$6D6    $0063   SYS      $063            ; System call to 063
$6D8    $AB07   LD       I, $B07         ; Load B07 into I
$6DA    $0628   SYS      $628            ; System call to 628
$6DC    $835D   UNKNOWN  835D            ; Unknown 8xxx instruction
$6DE    $E1CA   UNKNOWN  $E1CA           ; Unknown Exxx instruction
$6E0    $E29E   SKP      V2              ; Skip if key V2 pressed
$6E2    $7AE5   ADD      VA, #E5         ; Add 229 to VA
$6E4    $36A1   SE       V6, #A1         ; Skip if V6 == 161
$6E6    $87C3   XOR      V7, VC          ; V7 ^= VC
$6E8    $5754   UNKNOWN  $5754           ; Unknown 5xxx instruction
$6EA    $6926   LD       V9, #26         ; Load 38 into V9
$6EC    $EC9A   UNKNOWN  $EC9A           ; Unknown Exxx instruction
$6EE    $7B7D   ADD      VB, #7D         ; Add 125 to VB
$6F0    $8749   UNKNOWN  8749            ; Unknown 8xxx instruction
$6F2    $4F6E   SNE      VF, #6E         ; Skip if VF != 110
$6F4    $0B3F   SYS      $B3F            ; System call to B3F
$6F6    $4C53   SNE      VC, #53         ; Skip if VC != 83
$6F8    $C626   RND      V6, #26         ; V6 = random & 26
$6FA    $55AF   UNKNOWN  $55AF           ; Unknown 5xxx instruction
$6FC    $C8D8   RND      V8, #D8         ; V8 = random & D8
$6FE    $45B2   SNE      V5, #B2         ; Skip if V5 != 178
$700    $DE42   DRW      VE, V4, #2      ; Draw 2-byte sprite at VE, V4
$702    $A31A   LD       I, $31A         ; Load 31A into I
$704    $0473   SYS      $473            ; System call to 473
$706    $F1C7   UNKNOWN  F1C7            ; Unknown Fxxx instruction
$708    $86E2   AND      V6, VE          ; V6 &= VE
$70A    $9BC5   UNKNOWN  $9BC5           ; Unknown 9xxx instruction
$70C    $539F   UNKNOWN  $539F           ; Unknown 5xxx instruction
$70E    $734E   ADD      V3, #4E         ; Add 78 to V3
$710    $DC07   DRW      VC, V0, #7      ; Draw 7-byte sprite at VC, V0
$712    $FA75   UNKNOWN  FA75            ; Unknown Fxxx instruction
$714    $1D19   JP       $D19            ; Jump to D19
$716    $58DB   UNKNOWN  $58DB           ; Unknown 5xxx instruction
$718    $B794   JP       V0, $794        ; Jump to V0 + 794
$71A    $E64B   UNKNOWN  $E64B           ; Unknown Exxx instruction
$71C    $6C9C   LD       VC, #9C         ; Load 156 into VC
$71E    $1396   JP       $396            ; Jump to 396
$720    $0B69   SYS      $B69            ; System call to B69
$722    $ADA5   LD       I, $DA5         ; Load DA5 into I
$724    $E86B   UNKNOWN  $E86B           ; Unknown Exxx instruction
$726    $F1E3   UNKNOWN  F1E3            ; Unknown Fxxx instruction
$728    $75B6   ADD      V5, #B6         ; Add 182 to V5
$72A    $1156   JP       $156            ; Jump to 156
$72C    $1BA1   JP       $BA1            ; Jump to BA1
$72E    $8F20   LD       VF, V2          ; VF = V2
$730    $E372   UNKNOWN  $E372           ; Unknown Exxx instruction
$732    $9130   SNE      V1, V3          ; Skip if V1 != V3
$734    $E185   UNKNOWN  $E185           ; Unknown Exxx instruction
$736    $7FF8   ADD      VF, #F8         ; Add 248 to VF
$738    $1603   JP       $603            ; Jump to 603
$73A    $595C   UNKNOWN  $595C           ; Unknown 5xxx instruction
$73C    $810D   UNKNOWN  810D            ; Unknown 8xxx instruction
$73E    $E774   UNKNOWN  $E774           ; Unknown Exxx instruction
$740    $D9F2   DRW      V9, VF, #2      ; Draw 2-byte sprite at V9, VF
$742    $3A0B   SE       VA, #0B         ; Skip if VA == 11
$744    $8B1F   UNKNOWN  8B1F            ; Unknown 8xxx instruction
$746    $C77A   RND      V7, #7A         ; V7 = random & 7A
$748    $92CB   UNKNOWN  $92CB           ; Unknown 9xxx instruction
$74A    $7681   ADD      V6, #81         ; Add 129 to V6
$74C    $6656   LD       V6, #56         ; Load 86 into V6
$74E    $9E64   UNKNOWN  $9E64           ; Unknown 9xxx instruction
$750    $5363   UNKNOWN  $5363           ; Unknown 5xxx instruction
$752    $511D   UNKNOWN  $511D           ; Unknown 5xxx instruction
$754    $9436   UNKNOWN  $9436           ; Unknown 9xxx instruction
$756    $9F84   UNKNOWN  $9F84           ; Unknown 9xxx instruction
$758    $C8FA   RND      V8, #FA         ; V8 = random & FA
$75A    $6C16   LD       VC, #16         ; Load 22 into VC
$75C    $E8BC   UNKNOWN  $E8BC           ; Unknown Exxx instruction
$75E    $4587   SNE      V5, #87         ; Skip if V5 != 135
$760    $FC9C   UNKNOWN  FC9C            ; Unknown Fxxx instruction
$762    $371D   SE       V7, #1D         ; Skip if V7 == 29
$764    $97C2   UNKNOWN  $97C2           ; Unknown 9xxx instruction
$766    $2D81   CALL     $D81            ; Call subroutine at D81
$768    $866E   SHL      V6              ; V6 <<= 1, VF = MSB
$76A    $41A0   SNE      V1, #A0         ; Skip if V1 != 160
$76C    $1371   JP       $371            ; Jump to 371
$76E    $0BA9   SYS      $BA9            ; System call to BA9
$770    $72B2   ADD      V2, #B2         ; Add 178 to V2
$772    $2576   CALL     $576            ; Call subroutine at 576
$774    $9953   UNKNOWN  $9953           ; Unknown 9xxx instruction
$776    $9B21   UNKNOWN  $9B21           ; Unknown 9xxx instruction
$778    $2D17   CALL     $D17            ; Call subroutine at D17
$77A    $70FB   ADD      V0, #FB         ; Add 251 to V0
$77C    $7D3C   ADD      VD, #3C         ; Add 60 to VD
$77E    $F44B   UNKNOWN  F44B            ; Unknown Fxxx instruction
$780    $861F   UNKNOWN  861F            ; Unknown 8xxx instruction
$782    $5FD1   UNKNOWN  $5FD1           ; Unknown 5xxx instruction
$784    $9BD4   UNKNOWN  $9BD4           ; Unknown 9xxx instruction
$786    $2D5E   CALL     $D5E            ; Call subroutine at D5E
$788    $2316   CALL     $316            ; Call subroutine at 316
$78A    $DC00   DRW      VC, V0, #0      ; Draw 0-byte sprite at VC, V0
$78C    $9AB8   UNKNOWN  $9AB8           ; Unknown 9xxx instruction
$78E    $8595   SUB      V5, V9          ; V5 -= V9, VF = !borrow
$790    $4CEE   SNE      VC, #EE         ; Skip if VC != 238
$792    $D4B8   DRW      V4, VB, #8      ; Draw 8-byte sprite at V4, VB
$794    $6417   LD       V4, #17         ; Load 23 into V4
$796    $E092   UNKNOWN  $E092           ; Unknown Exxx instruction
$798    $D54B   DRW      V5, V4, #B      ; Draw 11-byte sprite at V5, V4
$79A    $4DC1   SNE      VD, #C1         ; Skip if VD != 193
$79C    $6F54   LD       VF, #54         ; Load 84 into VF
$79E    $097B   SYS      $97B            ; System call to 97B
$7A0    $01D0   SYS      $1D0            ; System call to 1D0
$7A2    $FC46   UNKNOWN  FC46            ; Unknown Fxxx instruction
$7A4    $5687   UNKNOWN  $5687           ; Unknown 5xxx instruction
$7A6    $3DB1   SE       VD, #B1         ; Skip if VD == 177
$7A8    $F8A3   UNKNOWN  F8A3            ; Unknown Fxxx instruction
$7AA    $49CF   SNE      V9, #CF         ; Skip if V9 != 207
$7AC    $85C8   UNKNOWN  85C8            ; Unknown 8xxx instruction
$7AE    $805B   UNKNOWN  805B            ; Unknown 8xxx instruction
$7B0    $C148   RND      V1, #48         ; V1 = random & 48
$7B2    $5A36   UNKNOWN  $5A36           ; Unknown 5xxx instruction
$7B4    $9F23   UNKNOWN  $9F23           ; Unknown 9xxx instruction
$7B6    $35AE   SE       V5, #AE         ; Skip if V5 == 174
$7B8    $FCA3   UNKNOWN  FCA3            ; Unknown Fxxx instruction
$7BA    $E516   UNKNOWN  $E516           ; Unknown Exxx instruction
$7BC    $2C8D   CALL     $C8D            ; Call subroutine at C8D
$7BE    $9BA2   UNKNOWN  $9BA2           ; Unknown 9xxx instruction
$7C0    $A88D   LD       I, $88D         ; Load 88D into I
$7C2    $B67F   JP       V0, $67F        ; Jump to V0 + 67F
$7C4    $FFBE   UNKNOWN  FFBE            ; Unknown Fxxx instruction
$7C6    $D0AA   DRW      V0, VA, #A      ; Draw 10-byte sprite at V0, VA
$7C8    $C98D   RND      V9, #8D         ; V9 = random & 8D
$7CA    $CD7A   RND      VD, #7A         ; VD = random & 7A
$7CC    $C946   RND      V9, #46         ; V9 = random & 46
$7CE    $C281   RND      V2, #81         ; V2 = random & 81
$7D0    $451B   SNE      V5, #1B         ; Skip if V5 != 27
$7D2    $20B9   CALL     $0B9            ; Call subroutine at 0B9
$7D4    $0E0F   SYS      $E0F            ; System call to E0F
$7D6    $B08E   JP       V0, $08E        ; Jump to V0 + 08E
$7D8    $6F1D   LD       VF, #1D         ; Load 29 into VF
$7DA    $2E45   CALL     $E45            ; Call subroutine at E45
$7DC    $B1A1   JP       V0, $1A1        ; Jump to V0 + 1A1
$7DE    $70CD   ADD      V0, #CD         ; Add 205 to V0
$7E0    $71F9   ADD      V1, #F9         ; Add 249 to V1
$7E2    $61EF   LD       V1, #EF         ; Load 239 into V1
$7E4    $370E   SE       V7, #0E         ; Skip if V7 == 14
$7E6    $3516   SE       V5, #16         ; Skip if V5 == 22
$7E8    $01B2   SYS      $1B2            ; System call to 1B2
$7EA    $2AAB   CALL     $AAB            ; Call subroutine at AAB
$7EC    $99A1   UNKNOWN  $99A1           ; Unknown 9xxx instruction
$7EE    $8E9A   UNKNOWN  8E9A            ; Unknown 8xxx instruction
$7F0    $5E0E   UNKNOWN  $5E0E           ; Unknown 5xxx instruction
$7F2    $7F6A   ADD      VF, #6A         ; Add 106 to VF
$7F4    $46F1   SNE      V6, #F1         ; Skip if V6 != 241
$7F6    $C248   RND      V2, #48         ; V2 = random & 48
$7F8    $4880   SNE      V8, #80         ; Skip if V8 != 128
$7FA    $5740   SE       V7, V4          ; Skip if V7 == V4
$7FC    $57E5   UNKNOWN  $57E5           ; Unknown 5xxx instruction
$7FE    $2B1B   CALL     $B1B            ; Call subroutine at B1B
$800    $EBF5   UNKNOWN  $EBF5           ; Unknown Exxx instruction
$802    $E8EB   UNKNOWN  $E8EB           ; Unknown Exxx instruction
$804    $7467   ADD      V4, #67         ; Add 103 to V4
$806    $DCD2   DRW      VC, VD, #2      ; Draw 2-byte sprite at VC, VD
$808    $1B8B   JP       $B8B            ; Jump to B8B
$80A    $CDD5   RND      VD, #D5         ; VD = random & D5
$80C    $5480   SE       V4, V8          ; Skip if V4 == V8
$80E    $0DBC   SYS      $DBC            ; System call to DBC
$810    $0283   SYS      $283            ; System call to 283
$812    $9A4E   UNKNOWN  $9A4E           ; Unknown 9xxx instruction
$814    $B971   JP       V0, $971        ; Jump to V0 + 971
$816    $17B7   JP       $7B7            ; Jump to 7B7
$818    $2052   CALL     $052            ; Call subroutine at 052
$81A    $CCE4   RND      VC, #E4         ; VC = random & E4
$81C    $AD9A   LD       I, $D9A         ; Load D9A into I
$81E    $563E   UNKNOWN  $563E           ; Unknown 5xxx instruction
$820    $B6E5   JP       V0, $6E5        ; Jump to V0 + 6E5
$822    $F624   UNKNOWN  F624            ; Unknown Fxxx instruction
$824    $BCE2   JP       V0, $CE2        ; Jump to V0 + CE2
$826    $2A76   CALL     $A76            ; Call subroutine at A76
$828    $54ED   UNKNOWN  $54ED           ; Unknown 5xxx instruction
$82A    $5465   UNKNOWN  $5465           ; Unknown 5xxx instruction
$82C    $F442   UNKNOWN  F442            ; Unknown Fxxx instruction
$82E    $D456   DRW      V4, V5, #6      ; Draw 6-byte sprite at V4, V5
$830    $DD10   DRW      VD, V1, #0      ; Draw 0-byte sprite at VD, V1
$832    $408C   SNE      V0, #8C         ; Skip if V0 != 140
$834    $D4DF   DRW      V4, VD, #F      ; Draw 15-byte sprite at V4, VD
$836    $6660   LD       V6, #60         ; Load 96 into V6
$838    $5E03   UNKNOWN  $5E03           ; Unknown 5xxx instruction
$83A    $821C   UNKNOWN  821C            ; Unknown 8xxx instruction
$83C    $EC9F   UNKNOWN  $EC9F           ; Unknown Exxx instruction
$83E    $C90B   RND      V9, #0B         ; V9 = random & 0B
$840    $9854   UNKNOWN  $9854           ; Unknown 9xxx instruction
$842    $EE7E   UNKNOWN  $EE7E           ; Unknown Exxx instruction
$844    $0810   SYS      $810            ; System call to 810
$846    $4329   SNE      V3, #29         ; Skip if V3 != 41
$848    $2B86   CALL     $B86            ; Call subroutine at B86
$84A    $6101   LD       V1, #01         ; Load 1 into V1
$84C    $6BE2   LD       VB, #E2         ; Load 226 into VB
$84E    $6AF2   LD       VA, #F2         ; Load 242 into VA
$850    $AC91   LD       I, $C91         ; Load C91 into I
$852    $F9DA   UNKNOWN  F9DA            ; Unknown Fxxx instruction
$854    $E63F   UNKNOWN  $E63F           ; Unknown Exxx instruction
$856    $9E6C   UNKNOWN  $9E6C           ; Unknown 9xxx instruction
$858    $E9AE   UNKNOWN  $E9AE           ; Unknown Exxx instruction
$85A    $DC44   DRW      VC, V4, #4      ; Draw 4-byte sprite at VC, V4
$85C    $C7AE   RND      V7, #AE         ; V7 = random & AE
$85E    $86D7   SUBN     V6, VD          ; V6 = VD - V6, VF = !borrow
$860    $A8B9   LD       I, $8B9         ; Load 8B9 into I
$862    $D7A1   DRW      V7, VA, #1      ; Draw 1-byte sprite at V7, VA
$864    $B33F   JP       V0, $33F        ; Jump to V0 + 33F
$866    $0C53   SYS      $C53            ; System call to C53
$868    $E426   UNKNOWN  $E426           ; Unknown Exxx instruction
$86A    $CBEA   RND      VB, #EA         ; VB = random & EA
$86C    $023E   SYS      $23E            ; System call to 23E
$86E    $B25A   JP       V0, $25A        ; Jump to V0 + 25A
$870    $E1A0   UNKNOWN  $E1A0           ; Unknown Exxx instruction
$872    $FDAC   UNKNOWN  FDAC            ; Unknown Fxxx instruction
$874    $CE30   RND      VE, #30         ; VE = random & 30
$876    $4A07   SNE      VA, #07         ; Skip if VA != 7
$878    $49E5   SNE      V9, #E5         ; Skip if V9 != 229
$87A    $7F25   ADD      VF, #25         ; Add 37 to VF
$87C    $CCAF   RND      VC, #AF         ; VC = random & AF
$87E    $92F3   UNKNOWN  $92F3           ; Unknown 9xxx instruction
$880    $E44C   UNKNOWN  $E44C           ; Unknown Exxx instruction
$882    $1A2D   JP       $A2D            ; Jump to A2D
$884    $7C47   ADD      VC, #47         ; Add 71 to VC
$886    $6A94   LD       VA, #94         ; Load 148 into VA
$888    $F7A1   UNKNOWN  F7A1            ; Unknown Fxxx instruction
$88A    $FB24   UNKNOWN  FB24            ; Unknown Fxxx instruction
$88C    $6383   LD       V3, #83         ; Load 131 into V3
$88E    $4786   SNE      V7, #86         ; Skip if V7 != 134
$890    $5142   UNKNOWN  $5142           ; Unknown 5xxx instruction
$892    $D353   DRW      V3, V5, #3      ; Draw 3-byte sprite at V3, V5
$894    $5349   UNKNOWN  $5349           ; Unknown 5xxx instruction
$896    $12A9   JP       $2A9            ; Jump to 2A9
$898    $AAC0   LD       I, $AC0         ; Load AC0 into I
$89A    $C34F   RND      V3, #4F         ; V3 = random & 4F
$89C    $70AB   ADD      V0, #AB         ; Add 171 to V0
$89E    $0357   SYS      $357            ; System call to 357
$8A0    $6F2F   LD       VF, #2F         ; Load 47 into VF
$8A2    $1889   JP       $889            ; Jump to 889
$8A4    $EC28   UNKNOWN  $EC28           ; Unknown Exxx instruction
$8A6    $6393   LD       V3, #93         ; Load 147 into V3
$8A8    $F7AB   UNKNOWN  F7AB            ; Unknown Fxxx instruction
$8AA    $59EA   UNKNOWN  $59EA           ; Unknown 5xxx instruction
$8AC    $8C79   UNKNOWN  8C79            ; Unknown 8xxx instruction
$8AE    $06A7   SYS      $6A7            ; System call to 6A7
$8B0    $2B4E   CALL     $B4E            ; Call subroutine at B4E
$8B2    $4676   SNE      V6, #76         ; Skip if V6 != 118
$8B4    $9A71   UNKNOWN  $9A71           ; Unknown 9xxx instruction
$8B6    $4646   SNE      V6, #46         ; Skip if V6 != 70
$8B8    $B882   JP       V0, $882        ; Jump to V0 + 882
$8BA    $728F   ADD      V2, #8F         ; Add 143 to V2
$8BC    $BB95   JP       V0, $B95        ; Jump to V0 + B95
$8BE    $D59D   DRW      V5, V9, #D      ; Draw 13-byte sprite at V5, V9
$8C0    $1DB6   JP       $DB6            ; Jump to DB6
$8C2    $DE74   DRW      VE, V7, #4      ; Draw 4-byte sprite at VE, V7
$8C4    $2E01   CALL     $E01            ; Call subroutine at E01
$8C6    $F7E0   UNKNOWN  F7E0            ; Unknown Fxxx instruction
$8C8    $2876   CALL     $876            ; Call subroutine at 876
$8CA    $47B0   SNE      V7, #B0         ; Skip if V7 != 176
$8CC    $5F2C   UNKNOWN  $5F2C           ; Unknown 5xxx instruction
$8CE    $89CE   SHL      V9              ; V9 <<= 1, VF = MSB
$8D0    $2733   CALL     $733            ; Call subroutine at 733
$8D2    $A053   LD       I, $053         ; Load 053 into I
$8D4    $7478   ADD      V4, #78         ; Add 120 to V4
$8D6    $796A   ADD      V9, #6A         ; Add 106 to V9
$8D8    $EED9   UNKNOWN  $EED9           ; Unknown Exxx instruction
$8DA    $B2A1   JP       V0, $2A1        ; Jump to V0 + 2A1
$8DC    $8718   UNKNOWN  8718            ; Unknown 8xxx instruction
$8DE    $85B5   SUB      V5, VB          ; V5 -= VB, VF = !borrow
$8E0    $EC4F   UNKNOWN  $EC4F           ; Unknown Exxx instruction
$8E2    $3357   SE       V3, #57         ; Skip if V3 == 87
$8E4    $B498   JP       V0, $498        ; Jump to V0 + 498
$8E6    $ED03   UNKNOWN  $ED03           ; Unknown Exxx instruction
$8E8    $962E   UNKNOWN  $962E           ; Unknown 9xxx instruction
$8EA    $4C3E   SNE      VC, #3E         ; Skip if VC != 62
$8EC    $EC40   UNKNOWN  $EC40           ; Unknown Exxx instruction
$8EE    $76F9   ADD      V6, #F9         ; Add 249 to V6
$8F0    $2BC3   CALL     $BC3            ; Call subroutine at BC3
$8F2    $BE98   JP       V0, $E98        ; Jump to V0 + E98
$8F4    $EB83   UNKNOWN  $EB83           ; Unknown Exxx instruction
$8F6    $C260   RND      V2, #60         ; V2 = random & 60
$8F8    $A3B7   LD       I, $3B7         ; Load 3B7 into I
$8FA    $4727   SNE      V7, #27         ; Skip if V7 != 39
$8FC    $062B   SYS      $62B            ; System call to 62B
$8FE    $A186   LD       I, $186         ; Load 186 into I
$900    $6E60   LD       VE, #60         ; Load 96 into VE
$902    $C25E   RND      V2, #5E         ; V2 = random & 5E
$904    $E9B1   UNKNOWN  $E9B1           ; Unknown Exxx instruction
$906    $A9EA   LD       I, $9EA         ; Load 9EA into I
$908    $7635   ADD      V6, #35         ; Add 53 to V6
$90A    $0C6E   SYS      $C6E            ; System call to C6E
$90C    $DE1F   DRW      VE, V1, #F      ; Draw 15-byte sprite at VE, V1
$90E    $6076   LD       V0, #76         ; Load 118 into V0
$910    $F62B   UNKNOWN  F62B            ; Unknown Fxxx instruction
$912    $4BA4   SNE      VB, #A4         ; Skip if VB != 164
$914    $E559   UNKNOWN  $E559           ; Unknown Exxx instruction
$916    $0847   SYS      $847            ; System call to 847
$918    $3A75   SE       VA, #75         ; Skip if VA == 117
$91A    $0276   SYS      $276            ; System call to 276
$91C    $5319   UNKNOWN  $5319           ; Unknown 5xxx instruction
$91E    $445C   SNE      V4, #5C         ; Skip if V4 != 92
$920    $D7B7   DRW      V7, VB, #7      ; Draw 7-byte sprite at V7, VB
$922    $EE3A   UNKNOWN  $EE3A           ; Unknown Exxx instruction
$924    $4BE6   SNE      VB, #E6         ; Skip if VB != 230
$926    $734D   ADD      V3, #4D         ; Add 77 to V3
$928    $8B47   SUBN     VB, V4          ; VB = V4 - VB, VF = !borrow
$92A    $6C2F   LD       VC, #2F         ; Load 47 into VC
$92C    $318A   SE       V1, #8A         ; Skip if V1 == 138
$92E    $CD0C   RND      VD, #0C         ; VD = random & 0C
$930    $1676   JP       $676            ; Jump to 676
$932    $0903   SYS      $903            ; System call to 903
$934    $DFBF   DRW      VF, VB, #F      ; Draw 15-byte sprite at VF, VB
$936    $FE3C   UNKNOWN  FE3C            ; Unknown Fxxx instruction
$938    $67FB   LD       V7, #FB         ; Load 251 into V7
$93A    $BB64   JP       V0, $B64        ; Jump to V0 + B64
$93C    $4FBE   SNE      VF, #BE         ; Skip if VF != 190
$93E    $3CD5   SE       VC, #D5         ; Skip if VC == 213
$940    $821E   SHL      V2              ; V2 <<= 1, VF = MSB
$942    $613D   LD       V1, #3D         ; Load 61 into V1
$944    $22AA   CALL     $2AA            ; Call subroutine at 2AA
$946    $30B9   SE       V0, #B9         ; Skip if V0 == 185
$948    $BB80   JP       V0, $B80        ; Jump to V0 + B80
$94A    $38E3   SE       V8, #E3         ; Skip if V8 == 227
$94C    $F262   UNKNOWN  F262            ; Unknown Fxxx instruction
$94E    $590D   UNKNOWN  $590D           ; Unknown 5xxx instruction
$950    $18D8   JP       $8D8            ; Jump to 8D8
$952    $FC11   UNKNOWN  FC11            ; Unknown Fxxx instruction
$954    $F3A9   UNKNOWN  F3A9            ; Unknown Fxxx instruction
$956    $F077   UNKNOWN  F077            ; Unknown Fxxx instruction
$958    $E619   UNKNOWN  $E619           ; Unknown Exxx instruction
$95A    $03E7   SYS      $3E7            ; System call to 3E7
$95C    $D13B   DRW      V1, V3, #B      ; Draw 11-byte sprite at V1, V3
$95E    $F07D   UNKNOWN  F07D            ; Unknown Fxxx instruction
$960    $449F   SNE      V4, #9F         ; Skip if V4 != 159
$962    $897D   UNKNOWN  897D            ; Unknown 8xxx instruction
$964    $5D33   UNKNOWN  $5D33           ; Unknown 5xxx instruction
$966    $FD95   UNKNOWN  FD95            ; Unknown Fxxx instruction
$968    $478B   SNE      V7, #8B         ; Skip if V7 != 139
$96A    $25DE   CALL     $5DE            ; Call subroutine at 5DE
$96C    $BD70   JP       V0, $D70        ; Jump to V0 + D70
$96E    $B8FA   JP       V0, $8FA        ; Jump to V0 + 8FA
$970    $0195   SYS      $195            ; System call to 195
$972    $6AFB   LD       VA, #FB         ; Load 251 into VA
$974    $4AB7   SNE      VA, #B7         ; Skip if VA != 183
$976    $5EE9   UNKNOWN  $5EE9           ; Unknown 5xxx instruction
$978    $46B1   SNE      V6, #B1         ; Skip if V6 != 177
$97A    $42CB   SNE      V2, #CB         ; Skip if V2 != 203
$97C    $D559   DRW      V5, V5, #9      ; Draw 9-byte sprite at V5, V5
$97E    $807C   UNKNOWN  807C            ; Unknown 8xxx instruction
$980    $76F2   ADD      V6, #F2         ; Add 242 to V6
$982    $35BE   SE       V5, #BE         ; Skip if V5 == 190
$984    $2226   CALL     $226            ; Call subroutine at 226
$986    $E75B   UNKNOWN  $E75B           ; Unknown Exxx instruction
$988    $B75B   JP       V0, $75B        ; Jump to V0 + 75B
$98A    $3CF5   SE       VC, #F5         ; Skip if VC == 245
$98C    $7C48   ADD      VC, #48         ; Add 72 to VC
$98E    $FB22   UNKNOWN  FB22            ; Unknown Fxxx instruction
$990    $ACD2   LD       I, $CD2         ; Load CD2 into I
$992    $79B4   ADD      V9, #B4         ; Add 180 to V9
$994    $2265   CALL     $265            ; Call subroutine at 265
$996    $E725   UNKNOWN  $E725           ; Unknown Exxx instruction
$998    $8F46   SHR      VF              ; VF >>= 1, VF = LSB
$99A    $5729   UNKNOWN  $5729           ; Unknown 5xxx instruction
$99C    $42ED   SNE      V2, #ED         ; Skip if V2 != 237
$99E    $CFE1   RND      VF, #E1         ; VF = random & E1
$9A0    $BAFF   JP       V0, $AFF        ; Jump to V0 + AFF
$9A2    $F056   UNKNOWN  F056            ; Unknown Fxxx instruction
$9A4    $4ECF   SNE      VE, #CF         ; Skip if VE != 207
$9A6    $ABEF   LD       I, $BEF         ; Load BEF into I
$9A8    $D6F0   DRW      V6, VF, #0      ; Draw 0-byte sprite at V6, VF
$9AA    $6AFA   LD       VA, #FA         ; Load 250 into VA
$9AC    $4E62   SNE      VE, #62         ; Skip if VE != 98
$9AE    $7E0C   ADD      VE, #0C         ; Add 12 to VE
$9B0    $20DD   CALL     $0DD            ; Call subroutine at 0DD
$9B2    $4EA8   SNE      VE, #A8         ; Skip if VE != 168
$9B4    $AB73   LD       I, $B73         ; Load B73 into I
$9B6    $9E1A   UNKNOWN  $9E1A           ; Unknown 9xxx instruction
$9B8    $2A1E   CALL     $A1E            ; Call subroutine at A1E
$9BA    $E722   UNKNOWN  $E722           ; Unknown Exxx instruction
$9BC    $E694   UNKNOWN  $E694           ; Unknown Exxx instruction
$9BE    $AC7B   LD       I, $C7B         ; Load C7B into I
$9C0    $6E1E   LD       VE, #1E         ; Load 30 into VE
$9C2    $3953   SE       V9, #53         ; Skip if V9 == 83
$9C4    $A616   LD       I, $616         ; Load 616 into I
$9C6    $3425   SE       V4, #25         ; Skip if V4 == 37
$9C8    $155C   JP       $55C            ; Jump to 55C
$9CA    $0DA4   SYS      $DA4            ; System call to DA4
$9CC    $8291   OR       V2, V9          ; V2 |= V9
$9CE    $4066   SNE      V0, #66         ; Skip if V0 != 102
$9D0    $4A3C   SNE      VA, #3C         ; Skip if VA != 60
$9D2    $DEC9   DRW      VE, VC, #9      ; Draw 9-byte sprite at VE, VC
$9D4    $F6E3   UNKNOWN  F6E3            ; Unknown Fxxx instruction
$9D6    $C86F   RND      V8, #6F         ; V8 = random & 6F
$9D8    $9AFB   UNKNOWN  $9AFB           ; Unknown 9xxx instruction
$9DA    $F48B   UNKNOWN  F48B            ; Unknown Fxxx instruction
$9DC    $2ADC   CALL     $ADC            ; Call subroutine at ADC
$9DE    $A612   LD       I, $612         ; Load 612 into I
$9E0    $7DC5   ADD      VD, #C5         ; Add 197 to VD
$9E2    $33DE   SE       V3, #DE         ; Skip if V3 == 222
$9E4    $218F   CALL     $18F            ; Call subroutine at 18F
$9E6    $B28F   JP       V0, $28F        ; Jump to V0 + 28F
$9E8    $A9F4   LD       I, $9F4         ; Load 9F4 into I
$9EA    $7DCC   ADD      VD, #CC         ; Add 204 to VD
$9EC    $202D   CALL     $02D            ; Call subroutine at 02D
$9EE    $FA80   UNKNOWN  FA80            ; Unknown Fxxx instruction
$9F0    $86F0   LD       V6, VF          ; V6 = VF
$9F2    $ADAA   LD       I, $DAA         ; Load DAA into I
$9F4    $A834   LD       I, $834         ; Load 834 into I
$9F6    $00A2   SYS      $0A2            ; System call to 0A2
$9F8    $AE06   LD       I, $E06         ; Load E06 into I
$9FA    $2BB1   CALL     $BB1            ; Call subroutine at BB1
$9FC    $5146   UNKNOWN  $5146           ; Unknown 5xxx instruction
$9FE    $2095   CALL     $095            ; Call subroutine at 095
$A00    $DF07   DRW      VF, V0, #7      ; Draw 7-byte sprite at VF, V0
$A02    $8359   UNKNOWN  8359            ; Unknown 8xxx instruction
$A04    $52FD   UNKNOWN  $52FD           ; Unknown 5xxx instruction
$A06    $1972   JP       $972            ; Jump to 972
$A08    $04A0   SYS      $4A0            ; System call to 4A0
$A0A    $07AC   SYS      $7AC            ; System call to 7AC
$A0C    $CE8C   RND      VE, #8C         ; VE = random & 8C
$A0E    $D1A2   DRW      V1, VA, #2      ; Draw 2-byte sprite at V1, VA
$A10    $D663   DRW      V6, V6, #3      ; Draw 3-byte sprite at V6, V6
$A12    $CB4A   RND      VB, #4A         ; VB = random & 4A
$A14    $A33A   LD       I, $33A         ; Load 33A into I
$A16    $ED1F   UNKNOWN  $ED1F           ; Unknown Exxx instruction
$A18    $E242   UNKNOWN  $E242           ; Unknown Exxx instruction
$A1A    $A959   LD       I, $959         ; Load 959 into I
$A1C    $C460   RND      V4, #60         ; V4 = random & 60
$A1E    $3503   SE       V5, #03         ; Skip if V5 == 3
$A20    $AC67   LD       I, $C67         ; Load C67 into I
$A22    $8CD7   SUBN     VC, VD          ; VC = VD - VC, VF = !borrow
$A24    $A3DD   LD       I, $3DD         ; Load 3DD into I
$A26    $42D0   SNE      V2, #D0         ; Skip if V2 != 208
$A28    $32E9   SE       V2, #E9         ; Skip if V2 == 233
$A2A    $F6D8   UNKNOWN  F6D8            ; Unknown Fxxx instruction
$A2C    $ADCB   LD       I, $DCB         ; Load DCB into I
$A2E    $6F21   LD       VF, #21         ; Load 33 into VF
$A30    $9FC2   UNKNOWN  $9FC2           ; Unknown 9xxx instruction
$A32    $D215   DRW      V2, V1, #5      ; Draw 5-byte sprite at V2, V1
$A34    $F233   LD       B, V2           ; Store BCD of V2 at I, I+1, I+2
$A36    $1D1E   JP       $D1E            ; Jump to D1E
$A38    $A037   LD       I, $037         ; Load 037 into I
$A3A    $6434   LD       V4, #34         ; Load 52 into V4
$A3C    $C097   RND      V0, #97         ; V0 = random & 97
$A3E    $BDF2   JP       V0, $DF2        ; Jump to V0 + DF2
$A40    $A01E   LD       I, $01E         ; Load 01E into I
$A42    $48DE   SNE      V8, #DE         ; Skip if V8 != 222
$A44    $BACF   JP       V0, $ACF        ; Jump to V0 + ACF
$A46    $3D53   SE       VD, #53         ; Skip if VD == 83
$A48    $6356   LD       V3, #56         ; Load 86 into V3
$A4A    $C1F3   RND      V1, #F3         ; V1 = random & F3
$A4C    $B5E1   JP       V0, $5E1        ; Jump to V0 + 5E1
$A4E    $1FD3   JP       $FD3            ; Jump to FD3
$A50    $543F   UNKNOWN  $543F           ; Unknown 5xxx instruction
$A52    $6130   LD       V1, #30         ; Load 48 into V1
$A54    $C1D4   RND      V1, #D4         ; V1 = random & D4
$A56    $C214   RND      V2, #14         ; V2 = random & 14
$A58    $D4F8   DRW      V4, VF, #8      ; Draw 8-byte sprite at V4, VF
$A5A    $185E   JP       $85E            ; Jump to 85E
$A5C    $2BBD   CALL     $BBD            ; Call subroutine at BBD
$A5E    $0A62   SYS      $A62            ; System call to A62
$A60    $915F   UNKNOWN  $915F           ; Unknown 9xxx instruction
$A62    $FEA0   UNKNOWN  FEA0            ; Unknown Fxxx instruction
$A64    $0D47   SYS      $D47            ; System call to D47
$A66    $07BB   SYS      $7BB            ; System call to 7BB
$A68    $28F1   CALL     $8F1            ; Call subroutine at 8F1
$A6A    $0177   SYS      $177            ; System call to 177
$A6C    $09F2   SYS      $9F2            ; System call to 9F2
$A6E    $F7A1   UNKNOWN  F7A1            ; Unknown Fxxx instruction
$A70    $7C24   ADD      VC, #24         ; Add 36 to VC
$A72    $3959   SE       V9, #59         ; Skip if V9 == 89
$A74    $FC82   UNKNOWN  FC82            ; Unknown Fxxx instruction
$A76    $59D8   UNKNOWN  $59D8           ; Unknown 5xxx instruction
$A78    $E835   UNKNOWN  $E835           ; Unknown Exxx instruction
$A7A    $BEB2   JP       V0, $EB2        ; Jump to V0 + EB2
$A7C    $AF88   LD       I, $F88         ; Load F88 into I
$A7E    $468B   SNE      V6, #8B         ; Skip if V6 != 139
$A80    $98B8   UNKNOWN  $98B8           ; Unknown 9xxx instruction
$A82    $EA71   UNKNOWN  $EA71           ; Unknown Exxx instruction
$A84    $9B44   UNKNOWN  $9B44           ; Unknown 9xxx instruction
$A86    $4ADD   SNE      VA, #DD         ; Skip if VA != 221
$A88    $9B0D   UNKNOWN  $9B0D           ; Unknown 9xxx instruction
$A8A    $F036   UNKNOWN  F036            ; Unknown Fxxx instruction
$A8C    $143E   JP       $43E            ; Jump to 43E
$A8E    $5073   UNKNOWN  $5073           ; Unknown 5xxx instruction
$A90    $E134   UNKNOWN  $E134           ; Unknown Exxx instruction
$A92    $24CD   CALL     $4CD            ; Call subroutine at 4CD
$A94    $8C23   XOR      VC, V2          ; VC ^= V2
$A96    $B20B   JP       V0, $20B        ; Jump to V0 + 20B
$A98    $1E35   JP       $E35            ; Jump to E35
$A9A    $C488   RND      V4, #88         ; V4 = random & 88
$A9C    $01CD   SYS      $1CD            ; System call to 1CD
$A9E    $EBC5   UNKNOWN  $EBC5           ; Unknown Exxx instruction
$AA0    $4C29   SNE      VC, #29         ; Skip if VC != 41
$AA2    $18D5   JP       $8D5            ; Jump to 8D5
$AA4    $F073   UNKNOWN  F073            ; Unknown Fxxx instruction
$AA6    $96EB   UNKNOWN  $96EB           ; Unknown 9xxx instruction
$AA8    $A82D   LD       I, $82D         ; Load 82D into I
$AAA    $EFED   UNKNOWN  $EFED           ; Unknown Exxx instruction
$AAC    $8D37   SUBN     VD, V3          ; VD = V3 - VD, VF = !borrow
$AAE    $E92F   UNKNOWN  $E92F           ; Unknown Exxx instruction
$AB0    $F2D0   UNKNOWN  F2D0            ; Unknown Fxxx instruction
$AB2    $97D8   UNKNOWN  $97D8           ; Unknown 9xxx instruction
$AB4    $6ACD   LD       VA, #CD         ; Load 205 into VA
$AB6    $9C27   UNKNOWN  $9C27           ; Unknown 9xxx instruction
$AB8    $F27E   UNKNOWN  F27E            ; Unknown Fxxx instruction
$ABA    $7393   ADD      V3, #93         ; Add 147 to V3
$ABC    $B2D6   JP       V0, $2D6        ; Jump to V0 + 2D6
$ABE    $45FB   SNE      V5, #FB         ; Skip if V5 != 251
$AC0    $F99C   UNKNOWN  F99C            ; Unknown Fxxx instruction
$AC2    $35CC   SE       V5, #CC         ; Skip if V5 == 204
$AC4    $2E75   CALL     $E75            ; Call subroutine at E75
$AC6    $7B1F   ADD      VB, #1F         ; Add 31 to VB
$AC8    $907B   UNKNOWN  $907B           ; Unknown 9xxx instruction
$ACA    $D02D   DRW      V0, V2, #D      ; Draw 13-byte sprite at V0, V2
$ACC    $4C72   SNE      VC, #72         ; Skip if VC != 114
$ACE    $1441   JP       $441            ; Jump to 441
$AD0    $1C74   JP       $C74            ; Jump to C74
$AD2    $674A   LD       V7, #4A         ; Load 74 into V7
$AD4    $2F70   CALL     $F70            ; Call subroutine at F70
$AD6    $BD8F   JP       V0, $D8F        ; Jump to V0 + D8F
$AD8    $4FD5   SNE      VF, #D5         ; Skip if VF != 213
$ADA    $AC54   LD       I, $C54         ; Load C54 into I
$ADC    $A176   LD       I, $176         ; Load 176 into I
$ADE    $F133   LD       B, V1           ; Store BCD of V1 at I, I+1, I+2
$AE0    $7A4A   ADD      VA, #4A         ; Add 74 to VA
$AE2    $7ACE   ADD      VA, #CE         ; Add 206 to VA
$AE4    $F086   UNKNOWN  F086            ; Unknown Fxxx instruction
$AE6    $4B67   SNE      VB, #67         ; Skip if VB != 103
$AE8    $E523   UNKNOWN  $E523           ; Unknown Exxx instruction
$AEA    $B192   JP       V0, $192        ; Jump to V0 + 192
$AEC    $771C   ADD      V7, #1C         ; Add 28 to V7
$AEE    $17DA   JP       $7DA            ; Jump to 7DA
$AF0    $9C6F   UNKNOWN  $9C6F           ; Unknown 9xxx instruction
$AF2    $3E55   SE       VE, #55         ; Skip if VE == 85
$AF4    $FE86   UNKNOWN  FE86            ; Unknown Fxxx instruction
$AF6    $C6A0   RND      V6, #A0         ; V6 = random & A0
$AF8    $BDBB   JP       V0, $DBB        ; Jump to V0 + DBB
$AFA    $7D27   ADD      VD, #27         ; Add 39 to VD
$AFC    $640D   LD       V4, #0D         ; Load 13 into V4
$AFE    $ABE3   LD       I, $BE3         ; Load BE3 into I
$B00    $421A   SNE      V2, #1A         ; Skip if V2 != 26
$B02    $DEB0   DRW      VE, VB, #0      ; Draw 0-byte sprite at VE, VB
$B04    $7C17   ADD      VC, #17         ; Add 23 to VC
$B06    $F716   UNKNOWN  F716            ; Unknown Fxxx instruction
$B08    $CED8   RND      VE, #D8         ; VE = random & D8
$B0A    $760A   ADD      V6, #0A         ; Add 10 to V6
$B0C    $8E77   SUBN     VE, V7          ; VE = V7 - VE, VF = !borrow
$B0E    $DAE6   DRW      VA, VE, #6      ; Draw 6-byte sprite at VA, VE
$B10    $B6E4   JP       V0, $6E4        ; Jump to V0 + 6E4
$B12    $F86B   UNKNOWN  F86B            ; Unknown Fxxx instruction
$B14    $DFAB   DRW      VF, VA, #B      ; Draw 11-byte sprite at VF, VA
$B16    $D959   DRW      V9, V5, #9      ; Draw 9-byte sprite at V9, V5
$B18    $C553   RND      V5, #53         ; V5 = random & 53
$B1A    $4DF3   SNE      VD, #F3         ; Skip if VD != 243
$B1C    $4924   SNE      V9, #24         ; Skip if V9 != 36
$B1E    $1FDA   JP       $FDA            ; Jump to FDA
$B20    $23DD   CALL     $3DD            ; Call subroutine at 3DD
$B22    $DB13   DRW      VB, V1, #3      ; Draw 3-byte sprite at VB, V1
$B24    $A6AE   LD       I, $6AE         ; Load 6AE into I
$B26    $2980   CALL     $980            ; Call subroutine at 980
$B28    $FFC0   UNKNOWN  FFC0            ; Unknown Fxxx instruction
$B2A    $1E9D   JP       $E9D            ; Jump to E9D
$B2C    $CD67   RND      VD, #67         ; VD = random & 67
$B2E    $7D8E   ADD      VD, #8E         ; Add 142 to VD
$B30    $E07B   UNKNOWN  $E07B           ; Unknown Exxx instruction
$B32    $3C0C   SE       VC, #0C         ; Skip if VC == 12
$B34    $A80D   LD       I, $80D         ; Load 80D into I
$B36    $A8E2   LD       I, $8E2         ; Load 8E2 into I
$B38    $E74E   UNKNOWN  $E74E           ; Unknown Exxx instruction
$B3A    $FFD4   UNKNOWN  FFD4            ; Unknown Fxxx instruction
$B3C    $36D8   SE       V6, #D8         ; Skip if V6 == 216
$B3E    $E3BE   UNKNOWN  $E3BE           ; Unknown Exxx instruction
$B40    $EA4B   UNKNOWN  $EA4B           ; Unknown Exxx instruction
$B42    $8E70   LD       VE, V7          ; VE = V7
$B44    $FB4D   UNKNOWN  FB4D            ; Unknown Fxxx instruction
$B46    $395D   SE       V9, #5D         ; Skip if V9 == 93
$B48    $8611   OR       V6, V1          ; V6 |= V1
$B4A    $F285   UNKNOWN  F285            ; Unknown Fxxx instruction
$B4C    $5E17   UNKNOWN  $5E17           ; Unknown 5xxx instruction
$B4E    $7B96   ADD      VB, #96         ; Add 150 to VB
$B50    $02CA   SYS      $2CA            ; System call to 2CA
$B52    $9E32   UNKNOWN  $9E32           ; Unknown 9xxx instruction
$B54    $BC21   JP       V0, $C21        ; Jump to V0 + C21
$B56    $CBCC   RND      VB, #CC         ; VB = random & CC
$B58    $31AE   SE       V1, #AE         ; Skip if V1 == 174
$B5A    $F65A   UNKNOWN  F65A            ; Unknown Fxxx instruction
$B5C    $6774   LD       V7, #74         ; Load 116 into V7
$B5E    $0797   SYS      $797            ; System call to 797
$B60    $5F79   UNKNOWN  $5F79           ; Unknown 5xxx instruction
$B62    $EAA6   UNKNOWN  $EAA6           ; Unknown Exxx instruction
$B64    $256E   CALL     $56E            ; Call subroutine at 56E
$B66    $81BD   UNKNOWN  81BD            ; Unknown 8xxx instruction
$B68    $4287   SNE      V2, #87         ; Skip if V2 != 135
$B6A    $241B   CALL     $41B            ; Call subroutine at 41B
$B6C    $6CE2   LD       VC, #E2         ; Load 226 into VC
$B6E    $7685   ADD      V6, #85         ; Add 133 to V6
$B70    $282E   CALL     $82E            ; Call subroutine at 82E
$B72    $3545   SE       V5, #45         ; Skip if V5 == 69
$B74    $FEC6   UNKNOWN  FEC6            ; Unknown Fxxx instruction
$B76    $55A0   SE       V5, VA          ; Skip if V5 == VA
$B78    $A8F5   LD       I, $8F5         ; Load 8F5 into I
$B7A    $D5FF   DRW      V5, VF, #F      ; Draw 15-byte sprite at V5, VF
$B7C    $6BFB   LD       VB, #FB         ; Load 251 into VB
$B7E    $9BD2   UNKNOWN  $9BD2           ; Unknown 9xxx instruction
$B80    $D8FC   DRW      V8, VF, #C      ; Draw 12-byte sprite at V8, VF
$B82    $BD14   JP       V0, $D14        ; Jump to V0 + D14
$B84    $1319   JP       $319            ; Jump to 319
$B86    $1E54   JP       $E54            ; Jump to E54
$B88    $A7BE   LD       I, $7BE         ; Load 7BE into I
$B8A    $F29C   UNKNOWN  F29C            ; Unknown Fxxx instruction
$B8C    $853B   UNKNOWN  853B            ; Unknown 8xxx instruction
$B8E    $89BE   SHL      V9              ; V9 <<= 1, VF = MSB
$B90    $B548   JP       V0, $548        ; Jump to V0 + 548
$B92    $EB96   UNKNOWN  $EB96           ; Unknown Exxx instruction
$B94    $BD71   JP       V0, $D71        ; Jump to V0 + D71
$B96    $E500   UNKNOWN  $E500           ; Unknown Exxx instruction
$B98    $CF5E   RND      VF, #5E         ; VF = random & 5E
$B9A    $6AB6   LD       VA, #B6         ; Load 182 into VA
$B9C    $0A51   SYS      $A51            ; System call to A51
$B9E    $B26F   JP       V0, $26F        ; Jump to V0 + 26F
$BA0    $BCBC   JP       V0, $CBC        ; Jump to V0 + CBC
$BA2    $ABAC   LD       I, $BAC         ; Load BAC into I
$BA4    $B2F8   JP       V0, $2F8        ; Jump to V0 + 2F8
$BA6    $62AF   LD       V2, #AF         ; Load 175 into V2
$BA8    $F9A0   UNKNOWN  F9A0            ; Unknown Fxxx instruction
$BAA    $B2B6   JP       V0, $2B6        ; Jump to V0 + 2B6
$BAC    $D32B   DRW      V3, V2, #B      ; Draw 11-byte sprite at V3, V2
$BAE    $479F   SNE      V7, #9F         ; Skip if V7 != 159
$BB0    $409B   SNE      V0, #9B         ; Skip if V0 != 155
$BB2    $DCB7   DRW      VC, VB, #7      ; Draw 7-byte sprite at VC, VB
$BB4    $F8AE   UNKNOWN  F8AE            ; Unknown Fxxx instruction
$BB6    $CEDB   RND      VE, #DB         ; VE = random & DB
$BB8    $2881   CALL     $881            ; Call subroutine at 881
$BBA    $9B83   UNKNOWN  $9B83           ; Unknown 9xxx instruction
$BBC    $92B3   UNKNOWN  $92B3           ; Unknown 9xxx instruction
$BBE    $951D   UNKNOWN  $951D           ; Unknown 9xxx instruction
$BC0    $654A   LD       V5, #4A         ; Load 74 into V5
$BC2    $1341   JP       $341            ; Jump to 341
$BC4    $D572   DRW      V5, V7, #2      ; Draw 2-byte sprite at V5, V7
$BC6    $EDCE   UNKNOWN  $EDCE           ; Unknown Exxx instruction
$BC8    $F8CF   UNKNOWN  F8CF            ; Unknown Fxxx instruction
$BCA    $BBB6   JP       V0, $BB6        ; Jump to V0 + BB6
$BCC    $CF8E   RND      VF, #8E         ; VF = random & 8E
$BCE    $4DE1   SNE      VD, #E1         ; Skip if VD != 225
$BD0    $EE19   UNKNOWN  $EE19           ; Unknown Exxx instruction
$BD2    $F842   UNKNOWN  F842            ; Unknown Fxxx instruction
$BD4    $9E6C   UNKNOWN  $9E6C           ; Unknown 9xxx instruction
$BD6    $0EA9   SYS      $EA9            ; System call to EA9
$BD8    $76CD   ADD      V6, #CD         ; Add 205 to V6
$BDA    $31FA   SE       V1, #FA         ; Skip if V1 == 250
$BDC    $06E2   SYS      $6E2            ; System call to 6E2
$BDE    $6C78   LD       VC, #78         ; Load 120 into VC
$BE0    $9616   UNKNOWN  $9616           ; Unknown 9xxx instruction
$BE2    $8243   XOR      V2, V4          ; V2 ^= V4
$BE4    $B644   JP       V0, $644        ; Jump to V0 + 644
$BE6    $D503   DRW      V5, V0, #3      ; Draw 3-byte sprite at V5, V0
$BE8    $D2CD   DRW      V2, VC, #D      ; Draw 13-byte sprite at V2, VC
$BEA    $C182   RND      V1, #82         ; V1 = random & 82
$BEC    $C159   RND      V1, #59         ; V1 = random & 59
$BEE    $E35A   UNKNOWN  $E35A           ; Unknown Exxx instruction
$BF0    $CB64   RND      VB, #64         ; VB = random & 64
$BF2    $19E9   JP       $9E9            ; Jump to 9E9
$BF4    $E7F1   UNKNOWN  $E7F1           ; Unknown Exxx instruction
$BF6    $1180   JP       $180            ; Jump to 180
$BF8    $3F5E   SE       VF, #5E         ; Skip if VF == 94
$BFA    $0F59   SYS      $F59            ; System call to F59
$BFC    $3723   SE       V7, #23         ; Skip if V7 == 35
$BFE    $22C4   CALL     $2C4            ; Call subroutine at 2C4
$C00    $608B   LD       V0, #8B         ; Load 139 into V0
$C02    $4743   SNE      V7, #43         ; Skip if V7 != 67
$C04    $1180   JP       $180            ; Jump to 180
$C06    $3979   SE       V9, #79         ; Skip if V9 == 121
$C08    $55C6   UNKNOWN  $55C6           ; Unknown 5xxx instruction
$C0A    $F0D0   UNKNOWN  F0D0            ; Unknown Fxxx instruction
$C0C    $54EE   UNKNOWN  $54EE           ; Unknown 5xxx instruction
$C0E    $4EE6   SNE      VE, #E6         ; Skip if VE != 230
$C10    $4BCA   SNE      VB, #CA         ; Skip if VB != 202
$C12    $25FE   CALL     $5FE            ; Call subroutine at 5FE
$C14    $9A14   UNKNOWN  $9A14           ; Unknown 9xxx instruction
$C16    $A687   LD       I, $687         ; Load 687 into I
$C18    $BFD8   JP       V0, $FD8        ; Jump to V0 + FD8
$C1A    $6E43   LD       VE, #43         ; Load 67 into VE
$C1C    $02F2   SYS      $2F2            ; System call to 2F2
$C1E    $3457   SE       V4, #57         ; Skip if V4 == 87
$C20    $7B60   ADD      VB, #60         ; Add 96 to VB
$C22    $A186   LD       I, $186         ; Load 186 into I
$C24    $E927   UNKNOWN  $E927           ; Unknown Exxx instruction
$C26    $CC35   RND      VC, #35         ; VC = random & 35
$C28    $E44D   UNKNOWN  $E44D           ; Unknown Exxx instruction
$C2A    $7BC5   ADD      VB, #C5         ; Add 197 to VB
$C2C    $F14F   UNKNOWN  F14F            ; Unknown Fxxx instruction
$C2E    $2D24   CALL     $D24            ; Call subroutine at D24
$C30    $E19E   SKP      V1              ; Skip if key V1 pressed
$C32    $9595   UNKNOWN  $9595           ; Unknown 9xxx instruction
$C34    $BE5D   JP       V0, $E5D        ; Jump to V0 + E5D
$C36    $DCD7   DRW      VC, VD, #7      ; Draw 7-byte sprite at VC, VD
$C38    $501A   UNKNOWN  $501A           ; Unknown 5xxx instruction
$C3A    $FD53   UNKNOWN  FD53            ; Unknown Fxxx instruction
$C3C    $DB4D   DRW      VB, V4, #D      ; Draw 13-byte sprite at VB, V4
$C3E    $8ECE   SHL      VE              ; VE <<= 1, VF = MSB
$C40    $AD4B   LD       I, $D4B         ; Load D4B into I
$C42    $C813   RND      V8, #13         ; V8 = random & 13
$C44    $8C17   SUBN     VC, V1          ; VC = V1 - VC, VF = !borrow
$C46    $DC81   DRW      VC, V8, #1      ; Draw 1-byte sprite at VC, V8
$C48    $692B   LD       V9, #2B         ; Load 43 into V9
$C4A    $242A   CALL     $42A            ; Call subroutine at 42A
$C4C    $3EA7   SE       VE, #A7         ; Skip if VE == 167
$C4E    $3D5F   SE       VD, #5F         ; Skip if VD == 95
$C50    $C274   RND      V2, #74         ; V2 = random & 74
$C52    $70A6   ADD      V0, #A6         ; Add 166 to V0
$C54    $86E3   XOR      V6, VE          ; V6 ^= VE
$C56    $1864   JP       $864            ; Jump to 864
$C58    $D6FF   DRW      V6, VF, #F      ; Draw 15-byte sprite at V6, VF
$C5A    $7A0B   ADD      VA, #0B         ; Add 11 to VA
$C5C    $FC31   UNKNOWN  FC31            ; Unknown Fxxx instruction
$C5E    $2EEE   CALL     $EEE            ; Call subroutine at EEE
$C60    $D5BC   DRW      V5, VB, #C      ; Draw 12-byte sprite at V5, VB
$C62    $F465   LD       V4, [I]         ; Load V0-V4 from I
$C64    $19D1   JP       $9D1            ; Jump to 9D1
$C66    $D5E5   DRW      V5, VE, #5      ; Draw 5-byte sprite at V5, VE
$C68    $C0A5   RND      V0, #A5         ; V0 = random & A5
$C6A    $EF5C   UNKNOWN  $EF5C           ; Unknown Exxx instruction
$C6C    $5397   UNKNOWN  $5397           ; Unknown 5xxx instruction
$C6E    $1CB1   JP       $CB1            ; Jump to CB1
$C70    $F52D   UNKNOWN  F52D            ; Unknown Fxxx instruction
$C72    $69B3   LD       V9, #B3         ; Load 179 into V9
$C74    $6041   LD       V0, #41         ; Load 65 into V0
$C76    $6461   LD       V4, #61         ; Load 97 into V4
$C78    $AA0E   LD       I, $A0E         ; Load A0E into I
$C7A    $F78D   UNKNOWN  F78D            ; Unknown Fxxx instruction
$C7C    $9295   UNKNOWN  $9295           ; Unknown 9xxx instruction
$C7E    $D8CF   DRW      V8, VC, #F      ; Draw 15-byte sprite at V8, VC
$C80    $00EF   SYS      $0EF            ; System call to 0EF
$C82    $8FFF   UNKNOWN  8FFF            ; Unknown 8xxx instruction
$C84    $1CCB   JP       $CCB            ; Jump to CCB
$C86    $7E2B   ADD      VE, #2B         ; Add 43 to VE
$C88    $20B7   CALL     $0B7            ; Call subroutine at 0B7
$C8A    $E228   UNKNOWN  $E228           ; Unknown Exxx instruction
$C8C    $9FA1   UNKNOWN  $9FA1           ; Unknown 9xxx instruction
$C8E    $504E   UNKNOWN  $504E           ; Unknown 5xxx instruction
$C90    $55F5   UNKNOWN  $55F5           ; Unknown 5xxx instruction
$C92    $1315   JP       $315            ; Jump to 315
$C94    $A0B2   LD       I, $0B2         ; Load 0B2 into I
$C96    $BF3F   JP       V0, $F3F        ; Jump to V0 + F3F
$C98    $BF9E   JP       V0, $F9E        ; Jump to V0 + F9E
$C9A    $367F   SE       V6, #7F         ; Skip if V6 == 127
$C9C    $04CB   SYS      $4CB            ; System call to 4CB
$C9E    $4B54   SNE      VB, #54         ; Skip if VB != 84
$CA0    $36E3   SE       V6, #E3         ; Skip if V6 == 227
$CA2    $CD02   RND      VD, #02         ; VD = random & 02
$CA4    $378A   SE       V7, #8A         ; Skip if V7 == 138
$CA6    $97E8   UNKNOWN  $97E8           ; Unknown 9xxx instruction
$CA8    $07AB   SYS      $7AB            ; System call to 7AB
$CAA    $DF56   DRW      VF, V5, #6      ; Draw 6-byte sprite at VF, V5
$CAC    $2AC0   CALL     $AC0            ; Call subroutine at AC0
$CAE    $680C   LD       V8, #0C         ; Load 12 into V8
$CB0    $3DE0   SE       VD, #E0         ; Skip if VD == 224
$CB2    $0BE8   SYS      $BE8            ; System call to BE8
$CB4    $3887   SE       V8, #87         ; Skip if V8 == 135
$CB6    $91DA   UNKNOWN  $91DA           ; Unknown 9xxx instruction
$CB8    $9436   UNKNOWN  $9436           ; Unknown 9xxx instruction
$CBA    $2C6E   CALL     $C6E            ; Call subroutine at C6E
$CBC    $72D2   ADD      V2, #D2         ; Add 210 to V2
$CBE    $711F   ADD      V1, #1F         ; Add 31 to V1
$CC0    $5129   UNKNOWN  $5129           ; Unknown 5xxx instruction
$CC2    $5C7C   UNKNOWN  $5C7C           ; Unknown 5xxx instruction
$CC4    $C5E5   RND      V5, #E5         ; V5 = random & E5
$CC6    $BAB2   JP       V0, $AB2        ; Jump to V0 + AB2
$CC8    $3299   SE       V2, #99         ; Skip if V2 == 153
$CCA    $B308   JP       V0, $308        ; Jump to V0 + 308
$CCC    $2DD0   CALL     $DD0            ; Call subroutine at DD0
$CCE    $A6C0   LD       I, $6C0         ; Load 6C0 into I
$CD0    $135C   JP       $35C            ; Jump to 35C
$CD2    $66F1   LD       V6, #F1         ; Load 241 into V6
$CD4    $7BAC   ADD      VB, #AC         ; Add 172 to VB
$CD6    $9EC2   UNKNOWN  $9EC2           ; Unknown 9xxx instruction
$CD8    $8EEE   SHL      VE              ; VE <<= 1, VF = MSB
$CDA    $EBC9   UNKNOWN  $EBC9           ; Unknown Exxx instruction
$CDC    $2004   CALL     $004            ; Call subroutine at 004
$CDE    $4A7D   SNE      VA, #7D         ; Skip if VA != 125
$CE0    $A177   LD       I, $177         ; Load 177 into I
$CE2    $81CF   UNKNOWN  81CF            ; Unknown 8xxx instruction
$CE4    $57A3   UNKNOWN  $57A3           ; Unknown 5xxx instruction
$CE6    $073C   SYS      $73C            ; System call to 73C
$CE8    $96BA   UNKNOWN  $96BA           ; Unknown 9xxx instruction
$CEA    $6E8A   LD       VE, #8A         ; Load 138 into VE
$CEC    $5A2D   UNKNOWN  $5A2D           ; Unknown 5xxx instruction
$CEE    $1B97   JP       $B97            ; Jump to B97
$CF0    $21B8   CALL     $1B8            ; Call subroutine at 1B8
$CF2    $EB6A   UNKNOWN  $EB6A           ; Unknown Exxx instruction
$CF4    $BFF9   JP       V0, $FF9        ; Jump to V0 + FF9
$CF6    $E231   UNKNOWN  $E231           ; Unknown Exxx instruction
$CF8    $434E   SNE      V3, #4E         ; Skip if V3 != 78
$CFA    $EC96   UNKNOWN  $EC96           ; Unknown Exxx instruction
$CFC    $3AD6   SE       VA, #D6         ; Skip if VA == 214
$CFE    $922E   UNKNOWN  $922E           ; Unknown 9xxx instruction
$D00    $1DAF   JP       $DAF            ; Jump to DAF
$D02    $52FE   UNKNOWN  $52FE           ; Unknown 5xxx instruction
$D04    $0558   SYS      $558            ; System call to 558
$D06    $5B32   UNKNOWN  $5B32           ; Unknown 5xxx instruction
$D08    $33C4   SE       V3, #C4         ; Skip if V3 == 196
$D0A    $6737   LD       V7, #37         ; Load 55 into V7
$D0C    $AF4B   LD       I, $F4B         ; Load F4B into I
$D0E    $4E07   SNE      VE, #07         ; Skip if VE != 7
$D10    $E7E5   UNKNOWN  $E7E5           ; Unknown Exxx instruction
$D12    $2E76   CALL     $E76            ; Call subroutine at E76
$D14    $280F   CALL     $80F            ; Call subroutine at 80F
$D16    $D0C4   DRW      V0, VC, #4      ; Draw 4-byte sprite at V0, VC
$D18    $A551   LD       I, $551         ; Load 551 into I
$D1A    $37A4   SE       V7, #A4         ; Skip if V7 == 164
$D1C    $5C46   UNKNOWN  $5C46           ; Unknown 5xxx instruction
$D1E    $855B   UNKNOWN  855B            ; Unknown 8xxx instruction
$D20    $3862   SE       V8, #62         ; Skip if V8 == 98
$D22    $069D   SYS      $69D            ; System call to 69D
$D24    $6B16   LD       VB, #16         ; Load 22 into VB
$D26    $32AB   SE       V2, #AB         ; Skip if V2 == 171
$D28    $F27C   UNKNOWN  F27C            ; Unknown Fxxx instruction
$D2A    $E3F5   UNKNOWN  $E3F5           ; Unknown Exxx instruction
$D2C    $DC8C   DRW      VC, V8, #C      ; Draw 12-byte sprite at VC, V8
$D2E    $20DF   CALL     $0DF            ; Call subroutine at 0DF
$D30    $EBF6   UNKNOWN  $EBF6           ; Unknown Exxx instruction
$D32    $8644   ADD      V6, V4          ; V6 += V4, VF = carry
$D34    $504D   UNKNOWN  $504D           ; Unknown 5xxx instruction
$D36    $60E7   LD       V0, #E7         ; Load 231 into V0
$D38    $0EE3   SYS      $EE3            ; System call to EE3
$D3A    $51FC   UNKNOWN  $51FC           ; Unknown 5xxx instruction
$D3C    $19DE   JP       $9DE            ; Jump to 9DE
$D3E    $6B71   LD       VB, #71         ; Load 113 into VB
$D40    $063E   SYS      $63E            ; System call to 63E
$D42    $6A20   LD       VA, #20         ; Load 32 into VA
$D44    $D233   DRW      V2, V3, #3      ; Draw 3-byte sprite at V2, V3
$D46    $526F   UNKNOWN  $526F           ; Unknown 5xxx instruction
$D48    $11A3   JP       $1A3            ; Jump to 1A3
$D4A    $4D1E   SNE      VD, #1E         ; Skip if VD != 30
$D4C    $7B40   ADD      VB, #40         ; Add 64 to VB
$D4E    $D20A   DRW      V2, V0, #A      ; Draw 10-byte sprite at V2, V0
$D50    $FE31   UNKNOWN  FE31            ; Unknown Fxxx instruction
$D52    $DAD4   DRW      VA, VD, #4      ; Draw 4-byte sprite at VA, VD
$D54    $A596   LD       I, $596         ; Load 596 into I
$D56    $FB3D   UNKNOWN  FB3D            ; Unknown Fxxx instruction
$D58    $BCC5   JP       V0, $CC5        ; Jump to V0 + CC5
$D5A    $9281   UNKNOWN  $9281           ; Unknown 9xxx instruction
$D5C    $6A5F   LD       VA, #5F         ; Load 95 into VA
$D5E    $BBB1   JP       V0, $BB1        ; Jump to V0 + BB1
$D60    $AE51   LD       I, $E51         ; Load E51 into I
$D62    $E3A6   UNKNOWN  $E3A6           ; Unknown Exxx instruction
$D64    $F3BE   UNKNOWN  F3BE            ; Unknown Fxxx instruction
$D66    $32EB   SE       V2, #EB         ; Skip if V2 == 235
$D68    $05B5   SYS      $5B5            ; System call to 5B5
$D6A    $77AF   ADD      V7, #AF         ; Add 175 to V7
$D6C    $1F19   JP       $F19            ; Jump to F19
$D6E    $35B8   SE       V5, #B8         ; Skip if V5 == 184
$D70    $08D0   SYS      $8D0            ; System call to 8D0
$D72    $1357   JP       $357            ; Jump to 357
$D74    $2C36   CALL     $C36            ; Call subroutine at C36
$D76    $0B95   SYS      $B95            ; System call to B95
$D78    $2BBA   CALL     $BBA            ; Call subroutine at BBA
$D7A    $3549   SE       V5, #49         ; Skip if V5 == 73
$D7C    $0AAD   SYS      $AAD            ; System call to AAD
$D7E    $8689   UNKNOWN  8689            ; Unknown 8xxx instruction
$D80    $778F   ADD      V7, #8F         ; Add 143 to V7
$D82    $10DC   JP       $0DC            ; Jump to 0DC
$D84    $AA82   LD       I, $A82         ; Load A82 into I
$D86    $AE1A   LD       I, $E1A         ; Load E1A into I
$D88    $F1F4   UNKNOWN  F1F4            ; Unknown Fxxx instruction
$D8A    $25A6   CALL     $5A6            ; Call subroutine at 5A6
$D8C    $1E5B   JP       $E5B            ; Jump to E5B
$D8E    $5C2E   UNKNOWN  $5C2E           ; Unknown 5xxx instruction
$D90    $DC35   DRW      VC, V3, #5      ; Draw 5-byte sprite at VC, V3
$D92    $8B4A   UNKNOWN  8B4A            ; Unknown 8xxx instruction
$D94    $99C6   UNKNOWN  $99C6           ; Unknown 9xxx instruction
$D96    $1419   JP       $419            ; Jump to 419
$D98    $5AB8   UNKNOWN  $5AB8           ; Unknown 5xxx instruction
$D9A    $5FE3   UNKNOWN  $5FE3           ; Unknown 5xxx instruction
$D9C    $D980   DRW      V9, V8, #0      ; Draw 0-byte sprite at V9, V8
$D9E    $FC8D   UNKNOWN  FC8D            ; Unknown Fxxx instruction
$DA0    $EA84   UNKNOWN  $EA84           ; Unknown Exxx instruction
$DA2    $A12E   LD       I, $12E         ; Load 12E into I
$DA4    $FC5E   UNKNOWN  FC5E            ; Unknown Fxxx instruction
$DA6    $AFF2   LD       I, $FF2         ; Load FF2 into I
$DA8    $E685   UNKNOWN  $E685           ; Unknown Exxx instruction
$DAA    $3829   SE       V8, #29         ; Skip if V8 == 41
$DAC    $9D7D   UNKNOWN  $9D7D           ; Unknown 9xxx instruction
$DAE    $B87F   JP       V0, $87F        ; Jump to V0 + 87F
$DB0    $5D45   UNKNOWN  $5D45           ; Unknown 5xxx instruction
$DB2    $BC4C   JP       V0, $C4C        ; Jump to V0 + C4C
$DB4    $53CC   UNKNOWN  $53CC           ; Unknown 5xxx instruction
$DB6    $9577   UNKNOWN  $9577           ; Unknown 9xxx instruction
$DB8    $70A3   ADD      V0, #A3         ; Add 163 to V0
$DBA    $8069   UNKNOWN  8069            ; Unknown 8xxx instruction
$DBC    $D636   DRW      V6, V3, #6      ; Draw 6-byte sprite at V6, V3
$DBE    $6C0A   LD       VC, #0A         ; Load 10 into VC
$DC0    $283A   CALL     $83A            ; Call subroutine at 83A
$DC2    $F3A8   UNKNOWN  F3A8            ; Unknown Fxxx instruction
$DC4    $DBF0   DRW      VB, VF, #0      ; Draw 0-byte sprite at VB, VF
$DC6    $6AB6   LD       VA, #B6         ; Load 182 into VA
$DC8    $404E   SNE      V0, #4E         ; Skip if V0 != 78
$DCA    $4501   SNE      V5, #01         ; Skip if V5 != 1
$DCC    $0206   SYS      $206            ; System call to 206
$DCE    $2F65   CALL     $F65            ; Call subroutine at F65
$DD0    $CFA9   RND      VF, #A9         ; VF = random & A9
$DD2    $5FC5   UNKNOWN  $5FC5           ; Unknown 5xxx instruction
$DD4    $1AFA   JP       $AFA            ; Jump to AFA
$DD6    $2246   CALL     $246            ; Call subroutine at 246
$DD8    $7079   ADD      V0, #79         ; Add 121 to V0
$DDA    $6703   LD       V7, #03         ; Load 3 into V7
$DDC    $F8A4   UNKNOWN  F8A4            ; Unknown Fxxx instruction
$DDE    $E536   UNKNOWN  $E536           ; Unknown Exxx instruction
$DE0    $5A1D   UNKNOWN  $5A1D           ; Unknown 5xxx instruction
$DE2    $C22D   RND      V2, #2D         ; V2 = random & 2D
$DE4    $E4FF   UNKNOWN  $E4FF           ; Unknown Exxx instruction
$DE6    $E2A6   UNKNOWN  $E2A6           ; Unknown Exxx instruction
$DE8    $67F4   LD       V7, #F4         ; Load 244 into V7
$DEA    $14D6   JP       $4D6            ; Jump to 4D6
$DEC    $9FB2   UNKNOWN  $9FB2           ; Unknown 9xxx instruction
$DEE    $E660   UNKNOWN  $E660           ; Unknown Exxx instruction
$DF0    $C0FA   RND      V0, #FA         ; V0 = random & FA
$DF2    $383D   SE       V8, #3D         ; Skip if V8 == 61
$DF4    $0177   SYS      $177            ; System call to 177
$DF6    $A30C   LD       I, $30C         ; Load 30C into I
$DF8    $5577   UNKNOWN  $5577           ; Unknown 5xxx instruction
$DFA    $6A3B   LD       VA, #3B         ; Load 59 into VA
$DFC    $1073   JP       $073            ; Jump to 073
$DFE    $898C   UNKNOWN  898C            ; Unknown 8xxx instruction
$E00    $616E   LD       V1, #6E         ; Load 110 into V1
$E02    $BF71   JP       V0, $F71        ; Jump to V0 + F71
$E04    $EFF7   UNKNOWN  $EFF7           ; Unknown Exxx instruction
$E06    $311C   SE       V1, #1C         ; Skip if V1 == 28
$E08    $2354   CALL     $354            ; Call subroutine at 354
$E0A    $5E7E   UNKNOWN  $5E7E           ; Unknown 5xxx instruction
$E0C    $BF23   JP       V0, $F23        ; Jump to V0 + F23
$E0E    $97E0   SNE      V7, VE          ; Skip if V7 != VE
$E10    $2A77   CALL     $A77            ; Call subroutine at A77
$E12    $4E2A   SNE      VE, #2A         ; Skip if VE != 42
$E14    $A58E   LD       I, $58E         ; Load 58E into I
$E16    $5415   UNKNOWN  $5415           ; Unknown 5xxx instruction
$E18    $7B18   ADD      VB, #18         ; Add 24 to VB
$E1A    $A6B6   LD       I, $6B6         ; Load 6B6 into I
$E1C    $4E86   SNE      VE, #86         ; Skip if VE != 134
$E1E    $06E5   SYS      $6E5            ; System call to 6E5
$E20    $B243   JP       V0, $243        ; Jump to V0 + 243
$E22    $68AD   LD       V8, #AD         ; Load 173 into V8
$E24    $0AB5   SYS      $AB5            ; System call to AB5
$E26    $CF6B   RND      VF, #6B         ; VF = random & 6B
$E28    $DE54   DRW      VE, V5, #4      ; Draw 4-byte sprite at VE, V5
$E2A    $1ECB   JP       $ECB            ; Jump to ECB
$E2C    $7B1A   ADD      VB, #1A         ; Add 26 to VB
$E2E    $2CC0   CALL     $CC0            ; Call subroutine at CC0
$E30    $F4CC   UNKNOWN  F4CC            ; Unknown Fxxx instruction
$E32    $0BC0   SYS      $BC0            ; System call to BC0
$E34    $6EF7   LD       VE, #F7         ; Load 247 into VE
$E36    $C162   RND      V1, #62         ; V1 = random & 62
$E38    $B143   JP       V0, $143        ; Jump to V0 + 143
$E3A    $B262   JP       V0, $262        ; Jump to V0 + 262
$E3C    $ECA2   UNKNOWN  $ECA2           ; Unknown Exxx instruction
$E3E    $46F1   SNE      V6, #F1         ; Skip if V6 != 241
$E40    $7614   ADD      V6, #14         ; Add 20 to V6
$E42    $E9DE   UNKNOWN  $E9DE           ; Unknown Exxx instruction
$E44    $9D38   UNKNOWN  $9D38           ; Unknown 9xxx instruction
$E46    $D1BD   DRW      V1, VB, #D      ; Draw 13-byte sprite at V1, VB
$E48    $A905   LD       I, $905         ; Load 905 into I
$E4A    $042F   SYS      $42F            ; System call to 42F
$E4C    $164D   JP       $64D            ; Jump to 64D
$E4E    $0546   SYS      $546            ; System call to 546
$E50    $3B1C   SE       VB, #1C         ; Skip if VB == 28
$E52    $434D   SNE      V3, #4D         ; Skip if V3 != 77
$E54    $7535   ADD      V5, #35         ; Add 53 to V5
$E56    $DBC0   DRW      VB, VC, #0      ; Draw 0-byte sprite at VB, VC
$E58    $54BB   UNKNOWN  $54BB           ; Unknown 5xxx instruction
$E5A    $B986   JP       V0, $986        ; Jump to V0 + 986
$E5C    $FC4A   UNKNOWN  FC4A            ; Unknown Fxxx instruction
$E5E    $FA77   UNKNOWN  FA77            ; Unknown Fxxx instruction
$E60    $F736   UNKNOWN  F736            ; Unknown Fxxx instruction
$E62    $2696   CALL     $696            ; Call subroutine at 696
$E64    $A184   LD       I, $184         ; Load 184 into I
$E66    $E18C   UNKNOWN  $E18C           ; Unknown Exxx instruction
$E68    $A55F   LD       I, $55F         ; Load 55F into I
$E6A    $CAB5   RND      VA, #B5         ; VA = random & B5
$E6C    $4818   SNE      V8, #18         ; Skip if V8 != 24
$E6E    $C1BF   RND      V1, #BF         ; V1 = random & BF
$E70    $A346   LD       I, $346         ; Load 346 into I
$E72    $51F2   UNKNOWN  $51F2           ; Unknown 5xxx instruction
$E74    $51C4   UNKNOWN  $51C4           ; Unknown 5xxx instruction
$E76    $9AC2   UNKNOWN  $9AC2           ; Unknown 9xxx instruction
$E78    $94EC   UNKNOWN  $94EC           ; Unknown 9xxx instruction
$E7A    $B837   JP       V0, $837        ; Jump to V0 + 837
$E7C    $864D   UNKNOWN  864D            ; Unknown 8xxx instruction
$E7E    $AC07   LD       I, $C07         ; Load C07 into I
$E80    $9E5E   UNKNOWN  $9E5E           ; Unknown 9xxx instruction
$E82    $834B   UNKNOWN  834B            ; Unknown 8xxx instruction
$E84    $A94F   LD       I, $94F         ; Load 94F into I
$E86    $7E55   ADD      VE, #55         ; Add 85 to VE
$E88    $BD0A   JP       V0, $D0A        ; Jump to V0 + D0A
$E8A    $8A75   SUB      VA, V7          ; VA -= V7, VF = !borrow
$E8C    $0CC6   SYS      $CC6            ; System call to CC6
$E8E    $65C2   LD       V5, #C2         ; Load 194 into V5
$E90    $A518   LD       I, $518         ; Load 518 into I
$E92    $1FD0   JP       $FD0            ; Jump to FD0
$E94    $CB2F   RND      VB, #2F         ; VB = random & 2F
$E96    $6C71   LD       VC, #71         ; Load 113 into VC
$E98    $E10E   UNKNOWN  $E10E           ; Unknown Exxx instruction
$E9A    $6671   LD       V6, #71         ; Load 113 into V6
$E9C    $2206   CALL     $206            ; Call subroutine at 206
$E9E    $1349   JP       $349            ; Jump to 349
$EA0    $CE3A   RND      VE, #3A         ; VE = random & 3A
$EA2    $5C42   UNKNOWN  $5C42           ; Unknown 5xxx instruction
$EA4    $FD12   UNKNOWN  FD12            ; Unknown Fxxx instruction
$EA6    $5FB8   UNKNOWN  $5FB8           ; Unknown 5xxx instruction
$EA8    $88C7   SUBN     V8, VC          ; V8 = VC - V8, VF = !borrow
$EAA    $05FA   SYS      $5FA            ; System call to 5FA
$EAC    $6AA3   LD       VA, #A3         ; Load 163 into VA
$EAE    $9DAD   UNKNOWN  $9DAD           ; Unknown 9xxx instruction
$EB0    $2150   CALL     $150            ; Call subroutine at 150
$EB2    $388E   SE       V8, #8E         ; Skip if V8 == 142
$EB4    $0BFD   SYS      $BFD            ; System call to BFD
$EB6    $B95D   JP       V0, $95D        ; Jump to V0 + 95D
$EB8    $5F44   UNKNOWN  $5F44           ; Unknown 5xxx instruction
$EBA    $300C   SE       V0, #0C         ; Skip if V0 == 12
$EBC    $68AA   LD       V8, #AA         ; Load 170 into V8
$EBE    $2734   CALL     $734            ; Call subroutine at 734
$EC0    $8D61   OR       VD, V6          ; VD |= V6
$EC2    $6848   LD       V8, #48         ; Load 72 into V8
$EC4    $8923   XOR      V9, V2          ; V9 ^= V2
$EC6    $D2CB   DRW      V2, VC, #B      ; Draw 11-byte sprite at V2, VC
$EC8    $CC06   RND      VC, #06         ; VC = random & 06
$ECA    $FF23   UNKNOWN  FF23            ; Unknown Fxxx instruction
$ECC    $92DC   UNKNOWN  $92DC           ; Unknown 9xxx instruction
$ECE    $45EA   SNE      V5, #EA         ; Skip if V5 != 234
$ED0    $D8A7   DRW      V8, VA, #7      ; Draw 7-byte sprite at V8, VA
$ED2    $24FC   CALL     $4FC            ; Call subroutine at 4FC
$ED4    $D19E   DRW      V1, V9, #E      ; Draw 14-byte sprite at V1, V9
$ED6    $E3CA   UNKNOWN  $E3CA           ; Unknown Exxx instruction
$ED8    $6DCD   LD       VD, #CD         ; Load 205 into VD
$EDA    $1423   JP       $423            ; Jump to 423
$EDC    $2B6A   CALL     $B6A            ; Call subroutine at B6A
$EDE    $912F   UNKNOWN  $912F           ; Unknown 9xxx instruction
$EE0    $9949   UNKNOWN  $9949           ; Unknown 9xxx instruction
$EE2    $BEEF   JP       V0, $EEF        ; Jump to V0 + EEF
$EE4    $5CC9   UNKNOWN  $5CC9           ; Unknown 5xxx instruction
$EE6    $57BA   UNKNOWN  $57BA           ; Unknown 5xxx instruction
$EE8    $28AC   CALL     $8AC            ; Call subroutine at 8AC
$EEA    $AAF0   LD       I, $AF0         ; Load AF0 into I
$EEC    $CD8F   RND      VD, #8F         ; VD = random & 8F
$EEE    $9BF1   UNKNOWN  $9BF1           ; Unknown 9xxx instruction
$EF0    $CF2D   RND      VF, #2D         ; VF = random & 2D
$EF2    $9B9D   UNKNOWN  $9B9D           ; Unknown 9xxx instruction
$EF4    $C72A   RND      V7, #2A         ; V7 = random & 2A
$EF6    $0D69   SYS      $D69            ; System call to D69
$EF8    $6DAC   LD       VD, #AC         ; Load 172 into VD
$EFA    $BE05   JP       V0, $E05        ; Jump to V0 + E05
$EFC    $8924   ADD      V9, V2          ; V9 += V2, VF = carry
$EFE    $9312   UNKNOWN  $9312           ; Unknown 9xxx instruction
$F00    $80C6   SHR      V0              ; V0 >>= 1, VF = LSB
$F02    $CB8D   RND      VB, #8D         ; VB = random & 8D
$F04    $5EAC   UNKNOWN  $5EAC           ; Unknown 5xxx instruction
$F06    $5B8E   UNKNOWN  $5B8E           ; Unknown 5xxx instruction
$F08    $3D9E   SE       VD, #9E         ; Skip if VD == 158
$F0A    $D50D   DRW      V5, V0, #D      ; Draw 13-byte sprite at V5, V0
$F0C    $9170   SNE      V1, V7          ; Skip if V1 != V7
$F0E    $5B00   SE       VB, V0          ; Skip if VB == V0
$F10    $6810   LD       V8, #10         ; Load 16 into V8
$F12    $10F2   JP       $0F2            ; Jump to 0F2
$F14    $0C55   SYS      $C55            ; System call to C55
$F16    $9C3A   UNKNOWN  $9C3A           ; Unknown 9xxx instruction
$F18    $2EB1   CALL     $EB1            ; Call subroutine at EB1
$F1A    $3CBE   SE       VC, #BE         ; Skip if VC == 190
$F1C    $F73C   UNKNOWN  F73C            ; Unknown Fxxx instruction
$F1E    $C070   RND      V0, #70         ; V0 = random & 70
$F20    $5173   UNKNOWN  $5173           ; Unknown 5xxx instruction
$F22    $09CC   SYS      $9CC            ; System call to 9CC
$F24    $E783   UNKNOWN  $E783           ; Unknown Exxx instruction
$F26    $CBB8   RND      VB, #B8         ; VB = random & B8
$F28    $3CD8   SE       VC, #D8         ; Skip if VC == 216
$F2A    $1D1E   JP       $D1E            ; Jump to D1E
$F2C    $8F54   ADD      VF, V5          ; VF += V5, VF = carry
$F2E    $012A   SYS      $12A            ; System call to 12A
$F30    $42E4   SNE      V2, #E4         ; Skip if V2 != 228
$F32    $3E0F   SE       VE, #0F         ; Skip if VE == 15
$F34    $4790   SNE      V7, #90         ; Skip if V7 != 144
$F36    $7764   ADD      V7, #64         ; Add 100 to V7
$F38    $87B8   UNKNOWN  87B8            ; Unknown 8xxx instruction
$F3A    $2C35   CALL     $C35            ; Call subroutine at C35
$F3C    $FDB7   UNKNOWN  FDB7            ; Unknown Fxxx instruction
$F3E    $95AF   UNKNOWN  $95AF           ; Unknown 9xxx instruction
$F40    $CA01   RND      VA, #01         ; VA = random & 01
$F42    $2D79   CALL     $D79            ; Call subroutine at D79
$F44    $DC84   DRW      VC, V8, #4      ; Draw 4-byte sprite at VC, V8
$F46    $4154   SNE      V1, #54         ; Skip if V1 != 84
$F48    $2768   CALL     $768            ; Call subroutine at 768
$F4A    $E199   UNKNOWN  $E199           ; Unknown Exxx instruction
$F4C    $5D78   UNKNOWN  $5D78           ; Unknown 5xxx instruction
$F4E    $A07A   LD       I, $07A         ; Load 07A into I
$F50    $BA90   JP       V0, $A90        ; Jump to V0 + A90
$F52    $3F5A   SE       VF, #5A         ; Skip if VF == 90
$F54    $A659   LD       I, $659         ; Load 659 into I
$F56    $10C6   JP       $0C6            ; Jump to 0C6
$F58    $3F7B   SE       VF, #7B         ; Skip if VF == 123
$F5A    $B532   JP       V0, $532        ; Jump to V0 + 532
$F5C    $0042   SYS      $042            ; System call to 042
$F5E    $DB73   DRW      VB, V7, #3      ; Draw 3-byte sprite at VB, V7
$F60    $9217   UNKNOWN  $9217           ; Unknown 9xxx instruction
$F62    $90A9   UNKNOWN  $90A9           ; Unknown 9xxx instruction
$F64    $8641   OR       V6, V4          ; V6 |= V4
$F66    $804F   UNKNOWN  804F            ; Unknown 8xxx instruction
$F68    $AFE4   LD       I, $FE4         ; Load FE4 into I
$F6A    $5B14   UNKNOWN  $5B14           ; Unknown 5xxx instruction
$F6C    $151A   JP       $51A            ; Jump to 51A
$F6E    $53AE   UNKNOWN  $53AE           ; Unknown 5xxx instruction
$F70    $509A   UNKNOWN  $509A           ; Unknown 5xxx instruction
$F72    $E75A   UNKNOWN  $E75A           ; Unknown Exxx instruction
$F74    $F22A   UNKNOWN  F22A            ; Unknown Fxxx instruction
$F76    $9D3D   UNKNOWN  $9D3D           ; Unknown 9xxx instruction
$F78    $6FBF   LD       VF, #BF         ; Load 191 into VF
$F7A    $8360   LD       V3, V6          ; V3 = V6
$F7C    $2F46   CALL     $F46            ; Call subroutine at F46
$F7E    $6B87   LD       VB, #87         ; Load 135 into VB
$F80    $2DDB   CALL     $DDB            ; Call subroutine at DDB
$F82    $EE42   UNKNOWN  $EE42           ; Unknown Exxx instruction
$F84    $6B21   LD       VB, #21         ; Load 33 into VB
$F86    $29D0   CALL     $9D0            ; Call subroutine at 9D0
$F88    $7637   ADD      V6, #37         ; Add 55 to V6
$F8A    $55FF   UNKNOWN  $55FF           ; Unknown 5xxx instruction
$F8C    $77BE   ADD      V7, #BE         ; Add 190 to V7
$F8E    $25AA   CALL     $5AA            ; Call subroutine at 5AA
$F90    $C17F   RND      V1, #7F         ; V1 = random & 7F
$F92    $EFAA   UNKNOWN  $EFAA           ; Unknown Exxx instruction
$F94    $D9BD   DRW      V9, VB, #D      ; Draw 13-byte sprite at V9, VB
$F96    $B4B6   JP       V0, $4B6        ; Jump to V0 + 4B6
$F98    $4EF7   SNE      VE, #F7         ; Skip if VE != 247
$F9A    $2F17   CALL     $F17            ; Call subroutine at F17
$F9C    $66E2   LD       V6, #E2         ; Load 226 into V6
$F9E    $EE07   UNKNOWN  $EE07           ; Unknown Exxx instruction
$FA0    $3E06   SE       VE, #06         ; Skip if VE == 6
$FA2    $9173   UNKNOWN  $9173           ; Unknown 9xxx instruction
$FA4    $FE04   UNKNOWN  FE04            ; Unknown Fxxx instruction
$FA6    $A31C   LD       I, $31C         ; Load 31C into I
$FA8    $D7E2   DRW      V7, VE, #2      ; Draw 2-byte sprite at V7, VE
$FAA    $EEF6   UNKNOWN  $EEF6           ; Unknown Exxx instruction
$FAC    $EA31   UNKNOWN  $EA31           ; Unknown Exxx instruction
$FAE    $A67D   LD       I, $67D         ; Load 67D into I
$FB0    $BCCC   JP       V0, $CCC        ; Jump to V0 + CCC
$FB2    $0654   SYS      $654            ; System call to 654
$FB4    $F350   UNKNOWN  F350            ; Unknown Fxxx instruction
$FB6    $328F   SE       V2, #8F         ; Skip if V2 == 143
$FB8    $3AD1   SE       VA, #D1         ; Skip if VA == 209
$FBA    $984B   UNKNOWN  $984B           ; Unknown 9xxx instruction
$FBC    $C9D6   RND      V9, #D6         ; V9 = random & D6
$FBE    $5F85   UNKNOWN  $5F85           ; Unknown 5xxx instruction
$FC0    $E6C1   UNKNOWN  $E6C1           ; Unknown Exxx instruction
$FC2    $B553   JP       V0, $553        ; Jump to V0 + 553
$FC4    $EFA1   SKNP     VF              ; Skip if key VF not pressed
$FC6    $22BA   CALL     $2BA            ; Call subroutine at 2BA
$FC8    $F2DB   UNKNOWN  F2DB            ; Unknown Fxxx instruction
$FCA    $FDD1   UNKNOWN  FDD1            ; Unknown Fxxx instruction
$FCC    $230C   CALL     $30C            ; Call subroutine at 30C
$FCE    $96D8   UNKNOWN  $96D8           ; Unknown 9xxx instruction
$FD0    $7280   ADD      V2, #80         ; Add 128 to V2
$FD2    $92B8   UNKNOWN  $92B8           ; Unknown 9xxx instruction
$FD4    $75A9   ADD      V5, #A9         ; Add 169 to V5
$FD6    $1C59   JP       $C59            ; Jump to C59
$FD8    $B76D   JP       V0, $76D        ; Jump to V0 + 76D
$FDA    $F3D9   UNKNOWN  F3D9            ; Unknown Fxxx instruction
$FDC    $6243   LD       V2, #43         ; Load 67 into V2
$FDE    $E62C   UNKNOWN  $E62C           ; Unknown Exxx instruction
$FE0    $4067   SNE      V0, #67         ; Skip if V0 != 103
$FE2    $18B2   JP       $8B2            ; Jump to 8B2
$FE4    $46D9   SNE      V6, #D9         ; Skip if V6 != 217
$FE6    $A2DF   LD       I, $2DF         ; Load 2DF into I
$FE8    $91CC   UNKNOWN  $91CC           ; Unknown 9xxx instruction
$FEA    $E45D   UNKNOWN  $E45D           ; Unknown Exxx instruction
$FEC    $71F9   ADD      V1, #F9         ; Add 249 to V1
$FEE    $0A2F   SYS      $A2F            ; System call to A2F
$FF0    $655F   LD       V5, #5F         ; Load 95 into V5
$FF2    $2B01   CALL     $B01            ; Call subroutine at B01
$FF4    $2F0E   CALL     $F0E            ; Call subroutine at F0E
$FF6    $27BD   CALL     $7BD            ; Call subroutine at 7BD
$FF8    $5F1C   UNKNOWN  $5F1C           ; Unknown 5xxx instruction
$FFA    $C411   RND      V4, #11         ; V4 = random & 11
$FFC    $41F9   SNE      V1, #F9         ; Skip if V1 != 249
$FFE    $CD9F   RND      VD, #9F         ; VD = random & 9F

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 506 (28.2%)
  LD      : 233 (13.0%)
  JP      : 216 (12.1%)
  CALL    : 131 ( 7.3%)
  SNE     : 119 ( 6.6%)
  SYS     : 118 ( 6.6%)
  RND     : 107 ( 6.0%)
  SE      : 107 ( 6.0%)
  DRW     : 104 ( 5.8%)
  ADD     : 103 ( 5.7%)
  SUBN    :  12 ( 0.7%)
  SHL     :   7 ( 0.4%)
  OR      :   7 ( 0.4%)
  XOR     :   7 ( 0.4%)
  SHR     :   6 ( 0.3%)
  SUB     :   4 ( 0.2%)
  AND     :   2 ( 0.1%)
  SKP     :   2 ( 0.1%)
  SKNP    :   1 ( 0.1%)

Memory Operations: 336 (18.8%)
Arithmetic Operations: 135 (7.5%)
