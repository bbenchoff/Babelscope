
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B7164D01_I38529_C3764_5a782cfdf340.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 7164
Instance: 38529
Direction: ascending
Final Array: [1, 2, 9, 12, 70, 227, 254, 255]
Operations: R:0 W:1 C:321 S:4

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 126
Sort Array References:
  $20A: LD I, $15D ; Load 15D into I
  $21E: LD I, $D46 ; Load D46 into I
  $22C: LD I, $E44 ; Load E44 into I
  $23C: LD I, $BF0 ; Load BF0 into I
  $24E: LD I, $DBD ; Load DBD into I
  $27C: LD I, $7C7 ; Load 7C7 into I
  $288: LD I, $476 ; Load 476 into I
  $294: LD I, $B20 ; Load B20 into I
  $296: LD I, $01A ; Load 01A into I
  $2D4: LD I, $C1A ; Load C1A into I
  $310: LD I, $6A7 ; Load 6A7 into I
  $31E: LD I, $7AD ; Load 7AD into I
  $33A: LD I, $C15 ; Load C15 into I
  $342: LD I, $845 ; Load 845 into I
  $3AE: LD I, $E09 ; Load E09 into I
  $3D2: LD I, $CA9 ; Load CA9 into I
  $3D8: LD I, $1B6 ; Load 1B6 into I
  $3E0: LD I, $A3D ; Load A3D into I
  $3FE: LD I, $E35 ; Load E35 into I
  $400: LD I, $0B8 ; Load 0B8 into I
  $416: LD I, $9DD ; Load 9DD into I
  $428: LD I, $88A ; Load 88A into I
  $430: LD I, $BC0 ; Load BC0 into I
  $432: LD I, $0D7 ; Load 0D7 into I
  $43C: LD I, $41B ; Load 41B into I
  $44C: LD I, $B1D ; Load B1D into I
  $464: LD I, $000 ; Load 000 into I
  $474: LD I, $105 ; Load 105 into I
  $47A: LD I, $90B ; Load 90B into I
  $4B2: LD I, $7FC ; Load 7FC into I
  $4CE: LD I, $4A6 ; Load 4A6 into I
  $548: LD I, $774 ; Load 774 into I
  $556: LD I, $9AA ; Load 9AA into I
  $588: LD I, $92B ; Load 92B into I
  $590: LD I, $ABA ; Load ABA into I
  $596: LD I, $4FD ; Load 4FD into I
  $5A8: LD I, $36A ; Load 36A into I
  $5B4: LD I, $98C ; Load 98C into I
  $5BC: LD I, $568 ; Load 568 into I
  $5E6: LD I, $CAE ; Load CAE into I
  $5F2: LD I, $A36 ; Load A36 into I
  $5FA: LD I, $196 ; Load 196 into I
  $620: LD I, $B22 ; Load B22 into I
  $662: LD I, $45D ; Load 45D into I
  $68C: LD I, $E94 ; Load E94 into I
  $68E: LD I, $DCB ; Load DCB into I
  $69A: LD I, $AB1 ; Load AB1 into I
  $6CA: LD I, $53A ; Load 53A into I
  $6D6: LD I, $700 ; Load 700 into I
  $6F4: LD I, $CFC ; Load CFC into I
  $730: LD I, $D55 ; Load D55 into I
  $756: LD I, $E5A ; Load E5A into I
  $75E: LD I, $6C3 ; Load 6C3 into I
  $768: LD I, $E46 ; Load E46 into I
  $77A: LD I, $57B ; Load 57B into I
  $7D8: LD I, $51A ; Load 51A into I
  $7E2: LD I, $403 ; Load 403 into I
  $7E6: LD I, $CCA ; Load CCA into I
  $808: LD I, $26D ; Load 26D into I
  $87A: LD I, $213 ; Load 213 into I
  $87E: LD I, $A46 ; Load A46 into I
  $882: LD I, $66F ; Load 66F into I
  $88E: LD I, $196 ; Load 196 into I
  $89C: LD I, $522 ; Load 522 into I
  $8BA: LD I, $9F9 ; Load 9F9 into I
  $8E4: LD I, $ABF ; Load ABF into I
  $8EA: LD I, $433 ; Load 433 into I
  $8EE: LD I, $87A ; Load 87A into I
  $8F8: LD I, $880 ; Load 880 into I
  $902: LD I, $21E ; Load 21E into I
  $9A8: LD I, $C47 ; Load C47 into I
  $9B4: LD I, $A24 ; Load A24 into I
  $A08: LD I, $066 ; Load 066 into I
  $A50: LD I, $48A ; Load 48A into I
  $A72: LD I, $1E0 ; Load 1E0 into I
  $A94: LD I, $46C ; Load 46C into I
  $AF0: LD I, $D58 ; Load D58 into I
  $B20: LD I, $1A0 ; Load 1A0 into I
  $B74: LD I, $6AB ; Load 6AB into I
  $B8E: LD I, $5BD ; Load 5BD into I
  $BAC: LD I, $3C7 ; Load 3C7 into I
  $BCC: LD I, $7C6 ; Load 7C6 into I
  $BD2: LD I, $038 ; Load 038 into I
  $BF2: LD I, $B2C ; Load B2C into I
  $C08: LD I, $2A1 ; Load 2A1 into I
  $C0C: LD I, $6D7 ; Load 6D7 into I
  $C14: LD I, $DD7 ; Load DD7 into I
  $C36: LD I, $E46 ; Load E46 into I
  $C3A: LD I, $658 ; Load 658 into I
  $C5E: LD I, $3F4 ; Load 3F4 into I
  $C84: LD I, $63B ; Load 63B into I
  $C86: LD I, $464 ; Load 464 into I
  $C9E: LD I, $38F ; Load 38F into I
  $CD2: LD I, $D6D ; Load D6D into I
  $CDA: LD I, $1DB ; Load 1DB into I
  $CFC: LD I, $66C ; Load 66C into I
  $D0E: LD I, $9E3 ; Load 9E3 into I
  $D20: LD I, $B43 ; Load B43 into I
  $D2A: LD I, $A53 ; Load A53 into I
  $D44: LD I, $BE0 ; Load BE0 into I
  $D70: LD I, $F1B ; Load F1B into I
  $D7A: LD I, $945 ; Load 945 into I
  $DFE: LD I, $118 ; Load 118 into I
  $E08: LD I, $00C ; Load 00C into I
  $E2C: LD I, $767 ; Load 767 into I
  $E3E: LD I, $D8C ; Load D8C into I
  $E4A: LD I, $28A ; Load 28A into I
  $E54: LD I, $4DC ; Load 4DC into I
  $E94: LD I, $147 ; Load 147 into I
  $E9E: LD I, $713 ; Load 713 into I
  $ECC: LD I, $A8E ; Load A8E into I
  $ECE: LD I, $F4E ; Load F4E into I
  $ED6: LD I, $4D6 ; Load 4D6 into I
  $F16: LD I, $9CA ; Load 9CA into I
  $F60: LD I, $2AC ; Load 2AC into I
  $F88: LD I, $A1B ; Load A1B into I
  $F8E: LD I, $7C0 ; Load 7C0 into I
  $F98: LD I, $D06 ; Load D06 into I
  $F9C: LD I, $9B2 ; Load 9B2 into I
  $FA6: LD I, $FA6 ; Load FA6 into I
  $FB8: LD I, $A01 ; Load A01 into I
  $FC6: LD I, $583 ; Load 583 into I
  $FD6: LD I, $300 ; Load 300 into I
  $FE4: LD I, $3FB ; Load 3FB into I
  $FEC: LD I, $718 ; Load 718 into I
  $FF0: LD I, $F68 ; Load F68 into I

CONTROL FLOW ANALYSIS:
Jumps: 201
Calls: 98
Branches: 254
Loops: 102
Loop Structures:
  $254 -> $24A (backward jump)
  $25C -> $24C (backward jump)
  $2F4 -> $132 (backward jump)
  $328 -> $308 (backward jump)
  $330 -> $1B0 (backward jump)
  $3BE -> $19E (backward jump)
  $3DA -> $3D2 (backward jump)
  $44E -> $1A8 (backward jump)
  $460 -> $433 (backward jump)
  $4A0 -> $351 (backward jump)
  $4F4 -> $23D (backward jump)
  $57C -> $514 (backward jump)
  $656 -> $261 (backward jump)
  $65C -> $465 (backward jump)
  $65E -> $240 (backward jump)
  $682 -> $487 (backward jump)
  $6B2 -> $19C (backward jump)
  $6BE -> $671 (backward jump)
  $6CC -> $5EC (backward jump)
  $6D8 -> $25A (backward jump)
  $70A -> $1AF (backward jump)
  $75C -> $121 (backward jump)
  $7BE -> $3A6 (backward jump)
  $84A -> $1E9 (backward jump)
  $864 -> $4E9 (backward jump)
  $896 -> $599 (backward jump)
  $8C8 -> $586 (backward jump)
  $8DE -> $6D2 (backward jump)
  $92A -> $3BF (backward jump)
  $988 -> $14C (backward jump)
  $98C -> $86B (backward jump)
  $994 -> $1FE (backward jump)
  $9C2 -> $837 (backward jump)
  $9E0 -> $4A4 (backward jump)
  $9FA -> $9BC (backward jump)
  $A0C -> $8A7 (backward jump)
  $A2A -> $362 (backward jump)
  $A42 -> $599 (backward jump)
  $A64 -> $468 (backward jump)
  $A70 -> $3CF (backward jump)
  $A8A -> $20B (backward jump)
  $A98 -> $A76 (backward jump)
  $ABE -> $489 (backward jump)
  $AC4 -> $71E (backward jump)
  $AD2 -> $550 (backward jump)
  $B0E -> $19B (backward jump)
  $B36 -> $8F8 (backward jump)
  $B3C -> $A40 (backward jump)
  $B44 -> $0FB (backward jump)
  $B6A -> $39F (backward jump)
  $B80 -> $907 (backward jump)
  $B9A -> $77A (backward jump)
  $B9E -> $600 (backward jump)
  $BCA -> $9AA (backward jump)
  $BCE -> $25F (backward jump)
  $BE6 -> $551 (backward jump)
  $BEC -> $5D4 (backward jump)
  $BEE -> $AD0 (backward jump)
  $C50 -> $17E (backward jump)
  $C58 -> $286 (backward jump)
  $C60 -> $C49 (backward jump)
  $C7C -> $7EE (backward jump)
  $C94 -> $4D5 (backward jump)
  $CAC -> $651 (backward jump)
  $CB8 -> $67E (backward jump)
  $CF6 -> $580 (backward jump)
  $D06 -> $105 (backward jump)
  $D10 -> $63E (backward jump)
  $D1E -> $47D (backward jump)
  $D34 -> $474 (backward jump)
  $D42 -> $858 (backward jump)
  $D72 -> $3DA (backward jump)
  $D84 -> $CB4 (backward jump)
  $D90 -> $78E (backward jump)
  $D9C -> $56C (backward jump)
  $DA2 -> $23F (backward jump)
  $DB2 -> $366 (backward jump)
  $DB6 -> $281 (backward jump)
  $DDA -> $186 (backward jump)
  $DE0 -> $290 (backward jump)
  $DE8 -> $D51 (backward jump)
  $E3C -> $D84 (backward jump)
  $E48 -> $11C (backward jump)
  $E56 -> $A6F (backward jump)
  $E78 -> $D9A (backward jump)
  $E90 -> $116 (backward jump)
  $E96 -> $27A (backward jump)
  $EBA -> $D97 (backward jump)
  $EBC -> $291 (backward jump)
  $EEA -> $C64 (backward jump)
  $F08 -> $748 (backward jump)
  $F0C -> $969 (backward jump)
  $F32 -> $793 (backward jump)
  $F34 -> $70D (backward jump)
  $F48 -> $E1A (backward jump)
  $F5E -> $4C9 (backward jump)
  $F6C -> $74F (backward jump)
  $F92 -> $955 (backward jump)
  $FA0 -> $194 (backward jump)
  $FC0 -> $BF8 (backward jump)
  $FD8 -> $E44 (backward jump)
  $FDC -> $2C5 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $8018   UNKNOWN  8018            ; Unknown 8xxx instruction
$202    $39BF   SE       V9, #BF         ; Skip if V9 == 191
$204    $1649   JP       $649            ; Jump to 649
$206    $B30C   JP       V0, $30C        ; Jump to V0 + 30C
$208    $F086   UNKNOWN  F086            ; Unknown Fxxx instruction
$20A    $A15D   LD       I, $15D         ; Load 15D into I
$20C    $71CD   ADD      V1, #CD         ; Add 205 to V1
$20E    $01E0   SYS      $1E0            ; System call to 1E0
$210    $818B   UNKNOWN  818B            ; Unknown 8xxx instruction
$212    $33B0   SE       V3, #B0         ; Skip if V3 == 176
$214    $5D94   UNKNOWN  $5D94           ; Unknown 5xxx instruction
$216    $0914   SYS      $914            ; System call to 914
$218    $2503   CALL     $503            ; Call subroutine at 503
$21A    $8C62   AND      VC, V6          ; VC &= V6
$21C    $4355   SNE      V3, #55         ; Skip if V3 != 85
$21E    $AD46   LD       I, $D46         ; Load D46 into I
$220    $CEA6   RND      VE, #A6         ; VE = random & A6
$222    $6AE7   LD       VA, #E7         ; Load 231 into VA
$224    $F28A   UNKNOWN  F28A            ; Unknown Fxxx instruction
$226    $3423   SE       V4, #23         ; Skip if V4 == 35
$228    $FAEB   UNKNOWN  FAEB            ; Unknown Fxxx instruction
$22A    $8B1D   UNKNOWN  8B1D            ; Unknown 8xxx instruction
$22C    $AE44   LD       I, $E44         ; Load E44 into I
$22E    $FA27   UNKNOWN  FA27            ; Unknown Fxxx instruction
$230    $8383   XOR      V3, V8          ; V3 ^= V8
$232    $8549   UNKNOWN  8549            ; Unknown 8xxx instruction
$234    $91AB   UNKNOWN  $91AB           ; Unknown 9xxx instruction
$236    $71B8   ADD      V1, #B8         ; Add 184 to V1
$238    $FDFB   UNKNOWN  FDFB            ; Unknown Fxxx instruction
$23A    $6AF9   LD       VA, #F9         ; Load 249 into VA
$23C    $ABF0   LD       I, $BF0         ; Load BF0 into I
$23E    $68A0   LD       V8, #A0         ; Load 160 into V8
$240    $C4C5   RND      V4, #C5         ; V4 = random & C5
$242    $5254   UNKNOWN  $5254           ; Unknown 5xxx instruction
$244    $68D9   LD       V8, #D9         ; Load 217 into V8
$246    $FE58   UNKNOWN  FE58            ; Unknown Fxxx instruction
$248    $14CF   JP       $4CF            ; Jump to 4CF
$24A    $0E16   SYS      $E16            ; System call to E16
$24C    $713F   ADD      V1, #3F         ; Add 63 to V1
$24E    $ADBD   LD       I, $DBD         ; Load DBD into I
$250    $CE58   RND      VE, #58         ; VE = random & 58
$252    $C8DE   RND      V8, #DE         ; V8 = random & DE
$254    $B24A   JP       V0, $24A        ; Jump to V0 + 24A
$256    $5088   UNKNOWN  $5088           ; Unknown 5xxx instruction
$258    $9967   UNKNOWN  $9967           ; Unknown 9xxx instruction
$25A    $70AF   ADD      V0, #AF         ; Add 175 to V0
$25C    $B24C   JP       V0, $24C        ; Jump to V0 + 24C
$25E    $F652   UNKNOWN  F652            ; Unknown Fxxx instruction
$260    $EE54   UNKNOWN  $EE54           ; Unknown Exxx instruction
$262    $0549   SYS      $549            ; System call to 549
$264    $E2CA   UNKNOWN  $E2CA           ; Unknown Exxx instruction
$266    $F8DA   UNKNOWN  F8DA            ; Unknown Fxxx instruction
$268    $B923   JP       V0, $923        ; Jump to V0 + 923
$26A    $8CD3   XOR      VC, VD          ; VC ^= VD
$26C    $E30E   UNKNOWN  $E30E           ; Unknown Exxx instruction
$26E    $362F   SE       V6, #2F         ; Skip if V6 == 47
$270    $6CB9   LD       VC, #B9         ; Load 185 into VC
$272    $7885   ADD      V8, #85         ; Add 133 to V8
$274    $D0B5   DRW      V0, VB, #5      ; Draw 5-byte sprite at V0, VB
$276    $F134   UNKNOWN  F134            ; Unknown Fxxx instruction
$278    $0C7B   SYS      $C7B            ; System call to C7B
$27A    $77BE   ADD      V7, #BE         ; Add 190 to V7
$27C    $A7C7   LD       I, $7C7         ; Load 7C7 into I
$27E    $89C0   LD       V9, VC          ; V9 = VC
$280    $B9FF   JP       V0, $9FF        ; Jump to V0 + 9FF
$282    $C984   RND      V9, #84         ; V9 = random & 84
$284    $DB3A   DRW      VB, V3, #A      ; Draw 10-byte sprite at VB, V3
$286    $145F   JP       $45F            ; Jump to 45F
$288    $A476   LD       I, $476         ; Load 476 into I
$28A    $371E   SE       V7, #1E         ; Skip if V7 == 30
$28C    $DE2B   DRW      VE, V2, #B      ; Draw 11-byte sprite at VE, V2
$28E    $C932   RND      V9, #32         ; V9 = random & 32
$290    $FD4F   UNKNOWN  FD4F            ; Unknown Fxxx instruction
$292    $2B23   CALL     $B23            ; Call subroutine at B23
$294    $AB20   LD       I, $B20         ; Load B20 into I
$296    $A01A   LD       I, $01A         ; Load 01A into I
$298    $0D09   SYS      $D09            ; System call to D09
$29A    $F99B   UNKNOWN  F99B            ; Unknown Fxxx instruction
$29C    $0B3C   SYS      $B3C            ; System call to B3C
$29E    $8CB3   XOR      VC, VB          ; VC ^= VB
$2A0    $3D30   SE       VD, #30         ; Skip if VD == 48
$2A2    $0457   SYS      $457            ; System call to 457
$2A4    $FD1D   UNKNOWN  FD1D            ; Unknown Fxxx instruction
$2A6    $54DA   UNKNOWN  $54DA           ; Unknown 5xxx instruction
$2A8    $00AE   SYS      $0AE            ; System call to 0AE
$2AA    $E4AB   UNKNOWN  $E4AB           ; Unknown Exxx instruction
$2AC    $F4F3   UNKNOWN  F4F3            ; Unknown Fxxx instruction
$2AE    $2A31   CALL     $A31            ; Call subroutine at A31
$2B0    $02CB   SYS      $2CB            ; System call to 2CB
$2B2    $365A   SE       V6, #5A         ; Skip if V6 == 90
$2B4    $9834   UNKNOWN  $9834           ; Unknown 9xxx instruction
$2B6    $1811   JP       $811            ; Jump to 811
$2B8    $2B6B   CALL     $B6B            ; Call subroutine at B6B
$2BA    $D956   DRW      V9, V5, #6      ; Draw 6-byte sprite at V9, V5
$2BC    $4876   SNE      V8, #76         ; Skip if V8 != 118
$2BE    $8E96   SHR      VE              ; VE >>= 1, VF = LSB
$2C0    $E1DE   UNKNOWN  $E1DE           ; Unknown Exxx instruction
$2C2    $5542   UNKNOWN  $5542           ; Unknown 5xxx instruction
$2C4    $38B6   SE       V8, #B6         ; Skip if V8 == 182
$2C6    $3804   SE       V8, #04         ; Skip if V8 == 4
$2C8    $9F08   UNKNOWN  $9F08           ; Unknown 9xxx instruction
$2CA    $FB6D   UNKNOWN  FB6D            ; Unknown Fxxx instruction
$2CC    $D1C0   DRW      V1, VC, #0      ; Draw 0-byte sprite at V1, VC
$2CE    $5BFD   UNKNOWN  $5BFD           ; Unknown 5xxx instruction
$2D0    $8BFC   UNKNOWN  8BFC            ; Unknown 8xxx instruction
$2D2    $EDA3   UNKNOWN  $EDA3           ; Unknown Exxx instruction
$2D4    $AC1A   LD       I, $C1A         ; Load C1A into I
$2D6    $13C9   JP       $3C9            ; Jump to 3C9
$2D8    $26D5   CALL     $6D5            ; Call subroutine at 6D5
$2DA    $E96C   UNKNOWN  $E96C           ; Unknown Exxx instruction
$2DC    $BCD2   JP       V0, $CD2        ; Jump to V0 + CD2
$2DE    $E803   UNKNOWN  $E803           ; Unknown Exxx instruction
$2E0    $6785   LD       V7, #85         ; Load 133 into V7
$2E2    $3F92   SE       VF, #92         ; Skip if VF == 146
$2E4    $1E6F   JP       $E6F            ; Jump to E6F
$2E6    $7AFC   ADD      VA, #FC         ; Add 252 to VA
$2E8    $046A   SYS      $46A            ; System call to 46A
$2EA    $B956   JP       V0, $956        ; Jump to V0 + 956
$2EC    $9850   SNE      V8, V5          ; Skip if V8 != V5
$2EE    $184A   JP       $84A            ; Jump to 84A
$2F0    $808C   UNKNOWN  808C            ; Unknown 8xxx instruction
$2F2    $25B7   CALL     $5B7            ; Call subroutine at 5B7
$2F4    $B132   JP       V0, $132        ; Jump to V0 + 132
$2F6    $B7A4   JP       V0, $7A4        ; Jump to V0 + 7A4
$2F8    $E2A2   UNKNOWN  $E2A2           ; Unknown Exxx instruction
$2FA    $7D65   ADD      VD, #65         ; Add 101 to VD
$2FC    $7C7B   ADD      VC, #7B         ; Add 123 to VC
$2FE    $0D9B   SYS      $D9B            ; System call to D9B
$300    $0102   SYS      $102            ; System call to 102
$302    $090C   SYS      $90C            ; System call to 90C
$304    $46E3   SNE      V6, #E3         ; Skip if V6 != 227
$306    $FEFF   UNKNOWN  FEFF            ; Unknown Fxxx instruction
$308    $80CA   UNKNOWN  80CA            ; Unknown 8xxx instruction
$30A    $8154   ADD      V1, V5          ; V1 += V5, VF = carry
$30C    $4415   SNE      V4, #15         ; Skip if V4 != 21
$30E    $8DB5   SUB      VD, VB          ; VD -= VB, VF = !borrow
$310    $A6A7   LD       I, $6A7         ; Load 6A7 into I
$312    $0101   SYS      $101            ; System call to 101
$314    $0661   SYS      $661            ; System call to 661
$316    $5B91   UNKNOWN  $5B91           ; Unknown 5xxx instruction
$318    $E1C0   UNKNOWN  $E1C0           ; Unknown Exxx instruction
$31A    $C578   RND      V5, #78         ; V5 = random & 78
$31C    $78CE   ADD      V8, #CE         ; Add 206 to V8
$31E    $A7AD   LD       I, $7AD         ; Load 7AD into I
$320    $54EF   UNKNOWN  $54EF           ; Unknown 5xxx instruction
$322    $9D1B   UNKNOWN  $9D1B           ; Unknown 9xxx instruction
$324    $9B09   UNKNOWN  $9B09           ; Unknown 9xxx instruction
$326    $CF86   RND      VF, #86         ; VF = random & 86
$328    $B308   JP       V0, $308        ; Jump to V0 + 308
$32A    $41A7   SNE      V1, #A7         ; Skip if V1 != 167
$32C    $FC9E   UNKNOWN  FC9E            ; Unknown Fxxx instruction
$32E    $43EC   SNE      V3, #EC         ; Skip if V3 != 236
$330    $11B0   JP       $1B0            ; Jump to 1B0
$332    $F994   UNKNOWN  F994            ; Unknown Fxxx instruction
$334    $8177   SUBN     V1, V7          ; V1 = V7 - V1, VF = !borrow
$336    $17ED   JP       $7ED            ; Jump to 7ED
$338    $1895   JP       $895            ; Jump to 895
$33A    $AC15   LD       I, $C15         ; Load C15 into I
$33C    $248B   CALL     $48B            ; Call subroutine at 48B
$33E    $9A49   UNKNOWN  $9A49           ; Unknown 9xxx instruction
$340    $990E   UNKNOWN  $990E           ; Unknown 9xxx instruction
$342    $A845   LD       I, $845         ; Load 845 into I
$344    $2C97   CALL     $C97            ; Call subroutine at C97
$346    $04D8   SYS      $4D8            ; System call to 4D8
$348    $F616   UNKNOWN  F616            ; Unknown Fxxx instruction
$34A    $ED65   UNKNOWN  $ED65           ; Unknown Exxx instruction
$34C    $261C   CALL     $61C            ; Call subroutine at 61C
$34E    $9BB2   UNKNOWN  $9BB2           ; Unknown 9xxx instruction
$350    $3DF8   SE       VD, #F8         ; Skip if VD == 248
$352    $FD85   UNKNOWN  FD85            ; Unknown Fxxx instruction
$354    $F269   UNKNOWN  F269            ; Unknown Fxxx instruction
$356    $7297   ADD      V2, #97         ; Add 151 to V2
$358    $09D9   SYS      $9D9            ; System call to 9D9
$35A    $0A10   SYS      $A10            ; System call to A10
$35C    $1983   JP       $983            ; Jump to 983
$35E    $E167   UNKNOWN  $E167           ; Unknown Exxx instruction
$360    $E899   UNKNOWN  $E899           ; Unknown Exxx instruction
$362    $B8C6   JP       V0, $8C6        ; Jump to V0 + 8C6
$364    $0872   SYS      $872            ; System call to 872
$366    $F111   UNKNOWN  F111            ; Unknown Fxxx instruction
$368    $F45F   UNKNOWN  F45F            ; Unknown Fxxx instruction
$36A    $E4B8   UNKNOWN  $E4B8           ; Unknown Exxx instruction
$36C    $8744   ADD      V7, V4          ; V7 += V4, VF = carry
$36E    $D83D   DRW      V8, V3, #D      ; Draw 13-byte sprite at V8, V3
$370    $54A1   UNKNOWN  $54A1           ; Unknown 5xxx instruction
$372    $994E   UNKNOWN  $994E           ; Unknown 9xxx instruction
$374    $2E97   CALL     $E97            ; Call subroutine at E97
$376    $E8C3   UNKNOWN  $E8C3           ; Unknown Exxx instruction
$378    $59D4   UNKNOWN  $59D4           ; Unknown 5xxx instruction
$37A    $CADE   RND      VA, #DE         ; VA = random & DE
$37C    $51E4   UNKNOWN  $51E4           ; Unknown 5xxx instruction
$37E    $6975   LD       V9, #75         ; Load 117 into V9
$380    $C0C9   RND      V0, #C9         ; V0 = random & C9
$382    $2B7D   CALL     $B7D            ; Call subroutine at B7D
$384    $F34E   UNKNOWN  F34E            ; Unknown Fxxx instruction
$386    $C5BB   RND      V5, #BB         ; V5 = random & BB
$388    $F0DB   UNKNOWN  F0DB            ; Unknown Fxxx instruction
$38A    $CC0B   RND      VC, #0B         ; VC = random & 0B
$38C    $0A52   SYS      $A52            ; System call to A52
$38E    $6F84   LD       VF, #84         ; Load 132 into VF
$390    $783C   ADD      V8, #3C         ; Add 60 to V8
$392    $8169   UNKNOWN  8169            ; Unknown 8xxx instruction
$394    $D4AC   DRW      V4, VA, #C      ; Draw 12-byte sprite at V4, VA
$396    $280D   CALL     $80D            ; Call subroutine at 80D
$398    $601B   LD       V0, #1B         ; Load 27 into V0
$39A    $6282   LD       V2, #82         ; Load 130 into V2
$39C    $1E28   JP       $E28            ; Jump to E28
$39E    $7221   ADD      V2, #21         ; Add 33 to V2
$3A0    $15B5   JP       $5B5            ; Jump to 5B5
$3A2    $4BE4   SNE      VB, #E4         ; Skip if VB != 228
$3A4    $DC3E   DRW      VC, V3, #E      ; Draw 14-byte sprite at VC, V3
$3A6    $9DDE   UNKNOWN  $9DDE           ; Unknown 9xxx instruction
$3A8    $3095   SE       V0, #95         ; Skip if V0 == 149
$3AA    $28FC   CALL     $8FC            ; Call subroutine at 8FC
$3AC    $48DD   SNE      V8, #DD         ; Skip if V8 != 221
$3AE    $AE09   LD       I, $E09         ; Load E09 into I
$3B0    $3071   SE       V0, #71         ; Skip if V0 == 113
$3B2    $30C4   SE       V0, #C4         ; Skip if V0 == 196
$3B4    $8A34   ADD      VA, V3          ; VA += V3, VF = carry
$3B6    $8BF1   OR       VB, VF          ; VB |= VF
$3B8    $FB33   LD       B, VB           ; Store BCD of VB at I, I+1, I+2
$3BA    $BE31   JP       V0, $E31        ; Jump to V0 + E31
$3BC    $EDB7   UNKNOWN  $EDB7           ; Unknown Exxx instruction
$3BE    $B19E   JP       V0, $19E        ; Jump to V0 + 19E
$3C0    $1ADF   JP       $ADF            ; Jump to ADF
$3C2    $CDDA   RND      VD, #DA         ; VD = random & DA
$3C4    $2E2F   CALL     $E2F            ; Call subroutine at E2F
$3C6    $8D86   SHR      VD              ; VD >>= 1, VF = LSB
$3C8    $480D   SNE      V8, #0D         ; Skip if V8 != 13
$3CA    $C383   RND      V3, #83         ; V3 = random & 83
$3CC    $6157   LD       V1, #57         ; Load 87 into V1
$3CE    $F740   UNKNOWN  F740            ; Unknown Fxxx instruction
$3D0    $6192   LD       V1, #92         ; Load 146 into V1
$3D2    $ACA9   LD       I, $CA9         ; Load CA9 into I
$3D4    $1958   JP       $958            ; Jump to 958
$3D6    $CDAF   RND      VD, #AF         ; VD = random & AF
$3D8    $A1B6   LD       I, $1B6         ; Load 1B6 into I
$3DA    $13D2   JP       $3D2            ; Jump to 3D2
$3DC    $0B28   SYS      $B28            ; System call to B28
$3DE    $7F57   ADD      VF, #57         ; Add 87 to VF
$3E0    $AA3D   LD       I, $A3D         ; Load A3D into I
$3E2    $6106   LD       V1, #06         ; Load 6 into V1
$3E4    $61B0   LD       V1, #B0         ; Load 176 into V1
$3E6    $BAB5   JP       V0, $AB5        ; Jump to V0 + AB5
$3E8    $7556   ADD      V5, #56         ; Add 86 to V5
$3EA    $5974   UNKNOWN  $5974           ; Unknown 5xxx instruction
$3EC    $5A88   UNKNOWN  $5A88           ; Unknown 5xxx instruction
$3EE    $4394   SNE      V3, #94         ; Skip if V3 != 148
$3F0    $DFB2   DRW      VF, VB, #2      ; Draw 2-byte sprite at VF, VB
$3F2    $CFE2   RND      VF, #E2         ; VF = random & E2
$3F4    $28CC   CALL     $8CC            ; Call subroutine at 8CC
$3F6    $0476   SYS      $476            ; System call to 476
$3F8    $41C4   SNE      V1, #C4         ; Skip if V1 != 196
$3FA    $2DA4   CALL     $DA4            ; Call subroutine at DA4
$3FC    $83FF   UNKNOWN  83FF            ; Unknown 8xxx instruction
$3FE    $AE35   LD       I, $E35         ; Load E35 into I
$400    $A0B8   LD       I, $0B8         ; Load 0B8 into I
$402    $6DC6   LD       VD, #C6         ; Load 198 into VD
$404    $B99E   JP       V0, $99E        ; Jump to V0 + 99E
$406    $68BC   LD       V8, #BC         ; Load 188 into V8
$408    $38A3   SE       V8, #A3         ; Skip if V8 == 163
$40A    $17C2   JP       $7C2            ; Jump to 7C2
$40C    $7FDB   ADD      VF, #DB         ; Add 219 to VF
$40E    $FB56   UNKNOWN  FB56            ; Unknown Fxxx instruction
$410    $8D8F   UNKNOWN  8D8F            ; Unknown 8xxx instruction
$412    $6EF6   LD       VE, #F6         ; Load 246 into VE
$414    $E84F   UNKNOWN  $E84F           ; Unknown Exxx instruction
$416    $A9DD   LD       I, $9DD         ; Load 9DD into I
$418    $1CD4   JP       $CD4            ; Jump to CD4
$41A    $D8B1   DRW      V8, VB, #1      ; Draw 1-byte sprite at V8, VB
$41C    $F945   UNKNOWN  F945            ; Unknown Fxxx instruction
$41E    $8EB1   OR       VE, VB          ; VE |= VB
$420    $F31B   UNKNOWN  F31B            ; Unknown Fxxx instruction
$422    $C8AE   RND      V8, #AE         ; V8 = random & AE
$424    $C1F1   RND      V1, #F1         ; V1 = random & F1
$426    $CBFA   RND      VB, #FA         ; VB = random & FA
$428    $A88A   LD       I, $88A         ; Load 88A into I
$42A    $D97D   DRW      V9, V7, #D      ; Draw 13-byte sprite at V9, V7
$42C    $F680   UNKNOWN  F680            ; Unknown Fxxx instruction
$42E    $CA0F   RND      VA, #0F         ; VA = random & 0F
$430    $ABC0   LD       I, $BC0         ; Load BC0 into I
$432    $A0D7   LD       I, $0D7         ; Load 0D7 into I
$434    $5FBC   UNKNOWN  $5FBC           ; Unknown 5xxx instruction
$436    $591A   UNKNOWN  $591A           ; Unknown 5xxx instruction
$438    $E6A2   UNKNOWN  $E6A2           ; Unknown Exxx instruction
$43A    $9169   UNKNOWN  $9169           ; Unknown 9xxx instruction
$43C    $A41B   LD       I, $41B         ; Load 41B into I
$43E    $BCE7   JP       V0, $CE7        ; Jump to V0 + CE7
$440    $C258   RND      V2, #58         ; V2 = random & 58
$442    $F98F   UNKNOWN  F98F            ; Unknown Fxxx instruction
$444    $F864   UNKNOWN  F864            ; Unknown Fxxx instruction
$446    $5763   UNKNOWN  $5763           ; Unknown 5xxx instruction
$448    $CA1F   RND      VA, #1F         ; VA = random & 1F
$44A    $3557   SE       V5, #57         ; Skip if V5 == 87
$44C    $AB1D   LD       I, $B1D         ; Load B1D into I
$44E    $B1A8   JP       V0, $1A8        ; Jump to V0 + 1A8
$450    $740C   ADD      V4, #0C         ; Add 12 to V4
$452    $37A8   SE       V7, #A8         ; Skip if V7 == 168
$454    $52BD   UNKNOWN  $52BD           ; Unknown 5xxx instruction
$456    $313F   SE       V1, #3F         ; Skip if V1 == 63
$458    $0ADB   SYS      $ADB            ; System call to ADB
$45A    $EF3F   UNKNOWN  $EF3F           ; Unknown Exxx instruction
$45C    $E783   UNKNOWN  $E783           ; Unknown Exxx instruction
$45E    $1B1C   JP       $B1C            ; Jump to B1C
$460    $B433   JP       V0, $433        ; Jump to V0 + 433
$462    $6785   LD       V7, #85         ; Load 133 into V7
$464    $A000   LD       I, $000         ; Load 000 into I
$466    $6AAF   LD       VA, #AF         ; Load 175 into VA
$468    $D61B   DRW      V6, V1, #B      ; Draw 11-byte sprite at V6, V1
$46A    $207C   CALL     $07C            ; Call subroutine at 07C
$46C    $8902   AND      V9, V0          ; V9 &= V0
$46E    $4202   SNE      V2, #02         ; Skip if V2 != 2
$470    $C6F1   RND      V6, #F1         ; V6 = random & F1
$472    $69B6   LD       V9, #B6         ; Load 182 into V9
$474    $A105   LD       I, $105         ; Load 105 into I
$476    $6F09   LD       VF, #09         ; Load 9 into VF
$478    $B50D   JP       V0, $50D        ; Jump to V0 + 50D
$47A    $A90B   LD       I, $90B         ; Load 90B into I
$47C    $5F32   UNKNOWN  $5F32           ; Unknown 5xxx instruction
$47E    $1BF5   JP       $BF5            ; Jump to BF5
$480    $22A5   CALL     $2A5            ; Call subroutine at 2A5
$482    $BFE5   JP       V0, $FE5        ; Jump to V0 + FE5
$484    $E3B7   UNKNOWN  $E3B7           ; Unknown Exxx instruction
$486    $5AC9   UNKNOWN  $5AC9           ; Unknown 5xxx instruction
$488    $3EBF   SE       VE, #BF         ; Skip if VE == 191
$48A    $97F0   SNE      V7, VF          ; Skip if V7 != VF
$48C    $667A   LD       V6, #7A         ; Load 122 into V6
$48E    $45F1   SNE      V5, #F1         ; Skip if V5 != 241
$490    $FDB1   UNKNOWN  FDB1            ; Unknown Fxxx instruction
$492    $0580   SYS      $580            ; System call to 580
$494    $DCC8   DRW      VC, VC, #8      ; Draw 8-byte sprite at VC, VC
$496    $E21B   UNKNOWN  $E21B           ; Unknown Exxx instruction
$498    $052A   SYS      $52A            ; System call to 52A
$49A    $1D31   JP       $D31            ; Jump to D31
$49C    $2199   CALL     $199            ; Call subroutine at 199
$49E    $9384   UNKNOWN  $9384           ; Unknown 9xxx instruction
$4A0    $1351   JP       $351            ; Jump to 351
$4A2    $89A1   OR       V9, VA          ; V9 |= VA
$4A4    $F8C2   UNKNOWN  F8C2            ; Unknown Fxxx instruction
$4A6    $CA96   RND      VA, #96         ; VA = random & 96
$4A8    $EC09   UNKNOWN  $EC09           ; Unknown Exxx instruction
$4AA    $CAAF   RND      VA, #AF         ; VA = random & AF
$4AC    $0A6A   SYS      $A6A            ; System call to A6A
$4AE    $CEEE   RND      VE, #EE         ; VE = random & EE
$4B0    $FF46   UNKNOWN  FF46            ; Unknown Fxxx instruction
$4B2    $A7FC   LD       I, $7FC         ; Load 7FC into I
$4B4    $7D4D   ADD      VD, #4D         ; Add 77 to VD
$4B6    $DE56   DRW      VE, V5, #6      ; Draw 6-byte sprite at VE, V5
$4B8    $33C0   SE       V3, #C0         ; Skip if V3 == 192
$4BA    $FCCA   UNKNOWN  FCCA            ; Unknown Fxxx instruction
$4BC    $D3BE   DRW      V3, VB, #E      ; Draw 14-byte sprite at V3, VB
$4BE    $0799   SYS      $799            ; System call to 799
$4C0    $D62B   DRW      V6, V2, #B      ; Draw 11-byte sprite at V6, V2
$4C2    $E455   UNKNOWN  $E455           ; Unknown Exxx instruction
$4C4    $39BF   SE       V9, #BF         ; Skip if V9 == 191
$4C6    $9AC0   SNE      VA, VC          ; Skip if VA != VC
$4C8    $E8E7   UNKNOWN  $E8E7           ; Unknown Exxx instruction
$4CA    $043A   SYS      $43A            ; System call to 43A
$4CC    $F2A1   UNKNOWN  F2A1            ; Unknown Fxxx instruction
$4CE    $A4A6   LD       I, $4A6         ; Load 4A6 into I
$4D0    $FB3C   UNKNOWN  FB3C            ; Unknown Fxxx instruction
$4D2    $8F15   SUB      VF, V1          ; VF -= V1, VF = !borrow
$4D4    $35D5   SE       V5, #D5         ; Skip if V5 == 213
$4D6    $93F7   UNKNOWN  $93F7           ; Unknown 9xxx instruction
$4D8    $CB3E   RND      VB, #3E         ; VB = random & 3E
$4DA    $53B2   UNKNOWN  $53B2           ; Unknown 5xxx instruction
$4DC    $8775   SUB      V7, V7          ; V7 -= V7, VF = !borrow
$4DE    $F6E3   UNKNOWN  F6E3            ; Unknown Fxxx instruction
$4E0    $BAED   JP       V0, $AED        ; Jump to V0 + AED
$4E2    $9924   UNKNOWN  $9924           ; Unknown 9xxx instruction
$4E4    $4704   SNE      V7, #04         ; Skip if V7 != 4
$4E6    $6A0F   LD       VA, #0F         ; Load 15 into VA
$4E8    $BBD0   JP       V0, $BD0        ; Jump to V0 + BD0
$4EA    $5FEF   UNKNOWN  $5FEF           ; Unknown 5xxx instruction
$4EC    $72A6   ADD      V2, #A6         ; Add 166 to V2
$4EE    $0247   SYS      $247            ; System call to 247
$4F0    $222E   CALL     $22E            ; Call subroutine at 22E
$4F2    $59CD   UNKNOWN  $59CD           ; Unknown 5xxx instruction
$4F4    $B23D   JP       V0, $23D        ; Jump to V0 + 23D
$4F6    $47B0   SNE      V7, #B0         ; Skip if V7 != 176
$4F8    $0016   SYS      $016            ; System call to 016
$4FA    $848A   UNKNOWN  848A            ; Unknown 8xxx instruction
$4FC    $06D6   SYS      $6D6            ; System call to 6D6
$4FE    $F211   UNKNOWN  F211            ; Unknown Fxxx instruction
$500    $DDB6   DRW      VD, VB, #6      ; Draw 6-byte sprite at VD, VB
$502    $1CFD   JP       $CFD            ; Jump to CFD
$504    $8438   UNKNOWN  8438            ; Unknown 8xxx instruction
$506    $F34F   UNKNOWN  F34F            ; Unknown Fxxx instruction
$508    $82FD   UNKNOWN  82FD            ; Unknown 8xxx instruction
$50A    $6DF0   LD       VD, #F0         ; Load 240 into VD
$50C    $012D   SYS      $12D            ; System call to 12D
$50E    $7573   ADD      V5, #73         ; Add 115 to V5
$510    $1B74   JP       $B74            ; Jump to B74
$512    $8338   UNKNOWN  8338            ; Unknown 8xxx instruction
$514    $D7D6   DRW      V7, VD, #6      ; Draw 6-byte sprite at V7, VD
$516    $324F   SE       V2, #4F         ; Skip if V2 == 79
$518    $165D   JP       $65D            ; Jump to 65D
$51A    $1FA4   JP       $FA4            ; Jump to FA4
$51C    $7AA9   ADD      VA, #A9         ; Add 169 to VA
$51E    $4ADE   SNE      VA, #DE         ; Skip if VA != 222
$520    $7BA1   ADD      VB, #A1         ; Add 161 to VB
$522    $2CFB   CALL     $CFB            ; Call subroutine at CFB
$524    $3C55   SE       VC, #55         ; Skip if VC == 85
$526    $9C5B   UNKNOWN  $9C5B           ; Unknown 9xxx instruction
$528    $B8BD   JP       V0, $8BD        ; Jump to V0 + 8BD
$52A    $8009   UNKNOWN  8009            ; Unknown 8xxx instruction
$52C    $18A4   JP       $8A4            ; Jump to 8A4
$52E    $CF26   RND      VF, #26         ; VF = random & 26
$530    $B8AD   JP       V0, $8AD        ; Jump to V0 + 8AD
$532    $1A41   JP       $A41            ; Jump to A41
$534    $8656   SHR      V6              ; V6 >>= 1, VF = LSB
$536    $CBF8   RND      VB, #F8         ; VB = random & F8
$538    $C2BF   RND      V2, #BF         ; V2 = random & BF
$53A    $1D0B   JP       $D0B            ; Jump to D0B
$53C    $8A0A   UNKNOWN  8A0A            ; Unknown 8xxx instruction
$53E    $E5E0   UNKNOWN  $E5E0           ; Unknown Exxx instruction
$540    $56E5   UNKNOWN  $56E5           ; Unknown 5xxx instruction
$542    $76B1   ADD      V6, #B1         ; Add 177 to V6
$544    $54C0   SE       V4, VC          ; Skip if V4 == VC
$546    $8410   LD       V4, V1          ; V4 = V1
$548    $A774   LD       I, $774         ; Load 774 into I
$54A    $EB80   UNKNOWN  $EB80           ; Unknown Exxx instruction
$54C    $05F8   SYS      $5F8            ; System call to 5F8
$54E    $F34B   UNKNOWN  F34B            ; Unknown Fxxx instruction
$550    $2A87   CALL     $A87            ; Call subroutine at A87
$552    $40FB   SNE      V0, #FB         ; Skip if V0 != 251
$554    $90DF   UNKNOWN  $90DF           ; Unknown 9xxx instruction
$556    $A9AA   LD       I, $9AA         ; Load 9AA into I
$558    $7B38   ADD      VB, #38         ; Add 56 to VB
$55A    $D207   DRW      V2, V0, #7      ; Draw 7-byte sprite at V2, V0
$55C    $CBE3   RND      VB, #E3         ; VB = random & E3
$55E    $0EBC   SYS      $EBC            ; System call to EBC
$560    $C921   RND      V9, #21         ; V9 = random & 21
$562    $D9E3   DRW      V9, VE, #3      ; Draw 3-byte sprite at V9, VE
$564    $7623   ADD      V6, #23         ; Add 35 to V6
$566    $FEDE   UNKNOWN  FEDE            ; Unknown Fxxx instruction
$568    $7397   ADD      V3, #97         ; Add 151 to V3
$56A    $E245   UNKNOWN  $E245           ; Unknown Exxx instruction
$56C    $EEC7   UNKNOWN  $EEC7           ; Unknown Exxx instruction
$56E    $8CE5   SUB      VC, VE          ; VC -= VE, VF = !borrow
$570    $EE85   UNKNOWN  $EE85           ; Unknown Exxx instruction
$572    $F9FA   UNKNOWN  F9FA            ; Unknown Fxxx instruction
$574    $924D   UNKNOWN  $924D           ; Unknown 9xxx instruction
$576    $9E70   SNE      VE, V7          ; Skip if VE != V7
$578    $5E6B   UNKNOWN  $5E6B           ; Unknown 5xxx instruction
$57A    $CE0D   RND      VE, #0D         ; VE = random & 0D
$57C    $B514   JP       V0, $514        ; Jump to V0 + 514
$57E    $19D5   JP       $9D5            ; Jump to 9D5
$580    $8518   UNKNOWN  8518            ; Unknown 8xxx instruction
$582    $7442   ADD      V4, #42         ; Add 66 to V4
$584    $DEB6   DRW      VE, VB, #6      ; Draw 6-byte sprite at VE, VB
$586    $63E9   LD       V3, #E9         ; Load 233 into V3
$588    $A92B   LD       I, $92B         ; Load 92B into I
$58A    $2874   CALL     $874            ; Call subroutine at 874
$58C    $29E3   CALL     $9E3            ; Call subroutine at 9E3
$58E    $F85A   UNKNOWN  F85A            ; Unknown Fxxx instruction
$590    $AABA   LD       I, $ABA         ; Load ABA into I
$592    $37D6   SE       V7, #D6         ; Skip if V7 == 214
$594    $03EA   SYS      $3EA            ; System call to 3EA
$596    $A4FD   LD       I, $4FD         ; Load 4FD into I
$598    $502E   UNKNOWN  $502E           ; Unknown 5xxx instruction
$59A    $D62D   DRW      V6, V2, #D      ; Draw 13-byte sprite at V6, V2
$59C    $878A   UNKNOWN  878A            ; Unknown 8xxx instruction
$59E    $61C7   LD       V1, #C7         ; Load 199 into V1
$5A0    $0896   SYS      $896            ; System call to 896
$5A2    $F779   UNKNOWN  F779            ; Unknown Fxxx instruction
$5A4    $8F4C   UNKNOWN  8F4C            ; Unknown 8xxx instruction
$5A6    $C116   RND      V1, #16         ; V1 = random & 16
$5A8    $A36A   LD       I, $36A         ; Load 36A into I
$5AA    $4303   SNE      V3, #03         ; Skip if V3 != 3
$5AC    $56BB   UNKNOWN  $56BB           ; Unknown 5xxx instruction
$5AE    $F7BE   UNKNOWN  F7BE            ; Unknown Fxxx instruction
$5B0    $93A7   UNKNOWN  $93A7           ; Unknown 9xxx instruction
$5B2    $C373   RND      V3, #73         ; V3 = random & 73
$5B4    $A98C   LD       I, $98C         ; Load 98C into I
$5B6    $8F8B   UNKNOWN  8F8B            ; Unknown 8xxx instruction
$5B8    $DCE3   DRW      VC, VE, #3      ; Draw 3-byte sprite at VC, VE
$5BA    $2247   CALL     $247            ; Call subroutine at 247
$5BC    $A568   LD       I, $568         ; Load 568 into I
$5BE    $9114   UNKNOWN  $9114           ; Unknown 9xxx instruction
$5C0    $C029   RND      V0, #29         ; V0 = random & 29
$5C2    $9067   UNKNOWN  $9067           ; Unknown 9xxx instruction
$5C4    $95F7   UNKNOWN  $95F7           ; Unknown 9xxx instruction
$5C6    $E7FE   UNKNOWN  $E7FE           ; Unknown Exxx instruction
$5C8    $27D1   CALL     $7D1            ; Call subroutine at 7D1
$5CA    $71E8   ADD      V1, #E8         ; Add 232 to V1
$5CC    $7275   ADD      V2, #75         ; Add 117 to V2
$5CE    $C3E1   RND      V3, #E1         ; V3 = random & E1
$5D0    $99E7   UNKNOWN  $99E7           ; Unknown 9xxx instruction
$5D2    $BFCE   JP       V0, $FCE        ; Jump to V0 + FCE
$5D4    $D158   DRW      V1, V5, #8      ; Draw 8-byte sprite at V1, V5
$5D6    $169D   JP       $69D            ; Jump to 69D
$5D8    $C3C0   RND      V3, #C0         ; V3 = random & C0
$5DA    $58C0   SE       V8, VC          ; Skip if V8 == VC
$5DC    $5E45   UNKNOWN  $5E45           ; Unknown 5xxx instruction
$5DE    $333C   SE       V3, #3C         ; Skip if V3 == 60
$5E0    $1650   JP       $650            ; Jump to 650
$5E2    $DDBB   DRW      VD, VB, #B      ; Draw 11-byte sprite at VD, VB
$5E4    $1772   JP       $772            ; Jump to 772
$5E6    $ACAE   LD       I, $CAE         ; Load CAE into I
$5E8    $2F58   CALL     $F58            ; Call subroutine at F58
$5EA    $468E   SNE      V6, #8E         ; Skip if V6 != 142
$5EC    $35D9   SE       V5, #D9         ; Skip if V5 == 217
$5EE    $3521   SE       V5, #21         ; Skip if V5 == 33
$5F0    $04D7   SYS      $4D7            ; System call to 4D7
$5F2    $AA36   LD       I, $A36         ; Load A36 into I
$5F4    $CEAD   RND      VE, #AD         ; VE = random & AD
$5F6    $8101   OR       V1, V0          ; V1 |= V0
$5F8    $82B5   SUB      V2, VB          ; V2 -= VB, VF = !borrow
$5FA    $A196   LD       I, $196         ; Load 196 into I
$5FC    $3658   SE       V6, #58         ; Skip if V6 == 88
$5FE    $3DDC   SE       VD, #DC         ; Skip if VD == 220
$600    $40F0   SNE      V0, #F0         ; Skip if V0 != 240
$602    $2E01   CALL     $E01            ; Call subroutine at E01
$604    $18A7   JP       $8A7            ; Jump to 8A7
$606    $54B0   SE       V4, VB          ; Skip if V4 == VB
$608    $7122   ADD      V1, #22         ; Add 34 to V1
$60A    $F506   UNKNOWN  F506            ; Unknown Fxxx instruction
$60C    $7AFD   ADD      VA, #FD         ; Add 253 to VA
$60E    $C717   RND      V7, #17         ; V7 = random & 17
$610    $5315   UNKNOWN  $5315           ; Unknown 5xxx instruction
$612    $4761   SNE      V7, #61         ; Skip if V7 != 97
$614    $D8CB   DRW      V8, VC, #B      ; Draw 11-byte sprite at V8, VC
$616    $F7A7   UNKNOWN  F7A7            ; Unknown Fxxx instruction
$618    $8DC5   SUB      VD, VC          ; VD -= VC, VF = !borrow
$61A    $D7DF   DRW      V7, VD, #F      ; Draw 15-byte sprite at V7, VD
$61C    $4ED8   SNE      VE, #D8         ; Skip if VE != 216
$61E    $6C67   LD       VC, #67         ; Load 103 into VC
$620    $AB22   LD       I, $B22         ; Load B22 into I
$622    $D720   DRW      V7, V2, #0      ; Draw 0-byte sprite at V7, V2
$624    $1E5B   JP       $E5B            ; Jump to E5B
$626    $8D54   ADD      VD, V5          ; VD += V5, VF = carry
$628    $53FA   UNKNOWN  $53FA           ; Unknown 5xxx instruction
$62A    $1E5A   JP       $E5A            ; Jump to E5A
$62C    $E598   UNKNOWN  $E598           ; Unknown Exxx instruction
$62E    $4C1E   SNE      VC, #1E         ; Skip if VC != 30
$630    $B6C4   JP       V0, $6C4        ; Jump to V0 + 6C4
$632    $2027   CALL     $027            ; Call subroutine at 027
$634    $7E80   ADD      VE, #80         ; Add 128 to VE
$636    $CA54   RND      VA, #54         ; VA = random & 54
$638    $79A0   ADD      V9, #A0         ; Add 160 to V9
$63A    $80B5   SUB      V0, VB          ; V0 -= VB, VF = !borrow
$63C    $CDAA   RND      VD, #AA         ; VD = random & AA
$63E    $C8DD   RND      V8, #DD         ; V8 = random & DD
$640    $BEBB   JP       V0, $EBB        ; Jump to V0 + EBB
$642    $CB45   RND      VB, #45         ; VB = random & 45
$644    $4D8B   SNE      VD, #8B         ; Skip if VD != 139
$646    $58D0   SE       V8, VD          ; Skip if V8 == VD
$648    $8C35   SUB      VC, V3          ; VC -= V3, VF = !borrow
$64A    $05D5   SYS      $5D5            ; System call to 5D5
$64C    $5B53   UNKNOWN  $5B53           ; Unknown 5xxx instruction
$64E    $7E67   ADD      VE, #67         ; Add 103 to VE
$650    $CB76   RND      VB, #76         ; VB = random & 76
$652    $45DB   SNE      V5, #DB         ; Skip if V5 != 219
$654    $DC6E   DRW      VC, V6, #E      ; Draw 14-byte sprite at VC, V6
$656    $1261   JP       $261            ; Jump to 261
$658    $026D   SYS      $26D            ; System call to 26D
$65A    $0CE3   SYS      $CE3            ; System call to CE3
$65C    $B465   JP       V0, $465        ; Jump to V0 + 465
$65E    $1240   JP       $240            ; Jump to 240
$660    $EE06   UNKNOWN  $EE06           ; Unknown Exxx instruction
$662    $A45D   LD       I, $45D         ; Load 45D into I
$664    $6AB6   LD       VA, #B6         ; Load 182 into VA
$666    $F107   LD       V1, DT          ; V1 = delay timer
$668    $184B   JP       $84B            ; Jump to 84B
$66A    $0462   SYS      $462            ; System call to 462
$66C    $430B   SNE      V3, #0B         ; Skip if V3 != 11
$66E    $549F   UNKNOWN  $549F           ; Unknown 5xxx instruction
$670    $4FA3   SNE      VF, #A3         ; Skip if VF != 163
$672    $0A32   SYS      $A32            ; System call to A32
$674    $D086   DRW      V0, V8, #6      ; Draw 6-byte sprite at V0, V8
$676    $5525   UNKNOWN  $5525           ; Unknown 5xxx instruction
$678    $3ADF   SE       VA, #DF         ; Skip if VA == 223
$67A    $222C   CALL     $22C            ; Call subroutine at 22C
$67C    $FDC6   UNKNOWN  FDC6            ; Unknown Fxxx instruction
$67E    $8FBF   UNKNOWN  8FBF            ; Unknown 8xxx instruction
$680    $3AE3   SE       VA, #E3         ; Skip if VA == 227
$682    $B487   JP       V0, $487        ; Jump to V0 + 487
$684    $1EDB   JP       $EDB            ; Jump to EDB
$686    $80D0   LD       V0, VD          ; V0 = VD
$688    $6B8A   LD       VB, #8A         ; Load 138 into VB
$68A    $9B30   SNE      VB, V3          ; Skip if VB != V3
$68C    $AE94   LD       I, $E94         ; Load E94 into I
$68E    $ADCB   LD       I, $DCB         ; Load DCB into I
$690    $432D   SNE      V3, #2D         ; Skip if V3 != 45
$692    $51EA   UNKNOWN  $51EA           ; Unknown 5xxx instruction
$694    $3488   SE       V4, #88         ; Skip if V4 == 136
$696    $50A7   UNKNOWN  $50A7           ; Unknown 5xxx instruction
$698    $BF3A   JP       V0, $F3A        ; Jump to V0 + F3A
$69A    $AAB1   LD       I, $AB1         ; Load AB1 into I
$69C    $0BD1   SYS      $BD1            ; System call to BD1
$69E    $F089   UNKNOWN  F089            ; Unknown Fxxx instruction
$6A0    $1A86   JP       $A86            ; Jump to A86
$6A2    $4BB0   SNE      VB, #B0         ; Skip if VB != 176
$6A4    $92AD   UNKNOWN  $92AD           ; Unknown 9xxx instruction
$6A6    $D839   DRW      V8, V3, #9      ; Draw 9-byte sprite at V8, V3
$6A8    $0035   SYS      $035            ; System call to 035
$6AA    $67D4   LD       V7, #D4         ; Load 212 into V7
$6AC    $E032   UNKNOWN  $E032           ; Unknown Exxx instruction
$6AE    $F876   UNKNOWN  F876            ; Unknown Fxxx instruction
$6B0    $E38C   UNKNOWN  $E38C           ; Unknown Exxx instruction
$6B2    $119C   JP       $19C            ; Jump to 19C
$6B4    $8C8C   UNKNOWN  8C8C            ; Unknown 8xxx instruction
$6B6    $2462   CALL     $462            ; Call subroutine at 462
$6B8    $21C9   CALL     $1C9            ; Call subroutine at 1C9
$6BA    $2B3A   CALL     $B3A            ; Call subroutine at B3A
$6BC    $70AC   ADD      V0, #AC         ; Add 172 to V0
$6BE    $1671   JP       $671            ; Jump to 671
$6C0    $52CF   UNKNOWN  $52CF           ; Unknown 5xxx instruction
$6C2    $55DB   UNKNOWN  $55DB           ; Unknown 5xxx instruction
$6C4    $2833   CALL     $833            ; Call subroutine at 833
$6C6    $6BA7   LD       VB, #A7         ; Load 167 into VB
$6C8    $888D   UNKNOWN  888D            ; Unknown 8xxx instruction
$6CA    $A53A   LD       I, $53A         ; Load 53A into I
$6CC    $B5EC   JP       V0, $5EC        ; Jump to V0 + 5EC
$6CE    $007D   SYS      $07D            ; System call to 07D
$6D0    $3DF3   SE       VD, #F3         ; Skip if VD == 243
$6D2    $289B   CALL     $89B            ; Call subroutine at 89B
$6D4    $EE51   UNKNOWN  $EE51           ; Unknown Exxx instruction
$6D6    $A700   LD       I, $700         ; Load 700 into I
$6D8    $B25A   JP       V0, $25A        ; Jump to V0 + 25A
$6DA    $47E9   SNE      V7, #E9         ; Skip if V7 != 233
$6DC    $8C5C   UNKNOWN  8C5C            ; Unknown 8xxx instruction
$6DE    $98D7   UNKNOWN  $98D7           ; Unknown 9xxx instruction
$6E0    $3645   SE       V6, #45         ; Skip if V6 == 69
$6E2    $D20B   DRW      V2, V0, #B      ; Draw 11-byte sprite at V2, V0
$6E4    $7A95   ADD      VA, #95         ; Add 149 to VA
$6E6    $B876   JP       V0, $876        ; Jump to V0 + 876
$6E8    $25B7   CALL     $5B7            ; Call subroutine at 5B7
$6EA    $5502   UNKNOWN  $5502           ; Unknown 5xxx instruction
$6EC    $617F   LD       V1, #7F         ; Load 127 into V1
$6EE    $C52A   RND      V5, #2A         ; V5 = random & 2A
$6F0    $8918   UNKNOWN  8918            ; Unknown 8xxx instruction
$6F2    $0A08   SYS      $A08            ; System call to A08
$6F4    $ACFC   LD       I, $CFC         ; Load CFC into I
$6F6    $D5EA   DRW      V5, VE, #A      ; Draw 10-byte sprite at V5, VE
$6F8    $32B9   SE       V2, #B9         ; Skip if V2 == 185
$6FA    $9C83   UNKNOWN  $9C83           ; Unknown 9xxx instruction
$6FC    $813C   UNKNOWN  813C            ; Unknown 8xxx instruction
$6FE    $75ED   ADD      V5, #ED         ; Add 237 to V5
$700    $BB1B   JP       V0, $B1B        ; Jump to V0 + B1B
$702    $63C0   LD       V3, #C0         ; Load 192 into V3
$704    $0EC1   SYS      $EC1            ; System call to EC1
$706    $1A18   JP       $A18            ; Jump to A18
$708    $99D1   UNKNOWN  $99D1           ; Unknown 9xxx instruction
$70A    $11AF   JP       $1AF            ; Jump to 1AF
$70C    $55EF   UNKNOWN  $55EF           ; Unknown 5xxx instruction
$70E    $4772   SNE      V7, #72         ; Skip if V7 != 114
$710    $0438   SYS      $438            ; System call to 438
$712    $6969   LD       V9, #69         ; Load 105 into V9
$714    $84AB   UNKNOWN  84AB            ; Unknown 8xxx instruction
$716    $E468   UNKNOWN  $E468           ; Unknown Exxx instruction
$718    $CDC2   RND      VD, #C2         ; VD = random & C2
$71A    $6D31   LD       VD, #31         ; Load 49 into VD
$71C    $3AC0   SE       VA, #C0         ; Skip if VA == 192
$71E    $0245   SYS      $245            ; System call to 245
$720    $6177   LD       V1, #77         ; Load 119 into V1
$722    $CEDF   RND      VE, #DF         ; VE = random & DF
$724    $60D6   LD       V0, #D6         ; Load 214 into V0
$726    $3962   SE       V9, #62         ; Skip if V9 == 98
$728    $C48B   RND      V4, #8B         ; V4 = random & 8B
$72A    $3D62   SE       VD, #62         ; Skip if VD == 98
$72C    $D67B   DRW      V6, V7, #B      ; Draw 11-byte sprite at V6, V7
$72E    $F18E   UNKNOWN  F18E            ; Unknown Fxxx instruction
$730    $AD55   LD       I, $D55         ; Load D55 into I
$732    $5E73   UNKNOWN  $5E73           ; Unknown 5xxx instruction
$734    $5DB3   UNKNOWN  $5DB3           ; Unknown 5xxx instruction
$736    $741A   ADD      V4, #1A         ; Add 26 to V4
$738    $97BC   UNKNOWN  $97BC           ; Unknown 9xxx instruction
$73A    $17D5   JP       $7D5            ; Jump to 7D5
$73C    $4C56   SNE      VC, #56         ; Skip if VC != 86
$73E    $1F39   JP       $F39            ; Jump to F39
$740    $DCE7   DRW      VC, VE, #7      ; Draw 7-byte sprite at VC, VE
$742    $EBF7   UNKNOWN  $EBF7           ; Unknown Exxx instruction
$744    $0F67   SYS      $F67            ; System call to F67
$746    $DD02   DRW      VD, V0, #2      ; Draw 2-byte sprite at VD, V0
$748    $8AB6   SHR      VA              ; VA >>= 1, VF = LSB
$74A    $6DC7   LD       VD, #C7         ; Load 199 into VD
$74C    $5E67   UNKNOWN  $5E67           ; Unknown 5xxx instruction
$74E    $7CEB   ADD      VC, #EB         ; Add 235 to VC
$750    $0C16   SYS      $C16            ; System call to C16
$752    $FB0A   LD       VB, K           ; Wait for key press, store in VB
$754    $C6AF   RND      V6, #AF         ; V6 = random & AF
$756    $AE5A   LD       I, $E5A         ; Load E5A into I
$758    $4A61   SNE      VA, #61         ; Skip if VA != 97
$75A    $2FA9   CALL     $FA9            ; Call subroutine at FA9
$75C    $B121   JP       V0, $121        ; Jump to V0 + 121
$75E    $A6C3   LD       I, $6C3         ; Load 6C3 into I
$760    $2259   CALL     $259            ; Call subroutine at 259
$762    $C0DA   RND      V0, #DA         ; V0 = random & DA
$764    $F801   UNKNOWN  F801            ; Unknown Fxxx instruction
$766    $9D95   UNKNOWN  $9D95           ; Unknown 9xxx instruction
$768    $AE46   LD       I, $E46         ; Load E46 into I
$76A    $E3FD   UNKNOWN  $E3FD           ; Unknown Exxx instruction
$76C    $340B   SE       V4, #0B         ; Skip if V4 == 11
$76E    $E912   UNKNOWN  $E912           ; Unknown Exxx instruction
$770    $3F36   SE       VF, #36         ; Skip if VF == 54
$772    $4530   SNE      V5, #30         ; Skip if V5 != 48
$774    $F563   UNKNOWN  F563            ; Unknown Fxxx instruction
$776    $8C7C   UNKNOWN  8C7C            ; Unknown 8xxx instruction
$778    $598E   UNKNOWN  $598E           ; Unknown 5xxx instruction
$77A    $A57B   LD       I, $57B         ; Load 57B into I
$77C    $9F9F   UNKNOWN  $9F9F           ; Unknown 9xxx instruction
$77E    $82D9   UNKNOWN  82D9            ; Unknown 8xxx instruction
$780    $3980   SE       V9, #80         ; Skip if V9 == 128
$782    $3F09   SE       VF, #09         ; Skip if VF == 9
$784    $0767   SYS      $767            ; System call to 767
$786    $C785   RND      V7, #85         ; V7 = random & 85
$788    $69DA   LD       V9, #DA         ; Load 218 into V9
$78A    $84B1   OR       V4, VB          ; V4 |= VB
$78C    $1BB0   JP       $BB0            ; Jump to BB0
$78E    $5BE5   UNKNOWN  $5BE5           ; Unknown 5xxx instruction
$790    $7424   ADD      V4, #24         ; Add 36 to V4
$792    $DC48   DRW      VC, V4, #8      ; Draw 8-byte sprite at VC, V4
$794    $BB59   JP       V0, $B59        ; Jump to V0 + B59
$796    $9A4C   UNKNOWN  $9A4C           ; Unknown 9xxx instruction
$798    $E7C9   UNKNOWN  $E7C9           ; Unknown Exxx instruction
$79A    $770A   ADD      V7, #0A         ; Add 10 to V7
$79C    $0B24   SYS      $B24            ; System call to B24
$79E    $D449   DRW      V4, V4, #9      ; Draw 9-byte sprite at V4, V4
$7A0    $1DA9   JP       $DA9            ; Jump to DA9
$7A2    $E8E0   UNKNOWN  $E8E0           ; Unknown Exxx instruction
$7A4    $04C3   SYS      $4C3            ; System call to 4C3
$7A6    $DC72   DRW      VC, V7, #2      ; Draw 2-byte sprite at VC, V7
$7A8    $3E86   SE       VE, #86         ; Skip if VE == 134
$7AA    $86F2   AND      V6, VF          ; V6 &= VF
$7AC    $9F35   UNKNOWN  $9F35           ; Unknown 9xxx instruction
$7AE    $4BC4   SNE      VB, #C4         ; Skip if VB != 196
$7B0    $980A   UNKNOWN  $980A           ; Unknown 9xxx instruction
$7B2    $83B1   OR       V3, VB          ; V3 |= VB
$7B4    $CF1E   RND      VF, #1E         ; VF = random & 1E
$7B6    $8E15   SUB      VE, V1          ; VE -= V1, VF = !borrow
$7B8    $1D8B   JP       $D8B            ; Jump to D8B
$7BA    $4670   SNE      V6, #70         ; Skip if V6 != 112
$7BC    $0C08   SYS      $C08            ; System call to C08
$7BE    $B3A6   JP       V0, $3A6        ; Jump to V0 + 3A6
$7C0    $B97E   JP       V0, $97E        ; Jump to V0 + 97E
$7C2    $E599   UNKNOWN  $E599           ; Unknown Exxx instruction
$7C4    $56FF   UNKNOWN  $56FF           ; Unknown 5xxx instruction
$7C6    $0FFB   SYS      $FFB            ; System call to FFB
$7C8    $2D79   CALL     $D79            ; Call subroutine at D79
$7CA    $D3AF   DRW      V3, VA, #F      ; Draw 15-byte sprite at V3, VA
$7CC    $98F6   UNKNOWN  $98F6           ; Unknown 9xxx instruction
$7CE    $5786   UNKNOWN  $5786           ; Unknown 5xxx instruction
$7D0    $CB5C   RND      VB, #5C         ; VB = random & 5C
$7D2    $29DD   CALL     $9DD            ; Call subroutine at 9DD
$7D4    $9BF5   UNKNOWN  $9BF5           ; Unknown 9xxx instruction
$7D6    $5CE3   UNKNOWN  $5CE3           ; Unknown 5xxx instruction
$7D8    $A51A   LD       I, $51A         ; Load 51A into I
$7DA    $3806   SE       V8, #06         ; Skip if V8 == 6
$7DC    $56FD   UNKNOWN  $56FD           ; Unknown 5xxx instruction
$7DE    $05EC   SYS      $5EC            ; System call to 5EC
$7E0    $237B   CALL     $37B            ; Call subroutine at 37B
$7E2    $A403   LD       I, $403         ; Load 403 into I
$7E4    $4C3A   SNE      VC, #3A         ; Skip if VC != 58
$7E6    $ACCA   LD       I, $CCA         ; Load CCA into I
$7E8    $85A8   UNKNOWN  85A8            ; Unknown 8xxx instruction
$7EA    $61A8   LD       V1, #A8         ; Load 168 into V1
$7EC    $D375   DRW      V3, V7, #5      ; Draw 5-byte sprite at V3, V7
$7EE    $E693   UNKNOWN  $E693           ; Unknown Exxx instruction
$7F0    $FE61   UNKNOWN  FE61            ; Unknown Fxxx instruction
$7F2    $EA91   UNKNOWN  $EA91           ; Unknown Exxx instruction
$7F4    $9A99   UNKNOWN  $9A99           ; Unknown 9xxx instruction
$7F6    $6802   LD       V8, #02         ; Load 2 into V8
$7F8    $1938   JP       $938            ; Jump to 938
$7FA    $FAE9   UNKNOWN  FAE9            ; Unknown Fxxx instruction
$7FC    $2435   CALL     $435            ; Call subroutine at 435
$7FE    $84B8   UNKNOWN  84B8            ; Unknown 8xxx instruction
$800    $7298   ADD      V2, #98         ; Add 152 to V2
$802    $BF96   JP       V0, $F96        ; Jump to V0 + F96
$804    $3BFA   SE       VB, #FA         ; Skip if VB == 250
$806    $049A   SYS      $49A            ; System call to 49A
$808    $A26D   LD       I, $26D         ; Load 26D into I
$80A    $DA98   DRW      VA, V9, #8      ; Draw 8-byte sprite at VA, V9
$80C    $4FC8   SNE      VF, #C8         ; Skip if VF != 200
$80E    $DFA7   DRW      VF, VA, #7      ; Draw 7-byte sprite at VF, VA
$810    $2FB2   CALL     $FB2            ; Call subroutine at FB2
$812    $F3F8   UNKNOWN  F3F8            ; Unknown Fxxx instruction
$814    $E791   UNKNOWN  $E791           ; Unknown Exxx instruction
$816    $2C37   CALL     $C37            ; Call subroutine at C37
$818    $C17D   RND      V1, #7D         ; V1 = random & 7D
$81A    $37BB   SE       V7, #BB         ; Skip if V7 == 187
$81C    $7534   ADD      V5, #34         ; Add 52 to V5
$81E    $6BC5   LD       VB, #C5         ; Load 197 into VB
$820    $7570   ADD      V5, #70         ; Add 112 to V5
$822    $4F2C   SNE      VF, #2C         ; Skip if VF != 44
$824    $CE60   RND      VE, #60         ; VE = random & 60
$826    $E830   UNKNOWN  $E830           ; Unknown Exxx instruction
$828    $8BC3   XOR      VB, VC          ; VB ^= VC
$82A    $072B   SYS      $72B            ; System call to 72B
$82C    $F248   UNKNOWN  F248            ; Unknown Fxxx instruction
$82E    $0F49   SYS      $F49            ; System call to F49
$830    $54A8   UNKNOWN  $54A8           ; Unknown 5xxx instruction
$832    $403C   SNE      V0, #3C         ; Skip if V0 != 60
$834    $BE18   JP       V0, $E18        ; Jump to V0 + E18
$836    $D902   DRW      V9, V0, #2      ; Draw 2-byte sprite at V9, V0
$838    $08DA   SYS      $8DA            ; System call to 8DA
$83A    $9611   UNKNOWN  $9611           ; Unknown 9xxx instruction
$83C    $9C54   UNKNOWN  $9C54           ; Unknown 9xxx instruction
$83E    $8A8C   UNKNOWN  8A8C            ; Unknown 8xxx instruction
$840    $69BE   LD       V9, #BE         ; Load 190 into V9
$842    $7D71   ADD      VD, #71         ; Add 113 to VD
$844    $8A5D   UNKNOWN  8A5D            ; Unknown 8xxx instruction
$846    $DE3B   DRW      VE, V3, #B      ; Draw 11-byte sprite at VE, V3
$848    $E9A4   UNKNOWN  $E9A4           ; Unknown Exxx instruction
$84A    $11E9   JP       $1E9            ; Jump to 1E9
$84C    $8675   SUB      V6, V7          ; V6 -= V7, VF = !borrow
$84E    $3B9D   SE       VB, #9D         ; Skip if VB == 157
$850    $DA4A   DRW      VA, V4, #A      ; Draw 10-byte sprite at VA, V4
$852    $84DE   SHL      V4              ; V4 <<= 1, VF = MSB
$854    $E477   UNKNOWN  $E477           ; Unknown Exxx instruction
$856    $81E7   SUBN     V1, VE          ; V1 = VE - V1, VF = !borrow
$858    $3BA0   SE       VB, #A0         ; Skip if VB == 160
$85A    $31CE   SE       V1, #CE         ; Skip if V1 == 206
$85C    $FA59   UNKNOWN  FA59            ; Unknown Fxxx instruction
$85E    $694D   LD       V9, #4D         ; Load 77 into V9
$860    $07A8   SYS      $7A8            ; System call to 7A8
$862    $541A   UNKNOWN  $541A           ; Unknown 5xxx instruction
$864    $B4E9   JP       V0, $4E9        ; Jump to V0 + 4E9
$866    $0F96   SYS      $F96            ; System call to F96
$868    $5931   UNKNOWN  $5931           ; Unknown 5xxx instruction
$86A    $6A9C   LD       VA, #9C         ; Load 156 into VA
$86C    $8E45   SUB      VE, V4          ; VE -= V4, VF = !borrow
$86E    $D760   DRW      V7, V6, #0      ; Draw 0-byte sprite at V7, V6
$870    $BBA0   JP       V0, $BA0        ; Jump to V0 + BA0
$872    $2E83   CALL     $E83            ; Call subroutine at E83
$874    $0AD8   SYS      $AD8            ; System call to AD8
$876    $8C32   AND      VC, V3          ; VC &= V3
$878    $E921   UNKNOWN  $E921           ; Unknown Exxx instruction
$87A    $A213   LD       I, $213         ; Load 213 into I
$87C    $76F1   ADD      V6, #F1         ; Add 241 to V6
$87E    $AA46   LD       I, $A46         ; Load A46 into I
$880    $9CC8   UNKNOWN  $9CC8           ; Unknown 9xxx instruction
$882    $A66F   LD       I, $66F         ; Load 66F into I
$884    $5722   UNKNOWN  $5722           ; Unknown 5xxx instruction
$886    $8B42   AND      VB, V4          ; VB &= V4
$888    $D295   DRW      V2, V9, #5      ; Draw 5-byte sprite at V2, V9
$88A    $DBB8   DRW      VB, VB, #8      ; Draw 8-byte sprite at VB, VB
$88C    $BDAA   JP       V0, $DAA        ; Jump to V0 + DAA
$88E    $A196   LD       I, $196         ; Load 196 into I
$890    $EA54   UNKNOWN  $EA54           ; Unknown Exxx instruction
$892    $BFFE   JP       V0, $FFE        ; Jump to V0 + FFE
$894    $9479   UNKNOWN  $9479           ; Unknown 9xxx instruction
$896    $B599   JP       V0, $599        ; Jump to V0 + 599
$898    $E9BA   UNKNOWN  $E9BA           ; Unknown Exxx instruction
$89A    $9292   UNKNOWN  $9292           ; Unknown 9xxx instruction
$89C    $A522   LD       I, $522         ; Load 522 into I
$89E    $0B99   SYS      $B99            ; System call to B99
$8A0    $06CF   SYS      $6CF            ; System call to 6CF
$8A2    $DF2E   DRW      VF, V2, #E      ; Draw 14-byte sprite at VF, V2
$8A4    $F54D   UNKNOWN  F54D            ; Unknown Fxxx instruction
$8A6    $F35F   UNKNOWN  F35F            ; Unknown Fxxx instruction
$8A8    $FBB7   UNKNOWN  FBB7            ; Unknown Fxxx instruction
$8AA    $348F   SE       V4, #8F         ; Skip if V4 == 143
$8AC    $4E2F   SNE      VE, #2F         ; Skip if VE != 47
$8AE    $772D   ADD      V7, #2D         ; Add 45 to V7
$8B0    $7BA2   ADD      VB, #A2         ; Add 162 to VB
$8B2    $73BF   ADD      V3, #BF         ; Add 191 to V3
$8B4    $DB7F   DRW      VB, V7, #F      ; Draw 15-byte sprite at VB, V7
$8B6    $54E2   UNKNOWN  $54E2           ; Unknown 5xxx instruction
$8B8    $D29D   DRW      V2, V9, #D      ; Draw 13-byte sprite at V2, V9
$8BA    $A9F9   LD       I, $9F9         ; Load 9F9 into I
$8BC    $BF84   JP       V0, $F84        ; Jump to V0 + F84
$8BE    $BBAD   JP       V0, $BAD        ; Jump to V0 + BAD
$8C0    $3920   SE       V9, #20         ; Skip if V9 == 32
$8C2    $4EEB   SNE      VE, #EB         ; Skip if VE != 235
$8C4    $8A7A   UNKNOWN  8A7A            ; Unknown 8xxx instruction
$8C6    $BD0E   JP       V0, $D0E        ; Jump to V0 + D0E
$8C8    $B586   JP       V0, $586        ; Jump to V0 + 586
$8CA    $C200   RND      V2, #00         ; V2 = random & 00
$8CC    $FC9F   UNKNOWN  FC9F            ; Unknown Fxxx instruction
$8CE    $9C7A   UNKNOWN  $9C7A           ; Unknown 9xxx instruction
$8D0    $2FE3   CALL     $FE3            ; Call subroutine at FE3
$8D2    $CEBB   RND      VE, #BB         ; VE = random & BB
$8D4    $3C56   SE       VC, #56         ; Skip if VC == 86
$8D6    $6D33   LD       VD, #33         ; Load 51 into VD
$8D8    $D8DC   DRW      V8, VD, #C      ; Draw 12-byte sprite at V8, VD
$8DA    $F49A   UNKNOWN  F49A            ; Unknown Fxxx instruction
$8DC    $5B36   UNKNOWN  $5B36           ; Unknown 5xxx instruction
$8DE    $B6D2   JP       V0, $6D2        ; Jump to V0 + 6D2
$8E0    $DDBD   DRW      VD, VB, #D      ; Draw 13-byte sprite at VD, VB
$8E2    $D81D   DRW      V8, V1, #D      ; Draw 13-byte sprite at V8, V1
$8E4    $AABF   LD       I, $ABF         ; Load ABF into I
$8E6    $0953   SYS      $953            ; System call to 953
$8E8    $8DD0   LD       VD, VD          ; VD = VD
$8EA    $A433   LD       I, $433         ; Load 433 into I
$8EC    $4C31   SNE      VC, #31         ; Skip if VC != 49
$8EE    $A87A   LD       I, $87A         ; Load 87A into I
$8F0    $C121   RND      V1, #21         ; V1 = random & 21
$8F2    $443B   SNE      V4, #3B         ; Skip if V4 != 59
$8F4    $1FF1   JP       $FF1            ; Jump to FF1
$8F6    $C94B   RND      V9, #4B         ; V9 = random & 4B
$8F8    $A880   LD       I, $880         ; Load 880 into I
$8FA    $02E1   SYS      $2E1            ; System call to 2E1
$8FC    $9926   UNKNOWN  $9926           ; Unknown 9xxx instruction
$8FE    $D0B0   DRW      V0, VB, #0      ; Draw 0-byte sprite at V0, VB
$900    $3298   SE       V2, #98         ; Skip if V2 == 152
$902    $A21E   LD       I, $21E         ; Load 21E into I
$904    $3E98   SE       VE, #98         ; Skip if VE == 152
$906    $E256   UNKNOWN  $E256           ; Unknown Exxx instruction
$908    $F948   UNKNOWN  F948            ; Unknown Fxxx instruction
$90A    $5C14   UNKNOWN  $5C14           ; Unknown 5xxx instruction
$90C    $3860   SE       V8, #60         ; Skip if V8 == 96
$90E    $6A8E   LD       VA, #8E         ; Load 142 into VA
$910    $E38A   UNKNOWN  $E38A           ; Unknown Exxx instruction
$912    $3E1B   SE       VE, #1B         ; Skip if VE == 27
$914    $8054   ADD      V0, V5          ; V0 += V5, VF = carry
$916    $746B   ADD      V4, #6B         ; Add 107 to V4
$918    $F851   UNKNOWN  F851            ; Unknown Fxxx instruction
$91A    $65B8   LD       V5, #B8         ; Load 184 into V5
$91C    $BA14   JP       V0, $A14        ; Jump to V0 + A14
$91E    $81B5   SUB      V1, VB          ; V1 -= VB, VF = !borrow
$920    $5110   SE       V1, V1          ; Skip if V1 == V1
$922    $DCE9   DRW      VC, VE, #9      ; Draw 9-byte sprite at VC, VE
$924    $32EF   SE       V2, #EF         ; Skip if V2 == 239
$926    $3F89   SE       VF, #89         ; Skip if VF == 137
$928    $C023   RND      V0, #23         ; V0 = random & 23
$92A    $B3BF   JP       V0, $3BF        ; Jump to V0 + 3BF
$92C    $0A69   SYS      $A69            ; System call to A69
$92E    $51A0   SE       V1, VA          ; Skip if V1 == VA
$930    $E5F7   UNKNOWN  $E5F7           ; Unknown Exxx instruction
$932    $270A   CALL     $70A            ; Call subroutine at 70A
$934    $23F6   CALL     $3F6            ; Call subroutine at 3F6
$936    $342F   SE       V4, #2F         ; Skip if V4 == 47
$938    $0121   SYS      $121            ; System call to 121
$93A    $5A65   UNKNOWN  $5A65           ; Unknown 5xxx instruction
$93C    $09AD   SYS      $9AD            ; System call to 9AD
$93E    $74D2   ADD      V4, #D2         ; Add 210 to V4
$940    $7F96   ADD      VF, #96         ; Add 150 to VF
$942    $0592   SYS      $592            ; System call to 592
$944    $8AD5   SUB      VA, VD          ; VA -= VD, VF = !borrow
$946    $C5E5   RND      V5, #E5         ; V5 = random & E5
$948    $79E8   ADD      V9, #E8         ; Add 232 to V9
$94A    $8B62   AND      VB, V6          ; VB &= V6
$94C    $53DB   UNKNOWN  $53DB           ; Unknown 5xxx instruction
$94E    $8E38   UNKNOWN  8E38            ; Unknown 8xxx instruction
$950    $CC01   RND      VC, #01         ; VC = random & 01
$952    $0322   SYS      $322            ; System call to 322
$954    $39DB   SE       V9, #DB         ; Skip if V9 == 219
$956    $F6BF   UNKNOWN  F6BF            ; Unknown Fxxx instruction
$958    $3321   SE       V3, #21         ; Skip if V3 == 33
$95A    $4981   SNE      V9, #81         ; Skip if V9 != 129
$95C    $C400   RND      V4, #00         ; V4 = random & 00
$95E    $5D5C   UNKNOWN  $5D5C           ; Unknown 5xxx instruction
$960    $D4FA   DRW      V4, VF, #A      ; Draw 10-byte sprite at V4, VF
$962    $DA74   DRW      VA, V7, #4      ; Draw 4-byte sprite at VA, V7
$964    $BD8E   JP       V0, $D8E        ; Jump to V0 + D8E
$966    $44F4   SNE      V4, #F4         ; Skip if V4 != 244
$968    $9653   UNKNOWN  $9653           ; Unknown 9xxx instruction
$96A    $73BE   ADD      V3, #BE         ; Add 190 to V3
$96C    $D4F2   DRW      V4, VF, #2      ; Draw 2-byte sprite at V4, VF
$96E    $714E   ADD      V1, #4E         ; Add 78 to V1
$970    $06D5   SYS      $6D5            ; System call to 6D5
$972    $F12D   UNKNOWN  F12D            ; Unknown Fxxx instruction
$974    $C605   RND      V6, #05         ; V6 = random & 05
$976    $56A2   UNKNOWN  $56A2           ; Unknown 5xxx instruction
$978    $0603   SYS      $603            ; System call to 603
$97A    $5AB3   UNKNOWN  $5AB3           ; Unknown 5xxx instruction
$97C    $FE64   UNKNOWN  FE64            ; Unknown Fxxx instruction
$97E    $74D8   ADD      V4, #D8         ; Add 216 to V4
$980    $2605   CALL     $605            ; Call subroutine at 605
$982    $4E61   SNE      VE, #61         ; Skip if VE != 97
$984    $7F83   ADD      VF, #83         ; Add 131 to VF
$986    $48C9   SNE      V8, #C9         ; Skip if V8 != 201
$988    $B14C   JP       V0, $14C        ; Jump to V0 + 14C
$98A    $E432   UNKNOWN  $E432           ; Unknown Exxx instruction
$98C    $B86B   JP       V0, $86B        ; Jump to V0 + 86B
$98E    $7F6E   ADD      VF, #6E         ; Add 110 to VF
$990    $24CD   CALL     $4CD            ; Call subroutine at 4CD
$992    $5DB3   UNKNOWN  $5DB3           ; Unknown 5xxx instruction
$994    $11FE   JP       $1FE            ; Jump to 1FE
$996    $58E9   UNKNOWN  $58E9           ; Unknown 5xxx instruction
$998    $5D6E   UNKNOWN  $5D6E           ; Unknown 5xxx instruction
$99A    $3738   SE       V7, #38         ; Skip if V7 == 56
$99C    $F221   UNKNOWN  F221            ; Unknown Fxxx instruction
$99E    $3E3A   SE       VE, #3A         ; Skip if VE == 58
$9A0    $48E2   SNE      V8, #E2         ; Skip if V8 != 226
$9A2    $4C56   SNE      VC, #56         ; Skip if VC != 86
$9A4    $555D   UNKNOWN  $555D           ; Unknown 5xxx instruction
$9A6    $D09A   DRW      V0, V9, #A      ; Draw 10-byte sprite at V0, V9
$9A8    $AC47   LD       I, $C47         ; Load C47 into I
$9AA    $6ECE   LD       VE, #CE         ; Load 206 into VE
$9AC    $93F1   UNKNOWN  $93F1           ; Unknown 9xxx instruction
$9AE    $DE0C   DRW      VE, V0, #C      ; Draw 12-byte sprite at VE, V0
$9B0    $7409   ADD      V4, #09         ; Add 9 to V4
$9B2    $8395   SUB      V3, V9          ; V3 -= V9, VF = !borrow
$9B4    $AA24   LD       I, $A24         ; Load A24 into I
$9B6    $818D   UNKNOWN  818D            ; Unknown 8xxx instruction
$9B8    $0AD4   SYS      $AD4            ; System call to AD4
$9BA    $D56A   DRW      V5, V6, #A      ; Draw 10-byte sprite at V5, V6
$9BC    $4A2B   SNE      VA, #2B         ; Skip if VA != 43
$9BE    $C1DF   RND      V1, #DF         ; V1 = random & DF
$9C0    $0AC6   SYS      $AC6            ; System call to AC6
$9C2    $1837   JP       $837            ; Jump to 837
$9C4    $ECCD   UNKNOWN  $ECCD           ; Unknown Exxx instruction
$9C6    $2457   CALL     $457            ; Call subroutine at 457
$9C8    $05AC   SYS      $5AC            ; System call to 5AC
$9CA    $0D7F   SYS      $D7F            ; System call to D7F
$9CC    $2D97   CALL     $D97            ; Call subroutine at D97
$9CE    $9E86   UNKNOWN  $9E86           ; Unknown 9xxx instruction
$9D0    $5BA3   UNKNOWN  $5BA3           ; Unknown 5xxx instruction
$9D2    $CF8A   RND      VF, #8A         ; VF = random & 8A
$9D4    $FFD4   UNKNOWN  FFD4            ; Unknown Fxxx instruction
$9D6    $9831   UNKNOWN  $9831           ; Unknown 9xxx instruction
$9D8    $1DA9   JP       $DA9            ; Jump to DA9
$9DA    $73E8   ADD      V3, #E8         ; Add 232 to V3
$9DC    $C4E1   RND      V4, #E1         ; V4 = random & E1
$9DE    $1A05   JP       $A05            ; Jump to A05
$9E0    $14A4   JP       $4A4            ; Jump to 4A4
$9E2    $45F8   SNE      V5, #F8         ; Skip if V5 != 248
$9E4    $FE67   UNKNOWN  FE67            ; Unknown Fxxx instruction
$9E6    $BD9D   JP       V0, $D9D        ; Jump to V0 + D9D
$9E8    $D341   DRW      V3, V4, #1      ; Draw 1-byte sprite at V3, V4
$9EA    $730E   ADD      V3, #0E         ; Add 14 to V3
$9EC    $ED0F   UNKNOWN  $ED0F           ; Unknown Exxx instruction
$9EE    $005A   SYS      $05A            ; System call to 05A
$9F0    $39AF   SE       V9, #AF         ; Skip if V9 == 175
$9F2    $DD26   DRW      VD, V2, #6      ; Draw 6-byte sprite at VD, V2
$9F4    $4378   SNE      V3, #78         ; Skip if V3 != 120
$9F6    $ED87   UNKNOWN  $ED87           ; Unknown Exxx instruction
$9F8    $7F48   ADD      VF, #48         ; Add 72 to VF
$9FA    $B9BC   JP       V0, $9BC        ; Jump to V0 + 9BC
$9FC    $6E30   LD       VE, #30         ; Load 48 into VE
$9FE    $90BC   UNKNOWN  $90BC           ; Unknown 9xxx instruction
$A00    $845F   UNKNOWN  845F            ; Unknown 8xxx instruction
$A02    $C26C   RND      V2, #6C         ; V2 = random & 6C
$A04    $E13A   UNKNOWN  $E13A           ; Unknown Exxx instruction
$A06    $D007   DRW      V0, V0, #7      ; Draw 7-byte sprite at V0, V0
$A08    $A066   LD       I, $066         ; Load 066 into I
$A0A    $957D   UNKNOWN  $957D           ; Unknown 9xxx instruction
$A0C    $18A7   JP       $8A7            ; Jump to 8A7
$A0E    $8473   XOR      V4, V7          ; V4 ^= V7
$A10    $8062   AND      V0, V6          ; V0 &= V6
$A12    $47E2   SNE      V7, #E2         ; Skip if V7 != 226
$A14    $58A3   UNKNOWN  $58A3           ; Unknown 5xxx instruction
$A16    $9478   UNKNOWN  $9478           ; Unknown 9xxx instruction
$A18    $C9CE   RND      V9, #CE         ; V9 = random & CE
$A1A    $8291   OR       V2, V9          ; V2 |= V9
$A1C    $5645   UNKNOWN  $5645           ; Unknown 5xxx instruction
$A1E    $6074   LD       V0, #74         ; Load 116 into V0
$A20    $FD24   UNKNOWN  FD24            ; Unknown Fxxx instruction
$A22    $ED78   UNKNOWN  $ED78           ; Unknown Exxx instruction
$A24    $5B21   UNKNOWN  $5B21           ; Unknown 5xxx instruction
$A26    $DE3C   DRW      VE, V3, #C      ; Draw 12-byte sprite at VE, V3
$A28    $CB91   RND      VB, #91         ; VB = random & 91
$A2A    $1362   JP       $362            ; Jump to 362
$A2C    $398E   SE       V9, #8E         ; Skip if V9 == 142
$A2E    $70FC   ADD      V0, #FC         ; Add 252 to V0
$A30    $2970   CALL     $970            ; Call subroutine at 970
$A32    $335A   SE       V3, #5A         ; Skip if V3 == 90
$A34    $7935   ADD      V9, #35         ; Add 53 to V9
$A36    $32D0   SE       V2, #D0         ; Skip if V2 == 208
$A38    $434E   SNE      V3, #4E         ; Skip if V3 != 78
$A3A    $7967   ADD      V9, #67         ; Add 103 to V9
$A3C    $5B5C   UNKNOWN  $5B5C           ; Unknown 5xxx instruction
$A3E    $4E96   SNE      VE, #96         ; Skip if VE != 150
$A40    $288C   CALL     $88C            ; Call subroutine at 88C
$A42    $B599   JP       V0, $599        ; Jump to V0 + 599
$A44    $362E   SE       V6, #2E         ; Skip if V6 == 46
$A46    $FEAD   UNKNOWN  FEAD            ; Unknown Fxxx instruction
$A48    $67C3   LD       V7, #C3         ; Load 195 into V7
$A4A    $F4F9   UNKNOWN  F4F9            ; Unknown Fxxx instruction
$A4C    $433F   SNE      V3, #3F         ; Skip if V3 != 63
$A4E    $674F   LD       V7, #4F         ; Load 79 into V7
$A50    $A48A   LD       I, $48A         ; Load 48A into I
$A52    $D131   DRW      V1, V3, #1      ; Draw 1-byte sprite at V1, V3
$A54    $658A   LD       V5, #8A         ; Load 138 into V5
$A56    $46A1   SNE      V6, #A1         ; Skip if V6 != 161
$A58    $4492   SNE      V4, #92         ; Skip if V4 != 146
$A5A    $2BEF   CALL     $BEF            ; Call subroutine at BEF
$A5C    $01B7   SYS      $1B7            ; System call to 1B7
$A5E    $4836   SNE      V8, #36         ; Skip if V8 != 54
$A60    $3235   SE       V2, #35         ; Skip if V2 == 53
$A62    $F6DD   UNKNOWN  F6DD            ; Unknown Fxxx instruction
$A64    $1468   JP       $468            ; Jump to 468
$A66    $3F56   SE       VF, #56         ; Skip if VF == 86
$A68    $7C0A   ADD      VC, #0A         ; Add 10 to VC
$A6A    $0D06   SYS      $D06            ; System call to D06
$A6C    $311C   SE       V1, #1C         ; Skip if V1 == 28
$A6E    $BECE   JP       V0, $ECE        ; Jump to V0 + ECE
$A70    $13CF   JP       $3CF            ; Jump to 3CF
$A72    $A1E0   LD       I, $1E0         ; Load 1E0 into I
$A74    $0C1C   SYS      $C1C            ; System call to C1C
$A76    $84C4   ADD      V4, VC          ; V4 += VC, VF = carry
$A78    $6E85   LD       VE, #85         ; Load 133 into VE
$A7A    $2EFB   CALL     $EFB            ; Call subroutine at EFB
$A7C    $D4B4   DRW      V4, VB, #4      ; Draw 4-byte sprite at V4, VB
$A7E    $6949   LD       V9, #49         ; Load 73 into V9
$A80    $6E9E   LD       VE, #9E         ; Load 158 into VE
$A82    $D042   DRW      V0, V4, #2      ; Draw 2-byte sprite at V0, V4
$A84    $34D3   SE       V4, #D3         ; Skip if V4 == 211
$A86    $F83C   UNKNOWN  F83C            ; Unknown Fxxx instruction
$A88    $FE5E   UNKNOWN  FE5E            ; Unknown Fxxx instruction
$A8A    $B20B   JP       V0, $20B        ; Jump to V0 + 20B
$A8C    $5E90   SE       VE, V9          ; Skip if VE == V9
$A8E    $23F2   CALL     $3F2            ; Call subroutine at 3F2
$A90    $C1F3   RND      V1, #F3         ; V1 = random & F3
$A92    $4AE4   SNE      VA, #E4         ; Skip if VA != 228
$A94    $A46C   LD       I, $46C         ; Load 46C into I
$A96    $E8F7   UNKNOWN  $E8F7           ; Unknown Exxx instruction
$A98    $1A76   JP       $A76            ; Jump to A76
$A9A    $9449   UNKNOWN  $9449           ; Unknown 9xxx instruction
$A9C    $D521   DRW      V5, V2, #1      ; Draw 1-byte sprite at V5, V2
$A9E    $5E37   UNKNOWN  $5E37           ; Unknown 5xxx instruction
$AA0    $31DE   SE       V1, #DE         ; Skip if V1 == 222
$AA2    $F937   UNKNOWN  F937            ; Unknown Fxxx instruction
$AA4    $7E48   ADD      VE, #48         ; Add 72 to VE
$AA6    $EB91   UNKNOWN  $EB91           ; Unknown Exxx instruction
$AA8    $5809   UNKNOWN  $5809           ; Unknown 5xxx instruction
$AAA    $BC35   JP       V0, $C35        ; Jump to V0 + C35
$AAC    $2807   CALL     $807            ; Call subroutine at 807
$AAE    $6046   LD       V0, #46         ; Load 70 into V0
$AB0    $8C32   AND      VC, V3          ; VC &= V3
$AB2    $7AEB   ADD      VA, #EB         ; Add 235 to VA
$AB4    $520D   UNKNOWN  $520D           ; Unknown 5xxx instruction
$AB6    $593A   UNKNOWN  $593A           ; Unknown 5xxx instruction
$AB8    $8946   SHR      V9              ; V9 >>= 1, VF = LSB
$ABA    $7CD0   ADD      VC, #D0         ; Add 208 to VC
$ABC    $0479   SYS      $479            ; System call to 479
$ABE    $B489   JP       V0, $489        ; Jump to V0 + 489
$AC0    $C7FF   RND      V7, #FF         ; V7 = random & FF
$AC2    $CCEF   RND      VC, #EF         ; VC = random & EF
$AC4    $B71E   JP       V0, $71E        ; Jump to V0 + 71E
$AC6    $84A7   SUBN     V4, VA          ; V4 = VA - V4, VF = !borrow
$AC8    $93BA   UNKNOWN  $93BA           ; Unknown 9xxx instruction
$ACA    $C19F   RND      V1, #9F         ; V1 = random & 9F
$ACC    $E70B   UNKNOWN  $E70B           ; Unknown Exxx instruction
$ACE    $5583   UNKNOWN  $5583           ; Unknown 5xxx instruction
$AD0    $2060   CALL     $060            ; Call subroutine at 060
$AD2    $1550   JP       $550            ; Jump to 550
$AD4    $2218   CALL     $218            ; Call subroutine at 218
$AD6    $7690   ADD      V6, #90         ; Add 144 to V6
$AD8    $6125   LD       V1, #25         ; Load 37 into V1
$ADA    $C307   RND      V3, #07         ; V3 = random & 07
$ADC    $66C4   LD       V6, #C4         ; Load 196 into V6
$ADE    $CF5B   RND      VF, #5B         ; VF = random & 5B
$AE0    $D99F   DRW      V9, V9, #F      ; Draw 15-byte sprite at V9, V9
$AE2    $FBA7   UNKNOWN  FBA7            ; Unknown Fxxx instruction
$AE4    $3AA2   SE       VA, #A2         ; Skip if VA == 162
$AE6    $1C0C   JP       $C0C            ; Jump to C0C
$AE8    $37DC   SE       V7, #DC         ; Skip if V7 == 220
$AEA    $5169   UNKNOWN  $5169           ; Unknown 5xxx instruction
$AEC    $CA7B   RND      VA, #7B         ; VA = random & 7B
$AEE    $6A0C   LD       VA, #0C         ; Load 12 into VA
$AF0    $AD58   LD       I, $D58         ; Load D58 into I
$AF2    $06D9   SYS      $6D9            ; System call to 6D9
$AF4    $D18C   DRW      V1, V8, #C      ; Draw 12-byte sprite at V1, V8
$AF6    $C992   RND      V9, #92         ; V9 = random & 92
$AF8    $7DCE   ADD      VD, #CE         ; Add 206 to VD
$AFA    $3240   SE       V2, #40         ; Skip if V2 == 64
$AFC    $26E1   CALL     $6E1            ; Call subroutine at 6E1
$AFE    $DABD   DRW      VA, VB, #D      ; Draw 13-byte sprite at VA, VB
$B00    $40D6   SNE      V0, #D6         ; Skip if V0 != 214
$B02    $93E2   UNKNOWN  $93E2           ; Unknown 9xxx instruction
$B04    $8B61   OR       VB, V6          ; VB |= V6
$B06    $1B35   JP       $B35            ; Jump to B35
$B08    $976B   UNKNOWN  $976B           ; Unknown 9xxx instruction
$B0A    $8BC1   OR       VB, VC          ; VB |= VC
$B0C    $C9E8   RND      V9, #E8         ; V9 = random & E8
$B0E    $B19B   JP       V0, $19B        ; Jump to V0 + 19B
$B10    $6AEC   LD       VA, #EC         ; Load 236 into VA
$B12    $3743   SE       V7, #43         ; Skip if V7 == 67
$B14    $8C6C   UNKNOWN  8C6C            ; Unknown 8xxx instruction
$B16    $CECD   RND      VE, #CD         ; VE = random & CD
$B18    $DCA8   DRW      VC, VA, #8      ; Draw 8-byte sprite at VC, VA
$B1A    $E340   UNKNOWN  $E340           ; Unknown Exxx instruction
$B1C    $7694   ADD      V6, #94         ; Add 148 to V6
$B1E    $6DE6   LD       VD, #E6         ; Load 230 into VD
$B20    $A1A0   LD       I, $1A0         ; Load 1A0 into I
$B22    $D417   DRW      V4, V1, #7      ; Draw 7-byte sprite at V4, V1
$B24    $211B   CALL     $11B            ; Call subroutine at 11B
$B26    $338B   SE       V3, #8B         ; Skip if V3 == 139
$B28    $5C63   UNKNOWN  $5C63           ; Unknown 5xxx instruction
$B2A    $E42A   UNKNOWN  $E42A           ; Unknown Exxx instruction
$B2C    $3127   SE       V1, #27         ; Skip if V1 == 39
$B2E    $27E9   CALL     $7E9            ; Call subroutine at 7E9
$B30    $72FC   ADD      V2, #FC         ; Add 252 to V2
$B32    $4603   SNE      V6, #03         ; Skip if V6 != 3
$B34    $6705   LD       V7, #05         ; Load 5 into V7
$B36    $B8F8   JP       V0, $8F8        ; Jump to V0 + 8F8
$B38    $F0DE   UNKNOWN  F0DE            ; Unknown Fxxx instruction
$B3A    $21A2   CALL     $1A2            ; Call subroutine at 1A2
$B3C    $BA40   JP       V0, $A40        ; Jump to V0 + A40
$B3E    $C3C4   RND      V3, #C4         ; V3 = random & C4
$B40    $2C2B   CALL     $C2B            ; Call subroutine at C2B
$B42    $94E5   UNKNOWN  $94E5           ; Unknown 9xxx instruction
$B44    $B0FB   JP       V0, $0FB        ; Jump to V0 + 0FB
$B46    $ECC1   UNKNOWN  $ECC1           ; Unknown Exxx instruction
$B48    $EE6E   UNKNOWN  $EE6E           ; Unknown Exxx instruction
$B4A    $95A5   UNKNOWN  $95A5           ; Unknown 9xxx instruction
$B4C    $640D   LD       V4, #0D         ; Load 13 into V4
$B4E    $3570   SE       V5, #70         ; Skip if V5 == 112
$B50    $C6B0   RND      V6, #B0         ; V6 = random & B0
$B52    $0304   SYS      $304            ; System call to 304
$B54    $47A3   SNE      V7, #A3         ; Skip if V7 != 163
$B56    $3FF5   SE       VF, #F5         ; Skip if VF == 245
$B58    $93E8   UNKNOWN  $93E8           ; Unknown 9xxx instruction
$B5A    $3A61   SE       VA, #61         ; Skip if VA == 97
$B5C    $EE75   UNKNOWN  $EE75           ; Unknown Exxx instruction
$B5E    $C421   RND      V4, #21         ; V4 = random & 21
$B60    $2C1C   CALL     $C1C            ; Call subroutine at C1C
$B62    $8A9F   UNKNOWN  8A9F            ; Unknown 8xxx instruction
$B64    $357F   SE       V5, #7F         ; Skip if V5 == 127
$B66    $F74E   UNKNOWN  F74E            ; Unknown Fxxx instruction
$B68    $988E   UNKNOWN  $988E           ; Unknown 9xxx instruction
$B6A    $139F   JP       $39F            ; Jump to 39F
$B6C    $1BCB   JP       $BCB            ; Jump to BCB
$B6E    $2356   CALL     $356            ; Call subroutine at 356
$B70    $E74F   UNKNOWN  $E74F           ; Unknown Exxx instruction
$B72    $8982   AND      V9, V8          ; V9 &= V8
$B74    $A6AB   LD       I, $6AB         ; Load 6AB into I
$B76    $F442   UNKNOWN  F442            ; Unknown Fxxx instruction
$B78    $F268   UNKNOWN  F268            ; Unknown Fxxx instruction
$B7A    $923C   UNKNOWN  $923C           ; Unknown 9xxx instruction
$B7C    $4E71   SNE      VE, #71         ; Skip if VE != 113
$B7E    $F5B7   UNKNOWN  F5B7            ; Unknown Fxxx instruction
$B80    $B907   JP       V0, $907        ; Jump to V0 + 907
$B82    $4373   SNE      V3, #73         ; Skip if V3 != 115
$B84    $543C   UNKNOWN  $543C           ; Unknown 5xxx instruction
$B86    $0248   SYS      $248            ; System call to 248
$B88    $8906   SHR      V9              ; V9 >>= 1, VF = LSB
$B8A    $E160   UNKNOWN  $E160           ; Unknown Exxx instruction
$B8C    $693C   LD       V9, #3C         ; Load 60 into V9
$B8E    $A5BD   LD       I, $5BD         ; Load 5BD into I
$B90    $0358   SYS      $358            ; System call to 358
$B92    $2D83   CALL     $D83            ; Call subroutine at D83
$B94    $822F   UNKNOWN  822F            ; Unknown 8xxx instruction
$B96    $1FAF   JP       $FAF            ; Jump to FAF
$B98    $BD4C   JP       V0, $D4C        ; Jump to V0 + D4C
$B9A    $177A   JP       $77A            ; Jump to 77A
$B9C    $03A8   SYS      $3A8            ; System call to 3A8
$B9E    $B600   JP       V0, $600        ; Jump to V0 + 600
$BA0    $2871   CALL     $871            ; Call subroutine at 871
$BA2    $7ED6   ADD      VE, #D6         ; Add 214 to VE
$BA4    $8679   UNKNOWN  8679            ; Unknown 8xxx instruction
$BA6    $6A72   LD       VA, #72         ; Load 114 into VA
$BA8    $5A8A   UNKNOWN  $5A8A           ; Unknown 5xxx instruction
$BAA    $D74D   DRW      V7, V4, #D      ; Draw 13-byte sprite at V7, V4
$BAC    $A3C7   LD       I, $3C7         ; Load 3C7 into I
$BAE    $4E4B   SNE      VE, #4B         ; Skip if VE != 75
$BB0    $BCB9   JP       V0, $CB9        ; Jump to V0 + CB9
$BB2    $23A6   CALL     $3A6            ; Call subroutine at 3A6
$BB4    $22C4   CALL     $2C4            ; Call subroutine at 2C4
$BB6    $2430   CALL     $430            ; Call subroutine at 430
$BB8    $31A3   SE       V1, #A3         ; Skip if V1 == 163
$BBA    $C6C7   RND      V6, #C7         ; V6 = random & C7
$BBC    $3480   SE       V4, #80         ; Skip if V4 == 128
$BBE    $9616   UNKNOWN  $9616           ; Unknown 9xxx instruction
$BC0    $E70B   UNKNOWN  $E70B           ; Unknown Exxx instruction
$BC2    $DD4E   DRW      VD, V4, #E      ; Draw 14-byte sprite at VD, V4
$BC4    $D9D8   DRW      V9, VD, #8      ; Draw 8-byte sprite at V9, VD
$BC6    $9123   UNKNOWN  $9123           ; Unknown 9xxx instruction
$BC8    $0C6C   SYS      $C6C            ; System call to C6C
$BCA    $B9AA   JP       V0, $9AA        ; Jump to V0 + 9AA
$BCC    $A7C6   LD       I, $7C6         ; Load 7C6 into I
$BCE    $B25F   JP       V0, $25F        ; Jump to V0 + 25F
$BD0    $BCE7   JP       V0, $CE7        ; Jump to V0 + CE7
$BD2    $A038   LD       I, $038         ; Load 038 into I
$BD4    $F969   UNKNOWN  F969            ; Unknown Fxxx instruction
$BD6    $9043   UNKNOWN  $9043           ; Unknown 9xxx instruction
$BD8    $959A   UNKNOWN  $959A           ; Unknown 9xxx instruction
$BDA    $7E57   ADD      VE, #57         ; Add 87 to VE
$BDC    $76C8   ADD      V6, #C8         ; Add 200 to V6
$BDE    $395C   SE       V9, #5C         ; Skip if V9 == 92
$BE0    $024B   SYS      $24B            ; System call to 24B
$BE2    $8EB0   LD       VE, VB          ; VE = VB
$BE4    $FED4   UNKNOWN  FED4            ; Unknown Fxxx instruction
$BE6    $1551   JP       $551            ; Jump to 551
$BE8    $4066   SNE      V0, #66         ; Skip if V0 != 102
$BEA    $48A2   SNE      V8, #A2         ; Skip if V8 != 162
$BEC    $B5D4   JP       V0, $5D4        ; Jump to V0 + 5D4
$BEE    $BAD0   JP       V0, $AD0        ; Jump to V0 + AD0
$BF0    $C952   RND      V9, #52         ; V9 = random & 52
$BF2    $AB2C   LD       I, $B2C         ; Load B2C into I
$BF4    $BBF9   JP       V0, $BF9        ; Jump to V0 + BF9
$BF6    $5CD9   UNKNOWN  $5CD9           ; Unknown 5xxx instruction
$BF8    $095A   SYS      $95A            ; System call to 95A
$BFA    $4644   SNE      V6, #44         ; Skip if V6 != 68
$BFC    $30FE   SE       V0, #FE         ; Skip if V0 == 254
$BFE    $33F9   SE       V3, #F9         ; Skip if V3 == 249
$C00    $45B4   SNE      V5, #B4         ; Skip if V5 != 180
$C02    $50F8   UNKNOWN  $50F8           ; Unknown 5xxx instruction
$C04    $2A6E   CALL     $A6E            ; Call subroutine at A6E
$C06    $095B   SYS      $95B            ; System call to 95B
$C08    $A2A1   LD       I, $2A1         ; Load 2A1 into I
$C0A    $1DA7   JP       $DA7            ; Jump to DA7
$C0C    $A6D7   LD       I, $6D7         ; Load 6D7 into I
$C0E    $BFD5   JP       V0, $FD5        ; Jump to V0 + FD5
$C10    $432E   SNE      V3, #2E         ; Skip if V3 != 46
$C12    $D21B   DRW      V2, V1, #B      ; Draw 11-byte sprite at V2, V1
$C14    $ADD7   LD       I, $DD7         ; Load DD7 into I
$C16    $8552   AND      V5, V5          ; V5 &= V5
$C18    $47ED   SNE      V7, #ED         ; Skip if V7 != 237
$C1A    $CB26   RND      VB, #26         ; VB = random & 26
$C1C    $4FE5   SNE      VF, #E5         ; Skip if VF != 229
$C1E    $D8AC   DRW      V8, VA, #C      ; Draw 12-byte sprite at V8, VA
$C20    $0944   SYS      $944            ; System call to 944
$C22    $EDB9   UNKNOWN  $EDB9           ; Unknown Exxx instruction
$C24    $65BB   LD       V5, #BB         ; Load 187 into V5
$C26    $8F43   XOR      VF, V4          ; VF ^= V4
$C28    $533F   UNKNOWN  $533F           ; Unknown 5xxx instruction
$C2A    $4876   SNE      V8, #76         ; Skip if V8 != 118
$C2C    $FC5A   UNKNOWN  FC5A            ; Unknown Fxxx instruction
$C2E    $5BAA   UNKNOWN  $5BAA           ; Unknown 5xxx instruction
$C30    $3218   SE       V2, #18         ; Skip if V2 == 24
$C32    $D81E   DRW      V8, V1, #E      ; Draw 14-byte sprite at V8, V1
$C34    $3BBB   SE       VB, #BB         ; Skip if VB == 187
$C36    $AE46   LD       I, $E46         ; Load E46 into I
$C38    $02CC   SYS      $2CC            ; System call to 2CC
$C3A    $A658   LD       I, $658         ; Load 658 into I
$C3C    $71B3   ADD      V1, #B3         ; Add 179 to V1
$C3E    $7E5B   ADD      VE, #5B         ; Add 91 to VE
$C40    $8982   AND      V9, V8          ; V9 &= V8
$C42    $9F4A   UNKNOWN  $9F4A           ; Unknown 9xxx instruction
$C44    $5ADC   UNKNOWN  $5ADC           ; Unknown 5xxx instruction
$C46    $5CB2   UNKNOWN  $5CB2           ; Unknown 5xxx instruction
$C48    $2B72   CALL     $B72            ; Call subroutine at B72
$C4A    $C4CE   RND      V4, #CE         ; V4 = random & CE
$C4C    $9F3C   UNKNOWN  $9F3C           ; Unknown 9xxx instruction
$C4E    $7A3C   ADD      VA, #3C         ; Add 60 to VA
$C50    $B17E   JP       V0, $17E        ; Jump to V0 + 17E
$C52    $6735   LD       V7, #35         ; Load 53 into V7
$C54    $435A   SNE      V3, #5A         ; Skip if V3 != 90
$C56    $3C13   SE       VC, #13         ; Skip if VC == 19
$C58    $B286   JP       V0, $286        ; Jump to V0 + 286
$C5A    $8FC0   LD       VF, VC          ; VF = VC
$C5C    $F88D   UNKNOWN  F88D            ; Unknown Fxxx instruction
$C5E    $A3F4   LD       I, $3F4         ; Load 3F4 into I
$C60    $1C49   JP       $C49            ; Jump to C49
$C62    $3999   SE       V9, #99         ; Skip if V9 == 153
$C64    $6D6E   LD       VD, #6E         ; Load 110 into VD
$C66    $34E4   SE       V4, #E4         ; Skip if V4 == 228
$C68    $2C66   CALL     $C66            ; Call subroutine at C66
$C6A    $24D5   CALL     $4D5            ; Call subroutine at 4D5
$C6C    $2421   CALL     $421            ; Call subroutine at 421
$C6E    $D328   DRW      V3, V2, #8      ; Draw 8-byte sprite at V3, V2
$C70    $D8A6   DRW      V8, VA, #6      ; Draw 6-byte sprite at V8, VA
$C72    $3643   SE       V6, #43         ; Skip if V6 == 67
$C74    $3D42   SE       VD, #42         ; Skip if VD == 66
$C76    $1E36   JP       $E36            ; Jump to E36
$C78    $899D   UNKNOWN  899D            ; Unknown 8xxx instruction
$C7A    $E2C8   UNKNOWN  $E2C8           ; Unknown Exxx instruction
$C7C    $B7EE   JP       V0, $7EE        ; Jump to V0 + 7EE
$C7E    $2731   CALL     $731            ; Call subroutine at 731
$C80    $C597   RND      V5, #97         ; V5 = random & 97
$C82    $5D72   UNKNOWN  $5D72           ; Unknown 5xxx instruction
$C84    $A63B   LD       I, $63B         ; Load 63B into I
$C86    $A464   LD       I, $464         ; Load 464 into I
$C88    $FFFB   UNKNOWN  FFFB            ; Unknown Fxxx instruction
$C8A    $4413   SNE      V4, #13         ; Skip if V4 != 19
$C8C    $BC8D   JP       V0, $C8D        ; Jump to V0 + C8D
$C8E    $DDD6   DRW      VD, VD, #6      ; Draw 6-byte sprite at VD, VD
$C90    $27E1   CALL     $7E1            ; Call subroutine at 7E1
$C92    $DD84   DRW      VD, V8, #4      ; Draw 4-byte sprite at VD, V8
$C94    $14D5   JP       $4D5            ; Jump to 4D5
$C96    $D383   DRW      V3, V8, #3      ; Draw 3-byte sprite at V3, V8
$C98    $485C   SNE      V8, #5C         ; Skip if V8 != 92
$C9A    $3AC5   SE       VA, #C5         ; Skip if VA == 197
$C9C    $7F98   ADD      VF, #98         ; Add 152 to VF
$C9E    $A38F   LD       I, $38F         ; Load 38F into I
$CA0    $DE79   DRW      VE, V7, #9      ; Draw 9-byte sprite at VE, V7
$CA2    $3B23   SE       VB, #23         ; Skip if VB == 35
$CA4    $54C1   UNKNOWN  $54C1           ; Unknown 5xxx instruction
$CA6    $E1C2   UNKNOWN  $E1C2           ; Unknown Exxx instruction
$CA8    $8651   OR       V6, V5          ; V6 |= V5
$CAA    $618B   LD       V1, #8B         ; Load 139 into V1
$CAC    $B651   JP       V0, $651        ; Jump to V0 + 651
$CAE    $DC4D   DRW      VC, V4, #D      ; Draw 13-byte sprite at VC, V4
$CB0    $CEAC   RND      VE, #AC         ; VE = random & AC
$CB2    $36D2   SE       V6, #D2         ; Skip if V6 == 210
$CB4    $3AFF   SE       VA, #FF         ; Skip if VA == 255
$CB6    $4D89   SNE      VD, #89         ; Skip if VD != 137
$CB8    $167E   JP       $67E            ; Jump to 67E
$CBA    $4AC1   SNE      VA, #C1         ; Skip if VA != 193
$CBC    $5077   UNKNOWN  $5077           ; Unknown 5xxx instruction
$CBE    $EA64   UNKNOWN  $EA64           ; Unknown Exxx instruction
$CC0    $8963   XOR      V9, V6          ; V9 ^= V6
$CC2    $3FDB   SE       VF, #DB         ; Skip if VF == 219
$CC4    $EB11   UNKNOWN  $EB11           ; Unknown Exxx instruction
$CC6    $7C26   ADD      VC, #26         ; Add 38 to VC
$CC8    $43CA   SNE      V3, #CA         ; Skip if V3 != 202
$CCA    $E1F1   UNKNOWN  $E1F1           ; Unknown Exxx instruction
$CCC    $96E0   SNE      V6, VE          ; Skip if V6 != VE
$CCE    $079F   SYS      $79F            ; System call to 79F
$CD0    $86BD   UNKNOWN  86BD            ; Unknown 8xxx instruction
$CD2    $AD6D   LD       I, $D6D         ; Load D6D into I
$CD4    $20D4   CALL     $0D4            ; Call subroutine at 0D4
$CD6    $8834   ADD      V8, V3          ; V8 += V3, VF = carry
$CD8    $CB85   RND      VB, #85         ; VB = random & 85
$CDA    $A1DB   LD       I, $1DB         ; Load 1DB into I
$CDC    $79D5   ADD      V9, #D5         ; Add 213 to V9
$CDE    $56AB   UNKNOWN  $56AB           ; Unknown 5xxx instruction
$CE0    $27FD   CALL     $7FD            ; Call subroutine at 7FD
$CE2    $47A6   SNE      V7, #A6         ; Skip if V7 != 166
$CE4    $8528   UNKNOWN  8528            ; Unknown 8xxx instruction
$CE6    $9D34   UNKNOWN  $9D34           ; Unknown 9xxx instruction
$CE8    $5491   UNKNOWN  $5491           ; Unknown 5xxx instruction
$CEA    $9ABA   UNKNOWN  $9ABA           ; Unknown 9xxx instruction
$CEC    $50A0   SE       V0, VA          ; Skip if V0 == VA
$CEE    $3854   SE       V8, #54         ; Skip if V8 == 84
$CF0    $40F3   SNE      V0, #F3         ; Skip if V0 != 243
$CF2    $39E3   SE       V9, #E3         ; Skip if V9 == 227
$CF4    $E31F   UNKNOWN  $E31F           ; Unknown Exxx instruction
$CF6    $1580   JP       $580            ; Jump to 580
$CF8    $FB46   UNKNOWN  FB46            ; Unknown Fxxx instruction
$CFA    $28E2   CALL     $8E2            ; Call subroutine at 8E2
$CFC    $A66C   LD       I, $66C         ; Load 66C into I
$CFE    $D3AD   DRW      V3, VA, #D      ; Draw 13-byte sprite at V3, VA
$D00    $76BF   ADD      V6, #BF         ; Add 191 to V6
$D02    $9BB0   SNE      VB, VB          ; Skip if VB != VB
$D04    $F1F3   UNKNOWN  F1F3            ; Unknown Fxxx instruction
$D06    $1105   JP       $105            ; Jump to 105
$D08    $3595   SE       V5, #95         ; Skip if V5 == 149
$D0A    $D22F   DRW      V2, V2, #F      ; Draw 15-byte sprite at V2, V2
$D0C    $DF14   DRW      VF, V1, #4      ; Draw 4-byte sprite at VF, V1
$D0E    $A9E3   LD       I, $9E3         ; Load 9E3 into I
$D10    $163E   JP       $63E            ; Jump to 63E
$D12    $F34C   UNKNOWN  F34C            ; Unknown Fxxx instruction
$D14    $C92B   RND      V9, #2B         ; V9 = random & 2B
$D16    $DF36   DRW      VF, V3, #6      ; Draw 6-byte sprite at VF, V3
$D18    $5F88   UNKNOWN  $5F88           ; Unknown 5xxx instruction
$D1A    $2630   CALL     $630            ; Call subroutine at 630
$D1C    $03B1   SYS      $3B1            ; System call to 3B1
$D1E    $B47D   JP       V0, $47D        ; Jump to V0 + 47D
$D20    $AB43   LD       I, $B43         ; Load B43 into I
$D22    $7842   ADD      V8, #42         ; Add 66 to V8
$D24    $384C   SE       V8, #4C         ; Skip if V8 == 76
$D26    $48F9   SNE      V8, #F9         ; Skip if V8 != 249
$D28    $2C73   CALL     $C73            ; Call subroutine at C73
$D2A    $AA53   LD       I, $A53         ; Load A53 into I
$D2C    $9938   UNKNOWN  $9938           ; Unknown 9xxx instruction
$D2E    $3833   SE       V8, #33         ; Skip if V8 == 51
$D30    $2632   CALL     $632            ; Call subroutine at 632
$D32    $E5DB   UNKNOWN  $E5DB           ; Unknown Exxx instruction
$D34    $B474   JP       V0, $474        ; Jump to V0 + 474
$D36    $D63B   DRW      V6, V3, #B      ; Draw 11-byte sprite at V6, V3
$D38    $5C84   UNKNOWN  $5C84           ; Unknown 5xxx instruction
$D3A    $F213   UNKNOWN  F213            ; Unknown Fxxx instruction
$D3C    $EEF5   UNKNOWN  $EEF5           ; Unknown Exxx instruction
$D3E    $D0FA   DRW      V0, VF, #A      ; Draw 10-byte sprite at V0, VF
$D40    $067F   SYS      $67F            ; System call to 67F
$D42    $1858   JP       $858            ; Jump to 858
$D44    $ABE0   LD       I, $BE0         ; Load BE0 into I
$D46    $0A8F   SYS      $A8F            ; System call to A8F
$D48    $D1A9   DRW      V1, VA, #9      ; Draw 9-byte sprite at V1, VA
$D4A    $74F2   ADD      V4, #F2         ; Add 242 to V4
$D4C    $EE35   UNKNOWN  $EE35           ; Unknown Exxx instruction
$D4E    $882F   UNKNOWN  882F            ; Unknown 8xxx instruction
$D50    $EC06   UNKNOWN  $EC06           ; Unknown Exxx instruction
$D52    $FB0D   UNKNOWN  FB0D            ; Unknown Fxxx instruction
$D54    $84CB   UNKNOWN  84CB            ; Unknown 8xxx instruction
$D56    $C9FC   RND      V9, #FC         ; V9 = random & FC
$D58    $0AE5   SYS      $AE5            ; System call to AE5
$D5A    $65C4   LD       V5, #C4         ; Load 196 into V5
$D5C    $BFD4   JP       V0, $FD4        ; Jump to V0 + FD4
$D5E    $84B9   UNKNOWN  84B9            ; Unknown 8xxx instruction
$D60    $D086   DRW      V0, V8, #6      ; Draw 6-byte sprite at V0, V8
$D62    $F3FE   UNKNOWN  F3FE            ; Unknown Fxxx instruction
$D64    $0520   SYS      $520            ; System call to 520
$D66    $D612   DRW      V6, V1, #2      ; Draw 2-byte sprite at V6, V1
$D68    $F2CE   UNKNOWN  F2CE            ; Unknown Fxxx instruction
$D6A    $7ED9   ADD      VE, #D9         ; Add 217 to VE
$D6C    $60DE   LD       V0, #DE         ; Load 222 into V0
$D6E    $0575   SYS      $575            ; System call to 575
$D70    $AF1B   LD       I, $F1B         ; Load F1B into I
$D72    $13DA   JP       $3DA            ; Jump to 3DA
$D74    $EFE8   UNKNOWN  $EFE8           ; Unknown Exxx instruction
$D76    $5588   UNKNOWN  $5588           ; Unknown 5xxx instruction
$D78    $41F1   SNE      V1, #F1         ; Skip if V1 != 241
$D7A    $A945   LD       I, $945         ; Load 945 into I
$D7C    $EB00   UNKNOWN  $EB00           ; Unknown Exxx instruction
$D7E    $365A   SE       V6, #5A         ; Skip if V6 == 90
$D80    $DF77   DRW      VF, V7, #7      ; Draw 7-byte sprite at VF, V7
$D82    $DF22   DRW      VF, V2, #2      ; Draw 2-byte sprite at VF, V2
$D84    $1CB4   JP       $CB4            ; Jump to CB4
$D86    $1DD3   JP       $DD3            ; Jump to DD3
$D88    $86BC   UNKNOWN  86BC            ; Unknown 8xxx instruction
$D8A    $6CAB   LD       VC, #AB         ; Load 171 into VC
$D8C    $2EC7   CALL     $EC7            ; Call subroutine at EC7
$D8E    $C2FC   RND      V2, #FC         ; V2 = random & FC
$D90    $B78E   JP       V0, $78E        ; Jump to V0 + 78E
$D92    $EDEE   UNKNOWN  $EDEE           ; Unknown Exxx instruction
$D94    $FD15   LD       DT, VD          ; Delay timer = VD
$D96    $F5CB   UNKNOWN  F5CB            ; Unknown Fxxx instruction
$D98    $D76E   DRW      V7, V6, #E      ; Draw 14-byte sprite at V7, V6
$D9A    $7127   ADD      V1, #27         ; Add 39 to V1
$D9C    $156C   JP       $56C            ; Jump to 56C
$D9E    $97BA   UNKNOWN  $97BA           ; Unknown 9xxx instruction
$DA0    $D057   DRW      V0, V5, #7      ; Draw 7-byte sprite at V0, V5
$DA2    $123F   JP       $23F            ; Jump to 23F
$DA4    $462D   SNE      V6, #2D         ; Skip if V6 != 45
$DA6    $6F41   LD       VF, #41         ; Load 65 into VF
$DA8    $4D86   SNE      VD, #86         ; Skip if VD != 134
$DAA    $E2EF   UNKNOWN  $E2EF           ; Unknown Exxx instruction
$DAC    $4920   SNE      V9, #20         ; Skip if V9 != 32
$DAE    $4E44   SNE      VE, #44         ; Skip if VE != 68
$DB0    $6AE8   LD       VA, #E8         ; Load 232 into VA
$DB2    $1366   JP       $366            ; Jump to 366
$DB4    $2064   CALL     $064            ; Call subroutine at 064
$DB6    $B281   JP       V0, $281        ; Jump to V0 + 281
$DB8    $9311   UNKNOWN  $9311           ; Unknown 9xxx instruction
$DBA    $C096   RND      V0, #96         ; V0 = random & 96
$DBC    $38EC   SE       V8, #EC         ; Skip if V8 == 236
$DBE    $8FBC   UNKNOWN  8FBC            ; Unknown 8xxx instruction
$DC0    $FD06   UNKNOWN  FD06            ; Unknown Fxxx instruction
$DC2    $0409   SYS      $409            ; System call to 409
$DC4    $EE7A   UNKNOWN  $EE7A           ; Unknown Exxx instruction
$DC6    $9B31   UNKNOWN  $9B31           ; Unknown 9xxx instruction
$DC8    $9801   UNKNOWN  $9801           ; Unknown 9xxx instruction
$DCA    $FF27   UNKNOWN  FF27            ; Unknown Fxxx instruction
$DCC    $5E6D   UNKNOWN  $5E6D           ; Unknown 5xxx instruction
$DCE    $83B3   XOR      V3, VB          ; V3 ^= VB
$DD0    $60D1   LD       V0, #D1         ; Load 209 into V0
$DD2    $9336   UNKNOWN  $9336           ; Unknown 9xxx instruction
$DD4    $8936   SHR      V9              ; V9 >>= 1, VF = LSB
$DD6    $39BD   SE       V9, #BD         ; Skip if V9 == 189
$DD8    $3A61   SE       VA, #61         ; Skip if VA == 97
$DDA    $B186   JP       V0, $186        ; Jump to V0 + 186
$DDC    $9388   UNKNOWN  $9388           ; Unknown 9xxx instruction
$DDE    $0A34   SYS      $A34            ; System call to A34
$DE0    $1290   JP       $290            ; Jump to 290
$DE2    $FD50   UNKNOWN  FD50            ; Unknown Fxxx instruction
$DE4    $FB80   UNKNOWN  FB80            ; Unknown Fxxx instruction
$DE6    $0F8E   SYS      $F8E            ; System call to F8E
$DE8    $1D51   JP       $D51            ; Jump to D51
$DEA    $86AE   SHL      V6              ; V6 <<= 1, VF = MSB
$DEC    $C3F0   RND      V3, #F0         ; V3 = random & F0
$DEE    $7583   ADD      V5, #83         ; Add 131 to V5
$DF0    $46BA   SNE      V6, #BA         ; Skip if V6 != 186
$DF2    $40D4   SNE      V0, #D4         ; Skip if V0 != 212
$DF4    $32F7   SE       V2, #F7         ; Skip if V2 == 247
$DF6    $DC9D   DRW      VC, V9, #D      ; Draw 13-byte sprite at VC, V9
$DF8    $4B2F   SNE      VB, #2F         ; Skip if VB != 47
$DFA    $9123   UNKNOWN  $9123           ; Unknown 9xxx instruction
$DFC    $C86B   RND      V8, #6B         ; V8 = random & 6B
$DFE    $A118   LD       I, $118         ; Load 118 into I
$E00    $EDA5   UNKNOWN  $EDA5           ; Unknown Exxx instruction
$E02    $E572   UNKNOWN  $E572           ; Unknown Exxx instruction
$E04    $9B8F   UNKNOWN  $9B8F           ; Unknown 9xxx instruction
$E06    $752F   ADD      V5, #2F         ; Add 47 to V5
$E08    $A00C   LD       I, $00C         ; Load 00C into I
$E0A    $08C4   SYS      $8C4            ; System call to 8C4
$E0C    $31FB   SE       V1, #FB         ; Skip if V1 == 251
$E0E    $3C44   SE       VC, #44         ; Skip if VC == 68
$E10    $43FE   SNE      V3, #FE         ; Skip if V3 != 254
$E12    $DFA1   DRW      VF, VA, #1      ; Draw 1-byte sprite at VF, VA
$E14    $3C1B   SE       VC, #1B         ; Skip if VC == 27
$E16    $FA21   UNKNOWN  FA21            ; Unknown Fxxx instruction
$E18    $9E1C   UNKNOWN  $9E1C           ; Unknown 9xxx instruction
$E1A    $46C0   SNE      V6, #C0         ; Skip if V6 != 192
$E1C    $7856   ADD      V8, #56         ; Add 86 to V8
$E1E    $FA2F   UNKNOWN  FA2F            ; Unknown Fxxx instruction
$E20    $C871   RND      V8, #71         ; V8 = random & 71
$E22    $5F9C   UNKNOWN  $5F9C           ; Unknown 5xxx instruction
$E24    $F1EE   UNKNOWN  F1EE            ; Unknown Fxxx instruction
$E26    $5787   UNKNOWN  $5787           ; Unknown 5xxx instruction
$E28    $FB82   UNKNOWN  FB82            ; Unknown Fxxx instruction
$E2A    $2143   CALL     $143            ; Call subroutine at 143
$E2C    $A767   LD       I, $767         ; Load 767 into I
$E2E    $2242   CALL     $242            ; Call subroutine at 242
$E30    $749A   ADD      V4, #9A         ; Add 154 to V4
$E32    $7658   ADD      V6, #58         ; Add 88 to V6
$E34    $7B0E   ADD      VB, #0E         ; Add 14 to VB
$E36    $4145   SNE      V1, #45         ; Skip if V1 != 69
$E38    $4855   SNE      V8, #55         ; Skip if V8 != 85
$E3A    $780F   ADD      V8, #0F         ; Add 15 to V8
$E3C    $1D84   JP       $D84            ; Jump to D84
$E3E    $AD8C   LD       I, $D8C         ; Load D8C into I
$E40    $FF68   UNKNOWN  FF68            ; Unknown Fxxx instruction
$E42    $67C0   LD       V7, #C0         ; Load 192 into V7
$E44    $5602   UNKNOWN  $5602           ; Unknown 5xxx instruction
$E46    $9AB2   UNKNOWN  $9AB2           ; Unknown 9xxx instruction
$E48    $B11C   JP       V0, $11C        ; Jump to V0 + 11C
$E4A    $A28A   LD       I, $28A         ; Load 28A into I
$E4C    $9416   UNKNOWN  $9416           ; Unknown 9xxx instruction
$E4E    $9262   UNKNOWN  $9262           ; Unknown 9xxx instruction
$E50    $8384   ADD      V3, V8          ; V3 += V8, VF = carry
$E52    $9133   UNKNOWN  $9133           ; Unknown 9xxx instruction
$E54    $A4DC   LD       I, $4DC         ; Load 4DC into I
$E56    $1A6F   JP       $A6F            ; Jump to A6F
$E58    $7E65   ADD      VE, #65         ; Add 101 to VE
$E5A    $644B   LD       V4, #4B         ; Load 75 into V4
$E5C    $3491   SE       V4, #91         ; Skip if V4 == 145
$E5E    $4A44   SNE      VA, #44         ; Skip if VA != 68
$E60    $C543   RND      V5, #43         ; V5 = random & 43
$E62    $8711   OR       V7, V1          ; V7 |= V1
$E64    $F281   UNKNOWN  F281            ; Unknown Fxxx instruction
$E66    $7B45   ADD      VB, #45         ; Add 69 to VB
$E68    $8090   LD       V0, V9          ; V0 = V9
$E6A    $D642   DRW      V6, V4, #2      ; Draw 2-byte sprite at V6, V4
$E6C    $FA07   LD       VA, DT          ; VA = delay timer
$E6E    $9776   UNKNOWN  $9776           ; Unknown 9xxx instruction
$E70    $E227   UNKNOWN  $E227           ; Unknown Exxx instruction
$E72    $E8E9   UNKNOWN  $E8E9           ; Unknown Exxx instruction
$E74    $CFA6   RND      VF, #A6         ; VF = random & A6
$E76    $22D6   CALL     $2D6            ; Call subroutine at 2D6
$E78    $1D9A   JP       $D9A            ; Jump to D9A
$E7A    $C752   RND      V7, #52         ; V7 = random & 52
$E7C    $8B67   SUBN     VB, V6          ; VB = V6 - VB, VF = !borrow
$E7E    $2792   CALL     $792            ; Call subroutine at 792
$E80    $8FEA   UNKNOWN  8FEA            ; Unknown 8xxx instruction
$E82    $8E20   LD       VE, V2          ; VE = V2
$E84    $F7B0   UNKNOWN  F7B0            ; Unknown Fxxx instruction
$E86    $FFE9   UNKNOWN  FFE9            ; Unknown Fxxx instruction
$E88    $6312   LD       V3, #12         ; Load 18 into V3
$E8A    $F388   UNKNOWN  F388            ; Unknown Fxxx instruction
$E8C    $9483   UNKNOWN  $9483           ; Unknown 9xxx instruction
$E8E    $851B   UNKNOWN  851B            ; Unknown 8xxx instruction
$E90    $B116   JP       V0, $116        ; Jump to V0 + 116
$E92    $5EF3   UNKNOWN  $5EF3           ; Unknown 5xxx instruction
$E94    $A147   LD       I, $147         ; Load 147 into I
$E96    $B27A   JP       V0, $27A        ; Jump to V0 + 27A
$E98    $4A39   SNE      VA, #39         ; Skip if VA != 57
$E9A    $9EEB   UNKNOWN  $9EEB           ; Unknown 9xxx instruction
$E9C    $2551   CALL     $551            ; Call subroutine at 551
$E9E    $A713   LD       I, $713         ; Load 713 into I
$EA0    $59A1   UNKNOWN  $59A1           ; Unknown 5xxx instruction
$EA2    $E564   UNKNOWN  $E564           ; Unknown Exxx instruction
$EA4    $CD27   RND      VD, #27         ; VD = random & 27
$EA6    $DBBD   DRW      VB, VB, #D      ; Draw 13-byte sprite at VB, VB
$EA8    $3C7B   SE       VC, #7B         ; Skip if VC == 123
$EAA    $557A   UNKNOWN  $557A           ; Unknown 5xxx instruction
$EAC    $679D   LD       V7, #9D         ; Load 157 into V7
$EAE    $F8EA   UNKNOWN  F8EA            ; Unknown Fxxx instruction
$EB0    $D85F   DRW      V8, V5, #F      ; Draw 15-byte sprite at V8, V5
$EB2    $97DF   UNKNOWN  $97DF           ; Unknown 9xxx instruction
$EB4    $C1BF   RND      V1, #BF         ; V1 = random & BF
$EB6    $767B   ADD      V6, #7B         ; Add 123 to V6
$EB8    $8EED   UNKNOWN  8EED            ; Unknown 8xxx instruction
$EBA    $BD97   JP       V0, $D97        ; Jump to V0 + D97
$EBC    $1291   JP       $291            ; Jump to 291
$EBE    $C441   RND      V4, #41         ; V4 = random & 41
$EC0    $254C   CALL     $54C            ; Call subroutine at 54C
$EC2    $EE8A   UNKNOWN  $EE8A           ; Unknown Exxx instruction
$EC4    $0634   SYS      $634            ; System call to 634
$EC6    $7E14   ADD      VE, #14         ; Add 20 to VE
$EC8    $3E8C   SE       VE, #8C         ; Skip if VE == 140
$ECA    $D02C   DRW      V0, V2, #C      ; Draw 12-byte sprite at V0, V2
$ECC    $AA8E   LD       I, $A8E         ; Load A8E into I
$ECE    $AF4E   LD       I, $F4E         ; Load F4E into I
$ED0    $34F4   SE       V4, #F4         ; Skip if V4 == 244
$ED2    $EEC8   UNKNOWN  $EEC8           ; Unknown Exxx instruction
$ED4    $38CA   SE       V8, #CA         ; Skip if V8 == 202
$ED6    $A4D6   LD       I, $4D6         ; Load 4D6 into I
$ED8    $FA63   UNKNOWN  FA63            ; Unknown Fxxx instruction
$EDA    $6525   LD       V5, #25         ; Load 37 into V5
$EDC    $9A1B   UNKNOWN  $9A1B           ; Unknown 9xxx instruction
$EDE    $E142   UNKNOWN  $E142           ; Unknown Exxx instruction
$EE0    $C1A0   RND      V1, #A0         ; V1 = random & A0
$EE2    $3719   SE       V7, #19         ; Skip if V7 == 25
$EE4    $64E0   LD       V4, #E0         ; Load 224 into V4
$EE6    $016F   SYS      $16F            ; System call to 16F
$EE8    $940F   UNKNOWN  $940F           ; Unknown 9xxx instruction
$EEA    $BC64   JP       V0, $C64        ; Jump to V0 + C64
$EEC    $4787   SNE      V7, #87         ; Skip if V7 != 135
$EEE    $099A   SYS      $99A            ; System call to 99A
$EF0    $C943   RND      V9, #43         ; V9 = random & 43
$EF2    $25EB   CALL     $5EB            ; Call subroutine at 5EB
$EF4    $4302   SNE      V3, #02         ; Skip if V3 != 2
$EF6    $6005   LD       V0, #05         ; Load 5 into V0
$EF8    $4FE1   SNE      VF, #E1         ; Skip if VF != 225
$EFA    $7E69   ADD      VE, #69         ; Add 105 to VE
$EFC    $08E8   SYS      $8E8            ; System call to 8E8
$EFE    $941D   UNKNOWN  $941D           ; Unknown 9xxx instruction
$F00    $88E2   AND      V8, VE          ; V8 &= VE
$F02    $830E   SHL      V3              ; V3 <<= 1, VF = MSB
$F04    $CF76   RND      VF, #76         ; VF = random & 76
$F06    $DB12   DRW      VB, V1, #2      ; Draw 2-byte sprite at VB, V1
$F08    $B748   JP       V0, $748        ; Jump to V0 + 748
$F0A    $2806   CALL     $806            ; Call subroutine at 806
$F0C    $B969   JP       V0, $969        ; Jump to V0 + 969
$F0E    $4830   SNE      V8, #30         ; Skip if V8 != 48
$F10    $64E1   LD       V4, #E1         ; Load 225 into V4
$F12    $5D45   UNKNOWN  $5D45           ; Unknown 5xxx instruction
$F14    $0B58   SYS      $B58            ; System call to B58
$F16    $A9CA   LD       I, $9CA         ; Load 9CA into I
$F18    $0B0C   SYS      $B0C            ; System call to B0C
$F1A    $CE90   RND      VE, #90         ; VE = random & 90
$F1C    $4652   SNE      V6, #52         ; Skip if V6 != 82
$F1E    $45A0   SNE      V5, #A0         ; Skip if V5 != 160
$F20    $4EE9   SNE      VE, #E9         ; Skip if VE != 233
$F22    $8E4E   SHL      VE              ; VE <<= 1, VF = MSB
$F24    $201F   CALL     $01F            ; Call subroutine at 01F
$F26    $0552   SYS      $552            ; System call to 552
$F28    $E026   UNKNOWN  $E026           ; Unknown Exxx instruction
$F2A    $E703   UNKNOWN  $E703           ; Unknown Exxx instruction
$F2C    $9C27   UNKNOWN  $9C27           ; Unknown 9xxx instruction
$F2E    $DC1E   DRW      VC, V1, #E      ; Draw 14-byte sprite at VC, V1
$F30    $0CA4   SYS      $CA4            ; System call to CA4
$F32    $B793   JP       V0, $793        ; Jump to V0 + 793
$F34    $170D   JP       $70D            ; Jump to 70D
$F36    $5841   UNKNOWN  $5841           ; Unknown 5xxx instruction
$F38    $C090   RND      V0, #90         ; V0 = random & 90
$F3A    $F9CB   UNKNOWN  F9CB            ; Unknown Fxxx instruction
$F3C    $501B   UNKNOWN  $501B           ; Unknown 5xxx instruction
$F3E    $8974   ADD      V9, V7          ; V9 += V7, VF = carry
$F40    $E706   UNKNOWN  $E706           ; Unknown Exxx instruction
$F42    $3BE7   SE       VB, #E7         ; Skip if VB == 231
$F44    $5CB2   UNKNOWN  $5CB2           ; Unknown 5xxx instruction
$F46    $872B   UNKNOWN  872B            ; Unknown 8xxx instruction
$F48    $BE1A   JP       V0, $E1A        ; Jump to V0 + E1A
$F4A    $659B   LD       V5, #9B         ; Load 155 into V5
$F4C    $E6CE   UNKNOWN  $E6CE           ; Unknown Exxx instruction
$F4E    $7EA1   ADD      VE, #A1         ; Add 161 to VE
$F50    $508D   UNKNOWN  $508D           ; Unknown 5xxx instruction
$F52    $96F9   UNKNOWN  $96F9           ; Unknown 9xxx instruction
$F54    $C18A   RND      V1, #8A         ; V1 = random & 8A
$F56    $4650   SNE      V6, #50         ; Skip if V6 != 80
$F58    $327E   SE       V2, #7E         ; Skip if V2 == 126
$F5A    $845A   UNKNOWN  845A            ; Unknown 8xxx instruction
$F5C    $F702   UNKNOWN  F702            ; Unknown Fxxx instruction
$F5E    $14C9   JP       $4C9            ; Jump to 4C9
$F60    $A2AC   LD       I, $2AC         ; Load 2AC into I
$F62    $E884   UNKNOWN  $E884           ; Unknown Exxx instruction
$F64    $6DE3   LD       VD, #E3         ; Load 227 into VD
$F66    $DED7   DRW      VE, VD, #7      ; Draw 7-byte sprite at VE, VD
$F68    $1F8D   JP       $F8D            ; Jump to F8D
$F6A    $E6F1   UNKNOWN  $E6F1           ; Unknown Exxx instruction
$F6C    $B74F   JP       V0, $74F        ; Jump to V0 + 74F
$F6E    $C6AE   RND      V6, #AE         ; V6 = random & AE
$F70    $4E48   SNE      VE, #48         ; Skip if VE != 72
$F72    $FEE0   UNKNOWN  FEE0            ; Unknown Fxxx instruction
$F74    $0A99   SYS      $A99            ; System call to A99
$F76    $44F8   SNE      V4, #F8         ; Skip if V4 != 248
$F78    $F37A   UNKNOWN  F37A            ; Unknown Fxxx instruction
$F7A    $C846   RND      V8, #46         ; V8 = random & 46
$F7C    $68CD   LD       V8, #CD         ; Load 205 into V8
$F7E    $E831   UNKNOWN  $E831           ; Unknown Exxx instruction
$F80    $8BDA   UNKNOWN  8BDA            ; Unknown 8xxx instruction
$F82    $358F   SE       V5, #8F         ; Skip if V5 == 143
$F84    $5884   UNKNOWN  $5884           ; Unknown 5xxx instruction
$F86    $329B   SE       V2, #9B         ; Skip if V2 == 155
$F88    $AA1B   LD       I, $A1B         ; Load A1B into I
$F8A    $9805   UNKNOWN  $9805           ; Unknown 9xxx instruction
$F8C    $CD33   RND      VD, #33         ; VD = random & 33
$F8E    $A7C0   LD       I, $7C0         ; Load 7C0 into I
$F90    $8429   UNKNOWN  8429            ; Unknown 8xxx instruction
$F92    $1955   JP       $955            ; Jump to 955
$F94    $DFA8   DRW      VF, VA, #8      ; Draw 8-byte sprite at VF, VA
$F96    $F1F7   UNKNOWN  F1F7            ; Unknown Fxxx instruction
$F98    $AD06   LD       I, $D06         ; Load D06 into I
$F9A    $5E8C   UNKNOWN  $5E8C           ; Unknown 5xxx instruction
$F9C    $A9B2   LD       I, $9B2         ; Load 9B2 into I
$F9E    $00A8   SYS      $0A8            ; System call to 0A8
$FA0    $1194   JP       $194            ; Jump to 194
$FA2    $C7F8   RND      V7, #F8         ; V7 = random & F8
$FA4    $CBAB   RND      VB, #AB         ; VB = random & AB
$FA6    $AFA6   LD       I, $FA6         ; Load FA6 into I
$FA8    $3945   SE       V9, #45         ; Skip if V9 == 69
$FAA    $5CD6   UNKNOWN  $5CD6           ; Unknown 5xxx instruction
$FAC    $C98C   RND      V9, #8C         ; V9 = random & 8C
$FAE    $3B91   SE       VB, #91         ; Skip if VB == 145
$FB0    $FF90   UNKNOWN  FF90            ; Unknown Fxxx instruction
$FB2    $8967   SUBN     V9, V6          ; V9 = V6 - V9, VF = !borrow
$FB4    $5532   UNKNOWN  $5532           ; Unknown 5xxx instruction
$FB6    $905B   UNKNOWN  $905B           ; Unknown 9xxx instruction
$FB8    $AA01   LD       I, $A01         ; Load A01 into I
$FBA    $F1D9   UNKNOWN  F1D9            ; Unknown Fxxx instruction
$FBC    $5EFB   UNKNOWN  $5EFB           ; Unknown 5xxx instruction
$FBE    $55FB   UNKNOWN  $55FB           ; Unknown 5xxx instruction
$FC0    $BBF8   JP       V0, $BF8        ; Jump to V0 + BF8
$FC2    $02BA   SYS      $2BA            ; System call to 2BA
$FC4    $8D3F   UNKNOWN  8D3F            ; Unknown 8xxx instruction
$FC6    $A583   LD       I, $583         ; Load 583 into I
$FC8    $E192   UNKNOWN  $E192           ; Unknown Exxx instruction
$FCA    $FF9E   UNKNOWN  FF9E            ; Unknown Fxxx instruction
$FCC    $3069   SE       V0, #69         ; Skip if V0 == 105
$FCE    $F4F5   UNKNOWN  F4F5            ; Unknown Fxxx instruction
$FD0    $F8FE   UNKNOWN  F8FE            ; Unknown Fxxx instruction
$FD2    $4203   SNE      V2, #03         ; Skip if V2 != 3
$FD4    $DB62   DRW      VB, V6, #2      ; Draw 2-byte sprite at VB, V6
$FD6    $A300   LD       I, $300         ; Load 300 into I
$FD8    $1E44   JP       $E44            ; Jump to E44
$FDA    $224A   CALL     $24A            ; Call subroutine at 24A
$FDC    $12C5   JP       $2C5            ; Jump to 2C5
$FDE    $E008   UNKNOWN  $E008           ; Unknown Exxx instruction
$FE0    $2B4D   CALL     $B4D            ; Call subroutine at B4D
$FE2    $9E80   SNE      VE, V8          ; Skip if VE != V8
$FE4    $A3FB   LD       I, $3FB         ; Load 3FB into I
$FE6    $7C53   ADD      VC, #53         ; Add 83 to VC
$FE8    $8E91   OR       VE, V9          ; VE |= V9
$FEA    $009E   SYS      $09E            ; System call to 09E
$FEC    $A718   LD       I, $718         ; Load 718 into I
$FEE    $33FD   SE       V3, #FD         ; Skip if V3 == 253
$FF0    $AF68   LD       I, $F68         ; Load F68 into I
$FF2    $35EC   SE       V5, #EC         ; Skip if V5 == 236
$FF4    $D7CF   DRW      V7, VC, #F      ; Draw 15-byte sprite at V7, VC
$FF6    $5E62   UNKNOWN  $5E62           ; Unknown 5xxx instruction
$FF8    $6A37   LD       VA, #37         ; Load 55 into VA
$FFA    $D934   DRW      V9, V3, #4      ; Draw 4-byte sprite at V9, V3
$FFC    $DAD6   DRW      VA, VD, #6      ; Draw 6-byte sprite at VA, VD
$FFE    $F8CA   UNKNOWN  F8CA            ; Unknown Fxxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 488 (27.2%)
  LD      : 228 (12.7%)
  JP      : 201 (11.2%)
  SE      : 137 ( 7.6%)
  SYS     : 119 ( 6.6%)
  SNE     : 117 ( 6.5%)
  RND     : 116 ( 6.5%)
  DRW     : 116 ( 6.5%)
  ADD     : 110 ( 6.1%)
  CALL    :  98 ( 5.5%)
  SUB     :  14 ( 0.8%)
  AND     :  12 ( 0.7%)
  OR      :  12 ( 0.7%)
  XOR     :   8 ( 0.4%)
  SHR     :   7 ( 0.4%)
  SUBN    :   5 ( 0.3%)
  SHL     :   4 ( 0.2%)

Memory Operations: 338 (18.9%)
Arithmetic Operations: 161 (9.0%)
